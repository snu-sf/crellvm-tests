; ModuleID = 'programs_new/Python-new/mpdecimal.bc.ll'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.mpd_t = type { i8, i64, i64, i64, i64, i64* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.mpd_context_t = type { i64, i64, i64, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [6 x i8] c"2.4.0\00", align 1
@mpd_pow10 = external hidden constant [0 x i64], align 8
@mpd_free = external hidden global void (i8*)*, align 8
@MPD_MINALLOC = external hidden global i64, align 8
@.str.1 = private unnamed_addr constant [4 x i8] c"NaN\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"sNaN\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"+Infinity\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"+Zero\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"+Normal\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"+Subnormal\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"-Infinity\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"-Zero\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"-Normal\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"-Subnormal\00", align 1
@mpd_qln10.static10_data = private unnamed_addr constant [1 x i64] [i64 10], align 8
@_mpd_ln10 = internal constant %struct.mpd_t { i8 -112, i64 -1215, i64 1216, i64 64, i64 64, i64* getelementptr inbounds ([64 x i64], [64 x i64]* @mpd_ln10_data, i32 0, i32 0) }, align 8
@one = internal constant %struct.mpd_t { i8 -112, i64 0, i64 1, i64 1, i64 1, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @data_one, i32 0, i32 0) }, align 8
@mpd_qnext_minus.tiny_data = private unnamed_addr constant [1 x i64] [i64 1], align 8
@mpd_qnext_plus.tiny_data = private unnamed_addr constant [1 x i64] [i64 1], align 8
@mpd_qpowmod.two_data = private unnamed_addr constant [1 x i64] [i64 2], align 8
@mpd_qsqrt.two_data = private unnamed_addr constant [1 x i64] [i64 2], align 8
@_mpd_qaddsub.tiny_data = private unnamed_addr constant [1 x i64] [i64 1], align 8
@stderr = external global %struct._IO_FILE*, align 8
@.str.11 = private unnamed_addr constant [17 x i8] c"%s:%d: warning: \00", align 1
@.str.12 = private unnamed_addr constant [92 x i8] c"/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_decimal/libmpdec/mpdecimal.c\00", align 1
@.str.13 = private unnamed_addr constant [61 x i8] c"libmpdec: internal error in _mpd_base_ndivmod: please report\00", align 1
@zero = internal constant %struct.mpd_t { i8 -112, i64 0, i64 1, i64 1, i64 1, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @data_zero, i32 0, i32 0) }, align 8
@minus_one = internal constant %struct.mpd_t { i8 -111, i64 0, i64 1, i64 1, i64 1, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @data_one, i32 0, i32 0) }, align 8
@_mpd_qreciprocal.two_data = private unnamed_addr constant [1 x i64] [i64 2], align 8
@data_zero = internal global [1 x i64] zeroinitializer, align 8
@data_one = internal global [1 x i64] [i64 1], align 8
@_mpd_qexp.word_data = private unnamed_addr constant [1 x i64] [i64 1], align 8
@_mpd_qexp_check_one.lim_data = private unnamed_addr constant [1 x i64] [i64 9], align 8
@mpd_bits = external hidden constant [0 x i64], align 8
@mpd_ln10_data = internal constant [64 x i64] [i64 6983716328982174407, i64 9089704281976336583, i64 1515961135648465461, i64 4416816335727555703, i64 2900988039194170265, i64 2307925037472986509, i64 107598438319191292, i64 3466624107184669231, i64 4450099781311469159, i64 -8638916013958357762, i64 7713456862091670584, i64 1492198849978748873, i64 6528728696511086257, i64 2385392051446341972, i64 8692180205189339507, i64 6518769751037497088, i64 2375253577097505395, i64 9095610299291824318, i64 982748238504564801, i64 5438635917781170543, i64 7547331541421808427, i64 752371033310119785, i64 3171643095059950878, i64 -8661478690501944890, i64 2932258279850258550, i64 5497347726624257094, i64 2976979522110718264, i64 9221477656763693866, i64 1979650047149510504, i64 6674183485704422507, i64 -8743977213114301945, i64 -9168647310996793863, i64 -9131895548760906745, i64 6826928280848118428, i64 754403708474699401, i64 230105703089634572, i64 1929203337658714166, i64 7589402567763113569, i64 4208241314695689016, i64 2922455440575892572, i64 -9090009867003740252, i64 2684916746550586856, i64 644507064800027750, i64 -8969909437541630598, i64 5659121373450747856, i64 2835522011480466371, i64 6470806855677432162, i64 7141748003688084012, i64 -8827339673487446515, i64 5504893431493939147, i64 6674744042432743651, i64 2287698219886746543, i64 7773262884616336622, i64 1985283935053089653, i64 4680843799894826233, i64 8168948290720832555, i64 8067566662873690987, i64 6248633409525465082, i64 -8616909876931147388, i64 3524802359972050895, i64 3327900967572609677, i64 110148862877297603, i64 179914546843642076, i64 2302585092994045684], align 16
@lnapprox = internal constant [900 x i16] [i16 0, i16 10, i16 20, i16 30, i16 39, i16 49, i16 58, i16 68, i16 77, i16 86, i16 95, i16 104, i16 113, i16 122, i16 131, i16 140, i16 148, i16 157, i16 166, i16 174, i16 182, i16 191, i16 199, i16 207, i16 215, i16 223, i16 231, i16 239, i16 247, i16 255, i16 262, i16 270, i16 278, i16 285, i16 293, i16 300, i16 308, i16 315, i16 322, i16 329, i16 336, i16 344, i16 351, i16 358, i16 365, i16 372, i16 378, i16 385, i16 392, i16 399, i16 406, i16 412, i16 419, i16 425, i16 432, i16 438, i16 445, i16 451, i16 457, i16 464, i16 470, i16 476, i16 482, i16 489, i16 495, i16 501, i16 507, i16 513, i16 519, i16 525, i16 531, i16 536, i16 542, i16 548, i16 554, i16 560, i16 565, i16 571, i16 577, i16 582, i16 588, i16 593, i16 599, i16 604, i16 610, i16 615, i16 621, i16 626, i16 631, i16 637, i16 642, i16 647, i16 652, i16 658, i16 663, i16 668, i16 673, i16 678, i16 683, i16 688, i16 693, i16 698, i16 703, i16 708, i16 713, i16 718, i16 723, i16 728, i16 732, i16 737, i16 742, i16 747, i16 751, i16 756, i16 761, i16 766, i16 770, i16 775, i16 779, i16 784, i16 788, i16 793, i16 798, i16 802, i16 806, i16 811, i16 815, i16 820, i16 824, i16 829, i16 833, i16 837, i16 842, i16 846, i16 850, i16 854, i16 859, i16 863, i16 867, i16 871, i16 876, i16 880, i16 884, i16 888, i16 892, i16 896, i16 900, i16 904, i16 908, i16 912, i16 916, i16 920, i16 924, i16 928, i16 932, i16 936, i16 940, i16 944, i16 948, i16 952, i16 956, i16 959, i16 963, i16 967, i16 971, i16 975, i16 978, i16 982, i16 986, i16 990, i16 993, i16 997, i16 1001, i16 1004, i16 1008, i16 1012, i16 1015, i16 1019, i16 1022, i16 1026, i16 1030, i16 1033, i16 1037, i16 1040, i16 1044, i16 1047, i16 1051, i16 1054, i16 1058, i16 1061, i16 1065, i16 1068, i16 1072, i16 1075, i16 1078, i16 1082, i16 1085, i16 1089, i16 1092, i16 1095, i16 1099, i16 1102, i16 1105, i16 1109, i16 1112, i16 1115, i16 1118, i16 1122, i16 1125, i16 1128, i16 1131, i16 1135, i16 1138, i16 1141, i16 1144, i16 1147, i16 1151, i16 1154, i16 1157, i16 1160, i16 1163, i16 1166, i16 1169, i16 1172, i16 1176, i16 1179, i16 1182, i16 1185, i16 1188, i16 1191, i16 1194, i16 1197, i16 1200, i16 1203, i16 1206, i16 1209, i16 1212, i16 1215, i16 1218, i16 1221, i16 1224, i16 1227, i16 1230, i16 1233, i16 1235, i16 1238, i16 1241, i16 1244, i16 1247, i16 1250, i16 1253, i16 1256, i16 1258, i16 1261, i16 1264, i16 1267, i16 1270, i16 1273, i16 1275, i16 1278, i16 1281, i16 1284, i16 1286, i16 1289, i16 1292, i16 1295, i16 1297, i16 1300, i16 1303, i16 1306, i16 1308, i16 1311, i16 1314, i16 1316, i16 1319, i16 1322, i16 1324, i16 1327, i16 1330, i16 1332, i16 1335, i16 1338, i16 1340, i16 1343, i16 1345, i16 1348, i16 1351, i16 1353, i16 1356, i16 1358, i16 1361, i16 1364, i16 1366, i16 1369, i16 1371, i16 1374, i16 1376, i16 1379, i16 1381, i16 1384, i16 1386, i16 1389, i16 1391, i16 1394, i16 1396, i16 1399, i16 1401, i16 1404, i16 1406, i16 1409, i16 1411, i16 1413, i16 1416, i16 1418, i16 1421, i16 1423, i16 1426, i16 1428, i16 1430, i16 1433, i16 1435, i16 1437, i16 1440, i16 1442, i16 1445, i16 1447, i16 1449, i16 1452, i16 1454, i16 1456, i16 1459, i16 1461, i16 1463, i16 1466, i16 1468, i16 1470, i16 1472, i16 1475, i16 1477, i16 1479, i16 1482, i16 1484, i16 1486, i16 1488, i16 1491, i16 1493, i16 1495, i16 1497, i16 1500, i16 1502, i16 1504, i16 1506, i16 1509, i16 1511, i16 1513, i16 1515, i16 1517, i16 1520, i16 1522, i16 1524, i16 1526, i16 1528, i16 1530, i16 1533, i16 1535, i16 1537, i16 1539, i16 1541, i16 1543, i16 1545, i16 1548, i16 1550, i16 1552, i16 1554, i16 1556, i16 1558, i16 1560, i16 1562, i16 1564, i16 1567, i16 1569, i16 1571, i16 1573, i16 1575, i16 1577, i16 1579, i16 1581, i16 1583, i16 1585, i16 1587, i16 1589, i16 1591, i16 1593, i16 1595, i16 1597, i16 1599, i16 1601, i16 1603, i16 1605, i16 1607, i16 1609, i16 691, i16 689, i16 687, i16 685, i16 683, i16 681, i16 679, i16 677, i16 675, i16 673, i16 671, i16 669, i16 668, i16 666, i16 664, i16 662, i16 660, i16 658, i16 656, i16 654, i16 652, i16 650, i16 648, i16 646, i16 644, i16 642, i16 641, i16 639, i16 637, i16 635, i16 633, i16 631, i16 629, i16 627, i16 626, i16 624, i16 622, i16 620, i16 618, i16 616, i16 614, i16 612, i16 611, i16 609, i16 607, i16 605, i16 603, i16 602, i16 600, i16 598, i16 596, i16 594, i16 592, i16 591, i16 589, i16 587, i16 585, i16 583, i16 582, i16 580, i16 578, i16 576, i16 574, i16 573, i16 571, i16 569, i16 567, i16 566, i16 564, i16 562, i16 560, i16 559, i16 557, i16 555, i16 553, i16 552, i16 550, i16 548, i16 546, i16 545, i16 543, i16 541, i16 540, i16 538, i16 536, i16 534, i16 533, i16 531, i16 529, i16 528, i16 526, i16 524, i16 523, i16 521, i16 519, i16 518, i16 516, i16 514, i16 512, i16 511, i16 509, i16 508, i16 506, i16 504, i16 502, i16 501, i16 499, i16 498, i16 496, i16 494, i16 493, i16 491, i16 489, i16 488, i16 486, i16 484, i16 483, i16 481, i16 480, i16 478, i16 476, i16 475, i16 473, i16 472, i16 470, i16 468, i16 467, i16 465, i16 464, i16 462, i16 460, i16 459, i16 457, i16 456, i16 454, i16 453, i16 451, i16 449, i16 448, i16 446, i16 445, i16 443, i16 442, i16 440, i16 438, i16 437, i16 435, i16 434, i16 432, i16 431, i16 429, i16 428, i16 426, i16 425, i16 423, i16 422, i16 420, i16 419, i16 417, i16 416, i16 414, i16 412, i16 411, i16 410, i16 408, i16 406, i16 405, i16 404, i16 402, i16 400, i16 399, i16 398, i16 396, i16 394, i16 393, i16 392, i16 390, i16 389, i16 387, i16 386, i16 384, i16 383, i16 381, i16 380, i16 378, i16 377, i16 375, i16 374, i16 372, i16 371, i16 370, i16 368, i16 367, i16 365, i16 364, i16 362, i16 361, i16 360, i16 358, i16 357, i16 355, i16 354, i16 352, i16 351, i16 350, i16 348, i16 347, i16 345, i16 344, i16 342, i16 341, i16 340, i16 338, i16 337, i16 336, i16 334, i16 333, i16 331, i16 330, i16 328, i16 327, i16 326, i16 324, i16 323, i16 322, i16 320, i16 319, i16 318, i16 316, i16 315, i16 313, i16 312, i16 311, i16 309, i16 308, i16 306, i16 305, i16 304, i16 302, i16 301, i16 300, i16 298, i16 297, i16 296, i16 294, i16 293, i16 292, i16 290, i16 289, i16 288, i16 286, i16 285, i16 284, i16 282, i16 281, i16 280, i16 278, i16 277, i16 276, i16 274, i16 273, i16 272, i16 270, i16 269, i16 268, i16 267, i16 265, i16 264, i16 263, i16 261, i16 260, i16 259, i16 258, i16 256, i16 255, i16 254, i16 252, i16 251, i16 250, i16 248, i16 247, i16 246, i16 245, i16 243, i16 242, i16 241, i16 240, i16 238, i16 237, i16 236, i16 234, i16 233, i16 232, i16 231, i16 229, i16 228, i16 227, i16 226, i16 224, i16 223, i16 222, i16 221, i16 219, i16 218, i16 217, i16 216, i16 214, i16 213, i16 212, i16 211, i16 210, i16 208, i16 207, i16 206, i16 205, i16 203, i16 202, i16 201, i16 200, i16 198, i16 197, i16 196, i16 195, i16 194, i16 192, i16 191, i16 190, i16 189, i16 188, i16 186, i16 185, i16 184, i16 183, i16 182, i16 180, i16 179, i16 178, i16 177, i16 176, i16 174, i16 173, i16 172, i16 171, i16 170, i16 168, i16 167, i16 166, i16 165, i16 164, i16 162, i16 161, i16 160, i16 159, i16 158, i16 157, i16 156, i16 154, i16 153, i16 152, i16 151, i16 150, i16 148, i16 147, i16 146, i16 145, i16 144, i16 143, i16 142, i16 140, i16 139, i16 138, i16 137, i16 136, i16 135, i16 134, i16 132, i16 131, i16 130, i16 129, i16 128, i16 127, i16 126, i16 124, i16 123, i16 122, i16 121, i16 120, i16 119, i16 118, i16 116, i16 115, i16 114, i16 113, i16 112, i16 111, i16 110, i16 109, i16 108, i16 106, i16 105, i16 104, i16 103, i16 102, i16 101, i16 100, i16 99, i16 98, i16 97, i16 95, i16 94, i16 93, i16 92, i16 91, i16 90, i16 89, i16 88, i16 87, i16 86, i16 84, i16 83, i16 82, i16 81, i16 80, i16 79, i16 78, i16 77, i16 76, i16 75, i16 74, i16 73, i16 72, i16 70, i16 69, i16 68, i16 67, i16 66, i16 65, i16 64, i16 63, i16 62, i16 61, i16 60, i16 59, i16 58, i16 57, i16 56, i16 54, i16 53, i16 52, i16 51, i16 50, i16 49, i16 48, i16 47, i16 46, i16 45, i16 44, i16 43, i16 42, i16 41, i16 40, i16 39, i16 38, i16 37, i16 36, i16 35, i16 34, i16 33, i16 31, i16 30, i16 29, i16 28, i16 27, i16 26, i16 25, i16 24, i16 23, i16 22, i16 21, i16 20, i16 19, i16 18, i16 17, i16 16, i16 15, i16 14, i16 13, i16 12, i16 11, i16 10, i16 9, i16 8, i16 7, i16 6, i16 5, i16 4, i16 3, i16 2, i16 1], align 16
@mprime_rdx = external hidden constant i64, align 8
@.str.14 = private unnamed_addr constant [15 x i8] c"%s:%d: error: \00", align 1
@.str.15 = private unnamed_addr constant [92 x i8] c"/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_decimal/libmpdec/typearith.h\00", align 1
@.str.16 = private unnamed_addr constant [42 x i8] c"add_size_t(): overflow: check the context\00", align 1
@.str.17 = private unnamed_addr constant [42 x i8] c"mul_size_t(): overflow: check the context\00", align 1
@_mpd_qpow_mpd.two_data = private unnamed_addr constant [1 x i64] [i64 2], align 8
@_mpd_qinvroot.one_half_data = private unnamed_addr constant [1 x i64] [i64 5], align 8
@_mpd_qinvroot.three_data = private unnamed_addr constant [1 x i64] [i64 3], align 8

; Function Attrs: nounwind uwtable
define hidden i8* @mpd_version() #0 {
entry:
  ret i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), !dbg !2390
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_word_digits(i64 %word) #1 {
entry:
  %retval = alloca i32, align 4
  %word.addr = alloca i64, align 8
  store i64 %word, i64* %word.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %word.addr, metadata !81, metadata !2395), !dbg !2396
  %0 = load i64, i64* %word.addr, align 8, !dbg !2397, !tbaa !2391
  %1 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 9), align 8, !dbg !2399, !tbaa !2391
  %cmp = icmp ult i64 %0, %1, !dbg !2400
  br i1 %cmp, label %if.then, label %if.end.19, !dbg !2401

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %word.addr, align 8, !dbg !2402, !tbaa !2391
  %3 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 4), align 8, !dbg !2405, !tbaa !2391
  %cmp1 = icmp ult i64 %2, %3, !dbg !2406
  br i1 %cmp1, label %if.then.2, label %if.end.8, !dbg !2407

if.then.2:                                        ; preds = %if.then
  %4 = load i64, i64* %word.addr, align 8, !dbg !2408, !tbaa !2391
  %5 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 2), align 8, !dbg !2411, !tbaa !2391
  %cmp3 = icmp ult i64 %4, %5, !dbg !2412
  br i1 %cmp3, label %if.then.4, label %if.end, !dbg !2413

if.then.4:                                        ; preds = %if.then.2
  %6 = load i64, i64* %word.addr, align 8, !dbg !2414, !tbaa !2391
  %7 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 1), align 8, !dbg !2416, !tbaa !2391
  %cmp5 = icmp ult i64 %6, %7, !dbg !2417
  %cond = select i1 %cmp5, i32 1, i32 2, !dbg !2418
  store i32 %cond, i32* %retval, !dbg !2419
  br label %return, !dbg !2419

if.end:                                           ; preds = %if.then.2
  %8 = load i64, i64* %word.addr, align 8, !dbg !2420, !tbaa !2391
  %9 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 3), align 8, !dbg !2421, !tbaa !2391
  %cmp6 = icmp ult i64 %8, %9, !dbg !2422
  %cond7 = select i1 %cmp6, i32 3, i32 4, !dbg !2423
  store i32 %cond7, i32* %retval, !dbg !2424
  br label %return, !dbg !2424

if.end.8:                                         ; preds = %if.then
  %10 = load i64, i64* %word.addr, align 8, !dbg !2425, !tbaa !2391
  %11 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 6), align 8, !dbg !2427, !tbaa !2391
  %cmp9 = icmp ult i64 %10, %11, !dbg !2428
  br i1 %cmp9, label %if.then.10, label %if.end.13, !dbg !2429

if.then.10:                                       ; preds = %if.end.8
  %12 = load i64, i64* %word.addr, align 8, !dbg !2430, !tbaa !2391
  %13 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 5), align 8, !dbg !2432, !tbaa !2391
  %cmp11 = icmp ult i64 %12, %13, !dbg !2433
  %cond12 = select i1 %cmp11, i32 5, i32 6, !dbg !2434
  store i32 %cond12, i32* %retval, !dbg !2435
  br label %return, !dbg !2435

if.end.13:                                        ; preds = %if.end.8
  %14 = load i64, i64* %word.addr, align 8, !dbg !2436, !tbaa !2391
  %15 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 8), align 8, !dbg !2438, !tbaa !2391
  %cmp14 = icmp ult i64 %14, %15, !dbg !2439
  br i1 %cmp14, label %if.then.15, label %if.end.18, !dbg !2440

if.then.15:                                       ; preds = %if.end.13
  %16 = load i64, i64* %word.addr, align 8, !dbg !2441, !tbaa !2391
  %17 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 7), align 8, !dbg !2443, !tbaa !2391
  %cmp16 = icmp ult i64 %16, %17, !dbg !2444
  %cond17 = select i1 %cmp16, i32 7, i32 8, !dbg !2445
  store i32 %cond17, i32* %retval, !dbg !2446
  br label %return, !dbg !2446

if.end.18:                                        ; preds = %if.end.13
  store i32 9, i32* %retval, !dbg !2447
  br label %return, !dbg !2447

if.end.19:                                        ; preds = %entry
  %18 = load i64, i64* %word.addr, align 8, !dbg !2448, !tbaa !2391
  %19 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 14), align 8, !dbg !2450, !tbaa !2391
  %cmp20 = icmp ult i64 %18, %19, !dbg !2451
  br i1 %cmp20, label %if.then.21, label %if.end.32, !dbg !2452

if.then.21:                                       ; preds = %if.end.19
  %20 = load i64, i64* %word.addr, align 8, !dbg !2453, !tbaa !2391
  %21 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 11), align 8, !dbg !2456, !tbaa !2391
  %cmp22 = icmp ult i64 %20, %21, !dbg !2457
  br i1 %cmp22, label %if.then.23, label %if.end.26, !dbg !2458

if.then.23:                                       ; preds = %if.then.21
  %22 = load i64, i64* %word.addr, align 8, !dbg !2459, !tbaa !2391
  %23 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 10), align 8, !dbg !2461, !tbaa !2391
  %cmp24 = icmp ult i64 %22, %23, !dbg !2462
  %cond25 = select i1 %cmp24, i32 10, i32 11, !dbg !2463
  store i32 %cond25, i32* %retval, !dbg !2464
  br label %return, !dbg !2464

if.end.26:                                        ; preds = %if.then.21
  %24 = load i64, i64* %word.addr, align 8, !dbg !2465, !tbaa !2391
  %25 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 13), align 8, !dbg !2467, !tbaa !2391
  %cmp27 = icmp ult i64 %24, %25, !dbg !2468
  br i1 %cmp27, label %if.then.28, label %if.end.31, !dbg !2469

if.then.28:                                       ; preds = %if.end.26
  %26 = load i64, i64* %word.addr, align 8, !dbg !2470, !tbaa !2391
  %27 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 12), align 8, !dbg !2472, !tbaa !2391
  %cmp29 = icmp ult i64 %26, %27, !dbg !2473
  %cond30 = select i1 %cmp29, i32 12, i32 13, !dbg !2474
  store i32 %cond30, i32* %retval, !dbg !2475
  br label %return, !dbg !2475

if.end.31:                                        ; preds = %if.end.26
  store i32 14, i32* %retval, !dbg !2476
  br label %return, !dbg !2476

if.end.32:                                        ; preds = %if.end.19
  %28 = load i64, i64* %word.addr, align 8, !dbg !2477, !tbaa !2391
  %29 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 18), align 8, !dbg !2479, !tbaa !2391
  %cmp33 = icmp ult i64 %28, %29, !dbg !2480
  br i1 %cmp33, label %if.then.34, label %if.end.42, !dbg !2481

if.then.34:                                       ; preds = %if.end.32
  %30 = load i64, i64* %word.addr, align 8, !dbg !2482, !tbaa !2391
  %31 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 16), align 8, !dbg !2485, !tbaa !2391
  %cmp35 = icmp ult i64 %30, %31, !dbg !2486
  br i1 %cmp35, label %if.then.36, label %if.end.39, !dbg !2487

if.then.36:                                       ; preds = %if.then.34
  %32 = load i64, i64* %word.addr, align 8, !dbg !2488, !tbaa !2391
  %33 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 15), align 8, !dbg !2490, !tbaa !2391
  %cmp37 = icmp ult i64 %32, %33, !dbg !2491
  %cond38 = select i1 %cmp37, i32 15, i32 16, !dbg !2492
  store i32 %cond38, i32* %retval, !dbg !2493
  br label %return, !dbg !2493

if.end.39:                                        ; preds = %if.then.34
  %34 = load i64, i64* %word.addr, align 8, !dbg !2494, !tbaa !2391
  %35 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 17), align 8, !dbg !2495, !tbaa !2391
  %cmp40 = icmp ult i64 %34, %35, !dbg !2496
  %cond41 = select i1 %cmp40, i32 17, i32 18, !dbg !2497
  store i32 %cond41, i32* %retval, !dbg !2498
  br label %return, !dbg !2498

if.end.42:                                        ; preds = %if.end.32
  %36 = load i64, i64* %word.addr, align 8, !dbg !2499, !tbaa !2391
  %37 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 19), align 8, !dbg !2500, !tbaa !2391
  %cmp43 = icmp ult i64 %36, %37, !dbg !2501
  %cond44 = select i1 %cmp43, i32 19, i32 20, !dbg !2502
  store i32 %cond44, i32* %retval, !dbg !2503
  br label %return, !dbg !2503

return:                                           ; preds = %if.end.42, %if.end.39, %if.then.36, %if.end.31, %if.then.28, %if.then.23, %if.end.18, %if.then.15, %if.then.10, %if.end, %if.then.4
  %38 = load i32, i32* %retval, !dbg !2504
  ret i32 %38, !dbg !2504
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i64 @mpd_adjexp(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !88, metadata !2395), !dbg !2507
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2508, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 1, !dbg !2509
  %1 = load i64, i64* %exp, align 8, !dbg !2509, !tbaa !2510
  %2 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2512, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 2, !dbg !2513
  %3 = load i64, i64* %digits, align 8, !dbg !2513, !tbaa !2514
  %add = add i64 %1, %3, !dbg !2515
  %sub = sub i64 %add, 1, !dbg !2516
  ret i64 %sub, !dbg !2517
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i64 @mpd_etiny(%struct.mpd_context_t* %ctx) #1 {
entry:
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !107, metadata !2395), !dbg !2518
  %0 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !2519, !tbaa !2505
  %emin = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %0, i32 0, i32 2, !dbg !2520
  %1 = load i64, i64* %emin, align 8, !dbg !2520, !tbaa !2521
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !2524, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %2, i32 0, i32 0, !dbg !2525
  %3 = load i64, i64* %prec, align 8, !dbg !2525, !tbaa !2526
  %sub = sub i64 %3, 1, !dbg !2527
  %sub1 = sub i64 %1, %sub, !dbg !2528
  ret i64 %sub1, !dbg !2529
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i64 @mpd_etop(%struct.mpd_context_t* %ctx) #1 {
entry:
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !110, metadata !2395), !dbg !2530
  %0 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !2531, !tbaa !2505
  %emax = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %0, i32 0, i32 1, !dbg !2532
  %1 = load i64, i64* %emax, align 8, !dbg !2532, !tbaa !2533
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !2534, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %2, i32 0, i32 0, !dbg !2535
  %3 = load i64, i64* %prec, align 8, !dbg !2535, !tbaa !2526
  %sub = sub i64 %3, 1, !dbg !2536
  %sub1 = sub i64 %1, %sub, !dbg !2537
  ret i64 %sub1, !dbg !2538
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i64 @mpd_msword(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !115, metadata !2395), !dbg !2539
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2540, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 3, !dbg !2541
  %1 = load i64, i64* %len, align 8, !dbg !2541, !tbaa !2542
  %sub = sub i64 %1, 1, !dbg !2543
  %2 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2544, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 5, !dbg !2545
  %3 = load i64*, i64** %data, align 8, !dbg !2545, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %3, i64 %sub, !dbg !2544
  %4 = load i64, i64* %arrayidx, align 8, !dbg !2544, !tbaa !2391
  ret i64 %4, !dbg !2547
}

; Function Attrs: inlinehint nounwind uwtable
define hidden i64 @mpd_msd(i64 %word) #3 {
entry:
  %word.addr = alloca i64, align 8
  %n = alloca i32, align 4
  store i64 %word, i64* %word.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %word.addr, metadata !120, metadata !2395), !dbg !2548
  %0 = bitcast i32* %n to i8*, !dbg !2549
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !2549
  call void @llvm.dbg.declare(metadata i32* %n, metadata !121, metadata !2395), !dbg !2550
  %1 = load i64, i64* %word.addr, align 8, !dbg !2551, !tbaa !2391
  %call = call i32 @mpd_word_digits(i64 %1), !dbg !2552
  store i32 %call, i32* %n, align 4, !dbg !2553, !tbaa !2554
  %2 = load i64, i64* %word.addr, align 8, !dbg !2555, !tbaa !2391
  %3 = load i32, i32* %n, align 4, !dbg !2556, !tbaa !2554
  %sub = sub i32 %3, 1, !dbg !2557
  %idxprom = sext i32 %sub to i64, !dbg !2558
  %arrayidx = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %idxprom, !dbg !2558
  %4 = load i64, i64* %arrayidx, align 8, !dbg !2558, !tbaa !2391
  %div = udiv i64 %2, %4, !dbg !2559
  %5 = bitcast i32* %n to i8*, !dbg !2560
  call void @llvm.lifetime.end(i64 4, i8* %5) #4, !dbg !2560
  ret i64 %div, !dbg !2561
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #4

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #4

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i64 @mpd_lsd(i64 %word) #1 {
entry:
  %word.addr = alloca i64, align 8
  store i64 %word, i64* %word.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %word.addr, metadata !124, metadata !2395), !dbg !2562
  %0 = load i64, i64* %word.addr, align 8, !dbg !2563, !tbaa !2391
  %rem = urem i64 %0, 10, !dbg !2564
  ret i64 %rem, !dbg !2565
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i64 @mpd_digits_to_size(i64 %digits) #1 {
entry:
  %digits.addr = alloca i64, align 8
  %q = alloca i64, align 8
  %r = alloca i64, align 8
  store i64 %digits, i64* %digits.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %digits.addr, metadata !129, metadata !2395), !dbg !2566
  %0 = bitcast i64* %q to i8*, !dbg !2567
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !2567
  call void @llvm.dbg.declare(metadata i64* %q, metadata !130, metadata !2395), !dbg !2568
  %1 = bitcast i64* %r to i8*, !dbg !2567
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !2567
  call void @llvm.dbg.declare(metadata i64* %r, metadata !131, metadata !2395), !dbg !2569
  %2 = load i64, i64* %digits.addr, align 8, !dbg !2570, !tbaa !2391
  call void @_mpd_idiv_word(i64* %q, i64* %r, i64 %2, i64 19), !dbg !2571
  %3 = load i64, i64* %r, align 8, !dbg !2572, !tbaa !2391
  %cmp = icmp eq i64 %3, 0, !dbg !2573
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2574

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* %q, align 8, !dbg !2575, !tbaa !2391
  br label %cond.end, !dbg !2574

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* %q, align 8, !dbg !2577, !tbaa !2391
  %add = add i64 %5, 1, !dbg !2579
  br label %cond.end, !dbg !2574

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %add, %cond.false ], !dbg !2574
  %6 = bitcast i64* %r to i8*, !dbg !2580
  call void @llvm.lifetime.end(i64 8, i8* %6) #4, !dbg !2580
  %7 = bitcast i64* %q to i8*, !dbg !2580
  call void @llvm.lifetime.end(i64 8, i8* %7) #4, !dbg !2580
  ret i64 %cond, !dbg !2581
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_idiv_word(i64* %q, i64* %r, i64 %v, i64 %d) #3 {
entry:
  %q.addr = alloca i64*, align 8
  %r.addr = alloca i64*, align 8
  %v.addr = alloca i64, align 8
  %d.addr = alloca i64, align 8
  store i64* %q, i64** %q.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %q.addr, metadata !1436, metadata !2395), !dbg !2582
  store i64* %r, i64** %r.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %r.addr, metadata !1437, metadata !2395), !dbg !2583
  store i64 %v, i64* %v.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %v.addr, metadata !1438, metadata !2395), !dbg !2584
  store i64 %d, i64* %d.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %d.addr, metadata !1439, metadata !2395), !dbg !2585
  %0 = load i64, i64* %v.addr, align 8, !dbg !2586, !tbaa !2391
  %1 = load i64, i64* %d.addr, align 8, !dbg !2587, !tbaa !2391
  %div = sdiv i64 %0, %1, !dbg !2588
  %2 = load i64*, i64** %q.addr, align 8, !dbg !2589, !tbaa !2505
  store i64 %div, i64* %2, align 8, !dbg !2590, !tbaa !2391
  %3 = load i64, i64* %v.addr, align 8, !dbg !2591, !tbaa !2391
  %4 = load i64*, i64** %q.addr, align 8, !dbg !2592, !tbaa !2505
  %5 = load i64, i64* %4, align 8, !dbg !2593, !tbaa !2391
  %6 = load i64, i64* %d.addr, align 8, !dbg !2594, !tbaa !2391
  %mul = mul i64 %5, %6, !dbg !2595
  %sub = sub i64 %3, %mul, !dbg !2596
  %7 = load i64*, i64** %r.addr, align 8, !dbg !2597, !tbaa !2505
  store i64 %sub, i64* %7, align 8, !dbg !2598, !tbaa !2391
  ret void, !dbg !2599
}

; Function Attrs: inlinehint nounwind uwtable
define hidden i32 @mpd_exp_digits(i64 %exp) #3 {
entry:
  %exp.addr = alloca i64, align 8
  store i64 %exp, i64* %exp.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %exp.addr, metadata !136, metadata !2395), !dbg !2600
  %0 = load i64, i64* %exp.addr, align 8, !dbg !2601, !tbaa !2391
  %cmp = icmp slt i64 %0, 0, !dbg !2602
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2603

cond.true:                                        ; preds = %entry
  %1 = load i64, i64* %exp.addr, align 8, !dbg !2604, !tbaa !2391
  %sub = sub i64 0, %1, !dbg !2606
  br label %cond.end, !dbg !2603

cond.false:                                       ; preds = %entry
  %2 = load i64, i64* %exp.addr, align 8, !dbg !2607, !tbaa !2391
  br label %cond.end, !dbg !2603

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %2, %cond.false ], !dbg !2603
  store i64 %cond, i64* %exp.addr, align 8, !dbg !2609, !tbaa !2391
  %3 = load i64, i64* %exp.addr, align 8, !dbg !2612, !tbaa !2391
  %call = call i32 @mpd_word_digits(i64 %3), !dbg !2613
  ret i32 %call, !dbg !2614
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_iscanonical(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !141, metadata !2395), !dbg !2615
  ret i32 1, !dbg !2616
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_isfinite(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !144, metadata !2395), !dbg !2617
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2618, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2619
  %1 = load i8, i8* %flags, align 1, !dbg !2619, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2618
  %and = and i32 %conv, 14, !dbg !2621
  %tobool = icmp ne i32 %and, 0, !dbg !2622
  %lnot = xor i1 %tobool, true, !dbg !2622
  %lnot.ext = zext i1 %lnot to i32, !dbg !2622
  ret i32 %lnot.ext, !dbg !2623
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_isinfinite(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !147, metadata !2395), !dbg !2624
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2625, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2626
  %1 = load i8, i8* %flags, align 1, !dbg !2626, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2625
  %and = and i32 %conv, 2, !dbg !2627
  ret i32 %and, !dbg !2628
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_isnan(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !150, metadata !2395), !dbg !2629
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2630, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2631
  %1 = load i8, i8* %flags, align 1, !dbg !2631, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2630
  %and = and i32 %conv, 12, !dbg !2632
  ret i32 %and, !dbg !2633
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_isnegative(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !153, metadata !2395), !dbg !2634
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2635, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2636
  %1 = load i8, i8* %flags, align 1, !dbg !2636, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2635
  %and = and i32 %conv, 1, !dbg !2637
  ret i32 %and, !dbg !2638
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_ispositive(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !156, metadata !2395), !dbg !2639
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2640, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2641
  %1 = load i8, i8* %flags, align 1, !dbg !2641, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2640
  %and = and i32 %conv, 1, !dbg !2642
  %tobool = icmp ne i32 %and, 0, !dbg !2643
  %lnot = xor i1 %tobool, true, !dbg !2643
  %lnot.ext = zext i1 %lnot to i32, !dbg !2643
  ret i32 %lnot.ext, !dbg !2644
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_isqnan(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !159, metadata !2395), !dbg !2645
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2646, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2647
  %1 = load i8, i8* %flags, align 1, !dbg !2647, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2646
  %and = and i32 %conv, 4, !dbg !2648
  ret i32 %and, !dbg !2649
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_issigned(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !162, metadata !2395), !dbg !2650
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2651, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2652
  %1 = load i8, i8* %flags, align 1, !dbg !2652, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2651
  %and = and i32 %conv, 1, !dbg !2653
  ret i32 %and, !dbg !2654
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_issnan(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !165, metadata !2395), !dbg !2655
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2656, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2657
  %1 = load i8, i8* %flags, align 1, !dbg !2657, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2656
  %and = and i32 %conv, 8, !dbg !2658
  ret i32 %and, !dbg !2659
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_isspecial(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !168, metadata !2395), !dbg !2660
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2661, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2662
  %1 = load i8, i8* %flags, align 1, !dbg !2662, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2661
  %and = and i32 %conv, 14, !dbg !2663
  ret i32 %and, !dbg !2664
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_iszero(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !171, metadata !2395), !dbg !2665
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2666, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %0), !dbg !2667
  %tobool = icmp ne i32 %call, 0, !dbg !2667
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !2668

land.rhs:                                         ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2669, !tbaa !2505
  %call1 = call i64 @mpd_msword(%struct.mpd_t* %1), !dbg !2671
  %cmp = icmp eq i64 %call1, 0, !dbg !2672
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ]
  %land.ext = zext i1 %2 to i32, !dbg !2673
  ret i32 %land.ext, !dbg !2675
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_iszerocoeff(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !174, metadata !2395), !dbg !2676
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2677, !tbaa !2505
  %call = call i64 @mpd_msword(%struct.mpd_t* %0), !dbg !2678
  %cmp = icmp eq i64 %call, 0, !dbg !2679
  %conv = zext i1 %cmp to i32, !dbg !2679
  ret i32 %conv, !dbg !2680
}

; Function Attrs: inlinehint nounwind uwtable
define hidden i32 @mpd_isnormal(%struct.mpd_t* %dec, %struct.mpd_context_t* %ctx) #3 {
entry:
  %retval = alloca i32, align 4
  %dec.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !179, metadata !2395), !dbg !2681
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !180, metadata !2395), !dbg !2682
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2683, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %0), !dbg !2685
  %tobool = icmp ne i32 %call, 0, !dbg !2685
  br i1 %tobool, label %if.then, label %if.end, !dbg !2686

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !2687
  br label %return, !dbg !2687

if.end:                                           ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2689, !tbaa !2505
  %call1 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %1), !dbg !2691
  %tobool2 = icmp ne i32 %call1, 0, !dbg !2691
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !2692

if.then.3:                                        ; preds = %if.end
  store i32 0, i32* %retval, !dbg !2693
  br label %return, !dbg !2693

if.end.4:                                         ; preds = %if.end
  %2 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2695, !tbaa !2505
  %call5 = call i64 @mpd_adjexp(%struct.mpd_t* %2), !dbg !2696
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !2697, !tbaa !2505
  %emin = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %3, i32 0, i32 2, !dbg !2698
  %4 = load i64, i64* %emin, align 8, !dbg !2698, !tbaa !2521
  %cmp = icmp sge i64 %call5, %4, !dbg !2699
  %conv = zext i1 %cmp to i32, !dbg !2699
  store i32 %conv, i32* %retval, !dbg !2700
  br label %return, !dbg !2700

return:                                           ; preds = %if.end.4, %if.then.3, %if.then
  %5 = load i32, i32* %retval, !dbg !2701
  ret i32 %5, !dbg !2701
}

; Function Attrs: inlinehint nounwind uwtable
define hidden i32 @mpd_issubnormal(%struct.mpd_t* %dec, %struct.mpd_context_t* %ctx) #3 {
entry:
  %retval = alloca i32, align 4
  %dec.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !183, metadata !2395), !dbg !2702
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !184, metadata !2395), !dbg !2703
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2704, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %0), !dbg !2706
  %tobool = icmp ne i32 %call, 0, !dbg !2706
  br i1 %tobool, label %if.then, label %if.end, !dbg !2707

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !2708
  br label %return, !dbg !2708

if.end:                                           ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2710, !tbaa !2505
  %call1 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %1), !dbg !2712
  %tobool2 = icmp ne i32 %call1, 0, !dbg !2712
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !2713

if.then.3:                                        ; preds = %if.end
  store i32 0, i32* %retval, !dbg !2714
  br label %return, !dbg !2714

if.end.4:                                         ; preds = %if.end
  %2 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2716, !tbaa !2505
  %call5 = call i64 @mpd_adjexp(%struct.mpd_t* %2), !dbg !2717
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !2718, !tbaa !2505
  %emin = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %3, i32 0, i32 2, !dbg !2719
  %4 = load i64, i64* %emin, align 8, !dbg !2719, !tbaa !2521
  %cmp = icmp slt i64 %call5, %4, !dbg !2720
  %conv = zext i1 %cmp to i32, !dbg !2720
  store i32 %conv, i32* %retval, !dbg !2721
  br label %return, !dbg !2721

return:                                           ; preds = %if.end.4, %if.then.3, %if.then
  %5 = load i32, i32* %retval, !dbg !2722
  ret i32 %5, !dbg !2722
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_isoddword(i64 %word) #1 {
entry:
  %word.addr = alloca i64, align 8
  store i64 %word, i64* %word.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %word.addr, metadata !187, metadata !2395), !dbg !2723
  %0 = load i64, i64* %word.addr, align 8, !dbg !2724, !tbaa !2391
  %and = and i64 %0, 1, !dbg !2725
  %conv = trunc i64 %and to i32, !dbg !2724
  ret i32 %conv, !dbg !2726
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_isoddcoeff(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !190, metadata !2395), !dbg !2727
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2728, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 5, !dbg !2729
  %1 = load i64*, i64** %data, align 8, !dbg !2729, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %1, i64 0, !dbg !2728
  %2 = load i64, i64* %arrayidx, align 8, !dbg !2728, !tbaa !2391
  %call = call i32 @mpd_isoddword(i64 %2), !dbg !2730
  ret i32 %call, !dbg !2731
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden zeroext i8 @mpd_sign(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !195, metadata !2395), !dbg !2732
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2733, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2734
  %1 = load i8, i8* %flags, align 1, !dbg !2734, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2733
  %and = and i32 %conv, 1, !dbg !2735
  %conv1 = trunc i32 %and to i8, !dbg !2733
  ret i8 %conv1, !dbg !2736
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_arith_sign(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !198, metadata !2395), !dbg !2737
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2738, !tbaa !2505
  %call = call i32 @mpd_isnegative(%struct.mpd_t* %0), !dbg !2739
  %mul = mul i32 2, %call, !dbg !2740
  %sub = sub i32 1, %mul, !dbg !2741
  ret i32 %sub, !dbg !2742
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i64 @mpd_radix() #1 {
entry:
  ret i64 10, !dbg !2743
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_isdynamic(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !204, metadata !2395), !dbg !2744
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2745, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2746
  %1 = load i8, i8* %flags, align 1, !dbg !2746, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2745
  %and = and i32 %conv, 16, !dbg !2747
  %tobool = icmp ne i32 %and, 0, !dbg !2748
  %lnot = xor i1 %tobool, true, !dbg !2748
  %lnot.ext = zext i1 %lnot to i32, !dbg !2748
  ret i32 %lnot.ext, !dbg !2749
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_isstatic(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !207, metadata !2395), !dbg !2750
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2751, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2752
  %1 = load i8, i8* %flags, align 1, !dbg !2752, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2751
  %and = and i32 %conv, 16, !dbg !2753
  ret i32 %and, !dbg !2754
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_isdynamic_data(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !210, metadata !2395), !dbg !2755
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2756, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2757
  %1 = load i8, i8* %flags, align 1, !dbg !2757, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2756
  %and = and i32 %conv, 224, !dbg !2758
  %tobool = icmp ne i32 %and, 0, !dbg !2759
  %lnot = xor i1 %tobool, true, !dbg !2759
  %lnot.ext = zext i1 %lnot to i32, !dbg !2759
  ret i32 %lnot.ext, !dbg !2760
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_isstatic_data(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !213, metadata !2395), !dbg !2761
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2762, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2763
  %1 = load i8, i8* %flags, align 1, !dbg !2763, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2762
  %and = and i32 %conv, 32, !dbg !2764
  ret i32 %and, !dbg !2765
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_isshared_data(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !216, metadata !2395), !dbg !2766
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2767, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2768
  %1 = load i8, i8* %flags, align 1, !dbg !2768, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2767
  %and = and i32 %conv, 64, !dbg !2769
  ret i32 %and, !dbg !2770
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_isconst_data(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !219, metadata !2395), !dbg !2771
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2772, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !2773
  %1 = load i8, i8* %flags, align 1, !dbg !2773, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !2772
  %and = and i32 %conv, 128, !dbg !2774
  ret i32 %and, !dbg !2775
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_uint_zero(i64* %dest, i64 %len) #1 {
entry:
  %dest.addr = alloca i64*, align 8
  %len.addr = alloca i64, align 8
  %i = alloca i64, align 8
  store i64* %dest, i64** %dest.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %dest.addr, metadata !224, metadata !2395), !dbg !2776
  store i64 %len, i64* %len.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !225, metadata !2395), !dbg !2777
  %0 = bitcast i64* %i to i8*, !dbg !2778
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !2778
  call void @llvm.dbg.declare(metadata i64* %i, metadata !226, metadata !2395), !dbg !2779
  store i64 0, i64* %i, align 8, !dbg !2780, !tbaa !2391
  br label %for.cond, !dbg !2782

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %i, align 8, !dbg !2783, !tbaa !2391
  %2 = load i64, i64* %len.addr, align 8, !dbg !2787, !tbaa !2391
  %cmp = icmp ult i64 %1, %2, !dbg !2788
  br i1 %cmp, label %for.body, label %for.end, !dbg !2789

for.body:                                         ; preds = %for.cond
  %3 = load i64, i64* %i, align 8, !dbg !2790, !tbaa !2391
  %4 = load i64*, i64** %dest.addr, align 8, !dbg !2792, !tbaa !2505
  %arrayidx = getelementptr i64, i64* %4, i64 %3, !dbg !2792
  store i64 0, i64* %arrayidx, align 8, !dbg !2793, !tbaa !2391
  br label %for.inc, !dbg !2794

for.inc:                                          ; preds = %for.body
  %5 = load i64, i64* %i, align 8, !dbg !2795, !tbaa !2391
  %inc = add i64 %5, 1, !dbg !2795
  store i64 %inc, i64* %i, align 8, !dbg !2795, !tbaa !2391
  br label %for.cond, !dbg !2796

for.end:                                          ; preds = %for.cond
  %6 = bitcast i64* %i to i8*, !dbg !2797
  call void @llvm.lifetime.end(i64 8, i8* %6) #4, !dbg !2797
  ret void, !dbg !2797
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_del(%struct.mpd_t* %dec) #1 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !231, metadata !2395), !dbg !2798
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2799, !tbaa !2505
  %call = call i32 @mpd_isdynamic_data(%struct.mpd_t* %0), !dbg !2801
  %tobool = icmp ne i32 %call, 0, !dbg !2801
  br i1 %tobool, label %if.then, label %if.end, !dbg !2802

if.then:                                          ; preds = %entry
  %1 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !2803, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2805, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 5, !dbg !2806
  %3 = load i64*, i64** %data, align 8, !dbg !2806, !tbaa !2546
  %4 = bitcast i64* %3 to i8*, !dbg !2805
  call void %1(i8* %4), !dbg !2803
  br label %if.end, !dbg !2807

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2808, !tbaa !2505
  %call1 = call i32 @mpd_isdynamic(%struct.mpd_t* %5), !dbg !2810
  %tobool2 = icmp ne i32 %call1, 0, !dbg !2810
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !2811

if.then.3:                                        ; preds = %if.end
  %6 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !2812, !tbaa !2505
  %7 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !2814, !tbaa !2505
  %8 = bitcast %struct.mpd_t* %7 to i8*, !dbg !2814
  call void %6(i8* %8), !dbg !2812
  br label %if.end.4, !dbg !2815

if.end.4:                                         ; preds = %if.then.3, %if.end
  ret void, !dbg !2816
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_qresize(%struct.mpd_t* %result, i64 %nwords, i32* %status) #1 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %nwords.addr = alloca i64, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !237, metadata !2395), !dbg !2817
  store i64 %nwords, i64* %nwords.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %nwords.addr, metadata !238, metadata !2395), !dbg !2818
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !239, metadata !2395), !dbg !2819
  %0 = load i64, i64* %nwords.addr, align 8, !dbg !2820, !tbaa !2391
  %1 = load i64, i64* @MPD_MINALLOC, align 8, !dbg !2821, !tbaa !2391
  %cmp = icmp sle i64 %0, %1, !dbg !2822
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2823

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* @MPD_MINALLOC, align 8, !dbg !2824, !tbaa !2391
  br label %cond.end, !dbg !2823

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %nwords.addr, align 8, !dbg !2826, !tbaa !2391
  br label %cond.end, !dbg !2823

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !2823
  store i64 %cond, i64* %nwords.addr, align 8, !dbg !2828, !tbaa !2391
  %4 = load i64, i64* %nwords.addr, align 8, !dbg !2831, !tbaa !2391
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2833, !tbaa !2505
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %5, i32 0, i32 4, !dbg !2834
  %6 = load i64, i64* %alloc, align 8, !dbg !2834, !tbaa !2835
  %cmp1 = icmp eq i64 %4, %6, !dbg !2836
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2837

if.then:                                          ; preds = %cond.end
  store i32 1, i32* %retval, !dbg !2838
  br label %return, !dbg !2838

if.end:                                           ; preds = %cond.end
  %7 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2840, !tbaa !2505
  %call = call i32 @mpd_isstatic_data(%struct.mpd_t* %7), !dbg !2842
  %tobool = icmp ne i32 %call, 0, !dbg !2842
  br i1 %tobool, label %if.then.2, label %if.end.8, !dbg !2843

if.then.2:                                        ; preds = %if.end
  %8 = load i64, i64* %nwords.addr, align 8, !dbg !2844, !tbaa !2391
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2847, !tbaa !2505
  %alloc3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 4, !dbg !2848
  %10 = load i64, i64* %alloc3, align 8, !dbg !2848, !tbaa !2835
  %cmp4 = icmp sgt i64 %8, %10, !dbg !2849
  br i1 %cmp4, label %if.then.5, label %if.end.7, !dbg !2850

if.then.5:                                        ; preds = %if.then.2
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2851, !tbaa !2505
  %12 = load i64, i64* %nwords.addr, align 8, !dbg !2853, !tbaa !2391
  %13 = load i32*, i32** %status.addr, align 8, !dbg !2854, !tbaa !2505
  %call6 = call i32 @mpd_switch_to_dyn(%struct.mpd_t* %11, i64 %12, i32* %13), !dbg !2855
  store i32 %call6, i32* %retval, !dbg !2856
  br label %return, !dbg !2856

if.end.7:                                         ; preds = %if.then.2
  store i32 1, i32* %retval, !dbg !2857
  br label %return, !dbg !2857

if.end.8:                                         ; preds = %if.end
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2858, !tbaa !2505
  %15 = load i64, i64* %nwords.addr, align 8, !dbg !2859, !tbaa !2391
  %16 = load i32*, i32** %status.addr, align 8, !dbg !2860, !tbaa !2505
  %call9 = call i32 @mpd_realloc_dyn(%struct.mpd_t* %14, i64 %15, i32* %16), !dbg !2861
  store i32 %call9, i32* %retval, !dbg !2862
  br label %return, !dbg !2862

return:                                           ; preds = %if.end.8, %if.end.7, %if.then.5, %if.then
  %17 = load i32, i32* %retval, !dbg !2863
  ret i32 %17, !dbg !2863
}

declare hidden i32 @mpd_switch_to_dyn(%struct.mpd_t*, i64, i32*) #5

declare hidden i32 @mpd_realloc_dyn(%struct.mpd_t*, i64, i32*) #5

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden i32 @mpd_qresize_zero(%struct.mpd_t* %result, i64 %nwords, i32* %status) #1 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %nwords.addr = alloca i64, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !242, metadata !2395), !dbg !2864
  store i64 %nwords, i64* %nwords.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %nwords.addr, metadata !243, metadata !2395), !dbg !2865
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !244, metadata !2395), !dbg !2866
  %0 = load i64, i64* %nwords.addr, align 8, !dbg !2867, !tbaa !2391
  %1 = load i64, i64* @MPD_MINALLOC, align 8, !dbg !2868, !tbaa !2391
  %cmp = icmp sle i64 %0, %1, !dbg !2869
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2870

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* @MPD_MINALLOC, align 8, !dbg !2871, !tbaa !2391
  br label %cond.end, !dbg !2870

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %nwords.addr, align 8, !dbg !2873, !tbaa !2391
  br label %cond.end, !dbg !2870

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !2870
  store i64 %cond, i64* %nwords.addr, align 8, !dbg !2875, !tbaa !2391
  %4 = load i64, i64* %nwords.addr, align 8, !dbg !2878, !tbaa !2391
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2880, !tbaa !2505
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %5, i32 0, i32 4, !dbg !2881
  %6 = load i64, i64* %alloc, align 8, !dbg !2881, !tbaa !2835
  %cmp1 = icmp ne i64 %4, %6, !dbg !2882
  br i1 %cmp1, label %if.then, label %if.end.12, !dbg !2883

if.then:                                          ; preds = %cond.end
  %7 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2884, !tbaa !2505
  %call = call i32 @mpd_isstatic_data(%struct.mpd_t* %7), !dbg !2887
  %tobool = icmp ne i32 %call, 0, !dbg !2887
  br i1 %tobool, label %if.then.2, label %if.else, !dbg !2888

if.then.2:                                        ; preds = %if.then
  %8 = load i64, i64* %nwords.addr, align 8, !dbg !2889, !tbaa !2391
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2892, !tbaa !2505
  %alloc3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 4, !dbg !2893
  %10 = load i64, i64* %alloc3, align 8, !dbg !2893, !tbaa !2835
  %cmp4 = icmp sgt i64 %8, %10, !dbg !2894
  br i1 %cmp4, label %if.then.5, label %if.end, !dbg !2895

if.then.5:                                        ; preds = %if.then.2
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2896, !tbaa !2505
  %12 = load i64, i64* %nwords.addr, align 8, !dbg !2898, !tbaa !2391
  %13 = load i32*, i32** %status.addr, align 8, !dbg !2899, !tbaa !2505
  %call6 = call i32 @mpd_switch_to_dyn_zero(%struct.mpd_t* %11, i64 %12, i32* %13), !dbg !2900
  store i32 %call6, i32* %retval, !dbg !2901
  br label %return, !dbg !2901

if.end:                                           ; preds = %if.then.2
  br label %if.end.11, !dbg !2902

if.else:                                          ; preds = %if.then
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2903, !tbaa !2505
  %15 = load i64, i64* %nwords.addr, align 8, !dbg !2905, !tbaa !2391
  %16 = load i32*, i32** %status.addr, align 8, !dbg !2906, !tbaa !2505
  %call7 = call i32 @mpd_realloc_dyn(%struct.mpd_t* %14, i64 %15, i32* %16), !dbg !2907
  %tobool8 = icmp ne i32 %call7, 0, !dbg !2907
  br i1 %tobool8, label %if.end.10, label %if.then.9, !dbg !2908

if.then.9:                                        ; preds = %if.else
  store i32 0, i32* %retval, !dbg !2909
  br label %return, !dbg !2909

if.end.10:                                        ; preds = %if.else
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.10, %if.end
  br label %if.end.12, !dbg !2911

if.end.12:                                        ; preds = %if.end.11, %cond.end
  %17 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2912, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 5, !dbg !2913
  %18 = load i64*, i64** %data, align 8, !dbg !2913, !tbaa !2546
  %19 = load i64, i64* %nwords.addr, align 8, !dbg !2914, !tbaa !2391
  call void @mpd_uint_zero(i64* %18, i64 %19), !dbg !2915
  store i32 1, i32* %retval, !dbg !2916
  br label %return, !dbg !2916

return:                                           ; preds = %if.end.12, %if.then.9, %if.then.5
  %20 = load i32, i32* %retval, !dbg !2917
  ret i32 %20, !dbg !2917
}

declare hidden i32 @mpd_switch_to_dyn_zero(%struct.mpd_t*, i64, i32*) #5

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_minalloc(%struct.mpd_t* %result) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %err = alloca i8, align 1
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !247, metadata !2395), !dbg !2918
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2919, !tbaa !2505
  %call = call i32 @mpd_isstatic_data(%struct.mpd_t* %0), !dbg !2920
  %tobool = icmp ne i32 %call, 0, !dbg !2920
  br i1 %tobool, label %if.end.6, label %land.lhs.true, !dbg !2921

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2922, !tbaa !2505
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %1, i32 0, i32 4, !dbg !2924
  %2 = load i64, i64* %alloc, align 8, !dbg !2924, !tbaa !2835
  %3 = load i64, i64* @MPD_MINALLOC, align 8, !dbg !2925, !tbaa !2391
  %cmp = icmp sgt i64 %2, %3, !dbg !2926
  br i1 %cmp, label %if.then, label %if.end.6, !dbg !2927

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.lifetime.start(i64 1, i8* %err) #4, !dbg !2928
  call void @llvm.dbg.declare(metadata i8* %err, metadata !248, metadata !2395), !dbg !2929
  store i8 0, i8* %err, align 1, !dbg !2929, !tbaa !2930
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2931, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %4, i32 0, i32 5, !dbg !2932
  %5 = load i64*, i64** %data, align 8, !dbg !2932, !tbaa !2546
  %6 = bitcast i64* %5 to i8*, !dbg !2931
  %7 = load i64, i64* @MPD_MINALLOC, align 8, !dbg !2933, !tbaa !2391
  %call1 = call i8* @mpd_realloc(i8* %6, i64 %7, i64 8, i8* %err), !dbg !2934
  %8 = bitcast i8* %call1 to i64*, !dbg !2934
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2935, !tbaa !2505
  %data2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 5, !dbg !2936
  store i64* %8, i64** %data2, align 8, !dbg !2937, !tbaa !2546
  %10 = load i8, i8* %err, align 1, !dbg !2938, !tbaa !2930
  %tobool3 = icmp ne i8 %10, 0, !dbg !2938
  br i1 %tobool3, label %if.end, label %if.then.4, !dbg !2940

if.then.4:                                        ; preds = %if.then
  %11 = load i64, i64* @MPD_MINALLOC, align 8, !dbg !2941, !tbaa !2391
  %12 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2943, !tbaa !2505
  %alloc5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %12, i32 0, i32 4, !dbg !2944
  store i64 %11, i64* %alloc5, align 8, !dbg !2945, !tbaa !2835
  br label %if.end, !dbg !2946

if.end:                                           ; preds = %if.then.4, %if.then
  call void @llvm.lifetime.end(i64 1, i8* %err) #4, !dbg !2947
  br label %if.end.6, !dbg !2948

if.end.6:                                         ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !2949
}

declare hidden i8* @mpd_realloc(i8*, i64, i64, i8*) #5

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_resize(%struct.mpd_t* %result, i64 %nwords, %struct.mpd_context_t* %ctx) #0 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %nwords.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !256, metadata !2395), !dbg !2950
  store i64 %nwords, i64* %nwords.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %nwords.addr, metadata !257, metadata !2395), !dbg !2951
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !258, metadata !2395), !dbg !2952
  %0 = bitcast i32* %status to i8*, !dbg !2953
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !2953
  call void @llvm.dbg.declare(metadata i32* %status, metadata !259, metadata !2395), !dbg !2954
  store i32 0, i32* %status, align 4, !dbg !2954, !tbaa !2554
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2955, !tbaa !2505
  %2 = load i64, i64* %nwords.addr, align 8, !dbg !2957, !tbaa !2391
  %call = call i32 @mpd_qresize(%struct.mpd_t* %1, i64 %2, i32* %status), !dbg !2958
  %tobool = icmp ne i32 %call, 0, !dbg !2958
  br i1 %tobool, label %if.end, label %if.then, !dbg !2959

if.then:                                          ; preds = %entry
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !2960, !tbaa !2505
  %4 = load i32, i32* %status, align 4, !dbg !2962, !tbaa !2554
  call void @mpd_addstatus_raise(%struct.mpd_context_t* %3, i32 %4), !dbg !2963
  store i32 0, i32* %retval, !dbg !2964
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2964

if.end:                                           ; preds = %entry
  store i32 1, i32* %retval, !dbg !2965
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2965

cleanup:                                          ; preds = %if.end, %if.then
  %5 = bitcast i32* %status to i8*, !dbg !2966
  call void @llvm.lifetime.end(i64 4, i8* %5) #4, !dbg !2966
  %6 = load i32, i32* %retval, !dbg !2966
  ret i32 %6, !dbg !2966
}

declare hidden void @mpd_addstatus_raise(%struct.mpd_context_t*, i32) #5

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_resize_zero(%struct.mpd_t* %result, i64 %nwords, %struct.mpd_context_t* %ctx) #0 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %nwords.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !262, metadata !2395), !dbg !2967
  store i64 %nwords, i64* %nwords.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %nwords.addr, metadata !263, metadata !2395), !dbg !2968
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !264, metadata !2395), !dbg !2969
  %0 = bitcast i32* %status to i8*, !dbg !2970
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !2970
  call void @llvm.dbg.declare(metadata i32* %status, metadata !265, metadata !2395), !dbg !2971
  store i32 0, i32* %status, align 4, !dbg !2971, !tbaa !2554
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2972, !tbaa !2505
  %2 = load i64, i64* %nwords.addr, align 8, !dbg !2974, !tbaa !2391
  %call = call i32 @mpd_qresize_zero(%struct.mpd_t* %1, i64 %2, i32* %status), !dbg !2975
  %tobool = icmp ne i32 %call, 0, !dbg !2975
  br i1 %tobool, label %if.end, label %if.then, !dbg !2976

if.then:                                          ; preds = %entry
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !2977, !tbaa !2505
  %4 = load i32, i32* %status, align 4, !dbg !2979, !tbaa !2554
  call void @mpd_addstatus_raise(%struct.mpd_context_t* %3, i32 %4), !dbg !2980
  store i32 0, i32* %retval, !dbg !2981
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2981

if.end:                                           ; preds = %entry
  store i32 1, i32* %retval, !dbg !2982
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2982

cleanup:                                          ; preds = %if.end, %if.then
  %5 = bitcast i32* %status to i8*, !dbg !2983
  call void @llvm.lifetime.end(i64 4, i8* %5) #4, !dbg !2983
  %6 = load i32, i32* %retval, !dbg !2983
  ret i32 %6, !dbg !2983
}

; Function Attrs: inlinehint nounwind uwtable
define hidden void @mpd_setdigits(%struct.mpd_t* %result) #3 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %wdigits = alloca i64, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !268, metadata !2395), !dbg !2984
  %0 = bitcast i64* %wdigits to i8*, !dbg !2985
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !2985
  call void @llvm.dbg.declare(metadata i64* %wdigits, metadata !269, metadata !2395), !dbg !2986
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2987, !tbaa !2505
  %call = call i64 @mpd_msword(%struct.mpd_t* %1), !dbg !2988
  %call1 = call i32 @mpd_word_digits(i64 %call), !dbg !2989
  %conv = sext i32 %call1 to i64, !dbg !2989
  store i64 %conv, i64* %wdigits, align 8, !dbg !2986, !tbaa !2391
  %2 = load i64, i64* %wdigits, align 8, !dbg !2990, !tbaa !2391
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2991, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 3, !dbg !2992
  %4 = load i64, i64* %len, align 8, !dbg !2992, !tbaa !2542
  %sub = sub i64 %4, 1, !dbg !2993
  %mul = mul i64 %sub, 19, !dbg !2994
  %add = add i64 %2, %mul, !dbg !2995
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !2996, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %5, i32 0, i32 2, !dbg !2997
  store i64 %add, i64* %digits, align 8, !dbg !2998, !tbaa !2514
  %6 = bitcast i64* %wdigits to i8*, !dbg !2999
  call void @llvm.lifetime.end(i64 8, i8* %6) #4, !dbg !2999
  ret void, !dbg !2999
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_set_sign(%struct.mpd_t* %result, i8 zeroext %sign) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %sign.addr = alloca i8, align 1
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !274, metadata !2395), !dbg !3000
  store i8 %sign, i8* %sign.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %sign.addr, metadata !275, metadata !2395), !dbg !3001
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3002, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3003
  %1 = load i8, i8* %flags, align 1, !dbg !3004, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !3004
  %and = and i32 %conv, -2, !dbg !3004
  %conv1 = trunc i32 %and to i8, !dbg !3004
  store i8 %conv1, i8* %flags, align 1, !dbg !3004, !tbaa !2620
  %2 = load i8, i8* %sign.addr, align 1, !dbg !3005, !tbaa !2930
  %conv2 = zext i8 %2 to i32, !dbg !3005
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3006, !tbaa !2505
  %flags3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 0, !dbg !3007
  %4 = load i8, i8* %flags3, align 1, !dbg !3008, !tbaa !2620
  %conv4 = zext i8 %4 to i32, !dbg !3008
  %or = or i32 %conv4, %conv2, !dbg !3008
  %conv5 = trunc i32 %or to i8, !dbg !3008
  store i8 %conv5, i8* %flags3, align 1, !dbg !3008, !tbaa !2620
  ret void, !dbg !3009
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_signcpy(%struct.mpd_t* %result, %struct.mpd_t* %a) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %sign = alloca i8, align 1
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !280, metadata !2395), !dbg !3010
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !281, metadata !2395), !dbg !3011
  call void @llvm.lifetime.start(i64 1, i8* %sign) #4, !dbg !3012
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !282, metadata !2395), !dbg !3013
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3014, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3015
  %1 = load i8, i8* %flags, align 1, !dbg !3015, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !3014
  %and = and i32 %conv, 1, !dbg !3016
  %conv1 = trunc i32 %and to i8, !dbg !3014
  store i8 %conv1, i8* %sign, align 1, !dbg !3013, !tbaa !2930
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3017, !tbaa !2505
  %flags2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 0, !dbg !3018
  %3 = load i8, i8* %flags2, align 1, !dbg !3019, !tbaa !2620
  %conv3 = zext i8 %3 to i32, !dbg !3019
  %and4 = and i32 %conv3, -2, !dbg !3019
  %conv5 = trunc i32 %and4 to i8, !dbg !3019
  store i8 %conv5, i8* %flags2, align 1, !dbg !3019, !tbaa !2620
  %4 = load i8, i8* %sign, align 1, !dbg !3020, !tbaa !2930
  %conv6 = zext i8 %4 to i32, !dbg !3020
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3021, !tbaa !2505
  %flags7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %5, i32 0, i32 0, !dbg !3022
  %6 = load i8, i8* %flags7, align 1, !dbg !3023, !tbaa !2620
  %conv8 = zext i8 %6 to i32, !dbg !3023
  %or = or i32 %conv8, %conv6, !dbg !3023
  %conv9 = trunc i32 %or to i8, !dbg !3023
  store i8 %conv9, i8* %flags7, align 1, !dbg !3023, !tbaa !2620
  call void @llvm.lifetime.end(i64 1, i8* %sign) #4, !dbg !3024
  ret void, !dbg !3024
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_set_infinity(%struct.mpd_t* %result) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !285, metadata !2395), !dbg !3025
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3026, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3027
  %1 = load i8, i8* %flags, align 1, !dbg !3028, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !3028
  %and = and i32 %conv, -15, !dbg !3028
  %conv1 = trunc i32 %and to i8, !dbg !3028
  store i8 %conv1, i8* %flags, align 1, !dbg !3028, !tbaa !2620
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3029, !tbaa !2505
  %flags2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 0, !dbg !3030
  %3 = load i8, i8* %flags2, align 1, !dbg !3031, !tbaa !2620
  %conv3 = zext i8 %3 to i32, !dbg !3031
  %or = or i32 %conv3, 2, !dbg !3031
  %conv4 = trunc i32 %or to i8, !dbg !3031
  store i8 %conv4, i8* %flags2, align 1, !dbg !3031, !tbaa !2620
  ret void, !dbg !3032
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_set_qnan(%struct.mpd_t* %result) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !288, metadata !2395), !dbg !3033
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3034, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3035
  %1 = load i8, i8* %flags, align 1, !dbg !3036, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !3036
  %and = and i32 %conv, -15, !dbg !3036
  %conv1 = trunc i32 %and to i8, !dbg !3036
  store i8 %conv1, i8* %flags, align 1, !dbg !3036, !tbaa !2620
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3037, !tbaa !2505
  %flags2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 0, !dbg !3038
  %3 = load i8, i8* %flags2, align 1, !dbg !3039, !tbaa !2620
  %conv3 = zext i8 %3 to i32, !dbg !3039
  %or = or i32 %conv3, 4, !dbg !3039
  %conv4 = trunc i32 %or to i8, !dbg !3039
  store i8 %conv4, i8* %flags2, align 1, !dbg !3039, !tbaa !2620
  ret void, !dbg !3040
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_set_snan(%struct.mpd_t* %result) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !291, metadata !2395), !dbg !3041
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3042, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3043
  %1 = load i8, i8* %flags, align 1, !dbg !3044, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !3044
  %and = and i32 %conv, -15, !dbg !3044
  %conv1 = trunc i32 %and to i8, !dbg !3044
  store i8 %conv1, i8* %flags, align 1, !dbg !3044, !tbaa !2620
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3045, !tbaa !2505
  %flags2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 0, !dbg !3046
  %3 = load i8, i8* %flags2, align 1, !dbg !3047, !tbaa !2620
  %conv3 = zext i8 %3 to i32, !dbg !3047
  %or = or i32 %conv3, 8, !dbg !3047
  %conv4 = trunc i32 %or to i8, !dbg !3047
  store i8 %conv4, i8* %flags2, align 1, !dbg !3047, !tbaa !2620
  ret void, !dbg !3048
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_set_negative(%struct.mpd_t* %result) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !294, metadata !2395), !dbg !3049
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3050, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3051
  %1 = load i8, i8* %flags, align 1, !dbg !3052, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !3052
  %or = or i32 %conv, 1, !dbg !3052
  %conv1 = trunc i32 %or to i8, !dbg !3052
  store i8 %conv1, i8* %flags, align 1, !dbg !3052, !tbaa !2620
  ret void, !dbg !3053
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_set_positive(%struct.mpd_t* %result) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !297, metadata !2395), !dbg !3054
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3055, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3056
  %1 = load i8, i8* %flags, align 1, !dbg !3057, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !3057
  %and = and i32 %conv, -2, !dbg !3057
  %conv1 = trunc i32 %and to i8, !dbg !3057
  store i8 %conv1, i8* %flags, align 1, !dbg !3057, !tbaa !2620
  ret void, !dbg !3058
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_set_dynamic(%struct.mpd_t* %result) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !300, metadata !2395), !dbg !3059
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3060, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3061
  %1 = load i8, i8* %flags, align 1, !dbg !3062, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !3062
  %and = and i32 %conv, -17, !dbg !3062
  %conv1 = trunc i32 %and to i8, !dbg !3062
  store i8 %conv1, i8* %flags, align 1, !dbg !3062, !tbaa !2620
  ret void, !dbg !3063
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_set_static(%struct.mpd_t* %result) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !303, metadata !2395), !dbg !3064
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3065, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3066
  %1 = load i8, i8* %flags, align 1, !dbg !3067, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !3067
  %or = or i32 %conv, 16, !dbg !3067
  %conv1 = trunc i32 %or to i8, !dbg !3067
  store i8 %conv1, i8* %flags, align 1, !dbg !3067, !tbaa !2620
  ret void, !dbg !3068
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_set_dynamic_data(%struct.mpd_t* %result) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !306, metadata !2395), !dbg !3069
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3070, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3071
  %1 = load i8, i8* %flags, align 1, !dbg !3072, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !3072
  %and = and i32 %conv, -225, !dbg !3072
  %conv1 = trunc i32 %and to i8, !dbg !3072
  store i8 %conv1, i8* %flags, align 1, !dbg !3072, !tbaa !2620
  ret void, !dbg !3073
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_set_static_data(%struct.mpd_t* %result) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !309, metadata !2395), !dbg !3074
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3075, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3076
  %1 = load i8, i8* %flags, align 1, !dbg !3077, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !3077
  %and = and i32 %conv, -225, !dbg !3077
  %conv1 = trunc i32 %and to i8, !dbg !3077
  store i8 %conv1, i8* %flags, align 1, !dbg !3077, !tbaa !2620
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3078, !tbaa !2505
  %flags2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 0, !dbg !3079
  %3 = load i8, i8* %flags2, align 1, !dbg !3080, !tbaa !2620
  %conv3 = zext i8 %3 to i32, !dbg !3080
  %or = or i32 %conv3, 32, !dbg !3080
  %conv4 = trunc i32 %or to i8, !dbg !3080
  store i8 %conv4, i8* %flags2, align 1, !dbg !3080, !tbaa !2620
  ret void, !dbg !3081
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_set_shared_data(%struct.mpd_t* %result) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !312, metadata !2395), !dbg !3082
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3083, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3084
  %1 = load i8, i8* %flags, align 1, !dbg !3085, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !3085
  %and = and i32 %conv, -225, !dbg !3085
  %conv1 = trunc i32 %and to i8, !dbg !3085
  store i8 %conv1, i8* %flags, align 1, !dbg !3085, !tbaa !2620
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3086, !tbaa !2505
  %flags2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 0, !dbg !3087
  %3 = load i8, i8* %flags2, align 1, !dbg !3088, !tbaa !2620
  %conv3 = zext i8 %3 to i32, !dbg !3088
  %or = or i32 %conv3, 64, !dbg !3088
  %conv4 = trunc i32 %or to i8, !dbg !3088
  store i8 %conv4, i8* %flags2, align 1, !dbg !3088, !tbaa !2620
  ret void, !dbg !3089
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_set_const_data(%struct.mpd_t* %result) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !315, metadata !2395), !dbg !3090
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3091, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3092
  %1 = load i8, i8* %flags, align 1, !dbg !3093, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !3093
  %and = and i32 %conv, -225, !dbg !3093
  %conv1 = trunc i32 %and to i8, !dbg !3093
  store i8 %conv1, i8* %flags, align 1, !dbg !3093, !tbaa !2620
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3094, !tbaa !2505
  %flags2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 0, !dbg !3095
  %3 = load i8, i8* %flags2, align 1, !dbg !3096, !tbaa !2620
  %conv3 = zext i8 %3 to i32, !dbg !3096
  %or = or i32 %conv3, 128, !dbg !3096
  %conv4 = trunc i32 %or to i8, !dbg !3096
  store i8 %conv4, i8* %flags2, align 1, !dbg !3096, !tbaa !2620
  ret void, !dbg !3097
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_clear_flags(%struct.mpd_t* %result) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !318, metadata !2395), !dbg !3098
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3099, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3100
  %1 = load i8, i8* %flags, align 1, !dbg !3101, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !3101
  %and = and i32 %conv, 240, !dbg !3101
  %conv1 = trunc i32 %and to i8, !dbg !3101
  store i8 %conv1, i8* %flags, align 1, !dbg !3101, !tbaa !2620
  ret void, !dbg !3102
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_set_flags(%struct.mpd_t* %result, i8 zeroext %flags) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %flags.addr = alloca i8, align 1
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !321, metadata !2395), !dbg !3103
  store i8 %flags, i8* %flags.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %flags.addr, metadata !322, metadata !2395), !dbg !3104
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3105, !tbaa !2505
  %flags1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3106
  %1 = load i8, i8* %flags1, align 1, !dbg !3107, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !3107
  %and = and i32 %conv, 240, !dbg !3107
  %conv2 = trunc i32 %and to i8, !dbg !3107
  store i8 %conv2, i8* %flags1, align 1, !dbg !3107, !tbaa !2620
  %2 = load i8, i8* %flags.addr, align 1, !dbg !3108, !tbaa !2930
  %conv3 = zext i8 %2 to i32, !dbg !3108
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3109, !tbaa !2505
  %flags4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 0, !dbg !3110
  %4 = load i8, i8* %flags4, align 1, !dbg !3111, !tbaa !2620
  %conv5 = zext i8 %4 to i32, !dbg !3111
  %or = or i32 %conv5, %conv3, !dbg !3111
  %conv6 = trunc i32 %or to i8, !dbg !3111
  store i8 %conv6, i8* %flags4, align 1, !dbg !3111, !tbaa !2620
  ret void, !dbg !3112
}

; Function Attrs: alwaysinline inlinehint nounwind uwtable
define hidden void @mpd_copy_flags(%struct.mpd_t* %result, %struct.mpd_t* %a) #1 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %aflags = alloca i8, align 1
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !325, metadata !2395), !dbg !3113
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !326, metadata !2395), !dbg !3114
  call void @llvm.lifetime.start(i64 1, i8* %aflags) #4, !dbg !3115
  call void @llvm.dbg.declare(metadata i8* %aflags, metadata !327, metadata !2395), !dbg !3116
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3117, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !3118
  %1 = load i8, i8* %flags, align 1, !dbg !3118, !tbaa !2620
  store i8 %1, i8* %aflags, align 1, !dbg !3116, !tbaa !2930
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3119, !tbaa !2505
  %flags1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 0, !dbg !3120
  %3 = load i8, i8* %flags1, align 1, !dbg !3121, !tbaa !2620
  %conv = zext i8 %3 to i32, !dbg !3121
  %and = and i32 %conv, 240, !dbg !3121
  %conv2 = trunc i32 %and to i8, !dbg !3121
  store i8 %conv2, i8* %flags1, align 1, !dbg !3121, !tbaa !2620
  %4 = load i8, i8* %aflags, align 1, !dbg !3122, !tbaa !2930
  %conv3 = zext i8 %4 to i32, !dbg !3122
  %and4 = and i32 %conv3, -241, !dbg !3123
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3124, !tbaa !2505
  %flags5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %5, i32 0, i32 0, !dbg !3125
  %6 = load i8, i8* %flags5, align 1, !dbg !3126, !tbaa !2620
  %conv6 = zext i8 %6 to i32, !dbg !3126
  %or = or i32 %conv6, %and4, !dbg !3126
  %conv7 = trunc i32 %or to i8, !dbg !3126
  store i8 %conv7, i8* %flags5, align 1, !dbg !3126, !tbaa !2620
  call void @llvm.lifetime.end(i64 1, i8* %aflags) #4, !dbg !3127
  ret void, !dbg !3127
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_zerocoeff(%struct.mpd_t* %result) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !330, metadata !2395), !dbg !3128
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3129, !tbaa !2505
  call void @mpd_minalloc(%struct.mpd_t* %0), !dbg !3130
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3131, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %1, i32 0, i32 2, !dbg !3132
  store i64 1, i64* %digits, align 8, !dbg !3133, !tbaa !2514
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3134, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 3, !dbg !3135
  store i64 1, i64* %len, align 8, !dbg !3136, !tbaa !2542
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3137, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 5, !dbg !3138
  %4 = load i64*, i64** %data, align 8, !dbg !3138, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %4, i64 0, !dbg !3137
  store i64 0, i64* %arrayidx, align 8, !dbg !3139, !tbaa !2391
  ret void, !dbg !3140
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qmaxcoeff(%struct.mpd_t* %result, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %len = alloca i64, align 8
  %r = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !335, metadata !2395), !dbg !3141
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !336, metadata !2395), !dbg !3142
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !337, metadata !2395), !dbg !3143
  %0 = bitcast i64* %len to i8*, !dbg !3144
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !3144
  call void @llvm.dbg.declare(metadata i64* %len, metadata !338, metadata !2395), !dbg !3145
  %1 = bitcast i64* %r to i8*, !dbg !3144
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !3144
  call void @llvm.dbg.declare(metadata i64* %r, metadata !339, metadata !2395), !dbg !3146
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3147, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %2, i32 0, i32 0, !dbg !3148
  %3 = load i64, i64* %prec, align 8, !dbg !3148, !tbaa !2526
  call void @_mpd_idiv_word(i64* %len, i64* %r, i64 %3, i64 19), !dbg !3149
  %4 = load i64, i64* %r, align 8, !dbg !3150, !tbaa !2391
  %cmp = icmp eq i64 %4, 0, !dbg !3151
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3152

cond.true:                                        ; preds = %entry
  %5 = load i64, i64* %len, align 8, !dbg !3153, !tbaa !2391
  br label %cond.end, !dbg !3152

cond.false:                                       ; preds = %entry
  %6 = load i64, i64* %len, align 8, !dbg !3155, !tbaa !2391
  %add = add i64 %6, 1, !dbg !3157
  br label %cond.end, !dbg !3152

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %5, %cond.true ], [ %add, %cond.false ], !dbg !3152
  store i64 %cond, i64* %len, align 8, !dbg !3158, !tbaa !2391
  %7 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3161, !tbaa !2505
  %8 = load i64, i64* %len, align 8, !dbg !3163, !tbaa !2391
  %9 = load i32*, i32** %status.addr, align 8, !dbg !3164, !tbaa !2505
  %call = call i32 @mpd_qresize(%struct.mpd_t* %7, i64 %8, i32* %9), !dbg !3165
  %tobool = icmp ne i32 %call, 0, !dbg !3165
  br i1 %tobool, label %if.end, label %if.then, !dbg !3166

if.then:                                          ; preds = %cond.end
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3167

if.end:                                           ; preds = %cond.end
  %10 = load i64, i64* %len, align 8, !dbg !3169, !tbaa !2391
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3170, !tbaa !2505
  %len1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 3, !dbg !3171
  store i64 %10, i64* %len1, align 8, !dbg !3172, !tbaa !2542
  %12 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3173, !tbaa !2505
  %prec2 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %12, i32 0, i32 0, !dbg !3174
  %13 = load i64, i64* %prec2, align 8, !dbg !3174, !tbaa !2526
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3175, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %14, i32 0, i32 2, !dbg !3176
  store i64 %13, i64* %digits, align 8, !dbg !3177, !tbaa !2514
  %15 = load i64, i64* %len, align 8, !dbg !3178, !tbaa !2391
  %dec = add i64 %15, -1, !dbg !3178
  store i64 %dec, i64* %len, align 8, !dbg !3178, !tbaa !2391
  %16 = load i64, i64* %r, align 8, !dbg !3179, !tbaa !2391
  %cmp3 = icmp sgt i64 %16, 0, !dbg !3181
  br i1 %cmp3, label %if.then.4, label %if.end.7, !dbg !3182

if.then.4:                                        ; preds = %if.end
  %17 = load i64, i64* %r, align 8, !dbg !3183, !tbaa !2391
  %arrayidx = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %17, !dbg !3185
  %18 = load i64, i64* %arrayidx, align 8, !dbg !3185, !tbaa !2391
  %sub = sub i64 %18, 1, !dbg !3186
  %19 = load i64, i64* %len, align 8, !dbg !3187, !tbaa !2391
  %dec5 = add i64 %19, -1, !dbg !3187
  store i64 %dec5, i64* %len, align 8, !dbg !3187, !tbaa !2391
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3188, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %20, i32 0, i32 5, !dbg !3189
  %21 = load i64*, i64** %data, align 8, !dbg !3189, !tbaa !2546
  %arrayidx6 = getelementptr i64, i64* %21, i64 %19, !dbg !3188
  store i64 %sub, i64* %arrayidx6, align 8, !dbg !3190, !tbaa !2391
  br label %if.end.7, !dbg !3191

if.end.7:                                         ; preds = %if.then.4, %if.end
  br label %for.cond, !dbg !3192

for.cond:                                         ; preds = %for.inc, %if.end.7
  %22 = load i64, i64* %len, align 8, !dbg !3193, !tbaa !2391
  %cmp8 = icmp sge i64 %22, 0, !dbg !3198
  br i1 %cmp8, label %for.body, label %for.end, !dbg !3199

for.body:                                         ; preds = %for.cond
  %23 = load i64, i64* %len, align 8, !dbg !3200, !tbaa !2391
  %24 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3202, !tbaa !2505
  %data9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %24, i32 0, i32 5, !dbg !3203
  %25 = load i64*, i64** %data9, align 8, !dbg !3203, !tbaa !2546
  %arrayidx10 = getelementptr i64, i64* %25, i64 %23, !dbg !3202
  store i64 -8446744073709551617, i64* %arrayidx10, align 8, !dbg !3204, !tbaa !2391
  br label %for.inc, !dbg !3205

for.inc:                                          ; preds = %for.body
  %26 = load i64, i64* %len, align 8, !dbg !3206, !tbaa !2391
  %dec11 = add i64 %26, -1, !dbg !3206
  store i64 %dec11, i64* %len, align 8, !dbg !3206, !tbaa !2391
  br label %for.cond, !dbg !3207

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !3208
  br label %cleanup, !dbg !3208

cleanup:                                          ; preds = %for.end, %if.then
  %27 = bitcast i64* %r to i8*, !dbg !3209
  call void @llvm.lifetime.end(i64 8, i8* %27) #4, !dbg !3209
  %28 = bitcast i64* %len to i8*, !dbg !3209
  call void @llvm.lifetime.end(i64 8, i8* %28) #4, !dbg !3209
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !3208

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden i64 @mpd_trail_zeros(%struct.mpd_t* %dec) #0 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  %word = alloca i64, align 8
  %i = alloca i64, align 8
  %tz = alloca i64, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !342, metadata !2395), !dbg !3210
  %0 = bitcast i64* %word to i8*, !dbg !3211
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !3211
  call void @llvm.dbg.declare(metadata i64* %word, metadata !343, metadata !2395), !dbg !3212
  %1 = bitcast i64* %i to i8*, !dbg !3213
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !3213
  call void @llvm.dbg.declare(metadata i64* %i, metadata !344, metadata !2395), !dbg !3214
  %2 = bitcast i64* %tz to i8*, !dbg !3213
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !3213
  call void @llvm.dbg.declare(metadata i64* %tz, metadata !345, metadata !2395), !dbg !3215
  store i64 0, i64* %tz, align 8, !dbg !3215, !tbaa !2391
  store i64 0, i64* %i, align 8, !dbg !3216, !tbaa !2391
  br label %for.cond, !dbg !3218

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i64, i64* %i, align 8, !dbg !3219, !tbaa !2391
  %4 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !3223, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %4, i32 0, i32 3, !dbg !3224
  %5 = load i64, i64* %len, align 8, !dbg !3224, !tbaa !2542
  %cmp = icmp slt i64 %3, %5, !dbg !3225
  br i1 %cmp, label %for.body, label %for.end, !dbg !3226

for.body:                                         ; preds = %for.cond
  %6 = load i64, i64* %i, align 8, !dbg !3227, !tbaa !2391
  %7 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !3230, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %7, i32 0, i32 5, !dbg !3231
  %8 = load i64*, i64** %data, align 8, !dbg !3231, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %8, i64 %6, !dbg !3230
  %9 = load i64, i64* %arrayidx, align 8, !dbg !3230, !tbaa !2391
  %cmp1 = icmp ne i64 %9, 0, !dbg !3232
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3233

if.then:                                          ; preds = %for.body
  %10 = load i64, i64* %i, align 8, !dbg !3234, !tbaa !2391
  %11 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !3236, !tbaa !2505
  %data2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 5, !dbg !3237
  %12 = load i64*, i64** %data2, align 8, !dbg !3237, !tbaa !2546
  %arrayidx3 = getelementptr i64, i64* %12, i64 %10, !dbg !3236
  %13 = load i64, i64* %arrayidx3, align 8, !dbg !3236, !tbaa !2391
  store i64 %13, i64* %word, align 8, !dbg !3238, !tbaa !2391
  %14 = load i64, i64* %i, align 8, !dbg !3239, !tbaa !2391
  %mul = mul i64 %14, 19, !dbg !3240
  store i64 %mul, i64* %tz, align 8, !dbg !3241, !tbaa !2391
  br label %while.cond, !dbg !3242

while.cond:                                       ; preds = %while.body, %if.then
  %15 = load i64, i64* %word, align 8, !dbg !3243, !tbaa !2391
  %rem = urem i64 %15, 10, !dbg !3246
  %cmp4 = icmp eq i64 %rem, 0, !dbg !3247
  br i1 %cmp4, label %while.body, label %while.end, !dbg !3242

while.body:                                       ; preds = %while.cond
  %16 = load i64, i64* %word, align 8, !dbg !3248, !tbaa !2391
  %div = udiv i64 %16, 10, !dbg !3248
  store i64 %div, i64* %word, align 8, !dbg !3248, !tbaa !2391
  %17 = load i64, i64* %tz, align 8, !dbg !3250, !tbaa !2391
  %inc = add i64 %17, 1, !dbg !3250
  store i64 %inc, i64* %tz, align 8, !dbg !3250, !tbaa !2391
  br label %while.cond, !dbg !3242

while.end:                                        ; preds = %while.cond
  br label %for.end, !dbg !3251

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3252

for.inc:                                          ; preds = %if.end
  %18 = load i64, i64* %i, align 8, !dbg !3253, !tbaa !2391
  %inc5 = add i64 %18, 1, !dbg !3253
  store i64 %inc5, i64* %i, align 8, !dbg !3253, !tbaa !2391
  br label %for.cond, !dbg !3254

for.end:                                          ; preds = %while.end, %for.cond
  %19 = load i64, i64* %tz, align 8, !dbg !3255, !tbaa !2391
  %20 = bitcast i64* %tz to i8*, !dbg !3256
  call void @llvm.lifetime.end(i64 8, i8* %20) #4, !dbg !3256
  %21 = bitcast i64* %i to i8*, !dbg !3256
  call void @llvm.lifetime.end(i64 8, i8* %21) #4, !dbg !3256
  %22 = bitcast i64* %word to i8*, !dbg !3256
  call void @llvm.lifetime.end(i64 8, i8* %22) #4, !dbg !3256
  ret i64 %19, !dbg !3257
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_isinteger(%struct.mpd_t* %dec) #0 {
entry:
  %retval = alloca i32, align 4
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !348, metadata !2395), !dbg !3258
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !3259, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %0), !dbg !3261
  %tobool = icmp ne i32 %call, 0, !dbg !3261
  br i1 %tobool, label %if.then, label %if.end, !dbg !3262

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !3263
  br label %return, !dbg !3263

if.end:                                           ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !3265, !tbaa !2505
  %call1 = call i32 @_mpd_isint(%struct.mpd_t* %1), !dbg !3266
  store i32 %call1, i32* %retval, !dbg !3267
  br label %return, !dbg !3267

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, !dbg !3268
  ret i32 %2, !dbg !3268
}

; Function Attrs: nounwind uwtable
define internal i32 @_mpd_isint(%struct.mpd_t* %dec) #0 {
entry:
  %retval = alloca i32, align 4
  %dec.addr = alloca %struct.mpd_t*, align 8
  %tz = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !1442, metadata !2395), !dbg !3269
  %0 = bitcast i64* %tz to i8*, !dbg !3270
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !3270
  call void @llvm.dbg.declare(metadata i64* %tz, metadata !1443, metadata !2395), !dbg !3271
  %1 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !3272, !tbaa !2505
  %call = call i32 @mpd_iszerocoeff(%struct.mpd_t* %1), !dbg !3274
  %tobool = icmp ne i32 %call, 0, !dbg !3274
  br i1 %tobool, label %if.then, label %if.end, !dbg !3275

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, !dbg !3276
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3276

if.end:                                           ; preds = %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !3278, !tbaa !2505
  %call1 = call i64 @mpd_trail_zeros(%struct.mpd_t* %2), !dbg !3279
  store i64 %call1, i64* %tz, align 8, !dbg !3280, !tbaa !2391
  %3 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !3281, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 1, !dbg !3282
  %4 = load i64, i64* %exp, align 8, !dbg !3282, !tbaa !2510
  %5 = load i64, i64* %tz, align 8, !dbg !3283, !tbaa !2391
  %add = add i64 %4, %5, !dbg !3284
  %cmp = icmp sge i64 %add, 0, !dbg !3285
  %conv = zext i1 %cmp to i32, !dbg !3285
  store i32 %conv, i32* %retval, !dbg !3286
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3286

cleanup:                                          ; preds = %if.end, %if.then
  %6 = bitcast i64* %tz to i8*, !dbg !3287
  call void @llvm.lifetime.end(i64 8, i8* %6) #4, !dbg !3287
  %7 = load i32, i32* %retval, !dbg !3287
  ret i32 %7, !dbg !3287
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_isodd(%struct.mpd_t* %dec) #0 {
entry:
  %retval = alloca i32, align 4
  %dec.addr = alloca %struct.mpd_t*, align 8
  %q = alloca i64, align 8
  %r = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !351, metadata !2395), !dbg !3288
  %0 = bitcast i64* %q to i8*, !dbg !3289
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !3289
  call void @llvm.dbg.declare(metadata i64* %q, metadata !352, metadata !2395), !dbg !3290
  %1 = bitcast i64* %r to i8*, !dbg !3289
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !3289
  call void @llvm.dbg.declare(metadata i64* %r, metadata !353, metadata !2395), !dbg !3291
  %2 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !3292, !tbaa !2505
  %call = call i32 @mpd_iszerocoeff(%struct.mpd_t* %2), !dbg !3294
  %tobool = icmp ne i32 %call, 0, !dbg !3294
  br i1 %tobool, label %if.then, label %if.end, !dbg !3295

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !3296
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3298

if.end:                                           ; preds = %entry
  %3 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !3299, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 1, !dbg !3301
  %4 = load i64, i64* %exp, align 8, !dbg !3301, !tbaa !2510
  %cmp = icmp slt i64 %4, 0, !dbg !3302
  br i1 %cmp, label %if.then.1, label %if.end.5, !dbg !3303

if.then.1:                                        ; preds = %if.end
  %5 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !3304, !tbaa !2505
  %exp2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %5, i32 0, i32 1, !dbg !3306
  %6 = load i64, i64* %exp2, align 8, !dbg !3306, !tbaa !2510
  %sub = sub i64 0, %6, !dbg !3307
  call void @_mpd_div_word(i64* %q, i64* %r, i64 %sub, i64 19), !dbg !3308
  %7 = load i64, i64* %q, align 8, !dbg !3309, !tbaa !2391
  %8 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !3310, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %8, i32 0, i32 5, !dbg !3311
  %9 = load i64*, i64** %data, align 8, !dbg !3311, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %9, i64 %7, !dbg !3310
  %10 = load i64, i64* %arrayidx, align 8, !dbg !3310, !tbaa !2391
  %11 = load i64, i64* %r, align 8, !dbg !3312, !tbaa !2391
  %arrayidx3 = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %11, !dbg !3313
  %12 = load i64, i64* %arrayidx3, align 8, !dbg !3313, !tbaa !2391
  %div = udiv i64 %10, %12, !dbg !3314
  store i64 %div, i64* %q, align 8, !dbg !3315, !tbaa !2391
  %13 = load i64, i64* %q, align 8, !dbg !3316, !tbaa !2391
  %call4 = call i32 @mpd_isoddword(i64 %13), !dbg !3317
  store i32 %call4, i32* %retval, !dbg !3318
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3318

if.end.5:                                         ; preds = %if.end
  %14 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !3319, !tbaa !2505
  %exp6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %14, i32 0, i32 1, !dbg !3320
  %15 = load i64, i64* %exp6, align 8, !dbg !3320, !tbaa !2510
  %cmp7 = icmp eq i64 %15, 0, !dbg !3321
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !3322

land.rhs:                                         ; preds = %if.end.5
  %16 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !3323, !tbaa !2505
  %data8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %16, i32 0, i32 5, !dbg !3325
  %17 = load i64*, i64** %data8, align 8, !dbg !3325, !tbaa !2546
  %arrayidx9 = getelementptr i64, i64* %17, i64 0, !dbg !3326
  %18 = load i64, i64* %arrayidx9, align 8, !dbg !3326, !tbaa !2391
  %call10 = call i32 @mpd_isoddword(i64 %18), !dbg !3327
  %tobool11 = icmp ne i32 %call10, 0, !dbg !3322
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.5
  %19 = phi i1 [ false, %if.end.5 ], [ %tobool11, %land.rhs ]
  %land.ext = zext i1 %19 to i32, !dbg !3328
  store i32 %land.ext, i32* %retval, !dbg !3330
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3330

cleanup:                                          ; preds = %land.end, %if.then.1, %if.then
  %20 = bitcast i64* %r to i8*, !dbg !3331
  call void @llvm.lifetime.end(i64 8, i8* %20) #4, !dbg !3331
  %21 = bitcast i64* %q to i8*, !dbg !3331
  call void @llvm.lifetime.end(i64 8, i8* %21) #4, !dbg !3331
  %22 = load i32, i32* %retval, !dbg !3331
  ret i32 %22, !dbg !3331
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_div_word(i64* %q, i64* %r, i64 %v, i64 %d) #3 {
entry:
  %q.addr = alloca i64*, align 8
  %r.addr = alloca i64*, align 8
  %v.addr = alloca i64, align 8
  %d.addr = alloca i64, align 8
  store i64* %q, i64** %q.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %q.addr, metadata !1448, metadata !2395), !dbg !3332
  store i64* %r, i64** %r.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %r.addr, metadata !1449, metadata !2395), !dbg !3333
  store i64 %v, i64* %v.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %v.addr, metadata !1450, metadata !2395), !dbg !3334
  store i64 %d, i64* %d.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %d.addr, metadata !1451, metadata !2395), !dbg !3335
  %0 = load i64, i64* %v.addr, align 8, !dbg !3336, !tbaa !2391
  %1 = load i64, i64* %d.addr, align 8, !dbg !3337, !tbaa !2391
  %div = udiv i64 %0, %1, !dbg !3338
  %2 = load i64*, i64** %q.addr, align 8, !dbg !3339, !tbaa !2505
  store i64 %div, i64* %2, align 8, !dbg !3340, !tbaa !2391
  %3 = load i64, i64* %v.addr, align 8, !dbg !3341, !tbaa !2391
  %4 = load i64*, i64** %q.addr, align 8, !dbg !3342, !tbaa !2505
  %5 = load i64, i64* %4, align 8, !dbg !3343, !tbaa !2391
  %6 = load i64, i64* %d.addr, align 8, !dbg !3344, !tbaa !2391
  %mul = mul i64 %5, %6, !dbg !3345
  %sub = sub i64 %3, %mul, !dbg !3346
  %7 = load i64*, i64** %r.addr, align 8, !dbg !3347, !tbaa !2505
  store i64 %sub, i64* %7, align 8, !dbg !3348, !tbaa !2391
  ret void, !dbg !3349
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_iseven(%struct.mpd_t* %dec) #0 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !356, metadata !2395), !dbg !3350
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !3351, !tbaa !2505
  %call = call i32 @mpd_isodd(%struct.mpd_t* %0), !dbg !3352
  %tobool = icmp ne i32 %call, 0, !dbg !3353
  %lnot = xor i1 %tobool, true, !dbg !3353
  %lnot.ext = zext i1 %lnot to i32, !dbg !3353
  ret i32 %lnot.ext, !dbg !3354
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_setspecial(%struct.mpd_t* %result, i8 zeroext %sign, i8 zeroext %type) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %sign.addr = alloca i8, align 1
  %type.addr = alloca i8, align 1
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !361, metadata !2395), !dbg !3355
  store i8 %sign, i8* %sign.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %sign.addr, metadata !362, metadata !2395), !dbg !3356
  store i8 %type, i8* %type.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %type.addr, metadata !363, metadata !2395), !dbg !3357
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3358, !tbaa !2505
  call void @mpd_minalloc(%struct.mpd_t* %0), !dbg !3359
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3360, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %1, i32 0, i32 0, !dbg !3361
  %2 = load i8, i8* %flags, align 1, !dbg !3362, !tbaa !2620
  %conv = zext i8 %2 to i32, !dbg !3362
  %and = and i32 %conv, -16, !dbg !3362
  %conv1 = trunc i32 %and to i8, !dbg !3362
  store i8 %conv1, i8* %flags, align 1, !dbg !3362, !tbaa !2620
  %3 = load i8, i8* %sign.addr, align 1, !dbg !3363, !tbaa !2930
  %conv2 = zext i8 %3 to i32, !dbg !3363
  %4 = load i8, i8* %type.addr, align 1, !dbg !3364, !tbaa !2930
  %conv3 = zext i8 %4 to i32, !dbg !3364
  %or = or i32 %conv2, %conv3, !dbg !3365
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3366, !tbaa !2505
  %flags4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %5, i32 0, i32 0, !dbg !3367
  %6 = load i8, i8* %flags4, align 1, !dbg !3368, !tbaa !2620
  %conv5 = zext i8 %6 to i32, !dbg !3368
  %or6 = or i32 %conv5, %or, !dbg !3368
  %conv7 = trunc i32 %or6 to i8, !dbg !3368
  store i8 %conv7, i8* %flags4, align 1, !dbg !3368, !tbaa !2620
  %7 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3369, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %7, i32 0, i32 3, !dbg !3370
  store i64 0, i64* %len, align 8, !dbg !3371, !tbaa !2542
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3372, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %8, i32 0, i32 2, !dbg !3373
  store i64 0, i64* %digits, align 8, !dbg !3374, !tbaa !2514
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3375, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 1, !dbg !3376
  store i64 0, i64* %exp, align 8, !dbg !3377, !tbaa !2510
  ret void, !dbg !3378
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_seterror(%struct.mpd_t* %result, i32 %flags, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %flags.addr = alloca i32, align 4
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !368, metadata !2395), !dbg !3379
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !369, metadata !2395), !dbg !3380
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !370, metadata !2395), !dbg !3381
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3382, !tbaa !2505
  call void @mpd_minalloc(%struct.mpd_t* %0), !dbg !3383
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3384, !tbaa !2505
  call void @mpd_set_qnan(%struct.mpd_t* %1), !dbg !3385
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3386, !tbaa !2505
  call void @mpd_set_positive(%struct.mpd_t* %2), !dbg !3387
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3388, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 3, !dbg !3389
  store i64 0, i64* %len, align 8, !dbg !3390, !tbaa !2542
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3391, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %4, i32 0, i32 2, !dbg !3392
  store i64 0, i64* %digits, align 8, !dbg !3393, !tbaa !2514
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3394, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %5, i32 0, i32 1, !dbg !3395
  store i64 0, i64* %exp, align 8, !dbg !3396, !tbaa !2510
  %6 = load i32, i32* %flags.addr, align 4, !dbg !3397, !tbaa !2554
  %7 = load i32*, i32** %status.addr, align 8, !dbg !3398, !tbaa !2505
  %8 = load i32, i32* %7, align 4, !dbg !3399, !tbaa !2554
  %or = or i32 %8, %6, !dbg !3399
  store i32 %or, i32* %7, align 4, !dbg !3399, !tbaa !2554
  ret void, !dbg !3400
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qsset_ssize(%struct.mpd_t* %result, i64 %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %u = alloca i64, align 8
  %sign = alloca i8, align 1
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !375, metadata !2395), !dbg !3401
  store i64 %a, i64* %a.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !376, metadata !2395), !dbg !3402
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !377, metadata !2395), !dbg !3403
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !378, metadata !2395), !dbg !3404
  %0 = bitcast i64* %u to i8*, !dbg !3405
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !3405
  call void @llvm.dbg.declare(metadata i64* %u, metadata !379, metadata !2395), !dbg !3406
  call void @llvm.lifetime.start(i64 1, i8* %sign) #4, !dbg !3407
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !380, metadata !2395), !dbg !3408
  store i8 0, i8* %sign, align 1, !dbg !3408, !tbaa !2930
  %1 = load i64, i64* %a.addr, align 8, !dbg !3409, !tbaa !2391
  %cmp = icmp slt i64 %1, 0, !dbg !3411
  br i1 %cmp, label %if.then, label %if.else.3, !dbg !3412

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %a.addr, align 8, !dbg !3413, !tbaa !2391
  %cmp1 = icmp eq i64 %2, -9223372036854775808, !dbg !3416
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !3417

if.then.2:                                        ; preds = %if.then
  store i64 -9223372036854775808, i64* %u, align 8, !dbg !3418, !tbaa !2391
  br label %if.end, !dbg !3420

if.else:                                          ; preds = %if.then
  %3 = load i64, i64* %a.addr, align 8, !dbg !3421, !tbaa !2391
  %sub = sub i64 0, %3, !dbg !3423
  store i64 %sub, i64* %u, align 8, !dbg !3424, !tbaa !2391
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  store i8 1, i8* %sign, align 1, !dbg !3425, !tbaa !2930
  br label %if.end.4, !dbg !3426

if.else.3:                                        ; preds = %entry
  %4 = load i64, i64* %a.addr, align 8, !dbg !3427, !tbaa !2391
  store i64 %4, i64* %u, align 8, !dbg !3429, !tbaa !2391
  br label %if.end.4

if.end.4:                                         ; preds = %if.else.3, %if.end
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3430, !tbaa !2505
  %6 = load i8, i8* %sign, align 1, !dbg !3431, !tbaa !2930
  %7 = load i64, i64* %u, align 8, !dbg !3432, !tbaa !2391
  call void @_ssettriple(%struct.mpd_t* %5, i8 zeroext %6, i64 %7, i64 0), !dbg !3433
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3434, !tbaa !2505
  %9 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3435, !tbaa !2505
  %10 = load i32*, i32** %status.addr, align 8, !dbg !3436, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %8, %struct.mpd_context_t* %9, i32* %10), !dbg !3437
  call void @llvm.lifetime.end(i64 1, i8* %sign) #4, !dbg !3438
  %11 = bitcast i64* %u to i8*, !dbg !3438
  call void @llvm.lifetime.end(i64 8, i8* %11) #4, !dbg !3438
  ret void, !dbg !3438
}

; Function Attrs: nounwind uwtable
define internal void @_ssettriple(%struct.mpd_t* %result, i8 zeroext %sign, i64 %a, i64 %exp) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %sign.addr = alloca i8, align 1
  %a.addr = alloca i64, align 8
  %exp.addr = alloca i64, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1456, metadata !2395), !dbg !3439
  store i8 %sign, i8* %sign.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %sign.addr, metadata !1457, metadata !2395), !dbg !3440
  store i64 %a, i64* %a.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !1458, metadata !2395), !dbg !3441
  store i64 %exp, i64* %exp.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %exp.addr, metadata !1459, metadata !2395), !dbg !3442
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3443, !tbaa !2505
  %1 = load i8, i8* %sign.addr, align 1, !dbg !3444, !tbaa !2930
  call void @mpd_set_flags(%struct.mpd_t* %0, i8 zeroext %1), !dbg !3445
  %2 = load i64, i64* %exp.addr, align 8, !dbg !3446, !tbaa !2391
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3447, !tbaa !2505
  %exp1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 1, !dbg !3448
  store i64 %2, i64* %exp1, align 8, !dbg !3449, !tbaa !2510
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3450, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %4, i32 0, i32 5, !dbg !3451
  %5 = load i64*, i64** %data, align 8, !dbg !3451, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %5, i64 1, !dbg !3450
  %6 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3452, !tbaa !2505
  %data2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %6, i32 0, i32 5, !dbg !3453
  %7 = load i64*, i64** %data2, align 8, !dbg !3453, !tbaa !2546
  %arrayidx3 = getelementptr i64, i64* %7, i64 0, !dbg !3452
  %8 = load i64, i64* %a.addr, align 8, !dbg !3454, !tbaa !2391
  call void @_mpd_div_word(i64* %arrayidx, i64* %arrayidx3, i64 %8, i64 -8446744073709551616), !dbg !3455
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3456, !tbaa !2505
  %data4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 5, !dbg !3457
  %10 = load i64*, i64** %data4, align 8, !dbg !3457, !tbaa !2546
  %arrayidx5 = getelementptr i64, i64* %10, i64 1, !dbg !3456
  %11 = load i64, i64* %arrayidx5, align 8, !dbg !3456, !tbaa !2391
  %cmp = icmp eq i64 %11, 0, !dbg !3458
  %cond = select i1 %cmp, i32 1, i32 2, !dbg !3459
  %conv = sext i32 %cond to i64, !dbg !3459
  %12 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3460, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %12, i32 0, i32 3, !dbg !3461
  store i64 %conv, i64* %len, align 8, !dbg !3462, !tbaa !2542
  %13 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3463, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %13), !dbg !3464
  ret void, !dbg !3465
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qfinalize(%struct.mpd_t* %result, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !523, metadata !2395), !dbg !3466
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !524, metadata !2395), !dbg !3467
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !525, metadata !2395), !dbg !3468
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3469, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %0), !dbg !3471
  %tobool = icmp ne i32 %call, 0, !dbg !3471
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !3472

if.then:                                          ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3473, !tbaa !2505
  %call1 = call i32 @mpd_isnan(%struct.mpd_t* %1), !dbg !3476
  %tobool2 = icmp ne i32 %call1, 0, !dbg !3476
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !3477

if.then.3:                                        ; preds = %if.then
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3478, !tbaa !2505
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3480, !tbaa !2505
  call void @_mpd_fix_nan(%struct.mpd_t* %2, %struct.mpd_context_t* %3), !dbg !3481
  br label %if.end, !dbg !3482

if.end:                                           ; preds = %if.then.3, %if.then
  br label %return, !dbg !3483

if.end.4:                                         ; preds = %entry
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3484, !tbaa !2505
  %5 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3485, !tbaa !2505
  %6 = load i32*, i32** %status.addr, align 8, !dbg !3486, !tbaa !2505
  call void @_mpd_check_exp(%struct.mpd_t* %4, %struct.mpd_context_t* %5, i32* %6), !dbg !3487
  %7 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3488, !tbaa !2505
  %8 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3489, !tbaa !2505
  %9 = load i32*, i32** %status.addr, align 8, !dbg !3490, !tbaa !2505
  call void @_mpd_check_round(%struct.mpd_t* %7, %struct.mpd_context_t* %8, i32* %9), !dbg !3491
  br label %return, !dbg !3492

return:                                           ; preds = %if.end.4, %if.end
  ret void, !dbg !3493
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qsset_uint(%struct.mpd_t* %result, i64 %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !385, metadata !2395), !dbg !3495
  store i64 %a, i64* %a.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !386, metadata !2395), !dbg !3496
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !387, metadata !2395), !dbg !3497
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !388, metadata !2395), !dbg !3498
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3499, !tbaa !2505
  %1 = load i64, i64* %a.addr, align 8, !dbg !3500, !tbaa !2391
  call void @_ssettriple(%struct.mpd_t* %0, i8 zeroext 0, i64 %1, i64 0), !dbg !3501
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3502, !tbaa !2505
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3503, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !3504, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %2, %struct.mpd_context_t* %3, i32* %4), !dbg !3505
  ret void, !dbg !3506
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qsset_i32(%struct.mpd_t* %result, i32 %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !393, metadata !2395), !dbg !3507
  store i32 %a, i32* %a.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !394, metadata !2395), !dbg !3508
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !395, metadata !2395), !dbg !3509
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !396, metadata !2395), !dbg !3510
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3511, !tbaa !2505
  %1 = load i32, i32* %a.addr, align 4, !dbg !3512, !tbaa !2554
  %conv = sext i32 %1 to i64, !dbg !3512
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3513, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !3514, !tbaa !2505
  call void @mpd_qsset_ssize(%struct.mpd_t* %0, i64 %conv, %struct.mpd_context_t* %2, i32* %3), !dbg !3515
  ret void, !dbg !3516
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qsset_u32(%struct.mpd_t* %result, i32 %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !401, metadata !2395), !dbg !3517
  store i32 %a, i32* %a.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !402, metadata !2395), !dbg !3518
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !403, metadata !2395), !dbg !3519
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !404, metadata !2395), !dbg !3520
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3521, !tbaa !2505
  %1 = load i32, i32* %a.addr, align 4, !dbg !3522, !tbaa !2554
  %conv = zext i32 %1 to i64, !dbg !3522
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3523, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !3524, !tbaa !2505
  call void @mpd_qsset_uint(%struct.mpd_t* %0, i64 %conv, %struct.mpd_context_t* %2, i32* %3), !dbg !3525
  ret void, !dbg !3526
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qsset_i64(%struct.mpd_t* %result, i64 %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !409, metadata !2395), !dbg !3527
  store i64 %a, i64* %a.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !410, metadata !2395), !dbg !3528
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !411, metadata !2395), !dbg !3529
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !412, metadata !2395), !dbg !3530
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3531, !tbaa !2505
  %1 = load i64, i64* %a.addr, align 8, !dbg !3532, !tbaa !2391
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3533, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !3534, !tbaa !2505
  call void @mpd_qsset_ssize(%struct.mpd_t* %0, i64 %1, %struct.mpd_context_t* %2, i32* %3), !dbg !3535
  ret void, !dbg !3536
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qsset_u64(%struct.mpd_t* %result, i64 %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !417, metadata !2395), !dbg !3537
  store i64 %a, i64* %a.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !418, metadata !2395), !dbg !3538
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !419, metadata !2395), !dbg !3539
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !420, metadata !2395), !dbg !3540
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3541, !tbaa !2505
  %1 = load i64, i64* %a.addr, align 8, !dbg !3542, !tbaa !2391
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3543, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !3544, !tbaa !2505
  call void @mpd_qsset_uint(%struct.mpd_t* %0, i64 %1, %struct.mpd_context_t* %2, i32* %3), !dbg !3545
  ret void, !dbg !3546
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qset_ssize(%struct.mpd_t* %result, i64 %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !423, metadata !2395), !dbg !3547
  store i64 %a, i64* %a.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !424, metadata !2395), !dbg !3548
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !425, metadata !2395), !dbg !3549
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !426, metadata !2395), !dbg !3550
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3551, !tbaa !2505
  call void @mpd_minalloc(%struct.mpd_t* %0), !dbg !3552
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3553, !tbaa !2505
  %2 = load i64, i64* %a.addr, align 8, !dbg !3554, !tbaa !2391
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3555, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !3556, !tbaa !2505
  call void @mpd_qsset_ssize(%struct.mpd_t* %1, i64 %2, %struct.mpd_context_t* %3, i32* %4), !dbg !3557
  ret void, !dbg !3558
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qset_uint(%struct.mpd_t* %result, i64 %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !429, metadata !2395), !dbg !3559
  store i64 %a, i64* %a.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !430, metadata !2395), !dbg !3560
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !431, metadata !2395), !dbg !3561
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !432, metadata !2395), !dbg !3562
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3563, !tbaa !2505
  %1 = load i64, i64* %a.addr, align 8, !dbg !3564, !tbaa !2391
  call void @_settriple(%struct.mpd_t* %0, i8 zeroext 0, i64 %1, i64 0), !dbg !3565
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3566, !tbaa !2505
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3567, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !3568, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %2, %struct.mpd_context_t* %3, i32* %4), !dbg !3569
  ret void, !dbg !3570
}

; Function Attrs: nounwind uwtable
define internal void @_settriple(%struct.mpd_t* %result, i8 zeroext %sign, i64 %a, i64 %exp) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %sign.addr = alloca i8, align 1
  %a.addr = alloca i64, align 8
  %exp.addr = alloca i64, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1462, metadata !2395), !dbg !3571
  store i8 %sign, i8* %sign.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %sign.addr, metadata !1463, metadata !2395), !dbg !3572
  store i64 %a, i64* %a.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !1464, metadata !2395), !dbg !3573
  store i64 %exp, i64* %exp.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %exp.addr, metadata !1465, metadata !2395), !dbg !3574
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3575, !tbaa !2505
  call void @mpd_minalloc(%struct.mpd_t* %0), !dbg !3576
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3577, !tbaa !2505
  %2 = load i8, i8* %sign.addr, align 1, !dbg !3578, !tbaa !2930
  call void @mpd_set_flags(%struct.mpd_t* %1, i8 zeroext %2), !dbg !3579
  %3 = load i64, i64* %exp.addr, align 8, !dbg !3580, !tbaa !2391
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3581, !tbaa !2505
  %exp1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %4, i32 0, i32 1, !dbg !3582
  store i64 %3, i64* %exp1, align 8, !dbg !3583, !tbaa !2510
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3584, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %5, i32 0, i32 5, !dbg !3585
  %6 = load i64*, i64** %data, align 8, !dbg !3585, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %6, i64 1, !dbg !3584
  %7 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3586, !tbaa !2505
  %data2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %7, i32 0, i32 5, !dbg !3587
  %8 = load i64*, i64** %data2, align 8, !dbg !3587, !tbaa !2546
  %arrayidx3 = getelementptr i64, i64* %8, i64 0, !dbg !3586
  %9 = load i64, i64* %a.addr, align 8, !dbg !3588, !tbaa !2391
  call void @_mpd_div_word(i64* %arrayidx, i64* %arrayidx3, i64 %9, i64 -8446744073709551616), !dbg !3589
  %10 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3590, !tbaa !2505
  %data4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %10, i32 0, i32 5, !dbg !3591
  %11 = load i64*, i64** %data4, align 8, !dbg !3591, !tbaa !2546
  %arrayidx5 = getelementptr i64, i64* %11, i64 1, !dbg !3590
  %12 = load i64, i64* %arrayidx5, align 8, !dbg !3590, !tbaa !2391
  %cmp = icmp eq i64 %12, 0, !dbg !3592
  %cond = select i1 %cmp, i32 1, i32 2, !dbg !3593
  %conv = sext i32 %cond to i64, !dbg !3593
  %13 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3594, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %13, i32 0, i32 3, !dbg !3595
  store i64 %conv, i64* %len, align 8, !dbg !3596, !tbaa !2542
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3597, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %14), !dbg !3598
  ret void, !dbg !3599
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qset_i32(%struct.mpd_t* %result, i32 %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !435, metadata !2395), !dbg !3600
  store i32 %a, i32* %a.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !436, metadata !2395), !dbg !3601
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !437, metadata !2395), !dbg !3602
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !438, metadata !2395), !dbg !3603
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3604, !tbaa !2505
  %1 = load i32, i32* %a.addr, align 4, !dbg !3605, !tbaa !2554
  %conv = sext i32 %1 to i64, !dbg !3605
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3606, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !3607, !tbaa !2505
  call void @mpd_qset_ssize(%struct.mpd_t* %0, i64 %conv, %struct.mpd_context_t* %2, i32* %3), !dbg !3608
  ret void, !dbg !3609
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qset_u32(%struct.mpd_t* %result, i32 %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !441, metadata !2395), !dbg !3610
  store i32 %a, i32* %a.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !442, metadata !2395), !dbg !3611
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !443, metadata !2395), !dbg !3612
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !444, metadata !2395), !dbg !3613
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3614, !tbaa !2505
  %1 = load i32, i32* %a.addr, align 4, !dbg !3615, !tbaa !2554
  %conv = zext i32 %1 to i64, !dbg !3615
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3616, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !3617, !tbaa !2505
  call void @mpd_qset_uint(%struct.mpd_t* %0, i64 %conv, %struct.mpd_context_t* %2, i32* %3), !dbg !3618
  ret void, !dbg !3619
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qset_i64(%struct.mpd_t* %result, i64 %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !447, metadata !2395), !dbg !3620
  store i64 %a, i64* %a.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !448, metadata !2395), !dbg !3621
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !449, metadata !2395), !dbg !3622
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !450, metadata !2395), !dbg !3623
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3624, !tbaa !2505
  %1 = load i64, i64* %a.addr, align 8, !dbg !3625, !tbaa !2391
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3626, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !3627, !tbaa !2505
  call void @mpd_qset_ssize(%struct.mpd_t* %0, i64 %1, %struct.mpd_context_t* %2, i32* %3), !dbg !3628
  ret void, !dbg !3629
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qset_u64(%struct.mpd_t* %result, i64 %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !453, metadata !2395), !dbg !3630
  store i64 %a, i64* %a.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !454, metadata !2395), !dbg !3631
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !455, metadata !2395), !dbg !3632
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !456, metadata !2395), !dbg !3633
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3634, !tbaa !2505
  %1 = load i64, i64* %a.addr, align 8, !dbg !3635, !tbaa !2391
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3636, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !3637, !tbaa !2505
  call void @mpd_qset_uint(%struct.mpd_t* %0, i64 %1, %struct.mpd_context_t* %2, i32* %3), !dbg !3638
  ret void, !dbg !3639
}

; Function Attrs: nounwind uwtable
define hidden i64 @mpd_qget_uint(%struct.mpd_t* %a, i32* %status) #0 {
entry:
  %a.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !461, metadata !2395), !dbg !3640
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !462, metadata !2395), !dbg !3641
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3642, !tbaa !2505
  %1 = load i32*, i32** %status.addr, align 8, !dbg !3643, !tbaa !2505
  %call = call i64 @_mpd_qget_uint(i32 1, %struct.mpd_t* %0, i32* %1), !dbg !3644
  ret i64 %call, !dbg !3645
}

; Function Attrs: nounwind uwtable
define internal i64 @_mpd_qget_uint(i32 %use_sign, %struct.mpd_t* %a, i32* %status) #0 {
entry:
  %retval = alloca i64, align 8
  %use_sign.addr = alloca i32, align 4
  %a.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  %tmp = alloca %struct.mpd_t, align 8
  %tmp_data = alloca [2 x i64], align 16
  %lo = alloca i64, align 8
  %hi = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i32 %use_sign, i32* %use_sign.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %use_sign.addr, metadata !1470, metadata !2395), !dbg !3646
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1471, metadata !2395), !dbg !3647
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1472, metadata !2395), !dbg !3648
  %0 = bitcast %struct.mpd_t* %tmp to i8*, !dbg !3649
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !3649
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %tmp, metadata !1473, metadata !2395), !dbg !3650
  %1 = bitcast [2 x i64]* %tmp_data to i8*, !dbg !3651
  call void @llvm.lifetime.start(i64 16, i8* %1) #4, !dbg !3651
  call void @llvm.dbg.declare(metadata [2 x i64]* %tmp_data, metadata !1474, metadata !2395), !dbg !3652
  %2 = bitcast i64* %lo to i8*, !dbg !3653
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !3653
  call void @llvm.dbg.declare(metadata i64* %lo, metadata !1478, metadata !2395), !dbg !3654
  %3 = bitcast i64* %hi to i8*, !dbg !3653
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !3653
  call void @llvm.dbg.declare(metadata i64* %hi, metadata !1479, metadata !2395), !dbg !3655
  %4 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3656, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %4), !dbg !3658
  %tobool = icmp ne i32 %call, 0, !dbg !3658
  br i1 %tobool, label %if.then, label %if.end, !dbg !3659

if.then:                                          ; preds = %entry
  %5 = load i32*, i32** %status.addr, align 8, !dbg !3660, !tbaa !2505
  %6 = load i32, i32* %5, align 4, !dbg !3662, !tbaa !2554
  %or = or i32 %6, 256, !dbg !3662
  store i32 %or, i32* %5, align 4, !dbg !3662, !tbaa !2554
  store i64 -1, i64* %retval, !dbg !3663
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3663

if.end:                                           ; preds = %entry
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3664, !tbaa !2505
  %call4 = call i32 @mpd_iszero(%struct.mpd_t* %7), !dbg !3666
  %tobool5 = icmp ne i32 %call4, 0, !dbg !3666
  br i1 %tobool5, label %if.then.6, label %if.end.7, !dbg !3667

if.then.6:                                        ; preds = %if.end
  store i64 0, i64* %retval, !dbg !3668
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3668

if.end.7:                                         ; preds = %if.end
  %8 = load i32, i32* %use_sign.addr, align 4, !dbg !3670, !tbaa !2554
  %tobool8 = icmp ne i32 %8, 0, !dbg !3670
  br i1 %tobool8, label %land.lhs.true, label %if.end.13, !dbg !3672

land.lhs.true:                                    ; preds = %if.end.7
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3673, !tbaa !2505
  %call9 = call i32 @mpd_isnegative(%struct.mpd_t* %9), !dbg !3675
  %tobool10 = icmp ne i32 %call9, 0, !dbg !3675
  br i1 %tobool10, label %if.then.11, label %if.end.13, !dbg !3676

if.then.11:                                       ; preds = %land.lhs.true
  %10 = load i32*, i32** %status.addr, align 8, !dbg !3677, !tbaa !2505
  %11 = load i32, i32* %10, align 4, !dbg !3679, !tbaa !2554
  %or12 = or i32 %11, 256, !dbg !3679
  store i32 %or12, i32* %10, align 4, !dbg !3679, !tbaa !2554
  store i64 -1, i64* %retval, !dbg !3680
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3680

if.end.13:                                        ; preds = %land.lhs.true, %if.end.7
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3681, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %12, i32 0, i32 2, !dbg !3683
  %13 = load i64, i64* %digits, align 8, !dbg !3683, !tbaa !2514
  %14 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3684, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %14, i32 0, i32 1, !dbg !3685
  %15 = load i64, i64* %exp, align 8, !dbg !3685, !tbaa !2510
  %add = add i64 %13, %15, !dbg !3686
  %cmp = icmp sgt i64 %add, 20, !dbg !3687
  br i1 %cmp, label %if.then.14, label %if.end.16, !dbg !3688

if.then.14:                                       ; preds = %if.end.13
  %16 = load i32*, i32** %status.addr, align 8, !dbg !3689, !tbaa !2505
  %17 = load i32, i32* %16, align 4, !dbg !3691, !tbaa !2554
  %or15 = or i32 %17, 256, !dbg !3691
  store i32 %or15, i32* %16, align 4, !dbg !3691, !tbaa !2554
  store i64 -1, i64* %retval, !dbg !3692
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3692

if.end.16:                                        ; preds = %if.end.13
  %18 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3693, !tbaa !2505
  %exp17 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %18, i32 0, i32 1, !dbg !3695
  %19 = load i64, i64* %exp17, align 8, !dbg !3695, !tbaa !2510
  %cmp18 = icmp slt i64 %19, 0, !dbg !3696
  br i1 %cmp18, label %if.then.19, label %if.end.28, !dbg !3697

if.then.19:                                       ; preds = %if.end.16
  %20 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3698, !tbaa !2505
  %call20 = call i32 @_mpd_isint(%struct.mpd_t* %20), !dbg !3701
  %tobool21 = icmp ne i32 %call20, 0, !dbg !3701
  br i1 %tobool21, label %if.end.24, label %if.then.22, !dbg !3702

if.then.22:                                       ; preds = %if.then.19
  %21 = load i32*, i32** %status.addr, align 8, !dbg !3703, !tbaa !2505
  %22 = load i32, i32* %21, align 4, !dbg !3705, !tbaa !2554
  %or23 = or i32 %22, 256, !dbg !3705
  store i32 %or23, i32* %21, align 4, !dbg !3705, !tbaa !2554
  store i64 -1, i64* %retval, !dbg !3706
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3706

if.end.24:                                        ; preds = %if.then.19
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %tmp_data, i32 0, i32 0, !dbg !3707
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 5, !dbg !3708
  store i64* %arraydecay, i64** %data, align 8, !dbg !3709, !tbaa !2546
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 0, !dbg !3710
  store i8 48, i8* %flags, align 1, !dbg !3711, !tbaa !2620
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 4, !dbg !3712
  store i64 2, i64* %alloc, align 8, !dbg !3713, !tbaa !2835
  %23 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3714, !tbaa !2505
  %24 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3715, !tbaa !2505
  %exp25 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %24, i32 0, i32 1, !dbg !3716
  %25 = load i64, i64* %exp25, align 8, !dbg !3716, !tbaa !2510
  %sub = sub i64 0, %25, !dbg !3717
  %call26 = call i64 @mpd_qsshiftr(%struct.mpd_t* %tmp, %struct.mpd_t* %23, i64 %sub), !dbg !3718
  %exp27 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 1, !dbg !3719
  store i64 0, i64* %exp27, align 8, !dbg !3720, !tbaa !2510
  store %struct.mpd_t* %tmp, %struct.mpd_t** %a.addr, align 8, !dbg !3721, !tbaa !2505
  br label %if.end.28, !dbg !3722

if.end.28:                                        ; preds = %if.end.24, %if.end.16
  %26 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3723, !tbaa !2505
  call void @_mpd_get_msdigits(i64* %hi, i64* %lo, %struct.mpd_t* %26, i32 20), !dbg !3724
  %27 = load i64, i64* %hi, align 8, !dbg !3725, !tbaa !2391
  %tobool29 = icmp ne i64 %27, 0, !dbg !3725
  br i1 %tobool29, label %if.then.30, label %if.end.32, !dbg !3727

if.then.30:                                       ; preds = %if.end.28
  %28 = load i32*, i32** %status.addr, align 8, !dbg !3728, !tbaa !2505
  %29 = load i32, i32* %28, align 4, !dbg !3730, !tbaa !2554
  %or31 = or i32 %29, 256, !dbg !3730
  store i32 %or31, i32* %28, align 4, !dbg !3730, !tbaa !2554
  store i64 -1, i64* %retval, !dbg !3731
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3731

if.end.32:                                        ; preds = %if.end.28
  %30 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3732, !tbaa !2505
  %exp33 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %30, i32 0, i32 1, !dbg !3734
  %31 = load i64, i64* %exp33, align 8, !dbg !3734, !tbaa !2510
  %cmp34 = icmp sgt i64 %31, 0, !dbg !3735
  br i1 %cmp34, label %if.then.35, label %if.end.41, !dbg !3736

if.then.35:                                       ; preds = %if.end.32
  %32 = load i64, i64* %lo, align 8, !dbg !3737, !tbaa !2391
  %33 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3739, !tbaa !2505
  %exp36 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %33, i32 0, i32 1, !dbg !3740
  %34 = load i64, i64* %exp36, align 8, !dbg !3740, !tbaa !2510
  %arrayidx = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %34, !dbg !3741
  %35 = load i64, i64* %arrayidx, align 8, !dbg !3741, !tbaa !2391
  call void @_mpd_mul_words(i64* %hi, i64* %lo, i64 %32, i64 %35), !dbg !3742
  %36 = load i64, i64* %hi, align 8, !dbg !3743, !tbaa !2391
  %tobool37 = icmp ne i64 %36, 0, !dbg !3743
  br i1 %tobool37, label %if.then.38, label %if.end.40, !dbg !3745

if.then.38:                                       ; preds = %if.then.35
  %37 = load i32*, i32** %status.addr, align 8, !dbg !3746, !tbaa !2505
  %38 = load i32, i32* %37, align 4, !dbg !3748, !tbaa !2554
  %or39 = or i32 %38, 256, !dbg !3748
  store i32 %or39, i32* %37, align 4, !dbg !3748, !tbaa !2554
  store i64 -1, i64* %retval, !dbg !3749
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3749

if.end.40:                                        ; preds = %if.then.35
  br label %if.end.41, !dbg !3750

if.end.41:                                        ; preds = %if.end.40, %if.end.32
  %39 = load i64, i64* %lo, align 8, !dbg !3751, !tbaa !2391
  store i64 %39, i64* %retval, !dbg !3752
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3752

cleanup:                                          ; preds = %if.end.41, %if.then.38, %if.then.30, %if.then.22, %if.then.14, %if.then.11, %if.then.6, %if.then
  %40 = bitcast i64* %hi to i8*, !dbg !3753
  call void @llvm.lifetime.end(i64 8, i8* %40) #4, !dbg !3753
  %41 = bitcast i64* %lo to i8*, !dbg !3753
  call void @llvm.lifetime.end(i64 8, i8* %41) #4, !dbg !3753
  %42 = bitcast [2 x i64]* %tmp_data to i8*, !dbg !3753
  call void @llvm.lifetime.end(i64 16, i8* %42) #4, !dbg !3753
  %43 = bitcast %struct.mpd_t* %tmp to i8*, !dbg !3753
  call void @llvm.lifetime.end(i64 48, i8* %43) #4, !dbg !3753
  %44 = load i64, i64* %retval, !dbg !3753
  ret i64 %44, !dbg !3753
}

; Function Attrs: nounwind uwtable
define hidden i64 @mpd_qabs_uint(%struct.mpd_t* %a, i32* %status) #0 {
entry:
  %a.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !465, metadata !2395), !dbg !3754
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !466, metadata !2395), !dbg !3755
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3756, !tbaa !2505
  %1 = load i32*, i32** %status.addr, align 8, !dbg !3757, !tbaa !2505
  %call = call i64 @_mpd_qget_uint(i32 0, %struct.mpd_t* %0, i32* %1), !dbg !3758
  ret i64 %call, !dbg !3759
}

; Function Attrs: nounwind uwtable
define hidden i64 @mpd_qget_ssize(%struct.mpd_t* %a, i32* %status) #0 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  %u = alloca i64, align 8
  %isneg = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !471, metadata !2395), !dbg !3760
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !472, metadata !2395), !dbg !3761
  %0 = bitcast i64* %u to i8*, !dbg !3762
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !3762
  call void @llvm.dbg.declare(metadata i64* %u, metadata !473, metadata !2395), !dbg !3763
  %1 = bitcast i32* %isneg to i8*, !dbg !3764
  call void @llvm.lifetime.start(i64 4, i8* %1) #4, !dbg !3764
  call void @llvm.dbg.declare(metadata i32* %isneg, metadata !474, metadata !2395), !dbg !3765
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3766, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !3767, !tbaa !2505
  %call = call i64 @mpd_qabs_uint(%struct.mpd_t* %2, i32* %3), !dbg !3768
  store i64 %call, i64* %u, align 8, !dbg !3769, !tbaa !2391
  %4 = load i32*, i32** %status.addr, align 8, !dbg !3770, !tbaa !2505
  %5 = load i32, i32* %4, align 4, !dbg !3772, !tbaa !2554
  %and = and i32 %5, 256, !dbg !3773
  %tobool = icmp ne i32 %and, 0, !dbg !3773
  br i1 %tobool, label %if.then, label %if.end, !dbg !3774

if.then:                                          ; preds = %entry
  store i64 9223372036854775807, i64* %retval, !dbg !3775
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3775

if.end:                                           ; preds = %entry
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3777, !tbaa !2505
  %call1 = call i32 @mpd_isnegative(%struct.mpd_t* %6), !dbg !3778
  store i32 %call1, i32* %isneg, align 4, !dbg !3779, !tbaa !2554
  %7 = load i64, i64* %u, align 8, !dbg !3780, !tbaa !2391
  %cmp = icmp ule i64 %7, 9223372036854775807, !dbg !3782
  br i1 %cmp, label %if.then.2, label %if.else, !dbg !3783

if.then.2:                                        ; preds = %if.end
  %8 = load i32, i32* %isneg, align 4, !dbg !3784, !tbaa !2554
  %tobool3 = icmp ne i32 %8, 0, !dbg !3784
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !3784

cond.true:                                        ; preds = %if.then.2
  %9 = load i64, i64* %u, align 8, !dbg !3786, !tbaa !2391
  %sub = sub i64 0, %9, !dbg !3788
  br label %cond.end, !dbg !3784

cond.false:                                       ; preds = %if.then.2
  %10 = load i64, i64* %u, align 8, !dbg !3789, !tbaa !2391
  br label %cond.end, !dbg !3784

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %10, %cond.false ], !dbg !3784
  store i64 %cond, i64* %retval, !dbg !3791
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3794

if.else:                                          ; preds = %if.end
  %11 = load i32, i32* %isneg, align 4, !dbg !3795, !tbaa !2554
  %tobool4 = icmp ne i32 %11, 0, !dbg !3795
  br i1 %tobool4, label %land.lhs.true, label %if.end.7, !dbg !3797

land.lhs.true:                                    ; preds = %if.else
  %12 = load i64, i64* %u, align 8, !dbg !3798, !tbaa !2391
  %add = add i64 %12, -1, !dbg !3800
  %cmp5 = icmp eq i64 %add, 9223372036854775807, !dbg !3801
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !3802

if.then.6:                                        ; preds = %land.lhs.true
  store i64 -9223372036854775808, i64* %retval, !dbg !3803
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3803

if.end.7:                                         ; preds = %land.lhs.true, %if.else
  br label %if.end.8

if.end.8:                                         ; preds = %if.end.7
  %13 = load i32*, i32** %status.addr, align 8, !dbg !3805, !tbaa !2505
  %14 = load i32, i32* %13, align 4, !dbg !3806, !tbaa !2554
  %or = or i32 %14, 256, !dbg !3806
  store i32 %or, i32* %13, align 4, !dbg !3806, !tbaa !2554
  store i64 9223372036854775807, i64* %retval, !dbg !3807
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3807

cleanup:                                          ; preds = %if.end.8, %if.then.6, %cond.end, %if.then
  %15 = bitcast i32* %isneg to i8*, !dbg !3808
  call void @llvm.lifetime.end(i64 4, i8* %15) #4, !dbg !3808
  %16 = bitcast i64* %u to i8*, !dbg !3808
  call void @llvm.lifetime.end(i64 8, i8* %16) #4, !dbg !3808
  %17 = load i64, i64* %retval, !dbg !3808
  ret i64 %17, !dbg !3808
}

; Function Attrs: nounwind uwtable
define hidden i64 @mpd_qget_u64(%struct.mpd_t* %a, i32* %status) #0 {
entry:
  %a.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !479, metadata !2395), !dbg !3809
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !480, metadata !2395), !dbg !3810
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3811, !tbaa !2505
  %1 = load i32*, i32** %status.addr, align 8, !dbg !3812, !tbaa !2505
  %call = call i64 @mpd_qget_uint(%struct.mpd_t* %0, i32* %1), !dbg !3813
  ret i64 %call, !dbg !3814
}

; Function Attrs: nounwind uwtable
define hidden i64 @mpd_qget_i64(%struct.mpd_t* %a, i32* %status) #0 {
entry:
  %a.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !485, metadata !2395), !dbg !3815
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !486, metadata !2395), !dbg !3816
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3817, !tbaa !2505
  %1 = load i32*, i32** %status.addr, align 8, !dbg !3818, !tbaa !2505
  %call = call i64 @mpd_qget_ssize(%struct.mpd_t* %0, i32* %1), !dbg !3819
  ret i64 %call, !dbg !3820
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_qget_u32(%struct.mpd_t* %a, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  %x = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !491, metadata !2395), !dbg !3821
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !492, metadata !2395), !dbg !3822
  %0 = bitcast i64* %x to i8*, !dbg !3823
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !3823
  call void @llvm.dbg.declare(metadata i64* %x, metadata !493, metadata !2395), !dbg !3824
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3825, !tbaa !2505
  %2 = load i32*, i32** %status.addr, align 8, !dbg !3826, !tbaa !2505
  %call = call i64 @mpd_qget_uint(%struct.mpd_t* %1, i32* %2), !dbg !3827
  store i64 %call, i64* %x, align 8, !dbg !3824, !tbaa !2391
  %3 = load i32*, i32** %status.addr, align 8, !dbg !3828, !tbaa !2505
  %4 = load i32, i32* %3, align 4, !dbg !3830, !tbaa !2554
  %and = and i32 %4, 256, !dbg !3831
  %tobool = icmp ne i32 %and, 0, !dbg !3831
  br i1 %tobool, label %if.then, label %if.end, !dbg !3832

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !3833
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3833

if.end:                                           ; preds = %entry
  %5 = load i64, i64* %x, align 8, !dbg !3835, !tbaa !2391
  %cmp = icmp ugt i64 %5, 4294967295, !dbg !3837
  br i1 %cmp, label %if.then.1, label %if.end.2, !dbg !3838

if.then.1:                                        ; preds = %if.end
  %6 = load i32*, i32** %status.addr, align 8, !dbg !3839, !tbaa !2505
  %7 = load i32, i32* %6, align 4, !dbg !3841, !tbaa !2554
  %or = or i32 %7, 256, !dbg !3841
  store i32 %or, i32* %6, align 4, !dbg !3841, !tbaa !2554
  store i32 -1, i32* %retval, !dbg !3842
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3842

if.end.2:                                         ; preds = %if.end
  %8 = load i64, i64* %x, align 8, !dbg !3843, !tbaa !2391
  %conv = trunc i64 %8 to i32, !dbg !3844
  store i32 %conv, i32* %retval, !dbg !3845
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3845

cleanup:                                          ; preds = %if.end.2, %if.then.1, %if.then
  %9 = bitcast i64* %x to i8*, !dbg !3846
  call void @llvm.lifetime.end(i64 8, i8* %9) #4, !dbg !3846
  %10 = load i32, i32* %retval, !dbg !3846
  ret i32 %10, !dbg !3846
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_qget_i32(%struct.mpd_t* %a, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  %x = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !498, metadata !2395), !dbg !3847
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !499, metadata !2395), !dbg !3848
  %0 = bitcast i64* %x to i8*, !dbg !3849
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !3849
  call void @llvm.dbg.declare(metadata i64* %x, metadata !500, metadata !2395), !dbg !3850
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3851, !tbaa !2505
  %2 = load i32*, i32** %status.addr, align 8, !dbg !3852, !tbaa !2505
  %call = call i64 @mpd_qget_ssize(%struct.mpd_t* %1, i32* %2), !dbg !3853
  store i64 %call, i64* %x, align 8, !dbg !3850, !tbaa !2391
  %3 = load i32*, i32** %status.addr, align 8, !dbg !3854, !tbaa !2505
  %4 = load i32, i32* %3, align 4, !dbg !3856, !tbaa !2554
  %and = and i32 %4, 256, !dbg !3857
  %tobool = icmp ne i32 %and, 0, !dbg !3857
  br i1 %tobool, label %if.then, label %if.end, !dbg !3858

if.then:                                          ; preds = %entry
  store i32 2147483647, i32* %retval, !dbg !3859
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3859

if.end:                                           ; preds = %entry
  %5 = load i64, i64* %x, align 8, !dbg !3861, !tbaa !2391
  %cmp = icmp slt i64 %5, -2147483648, !dbg !3863
  br i1 %cmp, label %if.then.2, label %lor.lhs.false, !dbg !3864

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i64, i64* %x, align 8, !dbg !3865, !tbaa !2391
  %cmp1 = icmp sgt i64 %6, 2147483647, !dbg !3867
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !3868

if.then.2:                                        ; preds = %lor.lhs.false, %if.end
  %7 = load i32*, i32** %status.addr, align 8, !dbg !3869, !tbaa !2505
  %8 = load i32, i32* %7, align 4, !dbg !3871, !tbaa !2554
  %or = or i32 %8, 256, !dbg !3871
  store i32 %or, i32* %7, align 4, !dbg !3871, !tbaa !2554
  store i32 2147483647, i32* %retval, !dbg !3872
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3872

if.end.3:                                         ; preds = %lor.lhs.false
  %9 = load i64, i64* %x, align 8, !dbg !3873, !tbaa !2391
  %conv = trunc i64 %9 to i32, !dbg !3874
  store i32 %conv, i32* %retval, !dbg !3875
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3875

cleanup:                                          ; preds = %if.end.3, %if.then.2, %if.then
  %10 = bitcast i64* %x to i8*, !dbg !3876
  call void @llvm.lifetime.end(i64 8, i8* %10) #4, !dbg !3876
  %11 = load i32, i32* %retval, !dbg !3876
  ret i32 %11, !dbg !3876
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_qcheck_nan(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !505, metadata !2395), !dbg !3877
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !506, metadata !2395), !dbg !3878
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !507, metadata !2395), !dbg !3879
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !508, metadata !2395), !dbg !3880
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3881, !tbaa !2505
  %call = call i32 @mpd_isnan(%struct.mpd_t* %0), !dbg !3883
  %tobool = icmp ne i32 %call, 0, !dbg !3883
  br i1 %tobool, label %if.then, label %if.end, !dbg !3884

if.then:                                          ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3885, !tbaa !2505
  %call1 = call i32 @mpd_issnan(%struct.mpd_t* %1), !dbg !3887
  %tobool2 = icmp ne i32 %call1, 0, !dbg !3887
  %cond = select i1 %tobool2, i32 256, i32 0, !dbg !3887
  %2 = load i32*, i32** %status.addr, align 8, !dbg !3888, !tbaa !2505
  %3 = load i32, i32* %2, align 4, !dbg !3889, !tbaa !2554
  %or = or i32 %3, %cond, !dbg !3889
  store i32 %or, i32* %2, align 4, !dbg !3889, !tbaa !2554
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3890, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3891, !tbaa !2505
  %6 = load i32*, i32** %status.addr, align 8, !dbg !3892, !tbaa !2505
  %call3 = call i32 @mpd_qcopy(%struct.mpd_t* %4, %struct.mpd_t* %5, i32* %6), !dbg !3893
  %7 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3894, !tbaa !2505
  call void @mpd_set_qnan(%struct.mpd_t* %7), !dbg !3895
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3896, !tbaa !2505
  %9 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3897, !tbaa !2505
  call void @_mpd_fix_nan(%struct.mpd_t* %8, %struct.mpd_context_t* %9), !dbg !3898
  store i32 1, i32* %retval, !dbg !3899
  br label %return, !dbg !3899

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, !dbg !3900
  br label %return, !dbg !3900

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, !dbg !3901
  ret i32 %10, !dbg !3901
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_qcopy(%struct.mpd_t* %result, %struct.mpd_t* %a, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !530, metadata !2395), !dbg !3902
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !531, metadata !2395), !dbg !3903
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !532, metadata !2395), !dbg !3904
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3905, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3907, !tbaa !2505
  %cmp = icmp eq %struct.mpd_t* %0, %1, !dbg !3908
  br i1 %cmp, label %if.then, label %if.end, !dbg !3909

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, !dbg !3910
  br label %return, !dbg !3910

if.end:                                           ; preds = %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3912, !tbaa !2505
  %3 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3914, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 3, !dbg !3915
  %4 = load i64, i64* %len, align 8, !dbg !3915, !tbaa !2542
  %5 = load i32*, i32** %status.addr, align 8, !dbg !3916, !tbaa !2505
  %call = call i32 @mpd_qresize(%struct.mpd_t* %2, i64 %4, i32* %5), !dbg !3917
  %tobool = icmp ne i32 %call, 0, !dbg !3917
  br i1 %tobool, label %if.end.2, label %if.then.1, !dbg !3918

if.then.1:                                        ; preds = %if.end
  store i32 0, i32* %retval, !dbg !3919
  br label %return, !dbg !3919

if.end.2:                                         ; preds = %if.end
  %6 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3921, !tbaa !2505
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3922, !tbaa !2505
  call void @mpd_copy_flags(%struct.mpd_t* %6, %struct.mpd_t* %7), !dbg !3923
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3924, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %8, i32 0, i32 1, !dbg !3925
  %9 = load i64, i64* %exp, align 8, !dbg !3925, !tbaa !2510
  %10 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3926, !tbaa !2505
  %exp3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %10, i32 0, i32 1, !dbg !3927
  store i64 %9, i64* %exp3, align 8, !dbg !3928, !tbaa !2510
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3929, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 2, !dbg !3930
  %12 = load i64, i64* %digits, align 8, !dbg !3930, !tbaa !2514
  %13 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3931, !tbaa !2505
  %digits4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %13, i32 0, i32 2, !dbg !3932
  store i64 %12, i64* %digits4, align 8, !dbg !3933, !tbaa !2514
  %14 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3934, !tbaa !2505
  %len5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %14, i32 0, i32 3, !dbg !3935
  %15 = load i64, i64* %len5, align 8, !dbg !3935, !tbaa !2542
  %16 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3936, !tbaa !2505
  %len6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %16, i32 0, i32 3, !dbg !3937
  store i64 %15, i64* %len6, align 8, !dbg !3938, !tbaa !2542
  %17 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3939, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 5, !dbg !3940
  %18 = load i64*, i64** %data, align 8, !dbg !3940, !tbaa !2546
  %19 = bitcast i64* %18 to i8*, !dbg !3941
  %20 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3942, !tbaa !2505
  %data7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %20, i32 0, i32 5, !dbg !3943
  %21 = load i64*, i64** %data7, align 8, !dbg !3943, !tbaa !2546
  %22 = bitcast i64* %21 to i8*, !dbg !3941
  %23 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !3944, !tbaa !2505
  %len8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %23, i32 0, i32 3, !dbg !3945
  %24 = load i64, i64* %len8, align 8, !dbg !3945, !tbaa !2542
  %mul = mul i64 %24, 8, !dbg !3946
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %22, i64 %mul, i32 8, i1 false), !dbg !3941
  store i32 1, i32* %retval, !dbg !3947
  br label %return, !dbg !3947

return:                                           ; preds = %if.end.2, %if.then.1, %if.then
  %25 = load i32, i32* %retval, !dbg !3948
  ret i32 %25, !dbg !3948
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_fix_nan(%struct.mpd_t* %result, %struct.mpd_context_t* %ctx) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %dummy = alloca i32, align 4
  %prec = alloca i64, align 8
  %len = alloca i64, align 8
  %r = alloca i64, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1515, metadata !2395), !dbg !3949
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1516, metadata !2395), !dbg !3950
  %0 = bitcast i32* %dummy to i8*, !dbg !3951
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !3951
  call void @llvm.dbg.declare(metadata i32* %dummy, metadata !1517, metadata !2395), !dbg !3952
  %1 = bitcast i64* %prec to i8*, !dbg !3953
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !3953
  call void @llvm.dbg.declare(metadata i64* %prec, metadata !1518, metadata !2395), !dbg !3954
  %2 = bitcast i64* %len to i8*, !dbg !3955
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !3955
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1519, metadata !2395), !dbg !3956
  %3 = bitcast i64* %r to i8*, !dbg !3955
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !3955
  call void @llvm.dbg.declare(metadata i64* %r, metadata !1520, metadata !2395), !dbg !3957
  %4 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3958, !tbaa !2505
  %prec1 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %4, i32 0, i32 0, !dbg !3959
  %5 = load i64, i64* %prec1, align 8, !dbg !3959, !tbaa !2526
  %6 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !3960, !tbaa !2505
  %clamp = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %6, i32 0, i32 7, !dbg !3961
  %7 = load i32, i32* %clamp, align 4, !dbg !3961, !tbaa !3962
  %conv = sext i32 %7 to i64, !dbg !3960
  %sub = sub i64 %5, %conv, !dbg !3963
  store i64 %sub, i64* %prec, align 8, !dbg !3964, !tbaa !2391
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3965, !tbaa !2505
  %len2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %8, i32 0, i32 3, !dbg !3967
  %9 = load i64, i64* %len2, align 8, !dbg !3967, !tbaa !2542
  %cmp = icmp sgt i64 %9, 0, !dbg !3968
  br i1 %cmp, label %land.lhs.true, label %if.end.27, !dbg !3969

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3970, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %10, i32 0, i32 2, !dbg !3972
  %11 = load i64, i64* %digits, align 8, !dbg !3972, !tbaa !2514
  %12 = load i64, i64* %prec, align 8, !dbg !3973, !tbaa !2391
  %cmp4 = icmp sgt i64 %11, %12, !dbg !3974
  br i1 %cmp4, label %if.then, label %if.end.27, !dbg !3975

if.then:                                          ; preds = %land.lhs.true
  %13 = load i64, i64* %prec, align 8, !dbg !3976, !tbaa !2391
  %cmp6 = icmp eq i64 %13, 0, !dbg !3979
  br i1 %cmp6, label %if.then.8, label %if.else, !dbg !3980

if.then.8:                                        ; preds = %if.then
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3981, !tbaa !2505
  call void @mpd_minalloc(%struct.mpd_t* %14), !dbg !3983
  %15 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3984, !tbaa !2505
  %digits9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %15, i32 0, i32 2, !dbg !3985
  store i64 0, i64* %digits9, align 8, !dbg !3986, !tbaa !2514
  %16 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !3987, !tbaa !2505
  %len10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %16, i32 0, i32 3, !dbg !3988
  store i64 0, i64* %len10, align 8, !dbg !3989, !tbaa !2542
  br label %if.end.26, !dbg !3990

if.else:                                          ; preds = %if.then
  %17 = load i64, i64* %prec, align 8, !dbg !3991, !tbaa !2391
  call void @_mpd_idiv_word(i64* %len, i64* %r, i64 %17, i64 19), !dbg !3993
  %18 = load i64, i64* %r, align 8, !dbg !3994, !tbaa !2391
  %cmp11 = icmp eq i64 %18, 0, !dbg !3995
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !3996

cond.true:                                        ; preds = %if.else
  %19 = load i64, i64* %len, align 8, !dbg !3997, !tbaa !2391
  br label %cond.end, !dbg !3996

cond.false:                                       ; preds = %if.else
  %20 = load i64, i64* %len, align 8, !dbg !3999, !tbaa !2391
  %add = add i64 %20, 1, !dbg !4001
  br label %cond.end, !dbg !3996

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %19, %cond.true ], [ %add, %cond.false ], !dbg !3996
  store i64 %cond, i64* %len, align 8, !dbg !4002, !tbaa !2391
  %21 = load i64, i64* %r, align 8, !dbg !4005, !tbaa !2391
  %cmp13 = icmp ne i64 %21, 0, !dbg !4007
  br i1 %cmp13, label %if.then.15, label %if.end, !dbg !4008

if.then.15:                                       ; preds = %cond.end
  %22 = load i64, i64* %r, align 8, !dbg !4009, !tbaa !2391
  %arrayidx = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %22, !dbg !4011
  %23 = load i64, i64* %arrayidx, align 8, !dbg !4011, !tbaa !2391
  %24 = load i64, i64* %len, align 8, !dbg !4012, !tbaa !2391
  %sub16 = sub i64 %24, 1, !dbg !4013
  %25 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4014, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %25, i32 0, i32 5, !dbg !4015
  %26 = load i64*, i64** %data, align 8, !dbg !4015, !tbaa !2546
  %arrayidx17 = getelementptr i64, i64* %26, i64 %sub16, !dbg !4014
  %27 = load i64, i64* %arrayidx17, align 8, !dbg !4016, !tbaa !2391
  %rem = urem i64 %27, %23, !dbg !4016
  store i64 %rem, i64* %arrayidx17, align 8, !dbg !4016, !tbaa !2391
  br label %if.end, !dbg !4017

if.end:                                           ; preds = %if.then.15, %cond.end
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4018, !tbaa !2505
  %data18 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %28, i32 0, i32 5, !dbg !4019
  %29 = load i64*, i64** %data18, align 8, !dbg !4019, !tbaa !2546
  %30 = load i64, i64* %len, align 8, !dbg !4020, !tbaa !2391
  %call = call i64 @_mpd_real_size(i64* %29, i64 %30), !dbg !4021
  store i64 %call, i64* %len, align 8, !dbg !4022, !tbaa !2391
  %31 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4023, !tbaa !2505
  %32 = load i64, i64* %len, align 8, !dbg !4024, !tbaa !2391
  %call19 = call i32 @mpd_qresize(%struct.mpd_t* %31, i64 %32, i32* %dummy), !dbg !4025
  %33 = load i64, i64* %len, align 8, !dbg !4026, !tbaa !2391
  %34 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4027, !tbaa !2505
  %len20 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %34, i32 0, i32 3, !dbg !4028
  store i64 %33, i64* %len20, align 8, !dbg !4029, !tbaa !2542
  %35 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4030, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %35), !dbg !4031
  %36 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4032, !tbaa !2505
  %call21 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %36), !dbg !4034
  %tobool = icmp ne i32 %call21, 0, !dbg !4034
  br i1 %tobool, label %if.then.22, label %if.end.25, !dbg !4035

if.then.22:                                       ; preds = %if.end
  %37 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4036, !tbaa !2505
  %digits23 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %37, i32 0, i32 2, !dbg !4038
  store i64 0, i64* %digits23, align 8, !dbg !4039, !tbaa !2514
  %38 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4040, !tbaa !2505
  %len24 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %38, i32 0, i32 3, !dbg !4041
  store i64 0, i64* %len24, align 8, !dbg !4042, !tbaa !2542
  br label %if.end.25, !dbg !4043

if.end.25:                                        ; preds = %if.then.22, %if.end
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.then.8
  br label %if.end.27, !dbg !4044

if.end.27:                                        ; preds = %if.end.26, %land.lhs.true, %entry
  %39 = bitcast i64* %r to i8*, !dbg !4045
  call void @llvm.lifetime.end(i64 8, i8* %39) #4, !dbg !4045
  %40 = bitcast i64* %len to i8*, !dbg !4045
  call void @llvm.lifetime.end(i64 8, i8* %40) #4, !dbg !4045
  %41 = bitcast i64* %prec to i8*, !dbg !4045
  call void @llvm.lifetime.end(i64 8, i8* %41) #4, !dbg !4045
  %42 = bitcast i32* %dummy to i8*, !dbg !4045
  call void @llvm.lifetime.end(i64 4, i8* %42) #4, !dbg !4045
  ret void, !dbg !4045
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_qcheck_nans(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %choice = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !513, metadata !2395), !dbg !4046
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !514, metadata !2395), !dbg !4047
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !515, metadata !2395), !dbg !4048
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !516, metadata !2395), !dbg !4049
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !517, metadata !2395), !dbg !4050
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4051, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !4052
  %1 = load i8, i8* %flags, align 1, !dbg !4052, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !4051
  %2 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4053, !tbaa !2505
  %flags1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 0, !dbg !4054
  %3 = load i8, i8* %flags1, align 1, !dbg !4054, !tbaa !2620
  %conv2 = zext i8 %3 to i32, !dbg !4053
  %or = or i32 %conv, %conv2, !dbg !4055
  %and = and i32 %or, 12, !dbg !4056
  %tobool = icmp ne i32 %and, 0, !dbg !4056
  br i1 %tobool, label %if.then, label %if.end.17, !dbg !4057

if.then:                                          ; preds = %entry
  %4 = bitcast %struct.mpd_t** %choice to i8*, !dbg !4058
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !4058
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %choice, metadata !518, metadata !2395), !dbg !4059
  %5 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4060, !tbaa !2505
  store %struct.mpd_t* %5, %struct.mpd_t** %choice, align 8, !dbg !4059, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4061, !tbaa !2505
  %call = call i32 @mpd_issnan(%struct.mpd_t* %6), !dbg !4063
  %tobool3 = icmp ne i32 %call, 0, !dbg !4063
  br i1 %tobool3, label %if.then.4, label %if.else, !dbg !4064

if.then.4:                                        ; preds = %if.then
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4065, !tbaa !2505
  store %struct.mpd_t* %7, %struct.mpd_t** %choice, align 8, !dbg !4067, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !4068, !tbaa !2505
  %9 = load i32, i32* %8, align 4, !dbg !4069, !tbaa !2554
  %or5 = or i32 %9, 256, !dbg !4069
  store i32 %or5, i32* %8, align 4, !dbg !4069, !tbaa !2554
  br label %if.end.15, !dbg !4070

if.else:                                          ; preds = %if.then
  %10 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4071, !tbaa !2505
  %call6 = call i32 @mpd_issnan(%struct.mpd_t* %10), !dbg !4073
  %tobool7 = icmp ne i32 %call6, 0, !dbg !4073
  br i1 %tobool7, label %if.then.8, label %if.else.10, !dbg !4074

if.then.8:                                        ; preds = %if.else
  %11 = load i32*, i32** %status.addr, align 8, !dbg !4075, !tbaa !2505
  %12 = load i32, i32* %11, align 4, !dbg !4077, !tbaa !2554
  %or9 = or i32 %12, 256, !dbg !4077
  store i32 %or9, i32* %11, align 4, !dbg !4077, !tbaa !2554
  br label %if.end.14, !dbg !4078

if.else.10:                                       ; preds = %if.else
  %13 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4079, !tbaa !2505
  %call11 = call i32 @mpd_isqnan(%struct.mpd_t* %13), !dbg !4081
  %tobool12 = icmp ne i32 %call11, 0, !dbg !4081
  br i1 %tobool12, label %if.then.13, label %if.end, !dbg !4082

if.then.13:                                       ; preds = %if.else.10
  %14 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4083, !tbaa !2505
  store %struct.mpd_t* %14, %struct.mpd_t** %choice, align 8, !dbg !4085, !tbaa !2505
  br label %if.end, !dbg !4086

if.end:                                           ; preds = %if.then.13, %if.else.10
  br label %if.end.14

if.end.14:                                        ; preds = %if.end, %if.then.8
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.then.4
  %15 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4087, !tbaa !2505
  %16 = load %struct.mpd_t*, %struct.mpd_t** %choice, align 8, !dbg !4088, !tbaa !2505
  %17 = load i32*, i32** %status.addr, align 8, !dbg !4089, !tbaa !2505
  %call16 = call i32 @mpd_qcopy(%struct.mpd_t* %15, %struct.mpd_t* %16, i32* %17), !dbg !4090
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4091, !tbaa !2505
  call void @mpd_set_qnan(%struct.mpd_t* %18), !dbg !4092
  %19 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4093, !tbaa !2505
  %20 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4094, !tbaa !2505
  call void @_mpd_fix_nan(%struct.mpd_t* %19, %struct.mpd_context_t* %20), !dbg !4095
  store i32 1, i32* %retval, !dbg !4096
  %21 = bitcast %struct.mpd_t** %choice to i8*, !dbg !4097
  call void @llvm.lifetime.end(i64 8, i8* %21) #4, !dbg !4097
  br label %return

if.end.17:                                        ; preds = %entry
  store i32 0, i32* %retval, !dbg !4098
  br label %return, !dbg !4098

return:                                           ; preds = %if.end.17, %if.end.15
  %22 = load i32, i32* %retval, !dbg !4099
  ret i32 %22, !dbg !4099
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_check_exp(%struct.mpd_t* %dec, %struct.mpd_context_t* %ctx, i32* %status) #3 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %adjexp = alloca i64, align 8
  %etiny = alloca i64, align 8
  %shift = alloca i64, align 8
  %rnd = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !1523, metadata !2395), !dbg !4100
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1524, metadata !2395), !dbg !4101
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1525, metadata !2395), !dbg !4102
  %0 = bitcast i64* %adjexp to i8*, !dbg !4103
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !4103
  call void @llvm.dbg.declare(metadata i64* %adjexp, metadata !1526, metadata !2395), !dbg !4104
  %1 = bitcast i64* %etiny to i8*, !dbg !4103
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !4103
  call void @llvm.dbg.declare(metadata i64* %etiny, metadata !1527, metadata !2395), !dbg !4105
  %2 = bitcast i64* %shift to i8*, !dbg !4103
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !4103
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !1528, metadata !2395), !dbg !4106
  %3 = bitcast i32* %rnd to i8*, !dbg !4107
  call void @llvm.lifetime.start(i64 4, i8* %3) #4, !dbg !4107
  call void @llvm.dbg.declare(metadata i32* %rnd, metadata !1529, metadata !2395), !dbg !4108
  %4 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4109, !tbaa !2505
  %call = call i64 @mpd_adjexp(%struct.mpd_t* %4), !dbg !4110
  store i64 %call, i64* %adjexp, align 8, !dbg !4111, !tbaa !2391
  %5 = load i64, i64* %adjexp, align 8, !dbg !4112, !tbaa !2391
  %6 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4114, !tbaa !2505
  %emax = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %6, i32 0, i32 1, !dbg !4115
  %7 = load i64, i64* %emax, align 8, !dbg !4115, !tbaa !2533
  %cmp = icmp sgt i64 %5, %7, !dbg !4116
  br i1 %cmp, label %if.then, label %if.else.37, !dbg !4117

if.then:                                          ; preds = %entry
  %8 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4118, !tbaa !2505
  %call1 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %8), !dbg !4121
  %tobool = icmp ne i32 %call1, 0, !dbg !4121
  br i1 %tobool, label %if.then.2, label %if.end.8, !dbg !4122

if.then.2:                                        ; preds = %if.then
  %9 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4123, !tbaa !2505
  %emax3 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %9, i32 0, i32 1, !dbg !4125
  %10 = load i64, i64* %emax3, align 8, !dbg !4125, !tbaa !2533
  %11 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4126, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 1, !dbg !4127
  store i64 %10, i64* %exp, align 8, !dbg !4128, !tbaa !2510
  %12 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4129, !tbaa !2505
  %clamp = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %12, i32 0, i32 7, !dbg !4131
  %13 = load i32, i32* %clamp, align 4, !dbg !4131, !tbaa !3962
  %tobool4 = icmp ne i32 %13, 0, !dbg !4129
  br i1 %tobool4, label %if.then.5, label %if.end, !dbg !4132

if.then.5:                                        ; preds = %if.then.2
  %14 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4133, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %14, i32 0, i32 0, !dbg !4135
  %15 = load i64, i64* %prec, align 8, !dbg !4135, !tbaa !2526
  %sub = sub i64 %15, 1, !dbg !4136
  %16 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4137, !tbaa !2505
  %exp6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %16, i32 0, i32 1, !dbg !4138
  %17 = load i64, i64* %exp6, align 8, !dbg !4139, !tbaa !2510
  %sub7 = sub i64 %17, %sub, !dbg !4139
  store i64 %sub7, i64* %exp6, align 8, !dbg !4139, !tbaa !2510
  br label %if.end, !dbg !4140

if.end:                                           ; preds = %if.then.5, %if.then.2
  %18 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4141, !tbaa !2505
  call void @mpd_zerocoeff(%struct.mpd_t* %18), !dbg !4142
  %19 = load i32*, i32** %status.addr, align 8, !dbg !4143, !tbaa !2505
  %20 = load i32, i32* %19, align 4, !dbg !4144, !tbaa !2554
  %or = or i32 %20, 1, !dbg !4144
  store i32 %or, i32* %19, align 4, !dbg !4144, !tbaa !2554
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4145

if.end.8:                                         ; preds = %if.then
  %21 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4146, !tbaa !2505
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %21, i32 0, i32 6, !dbg !4147
  %22 = load i32, i32* %round, align 4, !dbg !4147, !tbaa !4148
  br label %NodeBlock.11

NodeBlock.11:                                     ; preds = %if.end.8
  %Pivot.12 = icmp slt i32 %22, 3
  br i1 %Pivot.12, label %NodeBlock.1, label %NodeBlock.9

NodeBlock.9:                                      ; preds = %NodeBlock.11
  %Pivot.10 = icmp slt i32 %22, 7
  br i1 %Pivot.10, label %NodeBlock.3, label %NodeBlock.7

NodeBlock.7:                                      ; preds = %NodeBlock.9
  %Pivot.8 = icmp slt i32 %22, 8
  br i1 %Pivot.8, label %sw.bb.10, label %LeafBlock.5

LeafBlock.5:                                      ; preds = %NodeBlock.7
  %SwitchLeaf6 = icmp eq i32 %22, 8
  br i1 %SwitchLeaf6, label %sw.bb, label %NewDefault

NodeBlock.3:                                      ; preds = %NodeBlock.9
  %Pivot.4 = icmp slt i32 %22, 4
  br i1 %Pivot.4, label %sw.bb.25, label %sw.bb

NodeBlock.1:                                      ; preds = %NodeBlock.11
  %Pivot.2 = icmp slt i32 %22, 1
  br i1 %Pivot.2, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock.1
  %Pivot = icmp slt i32 %22, 2
  br i1 %Pivot, label %sw.bb.10, label %sw.bb.15

LeafBlock:                                        ; preds = %NodeBlock.1
  %SwitchLeaf = icmp eq i32 %22, 0
  br i1 %SwitchLeaf, label %sw.bb, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock.5, %NodeBlock.3, %LeafBlock
  %23 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4149, !tbaa !2505
  %24 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4151, !tbaa !2505
  %call9 = call zeroext i8 @mpd_sign(%struct.mpd_t* %24), !dbg !4152
  call void @mpd_setspecial(%struct.mpd_t* %23, i8 zeroext %call9, i8 zeroext 2), !dbg !4153
  br label %sw.epilog, !dbg !4154

sw.bb.10:                                         ; preds = %NodeBlock.7, %NodeBlock
  %25 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4155, !tbaa !2505
  %26 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4156, !tbaa !2505
  %27 = load i32*, i32** %status.addr, align 8, !dbg !4157, !tbaa !2505
  call void @mpd_qmaxcoeff(%struct.mpd_t* %25, %struct.mpd_context_t* %26, i32* %27), !dbg !4158
  %28 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4159, !tbaa !2505
  %emax11 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %28, i32 0, i32 1, !dbg !4160
  %29 = load i64, i64* %emax11, align 8, !dbg !4160, !tbaa !2533
  %30 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4161, !tbaa !2505
  %prec12 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %30, i32 0, i32 0, !dbg !4162
  %31 = load i64, i64* %prec12, align 8, !dbg !4162, !tbaa !2526
  %sub13 = sub i64 %29, %31, !dbg !4163
  %add = add i64 %sub13, 1, !dbg !4164
  %32 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4165, !tbaa !2505
  %exp14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %32, i32 0, i32 1, !dbg !4166
  store i64 %add, i64* %exp14, align 8, !dbg !4167, !tbaa !2510
  br label %sw.epilog, !dbg !4168

sw.bb.15:                                         ; preds = %NodeBlock
  %33 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4169, !tbaa !2505
  %call16 = call i32 @mpd_isnegative(%struct.mpd_t* %33), !dbg !4171
  %tobool17 = icmp ne i32 %call16, 0, !dbg !4171
  br i1 %tobool17, label %if.then.18, label %if.else, !dbg !4172

if.then.18:                                       ; preds = %sw.bb.15
  %34 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4173, !tbaa !2505
  %35 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4175, !tbaa !2505
  %36 = load i32*, i32** %status.addr, align 8, !dbg !4176, !tbaa !2505
  call void @mpd_qmaxcoeff(%struct.mpd_t* %34, %struct.mpd_context_t* %35, i32* %36), !dbg !4177
  %37 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4178, !tbaa !2505
  %emax19 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %37, i32 0, i32 1, !dbg !4179
  %38 = load i64, i64* %emax19, align 8, !dbg !4179, !tbaa !2533
  %39 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4180, !tbaa !2505
  %prec20 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %39, i32 0, i32 0, !dbg !4181
  %40 = load i64, i64* %prec20, align 8, !dbg !4181, !tbaa !2526
  %sub21 = sub i64 %38, %40, !dbg !4182
  %add22 = add i64 %sub21, 1, !dbg !4183
  %41 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4184, !tbaa !2505
  %exp23 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %41, i32 0, i32 1, !dbg !4185
  store i64 %add22, i64* %exp23, align 8, !dbg !4186, !tbaa !2510
  br label %if.end.24, !dbg !4187

if.else:                                          ; preds = %sw.bb.15
  %42 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4188, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %42, i8 zeroext 0, i8 zeroext 2), !dbg !4190
  br label %if.end.24

if.end.24:                                        ; preds = %if.else, %if.then.18
  br label %sw.epilog, !dbg !4191

sw.bb.25:                                         ; preds = %NodeBlock.3
  %43 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4192, !tbaa !2505
  %call26 = call i32 @mpd_ispositive(%struct.mpd_t* %43), !dbg !4194
  %tobool27 = icmp ne i32 %call26, 0, !dbg !4194
  br i1 %tobool27, label %if.then.28, label %if.else.34, !dbg !4195

if.then.28:                                       ; preds = %sw.bb.25
  %44 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4196, !tbaa !2505
  %45 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4198, !tbaa !2505
  %46 = load i32*, i32** %status.addr, align 8, !dbg !4199, !tbaa !2505
  call void @mpd_qmaxcoeff(%struct.mpd_t* %44, %struct.mpd_context_t* %45, i32* %46), !dbg !4200
  %47 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4201, !tbaa !2505
  %emax29 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %47, i32 0, i32 1, !dbg !4202
  %48 = load i64, i64* %emax29, align 8, !dbg !4202, !tbaa !2533
  %49 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4203, !tbaa !2505
  %prec30 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %49, i32 0, i32 0, !dbg !4204
  %50 = load i64, i64* %prec30, align 8, !dbg !4204, !tbaa !2526
  %sub31 = sub i64 %48, %50, !dbg !4205
  %add32 = add i64 %sub31, 1, !dbg !4206
  %51 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4207, !tbaa !2505
  %exp33 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %51, i32 0, i32 1, !dbg !4208
  store i64 %add32, i64* %exp33, align 8, !dbg !4209, !tbaa !2510
  br label %if.end.35, !dbg !4210

if.else.34:                                       ; preds = %sw.bb.25
  %52 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4211, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %52, i8 zeroext 1, i8 zeroext 2), !dbg !4213
  br label %if.end.35

if.end.35:                                        ; preds = %if.else.34, %if.then.28
  br label %sw.epilog, !dbg !4214

NewDefault:                                       ; preds = %LeafBlock.5, %LeafBlock
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  call void @abort() #9, !dbg !4215
  unreachable, !dbg !4215

sw.epilog:                                        ; preds = %if.end.35, %if.end.24, %sw.bb.10, %sw.bb
  %53 = load i32*, i32** %status.addr, align 8, !dbg !4216, !tbaa !2505
  %54 = load i32, i32* %53, align 4, !dbg !4217, !tbaa !2554
  %or36 = or i32 %54, 6208, !dbg !4217
  store i32 %or36, i32* %53, align 4, !dbg !4217, !tbaa !2554
  br label %if.end.98, !dbg !4218

if.else.37:                                       ; preds = %entry
  %55 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4219, !tbaa !2505
  %clamp38 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %55, i32 0, i32 7, !dbg !4221
  %56 = load i32, i32* %clamp38, align 4, !dbg !4221, !tbaa !3962
  %tobool39 = icmp ne i32 %56, 0, !dbg !4219
  br i1 %tobool39, label %land.lhs.true, label %if.else.61, !dbg !4222

land.lhs.true:                                    ; preds = %if.else.37
  %57 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4223, !tbaa !2505
  %exp40 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %57, i32 0, i32 1, !dbg !4225
  %58 = load i64, i64* %exp40, align 8, !dbg !4225, !tbaa !2510
  %59 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4226, !tbaa !2505
  %call41 = call i64 @mpd_etop(%struct.mpd_context_t* %59), !dbg !4227
  %cmp42 = icmp sgt i64 %58, %call41, !dbg !4228
  br i1 %cmp42, label %if.then.43, label %if.else.61, !dbg !4229

if.then.43:                                       ; preds = %land.lhs.true
  %60 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4230, !tbaa !2505
  %exp44 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %60, i32 0, i32 1, !dbg !4232
  %61 = load i64, i64* %exp44, align 8, !dbg !4232, !tbaa !2510
  %62 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4233, !tbaa !2505
  %call45 = call i64 @mpd_etop(%struct.mpd_context_t* %62), !dbg !4234
  %sub46 = sub i64 %61, %call45, !dbg !4235
  store i64 %sub46, i64* %shift, align 8, !dbg !4236, !tbaa !2391
  %63 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4237, !tbaa !2505
  %64 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4239, !tbaa !2505
  %65 = load i64, i64* %shift, align 8, !dbg !4240, !tbaa !2391
  %66 = load i32*, i32** %status.addr, align 8, !dbg !4241, !tbaa !2505
  %call47 = call i32 @mpd_qshiftl(%struct.mpd_t* %63, %struct.mpd_t* %64, i64 %65, i32* %66), !dbg !4242
  %tobool48 = icmp ne i32 %call47, 0, !dbg !4242
  br i1 %tobool48, label %if.end.50, label %if.then.49, !dbg !4243

if.then.49:                                       ; preds = %if.then.43
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4244

if.end.50:                                        ; preds = %if.then.43
  %67 = load i64, i64* %shift, align 8, !dbg !4246, !tbaa !2391
  %68 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4247, !tbaa !2505
  %exp51 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %68, i32 0, i32 1, !dbg !4248
  %69 = load i64, i64* %exp51, align 8, !dbg !4249, !tbaa !2510
  %sub52 = sub i64 %69, %67, !dbg !4249
  store i64 %sub52, i64* %exp51, align 8, !dbg !4249, !tbaa !2510
  %70 = load i32*, i32** %status.addr, align 8, !dbg !4250, !tbaa !2505
  %71 = load i32, i32* %70, align 4, !dbg !4251, !tbaa !2554
  %or53 = or i32 %71, 1, !dbg !4251
  store i32 %or53, i32* %70, align 4, !dbg !4251, !tbaa !2554
  %72 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4252, !tbaa !2505
  %call54 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %72), !dbg !4254
  %tobool55 = icmp ne i32 %call54, 0, !dbg !4254
  br i1 %tobool55, label %if.end.60, label %land.lhs.true.56, !dbg !4255

land.lhs.true.56:                                 ; preds = %if.end.50
  %73 = load i64, i64* %adjexp, align 8, !dbg !4256, !tbaa !2391
  %74 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4258, !tbaa !2505
  %emin = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %74, i32 0, i32 2, !dbg !4259
  %75 = load i64, i64* %emin, align 8, !dbg !4259, !tbaa !2521
  %cmp57 = icmp slt i64 %73, %75, !dbg !4260
  br i1 %cmp57, label %if.then.58, label %if.end.60, !dbg !4261

if.then.58:                                       ; preds = %land.lhs.true.56
  %76 = load i32*, i32** %status.addr, align 8, !dbg !4262, !tbaa !2505
  %77 = load i32, i32* %76, align 4, !dbg !4264, !tbaa !2554
  %or59 = or i32 %77, 8192, !dbg !4264
  store i32 %or59, i32* %76, align 4, !dbg !4264, !tbaa !2554
  br label %if.end.60, !dbg !4265

if.end.60:                                        ; preds = %if.then.58, %land.lhs.true.56, %if.end.50
  br label %if.end.97, !dbg !4266

if.else.61:                                       ; preds = %land.lhs.true, %if.else.37
  %78 = load i64, i64* %adjexp, align 8, !dbg !4267, !tbaa !2391
  %79 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4269, !tbaa !2505
  %emin62 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %79, i32 0, i32 2, !dbg !4270
  %80 = load i64, i64* %emin62, align 8, !dbg !4270, !tbaa !2521
  %cmp63 = icmp slt i64 %78, %80, !dbg !4271
  br i1 %cmp63, label %if.then.64, label %if.end.96, !dbg !4272

if.then.64:                                       ; preds = %if.else.61
  %81 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4273, !tbaa !2505
  %call65 = call i64 @mpd_etiny(%struct.mpd_context_t* %81), !dbg !4275
  store i64 %call65, i64* %etiny, align 8, !dbg !4276, !tbaa !2391
  %82 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4277, !tbaa !2505
  %call66 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %82), !dbg !4279
  %tobool67 = icmp ne i32 %call66, 0, !dbg !4279
  br i1 %tobool67, label %if.then.68, label %if.end.75, !dbg !4280

if.then.68:                                       ; preds = %if.then.64
  %83 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4281, !tbaa !2505
  %exp69 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %83, i32 0, i32 1, !dbg !4284
  %84 = load i64, i64* %exp69, align 8, !dbg !4284, !tbaa !2510
  %85 = load i64, i64* %etiny, align 8, !dbg !4285, !tbaa !2391
  %cmp70 = icmp slt i64 %84, %85, !dbg !4286
  br i1 %cmp70, label %if.then.71, label %if.end.74, !dbg !4287

if.then.71:                                       ; preds = %if.then.68
  %86 = load i64, i64* %etiny, align 8, !dbg !4288, !tbaa !2391
  %87 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4290, !tbaa !2505
  %exp72 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %87, i32 0, i32 1, !dbg !4291
  store i64 %86, i64* %exp72, align 8, !dbg !4292, !tbaa !2510
  %88 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4293, !tbaa !2505
  call void @mpd_zerocoeff(%struct.mpd_t* %88), !dbg !4294
  %89 = load i32*, i32** %status.addr, align 8, !dbg !4295, !tbaa !2505
  %90 = load i32, i32* %89, align 4, !dbg !4296, !tbaa !2554
  %or73 = or i32 %90, 1, !dbg !4296
  store i32 %or73, i32* %89, align 4, !dbg !4296, !tbaa !2554
  br label %if.end.74, !dbg !4297

if.end.74:                                        ; preds = %if.then.71, %if.then.68
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4298

if.end.75:                                        ; preds = %if.then.64
  %91 = load i32*, i32** %status.addr, align 8, !dbg !4299, !tbaa !2505
  %92 = load i32, i32* %91, align 4, !dbg !4300, !tbaa !2554
  %or76 = or i32 %92, 8192, !dbg !4300
  store i32 %or76, i32* %91, align 4, !dbg !4300, !tbaa !2554
  %93 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4301, !tbaa !2505
  %exp77 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %93, i32 0, i32 1, !dbg !4303
  %94 = load i64, i64* %exp77, align 8, !dbg !4303, !tbaa !2510
  %95 = load i64, i64* %etiny, align 8, !dbg !4304, !tbaa !2391
  %cmp78 = icmp slt i64 %94, %95, !dbg !4305
  br i1 %cmp78, label %if.then.79, label %if.end.95, !dbg !4306

if.then.79:                                       ; preds = %if.end.75
  %96 = load i64, i64* %etiny, align 8, !dbg !4307, !tbaa !2391
  %97 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4309, !tbaa !2505
  %exp80 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %97, i32 0, i32 1, !dbg !4310
  %98 = load i64, i64* %exp80, align 8, !dbg !4310, !tbaa !2510
  %sub81 = sub i64 %96, %98, !dbg !4311
  store i64 %sub81, i64* %shift, align 8, !dbg !4312, !tbaa !2391
  %99 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4313, !tbaa !2505
  %100 = load i64, i64* %shift, align 8, !dbg !4314, !tbaa !2391
  %call82 = call i64 @mpd_qshiftr_inplace(%struct.mpd_t* %99, i64 %100), !dbg !4315
  %conv = trunc i64 %call82 to i32, !dbg !4316
  store i32 %conv, i32* %rnd, align 4, !dbg !4317, !tbaa !2554
  %101 = load i64, i64* %etiny, align 8, !dbg !4318, !tbaa !2391
  %102 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4319, !tbaa !2505
  %exp83 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %102, i32 0, i32 1, !dbg !4320
  store i64 %101, i64* %exp83, align 8, !dbg !4321, !tbaa !2510
  %103 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4322, !tbaa !2505
  %104 = load i32, i32* %rnd, align 4, !dbg !4323, !tbaa !2554
  %conv84 = sext i32 %104 to i64, !dbg !4323
  %105 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4324, !tbaa !2505
  %106 = load i32*, i32** %status.addr, align 8, !dbg !4325, !tbaa !2505
  call void @_mpd_apply_round_excess(%struct.mpd_t* %103, i64 %conv84, %struct.mpd_context_t* %105, i32* %106), !dbg !4326
  %107 = load i32*, i32** %status.addr, align 8, !dbg !4327, !tbaa !2505
  %108 = load i32, i32* %107, align 4, !dbg !4328, !tbaa !2554
  %or85 = or i32 %108, 4096, !dbg !4328
  store i32 %or85, i32* %107, align 4, !dbg !4328, !tbaa !2554
  %109 = load i32, i32* %rnd, align 4, !dbg !4329, !tbaa !2554
  %tobool86 = icmp ne i32 %109, 0, !dbg !4329
  br i1 %tobool86, label %if.then.87, label %if.end.94, !dbg !4331

if.then.87:                                       ; preds = %if.then.79
  %110 = load i32*, i32** %status.addr, align 8, !dbg !4332, !tbaa !2505
  %111 = load i32, i32* %110, align 4, !dbg !4334, !tbaa !2554
  %or88 = or i32 %111, 16448, !dbg !4334
  store i32 %or88, i32* %110, align 4, !dbg !4334, !tbaa !2554
  %112 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4335, !tbaa !2505
  %call89 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %112), !dbg !4337
  %tobool90 = icmp ne i32 %call89, 0, !dbg !4337
  br i1 %tobool90, label %if.then.91, label %if.end.93, !dbg !4338

if.then.91:                                       ; preds = %if.then.87
  %113 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4339, !tbaa !2505
  call void @mpd_zerocoeff(%struct.mpd_t* %113), !dbg !4341
  %114 = load i32*, i32** %status.addr, align 8, !dbg !4342, !tbaa !2505
  %115 = load i32, i32* %114, align 4, !dbg !4343, !tbaa !2554
  %or92 = or i32 %115, 1, !dbg !4343
  store i32 %or92, i32* %114, align 4, !dbg !4343, !tbaa !2554
  br label %if.end.93, !dbg !4344

if.end.93:                                        ; preds = %if.then.91, %if.then.87
  br label %if.end.94, !dbg !4345

if.end.94:                                        ; preds = %if.end.93, %if.then.79
  br label %if.end.95, !dbg !4346

if.end.95:                                        ; preds = %if.end.94, %if.end.75
  br label %if.end.96, !dbg !4347

if.end.96:                                        ; preds = %if.end.95, %if.else.61
  br label %if.end.97

if.end.97:                                        ; preds = %if.end.96, %if.end.60
  br label %if.end.98

if.end.98:                                        ; preds = %if.end.97, %sw.epilog
  store i32 0, i32* %cleanup.dest.slot, !dbg !4348
  br label %cleanup, !dbg !4348

cleanup:                                          ; preds = %if.end.98, %if.end.74, %if.then.49, %if.end
  %116 = bitcast i32* %rnd to i8*, !dbg !4349
  call void @llvm.lifetime.end(i64 4, i8* %116) #4, !dbg !4349
  %117 = bitcast i64* %shift to i8*, !dbg !4349
  call void @llvm.lifetime.end(i64 8, i8* %117) #4, !dbg !4349
  %118 = bitcast i64* %etiny to i8*, !dbg !4349
  call void @llvm.lifetime.end(i64 8, i8* %118) #4, !dbg !4349
  %119 = bitcast i64* %adjexp to i8*, !dbg !4349
  call void @llvm.lifetime.end(i64 8, i8* %119) #4, !dbg !4349
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !4348

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_check_round(%struct.mpd_t* %dec, %struct.mpd_context_t* %ctx, i32* %status) #3 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %rnd = alloca i64, align 8
  %shift = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !1532, metadata !2395), !dbg !4351
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1533, metadata !2395), !dbg !4352
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1534, metadata !2395), !dbg !4353
  %0 = bitcast i64* %rnd to i8*, !dbg !4354
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !4354
  call void @llvm.dbg.declare(metadata i64* %rnd, metadata !1535, metadata !2395), !dbg !4355
  %1 = bitcast i64* %shift to i8*, !dbg !4356
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !4356
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !1536, metadata !2395), !dbg !4357
  %2 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4358, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %2), !dbg !4360
  %tobool = icmp ne i32 %call, 0, !dbg !4360
  br i1 %tobool, label %if.then, label %if.end, !dbg !4361

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4362

if.end:                                           ; preds = %entry
  %3 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4364, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 2, !dbg !4366
  %4 = load i64, i64* %digits, align 8, !dbg !4366, !tbaa !2514
  %5 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4367, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %5, i32 0, i32 0, !dbg !4368
  %6 = load i64, i64* %prec, align 8, !dbg !4368, !tbaa !2526
  %cmp = icmp sgt i64 %4, %6, !dbg !4369
  br i1 %cmp, label %if.then.1, label %if.end.9, !dbg !4370

if.then.1:                                        ; preds = %if.end
  %7 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4371, !tbaa !2505
  %digits2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %7, i32 0, i32 2, !dbg !4373
  %8 = load i64, i64* %digits2, align 8, !dbg !4373, !tbaa !2514
  %9 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4374, !tbaa !2505
  %prec3 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %9, i32 0, i32 0, !dbg !4375
  %10 = load i64, i64* %prec3, align 8, !dbg !4375, !tbaa !2526
  %sub = sub i64 %8, %10, !dbg !4376
  store i64 %sub, i64* %shift, align 8, !dbg !4377, !tbaa !2391
  %11 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4378, !tbaa !2505
  %12 = load i64, i64* %shift, align 8, !dbg !4379, !tbaa !2391
  %call4 = call i64 @mpd_qshiftr_inplace(%struct.mpd_t* %11, i64 %12), !dbg !4380
  store i64 %call4, i64* %rnd, align 8, !dbg !4381, !tbaa !2391
  %13 = load i64, i64* %shift, align 8, !dbg !4382, !tbaa !2391
  %14 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4383, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %14, i32 0, i32 1, !dbg !4384
  %15 = load i64, i64* %exp, align 8, !dbg !4385, !tbaa !2510
  %add = add i64 %15, %13, !dbg !4385
  store i64 %add, i64* %exp, align 8, !dbg !4385, !tbaa !2510
  %16 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4386, !tbaa !2505
  %17 = load i64, i64* %rnd, align 8, !dbg !4387, !tbaa !2391
  %18 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4388, !tbaa !2505
  %19 = load i32*, i32** %status.addr, align 8, !dbg !4389, !tbaa !2505
  call void @_mpd_apply_round(%struct.mpd_t* %16, i64 %17, %struct.mpd_context_t* %18, i32* %19), !dbg !4390
  %20 = load i32*, i32** %status.addr, align 8, !dbg !4391, !tbaa !2505
  %21 = load i32, i32* %20, align 4, !dbg !4392, !tbaa !2554
  %or = or i32 %21, 4096, !dbg !4392
  store i32 %or, i32* %20, align 4, !dbg !4392, !tbaa !2554
  %22 = load i64, i64* %rnd, align 8, !dbg !4393, !tbaa !2391
  %tobool5 = icmp ne i64 %22, 0, !dbg !4393
  br i1 %tobool5, label %if.then.6, label %if.end.8, !dbg !4395

if.then.6:                                        ; preds = %if.then.1
  %23 = load i32*, i32** %status.addr, align 8, !dbg !4396, !tbaa !2505
  %24 = load i32, i32* %23, align 4, !dbg !4398, !tbaa !2554
  %or7 = or i32 %24, 64, !dbg !4398
  store i32 %or7, i32* %23, align 4, !dbg !4398, !tbaa !2554
  br label %if.end.8, !dbg !4399

if.end.8:                                         ; preds = %if.then.6, %if.then.1
  br label %if.end.9, !dbg !4400

if.end.9:                                         ; preds = %if.end.8, %if.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !4401
  br label %cleanup, !dbg !4401

cleanup:                                          ; preds = %if.end.9, %if.then
  %25 = bitcast i64* %shift to i8*, !dbg !4402
  call void @llvm.lifetime.end(i64 8, i8* %25) #4, !dbg !4402
  %26 = bitcast i64* %rnd to i8*, !dbg !4402
  call void @llvm.lifetime.end(i64 8, i8* %26) #4, !dbg !4402
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !4401

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define hidden %struct.mpd_t* @mpd_qncopy(%struct.mpd_t* %a) #0 {
entry:
  %retval = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %result = alloca %struct.mpd_t*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !537, metadata !2395), !dbg !4404
  %0 = bitcast %struct.mpd_t** %result to i8*, !dbg !4405
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !4405
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result, metadata !538, metadata !2395), !dbg !4406
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4407, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %1, i32 0, i32 3, !dbg !4409
  %2 = load i64, i64* %len, align 8, !dbg !4409, !tbaa !2542
  %call = call %struct.mpd_t* @mpd_qnew_size(i64 %2), !dbg !4410
  store %struct.mpd_t* %call, %struct.mpd_t** %result, align 8, !dbg !4411, !tbaa !2505
  %cmp = icmp eq %struct.mpd_t* %call, null, !dbg !4412
  br i1 %cmp, label %if.then, label %if.end, !dbg !4413

if.then:                                          ; preds = %entry
  store %struct.mpd_t* null, %struct.mpd_t** %retval, !dbg !4414
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4414

if.end:                                           ; preds = %entry
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result, align 8, !dbg !4416, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 5, !dbg !4417
  %4 = load i64*, i64** %data, align 8, !dbg !4417, !tbaa !2546
  %5 = bitcast i64* %4 to i8*, !dbg !4418
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4419, !tbaa !2505
  %data1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %6, i32 0, i32 5, !dbg !4420
  %7 = load i64*, i64** %data1, align 8, !dbg !4420, !tbaa !2546
  %8 = bitcast i64* %7 to i8*, !dbg !4418
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4421, !tbaa !2505
  %len2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 3, !dbg !4422
  %10 = load i64, i64* %len2, align 8, !dbg !4422, !tbaa !2542
  %mul = mul i64 %10, 8, !dbg !4423
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %8, i64 %mul, i32 8, i1 false), !dbg !4418
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result, align 8, !dbg !4424, !tbaa !2505
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4425, !tbaa !2505
  call void @mpd_copy_flags(%struct.mpd_t* %11, %struct.mpd_t* %12), !dbg !4426
  %13 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4427, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %13, i32 0, i32 1, !dbg !4428
  %14 = load i64, i64* %exp, align 8, !dbg !4428, !tbaa !2510
  %15 = load %struct.mpd_t*, %struct.mpd_t** %result, align 8, !dbg !4429, !tbaa !2505
  %exp3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %15, i32 0, i32 1, !dbg !4430
  store i64 %14, i64* %exp3, align 8, !dbg !4431, !tbaa !2510
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4432, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %16, i32 0, i32 2, !dbg !4433
  %17 = load i64, i64* %digits, align 8, !dbg !4433, !tbaa !2514
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result, align 8, !dbg !4434, !tbaa !2505
  %digits4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %18, i32 0, i32 2, !dbg !4435
  store i64 %17, i64* %digits4, align 8, !dbg !4436, !tbaa !2514
  %19 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4437, !tbaa !2505
  %len5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %19, i32 0, i32 3, !dbg !4438
  %20 = load i64, i64* %len5, align 8, !dbg !4438, !tbaa !2542
  %21 = load %struct.mpd_t*, %struct.mpd_t** %result, align 8, !dbg !4439, !tbaa !2505
  %len6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %21, i32 0, i32 3, !dbg !4440
  store i64 %20, i64* %len6, align 8, !dbg !4441, !tbaa !2542
  %22 = load %struct.mpd_t*, %struct.mpd_t** %result, align 8, !dbg !4442, !tbaa !2505
  store %struct.mpd_t* %22, %struct.mpd_t** %retval, !dbg !4443
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4443

cleanup:                                          ; preds = %if.end, %if.then
  %23 = bitcast %struct.mpd_t** %result to i8*, !dbg !4444
  call void @llvm.lifetime.end(i64 8, i8* %23) #4, !dbg !4444
  %24 = load %struct.mpd_t*, %struct.mpd_t** %retval, !dbg !4444
  ret %struct.mpd_t* %24, !dbg !4444
}

declare hidden %struct.mpd_t* @mpd_qnew_size(i64) #5

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_qcopy_abs(%struct.mpd_t* %result, %struct.mpd_t* %a, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !541, metadata !2395), !dbg !4445
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !542, metadata !2395), !dbg !4446
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !543, metadata !2395), !dbg !4447
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4448, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4450, !tbaa !2505
  %2 = load i32*, i32** %status.addr, align 8, !dbg !4451, !tbaa !2505
  %call = call i32 @mpd_qcopy(%struct.mpd_t* %0, %struct.mpd_t* %1, i32* %2), !dbg !4452
  %tobool = icmp ne i32 %call, 0, !dbg !4452
  br i1 %tobool, label %if.end, label %if.then, !dbg !4453

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !4454
  br label %return, !dbg !4454

if.end:                                           ; preds = %entry
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4456, !tbaa !2505
  call void @mpd_set_positive(%struct.mpd_t* %3), !dbg !4457
  store i32 1, i32* %retval, !dbg !4458
  br label %return, !dbg !4458

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, !dbg !4459
  ret i32 %4, !dbg !4459
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_qcopy_negate(%struct.mpd_t* %result, %struct.mpd_t* %a, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !546, metadata !2395), !dbg !4460
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !547, metadata !2395), !dbg !4461
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !548, metadata !2395), !dbg !4462
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4463, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4465, !tbaa !2505
  %2 = load i32*, i32** %status.addr, align 8, !dbg !4466, !tbaa !2505
  %call = call i32 @mpd_qcopy(%struct.mpd_t* %0, %struct.mpd_t* %1, i32* %2), !dbg !4467
  %tobool = icmp ne i32 %call, 0, !dbg !4467
  br i1 %tobool, label %if.end, label %if.then, !dbg !4468

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !4469
  br label %return, !dbg !4469

if.end:                                           ; preds = %entry
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4471, !tbaa !2505
  call void @_mpd_negate(%struct.mpd_t* %3), !dbg !4472
  store i32 1, i32* %retval, !dbg !4473
  br label %return, !dbg !4473

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, !dbg !4474
  ret i32 %4, !dbg !4474
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_negate(%struct.mpd_t* %dec) #3 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !1556, metadata !2395), !dbg !4475
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !4476, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !4477
  %1 = load i8, i8* %flags, align 1, !dbg !4478, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !4478
  %xor = xor i32 %conv, 1, !dbg !4478
  %conv1 = trunc i32 %xor to i8, !dbg !4478
  store i8 %conv1, i8* %flags, align 1, !dbg !4478, !tbaa !2620
  ret void, !dbg !4479
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_qcopy_sign(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  %sign_b = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !553, metadata !2395), !dbg !4480
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !554, metadata !2395), !dbg !4481
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !555, metadata !2395), !dbg !4482
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !556, metadata !2395), !dbg !4483
  call void @llvm.lifetime.start(i64 1, i8* %sign_b) #4, !dbg !4484
  call void @llvm.dbg.declare(metadata i8* %sign_b, metadata !557, metadata !2395), !dbg !4485
  %0 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4486, !tbaa !2505
  %call = call zeroext i8 @mpd_sign(%struct.mpd_t* %0), !dbg !4487
  store i8 %call, i8* %sign_b, align 1, !dbg !4485, !tbaa !2930
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4488, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4490, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !4491, !tbaa !2505
  %call1 = call i32 @mpd_qcopy(%struct.mpd_t* %1, %struct.mpd_t* %2, i32* %3), !dbg !4492
  %tobool = icmp ne i32 %call1, 0, !dbg !4492
  br i1 %tobool, label %if.end, label %if.then, !dbg !4493

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !4494
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4494

if.end:                                           ; preds = %entry
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4496, !tbaa !2505
  %5 = load i8, i8* %sign_b, align 1, !dbg !4497, !tbaa !2930
  call void @mpd_set_sign(%struct.mpd_t* %4, i8 zeroext %5), !dbg !4498
  store i32 1, i32* %retval, !dbg !4499
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4499

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end(i64 1, i8* %sign_b) #4, !dbg !4500
  %6 = load i32, i32* %retval, !dbg !4500
  ret i32 %6, !dbg !4500
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_qcmp(%struct.mpd_t* %a, %struct.mpd_t* %b, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !562, metadata !2395), !dbg !4501
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !563, metadata !2395), !dbg !4502
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !564, metadata !2395), !dbg !4503
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4504, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %0), !dbg !4506
  %tobool = icmp ne i32 %call, 0, !dbg !4506
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4507

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4508, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %1), !dbg !4510
  %tobool2 = icmp ne i32 %call1, 0, !dbg !4510
  br i1 %tobool2, label %if.then, label %if.end.9, !dbg !4511

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4512, !tbaa !2505
  %call3 = call i32 @mpd_isnan(%struct.mpd_t* %2), !dbg !4515
  %tobool4 = icmp ne i32 %call3, 0, !dbg !4515
  br i1 %tobool4, label %if.then.8, label %lor.lhs.false.5, !dbg !4516

lor.lhs.false.5:                                  ; preds = %if.then
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4517, !tbaa !2505
  %call6 = call i32 @mpd_isnan(%struct.mpd_t* %3), !dbg !4519
  %tobool7 = icmp ne i32 %call6, 0, !dbg !4519
  br i1 %tobool7, label %if.then.8, label %if.end, !dbg !4520

if.then.8:                                        ; preds = %lor.lhs.false.5, %if.then
  %4 = load i32*, i32** %status.addr, align 8, !dbg !4521, !tbaa !2505
  %5 = load i32, i32* %4, align 4, !dbg !4523, !tbaa !2554
  %or = or i32 %5, 256, !dbg !4523
  store i32 %or, i32* %4, align 4, !dbg !4523, !tbaa !2554
  store i32 2147483647, i32* %retval, !dbg !4524
  br label %return, !dbg !4524

if.end:                                           ; preds = %lor.lhs.false.5
  br label %if.end.9, !dbg !4525

if.end.9:                                         ; preds = %if.end, %lor.lhs.false
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4526, !tbaa !2505
  %7 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4527, !tbaa !2505
  %call10 = call i32 @_mpd_cmp(%struct.mpd_t* %6, %struct.mpd_t* %7), !dbg !4528
  store i32 %call10, i32* %retval, !dbg !4529
  br label %return, !dbg !4529

return:                                           ; preds = %if.end.9, %if.then.8
  %8 = load i32, i32* %retval, !dbg !4530
  ret i32 %8, !dbg !4530
}

; Function Attrs: nounwind uwtable
define internal i32 @_mpd_cmp(%struct.mpd_t* %a, %struct.mpd_t* %b) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %adjexp_a = alloca i64, align 8
  %adjexp_b = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1559, metadata !2395), !dbg !4531
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1560, metadata !2395), !dbg !4532
  %0 = bitcast i64* %adjexp_a to i8*, !dbg !4533
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !4533
  call void @llvm.dbg.declare(metadata i64* %adjexp_a, metadata !1561, metadata !2395), !dbg !4534
  %1 = bitcast i64* %adjexp_b to i8*, !dbg !4533
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !4533
  call void @llvm.dbg.declare(metadata i64* %adjexp_b, metadata !1562, metadata !2395), !dbg !4535
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4536, !tbaa !2505
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4538, !tbaa !2505
  %cmp = icmp eq %struct.mpd_t* %2, %3, !dbg !4539
  br i1 %cmp, label %if.then, label %if.end, !dbg !4540

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !4541
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4541

if.end:                                           ; preds = %entry
  %4 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4543, !tbaa !2505
  %call = call i32 @mpd_isinfinite(%struct.mpd_t* %4), !dbg !4545
  %tobool = icmp ne i32 %call, 0, !dbg !4545
  br i1 %tobool, label %if.then.1, label %if.end.9, !dbg !4546

if.then.1:                                        ; preds = %if.end
  %5 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4547, !tbaa !2505
  %call2 = call i32 @mpd_isinfinite(%struct.mpd_t* %5), !dbg !4550
  %tobool3 = icmp ne i32 %call2, 0, !dbg !4550
  br i1 %tobool3, label %if.then.4, label %if.end.7, !dbg !4551

if.then.4:                                        ; preds = %if.then.1
  %6 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4552, !tbaa !2505
  %call5 = call i32 @mpd_isnegative(%struct.mpd_t* %6), !dbg !4554
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4555, !tbaa !2505
  %call6 = call i32 @mpd_isnegative(%struct.mpd_t* %7), !dbg !4556
  %sub = sub i32 %call5, %call6, !dbg !4557
  store i32 %sub, i32* %retval, !dbg !4558
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4558

if.end.7:                                         ; preds = %if.then.1
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4559, !tbaa !2505
  %call8 = call i32 @mpd_arith_sign(%struct.mpd_t* %8), !dbg !4560
  store i32 %call8, i32* %retval, !dbg !4561
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4561

if.end.9:                                         ; preds = %if.end
  %9 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4562, !tbaa !2505
  %call10 = call i32 @mpd_isinfinite(%struct.mpd_t* %9), !dbg !4564
  %tobool11 = icmp ne i32 %call10, 0, !dbg !4564
  br i1 %tobool11, label %if.then.12, label %if.end.15, !dbg !4565

if.then.12:                                       ; preds = %if.end.9
  %10 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4566, !tbaa !2505
  %call13 = call i32 @mpd_arith_sign(%struct.mpd_t* %10), !dbg !4568
  %sub14 = sub i32 0, %call13, !dbg !4569
  store i32 %sub14, i32* %retval, !dbg !4570
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4570

if.end.15:                                        ; preds = %if.end.9
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4571, !tbaa !2505
  %call16 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %11), !dbg !4573
  %tobool17 = icmp ne i32 %call16, 0, !dbg !4573
  br i1 %tobool17, label %if.then.18, label %if.end.25, !dbg !4574

if.then.18:                                       ; preds = %if.end.15
  %12 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4575, !tbaa !2505
  %call19 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %12), !dbg !4578
  %tobool20 = icmp ne i32 %call19, 0, !dbg !4578
  br i1 %tobool20, label %if.then.21, label %if.end.22, !dbg !4579

if.then.21:                                       ; preds = %if.then.18
  store i32 0, i32* %retval, !dbg !4580
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4580

if.end.22:                                        ; preds = %if.then.18
  %13 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4582, !tbaa !2505
  %call23 = call i32 @mpd_arith_sign(%struct.mpd_t* %13), !dbg !4583
  %sub24 = sub i32 0, %call23, !dbg !4584
  store i32 %sub24, i32* %retval, !dbg !4585
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4585

if.end.25:                                        ; preds = %if.end.15
  %14 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4586, !tbaa !2505
  %call26 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %14), !dbg !4588
  %tobool27 = icmp ne i32 %call26, 0, !dbg !4588
  br i1 %tobool27, label %if.then.28, label %if.end.30, !dbg !4589

if.then.28:                                       ; preds = %if.end.25
  %15 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4590, !tbaa !2505
  %call29 = call i32 @mpd_arith_sign(%struct.mpd_t* %15), !dbg !4592
  store i32 %call29, i32* %retval, !dbg !4593
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4593

if.end.30:                                        ; preds = %if.end.25
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4594, !tbaa !2505
  %call31 = call zeroext i8 @mpd_sign(%struct.mpd_t* %16), !dbg !4596
  %conv = zext i8 %call31 to i32, !dbg !4596
  %17 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4597, !tbaa !2505
  %call32 = call zeroext i8 @mpd_sign(%struct.mpd_t* %17), !dbg !4598
  %conv33 = zext i8 %call32 to i32, !dbg !4598
  %cmp34 = icmp ne i32 %conv, %conv33, !dbg !4599
  br i1 %cmp34, label %if.then.36, label %if.end.42, !dbg !4600

if.then.36:                                       ; preds = %if.end.30
  %18 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4601, !tbaa !2505
  %call37 = call zeroext i8 @mpd_sign(%struct.mpd_t* %18), !dbg !4603
  %conv38 = zext i8 %call37 to i32, !dbg !4603
  %19 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4604, !tbaa !2505
  %call39 = call zeroext i8 @mpd_sign(%struct.mpd_t* %19), !dbg !4605
  %conv40 = zext i8 %call39 to i32, !dbg !4605
  %sub41 = sub i32 %conv38, %conv40, !dbg !4606
  store i32 %sub41, i32* %retval, !dbg !4607
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4607

if.end.42:                                        ; preds = %if.end.30
  %20 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4608, !tbaa !2505
  %call43 = call i64 @mpd_adjexp(%struct.mpd_t* %20), !dbg !4609
  store i64 %call43, i64* %adjexp_a, align 8, !dbg !4610, !tbaa !2391
  %21 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4611, !tbaa !2505
  %call44 = call i64 @mpd_adjexp(%struct.mpd_t* %21), !dbg !4612
  store i64 %call44, i64* %adjexp_b, align 8, !dbg !4613, !tbaa !2391
  %22 = load i64, i64* %adjexp_a, align 8, !dbg !4614, !tbaa !2391
  %23 = load i64, i64* %adjexp_b, align 8, !dbg !4616, !tbaa !2391
  %cmp45 = icmp ne i64 %22, %23, !dbg !4617
  br i1 %cmp45, label %if.then.47, label %if.end.54, !dbg !4618

if.then.47:                                       ; preds = %if.end.42
  %24 = load i64, i64* %adjexp_a, align 8, !dbg !4619, !tbaa !2391
  %25 = load i64, i64* %adjexp_b, align 8, !dbg !4622, !tbaa !2391
  %cmp48 = icmp slt i64 %24, %25, !dbg !4623
  br i1 %cmp48, label %if.then.50, label %if.end.52, !dbg !4624

if.then.50:                                       ; preds = %if.then.47
  %26 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4625, !tbaa !2505
  %call51 = call i32 @mpd_arith_sign(%struct.mpd_t* %26), !dbg !4627
  %mul = mul i32 -1, %call51, !dbg !4628
  store i32 %mul, i32* %retval, !dbg !4629
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4629

if.end.52:                                        ; preds = %if.then.47
  %27 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4630, !tbaa !2505
  %call53 = call i32 @mpd_arith_sign(%struct.mpd_t* %27), !dbg !4631
  store i32 %call53, i32* %retval, !dbg !4632
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4632

if.end.54:                                        ; preds = %if.end.42
  %28 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4633, !tbaa !2505
  %29 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4634, !tbaa !2505
  %call55 = call i32 @_mpd_cmp_same_adjexp(%struct.mpd_t* %28, %struct.mpd_t* %29), !dbg !4635
  %30 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4636, !tbaa !2505
  %call56 = call i32 @mpd_arith_sign(%struct.mpd_t* %30), !dbg !4637
  %mul57 = mul i32 %call55, %call56, !dbg !4638
  store i32 %mul57, i32* %retval, !dbg !4639
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4639

cleanup:                                          ; preds = %if.end.54, %if.end.52, %if.then.50, %if.then.36, %if.then.28, %if.end.22, %if.then.21, %if.then.12, %if.end.7, %if.then.4, %if.then
  %31 = bitcast i64* %adjexp_b to i8*, !dbg !4640
  call void @llvm.lifetime.end(i64 8, i8* %31) #4, !dbg !4640
  %32 = bitcast i64* %adjexp_a to i8*, !dbg !4640
  call void @llvm.lifetime.end(i64 8, i8* %32) #4, !dbg !4640
  %33 = load i32, i32* %retval, !dbg !4640
  ret i32 %33, !dbg !4640
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_qcompare(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %c = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !567, metadata !2395), !dbg !4641
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !568, metadata !2395), !dbg !4642
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !569, metadata !2395), !dbg !4643
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !570, metadata !2395), !dbg !4644
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !571, metadata !2395), !dbg !4645
  %0 = bitcast i32* %c to i8*, !dbg !4646
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !4646
  call void @llvm.dbg.declare(metadata i32* %c, metadata !572, metadata !2395), !dbg !4647
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4648, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %1), !dbg !4650
  %tobool = icmp ne i32 %call, 0, !dbg !4650
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4651

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4652, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %2), !dbg !4654
  %tobool2 = icmp ne i32 %call1, 0, !dbg !4654
  br i1 %tobool2, label %if.then, label %if.end.6, !dbg !4655

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4656, !tbaa !2505
  %4 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4659, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4660, !tbaa !2505
  %6 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4661, !tbaa !2505
  %7 = load i32*, i32** %status.addr, align 8, !dbg !4662, !tbaa !2505
  %call3 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %3, %struct.mpd_t* %4, %struct.mpd_t* %5, %struct.mpd_context_t* %6, i32* %7), !dbg !4663
  %tobool4 = icmp ne i32 %call3, 0, !dbg !4663
  br i1 %tobool4, label %if.then.5, label %if.end, !dbg !4664

if.then.5:                                        ; preds = %if.then
  store i32 2147483647, i32* %retval, !dbg !4665
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4665

if.end:                                           ; preds = %if.then
  br label %if.end.6, !dbg !4667

if.end.6:                                         ; preds = %if.end, %lor.lhs.false
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4668, !tbaa !2505
  %9 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4669, !tbaa !2505
  %call7 = call i32 @_mpd_cmp(%struct.mpd_t* %8, %struct.mpd_t* %9), !dbg !4670
  store i32 %call7, i32* %c, align 4, !dbg !4671, !tbaa !2554
  %10 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4672, !tbaa !2505
  %11 = load i32, i32* %c, align 4, !dbg !4673, !tbaa !2554
  %cmp = icmp slt i32 %11, 0, !dbg !4674
  %conv = zext i1 %cmp to i32, !dbg !4674
  %conv8 = trunc i32 %conv to i8, !dbg !4675
  %12 = load i32, i32* %c, align 4, !dbg !4676, !tbaa !2554
  %cmp9 = icmp ne i32 %12, 0, !dbg !4677
  %conv10 = zext i1 %cmp9 to i32, !dbg !4677
  %conv11 = sext i32 %conv10 to i64, !dbg !4678
  call void @_settriple(%struct.mpd_t* %10, i8 zeroext %conv8, i64 %conv11, i64 0), !dbg !4679
  %13 = load i32, i32* %c, align 4, !dbg !4680, !tbaa !2554
  store i32 %13, i32* %retval, !dbg !4681
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4681

cleanup:                                          ; preds = %if.end.6, %if.then.5
  %14 = bitcast i32* %c to i8*, !dbg !4682
  call void @llvm.lifetime.end(i64 4, i8* %14) #4, !dbg !4682
  %15 = load i32, i32* %retval, !dbg !4682
  ret i32 %15, !dbg !4682
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_qcompare_signal(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %c = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !575, metadata !2395), !dbg !4683
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !576, metadata !2395), !dbg !4684
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !577, metadata !2395), !dbg !4685
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !578, metadata !2395), !dbg !4686
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !579, metadata !2395), !dbg !4687
  %0 = bitcast i32* %c to i8*, !dbg !4688
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !4688
  call void @llvm.dbg.declare(metadata i32* %c, metadata !580, metadata !2395), !dbg !4689
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4690, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %1), !dbg !4692
  %tobool = icmp ne i32 %call, 0, !dbg !4692
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4693

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4694, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %2), !dbg !4696
  %tobool2 = icmp ne i32 %call1, 0, !dbg !4696
  br i1 %tobool2, label %if.then, label %if.end.6, !dbg !4697

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4698, !tbaa !2505
  %4 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4701, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4702, !tbaa !2505
  %6 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !4703, !tbaa !2505
  %7 = load i32*, i32** %status.addr, align 8, !dbg !4704, !tbaa !2505
  %call3 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %3, %struct.mpd_t* %4, %struct.mpd_t* %5, %struct.mpd_context_t* %6, i32* %7), !dbg !4705
  %tobool4 = icmp ne i32 %call3, 0, !dbg !4705
  br i1 %tobool4, label %if.then.5, label %if.end, !dbg !4706

if.then.5:                                        ; preds = %if.then
  %8 = load i32*, i32** %status.addr, align 8, !dbg !4707, !tbaa !2505
  %9 = load i32, i32* %8, align 4, !dbg !4709, !tbaa !2554
  %or = or i32 %9, 256, !dbg !4709
  store i32 %or, i32* %8, align 4, !dbg !4709, !tbaa !2554
  store i32 2147483647, i32* %retval, !dbg !4710
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4710

if.end:                                           ; preds = %if.then
  br label %if.end.6, !dbg !4711

if.end.6:                                         ; preds = %if.end, %lor.lhs.false
  %10 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4712, !tbaa !2505
  %11 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4713, !tbaa !2505
  %call7 = call i32 @_mpd_cmp(%struct.mpd_t* %10, %struct.mpd_t* %11), !dbg !4714
  store i32 %call7, i32* %c, align 4, !dbg !4715, !tbaa !2554
  %12 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4716, !tbaa !2505
  %13 = load i32, i32* %c, align 4, !dbg !4717, !tbaa !2554
  %cmp = icmp slt i32 %13, 0, !dbg !4718
  %conv = zext i1 %cmp to i32, !dbg !4718
  %conv8 = trunc i32 %conv to i8, !dbg !4719
  %14 = load i32, i32* %c, align 4, !dbg !4720, !tbaa !2554
  %cmp9 = icmp ne i32 %14, 0, !dbg !4721
  %conv10 = zext i1 %cmp9 to i32, !dbg !4721
  %conv11 = sext i32 %conv10 to i64, !dbg !4722
  call void @_settriple(%struct.mpd_t* %12, i8 zeroext %conv8, i64 %conv11, i64 0), !dbg !4723
  %15 = load i32, i32* %c, align 4, !dbg !4724, !tbaa !2554
  store i32 %15, i32* %retval, !dbg !4725
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4725

cleanup:                                          ; preds = %if.end.6, %if.then.5
  %16 = bitcast i32* %c to i8*, !dbg !4726
  call void @llvm.lifetime.end(i64 4, i8* %16) #4, !dbg !4726
  %17 = load i32, i32* %retval, !dbg !4726
  ret i32 %17, !dbg !4726
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_cmp_total(%struct.mpd_t* %a, %struct.mpd_t* %b) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %aa = alloca %struct.mpd_t, align 8
  %bb = alloca %struct.mpd_t, align 8
  %nan_a = alloca i32, align 4
  %nan_b = alloca i32, align 4
  %c = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !585, metadata !2395), !dbg !4727
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !586, metadata !2395), !dbg !4728
  %0 = bitcast %struct.mpd_t* %aa to i8*, !dbg !4729
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !4729
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %aa, metadata !587, metadata !2395), !dbg !4730
  %1 = bitcast %struct.mpd_t* %bb to i8*, !dbg !4729
  call void @llvm.lifetime.start(i64 48, i8* %1) #4, !dbg !4729
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %bb, metadata !588, metadata !2395), !dbg !4731
  %2 = bitcast i32* %nan_a to i8*, !dbg !4732
  call void @llvm.lifetime.start(i64 4, i8* %2) #4, !dbg !4732
  call void @llvm.dbg.declare(metadata i32* %nan_a, metadata !589, metadata !2395), !dbg !4733
  %3 = bitcast i32* %nan_b to i8*, !dbg !4732
  call void @llvm.lifetime.start(i64 4, i8* %3) #4, !dbg !4732
  call void @llvm.dbg.declare(metadata i32* %nan_b, metadata !590, metadata !2395), !dbg !4734
  %4 = bitcast i32* %c to i8*, !dbg !4735
  call void @llvm.lifetime.start(i64 4, i8* %4) #4, !dbg !4735
  call void @llvm.dbg.declare(metadata i32* %c, metadata !591, metadata !2395), !dbg !4736
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4737, !tbaa !2505
  %call = call zeroext i8 @mpd_sign(%struct.mpd_t* %5), !dbg !4739
  %conv = zext i8 %call to i32, !dbg !4739
  %6 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4740, !tbaa !2505
  %call1 = call zeroext i8 @mpd_sign(%struct.mpd_t* %6), !dbg !4741
  %conv2 = zext i8 %call1 to i32, !dbg !4741
  %cmp = icmp ne i32 %conv, %conv2, !dbg !4742
  br i1 %cmp, label %if.then, label %if.end, !dbg !4743

if.then:                                          ; preds = %entry
  %7 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4744, !tbaa !2505
  %call4 = call zeroext i8 @mpd_sign(%struct.mpd_t* %7), !dbg !4746
  %conv5 = zext i8 %call4 to i32, !dbg !4746
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4747, !tbaa !2505
  %call6 = call zeroext i8 @mpd_sign(%struct.mpd_t* %8), !dbg !4748
  %conv7 = zext i8 %call6 to i32, !dbg !4748
  %sub = sub i32 %conv5, %conv7, !dbg !4749
  store i32 %sub, i32* %retval, !dbg !4750
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4750

if.end:                                           ; preds = %entry
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4751, !tbaa !2505
  %call8 = call i32 @mpd_isnan(%struct.mpd_t* %9), !dbg !4753
  %tobool = icmp ne i32 %call8, 0, !dbg !4753
  br i1 %tobool, label %if.then.9, label %if.else.41, !dbg !4754

if.then.9:                                        ; preds = %if.end
  store i32 1, i32* %c, align 4, !dbg !4755, !tbaa !2554
  %10 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4757, !tbaa !2505
  %call10 = call i32 @mpd_isnan(%struct.mpd_t* %10), !dbg !4759
  %tobool11 = icmp ne i32 %call10, 0, !dbg !4759
  br i1 %tobool11, label %if.then.12, label %if.end.40, !dbg !4760

if.then.12:                                       ; preds = %if.then.9
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4761, !tbaa !2505
  %call13 = call i32 @mpd_isqnan(%struct.mpd_t* %11), !dbg !4763
  %tobool14 = icmp ne i32 %call13, 0, !dbg !4764
  %cond = select i1 %tobool14, i32 1, i32 0, !dbg !4764
  store i32 %cond, i32* %nan_a, align 4, !dbg !4765, !tbaa !2554
  %12 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4766, !tbaa !2505
  %call15 = call i32 @mpd_isqnan(%struct.mpd_t* %12), !dbg !4767
  %tobool16 = icmp ne i32 %call15, 0, !dbg !4768
  %cond17 = select i1 %tobool16, i32 1, i32 0, !dbg !4768
  store i32 %cond17, i32* %nan_b, align 4, !dbg !4769, !tbaa !2554
  %13 = load i32, i32* %nan_b, align 4, !dbg !4770, !tbaa !2554
  %14 = load i32, i32* %nan_a, align 4, !dbg !4772, !tbaa !2554
  %cmp18 = icmp eq i32 %13, %14, !dbg !4773
  br i1 %cmp18, label %if.then.20, label %if.else.37, !dbg !4774

if.then.20:                                       ; preds = %if.then.12
  %15 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4775, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %15, i32 0, i32 3, !dbg !4778
  %16 = load i64, i64* %len, align 8, !dbg !4778, !tbaa !2542
  %cmp21 = icmp sgt i64 %16, 0, !dbg !4779
  br i1 %cmp21, label %land.lhs.true, label %if.else, !dbg !4780

land.lhs.true:                                    ; preds = %if.then.20
  %17 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4781, !tbaa !2505
  %len23 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 3, !dbg !4783
  %18 = load i64, i64* %len23, align 8, !dbg !4783, !tbaa !2542
  %cmp24 = icmp sgt i64 %18, 0, !dbg !4784
  br i1 %cmp24, label %if.then.26, label %if.else, !dbg !4785

if.then.26:                                       ; preds = %land.lhs.true
  %19 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4786, !tbaa !2505
  call void @_mpd_copy_shared(%struct.mpd_t* %aa, %struct.mpd_t* %19), !dbg !4788
  %20 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4789, !tbaa !2505
  call void @_mpd_copy_shared(%struct.mpd_t* %bb, %struct.mpd_t* %20), !dbg !4790
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 1, !dbg !4791
  store i64 0, i64* %exp, align 8, !dbg !4792, !tbaa !2510
  %exp27 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 1, !dbg !4793
  store i64 0, i64* %exp27, align 8, !dbg !4794, !tbaa !2510
  %call28 = call i32 @_mpd_cmp_abs(%struct.mpd_t* %aa, %struct.mpd_t* %bb), !dbg !4795
  store i32 %call28, i32* %c, align 4, !dbg !4796, !tbaa !2554
  br label %if.end.36, !dbg !4797

if.else:                                          ; preds = %land.lhs.true, %if.then.20
  %21 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4798, !tbaa !2505
  %len29 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %21, i32 0, i32 3, !dbg !4800
  %22 = load i64, i64* %len29, align 8, !dbg !4800, !tbaa !2542
  %cmp30 = icmp sgt i64 %22, 0, !dbg !4801
  %conv31 = zext i1 %cmp30 to i32, !dbg !4801
  %23 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4802, !tbaa !2505
  %len32 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %23, i32 0, i32 3, !dbg !4803
  %24 = load i64, i64* %len32, align 8, !dbg !4803, !tbaa !2542
  %cmp33 = icmp sgt i64 %24, 0, !dbg !4804
  %conv34 = zext i1 %cmp33 to i32, !dbg !4804
  %sub35 = sub i32 %conv31, %conv34, !dbg !4805
  store i32 %sub35, i32* %c, align 4, !dbg !4806, !tbaa !2554
  br label %if.end.36

if.end.36:                                        ; preds = %if.else, %if.then.26
  br label %if.end.39, !dbg !4807

if.else.37:                                       ; preds = %if.then.12
  %25 = load i32, i32* %nan_a, align 4, !dbg !4808, !tbaa !2554
  %26 = load i32, i32* %nan_b, align 4, !dbg !4810, !tbaa !2554
  %sub38 = sub i32 %25, %26, !dbg !4811
  store i32 %sub38, i32* %c, align 4, !dbg !4812, !tbaa !2554
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.37, %if.end.36
  br label %if.end.40, !dbg !4813

if.end.40:                                        ; preds = %if.end.39, %if.then.9
  br label %if.end.62, !dbg !4814

if.else.41:                                       ; preds = %if.end
  %27 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4815, !tbaa !2505
  %call42 = call i32 @mpd_isnan(%struct.mpd_t* %27), !dbg !4817
  %tobool43 = icmp ne i32 %call42, 0, !dbg !4817
  br i1 %tobool43, label %if.then.44, label %if.else.45, !dbg !4818

if.then.44:                                       ; preds = %if.else.41
  store i32 -1, i32* %c, align 4, !dbg !4819, !tbaa !2554
  br label %if.end.61, !dbg !4821

if.else.45:                                       ; preds = %if.else.41
  %28 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4822, !tbaa !2505
  %29 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4824, !tbaa !2505
  %call46 = call i32 @_mpd_cmp_abs(%struct.mpd_t* %28, %struct.mpd_t* %29), !dbg !4825
  store i32 %call46, i32* %c, align 4, !dbg !4826, !tbaa !2554
  %30 = load i32, i32* %c, align 4, !dbg !4827, !tbaa !2554
  %cmp47 = icmp eq i32 %30, 0, !dbg !4829
  br i1 %cmp47, label %land.lhs.true.49, label %if.end.60, !dbg !4830

land.lhs.true.49:                                 ; preds = %if.else.45
  %31 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4831, !tbaa !2505
  %exp50 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %31, i32 0, i32 1, !dbg !4833
  %32 = load i64, i64* %exp50, align 8, !dbg !4833, !tbaa !2510
  %33 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4834, !tbaa !2505
  %exp51 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %33, i32 0, i32 1, !dbg !4835
  %34 = load i64, i64* %exp51, align 8, !dbg !4835, !tbaa !2510
  %cmp52 = icmp ne i64 %32, %34, !dbg !4836
  br i1 %cmp52, label %if.then.54, label %if.end.60, !dbg !4837

if.then.54:                                       ; preds = %land.lhs.true.49
  %35 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4838, !tbaa !2505
  %exp55 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %35, i32 0, i32 1, !dbg !4840
  %36 = load i64, i64* %exp55, align 8, !dbg !4840, !tbaa !2510
  %37 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4841, !tbaa !2505
  %exp56 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %37, i32 0, i32 1, !dbg !4842
  %38 = load i64, i64* %exp56, align 8, !dbg !4842, !tbaa !2510
  %cmp57 = icmp slt i64 %36, %38, !dbg !4843
  %cond59 = select i1 %cmp57, i32 -1, i32 1, !dbg !4844
  store i32 %cond59, i32* %c, align 4, !dbg !4845, !tbaa !2554
  br label %if.end.60, !dbg !4846

if.end.60:                                        ; preds = %if.then.54, %land.lhs.true.49, %if.else.45
  br label %if.end.61

if.end.61:                                        ; preds = %if.end.60, %if.then.44
  br label %if.end.62

if.end.62:                                        ; preds = %if.end.61, %if.end.40
  %39 = load i32, i32* %c, align 4, !dbg !4847, !tbaa !2554
  %40 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4848, !tbaa !2505
  %call63 = call i32 @mpd_arith_sign(%struct.mpd_t* %40), !dbg !4849
  %mul = mul i32 %39, %call63, !dbg !4850
  store i32 %mul, i32* %retval, !dbg !4851
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4851

cleanup:                                          ; preds = %if.end.62, %if.then
  %41 = bitcast i32* %c to i8*, !dbg !4852
  call void @llvm.lifetime.end(i64 4, i8* %41) #4, !dbg !4852
  %42 = bitcast i32* %nan_b to i8*, !dbg !4852
  call void @llvm.lifetime.end(i64 4, i8* %42) #4, !dbg !4852
  %43 = bitcast i32* %nan_a to i8*, !dbg !4852
  call void @llvm.lifetime.end(i64 4, i8* %43) #4, !dbg !4852
  %44 = bitcast %struct.mpd_t* %bb to i8*, !dbg !4852
  call void @llvm.lifetime.end(i64 48, i8* %44) #4, !dbg !4852
  %45 = bitcast %struct.mpd_t* %aa to i8*, !dbg !4852
  call void @llvm.lifetime.end(i64 48, i8* %45) #4, !dbg !4852
  %46 = load i32, i32* %retval, !dbg !4852
  ret i32 %46, !dbg !4852
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_copy_shared(%struct.mpd_t* %dest, %struct.mpd_t* %src) #3 {
entry:
  %dest.addr = alloca %struct.mpd_t*, align 8
  %src.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dest, %struct.mpd_t** %dest.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dest.addr, metadata !1602, metadata !2395), !dbg !4853
  store %struct.mpd_t* %src, %struct.mpd_t** %src.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %src.addr, metadata !1603, metadata !2395), !dbg !4854
  %0 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !4855, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !4856
  %1 = load i8, i8* %flags, align 1, !dbg !4856, !tbaa !2620
  %2 = load %struct.mpd_t*, %struct.mpd_t** %dest.addr, align 8, !dbg !4857, !tbaa !2505
  %flags1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 0, !dbg !4858
  store i8 %1, i8* %flags1, align 1, !dbg !4859, !tbaa !2620
  %3 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !4860, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 1, !dbg !4861
  %4 = load i64, i64* %exp, align 8, !dbg !4861, !tbaa !2510
  %5 = load %struct.mpd_t*, %struct.mpd_t** %dest.addr, align 8, !dbg !4862, !tbaa !2505
  %exp2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %5, i32 0, i32 1, !dbg !4863
  store i64 %4, i64* %exp2, align 8, !dbg !4864, !tbaa !2510
  %6 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !4865, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %6, i32 0, i32 2, !dbg !4866
  %7 = load i64, i64* %digits, align 8, !dbg !4866, !tbaa !2514
  %8 = load %struct.mpd_t*, %struct.mpd_t** %dest.addr, align 8, !dbg !4867, !tbaa !2505
  %digits3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %8, i32 0, i32 2, !dbg !4868
  store i64 %7, i64* %digits3, align 8, !dbg !4869, !tbaa !2514
  %9 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !4870, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 3, !dbg !4871
  %10 = load i64, i64* %len, align 8, !dbg !4871, !tbaa !2542
  %11 = load %struct.mpd_t*, %struct.mpd_t** %dest.addr, align 8, !dbg !4872, !tbaa !2505
  %len4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 3, !dbg !4873
  store i64 %10, i64* %len4, align 8, !dbg !4874, !tbaa !2542
  %12 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !4875, !tbaa !2505
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %12, i32 0, i32 4, !dbg !4876
  %13 = load i64, i64* %alloc, align 8, !dbg !4876, !tbaa !2835
  %14 = load %struct.mpd_t*, %struct.mpd_t** %dest.addr, align 8, !dbg !4877, !tbaa !2505
  %alloc5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %14, i32 0, i32 4, !dbg !4878
  store i64 %13, i64* %alloc5, align 8, !dbg !4879, !tbaa !2835
  %15 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !4880, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %15, i32 0, i32 5, !dbg !4881
  %16 = load i64*, i64** %data, align 8, !dbg !4881, !tbaa !2546
  %17 = load %struct.mpd_t*, %struct.mpd_t** %dest.addr, align 8, !dbg !4882, !tbaa !2505
  %data6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 5, !dbg !4883
  store i64* %16, i64** %data6, align 8, !dbg !4884, !tbaa !2546
  %18 = load %struct.mpd_t*, %struct.mpd_t** %dest.addr, align 8, !dbg !4885, !tbaa !2505
  call void @mpd_set_shared_data(%struct.mpd_t* %18), !dbg !4886
  ret void, !dbg !4887
}

; Function Attrs: nounwind uwtable
define internal i32 @_mpd_cmp_abs(%struct.mpd_t* %a, %struct.mpd_t* %b) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %adjexp_a = alloca i64, align 8
  %adjexp_b = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1606, metadata !2395), !dbg !4888
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1607, metadata !2395), !dbg !4889
  %0 = bitcast i64* %adjexp_a to i8*, !dbg !4890
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !4890
  call void @llvm.dbg.declare(metadata i64* %adjexp_a, metadata !1608, metadata !2395), !dbg !4891
  %1 = bitcast i64* %adjexp_b to i8*, !dbg !4890
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !4890
  call void @llvm.dbg.declare(metadata i64* %adjexp_b, metadata !1609, metadata !2395), !dbg !4892
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4893, !tbaa !2505
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4895, !tbaa !2505
  %cmp = icmp eq %struct.mpd_t* %2, %3, !dbg !4896
  br i1 %cmp, label %if.then, label %if.end, !dbg !4897

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !4898
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4898

if.end:                                           ; preds = %entry
  %4 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4900, !tbaa !2505
  %call = call i32 @mpd_isinfinite(%struct.mpd_t* %4), !dbg !4902
  %tobool = icmp ne i32 %call, 0, !dbg !4902
  br i1 %tobool, label %if.then.1, label %if.end.6, !dbg !4903

if.then.1:                                        ; preds = %if.end
  %5 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4904, !tbaa !2505
  %call2 = call i32 @mpd_isinfinite(%struct.mpd_t* %5), !dbg !4907
  %tobool3 = icmp ne i32 %call2, 0, !dbg !4907
  br i1 %tobool3, label %if.then.4, label %if.end.5, !dbg !4908

if.then.4:                                        ; preds = %if.then.1
  store i32 0, i32* %retval, !dbg !4909
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4909

if.end.5:                                         ; preds = %if.then.1
  store i32 1, i32* %retval, !dbg !4911
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4911

if.end.6:                                         ; preds = %if.end
  %6 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4912, !tbaa !2505
  %call7 = call i32 @mpd_isinfinite(%struct.mpd_t* %6), !dbg !4914
  %tobool8 = icmp ne i32 %call7, 0, !dbg !4914
  br i1 %tobool8, label %if.then.9, label %if.end.10, !dbg !4915

if.then.9:                                        ; preds = %if.end.6
  store i32 -1, i32* %retval, !dbg !4916
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4916

if.end.10:                                        ; preds = %if.end.6
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4918, !tbaa !2505
  %call11 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %7), !dbg !4920
  %tobool12 = icmp ne i32 %call11, 0, !dbg !4920
  br i1 %tobool12, label %if.then.13, label %if.end.18, !dbg !4921

if.then.13:                                       ; preds = %if.end.10
  %8 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4922, !tbaa !2505
  %call14 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %8), !dbg !4925
  %tobool15 = icmp ne i32 %call14, 0, !dbg !4925
  br i1 %tobool15, label %if.then.16, label %if.end.17, !dbg !4926

if.then.16:                                       ; preds = %if.then.13
  store i32 0, i32* %retval, !dbg !4927
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4927

if.end.17:                                        ; preds = %if.then.13
  store i32 -1, i32* %retval, !dbg !4929
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4929

if.end.18:                                        ; preds = %if.end.10
  %9 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4930, !tbaa !2505
  %call19 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %9), !dbg !4932
  %tobool20 = icmp ne i32 %call19, 0, !dbg !4932
  br i1 %tobool20, label %if.then.21, label %if.end.22, !dbg !4933

if.then.21:                                       ; preds = %if.end.18
  store i32 1, i32* %retval, !dbg !4934
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4934

if.end.22:                                        ; preds = %if.end.18
  %10 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4936, !tbaa !2505
  %call23 = call i64 @mpd_adjexp(%struct.mpd_t* %10), !dbg !4937
  store i64 %call23, i64* %adjexp_a, align 8, !dbg !4938, !tbaa !2391
  %11 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4939, !tbaa !2505
  %call24 = call i64 @mpd_adjexp(%struct.mpd_t* %11), !dbg !4940
  store i64 %call24, i64* %adjexp_b, align 8, !dbg !4941, !tbaa !2391
  %12 = load i64, i64* %adjexp_a, align 8, !dbg !4942, !tbaa !2391
  %13 = load i64, i64* %adjexp_b, align 8, !dbg !4944, !tbaa !2391
  %cmp25 = icmp ne i64 %12, %13, !dbg !4945
  br i1 %cmp25, label %if.then.26, label %if.end.30, !dbg !4946

if.then.26:                                       ; preds = %if.end.22
  %14 = load i64, i64* %adjexp_a, align 8, !dbg !4947, !tbaa !2391
  %15 = load i64, i64* %adjexp_b, align 8, !dbg !4950, !tbaa !2391
  %cmp27 = icmp slt i64 %14, %15, !dbg !4951
  br i1 %cmp27, label %if.then.28, label %if.end.29, !dbg !4952

if.then.28:                                       ; preds = %if.then.26
  store i32 -1, i32* %retval, !dbg !4953
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4953

if.end.29:                                        ; preds = %if.then.26
  store i32 1, i32* %retval, !dbg !4955
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4955

if.end.30:                                        ; preds = %if.end.22
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4956, !tbaa !2505
  %17 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4957, !tbaa !2505
  %call31 = call i32 @_mpd_cmp_same_adjexp(%struct.mpd_t* %16, %struct.mpd_t* %17), !dbg !4958
  store i32 %call31, i32* %retval, !dbg !4959
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4959

cleanup:                                          ; preds = %if.end.30, %if.end.29, %if.then.28, %if.then.21, %if.end.17, %if.then.16, %if.then.9, %if.end.5, %if.then.4, %if.then
  %18 = bitcast i64* %adjexp_b to i8*, !dbg !4960
  call void @llvm.lifetime.end(i64 8, i8* %18) #4, !dbg !4960
  %19 = bitcast i64* %adjexp_a to i8*, !dbg !4960
  call void @llvm.lifetime.end(i64 8, i8* %19) #4, !dbg !4960
  %20 = load i32, i32* %retval, !dbg !4960
  ret i32 %20, !dbg !4960
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_compare_total(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %c = alloca i32, align 4
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !596, metadata !2395), !dbg !4961
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !597, metadata !2395), !dbg !4962
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !598, metadata !2395), !dbg !4963
  %0 = bitcast i32* %c to i8*, !dbg !4964
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !4964
  call void @llvm.dbg.declare(metadata i32* %c, metadata !599, metadata !2395), !dbg !4965
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4966, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4967, !tbaa !2505
  %call = call i32 @mpd_cmp_total(%struct.mpd_t* %1, %struct.mpd_t* %2), !dbg !4968
  store i32 %call, i32* %c, align 4, !dbg !4969, !tbaa !2554
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !4970, !tbaa !2505
  %4 = load i32, i32* %c, align 4, !dbg !4971, !tbaa !2554
  %cmp = icmp slt i32 %4, 0, !dbg !4972
  %conv = zext i1 %cmp to i32, !dbg !4972
  %conv1 = trunc i32 %conv to i8, !dbg !4973
  %5 = load i32, i32* %c, align 4, !dbg !4974, !tbaa !2554
  %cmp2 = icmp ne i32 %5, 0, !dbg !4975
  %conv3 = zext i1 %cmp2 to i32, !dbg !4975
  %conv4 = sext i32 %conv3 to i64, !dbg !4976
  call void @_settriple(%struct.mpd_t* %3, i8 zeroext %conv1, i64 %conv4, i64 0), !dbg !4977
  %6 = load i32, i32* %c, align 4, !dbg !4978, !tbaa !2554
  %7 = bitcast i32* %c to i8*, !dbg !4979
  call void @llvm.lifetime.end(i64 4, i8* %7) #4, !dbg !4979
  ret i32 %6, !dbg !4980
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_cmp_total_mag(%struct.mpd_t* %a, %struct.mpd_t* %b) #0 {
entry:
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %aa = alloca %struct.mpd_t, align 8
  %bb = alloca %struct.mpd_t, align 8
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !602, metadata !2395), !dbg !4981
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !603, metadata !2395), !dbg !4982
  %0 = bitcast %struct.mpd_t* %aa to i8*, !dbg !4983
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !4983
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %aa, metadata !604, metadata !2395), !dbg !4984
  %1 = bitcast %struct.mpd_t* %bb to i8*, !dbg !4983
  call void @llvm.lifetime.start(i64 48, i8* %1) #4, !dbg !4983
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %bb, metadata !605, metadata !2395), !dbg !4985
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !4986, !tbaa !2505
  call void @_mpd_copy_shared(%struct.mpd_t* %aa, %struct.mpd_t* %2), !dbg !4987
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !4988, !tbaa !2505
  call void @_mpd_copy_shared(%struct.mpd_t* %bb, %struct.mpd_t* %3), !dbg !4989
  call void @mpd_set_positive(%struct.mpd_t* %aa), !dbg !4990
  call void @mpd_set_positive(%struct.mpd_t* %bb), !dbg !4991
  %call = call i32 @mpd_cmp_total(%struct.mpd_t* %aa, %struct.mpd_t* %bb), !dbg !4992
  %4 = bitcast %struct.mpd_t* %bb to i8*, !dbg !4993
  call void @llvm.lifetime.end(i64 48, i8* %4) #4, !dbg !4993
  %5 = bitcast %struct.mpd_t* %aa to i8*, !dbg !4993
  call void @llvm.lifetime.end(i64 48, i8* %5) #4, !dbg !4993
  ret i32 %call, !dbg !4994
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_compare_total_mag(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %c = alloca i32, align 4
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !608, metadata !2395), !dbg !4995
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !609, metadata !2395), !dbg !4996
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !610, metadata !2395), !dbg !4997
  %0 = bitcast i32* %c to i8*, !dbg !4998
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !4998
  call void @llvm.dbg.declare(metadata i32* %c, metadata !611, metadata !2395), !dbg !4999
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5000, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !5001, !tbaa !2505
  %call = call i32 @mpd_cmp_total_mag(%struct.mpd_t* %1, %struct.mpd_t* %2), !dbg !5002
  store i32 %call, i32* %c, align 4, !dbg !5003, !tbaa !2554
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5004, !tbaa !2505
  %4 = load i32, i32* %c, align 4, !dbg !5005, !tbaa !2554
  %cmp = icmp slt i32 %4, 0, !dbg !5006
  %conv = zext i1 %cmp to i32, !dbg !5006
  %conv1 = trunc i32 %conv to i8, !dbg !5007
  %5 = load i32, i32* %c, align 4, !dbg !5008, !tbaa !2554
  %cmp2 = icmp ne i32 %5, 0, !dbg !5009
  %conv3 = zext i1 %cmp2 to i32, !dbg !5009
  %conv4 = sext i32 %conv3 to i64, !dbg !5010
  call void @_settriple(%struct.mpd_t* %3, i8 zeroext %conv1, i64 %conv4, i64 0), !dbg !5011
  %6 = load i32, i32* %c, align 4, !dbg !5012, !tbaa !2554
  %7 = bitcast i32* %c to i8*, !dbg !5013
  call void @llvm.lifetime.end(i64 4, i8* %7) #4, !dbg !5013
  ret i32 %6, !dbg !5014
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_qshiftl(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %n, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %n.addr = alloca i64, align 8
  %status.addr = alloca i32*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !616, metadata !2395), !dbg !5015
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !617, metadata !2395), !dbg !5016
  store i64 %n, i64* %n.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !618, metadata !2395), !dbg !5017
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !619, metadata !2395), !dbg !5018
  %0 = bitcast i64* %size to i8*, !dbg !5019
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !5019
  call void @llvm.dbg.declare(metadata i64* %size, metadata !620, metadata !2395), !dbg !5020
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5021, !tbaa !2505
  %call = call i32 @mpd_iszerocoeff(%struct.mpd_t* %1), !dbg !5023
  %tobool = icmp ne i32 %call, 0, !dbg !5023
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5024

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !5025, !tbaa !2391
  %cmp = icmp eq i64 %2, 0, !dbg !5027
  br i1 %cmp, label %if.then, label %if.end, !dbg !5028

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5029, !tbaa !2505
  %4 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5031, !tbaa !2505
  %5 = load i32*, i32** %status.addr, align 8, !dbg !5032, !tbaa !2505
  %call1 = call i32 @mpd_qcopy(%struct.mpd_t* %3, %struct.mpd_t* %4, i32* %5), !dbg !5033
  store i32 %call1, i32* %retval, !dbg !5034
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5034

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5035, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %6, i32 0, i32 2, !dbg !5036
  %7 = load i64, i64* %digits, align 8, !dbg !5036, !tbaa !2514
  %8 = load i64, i64* %n.addr, align 8, !dbg !5037, !tbaa !2391
  %add = add i64 %7, %8, !dbg !5038
  %call2 = call i64 @mpd_digits_to_size(i64 %add), !dbg !5039
  store i64 %call2, i64* %size, align 8, !dbg !5040, !tbaa !2391
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5041, !tbaa !2505
  %10 = load i64, i64* %size, align 8, !dbg !5043, !tbaa !2391
  %11 = load i32*, i32** %status.addr, align 8, !dbg !5044, !tbaa !2505
  %call3 = call i32 @mpd_qresize(%struct.mpd_t* %9, i64 %10, i32* %11), !dbg !5045
  %tobool4 = icmp ne i32 %call3, 0, !dbg !5045
  br i1 %tobool4, label %if.end.6, label %if.then.5, !dbg !5046

if.then.5:                                        ; preds = %if.end
  store i32 0, i32* %retval, !dbg !5047
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5047

if.end.6:                                         ; preds = %if.end
  %12 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5049, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %12, i32 0, i32 5, !dbg !5050
  %13 = load i64*, i64** %data, align 8, !dbg !5050, !tbaa !2546
  %14 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5051, !tbaa !2505
  %data7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %14, i32 0, i32 5, !dbg !5052
  %15 = load i64*, i64** %data7, align 8, !dbg !5052, !tbaa !2546
  %16 = load i64, i64* %size, align 8, !dbg !5053, !tbaa !2391
  %17 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5054, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 3, !dbg !5055
  %18 = load i64, i64* %len, align 8, !dbg !5055, !tbaa !2542
  %19 = load i64, i64* %n.addr, align 8, !dbg !5056, !tbaa !2391
  call void @_mpd_baseshiftl(i64* %13, i64* %15, i64 %16, i64 %18, i64 %19), !dbg !5057
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5058, !tbaa !2505
  %21 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5059, !tbaa !2505
  call void @mpd_copy_flags(%struct.mpd_t* %20, %struct.mpd_t* %21), !dbg !5060
  %22 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5061, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %22, i32 0, i32 1, !dbg !5062
  %23 = load i64, i64* %exp, align 8, !dbg !5062, !tbaa !2510
  %24 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5063, !tbaa !2505
  %exp8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %24, i32 0, i32 1, !dbg !5064
  store i64 %23, i64* %exp8, align 8, !dbg !5065, !tbaa !2510
  %25 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5066, !tbaa !2505
  %digits9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %25, i32 0, i32 2, !dbg !5067
  %26 = load i64, i64* %digits9, align 8, !dbg !5067, !tbaa !2514
  %27 = load i64, i64* %n.addr, align 8, !dbg !5068, !tbaa !2391
  %add10 = add i64 %26, %27, !dbg !5069
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5070, !tbaa !2505
  %digits11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %28, i32 0, i32 2, !dbg !5071
  store i64 %add10, i64* %digits11, align 8, !dbg !5072, !tbaa !2514
  %29 = load i64, i64* %size, align 8, !dbg !5073, !tbaa !2391
  %30 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5074, !tbaa !2505
  %len12 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %30, i32 0, i32 3, !dbg !5075
  store i64 %29, i64* %len12, align 8, !dbg !5076, !tbaa !2542
  store i32 1, i32* %retval, !dbg !5077
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5077

cleanup:                                          ; preds = %if.end.6, %if.then.5, %if.then
  %31 = bitcast i64* %size to i8*, !dbg !5078
  call void @llvm.lifetime.end(i64 8, i8* %31) #4, !dbg !5078
  %32 = load i32, i32* %retval, !dbg !5078
  ret i32 %32, !dbg !5078
}

declare hidden void @_mpd_baseshiftl(i64*, i64*, i64, i64, i64) #5

; Function Attrs: nounwind uwtable
define hidden i64 @mpd_qshiftr_inplace(%struct.mpd_t* %result, i64 %n) #0 {
entry:
  %retval = alloca i64, align 8
  %result.addr = alloca %struct.mpd_t*, align 8
  %n.addr = alloca i64, align 8
  %dummy = alloca i32, align 4
  %rnd = alloca i64, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !625, metadata !2395), !dbg !5079
  store i64 %n, i64* %n.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !626, metadata !2395), !dbg !5080
  %0 = bitcast i32* %dummy to i8*, !dbg !5081
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !5081
  call void @llvm.dbg.declare(metadata i32* %dummy, metadata !627, metadata !2395), !dbg !5082
  %1 = bitcast i64* %rnd to i8*, !dbg !5083
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !5083
  call void @llvm.dbg.declare(metadata i64* %rnd, metadata !628, metadata !2395), !dbg !5084
  %2 = bitcast i64* %size to i8*, !dbg !5085
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !5085
  call void @llvm.dbg.declare(metadata i64* %size, metadata !629, metadata !2395), !dbg !5086
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5087, !tbaa !2505
  %call = call i32 @mpd_iszerocoeff(%struct.mpd_t* %3), !dbg !5089
  %tobool = icmp ne i32 %call, 0, !dbg !5089
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5090

lor.lhs.false:                                    ; preds = %entry
  %4 = load i64, i64* %n.addr, align 8, !dbg !5091, !tbaa !2391
  %cmp = icmp eq i64 %4, 0, !dbg !5093
  br i1 %cmp, label %if.then, label %if.end, !dbg !5094

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i64 0, i64* %retval, !dbg !5095
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5095

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i64, i64* %n.addr, align 8, !dbg !5097, !tbaa !2391
  %6 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5099, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %6, i32 0, i32 2, !dbg !5100
  %7 = load i64, i64* %digits, align 8, !dbg !5100, !tbaa !2514
  %cmp1 = icmp sge i64 %5, %7, !dbg !5101
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !5102

if.then.2:                                        ; preds = %if.end
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5103, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %8, i32 0, i32 5, !dbg !5105
  %9 = load i64*, i64** %data, align 8, !dbg !5105, !tbaa !2546
  %10 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5106, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %10, i32 0, i32 3, !dbg !5107
  %11 = load i64, i64* %len, align 8, !dbg !5107, !tbaa !2542
  %12 = load i64, i64* %n.addr, align 8, !dbg !5108, !tbaa !2391
  %13 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5109, !tbaa !2505
  %digits3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %13, i32 0, i32 2, !dbg !5110
  %14 = load i64, i64* %digits3, align 8, !dbg !5110, !tbaa !2514
  %cmp4 = icmp eq i64 %12, %14, !dbg !5111
  %conv = zext i1 %cmp4 to i32, !dbg !5111
  %call5 = call i64 @_mpd_get_rnd(i64* %9, i64 %11, i32 %conv), !dbg !5112
  store i64 %call5, i64* %rnd, align 8, !dbg !5113, !tbaa !2391
  %15 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5114, !tbaa !2505
  call void @mpd_zerocoeff(%struct.mpd_t* %15), !dbg !5115
  br label %if.end.15, !dbg !5116

if.else:                                          ; preds = %if.end
  %16 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5117, !tbaa !2505
  %data6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %16, i32 0, i32 5, !dbg !5119
  %17 = load i64*, i64** %data6, align 8, !dbg !5119, !tbaa !2546
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5120, !tbaa !2505
  %data7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %18, i32 0, i32 5, !dbg !5121
  %19 = load i64*, i64** %data7, align 8, !dbg !5121, !tbaa !2546
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5122, !tbaa !2505
  %len8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %20, i32 0, i32 3, !dbg !5123
  %21 = load i64, i64* %len8, align 8, !dbg !5123, !tbaa !2542
  %22 = load i64, i64* %n.addr, align 8, !dbg !5124, !tbaa !2391
  %call9 = call i64 @_mpd_baseshiftr(i64* %17, i64* %19, i64 %21, i64 %22), !dbg !5125
  store i64 %call9, i64* %rnd, align 8, !dbg !5126, !tbaa !2391
  %23 = load i64, i64* %n.addr, align 8, !dbg !5127, !tbaa !2391
  %24 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5128, !tbaa !2505
  %digits10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %24, i32 0, i32 2, !dbg !5129
  %25 = load i64, i64* %digits10, align 8, !dbg !5130, !tbaa !2514
  %sub = sub i64 %25, %23, !dbg !5130
  store i64 %sub, i64* %digits10, align 8, !dbg !5130, !tbaa !2514
  %26 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5131, !tbaa !2505
  %digits11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %26, i32 0, i32 2, !dbg !5132
  %27 = load i64, i64* %digits11, align 8, !dbg !5132, !tbaa !2514
  %call12 = call i64 @mpd_digits_to_size(i64 %27), !dbg !5133
  store i64 %call12, i64* %size, align 8, !dbg !5134, !tbaa !2391
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5135, !tbaa !2505
  %29 = load i64, i64* %size, align 8, !dbg !5136, !tbaa !2391
  %call13 = call i32 @mpd_qresize(%struct.mpd_t* %28, i64 %29, i32* %dummy), !dbg !5137
  %30 = load i64, i64* %size, align 8, !dbg !5138, !tbaa !2391
  %31 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5139, !tbaa !2505
  %len14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %31, i32 0, i32 3, !dbg !5140
  store i64 %30, i64* %len14, align 8, !dbg !5141, !tbaa !2542
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.then.2
  %32 = load i64, i64* %rnd, align 8, !dbg !5142, !tbaa !2391
  store i64 %32, i64* %retval, !dbg !5143
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5143

cleanup:                                          ; preds = %if.end.15, %if.then
  %33 = bitcast i64* %size to i8*, !dbg !5144
  call void @llvm.lifetime.end(i64 8, i8* %33) #4, !dbg !5144
  %34 = bitcast i64* %rnd to i8*, !dbg !5144
  call void @llvm.lifetime.end(i64 8, i8* %34) #4, !dbg !5144
  %35 = bitcast i32* %dummy to i8*, !dbg !5144
  call void @llvm.lifetime.end(i64 4, i8* %35) #4, !dbg !5144
  %36 = load i64, i64* %retval, !dbg !5144
  ret i64 %36, !dbg !5144
}

; Function Attrs: nounwind uwtable
define internal i64 @_mpd_get_rnd(i64* %data, i64 %len, i32 %use_msd) #0 {
entry:
  %data.addr = alloca i64*, align 8
  %len.addr = alloca i64, align 8
  %use_msd.addr = alloca i32, align 4
  %rnd = alloca i64, align 8
  %rest = alloca i64, align 8
  %word = alloca i64, align 8
  store i64* %data, i64** %data.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !1614, metadata !2395), !dbg !5145
  store i64 %len, i64* %len.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !1615, metadata !2395), !dbg !5146
  store i32 %use_msd, i32* %use_msd.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %use_msd.addr, metadata !1616, metadata !2395), !dbg !5147
  %0 = bitcast i64* %rnd to i8*, !dbg !5148
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !5148
  call void @llvm.dbg.declare(metadata i64* %rnd, metadata !1617, metadata !2395), !dbg !5149
  store i64 0, i64* %rnd, align 8, !dbg !5149, !tbaa !2391
  %1 = bitcast i64* %rest to i8*, !dbg !5148
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !5148
  call void @llvm.dbg.declare(metadata i64* %rest, metadata !1618, metadata !2395), !dbg !5150
  store i64 0, i64* %rest, align 8, !dbg !5150, !tbaa !2391
  %2 = bitcast i64* %word to i8*, !dbg !5148
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !5148
  call void @llvm.dbg.declare(metadata i64* %word, metadata !1619, metadata !2395), !dbg !5151
  %3 = load i64, i64* %len.addr, align 8, !dbg !5152, !tbaa !2391
  %sub = sub i64 %3, 1, !dbg !5153
  %4 = load i64*, i64** %data.addr, align 8, !dbg !5154, !tbaa !2505
  %arrayidx = getelementptr i64, i64* %4, i64 %sub, !dbg !5154
  %5 = load i64, i64* %arrayidx, align 8, !dbg !5154, !tbaa !2391
  store i64 %5, i64* %word, align 8, !dbg !5155, !tbaa !2391
  %6 = load i32, i32* %use_msd.addr, align 4, !dbg !5156, !tbaa !2554
  %tobool = icmp ne i32 %6, 0, !dbg !5156
  br i1 %tobool, label %if.then, label %if.else, !dbg !5158

if.then:                                          ; preds = %entry
  %7 = load i64, i64* %word, align 8, !dbg !5159, !tbaa !2391
  %8 = load i64, i64* %word, align 8, !dbg !5161, !tbaa !2391
  %call = call i32 @mpd_word_digits(i64 %8), !dbg !5162
  %sub1 = sub i32 %call, 1, !dbg !5163
  %conv = sext i32 %sub1 to i64, !dbg !5162
  call void @_mpd_divmod_pow10(i64* %rnd, i64* %rest, i64 %7, i64 %conv), !dbg !5164
  %9 = load i64, i64* %len.addr, align 8, !dbg !5165, !tbaa !2391
  %cmp = icmp sgt i64 %9, 1, !dbg !5167
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5168

land.lhs.true:                                    ; preds = %if.then
  %10 = load i64, i64* %rest, align 8, !dbg !5169, !tbaa !2391
  %cmp3 = icmp eq i64 %10, 0, !dbg !5171
  br i1 %cmp3, label %if.then.5, label %if.end, !dbg !5172

if.then.5:                                        ; preds = %land.lhs.true
  %11 = load i64*, i64** %data.addr, align 8, !dbg !5173, !tbaa !2505
  %12 = load i64, i64* %len.addr, align 8, !dbg !5175, !tbaa !2391
  %sub6 = sub i64 %12, 1, !dbg !5176
  %call7 = call i32 @_mpd_isallzero(i64* %11, i64 %sub6), !dbg !5177
  %tobool8 = icmp ne i32 %call7, 0, !dbg !5178
  %lnot = xor i1 %tobool8, true, !dbg !5178
  %lnot.ext = zext i1 %lnot to i32, !dbg !5178
  %conv9 = sext i32 %lnot.ext to i64, !dbg !5178
  store i64 %conv9, i64* %rest, align 8, !dbg !5179, !tbaa !2391
  br label %if.end, !dbg !5180

if.end:                                           ; preds = %if.then.5, %land.lhs.true, %if.then
  br label %if.end.15, !dbg !5181

if.else:                                          ; preds = %entry
  %13 = load i64*, i64** %data.addr, align 8, !dbg !5182, !tbaa !2505
  %14 = load i64, i64* %len.addr, align 8, !dbg !5184, !tbaa !2391
  %call10 = call i32 @_mpd_isallzero(i64* %13, i64 %14), !dbg !5185
  %tobool11 = icmp ne i32 %call10, 0, !dbg !5186
  %lnot12 = xor i1 %tobool11, true, !dbg !5186
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !5186
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !5186
  store i64 %conv14, i64* %rest, align 8, !dbg !5187, !tbaa !2391
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.end
  %15 = load i64, i64* %rnd, align 8, !dbg !5188, !tbaa !2391
  %cmp16 = icmp eq i64 %15, 0, !dbg !5189
  br i1 %cmp16, label %cond.true, label %lor.lhs.false, !dbg !5190

lor.lhs.false:                                    ; preds = %if.end.15
  %16 = load i64, i64* %rnd, align 8, !dbg !5191, !tbaa !2391
  %cmp18 = icmp eq i64 %16, 5, !dbg !5193
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !5194

cond.true:                                        ; preds = %lor.lhs.false, %if.end.15
  %17 = load i64, i64* %rnd, align 8, !dbg !5195, !tbaa !2391
  %18 = load i64, i64* %rest, align 8, !dbg !5198, !tbaa !2391
  %tobool20 = icmp ne i64 %18, 0, !dbg !5199
  %lnot21 = xor i1 %tobool20, true, !dbg !5199
  %lnot23 = xor i1 %lnot21, true, !dbg !5200
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !5200
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !5200
  %add = add i64 %17, %conv25, !dbg !5201
  br label %cond.end, !dbg !5194

cond.false:                                       ; preds = %lor.lhs.false
  %19 = load i64, i64* %rnd, align 8, !dbg !5202, !tbaa !2391
  br label %cond.end, !dbg !5194

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %19, %cond.false ], !dbg !5194
  %20 = bitcast i64* %word to i8*, !dbg !5204
  call void @llvm.lifetime.end(i64 8, i8* %20) #4, !dbg !5204
  %21 = bitcast i64* %rest to i8*, !dbg !5204
  call void @llvm.lifetime.end(i64 8, i8* %21) #4, !dbg !5204
  %22 = bitcast i64* %rnd to i8*, !dbg !5204
  call void @llvm.lifetime.end(i64 8, i8* %22) #4, !dbg !5204
  ret i64 %cond, !dbg !5205
}

declare hidden i64 @_mpd_baseshiftr(i64*, i64*, i64, i64) #5

; Function Attrs: nounwind uwtable
define hidden i64 @mpd_qshiftr(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %n, i32* %status) #0 {
entry:
  %retval = alloca i64, align 8
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %n.addr = alloca i64, align 8
  %status.addr = alloca i32*, align 8
  %rnd = alloca i64, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !634, metadata !2395), !dbg !5206
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !635, metadata !2395), !dbg !5207
  store i64 %n, i64* %n.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !636, metadata !2395), !dbg !5208
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !637, metadata !2395), !dbg !5209
  %0 = bitcast i64* %rnd to i8*, !dbg !5210
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !5210
  call void @llvm.dbg.declare(metadata i64* %rnd, metadata !638, metadata !2395), !dbg !5211
  %1 = bitcast i64* %size to i8*, !dbg !5212
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !5212
  call void @llvm.dbg.declare(metadata i64* %size, metadata !639, metadata !2395), !dbg !5213
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5214, !tbaa !2505
  %call = call i32 @mpd_iszerocoeff(%struct.mpd_t* %2), !dbg !5216
  %tobool = icmp ne i32 %call, 0, !dbg !5216
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5217

lor.lhs.false:                                    ; preds = %entry
  %3 = load i64, i64* %n.addr, align 8, !dbg !5218, !tbaa !2391
  %cmp = icmp eq i64 %3, 0, !dbg !5220
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !5221

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5222, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5225, !tbaa !2505
  %6 = load i32*, i32** %status.addr, align 8, !dbg !5226, !tbaa !2505
  %call1 = call i32 @mpd_qcopy(%struct.mpd_t* %4, %struct.mpd_t* %5, i32* %6), !dbg !5227
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5227
  br i1 %tobool2, label %if.end, label %if.then.3, !dbg !5228

if.then.3:                                        ; preds = %if.then
  store i64 -1, i64* %retval, !dbg !5229
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5229

if.end:                                           ; preds = %if.then
  store i64 0, i64* %retval, !dbg !5231
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5231

if.end.4:                                         ; preds = %lor.lhs.false
  %7 = load i64, i64* %n.addr, align 8, !dbg !5232, !tbaa !2391
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5234, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %8, i32 0, i32 2, !dbg !5235
  %9 = load i64, i64* %digits, align 8, !dbg !5235, !tbaa !2514
  %cmp5 = icmp sge i64 %7, %9, !dbg !5236
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !5237

if.then.6:                                        ; preds = %if.end.4
  %10 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5238, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %10, i32 0, i32 5, !dbg !5240
  %11 = load i64*, i64** %data, align 8, !dbg !5240, !tbaa !2546
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5241, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %12, i32 0, i32 3, !dbg !5242
  %13 = load i64, i64* %len, align 8, !dbg !5242, !tbaa !2542
  %14 = load i64, i64* %n.addr, align 8, !dbg !5243, !tbaa !2391
  %15 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5244, !tbaa !2505
  %digits7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %15, i32 0, i32 2, !dbg !5245
  %16 = load i64, i64* %digits7, align 8, !dbg !5245, !tbaa !2514
  %cmp8 = icmp eq i64 %14, %16, !dbg !5246
  %conv = zext i1 %cmp8 to i32, !dbg !5246
  %call9 = call i64 @_mpd_get_rnd(i64* %11, i64 %13, i32 %conv), !dbg !5247
  store i64 %call9, i64* %rnd, align 8, !dbg !5248, !tbaa !2391
  %17 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5249, !tbaa !2505
  call void @mpd_zerocoeff(%struct.mpd_t* %17), !dbg !5250
  br label %if.end.33, !dbg !5251

if.else:                                          ; preds = %if.end.4
  %18 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5252, !tbaa !2505
  %digits10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %18, i32 0, i32 2, !dbg !5254
  %19 = load i64, i64* %digits10, align 8, !dbg !5254, !tbaa !2514
  %20 = load i64, i64* %n.addr, align 8, !dbg !5255, !tbaa !2391
  %sub = sub i64 %19, %20, !dbg !5256
  %21 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5257, !tbaa !2505
  %digits11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %21, i32 0, i32 2, !dbg !5258
  store i64 %sub, i64* %digits11, align 8, !dbg !5259, !tbaa !2514
  %22 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5260, !tbaa !2505
  %digits12 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %22, i32 0, i32 2, !dbg !5261
  %23 = load i64, i64* %digits12, align 8, !dbg !5261, !tbaa !2514
  %call13 = call i64 @mpd_digits_to_size(i64 %23), !dbg !5262
  store i64 %call13, i64* %size, align 8, !dbg !5263, !tbaa !2391
  %24 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5264, !tbaa !2505
  %25 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5266, !tbaa !2505
  %cmp14 = icmp eq %struct.mpd_t* %24, %25, !dbg !5267
  br i1 %cmp14, label %if.then.16, label %if.else.22, !dbg !5268

if.then.16:                                       ; preds = %if.else
  %26 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5269, !tbaa !2505
  %data17 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %26, i32 0, i32 5, !dbg !5271
  %27 = load i64*, i64** %data17, align 8, !dbg !5271, !tbaa !2546
  %28 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5272, !tbaa !2505
  %data18 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %28, i32 0, i32 5, !dbg !5273
  %29 = load i64*, i64** %data18, align 8, !dbg !5273, !tbaa !2546
  %30 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5274, !tbaa !2505
  %len19 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %30, i32 0, i32 3, !dbg !5275
  %31 = load i64, i64* %len19, align 8, !dbg !5275, !tbaa !2542
  %32 = load i64, i64* %n.addr, align 8, !dbg !5276, !tbaa !2391
  %call20 = call i64 @_mpd_baseshiftr(i64* %27, i64* %29, i64 %31, i64 %32), !dbg !5277
  store i64 %call20, i64* %rnd, align 8, !dbg !5278, !tbaa !2391
  %33 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5279, !tbaa !2505
  %34 = load i64, i64* %size, align 8, !dbg !5280, !tbaa !2391
  %35 = load i32*, i32** %status.addr, align 8, !dbg !5281, !tbaa !2505
  %call21 = call i32 @mpd_qresize(%struct.mpd_t* %33, i64 %34, i32* %35), !dbg !5282
  br label %if.end.31, !dbg !5283

if.else.22:                                       ; preds = %if.else
  %36 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5284, !tbaa !2505
  %37 = load i64, i64* %size, align 8, !dbg !5287, !tbaa !2391
  %38 = load i32*, i32** %status.addr, align 8, !dbg !5288, !tbaa !2505
  %call23 = call i32 @mpd_qresize(%struct.mpd_t* %36, i64 %37, i32* %38), !dbg !5289
  %tobool24 = icmp ne i32 %call23, 0, !dbg !5289
  br i1 %tobool24, label %if.end.26, label %if.then.25, !dbg !5290

if.then.25:                                       ; preds = %if.else.22
  store i64 -1, i64* %retval, !dbg !5291
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5291

if.end.26:                                        ; preds = %if.else.22
  %39 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5293, !tbaa !2505
  %data27 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %39, i32 0, i32 5, !dbg !5294
  %40 = load i64*, i64** %data27, align 8, !dbg !5294, !tbaa !2546
  %41 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5295, !tbaa !2505
  %data28 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %41, i32 0, i32 5, !dbg !5296
  %42 = load i64*, i64** %data28, align 8, !dbg !5296, !tbaa !2546
  %43 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5297, !tbaa !2505
  %len29 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %43, i32 0, i32 3, !dbg !5298
  %44 = load i64, i64* %len29, align 8, !dbg !5298, !tbaa !2542
  %45 = load i64, i64* %n.addr, align 8, !dbg !5299, !tbaa !2391
  %call30 = call i64 @_mpd_baseshiftr(i64* %40, i64* %42, i64 %44, i64 %45), !dbg !5300
  store i64 %call30, i64* %rnd, align 8, !dbg !5301, !tbaa !2391
  br label %if.end.31

if.end.31:                                        ; preds = %if.end.26, %if.then.16
  %46 = load i64, i64* %size, align 8, !dbg !5302, !tbaa !2391
  %47 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5303, !tbaa !2505
  %len32 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %47, i32 0, i32 3, !dbg !5304
  store i64 %46, i64* %len32, align 8, !dbg !5305, !tbaa !2542
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.31, %if.then.6
  %48 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5306, !tbaa !2505
  %49 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5307, !tbaa !2505
  call void @mpd_copy_flags(%struct.mpd_t* %48, %struct.mpd_t* %49), !dbg !5308
  %50 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5309, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %50, i32 0, i32 1, !dbg !5310
  %51 = load i64, i64* %exp, align 8, !dbg !5310, !tbaa !2510
  %52 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5311, !tbaa !2505
  %exp34 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %52, i32 0, i32 1, !dbg !5312
  store i64 %51, i64* %exp34, align 8, !dbg !5313, !tbaa !2510
  %53 = load i64, i64* %rnd, align 8, !dbg !5314, !tbaa !2391
  store i64 %53, i64* %retval, !dbg !5315
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5315

cleanup:                                          ; preds = %if.end.33, %if.then.25, %if.end, %if.then.3
  %54 = bitcast i64* %size to i8*, !dbg !5316
  call void @llvm.lifetime.end(i64 8, i8* %54) #4, !dbg !5316
  %55 = bitcast i64* %rnd to i8*, !dbg !5316
  call void @llvm.lifetime.end(i64 8, i8* %55) #4, !dbg !5316
  %56 = load i64, i64* %retval, !dbg !5316
  ret i64 %56, !dbg !5316
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qand(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %big = alloca %struct.mpd_t*, align 8
  %small = alloca %struct.mpd_t*, align 8
  %x = alloca i64, align 8
  %y = alloca i64, align 8
  %z = alloca i64, align 8
  %xbit = alloca i64, align 8
  %ybit = alloca i64, align 8
  %k = alloca i32, align 4
  %mswdigits = alloca i32, align 4
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !644, metadata !2395), !dbg !5317
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !645, metadata !2395), !dbg !5318
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !646, metadata !2395), !dbg !5319
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !647, metadata !2395), !dbg !5320
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !648, metadata !2395), !dbg !5321
  %0 = bitcast %struct.mpd_t** %big to i8*, !dbg !5322
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !5322
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %big, metadata !649, metadata !2395), !dbg !5323
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5324, !tbaa !2505
  store %struct.mpd_t* %1, %struct.mpd_t** %big, align 8, !dbg !5323, !tbaa !2505
  %2 = bitcast %struct.mpd_t** %small to i8*, !dbg !5322
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !5322
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %small, metadata !650, metadata !2395), !dbg !5325
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !5326, !tbaa !2505
  store %struct.mpd_t* %3, %struct.mpd_t** %small, align 8, !dbg !5325, !tbaa !2505
  %4 = bitcast i64* %x to i8*, !dbg !5327
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !5327
  call void @llvm.dbg.declare(metadata i64* %x, metadata !651, metadata !2395), !dbg !5328
  %5 = bitcast i64* %y to i8*, !dbg !5327
  call void @llvm.lifetime.start(i64 8, i8* %5) #4, !dbg !5327
  call void @llvm.dbg.declare(metadata i64* %y, metadata !652, metadata !2395), !dbg !5329
  %6 = bitcast i64* %z to i8*, !dbg !5327
  call void @llvm.lifetime.start(i64 8, i8* %6) #4, !dbg !5327
  call void @llvm.dbg.declare(metadata i64* %z, metadata !653, metadata !2395), !dbg !5330
  %7 = bitcast i64* %xbit to i8*, !dbg !5327
  call void @llvm.lifetime.start(i64 8, i8* %7) #4, !dbg !5327
  call void @llvm.dbg.declare(metadata i64* %xbit, metadata !654, metadata !2395), !dbg !5331
  %8 = bitcast i64* %ybit to i8*, !dbg !5327
  call void @llvm.lifetime.start(i64 8, i8* %8) #4, !dbg !5327
  call void @llvm.dbg.declare(metadata i64* %ybit, metadata !655, metadata !2395), !dbg !5332
  %9 = bitcast i32* %k to i8*, !dbg !5333
  call void @llvm.lifetime.start(i64 4, i8* %9) #4, !dbg !5333
  call void @llvm.dbg.declare(metadata i32* %k, metadata !656, metadata !2395), !dbg !5334
  %10 = bitcast i32* %mswdigits to i8*, !dbg !5333
  call void @llvm.lifetime.start(i64 4, i8* %10) #4, !dbg !5333
  call void @llvm.dbg.declare(metadata i32* %mswdigits, metadata !657, metadata !2395), !dbg !5335
  %11 = bitcast i64* %i to i8*, !dbg !5336
  call void @llvm.lifetime.start(i64 8, i8* %11) #4, !dbg !5336
  call void @llvm.dbg.declare(metadata i64* %i, metadata !658, metadata !2395), !dbg !5337
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5338, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %12), !dbg !5340
  %tobool = icmp ne i32 %call, 0, !dbg !5340
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5341

lor.lhs.false:                                    ; preds = %entry
  %13 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !5342, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %13), !dbg !5344
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5344
  br i1 %tobool2, label %if.then, label %lor.lhs.false.3, !dbg !5345

lor.lhs.false.3:                                  ; preds = %lor.lhs.false
  %14 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5346, !tbaa !2505
  %call4 = call i32 @mpd_isnegative(%struct.mpd_t* %14), !dbg !5347
  %tobool5 = icmp ne i32 %call4, 0, !dbg !5347
  br i1 %tobool5, label %if.then, label %lor.lhs.false.6, !dbg !5348

lor.lhs.false.6:                                  ; preds = %lor.lhs.false.3
  %15 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !5349, !tbaa !2505
  %call7 = call i32 @mpd_isnegative(%struct.mpd_t* %15), !dbg !5350
  %tobool8 = icmp ne i32 %call7, 0, !dbg !5350
  br i1 %tobool8, label %if.then, label %lor.lhs.false.9, !dbg !5351

lor.lhs.false.9:                                  ; preds = %lor.lhs.false.6
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5352, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %16, i32 0, i32 1, !dbg !5353
  %17 = load i64, i64* %exp, align 8, !dbg !5353, !tbaa !2510
  %cmp = icmp ne i64 %17, 0, !dbg !5354
  br i1 %cmp, label %if.then, label %lor.lhs.false.10, !dbg !5355

lor.lhs.false.10:                                 ; preds = %lor.lhs.false.9
  %18 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !5356, !tbaa !2505
  %exp11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %18, i32 0, i32 1, !dbg !5357
  %19 = load i64, i64* %exp11, align 8, !dbg !5357, !tbaa !2510
  %cmp12 = icmp ne i64 %19, 0, !dbg !5358
  br i1 %cmp12, label %if.then, label %if.end, !dbg !5359

if.then:                                          ; preds = %lor.lhs.false.10, %lor.lhs.false.9, %lor.lhs.false.6, %lor.lhs.false.3, %lor.lhs.false, %entry
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5360, !tbaa !2505
  %21 = load i32*, i32** %status.addr, align 8, !dbg !5362, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %20, i32 256, i32* %21), !dbg !5363
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5364

if.end:                                           ; preds = %lor.lhs.false.10
  %22 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !5365, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %22, i32 0, i32 2, !dbg !5367
  %23 = load i64, i64* %digits, align 8, !dbg !5367, !tbaa !2514
  %24 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5368, !tbaa !2505
  %digits13 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %24, i32 0, i32 2, !dbg !5369
  %25 = load i64, i64* %digits13, align 8, !dbg !5369, !tbaa !2514
  %cmp14 = icmp sgt i64 %23, %25, !dbg !5370
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !5371

if.then.15:                                       ; preds = %if.end
  %26 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !5372, !tbaa !2505
  store %struct.mpd_t* %26, %struct.mpd_t** %big, align 8, !dbg !5374, !tbaa !2505
  %27 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5375, !tbaa !2505
  store %struct.mpd_t* %27, %struct.mpd_t** %small, align 8, !dbg !5376, !tbaa !2505
  br label %if.end.16, !dbg !5377

if.end.16:                                        ; preds = %if.then.15, %if.end
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5378, !tbaa !2505
  %29 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !5380, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %29, i32 0, i32 3, !dbg !5381
  %30 = load i64, i64* %len, align 8, !dbg !5381, !tbaa !2542
  %31 = load i32*, i32** %status.addr, align 8, !dbg !5382, !tbaa !2505
  %call17 = call i32 @mpd_qresize(%struct.mpd_t* %28, i64 %30, i32* %31), !dbg !5383
  %tobool18 = icmp ne i32 %call17, 0, !dbg !5383
  br i1 %tobool18, label %if.end.20, label %if.then.19, !dbg !5384

if.then.19:                                       ; preds = %if.end.16
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5385

if.end.20:                                        ; preds = %if.end.16
  store i64 0, i64* %i, align 8, !dbg !5387, !tbaa !2391
  br label %for.cond, !dbg !5389

for.cond:                                         ; preds = %for.inc.39, %if.end.20
  %32 = load i64, i64* %i, align 8, !dbg !5390, !tbaa !2391
  %33 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !5394, !tbaa !2505
  %len21 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %33, i32 0, i32 3, !dbg !5395
  %34 = load i64, i64* %len21, align 8, !dbg !5395, !tbaa !2542
  %sub = sub i64 %34, 1, !dbg !5396
  %cmp22 = icmp slt i64 %32, %sub, !dbg !5397
  br i1 %cmp22, label %for.body, label %for.end.41, !dbg !5398

for.body:                                         ; preds = %for.cond
  %35 = load i64, i64* %i, align 8, !dbg !5399, !tbaa !2391
  %36 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !5401, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %36, i32 0, i32 5, !dbg !5402
  %37 = load i64*, i64** %data, align 8, !dbg !5402, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %37, i64 %35, !dbg !5401
  %38 = load i64, i64* %arrayidx, align 8, !dbg !5401, !tbaa !2391
  store i64 %38, i64* %x, align 8, !dbg !5403, !tbaa !2391
  %39 = load i64, i64* %i, align 8, !dbg !5404, !tbaa !2391
  %40 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !5405, !tbaa !2505
  %data23 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %40, i32 0, i32 5, !dbg !5406
  %41 = load i64*, i64** %data23, align 8, !dbg !5406, !tbaa !2546
  %arrayidx24 = getelementptr i64, i64* %41, i64 %39, !dbg !5405
  %42 = load i64, i64* %arrayidx24, align 8, !dbg !5405, !tbaa !2391
  store i64 %42, i64* %y, align 8, !dbg !5407, !tbaa !2391
  store i64 0, i64* %z, align 8, !dbg !5408, !tbaa !2391
  store i32 0, i32* %k, align 4, !dbg !5409, !tbaa !2554
  br label %for.cond.25, !dbg !5411

for.cond.25:                                      ; preds = %for.inc, %for.body
  %43 = load i32, i32* %k, align 4, !dbg !5412, !tbaa !2554
  %cmp26 = icmp slt i32 %43, 19, !dbg !5416
  br i1 %cmp26, label %for.body.27, label %for.end, !dbg !5417

for.body.27:                                      ; preds = %for.cond.25
  %44 = load i64, i64* %x, align 8, !dbg !5418, !tbaa !2391
  %rem = urem i64 %44, 10, !dbg !5420
  store i64 %rem, i64* %xbit, align 8, !dbg !5421, !tbaa !2391
  %45 = load i64, i64* %x, align 8, !dbg !5422, !tbaa !2391
  %div = udiv i64 %45, 10, !dbg !5422
  store i64 %div, i64* %x, align 8, !dbg !5422, !tbaa !2391
  %46 = load i64, i64* %y, align 8, !dbg !5423, !tbaa !2391
  %rem28 = urem i64 %46, 10, !dbg !5424
  store i64 %rem28, i64* %ybit, align 8, !dbg !5425, !tbaa !2391
  %47 = load i64, i64* %y, align 8, !dbg !5426, !tbaa !2391
  %div29 = udiv i64 %47, 10, !dbg !5426
  store i64 %div29, i64* %y, align 8, !dbg !5426, !tbaa !2391
  %48 = load i64, i64* %xbit, align 8, !dbg !5427, !tbaa !2391
  %cmp30 = icmp ugt i64 %48, 1, !dbg !5429
  br i1 %cmp30, label %if.then.33, label %lor.lhs.false.31, !dbg !5430

lor.lhs.false.31:                                 ; preds = %for.body.27
  %49 = load i64, i64* %ybit, align 8, !dbg !5431, !tbaa !2391
  %cmp32 = icmp ugt i64 %49, 1, !dbg !5433
  br i1 %cmp32, label %if.then.33, label %if.end.34, !dbg !5434

if.then.33:                                       ; preds = %lor.lhs.false.31, %for.body.27
  br label %invalid_operation, !dbg !5435

if.end.34:                                        ; preds = %lor.lhs.false.31
  %50 = load i64, i64* %xbit, align 8, !dbg !5437, !tbaa !2391
  %51 = load i64, i64* %ybit, align 8, !dbg !5438, !tbaa !2391
  %and = and i64 %50, %51, !dbg !5439
  %tobool35 = icmp ne i64 %and, 0, !dbg !5439
  br i1 %tobool35, label %cond.true, label %cond.false, !dbg !5440

cond.true:                                        ; preds = %if.end.34
  %52 = load i32, i32* %k, align 4, !dbg !5441, !tbaa !2554
  %idxprom = sext i32 %52 to i64, !dbg !5443
  %arrayidx36 = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %idxprom, !dbg !5443
  %53 = load i64, i64* %arrayidx36, align 8, !dbg !5443, !tbaa !2391
  br label %cond.end, !dbg !5440

cond.false:                                       ; preds = %if.end.34
  br label %cond.end, !dbg !5444

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %53, %cond.true ], [ 0, %cond.false ], !dbg !5440
  %54 = load i64, i64* %z, align 8, !dbg !5446, !tbaa !2391
  %add = add i64 %54, %cond, !dbg !5446
  store i64 %add, i64* %z, align 8, !dbg !5446, !tbaa !2391
  br label %for.inc, !dbg !5449

for.inc:                                          ; preds = %cond.end
  %55 = load i32, i32* %k, align 4, !dbg !5450, !tbaa !2554
  %inc = add i32 %55, 1, !dbg !5450
  store i32 %inc, i32* %k, align 4, !dbg !5450, !tbaa !2554
  br label %for.cond.25, !dbg !5451

for.end:                                          ; preds = %for.cond.25
  %56 = load i64, i64* %z, align 8, !dbg !5452, !tbaa !2391
  %57 = load i64, i64* %i, align 8, !dbg !5453, !tbaa !2391
  %58 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5454, !tbaa !2505
  %data37 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %58, i32 0, i32 5, !dbg !5455
  %59 = load i64*, i64** %data37, align 8, !dbg !5455, !tbaa !2546
  %arrayidx38 = getelementptr i64, i64* %59, i64 %57, !dbg !5454
  store i64 %56, i64* %arrayidx38, align 8, !dbg !5456, !tbaa !2391
  br label %for.inc.39, !dbg !5457

for.inc.39:                                       ; preds = %for.end
  %60 = load i64, i64* %i, align 8, !dbg !5458, !tbaa !2391
  %inc40 = add i64 %60, 1, !dbg !5458
  store i64 %inc40, i64* %i, align 8, !dbg !5458, !tbaa !2391
  br label %for.cond, !dbg !5459

for.end.41:                                       ; preds = %for.cond
  %61 = load i64, i64* %i, align 8, !dbg !5460, !tbaa !2391
  %62 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !5461, !tbaa !2505
  %data42 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %62, i32 0, i32 5, !dbg !5462
  %63 = load i64*, i64** %data42, align 8, !dbg !5462, !tbaa !2546
  %arrayidx43 = getelementptr i64, i64* %63, i64 %61, !dbg !5461
  %64 = load i64, i64* %arrayidx43, align 8, !dbg !5461, !tbaa !2391
  store i64 %64, i64* %x, align 8, !dbg !5463, !tbaa !2391
  %65 = load i64, i64* %i, align 8, !dbg !5464, !tbaa !2391
  %66 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !5465, !tbaa !2505
  %data44 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %66, i32 0, i32 5, !dbg !5466
  %67 = load i64*, i64** %data44, align 8, !dbg !5466, !tbaa !2546
  %arrayidx45 = getelementptr i64, i64* %67, i64 %65, !dbg !5465
  %68 = load i64, i64* %arrayidx45, align 8, !dbg !5465, !tbaa !2391
  store i64 %68, i64* %y, align 8, !dbg !5467, !tbaa !2391
  store i64 0, i64* %z, align 8, !dbg !5468, !tbaa !2391
  %69 = load i64, i64* %x, align 8, !dbg !5469, !tbaa !2391
  %call46 = call i32 @mpd_word_digits(i64 %69), !dbg !5470
  store i32 %call46, i32* %mswdigits, align 4, !dbg !5471, !tbaa !2554
  store i32 0, i32* %k, align 4, !dbg !5472, !tbaa !2554
  br label %for.cond.47, !dbg !5474

for.cond.47:                                      ; preds = %for.inc.68, %for.end.41
  %70 = load i32, i32* %k, align 4, !dbg !5475, !tbaa !2554
  %71 = load i32, i32* %mswdigits, align 4, !dbg !5479, !tbaa !2554
  %cmp48 = icmp slt i32 %70, %71, !dbg !5480
  br i1 %cmp48, label %for.body.49, label %for.end.70, !dbg !5481

for.body.49:                                      ; preds = %for.cond.47
  %72 = load i64, i64* %x, align 8, !dbg !5482, !tbaa !2391
  %rem50 = urem i64 %72, 10, !dbg !5484
  store i64 %rem50, i64* %xbit, align 8, !dbg !5485, !tbaa !2391
  %73 = load i64, i64* %x, align 8, !dbg !5486, !tbaa !2391
  %div51 = udiv i64 %73, 10, !dbg !5486
  store i64 %div51, i64* %x, align 8, !dbg !5486, !tbaa !2391
  %74 = load i64, i64* %y, align 8, !dbg !5487, !tbaa !2391
  %rem52 = urem i64 %74, 10, !dbg !5488
  store i64 %rem52, i64* %ybit, align 8, !dbg !5489, !tbaa !2391
  %75 = load i64, i64* %y, align 8, !dbg !5490, !tbaa !2391
  %div53 = udiv i64 %75, 10, !dbg !5490
  store i64 %div53, i64* %y, align 8, !dbg !5490, !tbaa !2391
  %76 = load i64, i64* %xbit, align 8, !dbg !5491, !tbaa !2391
  %cmp54 = icmp ugt i64 %76, 1, !dbg !5493
  br i1 %cmp54, label %if.then.57, label %lor.lhs.false.55, !dbg !5494

lor.lhs.false.55:                                 ; preds = %for.body.49
  %77 = load i64, i64* %ybit, align 8, !dbg !5495, !tbaa !2391
  %cmp56 = icmp ugt i64 %77, 1, !dbg !5497
  br i1 %cmp56, label %if.then.57, label %if.end.58, !dbg !5498

if.then.57:                                       ; preds = %lor.lhs.false.55, %for.body.49
  br label %invalid_operation, !dbg !5499

if.end.58:                                        ; preds = %lor.lhs.false.55
  %78 = load i64, i64* %xbit, align 8, !dbg !5501, !tbaa !2391
  %79 = load i64, i64* %ybit, align 8, !dbg !5502, !tbaa !2391
  %and59 = and i64 %78, %79, !dbg !5503
  %tobool60 = icmp ne i64 %and59, 0, !dbg !5503
  br i1 %tobool60, label %cond.true.61, label %cond.false.64, !dbg !5504

cond.true.61:                                     ; preds = %if.end.58
  %80 = load i32, i32* %k, align 4, !dbg !5505, !tbaa !2554
  %idxprom62 = sext i32 %80 to i64, !dbg !5507
  %arrayidx63 = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %idxprom62, !dbg !5507
  %81 = load i64, i64* %arrayidx63, align 8, !dbg !5507, !tbaa !2391
  br label %cond.end.65, !dbg !5504

cond.false.64:                                    ; preds = %if.end.58
  br label %cond.end.65, !dbg !5508

cond.end.65:                                      ; preds = %cond.false.64, %cond.true.61
  %cond66 = phi i64 [ %81, %cond.true.61 ], [ 0, %cond.false.64 ], !dbg !5504
  %82 = load i64, i64* %z, align 8, !dbg !5510, !tbaa !2391
  %add67 = add i64 %82, %cond66, !dbg !5510
  store i64 %add67, i64* %z, align 8, !dbg !5510, !tbaa !2391
  br label %for.inc.68, !dbg !5513

for.inc.68:                                       ; preds = %cond.end.65
  %83 = load i32, i32* %k, align 4, !dbg !5514, !tbaa !2554
  %inc69 = add i32 %83, 1, !dbg !5514
  store i32 %inc69, i32* %k, align 4, !dbg !5514, !tbaa !2554
  br label %for.cond.47, !dbg !5515

for.end.70:                                       ; preds = %for.cond.47
  %84 = load i64, i64* %z, align 8, !dbg !5516, !tbaa !2391
  %85 = load i64, i64* %i, align 8, !dbg !5517, !tbaa !2391
  %inc71 = add i64 %85, 1, !dbg !5517
  store i64 %inc71, i64* %i, align 8, !dbg !5517, !tbaa !2391
  %86 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5518, !tbaa !2505
  %data72 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %86, i32 0, i32 5, !dbg !5519
  %87 = load i64*, i64** %data72, align 8, !dbg !5519, !tbaa !2546
  %arrayidx73 = getelementptr i64, i64* %87, i64 %85, !dbg !5518
  store i64 %84, i64* %arrayidx73, align 8, !dbg !5520, !tbaa !2391
  br label %for.cond.74, !dbg !5521

for.cond.74:                                      ; preds = %for.inc.82, %for.end.70
  %88 = load i32, i32* %k, align 4, !dbg !5522, !tbaa !2554
  %cmp75 = icmp slt i32 %88, 19, !dbg !5527
  br i1 %cmp75, label %for.body.76, label %for.end.84, !dbg !5528

for.body.76:                                      ; preds = %for.cond.74
  %89 = load i64, i64* %y, align 8, !dbg !5529, !tbaa !2391
  %rem77 = urem i64 %89, 10, !dbg !5531
  store i64 %rem77, i64* %ybit, align 8, !dbg !5532, !tbaa !2391
  %90 = load i64, i64* %y, align 8, !dbg !5533, !tbaa !2391
  %div78 = udiv i64 %90, 10, !dbg !5533
  store i64 %div78, i64* %y, align 8, !dbg !5533, !tbaa !2391
  %91 = load i64, i64* %ybit, align 8, !dbg !5534, !tbaa !2391
  %cmp79 = icmp ugt i64 %91, 1, !dbg !5536
  br i1 %cmp79, label %if.then.80, label %if.end.81, !dbg !5537

if.then.80:                                       ; preds = %for.body.76
  br label %invalid_operation, !dbg !5538

if.end.81:                                        ; preds = %for.body.76
  br label %for.inc.82, !dbg !5540

for.inc.82:                                       ; preds = %if.end.81
  %92 = load i32, i32* %k, align 4, !dbg !5541, !tbaa !2554
  %inc83 = add i32 %92, 1, !dbg !5541
  store i32 %inc83, i32* %k, align 4, !dbg !5541, !tbaa !2554
  br label %for.cond.74, !dbg !5542

for.end.84:                                       ; preds = %for.cond.74
  br label %for.cond.85, !dbg !5543

for.cond.85:                                      ; preds = %for.inc.102, %for.end.84
  %93 = load i64, i64* %i, align 8, !dbg !5544, !tbaa !2391
  %94 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !5549, !tbaa !2505
  %len86 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %94, i32 0, i32 3, !dbg !5550
  %95 = load i64, i64* %len86, align 8, !dbg !5550, !tbaa !2542
  %cmp87 = icmp slt i64 %93, %95, !dbg !5551
  br i1 %cmp87, label %for.body.88, label %for.end.104, !dbg !5552

for.body.88:                                      ; preds = %for.cond.85
  %96 = load i64, i64* %i, align 8, !dbg !5553, !tbaa !2391
  %97 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !5555, !tbaa !2505
  %data89 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %97, i32 0, i32 5, !dbg !5556
  %98 = load i64*, i64** %data89, align 8, !dbg !5556, !tbaa !2546
  %arrayidx90 = getelementptr i64, i64* %98, i64 %96, !dbg !5555
  %99 = load i64, i64* %arrayidx90, align 8, !dbg !5555, !tbaa !2391
  store i64 %99, i64* %y, align 8, !dbg !5557, !tbaa !2391
  store i32 0, i32* %k, align 4, !dbg !5558, !tbaa !2554
  br label %for.cond.91, !dbg !5560

for.cond.91:                                      ; preds = %for.inc.99, %for.body.88
  %100 = load i32, i32* %k, align 4, !dbg !5561, !tbaa !2554
  %cmp92 = icmp slt i32 %100, 19, !dbg !5565
  br i1 %cmp92, label %for.body.93, label %for.end.101, !dbg !5566

for.body.93:                                      ; preds = %for.cond.91
  %101 = load i64, i64* %y, align 8, !dbg !5567, !tbaa !2391
  %rem94 = urem i64 %101, 10, !dbg !5569
  store i64 %rem94, i64* %ybit, align 8, !dbg !5570, !tbaa !2391
  %102 = load i64, i64* %y, align 8, !dbg !5571, !tbaa !2391
  %div95 = udiv i64 %102, 10, !dbg !5571
  store i64 %div95, i64* %y, align 8, !dbg !5571, !tbaa !2391
  %103 = load i64, i64* %ybit, align 8, !dbg !5572, !tbaa !2391
  %cmp96 = icmp ugt i64 %103, 1, !dbg !5574
  br i1 %cmp96, label %if.then.97, label %if.end.98, !dbg !5575

if.then.97:                                       ; preds = %for.body.93
  br label %invalid_operation, !dbg !5576

if.end.98:                                        ; preds = %for.body.93
  br label %for.inc.99, !dbg !5578

for.inc.99:                                       ; preds = %if.end.98
  %104 = load i32, i32* %k, align 4, !dbg !5579, !tbaa !2554
  %inc100 = add i32 %104, 1, !dbg !5579
  store i32 %inc100, i32* %k, align 4, !dbg !5579, !tbaa !2554
  br label %for.cond.91, !dbg !5580

for.end.101:                                      ; preds = %for.cond.91
  br label %for.inc.102, !dbg !5581

for.inc.102:                                      ; preds = %for.end.101
  %105 = load i64, i64* %i, align 8, !dbg !5582, !tbaa !2391
  %inc103 = add i64 %105, 1, !dbg !5582
  store i64 %inc103, i64* %i, align 8, !dbg !5582, !tbaa !2391
  br label %for.cond.85, !dbg !5583

for.end.104:                                      ; preds = %for.cond.85
  %106 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5584, !tbaa !2505
  call void @mpd_clear_flags(%struct.mpd_t* %106), !dbg !5585
  %107 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5586, !tbaa !2505
  %exp105 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %107, i32 0, i32 1, !dbg !5587
  store i64 0, i64* %exp105, align 8, !dbg !5588, !tbaa !2510
  %108 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5589, !tbaa !2505
  %data106 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %108, i32 0, i32 5, !dbg !5590
  %109 = load i64*, i64** %data106, align 8, !dbg !5590, !tbaa !2546
  %110 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !5591, !tbaa !2505
  %len107 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %110, i32 0, i32 3, !dbg !5592
  %111 = load i64, i64* %len107, align 8, !dbg !5592, !tbaa !2542
  %call108 = call i64 @_mpd_real_size(i64* %109, i64 %111), !dbg !5593
  %112 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5594, !tbaa !2505
  %len109 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %112, i32 0, i32 3, !dbg !5595
  store i64 %call108, i64* %len109, align 8, !dbg !5596, !tbaa !2542
  %113 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5597, !tbaa !2505
  %114 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5598, !tbaa !2505
  %len110 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %114, i32 0, i32 3, !dbg !5599
  %115 = load i64, i64* %len110, align 8, !dbg !5599, !tbaa !2542
  %116 = load i32*, i32** %status.addr, align 8, !dbg !5600, !tbaa !2505
  %call111 = call i32 @mpd_qresize(%struct.mpd_t* %113, i64 %115, i32* %116), !dbg !5601
  %117 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5602, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %117), !dbg !5603
  %118 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5604, !tbaa !2505
  %119 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !5605, !tbaa !2505
  call void @_mpd_cap(%struct.mpd_t* %118, %struct.mpd_context_t* %119), !dbg !5606
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5607

invalid_operation:                                ; preds = %if.then.97, %if.then.80, %if.then.57, %if.then.33
  %120 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5608, !tbaa !2505
  %121 = load i32*, i32** %status.addr, align 8, !dbg !5609, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %120, i32 256, i32* %121), !dbg !5610
  store i32 0, i32* %cleanup.dest.slot, !dbg !5611
  br label %cleanup, !dbg !5611

cleanup:                                          ; preds = %invalid_operation, %for.end.104, %if.then.19, %if.then
  %122 = bitcast i64* %i to i8*, !dbg !5612
  call void @llvm.lifetime.end(i64 8, i8* %122) #4, !dbg !5612
  %123 = bitcast i32* %mswdigits to i8*, !dbg !5612
  call void @llvm.lifetime.end(i64 4, i8* %123) #4, !dbg !5612
  %124 = bitcast i32* %k to i8*, !dbg !5612
  call void @llvm.lifetime.end(i64 4, i8* %124) #4, !dbg !5612
  %125 = bitcast i64* %ybit to i8*, !dbg !5612
  call void @llvm.lifetime.end(i64 8, i8* %125) #4, !dbg !5612
  %126 = bitcast i64* %xbit to i8*, !dbg !5612
  call void @llvm.lifetime.end(i64 8, i8* %126) #4, !dbg !5612
  %127 = bitcast i64* %z to i8*, !dbg !5612
  call void @llvm.lifetime.end(i64 8, i8* %127) #4, !dbg !5612
  %128 = bitcast i64* %y to i8*, !dbg !5612
  call void @llvm.lifetime.end(i64 8, i8* %128) #4, !dbg !5612
  %129 = bitcast i64* %x to i8*, !dbg !5612
  call void @llvm.lifetime.end(i64 8, i8* %129) #4, !dbg !5612
  %130 = bitcast %struct.mpd_t** %small to i8*, !dbg !5612
  call void @llvm.lifetime.end(i64 8, i8* %130) #4, !dbg !5612
  %131 = bitcast %struct.mpd_t** %big to i8*, !dbg !5612
  call void @llvm.lifetime.end(i64 8, i8* %131) #4, !dbg !5612
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !5611

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @_mpd_real_size(i64* %data, i64 %size) #3 {
entry:
  %data.addr = alloca i64*, align 8
  %size.addr = alloca i64, align 8
  store i64* %data, i64** %data.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !1624, metadata !2395), !dbg !5614
  store i64 %size, i64* %size.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !1625, metadata !2395), !dbg !5615
  br label %while.cond, !dbg !5616

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i64, i64* %size.addr, align 8, !dbg !5617, !tbaa !2391
  %cmp = icmp sgt i64 %0, 1, !dbg !5620
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5621

land.rhs:                                         ; preds = %while.cond
  %1 = load i64, i64* %size.addr, align 8, !dbg !5622, !tbaa !2391
  %sub = sub i64 %1, 1, !dbg !5624
  %2 = load i64*, i64** %data.addr, align 8, !dbg !5625, !tbaa !2505
  %arrayidx = getelementptr i64, i64* %2, i64 %sub, !dbg !5625
  %3 = load i64, i64* %arrayidx, align 8, !dbg !5625, !tbaa !2391
  %cmp1 = icmp eq i64 %3, 0, !dbg !5626
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %4, label %while.body, label %while.end, !dbg !5627

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %size.addr, align 8, !dbg !5629, !tbaa !2391
  %dec = add i64 %5, -1, !dbg !5629
  store i64 %dec, i64* %size.addr, align 8, !dbg !5629, !tbaa !2391
  br label %while.cond, !dbg !5616

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %size.addr, align 8, !dbg !5631, !tbaa !2391
  ret i64 %6, !dbg !5632
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_cap(%struct.mpd_t* %result, %struct.mpd_context_t* %ctx) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %dummy = alloca i32, align 4
  %len = alloca i64, align 8
  %r = alloca i64, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1628, metadata !2395), !dbg !5633
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1629, metadata !2395), !dbg !5634
  %0 = bitcast i32* %dummy to i8*, !dbg !5635
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !5635
  call void @llvm.dbg.declare(metadata i32* %dummy, metadata !1630, metadata !2395), !dbg !5636
  %1 = bitcast i64* %len to i8*, !dbg !5637
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !5637
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1631, metadata !2395), !dbg !5638
  %2 = bitcast i64* %r to i8*, !dbg !5637
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !5637
  call void @llvm.dbg.declare(metadata i64* %r, metadata !1632, metadata !2395), !dbg !5639
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5640, !tbaa !2505
  %len1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 3, !dbg !5642
  %4 = load i64, i64* %len1, align 8, !dbg !5642, !tbaa !2542
  %cmp = icmp sgt i64 %4, 0, !dbg !5643
  br i1 %cmp, label %land.lhs.true, label %if.end.11, !dbg !5644

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5645, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %5, i32 0, i32 2, !dbg !5647
  %6 = load i64, i64* %digits, align 8, !dbg !5647, !tbaa !2514
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !5648, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %7, i32 0, i32 0, !dbg !5649
  %8 = load i64, i64* %prec, align 8, !dbg !5649, !tbaa !2526
  %cmp2 = icmp sgt i64 %6, %8, !dbg !5650
  br i1 %cmp2, label %if.then, label %if.end.11, !dbg !5651

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !5652, !tbaa !2505
  %prec3 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %9, i32 0, i32 0, !dbg !5654
  %10 = load i64, i64* %prec3, align 8, !dbg !5654, !tbaa !2526
  call void @_mpd_idiv_word(i64* %len, i64* %r, i64 %10, i64 19), !dbg !5655
  %11 = load i64, i64* %r, align 8, !dbg !5656, !tbaa !2391
  %cmp4 = icmp eq i64 %11, 0, !dbg !5657
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !5658

cond.true:                                        ; preds = %if.then
  %12 = load i64, i64* %len, align 8, !dbg !5659, !tbaa !2391
  br label %cond.end, !dbg !5658

cond.false:                                       ; preds = %if.then
  %13 = load i64, i64* %len, align 8, !dbg !5661, !tbaa !2391
  %add = add i64 %13, 1, !dbg !5663
  br label %cond.end, !dbg !5658

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %12, %cond.true ], [ %add, %cond.false ], !dbg !5658
  store i64 %cond, i64* %len, align 8, !dbg !5664, !tbaa !2391
  %14 = load i64, i64* %r, align 8, !dbg !5667, !tbaa !2391
  %cmp5 = icmp ne i64 %14, 0, !dbg !5669
  br i1 %cmp5, label %if.then.6, label %if.end, !dbg !5670

if.then.6:                                        ; preds = %cond.end
  %15 = load i64, i64* %r, align 8, !dbg !5671, !tbaa !2391
  %arrayidx = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %15, !dbg !5673
  %16 = load i64, i64* %arrayidx, align 8, !dbg !5673, !tbaa !2391
  %17 = load i64, i64* %len, align 8, !dbg !5674, !tbaa !2391
  %sub = sub i64 %17, 1, !dbg !5675
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5676, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %18, i32 0, i32 5, !dbg !5677
  %19 = load i64*, i64** %data, align 8, !dbg !5677, !tbaa !2546
  %arrayidx7 = getelementptr i64, i64* %19, i64 %sub, !dbg !5676
  %20 = load i64, i64* %arrayidx7, align 8, !dbg !5678, !tbaa !2391
  %rem = urem i64 %20, %16, !dbg !5678
  store i64 %rem, i64* %arrayidx7, align 8, !dbg !5678, !tbaa !2391
  br label %if.end, !dbg !5679

if.end:                                           ; preds = %if.then.6, %cond.end
  %21 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5680, !tbaa !2505
  %data8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %21, i32 0, i32 5, !dbg !5681
  %22 = load i64*, i64** %data8, align 8, !dbg !5681, !tbaa !2546
  %23 = load i64, i64* %len, align 8, !dbg !5682, !tbaa !2391
  %call = call i64 @_mpd_real_size(i64* %22, i64 %23), !dbg !5683
  store i64 %call, i64* %len, align 8, !dbg !5684, !tbaa !2391
  %24 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5685, !tbaa !2505
  %25 = load i64, i64* %len, align 8, !dbg !5686, !tbaa !2391
  %call9 = call i32 @mpd_qresize(%struct.mpd_t* %24, i64 %25, i32* %dummy), !dbg !5687
  %26 = load i64, i64* %len, align 8, !dbg !5688, !tbaa !2391
  %27 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5689, !tbaa !2505
  %len10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %27, i32 0, i32 3, !dbg !5690
  store i64 %26, i64* %len10, align 8, !dbg !5691, !tbaa !2542
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5692, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %28), !dbg !5693
  br label %if.end.11, !dbg !5694

if.end.11:                                        ; preds = %if.end, %land.lhs.true, %entry
  %29 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5695, !tbaa !2505
  %call12 = call i32 @mpd_iszero(%struct.mpd_t* %29), !dbg !5697
  %tobool = icmp ne i32 %call12, 0, !dbg !5697
  br i1 %tobool, label %if.then.13, label %if.end.15, !dbg !5698

if.then.13:                                       ; preds = %if.end.11
  %30 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5699, !tbaa !2505
  %31 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5701, !tbaa !2505
  %call14 = call zeroext i8 @mpd_sign(%struct.mpd_t* %31), !dbg !5702
  %32 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5703, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %32, i32 0, i32 1, !dbg !5704
  %33 = load i64, i64* %exp, align 8, !dbg !5704, !tbaa !2510
  call void @_settriple(%struct.mpd_t* %30, i8 zeroext %call14, i64 0, i64 %33), !dbg !5705
  br label %if.end.15, !dbg !5706

if.end.15:                                        ; preds = %if.then.13, %if.end.11
  %34 = bitcast i64* %r to i8*, !dbg !5707
  call void @llvm.lifetime.end(i64 8, i8* %34) #4, !dbg !5707
  %35 = bitcast i64* %len to i8*, !dbg !5707
  call void @llvm.lifetime.end(i64 8, i8* %35) #4, !dbg !5707
  %36 = bitcast i32* %dummy to i8*, !dbg !5707
  call void @llvm.lifetime.end(i64 4, i8* %36) #4, !dbg !5707
  ret void, !dbg !5707
}

; Function Attrs: nounwind uwtable
define hidden i8* @mpd_class(%struct.mpd_t* %a, %struct.mpd_context_t* %ctx) #0 {
entry:
  %retval = alloca i8*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !663, metadata !2395), !dbg !5708
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !664, metadata !2395), !dbg !5709
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5710, !tbaa !2505
  %call = call i32 @mpd_isnan(%struct.mpd_t* %0), !dbg !5712
  %tobool = icmp ne i32 %call, 0, !dbg !5712
  br i1 %tobool, label %if.then, label %if.else.4, !dbg !5713

if.then:                                          ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5714, !tbaa !2505
  %call1 = call i32 @mpd_isqnan(%struct.mpd_t* %1), !dbg !5717
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5717
  br i1 %tobool2, label %if.then.3, label %if.else, !dbg !5718

if.then.3:                                        ; preds = %if.then
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i8** %retval, !dbg !5719
  br label %return, !dbg !5719

if.else:                                          ; preds = %if.then
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i8** %retval, !dbg !5720
  br label %return, !dbg !5720

if.else.4:                                        ; preds = %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5721, !tbaa !2505
  %call5 = call i32 @mpd_ispositive(%struct.mpd_t* %2), !dbg !5723
  %tobool6 = icmp ne i32 %call5, 0, !dbg !5723
  br i1 %tobool6, label %if.then.7, label %if.else.20, !dbg !5724

if.then.7:                                        ; preds = %if.else.4
  %3 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5725, !tbaa !2505
  %call8 = call i32 @mpd_isinfinite(%struct.mpd_t* %3), !dbg !5728
  %tobool9 = icmp ne i32 %call8, 0, !dbg !5728
  br i1 %tobool9, label %if.then.10, label %if.else.11, !dbg !5729

if.then.10:                                       ; preds = %if.then.7
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), i8** %retval, !dbg !5730
  br label %return, !dbg !5730

if.else.11:                                       ; preds = %if.then.7
  %4 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5731, !tbaa !2505
  %call12 = call i32 @mpd_iszero(%struct.mpd_t* %4), !dbg !5733
  %tobool13 = icmp ne i32 %call12, 0, !dbg !5733
  br i1 %tobool13, label %if.then.14, label %if.else.15, !dbg !5734

if.then.14:                                       ; preds = %if.else.11
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8** %retval, !dbg !5735
  br label %return, !dbg !5735

if.else.15:                                       ; preds = %if.else.11
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5736, !tbaa !2505
  %6 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !5738, !tbaa !2505
  %call16 = call i32 @mpd_isnormal(%struct.mpd_t* %5, %struct.mpd_context_t* %6), !dbg !5739
  %tobool17 = icmp ne i32 %call16, 0, !dbg !5739
  br i1 %tobool17, label %if.then.18, label %if.else.19, !dbg !5740

if.then.18:                                       ; preds = %if.else.15
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), i8** %retval, !dbg !5741
  br label %return, !dbg !5741

if.else.19:                                       ; preds = %if.else.15
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0), i8** %retval, !dbg !5742
  br label %return, !dbg !5742

if.else.20:                                       ; preds = %if.else.4
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5743, !tbaa !2505
  %call21 = call i32 @mpd_isinfinite(%struct.mpd_t* %7), !dbg !5746
  %tobool22 = icmp ne i32 %call21, 0, !dbg !5746
  br i1 %tobool22, label %if.then.23, label %if.else.24, !dbg !5747

if.then.23:                                       ; preds = %if.else.20
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i8** %retval, !dbg !5748
  br label %return, !dbg !5748

if.else.24:                                       ; preds = %if.else.20
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5749, !tbaa !2505
  %call25 = call i32 @mpd_iszero(%struct.mpd_t* %8), !dbg !5751
  %tobool26 = icmp ne i32 %call25, 0, !dbg !5751
  br i1 %tobool26, label %if.then.27, label %if.else.28, !dbg !5752

if.then.27:                                       ; preds = %if.else.24
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i8** %retval, !dbg !5753
  br label %return, !dbg !5753

if.else.28:                                       ; preds = %if.else.24
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5754, !tbaa !2505
  %10 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !5756, !tbaa !2505
  %call29 = call i32 @mpd_isnormal(%struct.mpd_t* %9, %struct.mpd_context_t* %10), !dbg !5757
  %tobool30 = icmp ne i32 %call29, 0, !dbg !5757
  br i1 %tobool30, label %if.then.31, label %if.else.32, !dbg !5758

if.then.31:                                       ; preds = %if.else.28
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i8** %retval, !dbg !5759
  br label %return, !dbg !5759

if.else.32:                                       ; preds = %if.else.28
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i8** %retval, !dbg !5760
  br label %return, !dbg !5760

return:                                           ; preds = %if.else.32, %if.then.31, %if.then.27, %if.then.23, %if.else.19, %if.then.18, %if.then.14, %if.then.10, %if.else, %if.then.3
  %11 = load i8*, i8** %retval, !dbg !5761
  ret i8* %11, !dbg !5761
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qinvert(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %x = alloca i64, align 8
  %z = alloca i64, align 8
  %xbit = alloca i64, align 8
  %i = alloca i64, align 8
  %digits = alloca i64, align 8
  %len = alloca i64, align 8
  %q = alloca i64, align 8
  %r = alloca i64, align 8
  %k = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !669, metadata !2395), !dbg !5762
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !670, metadata !2395), !dbg !5763
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !671, metadata !2395), !dbg !5764
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !672, metadata !2395), !dbg !5765
  %0 = bitcast i64* %x to i8*, !dbg !5766
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !5766
  call void @llvm.dbg.declare(metadata i64* %x, metadata !673, metadata !2395), !dbg !5767
  %1 = bitcast i64* %z to i8*, !dbg !5766
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !5766
  call void @llvm.dbg.declare(metadata i64* %z, metadata !674, metadata !2395), !dbg !5768
  %2 = bitcast i64* %xbit to i8*, !dbg !5766
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !5766
  call void @llvm.dbg.declare(metadata i64* %xbit, metadata !675, metadata !2395), !dbg !5769
  %3 = bitcast i64* %i to i8*, !dbg !5770
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !5770
  call void @llvm.dbg.declare(metadata i64* %i, metadata !676, metadata !2395), !dbg !5771
  %4 = bitcast i64* %digits to i8*, !dbg !5770
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !5770
  call void @llvm.dbg.declare(metadata i64* %digits, metadata !677, metadata !2395), !dbg !5772
  %5 = bitcast i64* %len to i8*, !dbg !5770
  call void @llvm.lifetime.start(i64 8, i8* %5) #4, !dbg !5770
  call void @llvm.dbg.declare(metadata i64* %len, metadata !678, metadata !2395), !dbg !5773
  %6 = bitcast i64* %q to i8*, !dbg !5774
  call void @llvm.lifetime.start(i64 8, i8* %6) #4, !dbg !5774
  call void @llvm.dbg.declare(metadata i64* %q, metadata !679, metadata !2395), !dbg !5775
  %7 = bitcast i64* %r to i8*, !dbg !5774
  call void @llvm.lifetime.start(i64 8, i8* %7) #4, !dbg !5774
  call void @llvm.dbg.declare(metadata i64* %r, metadata !680, metadata !2395), !dbg !5776
  %8 = bitcast i32* %k to i8*, !dbg !5777
  call void @llvm.lifetime.start(i64 4, i8* %8) #4, !dbg !5777
  call void @llvm.dbg.declare(metadata i32* %k, metadata !681, metadata !2395), !dbg !5778
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5779, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %9), !dbg !5781
  %tobool = icmp ne i32 %call, 0, !dbg !5781
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5782

lor.lhs.false:                                    ; preds = %entry
  %10 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5783, !tbaa !2505
  %call1 = call i32 @mpd_isnegative(%struct.mpd_t* %10), !dbg !5785
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5785
  br i1 %tobool2, label %if.then, label %lor.lhs.false.3, !dbg !5786

lor.lhs.false.3:                                  ; preds = %lor.lhs.false
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5787, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 1, !dbg !5789
  %12 = load i64, i64* %exp, align 8, !dbg !5789, !tbaa !2510
  %cmp = icmp ne i64 %12, 0, !dbg !5790
  br i1 %cmp, label %if.then, label %if.end, !dbg !5791

if.then:                                          ; preds = %lor.lhs.false.3, %lor.lhs.false, %entry
  %13 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5792, !tbaa !2505
  %14 = load i32*, i32** %status.addr, align 8, !dbg !5794, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %13, i32 256, i32* %14), !dbg !5795
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5796

if.end:                                           ; preds = %lor.lhs.false.3
  %15 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5797, !tbaa !2505
  %digits4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %15, i32 0, i32 2, !dbg !5798
  %16 = load i64, i64* %digits4, align 8, !dbg !5798, !tbaa !2514
  %17 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !5799, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %17, i32 0, i32 0, !dbg !5800
  %18 = load i64, i64* %prec, align 8, !dbg !5800, !tbaa !2526
  %cmp5 = icmp slt i64 %16, %18, !dbg !5801
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !5802

cond.true:                                        ; preds = %if.end
  %19 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !5803, !tbaa !2505
  %prec6 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %19, i32 0, i32 0, !dbg !5805
  %20 = load i64, i64* %prec6, align 8, !dbg !5805, !tbaa !2526
  br label %cond.end, !dbg !5802

cond.false:                                       ; preds = %if.end
  %21 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5806, !tbaa !2505
  %digits7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %21, i32 0, i32 2, !dbg !5808
  %22 = load i64, i64* %digits7, align 8, !dbg !5808, !tbaa !2514
  br label %cond.end, !dbg !5802

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %20, %cond.true ], [ %22, %cond.false ], !dbg !5802
  store i64 %cond, i64* %digits, align 8, !dbg !5809, !tbaa !2391
  %23 = load i64, i64* %digits, align 8, !dbg !5812, !tbaa !2391
  call void @_mpd_idiv_word(i64* %q, i64* %r, i64 %23, i64 19), !dbg !5813
  %24 = load i64, i64* %r, align 8, !dbg !5814, !tbaa !2391
  %cmp8 = icmp eq i64 %24, 0, !dbg !5815
  br i1 %cmp8, label %cond.true.9, label %cond.false.10, !dbg !5816

cond.true.9:                                      ; preds = %cond.end
  %25 = load i64, i64* %q, align 8, !dbg !5817, !tbaa !2391
  br label %cond.end.11, !dbg !5816

cond.false.10:                                    ; preds = %cond.end
  %26 = load i64, i64* %q, align 8, !dbg !5818, !tbaa !2391
  %add = add i64 %26, 1, !dbg !5819
  br label %cond.end.11, !dbg !5816

cond.end.11:                                      ; preds = %cond.false.10, %cond.true.9
  %cond12 = phi i64 [ %25, %cond.true.9 ], [ %add, %cond.false.10 ], !dbg !5816
  store i64 %cond12, i64* %len, align 8, !dbg !5820, !tbaa !2391
  %27 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5821, !tbaa !2505
  %28 = load i64, i64* %len, align 8, !dbg !5823, !tbaa !2391
  %29 = load i32*, i32** %status.addr, align 8, !dbg !5824, !tbaa !2505
  %call13 = call i32 @mpd_qresize(%struct.mpd_t* %27, i64 %28, i32* %29), !dbg !5825
  %tobool14 = icmp ne i32 %call13, 0, !dbg !5825
  br i1 %tobool14, label %if.end.16, label %if.then.15, !dbg !5826

if.then.15:                                       ; preds = %cond.end.11
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5827

if.end.16:                                        ; preds = %cond.end.11
  store i64 0, i64* %i, align 8, !dbg !5829, !tbaa !2391
  br label %for.cond, !dbg !5831

for.cond:                                         ; preds = %for.inc.39, %if.end.16
  %30 = load i64, i64* %i, align 8, !dbg !5832, !tbaa !2391
  %31 = load i64, i64* %len, align 8, !dbg !5836, !tbaa !2391
  %cmp17 = icmp slt i64 %30, %31, !dbg !5837
  br i1 %cmp17, label %for.body, label %for.end.41, !dbg !5838

for.body:                                         ; preds = %for.cond
  %32 = load i64, i64* %i, align 8, !dbg !5839, !tbaa !2391
  %33 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5841, !tbaa !2505
  %len18 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %33, i32 0, i32 3, !dbg !5842
  %34 = load i64, i64* %len18, align 8, !dbg !5842, !tbaa !2542
  %cmp19 = icmp slt i64 %32, %34, !dbg !5843
  br i1 %cmp19, label %cond.true.20, label %cond.false.21, !dbg !5844

cond.true.20:                                     ; preds = %for.body
  %35 = load i64, i64* %i, align 8, !dbg !5845, !tbaa !2391
  %36 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5847, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %36, i32 0, i32 5, !dbg !5848
  %37 = load i64*, i64** %data, align 8, !dbg !5848, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %37, i64 %35, !dbg !5847
  %38 = load i64, i64* %arrayidx, align 8, !dbg !5847, !tbaa !2391
  br label %cond.end.22, !dbg !5844

cond.false.21:                                    ; preds = %for.body
  br label %cond.end.22, !dbg !5849

cond.end.22:                                      ; preds = %cond.false.21, %cond.true.20
  %cond23 = phi i64 [ %38, %cond.true.20 ], [ 0, %cond.false.21 ], !dbg !5844
  store i64 %cond23, i64* %x, align 8, !dbg !5851, !tbaa !2391
  store i64 0, i64* %z, align 8, !dbg !5854, !tbaa !2391
  store i32 0, i32* %k, align 4, !dbg !5855, !tbaa !2554
  br label %for.cond.24, !dbg !5857

for.cond.24:                                      ; preds = %for.inc, %cond.end.22
  %39 = load i32, i32* %k, align 4, !dbg !5858, !tbaa !2554
  %cmp25 = icmp slt i32 %39, 19, !dbg !5862
  br i1 %cmp25, label %for.body.26, label %for.end, !dbg !5863

for.body.26:                                      ; preds = %for.cond.24
  %40 = load i64, i64* %x, align 8, !dbg !5864, !tbaa !2391
  %rem = urem i64 %40, 10, !dbg !5866
  store i64 %rem, i64* %xbit, align 8, !dbg !5867, !tbaa !2391
  %41 = load i64, i64* %x, align 8, !dbg !5868, !tbaa !2391
  %div = udiv i64 %41, 10, !dbg !5868
  store i64 %div, i64* %x, align 8, !dbg !5868, !tbaa !2391
  %42 = load i64, i64* %xbit, align 8, !dbg !5869, !tbaa !2391
  %cmp27 = icmp ugt i64 %42, 1, !dbg !5871
  br i1 %cmp27, label %if.then.28, label %if.end.29, !dbg !5872

if.then.28:                                       ; preds = %for.body.26
  br label %invalid_operation, !dbg !5873

if.end.29:                                        ; preds = %for.body.26
  %43 = load i64, i64* %xbit, align 8, !dbg !5875, !tbaa !2391
  %tobool30 = icmp ne i64 %43, 0, !dbg !5875
  br i1 %tobool30, label %cond.false.33, label %cond.true.31, !dbg !5876

cond.true.31:                                     ; preds = %if.end.29
  %44 = load i32, i32* %k, align 4, !dbg !5877, !tbaa !2554
  %idxprom = sext i32 %44 to i64, !dbg !5879
  %arrayidx32 = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %idxprom, !dbg !5879
  %45 = load i64, i64* %arrayidx32, align 8, !dbg !5879, !tbaa !2391
  br label %cond.end.34, !dbg !5876

cond.false.33:                                    ; preds = %if.end.29
  br label %cond.end.34, !dbg !5880

cond.end.34:                                      ; preds = %cond.false.33, %cond.true.31
  %cond35 = phi i64 [ %45, %cond.true.31 ], [ 0, %cond.false.33 ], !dbg !5876
  %46 = load i64, i64* %z, align 8, !dbg !5882, !tbaa !2391
  %add36 = add i64 %46, %cond35, !dbg !5882
  store i64 %add36, i64* %z, align 8, !dbg !5882, !tbaa !2391
  br label %for.inc, !dbg !5885

for.inc:                                          ; preds = %cond.end.34
  %47 = load i32, i32* %k, align 4, !dbg !5886, !tbaa !2554
  %inc = add i32 %47, 1, !dbg !5886
  store i32 %inc, i32* %k, align 4, !dbg !5886, !tbaa !2554
  br label %for.cond.24, !dbg !5887

for.end:                                          ; preds = %for.cond.24
  %48 = load i64, i64* %z, align 8, !dbg !5888, !tbaa !2391
  %49 = load i64, i64* %i, align 8, !dbg !5889, !tbaa !2391
  %50 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5890, !tbaa !2505
  %data37 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %50, i32 0, i32 5, !dbg !5891
  %51 = load i64*, i64** %data37, align 8, !dbg !5891, !tbaa !2546
  %arrayidx38 = getelementptr i64, i64* %51, i64 %49, !dbg !5890
  store i64 %48, i64* %arrayidx38, align 8, !dbg !5892, !tbaa !2391
  br label %for.inc.39, !dbg !5893

for.inc.39:                                       ; preds = %for.end
  %52 = load i64, i64* %i, align 8, !dbg !5894, !tbaa !2391
  %inc40 = add i64 %52, 1, !dbg !5894
  store i64 %inc40, i64* %i, align 8, !dbg !5894, !tbaa !2391
  br label %for.cond, !dbg !5895

for.end.41:                                       ; preds = %for.cond
  %53 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5896, !tbaa !2505
  call void @mpd_clear_flags(%struct.mpd_t* %53), !dbg !5897
  %54 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5898, !tbaa !2505
  %exp42 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %54, i32 0, i32 1, !dbg !5899
  store i64 0, i64* %exp42, align 8, !dbg !5900, !tbaa !2510
  %55 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5901, !tbaa !2505
  %data43 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %55, i32 0, i32 5, !dbg !5902
  %56 = load i64*, i64** %data43, align 8, !dbg !5902, !tbaa !2546
  %57 = load i64, i64* %len, align 8, !dbg !5903, !tbaa !2391
  %call44 = call i64 @_mpd_real_size(i64* %56, i64 %57), !dbg !5904
  %58 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5905, !tbaa !2505
  %len45 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %58, i32 0, i32 3, !dbg !5906
  store i64 %call44, i64* %len45, align 8, !dbg !5907, !tbaa !2542
  %59 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5908, !tbaa !2505
  %60 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5909, !tbaa !2505
  %len46 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %60, i32 0, i32 3, !dbg !5910
  %61 = load i64, i64* %len46, align 8, !dbg !5910, !tbaa !2542
  %62 = load i32*, i32** %status.addr, align 8, !dbg !5911, !tbaa !2505
  %call47 = call i32 @mpd_qresize(%struct.mpd_t* %59, i64 %61, i32* %62), !dbg !5912
  %63 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5913, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %63), !dbg !5914
  %64 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5915, !tbaa !2505
  %65 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !5916, !tbaa !2505
  call void @_mpd_cap(%struct.mpd_t* %64, %struct.mpd_context_t* %65), !dbg !5917
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5918

invalid_operation:                                ; preds = %if.then.28
  %66 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5919, !tbaa !2505
  %67 = load i32*, i32** %status.addr, align 8, !dbg !5920, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %66, i32 256, i32* %67), !dbg !5921
  store i32 0, i32* %cleanup.dest.slot, !dbg !5922
  br label %cleanup, !dbg !5922

cleanup:                                          ; preds = %invalid_operation, %for.end.41, %if.then.15, %if.then
  %68 = bitcast i32* %k to i8*, !dbg !5923
  call void @llvm.lifetime.end(i64 4, i8* %68) #4, !dbg !5923
  %69 = bitcast i64* %r to i8*, !dbg !5923
  call void @llvm.lifetime.end(i64 8, i8* %69) #4, !dbg !5923
  %70 = bitcast i64* %q to i8*, !dbg !5923
  call void @llvm.lifetime.end(i64 8, i8* %70) #4, !dbg !5923
  %71 = bitcast i64* %len to i8*, !dbg !5923
  call void @llvm.lifetime.end(i64 8, i8* %71) #4, !dbg !5923
  %72 = bitcast i64* %digits to i8*, !dbg !5923
  call void @llvm.lifetime.end(i64 8, i8* %72) #4, !dbg !5923
  %73 = bitcast i64* %i to i8*, !dbg !5923
  call void @llvm.lifetime.end(i64 8, i8* %73) #4, !dbg !5923
  %74 = bitcast i64* %xbit to i8*, !dbg !5923
  call void @llvm.lifetime.end(i64 8, i8* %74) #4, !dbg !5923
  %75 = bitcast i64* %z to i8*, !dbg !5923
  call void @llvm.lifetime.end(i64 8, i8* %75) #4, !dbg !5923
  %76 = bitcast i64* %x to i8*, !dbg !5923
  call void @llvm.lifetime.end(i64 8, i8* %76) #4, !dbg !5923
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !5922

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qlogb(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !684, metadata !2395), !dbg !5924
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !685, metadata !2395), !dbg !5925
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !686, metadata !2395), !dbg !5926
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !687, metadata !2395), !dbg !5927
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5928, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %0), !dbg !5930
  %tobool = icmp ne i32 %call, 0, !dbg !5930
  br i1 %tobool, label %if.then, label %if.else, !dbg !5931

if.then:                                          ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5932, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5935, !tbaa !2505
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !5936, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !5937, !tbaa !2505
  %call1 = call i32 @mpd_qcheck_nan(%struct.mpd_t* %1, %struct.mpd_t* %2, %struct.mpd_context_t* %3, i32* %4), !dbg !5938
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5938
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !5939

if.then.3:                                        ; preds = %if.then
  br label %if.end.10, !dbg !5940

if.end:                                           ; preds = %if.then
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5942, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %5, i8 zeroext 0, i8 zeroext 2), !dbg !5943
  br label %if.end.10, !dbg !5944

if.else:                                          ; preds = %entry
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5945, !tbaa !2505
  %call4 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %6), !dbg !5947
  %tobool5 = icmp ne i32 %call4, 0, !dbg !5947
  br i1 %tobool5, label %if.then.6, label %if.else.7, !dbg !5948

if.then.6:                                        ; preds = %if.else
  %7 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5949, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %7, i8 zeroext 1, i8 zeroext 2), !dbg !5951
  %8 = load i32*, i32** %status.addr, align 8, !dbg !5952, !tbaa !2505
  %9 = load i32, i32* %8, align 4, !dbg !5953, !tbaa !2554
  %or = or i32 %9, 4, !dbg !5953
  store i32 %or, i32* %8, align 4, !dbg !5953, !tbaa !2554
  br label %if.end.9, !dbg !5954

if.else.7:                                        ; preds = %if.else
  %10 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !5955, !tbaa !2505
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5957, !tbaa !2505
  %call8 = call i64 @mpd_adjexp(%struct.mpd_t* %11), !dbg !5958
  %12 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !5959, !tbaa !2505
  %13 = load i32*, i32** %status.addr, align 8, !dbg !5960, !tbaa !2505
  call void @mpd_qset_ssize(%struct.mpd_t* %10, i64 %call8, %struct.mpd_context_t* %12, i32* %13), !dbg !5961
  br label %if.end.9

if.end.9:                                         ; preds = %if.else.7, %if.then.6
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.end, %if.then.3
  ret void, !dbg !5962
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qor(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %big = alloca %struct.mpd_t*, align 8
  %small = alloca %struct.mpd_t*, align 8
  %x = alloca i64, align 8
  %y = alloca i64, align 8
  %z = alloca i64, align 8
  %xbit = alloca i64, align 8
  %ybit = alloca i64, align 8
  %k = alloca i32, align 4
  %mswdigits = alloca i32, align 4
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !690, metadata !2395), !dbg !5963
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !691, metadata !2395), !dbg !5964
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !692, metadata !2395), !dbg !5965
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !693, metadata !2395), !dbg !5966
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !694, metadata !2395), !dbg !5967
  %0 = bitcast %struct.mpd_t** %big to i8*, !dbg !5968
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !5968
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %big, metadata !695, metadata !2395), !dbg !5969
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5970, !tbaa !2505
  store %struct.mpd_t* %1, %struct.mpd_t** %big, align 8, !dbg !5969, !tbaa !2505
  %2 = bitcast %struct.mpd_t** %small to i8*, !dbg !5968
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !5968
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %small, metadata !696, metadata !2395), !dbg !5971
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !5972, !tbaa !2505
  store %struct.mpd_t* %3, %struct.mpd_t** %small, align 8, !dbg !5971, !tbaa !2505
  %4 = bitcast i64* %x to i8*, !dbg !5973
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !5973
  call void @llvm.dbg.declare(metadata i64* %x, metadata !697, metadata !2395), !dbg !5974
  %5 = bitcast i64* %y to i8*, !dbg !5973
  call void @llvm.lifetime.start(i64 8, i8* %5) #4, !dbg !5973
  call void @llvm.dbg.declare(metadata i64* %y, metadata !698, metadata !2395), !dbg !5975
  %6 = bitcast i64* %z to i8*, !dbg !5973
  call void @llvm.lifetime.start(i64 8, i8* %6) #4, !dbg !5973
  call void @llvm.dbg.declare(metadata i64* %z, metadata !699, metadata !2395), !dbg !5976
  %7 = bitcast i64* %xbit to i8*, !dbg !5973
  call void @llvm.lifetime.start(i64 8, i8* %7) #4, !dbg !5973
  call void @llvm.dbg.declare(metadata i64* %xbit, metadata !700, metadata !2395), !dbg !5977
  %8 = bitcast i64* %ybit to i8*, !dbg !5973
  call void @llvm.lifetime.start(i64 8, i8* %8) #4, !dbg !5973
  call void @llvm.dbg.declare(metadata i64* %ybit, metadata !701, metadata !2395), !dbg !5978
  %9 = bitcast i32* %k to i8*, !dbg !5979
  call void @llvm.lifetime.start(i64 4, i8* %9) #4, !dbg !5979
  call void @llvm.dbg.declare(metadata i32* %k, metadata !702, metadata !2395), !dbg !5980
  %10 = bitcast i32* %mswdigits to i8*, !dbg !5979
  call void @llvm.lifetime.start(i64 4, i8* %10) #4, !dbg !5979
  call void @llvm.dbg.declare(metadata i32* %mswdigits, metadata !703, metadata !2395), !dbg !5981
  %11 = bitcast i64* %i to i8*, !dbg !5982
  call void @llvm.lifetime.start(i64 8, i8* %11) #4, !dbg !5982
  call void @llvm.dbg.declare(metadata i64* %i, metadata !704, metadata !2395), !dbg !5983
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5984, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %12), !dbg !5986
  %tobool = icmp ne i32 %call, 0, !dbg !5986
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5987

lor.lhs.false:                                    ; preds = %entry
  %13 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !5988, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %13), !dbg !5990
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5990
  br i1 %tobool2, label %if.then, label %lor.lhs.false.3, !dbg !5991

lor.lhs.false.3:                                  ; preds = %lor.lhs.false
  %14 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5992, !tbaa !2505
  %call4 = call i32 @mpd_isnegative(%struct.mpd_t* %14), !dbg !5993
  %tobool5 = icmp ne i32 %call4, 0, !dbg !5993
  br i1 %tobool5, label %if.then, label %lor.lhs.false.6, !dbg !5994

lor.lhs.false.6:                                  ; preds = %lor.lhs.false.3
  %15 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !5995, !tbaa !2505
  %call7 = call i32 @mpd_isnegative(%struct.mpd_t* %15), !dbg !5996
  %tobool8 = icmp ne i32 %call7, 0, !dbg !5996
  br i1 %tobool8, label %if.then, label %lor.lhs.false.9, !dbg !5997

lor.lhs.false.9:                                  ; preds = %lor.lhs.false.6
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !5998, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %16, i32 0, i32 1, !dbg !5999
  %17 = load i64, i64* %exp, align 8, !dbg !5999, !tbaa !2510
  %cmp = icmp ne i64 %17, 0, !dbg !6000
  br i1 %cmp, label %if.then, label %lor.lhs.false.10, !dbg !6001

lor.lhs.false.10:                                 ; preds = %lor.lhs.false.9
  %18 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6002, !tbaa !2505
  %exp11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %18, i32 0, i32 1, !dbg !6003
  %19 = load i64, i64* %exp11, align 8, !dbg !6003, !tbaa !2510
  %cmp12 = icmp ne i64 %19, 0, !dbg !6004
  br i1 %cmp12, label %if.then, label %if.end, !dbg !6005

if.then:                                          ; preds = %lor.lhs.false.10, %lor.lhs.false.9, %lor.lhs.false.6, %lor.lhs.false.3, %lor.lhs.false, %entry
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6006, !tbaa !2505
  %21 = load i32*, i32** %status.addr, align 8, !dbg !6008, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %20, i32 256, i32* %21), !dbg !6009
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6010

if.end:                                           ; preds = %lor.lhs.false.10
  %22 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6011, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %22, i32 0, i32 2, !dbg !6013
  %23 = load i64, i64* %digits, align 8, !dbg !6013, !tbaa !2514
  %24 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6014, !tbaa !2505
  %digits13 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %24, i32 0, i32 2, !dbg !6015
  %25 = load i64, i64* %digits13, align 8, !dbg !6015, !tbaa !2514
  %cmp14 = icmp sgt i64 %23, %25, !dbg !6016
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !6017

if.then.15:                                       ; preds = %if.end
  %26 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6018, !tbaa !2505
  store %struct.mpd_t* %26, %struct.mpd_t** %big, align 8, !dbg !6020, !tbaa !2505
  %27 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6021, !tbaa !2505
  store %struct.mpd_t* %27, %struct.mpd_t** %small, align 8, !dbg !6022, !tbaa !2505
  br label %if.end.16, !dbg !6023

if.end.16:                                        ; preds = %if.then.15, %if.end
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6024, !tbaa !2505
  %29 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !6026, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %29, i32 0, i32 3, !dbg !6027
  %30 = load i64, i64* %len, align 8, !dbg !6027, !tbaa !2542
  %31 = load i32*, i32** %status.addr, align 8, !dbg !6028, !tbaa !2505
  %call17 = call i32 @mpd_qresize(%struct.mpd_t* %28, i64 %30, i32* %31), !dbg !6029
  %tobool18 = icmp ne i32 %call17, 0, !dbg !6029
  br i1 %tobool18, label %if.end.20, label %if.then.19, !dbg !6030

if.then.19:                                       ; preds = %if.end.16
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6031

if.end.20:                                        ; preds = %if.end.16
  store i64 0, i64* %i, align 8, !dbg !6033, !tbaa !2391
  br label %for.cond, !dbg !6035

for.cond:                                         ; preds = %for.inc.39, %if.end.20
  %32 = load i64, i64* %i, align 8, !dbg !6036, !tbaa !2391
  %33 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !6040, !tbaa !2505
  %len21 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %33, i32 0, i32 3, !dbg !6041
  %34 = load i64, i64* %len21, align 8, !dbg !6041, !tbaa !2542
  %sub = sub i64 %34, 1, !dbg !6042
  %cmp22 = icmp slt i64 %32, %sub, !dbg !6043
  br i1 %cmp22, label %for.body, label %for.end.41, !dbg !6044

for.body:                                         ; preds = %for.cond
  %35 = load i64, i64* %i, align 8, !dbg !6045, !tbaa !2391
  %36 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !6047, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %36, i32 0, i32 5, !dbg !6048
  %37 = load i64*, i64** %data, align 8, !dbg !6048, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %37, i64 %35, !dbg !6047
  %38 = load i64, i64* %arrayidx, align 8, !dbg !6047, !tbaa !2391
  store i64 %38, i64* %x, align 8, !dbg !6049, !tbaa !2391
  %39 = load i64, i64* %i, align 8, !dbg !6050, !tbaa !2391
  %40 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !6051, !tbaa !2505
  %data23 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %40, i32 0, i32 5, !dbg !6052
  %41 = load i64*, i64** %data23, align 8, !dbg !6052, !tbaa !2546
  %arrayidx24 = getelementptr i64, i64* %41, i64 %39, !dbg !6051
  %42 = load i64, i64* %arrayidx24, align 8, !dbg !6051, !tbaa !2391
  store i64 %42, i64* %y, align 8, !dbg !6053, !tbaa !2391
  store i64 0, i64* %z, align 8, !dbg !6054, !tbaa !2391
  store i32 0, i32* %k, align 4, !dbg !6055, !tbaa !2554
  br label %for.cond.25, !dbg !6057

for.cond.25:                                      ; preds = %for.inc, %for.body
  %43 = load i32, i32* %k, align 4, !dbg !6058, !tbaa !2554
  %cmp26 = icmp slt i32 %43, 19, !dbg !6062
  br i1 %cmp26, label %for.body.27, label %for.end, !dbg !6063

for.body.27:                                      ; preds = %for.cond.25
  %44 = load i64, i64* %x, align 8, !dbg !6064, !tbaa !2391
  %rem = urem i64 %44, 10, !dbg !6066
  store i64 %rem, i64* %xbit, align 8, !dbg !6067, !tbaa !2391
  %45 = load i64, i64* %x, align 8, !dbg !6068, !tbaa !2391
  %div = udiv i64 %45, 10, !dbg !6068
  store i64 %div, i64* %x, align 8, !dbg !6068, !tbaa !2391
  %46 = load i64, i64* %y, align 8, !dbg !6069, !tbaa !2391
  %rem28 = urem i64 %46, 10, !dbg !6070
  store i64 %rem28, i64* %ybit, align 8, !dbg !6071, !tbaa !2391
  %47 = load i64, i64* %y, align 8, !dbg !6072, !tbaa !2391
  %div29 = udiv i64 %47, 10, !dbg !6072
  store i64 %div29, i64* %y, align 8, !dbg !6072, !tbaa !2391
  %48 = load i64, i64* %xbit, align 8, !dbg !6073, !tbaa !2391
  %cmp30 = icmp ugt i64 %48, 1, !dbg !6075
  br i1 %cmp30, label %if.then.33, label %lor.lhs.false.31, !dbg !6076

lor.lhs.false.31:                                 ; preds = %for.body.27
  %49 = load i64, i64* %ybit, align 8, !dbg !6077, !tbaa !2391
  %cmp32 = icmp ugt i64 %49, 1, !dbg !6079
  br i1 %cmp32, label %if.then.33, label %if.end.34, !dbg !6080

if.then.33:                                       ; preds = %lor.lhs.false.31, %for.body.27
  br label %invalid_operation, !dbg !6081

if.end.34:                                        ; preds = %lor.lhs.false.31
  %50 = load i64, i64* %xbit, align 8, !dbg !6083, !tbaa !2391
  %51 = load i64, i64* %ybit, align 8, !dbg !6084, !tbaa !2391
  %or = or i64 %50, %51, !dbg !6085
  %tobool35 = icmp ne i64 %or, 0, !dbg !6085
  br i1 %tobool35, label %cond.true, label %cond.false, !dbg !6086

cond.true:                                        ; preds = %if.end.34
  %52 = load i32, i32* %k, align 4, !dbg !6087, !tbaa !2554
  %idxprom = sext i32 %52 to i64, !dbg !6089
  %arrayidx36 = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %idxprom, !dbg !6089
  %53 = load i64, i64* %arrayidx36, align 8, !dbg !6089, !tbaa !2391
  br label %cond.end, !dbg !6086

cond.false:                                       ; preds = %if.end.34
  br label %cond.end, !dbg !6090

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %53, %cond.true ], [ 0, %cond.false ], !dbg !6086
  %54 = load i64, i64* %z, align 8, !dbg !6092, !tbaa !2391
  %add = add i64 %54, %cond, !dbg !6092
  store i64 %add, i64* %z, align 8, !dbg !6092, !tbaa !2391
  br label %for.inc, !dbg !6095

for.inc:                                          ; preds = %cond.end
  %55 = load i32, i32* %k, align 4, !dbg !6096, !tbaa !2554
  %inc = add i32 %55, 1, !dbg !6096
  store i32 %inc, i32* %k, align 4, !dbg !6096, !tbaa !2554
  br label %for.cond.25, !dbg !6097

for.end:                                          ; preds = %for.cond.25
  %56 = load i64, i64* %z, align 8, !dbg !6098, !tbaa !2391
  %57 = load i64, i64* %i, align 8, !dbg !6099, !tbaa !2391
  %58 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6100, !tbaa !2505
  %data37 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %58, i32 0, i32 5, !dbg !6101
  %59 = load i64*, i64** %data37, align 8, !dbg !6101, !tbaa !2546
  %arrayidx38 = getelementptr i64, i64* %59, i64 %57, !dbg !6100
  store i64 %56, i64* %arrayidx38, align 8, !dbg !6102, !tbaa !2391
  br label %for.inc.39, !dbg !6103

for.inc.39:                                       ; preds = %for.end
  %60 = load i64, i64* %i, align 8, !dbg !6104, !tbaa !2391
  %inc40 = add i64 %60, 1, !dbg !6104
  store i64 %inc40, i64* %i, align 8, !dbg !6104, !tbaa !2391
  br label %for.cond, !dbg !6105

for.end.41:                                       ; preds = %for.cond
  %61 = load i64, i64* %i, align 8, !dbg !6106, !tbaa !2391
  %62 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !6107, !tbaa !2505
  %data42 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %62, i32 0, i32 5, !dbg !6108
  %63 = load i64*, i64** %data42, align 8, !dbg !6108, !tbaa !2546
  %arrayidx43 = getelementptr i64, i64* %63, i64 %61, !dbg !6107
  %64 = load i64, i64* %arrayidx43, align 8, !dbg !6107, !tbaa !2391
  store i64 %64, i64* %x, align 8, !dbg !6109, !tbaa !2391
  %65 = load i64, i64* %i, align 8, !dbg !6110, !tbaa !2391
  %66 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !6111, !tbaa !2505
  %data44 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %66, i32 0, i32 5, !dbg !6112
  %67 = load i64*, i64** %data44, align 8, !dbg !6112, !tbaa !2546
  %arrayidx45 = getelementptr i64, i64* %67, i64 %65, !dbg !6111
  %68 = load i64, i64* %arrayidx45, align 8, !dbg !6111, !tbaa !2391
  store i64 %68, i64* %y, align 8, !dbg !6113, !tbaa !2391
  store i64 0, i64* %z, align 8, !dbg !6114, !tbaa !2391
  %69 = load i64, i64* %x, align 8, !dbg !6115, !tbaa !2391
  %call46 = call i32 @mpd_word_digits(i64 %69), !dbg !6116
  store i32 %call46, i32* %mswdigits, align 4, !dbg !6117, !tbaa !2554
  store i32 0, i32* %k, align 4, !dbg !6118, !tbaa !2554
  br label %for.cond.47, !dbg !6120

for.cond.47:                                      ; preds = %for.inc.68, %for.end.41
  %70 = load i32, i32* %k, align 4, !dbg !6121, !tbaa !2554
  %71 = load i32, i32* %mswdigits, align 4, !dbg !6125, !tbaa !2554
  %cmp48 = icmp slt i32 %70, %71, !dbg !6126
  br i1 %cmp48, label %for.body.49, label %for.end.70, !dbg !6127

for.body.49:                                      ; preds = %for.cond.47
  %72 = load i64, i64* %x, align 8, !dbg !6128, !tbaa !2391
  %rem50 = urem i64 %72, 10, !dbg !6130
  store i64 %rem50, i64* %xbit, align 8, !dbg !6131, !tbaa !2391
  %73 = load i64, i64* %x, align 8, !dbg !6132, !tbaa !2391
  %div51 = udiv i64 %73, 10, !dbg !6132
  store i64 %div51, i64* %x, align 8, !dbg !6132, !tbaa !2391
  %74 = load i64, i64* %y, align 8, !dbg !6133, !tbaa !2391
  %rem52 = urem i64 %74, 10, !dbg !6134
  store i64 %rem52, i64* %ybit, align 8, !dbg !6135, !tbaa !2391
  %75 = load i64, i64* %y, align 8, !dbg !6136, !tbaa !2391
  %div53 = udiv i64 %75, 10, !dbg !6136
  store i64 %div53, i64* %y, align 8, !dbg !6136, !tbaa !2391
  %76 = load i64, i64* %xbit, align 8, !dbg !6137, !tbaa !2391
  %cmp54 = icmp ugt i64 %76, 1, !dbg !6139
  br i1 %cmp54, label %if.then.57, label %lor.lhs.false.55, !dbg !6140

lor.lhs.false.55:                                 ; preds = %for.body.49
  %77 = load i64, i64* %ybit, align 8, !dbg !6141, !tbaa !2391
  %cmp56 = icmp ugt i64 %77, 1, !dbg !6143
  br i1 %cmp56, label %if.then.57, label %if.end.58, !dbg !6144

if.then.57:                                       ; preds = %lor.lhs.false.55, %for.body.49
  br label %invalid_operation, !dbg !6145

if.end.58:                                        ; preds = %lor.lhs.false.55
  %78 = load i64, i64* %xbit, align 8, !dbg !6147, !tbaa !2391
  %79 = load i64, i64* %ybit, align 8, !dbg !6148, !tbaa !2391
  %or59 = or i64 %78, %79, !dbg !6149
  %tobool60 = icmp ne i64 %or59, 0, !dbg !6149
  br i1 %tobool60, label %cond.true.61, label %cond.false.64, !dbg !6150

cond.true.61:                                     ; preds = %if.end.58
  %80 = load i32, i32* %k, align 4, !dbg !6151, !tbaa !2554
  %idxprom62 = sext i32 %80 to i64, !dbg !6153
  %arrayidx63 = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %idxprom62, !dbg !6153
  %81 = load i64, i64* %arrayidx63, align 8, !dbg !6153, !tbaa !2391
  br label %cond.end.65, !dbg !6150

cond.false.64:                                    ; preds = %if.end.58
  br label %cond.end.65, !dbg !6154

cond.end.65:                                      ; preds = %cond.false.64, %cond.true.61
  %cond66 = phi i64 [ %81, %cond.true.61 ], [ 0, %cond.false.64 ], !dbg !6150
  %82 = load i64, i64* %z, align 8, !dbg !6156, !tbaa !2391
  %add67 = add i64 %82, %cond66, !dbg !6156
  store i64 %add67, i64* %z, align 8, !dbg !6156, !tbaa !2391
  br label %for.inc.68, !dbg !6159

for.inc.68:                                       ; preds = %cond.end.65
  %83 = load i32, i32* %k, align 4, !dbg !6160, !tbaa !2554
  %inc69 = add i32 %83, 1, !dbg !6160
  store i32 %inc69, i32* %k, align 4, !dbg !6160, !tbaa !2554
  br label %for.cond.47, !dbg !6161

for.end.70:                                       ; preds = %for.cond.47
  br label %for.cond.71, !dbg !6162

for.cond.71:                                      ; preds = %for.inc.82, %for.end.70
  %84 = load i32, i32* %k, align 4, !dbg !6163, !tbaa !2554
  %cmp72 = icmp slt i32 %84, 19, !dbg !6168
  br i1 %cmp72, label %for.body.73, label %for.end.84, !dbg !6169

for.body.73:                                      ; preds = %for.cond.71
  %85 = load i64, i64* %y, align 8, !dbg !6170, !tbaa !2391
  %rem74 = urem i64 %85, 10, !dbg !6172
  store i64 %rem74, i64* %ybit, align 8, !dbg !6173, !tbaa !2391
  %86 = load i64, i64* %y, align 8, !dbg !6174, !tbaa !2391
  %div75 = udiv i64 %86, 10, !dbg !6174
  store i64 %div75, i64* %y, align 8, !dbg !6174, !tbaa !2391
  %87 = load i64, i64* %ybit, align 8, !dbg !6175, !tbaa !2391
  %cmp76 = icmp ugt i64 %87, 1, !dbg !6177
  br i1 %cmp76, label %if.then.77, label %if.end.78, !dbg !6178

if.then.77:                                       ; preds = %for.body.73
  br label %invalid_operation, !dbg !6179

if.end.78:                                        ; preds = %for.body.73
  %88 = load i64, i64* %ybit, align 8, !dbg !6181, !tbaa !2391
  %89 = load i32, i32* %k, align 4, !dbg !6182, !tbaa !2554
  %idxprom79 = sext i32 %89 to i64, !dbg !6183
  %arrayidx80 = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %idxprom79, !dbg !6183
  %90 = load i64, i64* %arrayidx80, align 8, !dbg !6183, !tbaa !2391
  %mul = mul i64 %88, %90, !dbg !6184
  %91 = load i64, i64* %z, align 8, !dbg !6185, !tbaa !2391
  %add81 = add i64 %91, %mul, !dbg !6185
  store i64 %add81, i64* %z, align 8, !dbg !6185, !tbaa !2391
  br label %for.inc.82, !dbg !6186

for.inc.82:                                       ; preds = %if.end.78
  %92 = load i32, i32* %k, align 4, !dbg !6187, !tbaa !2554
  %inc83 = add i32 %92, 1, !dbg !6187
  store i32 %inc83, i32* %k, align 4, !dbg !6187, !tbaa !2554
  br label %for.cond.71, !dbg !6188

for.end.84:                                       ; preds = %for.cond.71
  %93 = load i64, i64* %z, align 8, !dbg !6189, !tbaa !2391
  %94 = load i64, i64* %i, align 8, !dbg !6190, !tbaa !2391
  %inc85 = add i64 %94, 1, !dbg !6190
  store i64 %inc85, i64* %i, align 8, !dbg !6190, !tbaa !2391
  %95 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6191, !tbaa !2505
  %data86 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %95, i32 0, i32 5, !dbg !6192
  %96 = load i64*, i64** %data86, align 8, !dbg !6192, !tbaa !2546
  %arrayidx87 = getelementptr i64, i64* %96, i64 %94, !dbg !6191
  store i64 %93, i64* %arrayidx87, align 8, !dbg !6193, !tbaa !2391
  br label %for.cond.88, !dbg !6194

for.cond.88:                                      ; preds = %for.inc.109, %for.end.84
  %97 = load i64, i64* %i, align 8, !dbg !6195, !tbaa !2391
  %98 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !6200, !tbaa !2505
  %len89 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %98, i32 0, i32 3, !dbg !6201
  %99 = load i64, i64* %len89, align 8, !dbg !6201, !tbaa !2542
  %cmp90 = icmp slt i64 %97, %99, !dbg !6202
  br i1 %cmp90, label %for.body.91, label %for.end.111, !dbg !6203

for.body.91:                                      ; preds = %for.cond.88
  %100 = load i64, i64* %i, align 8, !dbg !6204, !tbaa !2391
  %101 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !6206, !tbaa !2505
  %data92 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %101, i32 0, i32 5, !dbg !6207
  %102 = load i64*, i64** %data92, align 8, !dbg !6207, !tbaa !2546
  %arrayidx93 = getelementptr i64, i64* %102, i64 %100, !dbg !6206
  %103 = load i64, i64* %arrayidx93, align 8, !dbg !6206, !tbaa !2391
  store i64 %103, i64* %y, align 8, !dbg !6208, !tbaa !2391
  store i32 0, i32* %k, align 4, !dbg !6209, !tbaa !2554
  br label %for.cond.94, !dbg !6211

for.cond.94:                                      ; preds = %for.inc.102, %for.body.91
  %104 = load i32, i32* %k, align 4, !dbg !6212, !tbaa !2554
  %cmp95 = icmp slt i32 %104, 19, !dbg !6216
  br i1 %cmp95, label %for.body.96, label %for.end.104, !dbg !6217

for.body.96:                                      ; preds = %for.cond.94
  %105 = load i64, i64* %y, align 8, !dbg !6218, !tbaa !2391
  %rem97 = urem i64 %105, 10, !dbg !6220
  store i64 %rem97, i64* %ybit, align 8, !dbg !6221, !tbaa !2391
  %106 = load i64, i64* %y, align 8, !dbg !6222, !tbaa !2391
  %div98 = udiv i64 %106, 10, !dbg !6222
  store i64 %div98, i64* %y, align 8, !dbg !6222, !tbaa !2391
  %107 = load i64, i64* %ybit, align 8, !dbg !6223, !tbaa !2391
  %cmp99 = icmp ugt i64 %107, 1, !dbg !6225
  br i1 %cmp99, label %if.then.100, label %if.end.101, !dbg !6226

if.then.100:                                      ; preds = %for.body.96
  br label %invalid_operation, !dbg !6227

if.end.101:                                       ; preds = %for.body.96
  br label %for.inc.102, !dbg !6229

for.inc.102:                                      ; preds = %if.end.101
  %108 = load i32, i32* %k, align 4, !dbg !6230, !tbaa !2554
  %inc103 = add i32 %108, 1, !dbg !6230
  store i32 %inc103, i32* %k, align 4, !dbg !6230, !tbaa !2554
  br label %for.cond.94, !dbg !6231

for.end.104:                                      ; preds = %for.cond.94
  %109 = load i64, i64* %i, align 8, !dbg !6232, !tbaa !2391
  %110 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !6233, !tbaa !2505
  %data105 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %110, i32 0, i32 5, !dbg !6234
  %111 = load i64*, i64** %data105, align 8, !dbg !6234, !tbaa !2546
  %arrayidx106 = getelementptr i64, i64* %111, i64 %109, !dbg !6233
  %112 = load i64, i64* %arrayidx106, align 8, !dbg !6233, !tbaa !2391
  %113 = load i64, i64* %i, align 8, !dbg !6235, !tbaa !2391
  %114 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6236, !tbaa !2505
  %data107 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %114, i32 0, i32 5, !dbg !6237
  %115 = load i64*, i64** %data107, align 8, !dbg !6237, !tbaa !2546
  %arrayidx108 = getelementptr i64, i64* %115, i64 %113, !dbg !6236
  store i64 %112, i64* %arrayidx108, align 8, !dbg !6238, !tbaa !2391
  br label %for.inc.109, !dbg !6239

for.inc.109:                                      ; preds = %for.end.104
  %116 = load i64, i64* %i, align 8, !dbg !6240, !tbaa !2391
  %inc110 = add i64 %116, 1, !dbg !6240
  store i64 %inc110, i64* %i, align 8, !dbg !6240, !tbaa !2391
  br label %for.cond.88, !dbg !6241

for.end.111:                                      ; preds = %for.cond.88
  %117 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6242, !tbaa !2505
  call void @mpd_clear_flags(%struct.mpd_t* %117), !dbg !6243
  %118 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6244, !tbaa !2505
  %exp112 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %118, i32 0, i32 1, !dbg !6245
  store i64 0, i64* %exp112, align 8, !dbg !6246, !tbaa !2510
  %119 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6247, !tbaa !2505
  %data113 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %119, i32 0, i32 5, !dbg !6248
  %120 = load i64*, i64** %data113, align 8, !dbg !6248, !tbaa !2546
  %121 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !6249, !tbaa !2505
  %len114 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %121, i32 0, i32 3, !dbg !6250
  %122 = load i64, i64* %len114, align 8, !dbg !6250, !tbaa !2542
  %call115 = call i64 @_mpd_real_size(i64* %120, i64 %122), !dbg !6251
  %123 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6252, !tbaa !2505
  %len116 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %123, i32 0, i32 3, !dbg !6253
  store i64 %call115, i64* %len116, align 8, !dbg !6254, !tbaa !2542
  %124 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6255, !tbaa !2505
  %125 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6256, !tbaa !2505
  %len117 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %125, i32 0, i32 3, !dbg !6257
  %126 = load i64, i64* %len117, align 8, !dbg !6257, !tbaa !2542
  %127 = load i32*, i32** %status.addr, align 8, !dbg !6258, !tbaa !2505
  %call118 = call i32 @mpd_qresize(%struct.mpd_t* %124, i64 %126, i32* %127), !dbg !6259
  %128 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6260, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %128), !dbg !6261
  %129 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6262, !tbaa !2505
  %130 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6263, !tbaa !2505
  call void @_mpd_cap(%struct.mpd_t* %129, %struct.mpd_context_t* %130), !dbg !6264
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6265

invalid_operation:                                ; preds = %if.then.100, %if.then.77, %if.then.57, %if.then.33
  %131 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6266, !tbaa !2505
  %132 = load i32*, i32** %status.addr, align 8, !dbg !6267, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %131, i32 256, i32* %132), !dbg !6268
  store i32 0, i32* %cleanup.dest.slot, !dbg !6269
  br label %cleanup, !dbg !6269

cleanup:                                          ; preds = %invalid_operation, %for.end.111, %if.then.19, %if.then
  %133 = bitcast i64* %i to i8*, !dbg !6270
  call void @llvm.lifetime.end(i64 8, i8* %133) #4, !dbg !6270
  %134 = bitcast i32* %mswdigits to i8*, !dbg !6270
  call void @llvm.lifetime.end(i64 4, i8* %134) #4, !dbg !6270
  %135 = bitcast i32* %k to i8*, !dbg !6270
  call void @llvm.lifetime.end(i64 4, i8* %135) #4, !dbg !6270
  %136 = bitcast i64* %ybit to i8*, !dbg !6270
  call void @llvm.lifetime.end(i64 8, i8* %136) #4, !dbg !6270
  %137 = bitcast i64* %xbit to i8*, !dbg !6270
  call void @llvm.lifetime.end(i64 8, i8* %137) #4, !dbg !6270
  %138 = bitcast i64* %z to i8*, !dbg !6270
  call void @llvm.lifetime.end(i64 8, i8* %138) #4, !dbg !6270
  %139 = bitcast i64* %y to i8*, !dbg !6270
  call void @llvm.lifetime.end(i64 8, i8* %139) #4, !dbg !6270
  %140 = bitcast i64* %x to i8*, !dbg !6270
  call void @llvm.lifetime.end(i64 8, i8* %140) #4, !dbg !6270
  %141 = bitcast %struct.mpd_t** %small to i8*, !dbg !6270
  call void @llvm.lifetime.end(i64 8, i8* %141) #4, !dbg !6270
  %142 = bitcast %struct.mpd_t** %big to i8*, !dbg !6270
  call void @llvm.lifetime.end(i64 8, i8* %142) #4, !dbg !6270
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !6269

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qrotate(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workstatus = alloca i32, align 4
  %tmp_data = alloca [64 x i64], align 16
  %tmp = alloca %struct.mpd_t, align 8
  %big_data = alloca [64 x i64], align 16
  %big = alloca %struct.mpd_t, align 8
  %small_data = alloca [64 x i64], align 16
  %small = alloca %struct.mpd_t, align 8
  %n = alloca i64, align 8
  %lshift = alloca i64, align 8
  %rshift = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !707, metadata !2395), !dbg !6272
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !708, metadata !2395), !dbg !6273
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !709, metadata !2395), !dbg !6274
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !710, metadata !2395), !dbg !6275
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !711, metadata !2395), !dbg !6276
  %0 = bitcast i32* %workstatus to i8*, !dbg !6277
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !6277
  call void @llvm.dbg.declare(metadata i32* %workstatus, metadata !712, metadata !2395), !dbg !6278
  store i32 0, i32* %workstatus, align 4, !dbg !6278, !tbaa !2554
  %1 = bitcast [64 x i64]* %tmp_data to i8*, !dbg !6279
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !6279
  call void @llvm.dbg.declare(metadata [64 x i64]* %tmp_data, metadata !713, metadata !2395), !dbg !6280
  %2 = bitcast %struct.mpd_t* %tmp to i8*, !dbg !6281
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !6281
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %tmp, metadata !717, metadata !2395), !dbg !6282
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 0, !dbg !6283
  store i8 48, i8* %flags, align 1, !dbg !6283, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 1, !dbg !6283
  store i64 0, i64* %exp, align 8, !dbg !6283, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 2, !dbg !6283
  store i64 0, i64* %digits, align 8, !dbg !6283, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 3, !dbg !6283
  store i64 0, i64* %len, align 8, !dbg !6283, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 4, !dbg !6283
  store i64 64, i64* %alloc, align 8, !dbg !6283, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 5, !dbg !6283
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %tmp_data, i32 0, i32 0, !dbg !6284
  store i64* %arraydecay, i64** %data, align 8, !dbg !6283, !tbaa !2546
  %3 = bitcast [64 x i64]* %big_data to i8*, !dbg !6285
  call void @llvm.lifetime.start(i64 512, i8* %3) #4, !dbg !6285
  call void @llvm.dbg.declare(metadata [64 x i64]* %big_data, metadata !718, metadata !2395), !dbg !6286
  %4 = bitcast %struct.mpd_t* %big to i8*, !dbg !6287
  call void @llvm.lifetime.start(i64 48, i8* %4) #4, !dbg !6287
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %big, metadata !719, metadata !2395), !dbg !6288
  %flags3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %big, i32 0, i32 0, !dbg !6289
  store i8 48, i8* %flags3, align 1, !dbg !6289, !tbaa !2620
  %exp4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %big, i32 0, i32 1, !dbg !6289
  store i64 0, i64* %exp4, align 8, !dbg !6289, !tbaa !2510
  %digits5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %big, i32 0, i32 2, !dbg !6289
  store i64 0, i64* %digits5, align 8, !dbg !6289, !tbaa !2514
  %len6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %big, i32 0, i32 3, !dbg !6289
  store i64 0, i64* %len6, align 8, !dbg !6289, !tbaa !2542
  %alloc7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %big, i32 0, i32 4, !dbg !6289
  store i64 64, i64* %alloc7, align 8, !dbg !6289, !tbaa !2835
  %data8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %big, i32 0, i32 5, !dbg !6289
  %arraydecay9 = getelementptr inbounds [64 x i64], [64 x i64]* %big_data, i32 0, i32 0, !dbg !6290
  store i64* %arraydecay9, i64** %data8, align 8, !dbg !6289, !tbaa !2546
  %5 = bitcast [64 x i64]* %small_data to i8*, !dbg !6291
  call void @llvm.lifetime.start(i64 512, i8* %5) #4, !dbg !6291
  call void @llvm.dbg.declare(metadata [64 x i64]* %small_data, metadata !720, metadata !2395), !dbg !6292
  %6 = bitcast %struct.mpd_t* %small to i8*, !dbg !6293
  call void @llvm.lifetime.start(i64 48, i8* %6) #4, !dbg !6293
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %small, metadata !721, metadata !2395), !dbg !6294
  %flags12 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %small, i32 0, i32 0, !dbg !6295
  store i8 48, i8* %flags12, align 1, !dbg !6295, !tbaa !2620
  %exp13 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %small, i32 0, i32 1, !dbg !6295
  store i64 0, i64* %exp13, align 8, !dbg !6295, !tbaa !2510
  %digits14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %small, i32 0, i32 2, !dbg !6295
  store i64 0, i64* %digits14, align 8, !dbg !6295, !tbaa !2514
  %len15 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %small, i32 0, i32 3, !dbg !6295
  store i64 0, i64* %len15, align 8, !dbg !6295, !tbaa !2542
  %alloc16 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %small, i32 0, i32 4, !dbg !6295
  store i64 64, i64* %alloc16, align 8, !dbg !6295, !tbaa !2835
  %data17 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %small, i32 0, i32 5, !dbg !6295
  %arraydecay18 = getelementptr inbounds [64 x i64], [64 x i64]* %small_data, i32 0, i32 0, !dbg !6296
  store i64* %arraydecay18, i64** %data17, align 8, !dbg !6295, !tbaa !2546
  %7 = bitcast i64* %n to i8*, !dbg !6297
  call void @llvm.lifetime.start(i64 8, i8* %7) #4, !dbg !6297
  call void @llvm.dbg.declare(metadata i64* %n, metadata !722, metadata !2395), !dbg !6298
  %8 = bitcast i64* %lshift to i8*, !dbg !6297
  call void @llvm.lifetime.start(i64 8, i8* %8) #4, !dbg !6297
  call void @llvm.dbg.declare(metadata i64* %lshift, metadata !723, metadata !2395), !dbg !6299
  %9 = bitcast i64* %rshift to i8*, !dbg !6297
  call void @llvm.lifetime.start(i64 8, i8* %9) #4, !dbg !6297
  call void @llvm.dbg.declare(metadata i64* %rshift, metadata !724, metadata !2395), !dbg !6300
  %10 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6301, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %10), !dbg !6303
  %tobool = icmp ne i32 %call, 0, !dbg !6303
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6304

lor.lhs.false:                                    ; preds = %entry
  %11 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6305, !tbaa !2505
  %call22 = call i32 @mpd_isspecial(%struct.mpd_t* %11), !dbg !6307
  %tobool23 = icmp ne i32 %call22, 0, !dbg !6307
  br i1 %tobool23, label %if.then, label %if.end.27, !dbg !6308

if.then:                                          ; preds = %lor.lhs.false, %entry
  %12 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6309, !tbaa !2505
  %13 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6312, !tbaa !2505
  %14 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6313, !tbaa !2505
  %15 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6314, !tbaa !2505
  %16 = load i32*, i32** %status.addr, align 8, !dbg !6315, !tbaa !2505
  %call24 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %12, %struct.mpd_t* %13, %struct.mpd_t* %14, %struct.mpd_context_t* %15, i32* %16), !dbg !6316
  %tobool25 = icmp ne i32 %call24, 0, !dbg !6316
  br i1 %tobool25, label %if.then.26, label %if.end, !dbg !6317

if.then.26:                                       ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6318

if.end:                                           ; preds = %if.then
  br label %if.end.27, !dbg !6320

if.end.27:                                        ; preds = %if.end, %lor.lhs.false
  %17 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6321, !tbaa !2505
  %exp28 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 1, !dbg !6323
  %18 = load i64, i64* %exp28, align 8, !dbg !6323, !tbaa !2510
  %cmp = icmp ne i64 %18, 0, !dbg !6324
  br i1 %cmp, label %if.then.32, label %lor.lhs.false.29, !dbg !6325

lor.lhs.false.29:                                 ; preds = %if.end.27
  %19 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6326, !tbaa !2505
  %call30 = call i32 @mpd_isinfinite(%struct.mpd_t* %19), !dbg !6328
  %tobool31 = icmp ne i32 %call30, 0, !dbg !6328
  br i1 %tobool31, label %if.then.32, label %if.end.33, !dbg !6329

if.then.32:                                       ; preds = %lor.lhs.false.29, %if.end.27
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6330, !tbaa !2505
  %21 = load i32*, i32** %status.addr, align 8, !dbg !6332, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %20, i32 256, i32* %21), !dbg !6333
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6334

if.end.33:                                        ; preds = %lor.lhs.false.29
  %22 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6335, !tbaa !2505
  %call34 = call i64 @mpd_qget_ssize(%struct.mpd_t* %22, i32* %workstatus), !dbg !6336
  store i64 %call34, i64* %n, align 8, !dbg !6337, !tbaa !2391
  %23 = load i32, i32* %workstatus, align 4, !dbg !6338, !tbaa !2554
  %and = and i32 %23, 256, !dbg !6340
  %tobool35 = icmp ne i32 %and, 0, !dbg !6340
  br i1 %tobool35, label %if.then.36, label %if.end.37, !dbg !6341

if.then.36:                                       ; preds = %if.end.33
  %24 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6342, !tbaa !2505
  %25 = load i32*, i32** %status.addr, align 8, !dbg !6344, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %24, i32 256, i32* %25), !dbg !6345
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6346

if.end.37:                                        ; preds = %if.end.33
  %26 = load i64, i64* %n, align 8, !dbg !6347, !tbaa !2391
  %27 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6349, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %27, i32 0, i32 0, !dbg !6350
  %28 = load i64, i64* %prec, align 8, !dbg !6350, !tbaa !2526
  %cmp38 = icmp sgt i64 %26, %28, !dbg !6351
  br i1 %cmp38, label %if.then.42, label %lor.lhs.false.39, !dbg !6352

lor.lhs.false.39:                                 ; preds = %if.end.37
  %29 = load i64, i64* %n, align 8, !dbg !6353, !tbaa !2391
  %30 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6355, !tbaa !2505
  %prec40 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %30, i32 0, i32 0, !dbg !6356
  %31 = load i64, i64* %prec40, align 8, !dbg !6356, !tbaa !2526
  %sub = sub i64 0, %31, !dbg !6357
  %cmp41 = icmp slt i64 %29, %sub, !dbg !6358
  br i1 %cmp41, label %if.then.42, label %if.end.43, !dbg !6359

if.then.42:                                       ; preds = %lor.lhs.false.39, %if.end.37
  %32 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6360, !tbaa !2505
  %33 = load i32*, i32** %status.addr, align 8, !dbg !6362, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %32, i32 256, i32* %33), !dbg !6363
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6364

if.end.43:                                        ; preds = %lor.lhs.false.39
  %34 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6365, !tbaa !2505
  %call44 = call i32 @mpd_isinfinite(%struct.mpd_t* %34), !dbg !6367
  %tobool45 = icmp ne i32 %call44, 0, !dbg !6367
  br i1 %tobool45, label %if.then.46, label %if.end.48, !dbg !6368

if.then.46:                                       ; preds = %if.end.43
  %35 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6369, !tbaa !2505
  %36 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6371, !tbaa !2505
  %37 = load i32*, i32** %status.addr, align 8, !dbg !6372, !tbaa !2505
  %call47 = call i32 @mpd_qcopy(%struct.mpd_t* %35, %struct.mpd_t* %36, i32* %37), !dbg !6373
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6374

if.end.48:                                        ; preds = %if.end.43
  %38 = load i64, i64* %n, align 8, !dbg !6375, !tbaa !2391
  %cmp49 = icmp sge i64 %38, 0, !dbg !6377
  br i1 %cmp49, label %if.then.50, label %if.else, !dbg !6378

if.then.50:                                       ; preds = %if.end.48
  %39 = load i64, i64* %n, align 8, !dbg !6379, !tbaa !2391
  store i64 %39, i64* %lshift, align 8, !dbg !6381, !tbaa !2391
  %40 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6382, !tbaa !2505
  %prec51 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %40, i32 0, i32 0, !dbg !6383
  %41 = load i64, i64* %prec51, align 8, !dbg !6383, !tbaa !2526
  %42 = load i64, i64* %n, align 8, !dbg !6384, !tbaa !2391
  %sub52 = sub i64 %41, %42, !dbg !6385
  store i64 %sub52, i64* %rshift, align 8, !dbg !6386, !tbaa !2391
  br label %if.end.55, !dbg !6387

if.else:                                          ; preds = %if.end.48
  %43 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6388, !tbaa !2505
  %prec53 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %43, i32 0, i32 0, !dbg !6390
  %44 = load i64, i64* %prec53, align 8, !dbg !6390, !tbaa !2526
  %45 = load i64, i64* %n, align 8, !dbg !6391, !tbaa !2391
  %add = add i64 %44, %45, !dbg !6392
  store i64 %add, i64* %lshift, align 8, !dbg !6393, !tbaa !2391
  %46 = load i64, i64* %n, align 8, !dbg !6394, !tbaa !2391
  %sub54 = sub i64 0, %46, !dbg !6395
  store i64 %sub54, i64* %rshift, align 8, !dbg !6396, !tbaa !2391
  br label %if.end.55

if.end.55:                                        ; preds = %if.else, %if.then.50
  %47 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6397, !tbaa !2505
  %digits56 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %47, i32 0, i32 2, !dbg !6399
  %48 = load i64, i64* %digits56, align 8, !dbg !6399, !tbaa !2514
  %49 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6400, !tbaa !2505
  %prec57 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %49, i32 0, i32 0, !dbg !6401
  %50 = load i64, i64* %prec57, align 8, !dbg !6401, !tbaa !2526
  %cmp58 = icmp sgt i64 %48, %50, !dbg !6402
  br i1 %cmp58, label %if.then.59, label %if.end.64, !dbg !6403

if.then.59:                                       ; preds = %if.end.55
  %51 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6404, !tbaa !2505
  %52 = load i32*, i32** %status.addr, align 8, !dbg !6407, !tbaa !2505
  %call60 = call i32 @mpd_qcopy(%struct.mpd_t* %tmp, %struct.mpd_t* %51, i32* %52), !dbg !6408
  %tobool61 = icmp ne i32 %call60, 0, !dbg !6408
  br i1 %tobool61, label %if.end.63, label %if.then.62, !dbg !6409

if.then.62:                                       ; preds = %if.then.59
  %53 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6410, !tbaa !2505
  %54 = load i32*, i32** %status.addr, align 8, !dbg !6412, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %53, i32 512, i32* %54), !dbg !6413
  br label %finish, !dbg !6414

if.end.63:                                        ; preds = %if.then.59
  %55 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6415, !tbaa !2505
  call void @_mpd_cap(%struct.mpd_t* %tmp, %struct.mpd_context_t* %55), !dbg !6416
  store %struct.mpd_t* %tmp, %struct.mpd_t** %a.addr, align 8, !dbg !6417, !tbaa !2505
  br label %if.end.64, !dbg !6418

if.end.64:                                        ; preds = %if.end.63, %if.end.55
  %56 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6419, !tbaa !2505
  %57 = load i64, i64* %lshift, align 8, !dbg !6421, !tbaa !2391
  %58 = load i32*, i32** %status.addr, align 8, !dbg !6422, !tbaa !2505
  %call65 = call i32 @mpd_qshiftl(%struct.mpd_t* %big, %struct.mpd_t* %56, i64 %57, i32* %58), !dbg !6423
  %tobool66 = icmp ne i32 %call65, 0, !dbg !6423
  br i1 %tobool66, label %if.end.68, label %if.then.67, !dbg !6424

if.then.67:                                       ; preds = %if.end.64
  %59 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6425, !tbaa !2505
  %60 = load i32*, i32** %status.addr, align 8, !dbg !6427, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %59, i32 512, i32* %60), !dbg !6428
  br label %finish, !dbg !6429

if.end.68:                                        ; preds = %if.end.64
  %61 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6430, !tbaa !2505
  call void @_mpd_cap(%struct.mpd_t* %big, %struct.mpd_context_t* %61), !dbg !6431
  %62 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6432, !tbaa !2505
  %63 = load i64, i64* %rshift, align 8, !dbg !6434, !tbaa !2391
  %64 = load i32*, i32** %status.addr, align 8, !dbg !6435, !tbaa !2505
  %call69 = call i64 @mpd_qshiftr(%struct.mpd_t* %small, %struct.mpd_t* %62, i64 %63, i32* %64), !dbg !6436
  %cmp70 = icmp eq i64 %call69, -1, !dbg !6437
  br i1 %cmp70, label %if.then.71, label %if.end.72, !dbg !6438

if.then.71:                                       ; preds = %if.end.68
  %65 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6439, !tbaa !2505
  %66 = load i32*, i32** %status.addr, align 8, !dbg !6441, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %65, i32 512, i32* %66), !dbg !6442
  br label %finish, !dbg !6443

if.end.72:                                        ; preds = %if.end.68
  %67 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6444, !tbaa !2505
  %68 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6445, !tbaa !2505
  %69 = load i32*, i32** %status.addr, align 8, !dbg !6446, !tbaa !2505
  call void @_mpd_qadd(%struct.mpd_t* %67, %struct.mpd_t* %big, %struct.mpd_t* %small, %struct.mpd_context_t* %68, i32* %69), !dbg !6447
  br label %finish, !dbg !6447

finish:                                           ; preds = %if.end.72, %if.then.71, %if.then.67, %if.then.62
  call void @mpd_del(%struct.mpd_t* %tmp), !dbg !6448
  call void @mpd_del(%struct.mpd_t* %big), !dbg !6449
  call void @mpd_del(%struct.mpd_t* %small), !dbg !6450
  store i32 0, i32* %cleanup.dest.slot, !dbg !6451
  br label %cleanup, !dbg !6451

cleanup:                                          ; preds = %finish, %if.then.46, %if.then.42, %if.then.36, %if.then.32, %if.then.26
  %70 = bitcast i64* %rshift to i8*, !dbg !6452
  call void @llvm.lifetime.end(i64 8, i8* %70) #4, !dbg !6452
  %71 = bitcast i64* %lshift to i8*, !dbg !6452
  call void @llvm.lifetime.end(i64 8, i8* %71) #4, !dbg !6452
  %72 = bitcast i64* %n to i8*, !dbg !6452
  call void @llvm.lifetime.end(i64 8, i8* %72) #4, !dbg !6452
  %73 = bitcast %struct.mpd_t* %small to i8*, !dbg !6452
  call void @llvm.lifetime.end(i64 48, i8* %73) #4, !dbg !6452
  %74 = bitcast [64 x i64]* %small_data to i8*, !dbg !6452
  call void @llvm.lifetime.end(i64 512, i8* %74) #4, !dbg !6452
  %75 = bitcast %struct.mpd_t* %big to i8*, !dbg !6452
  call void @llvm.lifetime.end(i64 48, i8* %75) #4, !dbg !6452
  %76 = bitcast [64 x i64]* %big_data to i8*, !dbg !6452
  call void @llvm.lifetime.end(i64 512, i8* %76) #4, !dbg !6452
  %77 = bitcast %struct.mpd_t* %tmp to i8*, !dbg !6452
  call void @llvm.lifetime.end(i64 48, i8* %77) #4, !dbg !6452
  %78 = bitcast [64 x i64]* %tmp_data to i8*, !dbg !6452
  call void @llvm.lifetime.end(i64 512, i8* %78) #4, !dbg !6452
  %79 = bitcast i32* %workstatus to i8*, !dbg !6452
  call void @llvm.lifetime.end(i64 4, i8* %79) #4, !dbg !6452
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !6451

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qadd(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1635, metadata !2395), !dbg !6454
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1636, metadata !2395), !dbg !6455
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1637, metadata !2395), !dbg !6456
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1638, metadata !2395), !dbg !6457
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1639, metadata !2395), !dbg !6458
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6459, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6460, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6461, !tbaa !2505
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6462, !tbaa !2505
  %call = call zeroext i8 @mpd_sign(%struct.mpd_t* %3), !dbg !6463
  %4 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6464, !tbaa !2505
  %5 = load i32*, i32** %status.addr, align 8, !dbg !6465, !tbaa !2505
  call void @_mpd_qaddsub(%struct.mpd_t* %0, %struct.mpd_t* %1, %struct.mpd_t* %2, i8 zeroext %call, %struct.mpd_context_t* %4, i32* %5), !dbg !6466
  ret void, !dbg !6467
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qscaleb(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workstatus = alloca i32, align 4
  %n = alloca i64, align 8
  %maxjump = alloca i64, align 8
  %exp = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !727, metadata !2395), !dbg !6468
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !728, metadata !2395), !dbg !6469
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !729, metadata !2395), !dbg !6470
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !730, metadata !2395), !dbg !6471
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !731, metadata !2395), !dbg !6472
  %0 = bitcast i32* %workstatus to i8*, !dbg !6473
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !6473
  call void @llvm.dbg.declare(metadata i32* %workstatus, metadata !732, metadata !2395), !dbg !6474
  store i32 0, i32* %workstatus, align 4, !dbg !6474, !tbaa !2554
  %1 = bitcast i64* %n to i8*, !dbg !6475
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !6475
  call void @llvm.dbg.declare(metadata i64* %n, metadata !733, metadata !2395), !dbg !6476
  %2 = bitcast i64* %maxjump to i8*, !dbg !6475
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !6475
  call void @llvm.dbg.declare(metadata i64* %maxjump, metadata !734, metadata !2395), !dbg !6477
  %3 = bitcast i64* %exp to i8*, !dbg !6478
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !6478
  call void @llvm.dbg.declare(metadata i64* %exp, metadata !735, metadata !2395), !dbg !6479
  %4 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6480, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %4), !dbg !6482
  %tobool = icmp ne i32 %call, 0, !dbg !6482
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6483

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6484, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %5), !dbg !6486
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6486
  br i1 %tobool2, label %if.then, label %if.end.6, !dbg !6487

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6488, !tbaa !2505
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6491, !tbaa !2505
  %8 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6492, !tbaa !2505
  %9 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6493, !tbaa !2505
  %10 = load i32*, i32** %status.addr, align 8, !dbg !6494, !tbaa !2505
  %call3 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %6, %struct.mpd_t* %7, %struct.mpd_t* %8, %struct.mpd_context_t* %9, i32* %10), !dbg !6495
  %tobool4 = icmp ne i32 %call3, 0, !dbg !6495
  br i1 %tobool4, label %if.then.5, label %if.end, !dbg !6496

if.then.5:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6497

if.end:                                           ; preds = %if.then
  br label %if.end.6, !dbg !6499

if.end.6:                                         ; preds = %if.end, %lor.lhs.false
  %11 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6500, !tbaa !2505
  %exp7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 1, !dbg !6502
  %12 = load i64, i64* %exp7, align 8, !dbg !6502, !tbaa !2510
  %cmp = icmp ne i64 %12, 0, !dbg !6503
  br i1 %cmp, label %if.then.11, label %lor.lhs.false.8, !dbg !6504

lor.lhs.false.8:                                  ; preds = %if.end.6
  %13 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6505, !tbaa !2505
  %call9 = call i32 @mpd_isinfinite(%struct.mpd_t* %13), !dbg !6507
  %tobool10 = icmp ne i32 %call9, 0, !dbg !6507
  br i1 %tobool10, label %if.then.11, label %if.end.12, !dbg !6508

if.then.11:                                       ; preds = %lor.lhs.false.8, %if.end.6
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6509, !tbaa !2505
  %15 = load i32*, i32** %status.addr, align 8, !dbg !6511, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %14, i32 256, i32* %15), !dbg !6512
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6513

if.end.12:                                        ; preds = %lor.lhs.false.8
  %16 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6514, !tbaa !2505
  %call13 = call i64 @mpd_qabs_uint(%struct.mpd_t* %16, i32* %workstatus), !dbg !6515
  store i64 %call13, i64* %n, align 8, !dbg !6516, !tbaa !2391
  %17 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6517, !tbaa !2505
  %emax = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %17, i32 0, i32 1, !dbg !6518
  %18 = load i64, i64* %emax, align 8, !dbg !6518, !tbaa !2533
  %19 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6519, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %19, i32 0, i32 0, !dbg !6520
  %20 = load i64, i64* %prec, align 8, !dbg !6520, !tbaa !2526
  %add = add i64 %18, %20, !dbg !6521
  %mul = mul i64 2, %add, !dbg !6522
  store i64 %mul, i64* %maxjump, align 8, !dbg !6523, !tbaa !2391
  %21 = load i64, i64* %n, align 8, !dbg !6524, !tbaa !2391
  %22 = load i64, i64* %maxjump, align 8, !dbg !6526, !tbaa !2391
  %cmp14 = icmp ugt i64 %21, %22, !dbg !6527
  br i1 %cmp14, label %if.then.17, label %lor.lhs.false.15, !dbg !6528

lor.lhs.false.15:                                 ; preds = %if.end.12
  %23 = load i32, i32* %workstatus, align 4, !dbg !6529, !tbaa !2554
  %and = and i32 %23, 256, !dbg !6531
  %tobool16 = icmp ne i32 %and, 0, !dbg !6531
  br i1 %tobool16, label %if.then.17, label %if.end.18, !dbg !6532

if.then.17:                                       ; preds = %lor.lhs.false.15, %if.end.12
  %24 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6533, !tbaa !2505
  %25 = load i32*, i32** %status.addr, align 8, !dbg !6535, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %24, i32 256, i32* %25), !dbg !6536
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6537

if.end.18:                                        ; preds = %lor.lhs.false.15
  %26 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6538, !tbaa !2505
  %call19 = call i32 @mpd_isinfinite(%struct.mpd_t* %26), !dbg !6540
  %tobool20 = icmp ne i32 %call19, 0, !dbg !6540
  br i1 %tobool20, label %if.then.21, label %if.end.23, !dbg !6541

if.then.21:                                       ; preds = %if.end.18
  %27 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6542, !tbaa !2505
  %28 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6544, !tbaa !2505
  %29 = load i32*, i32** %status.addr, align 8, !dbg !6545, !tbaa !2505
  %call22 = call i32 @mpd_qcopy(%struct.mpd_t* %27, %struct.mpd_t* %28, i32* %29), !dbg !6546
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6547

if.end.23:                                        ; preds = %if.end.18
  %30 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6548, !tbaa !2505
  %exp24 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %30, i32 0, i32 1, !dbg !6549
  %31 = load i64, i64* %exp24, align 8, !dbg !6549, !tbaa !2510
  %32 = load i64, i64* %n, align 8, !dbg !6550, !tbaa !2391
  %33 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6551, !tbaa !2505
  %call25 = call i32 @mpd_arith_sign(%struct.mpd_t* %33), !dbg !6552
  %conv = sext i32 %call25 to i64, !dbg !6552
  %mul26 = mul i64 %32, %conv, !dbg !6553
  %add27 = add i64 %31, %mul26, !dbg !6554
  store i64 %add27, i64* %exp, align 8, !dbg !6555, !tbaa !2391
  %34 = load i64, i64* %exp, align 8, !dbg !6556, !tbaa !2391
  %cmp28 = icmp sgt i64 %34, 2000000000000000001, !dbg !6557
  br i1 %cmp28, label %cond.true, label %cond.false, !dbg !6558

cond.true:                                        ; preds = %if.end.23
  br label %cond.end, !dbg !6559

cond.false:                                       ; preds = %if.end.23
  %35 = load i64, i64* %exp, align 8, !dbg !6561, !tbaa !2391
  br label %cond.end, !dbg !6558

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 2000000000000000001, %cond.true ], [ %35, %cond.false ], !dbg !6558
  store i64 %cond, i64* %exp, align 8, !dbg !6563, !tbaa !2391
  %36 = load i64, i64* %exp, align 8, !dbg !6566, !tbaa !2391
  %cmp30 = icmp slt i64 %36, -4000000000000000001, !dbg !6567
  br i1 %cmp30, label %cond.true.32, label %cond.false.33, !dbg !6568

cond.true.32:                                     ; preds = %cond.end
  br label %cond.end.34, !dbg !6569

cond.false.33:                                    ; preds = %cond.end
  %37 = load i64, i64* %exp, align 8, !dbg !6570, !tbaa !2391
  br label %cond.end.34, !dbg !6568

cond.end.34:                                      ; preds = %cond.false.33, %cond.true.32
  %cond35 = phi i64 [ -4000000000000000001, %cond.true.32 ], [ %37, %cond.false.33 ], !dbg !6568
  store i64 %cond35, i64* %exp, align 8, !dbg !6571, !tbaa !2391
  %38 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6572, !tbaa !2505
  %39 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6573, !tbaa !2505
  %40 = load i32*, i32** %status.addr, align 8, !dbg !6574, !tbaa !2505
  %call36 = call i32 @mpd_qcopy(%struct.mpd_t* %38, %struct.mpd_t* %39, i32* %40), !dbg !6575
  %41 = load i64, i64* %exp, align 8, !dbg !6576, !tbaa !2391
  %42 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6577, !tbaa !2505
  %exp37 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %42, i32 0, i32 1, !dbg !6578
  store i64 %41, i64* %exp37, align 8, !dbg !6579, !tbaa !2510
  %43 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6580, !tbaa !2505
  %44 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6581, !tbaa !2505
  %45 = load i32*, i32** %status.addr, align 8, !dbg !6582, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %43, %struct.mpd_context_t* %44, i32* %45), !dbg !6583
  store i32 0, i32* %cleanup.dest.slot, !dbg !6584
  br label %cleanup, !dbg !6584

cleanup:                                          ; preds = %cond.end.34, %if.then.21, %if.then.17, %if.then.11, %if.then.5
  %46 = bitcast i64* %exp to i8*, !dbg !6585
  call void @llvm.lifetime.end(i64 8, i8* %46) #4, !dbg !6585
  %47 = bitcast i64* %maxjump to i8*, !dbg !6585
  call void @llvm.lifetime.end(i64 8, i8* %47) #4, !dbg !6585
  %48 = bitcast i64* %n to i8*, !dbg !6585
  call void @llvm.lifetime.end(i64 8, i8* %48) #4, !dbg !6585
  %49 = bitcast i32* %workstatus to i8*, !dbg !6585
  call void @llvm.lifetime.end(i64 4, i8* %49) #4, !dbg !6585
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !6584

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qshiftn(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %n, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %n.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !740, metadata !2395), !dbg !6586
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !741, metadata !2395), !dbg !6587
  store i64 %n, i64* %n.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !742, metadata !2395), !dbg !6588
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !743, metadata !2395), !dbg !6589
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !744, metadata !2395), !dbg !6590
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6591, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %0), !dbg !6593
  %tobool = icmp ne i32 %call, 0, !dbg !6593
  br i1 %tobool, label %if.then, label %if.end.5, !dbg !6594

if.then:                                          ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6595, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6598, !tbaa !2505
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6599, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !6600, !tbaa !2505
  %call1 = call i32 @mpd_qcheck_nan(%struct.mpd_t* %1, %struct.mpd_t* %2, %struct.mpd_context_t* %3, i32* %4), !dbg !6601
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6601
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !6602

if.then.3:                                        ; preds = %if.then
  br label %if.end.22, !dbg !6603

if.end:                                           ; preds = %if.then
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6605, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6606, !tbaa !2505
  %7 = load i32*, i32** %status.addr, align 8, !dbg !6607, !tbaa !2505
  %call4 = call i32 @mpd_qcopy(%struct.mpd_t* %5, %struct.mpd_t* %6, i32* %7), !dbg !6608
  br label %if.end.22, !dbg !6609

if.end.5:                                         ; preds = %entry
  %8 = load i64, i64* %n.addr, align 8, !dbg !6610, !tbaa !2391
  %cmp = icmp sge i64 %8, 0, !dbg !6612
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !6613

land.lhs.true:                                    ; preds = %if.end.5
  %9 = load i64, i64* %n.addr, align 8, !dbg !6614, !tbaa !2391
  %10 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6616, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %10, i32 0, i32 0, !dbg !6617
  %11 = load i64, i64* %prec, align 8, !dbg !6617, !tbaa !2526
  %cmp6 = icmp sle i64 %9, %11, !dbg !6618
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !6619

if.then.7:                                        ; preds = %land.lhs.true
  %12 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6620, !tbaa !2505
  %13 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6622, !tbaa !2505
  %14 = load i64, i64* %n.addr, align 8, !dbg !6623, !tbaa !2391
  %15 = load i32*, i32** %status.addr, align 8, !dbg !6624, !tbaa !2505
  %call8 = call i32 @mpd_qshiftl(%struct.mpd_t* %12, %struct.mpd_t* %13, i64 %14, i32* %15), !dbg !6625
  %16 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6626, !tbaa !2505
  %17 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6627, !tbaa !2505
  call void @_mpd_cap(%struct.mpd_t* %16, %struct.mpd_context_t* %17), !dbg !6628
  br label %if.end.22, !dbg !6629

if.else:                                          ; preds = %land.lhs.true, %if.end.5
  %18 = load i64, i64* %n.addr, align 8, !dbg !6630, !tbaa !2391
  %cmp9 = icmp slt i64 %18, 0, !dbg !6632
  br i1 %cmp9, label %land.lhs.true.10, label %if.else.20, !dbg !6633

land.lhs.true.10:                                 ; preds = %if.else
  %19 = load i64, i64* %n.addr, align 8, !dbg !6634, !tbaa !2391
  %20 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6636, !tbaa !2505
  %prec11 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %20, i32 0, i32 0, !dbg !6637
  %21 = load i64, i64* %prec11, align 8, !dbg !6637, !tbaa !2526
  %sub = sub i64 0, %21, !dbg !6638
  %cmp12 = icmp sge i64 %19, %sub, !dbg !6639
  br i1 %cmp12, label %if.then.13, label %if.else.20, !dbg !6640

if.then.13:                                       ; preds = %land.lhs.true.10
  %22 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6641, !tbaa !2505
  %23 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6644, !tbaa !2505
  %24 = load i32*, i32** %status.addr, align 8, !dbg !6645, !tbaa !2505
  %call14 = call i32 @mpd_qcopy(%struct.mpd_t* %22, %struct.mpd_t* %23, i32* %24), !dbg !6646
  %tobool15 = icmp ne i32 %call14, 0, !dbg !6646
  br i1 %tobool15, label %if.end.17, label %if.then.16, !dbg !6647

if.then.16:                                       ; preds = %if.then.13
  br label %if.end.22, !dbg !6648

if.end.17:                                        ; preds = %if.then.13
  %25 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6650, !tbaa !2505
  %26 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6651, !tbaa !2505
  call void @_mpd_cap(%struct.mpd_t* %25, %struct.mpd_context_t* %26), !dbg !6652
  %27 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6653, !tbaa !2505
  %28 = load i64, i64* %n.addr, align 8, !dbg !6654, !tbaa !2391
  %sub18 = sub i64 0, %28, !dbg !6655
  %call19 = call i64 @mpd_qshiftr_inplace(%struct.mpd_t* %27, i64 %sub18), !dbg !6656
  br label %if.end.21, !dbg !6657

if.else.20:                                       ; preds = %land.lhs.true.10, %if.else
  %29 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6658, !tbaa !2505
  %30 = load i32*, i32** %status.addr, align 8, !dbg !6660, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %29, i32 256, i32* %30), !dbg !6661
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.20, %if.end.17
  br label %if.end.22

if.end.22:                                        ; preds = %if.end.21, %if.then.16, %if.then.7, %if.end, %if.then.3
  ret void, !dbg !6662
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qshift(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workstatus = alloca i32, align 4
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !747, metadata !2395), !dbg !6663
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !748, metadata !2395), !dbg !6664
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !749, metadata !2395), !dbg !6665
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !750, metadata !2395), !dbg !6666
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !751, metadata !2395), !dbg !6667
  %0 = bitcast i32* %workstatus to i8*, !dbg !6668
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !6668
  call void @llvm.dbg.declare(metadata i32* %workstatus, metadata !752, metadata !2395), !dbg !6669
  store i32 0, i32* %workstatus, align 4, !dbg !6669, !tbaa !2554
  %1 = bitcast i64* %n to i8*, !dbg !6670
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !6670
  call void @llvm.dbg.declare(metadata i64* %n, metadata !753, metadata !2395), !dbg !6671
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6672, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %2), !dbg !6674
  %tobool = icmp ne i32 %call, 0, !dbg !6674
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6675

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6676, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %3), !dbg !6678
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6678
  br i1 %tobool2, label %if.then, label %if.end.6, !dbg !6679

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6680, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6683, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6684, !tbaa !2505
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6685, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !6686, !tbaa !2505
  %call3 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %4, %struct.mpd_t* %5, %struct.mpd_t* %6, %struct.mpd_context_t* %7, i32* %8), !dbg !6687
  %tobool4 = icmp ne i32 %call3, 0, !dbg !6687
  br i1 %tobool4, label %if.then.5, label %if.end, !dbg !6688

if.then.5:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6689

if.end:                                           ; preds = %if.then
  br label %if.end.6, !dbg !6691

if.end.6:                                         ; preds = %if.end, %lor.lhs.false
  %9 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6692, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 1, !dbg !6694
  %10 = load i64, i64* %exp, align 8, !dbg !6694, !tbaa !2510
  %cmp = icmp ne i64 %10, 0, !dbg !6695
  br i1 %cmp, label %if.then.10, label %lor.lhs.false.7, !dbg !6696

lor.lhs.false.7:                                  ; preds = %if.end.6
  %11 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6697, !tbaa !2505
  %call8 = call i32 @mpd_isinfinite(%struct.mpd_t* %11), !dbg !6699
  %tobool9 = icmp ne i32 %call8, 0, !dbg !6699
  br i1 %tobool9, label %if.then.10, label %if.end.11, !dbg !6700

if.then.10:                                       ; preds = %lor.lhs.false.7, %if.end.6
  %12 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6701, !tbaa !2505
  %13 = load i32*, i32** %status.addr, align 8, !dbg !6703, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %12, i32 256, i32* %13), !dbg !6704
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6705

if.end.11:                                        ; preds = %lor.lhs.false.7
  %14 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6706, !tbaa !2505
  %call12 = call i64 @mpd_qget_ssize(%struct.mpd_t* %14, i32* %workstatus), !dbg !6707
  store i64 %call12, i64* %n, align 8, !dbg !6708, !tbaa !2391
  %15 = load i32, i32* %workstatus, align 4, !dbg !6709, !tbaa !2554
  %and = and i32 %15, 256, !dbg !6711
  %tobool13 = icmp ne i32 %and, 0, !dbg !6711
  br i1 %tobool13, label %if.then.14, label %if.end.15, !dbg !6712

if.then.14:                                       ; preds = %if.end.11
  %16 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6713, !tbaa !2505
  %17 = load i32*, i32** %status.addr, align 8, !dbg !6715, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %16, i32 256, i32* %17), !dbg !6716
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6717

if.end.15:                                        ; preds = %if.end.11
  %18 = load i64, i64* %n, align 8, !dbg !6718, !tbaa !2391
  %19 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6720, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %19, i32 0, i32 0, !dbg !6721
  %20 = load i64, i64* %prec, align 8, !dbg !6721, !tbaa !2526
  %cmp16 = icmp sgt i64 %18, %20, !dbg !6722
  br i1 %cmp16, label %if.then.20, label %lor.lhs.false.17, !dbg !6723

lor.lhs.false.17:                                 ; preds = %if.end.15
  %21 = load i64, i64* %n, align 8, !dbg !6724, !tbaa !2391
  %22 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6726, !tbaa !2505
  %prec18 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %22, i32 0, i32 0, !dbg !6727
  %23 = load i64, i64* %prec18, align 8, !dbg !6727, !tbaa !2526
  %sub = sub i64 0, %23, !dbg !6728
  %cmp19 = icmp slt i64 %21, %sub, !dbg !6729
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !6730

if.then.20:                                       ; preds = %lor.lhs.false.17, %if.end.15
  %24 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6731, !tbaa !2505
  %25 = load i32*, i32** %status.addr, align 8, !dbg !6733, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %24, i32 256, i32* %25), !dbg !6734
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6735

if.end.21:                                        ; preds = %lor.lhs.false.17
  %26 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6736, !tbaa !2505
  %call22 = call i32 @mpd_isinfinite(%struct.mpd_t* %26), !dbg !6738
  %tobool23 = icmp ne i32 %call22, 0, !dbg !6738
  br i1 %tobool23, label %if.then.24, label %if.end.26, !dbg !6739

if.then.24:                                       ; preds = %if.end.21
  %27 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6740, !tbaa !2505
  %28 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6742, !tbaa !2505
  %29 = load i32*, i32** %status.addr, align 8, !dbg !6743, !tbaa !2505
  %call25 = call i32 @mpd_qcopy(%struct.mpd_t* %27, %struct.mpd_t* %28, i32* %29), !dbg !6744
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6745

if.end.26:                                        ; preds = %if.end.21
  %30 = load i64, i64* %n, align 8, !dbg !6746, !tbaa !2391
  %cmp27 = icmp sge i64 %30, 0, !dbg !6748
  br i1 %cmp27, label %if.then.28, label %if.else, !dbg !6749

if.then.28:                                       ; preds = %if.end.26
  %31 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6750, !tbaa !2505
  %32 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6752, !tbaa !2505
  %33 = load i64, i64* %n, align 8, !dbg !6753, !tbaa !2391
  %34 = load i32*, i32** %status.addr, align 8, !dbg !6754, !tbaa !2505
  %call29 = call i32 @mpd_qshiftl(%struct.mpd_t* %31, %struct.mpd_t* %32, i64 %33, i32* %34), !dbg !6755
  %35 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6756, !tbaa !2505
  %36 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6757, !tbaa !2505
  call void @_mpd_cap(%struct.mpd_t* %35, %struct.mpd_context_t* %36), !dbg !6758
  br label %if.end.36, !dbg !6759

if.else:                                          ; preds = %if.end.26
  %37 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6760, !tbaa !2505
  %38 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6763, !tbaa !2505
  %39 = load i32*, i32** %status.addr, align 8, !dbg !6764, !tbaa !2505
  %call30 = call i32 @mpd_qcopy(%struct.mpd_t* %37, %struct.mpd_t* %38, i32* %39), !dbg !6765
  %tobool31 = icmp ne i32 %call30, 0, !dbg !6765
  br i1 %tobool31, label %if.end.33, label %if.then.32, !dbg !6766

if.then.32:                                       ; preds = %if.else
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6767

if.end.33:                                        ; preds = %if.else
  %40 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6769, !tbaa !2505
  %41 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !6770, !tbaa !2505
  call void @_mpd_cap(%struct.mpd_t* %40, %struct.mpd_context_t* %41), !dbg !6771
  %42 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6772, !tbaa !2505
  %43 = load i64, i64* %n, align 8, !dbg !6773, !tbaa !2391
  %sub34 = sub i64 0, %43, !dbg !6774
  %call35 = call i64 @mpd_qshiftr_inplace(%struct.mpd_t* %42, i64 %sub34), !dbg !6775
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.33, %if.then.28
  store i32 0, i32* %cleanup.dest.slot, !dbg !6776
  br label %cleanup, !dbg !6776

cleanup:                                          ; preds = %if.end.36, %if.then.32, %if.then.24, %if.then.20, %if.then.14, %if.then.10, %if.then.5
  %44 = bitcast i64* %n to i8*, !dbg !6777
  call void @llvm.lifetime.end(i64 8, i8* %44) #4, !dbg !6777
  %45 = bitcast i32* %workstatus to i8*, !dbg !6777
  call void @llvm.lifetime.end(i64 4, i8* %45) #4, !dbg !6777
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !6776

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qxor(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %big = alloca %struct.mpd_t*, align 8
  %small = alloca %struct.mpd_t*, align 8
  %x = alloca i64, align 8
  %y = alloca i64, align 8
  %z = alloca i64, align 8
  %xbit = alloca i64, align 8
  %ybit = alloca i64, align 8
  %k = alloca i32, align 4
  %mswdigits = alloca i32, align 4
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !756, metadata !2395), !dbg !6779
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !757, metadata !2395), !dbg !6780
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !758, metadata !2395), !dbg !6781
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !759, metadata !2395), !dbg !6782
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !760, metadata !2395), !dbg !6783
  %0 = bitcast %struct.mpd_t** %big to i8*, !dbg !6784
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !6784
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %big, metadata !761, metadata !2395), !dbg !6785
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6786, !tbaa !2505
  store %struct.mpd_t* %1, %struct.mpd_t** %big, align 8, !dbg !6785, !tbaa !2505
  %2 = bitcast %struct.mpd_t** %small to i8*, !dbg !6784
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !6784
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %small, metadata !762, metadata !2395), !dbg !6787
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6788, !tbaa !2505
  store %struct.mpd_t* %3, %struct.mpd_t** %small, align 8, !dbg !6787, !tbaa !2505
  %4 = bitcast i64* %x to i8*, !dbg !6789
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !6789
  call void @llvm.dbg.declare(metadata i64* %x, metadata !763, metadata !2395), !dbg !6790
  %5 = bitcast i64* %y to i8*, !dbg !6789
  call void @llvm.lifetime.start(i64 8, i8* %5) #4, !dbg !6789
  call void @llvm.dbg.declare(metadata i64* %y, metadata !764, metadata !2395), !dbg !6791
  %6 = bitcast i64* %z to i8*, !dbg !6789
  call void @llvm.lifetime.start(i64 8, i8* %6) #4, !dbg !6789
  call void @llvm.dbg.declare(metadata i64* %z, metadata !765, metadata !2395), !dbg !6792
  %7 = bitcast i64* %xbit to i8*, !dbg !6789
  call void @llvm.lifetime.start(i64 8, i8* %7) #4, !dbg !6789
  call void @llvm.dbg.declare(metadata i64* %xbit, metadata !766, metadata !2395), !dbg !6793
  %8 = bitcast i64* %ybit to i8*, !dbg !6789
  call void @llvm.lifetime.start(i64 8, i8* %8) #4, !dbg !6789
  call void @llvm.dbg.declare(metadata i64* %ybit, metadata !767, metadata !2395), !dbg !6794
  %9 = bitcast i32* %k to i8*, !dbg !6795
  call void @llvm.lifetime.start(i64 4, i8* %9) #4, !dbg !6795
  call void @llvm.dbg.declare(metadata i32* %k, metadata !768, metadata !2395), !dbg !6796
  %10 = bitcast i32* %mswdigits to i8*, !dbg !6795
  call void @llvm.lifetime.start(i64 4, i8* %10) #4, !dbg !6795
  call void @llvm.dbg.declare(metadata i32* %mswdigits, metadata !769, metadata !2395), !dbg !6797
  %11 = bitcast i64* %i to i8*, !dbg !6798
  call void @llvm.lifetime.start(i64 8, i8* %11) #4, !dbg !6798
  call void @llvm.dbg.declare(metadata i64* %i, metadata !770, metadata !2395), !dbg !6799
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6800, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %12), !dbg !6802
  %tobool = icmp ne i32 %call, 0, !dbg !6802
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6803

lor.lhs.false:                                    ; preds = %entry
  %13 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6804, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %13), !dbg !6806
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6806
  br i1 %tobool2, label %if.then, label %lor.lhs.false.3, !dbg !6807

lor.lhs.false.3:                                  ; preds = %lor.lhs.false
  %14 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6808, !tbaa !2505
  %call4 = call i32 @mpd_isnegative(%struct.mpd_t* %14), !dbg !6809
  %tobool5 = icmp ne i32 %call4, 0, !dbg !6809
  br i1 %tobool5, label %if.then, label %lor.lhs.false.6, !dbg !6810

lor.lhs.false.6:                                  ; preds = %lor.lhs.false.3
  %15 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6811, !tbaa !2505
  %call7 = call i32 @mpd_isnegative(%struct.mpd_t* %15), !dbg !6812
  %tobool8 = icmp ne i32 %call7, 0, !dbg !6812
  br i1 %tobool8, label %if.then, label %lor.lhs.false.9, !dbg !6813

lor.lhs.false.9:                                  ; preds = %lor.lhs.false.6
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6814, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %16, i32 0, i32 1, !dbg !6815
  %17 = load i64, i64* %exp, align 8, !dbg !6815, !tbaa !2510
  %cmp = icmp ne i64 %17, 0, !dbg !6816
  br i1 %cmp, label %if.then, label %lor.lhs.false.10, !dbg !6817

lor.lhs.false.10:                                 ; preds = %lor.lhs.false.9
  %18 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6818, !tbaa !2505
  %exp11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %18, i32 0, i32 1, !dbg !6819
  %19 = load i64, i64* %exp11, align 8, !dbg !6819, !tbaa !2510
  %cmp12 = icmp ne i64 %19, 0, !dbg !6820
  br i1 %cmp12, label %if.then, label %if.end, !dbg !6821

if.then:                                          ; preds = %lor.lhs.false.10, %lor.lhs.false.9, %lor.lhs.false.6, %lor.lhs.false.3, %lor.lhs.false, %entry
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6822, !tbaa !2505
  %21 = load i32*, i32** %status.addr, align 8, !dbg !6824, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %20, i32 256, i32* %21), !dbg !6825
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6826

if.end:                                           ; preds = %lor.lhs.false.10
  %22 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6827, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %22, i32 0, i32 2, !dbg !6829
  %23 = load i64, i64* %digits, align 8, !dbg !6829, !tbaa !2514
  %24 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6830, !tbaa !2505
  %digits13 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %24, i32 0, i32 2, !dbg !6831
  %25 = load i64, i64* %digits13, align 8, !dbg !6831, !tbaa !2514
  %cmp14 = icmp sgt i64 %23, %25, !dbg !6832
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !6833

if.then.15:                                       ; preds = %if.end
  %26 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !6834, !tbaa !2505
  store %struct.mpd_t* %26, %struct.mpd_t** %big, align 8, !dbg !6836, !tbaa !2505
  %27 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !6837, !tbaa !2505
  store %struct.mpd_t* %27, %struct.mpd_t** %small, align 8, !dbg !6838, !tbaa !2505
  br label %if.end.16, !dbg !6839

if.end.16:                                        ; preds = %if.then.15, %if.end
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6840, !tbaa !2505
  %29 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !6842, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %29, i32 0, i32 3, !dbg !6843
  %30 = load i64, i64* %len, align 8, !dbg !6843, !tbaa !2542
  %31 = load i32*, i32** %status.addr, align 8, !dbg !6844, !tbaa !2505
  %call17 = call i32 @mpd_qresize(%struct.mpd_t* %28, i64 %30, i32* %31), !dbg !6845
  %tobool18 = icmp ne i32 %call17, 0, !dbg !6845
  br i1 %tobool18, label %if.end.20, label %if.then.19, !dbg !6846

if.then.19:                                       ; preds = %if.end.16
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6847

if.end.20:                                        ; preds = %if.end.16
  store i64 0, i64* %i, align 8, !dbg !6849, !tbaa !2391
  br label %for.cond, !dbg !6851

for.cond:                                         ; preds = %for.inc.39, %if.end.20
  %32 = load i64, i64* %i, align 8, !dbg !6852, !tbaa !2391
  %33 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !6856, !tbaa !2505
  %len21 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %33, i32 0, i32 3, !dbg !6857
  %34 = load i64, i64* %len21, align 8, !dbg !6857, !tbaa !2542
  %sub = sub i64 %34, 1, !dbg !6858
  %cmp22 = icmp slt i64 %32, %sub, !dbg !6859
  br i1 %cmp22, label %for.body, label %for.end.41, !dbg !6860

for.body:                                         ; preds = %for.cond
  %35 = load i64, i64* %i, align 8, !dbg !6861, !tbaa !2391
  %36 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !6863, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %36, i32 0, i32 5, !dbg !6864
  %37 = load i64*, i64** %data, align 8, !dbg !6864, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %37, i64 %35, !dbg !6863
  %38 = load i64, i64* %arrayidx, align 8, !dbg !6863, !tbaa !2391
  store i64 %38, i64* %x, align 8, !dbg !6865, !tbaa !2391
  %39 = load i64, i64* %i, align 8, !dbg !6866, !tbaa !2391
  %40 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !6867, !tbaa !2505
  %data23 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %40, i32 0, i32 5, !dbg !6868
  %41 = load i64*, i64** %data23, align 8, !dbg !6868, !tbaa !2546
  %arrayidx24 = getelementptr i64, i64* %41, i64 %39, !dbg !6867
  %42 = load i64, i64* %arrayidx24, align 8, !dbg !6867, !tbaa !2391
  store i64 %42, i64* %y, align 8, !dbg !6869, !tbaa !2391
  store i64 0, i64* %z, align 8, !dbg !6870, !tbaa !2391
  store i32 0, i32* %k, align 4, !dbg !6871, !tbaa !2554
  br label %for.cond.25, !dbg !6873

for.cond.25:                                      ; preds = %for.inc, %for.body
  %43 = load i32, i32* %k, align 4, !dbg !6874, !tbaa !2554
  %cmp26 = icmp slt i32 %43, 19, !dbg !6878
  br i1 %cmp26, label %for.body.27, label %for.end, !dbg !6879

for.body.27:                                      ; preds = %for.cond.25
  %44 = load i64, i64* %x, align 8, !dbg !6880, !tbaa !2391
  %rem = urem i64 %44, 10, !dbg !6882
  store i64 %rem, i64* %xbit, align 8, !dbg !6883, !tbaa !2391
  %45 = load i64, i64* %x, align 8, !dbg !6884, !tbaa !2391
  %div = udiv i64 %45, 10, !dbg !6884
  store i64 %div, i64* %x, align 8, !dbg !6884, !tbaa !2391
  %46 = load i64, i64* %y, align 8, !dbg !6885, !tbaa !2391
  %rem28 = urem i64 %46, 10, !dbg !6886
  store i64 %rem28, i64* %ybit, align 8, !dbg !6887, !tbaa !2391
  %47 = load i64, i64* %y, align 8, !dbg !6888, !tbaa !2391
  %div29 = udiv i64 %47, 10, !dbg !6888
  store i64 %div29, i64* %y, align 8, !dbg !6888, !tbaa !2391
  %48 = load i64, i64* %xbit, align 8, !dbg !6889, !tbaa !2391
  %cmp30 = icmp ugt i64 %48, 1, !dbg !6891
  br i1 %cmp30, label %if.then.33, label %lor.lhs.false.31, !dbg !6892

lor.lhs.false.31:                                 ; preds = %for.body.27
  %49 = load i64, i64* %ybit, align 8, !dbg !6893, !tbaa !2391
  %cmp32 = icmp ugt i64 %49, 1, !dbg !6895
  br i1 %cmp32, label %if.then.33, label %if.end.34, !dbg !6896

if.then.33:                                       ; preds = %lor.lhs.false.31, %for.body.27
  br label %invalid_operation, !dbg !6897

if.end.34:                                        ; preds = %lor.lhs.false.31
  %50 = load i64, i64* %xbit, align 8, !dbg !6899, !tbaa !2391
  %51 = load i64, i64* %ybit, align 8, !dbg !6900, !tbaa !2391
  %xor = xor i64 %50, %51, !dbg !6901
  %tobool35 = icmp ne i64 %xor, 0, !dbg !6901
  br i1 %tobool35, label %cond.true, label %cond.false, !dbg !6902

cond.true:                                        ; preds = %if.end.34
  %52 = load i32, i32* %k, align 4, !dbg !6903, !tbaa !2554
  %idxprom = sext i32 %52 to i64, !dbg !6905
  %arrayidx36 = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %idxprom, !dbg !6905
  %53 = load i64, i64* %arrayidx36, align 8, !dbg !6905, !tbaa !2391
  br label %cond.end, !dbg !6902

cond.false:                                       ; preds = %if.end.34
  br label %cond.end, !dbg !6906

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %53, %cond.true ], [ 0, %cond.false ], !dbg !6902
  %54 = load i64, i64* %z, align 8, !dbg !6908, !tbaa !2391
  %add = add i64 %54, %cond, !dbg !6908
  store i64 %add, i64* %z, align 8, !dbg !6908, !tbaa !2391
  br label %for.inc, !dbg !6911

for.inc:                                          ; preds = %cond.end
  %55 = load i32, i32* %k, align 4, !dbg !6912, !tbaa !2554
  %inc = add i32 %55, 1, !dbg !6912
  store i32 %inc, i32* %k, align 4, !dbg !6912, !tbaa !2554
  br label %for.cond.25, !dbg !6913

for.end:                                          ; preds = %for.cond.25
  %56 = load i64, i64* %z, align 8, !dbg !6914, !tbaa !2391
  %57 = load i64, i64* %i, align 8, !dbg !6915, !tbaa !2391
  %58 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !6916, !tbaa !2505
  %data37 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %58, i32 0, i32 5, !dbg !6917
  %59 = load i64*, i64** %data37, align 8, !dbg !6917, !tbaa !2546
  %arrayidx38 = getelementptr i64, i64* %59, i64 %57, !dbg !6916
  store i64 %56, i64* %arrayidx38, align 8, !dbg !6918, !tbaa !2391
  br label %for.inc.39, !dbg !6919

for.inc.39:                                       ; preds = %for.end
  %60 = load i64, i64* %i, align 8, !dbg !6920, !tbaa !2391
  %inc40 = add i64 %60, 1, !dbg !6920
  store i64 %inc40, i64* %i, align 8, !dbg !6920, !tbaa !2391
  br label %for.cond, !dbg !6921

for.end.41:                                       ; preds = %for.cond
  %61 = load i64, i64* %i, align 8, !dbg !6922, !tbaa !2391
  %62 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !6923, !tbaa !2505
  %data42 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %62, i32 0, i32 5, !dbg !6924
  %63 = load i64*, i64** %data42, align 8, !dbg !6924, !tbaa !2546
  %arrayidx43 = getelementptr i64, i64* %63, i64 %61, !dbg !6923
  %64 = load i64, i64* %arrayidx43, align 8, !dbg !6923, !tbaa !2391
  store i64 %64, i64* %x, align 8, !dbg !6925, !tbaa !2391
  %65 = load i64, i64* %i, align 8, !dbg !6926, !tbaa !2391
  %66 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !6927, !tbaa !2505
  %data44 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %66, i32 0, i32 5, !dbg !6928
  %67 = load i64*, i64** %data44, align 8, !dbg !6928, !tbaa !2546
  %arrayidx45 = getelementptr i64, i64* %67, i64 %65, !dbg !6927
  %68 = load i64, i64* %arrayidx45, align 8, !dbg !6927, !tbaa !2391
  store i64 %68, i64* %y, align 8, !dbg !6929, !tbaa !2391
  store i64 0, i64* %z, align 8, !dbg !6930, !tbaa !2391
  %69 = load i64, i64* %x, align 8, !dbg !6931, !tbaa !2391
  %call46 = call i32 @mpd_word_digits(i64 %69), !dbg !6932
  store i32 %call46, i32* %mswdigits, align 4, !dbg !6933, !tbaa !2554
  store i32 0, i32* %k, align 4, !dbg !6934, !tbaa !2554
  br label %for.cond.47, !dbg !6936

for.cond.47:                                      ; preds = %for.inc.68, %for.end.41
  %70 = load i32, i32* %k, align 4, !dbg !6937, !tbaa !2554
  %71 = load i32, i32* %mswdigits, align 4, !dbg !6941, !tbaa !2554
  %cmp48 = icmp slt i32 %70, %71, !dbg !6942
  br i1 %cmp48, label %for.body.49, label %for.end.70, !dbg !6943

for.body.49:                                      ; preds = %for.cond.47
  %72 = load i64, i64* %x, align 8, !dbg !6944, !tbaa !2391
  %rem50 = urem i64 %72, 10, !dbg !6946
  store i64 %rem50, i64* %xbit, align 8, !dbg !6947, !tbaa !2391
  %73 = load i64, i64* %x, align 8, !dbg !6948, !tbaa !2391
  %div51 = udiv i64 %73, 10, !dbg !6948
  store i64 %div51, i64* %x, align 8, !dbg !6948, !tbaa !2391
  %74 = load i64, i64* %y, align 8, !dbg !6949, !tbaa !2391
  %rem52 = urem i64 %74, 10, !dbg !6950
  store i64 %rem52, i64* %ybit, align 8, !dbg !6951, !tbaa !2391
  %75 = load i64, i64* %y, align 8, !dbg !6952, !tbaa !2391
  %div53 = udiv i64 %75, 10, !dbg !6952
  store i64 %div53, i64* %y, align 8, !dbg !6952, !tbaa !2391
  %76 = load i64, i64* %xbit, align 8, !dbg !6953, !tbaa !2391
  %cmp54 = icmp ugt i64 %76, 1, !dbg !6955
  br i1 %cmp54, label %if.then.57, label %lor.lhs.false.55, !dbg !6956

lor.lhs.false.55:                                 ; preds = %for.body.49
  %77 = load i64, i64* %ybit, align 8, !dbg !6957, !tbaa !2391
  %cmp56 = icmp ugt i64 %77, 1, !dbg !6959
  br i1 %cmp56, label %if.then.57, label %if.end.58, !dbg !6960

if.then.57:                                       ; preds = %lor.lhs.false.55, %for.body.49
  br label %invalid_operation, !dbg !6961

if.end.58:                                        ; preds = %lor.lhs.false.55
  %78 = load i64, i64* %xbit, align 8, !dbg !6963, !tbaa !2391
  %79 = load i64, i64* %ybit, align 8, !dbg !6964, !tbaa !2391
  %xor59 = xor i64 %78, %79, !dbg !6965
  %tobool60 = icmp ne i64 %xor59, 0, !dbg !6965
  br i1 %tobool60, label %cond.true.61, label %cond.false.64, !dbg !6966

cond.true.61:                                     ; preds = %if.end.58
  %80 = load i32, i32* %k, align 4, !dbg !6967, !tbaa !2554
  %idxprom62 = sext i32 %80 to i64, !dbg !6969
  %arrayidx63 = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %idxprom62, !dbg !6969
  %81 = load i64, i64* %arrayidx63, align 8, !dbg !6969, !tbaa !2391
  br label %cond.end.65, !dbg !6966

cond.false.64:                                    ; preds = %if.end.58
  br label %cond.end.65, !dbg !6970

cond.end.65:                                      ; preds = %cond.false.64, %cond.true.61
  %cond66 = phi i64 [ %81, %cond.true.61 ], [ 0, %cond.false.64 ], !dbg !6966
  %82 = load i64, i64* %z, align 8, !dbg !6972, !tbaa !2391
  %add67 = add i64 %82, %cond66, !dbg !6972
  store i64 %add67, i64* %z, align 8, !dbg !6972, !tbaa !2391
  br label %for.inc.68, !dbg !6975

for.inc.68:                                       ; preds = %cond.end.65
  %83 = load i32, i32* %k, align 4, !dbg !6976, !tbaa !2554
  %inc69 = add i32 %83, 1, !dbg !6976
  store i32 %inc69, i32* %k, align 4, !dbg !6976, !tbaa !2554
  br label %for.cond.47, !dbg !6977

for.end.70:                                       ; preds = %for.cond.47
  br label %for.cond.71, !dbg !6978

for.cond.71:                                      ; preds = %for.inc.82, %for.end.70
  %84 = load i32, i32* %k, align 4, !dbg !6979, !tbaa !2554
  %cmp72 = icmp slt i32 %84, 19, !dbg !6984
  br i1 %cmp72, label %for.body.73, label %for.end.84, !dbg !6985

for.body.73:                                      ; preds = %for.cond.71
  %85 = load i64, i64* %y, align 8, !dbg !6986, !tbaa !2391
  %rem74 = urem i64 %85, 10, !dbg !6988
  store i64 %rem74, i64* %ybit, align 8, !dbg !6989, !tbaa !2391
  %86 = load i64, i64* %y, align 8, !dbg !6990, !tbaa !2391
  %div75 = udiv i64 %86, 10, !dbg !6990
  store i64 %div75, i64* %y, align 8, !dbg !6990, !tbaa !2391
  %87 = load i64, i64* %ybit, align 8, !dbg !6991, !tbaa !2391
  %cmp76 = icmp ugt i64 %87, 1, !dbg !6993
  br i1 %cmp76, label %if.then.77, label %if.end.78, !dbg !6994

if.then.77:                                       ; preds = %for.body.73
  br label %invalid_operation, !dbg !6995

if.end.78:                                        ; preds = %for.body.73
  %88 = load i64, i64* %ybit, align 8, !dbg !6997, !tbaa !2391
  %89 = load i32, i32* %k, align 4, !dbg !6998, !tbaa !2554
  %idxprom79 = sext i32 %89 to i64, !dbg !6999
  %arrayidx80 = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %idxprom79, !dbg !6999
  %90 = load i64, i64* %arrayidx80, align 8, !dbg !6999, !tbaa !2391
  %mul = mul i64 %88, %90, !dbg !7000
  %91 = load i64, i64* %z, align 8, !dbg !7001, !tbaa !2391
  %add81 = add i64 %91, %mul, !dbg !7001
  store i64 %add81, i64* %z, align 8, !dbg !7001, !tbaa !2391
  br label %for.inc.82, !dbg !7002

for.inc.82:                                       ; preds = %if.end.78
  %92 = load i32, i32* %k, align 4, !dbg !7003, !tbaa !2554
  %inc83 = add i32 %92, 1, !dbg !7003
  store i32 %inc83, i32* %k, align 4, !dbg !7003, !tbaa !2554
  br label %for.cond.71, !dbg !7004

for.end.84:                                       ; preds = %for.cond.71
  %93 = load i64, i64* %z, align 8, !dbg !7005, !tbaa !2391
  %94 = load i64, i64* %i, align 8, !dbg !7006, !tbaa !2391
  %inc85 = add i64 %94, 1, !dbg !7006
  store i64 %inc85, i64* %i, align 8, !dbg !7006, !tbaa !2391
  %95 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7007, !tbaa !2505
  %data86 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %95, i32 0, i32 5, !dbg !7008
  %96 = load i64*, i64** %data86, align 8, !dbg !7008, !tbaa !2546
  %arrayidx87 = getelementptr i64, i64* %96, i64 %94, !dbg !7007
  store i64 %93, i64* %arrayidx87, align 8, !dbg !7009, !tbaa !2391
  br label %for.cond.88, !dbg !7010

for.cond.88:                                      ; preds = %for.inc.109, %for.end.84
  %97 = load i64, i64* %i, align 8, !dbg !7011, !tbaa !2391
  %98 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7016, !tbaa !2505
  %len89 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %98, i32 0, i32 3, !dbg !7017
  %99 = load i64, i64* %len89, align 8, !dbg !7017, !tbaa !2542
  %cmp90 = icmp slt i64 %97, %99, !dbg !7018
  br i1 %cmp90, label %for.body.91, label %for.end.111, !dbg !7019

for.body.91:                                      ; preds = %for.cond.88
  %100 = load i64, i64* %i, align 8, !dbg !7020, !tbaa !2391
  %101 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7022, !tbaa !2505
  %data92 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %101, i32 0, i32 5, !dbg !7023
  %102 = load i64*, i64** %data92, align 8, !dbg !7023, !tbaa !2546
  %arrayidx93 = getelementptr i64, i64* %102, i64 %100, !dbg !7022
  %103 = load i64, i64* %arrayidx93, align 8, !dbg !7022, !tbaa !2391
  store i64 %103, i64* %y, align 8, !dbg !7024, !tbaa !2391
  store i32 0, i32* %k, align 4, !dbg !7025, !tbaa !2554
  br label %for.cond.94, !dbg !7027

for.cond.94:                                      ; preds = %for.inc.102, %for.body.91
  %104 = load i32, i32* %k, align 4, !dbg !7028, !tbaa !2554
  %cmp95 = icmp slt i32 %104, 19, !dbg !7032
  br i1 %cmp95, label %for.body.96, label %for.end.104, !dbg !7033

for.body.96:                                      ; preds = %for.cond.94
  %105 = load i64, i64* %y, align 8, !dbg !7034, !tbaa !2391
  %rem97 = urem i64 %105, 10, !dbg !7036
  store i64 %rem97, i64* %ybit, align 8, !dbg !7037, !tbaa !2391
  %106 = load i64, i64* %y, align 8, !dbg !7038, !tbaa !2391
  %div98 = udiv i64 %106, 10, !dbg !7038
  store i64 %div98, i64* %y, align 8, !dbg !7038, !tbaa !2391
  %107 = load i64, i64* %ybit, align 8, !dbg !7039, !tbaa !2391
  %cmp99 = icmp ugt i64 %107, 1, !dbg !7041
  br i1 %cmp99, label %if.then.100, label %if.end.101, !dbg !7042

if.then.100:                                      ; preds = %for.body.96
  br label %invalid_operation, !dbg !7043

if.end.101:                                       ; preds = %for.body.96
  br label %for.inc.102, !dbg !7045

for.inc.102:                                      ; preds = %if.end.101
  %108 = load i32, i32* %k, align 4, !dbg !7046, !tbaa !2554
  %inc103 = add i32 %108, 1, !dbg !7046
  store i32 %inc103, i32* %k, align 4, !dbg !7046, !tbaa !2554
  br label %for.cond.94, !dbg !7047

for.end.104:                                      ; preds = %for.cond.94
  %109 = load i64, i64* %i, align 8, !dbg !7048, !tbaa !2391
  %110 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7049, !tbaa !2505
  %data105 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %110, i32 0, i32 5, !dbg !7050
  %111 = load i64*, i64** %data105, align 8, !dbg !7050, !tbaa !2546
  %arrayidx106 = getelementptr i64, i64* %111, i64 %109, !dbg !7049
  %112 = load i64, i64* %arrayidx106, align 8, !dbg !7049, !tbaa !2391
  %113 = load i64, i64* %i, align 8, !dbg !7051, !tbaa !2391
  %114 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7052, !tbaa !2505
  %data107 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %114, i32 0, i32 5, !dbg !7053
  %115 = load i64*, i64** %data107, align 8, !dbg !7053, !tbaa !2546
  %arrayidx108 = getelementptr i64, i64* %115, i64 %113, !dbg !7052
  store i64 %112, i64* %arrayidx108, align 8, !dbg !7054, !tbaa !2391
  br label %for.inc.109, !dbg !7055

for.inc.109:                                      ; preds = %for.end.104
  %116 = load i64, i64* %i, align 8, !dbg !7056, !tbaa !2391
  %inc110 = add i64 %116, 1, !dbg !7056
  store i64 %inc110, i64* %i, align 8, !dbg !7056, !tbaa !2391
  br label %for.cond.88, !dbg !7057

for.end.111:                                      ; preds = %for.cond.88
  %117 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7058, !tbaa !2505
  call void @mpd_clear_flags(%struct.mpd_t* %117), !dbg !7059
  %118 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7060, !tbaa !2505
  %exp112 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %118, i32 0, i32 1, !dbg !7061
  store i64 0, i64* %exp112, align 8, !dbg !7062, !tbaa !2510
  %119 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7063, !tbaa !2505
  %data113 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %119, i32 0, i32 5, !dbg !7064
  %120 = load i64*, i64** %data113, align 8, !dbg !7064, !tbaa !2546
  %121 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7065, !tbaa !2505
  %len114 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %121, i32 0, i32 3, !dbg !7066
  %122 = load i64, i64* %len114, align 8, !dbg !7066, !tbaa !2542
  %call115 = call i64 @_mpd_real_size(i64* %120, i64 %122), !dbg !7067
  %123 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7068, !tbaa !2505
  %len116 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %123, i32 0, i32 3, !dbg !7069
  store i64 %call115, i64* %len116, align 8, !dbg !7070, !tbaa !2542
  %124 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7071, !tbaa !2505
  %125 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7072, !tbaa !2505
  %len117 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %125, i32 0, i32 3, !dbg !7073
  %126 = load i64, i64* %len117, align 8, !dbg !7073, !tbaa !2542
  %127 = load i32*, i32** %status.addr, align 8, !dbg !7074, !tbaa !2505
  %call118 = call i32 @mpd_qresize(%struct.mpd_t* %124, i64 %126, i32* %127), !dbg !7075
  %128 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7076, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %128), !dbg !7077
  %129 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7078, !tbaa !2505
  %130 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7079, !tbaa !2505
  call void @_mpd_cap(%struct.mpd_t* %129, %struct.mpd_context_t* %130), !dbg !7080
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7081

invalid_operation:                                ; preds = %if.then.100, %if.then.77, %if.then.57, %if.then.33
  %131 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7082, !tbaa !2505
  %132 = load i32*, i32** %status.addr, align 8, !dbg !7083, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %131, i32 256, i32* %132), !dbg !7084
  store i32 0, i32* %cleanup.dest.slot, !dbg !7085
  br label %cleanup, !dbg !7085

cleanup:                                          ; preds = %invalid_operation, %for.end.111, %if.then.19, %if.then
  %133 = bitcast i64* %i to i8*, !dbg !7086
  call void @llvm.lifetime.end(i64 8, i8* %133) #4, !dbg !7086
  %134 = bitcast i32* %mswdigits to i8*, !dbg !7086
  call void @llvm.lifetime.end(i64 4, i8* %134) #4, !dbg !7086
  %135 = bitcast i32* %k to i8*, !dbg !7086
  call void @llvm.lifetime.end(i64 4, i8* %135) #4, !dbg !7086
  %136 = bitcast i64* %ybit to i8*, !dbg !7086
  call void @llvm.lifetime.end(i64 8, i8* %136) #4, !dbg !7086
  %137 = bitcast i64* %xbit to i8*, !dbg !7086
  call void @llvm.lifetime.end(i64 8, i8* %137) #4, !dbg !7086
  %138 = bitcast i64* %z to i8*, !dbg !7086
  call void @llvm.lifetime.end(i64 8, i8* %138) #4, !dbg !7086
  %139 = bitcast i64* %y to i8*, !dbg !7086
  call void @llvm.lifetime.end(i64 8, i8* %139) #4, !dbg !7086
  %140 = bitcast i64* %x to i8*, !dbg !7086
  call void @llvm.lifetime.end(i64 8, i8* %140) #4, !dbg !7086
  %141 = bitcast %struct.mpd_t** %small to i8*, !dbg !7086
  call void @llvm.lifetime.end(i64 8, i8* %141) #4, !dbg !7086
  %142 = bitcast %struct.mpd_t** %big to i8*, !dbg !7086
  call void @llvm.lifetime.end(i64 8, i8* %142) #4, !dbg !7086
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !7085

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qabs(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !773, metadata !2395), !dbg !7088
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !774, metadata !2395), !dbg !7089
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !775, metadata !2395), !dbg !7090
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !776, metadata !2395), !dbg !7091
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7092, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %0), !dbg !7094
  %tobool = icmp ne i32 %call, 0, !dbg !7094
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !7095

if.then:                                          ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7096, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7099, !tbaa !2505
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7100, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7101, !tbaa !2505
  %call1 = call i32 @mpd_qcheck_nan(%struct.mpd_t* %1, %struct.mpd_t* %2, %struct.mpd_context_t* %3, i32* %4), !dbg !7102
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7102
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !7103

if.then.3:                                        ; preds = %if.then
  br label %if.end.8, !dbg !7104

if.end:                                           ; preds = %if.then
  br label %if.end.4, !dbg !7106

if.end.4:                                         ; preds = %if.end, %entry
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7107, !tbaa !2505
  %call5 = call i32 @mpd_isnegative(%struct.mpd_t* %5), !dbg !7109
  %tobool6 = icmp ne i32 %call5, 0, !dbg !7109
  br i1 %tobool6, label %if.then.7, label %if.else, !dbg !7110

if.then.7:                                        ; preds = %if.end.4
  %6 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7111, !tbaa !2505
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7113, !tbaa !2505
  %8 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7114, !tbaa !2505
  %9 = load i32*, i32** %status.addr, align 8, !dbg !7115, !tbaa !2505
  call void @mpd_qminus(%struct.mpd_t* %6, %struct.mpd_t* %7, %struct.mpd_context_t* %8, i32* %9), !dbg !7116
  br label %if.end.8, !dbg !7117

if.else:                                          ; preds = %if.end.4
  %10 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7118, !tbaa !2505
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7120, !tbaa !2505
  %12 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7121, !tbaa !2505
  %13 = load i32*, i32** %status.addr, align 8, !dbg !7122, !tbaa !2505
  call void @mpd_qplus(%struct.mpd_t* %10, %struct.mpd_t* %11, %struct.mpd_context_t* %12, i32* %13), !dbg !7123
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7, %if.then.3
  ret void, !dbg !7124
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qminus(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1158, metadata !2395), !dbg !7125
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1159, metadata !2395), !dbg !7126
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1160, metadata !2395), !dbg !7127
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1161, metadata !2395), !dbg !7128
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7129, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %0), !dbg !7131
  %tobool = icmp ne i32 %call, 0, !dbg !7131
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !7132

if.then:                                          ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7133, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7136, !tbaa !2505
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7137, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7138, !tbaa !2505
  %call1 = call i32 @mpd_qcheck_nan(%struct.mpd_t* %1, %struct.mpd_t* %2, %struct.mpd_context_t* %3, i32* %4), !dbg !7139
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7139
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !7140

if.then.3:                                        ; preds = %if.then
  br label %return, !dbg !7141

if.end:                                           ; preds = %if.then
  br label %if.end.4, !dbg !7143

if.end.4:                                         ; preds = %if.end, %entry
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7144, !tbaa !2505
  %call5 = call i32 @mpd_iszero(%struct.mpd_t* %5), !dbg !7146
  %tobool6 = icmp ne i32 %call5, 0, !dbg !7146
  br i1 %tobool6, label %land.lhs.true, label %if.else, !dbg !7147

land.lhs.true:                                    ; preds = %if.end.4
  %6 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7148, !tbaa !2505
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %6, i32 0, i32 6, !dbg !7150
  %7 = load i32, i32* %round, align 4, !dbg !7150, !tbaa !4148
  %cmp = icmp ne i32 %7, 3, !dbg !7151
  br i1 %cmp, label %if.then.7, label %if.else, !dbg !7152

if.then.7:                                        ; preds = %land.lhs.true
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7153, !tbaa !2505
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7155, !tbaa !2505
  %10 = load i32*, i32** %status.addr, align 8, !dbg !7156, !tbaa !2505
  %call8 = call i32 @mpd_qcopy_abs(%struct.mpd_t* %8, %struct.mpd_t* %9, i32* %10), !dbg !7157
  br label %if.end.10, !dbg !7158

if.else:                                          ; preds = %land.lhs.true, %if.end.4
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7159, !tbaa !2505
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7161, !tbaa !2505
  %13 = load i32*, i32** %status.addr, align 8, !dbg !7162, !tbaa !2505
  %call9 = call i32 @mpd_qcopy_negate(%struct.mpd_t* %11, %struct.mpd_t* %12, i32* %13), !dbg !7163
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.7
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7164, !tbaa !2505
  %15 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7165, !tbaa !2505
  %16 = load i32*, i32** %status.addr, align 8, !dbg !7166, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %14, %struct.mpd_context_t* %15, i32* %16), !dbg !7167
  br label %return, !dbg !7168

return:                                           ; preds = %if.end.10, %if.then.3
  ret void, !dbg !7169
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qplus(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1164, metadata !2395), !dbg !7171
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1165, metadata !2395), !dbg !7172
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1166, metadata !2395), !dbg !7173
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1167, metadata !2395), !dbg !7174
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7175, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %0), !dbg !7177
  %tobool = icmp ne i32 %call, 0, !dbg !7177
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !7178

if.then:                                          ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7179, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7182, !tbaa !2505
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7183, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7184, !tbaa !2505
  %call1 = call i32 @mpd_qcheck_nan(%struct.mpd_t* %1, %struct.mpd_t* %2, %struct.mpd_context_t* %3, i32* %4), !dbg !7185
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7185
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !7186

if.then.3:                                        ; preds = %if.then
  br label %return, !dbg !7187

if.end:                                           ; preds = %if.then
  br label %if.end.4, !dbg !7189

if.end.4:                                         ; preds = %if.end, %entry
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7190, !tbaa !2505
  %call5 = call i32 @mpd_iszero(%struct.mpd_t* %5), !dbg !7192
  %tobool6 = icmp ne i32 %call5, 0, !dbg !7192
  br i1 %tobool6, label %land.lhs.true, label %if.else, !dbg !7193

land.lhs.true:                                    ; preds = %if.end.4
  %6 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7194, !tbaa !2505
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %6, i32 0, i32 6, !dbg !7196
  %7 = load i32, i32* %round, align 4, !dbg !7196, !tbaa !4148
  %cmp = icmp ne i32 %7, 3, !dbg !7197
  br i1 %cmp, label %if.then.7, label %if.else, !dbg !7198

if.then.7:                                        ; preds = %land.lhs.true
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7199, !tbaa !2505
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7201, !tbaa !2505
  %10 = load i32*, i32** %status.addr, align 8, !dbg !7202, !tbaa !2505
  %call8 = call i32 @mpd_qcopy_abs(%struct.mpd_t* %8, %struct.mpd_t* %9, i32* %10), !dbg !7203
  br label %if.end.10, !dbg !7204

if.else:                                          ; preds = %land.lhs.true, %if.end.4
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7205, !tbaa !2505
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7207, !tbaa !2505
  %13 = load i32*, i32** %status.addr, align 8, !dbg !7208, !tbaa !2505
  %call9 = call i32 @mpd_qcopy(%struct.mpd_t* %11, %struct.mpd_t* %12, i32* %13), !dbg !7209
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.7
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7210, !tbaa !2505
  %15 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7211, !tbaa !2505
  %16 = load i32*, i32** %status.addr, align 8, !dbg !7212, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %14, %struct.mpd_context_t* %15, i32* %16), !dbg !7213
  br label %return, !dbg !7214

return:                                           ; preds = %if.end.10, %if.then.3
  ret void, !dbg !7215
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qadd(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !779, metadata !2395), !dbg !7217
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !780, metadata !2395), !dbg !7218
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !781, metadata !2395), !dbg !7219
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !782, metadata !2395), !dbg !7220
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !783, metadata !2395), !dbg !7221
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7222, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %0), !dbg !7224
  %tobool = icmp ne i32 %call, 0, !dbg !7224
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7225

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7226, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %1), !dbg !7228
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7228
  br i1 %tobool2, label %if.then, label %if.end.7, !dbg !7229

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7230, !tbaa !2505
  %3 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7233, !tbaa !2505
  %4 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7234, !tbaa !2505
  %5 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7235, !tbaa !2505
  %6 = load i32*, i32** %status.addr, align 8, !dbg !7236, !tbaa !2505
  %call3 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %2, %struct.mpd_t* %3, %struct.mpd_t* %4, %struct.mpd_context_t* %5, i32* %6), !dbg !7237
  %tobool4 = icmp ne i32 %call3, 0, !dbg !7237
  br i1 %tobool4, label %if.then.5, label %if.end, !dbg !7238

if.then.5:                                        ; preds = %if.then
  br label %return, !dbg !7239

if.end:                                           ; preds = %if.then
  %7 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7241, !tbaa !2505
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7242, !tbaa !2505
  %9 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7243, !tbaa !2505
  %10 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7244, !tbaa !2505
  %call6 = call zeroext i8 @mpd_sign(%struct.mpd_t* %10), !dbg !7245
  %11 = load i32*, i32** %status.addr, align 8, !dbg !7246, !tbaa !2505
  call void @_mpd_qaddsub_inf(%struct.mpd_t* %7, %struct.mpd_t* %8, %struct.mpd_t* %9, i8 zeroext %call6, i32* %11), !dbg !7247
  br label %return, !dbg !7248

if.end.7:                                         ; preds = %lor.lhs.false
  %12 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7249, !tbaa !2505
  %13 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7250, !tbaa !2505
  %14 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7251, !tbaa !2505
  %15 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7252, !tbaa !2505
  %call8 = call zeroext i8 @mpd_sign(%struct.mpd_t* %15), !dbg !7253
  %16 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7254, !tbaa !2505
  %17 = load i32*, i32** %status.addr, align 8, !dbg !7255, !tbaa !2505
  call void @_mpd_qaddsub(%struct.mpd_t* %12, %struct.mpd_t* %13, %struct.mpd_t* %14, i8 zeroext %call8, %struct.mpd_context_t* %16, i32* %17), !dbg !7256
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7257, !tbaa !2505
  %19 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7258, !tbaa !2505
  %20 = load i32*, i32** %status.addr, align 8, !dbg !7259, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %18, %struct.mpd_context_t* %19, i32* %20), !dbg !7260
  br label %return, !dbg !7261

return:                                           ; preds = %if.end.7, %if.end, %if.then.5
  ret void, !dbg !7262
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qaddsub_inf(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, i8 zeroext %sign_b, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %sign_b.addr = alloca i8, align 1
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1644, metadata !2395), !dbg !7264
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1645, metadata !2395), !dbg !7265
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1646, metadata !2395), !dbg !7266
  store i8 %sign_b, i8* %sign_b.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %sign_b.addr, metadata !1647, metadata !2395), !dbg !7267
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1648, metadata !2395), !dbg !7268
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7269, !tbaa !2505
  %call = call i32 @mpd_isinfinite(%struct.mpd_t* %0), !dbg !7271
  %tobool = icmp ne i32 %call, 0, !dbg !7271
  br i1 %tobool, label %if.then, label %if.end.8, !dbg !7272

if.then:                                          ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7273, !tbaa !2505
  %call1 = call zeroext i8 @mpd_sign(%struct.mpd_t* %1), !dbg !7276
  %conv = zext i8 %call1 to i32, !dbg !7276
  %2 = load i8, i8* %sign_b.addr, align 1, !dbg !7277, !tbaa !2930
  %conv2 = zext i8 %2 to i32, !dbg !7277
  %cmp = icmp ne i32 %conv, %conv2, !dbg !7278
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7279

land.lhs.true:                                    ; preds = %if.then
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7280, !tbaa !2505
  %call4 = call i32 @mpd_isinfinite(%struct.mpd_t* %3), !dbg !7282
  %tobool5 = icmp ne i32 %call4, 0, !dbg !7282
  br i1 %tobool5, label %if.then.6, label %if.else, !dbg !7283

if.then.6:                                        ; preds = %land.lhs.true
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7284, !tbaa !2505
  %5 = load i32*, i32** %status.addr, align 8, !dbg !7286, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %4, i32 256, i32* %5), !dbg !7287
  br label %if.end, !dbg !7288

if.else:                                          ; preds = %land.lhs.true, %if.then
  %6 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7289, !tbaa !2505
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7291, !tbaa !2505
  %call7 = call zeroext i8 @mpd_sign(%struct.mpd_t* %7), !dbg !7292
  call void @mpd_setspecial(%struct.mpd_t* %6, i8 zeroext %call7, i8 zeroext 2), !dbg !7293
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.6
  br label %return, !dbg !7294

if.end.8:                                         ; preds = %entry
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7295, !tbaa !2505
  %9 = load i8, i8* %sign_b.addr, align 1, !dbg !7296, !tbaa !2930
  call void @mpd_setspecial(%struct.mpd_t* %8, i8 zeroext %9, i8 zeroext 2), !dbg !7297
  br label %return, !dbg !7298

return:                                           ; preds = %if.end.8, %if.end
  ret void, !dbg !7299
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qaddsub(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, i8 zeroext %sign_b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %sign_b.addr = alloca i8, align 1
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %big = alloca %struct.mpd_t*, align 8
  %small = alloca %struct.mpd_t*, align 8
  %big_aligned_data = alloca [64 x i64], align 16
  %big_aligned = alloca %struct.mpd_t, align 8
  %tiny_data = alloca [1 x i64], align 8
  %tiny = alloca %struct.mpd_t, align 8
  %carry = alloca i64, align 8
  %newsize = alloca i64, align 8
  %shift = alloca i64, align 8
  %exp8 = alloca i64, align 8
  %i = alloca i64, align 8
  %swap = alloca i32, align 4
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1653, metadata !2395), !dbg !7301
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1654, metadata !2395), !dbg !7302
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1655, metadata !2395), !dbg !7303
  store i8 %sign_b, i8* %sign_b.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %sign_b.addr, metadata !1656, metadata !2395), !dbg !7304
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1657, metadata !2395), !dbg !7305
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1658, metadata !2395), !dbg !7306
  %0 = bitcast %struct.mpd_t** %big to i8*, !dbg !7307
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !7307
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %big, metadata !1659, metadata !2395), !dbg !7308
  %1 = bitcast %struct.mpd_t** %small to i8*, !dbg !7307
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !7307
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %small, metadata !1660, metadata !2395), !dbg !7309
  %2 = bitcast [64 x i64]* %big_aligned_data to i8*, !dbg !7310
  call void @llvm.lifetime.start(i64 512, i8* %2) #4, !dbg !7310
  call void @llvm.dbg.declare(metadata [64 x i64]* %big_aligned_data, metadata !1661, metadata !2395), !dbg !7311
  %3 = bitcast %struct.mpd_t* %big_aligned to i8*, !dbg !7312
  call void @llvm.lifetime.start(i64 48, i8* %3) #4, !dbg !7312
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %big_aligned, metadata !1662, metadata !2395), !dbg !7313
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %big_aligned, i32 0, i32 0, !dbg !7314
  store i8 48, i8* %flags, align 1, !dbg !7314, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %big_aligned, i32 0, i32 1, !dbg !7314
  store i64 0, i64* %exp, align 8, !dbg !7314, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %big_aligned, i32 0, i32 2, !dbg !7314
  store i64 0, i64* %digits, align 8, !dbg !7314, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %big_aligned, i32 0, i32 3, !dbg !7314
  store i64 0, i64* %len, align 8, !dbg !7314, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %big_aligned, i32 0, i32 4, !dbg !7314
  store i64 64, i64* %alloc, align 8, !dbg !7314, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %big_aligned, i32 0, i32 5, !dbg !7314
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %big_aligned_data, i32 0, i32 0, !dbg !7315
  store i64* %arraydecay, i64** %data, align 8, !dbg !7314, !tbaa !2546
  %4 = bitcast [1 x i64]* %tiny_data to i8*, !dbg !7316
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !7316
  call void @llvm.dbg.declare(metadata [1 x i64]* %tiny_data, metadata !1663, metadata !2395), !dbg !7317
  %5 = bitcast [1 x i64]* %tiny_data to i8*, !dbg !7317
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* bitcast ([1 x i64]* @_mpd_qaddsub.tiny_data to i8*), i64 8, i32 8, i1 false), !dbg !7317
  %6 = bitcast %struct.mpd_t* %tiny to i8*, !dbg !7318
  call void @llvm.lifetime.start(i64 48, i8* %6) #4, !dbg !7318
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %tiny, metadata !1664, metadata !2395), !dbg !7319
  %flags1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 0, !dbg !7320
  store i8 -112, i8* %flags1, align 1, !dbg !7320, !tbaa !2620
  %exp2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 1, !dbg !7320
  store i64 0, i64* %exp2, align 8, !dbg !7320, !tbaa !2510
  %digits3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 2, !dbg !7320
  store i64 1, i64* %digits3, align 8, !dbg !7320, !tbaa !2514
  %len4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 3, !dbg !7320
  store i64 1, i64* %len4, align 8, !dbg !7320, !tbaa !2542
  %alloc5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 4, !dbg !7320
  store i64 1, i64* %alloc5, align 8, !dbg !7320, !tbaa !2835
  %data6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 5, !dbg !7320
  %arraydecay7 = getelementptr inbounds [1 x i64], [1 x i64]* %tiny_data, i32 0, i32 0, !dbg !7321
  store i64* %arraydecay7, i64** %data6, align 8, !dbg !7320, !tbaa !2546
  %7 = bitcast i64* %carry to i8*, !dbg !7322
  call void @llvm.lifetime.start(i64 8, i8* %7) #4, !dbg !7322
  call void @llvm.dbg.declare(metadata i64* %carry, metadata !1665, metadata !2395), !dbg !7323
  %8 = bitcast i64* %newsize to i8*, !dbg !7324
  call void @llvm.lifetime.start(i64 8, i8* %8) #4, !dbg !7324
  call void @llvm.dbg.declare(metadata i64* %newsize, metadata !1666, metadata !2395), !dbg !7325
  %9 = bitcast i64* %shift to i8*, !dbg !7324
  call void @llvm.lifetime.start(i64 8, i8* %9) #4, !dbg !7324
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !1667, metadata !2395), !dbg !7326
  %10 = bitcast i64* %exp8 to i8*, !dbg !7327
  call void @llvm.lifetime.start(i64 8, i8* %10) #4, !dbg !7327
  call void @llvm.dbg.declare(metadata i64* %exp8, metadata !1668, metadata !2395), !dbg !7328
  %11 = bitcast i64* %i to i8*, !dbg !7327
  call void @llvm.lifetime.start(i64 8, i8* %11) #4, !dbg !7327
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1669, metadata !2395), !dbg !7329
  %12 = bitcast i32* %swap to i8*, !dbg !7330
  call void @llvm.lifetime.start(i64 4, i8* %12) #4, !dbg !7330
  call void @llvm.dbg.declare(metadata i32* %swap, metadata !1670, metadata !2395), !dbg !7331
  store i32 0, i32* %swap, align 4, !dbg !7331, !tbaa !2554
  %13 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7332, !tbaa !2505
  store %struct.mpd_t* %13, %struct.mpd_t** %big, align 8, !dbg !7333, !tbaa !2505
  %14 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7334, !tbaa !2505
  store %struct.mpd_t* %14, %struct.mpd_t** %small, align 8, !dbg !7335, !tbaa !2505
  %15 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7336, !tbaa !2505
  %exp9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %15, i32 0, i32 1, !dbg !7338
  %16 = load i64, i64* %exp9, align 8, !dbg !7338, !tbaa !2510
  %17 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !7339, !tbaa !2505
  %exp10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 1, !dbg !7340
  %18 = load i64, i64* %exp10, align 8, !dbg !7340, !tbaa !2510
  %cmp = icmp ne i64 %16, %18, !dbg !7341
  br i1 %cmp, label %if.then, label %if.end.42, !dbg !7342

if.then:                                          ; preds = %entry
  %19 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !7343, !tbaa !2505
  %exp11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %19, i32 0, i32 1, !dbg !7346
  %20 = load i64, i64* %exp11, align 8, !dbg !7346, !tbaa !2510
  %21 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7347, !tbaa !2505
  %exp12 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %21, i32 0, i32 1, !dbg !7348
  %22 = load i64, i64* %exp12, align 8, !dbg !7348, !tbaa !2510
  %cmp13 = icmp sgt i64 %20, %22, !dbg !7349
  br i1 %cmp13, label %if.then.14, label %if.end, !dbg !7350

if.then.14:                                       ; preds = %if.then
  call void @_mpd_ptrswap(%struct.mpd_t** %big, %struct.mpd_t** %small), !dbg !7351
  %23 = load i32, i32* %swap, align 4, !dbg !7353, !tbaa !2554
  %inc = add i32 %23, 1, !dbg !7353
  store i32 %inc, i32* %swap, align 4, !dbg !7353, !tbaa !2554
  br label %if.end, !dbg !7354

if.end:                                           ; preds = %if.then.14, %if.then
  %24 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7355, !tbaa !2505
  %call = call i32 @mpd_iszerocoeff(%struct.mpd_t* %24), !dbg !7357
  %tobool = icmp ne i32 %call, 0, !dbg !7357
  br i1 %tobool, label %if.end.41, label %if.then.15, !dbg !7358

if.then.15:                                       ; preds = %if.end
  %25 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7359, !tbaa !2505
  %exp16 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %25, i32 0, i32 1, !dbg !7361
  %26 = load i64, i64* %exp16, align 8, !dbg !7361, !tbaa !2510
  %sub = sub i64 %26, 1, !dbg !7362
  store i64 %sub, i64* %exp8, align 8, !dbg !7363, !tbaa !2391
  %27 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7364, !tbaa !2505
  %digits17 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %27, i32 0, i32 2, !dbg !7365
  %28 = load i64, i64* %digits17, align 8, !dbg !7365, !tbaa !2514
  %29 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7366, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %29, i32 0, i32 0, !dbg !7367
  %30 = load i64, i64* %prec, align 8, !dbg !7367, !tbaa !2526
  %cmp18 = icmp sgt i64 %28, %30, !dbg !7368
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !7369

cond.true:                                        ; preds = %if.then.15
  br label %cond.end, !dbg !7370

cond.false:                                       ; preds = %if.then.15
  %31 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7372, !tbaa !2505
  %digits19 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %31, i32 0, i32 2, !dbg !7374
  %32 = load i64, i64* %digits19, align 8, !dbg !7374, !tbaa !2514
  %33 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7375, !tbaa !2505
  %prec20 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %33, i32 0, i32 0, !dbg !7376
  %34 = load i64, i64* %prec20, align 8, !dbg !7376, !tbaa !2526
  %sub21 = sub i64 %32, %34, !dbg !7377
  %sub22 = sub i64 %sub21, 1, !dbg !7378
  br label %cond.end, !dbg !7369

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %sub22, %cond.false ], !dbg !7369
  %35 = load i64, i64* %exp8, align 8, !dbg !7379, !tbaa !2391
  %add = add i64 %35, %cond, !dbg !7379
  store i64 %add, i64* %exp8, align 8, !dbg !7379, !tbaa !2391
  %36 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !7382, !tbaa !2505
  %call23 = call i64 @mpd_adjexp(%struct.mpd_t* %36), !dbg !7384
  %37 = load i64, i64* %exp8, align 8, !dbg !7385, !tbaa !2391
  %cmp24 = icmp slt i64 %call23, %37, !dbg !7386
  br i1 %cmp24, label %if.then.25, label %if.end.33, !dbg !7387

if.then.25:                                       ; preds = %cond.end
  %38 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !7388, !tbaa !2505
  call void @mpd_copy_flags(%struct.mpd_t* %tiny, %struct.mpd_t* %38), !dbg !7390
  %39 = load i64, i64* %exp8, align 8, !dbg !7391, !tbaa !2391
  %exp26 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 1, !dbg !7392
  store i64 %39, i64* %exp26, align 8, !dbg !7393, !tbaa !2510
  %digits27 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 2, !dbg !7394
  store i64 1, i64* %digits27, align 8, !dbg !7395, !tbaa !2514
  %len28 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 3, !dbg !7396
  store i64 1, i64* %len28, align 8, !dbg !7397, !tbaa !2542
  %40 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !7398, !tbaa !2505
  %call29 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %40), !dbg !7399
  %tobool30 = icmp ne i32 %call29, 0, !dbg !7399
  %cond31 = select i1 %tobool30, i32 0, i32 1, !dbg !7399
  %conv = sext i32 %cond31 to i64, !dbg !7399
  %data32 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 5, !dbg !7400
  %41 = load i64*, i64** %data32, align 8, !dbg !7400, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %41, i64 0, !dbg !7401
  store i64 %conv, i64* %arrayidx, align 8, !dbg !7402, !tbaa !2391
  store %struct.mpd_t* %tiny, %struct.mpd_t** %small, align 8, !dbg !7403, !tbaa !2505
  br label %if.end.33, !dbg !7404

if.end.33:                                        ; preds = %if.then.25, %cond.end
  %42 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7405, !tbaa !2505
  %exp34 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %42, i32 0, i32 1, !dbg !7406
  %43 = load i64, i64* %exp34, align 8, !dbg !7406, !tbaa !2510
  %44 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !7407, !tbaa !2505
  %exp35 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %44, i32 0, i32 1, !dbg !7408
  %45 = load i64, i64* %exp35, align 8, !dbg !7408, !tbaa !2510
  %sub36 = sub i64 %43, %45, !dbg !7409
  store i64 %sub36, i64* %shift, align 8, !dbg !7410, !tbaa !2391
  %46 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7411, !tbaa !2505
  %47 = load i64, i64* %shift, align 8, !dbg !7413, !tbaa !2391
  %48 = load i32*, i32** %status.addr, align 8, !dbg !7414, !tbaa !2505
  %call37 = call i32 @mpd_qshiftl(%struct.mpd_t* %big_aligned, %struct.mpd_t* %46, i64 %47, i32* %48), !dbg !7415
  %tobool38 = icmp ne i32 %call37, 0, !dbg !7415
  br i1 %tobool38, label %if.end.40, label %if.then.39, !dbg !7416

if.then.39:                                       ; preds = %if.end.33
  %49 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7417, !tbaa !2505
  %50 = load i32*, i32** %status.addr, align 8, !dbg !7419, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %49, i32 512, i32* %50), !dbg !7420
  br label %finish, !dbg !7421

if.end.40:                                        ; preds = %if.end.33
  store %struct.mpd_t* %big_aligned, %struct.mpd_t** %big, align 8, !dbg !7422, !tbaa !2505
  br label %if.end.41, !dbg !7423

if.end.41:                                        ; preds = %if.end.40, %if.end
  br label %if.end.42, !dbg !7424

if.end.42:                                        ; preds = %if.end.41, %entry
  %51 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !7425, !tbaa !2505
  %exp43 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %51, i32 0, i32 1, !dbg !7426
  %52 = load i64, i64* %exp43, align 8, !dbg !7426, !tbaa !2510
  %53 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7427, !tbaa !2505
  %exp44 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %53, i32 0, i32 1, !dbg !7428
  store i64 %52, i64* %exp44, align 8, !dbg !7429, !tbaa !2510
  %54 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7430, !tbaa !2505
  %len45 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %54, i32 0, i32 3, !dbg !7432
  %55 = load i64, i64* %len45, align 8, !dbg !7432, !tbaa !2542
  %56 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !7433, !tbaa !2505
  %len46 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %56, i32 0, i32 3, !dbg !7434
  %57 = load i64, i64* %len46, align 8, !dbg !7434, !tbaa !2542
  %cmp47 = icmp slt i64 %55, %57, !dbg !7435
  br i1 %cmp47, label %if.then.49, label %if.end.51, !dbg !7436

if.then.49:                                       ; preds = %if.end.42
  call void @_mpd_ptrswap(%struct.mpd_t** %big, %struct.mpd_t** %small), !dbg !7437
  %58 = load i32, i32* %swap, align 4, !dbg !7439, !tbaa !2554
  %inc50 = add i32 %58, 1, !dbg !7439
  store i32 %inc50, i32* %swap, align 4, !dbg !7439, !tbaa !2554
  br label %if.end.51, !dbg !7440

if.end.51:                                        ; preds = %if.then.49, %if.end.42
  %59 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7441, !tbaa !2505
  %len52 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %59, i32 0, i32 3, !dbg !7442
  %60 = load i64, i64* %len52, align 8, !dbg !7442, !tbaa !2542
  store i64 %60, i64* %newsize, align 8, !dbg !7443, !tbaa !2391
  %61 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7444, !tbaa !2505
  %62 = load i64, i64* %newsize, align 8, !dbg !7446, !tbaa !2391
  %63 = load i32*, i32** %status.addr, align 8, !dbg !7447, !tbaa !2505
  %call53 = call i32 @mpd_qresize(%struct.mpd_t* %61, i64 %62, i32* %63), !dbg !7448
  %tobool54 = icmp ne i32 %call53, 0, !dbg !7448
  br i1 %tobool54, label %if.end.56, label %if.then.55, !dbg !7449

if.then.55:                                       ; preds = %if.end.51
  br label %finish, !dbg !7450

if.end.56:                                        ; preds = %if.end.51
  %64 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7452, !tbaa !2505
  %call57 = call zeroext i8 @mpd_sign(%struct.mpd_t* %64), !dbg !7454
  %conv58 = zext i8 %call57 to i32, !dbg !7454
  %65 = load i8, i8* %sign_b.addr, align 1, !dbg !7455, !tbaa !2930
  %conv59 = zext i8 %65 to i32, !dbg !7455
  %cmp60 = icmp eq i32 %conv58, %conv59, !dbg !7456
  br i1 %cmp60, label %if.then.62, label %if.else, !dbg !7457

if.then.62:                                       ; preds = %if.end.56
  %66 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7458, !tbaa !2505
  %data63 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %66, i32 0, i32 5, !dbg !7460
  %67 = load i64*, i64** %data63, align 8, !dbg !7460, !tbaa !2546
  %68 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7461, !tbaa !2505
  %data64 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %68, i32 0, i32 5, !dbg !7462
  %69 = load i64*, i64** %data64, align 8, !dbg !7462, !tbaa !2546
  %70 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !7463, !tbaa !2505
  %data65 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %70, i32 0, i32 5, !dbg !7464
  %71 = load i64*, i64** %data65, align 8, !dbg !7464, !tbaa !2546
  %72 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7465, !tbaa !2505
  %len66 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %72, i32 0, i32 3, !dbg !7466
  %73 = load i64, i64* %len66, align 8, !dbg !7466, !tbaa !2542
  %74 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !7467, !tbaa !2505
  %len67 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %74, i32 0, i32 3, !dbg !7468
  %75 = load i64, i64* %len67, align 8, !dbg !7468, !tbaa !2542
  %call68 = call i64 @_mpd_baseadd(i64* %67, i64* %69, i64* %71, i64 %73, i64 %75), !dbg !7469
  store i64 %call68, i64* %carry, align 8, !dbg !7470, !tbaa !2391
  %76 = load i64, i64* %carry, align 8, !dbg !7471, !tbaa !2391
  %tobool69 = icmp ne i64 %76, 0, !dbg !7471
  br i1 %tobool69, label %if.then.70, label %if.end.80, !dbg !7473

if.then.70:                                       ; preds = %if.then.62
  %77 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7474, !tbaa !2505
  %len71 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %77, i32 0, i32 3, !dbg !7476
  %78 = load i64, i64* %len71, align 8, !dbg !7476, !tbaa !2542
  %add72 = add i64 %78, 1, !dbg !7477
  store i64 %add72, i64* %newsize, align 8, !dbg !7478, !tbaa !2391
  %79 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7479, !tbaa !2505
  %80 = load i64, i64* %newsize, align 8, !dbg !7481, !tbaa !2391
  %81 = load i32*, i32** %status.addr, align 8, !dbg !7482, !tbaa !2505
  %call73 = call i32 @mpd_qresize(%struct.mpd_t* %79, i64 %80, i32* %81), !dbg !7483
  %tobool74 = icmp ne i32 %call73, 0, !dbg !7483
  br i1 %tobool74, label %if.end.76, label %if.then.75, !dbg !7484

if.then.75:                                       ; preds = %if.then.70
  br label %finish, !dbg !7485

if.end.76:                                        ; preds = %if.then.70
  %82 = load i64, i64* %carry, align 8, !dbg !7487, !tbaa !2391
  %83 = load i64, i64* %newsize, align 8, !dbg !7488, !tbaa !2391
  %sub77 = sub i64 %83, 1, !dbg !7489
  %84 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7490, !tbaa !2505
  %data78 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %84, i32 0, i32 5, !dbg !7491
  %85 = load i64*, i64** %data78, align 8, !dbg !7491, !tbaa !2546
  %arrayidx79 = getelementptr i64, i64* %85, i64 %sub77, !dbg !7490
  store i64 %82, i64* %arrayidx79, align 8, !dbg !7492, !tbaa !2391
  br label %if.end.80, !dbg !7493

if.end.80:                                        ; preds = %if.end.76, %if.then.62
  %86 = load i64, i64* %newsize, align 8, !dbg !7494, !tbaa !2391
  %87 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7495, !tbaa !2505
  %len81 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %87, i32 0, i32 3, !dbg !7496
  store i64 %86, i64* %len81, align 8, !dbg !7497, !tbaa !2542
  %88 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7498, !tbaa !2505
  %89 = load i8, i8* %sign_b.addr, align 1, !dbg !7499, !tbaa !2930
  call void @mpd_set_flags(%struct.mpd_t* %88, i8 zeroext %89), !dbg !7500
  br label %if.end.136, !dbg !7501

if.else:                                          ; preds = %if.end.56
  %90 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7502, !tbaa !2505
  %len82 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %90, i32 0, i32 3, !dbg !7505
  %91 = load i64, i64* %len82, align 8, !dbg !7505, !tbaa !2542
  %92 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !7506, !tbaa !2505
  %len83 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %92, i32 0, i32 3, !dbg !7507
  %93 = load i64, i64* %len83, align 8, !dbg !7507, !tbaa !2542
  %cmp84 = icmp eq i64 %91, %93, !dbg !7508
  br i1 %cmp84, label %if.then.86, label %if.end.108, !dbg !7509

if.then.86:                                       ; preds = %if.else
  %94 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7510, !tbaa !2505
  %len87 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %94, i32 0, i32 3, !dbg !7513
  %95 = load i64, i64* %len87, align 8, !dbg !7513, !tbaa !2542
  %sub88 = sub i64 %95, 1, !dbg !7514
  store i64 %sub88, i64* %i, align 8, !dbg !7515, !tbaa !2391
  br label %for.cond, !dbg !7516

for.cond:                                         ; preds = %for.inc, %if.then.86
  %96 = load i64, i64* %i, align 8, !dbg !7517, !tbaa !2391
  %cmp89 = icmp sge i64 %96, 0, !dbg !7521
  br i1 %cmp89, label %for.body, label %for.end, !dbg !7522

for.body:                                         ; preds = %for.cond
  %97 = load i64, i64* %i, align 8, !dbg !7523, !tbaa !2391
  %98 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7526, !tbaa !2505
  %data91 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %98, i32 0, i32 5, !dbg !7527
  %99 = load i64*, i64** %data91, align 8, !dbg !7527, !tbaa !2546
  %arrayidx92 = getelementptr i64, i64* %99, i64 %97, !dbg !7526
  %100 = load i64, i64* %arrayidx92, align 8, !dbg !7526, !tbaa !2391
  %101 = load i64, i64* %i, align 8, !dbg !7528, !tbaa !2391
  %102 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !7529, !tbaa !2505
  %data93 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %102, i32 0, i32 5, !dbg !7530
  %103 = load i64*, i64** %data93, align 8, !dbg !7530, !tbaa !2546
  %arrayidx94 = getelementptr i64, i64* %103, i64 %101, !dbg !7529
  %104 = load i64, i64* %arrayidx94, align 8, !dbg !7529, !tbaa !2391
  %cmp95 = icmp ne i64 %100, %104, !dbg !7531
  br i1 %cmp95, label %if.then.97, label %if.end.107, !dbg !7532

if.then.97:                                       ; preds = %for.body
  %105 = load i64, i64* %i, align 8, !dbg !7533, !tbaa !2391
  %106 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7536, !tbaa !2505
  %data98 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %106, i32 0, i32 5, !dbg !7537
  %107 = load i64*, i64** %data98, align 8, !dbg !7537, !tbaa !2546
  %arrayidx99 = getelementptr i64, i64* %107, i64 %105, !dbg !7536
  %108 = load i64, i64* %arrayidx99, align 8, !dbg !7536, !tbaa !2391
  %109 = load i64, i64* %i, align 8, !dbg !7538, !tbaa !2391
  %110 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !7539, !tbaa !2505
  %data100 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %110, i32 0, i32 5, !dbg !7540
  %111 = load i64*, i64** %data100, align 8, !dbg !7540, !tbaa !2546
  %arrayidx101 = getelementptr i64, i64* %111, i64 %109, !dbg !7539
  %112 = load i64, i64* %arrayidx101, align 8, !dbg !7539, !tbaa !2391
  %cmp102 = icmp ult i64 %108, %112, !dbg !7541
  br i1 %cmp102, label %if.then.104, label %if.end.106, !dbg !7542

if.then.104:                                      ; preds = %if.then.97
  call void @_mpd_ptrswap(%struct.mpd_t** %big, %struct.mpd_t** %small), !dbg !7543
  %113 = load i32, i32* %swap, align 4, !dbg !7545, !tbaa !2554
  %inc105 = add i32 %113, 1, !dbg !7545
  store i32 %inc105, i32* %swap, align 4, !dbg !7545, !tbaa !2554
  br label %if.end.106, !dbg !7546

if.end.106:                                       ; preds = %if.then.104, %if.then.97
  br label %for.end, !dbg !7547

if.end.107:                                       ; preds = %for.body
  br label %for.inc, !dbg !7548

for.inc:                                          ; preds = %if.end.107
  %114 = load i64, i64* %i, align 8, !dbg !7549, !tbaa !2391
  %dec = add i64 %114, -1, !dbg !7549
  store i64 %dec, i64* %i, align 8, !dbg !7549, !tbaa !2391
  br label %for.cond, !dbg !7550

for.end:                                          ; preds = %if.end.106, %for.cond
  br label %if.end.108, !dbg !7551

if.end.108:                                       ; preds = %for.end, %if.else
  %115 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7552, !tbaa !2505
  %data109 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %115, i32 0, i32 5, !dbg !7553
  %116 = load i64*, i64** %data109, align 8, !dbg !7553, !tbaa !2546
  %117 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7554, !tbaa !2505
  %data110 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %117, i32 0, i32 5, !dbg !7555
  %118 = load i64*, i64** %data110, align 8, !dbg !7555, !tbaa !2546
  %119 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !7556, !tbaa !2505
  %data111 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %119, i32 0, i32 5, !dbg !7557
  %120 = load i64*, i64** %data111, align 8, !dbg !7557, !tbaa !2546
  %121 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7558, !tbaa !2505
  %len112 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %121, i32 0, i32 3, !dbg !7559
  %122 = load i64, i64* %len112, align 8, !dbg !7559, !tbaa !2542
  %123 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !7560, !tbaa !2505
  %len113 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %123, i32 0, i32 3, !dbg !7561
  %124 = load i64, i64* %len113, align 8, !dbg !7561, !tbaa !2542
  call void @_mpd_basesub(i64* %116, i64* %118, i64* %120, i64 %122, i64 %124), !dbg !7562
  %125 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7563, !tbaa !2505
  %data114 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %125, i32 0, i32 5, !dbg !7564
  %126 = load i64*, i64** %data114, align 8, !dbg !7564, !tbaa !2546
  %127 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !7565, !tbaa !2505
  %len115 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %127, i32 0, i32 3, !dbg !7566
  %128 = load i64, i64* %len115, align 8, !dbg !7566, !tbaa !2542
  %call116 = call i64 @_mpd_real_size(i64* %126, i64 %128), !dbg !7567
  store i64 %call116, i64* %newsize, align 8, !dbg !7568, !tbaa !2391
  %129 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7569, !tbaa !2505
  %130 = load i64, i64* %newsize, align 8, !dbg !7570, !tbaa !2391
  %131 = load i32*, i32** %status.addr, align 8, !dbg !7571, !tbaa !2505
  %call117 = call i32 @mpd_qresize(%struct.mpd_t* %129, i64 %130, i32* %131), !dbg !7572
  %132 = load i64, i64* %newsize, align 8, !dbg !7573, !tbaa !2391
  %133 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7574, !tbaa !2505
  %len118 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %133, i32 0, i32 3, !dbg !7575
  store i64 %132, i64* %len118, align 8, !dbg !7576, !tbaa !2542
  %134 = load i32, i32* %swap, align 4, !dbg !7577, !tbaa !2554
  %and = and i32 %134, 1, !dbg !7578
  %tobool119 = icmp ne i32 %and, 0, !dbg !7578
  br i1 %tobool119, label %cond.true.120, label %cond.false.122, !dbg !7579

cond.true.120:                                    ; preds = %if.end.108
  %135 = load i8, i8* %sign_b.addr, align 1, !dbg !7580, !tbaa !2930
  %conv121 = zext i8 %135 to i32, !dbg !7580
  br label %cond.end.125, !dbg !7579

cond.false.122:                                   ; preds = %if.end.108
  %136 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7582, !tbaa !2505
  %call123 = call zeroext i8 @mpd_sign(%struct.mpd_t* %136), !dbg !7584
  %conv124 = zext i8 %call123 to i32, !dbg !7584
  br label %cond.end.125, !dbg !7579

cond.end.125:                                     ; preds = %cond.false.122, %cond.true.120
  %cond126 = phi i32 [ %conv121, %cond.true.120 ], [ %conv124, %cond.false.122 ], !dbg !7579
  %conv127 = trunc i32 %cond126 to i8, !dbg !7585
  store i8 %conv127, i8* %sign_b.addr, align 1, !dbg !7588, !tbaa !2930
  %137 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7589, !tbaa !2505
  %138 = load i8, i8* %sign_b.addr, align 1, !dbg !7590, !tbaa !2930
  call void @mpd_set_flags(%struct.mpd_t* %137, i8 zeroext %138), !dbg !7591
  %139 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7592, !tbaa !2505
  %call128 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %139), !dbg !7594
  %tobool129 = icmp ne i32 %call128, 0, !dbg !7594
  br i1 %tobool129, label %if.then.130, label %if.end.135, !dbg !7595

if.then.130:                                      ; preds = %cond.end.125
  %140 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7596, !tbaa !2505
  call void @mpd_set_positive(%struct.mpd_t* %140), !dbg !7598
  %141 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7599, !tbaa !2505
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %141, i32 0, i32 6, !dbg !7601
  %142 = load i32, i32* %round, align 4, !dbg !7601, !tbaa !4148
  %cmp131 = icmp eq i32 %142, 3, !dbg !7602
  br i1 %cmp131, label %if.then.133, label %if.end.134, !dbg !7603

if.then.133:                                      ; preds = %if.then.130
  %143 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7604, !tbaa !2505
  call void @mpd_set_negative(%struct.mpd_t* %143), !dbg !7606
  br label %if.end.134, !dbg !7607

if.end.134:                                       ; preds = %if.then.133, %if.then.130
  br label %if.end.135, !dbg !7608

if.end.135:                                       ; preds = %if.end.134, %cond.end.125
  br label %if.end.136

if.end.136:                                       ; preds = %if.end.135, %if.end.80
  %144 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7609, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %144), !dbg !7610
  br label %finish, !dbg !7610

finish:                                           ; preds = %if.end.136, %if.then.75, %if.then.55, %if.then.39
  call void @mpd_del(%struct.mpd_t* %big_aligned), !dbg !7611
  %145 = bitcast i32* %swap to i8*, !dbg !7612
  call void @llvm.lifetime.end(i64 4, i8* %145) #4, !dbg !7612
  %146 = bitcast i64* %i to i8*, !dbg !7612
  call void @llvm.lifetime.end(i64 8, i8* %146) #4, !dbg !7612
  %147 = bitcast i64* %exp8 to i8*, !dbg !7612
  call void @llvm.lifetime.end(i64 8, i8* %147) #4, !dbg !7612
  %148 = bitcast i64* %shift to i8*, !dbg !7612
  call void @llvm.lifetime.end(i64 8, i8* %148) #4, !dbg !7612
  %149 = bitcast i64* %newsize to i8*, !dbg !7612
  call void @llvm.lifetime.end(i64 8, i8* %149) #4, !dbg !7612
  %150 = bitcast i64* %carry to i8*, !dbg !7612
  call void @llvm.lifetime.end(i64 8, i8* %150) #4, !dbg !7612
  %151 = bitcast %struct.mpd_t* %tiny to i8*, !dbg !7612
  call void @llvm.lifetime.end(i64 48, i8* %151) #4, !dbg !7612
  %152 = bitcast [1 x i64]* %tiny_data to i8*, !dbg !7612
  call void @llvm.lifetime.end(i64 8, i8* %152) #4, !dbg !7612
  %153 = bitcast %struct.mpd_t* %big_aligned to i8*, !dbg !7612
  call void @llvm.lifetime.end(i64 48, i8* %153) #4, !dbg !7612
  %154 = bitcast [64 x i64]* %big_aligned_data to i8*, !dbg !7612
  call void @llvm.lifetime.end(i64 512, i8* %154) #4, !dbg !7612
  %155 = bitcast %struct.mpd_t** %small to i8*, !dbg !7612
  call void @llvm.lifetime.end(i64 8, i8* %155) #4, !dbg !7612
  %156 = bitcast %struct.mpd_t** %big to i8*, !dbg !7612
  call void @llvm.lifetime.end(i64 8, i8* %156) #4, !dbg !7612
  ret void, !dbg !7612
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qsub(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !786, metadata !2395), !dbg !7613
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !787, metadata !2395), !dbg !7614
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !788, metadata !2395), !dbg !7615
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !789, metadata !2395), !dbg !7616
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !790, metadata !2395), !dbg !7617
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7618, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %0), !dbg !7620
  %tobool = icmp ne i32 %call, 0, !dbg !7620
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7621

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7622, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %1), !dbg !7624
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7624
  br i1 %tobool2, label %if.then, label %if.end.8, !dbg !7625

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7626, !tbaa !2505
  %3 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7629, !tbaa !2505
  %4 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7630, !tbaa !2505
  %5 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7631, !tbaa !2505
  %6 = load i32*, i32** %status.addr, align 8, !dbg !7632, !tbaa !2505
  %call3 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %2, %struct.mpd_t* %3, %struct.mpd_t* %4, %struct.mpd_context_t* %5, i32* %6), !dbg !7633
  %tobool4 = icmp ne i32 %call3, 0, !dbg !7633
  br i1 %tobool4, label %if.then.5, label %if.end, !dbg !7634

if.then.5:                                        ; preds = %if.then
  br label %return, !dbg !7635

if.end:                                           ; preds = %if.then
  %7 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7637, !tbaa !2505
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7638, !tbaa !2505
  %9 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7639, !tbaa !2505
  %10 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7640, !tbaa !2505
  %call6 = call zeroext i8 @mpd_sign(%struct.mpd_t* %10), !dbg !7641
  %tobool7 = icmp ne i8 %call6, 0, !dbg !7642
  %lnot = xor i1 %tobool7, true, !dbg !7642
  %lnot.ext = zext i1 %lnot to i32, !dbg !7642
  %conv = trunc i32 %lnot.ext to i8, !dbg !7642
  %11 = load i32*, i32** %status.addr, align 8, !dbg !7643, !tbaa !2505
  call void @_mpd_qaddsub_inf(%struct.mpd_t* %7, %struct.mpd_t* %8, %struct.mpd_t* %9, i8 zeroext %conv, i32* %11), !dbg !7644
  br label %return, !dbg !7645

if.end.8:                                         ; preds = %lor.lhs.false
  %12 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7646, !tbaa !2505
  %13 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7647, !tbaa !2505
  %14 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7648, !tbaa !2505
  %15 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7649, !tbaa !2505
  %call9 = call zeroext i8 @mpd_sign(%struct.mpd_t* %15), !dbg !7650
  %tobool10 = icmp ne i8 %call9, 0, !dbg !7651
  %lnot11 = xor i1 %tobool10, true, !dbg !7651
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !7651
  %conv13 = trunc i32 %lnot.ext12 to i8, !dbg !7651
  %16 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7652, !tbaa !2505
  %17 = load i32*, i32** %status.addr, align 8, !dbg !7653, !tbaa !2505
  call void @_mpd_qaddsub(%struct.mpd_t* %12, %struct.mpd_t* %13, %struct.mpd_t* %14, i8 zeroext %conv13, %struct.mpd_context_t* %16, i32* %17), !dbg !7654
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7655, !tbaa !2505
  %19 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7656, !tbaa !2505
  %20 = load i32*, i32** %status.addr, align 8, !dbg !7657, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %18, %struct.mpd_context_t* %19, i32* %20), !dbg !7658
  br label %return, !dbg !7659

return:                                           ; preds = %if.end.8, %if.end, %if.then.5
  ret void, !dbg !7660
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qadd_ssize(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %maxcontext = alloca %struct.mpd_context_t, align 8
  %bb_data = alloca [64 x i64], align 16
  %bb = alloca %struct.mpd_t, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !793, metadata !2395), !dbg !7662
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !794, metadata !2395), !dbg !7663
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !795, metadata !2395), !dbg !7664
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !796, metadata !2395), !dbg !7665
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !797, metadata !2395), !dbg !7666
  %0 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !7667
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !7667
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxcontext, metadata !798, metadata !2395), !dbg !7668
  %1 = bitcast [64 x i64]* %bb_data to i8*, !dbg !7669
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !7669
  call void @llvm.dbg.declare(metadata [64 x i64]* %bb_data, metadata !799, metadata !2395), !dbg !7670
  %2 = bitcast %struct.mpd_t* %bb to i8*, !dbg !7671
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !7671
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %bb, metadata !800, metadata !2395), !dbg !7672
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 0, !dbg !7673
  store i8 48, i8* %flags, align 1, !dbg !7673, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 1, !dbg !7673
  store i64 0, i64* %exp, align 8, !dbg !7673, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 2, !dbg !7673
  store i64 0, i64* %digits, align 8, !dbg !7673, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 3, !dbg !7673
  store i64 0, i64* %len, align 8, !dbg !7673, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 4, !dbg !7673
  store i64 64, i64* %alloc, align 8, !dbg !7673, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 5, !dbg !7673
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %bb_data, i32 0, i32 0, !dbg !7674
  store i64* %arraydecay, i64** %data, align 8, !dbg !7673, !tbaa !2546
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxcontext), !dbg !7675
  %3 = load i64, i64* %b.addr, align 8, !dbg !7676, !tbaa !2391
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7677, !tbaa !2505
  call void @mpd_qsset_ssize(%struct.mpd_t* %bb, i64 %3, %struct.mpd_context_t* %maxcontext, i32* %4), !dbg !7678
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7679, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7680, !tbaa !2505
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7681, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !7682, !tbaa !2505
  call void @mpd_qadd(%struct.mpd_t* %5, %struct.mpd_t* %6, %struct.mpd_t* %bb, %struct.mpd_context_t* %7, i32* %8), !dbg !7683
  call void @mpd_del(%struct.mpd_t* %bb), !dbg !7684
  %9 = bitcast %struct.mpd_t* %bb to i8*, !dbg !7685
  call void @llvm.lifetime.end(i64 48, i8* %9) #4, !dbg !7685
  %10 = bitcast [64 x i64]* %bb_data to i8*, !dbg !7685
  call void @llvm.lifetime.end(i64 512, i8* %10) #4, !dbg !7685
  %11 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !7685
  call void @llvm.lifetime.end(i64 48, i8* %11) #4, !dbg !7685
  ret void, !dbg !7685
}

declare hidden void @mpd_maxcontext(%struct.mpd_context_t*) #5

; Function Attrs: nounwind uwtable
define hidden void @mpd_qadd_uint(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %maxcontext = alloca %struct.mpd_context_t, align 8
  %bb_data = alloca [64 x i64], align 16
  %bb = alloca %struct.mpd_t, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !805, metadata !2395), !dbg !7686
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !806, metadata !2395), !dbg !7687
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !807, metadata !2395), !dbg !7688
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !808, metadata !2395), !dbg !7689
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !809, metadata !2395), !dbg !7690
  %0 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !7691
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !7691
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxcontext, metadata !810, metadata !2395), !dbg !7692
  %1 = bitcast [64 x i64]* %bb_data to i8*, !dbg !7693
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !7693
  call void @llvm.dbg.declare(metadata [64 x i64]* %bb_data, metadata !811, metadata !2395), !dbg !7694
  %2 = bitcast %struct.mpd_t* %bb to i8*, !dbg !7695
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !7695
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %bb, metadata !812, metadata !2395), !dbg !7696
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 0, !dbg !7697
  store i8 48, i8* %flags, align 1, !dbg !7697, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 1, !dbg !7697
  store i64 0, i64* %exp, align 8, !dbg !7697, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 2, !dbg !7697
  store i64 0, i64* %digits, align 8, !dbg !7697, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 3, !dbg !7697
  store i64 0, i64* %len, align 8, !dbg !7697, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 4, !dbg !7697
  store i64 64, i64* %alloc, align 8, !dbg !7697, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 5, !dbg !7697
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %bb_data, i32 0, i32 0, !dbg !7698
  store i64* %arraydecay, i64** %data, align 8, !dbg !7697, !tbaa !2546
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxcontext), !dbg !7699
  %3 = load i64, i64* %b.addr, align 8, !dbg !7700, !tbaa !2391
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7701, !tbaa !2505
  call void @mpd_qsset_uint(%struct.mpd_t* %bb, i64 %3, %struct.mpd_context_t* %maxcontext, i32* %4), !dbg !7702
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7703, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7704, !tbaa !2505
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7705, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !7706, !tbaa !2505
  call void @mpd_qadd(%struct.mpd_t* %5, %struct.mpd_t* %6, %struct.mpd_t* %bb, %struct.mpd_context_t* %7, i32* %8), !dbg !7707
  call void @mpd_del(%struct.mpd_t* %bb), !dbg !7708
  %9 = bitcast %struct.mpd_t* %bb to i8*, !dbg !7709
  call void @llvm.lifetime.end(i64 48, i8* %9) #4, !dbg !7709
  %10 = bitcast [64 x i64]* %bb_data to i8*, !dbg !7709
  call void @llvm.lifetime.end(i64 512, i8* %10) #4, !dbg !7709
  %11 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !7709
  call void @llvm.lifetime.end(i64 48, i8* %11) #4, !dbg !7709
  ret void, !dbg !7709
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qsub_ssize(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %maxcontext = alloca %struct.mpd_context_t, align 8
  %bb_data = alloca [64 x i64], align 16
  %bb = alloca %struct.mpd_t, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !815, metadata !2395), !dbg !7710
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !816, metadata !2395), !dbg !7711
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !817, metadata !2395), !dbg !7712
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !818, metadata !2395), !dbg !7713
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !819, metadata !2395), !dbg !7714
  %0 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !7715
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !7715
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxcontext, metadata !820, metadata !2395), !dbg !7716
  %1 = bitcast [64 x i64]* %bb_data to i8*, !dbg !7717
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !7717
  call void @llvm.dbg.declare(metadata [64 x i64]* %bb_data, metadata !821, metadata !2395), !dbg !7718
  %2 = bitcast %struct.mpd_t* %bb to i8*, !dbg !7719
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !7719
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %bb, metadata !822, metadata !2395), !dbg !7720
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 0, !dbg !7721
  store i8 48, i8* %flags, align 1, !dbg !7721, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 1, !dbg !7721
  store i64 0, i64* %exp, align 8, !dbg !7721, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 2, !dbg !7721
  store i64 0, i64* %digits, align 8, !dbg !7721, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 3, !dbg !7721
  store i64 0, i64* %len, align 8, !dbg !7721, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 4, !dbg !7721
  store i64 64, i64* %alloc, align 8, !dbg !7721, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 5, !dbg !7721
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %bb_data, i32 0, i32 0, !dbg !7722
  store i64* %arraydecay, i64** %data, align 8, !dbg !7721, !tbaa !2546
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxcontext), !dbg !7723
  %3 = load i64, i64* %b.addr, align 8, !dbg !7724, !tbaa !2391
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7725, !tbaa !2505
  call void @mpd_qsset_ssize(%struct.mpd_t* %bb, i64 %3, %struct.mpd_context_t* %maxcontext, i32* %4), !dbg !7726
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7727, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7728, !tbaa !2505
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7729, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !7730, !tbaa !2505
  call void @mpd_qsub(%struct.mpd_t* %5, %struct.mpd_t* %6, %struct.mpd_t* %bb, %struct.mpd_context_t* %7, i32* %8), !dbg !7731
  call void @mpd_del(%struct.mpd_t* %bb), !dbg !7732
  %9 = bitcast %struct.mpd_t* %bb to i8*, !dbg !7733
  call void @llvm.lifetime.end(i64 48, i8* %9) #4, !dbg !7733
  %10 = bitcast [64 x i64]* %bb_data to i8*, !dbg !7733
  call void @llvm.lifetime.end(i64 512, i8* %10) #4, !dbg !7733
  %11 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !7733
  call void @llvm.lifetime.end(i64 48, i8* %11) #4, !dbg !7733
  ret void, !dbg !7733
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qsub_uint(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %maxcontext = alloca %struct.mpd_context_t, align 8
  %bb_data = alloca [64 x i64], align 16
  %bb = alloca %struct.mpd_t, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !825, metadata !2395), !dbg !7734
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !826, metadata !2395), !dbg !7735
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !827, metadata !2395), !dbg !7736
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !828, metadata !2395), !dbg !7737
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !829, metadata !2395), !dbg !7738
  %0 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !7739
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !7739
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxcontext, metadata !830, metadata !2395), !dbg !7740
  %1 = bitcast [64 x i64]* %bb_data to i8*, !dbg !7741
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !7741
  call void @llvm.dbg.declare(metadata [64 x i64]* %bb_data, metadata !831, metadata !2395), !dbg !7742
  %2 = bitcast %struct.mpd_t* %bb to i8*, !dbg !7743
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !7743
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %bb, metadata !832, metadata !2395), !dbg !7744
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 0, !dbg !7745
  store i8 48, i8* %flags, align 1, !dbg !7745, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 1, !dbg !7745
  store i64 0, i64* %exp, align 8, !dbg !7745, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 2, !dbg !7745
  store i64 0, i64* %digits, align 8, !dbg !7745, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 3, !dbg !7745
  store i64 0, i64* %len, align 8, !dbg !7745, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 4, !dbg !7745
  store i64 64, i64* %alloc, align 8, !dbg !7745, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 5, !dbg !7745
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %bb_data, i32 0, i32 0, !dbg !7746
  store i64* %arraydecay, i64** %data, align 8, !dbg !7745, !tbaa !2546
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxcontext), !dbg !7747
  %3 = load i64, i64* %b.addr, align 8, !dbg !7748, !tbaa !2391
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7749, !tbaa !2505
  call void @mpd_qsset_uint(%struct.mpd_t* %bb, i64 %3, %struct.mpd_context_t* %maxcontext, i32* %4), !dbg !7750
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7751, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7752, !tbaa !2505
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7753, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !7754, !tbaa !2505
  call void @mpd_qsub(%struct.mpd_t* %5, %struct.mpd_t* %6, %struct.mpd_t* %bb, %struct.mpd_context_t* %7, i32* %8), !dbg !7755
  call void @mpd_del(%struct.mpd_t* %bb), !dbg !7756
  %9 = bitcast %struct.mpd_t* %bb to i8*, !dbg !7757
  call void @llvm.lifetime.end(i64 48, i8* %9) #4, !dbg !7757
  %10 = bitcast [64 x i64]* %bb_data to i8*, !dbg !7757
  call void @llvm.lifetime.end(i64 512, i8* %10) #4, !dbg !7757
  %11 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !7757
  call void @llvm.lifetime.end(i64 48, i8* %11) #4, !dbg !7757
  ret void, !dbg !7757
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qadd_i32(%struct.mpd_t* %result, %struct.mpd_t* %a, i32 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !837, metadata !2395), !dbg !7758
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !838, metadata !2395), !dbg !7759
  store i32 %b, i32* %b.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !839, metadata !2395), !dbg !7760
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !840, metadata !2395), !dbg !7761
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !841, metadata !2395), !dbg !7762
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7763, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7764, !tbaa !2505
  %2 = load i32, i32* %b.addr, align 4, !dbg !7765, !tbaa !2554
  %conv = sext i32 %2 to i64, !dbg !7765
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7766, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7767, !tbaa !2505
  call void @mpd_qadd_ssize(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %conv, %struct.mpd_context_t* %3, i32* %4), !dbg !7768
  ret void, !dbg !7769
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qadd_u32(%struct.mpd_t* %result, %struct.mpd_t* %a, i32 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !846, metadata !2395), !dbg !7770
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !847, metadata !2395), !dbg !7771
  store i32 %b, i32* %b.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !848, metadata !2395), !dbg !7772
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !849, metadata !2395), !dbg !7773
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !850, metadata !2395), !dbg !7774
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7775, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7776, !tbaa !2505
  %2 = load i32, i32* %b.addr, align 4, !dbg !7777, !tbaa !2554
  %conv = zext i32 %2 to i64, !dbg !7777
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7778, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7779, !tbaa !2505
  call void @mpd_qadd_uint(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %conv, %struct.mpd_context_t* %3, i32* %4), !dbg !7780
  ret void, !dbg !7781
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qadd_i64(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !855, metadata !2395), !dbg !7782
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !856, metadata !2395), !dbg !7783
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !857, metadata !2395), !dbg !7784
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !858, metadata !2395), !dbg !7785
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !859, metadata !2395), !dbg !7786
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7787, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7788, !tbaa !2505
  %2 = load i64, i64* %b.addr, align 8, !dbg !7789, !tbaa !2391
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7790, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7791, !tbaa !2505
  call void @mpd_qadd_ssize(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %2, %struct.mpd_context_t* %3, i32* %4), !dbg !7792
  ret void, !dbg !7793
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qadd_u64(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !864, metadata !2395), !dbg !7794
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !865, metadata !2395), !dbg !7795
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !866, metadata !2395), !dbg !7796
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !867, metadata !2395), !dbg !7797
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !868, metadata !2395), !dbg !7798
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7799, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7800, !tbaa !2505
  %2 = load i64, i64* %b.addr, align 8, !dbg !7801, !tbaa !2391
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7802, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7803, !tbaa !2505
  call void @mpd_qadd_uint(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %2, %struct.mpd_context_t* %3, i32* %4), !dbg !7804
  ret void, !dbg !7805
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qsub_i32(%struct.mpd_t* %result, %struct.mpd_t* %a, i32 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !871, metadata !2395), !dbg !7806
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !872, metadata !2395), !dbg !7807
  store i32 %b, i32* %b.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !873, metadata !2395), !dbg !7808
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !874, metadata !2395), !dbg !7809
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !875, metadata !2395), !dbg !7810
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7811, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7812, !tbaa !2505
  %2 = load i32, i32* %b.addr, align 4, !dbg !7813, !tbaa !2554
  %conv = sext i32 %2 to i64, !dbg !7813
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7814, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7815, !tbaa !2505
  call void @mpd_qsub_ssize(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %conv, %struct.mpd_context_t* %3, i32* %4), !dbg !7816
  ret void, !dbg !7817
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qsub_u32(%struct.mpd_t* %result, %struct.mpd_t* %a, i32 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !878, metadata !2395), !dbg !7818
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !879, metadata !2395), !dbg !7819
  store i32 %b, i32* %b.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !880, metadata !2395), !dbg !7820
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !881, metadata !2395), !dbg !7821
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !882, metadata !2395), !dbg !7822
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7823, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7824, !tbaa !2505
  %2 = load i32, i32* %b.addr, align 4, !dbg !7825, !tbaa !2554
  %conv = zext i32 %2 to i64, !dbg !7825
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7826, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7827, !tbaa !2505
  call void @mpd_qsub_uint(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %conv, %struct.mpd_context_t* %3, i32* %4), !dbg !7828
  ret void, !dbg !7829
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qsub_i64(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !885, metadata !2395), !dbg !7830
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !886, metadata !2395), !dbg !7831
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !887, metadata !2395), !dbg !7832
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !888, metadata !2395), !dbg !7833
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !889, metadata !2395), !dbg !7834
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7835, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7836, !tbaa !2505
  %2 = load i64, i64* %b.addr, align 8, !dbg !7837, !tbaa !2391
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7838, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7839, !tbaa !2505
  call void @mpd_qsub_ssize(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %2, %struct.mpd_context_t* %3, i32* %4), !dbg !7840
  ret void, !dbg !7841
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qsub_u64(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !892, metadata !2395), !dbg !7842
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !893, metadata !2395), !dbg !7843
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !894, metadata !2395), !dbg !7844
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !895, metadata !2395), !dbg !7845
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !896, metadata !2395), !dbg !7846
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !7847, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7848, !tbaa !2505
  %2 = load i64, i64* %b.addr, align 8, !dbg !7849, !tbaa !2391
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7850, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7851, !tbaa !2505
  call void @mpd_qsub_uint(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %2, %struct.mpd_context_t* %3, i32* %4), !dbg !7852
  ret void, !dbg !7853
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qdiv(%struct.mpd_t* %q, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %q.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %q, %struct.mpd_t** %q.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %q.addr, metadata !899, metadata !2395), !dbg !7854
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !900, metadata !2395), !dbg !7855
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !901, metadata !2395), !dbg !7856
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !902, metadata !2395), !dbg !7857
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !903, metadata !2395), !dbg !7858
  %0 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !7859, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7860, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7861, !tbaa !2505
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7862, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !7863, !tbaa !2505
  call void @_mpd_qdiv(i32 1, %struct.mpd_t* %0, %struct.mpd_t* %1, %struct.mpd_t* %2, %struct.mpd_context_t* %3, i32* %4), !dbg !7864
  ret void, !dbg !7865
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qdiv(i32 %action, %struct.mpd_t* %q, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %action.addr = alloca i32, align 4
  %q.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %aligned_data = alloca [64 x i64], align 16
  %aligned = alloca %struct.mpd_t, align 8
  %ld = alloca i64, align 8
  %shift = alloca i64, align 8
  %exp1 = alloca i64, align 8
  %tz = alloca i64, align 8
  %newsize = alloca i64, align 8
  %ideal_exp = alloca i64, align 8
  %rem = alloca i64, align 8
  %sign_a = alloca i8, align 1
  %sign_b = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  %ret = alloca i32, align 4
  %r_data = alloca [64 x i64], align 16
  %r = alloca %struct.mpd_t, align 8
  store i32 %action, i32* %action.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !1683, metadata !2395), !dbg !7866
  store %struct.mpd_t* %q, %struct.mpd_t** %q.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %q.addr, metadata !1684, metadata !2395), !dbg !7867
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1685, metadata !2395), !dbg !7868
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1686, metadata !2395), !dbg !7869
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1687, metadata !2395), !dbg !7870
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1688, metadata !2395), !dbg !7871
  %0 = bitcast [64 x i64]* %aligned_data to i8*, !dbg !7872
  call void @llvm.lifetime.start(i64 512, i8* %0) #4, !dbg !7872
  call void @llvm.dbg.declare(metadata [64 x i64]* %aligned_data, metadata !1689, metadata !2395), !dbg !7873
  %1 = bitcast %struct.mpd_t* %aligned to i8*, !dbg !7874
  call void @llvm.lifetime.start(i64 48, i8* %1) #4, !dbg !7874
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %aligned, metadata !1690, metadata !2395), !dbg !7875
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aligned, i32 0, i32 0, !dbg !7876
  store i8 48, i8* %flags, align 1, !dbg !7876, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aligned, i32 0, i32 1, !dbg !7876
  store i64 0, i64* %exp, align 8, !dbg !7876, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aligned, i32 0, i32 2, !dbg !7876
  store i64 0, i64* %digits, align 8, !dbg !7876, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aligned, i32 0, i32 3, !dbg !7876
  store i64 0, i64* %len, align 8, !dbg !7876, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aligned, i32 0, i32 4, !dbg !7876
  store i64 64, i64* %alloc, align 8, !dbg !7876, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aligned, i32 0, i32 5, !dbg !7876
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %aligned_data, i32 0, i32 0, !dbg !7877
  store i64* %arraydecay, i64** %data, align 8, !dbg !7876, !tbaa !2546
  %2 = bitcast i64* %ld to i8*, !dbg !7878
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !7878
  call void @llvm.dbg.declare(metadata i64* %ld, metadata !1691, metadata !2395), !dbg !7879
  %3 = bitcast i64* %shift to i8*, !dbg !7880
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !7880
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !1692, metadata !2395), !dbg !7881
  %4 = bitcast i64* %exp1 to i8*, !dbg !7880
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !7880
  call void @llvm.dbg.declare(metadata i64* %exp1, metadata !1693, metadata !2395), !dbg !7882
  %5 = bitcast i64* %tz to i8*, !dbg !7880
  call void @llvm.lifetime.start(i64 8, i8* %5) #4, !dbg !7880
  call void @llvm.dbg.declare(metadata i64* %tz, metadata !1694, metadata !2395), !dbg !7883
  %6 = bitcast i64* %newsize to i8*, !dbg !7884
  call void @llvm.lifetime.start(i64 8, i8* %6) #4, !dbg !7884
  call void @llvm.dbg.declare(metadata i64* %newsize, metadata !1695, metadata !2395), !dbg !7885
  %7 = bitcast i64* %ideal_exp to i8*, !dbg !7886
  call void @llvm.lifetime.start(i64 8, i8* %7) #4, !dbg !7886
  call void @llvm.dbg.declare(metadata i64* %ideal_exp, metadata !1696, metadata !2395), !dbg !7887
  %8 = bitcast i64* %rem to i8*, !dbg !7888
  call void @llvm.lifetime.start(i64 8, i8* %8) #4, !dbg !7888
  call void @llvm.dbg.declare(metadata i64* %rem, metadata !1697, metadata !2395), !dbg !7889
  call void @llvm.lifetime.start(i64 1, i8* %sign_a) #4, !dbg !7890
  call void @llvm.dbg.declare(metadata i8* %sign_a, metadata !1698, metadata !2395), !dbg !7891
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7892, !tbaa !2505
  %call = call zeroext i8 @mpd_sign(%struct.mpd_t* %9), !dbg !7893
  store i8 %call, i8* %sign_a, align 1, !dbg !7891, !tbaa !2930
  call void @llvm.lifetime.start(i64 1, i8* %sign_b) #4, !dbg !7894
  call void @llvm.dbg.declare(metadata i8* %sign_b, metadata !1699, metadata !2395), !dbg !7895
  %10 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7896, !tbaa !2505
  %call2 = call zeroext i8 @mpd_sign(%struct.mpd_t* %10), !dbg !7897
  store i8 %call2, i8* %sign_b, align 1, !dbg !7895, !tbaa !2930
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7898, !tbaa !2505
  %call3 = call i32 @mpd_isspecial(%struct.mpd_t* %11), !dbg !7900
  %tobool = icmp ne i32 %call3, 0, !dbg !7900
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7901

lor.lhs.false:                                    ; preds = %entry
  %12 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7902, !tbaa !2505
  %call4 = call i32 @mpd_isspecial(%struct.mpd_t* %12), !dbg !7904
  %tobool5 = icmp ne i32 %call4, 0, !dbg !7904
  br i1 %tobool5, label %if.then, label %if.end.9, !dbg !7905

if.then:                                          ; preds = %lor.lhs.false, %entry
  %13 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !7906, !tbaa !2505
  %14 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7909, !tbaa !2505
  %15 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7910, !tbaa !2505
  %16 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7911, !tbaa !2505
  %17 = load i32*, i32** %status.addr, align 8, !dbg !7912, !tbaa !2505
  %call6 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %13, %struct.mpd_t* %14, %struct.mpd_t* %15, %struct.mpd_context_t* %16, i32* %17), !dbg !7913
  %tobool7 = icmp ne i32 %call6, 0, !dbg !7913
  br i1 %tobool7, label %if.then.8, label %if.end, !dbg !7914

if.then.8:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.165, !dbg !7915

if.end:                                           ; preds = %if.then
  %18 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !7917, !tbaa !2505
  %19 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7918, !tbaa !2505
  %20 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7919, !tbaa !2505
  %21 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7920, !tbaa !2505
  %22 = load i32*, i32** %status.addr, align 8, !dbg !7921, !tbaa !2505
  call void @_mpd_qdiv_inf(%struct.mpd_t* %18, %struct.mpd_t* %19, %struct.mpd_t* %20, %struct.mpd_context_t* %21, i32* %22), !dbg !7922
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.165, !dbg !7923

if.end.9:                                         ; preds = %lor.lhs.false
  %23 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7924, !tbaa !2505
  %call10 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %23), !dbg !7926
  %tobool11 = icmp ne i32 %call10, 0, !dbg !7926
  br i1 %tobool11, label %if.then.12, label %if.end.19, !dbg !7927

if.then.12:                                       ; preds = %if.end.9
  %24 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7928, !tbaa !2505
  %call13 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %24), !dbg !7931
  %tobool14 = icmp ne i32 %call13, 0, !dbg !7931
  br i1 %tobool14, label %if.then.15, label %if.else, !dbg !7932

if.then.15:                                       ; preds = %if.then.12
  %25 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !7933, !tbaa !2505
  %26 = load i32*, i32** %status.addr, align 8, !dbg !7935, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %25, i32 16, i32* %26), !dbg !7936
  br label %if.end.18, !dbg !7937

if.else:                                          ; preds = %if.then.12
  %27 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !7938, !tbaa !2505
  %28 = load i8, i8* %sign_a, align 1, !dbg !7940, !tbaa !2930
  %conv = zext i8 %28 to i32, !dbg !7940
  %29 = load i8, i8* %sign_b, align 1, !dbg !7941, !tbaa !2930
  %conv16 = zext i8 %29 to i32, !dbg !7941
  %xor = xor i32 %conv, %conv16, !dbg !7942
  %conv17 = trunc i32 %xor to i8, !dbg !7940
  call void @mpd_setspecial(%struct.mpd_t* %27, i8 zeroext %conv17, i8 zeroext 2), !dbg !7943
  %30 = load i32*, i32** %status.addr, align 8, !dbg !7944, !tbaa !2505
  %31 = load i32, i32* %30, align 4, !dbg !7945, !tbaa !2554
  %or = or i32 %31, 4, !dbg !7945
  store i32 %or, i32* %30, align 4, !dbg !7945, !tbaa !2554
  br label %if.end.18

if.end.18:                                        ; preds = %if.else, %if.then.15
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.165, !dbg !7946

if.end.19:                                        ; preds = %if.end.9
  %32 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7947, !tbaa !2505
  %call20 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %32), !dbg !7949
  %tobool21 = icmp ne i32 %call20, 0, !dbg !7949
  br i1 %tobool21, label %if.then.22, label %if.end.29, !dbg !7950

if.then.22:                                       ; preds = %if.end.19
  %33 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7951, !tbaa !2505
  %exp23 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %33, i32 0, i32 1, !dbg !7953
  %34 = load i64, i64* %exp23, align 8, !dbg !7953, !tbaa !2510
  %35 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7954, !tbaa !2505
  %exp24 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %35, i32 0, i32 1, !dbg !7955
  %36 = load i64, i64* %exp24, align 8, !dbg !7955, !tbaa !2510
  %sub = sub i64 %34, %36, !dbg !7956
  store i64 %sub, i64* %exp1, align 8, !dbg !7957, !tbaa !2391
  %37 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !7958, !tbaa !2505
  %38 = load i8, i8* %sign_a, align 1, !dbg !7959, !tbaa !2930
  %conv25 = zext i8 %38 to i32, !dbg !7959
  %39 = load i8, i8* %sign_b, align 1, !dbg !7960, !tbaa !2930
  %conv26 = zext i8 %39 to i32, !dbg !7960
  %xor27 = xor i32 %conv25, %conv26, !dbg !7961
  %conv28 = trunc i32 %xor27 to i8, !dbg !7959
  %40 = load i64, i64* %exp1, align 8, !dbg !7962, !tbaa !2391
  call void @_settriple(%struct.mpd_t* %37, i8 zeroext %conv28, i64 0, i64 %40), !dbg !7963
  %41 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !7964, !tbaa !2505
  %42 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7965, !tbaa !2505
  %43 = load i32*, i32** %status.addr, align 8, !dbg !7966, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %41, %struct.mpd_context_t* %42, i32* %43), !dbg !7967
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.165, !dbg !7968

if.end.29:                                        ; preds = %if.end.19
  %44 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7969, !tbaa !2505
  %digits30 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %44, i32 0, i32 2, !dbg !7970
  %45 = load i64, i64* %digits30, align 8, !dbg !7970, !tbaa !2514
  %46 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7971, !tbaa !2505
  %digits31 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %46, i32 0, i32 2, !dbg !7972
  %47 = load i64, i64* %digits31, align 8, !dbg !7972, !tbaa !2514
  %sub32 = sub i64 %45, %47, !dbg !7973
  %48 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !7974, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %48, i32 0, i32 0, !dbg !7975
  %49 = load i64, i64* %prec, align 8, !dbg !7975, !tbaa !2526
  %add = add i64 %sub32, %49, !dbg !7976
  %add33 = add i64 %add, 1, !dbg !7977
  store i64 %add33, i64* %shift, align 8, !dbg !7978, !tbaa !2391
  %50 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7979, !tbaa !2505
  %exp34 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %50, i32 0, i32 1, !dbg !7980
  %51 = load i64, i64* %exp34, align 8, !dbg !7980, !tbaa !2510
  %52 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !7981, !tbaa !2505
  %exp35 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %52, i32 0, i32 1, !dbg !7982
  %53 = load i64, i64* %exp35, align 8, !dbg !7982, !tbaa !2510
  %sub36 = sub i64 %51, %53, !dbg !7983
  store i64 %sub36, i64* %ideal_exp, align 8, !dbg !7984, !tbaa !2391
  %54 = load i64, i64* %ideal_exp, align 8, !dbg !7985, !tbaa !2391
  %55 = load i64, i64* %shift, align 8, !dbg !7986, !tbaa !2391
  %sub37 = sub i64 %54, %55, !dbg !7987
  store i64 %sub37, i64* %exp1, align 8, !dbg !7988, !tbaa !2391
  %56 = load i64, i64* %shift, align 8, !dbg !7989, !tbaa !2391
  %cmp = icmp sgt i64 %56, 0, !dbg !7991
  br i1 %cmp, label %if.then.39, label %if.else.44, !dbg !7992

if.then.39:                                       ; preds = %if.end.29
  %57 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !7993, !tbaa !2505
  %58 = load i64, i64* %shift, align 8, !dbg !7996, !tbaa !2391
  %59 = load i32*, i32** %status.addr, align 8, !dbg !7997, !tbaa !2505
  %call40 = call i32 @mpd_qshiftl(%struct.mpd_t* %aligned, %struct.mpd_t* %57, i64 %58, i32* %59), !dbg !7998
  %tobool41 = icmp ne i32 %call40, 0, !dbg !7998
  br i1 %tobool41, label %if.end.43, label %if.then.42, !dbg !7999

if.then.42:                                       ; preds = %if.then.39
  %60 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8000, !tbaa !2505
  %61 = load i32*, i32** %status.addr, align 8, !dbg !8002, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %60, i32 512, i32* %61), !dbg !8003
  br label %finish, !dbg !8004

if.end.43:                                        ; preds = %if.then.39
  store %struct.mpd_t* %aligned, %struct.mpd_t** %a.addr, align 8, !dbg !8005, !tbaa !2505
  br label %if.end.54, !dbg !8006

if.else.44:                                       ; preds = %if.end.29
  %62 = load i64, i64* %shift, align 8, !dbg !8007, !tbaa !2391
  %cmp45 = icmp slt i64 %62, 0, !dbg !8009
  br i1 %cmp45, label %if.then.47, label %if.end.53, !dbg !8010

if.then.47:                                       ; preds = %if.else.44
  %63 = load i64, i64* %shift, align 8, !dbg !8011, !tbaa !2391
  %sub48 = sub i64 0, %63, !dbg !8013
  store i64 %sub48, i64* %shift, align 8, !dbg !8014, !tbaa !2391
  %64 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8015, !tbaa !2505
  %65 = load i64, i64* %shift, align 8, !dbg !8017, !tbaa !2391
  %66 = load i32*, i32** %status.addr, align 8, !dbg !8018, !tbaa !2505
  %call49 = call i32 @mpd_qshiftl(%struct.mpd_t* %aligned, %struct.mpd_t* %64, i64 %65, i32* %66), !dbg !8019
  %tobool50 = icmp ne i32 %call49, 0, !dbg !8019
  br i1 %tobool50, label %if.end.52, label %if.then.51, !dbg !8020

if.then.51:                                       ; preds = %if.then.47
  %67 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8021, !tbaa !2505
  %68 = load i32*, i32** %status.addr, align 8, !dbg !8023, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %67, i32 512, i32* %68), !dbg !8024
  br label %finish, !dbg !8025

if.end.52:                                        ; preds = %if.then.47
  store %struct.mpd_t* %aligned, %struct.mpd_t** %b.addr, align 8, !dbg !8026, !tbaa !2505
  br label %if.end.53, !dbg !8027

if.end.53:                                        ; preds = %if.end.52, %if.else.44
  br label %if.end.54

if.end.54:                                        ; preds = %if.end.53, %if.end.43
  %69 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8028, !tbaa !2505
  %len55 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %69, i32 0, i32 3, !dbg !8029
  %70 = load i64, i64* %len55, align 8, !dbg !8029, !tbaa !2542
  %71 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8030, !tbaa !2505
  %len56 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %71, i32 0, i32 3, !dbg !8031
  %72 = load i64, i64* %len56, align 8, !dbg !8031, !tbaa !2542
  %sub57 = sub i64 %70, %72, !dbg !8032
  %add58 = add i64 %sub57, 1, !dbg !8033
  store i64 %add58, i64* %newsize, align 8, !dbg !8034, !tbaa !2391
  %73 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8035, !tbaa !2505
  %74 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8037, !tbaa !2505
  %cmp59 = icmp ne %struct.mpd_t* %73, %74, !dbg !8038
  br i1 %cmp59, label %land.lhs.true, label %lor.lhs.false.63, !dbg !8039

land.lhs.true:                                    ; preds = %if.end.54
  %75 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8040, !tbaa !2505
  %76 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8042, !tbaa !2505
  %cmp61 = icmp ne %struct.mpd_t* %75, %76, !dbg !8043
  br i1 %cmp61, label %if.then.70, label %lor.lhs.false.63, !dbg !8044

lor.lhs.false.63:                                 ; preds = %land.lhs.true, %if.end.54
  %77 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8045, !tbaa !2505
  %78 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8048, !tbaa !2505
  %cmp64 = icmp eq %struct.mpd_t* %77, %78, !dbg !8049
  br i1 %cmp64, label %land.lhs.true.66, label %if.end.75, !dbg !8050

land.lhs.true.66:                                 ; preds = %lor.lhs.false.63
  %79 = load i64, i64* %newsize, align 8, !dbg !8051, !tbaa !2391
  %80 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8053, !tbaa !2505
  %len67 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %80, i32 0, i32 3, !dbg !8054
  %81 = load i64, i64* %len67, align 8, !dbg !8054, !tbaa !2542
  %cmp68 = icmp sgt i64 %79, %81, !dbg !8055
  br i1 %cmp68, label %if.then.70, label %if.end.75, !dbg !8056

if.then.70:                                       ; preds = %land.lhs.true.66, %land.lhs.true
  %82 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8057, !tbaa !2505
  %83 = load i64, i64* %newsize, align 8, !dbg !8060, !tbaa !2391
  %84 = load i32*, i32** %status.addr, align 8, !dbg !8061, !tbaa !2505
  %call71 = call i32 @mpd_qresize(%struct.mpd_t* %82, i64 %83, i32* %84), !dbg !8062
  %tobool72 = icmp ne i32 %call71, 0, !dbg !8062
  br i1 %tobool72, label %if.end.74, label %if.then.73, !dbg !8063

if.then.73:                                       ; preds = %if.then.70
  %85 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8064, !tbaa !2505
  %86 = load i32*, i32** %status.addr, align 8, !dbg !8066, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %85, i32 512, i32* %86), !dbg !8067
  br label %finish, !dbg !8068

if.end.74:                                        ; preds = %if.then.70
  br label %if.end.75, !dbg !8069

if.end.75:                                        ; preds = %if.end.74, %land.lhs.true.66, %lor.lhs.false.63
  %87 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8070, !tbaa !2505
  %len76 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %87, i32 0, i32 3, !dbg !8071
  %88 = load i64, i64* %len76, align 8, !dbg !8071, !tbaa !2542
  %cmp77 = icmp eq i64 %88, 1, !dbg !8072
  br i1 %cmp77, label %if.then.79, label %if.else.85, !dbg !8073

if.then.79:                                       ; preds = %if.end.75
  %89 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8074, !tbaa !2505
  %data80 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %89, i32 0, i32 5, !dbg !8076
  %90 = load i64*, i64** %data80, align 8, !dbg !8076, !tbaa !2546
  %91 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8077, !tbaa !2505
  %data81 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %91, i32 0, i32 5, !dbg !8078
  %92 = load i64*, i64** %data81, align 8, !dbg !8078, !tbaa !2546
  %93 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8079, !tbaa !2505
  %len82 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %93, i32 0, i32 3, !dbg !8080
  %94 = load i64, i64* %len82, align 8, !dbg !8080, !tbaa !2542
  %95 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8081, !tbaa !2505
  %data83 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %95, i32 0, i32 5, !dbg !8082
  %96 = load i64*, i64** %data83, align 8, !dbg !8082, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %96, i64 0, !dbg !8081
  %97 = load i64, i64* %arrayidx, align 8, !dbg !8081, !tbaa !2391
  %call84 = call i64 @_mpd_shortdiv(i64* %90, i64* %92, i64 %94, i64 %97), !dbg !8083
  store i64 %call84, i64* %rem, align 8, !dbg !8084, !tbaa !2391
  br label %if.end.125, !dbg !8085

if.else.85:                                       ; preds = %if.end.75
  %98 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8086, !tbaa !2505
  %len86 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %98, i32 0, i32 3, !dbg !8087
  %99 = load i64, i64* %len86, align 8, !dbg !8087, !tbaa !2542
  %cmp87 = icmp sle i64 %99, 1024, !dbg !8088
  br i1 %cmp87, label %if.then.89, label %if.else.101, !dbg !8089

if.then.89:                                       ; preds = %if.else.85
  %100 = bitcast i32* %ret to i8*, !dbg !8090
  call void @llvm.lifetime.start(i64 4, i8* %100) #4, !dbg !8090
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1700, metadata !2395), !dbg !8091
  %101 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8092, !tbaa !2505
  %data90 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %101, i32 0, i32 5, !dbg !8093
  %102 = load i64*, i64** %data90, align 8, !dbg !8093, !tbaa !2546
  %103 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8094, !tbaa !2505
  %data91 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %103, i32 0, i32 5, !dbg !8095
  %104 = load i64*, i64** %data91, align 8, !dbg !8095, !tbaa !2546
  %105 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8096, !tbaa !2505
  %data92 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %105, i32 0, i32 5, !dbg !8097
  %106 = load i64*, i64** %data92, align 8, !dbg !8097, !tbaa !2546
  %107 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8098, !tbaa !2505
  %len93 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %107, i32 0, i32 3, !dbg !8099
  %108 = load i64, i64* %len93, align 8, !dbg !8099, !tbaa !2542
  %109 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8100, !tbaa !2505
  %len94 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %109, i32 0, i32 3, !dbg !8101
  %110 = load i64, i64* %len94, align 8, !dbg !8101, !tbaa !2542
  %call95 = call i32 @_mpd_basedivmod(i64* %102, i64* null, i64* %104, i64* %106, i64 %108, i64 %110), !dbg !8102
  store i32 %call95, i32* %ret, align 4, !dbg !8091, !tbaa !2554
  %111 = load i32, i32* %ret, align 4, !dbg !8103, !tbaa !2554
  %cmp96 = icmp slt i32 %111, 0, !dbg !8105
  br i1 %cmp96, label %if.then.98, label %if.end.99, !dbg !8106

if.then.98:                                       ; preds = %if.then.89
  %112 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8107, !tbaa !2505
  %113 = load i32*, i32** %status.addr, align 8, !dbg !8109, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %112, i32 512, i32* %113), !dbg !8110
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8111

if.end.99:                                        ; preds = %if.then.89
  %114 = load i32, i32* %ret, align 4, !dbg !8112, !tbaa !2554
  %conv100 = sext i32 %114 to i64, !dbg !8112
  store i64 %conv100, i64* %rem, align 8, !dbg !8113, !tbaa !2391
  store i32 0, i32* %cleanup.dest.slot, !dbg !8114
  br label %cleanup, !dbg !8114

cleanup:                                          ; preds = %if.end.99, %if.then.98
  %115 = bitcast i32* %ret to i8*, !dbg !8115
  call void @llvm.lifetime.end(i64 4, i8* %115) #4, !dbg !8115
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf2, label %finish, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.124, !dbg !8117

if.else.101:                                      ; preds = %if.else.85
  %116 = bitcast [64 x i64]* %r_data to i8*, !dbg !8118
  call void @llvm.lifetime.start(i64 512, i8* %116) #4, !dbg !8118
  call void @llvm.dbg.declare(metadata [64 x i64]* %r_data, metadata !1704, metadata !2395), !dbg !8119
  %117 = bitcast %struct.mpd_t* %r to i8*, !dbg !8120
  call void @llvm.lifetime.start(i64 48, i8* %117) #4, !dbg !8120
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %r, metadata !1706, metadata !2395), !dbg !8121
  %flags102 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 0, !dbg !8122
  store i8 48, i8* %flags102, align 1, !dbg !8122, !tbaa !2620
  %exp103 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 1, !dbg !8122
  store i64 0, i64* %exp103, align 8, !dbg !8122, !tbaa !2510
  %digits104 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 2, !dbg !8122
  store i64 0, i64* %digits104, align 8, !dbg !8122, !tbaa !2514
  %len105 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 3, !dbg !8122
  store i64 0, i64* %len105, align 8, !dbg !8122, !tbaa !2542
  %alloc106 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 4, !dbg !8122
  store i64 64, i64* %alloc106, align 8, !dbg !8122, !tbaa !2835
  %data107 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 5, !dbg !8122
  %arraydecay108 = getelementptr inbounds [64 x i64], [64 x i64]* %r_data, i32 0, i32 0, !dbg !8123
  store i64* %arraydecay108, i64** %data107, align 8, !dbg !8122, !tbaa !2546
  %118 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8124, !tbaa !2505
  %119 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8125, !tbaa !2505
  %120 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8126, !tbaa !2505
  %121 = load i32*, i32** %status.addr, align 8, !dbg !8127, !tbaa !2505
  call void @_mpd_base_ndivmod(%struct.mpd_t* %118, %struct.mpd_t* %r, %struct.mpd_t* %119, %struct.mpd_t* %120, i32* %121), !dbg !8128
  %122 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8129, !tbaa !2505
  %call109 = call i32 @mpd_isspecial(%struct.mpd_t* %122), !dbg !8131
  %tobool110 = icmp ne i32 %call109, 0, !dbg !8131
  br i1 %tobool110, label %if.then.114, label %lor.lhs.false.111, !dbg !8132

lor.lhs.false.111:                                ; preds = %if.else.101
  %call112 = call i32 @mpd_isspecial(%struct.mpd_t* %r), !dbg !8133
  %tobool113 = icmp ne i32 %call112, 0, !dbg !8133
  br i1 %tobool113, label %if.then.114, label %if.end.115, !dbg !8135

if.then.114:                                      ; preds = %lor.lhs.false.111, %if.else.101
  %123 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8136, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %123, i8 zeroext 0, i8 zeroext 4), !dbg !8138
  call void @mpd_del(%struct.mpd_t* %r), !dbg !8139
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.120, !dbg !8140

if.end.115:                                       ; preds = %lor.lhs.false.111
  %call116 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %r), !dbg !8141
  %tobool117 = icmp ne i32 %call116, 0, !dbg !8142
  %lnot = xor i1 %tobool117, true, !dbg !8142
  %lnot.ext = zext i1 %lnot to i32, !dbg !8142
  %conv118 = sext i32 %lnot.ext to i64, !dbg !8142
  store i64 %conv118, i64* %rem, align 8, !dbg !8143, !tbaa !2391
  call void @mpd_del(%struct.mpd_t* %r), !dbg !8144
  %124 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8145, !tbaa !2505
  %len119 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %124, i32 0, i32 3, !dbg !8146
  %125 = load i64, i64* %len119, align 8, !dbg !8146, !tbaa !2542
  store i64 %125, i64* %newsize, align 8, !dbg !8147, !tbaa !2391
  store i32 0, i32* %cleanup.dest.slot, !dbg !8148
  br label %cleanup.120, !dbg !8148

cleanup.120:                                      ; preds = %if.end.115, %if.then.114
  %126 = bitcast %struct.mpd_t* %r to i8*, !dbg !8149
  call void @llvm.lifetime.end(i64 48, i8* %126) #4, !dbg !8149
  %127 = bitcast [64 x i64]* %r_data to i8*, !dbg !8149
  call void @llvm.lifetime.end(i64 512, i8* %127) #4, !dbg !8149
  %cleanup.dest.122 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.8

NodeBlock.8:                                      ; preds = %cleanup.120
  %Pivot.9 = icmp slt i32 %cleanup.dest.122, 2
  br i1 %Pivot.9, label %LeafBlock.4, label %LeafBlock.6

LeafBlock.6:                                      ; preds = %NodeBlock.8
  %SwitchLeaf7 = icmp eq i32 %cleanup.dest.122, 2
  br i1 %SwitchLeaf7, label %finish, label %NewDefault.3

LeafBlock.4:                                      ; preds = %NodeBlock.8
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest.122, 0
  br i1 %SwitchLeaf5, label %cleanup.cont.123, label %NewDefault.3

cleanup.cont.123:                                 ; preds = %LeafBlock.4
  br label %if.end.124

if.end.124:                                       ; preds = %cleanup.cont.123, %cleanup.cont
  br label %if.end.125

if.end.125:                                       ; preds = %if.end.124, %if.then.79
  %128 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8150, !tbaa !2505
  %data126 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %128, i32 0, i32 5, !dbg !8151
  %129 = load i64*, i64** %data126, align 8, !dbg !8151, !tbaa !2546
  %130 = load i64, i64* %newsize, align 8, !dbg !8152, !tbaa !2391
  %call127 = call i64 @_mpd_real_size(i64* %129, i64 %130), !dbg !8153
  store i64 %call127, i64* %newsize, align 8, !dbg !8154, !tbaa !2391
  %131 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8155, !tbaa !2505
  %132 = load i64, i64* %newsize, align 8, !dbg !8156, !tbaa !2391
  %133 = load i32*, i32** %status.addr, align 8, !dbg !8157, !tbaa !2505
  %call128 = call i32 @mpd_qresize(%struct.mpd_t* %131, i64 %132, i32* %133), !dbg !8158
  %134 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8159, !tbaa !2505
  %135 = load i8, i8* %sign_a, align 1, !dbg !8160, !tbaa !2930
  %conv129 = zext i8 %135 to i32, !dbg !8160
  %136 = load i8, i8* %sign_b, align 1, !dbg !8161, !tbaa !2930
  %conv130 = zext i8 %136 to i32, !dbg !8161
  %xor131 = xor i32 %conv129, %conv130, !dbg !8162
  %conv132 = trunc i32 %xor131 to i8, !dbg !8160
  call void @mpd_set_flags(%struct.mpd_t* %134, i8 zeroext %conv132), !dbg !8163
  %137 = load i64, i64* %newsize, align 8, !dbg !8164, !tbaa !2391
  %138 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8165, !tbaa !2505
  %len133 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %138, i32 0, i32 3, !dbg !8166
  store i64 %137, i64* %len133, align 8, !dbg !8167, !tbaa !2542
  %139 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8168, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %139), !dbg !8169
  %140 = load i64, i64* %ideal_exp, align 8, !dbg !8170, !tbaa !2391
  %141 = load i64, i64* %exp1, align 8, !dbg !8171, !tbaa !2391
  %sub134 = sub i64 %140, %141, !dbg !8172
  store i64 %sub134, i64* %shift, align 8, !dbg !8173, !tbaa !2391
  %142 = load i64, i64* %rem, align 8, !dbg !8174, !tbaa !2391
  %tobool135 = icmp ne i64 %142, 0, !dbg !8174
  br i1 %tobool135, label %if.then.136, label %if.else.150, !dbg !8176

if.then.136:                                      ; preds = %if.end.125
  %143 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8177, !tbaa !2505
  %data137 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %143, i32 0, i32 5, !dbg !8179
  %144 = load i64*, i64** %data137, align 8, !dbg !8179, !tbaa !2546
  %arrayidx138 = getelementptr i64, i64* %144, i64 0, !dbg !8177
  %145 = load i64, i64* %arrayidx138, align 8, !dbg !8177, !tbaa !2391
  %call139 = call i64 @mpd_lsd(i64 %145), !dbg !8180
  store i64 %call139, i64* %ld, align 8, !dbg !8181, !tbaa !2391
  %146 = load i64, i64* %ld, align 8, !dbg !8182, !tbaa !2391
  %cmp140 = icmp eq i64 %146, 0, !dbg !8184
  br i1 %cmp140, label %if.then.145, label %lor.lhs.false.142, !dbg !8185

lor.lhs.false.142:                                ; preds = %if.then.136
  %147 = load i64, i64* %ld, align 8, !dbg !8186, !tbaa !2391
  %cmp143 = icmp eq i64 %147, 5, !dbg !8188
  br i1 %cmp143, label %if.then.145, label %if.end.149, !dbg !8189

if.then.145:                                      ; preds = %lor.lhs.false.142, %if.then.136
  %148 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8190, !tbaa !2505
  %data146 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %148, i32 0, i32 5, !dbg !8192
  %149 = load i64*, i64** %data146, align 8, !dbg !8192, !tbaa !2546
  %arrayidx147 = getelementptr i64, i64* %149, i64 0, !dbg !8190
  %150 = load i64, i64* %arrayidx147, align 8, !dbg !8193, !tbaa !2391
  %add148 = add i64 %150, 1, !dbg !8193
  store i64 %add148, i64* %arrayidx147, align 8, !dbg !8193, !tbaa !2391
  br label %if.end.149, !dbg !8194

if.end.149:                                       ; preds = %if.then.145, %lor.lhs.false.142
  br label %if.end.163, !dbg !8195

if.else.150:                                      ; preds = %if.end.125
  %151 = load i32, i32* %action.addr, align 4, !dbg !8196, !tbaa !2554
  %cmp151 = icmp eq i32 %151, 1, !dbg !8198
  br i1 %cmp151, label %land.lhs.true.153, label %if.end.162, !dbg !8199

land.lhs.true.153:                                ; preds = %if.else.150
  %152 = load i64, i64* %shift, align 8, !dbg !8200, !tbaa !2391
  %cmp154 = icmp sgt i64 %152, 0, !dbg !8202
  br i1 %cmp154, label %if.then.156, label %if.end.162, !dbg !8203

if.then.156:                                      ; preds = %land.lhs.true.153
  %153 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8204, !tbaa !2505
  %call157 = call i64 @mpd_trail_zeros(%struct.mpd_t* %153), !dbg !8206
  store i64 %call157, i64* %tz, align 8, !dbg !8207, !tbaa !2391
  %154 = load i64, i64* %tz, align 8, !dbg !8208, !tbaa !2391
  %155 = load i64, i64* %shift, align 8, !dbg !8209, !tbaa !2391
  %cmp158 = icmp sgt i64 %154, %155, !dbg !8210
  br i1 %cmp158, label %cond.true, label %cond.false, !dbg !8211

cond.true:                                        ; preds = %if.then.156
  %156 = load i64, i64* %shift, align 8, !dbg !8212, !tbaa !2391
  br label %cond.end, !dbg !8211

cond.false:                                       ; preds = %if.then.156
  %157 = load i64, i64* %tz, align 8, !dbg !8214, !tbaa !2391
  br label %cond.end, !dbg !8211

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %156, %cond.true ], [ %157, %cond.false ], !dbg !8211
  store i64 %cond, i64* %shift, align 8, !dbg !8216, !tbaa !2391
  %158 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8219, !tbaa !2505
  %159 = load i64, i64* %shift, align 8, !dbg !8220, !tbaa !2391
  %call160 = call i64 @mpd_qshiftr_inplace(%struct.mpd_t* %158, i64 %159), !dbg !8221
  %160 = load i64, i64* %shift, align 8, !dbg !8222, !tbaa !2391
  %161 = load i64, i64* %exp1, align 8, !dbg !8223, !tbaa !2391
  %add161 = add i64 %161, %160, !dbg !8223
  store i64 %add161, i64* %exp1, align 8, !dbg !8223, !tbaa !2391
  br label %if.end.162, !dbg !8224

if.end.162:                                       ; preds = %cond.end, %land.lhs.true.153, %if.else.150
  br label %if.end.163

if.end.163:                                       ; preds = %if.end.162, %if.end.149
  %162 = load i64, i64* %exp1, align 8, !dbg !8225, !tbaa !2391
  %163 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8226, !tbaa !2505
  %exp164 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %163, i32 0, i32 1, !dbg !8227
  store i64 %162, i64* %exp164, align 8, !dbg !8228, !tbaa !2510
  br label %finish, !dbg !8226

finish:                                           ; preds = %LeafBlock.6, %LeafBlock.1, %if.end.163, %if.then.73, %if.then.51, %if.then.42
  call void @mpd_del(%struct.mpd_t* %aligned), !dbg !8229
  %164 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8230, !tbaa !2505
  %165 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8231, !tbaa !2505
  %166 = load i32*, i32** %status.addr, align 8, !dbg !8232, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %164, %struct.mpd_context_t* %165, i32* %166), !dbg !8233
  store i32 0, i32* %cleanup.dest.slot, !dbg !8234
  br label %cleanup.165, !dbg !8234

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.165

NewDefault.3:                                     ; preds = %LeafBlock.6, %LeafBlock.4
  br label %cleanup.165

cleanup.165:                                      ; preds = %NewDefault.3, %NewDefault, %finish, %if.then.22, %if.end.18, %if.end, %if.then.8
  call void @llvm.lifetime.end(i64 1, i8* %sign_b) #4, !dbg !8234
  call void @llvm.lifetime.end(i64 1, i8* %sign_a) #4, !dbg !8234
  %167 = bitcast i64* %rem to i8*, !dbg !8235
  call void @llvm.lifetime.end(i64 8, i8* %167) #4, !dbg !8235
  %168 = bitcast i64* %ideal_exp to i8*, !dbg !8235
  call void @llvm.lifetime.end(i64 8, i8* %168) #4, !dbg !8235
  %169 = bitcast i64* %newsize to i8*, !dbg !8235
  call void @llvm.lifetime.end(i64 8, i8* %169) #4, !dbg !8235
  %170 = bitcast i64* %tz to i8*, !dbg !8235
  call void @llvm.lifetime.end(i64 8, i8* %170) #4, !dbg !8235
  %171 = bitcast i64* %exp1 to i8*, !dbg !8235
  call void @llvm.lifetime.end(i64 8, i8* %171) #4, !dbg !8235
  %172 = bitcast i64* %shift to i8*, !dbg !8235
  call void @llvm.lifetime.end(i64 8, i8* %172) #4, !dbg !8235
  %173 = bitcast i64* %ld to i8*, !dbg !8235
  call void @llvm.lifetime.end(i64 8, i8* %173) #4, !dbg !8235
  %174 = bitcast %struct.mpd_t* %aligned to i8*, !dbg !8235
  call void @llvm.lifetime.end(i64 48, i8* %174) #4, !dbg !8235
  %175 = bitcast [64 x i64]* %aligned_data to i8*, !dbg !8235
  call void @llvm.lifetime.end(i64 512, i8* %175) #4, !dbg !8235
  %cleanup.dest.176 = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont.177

cleanup.cont.177:                                 ; preds = %cleanup.165
  ret void, !dbg !8234

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qdivmod(%struct.mpd_t* %q, %struct.mpd_t* %r, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %q.addr = alloca %struct.mpd_t*, align 8
  %r.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %sign = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %q, %struct.mpd_t** %q.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %q.addr, metadata !908, metadata !2395), !dbg !8237
  store %struct.mpd_t* %r, %struct.mpd_t** %r.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %r.addr, metadata !909, metadata !2395), !dbg !8238
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !910, metadata !2395), !dbg !8239
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !911, metadata !2395), !dbg !8240
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !912, metadata !2395), !dbg !8241
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !913, metadata !2395), !dbg !8242
  call void @llvm.lifetime.start(i64 1, i8* %sign) #4, !dbg !8243
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !914, metadata !2395), !dbg !8244
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8245, !tbaa !2505
  %call = call zeroext i8 @mpd_sign(%struct.mpd_t* %0), !dbg !8246
  %conv = zext i8 %call to i32, !dbg !8246
  %1 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8247, !tbaa !2505
  %call1 = call zeroext i8 @mpd_sign(%struct.mpd_t* %1), !dbg !8248
  %conv2 = zext i8 %call1 to i32, !dbg !8248
  %xor = xor i32 %conv, %conv2, !dbg !8249
  %conv3 = trunc i32 %xor to i8, !dbg !8246
  store i8 %conv3, i8* %sign, align 1, !dbg !8244, !tbaa !2930
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8250, !tbaa !2505
  %call4 = call i32 @mpd_isspecial(%struct.mpd_t* %2), !dbg !8252
  %tobool = icmp ne i32 %call4, 0, !dbg !8252
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8253

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8254, !tbaa !2505
  %call5 = call i32 @mpd_isspecial(%struct.mpd_t* %3), !dbg !8256
  %tobool6 = icmp ne i32 %call5, 0, !dbg !8256
  br i1 %tobool6, label %if.then, label %if.end.27, !dbg !8257

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8258, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8261, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8262, !tbaa !2505
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8263, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !8264, !tbaa !2505
  %call7 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %4, %struct.mpd_t* %5, %struct.mpd_t* %6, %struct.mpd_context_t* %7, i32* %8), !dbg !8265
  %tobool8 = icmp ne i32 %call7, 0, !dbg !8265
  br i1 %tobool8, label %if.then.9, label %if.end, !dbg !8266

if.then.9:                                        ; preds = %if.then
  %9 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8267, !tbaa !2505
  %10 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8269, !tbaa !2505
  %11 = load i32*, i32** %status.addr, align 8, !dbg !8270, !tbaa !2505
  %call10 = call i32 @mpd_qcopy(%struct.mpd_t* %9, %struct.mpd_t* %10, i32* %11), !dbg !8271
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8272

if.end:                                           ; preds = %if.then
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8273, !tbaa !2505
  %call11 = call i32 @mpd_isinfinite(%struct.mpd_t* %12), !dbg !8275
  %tobool12 = icmp ne i32 %call11, 0, !dbg !8275
  br i1 %tobool12, label %if.then.13, label %if.end.18, !dbg !8276

if.then.13:                                       ; preds = %if.end
  %13 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8277, !tbaa !2505
  %call14 = call i32 @mpd_isinfinite(%struct.mpd_t* %13), !dbg !8280
  %tobool15 = icmp ne i32 %call14, 0, !dbg !8280
  br i1 %tobool15, label %if.then.16, label %if.else, !dbg !8281

if.then.16:                                       ; preds = %if.then.13
  %14 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8282, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %14, i8 zeroext 0, i8 zeroext 4), !dbg !8284
  br label %if.end.17, !dbg !8285

if.else:                                          ; preds = %if.then.13
  %15 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8286, !tbaa !2505
  %16 = load i8, i8* %sign, align 1, !dbg !8288, !tbaa !2930
  call void @mpd_setspecial(%struct.mpd_t* %15, i8 zeroext %16, i8 zeroext 2), !dbg !8289
  br label %if.end.17

if.end.17:                                        ; preds = %if.else, %if.then.16
  %17 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8290, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %17, i8 zeroext 0, i8 zeroext 4), !dbg !8291
  %18 = load i32*, i32** %status.addr, align 8, !dbg !8292, !tbaa !2505
  %19 = load i32, i32* %18, align 4, !dbg !8293, !tbaa !2554
  %or = or i32 %19, 256, !dbg !8293
  store i32 %or, i32* %18, align 4, !dbg !8293, !tbaa !2554
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8294

if.end.18:                                        ; preds = %if.end
  %20 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8295, !tbaa !2505
  %call19 = call i32 @mpd_isinfinite(%struct.mpd_t* %20), !dbg !8297
  %tobool20 = icmp ne i32 %call19, 0, !dbg !8297
  br i1 %tobool20, label %if.then.21, label %if.end.26, !dbg !8298

if.then.21:                                       ; preds = %if.end.18
  %21 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8299, !tbaa !2505
  %22 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8302, !tbaa !2505
  %23 = load i32*, i32** %status.addr, align 8, !dbg !8303, !tbaa !2505
  %call22 = call i32 @mpd_qcopy(%struct.mpd_t* %21, %struct.mpd_t* %22, i32* %23), !dbg !8304
  %tobool23 = icmp ne i32 %call22, 0, !dbg !8304
  br i1 %tobool23, label %if.end.25, label %if.then.24, !dbg !8305

if.then.24:                                       ; preds = %if.then.21
  %24 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8306, !tbaa !2505
  %25 = load i32*, i32** %status.addr, align 8, !dbg !8308, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %24, i32 512, i32* %25), !dbg !8309
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8310

if.end.25:                                        ; preds = %if.then.21
  %26 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8311, !tbaa !2505
  %27 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8312, !tbaa !2505
  %28 = load i32*, i32** %status.addr, align 8, !dbg !8313, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %26, %struct.mpd_context_t* %27, i32* %28), !dbg !8314
  %29 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8315, !tbaa !2505
  %30 = load i8, i8* %sign, align 1, !dbg !8316, !tbaa !2930
  call void @_settriple(%struct.mpd_t* %29, i8 zeroext %30, i64 0, i64 0), !dbg !8317
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8318

if.end.26:                                        ; preds = %if.end.18
  call void @abort() #9, !dbg !8319
  unreachable, !dbg !8319

if.end.27:                                        ; preds = %lor.lhs.false
  %31 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8320, !tbaa !2505
  %call28 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %31), !dbg !8322
  %tobool29 = icmp ne i32 %call28, 0, !dbg !8322
  br i1 %tobool29, label %if.then.30, label %if.end.38, !dbg !8323

if.then.30:                                       ; preds = %if.end.27
  %32 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8324, !tbaa !2505
  %call31 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %32), !dbg !8327
  %tobool32 = icmp ne i32 %call31, 0, !dbg !8327
  br i1 %tobool32, label %if.then.33, label %if.else.35, !dbg !8328

if.then.33:                                       ; preds = %if.then.30
  %33 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8329, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %33, i8 zeroext 0, i8 zeroext 4), !dbg !8331
  %34 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8332, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %34, i8 zeroext 0, i8 zeroext 4), !dbg !8333
  %35 = load i32*, i32** %status.addr, align 8, !dbg !8334, !tbaa !2505
  %36 = load i32, i32* %35, align 4, !dbg !8335, !tbaa !2554
  %or34 = or i32 %36, 16, !dbg !8335
  store i32 %or34, i32* %35, align 4, !dbg !8335, !tbaa !2554
  br label %if.end.37, !dbg !8336

if.else.35:                                       ; preds = %if.then.30
  %37 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8337, !tbaa !2505
  %38 = load i8, i8* %sign, align 1, !dbg !8339, !tbaa !2930
  call void @mpd_setspecial(%struct.mpd_t* %37, i8 zeroext %38, i8 zeroext 2), !dbg !8340
  %39 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8341, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %39, i8 zeroext 0, i8 zeroext 4), !dbg !8342
  %40 = load i32*, i32** %status.addr, align 8, !dbg !8343, !tbaa !2505
  %41 = load i32, i32* %40, align 4, !dbg !8344, !tbaa !2554
  %or36 = or i32 %41, 260, !dbg !8344
  store i32 %or36, i32* %40, align 4, !dbg !8344, !tbaa !2554
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.35, %if.then.33
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8345

if.end.38:                                        ; preds = %if.end.27
  %42 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8346, !tbaa !2505
  %43 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8347, !tbaa !2505
  %44 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8348, !tbaa !2505
  %45 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8349, !tbaa !2505
  %46 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8350, !tbaa !2505
  %47 = load i32*, i32** %status.addr, align 8, !dbg !8351, !tbaa !2505
  call void @_mpd_qdivmod(%struct.mpd_t* %42, %struct.mpd_t* %43, %struct.mpd_t* %44, %struct.mpd_t* %45, %struct.mpd_context_t* %46, i32* %47), !dbg !8352
  %48 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8353, !tbaa !2505
  %49 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8354, !tbaa !2505
  %50 = load i32*, i32** %status.addr, align 8, !dbg !8355, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %48, %struct.mpd_context_t* %49, i32* %50), !dbg !8356
  %51 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8357, !tbaa !2505
  %52 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8358, !tbaa !2505
  %53 = load i32*, i32** %status.addr, align 8, !dbg !8359, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %51, %struct.mpd_context_t* %52, i32* %53), !dbg !8360
  store i32 0, i32* %cleanup.dest.slot, !dbg !8361
  br label %cleanup, !dbg !8361

cleanup:                                          ; preds = %if.end.38, %if.end.37, %if.end.25, %if.then.24, %if.end.17, %if.then.9
  call void @llvm.lifetime.end(i64 1, i8* %sign) #4, !dbg !8361
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !8361

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @abort() #6

; Function Attrs: nounwind uwtable
define internal void @_mpd_qdivmod(%struct.mpd_t* %q, %struct.mpd_t* %r, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %q.addr = alloca %struct.mpd_t*, align 8
  %r.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %aligned_data = alloca [64 x i64], align 16
  %aligned = alloca %struct.mpd_t, align 8
  %qsize = alloca i64, align 8
  %rsize = alloca i64, align 8
  %ideal_exp = alloca i64, align 8
  %expdiff = alloca i64, align 8
  %shift = alloca i64, align 8
  %sign_a = alloca i8, align 1
  %sign_ab = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  %ret = alloca i32, align 4
  store %struct.mpd_t* %q, %struct.mpd_t** %q.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %q.addr, metadata !1782, metadata !2395), !dbg !8362
  store %struct.mpd_t* %r, %struct.mpd_t** %r.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %r.addr, metadata !1783, metadata !2395), !dbg !8363
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1784, metadata !2395), !dbg !8364
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1785, metadata !2395), !dbg !8365
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1786, metadata !2395), !dbg !8366
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1787, metadata !2395), !dbg !8367
  %0 = bitcast [64 x i64]* %aligned_data to i8*, !dbg !8368
  call void @llvm.lifetime.start(i64 512, i8* %0) #4, !dbg !8368
  call void @llvm.dbg.declare(metadata [64 x i64]* %aligned_data, metadata !1788, metadata !2395), !dbg !8369
  %1 = bitcast %struct.mpd_t* %aligned to i8*, !dbg !8370
  call void @llvm.lifetime.start(i64 48, i8* %1) #4, !dbg !8370
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %aligned, metadata !1789, metadata !2395), !dbg !8371
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aligned, i32 0, i32 0, !dbg !8372
  store i8 48, i8* %flags, align 1, !dbg !8372, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aligned, i32 0, i32 1, !dbg !8372
  store i64 0, i64* %exp, align 8, !dbg !8372, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aligned, i32 0, i32 2, !dbg !8372
  store i64 0, i64* %digits, align 8, !dbg !8372, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aligned, i32 0, i32 3, !dbg !8372
  store i64 0, i64* %len, align 8, !dbg !8372, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aligned, i32 0, i32 4, !dbg !8372
  store i64 64, i64* %alloc, align 8, !dbg !8372, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aligned, i32 0, i32 5, !dbg !8372
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %aligned_data, i32 0, i32 0, !dbg !8373
  store i64* %arraydecay, i64** %data, align 8, !dbg !8372, !tbaa !2546
  %2 = bitcast i64* %qsize to i8*, !dbg !8374
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !8374
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !1790, metadata !2395), !dbg !8375
  %3 = bitcast i64* %rsize to i8*, !dbg !8374
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !8374
  call void @llvm.dbg.declare(metadata i64* %rsize, metadata !1791, metadata !2395), !dbg !8376
  %4 = bitcast i64* %ideal_exp to i8*, !dbg !8377
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !8377
  call void @llvm.dbg.declare(metadata i64* %ideal_exp, metadata !1792, metadata !2395), !dbg !8378
  %5 = bitcast i64* %expdiff to i8*, !dbg !8377
  call void @llvm.lifetime.start(i64 8, i8* %5) #4, !dbg !8377
  call void @llvm.dbg.declare(metadata i64* %expdiff, metadata !1793, metadata !2395), !dbg !8379
  %6 = bitcast i64* %shift to i8*, !dbg !8377
  call void @llvm.lifetime.start(i64 8, i8* %6) #4, !dbg !8377
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !1794, metadata !2395), !dbg !8380
  call void @llvm.lifetime.start(i64 1, i8* %sign_a) #4, !dbg !8381
  call void @llvm.dbg.declare(metadata i8* %sign_a, metadata !1795, metadata !2395), !dbg !8382
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8383, !tbaa !2505
  %call = call zeroext i8 @mpd_sign(%struct.mpd_t* %7), !dbg !8384
  store i8 %call, i8* %sign_a, align 1, !dbg !8382, !tbaa !2930
  call void @llvm.lifetime.start(i64 1, i8* %sign_ab) #4, !dbg !8385
  call void @llvm.dbg.declare(metadata i8* %sign_ab, metadata !1796, metadata !2395), !dbg !8386
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8387, !tbaa !2505
  %call1 = call zeroext i8 @mpd_sign(%struct.mpd_t* %8), !dbg !8388
  %conv = zext i8 %call1 to i32, !dbg !8388
  %9 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8389, !tbaa !2505
  %call2 = call zeroext i8 @mpd_sign(%struct.mpd_t* %9), !dbg !8390
  %conv3 = zext i8 %call2 to i32, !dbg !8390
  %xor = xor i32 %conv, %conv3, !dbg !8391
  %conv4 = trunc i32 %xor to i8, !dbg !8388
  store i8 %conv4, i8* %sign_ab, align 1, !dbg !8386, !tbaa !2930
  %10 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8392, !tbaa !2505
  %exp5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %10, i32 0, i32 1, !dbg !8393
  %11 = load i64, i64* %exp5, align 8, !dbg !8393, !tbaa !2510
  %12 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8394, !tbaa !2505
  %exp6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %12, i32 0, i32 1, !dbg !8395
  %13 = load i64, i64* %exp6, align 8, !dbg !8395, !tbaa !2510
  %cmp = icmp sgt i64 %11, %13, !dbg !8396
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8397

cond.true:                                        ; preds = %entry
  %14 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8398, !tbaa !2505
  %exp8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %14, i32 0, i32 1, !dbg !8400
  %15 = load i64, i64* %exp8, align 8, !dbg !8400, !tbaa !2510
  br label %cond.end, !dbg !8397

cond.false:                                       ; preds = %entry
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8401, !tbaa !2505
  %exp9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %16, i32 0, i32 1, !dbg !8403
  %17 = load i64, i64* %exp9, align 8, !dbg !8403, !tbaa !2510
  br label %cond.end, !dbg !8397

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %15, %cond.true ], [ %17, %cond.false ], !dbg !8397
  store i64 %cond, i64* %ideal_exp, align 8, !dbg !8404, !tbaa !2391
  %18 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8407, !tbaa !2505
  %call10 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %18), !dbg !8409
  %tobool = icmp ne i32 %call10, 0, !dbg !8409
  br i1 %tobool, label %if.then, label %if.end.15, !dbg !8410

if.then:                                          ; preds = %cond.end
  %19 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8411, !tbaa !2505
  %20 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8414, !tbaa !2505
  %21 = load i32*, i32** %status.addr, align 8, !dbg !8415, !tbaa !2505
  %call11 = call i32 @mpd_qcopy(%struct.mpd_t* %19, %struct.mpd_t* %20, i32* %21), !dbg !8416
  %tobool12 = icmp ne i32 %call11, 0, !dbg !8416
  br i1 %tobool12, label %if.end, label %if.then.13, !dbg !8417

if.then.13:                                       ; preds = %if.then
  br label %nanresult, !dbg !8418

if.end:                                           ; preds = %if.then
  %22 = load i64, i64* %ideal_exp, align 8, !dbg !8420, !tbaa !2391
  %23 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8421, !tbaa !2505
  %exp14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %23, i32 0, i32 1, !dbg !8422
  store i64 %22, i64* %exp14, align 8, !dbg !8423, !tbaa !2510
  %24 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8424, !tbaa !2505
  %25 = load i8, i8* %sign_ab, align 1, !dbg !8425, !tbaa !2930
  call void @_settriple(%struct.mpd_t* %24, i8 zeroext %25, i64 0, i64 0), !dbg !8426
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.171, !dbg !8427

if.end.15:                                        ; preds = %cond.end
  %26 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8428, !tbaa !2505
  %call16 = call i64 @mpd_adjexp(%struct.mpd_t* %26), !dbg !8429
  %27 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8430, !tbaa !2505
  %call17 = call i64 @mpd_adjexp(%struct.mpd_t* %27), !dbg !8431
  %sub = sub i64 %call16, %call17, !dbg !8432
  store i64 %sub, i64* %expdiff, align 8, !dbg !8433, !tbaa !2391
  %28 = load i64, i64* %expdiff, align 8, !dbg !8434, !tbaa !2391
  %cmp18 = icmp slt i64 %28, 0, !dbg !8436
  br i1 %cmp18, label %if.then.20, label %if.end.39, !dbg !8437

if.then.20:                                       ; preds = %if.end.15
  %29 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8438, !tbaa !2505
  %exp21 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %29, i32 0, i32 1, !dbg !8441
  %30 = load i64, i64* %exp21, align 8, !dbg !8441, !tbaa !2510
  %31 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8442, !tbaa !2505
  %exp22 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %31, i32 0, i32 1, !dbg !8443
  %32 = load i64, i64* %exp22, align 8, !dbg !8443, !tbaa !2510
  %cmp23 = icmp sgt i64 %30, %32, !dbg !8444
  br i1 %cmp23, label %if.then.25, label %if.else, !dbg !8445

if.then.25:                                       ; preds = %if.then.20
  %33 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8446, !tbaa !2505
  %exp26 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %33, i32 0, i32 1, !dbg !8448
  %34 = load i64, i64* %exp26, align 8, !dbg !8448, !tbaa !2510
  %35 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8449, !tbaa !2505
  %exp27 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %35, i32 0, i32 1, !dbg !8450
  %36 = load i64, i64* %exp27, align 8, !dbg !8450, !tbaa !2510
  %sub28 = sub i64 %34, %36, !dbg !8451
  store i64 %sub28, i64* %shift, align 8, !dbg !8452, !tbaa !2391
  %37 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8453, !tbaa !2505
  %38 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8455, !tbaa !2505
  %39 = load i64, i64* %shift, align 8, !dbg !8456, !tbaa !2391
  %40 = load i32*, i32** %status.addr, align 8, !dbg !8457, !tbaa !2505
  %call29 = call i32 @mpd_qshiftl(%struct.mpd_t* %37, %struct.mpd_t* %38, i64 %39, i32* %40), !dbg !8458
  %tobool30 = icmp ne i32 %call29, 0, !dbg !8458
  br i1 %tobool30, label %if.end.32, label %if.then.31, !dbg !8459

if.then.31:                                       ; preds = %if.then.25
  br label %nanresult, !dbg !8460

if.end.32:                                        ; preds = %if.then.25
  %41 = load i64, i64* %ideal_exp, align 8, !dbg !8462, !tbaa !2391
  %42 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8463, !tbaa !2505
  %exp33 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %42, i32 0, i32 1, !dbg !8464
  store i64 %41, i64* %exp33, align 8, !dbg !8465, !tbaa !2510
  br label %if.end.38, !dbg !8466

if.else:                                          ; preds = %if.then.20
  %43 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8467, !tbaa !2505
  %44 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8470, !tbaa !2505
  %45 = load i32*, i32** %status.addr, align 8, !dbg !8471, !tbaa !2505
  %call34 = call i32 @mpd_qcopy(%struct.mpd_t* %43, %struct.mpd_t* %44, i32* %45), !dbg !8472
  %tobool35 = icmp ne i32 %call34, 0, !dbg !8472
  br i1 %tobool35, label %if.end.37, label %if.then.36, !dbg !8473

if.then.36:                                       ; preds = %if.else
  br label %nanresult, !dbg !8474

if.end.37:                                        ; preds = %if.else
  br label %if.end.38

if.end.38:                                        ; preds = %if.end.37, %if.end.32
  %46 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8476, !tbaa !2505
  %47 = load i8, i8* %sign_ab, align 1, !dbg !8477, !tbaa !2930
  call void @_settriple(%struct.mpd_t* %46, i8 zeroext %47, i64 0, i64 0), !dbg !8478
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.171, !dbg !8479

if.end.39:                                        ; preds = %if.end.15
  %48 = load i64, i64* %expdiff, align 8, !dbg !8480, !tbaa !2391
  %49 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8482, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %49, i32 0, i32 0, !dbg !8483
  %50 = load i64, i64* %prec, align 8, !dbg !8483, !tbaa !2526
  %cmp40 = icmp sgt i64 %48, %50, !dbg !8484
  br i1 %cmp40, label %if.then.42, label %if.end.43, !dbg !8485

if.then.42:                                       ; preds = %if.end.39
  %51 = load i32*, i32** %status.addr, align 8, !dbg !8486, !tbaa !2505
  %52 = load i32, i32* %51, align 4, !dbg !8488, !tbaa !2554
  %or = or i32 %52, 8, !dbg !8488
  store i32 %or, i32* %51, align 4, !dbg !8488, !tbaa !2554
  br label %nanresult, !dbg !8489

if.end.43:                                        ; preds = %if.end.39
  %53 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8490, !tbaa !2505
  %exp44 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %53, i32 0, i32 1, !dbg !8492
  %54 = load i64, i64* %exp44, align 8, !dbg !8492, !tbaa !2510
  %55 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8493, !tbaa !2505
  %exp45 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %55, i32 0, i32 1, !dbg !8494
  %56 = load i64, i64* %exp45, align 8, !dbg !8494, !tbaa !2510
  %cmp46 = icmp ne i64 %54, %56, !dbg !8495
  br i1 %cmp46, label %if.then.48, label %if.end.66, !dbg !8496

if.then.48:                                       ; preds = %if.end.43
  %57 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8497, !tbaa !2505
  %exp49 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %57, i32 0, i32 1, !dbg !8499
  %58 = load i64, i64* %exp49, align 8, !dbg !8499, !tbaa !2510
  %59 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8500, !tbaa !2505
  %exp50 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %59, i32 0, i32 1, !dbg !8501
  %60 = load i64, i64* %exp50, align 8, !dbg !8501, !tbaa !2510
  %sub51 = sub i64 %58, %60, !dbg !8502
  store i64 %sub51, i64* %shift, align 8, !dbg !8503, !tbaa !2391
  %61 = load i64, i64* %shift, align 8, !dbg !8504, !tbaa !2391
  %cmp52 = icmp sgt i64 %61, 0, !dbg !8506
  br i1 %cmp52, label %if.then.54, label %if.else.59, !dbg !8507

if.then.54:                                       ; preds = %if.then.48
  %62 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8508, !tbaa !2505
  %63 = load i64, i64* %shift, align 8, !dbg !8511, !tbaa !2391
  %64 = load i32*, i32** %status.addr, align 8, !dbg !8512, !tbaa !2505
  %call55 = call i32 @mpd_qshiftl(%struct.mpd_t* %aligned, %struct.mpd_t* %62, i64 %63, i32* %64), !dbg !8513
  %tobool56 = icmp ne i32 %call55, 0, !dbg !8513
  br i1 %tobool56, label %if.end.58, label %if.then.57, !dbg !8514

if.then.57:                                       ; preds = %if.then.54
  br label %nanresult, !dbg !8515

if.end.58:                                        ; preds = %if.then.54
  store %struct.mpd_t* %aligned, %struct.mpd_t** %a.addr, align 8, !dbg !8517, !tbaa !2505
  br label %if.end.65, !dbg !8518

if.else.59:                                       ; preds = %if.then.48
  %65 = load i64, i64* %shift, align 8, !dbg !8519, !tbaa !2391
  %sub60 = sub i64 0, %65, !dbg !8521
  store i64 %sub60, i64* %shift, align 8, !dbg !8522, !tbaa !2391
  %66 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8523, !tbaa !2505
  %67 = load i64, i64* %shift, align 8, !dbg !8525, !tbaa !2391
  %68 = load i32*, i32** %status.addr, align 8, !dbg !8526, !tbaa !2505
  %call61 = call i32 @mpd_qshiftl(%struct.mpd_t* %aligned, %struct.mpd_t* %66, i64 %67, i32* %68), !dbg !8527
  %tobool62 = icmp ne i32 %call61, 0, !dbg !8527
  br i1 %tobool62, label %if.end.64, label %if.then.63, !dbg !8528

if.then.63:                                       ; preds = %if.else.59
  br label %nanresult, !dbg !8529

if.end.64:                                        ; preds = %if.else.59
  store %struct.mpd_t* %aligned, %struct.mpd_t** %b.addr, align 8, !dbg !8531, !tbaa !2505
  br label %if.end.65

if.end.65:                                        ; preds = %if.end.64, %if.end.58
  br label %if.end.66, !dbg !8532

if.end.66:                                        ; preds = %if.end.65, %if.end.43
  %69 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8533, !tbaa !2505
  %len67 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %69, i32 0, i32 3, !dbg !8534
  %70 = load i64, i64* %len67, align 8, !dbg !8534, !tbaa !2542
  %71 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8535, !tbaa !2505
  %len68 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %71, i32 0, i32 3, !dbg !8536
  %72 = load i64, i64* %len68, align 8, !dbg !8536, !tbaa !2542
  %sub69 = sub i64 %70, %72, !dbg !8537
  %add = add i64 %sub69, 1, !dbg !8538
  store i64 %add, i64* %qsize, align 8, !dbg !8539, !tbaa !2391
  %73 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8540, !tbaa !2505
  %74 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8542, !tbaa !2505
  %cmp70 = icmp eq %struct.mpd_t* %73, %74, !dbg !8543
  br i1 %cmp70, label %land.lhs.true, label %land.lhs.true.75, !dbg !8544

land.lhs.true:                                    ; preds = %if.end.66
  %75 = load i64, i64* %qsize, align 8, !dbg !8545, !tbaa !2391
  %76 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8547, !tbaa !2505
  %len72 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %76, i32 0, i32 3, !dbg !8548
  %77 = load i64, i64* %len72, align 8, !dbg !8548, !tbaa !2542
  %cmp73 = icmp slt i64 %75, %77, !dbg !8549
  br i1 %cmp73, label %if.end.87, label %land.lhs.true.75, !dbg !8550

land.lhs.true.75:                                 ; preds = %land.lhs.true, %if.end.66
  %78 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8551, !tbaa !2505
  %79 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8554, !tbaa !2505
  %cmp76 = icmp eq %struct.mpd_t* %78, %79, !dbg !8555
  br i1 %cmp76, label %land.lhs.true.78, label %if.then.82, !dbg !8556

land.lhs.true.78:                                 ; preds = %land.lhs.true.75
  %80 = load i64, i64* %qsize, align 8, !dbg !8557, !tbaa !2391
  %81 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8559, !tbaa !2505
  %len79 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %81, i32 0, i32 3, !dbg !8560
  %82 = load i64, i64* %len79, align 8, !dbg !8560, !tbaa !2542
  %cmp80 = icmp slt i64 %80, %82, !dbg !8561
  br i1 %cmp80, label %if.end.87, label %if.then.82, !dbg !8562

if.then.82:                                       ; preds = %land.lhs.true.78, %land.lhs.true.75
  %83 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8563, !tbaa !2505
  %84 = load i64, i64* %qsize, align 8, !dbg !8566, !tbaa !2391
  %85 = load i32*, i32** %status.addr, align 8, !dbg !8567, !tbaa !2505
  %call83 = call i32 @mpd_qresize(%struct.mpd_t* %83, i64 %84, i32* %85), !dbg !8568
  %tobool84 = icmp ne i32 %call83, 0, !dbg !8568
  br i1 %tobool84, label %if.end.86, label %if.then.85, !dbg !8569

if.then.85:                                       ; preds = %if.then.82
  br label %nanresult, !dbg !8570

if.end.86:                                        ; preds = %if.then.82
  br label %if.end.87, !dbg !8572

if.end.87:                                        ; preds = %if.end.86, %land.lhs.true.78, %land.lhs.true
  %86 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8573, !tbaa !2505
  %len88 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %86, i32 0, i32 3, !dbg !8574
  %87 = load i64, i64* %len88, align 8, !dbg !8574, !tbaa !2542
  store i64 %87, i64* %rsize, align 8, !dbg !8575, !tbaa !2391
  %88 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8576, !tbaa !2505
  %89 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8578, !tbaa !2505
  %cmp89 = icmp eq %struct.mpd_t* %88, %89, !dbg !8579
  br i1 %cmp89, label %land.lhs.true.91, label %if.then.95, !dbg !8580

land.lhs.true.91:                                 ; preds = %if.end.87
  %90 = load i64, i64* %rsize, align 8, !dbg !8581, !tbaa !2391
  %91 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8583, !tbaa !2505
  %len92 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %91, i32 0, i32 3, !dbg !8584
  %92 = load i64, i64* %len92, align 8, !dbg !8584, !tbaa !2542
  %cmp93 = icmp slt i64 %90, %92, !dbg !8585
  br i1 %cmp93, label %if.end.100, label %if.then.95, !dbg !8586

if.then.95:                                       ; preds = %land.lhs.true.91, %if.end.87
  %93 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8587, !tbaa !2505
  %94 = load i64, i64* %rsize, align 8, !dbg !8590, !tbaa !2391
  %95 = load i32*, i32** %status.addr, align 8, !dbg !8591, !tbaa !2505
  %call96 = call i32 @mpd_qresize(%struct.mpd_t* %93, i64 %94, i32* %95), !dbg !8592
  %tobool97 = icmp ne i32 %call96, 0, !dbg !8592
  br i1 %tobool97, label %if.end.99, label %if.then.98, !dbg !8593

if.then.98:                                       ; preds = %if.then.95
  br label %nanresult, !dbg !8594

if.end.99:                                        ; preds = %if.then.95
  br label %if.end.100, !dbg !8596

if.end.100:                                       ; preds = %if.end.99, %land.lhs.true.91
  %96 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8597, !tbaa !2505
  %len101 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %96, i32 0, i32 3, !dbg !8598
  %97 = load i64, i64* %len101, align 8, !dbg !8598, !tbaa !2542
  %cmp102 = icmp eq i64 %97, 1, !dbg !8599
  br i1 %cmp102, label %if.then.104, label %if.else.126, !dbg !8600

if.then.104:                                      ; preds = %if.end.100
  %98 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8601, !tbaa !2505
  %len105 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %98, i32 0, i32 3, !dbg !8604
  %99 = load i64, i64* %len105, align 8, !dbg !8604, !tbaa !2542
  %cmp106 = icmp eq i64 %99, 1, !dbg !8605
  br i1 %cmp106, label %if.then.108, label %if.else.116, !dbg !8606

if.then.108:                                      ; preds = %if.then.104
  %100 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8607, !tbaa !2505
  %data109 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %100, i32 0, i32 5, !dbg !8609
  %101 = load i64*, i64** %data109, align 8, !dbg !8609, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %101, i64 0, !dbg !8607
  %102 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8610, !tbaa !2505
  %data110 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %102, i32 0, i32 5, !dbg !8611
  %103 = load i64*, i64** %data110, align 8, !dbg !8611, !tbaa !2546
  %arrayidx111 = getelementptr i64, i64* %103, i64 0, !dbg !8610
  %104 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8612, !tbaa !2505
  %data112 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %104, i32 0, i32 5, !dbg !8613
  %105 = load i64*, i64** %data112, align 8, !dbg !8613, !tbaa !2546
  %arrayidx113 = getelementptr i64, i64* %105, i64 0, !dbg !8612
  %106 = load i64, i64* %arrayidx113, align 8, !dbg !8612, !tbaa !2391
  %107 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8614, !tbaa !2505
  %data114 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %107, i32 0, i32 5, !dbg !8615
  %108 = load i64*, i64** %data114, align 8, !dbg !8615, !tbaa !2546
  %arrayidx115 = getelementptr i64, i64* %108, i64 0, !dbg !8614
  %109 = load i64, i64* %arrayidx115, align 8, !dbg !8614, !tbaa !2391
  call void @_mpd_div_word(i64* %arrayidx, i64* %arrayidx111, i64 %106, i64 %109), !dbg !8616
  br label %if.end.125, !dbg !8617

if.else.116:                                      ; preds = %if.then.104
  %110 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8618, !tbaa !2505
  %data117 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %110, i32 0, i32 5, !dbg !8620
  %111 = load i64*, i64** %data117, align 8, !dbg !8620, !tbaa !2546
  %112 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8621, !tbaa !2505
  %data118 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %112, i32 0, i32 5, !dbg !8622
  %113 = load i64*, i64** %data118, align 8, !dbg !8622, !tbaa !2546
  %114 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8623, !tbaa !2505
  %len119 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %114, i32 0, i32 3, !dbg !8624
  %115 = load i64, i64* %len119, align 8, !dbg !8624, !tbaa !2542
  %116 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8625, !tbaa !2505
  %data120 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %116, i32 0, i32 5, !dbg !8626
  %117 = load i64*, i64** %data120, align 8, !dbg !8626, !tbaa !2546
  %arrayidx121 = getelementptr i64, i64* %117, i64 0, !dbg !8625
  %118 = load i64, i64* %arrayidx121, align 8, !dbg !8625, !tbaa !2391
  %call122 = call i64 @_mpd_shortdiv(i64* %111, i64* %113, i64 %115, i64 %118), !dbg !8627
  %119 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8628, !tbaa !2505
  %data123 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %119, i32 0, i32 5, !dbg !8629
  %120 = load i64*, i64** %data123, align 8, !dbg !8629, !tbaa !2546
  %arrayidx124 = getelementptr i64, i64* %120, i64 0, !dbg !8628
  store i64 %call122, i64* %arrayidx124, align 8, !dbg !8630, !tbaa !2391
  br label %if.end.125

if.end.125:                                       ; preds = %if.else.116, %if.then.108
  br label %if.end.153, !dbg !8631

if.else.126:                                      ; preds = %if.end.100
  %121 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8632, !tbaa !2505
  %len127 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %121, i32 0, i32 3, !dbg !8633
  %122 = load i64, i64* %len127, align 8, !dbg !8633, !tbaa !2542
  %cmp128 = icmp sle i64 %122, 1024, !dbg !8634
  br i1 %cmp128, label %if.then.130, label %if.else.143, !dbg !8635

if.then.130:                                      ; preds = %if.else.126
  %123 = bitcast i32* %ret to i8*, !dbg !8636
  call void @llvm.lifetime.start(i64 4, i8* %123) #4, !dbg !8636
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1797, metadata !2395), !dbg !8637
  %124 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8638, !tbaa !2505
  %data131 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %124, i32 0, i32 5, !dbg !8639
  %125 = load i64*, i64** %data131, align 8, !dbg !8639, !tbaa !2546
  %126 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8640, !tbaa !2505
  %data132 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %126, i32 0, i32 5, !dbg !8641
  %127 = load i64*, i64** %data132, align 8, !dbg !8641, !tbaa !2546
  %128 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8642, !tbaa !2505
  %data133 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %128, i32 0, i32 5, !dbg !8643
  %129 = load i64*, i64** %data133, align 8, !dbg !8643, !tbaa !2546
  %130 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8644, !tbaa !2505
  %data134 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %130, i32 0, i32 5, !dbg !8645
  %131 = load i64*, i64** %data134, align 8, !dbg !8645, !tbaa !2546
  %132 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8646, !tbaa !2505
  %len135 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %132, i32 0, i32 3, !dbg !8647
  %133 = load i64, i64* %len135, align 8, !dbg !8647, !tbaa !2542
  %134 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8648, !tbaa !2505
  %len136 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %134, i32 0, i32 3, !dbg !8649
  %135 = load i64, i64* %len136, align 8, !dbg !8649, !tbaa !2542
  %call137 = call i32 @_mpd_basedivmod(i64* %125, i64* %127, i64* %129, i64* %131, i64 %133, i64 %135), !dbg !8650
  store i32 %call137, i32* %ret, align 4, !dbg !8651, !tbaa !2554
  %136 = load i32, i32* %ret, align 4, !dbg !8652, !tbaa !2554
  %cmp138 = icmp eq i32 %136, -1, !dbg !8654
  br i1 %cmp138, label %if.then.140, label %if.end.142, !dbg !8655

if.then.140:                                      ; preds = %if.then.130
  %137 = load i32*, i32** %status.addr, align 8, !dbg !8656, !tbaa !2505
  %138 = load i32, i32* %137, align 4, !dbg !8658, !tbaa !2554
  %or141 = or i32 %138, 512, !dbg !8658
  store i32 %or141, i32* %137, align 4, !dbg !8658, !tbaa !2554
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8659

if.end.142:                                       ; preds = %if.then.130
  store i32 0, i32* %cleanup.dest.slot, !dbg !8660
  br label %cleanup, !dbg !8660

cleanup:                                          ; preds = %if.end.142, %if.then.140
  %139 = bitcast i32* %ret to i8*, !dbg !8661
  call void @llvm.lifetime.end(i64 4, i8* %139) #4, !dbg !8661
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf2, label %nanresult, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.152, !dbg !8663

if.else.143:                                      ; preds = %if.else.126
  %140 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8664, !tbaa !2505
  %141 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8666, !tbaa !2505
  %142 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8667, !tbaa !2505
  %143 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8668, !tbaa !2505
  %144 = load i32*, i32** %status.addr, align 8, !dbg !8669, !tbaa !2505
  call void @_mpd_base_ndivmod(%struct.mpd_t* %140, %struct.mpd_t* %141, %struct.mpd_t* %142, %struct.mpd_t* %143, i32* %144), !dbg !8670
  %145 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8671, !tbaa !2505
  %call144 = call i32 @mpd_isspecial(%struct.mpd_t* %145), !dbg !8673
  %tobool145 = icmp ne i32 %call144, 0, !dbg !8673
  br i1 %tobool145, label %if.then.148, label %lor.lhs.false, !dbg !8674

lor.lhs.false:                                    ; preds = %if.else.143
  %146 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8675, !tbaa !2505
  %call146 = call i32 @mpd_isspecial(%struct.mpd_t* %146), !dbg !8677
  %tobool147 = icmp ne i32 %call146, 0, !dbg !8677
  br i1 %tobool147, label %if.then.148, label %if.end.149, !dbg !8678

if.then.148:                                      ; preds = %lor.lhs.false, %if.else.143
  br label %nanresult, !dbg !8679

if.end.149:                                       ; preds = %lor.lhs.false
  %147 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8681, !tbaa !2505
  %len150 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %147, i32 0, i32 3, !dbg !8682
  %148 = load i64, i64* %len150, align 8, !dbg !8682, !tbaa !2542
  store i64 %148, i64* %qsize, align 8, !dbg !8683, !tbaa !2391
  %149 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8684, !tbaa !2505
  %len151 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %149, i32 0, i32 3, !dbg !8685
  %150 = load i64, i64* %len151, align 8, !dbg !8685, !tbaa !2542
  store i64 %150, i64* %rsize, align 8, !dbg !8686, !tbaa !2391
  br label %if.end.152

if.end.152:                                       ; preds = %if.end.149, %cleanup.cont
  br label %if.end.153

if.end.153:                                       ; preds = %if.end.152, %if.end.125
  %151 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8687, !tbaa !2505
  %data154 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %151, i32 0, i32 5, !dbg !8688
  %152 = load i64*, i64** %data154, align 8, !dbg !8688, !tbaa !2546
  %153 = load i64, i64* %qsize, align 8, !dbg !8689, !tbaa !2391
  %call155 = call i64 @_mpd_real_size(i64* %152, i64 %153), !dbg !8690
  store i64 %call155, i64* %qsize, align 8, !dbg !8691, !tbaa !2391
  %154 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8692, !tbaa !2505
  %155 = load i64, i64* %qsize, align 8, !dbg !8693, !tbaa !2391
  %156 = load i32*, i32** %status.addr, align 8, !dbg !8694, !tbaa !2505
  %call156 = call i32 @mpd_qresize(%struct.mpd_t* %154, i64 %155, i32* %156), !dbg !8695
  %157 = load i64, i64* %qsize, align 8, !dbg !8696, !tbaa !2391
  %158 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8697, !tbaa !2505
  %len157 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %158, i32 0, i32 3, !dbg !8698
  store i64 %157, i64* %len157, align 8, !dbg !8699, !tbaa !2542
  %159 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8700, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %159), !dbg !8701
  %160 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8702, !tbaa !2505
  %161 = load i8, i8* %sign_ab, align 1, !dbg !8703, !tbaa !2930
  call void @mpd_set_flags(%struct.mpd_t* %160, i8 zeroext %161), !dbg !8704
  %162 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8705, !tbaa !2505
  %exp158 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %162, i32 0, i32 1, !dbg !8706
  store i64 0, i64* %exp158, align 8, !dbg !8707, !tbaa !2510
  %163 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8708, !tbaa !2505
  %digits159 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %163, i32 0, i32 2, !dbg !8710
  %164 = load i64, i64* %digits159, align 8, !dbg !8710, !tbaa !2514
  %165 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8711, !tbaa !2505
  %prec160 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %165, i32 0, i32 0, !dbg !8712
  %166 = load i64, i64* %prec160, align 8, !dbg !8712, !tbaa !2526
  %cmp161 = icmp sgt i64 %164, %166, !dbg !8713
  br i1 %cmp161, label %if.then.163, label %if.end.165, !dbg !8714

if.then.163:                                      ; preds = %if.end.153
  %167 = load i32*, i32** %status.addr, align 8, !dbg !8715, !tbaa !2505
  %168 = load i32, i32* %167, align 4, !dbg !8717, !tbaa !2554
  %or164 = or i32 %168, 8, !dbg !8717
  store i32 %or164, i32* %167, align 4, !dbg !8717, !tbaa !2554
  br label %nanresult, !dbg !8718

if.end.165:                                       ; preds = %if.end.153
  %169 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8719, !tbaa !2505
  %data166 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %169, i32 0, i32 5, !dbg !8720
  %170 = load i64*, i64** %data166, align 8, !dbg !8720, !tbaa !2546
  %171 = load i64, i64* %rsize, align 8, !dbg !8721, !tbaa !2391
  %call167 = call i64 @_mpd_real_size(i64* %170, i64 %171), !dbg !8722
  store i64 %call167, i64* %rsize, align 8, !dbg !8723, !tbaa !2391
  %172 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8724, !tbaa !2505
  %173 = load i64, i64* %rsize, align 8, !dbg !8725, !tbaa !2391
  %174 = load i32*, i32** %status.addr, align 8, !dbg !8726, !tbaa !2505
  %call168 = call i32 @mpd_qresize(%struct.mpd_t* %172, i64 %173, i32* %174), !dbg !8727
  %175 = load i64, i64* %rsize, align 8, !dbg !8728, !tbaa !2391
  %176 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8729, !tbaa !2505
  %len169 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %176, i32 0, i32 3, !dbg !8730
  store i64 %175, i64* %len169, align 8, !dbg !8731, !tbaa !2542
  %177 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8732, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %177), !dbg !8733
  %178 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8734, !tbaa !2505
  %179 = load i8, i8* %sign_a, align 1, !dbg !8735, !tbaa !2930
  call void @mpd_set_flags(%struct.mpd_t* %178, i8 zeroext %179), !dbg !8736
  %180 = load i64, i64* %ideal_exp, align 8, !dbg !8737, !tbaa !2391
  %181 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8738, !tbaa !2505
  %exp170 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %181, i32 0, i32 1, !dbg !8739
  store i64 %180, i64* %exp170, align 8, !dbg !8740, !tbaa !2510
  br label %out, !dbg !8738

out:                                              ; preds = %nanresult, %if.end.165
  call void @mpd_del(%struct.mpd_t* %aligned), !dbg !8741
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.171, !dbg !8742

nanresult:                                        ; preds = %LeafBlock.1, %if.then.163, %if.then.148, %if.then.98, %if.then.85, %if.then.63, %if.then.57, %if.then.42, %if.then.36, %if.then.31, %if.then.13
  %182 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8743, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %182, i8 zeroext 0, i8 zeroext 4), !dbg !8744
  %183 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !8745, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %183, i8 zeroext 0, i8 zeroext 4), !dbg !8746
  br label %out, !dbg !8747

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.171

cleanup.171:                                      ; preds = %NewDefault, %out, %if.end.38, %if.end
  call void @llvm.lifetime.end(i64 1, i8* %sign_ab) #4, !dbg !8748
  call void @llvm.lifetime.end(i64 1, i8* %sign_a) #4, !dbg !8748
  %184 = bitcast i64* %shift to i8*, !dbg !8748
  call void @llvm.lifetime.end(i64 8, i8* %184) #4, !dbg !8748
  %185 = bitcast i64* %expdiff to i8*, !dbg !8748
  call void @llvm.lifetime.end(i64 8, i8* %185) #4, !dbg !8748
  %186 = bitcast i64* %ideal_exp to i8*, !dbg !8748
  call void @llvm.lifetime.end(i64 8, i8* %186) #4, !dbg !8748
  %187 = bitcast i64* %rsize to i8*, !dbg !8748
  call void @llvm.lifetime.end(i64 8, i8* %187) #4, !dbg !8748
  %188 = bitcast i64* %qsize to i8*, !dbg !8748
  call void @llvm.lifetime.end(i64 8, i8* %188) #4, !dbg !8748
  %189 = bitcast %struct.mpd_t* %aligned to i8*, !dbg !8748
  call void @llvm.lifetime.end(i64 48, i8* %189) #4, !dbg !8748
  %190 = bitcast [64 x i64]* %aligned_data to i8*, !dbg !8748
  call void @llvm.lifetime.end(i64 512, i8* %190) #4, !dbg !8748
  ret void, !dbg !8748
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qdivint(%struct.mpd_t* %q, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %q.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %r_data = alloca [64 x i64], align 16
  %r = alloca %struct.mpd_t, align 8
  %sign = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %q, %struct.mpd_t** %q.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %q.addr, metadata !917, metadata !2395), !dbg !8749
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !918, metadata !2395), !dbg !8750
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !919, metadata !2395), !dbg !8751
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !920, metadata !2395), !dbg !8752
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !921, metadata !2395), !dbg !8753
  %0 = bitcast [64 x i64]* %r_data to i8*, !dbg !8754
  call void @llvm.lifetime.start(i64 512, i8* %0) #4, !dbg !8754
  call void @llvm.dbg.declare(metadata [64 x i64]* %r_data, metadata !922, metadata !2395), !dbg !8755
  %1 = bitcast %struct.mpd_t* %r to i8*, !dbg !8756
  call void @llvm.lifetime.start(i64 48, i8* %1) #4, !dbg !8756
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %r, metadata !923, metadata !2395), !dbg !8757
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 0, !dbg !8758
  store i8 48, i8* %flags, align 1, !dbg !8758, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 1, !dbg !8758
  store i64 0, i64* %exp, align 8, !dbg !8758, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 2, !dbg !8758
  store i64 0, i64* %digits, align 8, !dbg !8758, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 3, !dbg !8758
  store i64 0, i64* %len, align 8, !dbg !8758, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 4, !dbg !8758
  store i64 64, i64* %alloc, align 8, !dbg !8758, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 5, !dbg !8758
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %r_data, i32 0, i32 0, !dbg !8759
  store i64* %arraydecay, i64** %data, align 8, !dbg !8758, !tbaa !2546
  call void @llvm.lifetime.start(i64 1, i8* %sign) #4, !dbg !8760
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !924, metadata !2395), !dbg !8761
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8762, !tbaa !2505
  %call = call zeroext i8 @mpd_sign(%struct.mpd_t* %2), !dbg !8763
  %conv = zext i8 %call to i32, !dbg !8763
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8764, !tbaa !2505
  %call1 = call zeroext i8 @mpd_sign(%struct.mpd_t* %3), !dbg !8765
  %conv2 = zext i8 %call1 to i32, !dbg !8765
  %xor = xor i32 %conv, %conv2, !dbg !8766
  %conv3 = trunc i32 %xor to i8, !dbg !8763
  store i8 %conv3, i8* %sign, align 1, !dbg !8761, !tbaa !2930
  %4 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8767, !tbaa !2505
  %call4 = call i32 @mpd_isspecial(%struct.mpd_t* %4), !dbg !8769
  %tobool = icmp ne i32 %call4, 0, !dbg !8769
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8770

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8771, !tbaa !2505
  %call5 = call i32 @mpd_isspecial(%struct.mpd_t* %5), !dbg !8773
  %tobool6 = icmp ne i32 %call5, 0, !dbg !8773
  br i1 %tobool6, label %if.then, label %if.end.24, !dbg !8774

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8775, !tbaa !2505
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8778, !tbaa !2505
  %8 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8779, !tbaa !2505
  %9 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8780, !tbaa !2505
  %10 = load i32*, i32** %status.addr, align 8, !dbg !8781, !tbaa !2505
  %call7 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %6, %struct.mpd_t* %7, %struct.mpd_t* %8, %struct.mpd_context_t* %9, i32* %10), !dbg !8782
  %tobool8 = icmp ne i32 %call7, 0, !dbg !8782
  br i1 %tobool8, label %if.then.9, label %if.end, !dbg !8783

if.then.9:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8784

if.end:                                           ; preds = %if.then
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8786, !tbaa !2505
  %call10 = call i32 @mpd_isinfinite(%struct.mpd_t* %11), !dbg !8788
  %tobool11 = icmp ne i32 %call10, 0, !dbg !8788
  br i1 %tobool11, label %land.lhs.true, label %if.end.15, !dbg !8789

land.lhs.true:                                    ; preds = %if.end
  %12 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8790, !tbaa !2505
  %call12 = call i32 @mpd_isinfinite(%struct.mpd_t* %12), !dbg !8792
  %tobool13 = icmp ne i32 %call12, 0, !dbg !8792
  br i1 %tobool13, label %if.then.14, label %if.end.15, !dbg !8793

if.then.14:                                       ; preds = %land.lhs.true
  %13 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8794, !tbaa !2505
  %14 = load i32*, i32** %status.addr, align 8, !dbg !8796, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %13, i32 256, i32* %14), !dbg !8797
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8798

if.end.15:                                        ; preds = %land.lhs.true, %if.end
  %15 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8799, !tbaa !2505
  %call16 = call i32 @mpd_isinfinite(%struct.mpd_t* %15), !dbg !8801
  %tobool17 = icmp ne i32 %call16, 0, !dbg !8801
  br i1 %tobool17, label %if.then.18, label %if.end.19, !dbg !8802

if.then.18:                                       ; preds = %if.end.15
  %16 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8803, !tbaa !2505
  %17 = load i8, i8* %sign, align 1, !dbg !8805, !tbaa !2930
  call void @mpd_setspecial(%struct.mpd_t* %16, i8 zeroext %17, i8 zeroext 2), !dbg !8806
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8807

if.end.19:                                        ; preds = %if.end.15
  %18 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8808, !tbaa !2505
  %call20 = call i32 @mpd_isinfinite(%struct.mpd_t* %18), !dbg !8810
  %tobool21 = icmp ne i32 %call20, 0, !dbg !8810
  br i1 %tobool21, label %if.then.22, label %if.end.23, !dbg !8811

if.then.22:                                       ; preds = %if.end.19
  %19 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8812, !tbaa !2505
  %20 = load i8, i8* %sign, align 1, !dbg !8814, !tbaa !2930
  call void @_settriple(%struct.mpd_t* %19, i8 zeroext %20, i64 0, i64 0), !dbg !8815
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8816

if.end.23:                                        ; preds = %if.end.19
  call void @abort() #9, !dbg !8817
  unreachable, !dbg !8817

if.end.24:                                        ; preds = %lor.lhs.false
  %21 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8818, !tbaa !2505
  %call25 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %21), !dbg !8820
  %tobool26 = icmp ne i32 %call25, 0, !dbg !8820
  br i1 %tobool26, label %if.then.27, label %if.end.32, !dbg !8821

if.then.27:                                       ; preds = %if.end.24
  %22 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8822, !tbaa !2505
  %call28 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %22), !dbg !8825
  %tobool29 = icmp ne i32 %call28, 0, !dbg !8825
  br i1 %tobool29, label %if.then.30, label %if.else, !dbg !8826

if.then.30:                                       ; preds = %if.then.27
  %23 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8827, !tbaa !2505
  %24 = load i32*, i32** %status.addr, align 8, !dbg !8829, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %23, i32 16, i32* %24), !dbg !8830
  br label %if.end.31, !dbg !8831

if.else:                                          ; preds = %if.then.27
  %25 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8832, !tbaa !2505
  %26 = load i8, i8* %sign, align 1, !dbg !8834, !tbaa !2930
  call void @mpd_setspecial(%struct.mpd_t* %25, i8 zeroext %26, i8 zeroext 2), !dbg !8835
  %27 = load i32*, i32** %status.addr, align 8, !dbg !8836, !tbaa !2505
  %28 = load i32, i32* %27, align 4, !dbg !8837, !tbaa !2554
  %or = or i32 %28, 4, !dbg !8837
  store i32 %or, i32* %27, align 4, !dbg !8837, !tbaa !2554
  br label %if.end.31

if.end.31:                                        ; preds = %if.else, %if.then.30
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8838

if.end.32:                                        ; preds = %if.end.24
  %29 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8839, !tbaa !2505
  %30 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8840, !tbaa !2505
  %31 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !8841, !tbaa !2505
  %32 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8842, !tbaa !2505
  %33 = load i32*, i32** %status.addr, align 8, !dbg !8843, !tbaa !2505
  call void @_mpd_qdivmod(%struct.mpd_t* %29, %struct.mpd_t* %r, %struct.mpd_t* %30, %struct.mpd_t* %31, %struct.mpd_context_t* %32, i32* %33), !dbg !8844
  call void @mpd_del(%struct.mpd_t* %r), !dbg !8845
  %34 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !8846, !tbaa !2505
  %35 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8847, !tbaa !2505
  %36 = load i32*, i32** %status.addr, align 8, !dbg !8848, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %34, %struct.mpd_context_t* %35, i32* %36), !dbg !8849
  store i32 0, i32* %cleanup.dest.slot, !dbg !8850
  br label %cleanup, !dbg !8850

cleanup:                                          ; preds = %if.end.32, %if.end.31, %if.then.22, %if.then.18, %if.then.14, %if.then.9
  call void @llvm.lifetime.end(i64 1, i8* %sign) #4, !dbg !8850
  %37 = bitcast %struct.mpd_t* %r to i8*, !dbg !8851
  call void @llvm.lifetime.end(i64 48, i8* %37) #4, !dbg !8851
  %38 = bitcast [64 x i64]* %r_data to i8*, !dbg !8851
  call void @llvm.lifetime.end(i64 512, i8* %38) #4, !dbg !8851
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !8850

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qdiv_ssize(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %maxcontext = alloca %struct.mpd_context_t, align 8
  %bb_data = alloca [64 x i64], align 16
  %bb = alloca %struct.mpd_t, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !927, metadata !2395), !dbg !8853
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !928, metadata !2395), !dbg !8854
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !929, metadata !2395), !dbg !8855
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !930, metadata !2395), !dbg !8856
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !931, metadata !2395), !dbg !8857
  %0 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !8858
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !8858
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxcontext, metadata !932, metadata !2395), !dbg !8859
  %1 = bitcast [64 x i64]* %bb_data to i8*, !dbg !8860
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !8860
  call void @llvm.dbg.declare(metadata [64 x i64]* %bb_data, metadata !933, metadata !2395), !dbg !8861
  %2 = bitcast %struct.mpd_t* %bb to i8*, !dbg !8862
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !8862
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %bb, metadata !934, metadata !2395), !dbg !8863
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 0, !dbg !8864
  store i8 48, i8* %flags, align 1, !dbg !8864, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 1, !dbg !8864
  store i64 0, i64* %exp, align 8, !dbg !8864, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 2, !dbg !8864
  store i64 0, i64* %digits, align 8, !dbg !8864, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 3, !dbg !8864
  store i64 0, i64* %len, align 8, !dbg !8864, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 4, !dbg !8864
  store i64 64, i64* %alloc, align 8, !dbg !8864, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 5, !dbg !8864
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %bb_data, i32 0, i32 0, !dbg !8865
  store i64* %arraydecay, i64** %data, align 8, !dbg !8864, !tbaa !2546
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxcontext), !dbg !8866
  %3 = load i64, i64* %b.addr, align 8, !dbg !8867, !tbaa !2391
  %4 = load i32*, i32** %status.addr, align 8, !dbg !8868, !tbaa !2505
  call void @mpd_qsset_ssize(%struct.mpd_t* %bb, i64 %3, %struct.mpd_context_t* %maxcontext, i32* %4), !dbg !8869
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !8870, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8871, !tbaa !2505
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8872, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !8873, !tbaa !2505
  call void @mpd_qdiv(%struct.mpd_t* %5, %struct.mpd_t* %6, %struct.mpd_t* %bb, %struct.mpd_context_t* %7, i32* %8), !dbg !8874
  call void @mpd_del(%struct.mpd_t* %bb), !dbg !8875
  %9 = bitcast %struct.mpd_t* %bb to i8*, !dbg !8876
  call void @llvm.lifetime.end(i64 48, i8* %9) #4, !dbg !8876
  %10 = bitcast [64 x i64]* %bb_data to i8*, !dbg !8876
  call void @llvm.lifetime.end(i64 512, i8* %10) #4, !dbg !8876
  %11 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !8876
  call void @llvm.lifetime.end(i64 48, i8* %11) #4, !dbg !8876
  ret void, !dbg !8876
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qdiv_uint(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %maxcontext = alloca %struct.mpd_context_t, align 8
  %bb_data = alloca [64 x i64], align 16
  %bb = alloca %struct.mpd_t, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !937, metadata !2395), !dbg !8877
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !938, metadata !2395), !dbg !8878
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !939, metadata !2395), !dbg !8879
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !940, metadata !2395), !dbg !8880
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !941, metadata !2395), !dbg !8881
  %0 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !8882
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !8882
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxcontext, metadata !942, metadata !2395), !dbg !8883
  %1 = bitcast [64 x i64]* %bb_data to i8*, !dbg !8884
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !8884
  call void @llvm.dbg.declare(metadata [64 x i64]* %bb_data, metadata !943, metadata !2395), !dbg !8885
  %2 = bitcast %struct.mpd_t* %bb to i8*, !dbg !8886
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !8886
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %bb, metadata !944, metadata !2395), !dbg !8887
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 0, !dbg !8888
  store i8 48, i8* %flags, align 1, !dbg !8888, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 1, !dbg !8888
  store i64 0, i64* %exp, align 8, !dbg !8888, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 2, !dbg !8888
  store i64 0, i64* %digits, align 8, !dbg !8888, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 3, !dbg !8888
  store i64 0, i64* %len, align 8, !dbg !8888, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 4, !dbg !8888
  store i64 64, i64* %alloc, align 8, !dbg !8888, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 5, !dbg !8888
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %bb_data, i32 0, i32 0, !dbg !8889
  store i64* %arraydecay, i64** %data, align 8, !dbg !8888, !tbaa !2546
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxcontext), !dbg !8890
  %3 = load i64, i64* %b.addr, align 8, !dbg !8891, !tbaa !2391
  %4 = load i32*, i32** %status.addr, align 8, !dbg !8892, !tbaa !2505
  call void @mpd_qsset_uint(%struct.mpd_t* %bb, i64 %3, %struct.mpd_context_t* %maxcontext, i32* %4), !dbg !8893
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !8894, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8895, !tbaa !2505
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8896, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !8897, !tbaa !2505
  call void @mpd_qdiv(%struct.mpd_t* %5, %struct.mpd_t* %6, %struct.mpd_t* %bb, %struct.mpd_context_t* %7, i32* %8), !dbg !8898
  call void @mpd_del(%struct.mpd_t* %bb), !dbg !8899
  %9 = bitcast %struct.mpd_t* %bb to i8*, !dbg !8900
  call void @llvm.lifetime.end(i64 48, i8* %9) #4, !dbg !8900
  %10 = bitcast [64 x i64]* %bb_data to i8*, !dbg !8900
  call void @llvm.lifetime.end(i64 512, i8* %10) #4, !dbg !8900
  %11 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !8900
  call void @llvm.lifetime.end(i64 48, i8* %11) #4, !dbg !8900
  ret void, !dbg !8900
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qdiv_i32(%struct.mpd_t* %result, %struct.mpd_t* %a, i32 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !947, metadata !2395), !dbg !8901
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !948, metadata !2395), !dbg !8902
  store i32 %b, i32* %b.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !949, metadata !2395), !dbg !8903
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !950, metadata !2395), !dbg !8904
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !951, metadata !2395), !dbg !8905
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !8906, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8907, !tbaa !2505
  %2 = load i32, i32* %b.addr, align 4, !dbg !8908, !tbaa !2554
  %conv = sext i32 %2 to i64, !dbg !8908
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8909, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !8910, !tbaa !2505
  call void @mpd_qdiv_ssize(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %conv, %struct.mpd_context_t* %3, i32* %4), !dbg !8911
  ret void, !dbg !8912
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qdiv_u32(%struct.mpd_t* %result, %struct.mpd_t* %a, i32 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !954, metadata !2395), !dbg !8913
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !955, metadata !2395), !dbg !8914
  store i32 %b, i32* %b.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !956, metadata !2395), !dbg !8915
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !957, metadata !2395), !dbg !8916
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !958, metadata !2395), !dbg !8917
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !8918, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8919, !tbaa !2505
  %2 = load i32, i32* %b.addr, align 4, !dbg !8920, !tbaa !2554
  %conv = zext i32 %2 to i64, !dbg !8920
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8921, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !8922, !tbaa !2505
  call void @mpd_qdiv_uint(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %conv, %struct.mpd_context_t* %3, i32* %4), !dbg !8923
  ret void, !dbg !8924
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qdiv_i64(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !961, metadata !2395), !dbg !8925
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !962, metadata !2395), !dbg !8926
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !963, metadata !2395), !dbg !8927
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !964, metadata !2395), !dbg !8928
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !965, metadata !2395), !dbg !8929
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !8930, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8931, !tbaa !2505
  %2 = load i64, i64* %b.addr, align 8, !dbg !8932, !tbaa !2391
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8933, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !8934, !tbaa !2505
  call void @mpd_qdiv_ssize(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %2, %struct.mpd_context_t* %3, i32* %4), !dbg !8935
  ret void, !dbg !8936
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qdiv_u64(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !968, metadata !2395), !dbg !8937
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !969, metadata !2395), !dbg !8938
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !970, metadata !2395), !dbg !8939
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !971, metadata !2395), !dbg !8940
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !972, metadata !2395), !dbg !8941
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !8942, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8943, !tbaa !2505
  %2 = load i64, i64* %b.addr, align 8, !dbg !8944, !tbaa !2391
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8945, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !8946, !tbaa !2505
  call void @mpd_qdiv_uint(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %2, %struct.mpd_context_t* %3, i32* %4), !dbg !8947
  ret void, !dbg !8948
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qexp(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workctx = alloca %struct.mpd_context_t, align 8
  %cleanup.dest.slot = alloca i32
  %t1_data = alloca [64 x i64], align 16
  %t1 = alloca %struct.mpd_t, align 8
  %t2_data = alloca [64 x i64], align 16
  %t2 = alloca %struct.mpd_t, align 8
  %ulp_data = alloca [64 x i64], align 16
  %ulp = alloca %struct.mpd_t, align 8
  %aa_data = alloca [64 x i64], align 16
  %aa = alloca %struct.mpd_t, align 8
  %prec = alloca i64, align 8
  %ulpexp = alloca i64, align 8
  %workstatus = alloca i32, align 4
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !975, metadata !2395), !dbg !8949
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !976, metadata !2395), !dbg !8950
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !977, metadata !2395), !dbg !8951
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !978, metadata !2395), !dbg !8952
  %0 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !8953
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !8953
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %workctx, metadata !979, metadata !2395), !dbg !8954
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8955, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %1), !dbg !8957
  %tobool = icmp ne i32 %call, 0, !dbg !8957
  br i1 %tobool, label %if.then, label %if.end.8, !dbg !8958

if.then:                                          ; preds = %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !8959, !tbaa !2505
  %3 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8962, !tbaa !2505
  %4 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8963, !tbaa !2505
  %5 = load i32*, i32** %status.addr, align 8, !dbg !8964, !tbaa !2505
  %call1 = call i32 @mpd_qcheck_nan(%struct.mpd_t* %2, %struct.mpd_t* %3, %struct.mpd_context_t* %4, i32* %5), !dbg !8965
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8965
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !8966

if.then.3:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.80, !dbg !8967

if.end:                                           ; preds = %if.then
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8969, !tbaa !2505
  %call4 = call i32 @mpd_isnegative(%struct.mpd_t* %6), !dbg !8971
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8971
  br i1 %tobool5, label %if.then.6, label %if.else, !dbg !8972

if.then.6:                                        ; preds = %if.end
  %7 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !8973, !tbaa !2505
  call void @_settriple(%struct.mpd_t* %7, i8 zeroext 0, i64 0, i64 0), !dbg !8975
  br label %if.end.7, !dbg !8976

if.else:                                          ; preds = %if.end
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !8977, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %8, i8 zeroext 0, i8 zeroext 2), !dbg !8979
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.80, !dbg !8980

if.end.8:                                         ; preds = %entry
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !8981, !tbaa !2505
  %call9 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %9), !dbg !8983
  %tobool10 = icmp ne i32 %call9, 0, !dbg !8983
  br i1 %tobool10, label %if.then.11, label %if.end.12, !dbg !8984

if.then.11:                                       ; preds = %if.end.8
  %10 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !8985, !tbaa !2505
  call void @_settriple(%struct.mpd_t* %10, i8 zeroext 0, i64 1, i64 0), !dbg !8987
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.80, !dbg !8988

if.end.12:                                        ; preds = %if.end.8
  %11 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8989, !tbaa !2505
  %12 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !8990
  %13 = bitcast %struct.mpd_context_t* %11 to i8*, !dbg !8990
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 48, i32 8, i1 false), !dbg !8990, !tbaa.struct !8991
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 6, !dbg !8992
  store i32 6, i32* %round, align 4, !dbg !8993, !tbaa !4148
  %14 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !8994, !tbaa !2505
  %allcr = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %14, i32 0, i32 8, !dbg !8995
  %15 = load i32, i32* %allcr, align 4, !dbg !8995, !tbaa !8996
  %tobool13 = icmp ne i32 %15, 0, !dbg !8994
  br i1 %tobool13, label %if.then.14, label %if.else.78, !dbg !8997

if.then.14:                                       ; preds = %if.end.12
  %16 = bitcast [64 x i64]* %t1_data to i8*, !dbg !8998
  call void @llvm.lifetime.start(i64 512, i8* %16) #4, !dbg !8998
  call void @llvm.dbg.declare(metadata [64 x i64]* %t1_data, metadata !980, metadata !2395), !dbg !8999
  %17 = bitcast %struct.mpd_t* %t1 to i8*, !dbg !9000
  call void @llvm.lifetime.start(i64 48, i8* %17) #4, !dbg !9000
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %t1, metadata !983, metadata !2395), !dbg !9001
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 0, !dbg !9002
  store i8 48, i8* %flags, align 1, !dbg !9002, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 1, !dbg !9002
  store i64 0, i64* %exp, align 8, !dbg !9002, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 2, !dbg !9002
  store i64 0, i64* %digits, align 8, !dbg !9002, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 3, !dbg !9002
  store i64 0, i64* %len, align 8, !dbg !9002, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 4, !dbg !9002
  store i64 64, i64* %alloc, align 8, !dbg !9002, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 5, !dbg !9002
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %t1_data, i32 0, i32 0, !dbg !9003
  store i64* %arraydecay, i64** %data, align 8, !dbg !9002, !tbaa !2546
  %18 = bitcast [64 x i64]* %t2_data to i8*, !dbg !9004
  call void @llvm.lifetime.start(i64 512, i8* %18) #4, !dbg !9004
  call void @llvm.dbg.declare(metadata [64 x i64]* %t2_data, metadata !984, metadata !2395), !dbg !9005
  %19 = bitcast %struct.mpd_t* %t2 to i8*, !dbg !9006
  call void @llvm.lifetime.start(i64 48, i8* %19) #4, !dbg !9006
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %t2, metadata !985, metadata !2395), !dbg !9007
  %flags15 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 0, !dbg !9008
  store i8 48, i8* %flags15, align 1, !dbg !9008, !tbaa !2620
  %exp16 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 1, !dbg !9008
  store i64 0, i64* %exp16, align 8, !dbg !9008, !tbaa !2510
  %digits17 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 2, !dbg !9008
  store i64 0, i64* %digits17, align 8, !dbg !9008, !tbaa !2514
  %len18 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 3, !dbg !9008
  store i64 0, i64* %len18, align 8, !dbg !9008, !tbaa !2542
  %alloc19 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 4, !dbg !9008
  store i64 64, i64* %alloc19, align 8, !dbg !9008, !tbaa !2835
  %data20 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 5, !dbg !9008
  %arraydecay21 = getelementptr inbounds [64 x i64], [64 x i64]* %t2_data, i32 0, i32 0, !dbg !9009
  store i64* %arraydecay21, i64** %data20, align 8, !dbg !9008, !tbaa !2546
  %20 = bitcast [64 x i64]* %ulp_data to i8*, !dbg !9010
  call void @llvm.lifetime.start(i64 512, i8* %20) #4, !dbg !9010
  call void @llvm.dbg.declare(metadata [64 x i64]* %ulp_data, metadata !986, metadata !2395), !dbg !9011
  %21 = bitcast %struct.mpd_t* %ulp to i8*, !dbg !9012
  call void @llvm.lifetime.start(i64 48, i8* %21) #4, !dbg !9012
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %ulp, metadata !987, metadata !2395), !dbg !9013
  %flags22 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 0, !dbg !9014
  store i8 48, i8* %flags22, align 1, !dbg !9014, !tbaa !2620
  %exp23 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 1, !dbg !9014
  store i64 0, i64* %exp23, align 8, !dbg !9014, !tbaa !2510
  %digits24 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 2, !dbg !9014
  store i64 0, i64* %digits24, align 8, !dbg !9014, !tbaa !2514
  %len25 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 3, !dbg !9014
  store i64 0, i64* %len25, align 8, !dbg !9014, !tbaa !2542
  %alloc26 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 4, !dbg !9014
  store i64 64, i64* %alloc26, align 8, !dbg !9014, !tbaa !2835
  %data27 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 5, !dbg !9014
  %arraydecay28 = getelementptr inbounds [64 x i64], [64 x i64]* %ulp_data, i32 0, i32 0, !dbg !9015
  store i64* %arraydecay28, i64** %data27, align 8, !dbg !9014, !tbaa !2546
  %22 = bitcast [64 x i64]* %aa_data to i8*, !dbg !9016
  call void @llvm.lifetime.start(i64 512, i8* %22) #4, !dbg !9016
  call void @llvm.dbg.declare(metadata [64 x i64]* %aa_data, metadata !988, metadata !2395), !dbg !9017
  %23 = bitcast %struct.mpd_t* %aa to i8*, !dbg !9018
  call void @llvm.lifetime.start(i64 48, i8* %23) #4, !dbg !9018
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %aa, metadata !989, metadata !2395), !dbg !9019
  %flags29 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 0, !dbg !9020
  store i8 48, i8* %flags29, align 1, !dbg !9020, !tbaa !2620
  %exp30 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 1, !dbg !9020
  store i64 0, i64* %exp30, align 8, !dbg !9020, !tbaa !2510
  %digits31 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 2, !dbg !9020
  store i64 0, i64* %digits31, align 8, !dbg !9020, !tbaa !2514
  %len32 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 3, !dbg !9020
  store i64 0, i64* %len32, align 8, !dbg !9020, !tbaa !2542
  %alloc33 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 4, !dbg !9020
  store i64 64, i64* %alloc33, align 8, !dbg !9020, !tbaa !2835
  %data34 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 5, !dbg !9020
  %arraydecay35 = getelementptr inbounds [64 x i64], [64 x i64]* %aa_data, i32 0, i32 0, !dbg !9021
  store i64* %arraydecay35, i64** %data34, align 8, !dbg !9020, !tbaa !2546
  %24 = bitcast i64* %prec to i8*, !dbg !9022
  call void @llvm.lifetime.start(i64 8, i8* %24) #4, !dbg !9022
  call void @llvm.dbg.declare(metadata i64* %prec, metadata !990, metadata !2395), !dbg !9023
  %25 = bitcast i64* %ulpexp to i8*, !dbg !9024
  call void @llvm.lifetime.start(i64 8, i8* %25) #4, !dbg !9024
  call void @llvm.dbg.declare(metadata i64* %ulpexp, metadata !991, metadata !2395), !dbg !9025
  %26 = bitcast i32* %workstatus to i8*, !dbg !9026
  call void @llvm.lifetime.start(i64 4, i8* %26) #4, !dbg !9026
  call void @llvm.dbg.declare(metadata i32* %workstatus, metadata !992, metadata !2395), !dbg !9027
  %27 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9028, !tbaa !2505
  %28 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9030, !tbaa !2505
  %cmp = icmp eq %struct.mpd_t* %27, %28, !dbg !9031
  br i1 %cmp, label %if.then.36, label %if.end.41, !dbg !9032

if.then.36:                                       ; preds = %if.then.14
  %29 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9033, !tbaa !2505
  %30 = load i32*, i32** %status.addr, align 8, !dbg !9036, !tbaa !2505
  %call37 = call i32 @mpd_qcopy(%struct.mpd_t* %aa, %struct.mpd_t* %29, i32* %30), !dbg !9037
  %tobool38 = icmp ne i32 %call37, 0, !dbg !9037
  br i1 %tobool38, label %if.end.40, label %if.then.39, !dbg !9038

if.then.39:                                       ; preds = %if.then.36
  %31 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9039, !tbaa !2505
  %32 = load i32*, i32** %status.addr, align 8, !dbg !9041, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %31, i32 512, i32* %32), !dbg !9042
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9043

if.end.40:                                        ; preds = %if.then.36
  store %struct.mpd_t* %aa, %struct.mpd_t** %a.addr, align 8, !dbg !9044, !tbaa !2505
  br label %if.end.41, !dbg !9045

if.end.41:                                        ; preds = %if.end.40, %if.then.14
  %clamp = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 7, !dbg !9046
  store i32 0, i32* %clamp, align 4, !dbg !9047, !tbaa !3962
  %33 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9048, !tbaa !2505
  %prec42 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %33, i32 0, i32 0, !dbg !9049
  %34 = load i64, i64* %prec42, align 8, !dbg !9049, !tbaa !2526
  %add = add i64 %34, 3, !dbg !9050
  store i64 %add, i64* %prec, align 8, !dbg !9051, !tbaa !2391
  br label %while.cond, !dbg !9052

while.cond:                                       ; preds = %if.end.66, %if.end.41
  br label %while.body, !dbg !9053

while.body:                                       ; preds = %while.cond
  %35 = load i64, i64* %prec, align 8, !dbg !9056, !tbaa !2391
  %prec43 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !9058
  store i64 %35, i64* %prec43, align 8, !dbg !9059, !tbaa !2526
  store i32 0, i32* %workstatus, align 4, !dbg !9060, !tbaa !2554
  %36 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9061, !tbaa !2505
  %37 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9062, !tbaa !2505
  call void @_mpd_qexp(%struct.mpd_t* %36, %struct.mpd_t* %37, %struct.mpd_context_t* %workctx, i32* %workstatus), !dbg !9063
  %38 = load i32, i32* %workstatus, align 4, !dbg !9064, !tbaa !2554
  %39 = load i32*, i32** %status.addr, align 8, !dbg !9065, !tbaa !2505
  %40 = load i32, i32* %39, align 4, !dbg !9066, !tbaa !2554
  %or = or i32 %40, %38, !dbg !9066
  store i32 %or, i32* %39, align 4, !dbg !9066, !tbaa !2554
  %41 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9067, !tbaa !2505
  %exp44 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %41, i32 0, i32 1, !dbg !9068
  %42 = load i64, i64* %exp44, align 8, !dbg !9068, !tbaa !2510
  %43 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9069, !tbaa !2505
  %digits45 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %43, i32 0, i32 2, !dbg !9070
  %44 = load i64, i64* %digits45, align 8, !dbg !9070, !tbaa !2514
  %add46 = add i64 %42, %44, !dbg !9071
  %prec47 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !9072
  %45 = load i64, i64* %prec47, align 8, !dbg !9072, !tbaa !2526
  %sub = sub i64 %add46, %45, !dbg !9073
  store i64 %sub, i64* %ulpexp, align 8, !dbg !9074, !tbaa !2391
  %46 = load i32, i32* %workstatus, align 4, !dbg !9075, !tbaa !2554
  %and = and i32 %46, 16384, !dbg !9077
  %tobool48 = icmp ne i32 %and, 0, !dbg !9077
  br i1 %tobool48, label %if.then.49, label %if.end.51, !dbg !9078

if.then.49:                                       ; preds = %while.body
  %47 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9079, !tbaa !2505
  %exp50 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %47, i32 0, i32 1, !dbg !9081
  %48 = load i64, i64* %exp50, align 8, !dbg !9081, !tbaa !2510
  store i64 %48, i64* %ulpexp, align 8, !dbg !9082, !tbaa !2391
  br label %if.end.51, !dbg !9083

if.end.51:                                        ; preds = %if.then.49, %while.body
  %49 = load i64, i64* %ulpexp, align 8, !dbg !9084, !tbaa !2391
  call void @_ssettriple(%struct.mpd_t* %ulp, i8 zeroext 0, i64 1, i64 %49), !dbg !9085
  %50 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9086, !tbaa !2505
  %prec52 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %50, i32 0, i32 0, !dbg !9087
  %51 = load i64, i64* %prec52, align 8, !dbg !9087, !tbaa !2526
  %prec53 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !9088
  store i64 %51, i64* %prec53, align 8, !dbg !9089, !tbaa !2526
  %52 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9090, !tbaa !2505
  %status54 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !9091
  call void @mpd_qadd(%struct.mpd_t* %t1, %struct.mpd_t* %52, %struct.mpd_t* %ulp, %struct.mpd_context_t* %workctx, i32* %status54), !dbg !9092
  %53 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9093, !tbaa !2505
  %status55 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !9094
  call void @mpd_qsub(%struct.mpd_t* %t2, %struct.mpd_t* %53, %struct.mpd_t* %ulp, %struct.mpd_context_t* %workctx, i32* %status55), !dbg !9095
  %54 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9096, !tbaa !2505
  %call56 = call i32 @mpd_isspecial(%struct.mpd_t* %54), !dbg !9098
  %tobool57 = icmp ne i32 %call56, 0, !dbg !9098
  br i1 %tobool57, label %if.then.63, label %lor.lhs.false, !dbg !9099

lor.lhs.false:                                    ; preds = %if.end.51
  %55 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9100, !tbaa !2505
  %call58 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %55), !dbg !9102
  %tobool59 = icmp ne i32 %call58, 0, !dbg !9102
  br i1 %tobool59, label %if.then.63, label %lor.lhs.false.60, !dbg !9103

lor.lhs.false.60:                                 ; preds = %lor.lhs.false
  %56 = load i32*, i32** %status.addr, align 8, !dbg !9104, !tbaa !2505
  %call61 = call i32 @mpd_qcmp(%struct.mpd_t* %t1, %struct.mpd_t* %t2, i32* %56), !dbg !9105
  %cmp62 = icmp eq i32 %call61, 0, !dbg !9106
  br i1 %cmp62, label %if.then.63, label %if.end.66, !dbg !9107

if.then.63:                                       ; preds = %lor.lhs.false.60, %lor.lhs.false, %if.end.51
  %57 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9108, !tbaa !2505
  %clamp64 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %57, i32 0, i32 7, !dbg !9110
  %58 = load i32, i32* %clamp64, align 4, !dbg !9110, !tbaa !3962
  %clamp65 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 7, !dbg !9111
  store i32 %58, i32* %clamp65, align 4, !dbg !9112, !tbaa !3962
  %59 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9113, !tbaa !2505
  %60 = load i32*, i32** %status.addr, align 8, !dbg !9114, !tbaa !2505
  call void @_mpd_zeropad(%struct.mpd_t* %59, %struct.mpd_context_t* %workctx, i32* %60), !dbg !9115
  %61 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9116, !tbaa !2505
  %62 = load i32*, i32** %status.addr, align 8, !dbg !9117, !tbaa !2505
  call void @mpd_check_underflow(%struct.mpd_t* %61, %struct.mpd_context_t* %workctx, i32* %62), !dbg !9118
  %63 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9119, !tbaa !2505
  %64 = load i32*, i32** %status.addr, align 8, !dbg !9120, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %63, %struct.mpd_context_t* %workctx, i32* %64), !dbg !9121
  br label %while.end, !dbg !9122

if.end.66:                                        ; preds = %lor.lhs.false.60
  %65 = load i64, i64* %prec, align 8, !dbg !9123, !tbaa !2391
  %add67 = add i64 %65, 19, !dbg !9123
  store i64 %add67, i64* %prec, align 8, !dbg !9123, !tbaa !2391
  br label %while.cond, !dbg !9052

while.end:                                        ; preds = %if.then.63
  call void @mpd_del(%struct.mpd_t* %t1), !dbg !9124
  call void @mpd_del(%struct.mpd_t* %t2), !dbg !9125
  call void @mpd_del(%struct.mpd_t* %ulp), !dbg !9126
  call void @mpd_del(%struct.mpd_t* %aa), !dbg !9127
  store i32 0, i32* %cleanup.dest.slot, !dbg !9128
  br label %cleanup, !dbg !9128

cleanup:                                          ; preds = %while.end, %if.then.39
  %66 = bitcast i32* %workstatus to i8*, !dbg !9129
  call void @llvm.lifetime.end(i64 4, i8* %66) #4, !dbg !9129
  %67 = bitcast i64* %ulpexp to i8*, !dbg !9129
  call void @llvm.lifetime.end(i64 8, i8* %67) #4, !dbg !9129
  %68 = bitcast i64* %prec to i8*, !dbg !9129
  call void @llvm.lifetime.end(i64 8, i8* %68) #4, !dbg !9129
  %69 = bitcast %struct.mpd_t* %aa to i8*, !dbg !9129
  call void @llvm.lifetime.end(i64 48, i8* %69) #4, !dbg !9129
  %70 = bitcast [64 x i64]* %aa_data to i8*, !dbg !9129
  call void @llvm.lifetime.end(i64 512, i8* %70) #4, !dbg !9129
  %71 = bitcast %struct.mpd_t* %ulp to i8*, !dbg !9129
  call void @llvm.lifetime.end(i64 48, i8* %71) #4, !dbg !9129
  %72 = bitcast [64 x i64]* %ulp_data to i8*, !dbg !9129
  call void @llvm.lifetime.end(i64 512, i8* %72) #4, !dbg !9129
  %73 = bitcast %struct.mpd_t* %t2 to i8*, !dbg !9129
  call void @llvm.lifetime.end(i64 48, i8* %73) #4, !dbg !9129
  %74 = bitcast [64 x i64]* %t2_data to i8*, !dbg !9129
  call void @llvm.lifetime.end(i64 512, i8* %74) #4, !dbg !9129
  %75 = bitcast %struct.mpd_t* %t1 to i8*, !dbg !9129
  call void @llvm.lifetime.end(i64 48, i8* %75) #4, !dbg !9129
  %76 = bitcast [64 x i64]* %t1_data to i8*, !dbg !9129
  call void @llvm.lifetime.end(i64 512, i8* %76) #4, !dbg !9129
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.79, !dbg !9131

if.else.78:                                       ; preds = %if.end.12
  %77 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9132, !tbaa !2505
  %78 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9134, !tbaa !2505
  %79 = load i32*, i32** %status.addr, align 8, !dbg !9135, !tbaa !2505
  call void @_mpd_qexp(%struct.mpd_t* %77, %struct.mpd_t* %78, %struct.mpd_context_t* %workctx, i32* %79), !dbg !9136
  %80 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9137, !tbaa !2505
  %81 = load i32*, i32** %status.addr, align 8, !dbg !9138, !tbaa !2505
  call void @_mpd_zeropad(%struct.mpd_t* %80, %struct.mpd_context_t* %workctx, i32* %81), !dbg !9139
  %82 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9140, !tbaa !2505
  %83 = load i32*, i32** %status.addr, align 8, !dbg !9141, !tbaa !2505
  call void @mpd_check_underflow(%struct.mpd_t* %82, %struct.mpd_context_t* %workctx, i32* %83), !dbg !9142
  %84 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9143, !tbaa !2505
  %85 = load i32*, i32** %status.addr, align 8, !dbg !9144, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %84, %struct.mpd_context_t* %workctx, i32* %85), !dbg !9145
  br label %if.end.79

if.end.79:                                        ; preds = %if.else.78, %cleanup.cont
  store i32 0, i32* %cleanup.dest.slot, !dbg !9146
  br label %cleanup.80, !dbg !9146

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.80

cleanup.80:                                       ; preds = %NewDefault, %if.end.79, %if.then.11, %if.end.7, %if.then.3
  %86 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !9147
  call void @llvm.lifetime.end(i64 48, i8* %86) #4, !dbg !9147
  %cleanup.dest.81 = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont.82

cleanup.cont.82:                                  ; preds = %cleanup.80
  ret void, !dbg !9146

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qexp(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workctx = alloca %struct.mpd_context_t, align 8
  %tmp_data = alloca [64 x i64], align 16
  %tmp = alloca %struct.mpd_t, align 8
  %sum_data = alloca [64 x i64], align 16
  %sum = alloca %struct.mpd_t, align 8
  %word_data = alloca [1 x i64], align 8
  %word = alloca %struct.mpd_t, align 8
  %j = alloca i64, align 8
  %n = alloca i64, align 8
  %t = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1803, metadata !2395), !dbg !9149
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1804, metadata !2395), !dbg !9150
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1805, metadata !2395), !dbg !9151
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1806, metadata !2395), !dbg !9152
  %0 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !9153
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !9153
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %workctx, metadata !1807, metadata !2395), !dbg !9154
  %1 = bitcast [64 x i64]* %tmp_data to i8*, !dbg !9155
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !9155
  call void @llvm.dbg.declare(metadata [64 x i64]* %tmp_data, metadata !1808, metadata !2395), !dbg !9156
  %2 = bitcast %struct.mpd_t* %tmp to i8*, !dbg !9157
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !9157
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %tmp, metadata !1809, metadata !2395), !dbg !9158
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 0, !dbg !9159
  store i8 48, i8* %flags, align 1, !dbg !9159, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 1, !dbg !9159
  store i64 0, i64* %exp, align 8, !dbg !9159, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 2, !dbg !9159
  store i64 0, i64* %digits, align 8, !dbg !9159, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 3, !dbg !9159
  store i64 0, i64* %len, align 8, !dbg !9159, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 4, !dbg !9159
  store i64 64, i64* %alloc, align 8, !dbg !9159, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 5, !dbg !9159
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %tmp_data, i32 0, i32 0, !dbg !9160
  store i64* %arraydecay, i64** %data, align 8, !dbg !9159, !tbaa !2546
  %3 = bitcast [64 x i64]* %sum_data to i8*, !dbg !9161
  call void @llvm.lifetime.start(i64 512, i8* %3) #4, !dbg !9161
  call void @llvm.dbg.declare(metadata [64 x i64]* %sum_data, metadata !1810, metadata !2395), !dbg !9162
  %4 = bitcast %struct.mpd_t* %sum to i8*, !dbg !9163
  call void @llvm.lifetime.start(i64 48, i8* %4) #4, !dbg !9163
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %sum, metadata !1811, metadata !2395), !dbg !9164
  %flags3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %sum, i32 0, i32 0, !dbg !9165
  store i8 48, i8* %flags3, align 1, !dbg !9165, !tbaa !2620
  %exp4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %sum, i32 0, i32 1, !dbg !9165
  store i64 0, i64* %exp4, align 8, !dbg !9165, !tbaa !2510
  %digits5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %sum, i32 0, i32 2, !dbg !9165
  store i64 0, i64* %digits5, align 8, !dbg !9165, !tbaa !2514
  %len6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %sum, i32 0, i32 3, !dbg !9165
  store i64 0, i64* %len6, align 8, !dbg !9165, !tbaa !2542
  %alloc7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %sum, i32 0, i32 4, !dbg !9165
  store i64 64, i64* %alloc7, align 8, !dbg !9165, !tbaa !2835
  %data8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %sum, i32 0, i32 5, !dbg !9165
  %arraydecay9 = getelementptr inbounds [64 x i64], [64 x i64]* %sum_data, i32 0, i32 0, !dbg !9166
  store i64* %arraydecay9, i64** %data8, align 8, !dbg !9165, !tbaa !2546
  %5 = bitcast [1 x i64]* %word_data to i8*, !dbg !9167
  call void @llvm.lifetime.start(i64 8, i8* %5) #4, !dbg !9167
  call void @llvm.dbg.declare(metadata [1 x i64]* %word_data, metadata !1812, metadata !2395), !dbg !9168
  %6 = bitcast [1 x i64]* %word_data to i8*, !dbg !9168
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* bitcast ([1 x i64]* @_mpd_qexp.word_data to i8*), i64 8, i32 8, i1 false), !dbg !9168
  %7 = bitcast %struct.mpd_t* %word to i8*, !dbg !9169
  call void @llvm.lifetime.start(i64 48, i8* %7) #4, !dbg !9169
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %word, metadata !1813, metadata !2395), !dbg !9170
  %flags12 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %word, i32 0, i32 0, !dbg !9171
  store i8 -112, i8* %flags12, align 1, !dbg !9171, !tbaa !2620
  %exp13 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %word, i32 0, i32 1, !dbg !9171
  store i64 0, i64* %exp13, align 8, !dbg !9171, !tbaa !2510
  %digits14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %word, i32 0, i32 2, !dbg !9171
  store i64 1, i64* %digits14, align 8, !dbg !9171, !tbaa !2514
  %len15 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %word, i32 0, i32 3, !dbg !9171
  store i64 1, i64* %len15, align 8, !dbg !9171, !tbaa !2542
  %alloc16 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %word, i32 0, i32 4, !dbg !9171
  store i64 1, i64* %alloc16, align 8, !dbg !9171, !tbaa !2835
  %data17 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %word, i32 0, i32 5, !dbg !9171
  %arraydecay18 = getelementptr inbounds [1 x i64], [1 x i64]* %word_data, i32 0, i32 0, !dbg !9172
  store i64* %arraydecay18, i64** %data17, align 8, !dbg !9171, !tbaa !2546
  %8 = bitcast i64* %j to i8*, !dbg !9173
  call void @llvm.lifetime.start(i64 8, i8* %8) #4, !dbg !9173
  call void @llvm.dbg.declare(metadata i64* %j, metadata !1814, metadata !2395), !dbg !9174
  %9 = bitcast i64* %n to i8*, !dbg !9173
  call void @llvm.lifetime.start(i64 8, i8* %9) #4, !dbg !9173
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1815, metadata !2395), !dbg !9175
  %10 = bitcast i64* %t to i8*, !dbg !9173
  call void @llvm.lifetime.start(i64 8, i8* %10) #4, !dbg !9173
  call void @llvm.dbg.declare(metadata i64* %t, metadata !1816, metadata !2395), !dbg !9176
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9177, !tbaa !2505
  %call = call i32 @mpd_iszerocoeff(%struct.mpd_t* %11), !dbg !9179
  %tobool = icmp ne i32 %call, 0, !dbg !9179
  br i1 %tobool, label %if.then, label %if.end, !dbg !9180

if.then:                                          ; preds = %entry
  %12 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9181, !tbaa !2505
  call void @_settriple(%struct.mpd_t* %12, i8 zeroext 0, i64 1, i64 0), !dbg !9183
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9184

if.end:                                           ; preds = %entry
  %13 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9185, !tbaa !2505
  %digits22 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %13, i32 0, i32 2, !dbg !9186
  %14 = load i64, i64* %digits22, align 8, !dbg !9186, !tbaa !2514
  %15 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9187, !tbaa !2505
  %exp23 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %15, i32 0, i32 1, !dbg !9188
  %16 = load i64, i64* %exp23, align 8, !dbg !9188, !tbaa !2510
  %add = add i64 %14, %16, !dbg !9189
  store i64 %add, i64* %t, align 8, !dbg !9190, !tbaa !2391
  %17 = load i64, i64* %t, align 8, !dbg !9191, !tbaa !2391
  %cmp = icmp sgt i64 %17, 0, !dbg !9192
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9193

cond.true:                                        ; preds = %if.end
  %18 = load i64, i64* %t, align 8, !dbg !9194, !tbaa !2391
  br label %cond.end, !dbg !9193

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !9196

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %18, %cond.true ], [ 0, %cond.false ], !dbg !9193
  store i64 %cond, i64* %t, align 8, !dbg !9198, !tbaa !2391
  %19 = load i64, i64* %t, align 8, !dbg !9201, !tbaa !2391
  %cmp24 = icmp sgt i64 %19, 19, !dbg !9203
  br i1 %cmp24, label %if.then.25, label %if.end.32, !dbg !9204

if.then.25:                                       ; preds = %cond.end
  %20 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9205, !tbaa !2505
  %call26 = call i32 @mpd_ispositive(%struct.mpd_t* %20), !dbg !9208
  %tobool27 = icmp ne i32 %call26, 0, !dbg !9208
  br i1 %tobool27, label %if.then.28, label %if.else, !dbg !9209

if.then.28:                                       ; preds = %if.then.25
  %21 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9210, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %21, i8 zeroext 0, i8 zeroext 2), !dbg !9212
  %22 = load i32*, i32** %status.addr, align 8, !dbg !9213, !tbaa !2505
  %23 = load i32, i32* %22, align 4, !dbg !9214, !tbaa !2554
  %or = or i32 %23, 6208, !dbg !9214
  store i32 %or, i32* %22, align 4, !dbg !9214, !tbaa !2554
  br label %if.end.31, !dbg !9215

if.else:                                          ; preds = %if.then.25
  %24 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9216, !tbaa !2505
  %25 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9218, !tbaa !2505
  %call29 = call i64 @mpd_etiny(%struct.mpd_context_t* %25), !dbg !9219
  call void @_settriple(%struct.mpd_t* %24, i8 zeroext 0, i64 0, i64 %call29), !dbg !9220
  %26 = load i32*, i32** %status.addr, align 8, !dbg !9221, !tbaa !2505
  %27 = load i32, i32* %26, align 4, !dbg !9222, !tbaa !2554
  %or30 = or i32 %27, 28737, !dbg !9222
  store i32 %or30, i32* %26, align 4, !dbg !9222, !tbaa !2554
  br label %if.end.31

if.end.31:                                        ; preds = %if.else, %if.then.28
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9223

if.end.32:                                        ; preds = %cond.end
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9224, !tbaa !2505
  %29 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9226, !tbaa !2505
  %30 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9227, !tbaa !2505
  %31 = load i32*, i32** %status.addr, align 8, !dbg !9228, !tbaa !2505
  %call33 = call i32 @_mpd_qexp_check_one(%struct.mpd_t* %28, %struct.mpd_t* %29, %struct.mpd_context_t* %30, i32* %31), !dbg !9229
  %tobool34 = icmp ne i32 %call33, 0, !dbg !9229
  br i1 %tobool34, label %if.then.35, label %if.end.36, !dbg !9230

if.then.35:                                       ; preds = %if.end.32
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9231

if.end.36:                                        ; preds = %if.end.32
  call void @mpd_maxcontext(%struct.mpd_context_t* %workctx), !dbg !9233
  %32 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9234, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %32, i32 0, i32 0, !dbg !9235
  %33 = load i64, i64* %prec, align 8, !dbg !9235, !tbaa !2526
  %34 = load i64, i64* %t, align 8, !dbg !9236, !tbaa !2391
  %add37 = add i64 %33, %34, !dbg !9237
  %add38 = add i64 %add37, 2, !dbg !9238
  %prec39 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !9239
  store i64 %add38, i64* %prec39, align 8, !dbg !9240, !tbaa !2526
  %prec40 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !9241
  %35 = load i64, i64* %prec40, align 8, !dbg !9241, !tbaa !2526
  %cmp41 = icmp slt i64 %35, 10, !dbg !9242
  br i1 %cmp41, label %cond.true.42, label %cond.false.43, !dbg !9243

cond.true.42:                                     ; preds = %if.end.36
  br label %cond.end.45, !dbg !9244

cond.false.43:                                    ; preds = %if.end.36
  %prec44 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !9245
  %36 = load i64, i64* %prec44, align 8, !dbg !9245, !tbaa !2526
  br label %cond.end.45, !dbg !9243

cond.end.45:                                      ; preds = %cond.false.43, %cond.true.42
  %cond46 = phi i64 [ 10, %cond.true.42 ], [ %36, %cond.false.43 ], !dbg !9243
  %prec47 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !9246
  store i64 %cond46, i64* %prec47, align 8, !dbg !9247, !tbaa !2526
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 6, !dbg !9248
  store i32 6, i32* %round, align 4, !dbg !9249, !tbaa !4148
  %37 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9250, !tbaa !2505
  %38 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9252, !tbaa !2505
  %39 = load i32*, i32** %status.addr, align 8, !dbg !9253, !tbaa !2505
  %call48 = call i32 @mpd_qcopy(%struct.mpd_t* %37, %struct.mpd_t* %38, i32* %39), !dbg !9254
  %tobool49 = icmp ne i32 %call48, 0, !dbg !9254
  br i1 %tobool49, label %if.end.51, label %if.then.50, !dbg !9255

if.then.50:                                       ; preds = %cond.end.45
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9256

if.end.51:                                        ; preds = %cond.end.45
  %40 = load i64, i64* %t, align 8, !dbg !9258, !tbaa !2391
  %41 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9259, !tbaa !2505
  %exp52 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %41, i32 0, i32 1, !dbg !9260
  %42 = load i64, i64* %exp52, align 8, !dbg !9261, !tbaa !2510
  %sub = sub i64 %42, %40, !dbg !9261
  store i64 %sub, i64* %exp52, align 8, !dbg !9261, !tbaa !2510
  %43 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9262, !tbaa !2505
  %prec53 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !9263
  %44 = load i64, i64* %prec53, align 8, !dbg !9263, !tbaa !2526
  %call54 = call i64 @_mpd_get_exp_iterations(%struct.mpd_t* %43, i64 %44), !dbg !9264
  store i64 %call54, i64* %n, align 8, !dbg !9265, !tbaa !2391
  %45 = load i64, i64* %n, align 8, !dbg !9266, !tbaa !2391
  %cmp55 = icmp eq i64 %45, 9223372036854775807, !dbg !9268
  br i1 %cmp55, label %if.then.56, label %if.end.57, !dbg !9269

if.then.56:                                       ; preds = %if.end.51
  %46 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9270, !tbaa !2505
  %47 = load i32*, i32** %status.addr, align 8, !dbg !9272, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %46, i32 256, i32* %47), !dbg !9273
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9274

if.end.57:                                        ; preds = %if.end.51
  call void @_settriple(%struct.mpd_t* %sum, i8 zeroext 0, i64 1, i64 0), !dbg !9275
  %48 = load i64, i64* %n, align 8, !dbg !9276, !tbaa !2391
  %sub58 = sub i64 %48, 1, !dbg !9278
  store i64 %sub58, i64* %j, align 8, !dbg !9279, !tbaa !2391
  br label %for.cond, !dbg !9280

for.cond:                                         ; preds = %for.inc, %if.end.57
  %49 = load i64, i64* %j, align 8, !dbg !9281, !tbaa !2391
  %cmp59 = icmp sge i64 %49, 1, !dbg !9285
  br i1 %cmp59, label %for.body, label %for.end, !dbg !9286

for.body:                                         ; preds = %for.cond
  %50 = load i64, i64* %j, align 8, !dbg !9287, !tbaa !2391
  %data60 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %word, i32 0, i32 5, !dbg !9289
  %51 = load i64*, i64** %data60, align 8, !dbg !9289, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %51, i64 0, !dbg !9290
  store i64 %50, i64* %arrayidx, align 8, !dbg !9291, !tbaa !2391
  call void @mpd_setdigits(%struct.mpd_t* %word), !dbg !9292
  %52 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9293, !tbaa !2505
  %status61 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !9294
  call void @mpd_qdiv(%struct.mpd_t* %tmp, %struct.mpd_t* %52, %struct.mpd_t* %word, %struct.mpd_context_t* %workctx, i32* %status61), !dbg !9295
  %status62 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !9296
  call void @mpd_qfma(%struct.mpd_t* %sum, %struct.mpd_t* %sum, %struct.mpd_t* %tmp, %struct.mpd_t* @one, %struct.mpd_context_t* %workctx, i32* %status62), !dbg !9297
  br label %for.inc, !dbg !9298

for.inc:                                          ; preds = %for.body
  %53 = load i64, i64* %j, align 8, !dbg !9299, !tbaa !2391
  %dec = add i64 %53, -1, !dbg !9299
  store i64 %dec, i64* %j, align 8, !dbg !9299, !tbaa !2391
  br label %for.cond, !dbg !9300

for.end:                                          ; preds = %for.cond
  %54 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9301, !tbaa !2505
  %55 = load i64, i64* %t, align 8, !dbg !9302, !tbaa !2391
  %arrayidx63 = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %55, !dbg !9303
  %56 = load i64, i64* %arrayidx63, align 8, !dbg !9303, !tbaa !2391
  %57 = load i32*, i32** %status.addr, align 8, !dbg !9304, !tbaa !2505
  call void @_mpd_qpow_uint(%struct.mpd_t* %54, %struct.mpd_t* %sum, i64 %56, i8 zeroext 0, %struct.mpd_context_t* %workctx, i32* %57), !dbg !9305
  call void @mpd_del(%struct.mpd_t* %tmp), !dbg !9306
  call void @mpd_del(%struct.mpd_t* %sum), !dbg !9307
  %status64 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !9308
  %58 = load i32, i32* %status64, align 4, !dbg !9308, !tbaa !9309
  %and = and i32 %58, 958, !dbg !9310
  %59 = load i32*, i32** %status.addr, align 8, !dbg !9311, !tbaa !2505
  %60 = load i32, i32* %59, align 4, !dbg !9312, !tbaa !2554
  %or65 = or i32 %60, %and, !dbg !9312
  store i32 %or65, i32* %59, align 4, !dbg !9312, !tbaa !2554
  %61 = load i32*, i32** %status.addr, align 8, !dbg !9313, !tbaa !2505
  %62 = load i32, i32* %61, align 4, !dbg !9314, !tbaa !2554
  %or66 = or i32 %62, 4160, !dbg !9314
  store i32 %or66, i32* %61, align 4, !dbg !9314, !tbaa !2554
  store i32 0, i32* %cleanup.dest.slot, !dbg !9315
  br label %cleanup, !dbg !9315

cleanup:                                          ; preds = %for.end, %if.then.56, %if.then.50, %if.then.35, %if.end.31, %if.then
  %63 = bitcast i64* %t to i8*, !dbg !9316
  call void @llvm.lifetime.end(i64 8, i8* %63) #4, !dbg !9316
  %64 = bitcast i64* %n to i8*, !dbg !9316
  call void @llvm.lifetime.end(i64 8, i8* %64) #4, !dbg !9316
  %65 = bitcast i64* %j to i8*, !dbg !9316
  call void @llvm.lifetime.end(i64 8, i8* %65) #4, !dbg !9316
  %66 = bitcast %struct.mpd_t* %word to i8*, !dbg !9316
  call void @llvm.lifetime.end(i64 48, i8* %66) #4, !dbg !9316
  %67 = bitcast [1 x i64]* %word_data to i8*, !dbg !9316
  call void @llvm.lifetime.end(i64 8, i8* %67) #4, !dbg !9316
  %68 = bitcast %struct.mpd_t* %sum to i8*, !dbg !9316
  call void @llvm.lifetime.end(i64 48, i8* %68) #4, !dbg !9316
  %69 = bitcast [64 x i64]* %sum_data to i8*, !dbg !9316
  call void @llvm.lifetime.end(i64 512, i8* %69) #4, !dbg !9316
  %70 = bitcast %struct.mpd_t* %tmp to i8*, !dbg !9316
  call void @llvm.lifetime.end(i64 48, i8* %70) #4, !dbg !9316
  %71 = bitcast [64 x i64]* %tmp_data to i8*, !dbg !9316
  call void @llvm.lifetime.end(i64 512, i8* %71) #4, !dbg !9316
  %72 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !9316
  call void @llvm.lifetime.end(i64 48, i8* %72) #4, !dbg !9316
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !9315

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_zeropad(%struct.mpd_t* %result, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %shift = alloca i64, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1855, metadata !2395), !dbg !9317
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1856, metadata !2395), !dbg !9318
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1857, metadata !2395), !dbg !9319
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9320, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %0), !dbg !9321
  %tobool = icmp ne i32 %call, 0, !dbg !9321
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !9322

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9323, !tbaa !2505
  %call1 = call i32 @mpd_iszero(%struct.mpd_t* %1), !dbg !9325
  %tobool2 = icmp ne i32 %call1, 0, !dbg !9325
  br i1 %tobool2, label %if.end, label %land.lhs.true.3, !dbg !9326

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9327, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 2, !dbg !9328
  %3 = load i64, i64* %digits, align 8, !dbg !9328, !tbaa !2514
  %4 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9329, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %4, i32 0, i32 0, !dbg !9330
  %5 = load i64, i64* %prec, align 8, !dbg !9330, !tbaa !2526
  %cmp = icmp slt i64 %3, %5, !dbg !9331
  br i1 %cmp, label %if.then, label %if.end, !dbg !9332

if.then:                                          ; preds = %land.lhs.true.3
  %6 = bitcast i64* %shift to i8*, !dbg !9333
  call void @llvm.lifetime.start(i64 8, i8* %6) #4, !dbg !9333
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !1858, metadata !2395), !dbg !9334
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9335, !tbaa !2505
  %prec4 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %7, i32 0, i32 0, !dbg !9336
  %8 = load i64, i64* %prec4, align 8, !dbg !9336, !tbaa !2526
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9337, !tbaa !2505
  %digits5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 2, !dbg !9338
  %10 = load i64, i64* %digits5, align 8, !dbg !9338, !tbaa !2514
  %sub = sub i64 %8, %10, !dbg !9339
  store i64 %sub, i64* %shift, align 8, !dbg !9334, !tbaa !2391
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9340, !tbaa !2505
  %12 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9341, !tbaa !2505
  %13 = load i64, i64* %shift, align 8, !dbg !9342, !tbaa !2391
  %14 = load i32*, i32** %status.addr, align 8, !dbg !9343, !tbaa !2505
  %call6 = call i32 @mpd_qshiftl(%struct.mpd_t* %11, %struct.mpd_t* %12, i64 %13, i32* %14), !dbg !9344
  %15 = load i64, i64* %shift, align 8, !dbg !9345, !tbaa !2391
  %16 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9346, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %16, i32 0, i32 1, !dbg !9347
  %17 = load i64, i64* %exp, align 8, !dbg !9348, !tbaa !2510
  %sub7 = sub i64 %17, %15, !dbg !9348
  store i64 %sub7, i64* %exp, align 8, !dbg !9348, !tbaa !2510
  %18 = bitcast i64* %shift to i8*, !dbg !9349
  call void @llvm.lifetime.end(i64 8, i8* %18) #4, !dbg !9349
  br label %if.end, !dbg !9350

if.end:                                           ; preds = %if.then, %land.lhs.true.3, %land.lhs.true, %entry
  ret void, !dbg !9351
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @mpd_check_underflow(%struct.mpd_t* %dec, %struct.mpd_context_t* %ctx, i32* %status) #3 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !1863, metadata !2395), !dbg !9352
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1864, metadata !2395), !dbg !9353
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1865, metadata !2395), !dbg !9354
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !9355, !tbaa !2505
  %call = call i64 @mpd_adjexp(%struct.mpd_t* %0), !dbg !9357
  %1 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9358, !tbaa !2505
  %emin = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %1, i32 0, i32 2, !dbg !9359
  %2 = load i64, i64* %emin, align 8, !dbg !9359, !tbaa !2521
  %cmp = icmp slt i64 %call, %2, !dbg !9360
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9361

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !9362, !tbaa !2505
  %call1 = call i32 @mpd_iszero(%struct.mpd_t* %3), !dbg !9364
  %tobool = icmp ne i32 %call1, 0, !dbg !9364
  br i1 %tobool, label %if.end, label %land.lhs.true.2, !dbg !9365

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %4 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !9366, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %4, i32 0, i32 1, !dbg !9367
  %5 = load i64, i64* %exp, align 8, !dbg !9367, !tbaa !2510
  %6 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9368, !tbaa !2505
  %call3 = call i64 @mpd_etiny(%struct.mpd_context_t* %6), !dbg !9369
  %cmp4 = icmp slt i64 %5, %call3, !dbg !9370
  br i1 %cmp4, label %if.then, label %if.end, !dbg !9371

if.then:                                          ; preds = %land.lhs.true.2
  %7 = load i32*, i32** %status.addr, align 8, !dbg !9372, !tbaa !2505
  %8 = load i32, i32* %7, align 4, !dbg !9374, !tbaa !2554
  %or = or i32 %8, 16384, !dbg !9374
  store i32 %or, i32* %7, align 4, !dbg !9374, !tbaa !2554
  br label %if.end, !dbg !9375

if.end:                                           ; preds = %if.then, %land.lhs.true.2, %land.lhs.true, %entry
  ret void, !dbg !9376
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qfma(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_t* %c, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %c.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workstatus = alloca i32, align 4
  %cc = alloca %struct.mpd_t*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !997, metadata !2395), !dbg !9377
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !998, metadata !2395), !dbg !9378
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !999, metadata !2395), !dbg !9379
  store %struct.mpd_t* %c, %struct.mpd_t** %c.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %c.addr, metadata !1000, metadata !2395), !dbg !9380
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1001, metadata !2395), !dbg !9381
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1002, metadata !2395), !dbg !9382
  %0 = bitcast i32* %workstatus to i8*, !dbg !9383
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !9383
  call void @llvm.dbg.declare(metadata i32* %workstatus, metadata !1003, metadata !2395), !dbg !9384
  store i32 0, i32* %workstatus, align 4, !dbg !9384, !tbaa !2554
  %1 = bitcast %struct.mpd_t** %cc to i8*, !dbg !9385
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !9385
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %cc, metadata !1004, metadata !2395), !dbg !9386
  store %struct.mpd_t* null, %struct.mpd_t** %cc, align 8, !dbg !9386, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9387, !tbaa !2505
  %3 = load %struct.mpd_t*, %struct.mpd_t** %c.addr, align 8, !dbg !9389, !tbaa !2505
  %cmp = icmp eq %struct.mpd_t* %2, %3, !dbg !9390
  br i1 %cmp, label %if.then, label %if.end.3, !dbg !9391

if.then:                                          ; preds = %entry
  %4 = load %struct.mpd_t*, %struct.mpd_t** %c.addr, align 8, !dbg !9392, !tbaa !2505
  %call = call %struct.mpd_t* @mpd_qncopy(%struct.mpd_t* %4), !dbg !9395
  store %struct.mpd_t* %call, %struct.mpd_t** %cc, align 8, !dbg !9396, !tbaa !2505
  %cmp1 = icmp eq %struct.mpd_t* %call, null, !dbg !9397
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !9398

if.then.2:                                        ; preds = %if.then
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9399, !tbaa !2505
  %6 = load i32*, i32** %status.addr, align 8, !dbg !9401, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %5, i32 512, i32* %6), !dbg !9402
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9403

if.end:                                           ; preds = %if.then
  %7 = load %struct.mpd_t*, %struct.mpd_t** %cc, align 8, !dbg !9404, !tbaa !2505
  store %struct.mpd_t* %7, %struct.mpd_t** %c.addr, align 8, !dbg !9405, !tbaa !2505
  br label %if.end.3, !dbg !9406

if.end.3:                                         ; preds = %if.end, %entry
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9407, !tbaa !2505
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9408, !tbaa !2505
  %10 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !9409, !tbaa !2505
  %11 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9410, !tbaa !2505
  call void @_mpd_qmul(%struct.mpd_t* %8, %struct.mpd_t* %9, %struct.mpd_t* %10, %struct.mpd_context_t* %11, i32* %workstatus), !dbg !9411
  %12 = load i32, i32* %workstatus, align 4, !dbg !9412, !tbaa !2554
  %and = and i32 %12, 256, !dbg !9414
  %tobool = icmp ne i32 %and, 0, !dbg !9414
  br i1 %tobool, label %if.end.5, label %if.then.4, !dbg !9415

if.then.4:                                        ; preds = %if.end.3
  %13 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9416, !tbaa !2505
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9418, !tbaa !2505
  %15 = load %struct.mpd_t*, %struct.mpd_t** %c.addr, align 8, !dbg !9419, !tbaa !2505
  %16 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9420, !tbaa !2505
  call void @mpd_qadd(%struct.mpd_t* %13, %struct.mpd_t* %14, %struct.mpd_t* %15, %struct.mpd_context_t* %16, i32* %workstatus), !dbg !9421
  br label %if.end.5, !dbg !9422

if.end.5:                                         ; preds = %if.then.4, %if.end.3
  %17 = load %struct.mpd_t*, %struct.mpd_t** %cc, align 8, !dbg !9423, !tbaa !2505
  %tobool6 = icmp ne %struct.mpd_t* %17, null, !dbg !9423
  br i1 %tobool6, label %if.then.7, label %if.end.8, !dbg !9425

if.then.7:                                        ; preds = %if.end.5
  %18 = load %struct.mpd_t*, %struct.mpd_t** %cc, align 8, !dbg !9426, !tbaa !2505
  call void @mpd_del(%struct.mpd_t* %18), !dbg !9428
  br label %if.end.8, !dbg !9428

if.end.8:                                         ; preds = %if.then.7, %if.end.5
  %19 = load i32, i32* %workstatus, align 4, !dbg !9429, !tbaa !2554
  %20 = load i32*, i32** %status.addr, align 8, !dbg !9430, !tbaa !2505
  %21 = load i32, i32* %20, align 4, !dbg !9431, !tbaa !2554
  %or = or i32 %21, %19, !dbg !9431
  store i32 %or, i32* %20, align 4, !dbg !9431, !tbaa !2554
  store i32 0, i32* %cleanup.dest.slot, !dbg !9432
  br label %cleanup, !dbg !9432

cleanup:                                          ; preds = %if.end.8, %if.then.2
  %22 = bitcast %struct.mpd_t** %cc to i8*, !dbg !9433
  call void @llvm.lifetime.end(i64 8, i8* %22) #4, !dbg !9433
  %23 = bitcast i32* %workstatus to i8*, !dbg !9433
  call void @llvm.lifetime.end(i64 4, i8* %23) #4, !dbg !9433
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !9432

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_qmul(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #3 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %big = alloca %struct.mpd_t*, align 8
  %small = alloca %struct.mpd_t*, align 8
  %rdata = alloca i64*, align 8
  %rbuf = alloca [64 x i64], align 16
  %rsize = alloca i64, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1937, metadata !2395), !dbg !9435
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1938, metadata !2395), !dbg !9436
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1939, metadata !2395), !dbg !9437
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1940, metadata !2395), !dbg !9438
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1941, metadata !2395), !dbg !9439
  %0 = bitcast %struct.mpd_t** %big to i8*, !dbg !9440
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !9440
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %big, metadata !1942, metadata !2395), !dbg !9441
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9442, !tbaa !2505
  store %struct.mpd_t* %1, %struct.mpd_t** %big, align 8, !dbg !9441, !tbaa !2505
  %2 = bitcast %struct.mpd_t** %small to i8*, !dbg !9440
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !9440
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %small, metadata !1943, metadata !2395), !dbg !9443
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !9444, !tbaa !2505
  store %struct.mpd_t* %3, %struct.mpd_t** %small, align 8, !dbg !9443, !tbaa !2505
  %4 = bitcast i64** %rdata to i8*, !dbg !9445
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !9445
  call void @llvm.dbg.declare(metadata i64** %rdata, metadata !1944, metadata !2395), !dbg !9446
  store i64* null, i64** %rdata, align 8, !dbg !9446, !tbaa !2505
  %5 = bitcast [64 x i64]* %rbuf to i8*, !dbg !9447
  call void @llvm.lifetime.start(i64 512, i8* %5) #4, !dbg !9447
  call void @llvm.dbg.declare(metadata [64 x i64]* %rbuf, metadata !1945, metadata !2395), !dbg !9448
  %6 = bitcast i64* %rsize to i8*, !dbg !9449
  call void @llvm.lifetime.start(i64 8, i8* %6) #4, !dbg !9449
  call void @llvm.dbg.declare(metadata i64* %rsize, metadata !1946, metadata !2395), !dbg !9450
  %7 = bitcast i64* %i to i8*, !dbg !9449
  call void @llvm.lifetime.start(i64 8, i8* %7) #4, !dbg !9449
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1947, metadata !2395), !dbg !9451
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9452, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %8), !dbg !9454
  %tobool = icmp ne i32 %call, 0, !dbg !9454
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9455

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !9456, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %9), !dbg !9458
  %tobool2 = icmp ne i32 %call1, 0, !dbg !9458
  br i1 %tobool2, label %if.then, label %if.end.6, !dbg !9459

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9460, !tbaa !2505
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9463, !tbaa !2505
  %12 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !9464, !tbaa !2505
  %13 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9465, !tbaa !2505
  %14 = load i32*, i32** %status.addr, align 8, !dbg !9466, !tbaa !2505
  %call3 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %10, %struct.mpd_t* %11, %struct.mpd_t* %12, %struct.mpd_context_t* %13, i32* %14), !dbg !9467
  %tobool4 = icmp ne i32 %call3, 0, !dbg !9467
  br i1 %tobool4, label %if.then.5, label %if.end, !dbg !9468

if.then.5:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9469

if.end:                                           ; preds = %if.then
  %15 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9471, !tbaa !2505
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9472, !tbaa !2505
  %17 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !9473, !tbaa !2505
  %18 = load i32*, i32** %status.addr, align 8, !dbg !9474, !tbaa !2505
  call void @_mpd_qmul_inf(%struct.mpd_t* %15, %struct.mpd_t* %16, %struct.mpd_t* %17, i32* %18), !dbg !9475
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9476

if.end.6:                                         ; preds = %lor.lhs.false
  %19 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9477, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %19, i32 0, i32 3, !dbg !9479
  %20 = load i64, i64* %len, align 8, !dbg !9479, !tbaa !2542
  %21 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9480, !tbaa !2505
  %len7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %21, i32 0, i32 3, !dbg !9481
  %22 = load i64, i64* %len7, align 8, !dbg !9481, !tbaa !2542
  %cmp = icmp sgt i64 %20, %22, !dbg !9482
  br i1 %cmp, label %if.then.8, label %if.end.9, !dbg !9483

if.then.8:                                        ; preds = %if.end.6
  call void @_mpd_ptrswap(%struct.mpd_t** %big, %struct.mpd_t** %small), !dbg !9484
  br label %if.end.9, !dbg !9486

if.end.9:                                         ; preds = %if.then.8, %if.end.6
  %23 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9487, !tbaa !2505
  %len10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %23, i32 0, i32 3, !dbg !9488
  %24 = load i64, i64* %len10, align 8, !dbg !9488, !tbaa !2542
  %25 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9489, !tbaa !2505
  %len11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %25, i32 0, i32 3, !dbg !9490
  %26 = load i64, i64* %len11, align 8, !dbg !9490, !tbaa !2542
  %add = add i64 %24, %26, !dbg !9491
  store i64 %add, i64* %rsize, align 8, !dbg !9492, !tbaa !2391
  %27 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9493, !tbaa !2505
  %len12 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %27, i32 0, i32 3, !dbg !9495
  %28 = load i64, i64* %len12, align 8, !dbg !9495, !tbaa !2542
  %cmp13 = icmp eq i64 %28, 1, !dbg !9496
  br i1 %cmp13, label %if.then.14, label %if.end.18, !dbg !9497

if.then.14:                                       ; preds = %if.end.9
  %29 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9498, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %29, i32 0, i32 5, !dbg !9500
  %30 = load i64*, i64** %data, align 8, !dbg !9500, !tbaa !2546
  %31 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9501, !tbaa !2505
  %data15 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %31, i32 0, i32 5, !dbg !9502
  %32 = load i64*, i64** %data15, align 8, !dbg !9502, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %32, i64 0, !dbg !9501
  %33 = load i64, i64* %arrayidx, align 8, !dbg !9501, !tbaa !2391
  %34 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9503, !tbaa !2505
  %data16 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %34, i32 0, i32 5, !dbg !9504
  %35 = load i64*, i64** %data16, align 8, !dbg !9504, !tbaa !2546
  %arrayidx17 = getelementptr i64, i64* %35, i64 0, !dbg !9503
  %36 = load i64, i64* %arrayidx17, align 8, !dbg !9503, !tbaa !2391
  call void @_mpd_singlemul(i64* %30, i64 %33, i64 %36), !dbg !9505
  br label %finish, !dbg !9506

if.end.18:                                        ; preds = %if.end.9
  %37 = load i64, i64* %rsize, align 8, !dbg !9507, !tbaa !2391
  %cmp19 = icmp ule i64 %37, 64, !dbg !9509
  br i1 %cmp19, label %if.then.20, label %if.end.52, !dbg !9510

if.then.20:                                       ; preds = %if.end.18
  %38 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9511, !tbaa !2505
  %len21 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %38, i32 0, i32 3, !dbg !9514
  %39 = load i64, i64* %len21, align 8, !dbg !9514, !tbaa !2542
  %cmp22 = icmp eq i64 %39, 2, !dbg !9515
  br i1 %cmp22, label %if.then.23, label %if.else, !dbg !9516

if.then.23:                                       ; preds = %if.then.20
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %rbuf, i32 0, i32 0, !dbg !9517
  %40 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9519, !tbaa !2505
  %data24 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %40, i32 0, i32 5, !dbg !9520
  %41 = load i64*, i64** %data24, align 8, !dbg !9520, !tbaa !2546
  %42 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9521, !tbaa !2505
  %data25 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %42, i32 0, i32 5, !dbg !9522
  %43 = load i64*, i64** %data25, align 8, !dbg !9522, !tbaa !2546
  %44 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9523, !tbaa !2505
  %len26 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %44, i32 0, i32 3, !dbg !9524
  %45 = load i64, i64* %len26, align 8, !dbg !9524, !tbaa !2542
  call void @_mpd_mul_2_le2(i64* %arraydecay, i64* %41, i64* %43, i64 %45), !dbg !9525
  br label %if.end.43, !dbg !9526

if.else:                                          ; preds = %if.then.20
  %arraydecay27 = getelementptr inbounds [64 x i64], [64 x i64]* %rbuf, i32 0, i32 0, !dbg !9527
  %46 = load i64, i64* %rsize, align 8, !dbg !9529, !tbaa !2391
  call void @mpd_uint_zero(i64* %arraydecay27, i64 %46), !dbg !9530
  %47 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9531, !tbaa !2505
  %len28 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %47, i32 0, i32 3, !dbg !9533
  %48 = load i64, i64* %len28, align 8, !dbg !9533, !tbaa !2542
  %cmp29 = icmp eq i64 %48, 1, !dbg !9534
  br i1 %cmp29, label %if.then.30, label %if.else.36, !dbg !9535

if.then.30:                                       ; preds = %if.else
  %arraydecay31 = getelementptr inbounds [64 x i64], [64 x i64]* %rbuf, i32 0, i32 0, !dbg !9536
  %49 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9538, !tbaa !2505
  %data32 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %49, i32 0, i32 5, !dbg !9539
  %50 = load i64*, i64** %data32, align 8, !dbg !9539, !tbaa !2546
  %51 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9540, !tbaa !2505
  %len33 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %51, i32 0, i32 3, !dbg !9541
  %52 = load i64, i64* %len33, align 8, !dbg !9541, !tbaa !2542
  %53 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9542, !tbaa !2505
  %data34 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %53, i32 0, i32 5, !dbg !9543
  %54 = load i64*, i64** %data34, align 8, !dbg !9543, !tbaa !2546
  %arrayidx35 = getelementptr i64, i64* %54, i64 0, !dbg !9542
  %55 = load i64, i64* %arrayidx35, align 8, !dbg !9542, !tbaa !2391
  call void @_mpd_shortmul(i64* %arraydecay31, i64* %50, i64 %52, i64 %55), !dbg !9544
  br label %if.end.42, !dbg !9545

if.else.36:                                       ; preds = %if.else
  %arraydecay37 = getelementptr inbounds [64 x i64], [64 x i64]* %rbuf, i32 0, i32 0, !dbg !9546
  %56 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9548, !tbaa !2505
  %data38 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %56, i32 0, i32 5, !dbg !9549
  %57 = load i64*, i64** %data38, align 8, !dbg !9549, !tbaa !2546
  %58 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9550, !tbaa !2505
  %data39 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %58, i32 0, i32 5, !dbg !9551
  %59 = load i64*, i64** %data39, align 8, !dbg !9551, !tbaa !2546
  %60 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9552, !tbaa !2505
  %len40 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %60, i32 0, i32 3, !dbg !9553
  %61 = load i64, i64* %len40, align 8, !dbg !9553, !tbaa !2542
  %62 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9554, !tbaa !2505
  %len41 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %62, i32 0, i32 3, !dbg !9555
  %63 = load i64, i64* %len41, align 8, !dbg !9555, !tbaa !2542
  call void @_mpd_basemul(i64* %arraydecay37, i64* %57, i64* %59, i64 %61, i64 %63), !dbg !9556
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.36, %if.then.30
  br label %if.end.43

if.end.43:                                        ; preds = %if.end.42, %if.then.23
  %64 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9557, !tbaa !2505
  %65 = load i64, i64* %rsize, align 8, !dbg !9559, !tbaa !2391
  %66 = load i32*, i32** %status.addr, align 8, !dbg !9560, !tbaa !2505
  %call44 = call i32 @mpd_qresize(%struct.mpd_t* %64, i64 %65, i32* %66), !dbg !9561
  %tobool45 = icmp ne i32 %call44, 0, !dbg !9561
  br i1 %tobool45, label %if.end.47, label %if.then.46, !dbg !9562

if.then.46:                                       ; preds = %if.end.43
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9563

if.end.47:                                        ; preds = %if.end.43
  store i64 0, i64* %i, align 8, !dbg !9565, !tbaa !2391
  br label %for.cond, !dbg !9567

for.cond:                                         ; preds = %for.inc, %if.end.47
  %67 = load i64, i64* %i, align 8, !dbg !9568, !tbaa !2391
  %68 = load i64, i64* %rsize, align 8, !dbg !9572, !tbaa !2391
  %cmp48 = icmp ult i64 %67, %68, !dbg !9573
  br i1 %cmp48, label %for.body, label %for.end, !dbg !9574

for.body:                                         ; preds = %for.cond
  %69 = load i64, i64* %i, align 8, !dbg !9575, !tbaa !2391
  %arrayidx49 = getelementptr [64 x i64], [64 x i64]* %rbuf, i32 0, i64 %69, !dbg !9577
  %70 = load i64, i64* %arrayidx49, align 8, !dbg !9577, !tbaa !2391
  %71 = load i64, i64* %i, align 8, !dbg !9578, !tbaa !2391
  %72 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9579, !tbaa !2505
  %data50 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %72, i32 0, i32 5, !dbg !9580
  %73 = load i64*, i64** %data50, align 8, !dbg !9580, !tbaa !2546
  %arrayidx51 = getelementptr i64, i64* %73, i64 %71, !dbg !9579
  store i64 %70, i64* %arrayidx51, align 8, !dbg !9581, !tbaa !2391
  br label %for.inc, !dbg !9582

for.inc:                                          ; preds = %for.body
  %74 = load i64, i64* %i, align 8, !dbg !9583, !tbaa !2391
  %inc = add i64 %74, 1, !dbg !9583
  store i64 %inc, i64* %i, align 8, !dbg !9583, !tbaa !2391
  br label %for.cond, !dbg !9584

for.end:                                          ; preds = %for.cond
  br label %finish, !dbg !9585

if.end.52:                                        ; preds = %if.end.18
  %75 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9586, !tbaa !2505
  %len53 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %75, i32 0, i32 3, !dbg !9588
  %76 = load i64, i64* %len53, align 8, !dbg !9588, !tbaa !2542
  %cmp54 = icmp sle i64 %76, 256, !dbg !9589
  br i1 %cmp54, label %if.then.55, label %if.else.73, !dbg !9590

if.then.55:                                       ; preds = %if.end.52
  %77 = load i64, i64* %rsize, align 8, !dbg !9591, !tbaa !2391
  %call56 = call i8* @mpd_calloc(i64 %77, i64 8), !dbg !9593
  %78 = bitcast i8* %call56 to i64*, !dbg !9593
  store i64* %78, i64** %rdata, align 8, !dbg !9594, !tbaa !2505
  %79 = load i64*, i64** %rdata, align 8, !dbg !9595, !tbaa !2505
  %cmp57 = icmp ne i64* %79, null, !dbg !9597
  br i1 %cmp57, label %if.then.58, label %if.end.72, !dbg !9598

if.then.58:                                       ; preds = %if.then.55
  %80 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9599, !tbaa !2505
  %len59 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %80, i32 0, i32 3, !dbg !9602
  %81 = load i64, i64* %len59, align 8, !dbg !9602, !tbaa !2542
  %cmp60 = icmp eq i64 %81, 1, !dbg !9603
  br i1 %cmp60, label %if.then.61, label %if.else.66, !dbg !9604

if.then.61:                                       ; preds = %if.then.58
  %82 = load i64*, i64** %rdata, align 8, !dbg !9605, !tbaa !2505
  %83 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9607, !tbaa !2505
  %data62 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %83, i32 0, i32 5, !dbg !9608
  %84 = load i64*, i64** %data62, align 8, !dbg !9608, !tbaa !2546
  %85 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9609, !tbaa !2505
  %len63 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %85, i32 0, i32 3, !dbg !9610
  %86 = load i64, i64* %len63, align 8, !dbg !9610, !tbaa !2542
  %87 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9611, !tbaa !2505
  %data64 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %87, i32 0, i32 5, !dbg !9612
  %88 = load i64*, i64** %data64, align 8, !dbg !9612, !tbaa !2546
  %arrayidx65 = getelementptr i64, i64* %88, i64 0, !dbg !9611
  %89 = load i64, i64* %arrayidx65, align 8, !dbg !9611, !tbaa !2391
  call void @_mpd_shortmul(i64* %82, i64* %84, i64 %86, i64 %89), !dbg !9613
  br label %if.end.71, !dbg !9614

if.else.66:                                       ; preds = %if.then.58
  %90 = load i64*, i64** %rdata, align 8, !dbg !9615, !tbaa !2505
  %91 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9617, !tbaa !2505
  %data67 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %91, i32 0, i32 5, !dbg !9618
  %92 = load i64*, i64** %data67, align 8, !dbg !9618, !tbaa !2546
  %93 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9619, !tbaa !2505
  %data68 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %93, i32 0, i32 5, !dbg !9620
  %94 = load i64*, i64** %data68, align 8, !dbg !9620, !tbaa !2546
  %95 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9621, !tbaa !2505
  %len69 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %95, i32 0, i32 3, !dbg !9622
  %96 = load i64, i64* %len69, align 8, !dbg !9622, !tbaa !2542
  %97 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9623, !tbaa !2505
  %len70 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %97, i32 0, i32 3, !dbg !9624
  %98 = load i64, i64* %len70, align 8, !dbg !9624, !tbaa !2542
  call void @_mpd_basemul(i64* %90, i64* %92, i64* %94, i64 %96, i64 %98), !dbg !9625
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.66, %if.then.61
  br label %if.end.72, !dbg !9626

if.end.72:                                        ; preds = %if.end.71, %if.then.55
  br label %if.end.97, !dbg !9627

if.else.73:                                       ; preds = %if.end.52
  %99 = load i64, i64* %rsize, align 8, !dbg !9628, !tbaa !2391
  %cmp74 = icmp ule i64 %99, 1024, !dbg !9630
  br i1 %cmp74, label %if.then.75, label %if.else.81, !dbg !9631

if.then.75:                                       ; preds = %if.else.73
  %100 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9632, !tbaa !2505
  %data76 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %100, i32 0, i32 5, !dbg !9634
  %101 = load i64*, i64** %data76, align 8, !dbg !9634, !tbaa !2546
  %102 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9635, !tbaa !2505
  %data77 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %102, i32 0, i32 5, !dbg !9636
  %103 = load i64*, i64** %data77, align 8, !dbg !9636, !tbaa !2546
  %104 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9637, !tbaa !2505
  %len78 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %104, i32 0, i32 3, !dbg !9638
  %105 = load i64, i64* %len78, align 8, !dbg !9638, !tbaa !2542
  %106 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9639, !tbaa !2505
  %len79 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %106, i32 0, i32 3, !dbg !9640
  %107 = load i64, i64* %len79, align 8, !dbg !9640, !tbaa !2542
  %call80 = call i64* @_mpd_kmul(i64* %101, i64* %103, i64 %105, i64 %107, i64* %rsize), !dbg !9641
  store i64* %call80, i64** %rdata, align 8, !dbg !9642, !tbaa !2505
  br label %if.end.96, !dbg !9643

if.else.81:                                       ; preds = %if.else.73
  %108 = load i64, i64* %rsize, align 8, !dbg !9644, !tbaa !2391
  %cmp82 = icmp ule i64 %108, 12884901888, !dbg !9646
  br i1 %cmp82, label %if.then.83, label %if.else.89, !dbg !9647

if.then.83:                                       ; preds = %if.else.81
  %109 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9648, !tbaa !2505
  %data84 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %109, i32 0, i32 5, !dbg !9650
  %110 = load i64*, i64** %data84, align 8, !dbg !9650, !tbaa !2546
  %111 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9651, !tbaa !2505
  %data85 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %111, i32 0, i32 5, !dbg !9652
  %112 = load i64*, i64** %data85, align 8, !dbg !9652, !tbaa !2546
  %113 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9653, !tbaa !2505
  %len86 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %113, i32 0, i32 3, !dbg !9654
  %114 = load i64, i64* %len86, align 8, !dbg !9654, !tbaa !2542
  %115 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9655, !tbaa !2505
  %len87 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %115, i32 0, i32 3, !dbg !9656
  %116 = load i64, i64* %len87, align 8, !dbg !9656, !tbaa !2542
  %call88 = call i64* @_mpd_fntmul(i64* %110, i64* %112, i64 %114, i64 %116, i64* %rsize), !dbg !9657
  store i64* %call88, i64** %rdata, align 8, !dbg !9658, !tbaa !2505
  br label %if.end.95, !dbg !9659

if.else.89:                                       ; preds = %if.else.81
  %117 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9660, !tbaa !2505
  %data90 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %117, i32 0, i32 5, !dbg !9662
  %118 = load i64*, i64** %data90, align 8, !dbg !9662, !tbaa !2546
  %119 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9663, !tbaa !2505
  %data91 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %119, i32 0, i32 5, !dbg !9664
  %120 = load i64*, i64** %data91, align 8, !dbg !9664, !tbaa !2546
  %121 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9665, !tbaa !2505
  %len92 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %121, i32 0, i32 3, !dbg !9666
  %122 = load i64, i64* %len92, align 8, !dbg !9666, !tbaa !2542
  %123 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9667, !tbaa !2505
  %len93 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %123, i32 0, i32 3, !dbg !9668
  %124 = load i64, i64* %len93, align 8, !dbg !9668, !tbaa !2542
  %call94 = call i64* @_mpd_kmul_fnt(i64* %118, i64* %120, i64 %122, i64 %124, i64* %rsize), !dbg !9669
  store i64* %call94, i64** %rdata, align 8, !dbg !9670, !tbaa !2505
  br label %if.end.95

if.end.95:                                        ; preds = %if.else.89, %if.then.83
  br label %if.end.96

if.end.96:                                        ; preds = %if.end.95, %if.then.75
  br label %if.end.97

if.end.97:                                        ; preds = %if.end.96, %if.end.72
  %125 = load i64*, i64** %rdata, align 8, !dbg !9671, !tbaa !2505
  %cmp98 = icmp eq i64* %125, null, !dbg !9673
  br i1 %cmp98, label %if.then.99, label %if.end.100, !dbg !9674

if.then.99:                                       ; preds = %if.end.97
  %126 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9675, !tbaa !2505
  %127 = load i32*, i32** %status.addr, align 8, !dbg !9677, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %126, i32 512, i32* %127), !dbg !9678
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9679

if.end.100:                                       ; preds = %if.end.97
  %128 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9680, !tbaa !2505
  %call101 = call i32 @mpd_isdynamic_data(%struct.mpd_t* %128), !dbg !9682
  %tobool102 = icmp ne i32 %call101, 0, !dbg !9682
  br i1 %tobool102, label %if.then.103, label %if.end.105, !dbg !9683

if.then.103:                                      ; preds = %if.end.100
  %129 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !9684, !tbaa !2505
  %130 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9686, !tbaa !2505
  %data104 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %130, i32 0, i32 5, !dbg !9687
  %131 = load i64*, i64** %data104, align 8, !dbg !9687, !tbaa !2546
  %132 = bitcast i64* %131 to i8*, !dbg !9686
  call void %129(i8* %132), !dbg !9684
  br label %if.end.105, !dbg !9688

if.end.105:                                       ; preds = %if.then.103, %if.end.100
  %133 = load i64*, i64** %rdata, align 8, !dbg !9689, !tbaa !2505
  %134 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9690, !tbaa !2505
  %data106 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %134, i32 0, i32 5, !dbg !9691
  store i64* %133, i64** %data106, align 8, !dbg !9692, !tbaa !2546
  %135 = load i64, i64* %rsize, align 8, !dbg !9693, !tbaa !2391
  %136 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9694, !tbaa !2505
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %136, i32 0, i32 4, !dbg !9695
  store i64 %135, i64* %alloc, align 8, !dbg !9696, !tbaa !2835
  %137 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9697, !tbaa !2505
  call void @mpd_set_dynamic_data(%struct.mpd_t* %137), !dbg !9698
  br label %finish, !dbg !9698

finish:                                           ; preds = %if.end.105, %for.end, %if.then.14
  %138 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9699, !tbaa !2505
  %139 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9700, !tbaa !2505
  %call107 = call zeroext i8 @mpd_sign(%struct.mpd_t* %139), !dbg !9701
  %conv = zext i8 %call107 to i32, !dbg !9701
  %140 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !9702, !tbaa !2505
  %call108 = call zeroext i8 @mpd_sign(%struct.mpd_t* %140), !dbg !9703
  %conv109 = zext i8 %call108 to i32, !dbg !9703
  %xor = xor i32 %conv, %conv109, !dbg !9704
  %conv110 = trunc i32 %xor to i8, !dbg !9701
  call void @mpd_set_flags(%struct.mpd_t* %138, i8 zeroext %conv110), !dbg !9705
  %141 = load %struct.mpd_t*, %struct.mpd_t** %big, align 8, !dbg !9706, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %141, i32 0, i32 1, !dbg !9707
  %142 = load i64, i64* %exp, align 8, !dbg !9707, !tbaa !2510
  %143 = load %struct.mpd_t*, %struct.mpd_t** %small, align 8, !dbg !9708, !tbaa !2505
  %exp111 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %143, i32 0, i32 1, !dbg !9709
  %144 = load i64, i64* %exp111, align 8, !dbg !9709, !tbaa !2510
  %add112 = add i64 %142, %144, !dbg !9710
  %145 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9711, !tbaa !2505
  %exp113 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %145, i32 0, i32 1, !dbg !9712
  store i64 %add112, i64* %exp113, align 8, !dbg !9713, !tbaa !2510
  %146 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9714, !tbaa !2505
  %data114 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %146, i32 0, i32 5, !dbg !9715
  %147 = load i64*, i64** %data114, align 8, !dbg !9715, !tbaa !2546
  %148 = load i64, i64* %rsize, align 8, !dbg !9716, !tbaa !2391
  %call115 = call i64 @_mpd_real_size(i64* %147, i64 %148), !dbg !9717
  %149 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9718, !tbaa !2505
  %len116 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %149, i32 0, i32 3, !dbg !9719
  store i64 %call115, i64* %len116, align 8, !dbg !9720, !tbaa !2542
  %150 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9721, !tbaa !2505
  %151 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9722, !tbaa !2505
  %len117 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %151, i32 0, i32 3, !dbg !9723
  %152 = load i64, i64* %len117, align 8, !dbg !9723, !tbaa !2542
  %153 = load i32*, i32** %status.addr, align 8, !dbg !9724, !tbaa !2505
  %call118 = call i32 @mpd_qresize(%struct.mpd_t* %150, i64 %152, i32* %153), !dbg !9725
  %154 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9726, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %154), !dbg !9727
  store i32 0, i32* %cleanup.dest.slot, !dbg !9728
  br label %cleanup, !dbg !9728

cleanup:                                          ; preds = %finish, %if.then.99, %if.then.46, %if.end, %if.then.5
  %155 = bitcast i64* %i to i8*, !dbg !9729
  call void @llvm.lifetime.end(i64 8, i8* %155) #4, !dbg !9729
  %156 = bitcast i64* %rsize to i8*, !dbg !9729
  call void @llvm.lifetime.end(i64 8, i8* %156) #4, !dbg !9729
  %157 = bitcast [64 x i64]* %rbuf to i8*, !dbg !9729
  call void @llvm.lifetime.end(i64 512, i8* %157) #4, !dbg !9729
  %158 = bitcast i64** %rdata to i8*, !dbg !9729
  call void @llvm.lifetime.end(i64 8, i8* %158) #4, !dbg !9729
  %159 = bitcast %struct.mpd_t** %small to i8*, !dbg !9729
  call void @llvm.lifetime.end(i64 8, i8* %159) #4, !dbg !9729
  %160 = bitcast %struct.mpd_t** %big to i8*, !dbg !9729
  call void @llvm.lifetime.end(i64 8, i8* %160) #4, !dbg !9729
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !9728

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qln10(%struct.mpd_t* %result, i64 %prec, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %prec.addr = alloca i64, align 8
  %status.addr = alloca i32*, align 8
  %varcontext = alloca %struct.mpd_context_t, align 8
  %maxcontext = alloca %struct.mpd_context_t, align 8
  %tmp_data = alloca [64 x i64], align 16
  %tmp = alloca %struct.mpd_t, align 8
  %static10_data = alloca [1 x i64], align 8
  %static10 = alloca %struct.mpd_t, align 8
  %klist = alloca [64 x i64], align 16
  %rnd = alloca i64, align 8
  %shift = alloca i64, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1009, metadata !2395), !dbg !9731
  store i64 %prec, i64* %prec.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %prec.addr, metadata !1010, metadata !2395), !dbg !9732
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1011, metadata !2395), !dbg !9733
  %0 = bitcast %struct.mpd_context_t* %varcontext to i8*, !dbg !9734
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !9734
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %varcontext, metadata !1012, metadata !2395), !dbg !9735
  %1 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !9734
  call void @llvm.lifetime.start(i64 48, i8* %1) #4, !dbg !9734
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxcontext, metadata !1013, metadata !2395), !dbg !9736
  %2 = bitcast [64 x i64]* %tmp_data to i8*, !dbg !9737
  call void @llvm.lifetime.start(i64 512, i8* %2) #4, !dbg !9737
  call void @llvm.dbg.declare(metadata [64 x i64]* %tmp_data, metadata !1014, metadata !2395), !dbg !9738
  %3 = bitcast %struct.mpd_t* %tmp to i8*, !dbg !9739
  call void @llvm.lifetime.start(i64 48, i8* %3) #4, !dbg !9739
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %tmp, metadata !1015, metadata !2395), !dbg !9740
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 0, !dbg !9741
  store i8 48, i8* %flags, align 1, !dbg !9741, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 1, !dbg !9741
  store i64 0, i64* %exp, align 8, !dbg !9741, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 2, !dbg !9741
  store i64 0, i64* %digits, align 8, !dbg !9741, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 3, !dbg !9741
  store i64 0, i64* %len, align 8, !dbg !9741, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 4, !dbg !9741
  store i64 64, i64* %alloc, align 8, !dbg !9741, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 5, !dbg !9741
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %tmp_data, i32 0, i32 0, !dbg !9742
  store i64* %arraydecay, i64** %data, align 8, !dbg !9741, !tbaa !2546
  %4 = bitcast [1 x i64]* %static10_data to i8*, !dbg !9743
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !9743
  call void @llvm.dbg.declare(metadata [1 x i64]* %static10_data, metadata !1016, metadata !2395), !dbg !9744
  %5 = bitcast [1 x i64]* %static10_data to i8*, !dbg !9744
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* bitcast ([1 x i64]* @mpd_qln10.static10_data to i8*), i64 8, i32 8, i1 false), !dbg !9744
  %6 = bitcast %struct.mpd_t* %static10 to i8*, !dbg !9745
  call void @llvm.lifetime.start(i64 48, i8* %6) #4, !dbg !9745
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %static10, metadata !1020, metadata !2395), !dbg !9746
  %flags3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %static10, i32 0, i32 0, !dbg !9747
  store i8 -112, i8* %flags3, align 1, !dbg !9747, !tbaa !2620
  %exp4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %static10, i32 0, i32 1, !dbg !9747
  store i64 0, i64* %exp4, align 8, !dbg !9747, !tbaa !2510
  %digits5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %static10, i32 0, i32 2, !dbg !9747
  store i64 2, i64* %digits5, align 8, !dbg !9747, !tbaa !2514
  %len6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %static10, i32 0, i32 3, !dbg !9747
  store i64 1, i64* %len6, align 8, !dbg !9747, !tbaa !2542
  %alloc7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %static10, i32 0, i32 4, !dbg !9747
  store i64 1, i64* %alloc7, align 8, !dbg !9747, !tbaa !2835
  %data8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %static10, i32 0, i32 5, !dbg !9747
  %arraydecay9 = getelementptr inbounds [1 x i64], [1 x i64]* %static10_data, i32 0, i32 0, !dbg !9748
  store i64* %arraydecay9, i64** %data8, align 8, !dbg !9747, !tbaa !2546
  %7 = bitcast [64 x i64]* %klist to i8*, !dbg !9749
  call void @llvm.lifetime.start(i64 512, i8* %7) #4, !dbg !9749
  call void @llvm.dbg.declare(metadata [64 x i64]* %klist, metadata !1021, metadata !2395), !dbg !9750
  %8 = bitcast i64* %rnd to i8*, !dbg !9751
  call void @llvm.lifetime.start(i64 8, i8* %8) #4, !dbg !9751
  call void @llvm.dbg.declare(metadata i64* %rnd, metadata !1023, metadata !2395), !dbg !9752
  %9 = bitcast i64* %shift to i8*, !dbg !9753
  call void @llvm.lifetime.start(i64 8, i8* %9) #4, !dbg !9753
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !1024, metadata !2395), !dbg !9754
  %10 = bitcast i32* %i to i8*, !dbg !9755
  call void @llvm.lifetime.start(i64 4, i8* %10) #4, !dbg !9755
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1025, metadata !2395), !dbg !9756
  %11 = load i64, i64* %prec.addr, align 8, !dbg !9757, !tbaa !2391
  %sub = sub i64 1216, %11, !dbg !9758
  store i64 %sub, i64* %shift, align 8, !dbg !9759, !tbaa !2391
  %12 = load i64, i64* %shift, align 8, !dbg !9760, !tbaa !2391
  %cmp = icmp slt i64 %12, 0, !dbg !9761
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9760

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !9762

cond.false:                                       ; preds = %entry
  %13 = load i64, i64* %shift, align 8, !dbg !9764, !tbaa !2391
  br label %cond.end, !dbg !9760

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %13, %cond.false ], !dbg !9760
  store i64 %cond, i64* %shift, align 8, !dbg !9766, !tbaa !2391
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9769, !tbaa !2505
  %15 = load i64, i64* %shift, align 8, !dbg !9770, !tbaa !2391
  %16 = load i32*, i32** %status.addr, align 8, !dbg !9771, !tbaa !2505
  %call = call i64 @mpd_qshiftr(%struct.mpd_t* %14, %struct.mpd_t* @_mpd_ln10, i64 %15, i32* %16), !dbg !9772
  store i64 %call, i64* %rnd, align 8, !dbg !9773, !tbaa !2391
  %17 = load i64, i64* %rnd, align 8, !dbg !9774, !tbaa !2391
  %cmp14 = icmp eq i64 %17, -1, !dbg !9776
  br i1 %cmp14, label %if.then, label %if.end, !dbg !9777

if.then:                                          ; preds = %cond.end
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9778, !tbaa !2505
  %19 = load i32*, i32** %status.addr, align 8, !dbg !9780, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %18, i32 512, i32* %19), !dbg !9781
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9782

if.end:                                           ; preds = %cond.end
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9783, !tbaa !2505
  %digits15 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %20, i32 0, i32 2, !dbg !9784
  %21 = load i64, i64* %digits15, align 8, !dbg !9784, !tbaa !2514
  %sub16 = sub i64 %21, 1, !dbg !9785
  %sub17 = sub i64 0, %sub16, !dbg !9786
  %22 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9787, !tbaa !2505
  %exp18 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %22, i32 0, i32 1, !dbg !9788
  store i64 %sub17, i64* %exp18, align 8, !dbg !9789, !tbaa !2510
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxcontext), !dbg !9790
  %23 = load i64, i64* %prec.addr, align 8, !dbg !9791, !tbaa !2391
  %cmp19 = icmp slt i64 %23, 1216, !dbg !9793
  br i1 %cmp19, label %if.then.20, label %if.end.22, !dbg !9794

if.then.20:                                       ; preds = %if.end
  %24 = load i64, i64* %prec.addr, align 8, !dbg !9795, !tbaa !2391
  %prec21 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 0, !dbg !9797
  store i64 %24, i64* %prec21, align 8, !dbg !9798, !tbaa !2526
  %25 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9799, !tbaa !2505
  %26 = load i64, i64* %rnd, align 8, !dbg !9800, !tbaa !2391
  %27 = load i32*, i32** %status.addr, align 8, !dbg !9801, !tbaa !2505
  call void @_mpd_apply_round_excess(%struct.mpd_t* %25, i64 %26, %struct.mpd_context_t* %maxcontext, i32* %27), !dbg !9802
  %28 = load i32*, i32** %status.addr, align 8, !dbg !9803, !tbaa !2505
  %29 = load i32, i32* %28, align 4, !dbg !9804, !tbaa !2554
  %or = or i32 %29, 4160, !dbg !9804
  store i32 %or, i32* %28, align 4, !dbg !9804, !tbaa !2554
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9805

if.end.22:                                        ; preds = %if.end
  call void @mpd_maxcontext(%struct.mpd_context_t* %varcontext), !dbg !9806
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 6, !dbg !9807
  store i32 8, i32* %round, align 4, !dbg !9808, !tbaa !4148
  %arraydecay23 = getelementptr inbounds [64 x i64], [64 x i64]* %klist, i32 0, i32 0, !dbg !9809
  %30 = load i64, i64* %prec.addr, align 8, !dbg !9810, !tbaa !2391
  %add = add i64 %30, 2, !dbg !9811
  %31 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9812, !tbaa !2505
  %exp24 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %31, i32 0, i32 1, !dbg !9813
  %32 = load i64, i64* %exp24, align 8, !dbg !9813, !tbaa !2510
  %sub25 = sub i64 0, %32, !dbg !9814
  %call26 = call i32 @ln_schedule_prec(i64* %arraydecay23, i64 %add, i64 %sub25), !dbg !9815
  store i32 %call26, i32* %i, align 4, !dbg !9816, !tbaa !2554
  br label %for.cond, !dbg !9817

for.cond:                                         ; preds = %for.inc, %if.end.22
  %33 = load i32, i32* %i, align 4, !dbg !9818, !tbaa !2554
  %cmp27 = icmp sge i32 %33, 0, !dbg !9823
  br i1 %cmp27, label %for.body, label %for.end, !dbg !9824

for.body:                                         ; preds = %for.cond
  %34 = load i32, i32* %i, align 4, !dbg !9825, !tbaa !2554
  %idxprom = sext i32 %34 to i64, !dbg !9827
  %arrayidx = getelementptr [64 x i64], [64 x i64]* %klist, i32 0, i64 %idxprom, !dbg !9827
  %35 = load i64, i64* %arrayidx, align 8, !dbg !9827, !tbaa !2391
  %mul = mul i64 2, %35, !dbg !9828
  %add28 = add i64 %mul, 3, !dbg !9829
  %prec29 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 0, !dbg !9830
  store i64 %add28, i64* %prec29, align 8, !dbg !9831, !tbaa !2526
  %36 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9832, !tbaa !2505
  %flags30 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %36, i32 0, i32 0, !dbg !9833
  %37 = load i8, i8* %flags30, align 1, !dbg !9834, !tbaa !2620
  %conv = zext i8 %37 to i32, !dbg !9834
  %xor = xor i32 %conv, 1, !dbg !9834
  %conv31 = trunc i32 %xor to i8, !dbg !9834
  store i8 %conv31, i8* %flags30, align 1, !dbg !9834, !tbaa !2620
  %38 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9835, !tbaa !2505
  %39 = load i32*, i32** %status.addr, align 8, !dbg !9836, !tbaa !2505
  call void @_mpd_qexp(%struct.mpd_t* %tmp, %struct.mpd_t* %38, %struct.mpd_context_t* %varcontext, i32* %39), !dbg !9837
  %40 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9838, !tbaa !2505
  %flags32 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %40, i32 0, i32 0, !dbg !9839
  %41 = load i8, i8* %flags32, align 1, !dbg !9840, !tbaa !2620
  %conv33 = zext i8 %41 to i32, !dbg !9840
  %xor34 = xor i32 %conv33, 1, !dbg !9840
  %conv35 = trunc i32 %xor34 to i8, !dbg !9840
  store i8 %conv35, i8* %flags32, align 1, !dbg !9840, !tbaa !2620
  %42 = load i32*, i32** %status.addr, align 8, !dbg !9841, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %tmp, %struct.mpd_t* %static10, %struct.mpd_t* %tmp, %struct.mpd_context_t* %varcontext, i32* %42), !dbg !9842
  %43 = load i32*, i32** %status.addr, align 8, !dbg !9843, !tbaa !2505
  call void @mpd_qsub(%struct.mpd_t* %tmp, %struct.mpd_t* %tmp, %struct.mpd_t* @one, %struct.mpd_context_t* %maxcontext, i32* %43), !dbg !9844
  %44 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9845, !tbaa !2505
  %45 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9846, !tbaa !2505
  %46 = load i32*, i32** %status.addr, align 8, !dbg !9847, !tbaa !2505
  call void @mpd_qadd(%struct.mpd_t* %44, %struct.mpd_t* %45, %struct.mpd_t* %tmp, %struct.mpd_context_t* %maxcontext, i32* %46), !dbg !9848
  %47 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9849, !tbaa !2505
  %call36 = call i32 @mpd_isspecial(%struct.mpd_t* %47), !dbg !9851
  %tobool = icmp ne i32 %call36, 0, !dbg !9851
  br i1 %tobool, label %if.then.37, label %if.end.38, !dbg !9852

if.then.37:                                       ; preds = %for.body
  br label %for.end, !dbg !9853

if.end.38:                                        ; preds = %for.body
  br label %for.inc, !dbg !9855

for.inc:                                          ; preds = %if.end.38
  %48 = load i32, i32* %i, align 4, !dbg !9856, !tbaa !2554
  %dec = add i32 %48, -1, !dbg !9856
  store i32 %dec, i32* %i, align 4, !dbg !9856, !tbaa !2554
  br label %for.cond, !dbg !9857

for.end:                                          ; preds = %if.then.37, %for.cond
  call void @mpd_del(%struct.mpd_t* %tmp), !dbg !9858
  %49 = load i64, i64* %prec.addr, align 8, !dbg !9859, !tbaa !2391
  %prec39 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 0, !dbg !9860
  store i64 %49, i64* %prec39, align 8, !dbg !9861, !tbaa !2526
  %50 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9862, !tbaa !2505
  %51 = load i32*, i32** %status.addr, align 8, !dbg !9863, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %50, %struct.mpd_context_t* %maxcontext, i32* %51), !dbg !9864
  store i32 0, i32* %cleanup.dest.slot, !dbg !9865
  br label %cleanup, !dbg !9865

cleanup:                                          ; preds = %for.end, %if.then.20, %if.then
  %52 = bitcast i32* %i to i8*, !dbg !9866
  call void @llvm.lifetime.end(i64 4, i8* %52) #4, !dbg !9866
  %53 = bitcast i64* %shift to i8*, !dbg !9866
  call void @llvm.lifetime.end(i64 8, i8* %53) #4, !dbg !9866
  %54 = bitcast i64* %rnd to i8*, !dbg !9866
  call void @llvm.lifetime.end(i64 8, i8* %54) #4, !dbg !9866
  %55 = bitcast [64 x i64]* %klist to i8*, !dbg !9866
  call void @llvm.lifetime.end(i64 512, i8* %55) #4, !dbg !9866
  %56 = bitcast %struct.mpd_t* %static10 to i8*, !dbg !9866
  call void @llvm.lifetime.end(i64 48, i8* %56) #4, !dbg !9866
  %57 = bitcast [1 x i64]* %static10_data to i8*, !dbg !9866
  call void @llvm.lifetime.end(i64 8, i8* %57) #4, !dbg !9866
  %58 = bitcast %struct.mpd_t* %tmp to i8*, !dbg !9866
  call void @llvm.lifetime.end(i64 48, i8* %58) #4, !dbg !9866
  %59 = bitcast [64 x i64]* %tmp_data to i8*, !dbg !9866
  call void @llvm.lifetime.end(i64 512, i8* %59) #4, !dbg !9866
  %60 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !9866
  call void @llvm.lifetime.end(i64 48, i8* %60) #4, !dbg !9866
  %61 = bitcast %struct.mpd_context_t* %varcontext to i8*, !dbg !9866
  call void @llvm.lifetime.end(i64 48, i8* %61) #4, !dbg !9866
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !9865

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_apply_round_excess(%struct.mpd_t* %dec, i64 %rnd, %struct.mpd_context_t* %ctx, i32* %status) #3 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  %rnd.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %carry = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !1868, metadata !2395), !dbg !9867
  store i64 %rnd, i64* %rnd.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %rnd.addr, metadata !1869, metadata !2395), !dbg !9868
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1870, metadata !2395), !dbg !9869
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1871, metadata !2395), !dbg !9870
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !9871, !tbaa !2505
  %1 = load i64, i64* %rnd.addr, align 8, !dbg !9872, !tbaa !2391
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9873, !tbaa !2505
  %call = call i32 @_mpd_rnd_incr(%struct.mpd_t* %0, i64 %1, %struct.mpd_context_t* %2), !dbg !9874
  %tobool = icmp ne i32 %call, 0, !dbg !9874
  br i1 %tobool, label %if.then, label %if.end.13, !dbg !9875

if.then:                                          ; preds = %entry
  %3 = bitcast i64* %carry to i8*, !dbg !9876
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !9876
  call void @llvm.dbg.declare(metadata i64* %carry, metadata !1872, metadata !2395), !dbg !9877
  %4 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !9878, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %4, i32 0, i32 5, !dbg !9879
  %5 = load i64*, i64** %data, align 8, !dbg !9879, !tbaa !2546
  %6 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !9880, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %6, i32 0, i32 3, !dbg !9881
  %7 = load i64, i64* %len, align 8, !dbg !9881, !tbaa !2542
  %call1 = call i64 @_mpd_baseincr(i64* %5, i64 %7), !dbg !9882
  store i64 %call1, i64* %carry, align 8, !dbg !9877, !tbaa !2391
  %8 = load i64, i64* %carry, align 8, !dbg !9883, !tbaa !2391
  %tobool2 = icmp ne i64 %8, 0, !dbg !9883
  br i1 %tobool2, label %if.then.3, label %if.end.12, !dbg !9885

if.then.3:                                        ; preds = %if.then
  %9 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !9886, !tbaa !2505
  %10 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !9889, !tbaa !2505
  %len4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %10, i32 0, i32 3, !dbg !9890
  %11 = load i64, i64* %len4, align 8, !dbg !9890, !tbaa !2542
  %add = add i64 %11, 1, !dbg !9891
  %12 = load i32*, i32** %status.addr, align 8, !dbg !9892, !tbaa !2505
  %call5 = call i32 @mpd_qresize(%struct.mpd_t* %9, i64 %add, i32* %12), !dbg !9893
  %tobool6 = icmp ne i32 %call5, 0, !dbg !9893
  br i1 %tobool6, label %if.end, label %if.then.7, !dbg !9894

if.then.7:                                        ; preds = %if.then.3
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9895

if.end:                                           ; preds = %if.then.3
  %13 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !9897, !tbaa !2505
  %len8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %13, i32 0, i32 3, !dbg !9898
  %14 = load i64, i64* %len8, align 8, !dbg !9898, !tbaa !2542
  %15 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !9899, !tbaa !2505
  %data9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %15, i32 0, i32 5, !dbg !9900
  %16 = load i64*, i64** %data9, align 8, !dbg !9900, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %16, i64 %14, !dbg !9899
  store i64 1, i64* %arrayidx, align 8, !dbg !9901, !tbaa !2391
  %17 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !9902, !tbaa !2505
  %len10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 3, !dbg !9903
  %18 = load i64, i64* %len10, align 8, !dbg !9904, !tbaa !2542
  %add11 = add i64 %18, 1, !dbg !9904
  store i64 %add11, i64* %len10, align 8, !dbg !9904, !tbaa !2542
  br label %if.end.12, !dbg !9905

if.end.12:                                        ; preds = %if.end, %if.then
  %19 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !9906, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %19), !dbg !9907
  store i32 0, i32* %cleanup.dest.slot, !dbg !9908
  br label %cleanup, !dbg !9908

cleanup:                                          ; preds = %if.end.12, %if.then.7
  %20 = bitcast i64* %carry to i8*, !dbg !9909
  call void @llvm.lifetime.end(i64 8, i8* %20) #4, !dbg !9909
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %if.end.13, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.13, !dbg !9911

if.end.13:                                        ; preds = %LeafBlock, %cleanup.cont, %entry
  ret void, !dbg !9912
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ln_schedule_prec(i64* %klist, i64 %maxprec, i64 %initprec) #3 {
entry:
  %retval = alloca i32, align 4
  %klist.addr = alloca i64*, align 8
  %maxprec.addr = alloca i64, align 8
  %initprec.addr = alloca i64, align 8
  %k = alloca i64, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store i64* %klist, i64** %klist.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %klist.addr, metadata !1877, metadata !2395), !dbg !9913
  store i64 %maxprec, i64* %maxprec.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %maxprec.addr, metadata !1878, metadata !2395), !dbg !9914
  store i64 %initprec, i64* %initprec.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %initprec.addr, metadata !1879, metadata !2395), !dbg !9915
  %0 = bitcast i64* %k to i8*, !dbg !9916
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !9916
  call void @llvm.dbg.declare(metadata i64* %k, metadata !1880, metadata !2395), !dbg !9917
  %1 = bitcast i32* %i to i8*, !dbg !9918
  call void @llvm.lifetime.start(i64 4, i8* %1) #4, !dbg !9918
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1881, metadata !2395), !dbg !9919
  %2 = load i64, i64* %maxprec.addr, align 8, !dbg !9920, !tbaa !2391
  %3 = load i64, i64* %initprec.addr, align 8, !dbg !9922, !tbaa !2391
  %cmp = icmp sle i64 %2, %3, !dbg !9923
  br i1 %cmp, label %if.then, label %if.end, !dbg !9924

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !9925
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9927

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !9928, !tbaa !2554
  %4 = load i64, i64* %maxprec.addr, align 8, !dbg !9929, !tbaa !2391
  store i64 %4, i64* %k, align 8, !dbg !9930, !tbaa !2391
  br label %do.body, !dbg !9931

do.body:                                          ; preds = %do.cond, %if.end
  %5 = load i64, i64* %k, align 8, !dbg !9932, !tbaa !2391
  %add = add i64 %5, 2, !dbg !9934
  %div = sdiv i64 %add, 2, !dbg !9935
  store i64 %div, i64* %k, align 8, !dbg !9936, !tbaa !2391
  %6 = load i64, i64* %k, align 8, !dbg !9937, !tbaa !2391
  %7 = load i32, i32* %i, align 4, !dbg !9938, !tbaa !2554
  %inc = add i32 %7, 1, !dbg !9938
  store i32 %inc, i32* %i, align 4, !dbg !9938, !tbaa !2554
  %idxprom = sext i32 %7 to i64, !dbg !9939
  %8 = load i64*, i64** %klist.addr, align 8, !dbg !9939, !tbaa !2505
  %arrayidx = getelementptr i64, i64* %8, i64 %idxprom, !dbg !9939
  store i64 %6, i64* %arrayidx, align 8, !dbg !9940, !tbaa !2391
  br label %do.cond, !dbg !9941

do.cond:                                          ; preds = %do.body
  %9 = load i64, i64* %k, align 8, !dbg !9942, !tbaa !2391
  %10 = load i64, i64* %initprec.addr, align 8, !dbg !9944, !tbaa !2391
  %cmp1 = icmp sgt i64 %9, %10, !dbg !9945
  br i1 %cmp1, label %do.body, label %do.end, !dbg !9941

do.end:                                           ; preds = %do.cond
  %11 = load i32, i32* %i, align 4, !dbg !9946, !tbaa !2554
  %sub = sub i32 %11, 1, !dbg !9947
  store i32 %sub, i32* %retval, !dbg !9948
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9948

cleanup:                                          ; preds = %do.end, %if.then
  %12 = bitcast i32* %i to i8*, !dbg !9949
  call void @llvm.lifetime.end(i64 4, i8* %12) #4, !dbg !9949
  %13 = bitcast i64* %k to i8*, !dbg !9949
  call void @llvm.lifetime.end(i64 8, i8* %13) #4, !dbg !9949
  %14 = load i32, i32* %retval, !dbg !9949
  ret i32 %14, !dbg !9949
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qmul(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1103, metadata !2395), !dbg !9950
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1104, metadata !2395), !dbg !9951
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1105, metadata !2395), !dbg !9952
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1106, metadata !2395), !dbg !9953
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1107, metadata !2395), !dbg !9954
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9955, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9956, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !9957, !tbaa !2505
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9958, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !9959, !tbaa !2505
  call void @_mpd_qmul(%struct.mpd_t* %0, %struct.mpd_t* %1, %struct.mpd_t* %2, %struct.mpd_context_t* %3, i32* %4), !dbg !9960
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9961, !tbaa !2505
  %6 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9962, !tbaa !2505
  %7 = load i32*, i32** %status.addr, align 8, !dbg !9963, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %5, %struct.mpd_context_t* %6, i32* %7), !dbg !9964
  ret void, !dbg !9965
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qln(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workctx = alloca %struct.mpd_context_t, align 8
  %adjexp = alloca i64, align 8
  %t = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %t1_data = alloca [64 x i64], align 16
  %t1 = alloca %struct.mpd_t, align 8
  %t2_data = alloca [64 x i64], align 16
  %t2 = alloca %struct.mpd_t, align 8
  %ulp_data = alloca [64 x i64], align 16
  %ulp = alloca %struct.mpd_t, align 8
  %aa_data = alloca [64 x i64], align 16
  %aa = alloca %struct.mpd_t, align 8
  %prec = alloca i64, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1028, metadata !2395), !dbg !9966
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1029, metadata !2395), !dbg !9967
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1030, metadata !2395), !dbg !9968
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1031, metadata !2395), !dbg !9969
  %0 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !9970
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !9970
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %workctx, metadata !1032, metadata !2395), !dbg !9971
  %1 = bitcast i64* %adjexp to i8*, !dbg !9972
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !9972
  call void @llvm.dbg.declare(metadata i64* %adjexp, metadata !1033, metadata !2395), !dbg !9973
  %2 = bitcast i64* %t to i8*, !dbg !9972
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !9972
  call void @llvm.dbg.declare(metadata i64* %t, metadata !1034, metadata !2395), !dbg !9974
  %3 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9975, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %3), !dbg !9977
  %tobool = icmp ne i32 %call, 0, !dbg !9977
  br i1 %tobool, label %if.then, label %if.end.8, !dbg !9978

if.then:                                          ; preds = %entry
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9979, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9982, !tbaa !2505
  %6 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !9983, !tbaa !2505
  %7 = load i32*, i32** %status.addr, align 8, !dbg !9984, !tbaa !2505
  %call1 = call i32 @mpd_qcheck_nan(%struct.mpd_t* %4, %struct.mpd_t* %5, %struct.mpd_context_t* %6, i32* %7), !dbg !9985
  %tobool2 = icmp ne i32 %call1, 0, !dbg !9985
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !9986

if.then.3:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !9987

if.end:                                           ; preds = %if.then
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !9989, !tbaa !2505
  %call4 = call i32 @mpd_isnegative(%struct.mpd_t* %8), !dbg !9991
  %tobool5 = icmp ne i32 %call4, 0, !dbg !9991
  br i1 %tobool5, label %if.then.6, label %if.end.7, !dbg !9992

if.then.6:                                        ; preds = %if.end
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9993, !tbaa !2505
  %10 = load i32*, i32** %status.addr, align 8, !dbg !9995, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %9, i32 256, i32* %10), !dbg !9996
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !9997

if.end.7:                                         ; preds = %if.end
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !9998, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %11, i8 zeroext 0, i8 zeroext 2), !dbg !9999
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !10000

if.end.8:                                         ; preds = %entry
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10001, !tbaa !2505
  %call9 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %12), !dbg !10003
  %tobool10 = icmp ne i32 %call9, 0, !dbg !10003
  br i1 %tobool10, label %if.then.11, label %if.end.12, !dbg !10004

if.then.11:                                       ; preds = %if.end.8
  %13 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10005, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %13, i8 zeroext 1, i8 zeroext 2), !dbg !10007
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !10008

if.end.12:                                        ; preds = %if.end.8
  %14 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10009, !tbaa !2505
  %call13 = call i32 @mpd_isnegative(%struct.mpd_t* %14), !dbg !10011
  %tobool14 = icmp ne i32 %call13, 0, !dbg !10011
  br i1 %tobool14, label %if.then.15, label %if.end.16, !dbg !10012

if.then.15:                                       ; preds = %if.end.12
  %15 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10013, !tbaa !2505
  %16 = load i32*, i32** %status.addr, align 8, !dbg !10015, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %15, i32 256, i32* %16), !dbg !10016
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !10017

if.end.16:                                        ; preds = %if.end.12
  %17 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10018, !tbaa !2505
  %call17 = call i32 @_mpd_cmp(%struct.mpd_t* %17, %struct.mpd_t* @one), !dbg !10020
  %cmp = icmp eq i32 %call17, 0, !dbg !10021
  br i1 %cmp, label %if.then.18, label %if.end.19, !dbg !10022

if.then.18:                                       ; preds = %if.end.16
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10023, !tbaa !2505
  call void @_settriple(%struct.mpd_t* %18, i8 zeroext 0, i64 0, i64 0), !dbg !10025
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !10026

if.end.19:                                        ; preds = %if.end.16
  %19 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10027, !tbaa !2505
  %call20 = call i64 @mpd_adjexp(%struct.mpd_t* %19), !dbg !10028
  store i64 %call20, i64* %adjexp, align 8, !dbg !10029, !tbaa !2391
  %20 = load i64, i64* %adjexp, align 8, !dbg !10030, !tbaa !2391
  %cmp21 = icmp slt i64 %20, 0, !dbg !10031
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !10032

cond.true:                                        ; preds = %if.end.19
  %21 = load i64, i64* %adjexp, align 8, !dbg !10033, !tbaa !2391
  %sub = sub i64 0, %21, !dbg !10035
  %sub22 = sub i64 %sub, 1, !dbg !10036
  br label %cond.end, !dbg !10032

cond.false:                                       ; preds = %if.end.19
  %22 = load i64, i64* %adjexp, align 8, !dbg !10037, !tbaa !2391
  br label %cond.end, !dbg !10032

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub22, %cond.true ], [ %22, %cond.false ], !dbg !10032
  store i64 %cond, i64* %t, align 8, !dbg !10039, !tbaa !2391
  %23 = load i64, i64* %t, align 8, !dbg !10042, !tbaa !2391
  %mul = mul i64 %23, 2, !dbg !10042
  store i64 %mul, i64* %t, align 8, !dbg !10042, !tbaa !2391
  %24 = load i64, i64* %t, align 8, !dbg !10043, !tbaa !2391
  %call23 = call i32 @mpd_exp_digits(i64 %24), !dbg !10045
  %sub24 = sub i32 %call23, 1, !dbg !10046
  %conv = sext i32 %sub24 to i64, !dbg !10045
  %25 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10047, !tbaa !2505
  %emax = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %25, i32 0, i32 1, !dbg !10048
  %26 = load i64, i64* %emax, align 8, !dbg !10048, !tbaa !2533
  %cmp25 = icmp sgt i64 %conv, %26, !dbg !10049
  br i1 %cmp25, label %if.then.27, label %if.end.31, !dbg !10050

if.then.27:                                       ; preds = %cond.end
  %27 = load i32*, i32** %status.addr, align 8, !dbg !10051, !tbaa !2505
  %28 = load i32, i32* %27, align 4, !dbg !10053, !tbaa !2554
  %or = or i32 %28, 6208, !dbg !10053
  store i32 %or, i32* %27, align 4, !dbg !10053, !tbaa !2554
  %29 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10054, !tbaa !2505
  %30 = load i64, i64* %adjexp, align 8, !dbg !10055, !tbaa !2391
  %cmp28 = icmp slt i64 %30, 0, !dbg !10056
  %conv29 = zext i1 %cmp28 to i32, !dbg !10056
  %conv30 = trunc i32 %conv29 to i8, !dbg !10057
  call void @mpd_setspecial(%struct.mpd_t* %29, i8 zeroext %conv30, i8 zeroext 2), !dbg !10058
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !10059

if.end.31:                                        ; preds = %cond.end
  %31 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10060, !tbaa !2505
  %32 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !10061
  %33 = bitcast %struct.mpd_context_t* %31 to i8*, !dbg !10061
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 48, i32 8, i1 false), !dbg !10061, !tbaa.struct !8991
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 6, !dbg !10062
  store i32 6, i32* %round, align 4, !dbg !10063, !tbaa !4148
  %34 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10064, !tbaa !2505
  %allcr = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %34, i32 0, i32 8, !dbg !10065
  %35 = load i32, i32* %allcr, align 4, !dbg !10065, !tbaa !8996
  %tobool32 = icmp ne i32 %35, 0, !dbg !10064
  br i1 %tobool32, label %if.then.33, label %if.else, !dbg !10066

if.then.33:                                       ; preds = %if.end.31
  %36 = bitcast [64 x i64]* %t1_data to i8*, !dbg !10067
  call void @llvm.lifetime.start(i64 512, i8* %36) #4, !dbg !10067
  call void @llvm.dbg.declare(metadata [64 x i64]* %t1_data, metadata !1035, metadata !2395), !dbg !10068
  %37 = bitcast %struct.mpd_t* %t1 to i8*, !dbg !10069
  call void @llvm.lifetime.start(i64 48, i8* %37) #4, !dbg !10069
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %t1, metadata !1038, metadata !2395), !dbg !10070
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 0, !dbg !10071
  store i8 48, i8* %flags, align 1, !dbg !10071, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 1, !dbg !10071
  store i64 0, i64* %exp, align 8, !dbg !10071, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 2, !dbg !10071
  store i64 0, i64* %digits, align 8, !dbg !10071, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 3, !dbg !10071
  store i64 0, i64* %len, align 8, !dbg !10071, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 4, !dbg !10071
  store i64 64, i64* %alloc, align 8, !dbg !10071, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 5, !dbg !10071
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %t1_data, i32 0, i32 0, !dbg !10072
  store i64* %arraydecay, i64** %data, align 8, !dbg !10071, !tbaa !2546
  %38 = bitcast [64 x i64]* %t2_data to i8*, !dbg !10073
  call void @llvm.lifetime.start(i64 512, i8* %38) #4, !dbg !10073
  call void @llvm.dbg.declare(metadata [64 x i64]* %t2_data, metadata !1039, metadata !2395), !dbg !10074
  %39 = bitcast %struct.mpd_t* %t2 to i8*, !dbg !10075
  call void @llvm.lifetime.start(i64 48, i8* %39) #4, !dbg !10075
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %t2, metadata !1040, metadata !2395), !dbg !10076
  %flags34 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 0, !dbg !10077
  store i8 48, i8* %flags34, align 1, !dbg !10077, !tbaa !2620
  %exp35 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 1, !dbg !10077
  store i64 0, i64* %exp35, align 8, !dbg !10077, !tbaa !2510
  %digits36 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 2, !dbg !10077
  store i64 0, i64* %digits36, align 8, !dbg !10077, !tbaa !2514
  %len37 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 3, !dbg !10077
  store i64 0, i64* %len37, align 8, !dbg !10077, !tbaa !2542
  %alloc38 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 4, !dbg !10077
  store i64 64, i64* %alloc38, align 8, !dbg !10077, !tbaa !2835
  %data39 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 5, !dbg !10077
  %arraydecay40 = getelementptr inbounds [64 x i64], [64 x i64]* %t2_data, i32 0, i32 0, !dbg !10078
  store i64* %arraydecay40, i64** %data39, align 8, !dbg !10077, !tbaa !2546
  %40 = bitcast [64 x i64]* %ulp_data to i8*, !dbg !10079
  call void @llvm.lifetime.start(i64 512, i8* %40) #4, !dbg !10079
  call void @llvm.dbg.declare(metadata [64 x i64]* %ulp_data, metadata !1041, metadata !2395), !dbg !10080
  %41 = bitcast %struct.mpd_t* %ulp to i8*, !dbg !10081
  call void @llvm.lifetime.start(i64 48, i8* %41) #4, !dbg !10081
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %ulp, metadata !1042, metadata !2395), !dbg !10082
  %flags41 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 0, !dbg !10083
  store i8 48, i8* %flags41, align 1, !dbg !10083, !tbaa !2620
  %exp42 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 1, !dbg !10083
  store i64 0, i64* %exp42, align 8, !dbg !10083, !tbaa !2510
  %digits43 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 2, !dbg !10083
  store i64 0, i64* %digits43, align 8, !dbg !10083, !tbaa !2514
  %len44 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 3, !dbg !10083
  store i64 0, i64* %len44, align 8, !dbg !10083, !tbaa !2542
  %alloc45 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 4, !dbg !10083
  store i64 64, i64* %alloc45, align 8, !dbg !10083, !tbaa !2835
  %data46 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 5, !dbg !10083
  %arraydecay47 = getelementptr inbounds [64 x i64], [64 x i64]* %ulp_data, i32 0, i32 0, !dbg !10084
  store i64* %arraydecay47, i64** %data46, align 8, !dbg !10083, !tbaa !2546
  %42 = bitcast [64 x i64]* %aa_data to i8*, !dbg !10085
  call void @llvm.lifetime.start(i64 512, i8* %42) #4, !dbg !10085
  call void @llvm.dbg.declare(metadata [64 x i64]* %aa_data, metadata !1043, metadata !2395), !dbg !10086
  %43 = bitcast %struct.mpd_t* %aa to i8*, !dbg !10087
  call void @llvm.lifetime.start(i64 48, i8* %43) #4, !dbg !10087
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %aa, metadata !1044, metadata !2395), !dbg !10088
  %flags48 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 0, !dbg !10089
  store i8 48, i8* %flags48, align 1, !dbg !10089, !tbaa !2620
  %exp49 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 1, !dbg !10089
  store i64 0, i64* %exp49, align 8, !dbg !10089, !tbaa !2510
  %digits50 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 2, !dbg !10089
  store i64 0, i64* %digits50, align 8, !dbg !10089, !tbaa !2514
  %len51 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 3, !dbg !10089
  store i64 0, i64* %len51, align 8, !dbg !10089, !tbaa !2542
  %alloc52 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 4, !dbg !10089
  store i64 64, i64* %alloc52, align 8, !dbg !10089, !tbaa !2835
  %data53 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 5, !dbg !10089
  %arraydecay54 = getelementptr inbounds [64 x i64], [64 x i64]* %aa_data, i32 0, i32 0, !dbg !10090
  store i64* %arraydecay54, i64** %data53, align 8, !dbg !10089, !tbaa !2546
  %44 = bitcast i64* %prec to i8*, !dbg !10091
  call void @llvm.lifetime.start(i64 8, i8* %44) #4, !dbg !10091
  call void @llvm.dbg.declare(metadata i64* %prec, metadata !1045, metadata !2395), !dbg !10092
  %45 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10093, !tbaa !2505
  %46 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10095, !tbaa !2505
  %cmp55 = icmp eq %struct.mpd_t* %45, %46, !dbg !10096
  br i1 %cmp55, label %if.then.57, label %if.end.62, !dbg !10097

if.then.57:                                       ; preds = %if.then.33
  %47 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10098, !tbaa !2505
  %48 = load i32*, i32** %status.addr, align 8, !dbg !10101, !tbaa !2505
  %call58 = call i32 @mpd_qcopy(%struct.mpd_t* %aa, %struct.mpd_t* %47, i32* %48), !dbg !10102
  %tobool59 = icmp ne i32 %call58, 0, !dbg !10102
  br i1 %tobool59, label %if.end.61, label %if.then.60, !dbg !10103

if.then.60:                                       ; preds = %if.then.57
  %49 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10104, !tbaa !2505
  %50 = load i32*, i32** %status.addr, align 8, !dbg !10106, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %49, i32 512, i32* %50), !dbg !10107
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10108

if.end.61:                                        ; preds = %if.then.57
  store %struct.mpd_t* %aa, %struct.mpd_t** %a.addr, align 8, !dbg !10109, !tbaa !2505
  br label %if.end.62, !dbg !10110

if.end.62:                                        ; preds = %if.end.61, %if.then.33
  %clamp = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 7, !dbg !10111
  store i32 0, i32* %clamp, align 4, !dbg !10112, !tbaa !3962
  %51 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10113, !tbaa !2505
  %prec63 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %51, i32 0, i32 0, !dbg !10114
  %52 = load i64, i64* %prec63, align 8, !dbg !10114, !tbaa !2526
  %add = add i64 %52, 3, !dbg !10115
  store i64 %add, i64* %prec, align 8, !dbg !10116, !tbaa !2391
  br label %while.cond, !dbg !10117

while.cond:                                       ; preds = %if.end.85, %if.end.62
  br label %while.body, !dbg !10118

while.body:                                       ; preds = %while.cond
  %53 = load i64, i64* %prec, align 8, !dbg !10121, !tbaa !2391
  %prec64 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !10123
  store i64 %53, i64* %prec64, align 8, !dbg !10124, !tbaa !2526
  %54 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10125, !tbaa !2505
  %55 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10126, !tbaa !2505
  %56 = load i32*, i32** %status.addr, align 8, !dbg !10127, !tbaa !2505
  call void @_mpd_qln(%struct.mpd_t* %54, %struct.mpd_t* %55, %struct.mpd_context_t* %workctx, i32* %56), !dbg !10128
  %57 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10129, !tbaa !2505
  %exp65 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %57, i32 0, i32 1, !dbg !10130
  %58 = load i64, i64* %exp65, align 8, !dbg !10130, !tbaa !2510
  %59 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10131, !tbaa !2505
  %digits66 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %59, i32 0, i32 2, !dbg !10132
  %60 = load i64, i64* %digits66, align 8, !dbg !10132, !tbaa !2514
  %add67 = add i64 %58, %60, !dbg !10133
  %prec68 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !10134
  %61 = load i64, i64* %prec68, align 8, !dbg !10134, !tbaa !2526
  %sub69 = sub i64 %add67, %61, !dbg !10135
  call void @_ssettriple(%struct.mpd_t* %ulp, i8 zeroext 0, i64 1, i64 %sub69), !dbg !10136
  %62 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10137, !tbaa !2505
  %prec70 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %62, i32 0, i32 0, !dbg !10138
  %63 = load i64, i64* %prec70, align 8, !dbg !10138, !tbaa !2526
  %prec71 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !10139
  store i64 %63, i64* %prec71, align 8, !dbg !10140, !tbaa !2526
  %64 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10141, !tbaa !2505
  %status72 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !10142
  call void @mpd_qadd(%struct.mpd_t* %t1, %struct.mpd_t* %64, %struct.mpd_t* %ulp, %struct.mpd_context_t* %workctx, i32* %status72), !dbg !10143
  %65 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10144, !tbaa !2505
  %status73 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !10145
  call void @mpd_qsub(%struct.mpd_t* %t2, %struct.mpd_t* %65, %struct.mpd_t* %ulp, %struct.mpd_context_t* %workctx, i32* %status73), !dbg !10146
  %66 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10147, !tbaa !2505
  %call74 = call i32 @mpd_isspecial(%struct.mpd_t* %66), !dbg !10149
  %tobool75 = icmp ne i32 %call74, 0, !dbg !10149
  br i1 %tobool75, label %if.then.82, label %lor.lhs.false, !dbg !10150

lor.lhs.false:                                    ; preds = %while.body
  %67 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10151, !tbaa !2505
  %call76 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %67), !dbg !10153
  %tobool77 = icmp ne i32 %call76, 0, !dbg !10153
  br i1 %tobool77, label %if.then.82, label %lor.lhs.false.78, !dbg !10154

lor.lhs.false.78:                                 ; preds = %lor.lhs.false
  %68 = load i32*, i32** %status.addr, align 8, !dbg !10155, !tbaa !2505
  %call79 = call i32 @mpd_qcmp(%struct.mpd_t* %t1, %struct.mpd_t* %t2, i32* %68), !dbg !10156
  %cmp80 = icmp eq i32 %call79, 0, !dbg !10157
  br i1 %cmp80, label %if.then.82, label %if.end.85, !dbg !10158

if.then.82:                                       ; preds = %lor.lhs.false.78, %lor.lhs.false, %while.body
  %69 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10159, !tbaa !2505
  %clamp83 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %69, i32 0, i32 7, !dbg !10161
  %70 = load i32, i32* %clamp83, align 4, !dbg !10161, !tbaa !3962
  %clamp84 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 7, !dbg !10162
  store i32 %70, i32* %clamp84, align 4, !dbg !10163, !tbaa !3962
  %71 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10164, !tbaa !2505
  %72 = load i32*, i32** %status.addr, align 8, !dbg !10165, !tbaa !2505
  call void @mpd_check_underflow(%struct.mpd_t* %71, %struct.mpd_context_t* %workctx, i32* %72), !dbg !10166
  %73 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10167, !tbaa !2505
  %74 = load i32*, i32** %status.addr, align 8, !dbg !10168, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %73, %struct.mpd_context_t* %workctx, i32* %74), !dbg !10169
  br label %while.end, !dbg !10170

if.end.85:                                        ; preds = %lor.lhs.false.78
  %75 = load i64, i64* %prec, align 8, !dbg !10171, !tbaa !2391
  %add86 = add i64 %75, 19, !dbg !10171
  store i64 %add86, i64* %prec, align 8, !dbg !10171, !tbaa !2391
  br label %while.cond, !dbg !10117

while.end:                                        ; preds = %if.then.82
  call void @mpd_del(%struct.mpd_t* %t1), !dbg !10172
  call void @mpd_del(%struct.mpd_t* %t2), !dbg !10173
  call void @mpd_del(%struct.mpd_t* %ulp), !dbg !10174
  call void @mpd_del(%struct.mpd_t* %aa), !dbg !10175
  store i32 0, i32* %cleanup.dest.slot, !dbg !10176
  br label %cleanup, !dbg !10176

cleanup:                                          ; preds = %while.end, %if.then.60
  %76 = bitcast i64* %prec to i8*, !dbg !10177
  call void @llvm.lifetime.end(i64 8, i8* %76) #4, !dbg !10177
  %77 = bitcast %struct.mpd_t* %aa to i8*, !dbg !10177
  call void @llvm.lifetime.end(i64 48, i8* %77) #4, !dbg !10177
  %78 = bitcast [64 x i64]* %aa_data to i8*, !dbg !10177
  call void @llvm.lifetime.end(i64 512, i8* %78) #4, !dbg !10177
  %79 = bitcast %struct.mpd_t* %ulp to i8*, !dbg !10177
  call void @llvm.lifetime.end(i64 48, i8* %79) #4, !dbg !10177
  %80 = bitcast [64 x i64]* %ulp_data to i8*, !dbg !10177
  call void @llvm.lifetime.end(i64 512, i8* %80) #4, !dbg !10177
  %81 = bitcast %struct.mpd_t* %t2 to i8*, !dbg !10177
  call void @llvm.lifetime.end(i64 48, i8* %81) #4, !dbg !10177
  %82 = bitcast [64 x i64]* %t2_data to i8*, !dbg !10177
  call void @llvm.lifetime.end(i64 512, i8* %82) #4, !dbg !10177
  %83 = bitcast %struct.mpd_t* %t1 to i8*, !dbg !10177
  call void @llvm.lifetime.end(i64 48, i8* %83) #4, !dbg !10177
  %84 = bitcast [64 x i64]* %t1_data to i8*, !dbg !10177
  call void @llvm.lifetime.end(i64 512, i8* %84) #4, !dbg !10177
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.95, !dbg !10179

if.else:                                          ; preds = %if.end.31
  %85 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10180, !tbaa !2505
  %86 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10182, !tbaa !2505
  %87 = load i32*, i32** %status.addr, align 8, !dbg !10183, !tbaa !2505
  call void @_mpd_qln(%struct.mpd_t* %85, %struct.mpd_t* %86, %struct.mpd_context_t* %workctx, i32* %87), !dbg !10184
  %88 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10185, !tbaa !2505
  %89 = load i32*, i32** %status.addr, align 8, !dbg !10186, !tbaa !2505
  call void @mpd_check_underflow(%struct.mpd_t* %88, %struct.mpd_context_t* %workctx, i32* %89), !dbg !10187
  %90 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10188, !tbaa !2505
  %91 = load i32*, i32** %status.addr, align 8, !dbg !10189, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %90, %struct.mpd_context_t* %workctx, i32* %91), !dbg !10190
  br label %if.end.95

if.end.95:                                        ; preds = %if.else, %cleanup.cont
  store i32 0, i32* %cleanup.dest.slot, !dbg !10191
  br label %cleanup.96, !dbg !10191

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.96

cleanup.96:                                       ; preds = %NewDefault, %if.end.95, %if.then.27, %if.then.18, %if.then.15, %if.then.11, %if.end.7, %if.then.6, %if.then.3
  %92 = bitcast i64* %t to i8*, !dbg !10192
  call void @llvm.lifetime.end(i64 8, i8* %92) #4, !dbg !10192
  %93 = bitcast i64* %adjexp to i8*, !dbg !10192
  call void @llvm.lifetime.end(i64 8, i8* %93) #4, !dbg !10192
  %94 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !10192
  call void @llvm.lifetime.end(i64 48, i8* %94) #4, !dbg !10192
  %cleanup.dest.99 = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont.100

cleanup.cont.100:                                 ; preds = %cleanup.96
  ret void, !dbg !10191

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qln(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %varcontext = alloca %struct.mpd_context_t, align 8
  %maxcontext = alloca %struct.mpd_context_t, align 8
  %z = alloca %struct.mpd_t*, align 8
  %v_data = alloca [64 x i64], align 16
  %v = alloca %struct.mpd_t, align 8
  %vtmp_data = alloca [64 x i64], align 16
  %vtmp = alloca %struct.mpd_t, align 8
  %tmp_data = alloca [64 x i64], align 16
  %tmp = alloca %struct.mpd_t, align 8
  %klist = alloca [64 x i64], align 16
  %maxprec = alloca i64, align 8
  %shift = alloca i64, align 8
  %t = alloca i64, align 8
  %a_digits = alloca i64, align 8
  %a_exp = alloca i64, align 8
  %dummy = alloca i64, align 8
  %x = alloca i64, align 8
  %i = alloca i32, align 4
  %cmp56 = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1884, metadata !2395), !dbg !10193
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1885, metadata !2395), !dbg !10194
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1886, metadata !2395), !dbg !10195
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1887, metadata !2395), !dbg !10196
  %0 = bitcast %struct.mpd_context_t* %varcontext to i8*, !dbg !10197
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !10197
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %varcontext, metadata !1888, metadata !2395), !dbg !10198
  %1 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !10197
  call void @llvm.lifetime.start(i64 48, i8* %1) #4, !dbg !10197
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxcontext, metadata !1889, metadata !2395), !dbg !10199
  %2 = bitcast %struct.mpd_t** %z to i8*, !dbg !10200
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !10200
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %z, metadata !1890, metadata !2395), !dbg !10201
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10202, !tbaa !2505
  store %struct.mpd_t* %3, %struct.mpd_t** %z, align 8, !dbg !10201, !tbaa !2505
  %4 = bitcast [64 x i64]* %v_data to i8*, !dbg !10203
  call void @llvm.lifetime.start(i64 512, i8* %4) #4, !dbg !10203
  call void @llvm.dbg.declare(metadata [64 x i64]* %v_data, metadata !1891, metadata !2395), !dbg !10204
  %5 = bitcast %struct.mpd_t* %v to i8*, !dbg !10205
  call void @llvm.lifetime.start(i64 48, i8* %5) #4, !dbg !10205
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %v, metadata !1892, metadata !2395), !dbg !10206
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %v, i32 0, i32 0, !dbg !10207
  store i8 48, i8* %flags, align 1, !dbg !10207, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %v, i32 0, i32 1, !dbg !10207
  store i64 0, i64* %exp, align 8, !dbg !10207, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %v, i32 0, i32 2, !dbg !10207
  store i64 0, i64* %digits, align 8, !dbg !10207, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %v, i32 0, i32 3, !dbg !10207
  store i64 0, i64* %len, align 8, !dbg !10207, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %v, i32 0, i32 4, !dbg !10207
  store i64 64, i64* %alloc, align 8, !dbg !10207, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %v, i32 0, i32 5, !dbg !10207
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %v_data, i32 0, i32 0, !dbg !10208
  store i64* %arraydecay, i64** %data, align 8, !dbg !10207, !tbaa !2546
  %6 = bitcast [64 x i64]* %vtmp_data to i8*, !dbg !10209
  call void @llvm.lifetime.start(i64 512, i8* %6) #4, !dbg !10209
  call void @llvm.dbg.declare(metadata [64 x i64]* %vtmp_data, metadata !1893, metadata !2395), !dbg !10210
  %7 = bitcast %struct.mpd_t* %vtmp to i8*, !dbg !10211
  call void @llvm.lifetime.start(i64 48, i8* %7) #4, !dbg !10211
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %vtmp, metadata !1894, metadata !2395), !dbg !10212
  %flags1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 0, !dbg !10213
  store i8 48, i8* %flags1, align 1, !dbg !10213, !tbaa !2620
  %exp2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 1, !dbg !10213
  store i64 0, i64* %exp2, align 8, !dbg !10213, !tbaa !2510
  %digits3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 2, !dbg !10213
  store i64 0, i64* %digits3, align 8, !dbg !10213, !tbaa !2514
  %len4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 3, !dbg !10213
  store i64 0, i64* %len4, align 8, !dbg !10213, !tbaa !2542
  %alloc5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 4, !dbg !10213
  store i64 64, i64* %alloc5, align 8, !dbg !10213, !tbaa !2835
  %data6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 5, !dbg !10213
  %arraydecay7 = getelementptr inbounds [64 x i64], [64 x i64]* %vtmp_data, i32 0, i32 0, !dbg !10214
  store i64* %arraydecay7, i64** %data6, align 8, !dbg !10213, !tbaa !2546
  %8 = bitcast [64 x i64]* %tmp_data to i8*, !dbg !10215
  call void @llvm.lifetime.start(i64 512, i8* %8) #4, !dbg !10215
  call void @llvm.dbg.declare(metadata [64 x i64]* %tmp_data, metadata !1895, metadata !2395), !dbg !10216
  %9 = bitcast %struct.mpd_t* %tmp to i8*, !dbg !10217
  call void @llvm.lifetime.start(i64 48, i8* %9) #4, !dbg !10217
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %tmp, metadata !1896, metadata !2395), !dbg !10218
  %flags8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 0, !dbg !10219
  store i8 48, i8* %flags8, align 1, !dbg !10219, !tbaa !2620
  %exp9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 1, !dbg !10219
  store i64 0, i64* %exp9, align 8, !dbg !10219, !tbaa !2510
  %digits10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 2, !dbg !10219
  store i64 0, i64* %digits10, align 8, !dbg !10219, !tbaa !2514
  %len11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 3, !dbg !10219
  store i64 0, i64* %len11, align 8, !dbg !10219, !tbaa !2542
  %alloc12 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 4, !dbg !10219
  store i64 64, i64* %alloc12, align 8, !dbg !10219, !tbaa !2835
  %data13 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 5, !dbg !10219
  %arraydecay14 = getelementptr inbounds [64 x i64], [64 x i64]* %tmp_data, i32 0, i32 0, !dbg !10220
  store i64* %arraydecay14, i64** %data13, align 8, !dbg !10219, !tbaa !2546
  %10 = bitcast [64 x i64]* %klist to i8*, !dbg !10221
  call void @llvm.lifetime.start(i64 512, i8* %10) #4, !dbg !10221
  call void @llvm.dbg.declare(metadata [64 x i64]* %klist, metadata !1897, metadata !2395), !dbg !10222
  %11 = bitcast i64* %maxprec to i8*, !dbg !10223
  call void @llvm.lifetime.start(i64 8, i8* %11) #4, !dbg !10223
  call void @llvm.dbg.declare(metadata i64* %maxprec, metadata !1898, metadata !2395), !dbg !10224
  %12 = bitcast i64* %shift to i8*, !dbg !10223
  call void @llvm.lifetime.start(i64 8, i8* %12) #4, !dbg !10223
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !1899, metadata !2395), !dbg !10225
  %13 = bitcast i64* %t to i8*, !dbg !10223
  call void @llvm.lifetime.start(i64 8, i8* %13) #4, !dbg !10223
  call void @llvm.dbg.declare(metadata i64* %t, metadata !1900, metadata !2395), !dbg !10226
  %14 = bitcast i64* %a_digits to i8*, !dbg !10227
  call void @llvm.lifetime.start(i64 8, i8* %14) #4, !dbg !10227
  call void @llvm.dbg.declare(metadata i64* %a_digits, metadata !1901, metadata !2395), !dbg !10228
  %15 = bitcast i64* %a_exp to i8*, !dbg !10227
  call void @llvm.lifetime.start(i64 8, i8* %15) #4, !dbg !10227
  call void @llvm.dbg.declare(metadata i64* %a_exp, metadata !1902, metadata !2395), !dbg !10229
  %16 = bitcast i64* %dummy to i8*, !dbg !10230
  call void @llvm.lifetime.start(i64 8, i8* %16) #4, !dbg !10230
  call void @llvm.dbg.declare(metadata i64* %dummy, metadata !1903, metadata !2395), !dbg !10231
  %17 = bitcast i64* %x to i8*, !dbg !10230
  call void @llvm.lifetime.start(i64 8, i8* %17) #4, !dbg !10230
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1904, metadata !2395), !dbg !10232
  %18 = bitcast i32* %i to i8*, !dbg !10233
  call void @llvm.lifetime.start(i64 4, i8* %18) #4, !dbg !10233
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1905, metadata !2395), !dbg !10234
  %19 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10235, !tbaa !2505
  %20 = load i32*, i32** %status.addr, align 8, !dbg !10237, !tbaa !2505
  %call = call i32 @mpd_qcopy(%struct.mpd_t* %v, %struct.mpd_t* %19, i32* %20), !dbg !10238
  %tobool = icmp ne i32 %call, 0, !dbg !10238
  br i1 %tobool, label %if.end, label %if.then, !dbg !10239

if.then:                                          ; preds = %entry
  %21 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10240, !tbaa !2505
  %22 = load i32*, i32** %status.addr, align 8, !dbg !10242, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %21, i32 512, i32* %22), !dbg !10243
  br label %finish, !dbg !10244

if.end:                                           ; preds = %entry
  call void @_mpd_get_msdigits(i64* %dummy, i64* %x, %struct.mpd_t* %v, i32 3), !dbg !10245
  %23 = load i64, i64* %x, align 8, !dbg !10246, !tbaa !2391
  %cmp = icmp ult i64 %23, 10, !dbg !10248
  br i1 %cmp, label %if.then.24, label %if.end.25, !dbg !10249

if.then.24:                                       ; preds = %if.end
  %24 = load i64, i64* %x, align 8, !dbg !10250, !tbaa !2391
  %mul = mul i64 %24, 10, !dbg !10250
  store i64 %mul, i64* %x, align 8, !dbg !10250, !tbaa !2391
  br label %if.end.25, !dbg !10252

if.end.25:                                        ; preds = %if.then.24, %if.end
  %25 = load i64, i64* %x, align 8, !dbg !10253, !tbaa !2391
  %cmp26 = icmp ult i64 %25, 100, !dbg !10255
  br i1 %cmp26, label %if.then.27, label %if.end.29, !dbg !10256

if.then.27:                                       ; preds = %if.end.25
  %26 = load i64, i64* %x, align 8, !dbg !10257, !tbaa !2391
  %mul28 = mul i64 %26, 10, !dbg !10257
  store i64 %mul28, i64* %x, align 8, !dbg !10257, !tbaa !2391
  br label %if.end.29, !dbg !10259

if.end.29:                                        ; preds = %if.then.27, %if.end.25
  %27 = load i64, i64* %x, align 8, !dbg !10260, !tbaa !2391
  %sub = sub i64 %27, 100, !dbg !10260
  store i64 %sub, i64* %x, align 8, !dbg !10260, !tbaa !2391
  %28 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10261, !tbaa !2505
  %digits30 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %28, i32 0, i32 2, !dbg !10262
  %29 = load i64, i64* %digits30, align 8, !dbg !10262, !tbaa !2514
  store i64 %29, i64* %a_digits, align 8, !dbg !10263, !tbaa !2391
  %30 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10264, !tbaa !2505
  %exp31 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %30, i32 0, i32 1, !dbg !10265
  %31 = load i64, i64* %exp31, align 8, !dbg !10265, !tbaa !2510
  store i64 %31, i64* %a_exp, align 8, !dbg !10266, !tbaa !2391
  %32 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !10267, !tbaa !2505
  call void @mpd_minalloc(%struct.mpd_t* %32), !dbg !10268
  %33 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !10269, !tbaa !2505
  call void @mpd_clear_flags(%struct.mpd_t* %33), !dbg !10270
  %34 = load i64, i64* %x, align 8, !dbg !10271, !tbaa !2391
  %arrayidx = getelementptr [900 x i16], [900 x i16]* @lnapprox, i32 0, i64 %34, !dbg !10272
  %35 = load i16, i16* %arrayidx, align 2, !dbg !10272, !tbaa !10273
  %conv = zext i16 %35 to i64, !dbg !10272
  %36 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !10275, !tbaa !2505
  %data32 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %36, i32 0, i32 5, !dbg !10276
  %37 = load i64*, i64** %data32, align 8, !dbg !10276, !tbaa !2546
  %arrayidx33 = getelementptr i64, i64* %37, i64 0, !dbg !10275
  store i64 %conv, i64* %arrayidx33, align 8, !dbg !10277, !tbaa !2391
  %38 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !10278, !tbaa !2505
  %len34 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %38, i32 0, i32 3, !dbg !10279
  store i64 1, i64* %len34, align 8, !dbg !10280, !tbaa !2542
  %39 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !10281, !tbaa !2505
  %exp35 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %39, i32 0, i32 1, !dbg !10282
  store i64 -3, i64* %exp35, align 8, !dbg !10283, !tbaa !2510
  %40 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !10284, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %40), !dbg !10285
  %41 = load i64, i64* %x, align 8, !dbg !10286, !tbaa !2391
  %cmp36 = icmp ule i64 %41, 400, !dbg !10288
  br i1 %cmp36, label %if.then.38, label %if.else, !dbg !10289

if.then.38:                                       ; preds = %if.end.29
  %42 = load i64, i64* %a_digits, align 8, !dbg !10290, !tbaa !2391
  %sub39 = sub i64 %42, 1, !dbg !10292
  %sub40 = sub i64 0, %sub39, !dbg !10293
  %exp41 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %v, i32 0, i32 1, !dbg !10294
  store i64 %sub40, i64* %exp41, align 8, !dbg !10295, !tbaa !2510
  %43 = load i64, i64* %a_exp, align 8, !dbg !10296, !tbaa !2391
  %44 = load i64, i64* %a_digits, align 8, !dbg !10297, !tbaa !2391
  %add = add i64 %43, %44, !dbg !10298
  %sub42 = sub i64 %add, 1, !dbg !10299
  store i64 %sub42, i64* %t, align 8, !dbg !10300, !tbaa !2391
  br label %if.end.46, !dbg !10301

if.else:                                          ; preds = %if.end.29
  %45 = load i64, i64* %a_digits, align 8, !dbg !10302, !tbaa !2391
  %sub43 = sub i64 0, %45, !dbg !10304
  %exp44 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %v, i32 0, i32 1, !dbg !10305
  store i64 %sub43, i64* %exp44, align 8, !dbg !10306, !tbaa !2510
  %46 = load i64, i64* %a_exp, align 8, !dbg !10307, !tbaa !2391
  %47 = load i64, i64* %a_digits, align 8, !dbg !10308, !tbaa !2391
  %add45 = add i64 %46, %47, !dbg !10309
  store i64 %add45, i64* %t, align 8, !dbg !10310, !tbaa !2391
  %48 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !10311, !tbaa !2505
  call void @mpd_set_negative(%struct.mpd_t* %48), !dbg !10312
  br label %if.end.46

if.end.46:                                        ; preds = %if.else, %if.then.38
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxcontext), !dbg !10313
  call void @mpd_maxcontext(%struct.mpd_context_t* %varcontext), !dbg !10314
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 6, !dbg !10315
  store i32 8, i32* %round, align 4, !dbg !10316, !tbaa !4148
  %49 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10317, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %49, i32 0, i32 0, !dbg !10318
  %50 = load i64, i64* %prec, align 8, !dbg !10318, !tbaa !2526
  %add47 = add i64 %50, 2, !dbg !10319
  store i64 %add47, i64* %maxprec, align 8, !dbg !10320, !tbaa !2391
  %51 = load i64, i64* %t, align 8, !dbg !10321, !tbaa !2391
  %cmp48 = icmp eq i64 %51, 0, !dbg !10322
  br i1 %cmp48, label %land.lhs.true, label %if.end.89, !dbg !10323

land.lhs.true:                                    ; preds = %if.end.46
  %52 = load i64, i64* %x, align 8, !dbg !10324, !tbaa !2391
  %cmp50 = icmp ule i64 %52, 15, !dbg !10326
  br i1 %cmp50, label %if.then.54, label %lor.lhs.false, !dbg !10327

lor.lhs.false:                                    ; preds = %land.lhs.true
  %53 = load i64, i64* %x, align 8, !dbg !10328, !tbaa !2391
  %cmp52 = icmp uge i64 %53, 800, !dbg !10330
  br i1 %cmp52, label %if.then.54, label %if.end.89, !dbg !10331

if.then.54:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %54 = bitcast i32* %cmp56 to i8*, !dbg !10332
  call void @llvm.lifetime.start(i64 4, i8* %54) #4, !dbg !10332
  call void @llvm.dbg.declare(metadata i32* %cmp56, metadata !1906, metadata !2395), !dbg !10333
  %call57 = call i32 @_mpd_cmp(%struct.mpd_t* %v, %struct.mpd_t* @one), !dbg !10334
  store i32 %call57, i32* %cmp56, align 4, !dbg !10333, !tbaa !2554
  %status58 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 4, !dbg !10335
  call void @_mpd_qsub(%struct.mpd_t* %tmp, %struct.mpd_t* %v, %struct.mpd_t* @one, %struct.mpd_context_t* %maxcontext, i32* %status58), !dbg !10336
  %status59 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 4, !dbg !10337
  %55 = load i32, i32* %status59, align 4, !dbg !10337, !tbaa !9309
  %and = and i32 %55, 958, !dbg !10339
  %tobool60 = icmp ne i32 %and, 0, !dbg !10339
  br i1 %tobool60, label %if.then.61, label %if.end.62, !dbg !10340

if.then.61:                                       ; preds = %if.then.54
  %56 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10341, !tbaa !2505
  %57 = load i32*, i32** %status.addr, align 8, !dbg !10343, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %56, i32 512, i32* %57), !dbg !10344
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10345

if.end.62:                                        ; preds = %if.then.54
  %58 = load i32, i32* %cmp56, align 4, !dbg !10346, !tbaa !2554
  %cmp63 = icmp slt i32 %58, 0, !dbg !10348
  br i1 %cmp63, label %if.then.65, label %if.end.68, !dbg !10349

if.then.65:                                       ; preds = %if.end.62
  %exp66 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 1, !dbg !10350
  %59 = load i64, i64* %exp66, align 8, !dbg !10352, !tbaa !2510
  %add67 = add i64 %59, 1, !dbg !10352
  store i64 %add67, i64* %exp66, align 8, !dbg !10352, !tbaa !2510
  br label %if.end.68, !dbg !10353

if.end.68:                                        ; preds = %if.then.65, %if.end.62
  %call69 = call i64 @mpd_adjexp(%struct.mpd_t* %tmp), !dbg !10354
  %60 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10356, !tbaa !2505
  %call70 = call i64 @mpd_etiny(%struct.mpd_context_t* %60), !dbg !10357
  %cmp71 = icmp slt i64 %call69, %call70, !dbg !10358
  br i1 %cmp71, label %if.then.73, label %if.end.79, !dbg !10359

if.then.73:                                       ; preds = %if.end.68
  %61 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10360, !tbaa !2505
  %62 = load i32, i32* %cmp56, align 4, !dbg !10362, !tbaa !2554
  %cmp74 = icmp slt i32 %62, 0, !dbg !10363
  %conv75 = zext i1 %cmp74 to i32, !dbg !10363
  %conv76 = trunc i32 %conv75 to i8, !dbg !10364
  %63 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10365, !tbaa !2505
  %call77 = call i64 @mpd_etiny(%struct.mpd_context_t* %63), !dbg !10366
  %sub78 = sub i64 %call77, 1, !dbg !10367
  call void @_settriple(%struct.mpd_t* %61, i8 zeroext %conv76, i64 1, i64 %sub78), !dbg !10368
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10369

if.end.79:                                        ; preds = %if.end.68
  %exp80 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 1, !dbg !10370
  %64 = load i64, i64* %exp80, align 8, !dbg !10371, !tbaa !2510
  %sub81 = sub i64 %64, 1, !dbg !10371
  store i64 %sub81, i64* %exp80, align 8, !dbg !10371, !tbaa !2510
  %call82 = call i64 @mpd_adjexp(%struct.mpd_t* %tmp), !dbg !10372
  %cmp83 = icmp slt i64 %call82, 0, !dbg !10374
  br i1 %cmp83, label %if.then.85, label %if.end.88, !dbg !10375

if.then.85:                                       ; preds = %if.end.79
  %65 = load i64, i64* %maxprec, align 8, !dbg !10376, !tbaa !2391
  %call86 = call i64 @mpd_adjexp(%struct.mpd_t* %tmp), !dbg !10378
  %sub87 = sub i64 %65, %call86, !dbg !10379
  store i64 %sub87, i64* %maxprec, align 8, !dbg !10380, !tbaa !2391
  br label %if.end.88, !dbg !10381

if.end.88:                                        ; preds = %if.then.85, %if.end.79
  store i32 0, i32* %cleanup.dest.slot, !dbg !10382
  br label %cleanup, !dbg !10382

cleanup:                                          ; preds = %if.end.88, %if.then.73, %if.then.61
  %66 = bitcast i32* %cmp56 to i8*, !dbg !10383
  call void @llvm.lifetime.end(i64 4, i8* %66) #4, !dbg !10383
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 2
  br i1 %SwitchLeaf, label %finish, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.89, !dbg !10384

if.end.89:                                        ; preds = %cleanup.cont, %lor.lhs.false, %if.end.46
  %arraydecay90 = getelementptr inbounds [64 x i64], [64 x i64]* %klist, i32 0, i32 0, !dbg !10385
  %67 = load i64, i64* %maxprec, align 8, !dbg !10386, !tbaa !2391
  %call91 = call i32 @ln_schedule_prec(i64* %arraydecay90, i64 %67, i64 2), !dbg !10387
  store i32 %call91, i32* %i, align 4, !dbg !10388, !tbaa !2554
  br label %for.cond, !dbg !10389

for.cond:                                         ; preds = %for.inc, %if.end.89
  %68 = load i32, i32* %i, align 4, !dbg !10390, !tbaa !2554
  %cmp92 = icmp sge i32 %68, 0, !dbg !10395
  br i1 %cmp92, label %for.body, label %for.end, !dbg !10396

for.body:                                         ; preds = %for.cond
  %69 = load i32, i32* %i, align 4, !dbg !10397, !tbaa !2554
  %idxprom = sext i32 %69 to i64, !dbg !10399
  %arrayidx94 = getelementptr [64 x i64], [64 x i64]* %klist, i32 0, i64 %idxprom, !dbg !10399
  %70 = load i64, i64* %arrayidx94, align 8, !dbg !10399, !tbaa !2391
  %mul95 = mul i64 2, %70, !dbg !10400
  %add96 = add i64 %mul95, 3, !dbg !10401
  %prec97 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 0, !dbg !10402
  store i64 %add96, i64* %prec97, align 8, !dbg !10403, !tbaa !2526
  %71 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !10404, !tbaa !2505
  %flags98 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %71, i32 0, i32 0, !dbg !10405
  %72 = load i8, i8* %flags98, align 1, !dbg !10406, !tbaa !2620
  %conv99 = zext i8 %72 to i32, !dbg !10406
  %xor = xor i32 %conv99, 1, !dbg !10406
  %conv100 = trunc i32 %xor to i8, !dbg !10406
  store i8 %conv100, i8* %flags98, align 1, !dbg !10406, !tbaa !2620
  %73 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !10407, !tbaa !2505
  %74 = load i32*, i32** %status.addr, align 8, !dbg !10408, !tbaa !2505
  call void @_mpd_qexp(%struct.mpd_t* %tmp, %struct.mpd_t* %73, %struct.mpd_context_t* %varcontext, i32* %74), !dbg !10409
  %75 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !10410, !tbaa !2505
  %flags101 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %75, i32 0, i32 0, !dbg !10411
  %76 = load i8, i8* %flags101, align 1, !dbg !10412, !tbaa !2620
  %conv102 = zext i8 %76 to i32, !dbg !10412
  %xor103 = xor i32 %conv102, 1, !dbg !10412
  %conv104 = trunc i32 %xor103 to i8, !dbg !10412
  store i8 %conv104, i8* %flags101, align 1, !dbg !10412, !tbaa !2620
  %digits105 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %v, i32 0, i32 2, !dbg !10413
  %77 = load i64, i64* %digits105, align 8, !dbg !10413, !tbaa !2514
  %prec106 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 0, !dbg !10415
  %78 = load i64, i64* %prec106, align 8, !dbg !10415, !tbaa !2526
  %cmp107 = icmp sgt i64 %77, %78, !dbg !10416
  br i1 %cmp107, label %if.then.109, label %if.else.116, !dbg !10417

if.then.109:                                      ; preds = %for.body
  %digits110 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %v, i32 0, i32 2, !dbg !10418
  %79 = load i64, i64* %digits110, align 8, !dbg !10418, !tbaa !2514
  %prec111 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 0, !dbg !10420
  %80 = load i64, i64* %prec111, align 8, !dbg !10420, !tbaa !2526
  %sub112 = sub i64 %79, %80, !dbg !10421
  store i64 %sub112, i64* %shift, align 8, !dbg !10422, !tbaa !2391
  %81 = load i64, i64* %shift, align 8, !dbg !10423, !tbaa !2391
  %82 = load i32*, i32** %status.addr, align 8, !dbg !10424, !tbaa !2505
  %call113 = call i64 @mpd_qshiftr(%struct.mpd_t* %vtmp, %struct.mpd_t* %v, i64 %81, i32* %82), !dbg !10425
  %83 = load i64, i64* %shift, align 8, !dbg !10426, !tbaa !2391
  %exp114 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 1, !dbg !10427
  %84 = load i64, i64* %exp114, align 8, !dbg !10428, !tbaa !2510
  %add115 = add i64 %84, %83, !dbg !10428
  store i64 %add115, i64* %exp114, align 8, !dbg !10428, !tbaa !2510
  %85 = load i32*, i32** %status.addr, align 8, !dbg !10429, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %tmp, %struct.mpd_t* %vtmp, %struct.mpd_t* %tmp, %struct.mpd_context_t* %varcontext, i32* %85), !dbg !10430
  br label %if.end.117, !dbg !10431

if.else.116:                                      ; preds = %for.body
  %86 = load i32*, i32** %status.addr, align 8, !dbg !10432, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %tmp, %struct.mpd_t* %v, %struct.mpd_t* %tmp, %struct.mpd_context_t* %varcontext, i32* %86), !dbg !10434
  br label %if.end.117

if.end.117:                                       ; preds = %if.else.116, %if.then.109
  %87 = load i32*, i32** %status.addr, align 8, !dbg !10435, !tbaa !2505
  call void @mpd_qsub(%struct.mpd_t* %tmp, %struct.mpd_t* %tmp, %struct.mpd_t* @one, %struct.mpd_context_t* %maxcontext, i32* %87), !dbg !10436
  %88 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !10437, !tbaa !2505
  %89 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !10438, !tbaa !2505
  %90 = load i32*, i32** %status.addr, align 8, !dbg !10439, !tbaa !2505
  call void @mpd_qadd(%struct.mpd_t* %88, %struct.mpd_t* %89, %struct.mpd_t* %tmp, %struct.mpd_context_t* %maxcontext, i32* %90), !dbg !10440
  %91 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !10441, !tbaa !2505
  %call118 = call i32 @mpd_isspecial(%struct.mpd_t* %91), !dbg !10443
  %tobool119 = icmp ne i32 %call118, 0, !dbg !10443
  br i1 %tobool119, label %if.then.120, label %if.end.121, !dbg !10444

if.then.120:                                      ; preds = %if.end.117
  br label %for.end, !dbg !10445

if.end.121:                                       ; preds = %if.end.117
  br label %for.inc, !dbg !10447

for.inc:                                          ; preds = %if.end.121
  %92 = load i32, i32* %i, align 4, !dbg !10448, !tbaa !2554
  %dec = add i32 %92, -1, !dbg !10448
  store i32 %dec, i32* %i, align 4, !dbg !10448, !tbaa !2554
  br label %for.cond, !dbg !10449

for.end:                                          ; preds = %if.then.120, %for.cond
  %93 = load i64, i64* %maxprec, align 8, !dbg !10450, !tbaa !2391
  %add122 = add i64 %93, 1, !dbg !10451
  %94 = load i32*, i32** %status.addr, align 8, !dbg !10452, !tbaa !2505
  call void @mpd_qln10(%struct.mpd_t* %v, i64 %add122, i32* %94), !dbg !10453
  %95 = load i64, i64* %t, align 8, !dbg !10454, !tbaa !2391
  %96 = load i32*, i32** %status.addr, align 8, !dbg !10455, !tbaa !2505
  call void @mpd_qmul_ssize(%struct.mpd_t* %tmp, %struct.mpd_t* %v, i64 %95, %struct.mpd_context_t* %maxcontext, i32* %96), !dbg !10456
  %97 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10457, !tbaa !2505
  %98 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !10458, !tbaa !2505
  %99 = load i32*, i32** %status.addr, align 8, !dbg !10459, !tbaa !2505
  call void @mpd_qadd(%struct.mpd_t* %97, %struct.mpd_t* %tmp, %struct.mpd_t* %98, %struct.mpd_context_t* %maxcontext, i32* %99), !dbg !10460
  br label %finish, !dbg !10460

finish:                                           ; preds = %LeafBlock, %for.end, %if.then
  %100 = load i32*, i32** %status.addr, align 8, !dbg !10461, !tbaa !2505
  %101 = load i32, i32* %100, align 4, !dbg !10462, !tbaa !2554
  %or = or i32 %101, 4160, !dbg !10462
  store i32 %or, i32* %100, align 4, !dbg !10462, !tbaa !2554
  call void @mpd_del(%struct.mpd_t* %v), !dbg !10463
  call void @mpd_del(%struct.mpd_t* %vtmp), !dbg !10464
  call void @mpd_del(%struct.mpd_t* %tmp), !dbg !10465
  %102 = bitcast i32* %i to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 4, i8* %102) #4, !dbg !10466
  %103 = bitcast i64* %x to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 8, i8* %103) #4, !dbg !10466
  %104 = bitcast i64* %dummy to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 8, i8* %104) #4, !dbg !10466
  %105 = bitcast i64* %a_exp to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 8, i8* %105) #4, !dbg !10466
  %106 = bitcast i64* %a_digits to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 8, i8* %106) #4, !dbg !10466
  %107 = bitcast i64* %t to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 8, i8* %107) #4, !dbg !10466
  %108 = bitcast i64* %shift to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 8, i8* %108) #4, !dbg !10466
  %109 = bitcast i64* %maxprec to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 8, i8* %109) #4, !dbg !10466
  %110 = bitcast [64 x i64]* %klist to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 512, i8* %110) #4, !dbg !10466
  %111 = bitcast %struct.mpd_t* %tmp to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 48, i8* %111) #4, !dbg !10466
  %112 = bitcast [64 x i64]* %tmp_data to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 512, i8* %112) #4, !dbg !10466
  %113 = bitcast %struct.mpd_t* %vtmp to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 48, i8* %113) #4, !dbg !10466
  %114 = bitcast [64 x i64]* %vtmp_data to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 512, i8* %114) #4, !dbg !10466
  %115 = bitcast %struct.mpd_t* %v to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 48, i8* %115) #4, !dbg !10466
  %116 = bitcast [64 x i64]* %v_data to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 512, i8* %116) #4, !dbg !10466
  %117 = bitcast %struct.mpd_t** %z to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 8, i8* %117) #4, !dbg !10466
  %118 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 48, i8* %118) #4, !dbg !10466
  %119 = bitcast %struct.mpd_context_t* %varcontext to i8*, !dbg !10466
  call void @llvm.lifetime.end(i64 48, i8* %119) #4, !dbg !10466
  ret void, !dbg !10466
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qlog10(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workctx = alloca %struct.mpd_context_t, align 8
  %adjexp = alloca i64, align 8
  %t = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %sign = alloca i8, align 1
  %t1_data = alloca [64 x i64], align 16
  %t1 = alloca %struct.mpd_t, align 8
  %t2_data = alloca [64 x i64], align 16
  %t2 = alloca %struct.mpd_t, align 8
  %ulp_data = alloca [64 x i64], align 16
  %ulp = alloca %struct.mpd_t, align 8
  %aa_data = alloca [64 x i64], align 16
  %aa = alloca %struct.mpd_t, align 8
  %prec = alloca i64, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1048, metadata !2395), !dbg !10467
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1049, metadata !2395), !dbg !10468
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1050, metadata !2395), !dbg !10469
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1051, metadata !2395), !dbg !10470
  %0 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !10471
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !10471
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %workctx, metadata !1052, metadata !2395), !dbg !10472
  %1 = bitcast i64* %adjexp to i8*, !dbg !10473
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !10473
  call void @llvm.dbg.declare(metadata i64* %adjexp, metadata !1053, metadata !2395), !dbg !10474
  %2 = bitcast i64* %t to i8*, !dbg !10473
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !10473
  call void @llvm.dbg.declare(metadata i64* %t, metadata !1054, metadata !2395), !dbg !10475
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10476, !tbaa !2505
  %4 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !10477
  %5 = bitcast %struct.mpd_context_t* %3 to i8*, !dbg !10477
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 48, i32 8, i1 false), !dbg !10477, !tbaa.struct !8991
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 6, !dbg !10478
  store i32 6, i32* %round, align 4, !dbg !10479, !tbaa !4148
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10480, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %6), !dbg !10482
  %tobool = icmp ne i32 %call, 0, !dbg !10482
  br i1 %tobool, label %if.then, label %if.end.8, !dbg !10483

if.then:                                          ; preds = %entry
  %7 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10484, !tbaa !2505
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10487, !tbaa !2505
  %9 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10488, !tbaa !2505
  %10 = load i32*, i32** %status.addr, align 8, !dbg !10489, !tbaa !2505
  %call1 = call i32 @mpd_qcheck_nan(%struct.mpd_t* %7, %struct.mpd_t* %8, %struct.mpd_context_t* %9, i32* %10), !dbg !10490
  %tobool2 = icmp ne i32 %call1, 0, !dbg !10490
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !10491

if.then.3:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !10492

if.end:                                           ; preds = %if.then
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10494, !tbaa !2505
  %call4 = call i32 @mpd_isnegative(%struct.mpd_t* %11), !dbg !10496
  %tobool5 = icmp ne i32 %call4, 0, !dbg !10496
  br i1 %tobool5, label %if.then.6, label %if.end.7, !dbg !10497

if.then.6:                                        ; preds = %if.end
  %12 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10498, !tbaa !2505
  %13 = load i32*, i32** %status.addr, align 8, !dbg !10500, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %12, i32 256, i32* %13), !dbg !10501
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !10502

if.end.7:                                         ; preds = %if.end
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10503, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %14, i8 zeroext 0, i8 zeroext 2), !dbg !10504
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !10505

if.end.8:                                         ; preds = %entry
  %15 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10506, !tbaa !2505
  %call9 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %15), !dbg !10508
  %tobool10 = icmp ne i32 %call9, 0, !dbg !10508
  br i1 %tobool10, label %if.then.11, label %if.end.12, !dbg !10509

if.then.11:                                       ; preds = %if.end.8
  %16 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10510, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %16, i8 zeroext 1, i8 zeroext 2), !dbg !10512
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !10513

if.end.12:                                        ; preds = %if.end.8
  %17 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10514, !tbaa !2505
  %call13 = call i32 @mpd_isnegative(%struct.mpd_t* %17), !dbg !10516
  %tobool14 = icmp ne i32 %call13, 0, !dbg !10516
  br i1 %tobool14, label %if.then.15, label %if.end.16, !dbg !10517

if.then.15:                                       ; preds = %if.end.12
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10518, !tbaa !2505
  %19 = load i32*, i32** %status.addr, align 8, !dbg !10520, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %18, i32 256, i32* %19), !dbg !10521
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !10522

if.end.16:                                        ; preds = %if.end.12
  %20 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10523, !tbaa !2505
  %call17 = call i32 @mpd_coeff_ispow10(%struct.mpd_t* %20), !dbg !10524
  %tobool18 = icmp ne i32 %call17, 0, !dbg !10524
  br i1 %tobool18, label %if.then.19, label %if.end.23, !dbg !10525

if.then.19:                                       ; preds = %if.end.16
  call void @llvm.lifetime.start(i64 1, i8* %sign) #4, !dbg !10526
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !1055, metadata !2395), !dbg !10527
  store i8 0, i8* %sign, align 1, !dbg !10527, !tbaa !2930
  %21 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10528, !tbaa !2505
  %call20 = call i64 @mpd_adjexp(%struct.mpd_t* %21), !dbg !10529
  store i64 %call20, i64* %adjexp, align 8, !dbg !10530, !tbaa !2391
  %22 = load i64, i64* %adjexp, align 8, !dbg !10531, !tbaa !2391
  %cmp = icmp slt i64 %22, 0, !dbg !10533
  br i1 %cmp, label %if.then.21, label %if.end.22, !dbg !10534

if.then.21:                                       ; preds = %if.then.19
  store i8 1, i8* %sign, align 1, !dbg !10535, !tbaa !2930
  %23 = load i64, i64* %adjexp, align 8, !dbg !10537, !tbaa !2391
  %sub = sub i64 0, %23, !dbg !10538
  store i64 %sub, i64* %adjexp, align 8, !dbg !10539, !tbaa !2391
  br label %if.end.22, !dbg !10540

if.end.22:                                        ; preds = %if.then.21, %if.then.19
  %24 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10541, !tbaa !2505
  %25 = load i8, i8* %sign, align 1, !dbg !10542, !tbaa !2930
  %26 = load i64, i64* %adjexp, align 8, !dbg !10543, !tbaa !2391
  call void @_settriple(%struct.mpd_t* %24, i8 zeroext %25, i64 %26, i64 0), !dbg !10544
  %27 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10545, !tbaa !2505
  %28 = load i32*, i32** %status.addr, align 8, !dbg !10546, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %27, %struct.mpd_context_t* %workctx, i32* %28), !dbg !10547
  store i32 1, i32* %cleanup.dest.slot
  call void @llvm.lifetime.end(i64 1, i8* %sign) #4, !dbg !10548
  br label %cleanup.101

if.end.23:                                        ; preds = %if.end.16
  %29 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10549, !tbaa !2505
  %call24 = call i64 @mpd_adjexp(%struct.mpd_t* %29), !dbg !10550
  store i64 %call24, i64* %adjexp, align 8, !dbg !10551, !tbaa !2391
  %30 = load i64, i64* %adjexp, align 8, !dbg !10552, !tbaa !2391
  %cmp25 = icmp slt i64 %30, 0, !dbg !10553
  br i1 %cmp25, label %cond.true, label %cond.false, !dbg !10554

cond.true:                                        ; preds = %if.end.23
  %31 = load i64, i64* %adjexp, align 8, !dbg !10555, !tbaa !2391
  %sub26 = sub i64 0, %31, !dbg !10557
  %sub27 = sub i64 %sub26, 1, !dbg !10558
  br label %cond.end, !dbg !10554

cond.false:                                       ; preds = %if.end.23
  %32 = load i64, i64* %adjexp, align 8, !dbg !10559, !tbaa !2391
  br label %cond.end, !dbg !10554

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub27, %cond.true ], [ %32, %cond.false ], !dbg !10554
  store i64 %cond, i64* %t, align 8, !dbg !10561, !tbaa !2391
  %33 = load i64, i64* %t, align 8, !dbg !10564, !tbaa !2391
  %call28 = call i32 @mpd_exp_digits(i64 %33), !dbg !10566
  %sub29 = sub i32 %call28, 1, !dbg !10567
  %conv = sext i32 %sub29 to i64, !dbg !10566
  %34 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10568, !tbaa !2505
  %emax = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %34, i32 0, i32 1, !dbg !10569
  %35 = load i64, i64* %emax, align 8, !dbg !10569, !tbaa !2533
  %cmp30 = icmp sgt i64 %conv, %35, !dbg !10570
  br i1 %cmp30, label %if.then.32, label %if.end.36, !dbg !10571

if.then.32:                                       ; preds = %cond.end
  %36 = load i32*, i32** %status.addr, align 8, !dbg !10572, !tbaa !2505
  %37 = load i32, i32* %36, align 4, !dbg !10574, !tbaa !2554
  %or = or i32 %37, 6208, !dbg !10574
  store i32 %or, i32* %36, align 4, !dbg !10574, !tbaa !2554
  %38 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10575, !tbaa !2505
  %39 = load i64, i64* %adjexp, align 8, !dbg !10576, !tbaa !2391
  %cmp33 = icmp slt i64 %39, 0, !dbg !10577
  %conv34 = zext i1 %cmp33 to i32, !dbg !10577
  %conv35 = trunc i32 %conv34 to i8, !dbg !10578
  call void @mpd_setspecial(%struct.mpd_t* %38, i8 zeroext %conv35, i8 zeroext 2), !dbg !10579
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !10580

if.end.36:                                        ; preds = %cond.end
  %40 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10581, !tbaa !2505
  %allcr = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %40, i32 0, i32 8, !dbg !10582
  %41 = load i32, i32* %allcr, align 4, !dbg !10582, !tbaa !8996
  %tobool37 = icmp ne i32 %41, 0, !dbg !10581
  br i1 %tobool37, label %if.then.38, label %if.else, !dbg !10583

if.then.38:                                       ; preds = %if.end.36
  %42 = bitcast [64 x i64]* %t1_data to i8*, !dbg !10584
  call void @llvm.lifetime.start(i64 512, i8* %42) #4, !dbg !10584
  call void @llvm.dbg.declare(metadata [64 x i64]* %t1_data, metadata !1058, metadata !2395), !dbg !10585
  %43 = bitcast %struct.mpd_t* %t1 to i8*, !dbg !10586
  call void @llvm.lifetime.start(i64 48, i8* %43) #4, !dbg !10586
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %t1, metadata !1061, metadata !2395), !dbg !10587
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 0, !dbg !10588
  store i8 48, i8* %flags, align 1, !dbg !10588, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 1, !dbg !10588
  store i64 0, i64* %exp, align 8, !dbg !10588, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 2, !dbg !10588
  store i64 0, i64* %digits, align 8, !dbg !10588, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 3, !dbg !10588
  store i64 0, i64* %len, align 8, !dbg !10588, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 4, !dbg !10588
  store i64 64, i64* %alloc, align 8, !dbg !10588, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t1, i32 0, i32 5, !dbg !10588
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %t1_data, i32 0, i32 0, !dbg !10589
  store i64* %arraydecay, i64** %data, align 8, !dbg !10588, !tbaa !2546
  %44 = bitcast [64 x i64]* %t2_data to i8*, !dbg !10590
  call void @llvm.lifetime.start(i64 512, i8* %44) #4, !dbg !10590
  call void @llvm.dbg.declare(metadata [64 x i64]* %t2_data, metadata !1062, metadata !2395), !dbg !10591
  %45 = bitcast %struct.mpd_t* %t2 to i8*, !dbg !10592
  call void @llvm.lifetime.start(i64 48, i8* %45) #4, !dbg !10592
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %t2, metadata !1063, metadata !2395), !dbg !10593
  %flags39 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 0, !dbg !10594
  store i8 48, i8* %flags39, align 1, !dbg !10594, !tbaa !2620
  %exp40 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 1, !dbg !10594
  store i64 0, i64* %exp40, align 8, !dbg !10594, !tbaa !2510
  %digits41 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 2, !dbg !10594
  store i64 0, i64* %digits41, align 8, !dbg !10594, !tbaa !2514
  %len42 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 3, !dbg !10594
  store i64 0, i64* %len42, align 8, !dbg !10594, !tbaa !2542
  %alloc43 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 4, !dbg !10594
  store i64 64, i64* %alloc43, align 8, !dbg !10594, !tbaa !2835
  %data44 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t2, i32 0, i32 5, !dbg !10594
  %arraydecay45 = getelementptr inbounds [64 x i64], [64 x i64]* %t2_data, i32 0, i32 0, !dbg !10595
  store i64* %arraydecay45, i64** %data44, align 8, !dbg !10594, !tbaa !2546
  %46 = bitcast [64 x i64]* %ulp_data to i8*, !dbg !10596
  call void @llvm.lifetime.start(i64 512, i8* %46) #4, !dbg !10596
  call void @llvm.dbg.declare(metadata [64 x i64]* %ulp_data, metadata !1064, metadata !2395), !dbg !10597
  %47 = bitcast %struct.mpd_t* %ulp to i8*, !dbg !10598
  call void @llvm.lifetime.start(i64 48, i8* %47) #4, !dbg !10598
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %ulp, metadata !1065, metadata !2395), !dbg !10599
  %flags46 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 0, !dbg !10600
  store i8 48, i8* %flags46, align 1, !dbg !10600, !tbaa !2620
  %exp47 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 1, !dbg !10600
  store i64 0, i64* %exp47, align 8, !dbg !10600, !tbaa !2510
  %digits48 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 2, !dbg !10600
  store i64 0, i64* %digits48, align 8, !dbg !10600, !tbaa !2514
  %len49 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 3, !dbg !10600
  store i64 0, i64* %len49, align 8, !dbg !10600, !tbaa !2542
  %alloc50 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 4, !dbg !10600
  store i64 64, i64* %alloc50, align 8, !dbg !10600, !tbaa !2835
  %data51 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ulp, i32 0, i32 5, !dbg !10600
  %arraydecay52 = getelementptr inbounds [64 x i64], [64 x i64]* %ulp_data, i32 0, i32 0, !dbg !10601
  store i64* %arraydecay52, i64** %data51, align 8, !dbg !10600, !tbaa !2546
  %48 = bitcast [64 x i64]* %aa_data to i8*, !dbg !10602
  call void @llvm.lifetime.start(i64 512, i8* %48) #4, !dbg !10602
  call void @llvm.dbg.declare(metadata [64 x i64]* %aa_data, metadata !1066, metadata !2395), !dbg !10603
  %49 = bitcast %struct.mpd_t* %aa to i8*, !dbg !10604
  call void @llvm.lifetime.start(i64 48, i8* %49) #4, !dbg !10604
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %aa, metadata !1067, metadata !2395), !dbg !10605
  %flags53 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 0, !dbg !10606
  store i8 48, i8* %flags53, align 1, !dbg !10606, !tbaa !2620
  %exp54 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 1, !dbg !10606
  store i64 0, i64* %exp54, align 8, !dbg !10606, !tbaa !2510
  %digits55 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 2, !dbg !10606
  store i64 0, i64* %digits55, align 8, !dbg !10606, !tbaa !2514
  %len56 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 3, !dbg !10606
  store i64 0, i64* %len56, align 8, !dbg !10606, !tbaa !2542
  %alloc57 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 4, !dbg !10606
  store i64 64, i64* %alloc57, align 8, !dbg !10606, !tbaa !2835
  %data58 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 5, !dbg !10606
  %arraydecay59 = getelementptr inbounds [64 x i64], [64 x i64]* %aa_data, i32 0, i32 0, !dbg !10607
  store i64* %arraydecay59, i64** %data58, align 8, !dbg !10606, !tbaa !2546
  %50 = bitcast i64* %prec to i8*, !dbg !10608
  call void @llvm.lifetime.start(i64 8, i8* %50) #4, !dbg !10608
  call void @llvm.dbg.declare(metadata i64* %prec, metadata !1068, metadata !2395), !dbg !10609
  %51 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10610, !tbaa !2505
  %52 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10612, !tbaa !2505
  %cmp60 = icmp eq %struct.mpd_t* %51, %52, !dbg !10613
  br i1 %cmp60, label %if.then.62, label %if.end.67, !dbg !10614

if.then.62:                                       ; preds = %if.then.38
  %53 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10615, !tbaa !2505
  %54 = load i32*, i32** %status.addr, align 8, !dbg !10618, !tbaa !2505
  %call63 = call i32 @mpd_qcopy(%struct.mpd_t* %aa, %struct.mpd_t* %53, i32* %54), !dbg !10619
  %tobool64 = icmp ne i32 %call63, 0, !dbg !10619
  br i1 %tobool64, label %if.end.66, label %if.then.65, !dbg !10620

if.then.65:                                       ; preds = %if.then.62
  %55 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10621, !tbaa !2505
  %56 = load i32*, i32** %status.addr, align 8, !dbg !10623, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %55, i32 512, i32* %56), !dbg !10624
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10625

if.end.66:                                        ; preds = %if.then.62
  store %struct.mpd_t* %aa, %struct.mpd_t** %a.addr, align 8, !dbg !10626, !tbaa !2505
  br label %if.end.67, !dbg !10627

if.end.67:                                        ; preds = %if.end.66, %if.then.38
  %clamp = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 7, !dbg !10628
  store i32 0, i32* %clamp, align 4, !dbg !10629, !tbaa !3962
  %57 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10630, !tbaa !2505
  %prec68 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %57, i32 0, i32 0, !dbg !10631
  %58 = load i64, i64* %prec68, align 8, !dbg !10631, !tbaa !2526
  %add = add i64 %58, 3, !dbg !10632
  store i64 %add, i64* %prec, align 8, !dbg !10633, !tbaa !2391
  br label %while.cond, !dbg !10634

while.cond:                                       ; preds = %if.end.90, %if.end.67
  br label %while.body, !dbg !10635

while.body:                                       ; preds = %while.cond
  %59 = load i64, i64* %prec, align 8, !dbg !10638, !tbaa !2391
  %prec69 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !10640
  store i64 %59, i64* %prec69, align 8, !dbg !10641, !tbaa !2526
  %60 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10642, !tbaa !2505
  %61 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10643, !tbaa !2505
  %62 = load i32*, i32** %status.addr, align 8, !dbg !10644, !tbaa !2505
  call void @_mpd_qlog10(i32 0, %struct.mpd_t* %60, %struct.mpd_t* %61, %struct.mpd_context_t* %workctx, i32* %62), !dbg !10645
  %63 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10646, !tbaa !2505
  %exp70 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %63, i32 0, i32 1, !dbg !10647
  %64 = load i64, i64* %exp70, align 8, !dbg !10647, !tbaa !2510
  %65 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10648, !tbaa !2505
  %digits71 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %65, i32 0, i32 2, !dbg !10649
  %66 = load i64, i64* %digits71, align 8, !dbg !10649, !tbaa !2514
  %add72 = add i64 %64, %66, !dbg !10650
  %prec73 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !10651
  %67 = load i64, i64* %prec73, align 8, !dbg !10651, !tbaa !2526
  %sub74 = sub i64 %add72, %67, !dbg !10652
  call void @_ssettriple(%struct.mpd_t* %ulp, i8 zeroext 0, i64 1, i64 %sub74), !dbg !10653
  %68 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10654, !tbaa !2505
  %prec75 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %68, i32 0, i32 0, !dbg !10655
  %69 = load i64, i64* %prec75, align 8, !dbg !10655, !tbaa !2526
  %prec76 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !10656
  store i64 %69, i64* %prec76, align 8, !dbg !10657, !tbaa !2526
  %70 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10658, !tbaa !2505
  %status77 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !10659
  call void @mpd_qadd(%struct.mpd_t* %t1, %struct.mpd_t* %70, %struct.mpd_t* %ulp, %struct.mpd_context_t* %workctx, i32* %status77), !dbg !10660
  %71 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10661, !tbaa !2505
  %status78 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !10662
  call void @mpd_qsub(%struct.mpd_t* %t2, %struct.mpd_t* %71, %struct.mpd_t* %ulp, %struct.mpd_context_t* %workctx, i32* %status78), !dbg !10663
  %72 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10664, !tbaa !2505
  %call79 = call i32 @mpd_isspecial(%struct.mpd_t* %72), !dbg !10666
  %tobool80 = icmp ne i32 %call79, 0, !dbg !10666
  br i1 %tobool80, label %if.then.87, label %lor.lhs.false, !dbg !10667

lor.lhs.false:                                    ; preds = %while.body
  %73 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10668, !tbaa !2505
  %call81 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %73), !dbg !10670
  %tobool82 = icmp ne i32 %call81, 0, !dbg !10670
  br i1 %tobool82, label %if.then.87, label %lor.lhs.false.83, !dbg !10671

lor.lhs.false.83:                                 ; preds = %lor.lhs.false
  %74 = load i32*, i32** %status.addr, align 8, !dbg !10672, !tbaa !2505
  %call84 = call i32 @mpd_qcmp(%struct.mpd_t* %t1, %struct.mpd_t* %t2, i32* %74), !dbg !10673
  %cmp85 = icmp eq i32 %call84, 0, !dbg !10674
  br i1 %cmp85, label %if.then.87, label %if.end.90, !dbg !10675

if.then.87:                                       ; preds = %lor.lhs.false.83, %lor.lhs.false, %while.body
  %75 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10676, !tbaa !2505
  %clamp88 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %75, i32 0, i32 7, !dbg !10678
  %76 = load i32, i32* %clamp88, align 4, !dbg !10678, !tbaa !3962
  %clamp89 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 7, !dbg !10679
  store i32 %76, i32* %clamp89, align 4, !dbg !10680, !tbaa !3962
  %77 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10681, !tbaa !2505
  %78 = load i32*, i32** %status.addr, align 8, !dbg !10682, !tbaa !2505
  call void @mpd_check_underflow(%struct.mpd_t* %77, %struct.mpd_context_t* %workctx, i32* %78), !dbg !10683
  %79 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10684, !tbaa !2505
  %80 = load i32*, i32** %status.addr, align 8, !dbg !10685, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %79, %struct.mpd_context_t* %workctx, i32* %80), !dbg !10686
  br label %while.end, !dbg !10687

if.end.90:                                        ; preds = %lor.lhs.false.83
  %81 = load i64, i64* %prec, align 8, !dbg !10688, !tbaa !2391
  %add91 = add i64 %81, 19, !dbg !10688
  store i64 %add91, i64* %prec, align 8, !dbg !10688, !tbaa !2391
  br label %while.cond, !dbg !10634

while.end:                                        ; preds = %if.then.87
  call void @mpd_del(%struct.mpd_t* %t1), !dbg !10689
  call void @mpd_del(%struct.mpd_t* %t2), !dbg !10690
  call void @mpd_del(%struct.mpd_t* %ulp), !dbg !10691
  call void @mpd_del(%struct.mpd_t* %aa), !dbg !10692
  store i32 0, i32* %cleanup.dest.slot, !dbg !10693
  br label %cleanup, !dbg !10693

cleanup:                                          ; preds = %while.end, %if.then.65
  %82 = bitcast i64* %prec to i8*, !dbg !10694
  call void @llvm.lifetime.end(i64 8, i8* %82) #4, !dbg !10694
  %83 = bitcast %struct.mpd_t* %aa to i8*, !dbg !10694
  call void @llvm.lifetime.end(i64 48, i8* %83) #4, !dbg !10694
  %84 = bitcast [64 x i64]* %aa_data to i8*, !dbg !10694
  call void @llvm.lifetime.end(i64 512, i8* %84) #4, !dbg !10694
  %85 = bitcast %struct.mpd_t* %ulp to i8*, !dbg !10694
  call void @llvm.lifetime.end(i64 48, i8* %85) #4, !dbg !10694
  %86 = bitcast [64 x i64]* %ulp_data to i8*, !dbg !10694
  call void @llvm.lifetime.end(i64 512, i8* %86) #4, !dbg !10694
  %87 = bitcast %struct.mpd_t* %t2 to i8*, !dbg !10694
  call void @llvm.lifetime.end(i64 48, i8* %87) #4, !dbg !10694
  %88 = bitcast [64 x i64]* %t2_data to i8*, !dbg !10694
  call void @llvm.lifetime.end(i64 512, i8* %88) #4, !dbg !10694
  %89 = bitcast %struct.mpd_t* %t1 to i8*, !dbg !10694
  call void @llvm.lifetime.end(i64 48, i8* %89) #4, !dbg !10694
  %90 = bitcast [64 x i64]* %t1_data to i8*, !dbg !10694
  call void @llvm.lifetime.end(i64 512, i8* %90) #4, !dbg !10694
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.100, !dbg !10696

if.else:                                          ; preds = %if.end.36
  %91 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10697, !tbaa !2505
  %92 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10699, !tbaa !2505
  %93 = load i32*, i32** %status.addr, align 8, !dbg !10700, !tbaa !2505
  call void @_mpd_qlog10(i32 1, %struct.mpd_t* %91, %struct.mpd_t* %92, %struct.mpd_context_t* %workctx, i32* %93), !dbg !10701
  %94 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10702, !tbaa !2505
  %95 = load i32*, i32** %status.addr, align 8, !dbg !10703, !tbaa !2505
  call void @mpd_check_underflow(%struct.mpd_t* %94, %struct.mpd_context_t* %workctx, i32* %95), !dbg !10704
  br label %if.end.100

if.end.100:                                       ; preds = %if.else, %cleanup.cont
  store i32 0, i32* %cleanup.dest.slot, !dbg !10705
  br label %cleanup.101, !dbg !10705

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.101

cleanup.101:                                      ; preds = %NewDefault, %if.end.100, %if.then.32, %if.end.22, %if.then.15, %if.then.11, %if.end.7, %if.then.6, %if.then.3
  %96 = bitcast i64* %t to i8*, !dbg !10706
  call void @llvm.lifetime.end(i64 8, i8* %96) #4, !dbg !10706
  %97 = bitcast i64* %adjexp to i8*, !dbg !10706
  call void @llvm.lifetime.end(i64 8, i8* %97) #4, !dbg !10706
  %98 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !10706
  call void @llvm.lifetime.end(i64 48, i8* %98) #4, !dbg !10706
  %cleanup.dest.104 = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont.105

cleanup.cont.105:                                 ; preds = %cleanup.101
  ret void, !dbg !10705

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @mpd_coeff_ispow10(%struct.mpd_t* %dec) #0 {
entry:
  %retval = alloca i32, align 4
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !1911, metadata !2395), !dbg !10707
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !10708, !tbaa !2505
  %call = call i64 @mpd_msword(%struct.mpd_t* %0), !dbg !10710
  %call1 = call i32 @mpd_word_ispow10(i64 %call), !dbg !10711
  %tobool = icmp ne i32 %call1, 0, !dbg !10711
  br i1 %tobool, label %if.then, label %if.end.5, !dbg !10712

if.then:                                          ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !10713, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %1, i32 0, i32 5, !dbg !10716
  %2 = load i64*, i64** %data, align 8, !dbg !10716, !tbaa !2546
  %3 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !10717, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 3, !dbg !10718
  %4 = load i64, i64* %len, align 8, !dbg !10718, !tbaa !2542
  %sub = sub i64 %4, 1, !dbg !10719
  %call2 = call i32 @_mpd_isallzero(i64* %2, i64 %sub), !dbg !10720
  %tobool3 = icmp ne i32 %call2, 0, !dbg !10720
  br i1 %tobool3, label %if.then.4, label %if.end, !dbg !10721

if.then.4:                                        ; preds = %if.then
  store i32 1, i32* %retval, !dbg !10722
  br label %return, !dbg !10722

if.end:                                           ; preds = %if.then
  br label %if.end.5, !dbg !10724

if.end.5:                                         ; preds = %if.end, %entry
  store i32 0, i32* %retval, !dbg !10725
  br label %return, !dbg !10725

return:                                           ; preds = %if.end.5, %if.then.4
  %5 = load i32, i32* %retval, !dbg !10726
  ret i32 %5, !dbg !10726
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qlog10(i32 %action, %struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %action.addr = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workctx = alloca %struct.mpd_context_t, align 8
  %ln10_data = alloca [64 x i64], align 16
  %ln10 = alloca %struct.mpd_t, align 8
  store i32 %action, i32* %action.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !1920, metadata !2395), !dbg !10727
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1921, metadata !2395), !dbg !10728
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1922, metadata !2395), !dbg !10729
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1923, metadata !2395), !dbg !10730
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1924, metadata !2395), !dbg !10731
  %0 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !10732
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !10732
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %workctx, metadata !1925, metadata !2395), !dbg !10733
  %1 = bitcast [64 x i64]* %ln10_data to i8*, !dbg !10734
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !10734
  call void @llvm.dbg.declare(metadata [64 x i64]* %ln10_data, metadata !1926, metadata !2395), !dbg !10735
  %2 = bitcast %struct.mpd_t* %ln10 to i8*, !dbg !10736
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !10736
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %ln10, metadata !1927, metadata !2395), !dbg !10737
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ln10, i32 0, i32 0, !dbg !10738
  store i8 48, i8* %flags, align 1, !dbg !10738, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ln10, i32 0, i32 1, !dbg !10738
  store i64 0, i64* %exp, align 8, !dbg !10738, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ln10, i32 0, i32 2, !dbg !10738
  store i64 0, i64* %digits, align 8, !dbg !10738, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ln10, i32 0, i32 3, !dbg !10738
  store i64 0, i64* %len, align 8, !dbg !10738, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ln10, i32 0, i32 4, !dbg !10738
  store i64 64, i64* %alloc, align 8, !dbg !10738, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %ln10, i32 0, i32 5, !dbg !10738
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %ln10_data, i32 0, i32 0, !dbg !10739
  store i64* %arraydecay, i64** %data, align 8, !dbg !10738, !tbaa !2546
  call void @mpd_maxcontext(%struct.mpd_context_t* %workctx), !dbg !10740
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10741, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %3, i32 0, i32 0, !dbg !10742
  %4 = load i64, i64* %prec, align 8, !dbg !10742, !tbaa !2526
  %add = add i64 %4, 3, !dbg !10743
  %prec1 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !10744
  store i64 %add, i64* %prec1, align 8, !dbg !10745, !tbaa !2526
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10746, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10747, !tbaa !2505
  %7 = load i32*, i32** %status.addr, align 8, !dbg !10748, !tbaa !2505
  call void @_mpd_qln(%struct.mpd_t* %5, %struct.mpd_t* %6, %struct.mpd_context_t* %workctx, i32* %7), !dbg !10749
  %prec2 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !10750
  %8 = load i64, i64* %prec2, align 8, !dbg !10750, !tbaa !2526
  %9 = load i32*, i32** %status.addr, align 8, !dbg !10751, !tbaa !2505
  call void @mpd_qln10(%struct.mpd_t* %ln10, i64 %8, i32* %9), !dbg !10752
  %10 = load i32, i32* %action.addr, align 4, !dbg !10753, !tbaa !2554
  %cmp = icmp eq i32 %10, 1, !dbg !10755
  br i1 %cmp, label %if.then, label %if.end, !dbg !10756

if.then:                                          ; preds = %entry
  %11 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10757, !tbaa !2505
  %12 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !10759
  %13 = bitcast %struct.mpd_context_t* %11 to i8*, !dbg !10759
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 48, i32 8, i1 false), !dbg !10759, !tbaa.struct !8991
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 6, !dbg !10760
  store i32 6, i32* %round, align 4, !dbg !10761, !tbaa !4148
  br label %if.end, !dbg !10762

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10763, !tbaa !2505
  %15 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10764, !tbaa !2505
  %16 = load i32*, i32** %status.addr, align 8, !dbg !10765, !tbaa !2505
  call void @_mpd_qdiv(i32 0, %struct.mpd_t* %14, %struct.mpd_t* %15, %struct.mpd_t* %ln10, %struct.mpd_context_t* %workctx, i32* %16), !dbg !10766
  call void @mpd_del(%struct.mpd_t* %ln10), !dbg !10767
  %17 = bitcast %struct.mpd_t* %ln10 to i8*, !dbg !10768
  call void @llvm.lifetime.end(i64 48, i8* %17) #4, !dbg !10768
  %18 = bitcast [64 x i64]* %ln10_data to i8*, !dbg !10768
  call void @llvm.lifetime.end(i64 512, i8* %18) #4, !dbg !10768
  %19 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !10768
  call void @llvm.lifetime.end(i64 48, i8* %19) #4, !dbg !10768
  ret void, !dbg !10768
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qmax(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %c = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1071, metadata !2395), !dbg !10769
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1072, metadata !2395), !dbg !10770
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1073, metadata !2395), !dbg !10771
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1074, metadata !2395), !dbg !10772
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1075, metadata !2395), !dbg !10773
  %0 = bitcast i32* %c to i8*, !dbg !10774
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !10774
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1076, metadata !2395), !dbg !10775
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10776, !tbaa !2505
  %call = call i32 @mpd_isqnan(%struct.mpd_t* %1), !dbg !10778
  %tobool = icmp ne i32 %call, 0, !dbg !10778
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10779

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10780, !tbaa !2505
  %call1 = call i32 @mpd_isnan(%struct.mpd_t* %2), !dbg !10782
  %tobool2 = icmp ne i32 %call1, 0, !dbg !10782
  br i1 %tobool2, label %if.else, label %if.then, !dbg !10783

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10784, !tbaa !2505
  %4 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10786, !tbaa !2505
  %5 = load i32*, i32** %status.addr, align 8, !dbg !10787, !tbaa !2505
  %call3 = call i32 @mpd_qcopy(%struct.mpd_t* %3, %struct.mpd_t* %4, i32* %5), !dbg !10788
  br label %if.end.27, !dbg !10789

if.else:                                          ; preds = %land.lhs.true, %entry
  %6 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10790, !tbaa !2505
  %call4 = call i32 @mpd_isqnan(%struct.mpd_t* %6), !dbg !10792
  %tobool5 = icmp ne i32 %call4, 0, !dbg !10792
  br i1 %tobool5, label %land.lhs.true.6, label %if.else.11, !dbg !10793

land.lhs.true.6:                                  ; preds = %if.else
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10794, !tbaa !2505
  %call7 = call i32 @mpd_isnan(%struct.mpd_t* %7), !dbg !10796
  %tobool8 = icmp ne i32 %call7, 0, !dbg !10796
  br i1 %tobool8, label %if.else.11, label %if.then.9, !dbg !10797

if.then.9:                                        ; preds = %land.lhs.true.6
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10798, !tbaa !2505
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10800, !tbaa !2505
  %10 = load i32*, i32** %status.addr, align 8, !dbg !10801, !tbaa !2505
  %call10 = call i32 @mpd_qcopy(%struct.mpd_t* %8, %struct.mpd_t* %9, i32* %10), !dbg !10802
  br label %if.end.26, !dbg !10803

if.else.11:                                       ; preds = %land.lhs.true.6, %if.else
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10804, !tbaa !2505
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10806, !tbaa !2505
  %13 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10807, !tbaa !2505
  %14 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10808, !tbaa !2505
  %15 = load i32*, i32** %status.addr, align 8, !dbg !10809, !tbaa !2505
  %call12 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %11, %struct.mpd_t* %12, %struct.mpd_t* %13, %struct.mpd_context_t* %14, i32* %15), !dbg !10810
  %tobool13 = icmp ne i32 %call12, 0, !dbg !10810
  br i1 %tobool13, label %if.then.14, label %if.else.15, !dbg !10811

if.then.14:                                       ; preds = %if.else.11
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10812

if.else.15:                                       ; preds = %if.else.11
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10814, !tbaa !2505
  %17 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10816, !tbaa !2505
  %call16 = call i32 @_mpd_cmp(%struct.mpd_t* %16, %struct.mpd_t* %17), !dbg !10817
  store i32 %call16, i32* %c, align 4, !dbg !10818, !tbaa !2554
  %18 = load i32, i32* %c, align 4, !dbg !10819, !tbaa !2554
  %cmp = icmp eq i32 %18, 0, !dbg !10821
  br i1 %cmp, label %if.then.17, label %if.end, !dbg !10822

if.then.17:                                       ; preds = %if.else.15
  %19 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10823, !tbaa !2505
  %20 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10825, !tbaa !2505
  %call18 = call i32 @_mpd_cmp_numequal(%struct.mpd_t* %19, %struct.mpd_t* %20), !dbg !10826
  store i32 %call18, i32* %c, align 4, !dbg !10827, !tbaa !2554
  br label %if.end, !dbg !10828

if.end:                                           ; preds = %if.then.17, %if.else.15
  %21 = load i32, i32* %c, align 4, !dbg !10829, !tbaa !2554
  %cmp19 = icmp slt i32 %21, 0, !dbg !10831
  br i1 %cmp19, label %if.then.20, label %if.else.22, !dbg !10832

if.then.20:                                       ; preds = %if.end
  %22 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10833, !tbaa !2505
  %23 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10835, !tbaa !2505
  %24 = load i32*, i32** %status.addr, align 8, !dbg !10836, !tbaa !2505
  %call21 = call i32 @mpd_qcopy(%struct.mpd_t* %22, %struct.mpd_t* %23, i32* %24), !dbg !10837
  br label %if.end.24, !dbg !10838

if.else.22:                                       ; preds = %if.end
  %25 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10839, !tbaa !2505
  %26 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10841, !tbaa !2505
  %27 = load i32*, i32** %status.addr, align 8, !dbg !10842, !tbaa !2505
  %call23 = call i32 @mpd_qcopy(%struct.mpd_t* %25, %struct.mpd_t* %26, i32* %27), !dbg !10843
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.22, %if.then.20
  br label %if.end.25

if.end.25:                                        ; preds = %if.end.24
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.then.9
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.then
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10844, !tbaa !2505
  %29 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10845, !tbaa !2505
  %30 = load i32*, i32** %status.addr, align 8, !dbg !10846, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %28, %struct.mpd_context_t* %29, i32* %30), !dbg !10847
  store i32 0, i32* %cleanup.dest.slot, !dbg !10848
  br label %cleanup, !dbg !10848

cleanup:                                          ; preds = %if.end.27, %if.then.14
  %31 = bitcast i32* %c to i8*, !dbg !10849
  call void @llvm.lifetime.end(i64 4, i8* %31) #4, !dbg !10849
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !10848

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @_mpd_cmp_numequal(%struct.mpd_t* %a, %struct.mpd_t* %b) #3 {
entry:
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %sign_a = alloca i32, align 4
  %sign_b = alloca i32, align 4
  %c = alloca i32, align 4
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1930, metadata !2395), !dbg !10851
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1931, metadata !2395), !dbg !10852
  %0 = bitcast i32* %sign_a to i8*, !dbg !10853
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !10853
  call void @llvm.dbg.declare(metadata i32* %sign_a, metadata !1932, metadata !2395), !dbg !10854
  %1 = bitcast i32* %sign_b to i8*, !dbg !10853
  call void @llvm.lifetime.start(i64 4, i8* %1) #4, !dbg !10853
  call void @llvm.dbg.declare(metadata i32* %sign_b, metadata !1933, metadata !2395), !dbg !10855
  %2 = bitcast i32* %c to i8*, !dbg !10856
  call void @llvm.lifetime.start(i64 4, i8* %2) #4, !dbg !10856
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1934, metadata !2395), !dbg !10857
  %3 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10858, !tbaa !2505
  %call = call zeroext i8 @mpd_sign(%struct.mpd_t* %3), !dbg !10859
  %conv = zext i8 %call to i32, !dbg !10859
  store i32 %conv, i32* %sign_a, align 4, !dbg !10860, !tbaa !2554
  %4 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10861, !tbaa !2505
  %call1 = call zeroext i8 @mpd_sign(%struct.mpd_t* %4), !dbg !10862
  %conv2 = zext i8 %call1 to i32, !dbg !10862
  store i32 %conv2, i32* %sign_b, align 4, !dbg !10863, !tbaa !2554
  %5 = load i32, i32* %sign_a, align 4, !dbg !10864, !tbaa !2554
  %6 = load i32, i32* %sign_b, align 4, !dbg !10866, !tbaa !2554
  %cmp = icmp ne i32 %5, %6, !dbg !10867
  br i1 %cmp, label %if.then, label %if.else, !dbg !10868

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %sign_b, align 4, !dbg !10869, !tbaa !2554
  %8 = load i32, i32* %sign_a, align 4, !dbg !10871, !tbaa !2554
  %sub = sub i32 %7, %8, !dbg !10872
  store i32 %sub, i32* %c, align 4, !dbg !10873, !tbaa !2554
  br label %if.end, !dbg !10874

if.else:                                          ; preds = %entry
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10875, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 1, !dbg !10877
  %10 = load i64, i64* %exp, align 8, !dbg !10877, !tbaa !2510
  %11 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10878, !tbaa !2505
  %exp4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 1, !dbg !10879
  %12 = load i64, i64* %exp4, align 8, !dbg !10879, !tbaa !2510
  %cmp5 = icmp slt i64 %10, %12, !dbg !10880
  %cond = select i1 %cmp5, i32 -1, i32 1, !dbg !10881
  store i32 %cond, i32* %c, align 4, !dbg !10882, !tbaa !2554
  %13 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10883, !tbaa !2505
  %call7 = call i32 @mpd_arith_sign(%struct.mpd_t* %13), !dbg !10884
  %14 = load i32, i32* %c, align 4, !dbg !10885, !tbaa !2554
  %mul = mul i32 %14, %call7, !dbg !10885
  store i32 %mul, i32* %c, align 4, !dbg !10885, !tbaa !2554
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load i32, i32* %c, align 4, !dbg !10886, !tbaa !2554
  %16 = bitcast i32* %c to i8*, !dbg !10887
  call void @llvm.lifetime.end(i64 4, i8* %16) #4, !dbg !10887
  %17 = bitcast i32* %sign_b to i8*, !dbg !10887
  call void @llvm.lifetime.end(i64 4, i8* %17) #4, !dbg !10887
  %18 = bitcast i32* %sign_a to i8*, !dbg !10887
  call void @llvm.lifetime.end(i64 4, i8* %18) #4, !dbg !10887
  ret i32 %15, !dbg !10888
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qmax_mag(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %c = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1079, metadata !2395), !dbg !10889
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1080, metadata !2395), !dbg !10890
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1081, metadata !2395), !dbg !10891
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1082, metadata !2395), !dbg !10892
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1083, metadata !2395), !dbg !10893
  %0 = bitcast i32* %c to i8*, !dbg !10894
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !10894
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1084, metadata !2395), !dbg !10895
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10896, !tbaa !2505
  %call = call i32 @mpd_isqnan(%struct.mpd_t* %1), !dbg !10898
  %tobool = icmp ne i32 %call, 0, !dbg !10898
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10899

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10900, !tbaa !2505
  %call1 = call i32 @mpd_isnan(%struct.mpd_t* %2), !dbg !10902
  %tobool2 = icmp ne i32 %call1, 0, !dbg !10902
  br i1 %tobool2, label %if.else, label %if.then, !dbg !10903

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10904, !tbaa !2505
  %4 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10906, !tbaa !2505
  %5 = load i32*, i32** %status.addr, align 8, !dbg !10907, !tbaa !2505
  %call3 = call i32 @mpd_qcopy(%struct.mpd_t* %3, %struct.mpd_t* %4, i32* %5), !dbg !10908
  br label %if.end.27, !dbg !10909

if.else:                                          ; preds = %land.lhs.true, %entry
  %6 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10910, !tbaa !2505
  %call4 = call i32 @mpd_isqnan(%struct.mpd_t* %6), !dbg !10912
  %tobool5 = icmp ne i32 %call4, 0, !dbg !10912
  br i1 %tobool5, label %land.lhs.true.6, label %if.else.11, !dbg !10913

land.lhs.true.6:                                  ; preds = %if.else
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10914, !tbaa !2505
  %call7 = call i32 @mpd_isnan(%struct.mpd_t* %7), !dbg !10916
  %tobool8 = icmp ne i32 %call7, 0, !dbg !10916
  br i1 %tobool8, label %if.else.11, label %if.then.9, !dbg !10917

if.then.9:                                        ; preds = %land.lhs.true.6
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10918, !tbaa !2505
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10920, !tbaa !2505
  %10 = load i32*, i32** %status.addr, align 8, !dbg !10921, !tbaa !2505
  %call10 = call i32 @mpd_qcopy(%struct.mpd_t* %8, %struct.mpd_t* %9, i32* %10), !dbg !10922
  br label %if.end.26, !dbg !10923

if.else.11:                                       ; preds = %land.lhs.true.6, %if.else
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10924, !tbaa !2505
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10926, !tbaa !2505
  %13 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10927, !tbaa !2505
  %14 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10928, !tbaa !2505
  %15 = load i32*, i32** %status.addr, align 8, !dbg !10929, !tbaa !2505
  %call12 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %11, %struct.mpd_t* %12, %struct.mpd_t* %13, %struct.mpd_context_t* %14, i32* %15), !dbg !10930
  %tobool13 = icmp ne i32 %call12, 0, !dbg !10930
  br i1 %tobool13, label %if.then.14, label %if.else.15, !dbg !10931

if.then.14:                                       ; preds = %if.else.11
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10932

if.else.15:                                       ; preds = %if.else.11
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10934, !tbaa !2505
  %17 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10936, !tbaa !2505
  %call16 = call i32 @_mpd_cmp_abs(%struct.mpd_t* %16, %struct.mpd_t* %17), !dbg !10937
  store i32 %call16, i32* %c, align 4, !dbg !10938, !tbaa !2554
  %18 = load i32, i32* %c, align 4, !dbg !10939, !tbaa !2554
  %cmp = icmp eq i32 %18, 0, !dbg !10941
  br i1 %cmp, label %if.then.17, label %if.end, !dbg !10942

if.then.17:                                       ; preds = %if.else.15
  %19 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10943, !tbaa !2505
  %20 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10945, !tbaa !2505
  %call18 = call i32 @_mpd_cmp_numequal(%struct.mpd_t* %19, %struct.mpd_t* %20), !dbg !10946
  store i32 %call18, i32* %c, align 4, !dbg !10947, !tbaa !2554
  br label %if.end, !dbg !10948

if.end:                                           ; preds = %if.then.17, %if.else.15
  %21 = load i32, i32* %c, align 4, !dbg !10949, !tbaa !2554
  %cmp19 = icmp slt i32 %21, 0, !dbg !10951
  br i1 %cmp19, label %if.then.20, label %if.else.22, !dbg !10952

if.then.20:                                       ; preds = %if.end
  %22 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10953, !tbaa !2505
  %23 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10955, !tbaa !2505
  %24 = load i32*, i32** %status.addr, align 8, !dbg !10956, !tbaa !2505
  %call21 = call i32 @mpd_qcopy(%struct.mpd_t* %22, %struct.mpd_t* %23, i32* %24), !dbg !10957
  br label %if.end.24, !dbg !10958

if.else.22:                                       ; preds = %if.end
  %25 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10959, !tbaa !2505
  %26 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10961, !tbaa !2505
  %27 = load i32*, i32** %status.addr, align 8, !dbg !10962, !tbaa !2505
  %call23 = call i32 @mpd_qcopy(%struct.mpd_t* %25, %struct.mpd_t* %26, i32* %27), !dbg !10963
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.22, %if.then.20
  br label %if.end.25

if.end.25:                                        ; preds = %if.end.24
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.then.9
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.then
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10964, !tbaa !2505
  %29 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !10965, !tbaa !2505
  %30 = load i32*, i32** %status.addr, align 8, !dbg !10966, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %28, %struct.mpd_context_t* %29, i32* %30), !dbg !10967
  store i32 0, i32* %cleanup.dest.slot, !dbg !10968
  br label %cleanup, !dbg !10968

cleanup:                                          ; preds = %if.end.27, %if.then.14
  %31 = bitcast i32* %c to i8*, !dbg !10969
  call void @llvm.lifetime.end(i64 4, i8* %31) #4, !dbg !10969
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !10968

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qmin(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %c = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1087, metadata !2395), !dbg !10971
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1088, metadata !2395), !dbg !10972
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1089, metadata !2395), !dbg !10973
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1090, metadata !2395), !dbg !10974
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1091, metadata !2395), !dbg !10975
  %0 = bitcast i32* %c to i8*, !dbg !10976
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !10976
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1092, metadata !2395), !dbg !10977
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10978, !tbaa !2505
  %call = call i32 @mpd_isqnan(%struct.mpd_t* %1), !dbg !10980
  %tobool = icmp ne i32 %call, 0, !dbg !10980
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10981

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10982, !tbaa !2505
  %call1 = call i32 @mpd_isnan(%struct.mpd_t* %2), !dbg !10984
  %tobool2 = icmp ne i32 %call1, 0, !dbg !10984
  br i1 %tobool2, label %if.else, label %if.then, !dbg !10985

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !10986, !tbaa !2505
  %4 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10988, !tbaa !2505
  %5 = load i32*, i32** %status.addr, align 8, !dbg !10989, !tbaa !2505
  %call3 = call i32 @mpd_qcopy(%struct.mpd_t* %3, %struct.mpd_t* %4, i32* %5), !dbg !10990
  br label %if.end.27, !dbg !10991

if.else:                                          ; preds = %land.lhs.true, %entry
  %6 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !10992, !tbaa !2505
  %call4 = call i32 @mpd_isqnan(%struct.mpd_t* %6), !dbg !10994
  %tobool5 = icmp ne i32 %call4, 0, !dbg !10994
  br i1 %tobool5, label %land.lhs.true.6, label %if.else.11, !dbg !10995

land.lhs.true.6:                                  ; preds = %if.else
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !10996, !tbaa !2505
  %call7 = call i32 @mpd_isnan(%struct.mpd_t* %7), !dbg !10998
  %tobool8 = icmp ne i32 %call7, 0, !dbg !10998
  br i1 %tobool8, label %if.else.11, label %if.then.9, !dbg !10999

if.then.9:                                        ; preds = %land.lhs.true.6
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11000, !tbaa !2505
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11002, !tbaa !2505
  %10 = load i32*, i32** %status.addr, align 8, !dbg !11003, !tbaa !2505
  %call10 = call i32 @mpd_qcopy(%struct.mpd_t* %8, %struct.mpd_t* %9, i32* %10), !dbg !11004
  br label %if.end.26, !dbg !11005

if.else.11:                                       ; preds = %land.lhs.true.6, %if.else
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11006, !tbaa !2505
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11008, !tbaa !2505
  %13 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !11009, !tbaa !2505
  %14 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11010, !tbaa !2505
  %15 = load i32*, i32** %status.addr, align 8, !dbg !11011, !tbaa !2505
  %call12 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %11, %struct.mpd_t* %12, %struct.mpd_t* %13, %struct.mpd_context_t* %14, i32* %15), !dbg !11012
  %tobool13 = icmp ne i32 %call12, 0, !dbg !11012
  br i1 %tobool13, label %if.then.14, label %if.else.15, !dbg !11013

if.then.14:                                       ; preds = %if.else.11
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11014

if.else.15:                                       ; preds = %if.else.11
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11016, !tbaa !2505
  %17 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !11018, !tbaa !2505
  %call16 = call i32 @_mpd_cmp(%struct.mpd_t* %16, %struct.mpd_t* %17), !dbg !11019
  store i32 %call16, i32* %c, align 4, !dbg !11020, !tbaa !2554
  %18 = load i32, i32* %c, align 4, !dbg !11021, !tbaa !2554
  %cmp = icmp eq i32 %18, 0, !dbg !11023
  br i1 %cmp, label %if.then.17, label %if.end, !dbg !11024

if.then.17:                                       ; preds = %if.else.15
  %19 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11025, !tbaa !2505
  %20 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !11027, !tbaa !2505
  %call18 = call i32 @_mpd_cmp_numequal(%struct.mpd_t* %19, %struct.mpd_t* %20), !dbg !11028
  store i32 %call18, i32* %c, align 4, !dbg !11029, !tbaa !2554
  br label %if.end, !dbg !11030

if.end:                                           ; preds = %if.then.17, %if.else.15
  %21 = load i32, i32* %c, align 4, !dbg !11031, !tbaa !2554
  %cmp19 = icmp slt i32 %21, 0, !dbg !11033
  br i1 %cmp19, label %if.then.20, label %if.else.22, !dbg !11034

if.then.20:                                       ; preds = %if.end
  %22 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11035, !tbaa !2505
  %23 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11037, !tbaa !2505
  %24 = load i32*, i32** %status.addr, align 8, !dbg !11038, !tbaa !2505
  %call21 = call i32 @mpd_qcopy(%struct.mpd_t* %22, %struct.mpd_t* %23, i32* %24), !dbg !11039
  br label %if.end.24, !dbg !11040

if.else.22:                                       ; preds = %if.end
  %25 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11041, !tbaa !2505
  %26 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !11043, !tbaa !2505
  %27 = load i32*, i32** %status.addr, align 8, !dbg !11044, !tbaa !2505
  %call23 = call i32 @mpd_qcopy(%struct.mpd_t* %25, %struct.mpd_t* %26, i32* %27), !dbg !11045
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.22, %if.then.20
  br label %if.end.25

if.end.25:                                        ; preds = %if.end.24
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.then.9
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.then
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11046, !tbaa !2505
  %29 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11047, !tbaa !2505
  %30 = load i32*, i32** %status.addr, align 8, !dbg !11048, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %28, %struct.mpd_context_t* %29, i32* %30), !dbg !11049
  store i32 0, i32* %cleanup.dest.slot, !dbg !11050
  br label %cleanup, !dbg !11050

cleanup:                                          ; preds = %if.end.27, %if.then.14
  %31 = bitcast i32* %c to i8*, !dbg !11051
  call void @llvm.lifetime.end(i64 4, i8* %31) #4, !dbg !11051
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !11050

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qmin_mag(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %c = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1095, metadata !2395), !dbg !11053
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1096, metadata !2395), !dbg !11054
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1097, metadata !2395), !dbg !11055
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1098, metadata !2395), !dbg !11056
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1099, metadata !2395), !dbg !11057
  %0 = bitcast i32* %c to i8*, !dbg !11058
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !11058
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1100, metadata !2395), !dbg !11059
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11060, !tbaa !2505
  %call = call i32 @mpd_isqnan(%struct.mpd_t* %1), !dbg !11062
  %tobool = icmp ne i32 %call, 0, !dbg !11062
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !11063

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !11064, !tbaa !2505
  %call1 = call i32 @mpd_isnan(%struct.mpd_t* %2), !dbg !11066
  %tobool2 = icmp ne i32 %call1, 0, !dbg !11066
  br i1 %tobool2, label %if.else, label %if.then, !dbg !11067

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11068, !tbaa !2505
  %4 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !11070, !tbaa !2505
  %5 = load i32*, i32** %status.addr, align 8, !dbg !11071, !tbaa !2505
  %call3 = call i32 @mpd_qcopy(%struct.mpd_t* %3, %struct.mpd_t* %4, i32* %5), !dbg !11072
  br label %if.end.27, !dbg !11073

if.else:                                          ; preds = %land.lhs.true, %entry
  %6 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !11074, !tbaa !2505
  %call4 = call i32 @mpd_isqnan(%struct.mpd_t* %6), !dbg !11076
  %tobool5 = icmp ne i32 %call4, 0, !dbg !11076
  br i1 %tobool5, label %land.lhs.true.6, label %if.else.11, !dbg !11077

land.lhs.true.6:                                  ; preds = %if.else
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11078, !tbaa !2505
  %call7 = call i32 @mpd_isnan(%struct.mpd_t* %7), !dbg !11080
  %tobool8 = icmp ne i32 %call7, 0, !dbg !11080
  br i1 %tobool8, label %if.else.11, label %if.then.9, !dbg !11081

if.then.9:                                        ; preds = %land.lhs.true.6
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11082, !tbaa !2505
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11084, !tbaa !2505
  %10 = load i32*, i32** %status.addr, align 8, !dbg !11085, !tbaa !2505
  %call10 = call i32 @mpd_qcopy(%struct.mpd_t* %8, %struct.mpd_t* %9, i32* %10), !dbg !11086
  br label %if.end.26, !dbg !11087

if.else.11:                                       ; preds = %land.lhs.true.6, %if.else
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11088, !tbaa !2505
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11090, !tbaa !2505
  %13 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !11091, !tbaa !2505
  %14 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11092, !tbaa !2505
  %15 = load i32*, i32** %status.addr, align 8, !dbg !11093, !tbaa !2505
  %call12 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %11, %struct.mpd_t* %12, %struct.mpd_t* %13, %struct.mpd_context_t* %14, i32* %15), !dbg !11094
  %tobool13 = icmp ne i32 %call12, 0, !dbg !11094
  br i1 %tobool13, label %if.then.14, label %if.else.15, !dbg !11095

if.then.14:                                       ; preds = %if.else.11
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11096

if.else.15:                                       ; preds = %if.else.11
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11098, !tbaa !2505
  %17 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !11100, !tbaa !2505
  %call16 = call i32 @_mpd_cmp_abs(%struct.mpd_t* %16, %struct.mpd_t* %17), !dbg !11101
  store i32 %call16, i32* %c, align 4, !dbg !11102, !tbaa !2554
  %18 = load i32, i32* %c, align 4, !dbg !11103, !tbaa !2554
  %cmp = icmp eq i32 %18, 0, !dbg !11105
  br i1 %cmp, label %if.then.17, label %if.end, !dbg !11106

if.then.17:                                       ; preds = %if.else.15
  %19 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11107, !tbaa !2505
  %20 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !11109, !tbaa !2505
  %call18 = call i32 @_mpd_cmp_numequal(%struct.mpd_t* %19, %struct.mpd_t* %20), !dbg !11110
  store i32 %call18, i32* %c, align 4, !dbg !11111, !tbaa !2554
  br label %if.end, !dbg !11112

if.end:                                           ; preds = %if.then.17, %if.else.15
  %21 = load i32, i32* %c, align 4, !dbg !11113, !tbaa !2554
  %cmp19 = icmp slt i32 %21, 0, !dbg !11115
  br i1 %cmp19, label %if.then.20, label %if.else.22, !dbg !11116

if.then.20:                                       ; preds = %if.end
  %22 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11117, !tbaa !2505
  %23 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11119, !tbaa !2505
  %24 = load i32*, i32** %status.addr, align 8, !dbg !11120, !tbaa !2505
  %call21 = call i32 @mpd_qcopy(%struct.mpd_t* %22, %struct.mpd_t* %23, i32* %24), !dbg !11121
  br label %if.end.24, !dbg !11122

if.else.22:                                       ; preds = %if.end
  %25 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11123, !tbaa !2505
  %26 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !11125, !tbaa !2505
  %27 = load i32*, i32** %status.addr, align 8, !dbg !11126, !tbaa !2505
  %call23 = call i32 @mpd_qcopy(%struct.mpd_t* %25, %struct.mpd_t* %26, i32* %27), !dbg !11127
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.22, %if.then.20
  br label %if.end.25

if.end.25:                                        ; preds = %if.end.24
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.then.9
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.then
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11128, !tbaa !2505
  %29 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11129, !tbaa !2505
  %30 = load i32*, i32** %status.addr, align 8, !dbg !11130, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %28, %struct.mpd_context_t* %29, i32* %30), !dbg !11131
  store i32 0, i32* %cleanup.dest.slot, !dbg !11132
  br label %cleanup, !dbg !11132

cleanup:                                          ; preds = %if.end.27, %if.then.14
  %31 = bitcast i32* %c to i8*, !dbg !11133
  call void @llvm.lifetime.end(i64 4, i8* %31) #4, !dbg !11133
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !11132

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qmul_ssize(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %maxcontext = alloca %struct.mpd_context_t, align 8
  %bb_data = alloca [64 x i64], align 16
  %bb = alloca %struct.mpd_t, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1110, metadata !2395), !dbg !11135
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1111, metadata !2395), !dbg !11136
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !1112, metadata !2395), !dbg !11137
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1113, metadata !2395), !dbg !11138
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1114, metadata !2395), !dbg !11139
  %0 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !11140
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !11140
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxcontext, metadata !1115, metadata !2395), !dbg !11141
  %1 = bitcast [64 x i64]* %bb_data to i8*, !dbg !11142
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !11142
  call void @llvm.dbg.declare(metadata [64 x i64]* %bb_data, metadata !1116, metadata !2395), !dbg !11143
  %2 = bitcast %struct.mpd_t* %bb to i8*, !dbg !11144
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !11144
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %bb, metadata !1117, metadata !2395), !dbg !11145
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 0, !dbg !11146
  store i8 48, i8* %flags, align 1, !dbg !11146, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 1, !dbg !11146
  store i64 0, i64* %exp, align 8, !dbg !11146, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 2, !dbg !11146
  store i64 0, i64* %digits, align 8, !dbg !11146, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 3, !dbg !11146
  store i64 0, i64* %len, align 8, !dbg !11146, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 4, !dbg !11146
  store i64 64, i64* %alloc, align 8, !dbg !11146, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 5, !dbg !11146
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %bb_data, i32 0, i32 0, !dbg !11147
  store i64* %arraydecay, i64** %data, align 8, !dbg !11146, !tbaa !2546
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxcontext), !dbg !11148
  %3 = load i64, i64* %b.addr, align 8, !dbg !11149, !tbaa !2391
  %4 = load i32*, i32** %status.addr, align 8, !dbg !11150, !tbaa !2505
  call void @mpd_qsset_ssize(%struct.mpd_t* %bb, i64 %3, %struct.mpd_context_t* %maxcontext, i32* %4), !dbg !11151
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11152, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11153, !tbaa !2505
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11154, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !11155, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %5, %struct.mpd_t* %6, %struct.mpd_t* %bb, %struct.mpd_context_t* %7, i32* %8), !dbg !11156
  call void @mpd_del(%struct.mpd_t* %bb), !dbg !11157
  %9 = bitcast %struct.mpd_t* %bb to i8*, !dbg !11158
  call void @llvm.lifetime.end(i64 48, i8* %9) #4, !dbg !11158
  %10 = bitcast [64 x i64]* %bb_data to i8*, !dbg !11158
  call void @llvm.lifetime.end(i64 512, i8* %10) #4, !dbg !11158
  %11 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !11158
  call void @llvm.lifetime.end(i64 48, i8* %11) #4, !dbg !11158
  ret void, !dbg !11158
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qmul_uint(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %maxcontext = alloca %struct.mpd_context_t, align 8
  %bb_data = alloca [64 x i64], align 16
  %bb = alloca %struct.mpd_t, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1120, metadata !2395), !dbg !11159
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1121, metadata !2395), !dbg !11160
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !1122, metadata !2395), !dbg !11161
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1123, metadata !2395), !dbg !11162
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1124, metadata !2395), !dbg !11163
  %0 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !11164
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !11164
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxcontext, metadata !1125, metadata !2395), !dbg !11165
  %1 = bitcast [64 x i64]* %bb_data to i8*, !dbg !11166
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !11166
  call void @llvm.dbg.declare(metadata [64 x i64]* %bb_data, metadata !1126, metadata !2395), !dbg !11167
  %2 = bitcast %struct.mpd_t* %bb to i8*, !dbg !11168
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !11168
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %bb, metadata !1127, metadata !2395), !dbg !11169
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 0, !dbg !11170
  store i8 48, i8* %flags, align 1, !dbg !11170, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 1, !dbg !11170
  store i64 0, i64* %exp, align 8, !dbg !11170, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 2, !dbg !11170
  store i64 0, i64* %digits, align 8, !dbg !11170, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 3, !dbg !11170
  store i64 0, i64* %len, align 8, !dbg !11170, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 4, !dbg !11170
  store i64 64, i64* %alloc, align 8, !dbg !11170, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 5, !dbg !11170
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %bb_data, i32 0, i32 0, !dbg !11171
  store i64* %arraydecay, i64** %data, align 8, !dbg !11170, !tbaa !2546
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxcontext), !dbg !11172
  %3 = load i64, i64* %b.addr, align 8, !dbg !11173, !tbaa !2391
  %4 = load i32*, i32** %status.addr, align 8, !dbg !11174, !tbaa !2505
  call void @mpd_qsset_uint(%struct.mpd_t* %bb, i64 %3, %struct.mpd_context_t* %maxcontext, i32* %4), !dbg !11175
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11176, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11177, !tbaa !2505
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11178, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !11179, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %5, %struct.mpd_t* %6, %struct.mpd_t* %bb, %struct.mpd_context_t* %7, i32* %8), !dbg !11180
  call void @mpd_del(%struct.mpd_t* %bb), !dbg !11181
  %9 = bitcast %struct.mpd_t* %bb to i8*, !dbg !11182
  call void @llvm.lifetime.end(i64 48, i8* %9) #4, !dbg !11182
  %10 = bitcast [64 x i64]* %bb_data to i8*, !dbg !11182
  call void @llvm.lifetime.end(i64 512, i8* %10) #4, !dbg !11182
  %11 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !11182
  call void @llvm.lifetime.end(i64 48, i8* %11) #4, !dbg !11182
  ret void, !dbg !11182
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qmul_i32(%struct.mpd_t* %result, %struct.mpd_t* %a, i32 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1130, metadata !2395), !dbg !11183
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1131, metadata !2395), !dbg !11184
  store i32 %b, i32* %b.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !1132, metadata !2395), !dbg !11185
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1133, metadata !2395), !dbg !11186
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1134, metadata !2395), !dbg !11187
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11188, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11189, !tbaa !2505
  %2 = load i32, i32* %b.addr, align 4, !dbg !11190, !tbaa !2554
  %conv = sext i32 %2 to i64, !dbg !11190
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11191, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !11192, !tbaa !2505
  call void @mpd_qmul_ssize(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %conv, %struct.mpd_context_t* %3, i32* %4), !dbg !11193
  ret void, !dbg !11194
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qmul_u32(%struct.mpd_t* %result, %struct.mpd_t* %a, i32 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1137, metadata !2395), !dbg !11195
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1138, metadata !2395), !dbg !11196
  store i32 %b, i32* %b.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !1139, metadata !2395), !dbg !11197
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1140, metadata !2395), !dbg !11198
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1141, metadata !2395), !dbg !11199
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11200, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11201, !tbaa !2505
  %2 = load i32, i32* %b.addr, align 4, !dbg !11202, !tbaa !2554
  %conv = zext i32 %2 to i64, !dbg !11202
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11203, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !11204, !tbaa !2505
  call void @mpd_qmul_uint(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %conv, %struct.mpd_context_t* %3, i32* %4), !dbg !11205
  ret void, !dbg !11206
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qmul_i64(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1144, metadata !2395), !dbg !11207
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1145, metadata !2395), !dbg !11208
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !1146, metadata !2395), !dbg !11209
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1147, metadata !2395), !dbg !11210
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1148, metadata !2395), !dbg !11211
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11212, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11213, !tbaa !2505
  %2 = load i64, i64* %b.addr, align 8, !dbg !11214, !tbaa !2391
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11215, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !11216, !tbaa !2505
  call void @mpd_qmul_ssize(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %2, %struct.mpd_context_t* %3, i32* %4), !dbg !11217
  ret void, !dbg !11218
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qmul_u64(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1151, metadata !2395), !dbg !11219
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1152, metadata !2395), !dbg !11220
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !1153, metadata !2395), !dbg !11221
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1154, metadata !2395), !dbg !11222
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1155, metadata !2395), !dbg !11223
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11224, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11225, !tbaa !2505
  %2 = load i64, i64* %b.addr, align 8, !dbg !11226, !tbaa !2391
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11227, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !11228, !tbaa !2505
  call void @mpd_qmul_uint(%struct.mpd_t* %0, %struct.mpd_t* %1, i64 %2, %struct.mpd_context_t* %3, i32* %4), !dbg !11229
  ret void, !dbg !11230
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qnext_minus(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workctx = alloca %struct.mpd_context_t, align 8
  %tiny_data = alloca [1 x i64], align 8
  %tiny = alloca %struct.mpd_t, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1170, metadata !2395), !dbg !11231
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1171, metadata !2395), !dbg !11232
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1172, metadata !2395), !dbg !11233
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1173, metadata !2395), !dbg !11234
  %0 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !11235
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !11235
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %workctx, metadata !1174, metadata !2395), !dbg !11236
  %1 = bitcast [1 x i64]* %tiny_data to i8*, !dbg !11237
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !11237
  call void @llvm.dbg.declare(metadata [1 x i64]* %tiny_data, metadata !1175, metadata !2395), !dbg !11238
  %2 = bitcast [1 x i64]* %tiny_data to i8*, !dbg !11238
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* bitcast ([1 x i64]* @mpd_qnext_minus.tiny_data to i8*), i64 8, i32 8, i1 false), !dbg !11238
  %3 = bitcast %struct.mpd_t* %tiny to i8*, !dbg !11239
  call void @llvm.lifetime.start(i64 48, i8* %3) #4, !dbg !11239
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %tiny, metadata !1176, metadata !2395), !dbg !11240
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 0, !dbg !11241
  store i8 -112, i8* %flags, align 1, !dbg !11241, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 1, !dbg !11241
  %4 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11242, !tbaa !2505
  %call = call i64 @mpd_etiny(%struct.mpd_context_t* %4), !dbg !11243
  %sub = sub i64 %call, 1, !dbg !11244
  store i64 %sub, i64* %exp, align 8, !dbg !11241, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 2, !dbg !11241
  store i64 1, i64* %digits, align 8, !dbg !11241, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 3, !dbg !11241
  store i64 1, i64* %len, align 8, !dbg !11241, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 4, !dbg !11241
  store i64 1, i64* %alloc, align 8, !dbg !11241, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 5, !dbg !11241
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %tiny_data, i32 0, i32 0, !dbg !11245
  store i64* %arraydecay, i64** %data, align 8, !dbg !11241, !tbaa !2546
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11246, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %5), !dbg !11248
  %tobool = icmp ne i32 %call1, 0, !dbg !11248
  br i1 %tobool, label %if.then, label %if.end.15, !dbg !11249

if.then:                                          ; preds = %entry
  %6 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11250, !tbaa !2505
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11253, !tbaa !2505
  %8 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11254, !tbaa !2505
  %9 = load i32*, i32** %status.addr, align 8, !dbg !11255, !tbaa !2505
  %call2 = call i32 @mpd_qcheck_nan(%struct.mpd_t* %6, %struct.mpd_t* %7, %struct.mpd_context_t* %8, i32* %9), !dbg !11256
  %tobool3 = icmp ne i32 %call2, 0, !dbg !11256
  br i1 %tobool3, label %if.then.4, label %if.end, !dbg !11257

if.then.4:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11258

if.end:                                           ; preds = %if.then
  %10 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11260, !tbaa !2505
  %call5 = call i32 @mpd_isnegative(%struct.mpd_t* %10), !dbg !11262
  %tobool6 = icmp ne i32 %call5, 0, !dbg !11262
  br i1 %tobool6, label %if.then.7, label %if.else, !dbg !11263

if.then.7:                                        ; preds = %if.end
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11264, !tbaa !2505
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11266, !tbaa !2505
  %13 = load i32*, i32** %status.addr, align 8, !dbg !11267, !tbaa !2505
  %call8 = call i32 @mpd_qcopy(%struct.mpd_t* %11, %struct.mpd_t* %12, i32* %13), !dbg !11268
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11269

if.else:                                          ; preds = %if.end
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11270, !tbaa !2505
  call void @mpd_clear_flags(%struct.mpd_t* %14), !dbg !11272
  %15 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11273, !tbaa !2505
  %16 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11274, !tbaa !2505
  %17 = load i32*, i32** %status.addr, align 8, !dbg !11275, !tbaa !2505
  call void @mpd_qmaxcoeff(%struct.mpd_t* %15, %struct.mpd_context_t* %16, i32* %17), !dbg !11276
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11277, !tbaa !2505
  %call9 = call i32 @mpd_isnan(%struct.mpd_t* %18), !dbg !11279
  %tobool10 = icmp ne i32 %call9, 0, !dbg !11279
  br i1 %tobool10, label %if.then.11, label %if.end.12, !dbg !11280

if.then.11:                                       ; preds = %if.else
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11281

if.end.12:                                        ; preds = %if.else
  %19 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11283, !tbaa !2505
  %call13 = call i64 @mpd_etop(%struct.mpd_context_t* %19), !dbg !11284
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11285, !tbaa !2505
  %exp14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %20, i32 0, i32 1, !dbg !11286
  store i64 %call13, i64* %exp14, align 8, !dbg !11287, !tbaa !2510
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11288

if.end.15:                                        ; preds = %entry
  %21 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11289, !tbaa !2505
  call void @mpd_workcontext(%struct.mpd_context_t* %workctx, %struct.mpd_context_t* %21), !dbg !11290
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 6, !dbg !11291
  store i32 3, i32* %round, align 4, !dbg !11292, !tbaa !4148
  %22 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11293, !tbaa !2505
  %23 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11295, !tbaa !2505
  %24 = load i32*, i32** %status.addr, align 8, !dbg !11296, !tbaa !2505
  %call16 = call i32 @mpd_qcopy(%struct.mpd_t* %22, %struct.mpd_t* %23, i32* %24), !dbg !11297
  %tobool17 = icmp ne i32 %call16, 0, !dbg !11297
  br i1 %tobool17, label %if.end.19, label %if.then.18, !dbg !11298

if.then.18:                                       ; preds = %if.end.15
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11299

if.end.19:                                        ; preds = %if.end.15
  %25 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11301, !tbaa !2505
  %status20 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !11302
  call void @mpd_qfinalize(%struct.mpd_t* %25, %struct.mpd_context_t* %workctx, i32* %status20), !dbg !11303
  %status21 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !11304
  %26 = load i32, i32* %status21, align 4, !dbg !11304, !tbaa !9309
  %and = and i32 %26, 1022, !dbg !11306
  %tobool22 = icmp ne i32 %and, 0, !dbg !11306
  br i1 %tobool22, label %if.then.23, label %if.end.26, !dbg !11307

if.then.23:                                       ; preds = %if.end.19
  %status24 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !11308
  %27 = load i32, i32* %status24, align 4, !dbg !11308, !tbaa !9309
  %and25 = and i32 %27, 958, !dbg !11310
  %28 = load i32*, i32** %status.addr, align 8, !dbg !11311, !tbaa !2505
  %29 = load i32, i32* %28, align 4, !dbg !11312, !tbaa !2554
  %or = or i32 %29, %and25, !dbg !11312
  store i32 %or, i32* %28, align 4, !dbg !11312, !tbaa !2554
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11313

if.end.26:                                        ; preds = %if.end.19
  %status27 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !11314
  store i32 0, i32* %status27, align 4, !dbg !11315, !tbaa !9309
  %30 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11316, !tbaa !2505
  %31 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11317, !tbaa !2505
  %status28 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !11318
  call void @mpd_qsub(%struct.mpd_t* %30, %struct.mpd_t* %31, %struct.mpd_t* %tiny, %struct.mpd_context_t* %workctx, i32* %status28), !dbg !11319
  %status29 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !11320
  %32 = load i32, i32* %status29, align 4, !dbg !11320, !tbaa !9309
  %and30 = and i32 %32, 958, !dbg !11321
  %33 = load i32*, i32** %status.addr, align 8, !dbg !11322, !tbaa !2505
  %34 = load i32, i32* %33, align 4, !dbg !11323, !tbaa !2554
  %or31 = or i32 %34, %and30, !dbg !11323
  store i32 %or31, i32* %33, align 4, !dbg !11323, !tbaa !2554
  store i32 0, i32* %cleanup.dest.slot, !dbg !11324
  br label %cleanup, !dbg !11324

cleanup:                                          ; preds = %if.end.26, %if.then.23, %if.then.18, %if.end.12, %if.then.11, %if.then.7, %if.then.4
  %35 = bitcast %struct.mpd_t* %tiny to i8*, !dbg !11325
  call void @llvm.lifetime.end(i64 48, i8* %35) #4, !dbg !11325
  %36 = bitcast [1 x i64]* %tiny_data to i8*, !dbg !11325
  call void @llvm.lifetime.end(i64 8, i8* %36) #4, !dbg !11325
  %37 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !11325
  call void @llvm.lifetime.end(i64 48, i8* %37) #4, !dbg !11325
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !11324

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @mpd_workcontext(%struct.mpd_context_t* %workctx, %struct.mpd_context_t* %ctx) #3 {
entry:
  %workctx.addr = alloca %struct.mpd_context_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  store %struct.mpd_context_t* %workctx, %struct.mpd_context_t** %workctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %workctx.addr, metadata !2086, metadata !2395), !dbg !11327
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !2087, metadata !2395), !dbg !11328
  %0 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11329, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %0, i32 0, i32 0, !dbg !11330
  %1 = load i64, i64* %prec, align 8, !dbg !11330, !tbaa !2526
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %workctx.addr, align 8, !dbg !11331, !tbaa !2505
  %prec1 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %2, i32 0, i32 0, !dbg !11332
  store i64 %1, i64* %prec1, align 8, !dbg !11333, !tbaa !2526
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11334, !tbaa !2505
  %emax = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %3, i32 0, i32 1, !dbg !11335
  %4 = load i64, i64* %emax, align 8, !dbg !11335, !tbaa !2533
  %5 = load %struct.mpd_context_t*, %struct.mpd_context_t** %workctx.addr, align 8, !dbg !11336, !tbaa !2505
  %emax2 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %5, i32 0, i32 1, !dbg !11337
  store i64 %4, i64* %emax2, align 8, !dbg !11338, !tbaa !2533
  %6 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11339, !tbaa !2505
  %emin = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %6, i32 0, i32 2, !dbg !11340
  %7 = load i64, i64* %emin, align 8, !dbg !11340, !tbaa !2521
  %8 = load %struct.mpd_context_t*, %struct.mpd_context_t** %workctx.addr, align 8, !dbg !11341, !tbaa !2505
  %emin3 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %8, i32 0, i32 2, !dbg !11342
  store i64 %7, i64* %emin3, align 8, !dbg !11343, !tbaa !2521
  %9 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11344, !tbaa !2505
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %9, i32 0, i32 6, !dbg !11345
  %10 = load i32, i32* %round, align 4, !dbg !11345, !tbaa !4148
  %11 = load %struct.mpd_context_t*, %struct.mpd_context_t** %workctx.addr, align 8, !dbg !11346, !tbaa !2505
  %round4 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %11, i32 0, i32 6, !dbg !11347
  store i32 %10, i32* %round4, align 4, !dbg !11348, !tbaa !4148
  %12 = load %struct.mpd_context_t*, %struct.mpd_context_t** %workctx.addr, align 8, !dbg !11349, !tbaa !2505
  %traps = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %12, i32 0, i32 3, !dbg !11350
  store i32 0, i32* %traps, align 4, !dbg !11351, !tbaa !11352
  %13 = load %struct.mpd_context_t*, %struct.mpd_context_t** %workctx.addr, align 8, !dbg !11353, !tbaa !2505
  %status = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %13, i32 0, i32 4, !dbg !11354
  store i32 0, i32* %status, align 4, !dbg !11355, !tbaa !9309
  %14 = load %struct.mpd_context_t*, %struct.mpd_context_t** %workctx.addr, align 8, !dbg !11356, !tbaa !2505
  %newtrap = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %14, i32 0, i32 5, !dbg !11357
  store i32 0, i32* %newtrap, align 4, !dbg !11358, !tbaa !11359
  %15 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11360, !tbaa !2505
  %clamp = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %15, i32 0, i32 7, !dbg !11361
  %16 = load i32, i32* %clamp, align 4, !dbg !11361, !tbaa !3962
  %17 = load %struct.mpd_context_t*, %struct.mpd_context_t** %workctx.addr, align 8, !dbg !11362, !tbaa !2505
  %clamp5 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %17, i32 0, i32 7, !dbg !11363
  store i32 %16, i32* %clamp5, align 4, !dbg !11364, !tbaa !3962
  %18 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11365, !tbaa !2505
  %allcr = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %18, i32 0, i32 8, !dbg !11366
  %19 = load i32, i32* %allcr, align 4, !dbg !11366, !tbaa !8996
  %20 = load %struct.mpd_context_t*, %struct.mpd_context_t** %workctx.addr, align 8, !dbg !11367, !tbaa !2505
  %allcr6 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %20, i32 0, i32 8, !dbg !11368
  store i32 %19, i32* %allcr6, align 4, !dbg !11369, !tbaa !8996
  ret void, !dbg !11370
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qnext_plus(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workctx = alloca %struct.mpd_context_t, align 8
  %tiny_data = alloca [1 x i64], align 8
  %tiny = alloca %struct.mpd_t, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1179, metadata !2395), !dbg !11371
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1180, metadata !2395), !dbg !11372
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1181, metadata !2395), !dbg !11373
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1182, metadata !2395), !dbg !11374
  %0 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !11375
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !11375
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %workctx, metadata !1183, metadata !2395), !dbg !11376
  %1 = bitcast [1 x i64]* %tiny_data to i8*, !dbg !11377
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !11377
  call void @llvm.dbg.declare(metadata [1 x i64]* %tiny_data, metadata !1184, metadata !2395), !dbg !11378
  %2 = bitcast [1 x i64]* %tiny_data to i8*, !dbg !11378
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* bitcast ([1 x i64]* @mpd_qnext_plus.tiny_data to i8*), i64 8, i32 8, i1 false), !dbg !11378
  %3 = bitcast %struct.mpd_t* %tiny to i8*, !dbg !11379
  call void @llvm.lifetime.start(i64 48, i8* %3) #4, !dbg !11379
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %tiny, metadata !1185, metadata !2395), !dbg !11380
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 0, !dbg !11381
  store i8 -112, i8* %flags, align 1, !dbg !11381, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 1, !dbg !11381
  %4 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11382, !tbaa !2505
  %call = call i64 @mpd_etiny(%struct.mpd_context_t* %4), !dbg !11383
  %sub = sub i64 %call, 1, !dbg !11384
  store i64 %sub, i64* %exp, align 8, !dbg !11381, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 2, !dbg !11381
  store i64 1, i64* %digits, align 8, !dbg !11381, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 3, !dbg !11381
  store i64 1, i64* %len, align 8, !dbg !11381, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 4, !dbg !11381
  store i64 1, i64* %alloc, align 8, !dbg !11381, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tiny, i32 0, i32 5, !dbg !11381
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %tiny_data, i32 0, i32 0, !dbg !11385
  store i64* %arraydecay, i64** %data, align 8, !dbg !11381, !tbaa !2546
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11386, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %5), !dbg !11388
  %tobool = icmp ne i32 %call1, 0, !dbg !11388
  br i1 %tobool, label %if.then, label %if.end.16, !dbg !11389

if.then:                                          ; preds = %entry
  %6 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11390, !tbaa !2505
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11393, !tbaa !2505
  %8 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11394, !tbaa !2505
  %9 = load i32*, i32** %status.addr, align 8, !dbg !11395, !tbaa !2505
  %call2 = call i32 @mpd_qcheck_nan(%struct.mpd_t* %6, %struct.mpd_t* %7, %struct.mpd_context_t* %8, i32* %9), !dbg !11396
  %tobool3 = icmp ne i32 %call2, 0, !dbg !11396
  br i1 %tobool3, label %if.then.4, label %if.end, !dbg !11397

if.then.4:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11398

if.end:                                           ; preds = %if.then
  %10 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11400, !tbaa !2505
  %call5 = call i32 @mpd_ispositive(%struct.mpd_t* %10), !dbg !11402
  %tobool6 = icmp ne i32 %call5, 0, !dbg !11402
  br i1 %tobool6, label %if.then.7, label %if.else, !dbg !11403

if.then.7:                                        ; preds = %if.end
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11404, !tbaa !2505
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11406, !tbaa !2505
  %13 = load i32*, i32** %status.addr, align 8, !dbg !11407, !tbaa !2505
  %call8 = call i32 @mpd_qcopy(%struct.mpd_t* %11, %struct.mpd_t* %12, i32* %13), !dbg !11408
  br label %if.end.15, !dbg !11409

if.else:                                          ; preds = %if.end
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11410, !tbaa !2505
  call void @mpd_clear_flags(%struct.mpd_t* %14), !dbg !11412
  %15 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11413, !tbaa !2505
  %16 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11414, !tbaa !2505
  %17 = load i32*, i32** %status.addr, align 8, !dbg !11415, !tbaa !2505
  call void @mpd_qmaxcoeff(%struct.mpd_t* %15, %struct.mpd_context_t* %16, i32* %17), !dbg !11416
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11417, !tbaa !2505
  %call9 = call i32 @mpd_isnan(%struct.mpd_t* %18), !dbg !11419
  %tobool10 = icmp ne i32 %call9, 0, !dbg !11419
  br i1 %tobool10, label %if.then.11, label %if.end.12, !dbg !11420

if.then.11:                                       ; preds = %if.else
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11421

if.end.12:                                        ; preds = %if.else
  %19 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11423, !tbaa !2505
  call void @mpd_set_flags(%struct.mpd_t* %19, i8 zeroext 1), !dbg !11424
  %20 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11425, !tbaa !2505
  %call13 = call i64 @mpd_etop(%struct.mpd_context_t* %20), !dbg !11426
  %21 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11427, !tbaa !2505
  %exp14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %21, i32 0, i32 1, !dbg !11428
  store i64 %call13, i64* %exp14, align 8, !dbg !11429, !tbaa !2510
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.12, %if.then.7
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11430

if.end.16:                                        ; preds = %entry
  %22 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11431, !tbaa !2505
  call void @mpd_workcontext(%struct.mpd_context_t* %workctx, %struct.mpd_context_t* %22), !dbg !11432
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 6, !dbg !11433
  store i32 2, i32* %round, align 4, !dbg !11434, !tbaa !4148
  %23 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11435, !tbaa !2505
  %24 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11437, !tbaa !2505
  %25 = load i32*, i32** %status.addr, align 8, !dbg !11438, !tbaa !2505
  %call17 = call i32 @mpd_qcopy(%struct.mpd_t* %23, %struct.mpd_t* %24, i32* %25), !dbg !11439
  %tobool18 = icmp ne i32 %call17, 0, !dbg !11439
  br i1 %tobool18, label %if.end.20, label %if.then.19, !dbg !11440

if.then.19:                                       ; preds = %if.end.16
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11441

if.end.20:                                        ; preds = %if.end.16
  %26 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11443, !tbaa !2505
  %status21 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !11444
  call void @mpd_qfinalize(%struct.mpd_t* %26, %struct.mpd_context_t* %workctx, i32* %status21), !dbg !11445
  %status22 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !11446
  %27 = load i32, i32* %status22, align 4, !dbg !11446, !tbaa !9309
  %and = and i32 %27, 1022, !dbg !11448
  %tobool23 = icmp ne i32 %and, 0, !dbg !11448
  br i1 %tobool23, label %if.then.24, label %if.end.27, !dbg !11449

if.then.24:                                       ; preds = %if.end.20
  %status25 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !11450
  %28 = load i32, i32* %status25, align 4, !dbg !11450, !tbaa !9309
  %and26 = and i32 %28, 958, !dbg !11452
  %29 = load i32*, i32** %status.addr, align 8, !dbg !11453, !tbaa !2505
  %30 = load i32, i32* %29, align 4, !dbg !11454, !tbaa !2554
  %or = or i32 %30, %and26, !dbg !11454
  store i32 %or, i32* %29, align 4, !dbg !11454, !tbaa !2554
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11455

if.end.27:                                        ; preds = %if.end.20
  %status28 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !11456
  store i32 0, i32* %status28, align 4, !dbg !11457, !tbaa !9309
  %31 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11458, !tbaa !2505
  %32 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11459, !tbaa !2505
  %status29 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !11460
  call void @mpd_qadd(%struct.mpd_t* %31, %struct.mpd_t* %32, %struct.mpd_t* %tiny, %struct.mpd_context_t* %workctx, i32* %status29), !dbg !11461
  %status30 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !11462
  %33 = load i32, i32* %status30, align 4, !dbg !11462, !tbaa !9309
  %and31 = and i32 %33, 958, !dbg !11463
  %34 = load i32*, i32** %status.addr, align 8, !dbg !11464, !tbaa !2505
  %35 = load i32, i32* %34, align 4, !dbg !11465, !tbaa !2554
  %or32 = or i32 %35, %and31, !dbg !11465
  store i32 %or32, i32* %34, align 4, !dbg !11465, !tbaa !2554
  store i32 0, i32* %cleanup.dest.slot, !dbg !11466
  br label %cleanup, !dbg !11466

cleanup:                                          ; preds = %if.end.27, %if.then.24, %if.then.19, %if.end.15, %if.then.11, %if.then.4
  %36 = bitcast %struct.mpd_t* %tiny to i8*, !dbg !11467
  call void @llvm.lifetime.end(i64 48, i8* %36) #4, !dbg !11467
  %37 = bitcast [1 x i64]* %tiny_data to i8*, !dbg !11467
  call void @llvm.lifetime.end(i64 8, i8* %37) #4, !dbg !11467
  %38 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !11467
  call void @llvm.lifetime.end(i64 48, i8* %38) #4, !dbg !11467
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !11466

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qnext_toward(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %c = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1188, metadata !2395), !dbg !11469
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1189, metadata !2395), !dbg !11470
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1190, metadata !2395), !dbg !11471
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1191, metadata !2395), !dbg !11472
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1192, metadata !2395), !dbg !11473
  %0 = bitcast i32* %c to i8*, !dbg !11474
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !11474
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1193, metadata !2395), !dbg !11475
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11476, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11478, !tbaa !2505
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !11479, !tbaa !2505
  %4 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11480, !tbaa !2505
  %5 = load i32*, i32** %status.addr, align 8, !dbg !11481, !tbaa !2505
  %call = call i32 @mpd_qcheck_nans(%struct.mpd_t* %1, %struct.mpd_t* %2, %struct.mpd_t* %3, %struct.mpd_context_t* %4, i32* %5), !dbg !11482
  %tobool = icmp ne i32 %call, 0, !dbg !11482
  br i1 %tobool, label %if.then, label %if.end, !dbg !11483

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11484

if.end:                                           ; preds = %entry
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11486, !tbaa !2505
  %7 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !11487, !tbaa !2505
  %call1 = call i32 @_mpd_cmp(%struct.mpd_t* %6, %struct.mpd_t* %7), !dbg !11488
  store i32 %call1, i32* %c, align 4, !dbg !11489, !tbaa !2554
  %8 = load i32, i32* %c, align 4, !dbg !11490, !tbaa !2554
  %cmp = icmp eq i32 %8, 0, !dbg !11492
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !11493

if.then.2:                                        ; preds = %if.end
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11494, !tbaa !2505
  %10 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11496, !tbaa !2505
  %11 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !11497, !tbaa !2505
  %12 = load i32*, i32** %status.addr, align 8, !dbg !11498, !tbaa !2505
  %call3 = call i32 @mpd_qcopy_sign(%struct.mpd_t* %9, %struct.mpd_t* %10, %struct.mpd_t* %11, i32* %12), !dbg !11499
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11500

if.end.4:                                         ; preds = %if.end
  %13 = load i32, i32* %c, align 4, !dbg !11501, !tbaa !2554
  %cmp5 = icmp slt i32 %13, 0, !dbg !11503
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !11504

if.then.6:                                        ; preds = %if.end.4
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11505, !tbaa !2505
  %15 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11507, !tbaa !2505
  %16 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11508, !tbaa !2505
  %17 = load i32*, i32** %status.addr, align 8, !dbg !11509, !tbaa !2505
  call void @mpd_qnext_plus(%struct.mpd_t* %14, %struct.mpd_t* %15, %struct.mpd_context_t* %16, i32* %17), !dbg !11510
  br label %if.end.7, !dbg !11511

if.else:                                          ; preds = %if.end.4
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11512, !tbaa !2505
  %19 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !11514, !tbaa !2505
  %20 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11515, !tbaa !2505
  %21 = load i32*, i32** %status.addr, align 8, !dbg !11516, !tbaa !2505
  call void @mpd_qnext_minus(%struct.mpd_t* %18, %struct.mpd_t* %19, %struct.mpd_context_t* %20, i32* %21), !dbg !11517
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %22 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11518, !tbaa !2505
  %call8 = call i32 @mpd_isinfinite(%struct.mpd_t* %22), !dbg !11520
  %tobool9 = icmp ne i32 %call8, 0, !dbg !11520
  br i1 %tobool9, label %if.then.10, label %if.else.11, !dbg !11521

if.then.10:                                       ; preds = %if.end.7
  %23 = load i32*, i32** %status.addr, align 8, !dbg !11522, !tbaa !2505
  %24 = load i32, i32* %23, align 4, !dbg !11524, !tbaa !2554
  %or = or i32 %24, 6208, !dbg !11524
  store i32 %or, i32* %23, align 4, !dbg !11524, !tbaa !2554
  br label %if.end.22, !dbg !11525

if.else.11:                                       ; preds = %if.end.7
  %25 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11526, !tbaa !2505
  %call12 = call i64 @mpd_adjexp(%struct.mpd_t* %25), !dbg !11528
  %26 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11529, !tbaa !2505
  %emin = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %26, i32 0, i32 2, !dbg !11530
  %27 = load i64, i64* %emin, align 8, !dbg !11530, !tbaa !2521
  %cmp13 = icmp slt i64 %call12, %27, !dbg !11531
  br i1 %cmp13, label %if.then.14, label %if.end.21, !dbg !11532

if.then.14:                                       ; preds = %if.else.11
  %28 = load i32*, i32** %status.addr, align 8, !dbg !11533, !tbaa !2505
  %29 = load i32, i32* %28, align 4, !dbg !11535, !tbaa !2554
  %or15 = or i32 %29, 28736, !dbg !11535
  store i32 %or15, i32* %28, align 4, !dbg !11535, !tbaa !2554
  %30 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11536, !tbaa !2505
  %call16 = call i32 @mpd_iszero(%struct.mpd_t* %30), !dbg !11538
  %tobool17 = icmp ne i32 %call16, 0, !dbg !11538
  br i1 %tobool17, label %if.then.18, label %if.end.20, !dbg !11539

if.then.18:                                       ; preds = %if.then.14
  %31 = load i32*, i32** %status.addr, align 8, !dbg !11540, !tbaa !2505
  %32 = load i32, i32* %31, align 4, !dbg !11542, !tbaa !2554
  %or19 = or i32 %32, 1, !dbg !11542
  store i32 %or19, i32* %31, align 4, !dbg !11542, !tbaa !2554
  br label %if.end.20, !dbg !11543

if.end.20:                                        ; preds = %if.then.18, %if.then.14
  br label %if.end.21, !dbg !11544

if.end.21:                                        ; preds = %if.end.20, %if.else.11
  br label %if.end.22

if.end.22:                                        ; preds = %if.end.21, %if.then.10
  store i32 0, i32* %cleanup.dest.slot, !dbg !11545
  br label %cleanup, !dbg !11545

cleanup:                                          ; preds = %if.end.22, %if.then.2, %if.then
  %33 = bitcast i32* %c to i8*, !dbg !11546
  call void @llvm.lifetime.end(i64 4, i8* %33) #4, !dbg !11546
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !11545

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qpow(%struct.mpd_t* %result, %struct.mpd_t* %base, %struct.mpd_t* %exp, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %base.addr = alloca %struct.mpd_t*, align 8
  %exp.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %resultsign = alloca i8, align 1
  %intexp = alloca i32, align 4
  %cmp = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %shift = alloca i64, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1196, metadata !2395), !dbg !11548
  store %struct.mpd_t* %base, %struct.mpd_t** %base.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %base.addr, metadata !1197, metadata !2395), !dbg !11549
  store %struct.mpd_t* %exp, %struct.mpd_t** %exp.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %exp.addr, metadata !1198, metadata !2395), !dbg !11550
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1199, metadata !2395), !dbg !11551
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1200, metadata !2395), !dbg !11552
  call void @llvm.lifetime.start(i64 1, i8* %resultsign) #4, !dbg !11553
  call void @llvm.dbg.declare(metadata i8* %resultsign, metadata !1201, metadata !2395), !dbg !11554
  store i8 0, i8* %resultsign, align 1, !dbg !11554, !tbaa !2930
  %0 = bitcast i32* %intexp to i8*, !dbg !11555
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !11555
  call void @llvm.dbg.declare(metadata i32* %intexp, metadata !1202, metadata !2395), !dbg !11556
  store i32 0, i32* %intexp, align 4, !dbg !11556, !tbaa !2554
  %1 = bitcast i32* %cmp to i8*, !dbg !11557
  call void @llvm.lifetime.start(i64 4, i8* %1) #4, !dbg !11557
  call void @llvm.dbg.declare(metadata i32* %cmp, metadata !1203, metadata !2395), !dbg !11558
  %2 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !11559, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %2), !dbg !11561
  %tobool = icmp ne i32 %call, 0, !dbg !11561
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !11562

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11563, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %3), !dbg !11565
  %tobool2 = icmp ne i32 %call1, 0, !dbg !11565
  br i1 %tobool2, label %if.then, label %if.end.6, !dbg !11566

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11567, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !11570, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11571, !tbaa !2505
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11572, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !11573, !tbaa !2505
  %call3 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %4, %struct.mpd_t* %5, %struct.mpd_t* %6, %struct.mpd_context_t* %7, i32* %8), !dbg !11574
  %tobool4 = icmp ne i32 %call3, 0, !dbg !11574
  br i1 %tobool4, label %if.then.5, label %if.end, !dbg !11575

if.then.5:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11576

if.end:                                           ; preds = %if.then
  br label %if.end.6, !dbg !11578

if.end.6:                                         ; preds = %if.end, %lor.lhs.false
  %9 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11579, !tbaa !2505
  %call7 = call i32 @mpd_isinteger(%struct.mpd_t* %9), !dbg !11581
  %tobool8 = icmp ne i32 %call7, 0, !dbg !11581
  br i1 %tobool8, label %if.then.9, label %if.end.14, !dbg !11582

if.then.9:                                        ; preds = %if.end.6
  store i32 1, i32* %intexp, align 4, !dbg !11583, !tbaa !2554
  %10 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !11585, !tbaa !2505
  %call10 = call i32 @mpd_isnegative(%struct.mpd_t* %10), !dbg !11586
  %tobool11 = icmp ne i32 %call10, 0, !dbg !11586
  br i1 %tobool11, label %land.rhs, label %land.end, !dbg !11587

land.rhs:                                         ; preds = %if.then.9
  %11 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11588, !tbaa !2505
  %call12 = call i32 @mpd_isodd(%struct.mpd_t* %11), !dbg !11590
  %tobool13 = icmp ne i32 %call12, 0, !dbg !11587
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then.9
  %12 = phi i1 [ false, %if.then.9 ], [ %tobool13, %land.rhs ]
  %land.ext = zext i1 %12 to i32, !dbg !11591
  %conv = trunc i32 %land.ext to i8, !dbg !11586
  store i8 %conv, i8* %resultsign, align 1, !dbg !11593, !tbaa !2930
  br label %if.end.14, !dbg !11594

if.end.14:                                        ; preds = %land.end, %if.end.6
  %13 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !11595, !tbaa !2505
  %call15 = call i32 @mpd_iszero(%struct.mpd_t* %13), !dbg !11597
  %tobool16 = icmp ne i32 %call15, 0, !dbg !11597
  br i1 %tobool16, label %if.then.17, label %if.end.27, !dbg !11598

if.then.17:                                       ; preds = %if.end.14
  %14 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11599, !tbaa !2505
  %call18 = call i32 @mpd_iszero(%struct.mpd_t* %14), !dbg !11602
  %tobool19 = icmp ne i32 %call18, 0, !dbg !11602
  br i1 %tobool19, label %if.then.20, label %if.else, !dbg !11603

if.then.20:                                       ; preds = %if.then.17
  %15 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11604, !tbaa !2505
  %16 = load i32*, i32** %status.addr, align 8, !dbg !11606, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %15, i32 256, i32* %16), !dbg !11607
  br label %if.end.26, !dbg !11608

if.else:                                          ; preds = %if.then.17
  %17 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11609, !tbaa !2505
  %call21 = call i32 @mpd_isnegative(%struct.mpd_t* %17), !dbg !11611
  %tobool22 = icmp ne i32 %call21, 0, !dbg !11611
  br i1 %tobool22, label %if.then.23, label %if.else.24, !dbg !11612

if.then.23:                                       ; preds = %if.else
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11613, !tbaa !2505
  %19 = load i8, i8* %resultsign, align 1, !dbg !11615, !tbaa !2930
  call void @mpd_setspecial(%struct.mpd_t* %18, i8 zeroext %19, i8 zeroext 2), !dbg !11616
  br label %if.end.25, !dbg !11617

if.else.24:                                       ; preds = %if.else
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11618, !tbaa !2505
  %21 = load i8, i8* %resultsign, align 1, !dbg !11620, !tbaa !2930
  call void @_settriple(%struct.mpd_t* %20, i8 zeroext %21, i64 0, i64 0), !dbg !11621
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.24, %if.then.23
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.then.20
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11622

if.end.27:                                        ; preds = %if.end.14
  %22 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !11623, !tbaa !2505
  %call28 = call i32 @mpd_isnegative(%struct.mpd_t* %22), !dbg !11625
  %tobool29 = icmp ne i32 %call28, 0, !dbg !11625
  br i1 %tobool29, label %if.then.30, label %if.end.37, !dbg !11626

if.then.30:                                       ; preds = %if.end.27
  %23 = load i32, i32* %intexp, align 4, !dbg !11627, !tbaa !2554
  %tobool31 = icmp ne i32 %23, 0, !dbg !11627
  br i1 %tobool31, label %lor.lhs.false.32, label %if.then.35, !dbg !11630

lor.lhs.false.32:                                 ; preds = %if.then.30
  %24 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11631, !tbaa !2505
  %call33 = call i32 @mpd_isinfinite(%struct.mpd_t* %24), !dbg !11633
  %tobool34 = icmp ne i32 %call33, 0, !dbg !11633
  br i1 %tobool34, label %if.then.35, label %if.end.36, !dbg !11634

if.then.35:                                       ; preds = %lor.lhs.false.32, %if.then.30
  %25 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11635, !tbaa !2505
  %26 = load i32*, i32** %status.addr, align 8, !dbg !11637, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %25, i32 256, i32* %26), !dbg !11638
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11639

if.end.36:                                        ; preds = %lor.lhs.false.32
  br label %if.end.37, !dbg !11640

if.end.37:                                        ; preds = %if.end.36, %if.end.27
  %27 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11641, !tbaa !2505
  %call38 = call i32 @mpd_isinfinite(%struct.mpd_t* %27), !dbg !11643
  %tobool39 = icmp ne i32 %call38, 0, !dbg !11643
  br i1 %tobool39, label %if.then.40, label %if.end.53, !dbg !11644

if.then.40:                                       ; preds = %if.end.37
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11645, !tbaa !2505
  %29 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !11647, !tbaa !2505
  %30 = load i8, i8* %resultsign, align 1, !dbg !11648, !tbaa !2930
  %31 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11649, !tbaa !2505
  %32 = load i32*, i32** %status.addr, align 8, !dbg !11650, !tbaa !2505
  %call41 = call i32 @_qcheck_pow_one_inf(%struct.mpd_t* %28, %struct.mpd_t* %29, i8 zeroext %30, %struct.mpd_context_t* %31, i32* %32), !dbg !11651
  store i32 %call41, i32* %cmp, align 4, !dbg !11652, !tbaa !2554
  %33 = load i32, i32* %cmp, align 4, !dbg !11653, !tbaa !2554
  %cmp42 = icmp eq i32 %33, 0, !dbg !11655
  br i1 %cmp42, label %if.then.44, label %if.else.45, !dbg !11656

if.then.44:                                       ; preds = %if.then.40
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11657

if.else.45:                                       ; preds = %if.then.40
  %34 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11659, !tbaa !2505
  %call46 = call i32 @mpd_arith_sign(%struct.mpd_t* %34), !dbg !11661
  %35 = load i32, i32* %cmp, align 4, !dbg !11662, !tbaa !2554
  %mul = mul i32 %35, %call46, !dbg !11662
  store i32 %mul, i32* %cmp, align 4, !dbg !11662, !tbaa !2554
  %36 = load i32, i32* %cmp, align 4, !dbg !11663, !tbaa !2554
  %cmp47 = icmp slt i32 %36, 0, !dbg !11665
  br i1 %cmp47, label %if.then.49, label %if.else.50, !dbg !11666

if.then.49:                                       ; preds = %if.else.45
  %37 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11667, !tbaa !2505
  %38 = load i8, i8* %resultsign, align 1, !dbg !11669, !tbaa !2930
  call void @_settriple(%struct.mpd_t* %37, i8 zeroext %38, i64 0, i64 0), !dbg !11670
  br label %if.end.51, !dbg !11671

if.else.50:                                       ; preds = %if.else.45
  %39 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11672, !tbaa !2505
  %40 = load i8, i8* %resultsign, align 1, !dbg !11674, !tbaa !2930
  call void @mpd_setspecial(%struct.mpd_t* %39, i8 zeroext %40, i8 zeroext 2), !dbg !11675
  br label %if.end.51

if.end.51:                                        ; preds = %if.else.50, %if.then.49
  br label %if.end.52

if.end.52:                                        ; preds = %if.end.51
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11676

if.end.53:                                        ; preds = %if.end.37
  %41 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !11677, !tbaa !2505
  %call54 = call i32 @mpd_isinfinite(%struct.mpd_t* %41), !dbg !11679
  %tobool55 = icmp ne i32 %call54, 0, !dbg !11679
  br i1 %tobool55, label %if.then.56, label %if.end.67, !dbg !11680

if.then.56:                                       ; preds = %if.end.53
  %42 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11681, !tbaa !2505
  %call57 = call i32 @mpd_iszero(%struct.mpd_t* %42), !dbg !11684
  %tobool58 = icmp ne i32 %call57, 0, !dbg !11684
  br i1 %tobool58, label %if.then.59, label %if.else.60, !dbg !11685

if.then.59:                                       ; preds = %if.then.56
  %43 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11686, !tbaa !2505
  %44 = load i8, i8* %resultsign, align 1, !dbg !11688, !tbaa !2930
  call void @_settriple(%struct.mpd_t* %43, i8 zeroext %44, i64 1, i64 0), !dbg !11689
  br label %if.end.66, !dbg !11690

if.else.60:                                       ; preds = %if.then.56
  %45 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11691, !tbaa !2505
  %call61 = call i32 @mpd_isnegative(%struct.mpd_t* %45), !dbg !11693
  %tobool62 = icmp ne i32 %call61, 0, !dbg !11693
  br i1 %tobool62, label %if.then.63, label %if.else.64, !dbg !11694

if.then.63:                                       ; preds = %if.else.60
  %46 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11695, !tbaa !2505
  %47 = load i8, i8* %resultsign, align 1, !dbg !11697, !tbaa !2930
  call void @_settriple(%struct.mpd_t* %46, i8 zeroext %47, i64 0, i64 0), !dbg !11698
  br label %if.end.65, !dbg !11699

if.else.64:                                       ; preds = %if.else.60
  %48 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11700, !tbaa !2505
  %49 = load i8, i8* %resultsign, align 1, !dbg !11702, !tbaa !2930
  call void @mpd_setspecial(%struct.mpd_t* %48, i8 zeroext %49, i8 zeroext 2), !dbg !11703
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.64, %if.then.63
  br label %if.end.66

if.end.66:                                        ; preds = %if.end.65, %if.then.59
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11704

if.end.67:                                        ; preds = %if.end.53
  %50 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11705, !tbaa !2505
  %call68 = call i32 @mpd_iszero(%struct.mpd_t* %50), !dbg !11707
  %tobool69 = icmp ne i32 %call68, 0, !dbg !11707
  br i1 %tobool69, label %if.then.70, label %if.end.71, !dbg !11708

if.then.70:                                       ; preds = %if.end.67
  %51 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11709, !tbaa !2505
  %52 = load i8, i8* %resultsign, align 1, !dbg !11711, !tbaa !2930
  call void @_settriple(%struct.mpd_t* %51, i8 zeroext %52, i64 1, i64 0), !dbg !11712
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11713

if.end.71:                                        ; preds = %if.end.67
  %53 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11714, !tbaa !2505
  %54 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !11716, !tbaa !2505
  %55 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11717, !tbaa !2505
  %56 = load i8, i8* %resultsign, align 1, !dbg !11718, !tbaa !2930
  %57 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11719, !tbaa !2505
  %58 = load i32*, i32** %status.addr, align 8, !dbg !11720, !tbaa !2505
  %call72 = call i32 @_qcheck_pow_one(%struct.mpd_t* %53, %struct.mpd_t* %54, %struct.mpd_t* %55, i8 zeroext %56, %struct.mpd_context_t* %57, i32* %58), !dbg !11721
  %cmp73 = icmp eq i32 %call72, 0, !dbg !11722
  br i1 %cmp73, label %if.then.75, label %if.end.76, !dbg !11723

if.then.75:                                       ; preds = %if.end.71
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11724

if.end.76:                                        ; preds = %if.end.71
  %59 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11726, !tbaa !2505
  %60 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !11728, !tbaa !2505
  %61 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11729, !tbaa !2505
  %62 = load i8, i8* %resultsign, align 1, !dbg !11730, !tbaa !2930
  %63 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11731, !tbaa !2505
  %64 = load i32*, i32** %status.addr, align 8, !dbg !11732, !tbaa !2505
  %call77 = call i32 @_qcheck_pow_bounds(%struct.mpd_t* %59, %struct.mpd_t* %60, %struct.mpd_t* %61, i8 zeroext %62, %struct.mpd_context_t* %63, i32* %64), !dbg !11733
  %tobool78 = icmp ne i32 %call77, 0, !dbg !11733
  br i1 %tobool78, label %if.then.79, label %if.end.80, !dbg !11734

if.then.79:                                       ; preds = %if.end.76
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11735

if.end.80:                                        ; preds = %if.end.76
  %65 = load i32, i32* %intexp, align 4, !dbg !11737, !tbaa !2554
  %tobool81 = icmp ne i32 %65, 0, !dbg !11737
  br i1 %tobool81, label %if.then.82, label %if.else.83, !dbg !11738

if.then.82:                                       ; preds = %if.end.80
  %66 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11739, !tbaa !2505
  %67 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !11741, !tbaa !2505
  %68 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11742, !tbaa !2505
  %69 = load i8, i8* %resultsign, align 1, !dbg !11743, !tbaa !2930
  %70 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11744, !tbaa !2505
  %71 = load i32*, i32** %status.addr, align 8, !dbg !11745, !tbaa !2505
  call void @_mpd_qpow_int(%struct.mpd_t* %66, %struct.mpd_t* %67, %struct.mpd_t* %68, i8 zeroext %69, %struct.mpd_context_t* %70, i32* %71), !dbg !11746
  br label %if.end.98, !dbg !11747

if.else.83:                                       ; preds = %if.end.80
  %72 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11748, !tbaa !2505
  %73 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !11749, !tbaa !2505
  %74 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11750, !tbaa !2505
  %75 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11751, !tbaa !2505
  %76 = load i32*, i32** %status.addr, align 8, !dbg !11752, !tbaa !2505
  call void @_mpd_qpow_real(%struct.mpd_t* %72, %struct.mpd_t* %73, %struct.mpd_t* %74, %struct.mpd_context_t* %75, i32* %76), !dbg !11753
  %77 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11754, !tbaa !2505
  %call84 = call i32 @mpd_isspecial(%struct.mpd_t* %77), !dbg !11755
  %tobool85 = icmp ne i32 %call84, 0, !dbg !11755
  br i1 %tobool85, label %if.end.93, label %land.lhs.true, !dbg !11756

land.lhs.true:                                    ; preds = %if.else.83
  %78 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11757, !tbaa !2505
  %call86 = call i32 @_mpd_cmp(%struct.mpd_t* %78, %struct.mpd_t* @one), !dbg !11759
  %cmp87 = icmp eq i32 %call86, 0, !dbg !11760
  br i1 %cmp87, label %if.then.89, label %if.end.93, !dbg !11761

if.then.89:                                       ; preds = %land.lhs.true
  %79 = bitcast i64* %shift to i8*, !dbg !11762
  call void @llvm.lifetime.start(i64 8, i8* %79) #4, !dbg !11762
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !1204, metadata !2395), !dbg !11763
  %80 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11764, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %80, i32 0, i32 0, !dbg !11765
  %81 = load i64, i64* %prec, align 8, !dbg !11765, !tbaa !2526
  %sub = sub i64 %81, 1, !dbg !11766
  store i64 %sub, i64* %shift, align 8, !dbg !11763, !tbaa !2391
  %82 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11767, !tbaa !2505
  %83 = load i64, i64* %shift, align 8, !dbg !11768, !tbaa !2391
  %84 = load i32*, i32** %status.addr, align 8, !dbg !11769, !tbaa !2505
  %call90 = call i32 @mpd_qshiftl(%struct.mpd_t* %82, %struct.mpd_t* @one, i64 %83, i32* %84), !dbg !11770
  %85 = load i64, i64* %shift, align 8, !dbg !11771, !tbaa !2391
  %sub91 = sub i64 0, %85, !dbg !11772
  %86 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11773, !tbaa !2505
  %exp92 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %86, i32 0, i32 1, !dbg !11774
  store i64 %sub91, i64* %exp92, align 8, !dbg !11775, !tbaa !2510
  %87 = bitcast i64* %shift to i8*, !dbg !11776
  call void @llvm.lifetime.end(i64 8, i8* %87) #4, !dbg !11776
  br label %if.end.93, !dbg !11777

if.end.93:                                        ; preds = %if.then.89, %land.lhs.true, %if.else.83
  %88 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11778, !tbaa !2505
  %call94 = call i32 @mpd_isinfinite(%struct.mpd_t* %88), !dbg !11780
  %tobool95 = icmp ne i32 %call94, 0, !dbg !11780
  br i1 %tobool95, label %if.then.96, label %if.end.97, !dbg !11781

if.then.96:                                       ; preds = %if.end.93
  %89 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11782, !tbaa !2505
  call void @_settriple(%struct.mpd_t* %89, i8 zeroext 0, i64 1, i64 2000000000000000001), !dbg !11784
  br label %if.end.97, !dbg !11785

if.end.97:                                        ; preds = %if.then.96, %if.end.93
  %90 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11786, !tbaa !2505
  %91 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11787, !tbaa !2505
  %92 = load i32*, i32** %status.addr, align 8, !dbg !11788, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %90, %struct.mpd_context_t* %91, i32* %92), !dbg !11789
  br label %if.end.98

if.end.98:                                        ; preds = %if.end.97, %if.then.82
  store i32 0, i32* %cleanup.dest.slot, !dbg !11790
  br label %cleanup, !dbg !11790

cleanup:                                          ; preds = %if.end.98, %if.then.79, %if.then.75, %if.then.70, %if.end.66, %if.end.52, %if.then.44, %if.then.35, %if.end.26, %if.then.5
  %93 = bitcast i32* %cmp to i8*, !dbg !11791
  call void @llvm.lifetime.end(i64 4, i8* %93) #4, !dbg !11791
  %94 = bitcast i32* %intexp to i8*, !dbg !11791
  call void @llvm.lifetime.end(i64 4, i8* %94) #4, !dbg !11791
  call void @llvm.lifetime.end(i64 1, i8* %resultsign) #4, !dbg !11791
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !11790

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @_qcheck_pow_one_inf(%struct.mpd_t* %result, %struct.mpd_t* %base, i8 zeroext %resultsign, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %base.addr = alloca %struct.mpd_t*, align 8
  %resultsign.addr = alloca i8, align 1
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %shift = alloca i64, align 8
  %cmp = alloca i32, align 4
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !2092, metadata !2395), !dbg !11793
  store %struct.mpd_t* %base, %struct.mpd_t** %base.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %base.addr, metadata !2093, metadata !2395), !dbg !11794
  store i8 %resultsign, i8* %resultsign.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %resultsign.addr, metadata !2094, metadata !2395), !dbg !11795
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !2095, metadata !2395), !dbg !11796
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2096, metadata !2395), !dbg !11797
  %0 = bitcast i64* %shift to i8*, !dbg !11798
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !11798
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !2097, metadata !2395), !dbg !11799
  %1 = bitcast i32* %cmp to i8*, !dbg !11800
  call void @llvm.lifetime.start(i64 4, i8* %1) #4, !dbg !11800
  call void @llvm.dbg.declare(metadata i32* %cmp, metadata !2098, metadata !2395), !dbg !11801
  %2 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !11802, !tbaa !2505
  %call = call i32 @_mpd_cmp(%struct.mpd_t* %2, %struct.mpd_t* @one), !dbg !11804
  store i32 %call, i32* %cmp, align 4, !dbg !11805, !tbaa !2554
  %cmp1 = icmp eq i32 %call, 0, !dbg !11806
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11807

if.then:                                          ; preds = %entry
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11808, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %3, i32 0, i32 0, !dbg !11810
  %4 = load i64, i64* %prec, align 8, !dbg !11810, !tbaa !2526
  %sub = sub i64 %4, 1, !dbg !11811
  store i64 %sub, i64* %shift, align 8, !dbg !11812, !tbaa !2391
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11813, !tbaa !2505
  %6 = load i64, i64* %shift, align 8, !dbg !11814, !tbaa !2391
  %7 = load i32*, i32** %status.addr, align 8, !dbg !11815, !tbaa !2505
  %call2 = call i32 @mpd_qshiftl(%struct.mpd_t* %5, %struct.mpd_t* @one, i64 %6, i32* %7), !dbg !11816
  %8 = load i64, i64* %shift, align 8, !dbg !11817, !tbaa !2391
  %sub3 = sub i64 0, %8, !dbg !11818
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11819, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 1, !dbg !11820
  store i64 %sub3, i64* %exp, align 8, !dbg !11821, !tbaa !2510
  %10 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11822, !tbaa !2505
  %11 = load i8, i8* %resultsign.addr, align 1, !dbg !11823, !tbaa !2930
  call void @mpd_set_flags(%struct.mpd_t* %10, i8 zeroext %11), !dbg !11824
  %12 = load i32*, i32** %status.addr, align 8, !dbg !11825, !tbaa !2505
  %13 = load i32, i32* %12, align 4, !dbg !11826, !tbaa !2554
  %or = or i32 %13, 4160, !dbg !11826
  store i32 %or, i32* %12, align 4, !dbg !11826, !tbaa !2554
  br label %if.end, !dbg !11827

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %cmp, align 4, !dbg !11828, !tbaa !2554
  %15 = bitcast i32* %cmp to i8*, !dbg !11829
  call void @llvm.lifetime.end(i64 4, i8* %15) #4, !dbg !11829
  %16 = bitcast i64* %shift to i8*, !dbg !11829
  call void @llvm.lifetime.end(i64 8, i8* %16) #4, !dbg !11829
  ret i32 %14, !dbg !11830
}

; Function Attrs: nounwind uwtable
define internal i32 @_qcheck_pow_one(%struct.mpd_t* %result, %struct.mpd_t* %base, %struct.mpd_t* %exp, i8 zeroext %resultsign, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %base.addr = alloca %struct.mpd_t*, align 8
  %exp.addr = alloca %struct.mpd_t*, align 8
  %resultsign.addr = alloca i8, align 1
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workstatus = alloca i32, align 4
  %shift = alloca i64, align 8
  %cmp = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !2103, metadata !2395), !dbg !11831
  store %struct.mpd_t* %base, %struct.mpd_t** %base.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %base.addr, metadata !2104, metadata !2395), !dbg !11832
  store %struct.mpd_t* %exp, %struct.mpd_t** %exp.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %exp.addr, metadata !2105, metadata !2395), !dbg !11833
  store i8 %resultsign, i8* %resultsign.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %resultsign.addr, metadata !2106, metadata !2395), !dbg !11834
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !2107, metadata !2395), !dbg !11835
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2108, metadata !2395), !dbg !11836
  %0 = bitcast i32* %workstatus to i8*, !dbg !11837
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !11837
  call void @llvm.dbg.declare(metadata i32* %workstatus, metadata !2109, metadata !2395), !dbg !11838
  store i32 0, i32* %workstatus, align 4, !dbg !11838, !tbaa !2554
  %1 = bitcast i64* %shift to i8*, !dbg !11839
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !11839
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !2110, metadata !2395), !dbg !11840
  %2 = bitcast i32* %cmp to i8*, !dbg !11841
  call void @llvm.lifetime.start(i64 4, i8* %2) #4, !dbg !11841
  call void @llvm.dbg.declare(metadata i32* %cmp, metadata !2111, metadata !2395), !dbg !11842
  %3 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !11843, !tbaa !2505
  %call = call i32 @_mpd_cmp_abs(%struct.mpd_t* %3, %struct.mpd_t* @one), !dbg !11845
  store i32 %call, i32* %cmp, align 4, !dbg !11846, !tbaa !2554
  %cmp1 = icmp eq i32 %call, 0, !dbg !11847
  br i1 %cmp1, label %if.then, label %if.end.35, !dbg !11848

if.then:                                          ; preds = %entry
  %4 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11849, !tbaa !2505
  %call2 = call i32 @_mpd_isint(%struct.mpd_t* %4), !dbg !11852
  %tobool = icmp ne i32 %call2, 0, !dbg !11852
  br i1 %tobool, label %if.then.3, label %if.else, !dbg !11853

if.then.3:                                        ; preds = %if.then
  %5 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11854, !tbaa !2505
  %call4 = call i32 @mpd_isnegative(%struct.mpd_t* %5), !dbg !11857
  %tobool5 = icmp ne i32 %call4, 0, !dbg !11857
  br i1 %tobool5, label %if.then.6, label %if.end, !dbg !11858

if.then.6:                                        ; preds = %if.then.3
  %6 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11859, !tbaa !2505
  %7 = load i8, i8* %resultsign.addr, align 1, !dbg !11861, !tbaa !2930
  call void @_settriple(%struct.mpd_t* %6, i8 zeroext %7, i64 1, i64 0), !dbg !11862
  store i32 0, i32* %retval, !dbg !11863
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11863

if.end:                                           ; preds = %if.then.3
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11864, !tbaa !2505
  %9 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !11865, !tbaa !2505
  %10 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !11866, !tbaa !2505
  %exp7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %10, i32 0, i32 1, !dbg !11867
  %11 = load i64, i64* %exp7, align 8, !dbg !11867, !tbaa !2510
  %sub = sub i64 0, %11, !dbg !11868
  %12 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11869, !tbaa !2505
  call void @mpd_qmul_ssize(%struct.mpd_t* %8, %struct.mpd_t* %9, i64 %sub, %struct.mpd_context_t* %12, i32* %workstatus), !dbg !11870
  %13 = load i32, i32* %workstatus, align 4, !dbg !11871, !tbaa !2554
  %and = and i32 %13, 958, !dbg !11873
  %tobool8 = icmp ne i32 %and, 0, !dbg !11873
  br i1 %tobool8, label %if.then.9, label %if.end.11, !dbg !11874

if.then.9:                                        ; preds = %if.end
  %14 = load i32, i32* %workstatus, align 4, !dbg !11875, !tbaa !2554
  %and10 = and i32 %14, 958, !dbg !11877
  %15 = load i32*, i32** %status.addr, align 8, !dbg !11878, !tbaa !2505
  %16 = load i32, i32* %15, align 4, !dbg !11879, !tbaa !2554
  %or = or i32 %16, %and10, !dbg !11879
  store i32 %or, i32* %15, align 4, !dbg !11879, !tbaa !2554
  store i32 0, i32* %retval, !dbg !11880
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11880

if.end.11:                                        ; preds = %if.end
  %17 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11881, !tbaa !2505
  %call12 = call i64 @mpd_qget_ssize(%struct.mpd_t* %17, i32* %workstatus), !dbg !11882
  store i64 %call12, i64* %shift, align 8, !dbg !11883, !tbaa !2391
  %18 = load i64, i64* %shift, align 8, !dbg !11884, !tbaa !2391
  %19 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11886, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %19, i32 0, i32 0, !dbg !11887
  %20 = load i64, i64* %prec, align 8, !dbg !11887, !tbaa !2526
  %sub13 = sub i64 %20, 1, !dbg !11888
  %cmp14 = icmp sgt i64 %18, %sub13, !dbg !11889
  br i1 %cmp14, label %if.then.15, label %if.end.19, !dbg !11890

if.then.15:                                       ; preds = %if.end.11
  %21 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11891, !tbaa !2505
  %prec16 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %21, i32 0, i32 0, !dbg !11893
  %22 = load i64, i64* %prec16, align 8, !dbg !11893, !tbaa !2526
  %sub17 = sub i64 %22, 1, !dbg !11894
  store i64 %sub17, i64* %shift, align 8, !dbg !11895, !tbaa !2391
  %23 = load i32*, i32** %status.addr, align 8, !dbg !11896, !tbaa !2505
  %24 = load i32, i32* %23, align 4, !dbg !11897, !tbaa !2554
  %or18 = or i32 %24, 4096, !dbg !11897
  store i32 %or18, i32* %23, align 4, !dbg !11897, !tbaa !2554
  br label %if.end.19, !dbg !11898

if.end.19:                                        ; preds = %if.then.15, %if.end.11
  br label %if.end.28, !dbg !11899

if.else:                                          ; preds = %if.then
  %25 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !11900, !tbaa !2505
  %call20 = call i32 @mpd_ispositive(%struct.mpd_t* %25), !dbg !11902
  %tobool21 = icmp ne i32 %call20, 0, !dbg !11902
  br i1 %tobool21, label %if.then.22, label %if.else.26, !dbg !11903

if.then.22:                                       ; preds = %if.else
  %26 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11904, !tbaa !2505
  %prec23 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %26, i32 0, i32 0, !dbg !11906
  %27 = load i64, i64* %prec23, align 8, !dbg !11906, !tbaa !2526
  %sub24 = sub i64 %27, 1, !dbg !11907
  store i64 %sub24, i64* %shift, align 8, !dbg !11908, !tbaa !2391
  %28 = load i32*, i32** %status.addr, align 8, !dbg !11909, !tbaa !2505
  %29 = load i32, i32* %28, align 4, !dbg !11910, !tbaa !2554
  %or25 = or i32 %29, 4160, !dbg !11910
  store i32 %or25, i32* %28, align 4, !dbg !11910, !tbaa !2554
  br label %if.end.27, !dbg !11911

if.else.26:                                       ; preds = %if.else
  store i32 -2, i32* %retval, !dbg !11912
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11912

if.end.27:                                        ; preds = %if.then.22
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.end.19
  %30 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11914, !tbaa !2505
  %31 = load i64, i64* %shift, align 8, !dbg !11916, !tbaa !2391
  %32 = load i32*, i32** %status.addr, align 8, !dbg !11917, !tbaa !2505
  %call29 = call i32 @mpd_qshiftl(%struct.mpd_t* %30, %struct.mpd_t* @one, i64 %31, i32* %32), !dbg !11918
  %tobool30 = icmp ne i32 %call29, 0, !dbg !11918
  br i1 %tobool30, label %if.end.32, label %if.then.31, !dbg !11919

if.then.31:                                       ; preds = %if.end.28
  store i32 0, i32* %retval, !dbg !11920
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11920

if.end.32:                                        ; preds = %if.end.28
  %33 = load i64, i64* %shift, align 8, !dbg !11922, !tbaa !2391
  %sub33 = sub i64 0, %33, !dbg !11923
  %34 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11924, !tbaa !2505
  %exp34 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %34, i32 0, i32 1, !dbg !11925
  store i64 %sub33, i64* %exp34, align 8, !dbg !11926, !tbaa !2510
  %35 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11927, !tbaa !2505
  %36 = load i8, i8* %resultsign.addr, align 1, !dbg !11928, !tbaa !2930
  call void @mpd_set_flags(%struct.mpd_t* %35, i8 zeroext %36), !dbg !11929
  br label %if.end.35, !dbg !11930

if.end.35:                                        ; preds = %if.end.32, %entry
  %37 = load i32, i32* %cmp, align 4, !dbg !11931, !tbaa !2554
  store i32 %37, i32* %retval, !dbg !11932
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11932

cleanup:                                          ; preds = %if.end.35, %if.then.31, %if.else.26, %if.then.9, %if.then.6
  %38 = bitcast i32* %cmp to i8*, !dbg !11933
  call void @llvm.lifetime.end(i64 4, i8* %38) #4, !dbg !11933
  %39 = bitcast i64* %shift to i8*, !dbg !11933
  call void @llvm.lifetime.end(i64 8, i8* %39) #4, !dbg !11933
  %40 = bitcast i32* %workstatus to i8*, !dbg !11933
  call void @llvm.lifetime.end(i64 4, i8* %40) #4, !dbg !11933
  %41 = load i32, i32* %retval, !dbg !11933
  ret i32 %41, !dbg !11933
}

; Function Attrs: nounwind uwtable
define internal i32 @_qcheck_pow_bounds(%struct.mpd_t* %result, %struct.mpd_t* %x, %struct.mpd_t* %y, i8 zeroext %resultsign, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %x.addr = alloca %struct.mpd_t*, align 8
  %y.addr = alloca %struct.mpd_t*, align 8
  %resultsign.addr = alloca i8, align 1
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %abs_x = alloca %struct.mpd_t, align 8
  %ub_omega = alloca i64, align 8
  %lb_zeta = alloca i64, align 8
  %lb_theta = alloca i64, align 8
  %sign = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !2114, metadata !2395), !dbg !11934
  store %struct.mpd_t* %x, %struct.mpd_t** %x.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %x.addr, metadata !2115, metadata !2395), !dbg !11935
  store %struct.mpd_t* %y, %struct.mpd_t** %y.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %y.addr, metadata !2116, metadata !2395), !dbg !11936
  store i8 %resultsign, i8* %resultsign.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %resultsign.addr, metadata !2117, metadata !2395), !dbg !11937
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !2118, metadata !2395), !dbg !11938
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2119, metadata !2395), !dbg !11939
  %0 = bitcast %struct.mpd_t* %abs_x to i8*, !dbg !11940
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !11940
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %abs_x, metadata !2120, metadata !2395), !dbg !11941
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %abs_x, i32 0, i32 0, !dbg !11942
  %1 = load %struct.mpd_t*, %struct.mpd_t** %x.addr, align 8, !dbg !11943, !tbaa !2505
  %flags1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %1, i32 0, i32 0, !dbg !11944
  %2 = load i8, i8* %flags1, align 1, !dbg !11944, !tbaa !2620
  %conv = zext i8 %2 to i32, !dbg !11943
  %and = and i32 %conv, -225, !dbg !11945
  %or = or i32 %and, 16, !dbg !11946
  %or2 = or i32 %or, 64, !dbg !11947
  %conv3 = trunc i32 %or2 to i8, !dbg !11948
  store i8 %conv3, i8* %flags, align 1, !dbg !11942, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %abs_x, i32 0, i32 1, !dbg !11942
  %3 = load %struct.mpd_t*, %struct.mpd_t** %x.addr, align 8, !dbg !11949, !tbaa !2505
  %exp4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 1, !dbg !11950
  %4 = load i64, i64* %exp4, align 8, !dbg !11950, !tbaa !2510
  store i64 %4, i64* %exp, align 8, !dbg !11942, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %abs_x, i32 0, i32 2, !dbg !11942
  %5 = load %struct.mpd_t*, %struct.mpd_t** %x.addr, align 8, !dbg !11951, !tbaa !2505
  %digits5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %5, i32 0, i32 2, !dbg !11952
  %6 = load i64, i64* %digits5, align 8, !dbg !11952, !tbaa !2514
  store i64 %6, i64* %digits, align 8, !dbg !11942, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %abs_x, i32 0, i32 3, !dbg !11942
  %7 = load %struct.mpd_t*, %struct.mpd_t** %x.addr, align 8, !dbg !11953, !tbaa !2505
  %len6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %7, i32 0, i32 3, !dbg !11954
  %8 = load i64, i64* %len6, align 8, !dbg !11954, !tbaa !2542
  store i64 %8, i64* %len, align 8, !dbg !11942, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %abs_x, i32 0, i32 4, !dbg !11942
  %9 = load %struct.mpd_t*, %struct.mpd_t** %x.addr, align 8, !dbg !11955, !tbaa !2505
  %alloc7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 4, !dbg !11956
  %10 = load i64, i64* %alloc7, align 8, !dbg !11956, !tbaa !2835
  store i64 %10, i64* %alloc, align 8, !dbg !11942, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %abs_x, i32 0, i32 5, !dbg !11942
  %11 = load %struct.mpd_t*, %struct.mpd_t** %x.addr, align 8, !dbg !11957, !tbaa !2505
  %data8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 5, !dbg !11958
  %12 = load i64*, i64** %data8, align 8, !dbg !11958, !tbaa !2546
  store i64* %12, i64** %data, align 8, !dbg !11942, !tbaa !2546
  %13 = bitcast i64* %ub_omega to i8*, !dbg !11959
  call void @llvm.lifetime.start(i64 8, i8* %13) #4, !dbg !11959
  call void @llvm.dbg.declare(metadata i64* %ub_omega, metadata !2121, metadata !2395), !dbg !11960
  %14 = bitcast i64* %lb_zeta to i8*, !dbg !11959
  call void @llvm.lifetime.start(i64 8, i8* %14) #4, !dbg !11959
  call void @llvm.dbg.declare(metadata i64* %lb_zeta, metadata !2122, metadata !2395), !dbg !11961
  %15 = bitcast i64* %lb_theta to i8*, !dbg !11959
  call void @llvm.lifetime.start(i64 8, i8* %15) #4, !dbg !11959
  call void @llvm.dbg.declare(metadata i64* %lb_theta, metadata !2123, metadata !2395), !dbg !11962
  call void @llvm.lifetime.start(i64 1, i8* %sign) #4, !dbg !11963
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !2124, metadata !2395), !dbg !11964
  call void @mpd_set_positive(%struct.mpd_t* %abs_x), !dbg !11965
  %16 = load %struct.mpd_t*, %struct.mpd_t** %y.addr, align 8, !dbg !11966, !tbaa !2505
  %call = call i64 @mpd_adjexp(%struct.mpd_t* %16), !dbg !11967
  store i64 %call, i64* %lb_theta, align 8, !dbg !11968, !tbaa !2391
  %17 = load i32*, i32** %status.addr, align 8, !dbg !11969, !tbaa !2505
  %call9 = call i64 @_lower_bound_zeta(%struct.mpd_t* %abs_x, i32* %17), !dbg !11970
  store i64 %call9, i64* %lb_zeta, align 8, !dbg !11971, !tbaa !2391
  %18 = load i64, i64* %lb_zeta, align 8, !dbg !11972, !tbaa !2391
  %cmp = icmp eq i64 %18, 9223372036854775807, !dbg !11974
  br i1 %cmp, label %if.then, label %if.end, !dbg !11975

if.then:                                          ; preds = %entry
  %19 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !11976, !tbaa !2505
  %20 = load i32*, i32** %status.addr, align 8, !dbg !11978, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %19, i32 512, i32* %20), !dbg !11979
  store i32 1, i32* %retval, !dbg !11980
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11980

if.end:                                           ; preds = %entry
  %call11 = call i64 @mpd_adjexp(%struct.mpd_t* %abs_x), !dbg !11981
  %cmp12 = icmp slt i64 %call11, 0, !dbg !11982
  %conv13 = zext i1 %cmp12 to i32, !dbg !11982
  %21 = load %struct.mpd_t*, %struct.mpd_t** %y.addr, align 8, !dbg !11983, !tbaa !2505
  %call14 = call zeroext i8 @mpd_sign(%struct.mpd_t* %21), !dbg !11984
  %conv15 = zext i8 %call14 to i32, !dbg !11984
  %xor = xor i32 %conv13, %conv15, !dbg !11985
  %conv16 = trunc i32 %xor to i8, !dbg !11986
  store i8 %conv16, i8* %sign, align 1, !dbg !11987, !tbaa !2930
  %22 = load i8, i8* %sign, align 1, !dbg !11988, !tbaa !2930
  %conv17 = zext i8 %22 to i32, !dbg !11988
  %cmp18 = icmp eq i32 %conv17, 0, !dbg !11990
  br i1 %cmp18, label %if.then.20, label %if.else, !dbg !11991

if.then.20:                                       ; preds = %if.end
  %23 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !11992, !tbaa !2505
  %emax = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %23, i32 0, i32 1, !dbg !11994
  %24 = load i64, i64* %emax, align 8, !dbg !11994, !tbaa !2533
  %call21 = call i32 @mpd_exp_digits(i64 %24), !dbg !11995
  %conv22 = sext i32 %call21 to i64, !dbg !11995
  store i64 %conv22, i64* %ub_omega, align 8, !dbg !11996, !tbaa !2391
  %25 = load i64, i64* %ub_omega, align 8, !dbg !11997, !tbaa !2391
  %26 = load i64, i64* %lb_zeta, align 8, !dbg !11999, !tbaa !2391
  %27 = load i64, i64* %lb_theta, align 8, !dbg !12000, !tbaa !2391
  %add = add i64 %26, %27, !dbg !12001
  %cmp23 = icmp slt i64 %25, %add, !dbg !12002
  br i1 %cmp23, label %if.then.25, label %if.end.26, !dbg !12003

if.then.25:                                       ; preds = %if.then.20
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12004, !tbaa !2505
  %29 = load i8, i8* %resultsign.addr, align 1, !dbg !12006, !tbaa !2930
  call void @_settriple(%struct.mpd_t* %28, i8 zeroext %29, i64 1, i64 2000000000000000001), !dbg !12007
  %30 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12008, !tbaa !2505
  %31 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12009, !tbaa !2505
  %32 = load i32*, i32** %status.addr, align 8, !dbg !12010, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %30, %struct.mpd_context_t* %31, i32* %32), !dbg !12011
  store i32 1, i32* %retval, !dbg !12012
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12012

if.end.26:                                        ; preds = %if.then.20
  br label %if.end.36, !dbg !12013

if.else:                                          ; preds = %if.end
  %33 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12014, !tbaa !2505
  %call27 = call i64 @mpd_etiny(%struct.mpd_context_t* %33), !dbg !12016
  %call28 = call i32 @mpd_exp_digits(i64 %call27), !dbg !12017
  %conv29 = sext i32 %call28 to i64, !dbg !12017
  store i64 %conv29, i64* %ub_omega, align 8, !dbg !12018, !tbaa !2391
  %34 = load i64, i64* %ub_omega, align 8, !dbg !12019, !tbaa !2391
  %35 = load i64, i64* %lb_zeta, align 8, !dbg !12021, !tbaa !2391
  %36 = load i64, i64* %lb_theta, align 8, !dbg !12022, !tbaa !2391
  %add30 = add i64 %35, %36, !dbg !12023
  %cmp31 = icmp slt i64 %34, %add30, !dbg !12024
  br i1 %cmp31, label %if.then.33, label %if.end.35, !dbg !12025

if.then.33:                                       ; preds = %if.else
  %37 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12026, !tbaa !2505
  %38 = load i8, i8* %resultsign.addr, align 1, !dbg !12028, !tbaa !2930
  %39 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12029, !tbaa !2505
  %call34 = call i64 @mpd_etiny(%struct.mpd_context_t* %39), !dbg !12030
  %sub = sub i64 %call34, 1, !dbg !12031
  call void @_settriple(%struct.mpd_t* %37, i8 zeroext %38, i64 1, i64 %sub), !dbg !12032
  %40 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12033, !tbaa !2505
  %41 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12034, !tbaa !2505
  %42 = load i32*, i32** %status.addr, align 8, !dbg !12035, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %40, %struct.mpd_context_t* %41, i32* %42), !dbg !12036
  store i32 1, i32* %retval, !dbg !12037
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12037

if.end.35:                                        ; preds = %if.else
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.35, %if.end.26
  store i32 0, i32* %retval, !dbg !12038
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12038

cleanup:                                          ; preds = %if.end.36, %if.then.33, %if.then.25, %if.then
  call void @llvm.lifetime.end(i64 1, i8* %sign) #4, !dbg !12039
  %43 = bitcast i64* %lb_theta to i8*, !dbg !12039
  call void @llvm.lifetime.end(i64 8, i8* %43) #4, !dbg !12039
  %44 = bitcast i64* %lb_zeta to i8*, !dbg !12039
  call void @llvm.lifetime.end(i64 8, i8* %44) #4, !dbg !12039
  %45 = bitcast i64* %ub_omega to i8*, !dbg !12039
  call void @llvm.lifetime.end(i64 8, i8* %45) #4, !dbg !12039
  %46 = bitcast %struct.mpd_t* %abs_x to i8*, !dbg !12039
  call void @llvm.lifetime.end(i64 48, i8* %46) #4, !dbg !12039
  %47 = load i32, i32* %retval, !dbg !12039
  ret i32 %47, !dbg !12039
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qpow_int(%struct.mpd_t* %result, %struct.mpd_t* %base, %struct.mpd_t* %exp, i8 zeroext %resultsign, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %base.addr = alloca %struct.mpd_t*, align 8
  %exp.addr = alloca %struct.mpd_t*, align 8
  %resultsign.addr = alloca i8, align 1
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workctx = alloca %struct.mpd_context_t, align 8
  %tbase_data = alloca [64 x i64], align 16
  %tbase = alloca %struct.mpd_t, align 8
  %texp_data = alloca [64 x i64], align 16
  %texp = alloca %struct.mpd_t, align 8
  %n = alloca i64, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !2136, metadata !2395), !dbg !12040
  store %struct.mpd_t* %base, %struct.mpd_t** %base.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %base.addr, metadata !2137, metadata !2395), !dbg !12041
  store %struct.mpd_t* %exp, %struct.mpd_t** %exp.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %exp.addr, metadata !2138, metadata !2395), !dbg !12042
  store i8 %resultsign, i8* %resultsign.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %resultsign.addr, metadata !2139, metadata !2395), !dbg !12043
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !2140, metadata !2395), !dbg !12044
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2141, metadata !2395), !dbg !12045
  %0 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !12046
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !12046
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %workctx, metadata !2142, metadata !2395), !dbg !12047
  %1 = bitcast [64 x i64]* %tbase_data to i8*, !dbg !12048
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !12048
  call void @llvm.dbg.declare(metadata [64 x i64]* %tbase_data, metadata !2143, metadata !2395), !dbg !12049
  %2 = bitcast %struct.mpd_t* %tbase to i8*, !dbg !12050
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !12050
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %tbase, metadata !2144, metadata !2395), !dbg !12051
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tbase, i32 0, i32 0, !dbg !12052
  store i8 48, i8* %flags, align 1, !dbg !12052, !tbaa !2620
  %exp1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tbase, i32 0, i32 1, !dbg !12052
  store i64 0, i64* %exp1, align 8, !dbg !12052, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tbase, i32 0, i32 2, !dbg !12052
  store i64 0, i64* %digits, align 8, !dbg !12052, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tbase, i32 0, i32 3, !dbg !12052
  store i64 0, i64* %len, align 8, !dbg !12052, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tbase, i32 0, i32 4, !dbg !12052
  store i64 64, i64* %alloc, align 8, !dbg !12052, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tbase, i32 0, i32 5, !dbg !12052
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %tbase_data, i32 0, i32 0, !dbg !12053
  store i64* %arraydecay, i64** %data, align 8, !dbg !12052, !tbaa !2546
  %3 = bitcast [64 x i64]* %texp_data to i8*, !dbg !12054
  call void @llvm.lifetime.start(i64 512, i8* %3) #4, !dbg !12054
  call void @llvm.dbg.declare(metadata [64 x i64]* %texp_data, metadata !2145, metadata !2395), !dbg !12055
  %4 = bitcast %struct.mpd_t* %texp to i8*, !dbg !12056
  call void @llvm.lifetime.start(i64 48, i8* %4) #4, !dbg !12056
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %texp, metadata !2146, metadata !2395), !dbg !12057
  %flags2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 0, !dbg !12058
  store i8 48, i8* %flags2, align 1, !dbg !12058, !tbaa !2620
  %exp3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 1, !dbg !12058
  store i64 0, i64* %exp3, align 8, !dbg !12058, !tbaa !2510
  %digits4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 2, !dbg !12058
  store i64 0, i64* %digits4, align 8, !dbg !12058, !tbaa !2514
  %len5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 3, !dbg !12058
  store i64 0, i64* %len5, align 8, !dbg !12058, !tbaa !2542
  %alloc6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 4, !dbg !12058
  store i64 64, i64* %alloc6, align 8, !dbg !12058, !tbaa !2835
  %data7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 5, !dbg !12058
  %arraydecay8 = getelementptr inbounds [64 x i64], [64 x i64]* %texp_data, i32 0, i32 0, !dbg !12059
  store i64* %arraydecay8, i64** %data7, align 8, !dbg !12058, !tbaa !2546
  %5 = bitcast i64* %n to i8*, !dbg !12060
  call void @llvm.lifetime.start(i64 8, i8* %5) #4, !dbg !12060
  call void @llvm.dbg.declare(metadata i64* %n, metadata !2147, metadata !2395), !dbg !12061
  %6 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12062, !tbaa !2505
  call void @mpd_workcontext(%struct.mpd_context_t* %workctx, %struct.mpd_context_t* %6), !dbg !12063
  %7 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !12064, !tbaa !2505
  %digits9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %7, i32 0, i32 2, !dbg !12065
  %8 = load i64, i64* %digits9, align 8, !dbg !12065, !tbaa !2514
  %9 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !12066, !tbaa !2505
  %exp10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 1, !dbg !12067
  %10 = load i64, i64* %exp10, align 8, !dbg !12067, !tbaa !2510
  %add = add i64 %8, %10, !dbg !12068
  %add11 = add i64 %add, 2, !dbg !12069
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !12070
  %11 = load i64, i64* %prec, align 8, !dbg !12071, !tbaa !2526
  %add12 = add i64 %11, %add11, !dbg !12071
  store i64 %add12, i64* %prec, align 8, !dbg !12071, !tbaa !2526
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 6, !dbg !12072
  store i32 6, i32* %round, align 4, !dbg !12073, !tbaa !4148
  %clamp = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 7, !dbg !12074
  store i32 0, i32* %clamp, align 4, !dbg !12075, !tbaa !3962
  %12 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !12076, !tbaa !2505
  %call = call i32 @mpd_isnegative(%struct.mpd_t* %12), !dbg !12078
  %tobool = icmp ne i32 %call, 0, !dbg !12078
  br i1 %tobool, label %if.then, label %if.else, !dbg !12079

if.then:                                          ; preds = %entry
  %prec13 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !12080
  %13 = load i64, i64* %prec13, align 8, !dbg !12082, !tbaa !2526
  %add14 = add i64 %13, 1, !dbg !12082
  store i64 %add14, i64* %prec13, align 8, !dbg !12082, !tbaa !2526
  %14 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12083, !tbaa !2505
  %15 = load i32*, i32** %status.addr, align 8, !dbg !12084, !tbaa !2505
  call void @mpd_qdiv(%struct.mpd_t* %tbase, %struct.mpd_t* @one, %struct.mpd_t* %14, %struct.mpd_context_t* %workctx, i32* %15), !dbg !12085
  %16 = load i32*, i32** %status.addr, align 8, !dbg !12086, !tbaa !2505
  %17 = load i32, i32* %16, align 4, !dbg !12088, !tbaa !2554
  %and = and i32 %17, 958, !dbg !12089
  %tobool15 = icmp ne i32 %and, 0, !dbg !12089
  br i1 %tobool15, label %if.then.16, label %if.end, !dbg !12090

if.then.16:                                       ; preds = %if.then
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12091, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %18, i8 zeroext 0, i8 zeroext 4), !dbg !12093
  br label %finish, !dbg !12094

if.end:                                           ; preds = %if.then
  br label %if.end.21, !dbg !12095

if.else:                                          ; preds = %entry
  %19 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12096, !tbaa !2505
  %20 = load i32*, i32** %status.addr, align 8, !dbg !12099, !tbaa !2505
  %call17 = call i32 @mpd_qcopy(%struct.mpd_t* %tbase, %struct.mpd_t* %19, i32* %20), !dbg !12100
  %tobool18 = icmp ne i32 %call17, 0, !dbg !12100
  br i1 %tobool18, label %if.end.20, label %if.then.19, !dbg !12101

if.then.19:                                       ; preds = %if.else
  %21 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12102, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %21, i8 zeroext 0, i8 zeroext 4), !dbg !12104
  br label %finish, !dbg !12105

if.end.20:                                        ; preds = %if.else
  br label %if.end.21

if.end.21:                                        ; preds = %if.end.20, %if.end
  %22 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !12106, !tbaa !2505
  %status22 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !12107
  %call23 = call i64 @mpd_qabs_uint(%struct.mpd_t* %22, i32* %status22), !dbg !12108
  store i64 %call23, i64* %n, align 8, !dbg !12109, !tbaa !2391
  %status24 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !12110
  %23 = load i32, i32* %status24, align 4, !dbg !12110, !tbaa !9309
  %and25 = and i32 %23, 256, !dbg !12112
  %tobool26 = icmp ne i32 %and25, 0, !dbg !12112
  br i1 %tobool26, label %if.then.27, label %if.else.32, !dbg !12113

if.then.27:                                       ; preds = %if.end.21
  %24 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !12114, !tbaa !2505
  %25 = load i32*, i32** %status.addr, align 8, !dbg !12117, !tbaa !2505
  %call28 = call i32 @mpd_qcopy(%struct.mpd_t* %texp, %struct.mpd_t* %24, i32* %25), !dbg !12118
  %tobool29 = icmp ne i32 %call28, 0, !dbg !12118
  br i1 %tobool29, label %if.end.31, label %if.then.30, !dbg !12119

if.then.30:                                       ; preds = %if.then.27
  %26 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12120, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %26, i8 zeroext 0, i8 zeroext 4), !dbg !12122
  br label %finish, !dbg !12123

if.end.31:                                        ; preds = %if.then.27
  %27 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12124, !tbaa !2505
  %28 = load i8, i8* %resultsign.addr, align 1, !dbg !12125, !tbaa !2930
  %29 = load i32*, i32** %status.addr, align 8, !dbg !12126, !tbaa !2505
  call void @_mpd_qpow_mpd(%struct.mpd_t* %27, %struct.mpd_t* %tbase, %struct.mpd_t* %texp, i8 zeroext %28, %struct.mpd_context_t* %workctx, i32* %29), !dbg !12127
  br label %if.end.33, !dbg !12128

if.else.32:                                       ; preds = %if.end.21
  %30 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12129, !tbaa !2505
  %31 = load i64, i64* %n, align 8, !dbg !12131, !tbaa !2391
  %32 = load i8, i8* %resultsign.addr, align 1, !dbg !12132, !tbaa !2930
  %33 = load i32*, i32** %status.addr, align 8, !dbg !12133, !tbaa !2505
  call void @_mpd_qpow_uint(%struct.mpd_t* %30, %struct.mpd_t* %tbase, i64 %31, i8 zeroext %32, %struct.mpd_context_t* %workctx, i32* %33), !dbg !12134
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.32, %if.end.31
  %34 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12135, !tbaa !2505
  %call34 = call i32 @mpd_isinfinite(%struct.mpd_t* %34), !dbg !12137
  %tobool35 = icmp ne i32 %call34, 0, !dbg !12137
  br i1 %tobool35, label %if.then.36, label %if.end.37, !dbg !12138

if.then.36:                                       ; preds = %if.end.33
  %35 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12139, !tbaa !2505
  %36 = load i8, i8* %resultsign.addr, align 1, !dbg !12141, !tbaa !2930
  call void @_settriple(%struct.mpd_t* %35, i8 zeroext %36, i64 1, i64 2000000000000000001), !dbg !12142
  br label %if.end.37, !dbg !12143

if.end.37:                                        ; preds = %if.then.36, %if.end.33
  br label %finish, !dbg !12144

finish:                                           ; preds = %if.end.37, %if.then.30, %if.then.19, %if.then.16
  call void @mpd_del(%struct.mpd_t* %tbase), !dbg !12146
  call void @mpd_del(%struct.mpd_t* %texp), !dbg !12147
  %37 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12148, !tbaa !2505
  %38 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12149, !tbaa !2505
  %39 = load i32*, i32** %status.addr, align 8, !dbg !12150, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %37, %struct.mpd_context_t* %38, i32* %39), !dbg !12151
  %40 = bitcast i64* %n to i8*, !dbg !12152
  call void @llvm.lifetime.end(i64 8, i8* %40) #4, !dbg !12152
  %41 = bitcast %struct.mpd_t* %texp to i8*, !dbg !12152
  call void @llvm.lifetime.end(i64 48, i8* %41) #4, !dbg !12152
  %42 = bitcast [64 x i64]* %texp_data to i8*, !dbg !12152
  call void @llvm.lifetime.end(i64 512, i8* %42) #4, !dbg !12152
  %43 = bitcast %struct.mpd_t* %tbase to i8*, !dbg !12152
  call void @llvm.lifetime.end(i64 48, i8* %43) #4, !dbg !12152
  %44 = bitcast [64 x i64]* %tbase_data to i8*, !dbg !12152
  call void @llvm.lifetime.end(i64 512, i8* %44) #4, !dbg !12152
  %45 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !12152
  call void @llvm.lifetime.end(i64 48, i8* %45) #4, !dbg !12152
  ret void, !dbg !12152
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qpow_real(%struct.mpd_t* %result, %struct.mpd_t* %base, %struct.mpd_t* %exp, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %base.addr = alloca %struct.mpd_t*, align 8
  %exp.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workctx = alloca %struct.mpd_context_t, align 8
  %texp_data = alloca [64 x i64], align 16
  %texp = alloca %struct.mpd_t, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !2164, metadata !2395), !dbg !12153
  store %struct.mpd_t* %base, %struct.mpd_t** %base.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %base.addr, metadata !2165, metadata !2395), !dbg !12154
  store %struct.mpd_t* %exp, %struct.mpd_t** %exp.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %exp.addr, metadata !2166, metadata !2395), !dbg !12155
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !2167, metadata !2395), !dbg !12156
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2168, metadata !2395), !dbg !12157
  %0 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !12158
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !12158
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %workctx, metadata !2169, metadata !2395), !dbg !12159
  %1 = bitcast [64 x i64]* %texp_data to i8*, !dbg !12160
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !12160
  call void @llvm.dbg.declare(metadata [64 x i64]* %texp_data, metadata !2170, metadata !2395), !dbg !12161
  %2 = bitcast %struct.mpd_t* %texp to i8*, !dbg !12162
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !12162
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %texp, metadata !2171, metadata !2395), !dbg !12163
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 0, !dbg !12164
  store i8 48, i8* %flags, align 1, !dbg !12164, !tbaa !2620
  %exp1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 1, !dbg !12164
  store i64 0, i64* %exp1, align 8, !dbg !12164, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 2, !dbg !12164
  store i64 0, i64* %digits, align 8, !dbg !12164, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 3, !dbg !12164
  store i64 0, i64* %len, align 8, !dbg !12164, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 4, !dbg !12164
  store i64 64, i64* %alloc, align 8, !dbg !12164, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 5, !dbg !12164
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %texp_data, i32 0, i32 0, !dbg !12165
  store i64* %arraydecay, i64** %data, align 8, !dbg !12164, !tbaa !2546
  %3 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !12166, !tbaa !2505
  %4 = load i32*, i32** %status.addr, align 8, !dbg !12168, !tbaa !2505
  %call = call i32 @mpd_qcopy(%struct.mpd_t* %texp, %struct.mpd_t* %3, i32* %4), !dbg !12169
  %tobool = icmp ne i32 %call, 0, !dbg !12169
  br i1 %tobool, label %if.end, label %if.then, !dbg !12170

if.then:                                          ; preds = %entry
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12171, !tbaa !2505
  %6 = load i32*, i32** %status.addr, align 8, !dbg !12173, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %5, i32 512, i32* %6), !dbg !12174
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12175

if.end:                                           ; preds = %entry
  call void @mpd_maxcontext(%struct.mpd_context_t* %workctx), !dbg !12176
  %7 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12177, !tbaa !2505
  %digits2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %7, i32 0, i32 2, !dbg !12178
  %8 = load i64, i64* %digits2, align 8, !dbg !12178, !tbaa !2514
  %9 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12179, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %9, i32 0, i32 0, !dbg !12180
  %10 = load i64, i64* %prec, align 8, !dbg !12180, !tbaa !2526
  %cmp = icmp sgt i64 %8, %10, !dbg !12181
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12182

cond.true:                                        ; preds = %if.end
  %11 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12183, !tbaa !2505
  %digits3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 2, !dbg !12185
  %12 = load i64, i64* %digits3, align 8, !dbg !12185, !tbaa !2514
  br label %cond.end, !dbg !12182

cond.false:                                       ; preds = %if.end
  %13 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12186, !tbaa !2505
  %prec4 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %13, i32 0, i32 0, !dbg !12188
  %14 = load i64, i64* %prec4, align 8, !dbg !12188, !tbaa !2526
  br label %cond.end, !dbg !12182

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %12, %cond.true ], [ %14, %cond.false ], !dbg !12182
  %prec5 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !12189
  store i64 %cond, i64* %prec5, align 8, !dbg !12192, !tbaa !2526
  %prec6 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !12193
  %15 = load i64, i64* %prec6, align 8, !dbg !12194, !tbaa !2526
  %add = add i64 %15, 23, !dbg !12194
  store i64 %add, i64* %prec6, align 8, !dbg !12194, !tbaa !2526
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 6, !dbg !12195
  store i32 6, i32* %round, align 4, !dbg !12196, !tbaa !4148
  %16 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12197, !tbaa !2505
  %allcr = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %16, i32 0, i32 8, !dbg !12198
  %17 = load i32, i32* %allcr, align 4, !dbg !12198, !tbaa !8996
  %allcr7 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 8, !dbg !12199
  store i32 %17, i32* %allcr7, align 4, !dbg !12200, !tbaa !8996
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12201, !tbaa !2505
  %19 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12202, !tbaa !2505
  %status8 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !12203
  call void @mpd_qln(%struct.mpd_t* %18, %struct.mpd_t* %19, %struct.mpd_context_t* %workctx, i32* %status8), !dbg !12204
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12205, !tbaa !2505
  %21 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12206, !tbaa !2505
  %status9 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !12207
  call void @mpd_qmul(%struct.mpd_t* %20, %struct.mpd_t* %21, %struct.mpd_t* %texp, %struct.mpd_context_t* %workctx, i32* %status9), !dbg !12208
  %22 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12209, !tbaa !2505
  %23 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12210, !tbaa !2505
  %24 = load i32*, i32** %status.addr, align 8, !dbg !12211, !tbaa !2505
  call void @mpd_qexp(%struct.mpd_t* %22, %struct.mpd_t* %23, %struct.mpd_context_t* %workctx, i32* %24), !dbg !12212
  call void @mpd_del(%struct.mpd_t* %texp), !dbg !12213
  %status10 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !12214
  %25 = load i32, i32* %status10, align 4, !dbg !12214, !tbaa !9309
  %and = and i32 %25, 958, !dbg !12215
  %26 = load i32*, i32** %status.addr, align 8, !dbg !12216, !tbaa !2505
  %27 = load i32, i32* %26, align 4, !dbg !12217, !tbaa !2554
  %or = or i32 %27, %and, !dbg !12217
  store i32 %or, i32* %26, align 4, !dbg !12217, !tbaa !2554
  %28 = load i32*, i32** %status.addr, align 8, !dbg !12218, !tbaa !2505
  %29 = load i32, i32* %28, align 4, !dbg !12219, !tbaa !2554
  %or11 = or i32 %29, 4160, !dbg !12219
  store i32 %or11, i32* %28, align 4, !dbg !12219, !tbaa !2554
  store i32 0, i32* %cleanup.dest.slot, !dbg !12220
  br label %cleanup, !dbg !12220

cleanup:                                          ; preds = %cond.end, %if.then
  %30 = bitcast %struct.mpd_t* %texp to i8*, !dbg !12221
  call void @llvm.lifetime.end(i64 48, i8* %30) #4, !dbg !12221
  %31 = bitcast [64 x i64]* %texp_data to i8*, !dbg !12221
  call void @llvm.lifetime.end(i64 512, i8* %31) #4, !dbg !12221
  %32 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !12221
  call void @llvm.lifetime.end(i64 48, i8* %32) #4, !dbg !12221
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !12220

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qpowmod(%struct.mpd_t* %result, %struct.mpd_t* %base, %struct.mpd_t* %exp, %struct.mpd_t* %mod, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %base.addr = alloca %struct.mpd_t*, align 8
  %exp.addr = alloca %struct.mpd_t*, align 8
  %mod.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %maxcontext = alloca %struct.mpd_context_t, align 8
  %tbase_data = alloca [64 x i64], align 16
  %tbase = alloca %struct.mpd_t, align 8
  %texp_data = alloca [64 x i64], align 16
  %texp = alloca %struct.mpd_t, align 8
  %tmod_data = alloca [64 x i64], align 16
  %tmod = alloca %struct.mpd_t, align 8
  %tmp_data = alloca [64 x i64], align 16
  %tmp = alloca %struct.mpd_t, align 8
  %two_data = alloca [1 x i64], align 8
  %two = alloca %struct.mpd_t, align 8
  %tbase_exp = alloca i64, align 8
  %texp_exp = alloca i64, align 8
  %i = alloca i64, align 8
  %t = alloca %struct.mpd_t, align 8
  %r = alloca i64, align 8
  %sign = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1211, metadata !2395), !dbg !12222
  store %struct.mpd_t* %base, %struct.mpd_t** %base.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %base.addr, metadata !1212, metadata !2395), !dbg !12223
  store %struct.mpd_t* %exp, %struct.mpd_t** %exp.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %exp.addr, metadata !1213, metadata !2395), !dbg !12224
  store %struct.mpd_t* %mod, %struct.mpd_t** %mod.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %mod.addr, metadata !1214, metadata !2395), !dbg !12225
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1215, metadata !2395), !dbg !12226
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1216, metadata !2395), !dbg !12227
  %0 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !12228
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !12228
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxcontext, metadata !1217, metadata !2395), !dbg !12229
  %1 = bitcast [64 x i64]* %tbase_data to i8*, !dbg !12230
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !12230
  call void @llvm.dbg.declare(metadata [64 x i64]* %tbase_data, metadata !1218, metadata !2395), !dbg !12231
  %2 = bitcast %struct.mpd_t* %tbase to i8*, !dbg !12232
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !12232
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %tbase, metadata !1219, metadata !2395), !dbg !12233
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tbase, i32 0, i32 0, !dbg !12234
  store i8 48, i8* %flags, align 1, !dbg !12234, !tbaa !2620
  %exp1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tbase, i32 0, i32 1, !dbg !12234
  store i64 0, i64* %exp1, align 8, !dbg !12234, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tbase, i32 0, i32 2, !dbg !12234
  store i64 0, i64* %digits, align 8, !dbg !12234, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tbase, i32 0, i32 3, !dbg !12234
  store i64 0, i64* %len, align 8, !dbg !12234, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tbase, i32 0, i32 4, !dbg !12234
  store i64 64, i64* %alloc, align 8, !dbg !12234, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tbase, i32 0, i32 5, !dbg !12234
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %tbase_data, i32 0, i32 0, !dbg !12235
  store i64* %arraydecay, i64** %data, align 8, !dbg !12234, !tbaa !2546
  %3 = bitcast [64 x i64]* %texp_data to i8*, !dbg !12236
  call void @llvm.lifetime.start(i64 512, i8* %3) #4, !dbg !12236
  call void @llvm.dbg.declare(metadata [64 x i64]* %texp_data, metadata !1220, metadata !2395), !dbg !12237
  %4 = bitcast %struct.mpd_t* %texp to i8*, !dbg !12238
  call void @llvm.lifetime.start(i64 48, i8* %4) #4, !dbg !12238
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %texp, metadata !1221, metadata !2395), !dbg !12239
  %flags2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 0, !dbg !12240
  store i8 48, i8* %flags2, align 1, !dbg !12240, !tbaa !2620
  %exp3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 1, !dbg !12240
  store i64 0, i64* %exp3, align 8, !dbg !12240, !tbaa !2510
  %digits4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 2, !dbg !12240
  store i64 0, i64* %digits4, align 8, !dbg !12240, !tbaa !2514
  %len5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 3, !dbg !12240
  store i64 0, i64* %len5, align 8, !dbg !12240, !tbaa !2542
  %alloc6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 4, !dbg !12240
  store i64 64, i64* %alloc6, align 8, !dbg !12240, !tbaa !2835
  %data7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 5, !dbg !12240
  %arraydecay8 = getelementptr inbounds [64 x i64], [64 x i64]* %texp_data, i32 0, i32 0, !dbg !12241
  store i64* %arraydecay8, i64** %data7, align 8, !dbg !12240, !tbaa !2546
  %5 = bitcast [64 x i64]* %tmod_data to i8*, !dbg !12242
  call void @llvm.lifetime.start(i64 512, i8* %5) #4, !dbg !12242
  call void @llvm.dbg.declare(metadata [64 x i64]* %tmod_data, metadata !1222, metadata !2395), !dbg !12243
  %6 = bitcast %struct.mpd_t* %tmod to i8*, !dbg !12244
  call void @llvm.lifetime.start(i64 48, i8* %6) #4, !dbg !12244
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %tmod, metadata !1223, metadata !2395), !dbg !12245
  %flags9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmod, i32 0, i32 0, !dbg !12246
  store i8 48, i8* %flags9, align 1, !dbg !12246, !tbaa !2620
  %exp10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmod, i32 0, i32 1, !dbg !12246
  store i64 0, i64* %exp10, align 8, !dbg !12246, !tbaa !2510
  %digits11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmod, i32 0, i32 2, !dbg !12246
  store i64 0, i64* %digits11, align 8, !dbg !12246, !tbaa !2514
  %len12 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmod, i32 0, i32 3, !dbg !12246
  store i64 0, i64* %len12, align 8, !dbg !12246, !tbaa !2542
  %alloc13 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmod, i32 0, i32 4, !dbg !12246
  store i64 64, i64* %alloc13, align 8, !dbg !12246, !tbaa !2835
  %data14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmod, i32 0, i32 5, !dbg !12246
  %arraydecay15 = getelementptr inbounds [64 x i64], [64 x i64]* %tmod_data, i32 0, i32 0, !dbg !12247
  store i64* %arraydecay15, i64** %data14, align 8, !dbg !12246, !tbaa !2546
  %7 = bitcast [64 x i64]* %tmp_data to i8*, !dbg !12248
  call void @llvm.lifetime.start(i64 512, i8* %7) #4, !dbg !12248
  call void @llvm.dbg.declare(metadata [64 x i64]* %tmp_data, metadata !1224, metadata !2395), !dbg !12249
  %8 = bitcast %struct.mpd_t* %tmp to i8*, !dbg !12250
  call void @llvm.lifetime.start(i64 48, i8* %8) #4, !dbg !12250
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %tmp, metadata !1225, metadata !2395), !dbg !12251
  %flags16 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 0, !dbg !12252
  store i8 48, i8* %flags16, align 1, !dbg !12252, !tbaa !2620
  %exp17 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 1, !dbg !12252
  store i64 0, i64* %exp17, align 8, !dbg !12252, !tbaa !2510
  %digits18 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 2, !dbg !12252
  store i64 0, i64* %digits18, align 8, !dbg !12252, !tbaa !2514
  %len19 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 3, !dbg !12252
  store i64 0, i64* %len19, align 8, !dbg !12252, !tbaa !2542
  %alloc20 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 4, !dbg !12252
  store i64 64, i64* %alloc20, align 8, !dbg !12252, !tbaa !2835
  %data21 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tmp, i32 0, i32 5, !dbg !12252
  %arraydecay22 = getelementptr inbounds [64 x i64], [64 x i64]* %tmp_data, i32 0, i32 0, !dbg !12253
  store i64* %arraydecay22, i64** %data21, align 8, !dbg !12252, !tbaa !2546
  %9 = bitcast [1 x i64]* %two_data to i8*, !dbg !12254
  call void @llvm.lifetime.start(i64 8, i8* %9) #4, !dbg !12254
  call void @llvm.dbg.declare(metadata [1 x i64]* %two_data, metadata !1226, metadata !2395), !dbg !12255
  %10 = bitcast [1 x i64]* %two_data to i8*, !dbg !12255
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* bitcast ([1 x i64]* @mpd_qpowmod.two_data to i8*), i64 8, i32 8, i1 false), !dbg !12255
  %11 = bitcast %struct.mpd_t* %two to i8*, !dbg !12256
  call void @llvm.lifetime.start(i64 48, i8* %11) #4, !dbg !12256
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %two, metadata !1227, metadata !2395), !dbg !12257
  %flags25 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 0, !dbg !12258
  store i8 -112, i8* %flags25, align 1, !dbg !12258, !tbaa !2620
  %exp26 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 1, !dbg !12258
  store i64 0, i64* %exp26, align 8, !dbg !12258, !tbaa !2510
  %digits27 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 2, !dbg !12258
  store i64 1, i64* %digits27, align 8, !dbg !12258, !tbaa !2514
  %len28 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 3, !dbg !12258
  store i64 1, i64* %len28, align 8, !dbg !12258, !tbaa !2542
  %alloc29 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 4, !dbg !12258
  store i64 1, i64* %alloc29, align 8, !dbg !12258, !tbaa !2835
  %data30 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 5, !dbg !12258
  %arraydecay31 = getelementptr inbounds [1 x i64], [1 x i64]* %two_data, i32 0, i32 0, !dbg !12259
  store i64* %arraydecay31, i64** %data30, align 8, !dbg !12258, !tbaa !2546
  %12 = bitcast i64* %tbase_exp to i8*, !dbg !12260
  call void @llvm.lifetime.start(i64 8, i8* %12) #4, !dbg !12260
  call void @llvm.dbg.declare(metadata i64* %tbase_exp, metadata !1228, metadata !2395), !dbg !12261
  %13 = bitcast i64* %texp_exp to i8*, !dbg !12260
  call void @llvm.lifetime.start(i64 8, i8* %13) #4, !dbg !12260
  call void @llvm.dbg.declare(metadata i64* %texp_exp, metadata !1229, metadata !2395), !dbg !12262
  %14 = bitcast i64* %i to i8*, !dbg !12263
  call void @llvm.lifetime.start(i64 8, i8* %14) #4, !dbg !12263
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1230, metadata !2395), !dbg !12264
  %15 = bitcast %struct.mpd_t* %t to i8*, !dbg !12265
  call void @llvm.lifetime.start(i64 48, i8* %15) #4, !dbg !12265
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %t, metadata !1231, metadata !2395), !dbg !12266
  %16 = bitcast i64* %r to i8*, !dbg !12267
  call void @llvm.lifetime.start(i64 8, i8* %16) #4, !dbg !12267
  call void @llvm.dbg.declare(metadata i64* %r, metadata !1232, metadata !2395), !dbg !12268
  call void @llvm.lifetime.start(i64 1, i8* %sign) #4, !dbg !12269
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !1233, metadata !2395), !dbg !12270
  %17 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12271, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %17), !dbg !12273
  %tobool = icmp ne i32 %call, 0, !dbg !12273
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !12274

lor.lhs.false:                                    ; preds = %entry
  %18 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !12275, !tbaa !2505
  %call38 = call i32 @mpd_isspecial(%struct.mpd_t* %18), !dbg !12277
  %tobool39 = icmp ne i32 %call38, 0, !dbg !12277
  br i1 %tobool39, label %if.then, label %lor.lhs.false.40, !dbg !12278

lor.lhs.false.40:                                 ; preds = %lor.lhs.false
  %19 = load %struct.mpd_t*, %struct.mpd_t** %mod.addr, align 8, !dbg !12279, !tbaa !2505
  %call41 = call i32 @mpd_isspecial(%struct.mpd_t* %19), !dbg !12281
  %tobool42 = icmp ne i32 %call41, 0, !dbg !12281
  br i1 %tobool42, label %if.then, label %if.end.46, !dbg !12282

if.then:                                          ; preds = %lor.lhs.false.40, %lor.lhs.false, %entry
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12283, !tbaa !2505
  %21 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12286, !tbaa !2505
  %22 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !12287, !tbaa !2505
  %23 = load %struct.mpd_t*, %struct.mpd_t** %mod.addr, align 8, !dbg !12288, !tbaa !2505
  %24 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12289, !tbaa !2505
  %25 = load i32*, i32** %status.addr, align 8, !dbg !12290, !tbaa !2505
  %call43 = call i32 @mpd_qcheck_3nans(%struct.mpd_t* %20, %struct.mpd_t* %21, %struct.mpd_t* %22, %struct.mpd_t* %23, %struct.mpd_context_t* %24, i32* %25), !dbg !12291
  %tobool44 = icmp ne i32 %call43, 0, !dbg !12291
  br i1 %tobool44, label %if.then.45, label %if.end, !dbg !12292

if.then.45:                                       ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12293

if.end:                                           ; preds = %if.then
  %26 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12295, !tbaa !2505
  %27 = load i32*, i32** %status.addr, align 8, !dbg !12296, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %26, i32 256, i32* %27), !dbg !12297
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12298

if.end.46:                                        ; preds = %lor.lhs.false.40
  %28 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12299, !tbaa !2505
  %call47 = call i32 @_mpd_isint(%struct.mpd_t* %28), !dbg !12301
  %tobool48 = icmp ne i32 %call47, 0, !dbg !12301
  br i1 %tobool48, label %lor.lhs.false.49, label %if.then.55, !dbg !12302

lor.lhs.false.49:                                 ; preds = %if.end.46
  %29 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !12303, !tbaa !2505
  %call50 = call i32 @_mpd_isint(%struct.mpd_t* %29), !dbg !12305
  %tobool51 = icmp ne i32 %call50, 0, !dbg !12305
  br i1 %tobool51, label %lor.lhs.false.52, label %if.then.55, !dbg !12306

lor.lhs.false.52:                                 ; preds = %lor.lhs.false.49
  %30 = load %struct.mpd_t*, %struct.mpd_t** %mod.addr, align 8, !dbg !12307, !tbaa !2505
  %call53 = call i32 @_mpd_isint(%struct.mpd_t* %30), !dbg !12309
  %tobool54 = icmp ne i32 %call53, 0, !dbg !12309
  br i1 %tobool54, label %if.end.56, label %if.then.55, !dbg !12310

if.then.55:                                       ; preds = %lor.lhs.false.52, %lor.lhs.false.49, %if.end.46
  %31 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12311, !tbaa !2505
  %32 = load i32*, i32** %status.addr, align 8, !dbg !12313, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %31, i32 256, i32* %32), !dbg !12314
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12315

if.end.56:                                        ; preds = %lor.lhs.false.52
  %33 = load %struct.mpd_t*, %struct.mpd_t** %mod.addr, align 8, !dbg !12316, !tbaa !2505
  %call57 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %33), !dbg !12318
  %tobool58 = icmp ne i32 %call57, 0, !dbg !12318
  br i1 %tobool58, label %if.then.59, label %if.end.60, !dbg !12319

if.then.59:                                       ; preds = %if.end.56
  %34 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12320, !tbaa !2505
  %35 = load i32*, i32** %status.addr, align 8, !dbg !12322, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %34, i32 256, i32* %35), !dbg !12323
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12324

if.end.60:                                        ; preds = %if.end.56
  %36 = load %struct.mpd_t*, %struct.mpd_t** %mod.addr, align 8, !dbg !12325, !tbaa !2505
  %digits61 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %36, i32 0, i32 2, !dbg !12327
  %37 = load i64, i64* %digits61, align 8, !dbg !12327, !tbaa !2514
  %38 = load %struct.mpd_t*, %struct.mpd_t** %mod.addr, align 8, !dbg !12328, !tbaa !2505
  %exp62 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %38, i32 0, i32 1, !dbg !12329
  %39 = load i64, i64* %exp62, align 8, !dbg !12329, !tbaa !2510
  %add = add i64 %37, %39, !dbg !12330
  %40 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12331, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %40, i32 0, i32 0, !dbg !12332
  %41 = load i64, i64* %prec, align 8, !dbg !12332, !tbaa !2526
  %cmp = icmp sgt i64 %add, %41, !dbg !12333
  br i1 %cmp, label %if.then.63, label %if.end.64, !dbg !12334

if.then.63:                                       ; preds = %if.end.60
  %42 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12335, !tbaa !2505
  %43 = load i32*, i32** %status.addr, align 8, !dbg !12337, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %42, i32 256, i32* %43), !dbg !12338
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12339

if.end.64:                                        ; preds = %if.end.60
  %44 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12340, !tbaa !2505
  %call65 = call i32 @mpd_isnegative(%struct.mpd_t* %44), !dbg !12341
  %tobool66 = icmp ne i32 %call65, 0, !dbg !12341
  br i1 %tobool66, label %land.rhs, label %land.end, !dbg !12342

land.rhs:                                         ; preds = %if.end.64
  %45 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !12343, !tbaa !2505
  %call67 = call i32 @mpd_isodd(%struct.mpd_t* %45), !dbg !12345
  %tobool68 = icmp ne i32 %call67, 0, !dbg !12342
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.64
  %46 = phi i1 [ false, %if.end.64 ], [ %tobool68, %land.rhs ]
  %land.ext = zext i1 %46 to i32, !dbg !12346
  %conv = trunc i32 %land.ext to i8, !dbg !12348
  store i8 %conv, i8* %sign, align 1, !dbg !12349, !tbaa !2930
  %47 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !12350, !tbaa !2505
  %call69 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %47), !dbg !12352
  %tobool70 = icmp ne i32 %call69, 0, !dbg !12352
  br i1 %tobool70, label %if.then.71, label %if.end.80, !dbg !12353

if.then.71:                                       ; preds = %land.end
  %48 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12354, !tbaa !2505
  %call72 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %48), !dbg !12357
  %tobool73 = icmp ne i32 %call72, 0, !dbg !12357
  br i1 %tobool73, label %if.then.74, label %if.end.75, !dbg !12358

if.then.74:                                       ; preds = %if.then.71
  %49 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12359, !tbaa !2505
  %50 = load i32*, i32** %status.addr, align 8, !dbg !12361, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %49, i32 256, i32* %50), !dbg !12362
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12363

if.end.75:                                        ; preds = %if.then.71
  %51 = load %struct.mpd_t*, %struct.mpd_t** %mod.addr, align 8, !dbg !12364, !tbaa !2505
  %call76 = call i32 @_mpd_cmp_abs(%struct.mpd_t* %51, %struct.mpd_t* @one), !dbg !12365
  %cmp77 = icmp eq i32 %call76, 0, !dbg !12366
  %cond = select i1 %cmp77, i32 0, i32 1, !dbg !12367
  %conv79 = sext i32 %cond to i64, !dbg !12367
  store i64 %conv79, i64* %r, align 8, !dbg !12368, !tbaa !2391
  %52 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12369, !tbaa !2505
  %53 = load i8, i8* %sign, align 1, !dbg !12370, !tbaa !2930
  %54 = load i64, i64* %r, align 8, !dbg !12371, !tbaa !2391
  call void @_settriple(%struct.mpd_t* %52, i8 zeroext %53, i64 %54, i64 0), !dbg !12372
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12373

if.end.80:                                        ; preds = %land.end
  %55 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !12374, !tbaa !2505
  %call81 = call i32 @mpd_isnegative(%struct.mpd_t* %55), !dbg !12376
  %tobool82 = icmp ne i32 %call81, 0, !dbg !12376
  br i1 %tobool82, label %if.then.83, label %if.end.84, !dbg !12377

if.then.83:                                       ; preds = %if.end.80
  %56 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12378, !tbaa !2505
  %57 = load i32*, i32** %status.addr, align 8, !dbg !12380, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %56, i32 256, i32* %57), !dbg !12381
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12382

if.end.84:                                        ; preds = %if.end.80
  %58 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12383, !tbaa !2505
  %call85 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %58), !dbg !12385
  %tobool86 = icmp ne i32 %call85, 0, !dbg !12385
  br i1 %tobool86, label %if.then.87, label %if.end.88, !dbg !12386

if.then.87:                                       ; preds = %if.end.84
  %59 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12387, !tbaa !2505
  %60 = load i8, i8* %sign, align 1, !dbg !12389, !tbaa !2930
  call void @_settriple(%struct.mpd_t* %59, i8 zeroext %60, i64 0, i64 0), !dbg !12390
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12391

if.end.88:                                        ; preds = %if.end.84
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxcontext), !dbg !12392
  %61 = load %struct.mpd_t*, %struct.mpd_t** %mod.addr, align 8, !dbg !12393, !tbaa !2505
  %status89 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 4, !dbg !12394
  call void @mpd_qrescale(%struct.mpd_t* %tmod, %struct.mpd_t* %61, i64 0, %struct.mpd_context_t* %maxcontext, i32* %status89), !dbg !12395
  %status90 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 4, !dbg !12396
  %62 = load i32, i32* %status90, align 4, !dbg !12396, !tbaa !9309
  %and = and i32 %62, 958, !dbg !12398
  %tobool91 = icmp ne i32 %and, 0, !dbg !12398
  br i1 %tobool91, label %if.then.92, label %if.end.95, !dbg !12399

if.then.92:                                       ; preds = %if.end.88
  %63 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12400, !tbaa !2505
  %status93 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 4, !dbg !12402
  %64 = load i32, i32* %status93, align 4, !dbg !12402, !tbaa !9309
  %and94 = and i32 %64, 958, !dbg !12403
  %65 = load i32*, i32** %status.addr, align 8, !dbg !12404, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %63, i32 %and94, i32* %65), !dbg !12405
  br label %out, !dbg !12406

if.end.95:                                        ; preds = %if.end.88
  %status96 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 4, !dbg !12407
  store i32 0, i32* %status96, align 4, !dbg !12408, !tbaa !9309
  call void @mpd_set_positive(%struct.mpd_t* %tmod), !dbg !12409
  %66 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12410, !tbaa !2505
  %67 = load i32*, i32** %status.addr, align 8, !dbg !12411, !tbaa !2505
  call void @mpd_qround_to_int(%struct.mpd_t* %tbase, %struct.mpd_t* %66, %struct.mpd_context_t* %maxcontext, i32* %67), !dbg !12412
  call void @mpd_set_positive(%struct.mpd_t* %tbase), !dbg !12413
  %exp97 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tbase, i32 0, i32 1, !dbg !12414
  %68 = load i64, i64* %exp97, align 8, !dbg !12414, !tbaa !2510
  store i64 %68, i64* %tbase_exp, align 8, !dbg !12415, !tbaa !2391
  %exp98 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tbase, i32 0, i32 1, !dbg !12416
  store i64 0, i64* %exp98, align 8, !dbg !12417, !tbaa !2510
  %69 = load %struct.mpd_t*, %struct.mpd_t** %exp.addr, align 8, !dbg !12418, !tbaa !2505
  %70 = load i32*, i32** %status.addr, align 8, !dbg !12419, !tbaa !2505
  call void @mpd_qround_to_int(%struct.mpd_t* %texp, %struct.mpd_t* %69, %struct.mpd_context_t* %maxcontext, i32* %70), !dbg !12420
  %exp99 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 1, !dbg !12421
  %71 = load i64, i64* %exp99, align 8, !dbg !12421, !tbaa !2510
  store i64 %71, i64* %texp_exp, align 8, !dbg !12422, !tbaa !2391
  %exp100 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %texp, i32 0, i32 1, !dbg !12423
  store i64 0, i64* %exp100, align 8, !dbg !12424, !tbaa !2510
  %72 = load i32*, i32** %status.addr, align 8, !dbg !12425, !tbaa !2505
  call void @mpd_qrem(%struct.mpd_t* %tbase, %struct.mpd_t* %tbase, %struct.mpd_t* %tmod, %struct.mpd_context_t* %maxcontext, i32* %72), !dbg !12426
  %73 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12427, !tbaa !2505
  %74 = load i64, i64* %tbase_exp, align 8, !dbg !12428, !tbaa !2391
  %75 = load i32*, i32** %status.addr, align 8, !dbg !12429, !tbaa !2505
  %call101 = call i32 @mpd_qshiftl(%struct.mpd_t* %73, %struct.mpd_t* @one, i64 %74, i32* %75), !dbg !12430
  %76 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12431, !tbaa !2505
  %77 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12432, !tbaa !2505
  %78 = load i32*, i32** %status.addr, align 8, !dbg !12433, !tbaa !2505
  call void @mpd_qrem(%struct.mpd_t* %76, %struct.mpd_t* %77, %struct.mpd_t* %tmod, %struct.mpd_context_t* %maxcontext, i32* %78), !dbg !12434
  %79 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12435, !tbaa !2505
  %80 = load i32*, i32** %status.addr, align 8, !dbg !12436, !tbaa !2505
  call void @_mpd_qmul_exact(%struct.mpd_t* %tbase, %struct.mpd_t* %tbase, %struct.mpd_t* %79, %struct.mpd_context_t* %maxcontext, i32* %80), !dbg !12437
  %81 = load i32*, i32** %status.addr, align 8, !dbg !12438, !tbaa !2505
  call void @mpd_qrem(%struct.mpd_t* %tbase, %struct.mpd_t* %tbase, %struct.mpd_t* %tmod, %struct.mpd_context_t* %maxcontext, i32* %81), !dbg !12439
  %call102 = call i32 @mpd_isspecial(%struct.mpd_t* %tbase), !dbg !12440
  %tobool103 = icmp ne i32 %call102, 0, !dbg !12440
  br i1 %tobool103, label %if.then.110, label %lor.lhs.false.104, !dbg !12442

lor.lhs.false.104:                                ; preds = %if.end.95
  %call105 = call i32 @mpd_isspecial(%struct.mpd_t* %texp), !dbg !12443
  %tobool106 = icmp ne i32 %call105, 0, !dbg !12443
  br i1 %tobool106, label %if.then.110, label %lor.lhs.false.107, !dbg !12444

lor.lhs.false.107:                                ; preds = %lor.lhs.false.104
  %call108 = call i32 @mpd_isspecial(%struct.mpd_t* %tmod), !dbg !12445
  %tobool109 = icmp ne i32 %call108, 0, !dbg !12445
  br i1 %tobool109, label %if.then.110, label %if.end.111, !dbg !12446

if.then.110:                                      ; preds = %lor.lhs.false.107, %lor.lhs.false.104, %if.end.95
  br label %mpd_errors, !dbg !12447

if.end.111:                                       ; preds = %lor.lhs.false.107
  store i64 0, i64* %i, align 8, !dbg !12449, !tbaa !2391
  br label %for.cond, !dbg !12451

for.cond:                                         ; preds = %for.inc, %if.end.111
  %82 = load i64, i64* %i, align 8, !dbg !12452, !tbaa !2391
  %83 = load i64, i64* %texp_exp, align 8, !dbg !12456, !tbaa !2391
  %cmp112 = icmp slt i64 %82, %83, !dbg !12457
  br i1 %cmp112, label %for.body, label %for.end, !dbg !12458

for.body:                                         ; preds = %for.cond
  %84 = load i32*, i32** %status.addr, align 8, !dbg !12459, !tbaa !2505
  call void @_mpd_qpowmod_uint(%struct.mpd_t* %tmp, %struct.mpd_t* %tbase, i64 10, %struct.mpd_t* %tmod, i32* %84), !dbg !12461
  %85 = bitcast %struct.mpd_t* %t to i8*, !dbg !12462
  %86 = bitcast %struct.mpd_t* %tmp to i8*, !dbg !12462
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 48, i32 8, i1 false), !dbg !12462, !tbaa.struct !12463
  %87 = bitcast %struct.mpd_t* %tmp to i8*, !dbg !12464
  %88 = bitcast %struct.mpd_t* %tbase to i8*, !dbg !12464
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 48, i32 8, i1 false), !dbg !12464, !tbaa.struct !12463
  %89 = bitcast %struct.mpd_t* %tbase to i8*, !dbg !12465
  %90 = bitcast %struct.mpd_t* %t to i8*, !dbg !12465
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 48, i32 8, i1 false), !dbg !12465, !tbaa.struct !12463
  br label %for.inc, !dbg !12466

for.inc:                                          ; preds = %for.body
  %91 = load i64, i64* %i, align 8, !dbg !12467, !tbaa !2391
  %inc = add i64 %91, 1, !dbg !12467
  store i64 %inc, i64* %i, align 8, !dbg !12467, !tbaa !2391
  br label %for.cond, !dbg !12468

for.end:                                          ; preds = %for.cond
  %call114 = call i32 @mpd_isspecial(%struct.mpd_t* %tbase), !dbg !12469
  %tobool115 = icmp ne i32 %call114, 0, !dbg !12469
  br i1 %tobool115, label %if.then.116, label %if.end.117, !dbg !12471

if.then.116:                                      ; preds = %for.end
  br label %mpd_errors, !dbg !12472

if.end.117:                                       ; preds = %for.end
  %92 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12474, !tbaa !2505
  %93 = load i32*, i32** %status.addr, align 8, !dbg !12475, !tbaa !2505
  %call118 = call i32 @mpd_qcopy(%struct.mpd_t* %92, %struct.mpd_t* @one, i32* %93), !dbg !12476
  br label %while.cond, !dbg !12477

while.cond:                                       ; preds = %if.end.129, %if.end.117
  %call119 = call i32 @mpd_isfinite(%struct.mpd_t* %texp), !dbg !12478
  %tobool120 = icmp ne i32 %call119, 0, !dbg !12478
  br i1 %tobool120, label %land.rhs.121, label %land.end.124, !dbg !12480

land.rhs.121:                                     ; preds = %while.cond
  %call122 = call i32 @mpd_iszero(%struct.mpd_t* %texp), !dbg !12481
  %tobool123 = icmp ne i32 %call122, 0, !dbg !12482
  %lnot = xor i1 %tobool123, true, !dbg !12482
  br label %land.end.124

land.end.124:                                     ; preds = %land.rhs.121, %while.cond
  %94 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs.121 ]
  br i1 %94, label %while.body, label %while.end, !dbg !12483

while.body:                                       ; preds = %land.end.124
  %call126 = call i32 @mpd_isodd(%struct.mpd_t* %texp), !dbg !12485
  %tobool127 = icmp ne i32 %call126, 0, !dbg !12485
  br i1 %tobool127, label %if.then.128, label %if.end.129, !dbg !12488

if.then.128:                                      ; preds = %while.body
  %95 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12489, !tbaa !2505
  %96 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12491, !tbaa !2505
  %97 = load i32*, i32** %status.addr, align 8, !dbg !12492, !tbaa !2505
  call void @_mpd_qmul_exact(%struct.mpd_t* %95, %struct.mpd_t* %96, %struct.mpd_t* %tbase, %struct.mpd_context_t* %maxcontext, i32* %97), !dbg !12493
  %98 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12494, !tbaa !2505
  %99 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12495, !tbaa !2505
  %100 = load i32*, i32** %status.addr, align 8, !dbg !12496, !tbaa !2505
  call void @mpd_qrem(%struct.mpd_t* %98, %struct.mpd_t* %99, %struct.mpd_t* %tmod, %struct.mpd_context_t* %maxcontext, i32* %100), !dbg !12497
  br label %if.end.129, !dbg !12498

if.end.129:                                       ; preds = %if.then.128, %while.body
  %101 = load i32*, i32** %status.addr, align 8, !dbg !12499, !tbaa !2505
  call void @_mpd_qmul_exact(%struct.mpd_t* %tbase, %struct.mpd_t* %tbase, %struct.mpd_t* %tbase, %struct.mpd_context_t* %maxcontext, i32* %101), !dbg !12500
  %102 = load i32*, i32** %status.addr, align 8, !dbg !12501, !tbaa !2505
  call void @mpd_qrem(%struct.mpd_t* %tbase, %struct.mpd_t* %tbase, %struct.mpd_t* %tmod, %struct.mpd_context_t* %maxcontext, i32* %102), !dbg !12502
  %103 = load i32*, i32** %status.addr, align 8, !dbg !12503, !tbaa !2505
  call void @mpd_qdivint(%struct.mpd_t* %texp, %struct.mpd_t* %texp, %struct.mpd_t* %two, %struct.mpd_context_t* %maxcontext, i32* %103), !dbg !12504
  br label %while.cond, !dbg !12477

while.end:                                        ; preds = %land.end.124
  %call130 = call i32 @mpd_isspecial(%struct.mpd_t* %texp), !dbg !12505
  %tobool131 = icmp ne i32 %call130, 0, !dbg !12505
  br i1 %tobool131, label %if.then.141, label %lor.lhs.false.132, !dbg !12507

lor.lhs.false.132:                                ; preds = %while.end
  %call133 = call i32 @mpd_isspecial(%struct.mpd_t* %tbase), !dbg !12508
  %tobool134 = icmp ne i32 %call133, 0, !dbg !12508
  br i1 %tobool134, label %if.then.141, label %lor.lhs.false.135, !dbg !12510

lor.lhs.false.135:                                ; preds = %lor.lhs.false.132
  %call136 = call i32 @mpd_isspecial(%struct.mpd_t* %tmod), !dbg !12511
  %tobool137 = icmp ne i32 %call136, 0, !dbg !12511
  br i1 %tobool137, label %if.then.141, label %lor.lhs.false.138, !dbg !12512

lor.lhs.false.138:                                ; preds = %lor.lhs.false.135
  %104 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12513, !tbaa !2505
  %call139 = call i32 @mpd_isspecial(%struct.mpd_t* %104), !dbg !12514
  %tobool140 = icmp ne i32 %call139, 0, !dbg !12514
  br i1 %tobool140, label %if.then.141, label %if.else, !dbg !12515

if.then.141:                                      ; preds = %lor.lhs.false.138, %lor.lhs.false.135, %lor.lhs.false.132, %while.end
  br label %mpd_errors, !dbg !12516

if.else:                                          ; preds = %lor.lhs.false.138
  %105 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12518, !tbaa !2505
  %106 = load i8, i8* %sign, align 1, !dbg !12520, !tbaa !2930
  call void @mpd_set_sign(%struct.mpd_t* %105, i8 zeroext %106), !dbg !12521
  br label %if.end.142

if.end.142:                                       ; preds = %if.else
  br label %out, !dbg !12522

out:                                              ; preds = %mpd_errors, %if.end.142, %if.then.92
  call void @mpd_del(%struct.mpd_t* %tbase), !dbg !12523
  call void @mpd_del(%struct.mpd_t* %texp), !dbg !12524
  call void @mpd_del(%struct.mpd_t* %tmod), !dbg !12525
  call void @mpd_del(%struct.mpd_t* %tmp), !dbg !12526
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12527

mpd_errors:                                       ; preds = %if.then.141, %if.then.116, %if.then.110
  %107 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12528, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %107, i8 zeroext 0, i8 zeroext 4), !dbg !12529
  br label %out, !dbg !12530

cleanup:                                          ; preds = %out, %if.then.87, %if.then.83, %if.end.75, %if.then.74, %if.then.63, %if.then.59, %if.then.55, %if.end, %if.then.45
  call void @llvm.lifetime.end(i64 1, i8* %sign) #4, !dbg !12531
  %108 = bitcast i64* %r to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 8, i8* %108) #4, !dbg !12531
  %109 = bitcast %struct.mpd_t* %t to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 48, i8* %109) #4, !dbg !12531
  %110 = bitcast i64* %i to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 8, i8* %110) #4, !dbg !12531
  %111 = bitcast i64* %texp_exp to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 8, i8* %111) #4, !dbg !12531
  %112 = bitcast i64* %tbase_exp to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 8, i8* %112) #4, !dbg !12531
  %113 = bitcast %struct.mpd_t* %two to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 48, i8* %113) #4, !dbg !12531
  %114 = bitcast [1 x i64]* %two_data to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 8, i8* %114) #4, !dbg !12531
  %115 = bitcast %struct.mpd_t* %tmp to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 48, i8* %115) #4, !dbg !12531
  %116 = bitcast [64 x i64]* %tmp_data to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 512, i8* %116) #4, !dbg !12531
  %117 = bitcast %struct.mpd_t* %tmod to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 48, i8* %117) #4, !dbg !12531
  %118 = bitcast [64 x i64]* %tmod_data to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 512, i8* %118) #4, !dbg !12531
  %119 = bitcast %struct.mpd_t* %texp to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 48, i8* %119) #4, !dbg !12531
  %120 = bitcast [64 x i64]* %texp_data to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 512, i8* %120) #4, !dbg !12531
  %121 = bitcast %struct.mpd_t* %tbase to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 48, i8* %121) #4, !dbg !12531
  %122 = bitcast [64 x i64]* %tbase_data to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 512, i8* %122) #4, !dbg !12531
  %123 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !12531
  call void @llvm.lifetime.end(i64 48, i8* %123) #4, !dbg !12531
  ret void, !dbg !12531
}

; Function Attrs: nounwind uwtable
define internal i32 @mpd_qcheck_3nans(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_t* %c, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %c.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %choice = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !2176, metadata !2395), !dbg !12532
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !2177, metadata !2395), !dbg !12533
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !2178, metadata !2395), !dbg !12534
  store %struct.mpd_t* %c, %struct.mpd_t** %c.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %c.addr, metadata !2179, metadata !2395), !dbg !12535
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !2180, metadata !2395), !dbg !12536
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2181, metadata !2395), !dbg !12537
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12538, !tbaa !2505
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %0, i32 0, i32 0, !dbg !12539
  %1 = load i8, i8* %flags, align 1, !dbg !12539, !tbaa !2620
  %conv = zext i8 %1 to i32, !dbg !12538
  %2 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12540, !tbaa !2505
  %flags1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 0, !dbg !12541
  %3 = load i8, i8* %flags1, align 1, !dbg !12541, !tbaa !2620
  %conv2 = zext i8 %3 to i32, !dbg !12540
  %or = or i32 %conv, %conv2, !dbg !12542
  %4 = load %struct.mpd_t*, %struct.mpd_t** %c.addr, align 8, !dbg !12543, !tbaa !2505
  %flags3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %4, i32 0, i32 0, !dbg !12544
  %5 = load i8, i8* %flags3, align 1, !dbg !12544, !tbaa !2620
  %conv4 = zext i8 %5 to i32, !dbg !12543
  %or5 = or i32 %or, %conv4, !dbg !12545
  %and = and i32 %or5, 12, !dbg !12546
  %tobool = icmp ne i32 %and, 0, !dbg !12546
  br i1 %tobool, label %if.then, label %if.end.31, !dbg !12547

if.then:                                          ; preds = %entry
  %6 = bitcast %struct.mpd_t** %choice to i8*, !dbg !12548
  call void @llvm.lifetime.start(i64 8, i8* %6) #4, !dbg !12548
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %choice, metadata !2182, metadata !2395), !dbg !12549
  %7 = load %struct.mpd_t*, %struct.mpd_t** %c.addr, align 8, !dbg !12550, !tbaa !2505
  store %struct.mpd_t* %7, %struct.mpd_t** %choice, align 8, !dbg !12549, !tbaa !2505
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12551, !tbaa !2505
  %call = call i32 @mpd_issnan(%struct.mpd_t* %8), !dbg !12553
  %tobool6 = icmp ne i32 %call, 0, !dbg !12553
  br i1 %tobool6, label %if.then.7, label %if.else, !dbg !12554

if.then.7:                                        ; preds = %if.then
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12555, !tbaa !2505
  store %struct.mpd_t* %9, %struct.mpd_t** %choice, align 8, !dbg !12557, !tbaa !2505
  %10 = load i32*, i32** %status.addr, align 8, !dbg !12558, !tbaa !2505
  %11 = load i32, i32* %10, align 4, !dbg !12559, !tbaa !2554
  %or8 = or i32 %11, 256, !dbg !12559
  store i32 %or8, i32* %10, align 4, !dbg !12559, !tbaa !2554
  br label %if.end.29, !dbg !12560

if.else:                                          ; preds = %if.then
  %12 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12561, !tbaa !2505
  %call9 = call i32 @mpd_issnan(%struct.mpd_t* %12), !dbg !12563
  %tobool10 = icmp ne i32 %call9, 0, !dbg !12563
  br i1 %tobool10, label %if.then.11, label %if.else.13, !dbg !12564

if.then.11:                                       ; preds = %if.else
  %13 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12565, !tbaa !2505
  store %struct.mpd_t* %13, %struct.mpd_t** %choice, align 8, !dbg !12567, !tbaa !2505
  %14 = load i32*, i32** %status.addr, align 8, !dbg !12568, !tbaa !2505
  %15 = load i32, i32* %14, align 4, !dbg !12569, !tbaa !2554
  %or12 = or i32 %15, 256, !dbg !12569
  store i32 %or12, i32* %14, align 4, !dbg !12569, !tbaa !2554
  br label %if.end.28, !dbg !12570

if.else.13:                                       ; preds = %if.else
  %16 = load %struct.mpd_t*, %struct.mpd_t** %c.addr, align 8, !dbg !12571, !tbaa !2505
  %call14 = call i32 @mpd_issnan(%struct.mpd_t* %16), !dbg !12573
  %tobool15 = icmp ne i32 %call14, 0, !dbg !12573
  br i1 %tobool15, label %if.then.16, label %if.else.18, !dbg !12574

if.then.16:                                       ; preds = %if.else.13
  %17 = load i32*, i32** %status.addr, align 8, !dbg !12575, !tbaa !2505
  %18 = load i32, i32* %17, align 4, !dbg !12577, !tbaa !2554
  %or17 = or i32 %18, 256, !dbg !12577
  store i32 %or17, i32* %17, align 4, !dbg !12577, !tbaa !2554
  br label %if.end.27, !dbg !12578

if.else.18:                                       ; preds = %if.else.13
  %19 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12579, !tbaa !2505
  %call19 = call i32 @mpd_isqnan(%struct.mpd_t* %19), !dbg !12581
  %tobool20 = icmp ne i32 %call19, 0, !dbg !12581
  br i1 %tobool20, label %if.then.21, label %if.else.22, !dbg !12582

if.then.21:                                       ; preds = %if.else.18
  %20 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12583, !tbaa !2505
  store %struct.mpd_t* %20, %struct.mpd_t** %choice, align 8, !dbg !12585, !tbaa !2505
  br label %if.end.26, !dbg !12586

if.else.22:                                       ; preds = %if.else.18
  %21 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12587, !tbaa !2505
  %call23 = call i32 @mpd_isqnan(%struct.mpd_t* %21), !dbg !12589
  %tobool24 = icmp ne i32 %call23, 0, !dbg !12589
  br i1 %tobool24, label %if.then.25, label %if.end, !dbg !12590

if.then.25:                                       ; preds = %if.else.22
  %22 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12591, !tbaa !2505
  store %struct.mpd_t* %22, %struct.mpd_t** %choice, align 8, !dbg !12593, !tbaa !2505
  br label %if.end, !dbg !12594

if.end:                                           ; preds = %if.then.25, %if.else.22
  br label %if.end.26

if.end.26:                                        ; preds = %if.end, %if.then.21
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.then.16
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.then.11
  br label %if.end.29

if.end.29:                                        ; preds = %if.end.28, %if.then.7
  %23 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12595, !tbaa !2505
  %24 = load %struct.mpd_t*, %struct.mpd_t** %choice, align 8, !dbg !12596, !tbaa !2505
  %25 = load i32*, i32** %status.addr, align 8, !dbg !12597, !tbaa !2505
  %call30 = call i32 @mpd_qcopy(%struct.mpd_t* %23, %struct.mpd_t* %24, i32* %25), !dbg !12598
  %26 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12599, !tbaa !2505
  call void @mpd_set_qnan(%struct.mpd_t* %26), !dbg !12600
  %27 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12601, !tbaa !2505
  %28 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12602, !tbaa !2505
  call void @_mpd_fix_nan(%struct.mpd_t* %27, %struct.mpd_context_t* %28), !dbg !12603
  store i32 1, i32* %retval, !dbg !12604
  %29 = bitcast %struct.mpd_t** %choice to i8*, !dbg !12605
  call void @llvm.lifetime.end(i64 8, i8* %29) #4, !dbg !12605
  br label %return

if.end.31:                                        ; preds = %entry
  store i32 0, i32* %retval, !dbg !12606
  br label %return, !dbg !12606

return:                                           ; preds = %if.end.31, %if.end.29
  %30 = load i32, i32* %retval, !dbg !12607
  ret i32 %30, !dbg !12607
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qrescale(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %exp, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %exp.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1284, metadata !2395), !dbg !12608
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1285, metadata !2395), !dbg !12609
  store i64 %exp, i64* %exp.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %exp.addr, metadata !1286, metadata !2395), !dbg !12610
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1287, metadata !2395), !dbg !12611
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1288, metadata !2395), !dbg !12612
  %0 = load i64, i64* %exp.addr, align 8, !dbg !12613, !tbaa !2391
  %cmp = icmp sgt i64 %0, 1000000000000000000, !dbg !12615
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12616

lor.lhs.false:                                    ; preds = %entry
  %1 = load i64, i64* %exp.addr, align 8, !dbg !12617, !tbaa !2391
  %cmp1 = icmp slt i64 %1, -1999999999999999997, !dbg !12619
  br i1 %cmp1, label %if.then, label %if.end, !dbg !12620

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12621, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !12623, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %2, i32 256, i32* %3), !dbg !12624
  br label %return, !dbg !12625

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12626, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12627, !tbaa !2505
  %6 = load i64, i64* %exp.addr, align 8, !dbg !12628, !tbaa !2391
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12629, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !12630, !tbaa !2505
  call void @_mpd_qrescale(%struct.mpd_t* %4, %struct.mpd_t* %5, i64 %6, %struct.mpd_context_t* %7, i32* %8), !dbg !12631
  br label %return, !dbg !12632

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !12633
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qround_to_int(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1304, metadata !2395), !dbg !12635
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1305, metadata !2395), !dbg !12636
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1306, metadata !2395), !dbg !12637
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1307, metadata !2395), !dbg !12638
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12639, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12640, !tbaa !2505
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12641, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !12642, !tbaa !2505
  call void @_mpd_qround_to_integral(i32 1, %struct.mpd_t* %0, %struct.mpd_t* %1, %struct.mpd_context_t* %2, i32* %3), !dbg !12643
  ret void, !dbg !12644
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qrem(%struct.mpd_t* %r, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %r.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %q_data = alloca [64 x i64], align 16
  %q = alloca %struct.mpd_t, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %r, %struct.mpd_t** %r.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %r.addr, metadata !1258, metadata !2395), !dbg !12645
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1259, metadata !2395), !dbg !12646
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1260, metadata !2395), !dbg !12647
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1261, metadata !2395), !dbg !12648
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1262, metadata !2395), !dbg !12649
  %0 = bitcast [64 x i64]* %q_data to i8*, !dbg !12650
  call void @llvm.lifetime.start(i64 512, i8* %0) #4, !dbg !12650
  call void @llvm.dbg.declare(metadata [64 x i64]* %q_data, metadata !1263, metadata !2395), !dbg !12651
  %1 = bitcast %struct.mpd_t* %q to i8*, !dbg !12652
  call void @llvm.lifetime.start(i64 48, i8* %1) #4, !dbg !12652
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %q, metadata !1264, metadata !2395), !dbg !12653
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 0, !dbg !12654
  store i8 48, i8* %flags, align 1, !dbg !12654, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 1, !dbg !12654
  store i64 0, i64* %exp, align 8, !dbg !12654, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 2, !dbg !12654
  store i64 0, i64* %digits, align 8, !dbg !12654, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 3, !dbg !12654
  store i64 0, i64* %len, align 8, !dbg !12654, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 4, !dbg !12654
  store i64 64, i64* %alloc, align 8, !dbg !12654, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 5, !dbg !12654
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %q_data, i32 0, i32 0, !dbg !12655
  store i64* %arraydecay, i64** %data, align 8, !dbg !12654, !tbaa !2546
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12656, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %2), !dbg !12658
  %tobool = icmp ne i32 %call, 0, !dbg !12658
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !12659

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12660, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %3), !dbg !12662
  %tobool2 = icmp ne i32 %call1, 0, !dbg !12662
  br i1 %tobool2, label %if.then, label %if.end.15, !dbg !12663

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !12664, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12667, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12668, !tbaa !2505
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12669, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !12670, !tbaa !2505
  %call3 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %4, %struct.mpd_t* %5, %struct.mpd_t* %6, %struct.mpd_context_t* %7, i32* %8), !dbg !12671
  %tobool4 = icmp ne i32 %call3, 0, !dbg !12671
  br i1 %tobool4, label %if.then.5, label %if.end, !dbg !12672

if.then.5:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12673

if.end:                                           ; preds = %if.then
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12675, !tbaa !2505
  %call6 = call i32 @mpd_isinfinite(%struct.mpd_t* %9), !dbg !12677
  %tobool7 = icmp ne i32 %call6, 0, !dbg !12677
  br i1 %tobool7, label %if.then.8, label %if.end.9, !dbg !12678

if.then.8:                                        ; preds = %if.end
  %10 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !12679, !tbaa !2505
  %11 = load i32*, i32** %status.addr, align 8, !dbg !12681, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %10, i32 256, i32* %11), !dbg !12682
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12683

if.end.9:                                         ; preds = %if.end
  %12 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12684, !tbaa !2505
  %call10 = call i32 @mpd_isinfinite(%struct.mpd_t* %12), !dbg !12686
  %tobool11 = icmp ne i32 %call10, 0, !dbg !12686
  br i1 %tobool11, label %if.then.12, label %if.end.14, !dbg !12687

if.then.12:                                       ; preds = %if.end.9
  %13 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !12688, !tbaa !2505
  %14 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12690, !tbaa !2505
  %15 = load i32*, i32** %status.addr, align 8, !dbg !12691, !tbaa !2505
  %call13 = call i32 @mpd_qcopy(%struct.mpd_t* %13, %struct.mpd_t* %14, i32* %15), !dbg !12692
  %16 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !12693, !tbaa !2505
  %17 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12694, !tbaa !2505
  %18 = load i32*, i32** %status.addr, align 8, !dbg !12695, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %16, %struct.mpd_context_t* %17, i32* %18), !dbg !12696
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12697

if.end.14:                                        ; preds = %if.end.9
  call void @abort() #9, !dbg !12698
  unreachable, !dbg !12698

if.end.15:                                        ; preds = %lor.lhs.false
  %19 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12699, !tbaa !2505
  %call16 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %19), !dbg !12701
  %tobool17 = icmp ne i32 %call16, 0, !dbg !12701
  br i1 %tobool17, label %if.then.18, label %if.end.23, !dbg !12702

if.then.18:                                       ; preds = %if.end.15
  %20 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12703, !tbaa !2505
  %call19 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %20), !dbg !12706
  %tobool20 = icmp ne i32 %call19, 0, !dbg !12706
  br i1 %tobool20, label %if.then.21, label %if.else, !dbg !12707

if.then.21:                                       ; preds = %if.then.18
  %21 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !12708, !tbaa !2505
  %22 = load i32*, i32** %status.addr, align 8, !dbg !12710, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %21, i32 16, i32* %22), !dbg !12711
  br label %if.end.22, !dbg !12712

if.else:                                          ; preds = %if.then.18
  %23 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !12713, !tbaa !2505
  %24 = load i32*, i32** %status.addr, align 8, !dbg !12715, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %23, i32 256, i32* %24), !dbg !12716
  br label %if.end.22

if.end.22:                                        ; preds = %if.else, %if.then.21
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12717

if.end.23:                                        ; preds = %if.end.15
  %25 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !12718, !tbaa !2505
  %26 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12719, !tbaa !2505
  %27 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12720, !tbaa !2505
  %28 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12721, !tbaa !2505
  %29 = load i32*, i32** %status.addr, align 8, !dbg !12722, !tbaa !2505
  call void @_mpd_qdivmod(%struct.mpd_t* %q, %struct.mpd_t* %25, %struct.mpd_t* %26, %struct.mpd_t* %27, %struct.mpd_context_t* %28, i32* %29), !dbg !12723
  call void @mpd_del(%struct.mpd_t* %q), !dbg !12724
  %30 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !12725, !tbaa !2505
  %31 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12726, !tbaa !2505
  %32 = load i32*, i32** %status.addr, align 8, !dbg !12727, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %30, %struct.mpd_context_t* %31, i32* %32), !dbg !12728
  store i32 0, i32* %cleanup.dest.slot, !dbg !12729
  br label %cleanup, !dbg !12729

cleanup:                                          ; preds = %if.end.23, %if.end.22, %if.then.12, %if.then.8, %if.then.5
  %33 = bitcast %struct.mpd_t* %q to i8*, !dbg !12730
  call void @llvm.lifetime.end(i64 48, i8* %33) #4, !dbg !12730
  %34 = bitcast [64 x i64]* %q_data to i8*, !dbg !12730
  call void @llvm.lifetime.end(i64 512, i8* %34) #4, !dbg !12730
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !12729

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qmul_exact(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workstatus = alloca i32, align 4
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !2187, metadata !2395), !dbg !12732
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !2188, metadata !2395), !dbg !12733
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !2189, metadata !2395), !dbg !12734
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !2190, metadata !2395), !dbg !12735
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2191, metadata !2395), !dbg !12736
  %0 = bitcast i32* %workstatus to i8*, !dbg !12737
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !12737
  call void @llvm.dbg.declare(metadata i32* %workstatus, metadata !2192, metadata !2395), !dbg !12738
  store i32 0, i32* %workstatus, align 4, !dbg !12738, !tbaa !2554
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12739, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12740, !tbaa !2505
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12741, !tbaa !2505
  %4 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12742, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %1, %struct.mpd_t* %2, %struct.mpd_t* %3, %struct.mpd_context_t* %4, i32* %workstatus), !dbg !12743
  %5 = load i32, i32* %workstatus, align 4, !dbg !12744, !tbaa !2554
  %6 = load i32*, i32** %status.addr, align 8, !dbg !12745, !tbaa !2505
  %7 = load i32, i32* %6, align 4, !dbg !12746, !tbaa !2554
  %or = or i32 %7, %5, !dbg !12746
  store i32 %or, i32* %6, align 4, !dbg !12746, !tbaa !2554
  %8 = load i32, i32* %workstatus, align 4, !dbg !12747, !tbaa !2554
  %and = and i32 %8, 4161, !dbg !12749
  %tobool = icmp ne i32 %and, 0, !dbg !12749
  br i1 %tobool, label %if.then, label %if.end, !dbg !12750

if.then:                                          ; preds = %entry
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12751, !tbaa !2505
  %10 = load i32*, i32** %status.addr, align 8, !dbg !12753, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %9, i32 256, i32* %10), !dbg !12754
  br label %if.end, !dbg !12755

if.end:                                           ; preds = %if.then, %entry
  %11 = bitcast i32* %workstatus to i8*, !dbg !12756
  call void @llvm.lifetime.end(i64 4, i8* %11) #4, !dbg !12756
  ret void, !dbg !12756
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_qpowmod_uint(%struct.mpd_t* %result, %struct.mpd_t* %base, i64 %exp, %struct.mpd_t* %mod, i32* %status) #3 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %base.addr = alloca %struct.mpd_t*, align 8
  %exp.addr = alloca i64, align 8
  %mod.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  %maxcontext = alloca %struct.mpd_context_t, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !2197, metadata !2395), !dbg !12757
  store %struct.mpd_t* %base, %struct.mpd_t** %base.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %base.addr, metadata !2198, metadata !2395), !dbg !12758
  store i64 %exp, i64* %exp.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %exp.addr, metadata !2199, metadata !2395), !dbg !12759
  store %struct.mpd_t* %mod, %struct.mpd_t** %mod.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %mod.addr, metadata !2200, metadata !2395), !dbg !12760
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2201, metadata !2395), !dbg !12761
  %0 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !12762
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !12762
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxcontext, metadata !2202, metadata !2395), !dbg !12763
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxcontext), !dbg !12764
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12765, !tbaa !2505
  %2 = load i32*, i32** %status.addr, align 8, !dbg !12766, !tbaa !2505
  %call = call i32 @mpd_qcopy(%struct.mpd_t* %1, %struct.mpd_t* @one, i32* %2), !dbg !12767
  br label %while.cond, !dbg !12768

while.cond:                                       ; preds = %if.end, %entry
  %3 = load i64, i64* %exp.addr, align 8, !dbg !12769, !tbaa !2391
  %cmp = icmp ugt i64 %3, 0, !dbg !12772
  br i1 %cmp, label %while.body, label %while.end, !dbg !12768

while.body:                                       ; preds = %while.cond
  %4 = load i64, i64* %exp.addr, align 8, !dbg !12773, !tbaa !2391
  %and = and i64 %4, 1, !dbg !12776
  %tobool = icmp ne i64 %and, 0, !dbg !12776
  br i1 %tobool, label %if.then, label %if.end, !dbg !12777

if.then:                                          ; preds = %while.body
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12778, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12780, !tbaa !2505
  %7 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12781, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !12782, !tbaa !2505
  call void @_mpd_qmul_exact(%struct.mpd_t* %5, %struct.mpd_t* %6, %struct.mpd_t* %7, %struct.mpd_context_t* %maxcontext, i32* %8), !dbg !12783
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12784, !tbaa !2505
  %10 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12785, !tbaa !2505
  %11 = load %struct.mpd_t*, %struct.mpd_t** %mod.addr, align 8, !dbg !12786, !tbaa !2505
  %12 = load i32*, i32** %status.addr, align 8, !dbg !12787, !tbaa !2505
  call void @mpd_qrem(%struct.mpd_t* %9, %struct.mpd_t* %10, %struct.mpd_t* %11, %struct.mpd_context_t* %maxcontext, i32* %12), !dbg !12788
  br label %if.end, !dbg !12789

if.end:                                           ; preds = %if.then, %while.body
  %13 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12790, !tbaa !2505
  %14 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12791, !tbaa !2505
  %15 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12792, !tbaa !2505
  %16 = load i32*, i32** %status.addr, align 8, !dbg !12793, !tbaa !2505
  call void @_mpd_qmul_exact(%struct.mpd_t* %13, %struct.mpd_t* %14, %struct.mpd_t* %15, %struct.mpd_context_t* %maxcontext, i32* %16), !dbg !12794
  %17 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12795, !tbaa !2505
  %18 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !12796, !tbaa !2505
  %19 = load %struct.mpd_t*, %struct.mpd_t** %mod.addr, align 8, !dbg !12797, !tbaa !2505
  %20 = load i32*, i32** %status.addr, align 8, !dbg !12798, !tbaa !2505
  call void @mpd_qrem(%struct.mpd_t* %17, %struct.mpd_t* %18, %struct.mpd_t* %19, %struct.mpd_context_t* %maxcontext, i32* %20), !dbg !12799
  %21 = load i64, i64* %exp.addr, align 8, !dbg !12800, !tbaa !2391
  %shr = lshr i64 %21, 1, !dbg !12800
  store i64 %shr, i64* %exp.addr, align 8, !dbg !12800, !tbaa !2391
  br label %while.cond, !dbg !12768

while.end:                                        ; preds = %while.cond
  %22 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !12801
  call void @llvm.lifetime.end(i64 48, i8* %22) #4, !dbg !12801
  ret void, !dbg !12801
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qquantize(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workstatus = alloca i32, align 4
  %b_exp = alloca i64, align 8
  %expdiff = alloca i64, align 8
  %shift = alloca i64, align 8
  %rnd = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1236, metadata !2395), !dbg !12802
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1237, metadata !2395), !dbg !12803
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1238, metadata !2395), !dbg !12804
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1239, metadata !2395), !dbg !12805
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1240, metadata !2395), !dbg !12806
  %0 = bitcast i32* %workstatus to i8*, !dbg !12807
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !12807
  call void @llvm.dbg.declare(metadata i32* %workstatus, metadata !1241, metadata !2395), !dbg !12808
  store i32 0, i32* %workstatus, align 4, !dbg !12808, !tbaa !2554
  %1 = bitcast i64* %b_exp to i8*, !dbg !12809
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !12809
  call void @llvm.dbg.declare(metadata i64* %b_exp, metadata !1242, metadata !2395), !dbg !12810
  %2 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12811, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 1, !dbg !12812
  %3 = load i64, i64* %exp, align 8, !dbg !12812, !tbaa !2510
  store i64 %3, i64* %b_exp, align 8, !dbg !12810, !tbaa !2391
  %4 = bitcast i64* %expdiff to i8*, !dbg !12813
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !12813
  call void @llvm.dbg.declare(metadata i64* %expdiff, metadata !1243, metadata !2395), !dbg !12814
  %5 = bitcast i64* %shift to i8*, !dbg !12813
  call void @llvm.lifetime.start(i64 8, i8* %5) #4, !dbg !12813
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !1244, metadata !2395), !dbg !12815
  %6 = bitcast i64* %rnd to i8*, !dbg !12816
  call void @llvm.lifetime.start(i64 8, i8* %6) #4, !dbg !12816
  call void @llvm.dbg.declare(metadata i64* %rnd, metadata !1245, metadata !2395), !dbg !12817
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12818, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %7), !dbg !12820
  %tobool = icmp ne i32 %call, 0, !dbg !12820
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !12821

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12822, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %8), !dbg !12824
  %tobool2 = icmp ne i32 %call1, 0, !dbg !12824
  br i1 %tobool2, label %if.then, label %if.end.13, !dbg !12825

if.then:                                          ; preds = %lor.lhs.false, %entry
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12826, !tbaa !2505
  %10 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12829, !tbaa !2505
  %11 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12830, !tbaa !2505
  %12 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12831, !tbaa !2505
  %13 = load i32*, i32** %status.addr, align 8, !dbg !12832, !tbaa !2505
  %call3 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %9, %struct.mpd_t* %10, %struct.mpd_t* %11, %struct.mpd_context_t* %12, i32* %13), !dbg !12833
  %tobool4 = icmp ne i32 %call3, 0, !dbg !12833
  br i1 %tobool4, label %if.then.5, label %if.end, !dbg !12834

if.then.5:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12835

if.end:                                           ; preds = %if.then
  %14 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12837, !tbaa !2505
  %call6 = call i32 @mpd_isinfinite(%struct.mpd_t* %14), !dbg !12839
  %tobool7 = icmp ne i32 %call6, 0, !dbg !12839
  br i1 %tobool7, label %land.lhs.true, label %if.end.12, !dbg !12840

land.lhs.true:                                    ; preds = %if.end
  %15 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12841, !tbaa !2505
  %call8 = call i32 @mpd_isinfinite(%struct.mpd_t* %15), !dbg !12843
  %tobool9 = icmp ne i32 %call8, 0, !dbg !12843
  br i1 %tobool9, label %if.then.10, label %if.end.12, !dbg !12844

if.then.10:                                       ; preds = %land.lhs.true
  %16 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12845, !tbaa !2505
  %17 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12847, !tbaa !2505
  %18 = load i32*, i32** %status.addr, align 8, !dbg !12848, !tbaa !2505
  %call11 = call i32 @mpd_qcopy(%struct.mpd_t* %16, %struct.mpd_t* %17, i32* %18), !dbg !12849
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12850

if.end.12:                                        ; preds = %land.lhs.true, %if.end
  %19 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12851, !tbaa !2505
  %20 = load i32*, i32** %status.addr, align 8, !dbg !12852, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %19, i32 256, i32* %20), !dbg !12853
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12854

if.end.13:                                        ; preds = %lor.lhs.false
  %21 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12855, !tbaa !2505
  %exp14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %21, i32 0, i32 1, !dbg !12857
  %22 = load i64, i64* %exp14, align 8, !dbg !12857, !tbaa !2510
  %23 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12858, !tbaa !2505
  %emax = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %23, i32 0, i32 1, !dbg !12859
  %24 = load i64, i64* %emax, align 8, !dbg !12859, !tbaa !2533
  %cmp = icmp sgt i64 %22, %24, !dbg !12860
  br i1 %cmp, label %if.then.19, label %lor.lhs.false.15, !dbg !12861

lor.lhs.false.15:                                 ; preds = %if.end.13
  %25 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12862, !tbaa !2505
  %exp16 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %25, i32 0, i32 1, !dbg !12864
  %26 = load i64, i64* %exp16, align 8, !dbg !12864, !tbaa !2510
  %27 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12865, !tbaa !2505
  %call17 = call i64 @mpd_etiny(%struct.mpd_context_t* %27), !dbg !12866
  %cmp18 = icmp slt i64 %26, %call17, !dbg !12867
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !12868

if.then.19:                                       ; preds = %lor.lhs.false.15, %if.end.13
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12869, !tbaa !2505
  %29 = load i32*, i32** %status.addr, align 8, !dbg !12871, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %28, i32 256, i32* %29), !dbg !12872
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12873

if.end.20:                                        ; preds = %lor.lhs.false.15
  %30 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12874, !tbaa !2505
  %call21 = call i32 @mpd_iszero(%struct.mpd_t* %30), !dbg !12876
  %tobool22 = icmp ne i32 %call21, 0, !dbg !12876
  br i1 %tobool22, label %if.then.23, label %if.end.26, !dbg !12877

if.then.23:                                       ; preds = %if.end.20
  %31 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12878, !tbaa !2505
  %32 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12880, !tbaa !2505
  %call24 = call zeroext i8 @mpd_sign(%struct.mpd_t* %32), !dbg !12881
  %33 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12882, !tbaa !2505
  %exp25 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %33, i32 0, i32 1, !dbg !12883
  %34 = load i64, i64* %exp25, align 8, !dbg !12883, !tbaa !2510
  call void @_settriple(%struct.mpd_t* %31, i8 zeroext %call24, i64 0, i64 %34), !dbg !12884
  %35 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12885, !tbaa !2505
  %36 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12886, !tbaa !2505
  %37 = load i32*, i32** %status.addr, align 8, !dbg !12887, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %35, %struct.mpd_context_t* %36, i32* %37), !dbg !12888
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12889

if.end.26:                                        ; preds = %if.end.20
  %38 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12890, !tbaa !2505
  %exp27 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %38, i32 0, i32 1, !dbg !12891
  %39 = load i64, i64* %exp27, align 8, !dbg !12891, !tbaa !2510
  %40 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !12892, !tbaa !2505
  %exp28 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %40, i32 0, i32 1, !dbg !12893
  %41 = load i64, i64* %exp28, align 8, !dbg !12893, !tbaa !2510
  %sub = sub i64 %39, %41, !dbg !12894
  store i64 %sub, i64* %expdiff, align 8, !dbg !12895, !tbaa !2391
  %42 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12896, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %42, i32 0, i32 2, !dbg !12898
  %43 = load i64, i64* %digits, align 8, !dbg !12898, !tbaa !2514
  %44 = load i64, i64* %expdiff, align 8, !dbg !12899, !tbaa !2391
  %add = add i64 %43, %44, !dbg !12900
  %45 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12901, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %45, i32 0, i32 0, !dbg !12902
  %46 = load i64, i64* %prec, align 8, !dbg !12902, !tbaa !2526
  %cmp29 = icmp sgt i64 %add, %46, !dbg !12903
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !12904

if.then.30:                                       ; preds = %if.end.26
  %47 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12905, !tbaa !2505
  %48 = load i32*, i32** %status.addr, align 8, !dbg !12907, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %47, i32 256, i32* %48), !dbg !12908
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12909

if.end.31:                                        ; preds = %if.end.26
  %49 = load i64, i64* %expdiff, align 8, !dbg !12910, !tbaa !2391
  %cmp32 = icmp sge i64 %49, 0, !dbg !12912
  br i1 %cmp32, label %if.then.33, label %if.else, !dbg !12913

if.then.33:                                       ; preds = %if.end.31
  %50 = load i64, i64* %expdiff, align 8, !dbg !12914, !tbaa !2391
  store i64 %50, i64* %shift, align 8, !dbg !12916, !tbaa !2391
  %51 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12917, !tbaa !2505
  %52 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12919, !tbaa !2505
  %53 = load i64, i64* %shift, align 8, !dbg !12920, !tbaa !2391
  %54 = load i32*, i32** %status.addr, align 8, !dbg !12921, !tbaa !2505
  %call34 = call i32 @mpd_qshiftl(%struct.mpd_t* %51, %struct.mpd_t* %52, i64 %53, i32* %54), !dbg !12922
  %tobool35 = icmp ne i32 %call34, 0, !dbg !12922
  br i1 %tobool35, label %if.end.37, label %if.then.36, !dbg !12923

if.then.36:                                       ; preds = %if.then.33
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12924

if.end.37:                                        ; preds = %if.then.33
  %55 = load i64, i64* %b_exp, align 8, !dbg !12926, !tbaa !2391
  %56 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12927, !tbaa !2505
  %exp38 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %56, i32 0, i32 1, !dbg !12928
  store i64 %55, i64* %exp38, align 8, !dbg !12929, !tbaa !2510
  br label %if.end.53, !dbg !12930

if.else:                                          ; preds = %if.end.31
  %57 = load i64, i64* %expdiff, align 8, !dbg !12931, !tbaa !2391
  %sub39 = sub i64 0, %57, !dbg !12933
  store i64 %sub39, i64* %shift, align 8, !dbg !12934, !tbaa !2391
  %58 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12935, !tbaa !2505
  %59 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !12936, !tbaa !2505
  %60 = load i64, i64* %shift, align 8, !dbg !12937, !tbaa !2391
  %61 = load i32*, i32** %status.addr, align 8, !dbg !12938, !tbaa !2505
  %call40 = call i64 @mpd_qshiftr(%struct.mpd_t* %58, %struct.mpd_t* %59, i64 %60, i32* %61), !dbg !12939
  store i64 %call40, i64* %rnd, align 8, !dbg !12940, !tbaa !2391
  %62 = load i64, i64* %rnd, align 8, !dbg !12941, !tbaa !2391
  %cmp41 = icmp eq i64 %62, -1, !dbg !12943
  br i1 %cmp41, label %if.then.42, label %if.end.43, !dbg !12944

if.then.42:                                       ; preds = %if.else
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12945

if.end.43:                                        ; preds = %if.else
  %63 = load i64, i64* %b_exp, align 8, !dbg !12947, !tbaa !2391
  %64 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12948, !tbaa !2505
  %exp44 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %64, i32 0, i32 1, !dbg !12949
  store i64 %63, i64* %exp44, align 8, !dbg !12950, !tbaa !2510
  %65 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12951, !tbaa !2505
  %66 = load i64, i64* %rnd, align 8, !dbg !12953, !tbaa !2391
  %67 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12954, !tbaa !2505
  %68 = load i32*, i32** %status.addr, align 8, !dbg !12955, !tbaa !2505
  %call45 = call i32 @_mpd_apply_round_fit(%struct.mpd_t* %65, i64 %66, %struct.mpd_context_t* %67, i32* %68), !dbg !12956
  %tobool46 = icmp ne i32 %call45, 0, !dbg !12956
  br i1 %tobool46, label %if.end.48, label %if.then.47, !dbg !12957

if.then.47:                                       ; preds = %if.end.43
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12958

if.end.48:                                        ; preds = %if.end.43
  %69 = load i32, i32* %workstatus, align 4, !dbg !12960, !tbaa !2554
  %or = or i32 %69, 4096, !dbg !12960
  store i32 %or, i32* %workstatus, align 4, !dbg !12960, !tbaa !2554
  %70 = load i64, i64* %rnd, align 8, !dbg !12961, !tbaa !2391
  %tobool49 = icmp ne i64 %70, 0, !dbg !12961
  br i1 %tobool49, label %if.then.50, label %if.end.52, !dbg !12963

if.then.50:                                       ; preds = %if.end.48
  %71 = load i32, i32* %workstatus, align 4, !dbg !12964, !tbaa !2554
  %or51 = or i32 %71, 64, !dbg !12964
  store i32 %or51, i32* %workstatus, align 4, !dbg !12964, !tbaa !2554
  br label %if.end.52, !dbg !12966

if.end.52:                                        ; preds = %if.then.50, %if.end.48
  br label %if.end.53

if.end.53:                                        ; preds = %if.end.52, %if.end.37
  %72 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12967, !tbaa !2505
  %call54 = call i64 @mpd_adjexp(%struct.mpd_t* %72), !dbg !12969
  %73 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12970, !tbaa !2505
  %emax55 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %73, i32 0, i32 1, !dbg !12971
  %74 = load i64, i64* %emax55, align 8, !dbg !12971, !tbaa !2533
  %cmp56 = icmp sgt i64 %call54, %74, !dbg !12972
  br i1 %cmp56, label %if.then.61, label %lor.lhs.false.57, !dbg !12973

lor.lhs.false.57:                                 ; preds = %if.end.53
  %75 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12974, !tbaa !2505
  %call58 = call i64 @mpd_adjexp(%struct.mpd_t* %75), !dbg !12975
  %76 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12976, !tbaa !2505
  %call59 = call i64 @mpd_etiny(%struct.mpd_context_t* %76), !dbg !12977
  %cmp60 = icmp slt i64 %call58, %call59, !dbg !12978
  br i1 %cmp60, label %if.then.61, label %if.end.62, !dbg !12979

if.then.61:                                       ; preds = %lor.lhs.false.57, %if.end.53
  %77 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12980, !tbaa !2505
  %78 = load i32*, i32** %status.addr, align 8, !dbg !12982, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %77, i32 256, i32* %78), !dbg !12983
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12984

if.end.62:                                        ; preds = %lor.lhs.false.57
  %79 = load i32, i32* %workstatus, align 4, !dbg !12985, !tbaa !2554
  %80 = load i32*, i32** %status.addr, align 8, !dbg !12986, !tbaa !2505
  %81 = load i32, i32* %80, align 4, !dbg !12987, !tbaa !2554
  %or63 = or i32 %81, %79, !dbg !12987
  store i32 %or63, i32* %80, align 4, !dbg !12987, !tbaa !2554
  %82 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !12988, !tbaa !2505
  %83 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !12989, !tbaa !2505
  %84 = load i32*, i32** %status.addr, align 8, !dbg !12990, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %82, %struct.mpd_context_t* %83, i32* %84), !dbg !12991
  store i32 0, i32* %cleanup.dest.slot, !dbg !12992
  br label %cleanup, !dbg !12992

cleanup:                                          ; preds = %if.end.62, %if.then.61, %if.then.47, %if.then.42, %if.then.36, %if.then.30, %if.then.23, %if.then.19, %if.end.12, %if.then.10, %if.then.5
  %85 = bitcast i64* %rnd to i8*, !dbg !12993
  call void @llvm.lifetime.end(i64 8, i8* %85) #4, !dbg !12993
  %86 = bitcast i64* %shift to i8*, !dbg !12993
  call void @llvm.lifetime.end(i64 8, i8* %86) #4, !dbg !12993
  %87 = bitcast i64* %expdiff to i8*, !dbg !12993
  call void @llvm.lifetime.end(i64 8, i8* %87) #4, !dbg !12993
  %88 = bitcast i64* %b_exp to i8*, !dbg !12993
  call void @llvm.lifetime.end(i64 8, i8* %88) #4, !dbg !12993
  %89 = bitcast i32* %workstatus to i8*, !dbg !12993
  call void @llvm.lifetime.end(i64 4, i8* %89) #4, !dbg !12993
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !12992

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @_mpd_apply_round_fit(%struct.mpd_t* %dec, i64 %rnd, %struct.mpd_context_t* %ctx, i32* %status) #3 {
entry:
  %retval = alloca i32, align 4
  %dec.addr = alloca %struct.mpd_t*, align 8
  %rnd.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %carry = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !2207, metadata !2395), !dbg !12995
  store i64 %rnd, i64* %rnd.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %rnd.addr, metadata !2208, metadata !2395), !dbg !12996
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !2209, metadata !2395), !dbg !12997
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2210, metadata !2395), !dbg !12998
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !12999, !tbaa !2505
  %1 = load i64, i64* %rnd.addr, align 8, !dbg !13000, !tbaa !2391
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13001, !tbaa !2505
  %call = call i32 @_mpd_rnd_incr(%struct.mpd_t* %0, i64 %1, %struct.mpd_context_t* %2), !dbg !13002
  %tobool = icmp ne i32 %call, 0, !dbg !13002
  br i1 %tobool, label %if.then, label %if.end.15, !dbg !13003

if.then:                                          ; preds = %entry
  %3 = bitcast i64* %carry to i8*, !dbg !13004
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !13004
  call void @llvm.dbg.declare(metadata i64* %carry, metadata !2211, metadata !2395), !dbg !13005
  %4 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !13006, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %4, i32 0, i32 5, !dbg !13007
  %5 = load i64*, i64** %data, align 8, !dbg !13007, !tbaa !2546
  %6 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !13008, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %6, i32 0, i32 3, !dbg !13009
  %7 = load i64, i64* %len, align 8, !dbg !13009, !tbaa !2542
  %call1 = call i64 @_mpd_baseincr(i64* %5, i64 %7), !dbg !13010
  store i64 %call1, i64* %carry, align 8, !dbg !13005, !tbaa !2391
  %8 = load i64, i64* %carry, align 8, !dbg !13011, !tbaa !2391
  %tobool2 = icmp ne i64 %8, 0, !dbg !13011
  br i1 %tobool2, label %if.then.3, label %if.end.12, !dbg !13013

if.then.3:                                        ; preds = %if.then
  %9 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !13014, !tbaa !2505
  %10 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !13017, !tbaa !2505
  %len4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %10, i32 0, i32 3, !dbg !13018
  %11 = load i64, i64* %len4, align 8, !dbg !13018, !tbaa !2542
  %add = add i64 %11, 1, !dbg !13019
  %12 = load i32*, i32** %status.addr, align 8, !dbg !13020, !tbaa !2505
  %call5 = call i32 @mpd_qresize(%struct.mpd_t* %9, i64 %add, i32* %12), !dbg !13021
  %tobool6 = icmp ne i32 %call5, 0, !dbg !13021
  br i1 %tobool6, label %if.end, label %if.then.7, !dbg !13022

if.then.7:                                        ; preds = %if.then.3
  store i32 0, i32* %retval, !dbg !13023
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13023

if.end:                                           ; preds = %if.then.3
  %13 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !13025, !tbaa !2505
  %len8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %13, i32 0, i32 3, !dbg !13026
  %14 = load i64, i64* %len8, align 8, !dbg !13026, !tbaa !2542
  %15 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !13027, !tbaa !2505
  %data9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %15, i32 0, i32 5, !dbg !13028
  %16 = load i64*, i64** %data9, align 8, !dbg !13028, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %16, i64 %14, !dbg !13027
  store i64 1, i64* %arrayidx, align 8, !dbg !13029, !tbaa !2391
  %17 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !13030, !tbaa !2505
  %len10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 3, !dbg !13031
  %18 = load i64, i64* %len10, align 8, !dbg !13032, !tbaa !2542
  %add11 = add i64 %18, 1, !dbg !13032
  store i64 %add11, i64* %len10, align 8, !dbg !13032, !tbaa !2542
  br label %if.end.12, !dbg !13033

if.end.12:                                        ; preds = %if.end, %if.then
  %19 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !13034, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %19), !dbg !13035
  %20 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !13036, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %20, i32 0, i32 2, !dbg !13038
  %21 = load i64, i64* %digits, align 8, !dbg !13038, !tbaa !2514
  %22 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13039, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %22, i32 0, i32 0, !dbg !13040
  %23 = load i64, i64* %prec, align 8, !dbg !13040, !tbaa !2526
  %cmp = icmp sgt i64 %21, %23, !dbg !13041
  br i1 %cmp, label %if.then.13, label %if.end.14, !dbg !13042

if.then.13:                                       ; preds = %if.end.12
  %24 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !13043, !tbaa !2505
  %25 = load i32*, i32** %status.addr, align 8, !dbg !13045, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %24, i32 256, i32* %25), !dbg !13046
  store i32 0, i32* %retval, !dbg !13047
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13047

if.end.14:                                        ; preds = %if.end.12
  store i32 0, i32* %cleanup.dest.slot, !dbg !13048
  br label %cleanup, !dbg !13048

cleanup:                                          ; preds = %if.end.14, %if.then.13, %if.then.7
  %26 = bitcast i64* %carry to i8*, !dbg !13049
  call void @llvm.lifetime.end(i64 8, i8* %26) #4, !dbg !13049
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.15, !dbg !13051

if.end.15:                                        ; preds = %cleanup.cont, %entry
  store i32 1, i32* %retval, !dbg !13052
  br label %return, !dbg !13052

return:                                           ; preds = %LeafBlock, %if.end.15
  %27 = load i32, i32* %retval, !dbg !13053
  ret i32 %27, !dbg !13053
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qreduce(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %shift = alloca i64, align 8
  %maxexp = alloca i64, align 8
  %maxshift = alloca i64, align 8
  %sign_a = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1248, metadata !2395), !dbg !13054
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1249, metadata !2395), !dbg !13055
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1250, metadata !2395), !dbg !13056
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1251, metadata !2395), !dbg !13057
  %0 = bitcast i64* %shift to i8*, !dbg !13058
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !13058
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !1252, metadata !2395), !dbg !13059
  %1 = bitcast i64* %maxexp to i8*, !dbg !13058
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !13058
  call void @llvm.dbg.declare(metadata i64* %maxexp, metadata !1253, metadata !2395), !dbg !13060
  %2 = bitcast i64* %maxshift to i8*, !dbg !13058
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !13058
  call void @llvm.dbg.declare(metadata i64* %maxshift, metadata !1254, metadata !2395), !dbg !13061
  call void @llvm.lifetime.start(i64 1, i8* %sign_a) #4, !dbg !13062
  call void @llvm.dbg.declare(metadata i8* %sign_a, metadata !1255, metadata !2395), !dbg !13063
  %3 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13064, !tbaa !2505
  %call = call zeroext i8 @mpd_sign(%struct.mpd_t* %3), !dbg !13065
  store i8 %call, i8* %sign_a, align 1, !dbg !13063, !tbaa !2930
  %4 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13066, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %4), !dbg !13068
  %tobool = icmp ne i32 %call1, 0, !dbg !13068
  br i1 %tobool, label %if.then, label %if.end.6, !dbg !13069

if.then:                                          ; preds = %entry
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13070, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13073, !tbaa !2505
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13074, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !13075, !tbaa !2505
  %call2 = call i32 @mpd_qcheck_nan(%struct.mpd_t* %5, %struct.mpd_t* %6, %struct.mpd_context_t* %7, i32* %8), !dbg !13076
  %tobool3 = icmp ne i32 %call2, 0, !dbg !13076
  br i1 %tobool3, label %if.then.4, label %if.end, !dbg !13077

if.then.4:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13078

if.end:                                           ; preds = %if.then
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13080, !tbaa !2505
  %10 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13081, !tbaa !2505
  %11 = load i32*, i32** %status.addr, align 8, !dbg !13082, !tbaa !2505
  %call5 = call i32 @mpd_qcopy(%struct.mpd_t* %9, %struct.mpd_t* %10, i32* %11), !dbg !13083
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13084

if.end.6:                                         ; preds = %entry
  %12 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13085, !tbaa !2505
  %13 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13087, !tbaa !2505
  %14 = load i32*, i32** %status.addr, align 8, !dbg !13088, !tbaa !2505
  %call7 = call i32 @mpd_qcopy(%struct.mpd_t* %12, %struct.mpd_t* %13, i32* %14), !dbg !13089
  %tobool8 = icmp ne i32 %call7, 0, !dbg !13089
  br i1 %tobool8, label %if.end.10, label %if.then.9, !dbg !13090

if.then.9:                                        ; preds = %if.end.6
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13091

if.end.10:                                        ; preds = %if.end.6
  %15 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13093, !tbaa !2505
  %16 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13094, !tbaa !2505
  %17 = load i32*, i32** %status.addr, align 8, !dbg !13095, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %15, %struct.mpd_context_t* %16, i32* %17), !dbg !13096
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13097, !tbaa !2505
  %call11 = call i32 @mpd_isspecial(%struct.mpd_t* %18), !dbg !13099
  %tobool12 = icmp ne i32 %call11, 0, !dbg !13099
  br i1 %tobool12, label %if.then.13, label %if.end.14, !dbg !13100

if.then.13:                                       ; preds = %if.end.10
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13101

if.end.14:                                        ; preds = %if.end.10
  %19 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13103, !tbaa !2505
  %call15 = call i32 @mpd_iszero(%struct.mpd_t* %19), !dbg !13105
  %tobool16 = icmp ne i32 %call15, 0, !dbg !13105
  br i1 %tobool16, label %if.then.17, label %if.end.18, !dbg !13106

if.then.17:                                       ; preds = %if.end.14
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13107, !tbaa !2505
  %21 = load i8, i8* %sign_a, align 1, !dbg !13109, !tbaa !2930
  call void @_settriple(%struct.mpd_t* %20, i8 zeroext %21, i64 0, i64 0), !dbg !13110
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13111

if.end.18:                                        ; preds = %if.end.14
  %22 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13112, !tbaa !2505
  %call19 = call i64 @mpd_trail_zeros(%struct.mpd_t* %22), !dbg !13113
  store i64 %call19, i64* %shift, align 8, !dbg !13114, !tbaa !2391
  %23 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13115, !tbaa !2505
  %clamp = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %23, i32 0, i32 7, !dbg !13116
  %24 = load i32, i32* %clamp, align 4, !dbg !13116, !tbaa !3962
  %tobool20 = icmp ne i32 %24, 0, !dbg !13117
  br i1 %tobool20, label %cond.true, label %cond.false, !dbg !13117

cond.true:                                        ; preds = %if.end.18
  %25 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13118, !tbaa !2505
  %call21 = call i64 @mpd_etop(%struct.mpd_context_t* %25), !dbg !13120
  br label %cond.end, !dbg !13117

cond.false:                                       ; preds = %if.end.18
  %26 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13121, !tbaa !2505
  %emax = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %26, i32 0, i32 1, !dbg !13123
  %27 = load i64, i64* %emax, align 8, !dbg !13123, !tbaa !2533
  br label %cond.end, !dbg !13117

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call21, %cond.true ], [ %27, %cond.false ], !dbg !13117
  store i64 %cond, i64* %maxexp, align 8, !dbg !13124, !tbaa !2391
  %28 = load i64, i64* %maxexp, align 8, !dbg !13127, !tbaa !2391
  %29 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13128, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %29, i32 0, i32 1, !dbg !13129
  %30 = load i64, i64* %exp, align 8, !dbg !13129, !tbaa !2510
  %sub = sub i64 %28, %30, !dbg !13130
  store i64 %sub, i64* %maxshift, align 8, !dbg !13131, !tbaa !2391
  %31 = load i64, i64* %shift, align 8, !dbg !13132, !tbaa !2391
  %32 = load i64, i64* %maxshift, align 8, !dbg !13133, !tbaa !2391
  %cmp = icmp sgt i64 %31, %32, !dbg !13134
  br i1 %cmp, label %cond.true.22, label %cond.false.23, !dbg !13135

cond.true.22:                                     ; preds = %cond.end
  %33 = load i64, i64* %maxshift, align 8, !dbg !13136, !tbaa !2391
  br label %cond.end.24, !dbg !13135

cond.false.23:                                    ; preds = %cond.end
  %34 = load i64, i64* %shift, align 8, !dbg !13137, !tbaa !2391
  br label %cond.end.24, !dbg !13135

cond.end.24:                                      ; preds = %cond.false.23, %cond.true.22
  %cond25 = phi i64 [ %33, %cond.true.22 ], [ %34, %cond.false.23 ], !dbg !13135
  store i64 %cond25, i64* %shift, align 8, !dbg !13138, !tbaa !2391
  %35 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13139, !tbaa !2505
  %36 = load i64, i64* %shift, align 8, !dbg !13140, !tbaa !2391
  %call26 = call i64 @mpd_qshiftr_inplace(%struct.mpd_t* %35, i64 %36), !dbg !13141
  %37 = load i64, i64* %shift, align 8, !dbg !13142, !tbaa !2391
  %38 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13143, !tbaa !2505
  %exp27 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %38, i32 0, i32 1, !dbg !13144
  %39 = load i64, i64* %exp27, align 8, !dbg !13145, !tbaa !2510
  %add = add i64 %39, %37, !dbg !13145
  store i64 %add, i64* %exp27, align 8, !dbg !13145, !tbaa !2510
  store i32 0, i32* %cleanup.dest.slot, !dbg !13146
  br label %cleanup, !dbg !13146

cleanup:                                          ; preds = %cond.end.24, %if.then.17, %if.then.13, %if.then.9, %if.end, %if.then.4
  call void @llvm.lifetime.end(i64 1, i8* %sign_a) #4, !dbg !13146
  %40 = bitcast i64* %maxshift to i8*, !dbg !13147
  call void @llvm.lifetime.end(i64 8, i8* %40) #4, !dbg !13147
  %41 = bitcast i64* %maxexp to i8*, !dbg !13147
  call void @llvm.lifetime.end(i64 8, i8* %41) #4, !dbg !13147
  %42 = bitcast i64* %shift to i8*, !dbg !13147
  call void @llvm.lifetime.end(i64 8, i8* %42) #4, !dbg !13147
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !13146

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qrem_near(%struct.mpd_t* %r, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %r.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workctx = alloca %struct.mpd_context_t, align 8
  %btmp_data = alloca [64 x i64], align 16
  %btmp = alloca %struct.mpd_t, align 8
  %q_data = alloca [64 x i64], align 16
  %q = alloca %struct.mpd_t, align 8
  %expdiff = alloca i64, align 8
  %qdigits = alloca i64, align 8
  %cmp = alloca i32, align 4
  %isodd = alloca i32, align 4
  %allnine = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %r, %struct.mpd_t** %r.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %r.addr, metadata !1267, metadata !2395), !dbg !13148
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1268, metadata !2395), !dbg !13149
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1269, metadata !2395), !dbg !13150
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1270, metadata !2395), !dbg !13151
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1271, metadata !2395), !dbg !13152
  %0 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !13153
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !13153
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %workctx, metadata !1272, metadata !2395), !dbg !13154
  %1 = bitcast [64 x i64]* %btmp_data to i8*, !dbg !13155
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !13155
  call void @llvm.dbg.declare(metadata [64 x i64]* %btmp_data, metadata !1273, metadata !2395), !dbg !13156
  %2 = bitcast %struct.mpd_t* %btmp to i8*, !dbg !13157
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !13157
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %btmp, metadata !1274, metadata !2395), !dbg !13158
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %btmp, i32 0, i32 0, !dbg !13159
  store i8 48, i8* %flags, align 1, !dbg !13159, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %btmp, i32 0, i32 1, !dbg !13159
  store i64 0, i64* %exp, align 8, !dbg !13159, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %btmp, i32 0, i32 2, !dbg !13159
  store i64 0, i64* %digits, align 8, !dbg !13159, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %btmp, i32 0, i32 3, !dbg !13159
  store i64 0, i64* %len, align 8, !dbg !13159, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %btmp, i32 0, i32 4, !dbg !13159
  store i64 64, i64* %alloc, align 8, !dbg !13159, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %btmp, i32 0, i32 5, !dbg !13159
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %btmp_data, i32 0, i32 0, !dbg !13160
  store i64* %arraydecay, i64** %data, align 8, !dbg !13159, !tbaa !2546
  %3 = bitcast [64 x i64]* %q_data to i8*, !dbg !13161
  call void @llvm.lifetime.start(i64 512, i8* %3) #4, !dbg !13161
  call void @llvm.dbg.declare(metadata [64 x i64]* %q_data, metadata !1275, metadata !2395), !dbg !13162
  %4 = bitcast %struct.mpd_t* %q to i8*, !dbg !13163
  call void @llvm.lifetime.start(i64 48, i8* %4) #4, !dbg !13163
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %q, metadata !1276, metadata !2395), !dbg !13164
  %flags1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 0, !dbg !13165
  store i8 48, i8* %flags1, align 1, !dbg !13165, !tbaa !2620
  %exp2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 1, !dbg !13165
  store i64 0, i64* %exp2, align 8, !dbg !13165, !tbaa !2510
  %digits3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 2, !dbg !13165
  store i64 0, i64* %digits3, align 8, !dbg !13165, !tbaa !2514
  %len4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 3, !dbg !13165
  store i64 0, i64* %len4, align 8, !dbg !13165, !tbaa !2542
  %alloc5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 4, !dbg !13165
  store i64 64, i64* %alloc5, align 8, !dbg !13165, !tbaa !2835
  %data6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 5, !dbg !13165
  %arraydecay7 = getelementptr inbounds [64 x i64], [64 x i64]* %q_data, i32 0, i32 0, !dbg !13166
  store i64* %arraydecay7, i64** %data6, align 8, !dbg !13165, !tbaa !2546
  %5 = bitcast i64* %expdiff to i8*, !dbg !13167
  call void @llvm.lifetime.start(i64 8, i8* %5) #4, !dbg !13167
  call void @llvm.dbg.declare(metadata i64* %expdiff, metadata !1277, metadata !2395), !dbg !13168
  %6 = bitcast i64* %qdigits to i8*, !dbg !13167
  call void @llvm.lifetime.start(i64 8, i8* %6) #4, !dbg !13167
  call void @llvm.dbg.declare(metadata i64* %qdigits, metadata !1278, metadata !2395), !dbg !13169
  %7 = bitcast i32* %cmp to i8*, !dbg !13170
  call void @llvm.lifetime.start(i64 4, i8* %7) #4, !dbg !13170
  call void @llvm.dbg.declare(metadata i32* %cmp, metadata !1279, metadata !2395), !dbg !13171
  %8 = bitcast i32* %isodd to i8*, !dbg !13170
  call void @llvm.lifetime.start(i64 4, i8* %8) #4, !dbg !13170
  call void @llvm.dbg.declare(metadata i32* %isodd, metadata !1280, metadata !2395), !dbg !13172
  %9 = bitcast i32* %allnine to i8*, !dbg !13170
  call void @llvm.lifetime.start(i64 4, i8* %9) #4, !dbg !13170
  call void @llvm.dbg.declare(metadata i32* %allnine, metadata !1281, metadata !2395), !dbg !13173
  %10 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13174, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %10), !dbg !13176
  %tobool = icmp ne i32 %call, 0, !dbg !13176
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !13177

lor.lhs.false:                                    ; preds = %entry
  %11 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13178, !tbaa !2505
  %call8 = call i32 @mpd_isspecial(%struct.mpd_t* %11), !dbg !13180
  %tobool9 = icmp ne i32 %call8, 0, !dbg !13180
  br i1 %tobool9, label %if.then, label %if.end.22, !dbg !13181

if.then:                                          ; preds = %lor.lhs.false, %entry
  %12 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13182, !tbaa !2505
  %13 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13185, !tbaa !2505
  %14 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13186, !tbaa !2505
  %15 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13187, !tbaa !2505
  %16 = load i32*, i32** %status.addr, align 8, !dbg !13188, !tbaa !2505
  %call10 = call i32 @mpd_qcheck_nans(%struct.mpd_t* %12, %struct.mpd_t* %13, %struct.mpd_t* %14, %struct.mpd_context_t* %15, i32* %16), !dbg !13189
  %tobool11 = icmp ne i32 %call10, 0, !dbg !13189
  br i1 %tobool11, label %if.then.12, label %if.end, !dbg !13190

if.then.12:                                       ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13191

if.end:                                           ; preds = %if.then
  %17 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13193, !tbaa !2505
  %call13 = call i32 @mpd_isinfinite(%struct.mpd_t* %17), !dbg !13195
  %tobool14 = icmp ne i32 %call13, 0, !dbg !13195
  br i1 %tobool14, label %if.then.15, label %if.end.16, !dbg !13196

if.then.15:                                       ; preds = %if.end
  %18 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13197, !tbaa !2505
  %19 = load i32*, i32** %status.addr, align 8, !dbg !13199, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %18, i32 256, i32* %19), !dbg !13200
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13201

if.end.16:                                        ; preds = %if.end
  %20 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13202, !tbaa !2505
  %call17 = call i32 @mpd_isinfinite(%struct.mpd_t* %20), !dbg !13204
  %tobool18 = icmp ne i32 %call17, 0, !dbg !13204
  br i1 %tobool18, label %if.then.19, label %if.end.21, !dbg !13205

if.then.19:                                       ; preds = %if.end.16
  %21 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13206, !tbaa !2505
  %22 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13208, !tbaa !2505
  %23 = load i32*, i32** %status.addr, align 8, !dbg !13209, !tbaa !2505
  %call20 = call i32 @mpd_qcopy(%struct.mpd_t* %21, %struct.mpd_t* %22, i32* %23), !dbg !13210
  %24 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13211, !tbaa !2505
  %25 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13212, !tbaa !2505
  %26 = load i32*, i32** %status.addr, align 8, !dbg !13213, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %24, %struct.mpd_context_t* %25, i32* %26), !dbg !13214
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13215

if.end.21:                                        ; preds = %if.end.16
  call void @abort() #9, !dbg !13216
  unreachable, !dbg !13216

if.end.22:                                        ; preds = %lor.lhs.false
  %27 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13217, !tbaa !2505
  %call23 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %27), !dbg !13219
  %tobool24 = icmp ne i32 %call23, 0, !dbg !13219
  br i1 %tobool24, label %if.then.25, label %if.end.30, !dbg !13220

if.then.25:                                       ; preds = %if.end.22
  %28 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13221, !tbaa !2505
  %call26 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %28), !dbg !13224
  %tobool27 = icmp ne i32 %call26, 0, !dbg !13224
  br i1 %tobool27, label %if.then.28, label %if.else, !dbg !13225

if.then.28:                                       ; preds = %if.then.25
  %29 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13226, !tbaa !2505
  %30 = load i32*, i32** %status.addr, align 8, !dbg !13228, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %29, i32 16, i32* %30), !dbg !13229
  br label %if.end.29, !dbg !13230

if.else:                                          ; preds = %if.then.25
  %31 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13231, !tbaa !2505
  %32 = load i32*, i32** %status.addr, align 8, !dbg !13233, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %31, i32 256, i32* %32), !dbg !13234
  br label %if.end.29

if.end.29:                                        ; preds = %if.else, %if.then.28
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13235

if.end.30:                                        ; preds = %if.end.22
  %33 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13236, !tbaa !2505
  %34 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13238, !tbaa !2505
  %cmp31 = icmp eq %struct.mpd_t* %33, %34, !dbg !13239
  br i1 %cmp31, label %if.then.32, label %if.end.37, !dbg !13240

if.then.32:                                       ; preds = %if.end.30
  %35 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13241, !tbaa !2505
  %36 = load i32*, i32** %status.addr, align 8, !dbg !13244, !tbaa !2505
  %call33 = call i32 @mpd_qcopy(%struct.mpd_t* %btmp, %struct.mpd_t* %35, i32* %36), !dbg !13245
  %tobool34 = icmp ne i32 %call33, 0, !dbg !13245
  br i1 %tobool34, label %if.end.36, label %if.then.35, !dbg !13246

if.then.35:                                       ; preds = %if.then.32
  %37 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13247, !tbaa !2505
  %38 = load i32*, i32** %status.addr, align 8, !dbg !13249, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %37, i32 512, i32* %38), !dbg !13250
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13251

if.end.36:                                        ; preds = %if.then.32
  store %struct.mpd_t* %btmp, %struct.mpd_t** %b.addr, align 8, !dbg !13252, !tbaa !2505
  br label %if.end.37, !dbg !13253

if.end.37:                                        ; preds = %if.end.36, %if.end.30
  %39 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13254, !tbaa !2505
  %40 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13255, !tbaa !2505
  %41 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13256, !tbaa !2505
  %42 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13257, !tbaa !2505
  %43 = load i32*, i32** %status.addr, align 8, !dbg !13258, !tbaa !2505
  call void @_mpd_qdivmod(%struct.mpd_t* %q, %struct.mpd_t* %39, %struct.mpd_t* %40, %struct.mpd_t* %41, %struct.mpd_context_t* %42, i32* %43), !dbg !13259
  %call38 = call i32 @mpd_isnan(%struct.mpd_t* %q), !dbg !13260
  %tobool39 = icmp ne i32 %call38, 0, !dbg !13260
  br i1 %tobool39, label %if.then.43, label %lor.lhs.false.40, !dbg !13262

lor.lhs.false.40:                                 ; preds = %if.end.37
  %44 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13263, !tbaa !2505
  %call41 = call i32 @mpd_isnan(%struct.mpd_t* %44), !dbg !13265
  %tobool42 = icmp ne i32 %call41, 0, !dbg !13265
  br i1 %tobool42, label %if.then.43, label %if.end.44, !dbg !13266

if.then.43:                                       ; preds = %lor.lhs.false.40, %if.end.37
  br label %finish, !dbg !13267

if.end.44:                                        ; preds = %lor.lhs.false.40
  %45 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13269, !tbaa !2505
  %call45 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %45), !dbg !13271
  %tobool46 = icmp ne i32 %call45, 0, !dbg !13271
  br i1 %tobool46, label %if.then.47, label %if.end.48, !dbg !13272

if.then.47:                                       ; preds = %if.end.44
  br label %finish, !dbg !13273

if.end.48:                                        ; preds = %if.end.44
  %46 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13275, !tbaa !2505
  %call49 = call i64 @mpd_adjexp(%struct.mpd_t* %46), !dbg !13276
  %47 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13277, !tbaa !2505
  %call50 = call i64 @mpd_adjexp(%struct.mpd_t* %47), !dbg !13278
  %sub = sub i64 %call49, %call50, !dbg !13279
  store i64 %sub, i64* %expdiff, align 8, !dbg !13280, !tbaa !2391
  %48 = load i64, i64* %expdiff, align 8, !dbg !13281, !tbaa !2391
  %cmp51 = icmp sle i64 -1, %48, !dbg !13283
  br i1 %cmp51, label %land.lhs.true, label %if.end.90, !dbg !13284

land.lhs.true:                                    ; preds = %if.end.48
  %49 = load i64, i64* %expdiff, align 8, !dbg !13285, !tbaa !2391
  %cmp52 = icmp sle i64 %49, 1, !dbg !13287
  br i1 %cmp52, label %if.then.53, label %if.end.90, !dbg !13288

if.then.53:                                       ; preds = %land.lhs.true
  %call54 = call i32 @mpd_coeff_isallnine(%struct.mpd_t* %q), !dbg !13289
  store i32 %call54, i32* %allnine, align 4, !dbg !13291, !tbaa !2554
  %digits55 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 2, !dbg !13292
  %50 = load i64, i64* %digits55, align 8, !dbg !13292, !tbaa !2514
  store i64 %50, i64* %qdigits, align 8, !dbg !13293, !tbaa !2391
  %call56 = call i32 @mpd_isodd(%struct.mpd_t* %q), !dbg !13294
  store i32 %call56, i32* %isodd, align 4, !dbg !13295, !tbaa !2554
  call void @mpd_maxcontext(%struct.mpd_context_t* %workctx), !dbg !13296
  %51 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13297, !tbaa !2505
  %call57 = call zeroext i8 @mpd_sign(%struct.mpd_t* %51), !dbg !13299
  %conv = zext i8 %call57 to i32, !dbg !13299
  %52 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13300, !tbaa !2505
  %call58 = call zeroext i8 @mpd_sign(%struct.mpd_t* %52), !dbg !13301
  %conv59 = zext i8 %call58 to i32, !dbg !13301
  %cmp60 = icmp eq i32 %conv, %conv59, !dbg !13302
  br i1 %cmp60, label %if.then.62, label %if.else.64, !dbg !13303

if.then.62:                                       ; preds = %if.then.53
  %53 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13304, !tbaa !2505
  %54 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13306, !tbaa !2505
  %status63 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !13307
  call void @_mpd_qsub(%struct.mpd_t* %q, %struct.mpd_t* %53, %struct.mpd_t* %54, %struct.mpd_context_t* %workctx, i32* %status63), !dbg !13308
  br label %if.end.66, !dbg !13309

if.else.64:                                       ; preds = %if.then.53
  %55 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13310, !tbaa !2505
  %56 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13312, !tbaa !2505
  %status65 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !13313
  call void @_mpd_qadd(%struct.mpd_t* %q, %struct.mpd_t* %55, %struct.mpd_t* %56, %struct.mpd_context_t* %workctx, i32* %status65), !dbg !13314
  br label %if.end.66

if.end.66:                                        ; preds = %if.else.64, %if.then.62
  %status67 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !13315
  %57 = load i32, i32* %status67, align 4, !dbg !13315, !tbaa !9309
  %and = and i32 %57, 958, !dbg !13317
  %tobool68 = icmp ne i32 %and, 0, !dbg !13317
  br i1 %tobool68, label %if.then.69, label %if.end.72, !dbg !13318

if.then.69:                                       ; preds = %if.end.66
  %58 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13319, !tbaa !2505
  %status70 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !13321
  %59 = load i32, i32* %status70, align 4, !dbg !13321, !tbaa !9309
  %and71 = and i32 %59, 958, !dbg !13322
  %60 = load i32*, i32** %status.addr, align 8, !dbg !13323, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %58, i32 %and71, i32* %60), !dbg !13324
  br label %finish, !dbg !13325

if.end.72:                                        ; preds = %if.end.66
  %61 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13326, !tbaa !2505
  %call73 = call i32 @_mpd_cmp_abs(%struct.mpd_t* %q, %struct.mpd_t* %61), !dbg !13327
  store i32 %call73, i32* %cmp, align 4, !dbg !13328, !tbaa !2554
  %62 = load i32, i32* %cmp, align 4, !dbg !13329, !tbaa !2554
  %cmp74 = icmp slt i32 %62, 0, !dbg !13331
  br i1 %cmp74, label %if.then.81, label %lor.lhs.false.76, !dbg !13332

lor.lhs.false.76:                                 ; preds = %if.end.72
  %63 = load i32, i32* %cmp, align 4, !dbg !13333, !tbaa !2554
  %cmp77 = icmp eq i32 %63, 0, !dbg !13335
  br i1 %cmp77, label %land.lhs.true.79, label %if.end.89, !dbg !13336

land.lhs.true.79:                                 ; preds = %lor.lhs.false.76
  %64 = load i32, i32* %isodd, align 4, !dbg !13337, !tbaa !2554
  %tobool80 = icmp ne i32 %64, 0, !dbg !13337
  br i1 %tobool80, label %if.then.81, label %if.end.89, !dbg !13339

if.then.81:                                       ; preds = %land.lhs.true.79, %if.end.72
  %65 = load i32, i32* %allnine, align 4, !dbg !13340, !tbaa !2554
  %tobool82 = icmp ne i32 %65, 0, !dbg !13340
  br i1 %tobool82, label %land.lhs.true.83, label %if.end.87, !dbg !13343

land.lhs.true.83:                                 ; preds = %if.then.81
  %66 = load i64, i64* %qdigits, align 8, !dbg !13344, !tbaa !2391
  %67 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13346, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %67, i32 0, i32 0, !dbg !13347
  %68 = load i64, i64* %prec, align 8, !dbg !13347, !tbaa !2526
  %cmp84 = icmp eq i64 %66, %68, !dbg !13348
  br i1 %cmp84, label %if.then.86, label %if.end.87, !dbg !13349

if.then.86:                                       ; preds = %land.lhs.true.83
  %69 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13350, !tbaa !2505
  %70 = load i32*, i32** %status.addr, align 8, !dbg !13352, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %69, i32 8, i32* %70), !dbg !13353
  br label %finish, !dbg !13354

if.end.87:                                        ; preds = %land.lhs.true.83, %if.then.81
  %71 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13355, !tbaa !2505
  %72 = load i32*, i32** %status.addr, align 8, !dbg !13356, !tbaa !2505
  %call88 = call i32 @mpd_qcopy(%struct.mpd_t* %71, %struct.mpd_t* %q, i32* %72), !dbg !13357
  br label %if.end.89, !dbg !13358

if.end.89:                                        ; preds = %if.end.87, %land.lhs.true.79, %lor.lhs.false.76
  br label %if.end.90, !dbg !13359

if.end.90:                                        ; preds = %if.end.89, %land.lhs.true, %if.end.48
  br label %finish, !dbg !13360

finish:                                           ; preds = %if.end.90, %if.then.86, %if.then.69, %if.then.47, %if.then.43
  call void @mpd_del(%struct.mpd_t* %btmp), !dbg !13363
  call void @mpd_del(%struct.mpd_t* %q), !dbg !13364
  %73 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !13365, !tbaa !2505
  %74 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13366, !tbaa !2505
  %75 = load i32*, i32** %status.addr, align 8, !dbg !13367, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %73, %struct.mpd_context_t* %74, i32* %75), !dbg !13368
  store i32 0, i32* %cleanup.dest.slot, !dbg !13369
  br label %cleanup, !dbg !13369

cleanup:                                          ; preds = %finish, %if.then.35, %if.end.29, %if.then.19, %if.then.15, %if.then.12
  %76 = bitcast i32* %allnine to i8*, !dbg !13370
  call void @llvm.lifetime.end(i64 4, i8* %76) #4, !dbg !13370
  %77 = bitcast i32* %isodd to i8*, !dbg !13370
  call void @llvm.lifetime.end(i64 4, i8* %77) #4, !dbg !13370
  %78 = bitcast i32* %cmp to i8*, !dbg !13370
  call void @llvm.lifetime.end(i64 4, i8* %78) #4, !dbg !13370
  %79 = bitcast i64* %qdigits to i8*, !dbg !13370
  call void @llvm.lifetime.end(i64 8, i8* %79) #4, !dbg !13370
  %80 = bitcast i64* %expdiff to i8*, !dbg !13370
  call void @llvm.lifetime.end(i64 8, i8* %80) #4, !dbg !13370
  %81 = bitcast %struct.mpd_t* %q to i8*, !dbg !13370
  call void @llvm.lifetime.end(i64 48, i8* %81) #4, !dbg !13370
  %82 = bitcast [64 x i64]* %q_data to i8*, !dbg !13370
  call void @llvm.lifetime.end(i64 512, i8* %82) #4, !dbg !13370
  %83 = bitcast %struct.mpd_t* %btmp to i8*, !dbg !13370
  call void @llvm.lifetime.end(i64 48, i8* %83) #4, !dbg !13370
  %84 = bitcast [64 x i64]* %btmp_data to i8*, !dbg !13370
  call void @llvm.lifetime.end(i64 512, i8* %84) #4, !dbg !13370
  %85 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !13370
  call void @llvm.lifetime.end(i64 48, i8* %85) #4, !dbg !13370
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !13369

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @mpd_coeff_isallnine(%struct.mpd_t* %dec) #0 {
entry:
  %retval = alloca i32, align 4
  %dec.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !2216, metadata !2395), !dbg !13372
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !13373, !tbaa !2505
  %call = call i64 @mpd_msword(%struct.mpd_t* %0), !dbg !13375
  %call1 = call i32 @mpd_word_isallnine(i64 %call), !dbg !13376
  %tobool = icmp ne i32 %call1, 0, !dbg !13376
  br i1 %tobool, label %if.then, label %if.end.5, !dbg !13377

if.then:                                          ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !13378, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %1, i32 0, i32 5, !dbg !13381
  %2 = load i64*, i64** %data, align 8, !dbg !13381, !tbaa !2546
  %3 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !13382, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 3, !dbg !13383
  %4 = load i64, i64* %len, align 8, !dbg !13383, !tbaa !2542
  %sub = sub i64 %4, 1, !dbg !13384
  %call2 = call i32 @_mpd_isallnine(i64* %2, i64 %sub), !dbg !13385
  %tobool3 = icmp ne i32 %call2, 0, !dbg !13385
  br i1 %tobool3, label %if.then.4, label %if.end, !dbg !13386

if.then.4:                                        ; preds = %if.then
  store i32 1, i32* %retval, !dbg !13387
  br label %return, !dbg !13387

if.end:                                           ; preds = %if.then
  br label %if.end.5, !dbg !13389

if.end.5:                                         ; preds = %if.end, %entry
  store i32 0, i32* %retval, !dbg !13390
  br label %return, !dbg !13390

return:                                           ; preds = %if.end.5, %if.then.4
  %5 = load i32, i32* %retval, !dbg !13391
  ret i32 %5, !dbg !13391
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qsub(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !2227, metadata !2395), !dbg !13392
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !2228, metadata !2395), !dbg !13393
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !2229, metadata !2395), !dbg !13394
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !2230, metadata !2395), !dbg !13395
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2231, metadata !2395), !dbg !13396
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13397, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13398, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13399, !tbaa !2505
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13400, !tbaa !2505
  %call = call zeroext i8 @mpd_sign(%struct.mpd_t* %3), !dbg !13401
  %tobool = icmp ne i8 %call, 0, !dbg !13402
  %lnot = xor i1 %tobool, true, !dbg !13402
  %lnot.ext = zext i1 %lnot to i32, !dbg !13402
  %conv = trunc i32 %lnot.ext to i8, !dbg !13402
  %4 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13403, !tbaa !2505
  %5 = load i32*, i32** %status.addr, align 8, !dbg !13404, !tbaa !2505
  call void @_mpd_qaddsub(%struct.mpd_t* %0, %struct.mpd_t* %1, %struct.mpd_t* %2, i8 zeroext %conv, %struct.mpd_context_t* %4, i32* %5), !dbg !13405
  ret void, !dbg !13406
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qrescale(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %exp, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %exp.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %expdiff = alloca i64, align 8
  %shift = alloca i64, align 8
  %rnd = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !2234, metadata !2395), !dbg !13407
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !2235, metadata !2395), !dbg !13408
  store i64 %exp, i64* %exp.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %exp.addr, metadata !2236, metadata !2395), !dbg !13409
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !2237, metadata !2395), !dbg !13410
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2238, metadata !2395), !dbg !13411
  %0 = bitcast i64* %expdiff to i8*, !dbg !13412
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !13412
  call void @llvm.dbg.declare(metadata i64* %expdiff, metadata !2239, metadata !2395), !dbg !13413
  %1 = bitcast i64* %shift to i8*, !dbg !13412
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !13412
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !2240, metadata !2395), !dbg !13414
  %2 = bitcast i64* %rnd to i8*, !dbg !13415
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !13415
  call void @llvm.dbg.declare(metadata i64* %rnd, metadata !2241, metadata !2395), !dbg !13416
  %3 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13417, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %3), !dbg !13419
  %tobool = icmp ne i32 %call, 0, !dbg !13419
  br i1 %tobool, label %if.then, label %if.end, !dbg !13420

if.then:                                          ; preds = %entry
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13421, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13423, !tbaa !2505
  %6 = load i32*, i32** %status.addr, align 8, !dbg !13424, !tbaa !2505
  %call1 = call i32 @mpd_qcopy(%struct.mpd_t* %4, %struct.mpd_t* %5, i32* %6), !dbg !13425
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13426

if.end:                                           ; preds = %entry
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13427, !tbaa !2505
  %call2 = call i32 @mpd_iszero(%struct.mpd_t* %7), !dbg !13429
  %tobool3 = icmp ne i32 %call2, 0, !dbg !13429
  br i1 %tobool3, label %if.then.4, label %if.end.6, !dbg !13430

if.then.4:                                        ; preds = %if.end
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13431, !tbaa !2505
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13433, !tbaa !2505
  %call5 = call zeroext i8 @mpd_sign(%struct.mpd_t* %9), !dbg !13434
  %10 = load i64, i64* %exp.addr, align 8, !dbg !13435, !tbaa !2391
  call void @_settriple(%struct.mpd_t* %8, i8 zeroext %call5, i64 0, i64 %10), !dbg !13436
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13437

if.end.6:                                         ; preds = %if.end
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13438, !tbaa !2505
  %exp7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 1, !dbg !13439
  %12 = load i64, i64* %exp7, align 8, !dbg !13439, !tbaa !2510
  %13 = load i64, i64* %exp.addr, align 8, !dbg !13440, !tbaa !2391
  %sub = sub i64 %12, %13, !dbg !13441
  store i64 %sub, i64* %expdiff, align 8, !dbg !13442, !tbaa !2391
  %14 = load i64, i64* %expdiff, align 8, !dbg !13443, !tbaa !2391
  %cmp = icmp sge i64 %14, 0, !dbg !13445
  br i1 %cmp, label %if.then.8, label %if.else, !dbg !13446

if.then.8:                                        ; preds = %if.end.6
  %15 = load i64, i64* %expdiff, align 8, !dbg !13447, !tbaa !2391
  store i64 %15, i64* %shift, align 8, !dbg !13449, !tbaa !2391
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13450, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %16, i32 0, i32 2, !dbg !13452
  %17 = load i64, i64* %digits, align 8, !dbg !13452, !tbaa !2514
  %18 = load i64, i64* %shift, align 8, !dbg !13453, !tbaa !2391
  %add = add i64 %17, %18, !dbg !13454
  %cmp9 = icmp sgt i64 %add, 1000000000000000000, !dbg !13455
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !13456

if.then.10:                                       ; preds = %if.then.8
  %19 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13457, !tbaa !2505
  %20 = load i32*, i32** %status.addr, align 8, !dbg !13459, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %19, i32 256, i32* %20), !dbg !13460
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13461

if.end.11:                                        ; preds = %if.then.8
  %21 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13462, !tbaa !2505
  %22 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13464, !tbaa !2505
  %23 = load i64, i64* %shift, align 8, !dbg !13465, !tbaa !2391
  %24 = load i32*, i32** %status.addr, align 8, !dbg !13466, !tbaa !2505
  %call12 = call i32 @mpd_qshiftl(%struct.mpd_t* %21, %struct.mpd_t* %22, i64 %23, i32* %24), !dbg !13467
  %tobool13 = icmp ne i32 %call12, 0, !dbg !13467
  br i1 %tobool13, label %if.end.15, label %if.then.14, !dbg !13468

if.then.14:                                       ; preds = %if.end.11
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13469

if.end.15:                                        ; preds = %if.end.11
  %25 = load i64, i64* %exp.addr, align 8, !dbg !13471, !tbaa !2391
  %26 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13472, !tbaa !2505
  %exp16 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %26, i32 0, i32 1, !dbg !13473
  store i64 %25, i64* %exp16, align 8, !dbg !13474, !tbaa !2510
  br label %if.end.27, !dbg !13475

if.else:                                          ; preds = %if.end.6
  %27 = load i64, i64* %expdiff, align 8, !dbg !13476, !tbaa !2391
  %sub17 = sub i64 0, %27, !dbg !13478
  store i64 %sub17, i64* %shift, align 8, !dbg !13479, !tbaa !2391
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13480, !tbaa !2505
  %29 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13481, !tbaa !2505
  %30 = load i64, i64* %shift, align 8, !dbg !13482, !tbaa !2391
  %31 = load i32*, i32** %status.addr, align 8, !dbg !13483, !tbaa !2505
  %call18 = call i64 @mpd_qshiftr(%struct.mpd_t* %28, %struct.mpd_t* %29, i64 %30, i32* %31), !dbg !13484
  store i64 %call18, i64* %rnd, align 8, !dbg !13485, !tbaa !2391
  %32 = load i64, i64* %rnd, align 8, !dbg !13486, !tbaa !2391
  %cmp19 = icmp eq i64 %32, -1, !dbg !13488
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !13489

if.then.20:                                       ; preds = %if.else
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13490

if.end.21:                                        ; preds = %if.else
  %33 = load i64, i64* %exp.addr, align 8, !dbg !13492, !tbaa !2391
  %34 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13493, !tbaa !2505
  %exp22 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %34, i32 0, i32 1, !dbg !13494
  store i64 %33, i64* %exp22, align 8, !dbg !13495, !tbaa !2510
  %35 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13496, !tbaa !2505
  %36 = load i64, i64* %rnd, align 8, !dbg !13497, !tbaa !2391
  %37 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13498, !tbaa !2505
  %38 = load i32*, i32** %status.addr, align 8, !dbg !13499, !tbaa !2505
  call void @_mpd_apply_round_excess(%struct.mpd_t* %35, i64 %36, %struct.mpd_context_t* %37, i32* %38), !dbg !13500
  %39 = load i32*, i32** %status.addr, align 8, !dbg !13501, !tbaa !2505
  %40 = load i32, i32* %39, align 4, !dbg !13502, !tbaa !2554
  %or = or i32 %40, 4096, !dbg !13502
  store i32 %or, i32* %39, align 4, !dbg !13502, !tbaa !2554
  %41 = load i64, i64* %rnd, align 8, !dbg !13503, !tbaa !2391
  %tobool23 = icmp ne i64 %41, 0, !dbg !13503
  br i1 %tobool23, label %if.then.24, label %if.end.26, !dbg !13505

if.then.24:                                       ; preds = %if.end.21
  %42 = load i32*, i32** %status.addr, align 8, !dbg !13506, !tbaa !2505
  %43 = load i32, i32* %42, align 4, !dbg !13508, !tbaa !2554
  %or25 = or i32 %43, 64, !dbg !13508
  store i32 %or25, i32* %42, align 4, !dbg !13508, !tbaa !2554
  br label %if.end.26, !dbg !13509

if.end.26:                                        ; preds = %if.then.24, %if.end.21
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.end.15
  %44 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13510, !tbaa !2505
  %45 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13512, !tbaa !2505
  %call28 = call i32 @mpd_issubnormal(%struct.mpd_t* %44, %struct.mpd_context_t* %45), !dbg !13513
  %tobool29 = icmp ne i32 %call28, 0, !dbg !13513
  br i1 %tobool29, label %if.then.30, label %if.end.32, !dbg !13514

if.then.30:                                       ; preds = %if.end.27
  %46 = load i32*, i32** %status.addr, align 8, !dbg !13515, !tbaa !2505
  %47 = load i32, i32* %46, align 4, !dbg !13517, !tbaa !2554
  %or31 = or i32 %47, 8192, !dbg !13517
  store i32 %or31, i32* %46, align 4, !dbg !13517, !tbaa !2554
  br label %if.end.32, !dbg !13518

if.end.32:                                        ; preds = %if.then.30, %if.end.27
  store i32 0, i32* %cleanup.dest.slot, !dbg !13519
  br label %cleanup, !dbg !13519

cleanup:                                          ; preds = %if.end.32, %if.then.20, %if.then.14, %if.then.10, %if.then.4, %if.then
  %48 = bitcast i64* %rnd to i8*, !dbg !13520
  call void @llvm.lifetime.end(i64 8, i8* %48) #4, !dbg !13520
  %49 = bitcast i64* %shift to i8*, !dbg !13520
  call void @llvm.lifetime.end(i64 8, i8* %49) #4, !dbg !13520
  %50 = bitcast i64* %expdiff to i8*, !dbg !13520
  call void @llvm.lifetime.end(i64 8, i8* %50) #4, !dbg !13520
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !13519

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qrescale_fmt(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %exp, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %exp.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1291, metadata !2395), !dbg !13522
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1292, metadata !2395), !dbg !13523
  store i64 %exp, i64* %exp.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %exp.addr, metadata !1293, metadata !2395), !dbg !13524
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1294, metadata !2395), !dbg !13525
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1295, metadata !2395), !dbg !13526
  %0 = load i64, i64* %exp.addr, align 8, !dbg !13527, !tbaa !2391
  %cmp = icmp sgt i64 %0, 1000000000000000000, !dbg !13529
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13530

lor.lhs.false:                                    ; preds = %entry
  %1 = load i64, i64* %exp.addr, align 8, !dbg !13531, !tbaa !2391
  %cmp1 = icmp slt i64 %1, -2999999999999999996, !dbg !13533
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13534

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13535, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !13537, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %2, i32 256, i32* %3), !dbg !13538
  br label %return, !dbg !13539

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13540, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13541, !tbaa !2505
  %6 = load i64, i64* %exp.addr, align 8, !dbg !13542, !tbaa !2391
  %7 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13543, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !13544, !tbaa !2505
  call void @_mpd_qrescale(%struct.mpd_t* %4, %struct.mpd_t* %5, i64 %6, %struct.mpd_context_t* %7, i32* %8), !dbg !13545
  br label %return, !dbg !13546

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13547
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qround_to_intx(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1298, metadata !2395), !dbg !13549
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1299, metadata !2395), !dbg !13550
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1300, metadata !2395), !dbg !13551
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1301, metadata !2395), !dbg !13552
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13553, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13554, !tbaa !2505
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13555, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !13556, !tbaa !2505
  call void @_mpd_qround_to_integral(i32 0, %struct.mpd_t* %0, %struct.mpd_t* %1, %struct.mpd_context_t* %2, i32* %3), !dbg !13557
  ret void, !dbg !13558
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qround_to_integral(i32 %action, %struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %action.addr = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %rnd = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i32 %action, i32* %action.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !2244, metadata !2395), !dbg !13559
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !2245, metadata !2395), !dbg !13560
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !2246, metadata !2395), !dbg !13561
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !2247, metadata !2395), !dbg !13562
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2248, metadata !2395), !dbg !13563
  %0 = bitcast i64* %rnd to i8*, !dbg !13564
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !13564
  call void @llvm.dbg.declare(metadata i64* %rnd, metadata !2249, metadata !2395), !dbg !13565
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13566, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %1), !dbg !13568
  %tobool = icmp ne i32 %call, 0, !dbg !13568
  br i1 %tobool, label %if.then, label %if.end.5, !dbg !13569

if.then:                                          ; preds = %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13570, !tbaa !2505
  %3 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13573, !tbaa !2505
  %4 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13574, !tbaa !2505
  %5 = load i32*, i32** %status.addr, align 8, !dbg !13575, !tbaa !2505
  %call1 = call i32 @mpd_qcheck_nan(%struct.mpd_t* %2, %struct.mpd_t* %3, %struct.mpd_context_t* %4, i32* %5), !dbg !13576
  %tobool2 = icmp ne i32 %call1, 0, !dbg !13576
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !13577

if.then.3:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13578

if.end:                                           ; preds = %if.then
  %6 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13580, !tbaa !2505
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13581, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !13582, !tbaa !2505
  %call4 = call i32 @mpd_qcopy(%struct.mpd_t* %6, %struct.mpd_t* %7, i32* %8), !dbg !13583
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13584

if.end.5:                                         ; preds = %entry
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13585, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 1, !dbg !13587
  %10 = load i64, i64* %exp, align 8, !dbg !13587, !tbaa !2510
  %cmp = icmp sge i64 %10, 0, !dbg !13588
  br i1 %cmp, label %if.then.6, label %if.end.8, !dbg !13589

if.then.6:                                        ; preds = %if.end.5
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13590, !tbaa !2505
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13592, !tbaa !2505
  %13 = load i32*, i32** %status.addr, align 8, !dbg !13593, !tbaa !2505
  %call7 = call i32 @mpd_qcopy(%struct.mpd_t* %11, %struct.mpd_t* %12, i32* %13), !dbg !13594
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13595

if.end.8:                                         ; preds = %if.end.5
  %14 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13596, !tbaa !2505
  %call9 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %14), !dbg !13598
  %tobool10 = icmp ne i32 %call9, 0, !dbg !13598
  br i1 %tobool10, label %if.then.11, label %if.end.13, !dbg !13599

if.then.11:                                       ; preds = %if.end.8
  %15 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13600, !tbaa !2505
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13602, !tbaa !2505
  %call12 = call zeroext i8 @mpd_sign(%struct.mpd_t* %16), !dbg !13603
  call void @_settriple(%struct.mpd_t* %15, i8 zeroext %call12, i64 0, i64 0), !dbg !13604
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13605

if.end.13:                                        ; preds = %if.end.8
  %17 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13606, !tbaa !2505
  %18 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13607, !tbaa !2505
  %19 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13608, !tbaa !2505
  %exp14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %19, i32 0, i32 1, !dbg !13609
  %20 = load i64, i64* %exp14, align 8, !dbg !13609, !tbaa !2510
  %sub = sub i64 0, %20, !dbg !13610
  %21 = load i32*, i32** %status.addr, align 8, !dbg !13611, !tbaa !2505
  %call15 = call i64 @mpd_qshiftr(%struct.mpd_t* %17, %struct.mpd_t* %18, i64 %sub, i32* %21), !dbg !13612
  store i64 %call15, i64* %rnd, align 8, !dbg !13613, !tbaa !2391
  %22 = load i64, i64* %rnd, align 8, !dbg !13614, !tbaa !2391
  %cmp16 = icmp eq i64 %22, -1, !dbg !13616
  br i1 %cmp16, label %if.then.17, label %if.end.18, !dbg !13617

if.then.17:                                       ; preds = %if.end.13
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13618

if.end.18:                                        ; preds = %if.end.13
  %23 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13620, !tbaa !2505
  %exp19 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %23, i32 0, i32 1, !dbg !13621
  store i64 0, i64* %exp19, align 8, !dbg !13622, !tbaa !2510
  %24 = load i32, i32* %action.addr, align 4, !dbg !13623, !tbaa !2554
  %cmp20 = icmp eq i32 %24, 0, !dbg !13625
  br i1 %cmp20, label %if.then.22, label %lor.lhs.false, !dbg !13626

lor.lhs.false:                                    ; preds = %if.end.18
  %25 = load i32, i32* %action.addr, align 4, !dbg !13627, !tbaa !2554
  %cmp21 = icmp eq i32 %25, 1, !dbg !13629
  br i1 %cmp21, label %if.then.22, label %if.end.30, !dbg !13630

if.then.22:                                       ; preds = %lor.lhs.false, %if.end.18
  %26 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13631, !tbaa !2505
  %27 = load i64, i64* %rnd, align 8, !dbg !13633, !tbaa !2391
  %28 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13634, !tbaa !2505
  %29 = load i32*, i32** %status.addr, align 8, !dbg !13635, !tbaa !2505
  call void @_mpd_apply_round_excess(%struct.mpd_t* %26, i64 %27, %struct.mpd_context_t* %28, i32* %29), !dbg !13636
  %30 = load i32, i32* %action.addr, align 4, !dbg !13637, !tbaa !2554
  %cmp23 = icmp eq i32 %30, 0, !dbg !13639
  br i1 %cmp23, label %if.then.24, label %if.end.29, !dbg !13640

if.then.24:                                       ; preds = %if.then.22
  %31 = load i32*, i32** %status.addr, align 8, !dbg !13641, !tbaa !2505
  %32 = load i32, i32* %31, align 4, !dbg !13643, !tbaa !2554
  %or = or i32 %32, 4096, !dbg !13643
  store i32 %or, i32* %31, align 4, !dbg !13643, !tbaa !2554
  %33 = load i64, i64* %rnd, align 8, !dbg !13644, !tbaa !2391
  %tobool25 = icmp ne i64 %33, 0, !dbg !13644
  br i1 %tobool25, label %if.then.26, label %if.end.28, !dbg !13646

if.then.26:                                       ; preds = %if.then.24
  %34 = load i32*, i32** %status.addr, align 8, !dbg !13647, !tbaa !2505
  %35 = load i32, i32* %34, align 4, !dbg !13649, !tbaa !2554
  %or27 = or i32 %35, 64, !dbg !13649
  store i32 %or27, i32* %34, align 4, !dbg !13649, !tbaa !2554
  br label %if.end.28, !dbg !13650

if.end.28:                                        ; preds = %if.then.26, %if.then.24
  br label %if.end.29, !dbg !13651

if.end.29:                                        ; preds = %if.end.28, %if.then.22
  br label %if.end.30, !dbg !13652

if.end.30:                                        ; preds = %if.end.29, %lor.lhs.false
  store i32 0, i32* %cleanup.dest.slot, !dbg !13653
  br label %cleanup, !dbg !13653

cleanup:                                          ; preds = %if.end.30, %if.then.17, %if.then.11, %if.then.6, %if.end, %if.then.3
  %36 = bitcast i64* %rnd to i8*, !dbg !13654
  call void @llvm.lifetime.end(i64 8, i8* %36) #4, !dbg !13654
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !13653

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qtrunc(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1310, metadata !2395), !dbg !13656
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1311, metadata !2395), !dbg !13657
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1312, metadata !2395), !dbg !13658
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1313, metadata !2395), !dbg !13659
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13660, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13661, !tbaa !2505
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13662, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !13663, !tbaa !2505
  call void @_mpd_qround_to_integral(i32 2, %struct.mpd_t* %0, %struct.mpd_t* %1, %struct.mpd_context_t* %2, i32* %3), !dbg !13664
  ret void, !dbg !13665
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qfloor(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workctx = alloca %struct.mpd_context_t, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1316, metadata !2395), !dbg !13666
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1317, metadata !2395), !dbg !13667
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1318, metadata !2395), !dbg !13668
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1319, metadata !2395), !dbg !13669
  %0 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !13670
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !13670
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %workctx, metadata !1320, metadata !2395), !dbg !13671
  %1 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13672, !tbaa !2505
  %2 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !13673
  %3 = bitcast %struct.mpd_context_t* %1 to i8*, !dbg !13673
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 48, i32 8, i1 false), !dbg !13673, !tbaa.struct !8991
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 6, !dbg !13674
  store i32 3, i32* %round, align 4, !dbg !13675, !tbaa !4148
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13676, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13677, !tbaa !2505
  %6 = load i32*, i32** %status.addr, align 8, !dbg !13678, !tbaa !2505
  call void @_mpd_qround_to_integral(i32 1, %struct.mpd_t* %4, %struct.mpd_t* %5, %struct.mpd_context_t* %workctx, i32* %6), !dbg !13679
  %7 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !13680
  call void @llvm.lifetime.end(i64 48, i8* %7) #4, !dbg !13680
  ret void, !dbg !13680
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qceil(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workctx = alloca %struct.mpd_context_t, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1323, metadata !2395), !dbg !13681
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1324, metadata !2395), !dbg !13682
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1325, metadata !2395), !dbg !13683
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1326, metadata !2395), !dbg !13684
  %0 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !13685
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !13685
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %workctx, metadata !1327, metadata !2395), !dbg !13686
  %1 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13687, !tbaa !2505
  %2 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !13688
  %3 = bitcast %struct.mpd_context_t* %1 to i8*, !dbg !13688
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 48, i32 8, i1 false), !dbg !13688, !tbaa.struct !8991
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 6, !dbg !13689
  store i32 2, i32* %round, align 4, !dbg !13690, !tbaa !4148
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13691, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13692, !tbaa !2505
  %6 = load i32*, i32** %status.addr, align 8, !dbg !13693, !tbaa !2505
  call void @_mpd_qround_to_integral(i32 1, %struct.mpd_t* %4, %struct.mpd_t* %5, %struct.mpd_context_t* %workctx, i32* %6), !dbg !13694
  %7 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !13695
  call void @llvm.lifetime.end(i64 48, i8* %7) #4, !dbg !13695
  ret void, !dbg !13695
}

; Function Attrs: nounwind uwtable
define hidden i32 @mpd_same_quantum(%struct.mpd_t* %a, %struct.mpd_t* %b) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1330, metadata !2395), !dbg !13696
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1331, metadata !2395), !dbg !13697
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13698, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %0), !dbg !13700
  %tobool = icmp ne i32 %call, 0, !dbg !13700
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !13701

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13702, !tbaa !2505
  %call1 = call i32 @mpd_isspecial(%struct.mpd_t* %1), !dbg !13704
  %tobool2 = icmp ne i32 %call1, 0, !dbg !13704
  br i1 %tobool2, label %if.then, label %if.end, !dbg !13705

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13706, !tbaa !2505
  %call3 = call i32 @mpd_isnan(%struct.mpd_t* %2), !dbg !13708
  %tobool4 = icmp ne i32 %call3, 0, !dbg !13708
  br i1 %tobool4, label %land.lhs.true, label %lor.rhs, !dbg !13709

land.lhs.true:                                    ; preds = %if.then
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13710, !tbaa !2505
  %call5 = call i32 @mpd_isnan(%struct.mpd_t* %3), !dbg !13712
  %tobool6 = icmp ne i32 %call5, 0, !dbg !13712
  br i1 %tobool6, label %lor.end, label %lor.rhs, !dbg !13713

lor.rhs:                                          ; preds = %land.lhs.true, %if.then
  %4 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13714, !tbaa !2505
  %call7 = call i32 @mpd_isinfinite(%struct.mpd_t* %4), !dbg !13715
  %tobool8 = icmp ne i32 %call7, 0, !dbg !13715
  br i1 %tobool8, label %land.rhs, label %land.end, !dbg !13716

land.rhs:                                         ; preds = %lor.rhs
  %5 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13717, !tbaa !2505
  %call9 = call i32 @mpd_isinfinite(%struct.mpd_t* %5), !dbg !13718
  %tobool10 = icmp ne i32 %call9, 0, !dbg !13716
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %6 = phi i1 [ false, %lor.rhs ], [ %tobool10, %land.rhs ]
  br label %lor.end, !dbg !13713

lor.end:                                          ; preds = %land.end, %land.lhs.true
  %7 = phi i1 [ true, %land.lhs.true ], [ %6, %land.end ]
  %lor.ext = zext i1 %7 to i32, !dbg !13719
  store i32 %lor.ext, i32* %retval, !dbg !13722
  br label %return, !dbg !13722

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13723, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %8, i32 0, i32 1, !dbg !13724
  %9 = load i64, i64* %exp, align 8, !dbg !13724, !tbaa !2510
  %10 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !13725, !tbaa !2505
  %exp11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %10, i32 0, i32 1, !dbg !13726
  %11 = load i64, i64* %exp11, align 8, !dbg !13726, !tbaa !2510
  %cmp = icmp eq i64 %9, %11, !dbg !13727
  %conv = zext i1 %cmp to i32, !dbg !13727
  store i32 %conv, i32* %retval, !dbg !13728
  br label %return, !dbg !13728

return:                                           ; preds = %if.end, %lor.end
  %12 = load i32, i32* %retval, !dbg !13729
  ret i32 %12, !dbg !13729
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qinvroot(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workctx = alloca %struct.mpd_context_t, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1334, metadata !2395), !dbg !13730
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1335, metadata !2395), !dbg !13731
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1336, metadata !2395), !dbg !13732
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1337, metadata !2395), !dbg !13733
  %0 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !13734
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !13734
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %workctx, metadata !1338, metadata !2395), !dbg !13735
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13736, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %1), !dbg !13738
  %tobool = icmp ne i32 %call, 0, !dbg !13738
  br i1 %tobool, label %if.then, label %if.end.9, !dbg !13739

if.then:                                          ; preds = %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13740, !tbaa !2505
  %3 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13743, !tbaa !2505
  %4 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13744, !tbaa !2505
  %5 = load i32*, i32** %status.addr, align 8, !dbg !13745, !tbaa !2505
  %call1 = call i32 @mpd_qcheck_nan(%struct.mpd_t* %2, %struct.mpd_t* %3, %struct.mpd_context_t* %4, i32* %5), !dbg !13746
  %tobool2 = icmp ne i32 %call1, 0, !dbg !13746
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !13747

if.then.3:                                        ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13748

if.end:                                           ; preds = %if.then
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13750, !tbaa !2505
  %call4 = call i32 @mpd_isnegative(%struct.mpd_t* %6), !dbg !13752
  %tobool5 = icmp ne i32 %call4, 0, !dbg !13752
  br i1 %tobool5, label %if.then.6, label %if.end.7, !dbg !13753

if.then.6:                                        ; preds = %if.end
  %7 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13754, !tbaa !2505
  %8 = load i32*, i32** %status.addr, align 8, !dbg !13756, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %7, i32 256, i32* %8), !dbg !13757
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13758

if.end.7:                                         ; preds = %if.end
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13759, !tbaa !2505
  %10 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13760, !tbaa !2505
  %call8 = call i64 @mpd_etiny(%struct.mpd_context_t* %10), !dbg !13761
  call void @_settriple(%struct.mpd_t* %9, i8 zeroext 0, i64 0, i64 %call8), !dbg !13762
  %11 = load i32*, i32** %status.addr, align 8, !dbg !13763, !tbaa !2505
  %12 = load i32, i32* %11, align 4, !dbg !13764, !tbaa !2554
  %or = or i32 %12, 1, !dbg !13764
  store i32 %or, i32* %11, align 4, !dbg !13764, !tbaa !2554
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13765

if.end.9:                                         ; preds = %entry
  %13 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13766, !tbaa !2505
  %call10 = call i32 @mpd_iszero(%struct.mpd_t* %13), !dbg !13768
  %tobool11 = icmp ne i32 %call10, 0, !dbg !13768
  br i1 %tobool11, label %if.then.12, label %if.end.15, !dbg !13769

if.then.12:                                       ; preds = %if.end.9
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13770, !tbaa !2505
  %15 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13772, !tbaa !2505
  %call13 = call zeroext i8 @mpd_sign(%struct.mpd_t* %15), !dbg !13773
  call void @mpd_setspecial(%struct.mpd_t* %14, i8 zeroext %call13, i8 zeroext 2), !dbg !13774
  %16 = load i32*, i32** %status.addr, align 8, !dbg !13775, !tbaa !2505
  %17 = load i32, i32* %16, align 4, !dbg !13776, !tbaa !2554
  %or14 = or i32 %17, 4, !dbg !13776
  store i32 %or14, i32* %16, align 4, !dbg !13776, !tbaa !2554
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13777

if.end.15:                                        ; preds = %if.end.9
  %18 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13778, !tbaa !2505
  %call16 = call i32 @mpd_isnegative(%struct.mpd_t* %18), !dbg !13780
  %tobool17 = icmp ne i32 %call16, 0, !dbg !13780
  br i1 %tobool17, label %if.then.18, label %if.end.19, !dbg !13781

if.then.18:                                       ; preds = %if.end.15
  %19 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13782, !tbaa !2505
  %20 = load i32*, i32** %status.addr, align 8, !dbg !13784, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %19, i32 256, i32* %20), !dbg !13785
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13786

if.end.19:                                        ; preds = %if.end.15
  %21 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13787, !tbaa !2505
  %22 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !13788
  %23 = bitcast %struct.mpd_context_t* %21 to i8*, !dbg !13788
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 48, i32 8, i1 false), !dbg !13788, !tbaa.struct !8991
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !13789
  %24 = load i64, i64* %prec, align 8, !dbg !13790, !tbaa !2526
  %add = add i64 %24, 2, !dbg !13790
  store i64 %add, i64* %prec, align 8, !dbg !13790, !tbaa !2526
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 6, !dbg !13791
  store i32 6, i32* %round, align 4, !dbg !13792, !tbaa !4148
  %25 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13793, !tbaa !2505
  %26 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13794, !tbaa !2505
  %27 = load i32*, i32** %status.addr, align 8, !dbg !13795, !tbaa !2505
  call void @_mpd_qinvroot(%struct.mpd_t* %25, %struct.mpd_t* %26, %struct.mpd_context_t* %workctx, i32* %27), !dbg !13796
  %28 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13797, !tbaa !2505
  %29 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !13798, !tbaa !2505
  %30 = load i32*, i32** %status.addr, align 8, !dbg !13799, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %28, %struct.mpd_context_t* %29, i32* %30), !dbg !13800
  store i32 0, i32* %cleanup.dest.slot, !dbg !13801
  br label %cleanup, !dbg !13801

cleanup:                                          ; preds = %if.end.19, %if.then.18, %if.then.12, %if.end.7, %if.then.6, %if.then.3
  %31 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !13802
  call void @llvm.lifetime.end(i64 48, i8* %31) #4, !dbg !13802
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !13801

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qinvroot(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workstatus = alloca i32, align 4
  %varcontext = alloca %struct.mpd_context_t, align 8
  %maxcontext = alloca %struct.mpd_context_t, align 8
  %z = alloca %struct.mpd_t*, align 8
  %v = alloca %struct.mpd_t*, align 8
  %vtmp = alloca %struct.mpd_t, align 8
  %s_data = alloca [64 x i64], align 16
  %s = alloca %struct.mpd_t, align 8
  %t_data = alloca [64 x i64], align 16
  %t = alloca %struct.mpd_t, align 8
  %one_half_data = alloca [1 x i64], align 8
  %one_half = alloca %struct.mpd_t, align 8
  %three_data = alloca [1 x i64], align 8
  %three = alloca %struct.mpd_t, align 8
  %klist = alloca [64 x i64], align 16
  %ideal_exp = alloca i64, align 8
  %shift = alloca i64, align 8
  %adj = alloca i64, align 8
  %tz = alloca i64, align 8
  %maxprec = alloca i64, align 8
  %fracdigits = alloca i64, align 8
  %vhat = alloca i64, align 8
  %dummy = alloca i64, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !2252, metadata !2395), !dbg !13804
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !2253, metadata !2395), !dbg !13805
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !2254, metadata !2395), !dbg !13806
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2255, metadata !2395), !dbg !13807
  %0 = bitcast i32* %workstatus to i8*, !dbg !13808
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !13808
  call void @llvm.dbg.declare(metadata i32* %workstatus, metadata !2256, metadata !2395), !dbg !13809
  store i32 0, i32* %workstatus, align 4, !dbg !13809, !tbaa !2554
  %1 = bitcast %struct.mpd_context_t* %varcontext to i8*, !dbg !13810
  call void @llvm.lifetime.start(i64 48, i8* %1) #4, !dbg !13810
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %varcontext, metadata !2257, metadata !2395), !dbg !13811
  %2 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !13810
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !13810
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxcontext, metadata !2258, metadata !2395), !dbg !13812
  %3 = bitcast %struct.mpd_t** %z to i8*, !dbg !13813
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !13813
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %z, metadata !2259, metadata !2395), !dbg !13814
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13815, !tbaa !2505
  store %struct.mpd_t* %4, %struct.mpd_t** %z, align 8, !dbg !13814, !tbaa !2505
  %5 = bitcast %struct.mpd_t** %v to i8*, !dbg !13816
  call void @llvm.lifetime.start(i64 8, i8* %5) #4, !dbg !13816
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %v, metadata !2260, metadata !2395), !dbg !13817
  %6 = bitcast %struct.mpd_t* %vtmp to i8*, !dbg !13818
  call void @llvm.lifetime.start(i64 48, i8* %6) #4, !dbg !13818
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %vtmp, metadata !2261, metadata !2395), !dbg !13819
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 0, !dbg !13820
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13821, !tbaa !2505
  %flags1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %7, i32 0, i32 0, !dbg !13822
  %8 = load i8, i8* %flags1, align 1, !dbg !13822, !tbaa !2620
  %conv = zext i8 %8 to i32, !dbg !13821
  %and = and i32 %conv, -225, !dbg !13823
  %or = or i32 %and, 16, !dbg !13824
  %or2 = or i32 %or, 64, !dbg !13825
  %conv3 = trunc i32 %or2 to i8, !dbg !13826
  store i8 %conv3, i8* %flags, align 1, !dbg !13820, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 1, !dbg !13820
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13827, !tbaa !2505
  %exp4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 1, !dbg !13828
  %10 = load i64, i64* %exp4, align 8, !dbg !13828, !tbaa !2510
  store i64 %10, i64* %exp, align 8, !dbg !13820, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 2, !dbg !13820
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13829, !tbaa !2505
  %digits5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 2, !dbg !13830
  %12 = load i64, i64* %digits5, align 8, !dbg !13830, !tbaa !2514
  store i64 %12, i64* %digits, align 8, !dbg !13820, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 3, !dbg !13820
  %13 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13831, !tbaa !2505
  %len6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %13, i32 0, i32 3, !dbg !13832
  %14 = load i64, i64* %len6, align 8, !dbg !13832, !tbaa !2542
  store i64 %14, i64* %len, align 8, !dbg !13820, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 4, !dbg !13820
  %15 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13833, !tbaa !2505
  %alloc7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %15, i32 0, i32 4, !dbg !13834
  %16 = load i64, i64* %alloc7, align 8, !dbg !13834, !tbaa !2835
  store i64 %16, i64* %alloc, align 8, !dbg !13820, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 5, !dbg !13820
  %17 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13835, !tbaa !2505
  %data8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 5, !dbg !13836
  %18 = load i64*, i64** %data8, align 8, !dbg !13836, !tbaa !2546
  store i64* %18, i64** %data, align 8, !dbg !13820, !tbaa !2546
  %19 = bitcast [64 x i64]* %s_data to i8*, !dbg !13837
  call void @llvm.lifetime.start(i64 512, i8* %19) #4, !dbg !13837
  call void @llvm.dbg.declare(metadata [64 x i64]* %s_data, metadata !2262, metadata !2395), !dbg !13838
  %20 = bitcast %struct.mpd_t* %s to i8*, !dbg !13839
  call void @llvm.lifetime.start(i64 48, i8* %20) #4, !dbg !13839
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %s, metadata !2263, metadata !2395), !dbg !13840
  %flags9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %s, i32 0, i32 0, !dbg !13841
  store i8 48, i8* %flags9, align 1, !dbg !13841, !tbaa !2620
  %exp10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %s, i32 0, i32 1, !dbg !13841
  store i64 0, i64* %exp10, align 8, !dbg !13841, !tbaa !2510
  %digits11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %s, i32 0, i32 2, !dbg !13841
  store i64 0, i64* %digits11, align 8, !dbg !13841, !tbaa !2514
  %len12 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %s, i32 0, i32 3, !dbg !13841
  store i64 0, i64* %len12, align 8, !dbg !13841, !tbaa !2542
  %alloc13 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %s, i32 0, i32 4, !dbg !13841
  store i64 64, i64* %alloc13, align 8, !dbg !13841, !tbaa !2835
  %data14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %s, i32 0, i32 5, !dbg !13841
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %s_data, i32 0, i32 0, !dbg !13842
  store i64* %arraydecay, i64** %data14, align 8, !dbg !13841, !tbaa !2546
  %21 = bitcast [64 x i64]* %t_data to i8*, !dbg !13843
  call void @llvm.lifetime.start(i64 512, i8* %21) #4, !dbg !13843
  call void @llvm.dbg.declare(metadata [64 x i64]* %t_data, metadata !2264, metadata !2395), !dbg !13844
  %22 = bitcast %struct.mpd_t* %t to i8*, !dbg !13845
  call void @llvm.lifetime.start(i64 48, i8* %22) #4, !dbg !13845
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %t, metadata !2265, metadata !2395), !dbg !13846
  %flags15 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t, i32 0, i32 0, !dbg !13847
  store i8 48, i8* %flags15, align 1, !dbg !13847, !tbaa !2620
  %exp16 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t, i32 0, i32 1, !dbg !13847
  store i64 0, i64* %exp16, align 8, !dbg !13847, !tbaa !2510
  %digits17 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t, i32 0, i32 2, !dbg !13847
  store i64 0, i64* %digits17, align 8, !dbg !13847, !tbaa !2514
  %len18 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t, i32 0, i32 3, !dbg !13847
  store i64 0, i64* %len18, align 8, !dbg !13847, !tbaa !2542
  %alloc19 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t, i32 0, i32 4, !dbg !13847
  store i64 64, i64* %alloc19, align 8, !dbg !13847, !tbaa !2835
  %data20 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t, i32 0, i32 5, !dbg !13847
  %arraydecay21 = getelementptr inbounds [64 x i64], [64 x i64]* %t_data, i32 0, i32 0, !dbg !13848
  store i64* %arraydecay21, i64** %data20, align 8, !dbg !13847, !tbaa !2546
  %23 = bitcast [1 x i64]* %one_half_data to i8*, !dbg !13849
  call void @llvm.lifetime.start(i64 8, i8* %23) #4, !dbg !13849
  call void @llvm.dbg.declare(metadata [1 x i64]* %one_half_data, metadata !2266, metadata !2395), !dbg !13850
  %24 = bitcast [1 x i64]* %one_half_data to i8*, !dbg !13850
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* bitcast ([1 x i64]* @_mpd_qinvroot.one_half_data to i8*), i64 8, i32 8, i1 false), !dbg !13850
  %25 = bitcast %struct.mpd_t* %one_half to i8*, !dbg !13851
  call void @llvm.lifetime.start(i64 48, i8* %25) #4, !dbg !13851
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %one_half, metadata !2267, metadata !2395), !dbg !13852
  %flags22 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %one_half, i32 0, i32 0, !dbg !13853
  store i8 -112, i8* %flags22, align 1, !dbg !13853, !tbaa !2620
  %exp23 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %one_half, i32 0, i32 1, !dbg !13853
  store i64 -1, i64* %exp23, align 8, !dbg !13853, !tbaa !2510
  %digits24 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %one_half, i32 0, i32 2, !dbg !13853
  store i64 1, i64* %digits24, align 8, !dbg !13853, !tbaa !2514
  %len25 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %one_half, i32 0, i32 3, !dbg !13853
  store i64 1, i64* %len25, align 8, !dbg !13853, !tbaa !2542
  %alloc26 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %one_half, i32 0, i32 4, !dbg !13853
  store i64 1, i64* %alloc26, align 8, !dbg !13853, !tbaa !2835
  %data27 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %one_half, i32 0, i32 5, !dbg !13853
  %arraydecay28 = getelementptr inbounds [1 x i64], [1 x i64]* %one_half_data, i32 0, i32 0, !dbg !13854
  store i64* %arraydecay28, i64** %data27, align 8, !dbg !13853, !tbaa !2546
  %26 = bitcast [1 x i64]* %three_data to i8*, !dbg !13855
  call void @llvm.lifetime.start(i64 8, i8* %26) #4, !dbg !13855
  call void @llvm.dbg.declare(metadata [1 x i64]* %three_data, metadata !2268, metadata !2395), !dbg !13856
  %27 = bitcast [1 x i64]* %three_data to i8*, !dbg !13856
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* bitcast ([1 x i64]* @_mpd_qinvroot.three_data to i8*), i64 8, i32 8, i1 false), !dbg !13856
  %28 = bitcast %struct.mpd_t* %three to i8*, !dbg !13857
  call void @llvm.lifetime.start(i64 48, i8* %28) #4, !dbg !13857
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %three, metadata !2269, metadata !2395), !dbg !13858
  %flags29 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %three, i32 0, i32 0, !dbg !13859
  store i8 -112, i8* %flags29, align 1, !dbg !13859, !tbaa !2620
  %exp30 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %three, i32 0, i32 1, !dbg !13859
  store i64 0, i64* %exp30, align 8, !dbg !13859, !tbaa !2510
  %digits31 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %three, i32 0, i32 2, !dbg !13859
  store i64 1, i64* %digits31, align 8, !dbg !13859, !tbaa !2514
  %len32 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %three, i32 0, i32 3, !dbg !13859
  store i64 1, i64* %len32, align 8, !dbg !13859, !tbaa !2542
  %alloc33 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %three, i32 0, i32 4, !dbg !13859
  store i64 1, i64* %alloc33, align 8, !dbg !13859, !tbaa !2835
  %data34 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %three, i32 0, i32 5, !dbg !13859
  %arraydecay35 = getelementptr inbounds [1 x i64], [1 x i64]* %three_data, i32 0, i32 0, !dbg !13860
  store i64* %arraydecay35, i64** %data34, align 8, !dbg !13859, !tbaa !2546
  %29 = bitcast [64 x i64]* %klist to i8*, !dbg !13861
  call void @llvm.lifetime.start(i64 512, i8* %29) #4, !dbg !13861
  call void @llvm.dbg.declare(metadata [64 x i64]* %klist, metadata !2270, metadata !2395), !dbg !13862
  %30 = bitcast i64* %ideal_exp to i8*, !dbg !13863
  call void @llvm.lifetime.start(i64 8, i8* %30) #4, !dbg !13863
  call void @llvm.dbg.declare(metadata i64* %ideal_exp, metadata !2271, metadata !2395), !dbg !13864
  %31 = bitcast i64* %shift to i8*, !dbg !13863
  call void @llvm.lifetime.start(i64 8, i8* %31) #4, !dbg !13863
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !2272, metadata !2395), !dbg !13865
  %32 = bitcast i64* %adj to i8*, !dbg !13866
  call void @llvm.lifetime.start(i64 8, i8* %32) #4, !dbg !13866
  call void @llvm.dbg.declare(metadata i64* %adj, metadata !2273, metadata !2395), !dbg !13867
  %33 = bitcast i64* %tz to i8*, !dbg !13866
  call void @llvm.lifetime.start(i64 8, i8* %33) #4, !dbg !13866
  call void @llvm.dbg.declare(metadata i64* %tz, metadata !2274, metadata !2395), !dbg !13868
  %34 = bitcast i64* %maxprec to i8*, !dbg !13869
  call void @llvm.lifetime.start(i64 8, i8* %34) #4, !dbg !13869
  call void @llvm.dbg.declare(metadata i64* %maxprec, metadata !2275, metadata !2395), !dbg !13870
  %35 = bitcast i64* %fracdigits to i8*, !dbg !13869
  call void @llvm.lifetime.start(i64 8, i8* %35) #4, !dbg !13869
  call void @llvm.dbg.declare(metadata i64* %fracdigits, metadata !2276, metadata !2395), !dbg !13871
  %36 = bitcast i64* %vhat to i8*, !dbg !13872
  call void @llvm.lifetime.start(i64 8, i8* %36) #4, !dbg !13872
  call void @llvm.dbg.declare(metadata i64* %vhat, metadata !2277, metadata !2395), !dbg !13873
  %37 = bitcast i64* %dummy to i8*, !dbg !13872
  call void @llvm.lifetime.start(i64 8, i8* %37) #4, !dbg !13872
  call void @llvm.dbg.declare(metadata i64* %dummy, metadata !2278, metadata !2395), !dbg !13874
  %38 = bitcast i32* %i to i8*, !dbg !13875
  call void @llvm.lifetime.start(i64 4, i8* %38) #4, !dbg !13875
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2279, metadata !2395), !dbg !13876
  %39 = bitcast i32* %n to i8*, !dbg !13875
  call void @llvm.lifetime.start(i64 4, i8* %39) #4, !dbg !13875
  call void @llvm.dbg.declare(metadata i32* %n, metadata !2280, metadata !2395), !dbg !13877
  %40 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13878, !tbaa !2505
  %exp36 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %40, i32 0, i32 1, !dbg !13879
  %41 = load i64, i64* %exp36, align 8, !dbg !13879, !tbaa !2510
  %42 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13880, !tbaa !2505
  %exp37 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %42, i32 0, i32 1, !dbg !13881
  %43 = load i64, i64* %exp37, align 8, !dbg !13881, !tbaa !2510
  %and38 = and i64 %43, 1, !dbg !13882
  %sub = sub i64 %41, %and38, !dbg !13883
  %sub39 = sub i64 0, %sub, !dbg !13884
  %div = sdiv i64 %sub39, 2, !dbg !13885
  store i64 %div, i64* %ideal_exp, align 8, !dbg !13886, !tbaa !2391
  store %struct.mpd_t* %vtmp, %struct.mpd_t** %v, align 8, !dbg !13887, !tbaa !2505
  %44 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13888, !tbaa !2505
  %45 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13890, !tbaa !2505
  %cmp = icmp eq %struct.mpd_t* %44, %45, !dbg !13891
  br i1 %cmp, label %if.then, label %if.end.44, !dbg !13892

if.then:                                          ; preds = %entry
  %46 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13893, !tbaa !2505
  %call = call %struct.mpd_t* @mpd_qncopy(%struct.mpd_t* %46), !dbg !13896
  store %struct.mpd_t* %call, %struct.mpd_t** %v, align 8, !dbg !13897, !tbaa !2505
  %cmp41 = icmp eq %struct.mpd_t* %call, null, !dbg !13898
  br i1 %cmp41, label %if.then.43, label %if.end, !dbg !13899

if.then.43:                                       ; preds = %if.then
  %47 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !13900, !tbaa !2505
  %48 = load i32*, i32** %status.addr, align 8, !dbg !13902, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %47, i32 512, i32* %48), !dbg !13903
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13904

if.end:                                           ; preds = %if.then
  br label %if.end.44, !dbg !13905

if.end.44:                                        ; preds = %if.end, %entry
  %49 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !13906, !tbaa !2505
  %digits45 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %49, i32 0, i32 2, !dbg !13908
  %50 = load i64, i64* %digits45, align 8, !dbg !13908, !tbaa !2514
  %51 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !13909, !tbaa !2505
  %exp46 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %51, i32 0, i32 1, !dbg !13910
  %52 = load i64, i64* %exp46, align 8, !dbg !13910, !tbaa !2510
  %add = add i64 %50, %52, !dbg !13911
  %and47 = and i64 %add, 1, !dbg !13912
  %tobool = icmp ne i64 %and47, 0, !dbg !13912
  br i1 %tobool, label %if.then.48, label %if.else, !dbg !13913

if.then.48:                                       ; preds = %if.end.44
  %53 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !13914, !tbaa !2505
  %digits49 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %53, i32 0, i32 2, !dbg !13916
  %54 = load i64, i64* %digits49, align 8, !dbg !13916, !tbaa !2514
  %sub50 = sub i64 %54, 1, !dbg !13917
  store i64 %sub50, i64* %fracdigits, align 8, !dbg !13918, !tbaa !2391
  %55 = load i64, i64* %fracdigits, align 8, !dbg !13919, !tbaa !2391
  %sub51 = sub i64 0, %55, !dbg !13920
  %56 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !13921, !tbaa !2505
  %exp52 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %56, i32 0, i32 1, !dbg !13922
  store i64 %sub51, i64* %exp52, align 8, !dbg !13923, !tbaa !2510
  %57 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !13924, !tbaa !2505
  %digits53 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %57, i32 0, i32 2, !dbg !13925
  %58 = load i64, i64* %digits53, align 8, !dbg !13925, !tbaa !2514
  %cmp54 = icmp sgt i64 %58, 7, !dbg !13926
  br i1 %cmp54, label %cond.true, label %cond.false, !dbg !13927

cond.true:                                        ; preds = %if.then.48
  br label %cond.end, !dbg !13928

cond.false:                                       ; preds = %if.then.48
  %59 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !13930, !tbaa !2505
  %digits56 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %59, i32 0, i32 2, !dbg !13932
  %60 = load i64, i64* %digits56, align 8, !dbg !13932, !tbaa !2514
  %conv57 = trunc i64 %60 to i32, !dbg !13933
  br label %cond.end, !dbg !13927

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 7, %cond.true ], [ %conv57, %cond.false ], !dbg !13927
  store i32 %cond, i32* %n, align 4, !dbg !13934, !tbaa !2554
  %61 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !13937, !tbaa !2505
  %62 = load i32, i32* %n, align 4, !dbg !13938, !tbaa !2554
  call void @_mpd_get_msdigits(i64* %dummy, i64* %vhat, %struct.mpd_t* %61, i32 %62), !dbg !13939
  %63 = load i32, i32* %n, align 4, !dbg !13940, !tbaa !2554
  %cmp58 = icmp slt i32 %63, 7, !dbg !13942
  br i1 %cmp58, label %if.then.60, label %if.end.62, !dbg !13943

if.then.60:                                       ; preds = %cond.end
  %64 = load i32, i32* %n, align 4, !dbg !13944, !tbaa !2554
  %sub61 = sub i32 7, %64, !dbg !13946
  %idxprom = sext i32 %sub61 to i64, !dbg !13947
  %arrayidx = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %idxprom, !dbg !13947
  %65 = load i64, i64* %arrayidx, align 8, !dbg !13947, !tbaa !2391
  %66 = load i64, i64* %vhat, align 8, !dbg !13948, !tbaa !2391
  %mul = mul i64 %66, %65, !dbg !13948
  store i64 %mul, i64* %vhat, align 8, !dbg !13948, !tbaa !2391
  br label %if.end.62, !dbg !13949

if.end.62:                                        ; preds = %if.then.60, %cond.end
  br label %if.end.84, !dbg !13950

if.else:                                          ; preds = %if.end.44
  %67 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !13951, !tbaa !2505
  %digits63 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %67, i32 0, i32 2, !dbg !13953
  %68 = load i64, i64* %digits63, align 8, !dbg !13953, !tbaa !2514
  %sub64 = sub i64 %68, 2, !dbg !13954
  store i64 %sub64, i64* %fracdigits, align 8, !dbg !13955, !tbaa !2391
  %69 = load i64, i64* %fracdigits, align 8, !dbg !13956, !tbaa !2391
  %sub65 = sub i64 0, %69, !dbg !13957
  %70 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !13958, !tbaa !2505
  %exp66 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %70, i32 0, i32 1, !dbg !13959
  store i64 %sub65, i64* %exp66, align 8, !dbg !13960, !tbaa !2510
  %71 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !13961, !tbaa !2505
  %digits67 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %71, i32 0, i32 2, !dbg !13962
  %72 = load i64, i64* %digits67, align 8, !dbg !13962, !tbaa !2514
  %cmp68 = icmp sgt i64 %72, 8, !dbg !13963
  br i1 %cmp68, label %cond.true.70, label %cond.false.71, !dbg !13964

cond.true.70:                                     ; preds = %if.else
  br label %cond.end.74, !dbg !13965

cond.false.71:                                    ; preds = %if.else
  %73 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !13967, !tbaa !2505
  %digits72 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %73, i32 0, i32 2, !dbg !13969
  %74 = load i64, i64* %digits72, align 8, !dbg !13969, !tbaa !2514
  %conv73 = trunc i64 %74 to i32, !dbg !13970
  br label %cond.end.74, !dbg !13964

cond.end.74:                                      ; preds = %cond.false.71, %cond.true.70
  %cond75 = phi i32 [ 8, %cond.true.70 ], [ %conv73, %cond.false.71 ], !dbg !13964
  store i32 %cond75, i32* %n, align 4, !dbg !13971, !tbaa !2554
  %75 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !13974, !tbaa !2505
  %76 = load i32, i32* %n, align 4, !dbg !13975, !tbaa !2554
  call void @_mpd_get_msdigits(i64* %dummy, i64* %vhat, %struct.mpd_t* %75, i32 %76), !dbg !13976
  %77 = load i32, i32* %n, align 4, !dbg !13977, !tbaa !2554
  %cmp76 = icmp slt i32 %77, 8, !dbg !13979
  br i1 %cmp76, label %if.then.78, label %if.end.83, !dbg !13980

if.then.78:                                       ; preds = %cond.end.74
  %78 = load i32, i32* %n, align 4, !dbg !13981, !tbaa !2554
  %sub79 = sub i32 8, %78, !dbg !13983
  %idxprom80 = sext i32 %sub79 to i64, !dbg !13984
  %arrayidx81 = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %idxprom80, !dbg !13984
  %79 = load i64, i64* %arrayidx81, align 8, !dbg !13984, !tbaa !2391
  %80 = load i64, i64* %vhat, align 8, !dbg !13985, !tbaa !2391
  %mul82 = mul i64 %80, %79, !dbg !13985
  store i64 %mul82, i64* %vhat, align 8, !dbg !13985, !tbaa !2391
  br label %if.end.83, !dbg !13986

if.end.83:                                        ; preds = %if.then.78, %cond.end.74
  br label %if.end.84

if.end.84:                                        ; preds = %if.end.83, %if.end.62
  %81 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !13987, !tbaa !2505
  %exp85 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %81, i32 0, i32 1, !dbg !13988
  %82 = load i64, i64* %exp85, align 8, !dbg !13988, !tbaa !2510
  %83 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !13989, !tbaa !2505
  %exp86 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %83, i32 0, i32 1, !dbg !13990
  %84 = load i64, i64* %exp86, align 8, !dbg !13990, !tbaa !2510
  %sub87 = sub i64 %82, %84, !dbg !13991
  %div88 = sdiv i64 %sub87, 2, !dbg !13992
  store i64 %div88, i64* %adj, align 8, !dbg !13993, !tbaa !2391
  %85 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !13994, !tbaa !2505
  %86 = load i64, i64* %vhat, align 8, !dbg !13995, !tbaa !2391
  call void @_invroot_init_approx(%struct.mpd_t* %85, i64 %86), !dbg !13996
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxcontext), !dbg !13997
  call void @mpd_maxcontext(%struct.mpd_context_t* %varcontext), !dbg !13998
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 6, !dbg !13999
  store i32 8, i32* %round, align 4, !dbg !14000, !tbaa !4148
  %87 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !14001, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %87, i32 0, i32 0, !dbg !14002
  %88 = load i64, i64* %prec, align 8, !dbg !14002, !tbaa !2526
  %add89 = add i64 %88, 1, !dbg !14003
  store i64 %add89, i64* %maxprec, align 8, !dbg !14004, !tbaa !2391
  %arraydecay90 = getelementptr inbounds [64 x i64], [64 x i64]* %klist, i32 0, i32 0, !dbg !14005
  %89 = load i64, i64* %maxprec, align 8, !dbg !14006, !tbaa !2391
  %call91 = call i32 @invroot_schedule_prec(i64* %arraydecay90, i64 %89, i64 3), !dbg !14007
  store i32 %call91, i32* %i, align 4, !dbg !14008, !tbaa !2554
  br label %for.cond, !dbg !14009

for.cond:                                         ; preds = %for.inc, %if.end.84
  %90 = load i32, i32* %i, align 4, !dbg !14010, !tbaa !2554
  %cmp92 = icmp sge i32 %90, 0, !dbg !14015
  br i1 %cmp92, label %for.body, label %for.end, !dbg !14016

for.body:                                         ; preds = %for.cond
  %91 = load i32, i32* %i, align 4, !dbg !14017, !tbaa !2554
  %idxprom94 = sext i32 %91 to i64, !dbg !14019
  %arrayidx95 = getelementptr [64 x i64], [64 x i64]* %klist, i32 0, i64 %idxprom94, !dbg !14019
  %92 = load i64, i64* %arrayidx95, align 8, !dbg !14019, !tbaa !2391
  %mul96 = mul i64 2, %92, !dbg !14020
  %add97 = add i64 %mul96, 2, !dbg !14021
  %prec98 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 0, !dbg !14022
  store i64 %add97, i64* %prec98, align 8, !dbg !14023, !tbaa !2526
  %93 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !14024, !tbaa !2505
  %94 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !14025, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %s, %struct.mpd_t* %93, %struct.mpd_t* %94, %struct.mpd_context_t* %maxcontext, i32* %workstatus), !dbg !14026
  %95 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !14027, !tbaa !2505
  %digits99 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %95, i32 0, i32 2, !dbg !14029
  %96 = load i64, i64* %digits99, align 8, !dbg !14029, !tbaa !2514
  %prec100 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 0, !dbg !14030
  %97 = load i64, i64* %prec100, align 8, !dbg !14030, !tbaa !2526
  %cmp101 = icmp sgt i64 %96, %97, !dbg !14031
  br i1 %cmp101, label %if.then.103, label %if.else.110, !dbg !14032

if.then.103:                                      ; preds = %for.body
  %98 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !14033, !tbaa !2505
  %digits104 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %98, i32 0, i32 2, !dbg !14035
  %99 = load i64, i64* %digits104, align 8, !dbg !14035, !tbaa !2514
  %prec105 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 0, !dbg !14036
  %100 = load i64, i64* %prec105, align 8, !dbg !14036, !tbaa !2526
  %sub106 = sub i64 %99, %100, !dbg !14037
  store i64 %sub106, i64* %shift, align 8, !dbg !14038, !tbaa !2391
  %101 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !14039, !tbaa !2505
  %102 = load i64, i64* %shift, align 8, !dbg !14040, !tbaa !2391
  %call107 = call i64 @mpd_qshiftr(%struct.mpd_t* %t, %struct.mpd_t* %101, i64 %102, i32* %workstatus), !dbg !14041
  %103 = load i64, i64* %shift, align 8, !dbg !14042, !tbaa !2391
  %exp108 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t, i32 0, i32 1, !dbg !14043
  %104 = load i64, i64* %exp108, align 8, !dbg !14044, !tbaa !2510
  %add109 = add i64 %104, %103, !dbg !14044
  store i64 %add109, i64* %exp108, align 8, !dbg !14044, !tbaa !2510
  call void @mpd_qmul(%struct.mpd_t* %t, %struct.mpd_t* %t, %struct.mpd_t* %s, %struct.mpd_context_t* %varcontext, i32* %workstatus), !dbg !14045
  br label %if.end.111, !dbg !14046

if.else.110:                                      ; preds = %for.body
  %105 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !14047, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %t, %struct.mpd_t* %105, %struct.mpd_t* %s, %struct.mpd_context_t* %varcontext, i32* %workstatus), !dbg !14049
  br label %if.end.111

if.end.111:                                       ; preds = %if.else.110, %if.then.103
  call void @mpd_qsub(%struct.mpd_t* %t, %struct.mpd_t* %three, %struct.mpd_t* %t, %struct.mpd_context_t* %maxcontext, i32* %workstatus), !dbg !14050
  %106 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !14051, !tbaa !2505
  %107 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !14052, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %106, %struct.mpd_t* %107, %struct.mpd_t* %t, %struct.mpd_context_t* %varcontext, i32* %workstatus), !dbg !14053
  %108 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !14054, !tbaa !2505
  %109 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !14055, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %108, %struct.mpd_t* %109, %struct.mpd_t* %one_half, %struct.mpd_context_t* %maxcontext, i32* %workstatus), !dbg !14056
  br label %for.inc, !dbg !14057

for.inc:                                          ; preds = %if.end.111
  %110 = load i32, i32* %i, align 4, !dbg !14058, !tbaa !2554
  %dec = add i32 %110, -1, !dbg !14058
  store i32 %dec, i32* %i, align 4, !dbg !14058, !tbaa !2554
  br label %for.cond, !dbg !14059

for.end:                                          ; preds = %for.cond
  %111 = load i64, i64* %adj, align 8, !dbg !14060, !tbaa !2391
  %112 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !14061, !tbaa !2505
  %exp112 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %112, i32 0, i32 1, !dbg !14062
  %113 = load i64, i64* %exp112, align 8, !dbg !14063, !tbaa !2510
  %sub113 = sub i64 %113, %111, !dbg !14063
  store i64 %sub113, i64* %exp112, align 8, !dbg !14063, !tbaa !2510
  %114 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14064, !tbaa !2505
  %call114 = call i64 @mpd_trail_zeros(%struct.mpd_t* %114), !dbg !14065
  store i64 %call114, i64* %tz, align 8, !dbg !14066, !tbaa !2391
  %115 = load i64, i64* %ideal_exp, align 8, !dbg !14067, !tbaa !2391
  %116 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14068, !tbaa !2505
  %exp115 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %116, i32 0, i32 1, !dbg !14069
  %117 = load i64, i64* %exp115, align 8, !dbg !14069, !tbaa !2510
  %sub116 = sub i64 %115, %117, !dbg !14070
  store i64 %sub116, i64* %shift, align 8, !dbg !14071, !tbaa !2391
  %118 = load i64, i64* %tz, align 8, !dbg !14072, !tbaa !2391
  %119 = load i64, i64* %shift, align 8, !dbg !14073, !tbaa !2391
  %cmp117 = icmp sgt i64 %118, %119, !dbg !14074
  br i1 %cmp117, label %cond.true.119, label %cond.false.120, !dbg !14075

cond.true.119:                                    ; preds = %for.end
  %120 = load i64, i64* %shift, align 8, !dbg !14076, !tbaa !2391
  br label %cond.end.121, !dbg !14075

cond.false.120:                                   ; preds = %for.end
  %121 = load i64, i64* %tz, align 8, !dbg !14078, !tbaa !2391
  br label %cond.end.121, !dbg !14075

cond.end.121:                                     ; preds = %cond.false.120, %cond.true.119
  %cond122 = phi i64 [ %120, %cond.true.119 ], [ %121, %cond.false.120 ], !dbg !14075
  store i64 %cond122, i64* %shift, align 8, !dbg !14080, !tbaa !2391
  %122 = load i64, i64* %shift, align 8, !dbg !14083, !tbaa !2391
  %cmp123 = icmp sgt i64 %122, 0, !dbg !14085
  br i1 %cmp123, label %if.then.125, label %if.end.129, !dbg !14086

if.then.125:                                      ; preds = %cond.end.121
  %123 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14087, !tbaa !2505
  %124 = load i64, i64* %shift, align 8, !dbg !14089, !tbaa !2391
  %call126 = call i64 @mpd_qshiftr_inplace(%struct.mpd_t* %123, i64 %124), !dbg !14090
  %125 = load i64, i64* %shift, align 8, !dbg !14091, !tbaa !2391
  %126 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14092, !tbaa !2505
  %exp127 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %126, i32 0, i32 1, !dbg !14093
  %127 = load i64, i64* %exp127, align 8, !dbg !14094, !tbaa !2510
  %add128 = add i64 %127, %125, !dbg !14094
  store i64 %add128, i64* %exp127, align 8, !dbg !14094, !tbaa !2510
  br label %if.end.129, !dbg !14095

if.end.129:                                       ; preds = %if.then.125, %cond.end.121
  call void @mpd_del(%struct.mpd_t* %s), !dbg !14096
  call void @mpd_del(%struct.mpd_t* %t), !dbg !14097
  %128 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !14098, !tbaa !2505
  %cmp130 = icmp ne %struct.mpd_t* %128, %vtmp, !dbg !14100
  br i1 %cmp130, label %if.then.132, label %if.end.133, !dbg !14101

if.then.132:                                      ; preds = %if.end.129
  %129 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !14102, !tbaa !2505
  call void @mpd_del(%struct.mpd_t* %129), !dbg !14104
  br label %if.end.133, !dbg !14104

if.end.133:                                       ; preds = %if.then.132, %if.end.129
  %130 = load i32, i32* %workstatus, align 4, !dbg !14105, !tbaa !2554
  %and134 = and i32 %130, 958, !dbg !14106
  %131 = load i32*, i32** %status.addr, align 8, !dbg !14107, !tbaa !2505
  %132 = load i32, i32* %131, align 4, !dbg !14108, !tbaa !2554
  %or135 = or i32 %132, %and134, !dbg !14108
  store i32 %or135, i32* %131, align 4, !dbg !14108, !tbaa !2554
  %133 = load i32*, i32** %status.addr, align 8, !dbg !14109, !tbaa !2505
  %134 = load i32, i32* %133, align 4, !dbg !14110, !tbaa !2554
  %or136 = or i32 %134, 4160, !dbg !14110
  store i32 %or136, i32* %133, align 4, !dbg !14110, !tbaa !2554
  store i32 0, i32* %cleanup.dest.slot, !dbg !14111
  br label %cleanup, !dbg !14111

cleanup:                                          ; preds = %if.end.133, %if.then.43
  %135 = bitcast i32* %n to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 4, i8* %135) #4, !dbg !14112
  %136 = bitcast i32* %i to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 4, i8* %136) #4, !dbg !14112
  %137 = bitcast i64* %dummy to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 8, i8* %137) #4, !dbg !14112
  %138 = bitcast i64* %vhat to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 8, i8* %138) #4, !dbg !14112
  %139 = bitcast i64* %fracdigits to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 8, i8* %139) #4, !dbg !14112
  %140 = bitcast i64* %maxprec to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 8, i8* %140) #4, !dbg !14112
  %141 = bitcast i64* %tz to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 8, i8* %141) #4, !dbg !14112
  %142 = bitcast i64* %adj to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 8, i8* %142) #4, !dbg !14112
  %143 = bitcast i64* %shift to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 8, i8* %143) #4, !dbg !14112
  %144 = bitcast i64* %ideal_exp to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 8, i8* %144) #4, !dbg !14112
  %145 = bitcast [64 x i64]* %klist to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 512, i8* %145) #4, !dbg !14112
  %146 = bitcast %struct.mpd_t* %three to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 48, i8* %146) #4, !dbg !14112
  %147 = bitcast [1 x i64]* %three_data to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 8, i8* %147) #4, !dbg !14112
  %148 = bitcast %struct.mpd_t* %one_half to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 48, i8* %148) #4, !dbg !14112
  %149 = bitcast [1 x i64]* %one_half_data to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 8, i8* %149) #4, !dbg !14112
  %150 = bitcast %struct.mpd_t* %t to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 48, i8* %150) #4, !dbg !14112
  %151 = bitcast [64 x i64]* %t_data to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 512, i8* %151) #4, !dbg !14112
  %152 = bitcast %struct.mpd_t* %s to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 48, i8* %152) #4, !dbg !14112
  %153 = bitcast [64 x i64]* %s_data to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 512, i8* %153) #4, !dbg !14112
  %154 = bitcast %struct.mpd_t* %vtmp to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 48, i8* %154) #4, !dbg !14112
  %155 = bitcast %struct.mpd_t** %v to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 8, i8* %155) #4, !dbg !14112
  %156 = bitcast %struct.mpd_t** %z to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 8, i8* %156) #4, !dbg !14112
  %157 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 48, i8* %157) #4, !dbg !14112
  %158 = bitcast %struct.mpd_context_t* %varcontext to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 48, i8* %158) #4, !dbg !14112
  %159 = bitcast i32* %workstatus to i8*, !dbg !14112
  call void @llvm.lifetime.end(i64 4, i8* %159) #4, !dbg !14112
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !14111

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qsqrt(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %maxcontext = alloca %struct.mpd_context_t, align 8
  %c_data = alloca [64 x i64], align 16
  %c = alloca %struct.mpd_t, align 8
  %q_data = alloca [64 x i64], align 16
  %q = alloca %struct.mpd_t, align 8
  %r_data = alloca [64 x i64], align 16
  %r = alloca %struct.mpd_t, align 8
  %two_data = alloca [1 x i64], align 8
  %two = alloca %struct.mpd_t, align 8
  %prec = alloca i64, align 8
  %ideal_exp = alloca i64, align 8
  %l = alloca i64, align 8
  %shift = alloca i64, align 8
  %exact = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %lsd = alloca i32, align 4
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1341, metadata !2395), !dbg !14113
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1342, metadata !2395), !dbg !14114
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1343, metadata !2395), !dbg !14115
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1344, metadata !2395), !dbg !14116
  %0 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !14117
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !14117
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxcontext, metadata !1345, metadata !2395), !dbg !14118
  %1 = bitcast [64 x i64]* %c_data to i8*, !dbg !14119
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !14119
  call void @llvm.dbg.declare(metadata [64 x i64]* %c_data, metadata !1346, metadata !2395), !dbg !14120
  %2 = bitcast %struct.mpd_t* %c to i8*, !dbg !14121
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !14121
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %c, metadata !1347, metadata !2395), !dbg !14122
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %c, i32 0, i32 0, !dbg !14123
  store i8 48, i8* %flags, align 1, !dbg !14123, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %c, i32 0, i32 1, !dbg !14123
  store i64 0, i64* %exp, align 8, !dbg !14123, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %c, i32 0, i32 2, !dbg !14123
  store i64 0, i64* %digits, align 8, !dbg !14123, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %c, i32 0, i32 3, !dbg !14123
  store i64 0, i64* %len, align 8, !dbg !14123, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %c, i32 0, i32 4, !dbg !14123
  store i64 64, i64* %alloc, align 8, !dbg !14123, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %c, i32 0, i32 5, !dbg !14123
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %c_data, i32 0, i32 0, !dbg !14124
  store i64* %arraydecay, i64** %data, align 8, !dbg !14123, !tbaa !2546
  %3 = bitcast [64 x i64]* %q_data to i8*, !dbg !14125
  call void @llvm.lifetime.start(i64 512, i8* %3) #4, !dbg !14125
  call void @llvm.dbg.declare(metadata [64 x i64]* %q_data, metadata !1348, metadata !2395), !dbg !14126
  %4 = bitcast %struct.mpd_t* %q to i8*, !dbg !14127
  call void @llvm.lifetime.start(i64 48, i8* %4) #4, !dbg !14127
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %q, metadata !1349, metadata !2395), !dbg !14128
  %flags1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 0, !dbg !14129
  store i8 48, i8* %flags1, align 1, !dbg !14129, !tbaa !2620
  %exp2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 1, !dbg !14129
  store i64 0, i64* %exp2, align 8, !dbg !14129, !tbaa !2510
  %digits3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 2, !dbg !14129
  store i64 0, i64* %digits3, align 8, !dbg !14129, !tbaa !2514
  %len4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 3, !dbg !14129
  store i64 0, i64* %len4, align 8, !dbg !14129, !tbaa !2542
  %alloc5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 4, !dbg !14129
  store i64 64, i64* %alloc5, align 8, !dbg !14129, !tbaa !2835
  %data6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %q, i32 0, i32 5, !dbg !14129
  %arraydecay7 = getelementptr inbounds [64 x i64], [64 x i64]* %q_data, i32 0, i32 0, !dbg !14130
  store i64* %arraydecay7, i64** %data6, align 8, !dbg !14129, !tbaa !2546
  %5 = bitcast [64 x i64]* %r_data to i8*, !dbg !14131
  call void @llvm.lifetime.start(i64 512, i8* %5) #4, !dbg !14131
  call void @llvm.dbg.declare(metadata [64 x i64]* %r_data, metadata !1350, metadata !2395), !dbg !14132
  %6 = bitcast %struct.mpd_t* %r to i8*, !dbg !14133
  call void @llvm.lifetime.start(i64 48, i8* %6) #4, !dbg !14133
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %r, metadata !1351, metadata !2395), !dbg !14134
  %flags8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 0, !dbg !14135
  store i8 48, i8* %flags8, align 1, !dbg !14135, !tbaa !2620
  %exp9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 1, !dbg !14135
  store i64 0, i64* %exp9, align 8, !dbg !14135, !tbaa !2510
  %digits10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 2, !dbg !14135
  store i64 0, i64* %digits10, align 8, !dbg !14135, !tbaa !2514
  %len11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 3, !dbg !14135
  store i64 0, i64* %len11, align 8, !dbg !14135, !tbaa !2542
  %alloc12 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 4, !dbg !14135
  store i64 64, i64* %alloc12, align 8, !dbg !14135, !tbaa !2835
  %data13 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %r, i32 0, i32 5, !dbg !14135
  %arraydecay14 = getelementptr inbounds [64 x i64], [64 x i64]* %r_data, i32 0, i32 0, !dbg !14136
  store i64* %arraydecay14, i64** %data13, align 8, !dbg !14135, !tbaa !2546
  %7 = bitcast [1 x i64]* %two_data to i8*, !dbg !14137
  call void @llvm.lifetime.start(i64 8, i8* %7) #4, !dbg !14137
  call void @llvm.dbg.declare(metadata [1 x i64]* %two_data, metadata !1352, metadata !2395), !dbg !14138
  %8 = bitcast [1 x i64]* %two_data to i8*, !dbg !14138
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* bitcast ([1 x i64]* @mpd_qsqrt.two_data to i8*), i64 8, i32 8, i1 false), !dbg !14138
  %9 = bitcast %struct.mpd_t* %two to i8*, !dbg !14139
  call void @llvm.lifetime.start(i64 48, i8* %9) #4, !dbg !14139
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %two, metadata !1353, metadata !2395), !dbg !14140
  %flags15 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 0, !dbg !14141
  store i8 -112, i8* %flags15, align 1, !dbg !14141, !tbaa !2620
  %exp16 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 1, !dbg !14141
  store i64 0, i64* %exp16, align 8, !dbg !14141, !tbaa !2510
  %digits17 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 2, !dbg !14141
  store i64 1, i64* %digits17, align 8, !dbg !14141, !tbaa !2514
  %len18 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 3, !dbg !14141
  store i64 1, i64* %len18, align 8, !dbg !14141, !tbaa !2542
  %alloc19 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 4, !dbg !14141
  store i64 1, i64* %alloc19, align 8, !dbg !14141, !tbaa !2835
  %data20 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 5, !dbg !14141
  %arraydecay21 = getelementptr inbounds [1 x i64], [1 x i64]* %two_data, i32 0, i32 0, !dbg !14142
  store i64* %arraydecay21, i64** %data20, align 8, !dbg !14141, !tbaa !2546
  %10 = bitcast i64* %prec to i8*, !dbg !14143
  call void @llvm.lifetime.start(i64 8, i8* %10) #4, !dbg !14143
  call void @llvm.dbg.declare(metadata i64* %prec, metadata !1354, metadata !2395), !dbg !14144
  %11 = bitcast i64* %ideal_exp to i8*, !dbg !14143
  call void @llvm.lifetime.start(i64 8, i8* %11) #4, !dbg !14143
  call void @llvm.dbg.declare(metadata i64* %ideal_exp, metadata !1355, metadata !2395), !dbg !14145
  %12 = bitcast i64* %l to i8*, !dbg !14146
  call void @llvm.lifetime.start(i64 8, i8* %12) #4, !dbg !14146
  call void @llvm.dbg.declare(metadata i64* %l, metadata !1356, metadata !2395), !dbg !14147
  %13 = bitcast i64* %shift to i8*, !dbg !14146
  call void @llvm.lifetime.start(i64 8, i8* %13) #4, !dbg !14146
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !1357, metadata !2395), !dbg !14148
  %14 = bitcast i32* %exact to i8*, !dbg !14149
  call void @llvm.lifetime.start(i64 4, i8* %14) #4, !dbg !14149
  call void @llvm.dbg.declare(metadata i32* %exact, metadata !1358, metadata !2395), !dbg !14150
  store i32 0, i32* %exact, align 4, !dbg !14150, !tbaa !2554
  %15 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14151, !tbaa !2505
  %exp22 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %15, i32 0, i32 1, !dbg !14152
  %16 = load i64, i64* %exp22, align 8, !dbg !14152, !tbaa !2510
  %17 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14153, !tbaa !2505
  %exp23 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 1, !dbg !14154
  %18 = load i64, i64* %exp23, align 8, !dbg !14154, !tbaa !2510
  %and = and i64 %18, 1, !dbg !14155
  %sub = sub i64 %16, %and, !dbg !14156
  %div = sdiv i64 %sub, 2, !dbg !14157
  store i64 %div, i64* %ideal_exp, align 8, !dbg !14158, !tbaa !2391
  %19 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14159, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %19), !dbg !14161
  %tobool = icmp ne i32 %call, 0, !dbg !14161
  br i1 %tobool, label %if.then, label %if.end.31, !dbg !14162

if.then:                                          ; preds = %entry
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14163, !tbaa !2505
  %21 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14166, !tbaa !2505
  %22 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !14167, !tbaa !2505
  %23 = load i32*, i32** %status.addr, align 8, !dbg !14168, !tbaa !2505
  %call24 = call i32 @mpd_qcheck_nan(%struct.mpd_t* %20, %struct.mpd_t* %21, %struct.mpd_context_t* %22, i32* %23), !dbg !14169
  %tobool25 = icmp ne i32 %call24, 0, !dbg !14169
  br i1 %tobool25, label %if.then.26, label %if.end, !dbg !14170

if.then.26:                                       ; preds = %if.then
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14171

if.end:                                           ; preds = %if.then
  %24 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14173, !tbaa !2505
  %call27 = call i32 @mpd_isnegative(%struct.mpd_t* %24), !dbg !14175
  %tobool28 = icmp ne i32 %call27, 0, !dbg !14175
  br i1 %tobool28, label %if.then.29, label %if.end.30, !dbg !14176

if.then.29:                                       ; preds = %if.end
  %25 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14177, !tbaa !2505
  %26 = load i32*, i32** %status.addr, align 8, !dbg !14179, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %25, i32 256, i32* %26), !dbg !14180
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14181

if.end.30:                                        ; preds = %if.end
  %27 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14182, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %27, i8 zeroext 0, i8 zeroext 2), !dbg !14183
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14184

if.end.31:                                        ; preds = %entry
  %28 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14185, !tbaa !2505
  %call32 = call i32 @mpd_iszero(%struct.mpd_t* %28), !dbg !14187
  %tobool33 = icmp ne i32 %call32, 0, !dbg !14187
  br i1 %tobool33, label %if.then.34, label %if.end.36, !dbg !14188

if.then.34:                                       ; preds = %if.end.31
  %29 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14189, !tbaa !2505
  %30 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14191, !tbaa !2505
  %call35 = call zeroext i8 @mpd_sign(%struct.mpd_t* %30), !dbg !14192
  %31 = load i64, i64* %ideal_exp, align 8, !dbg !14193, !tbaa !2391
  call void @_settriple(%struct.mpd_t* %29, i8 zeroext %call35, i64 0, i64 %31), !dbg !14194
  %32 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14195, !tbaa !2505
  %33 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !14196, !tbaa !2505
  %34 = load i32*, i32** %status.addr, align 8, !dbg !14197, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %32, %struct.mpd_context_t* %33, i32* %34), !dbg !14198
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14199

if.end.36:                                        ; preds = %if.end.31
  %35 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14200, !tbaa !2505
  %call37 = call i32 @mpd_isnegative(%struct.mpd_t* %35), !dbg !14202
  %tobool38 = icmp ne i32 %call37, 0, !dbg !14202
  br i1 %tobool38, label %if.then.39, label %if.end.40, !dbg !14203

if.then.39:                                       ; preds = %if.end.36
  %36 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14204, !tbaa !2505
  %37 = load i32*, i32** %status.addr, align 8, !dbg !14206, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %36, i32 256, i32* %37), !dbg !14207
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14208

if.end.40:                                        ; preds = %if.end.36
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxcontext), !dbg !14209
  %38 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !14210, !tbaa !2505
  %prec41 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %38, i32 0, i32 0, !dbg !14211
  %39 = load i64, i64* %prec41, align 8, !dbg !14211, !tbaa !2526
  %add = add i64 %39, 1, !dbg !14212
  store i64 %add, i64* %prec, align 8, !dbg !14213, !tbaa !2391
  %40 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14214, !tbaa !2505
  %41 = load i32*, i32** %status.addr, align 8, !dbg !14216, !tbaa !2505
  %call42 = call i32 @mpd_qcopy(%struct.mpd_t* %c, %struct.mpd_t* %40, i32* %41), !dbg !14217
  %tobool43 = icmp ne i32 %call42, 0, !dbg !14217
  br i1 %tobool43, label %if.end.45, label %if.then.44, !dbg !14218

if.then.44:                                       ; preds = %if.end.40
  br label %malloc_error, !dbg !14219

if.end.45:                                        ; preds = %if.end.40
  %exp46 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %c, i32 0, i32 1, !dbg !14221
  store i64 0, i64* %exp46, align 8, !dbg !14222, !tbaa !2510
  %42 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14223, !tbaa !2505
  %exp47 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %42, i32 0, i32 1, !dbg !14225
  %43 = load i64, i64* %exp47, align 8, !dbg !14225, !tbaa !2510
  %and48 = and i64 %43, 1, !dbg !14226
  %tobool49 = icmp ne i64 %and48, 0, !dbg !14226
  br i1 %tobool49, label %if.then.50, label %if.else, !dbg !14227

if.then.50:                                       ; preds = %if.end.45
  %44 = load i32*, i32** %status.addr, align 8, !dbg !14228, !tbaa !2505
  %call51 = call i32 @mpd_qshiftl(%struct.mpd_t* %c, %struct.mpd_t* %c, i64 1, i32* %44), !dbg !14231
  %tobool52 = icmp ne i32 %call51, 0, !dbg !14231
  br i1 %tobool52, label %if.end.54, label %if.then.53, !dbg !14232

if.then.53:                                       ; preds = %if.then.50
  br label %malloc_error, !dbg !14233

if.end.54:                                        ; preds = %if.then.50
  %45 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14235, !tbaa !2505
  %digits55 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %45, i32 0, i32 2, !dbg !14236
  %46 = load i64, i64* %digits55, align 8, !dbg !14236, !tbaa !2514
  %shr = ashr i64 %46, 1, !dbg !14237
  %add56 = add i64 %shr, 1, !dbg !14238
  store i64 %add56, i64* %l, align 8, !dbg !14239, !tbaa !2391
  br label %if.end.60, !dbg !14240

if.else:                                          ; preds = %if.end.45
  %47 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14241, !tbaa !2505
  %digits57 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %47, i32 0, i32 2, !dbg !14243
  %48 = load i64, i64* %digits57, align 8, !dbg !14243, !tbaa !2514
  %add58 = add i64 %48, 1, !dbg !14244
  %shr59 = ashr i64 %add58, 1, !dbg !14245
  store i64 %shr59, i64* %l, align 8, !dbg !14246, !tbaa !2391
  br label %if.end.60

if.end.60:                                        ; preds = %if.else, %if.end.54
  %49 = load i64, i64* %prec, align 8, !dbg !14247, !tbaa !2391
  %50 = load i64, i64* %l, align 8, !dbg !14248, !tbaa !2391
  %sub61 = sub i64 %49, %50, !dbg !14249
  store i64 %sub61, i64* %shift, align 8, !dbg !14250, !tbaa !2391
  %51 = load i64, i64* %shift, align 8, !dbg !14251, !tbaa !2391
  %cmp = icmp sge i64 %51, 0, !dbg !14253
  br i1 %cmp, label %if.then.62, label %if.else.67, !dbg !14254

if.then.62:                                       ; preds = %if.end.60
  %52 = load i64, i64* %shift, align 8, !dbg !14255, !tbaa !2391
  %mul = mul i64 2, %52, !dbg !14258
  %53 = load i32*, i32** %status.addr, align 8, !dbg !14259, !tbaa !2505
  %call63 = call i32 @mpd_qshiftl(%struct.mpd_t* %c, %struct.mpd_t* %c, i64 %mul, i32* %53), !dbg !14260
  %tobool64 = icmp ne i32 %call63, 0, !dbg !14260
  br i1 %tobool64, label %if.end.66, label %if.then.65, !dbg !14261

if.then.65:                                       ; preds = %if.then.62
  br label %malloc_error, !dbg !14262

if.end.66:                                        ; preds = %if.then.62
  store i32 1, i32* %exact, align 4, !dbg !14264, !tbaa !2554
  br label %if.end.71, !dbg !14265

if.else.67:                                       ; preds = %if.end.60
  %54 = load i64, i64* %shift, align 8, !dbg !14266, !tbaa !2391
  %mul68 = mul i64 -2, %54, !dbg !14268
  %call69 = call i64 @mpd_qshiftr_inplace(%struct.mpd_t* %c, i64 %mul68), !dbg !14269
  %tobool70 = icmp ne i64 %call69, 0, !dbg !14270
  %lnot = xor i1 %tobool70, true, !dbg !14270
  %lnot.ext = zext i1 %lnot to i32, !dbg !14270
  store i32 %lnot.ext, i32* %exact, align 4, !dbg !14271, !tbaa !2554
  br label %if.end.71

if.end.71:                                        ; preds = %if.else.67, %if.end.66
  %55 = load i64, i64* %shift, align 8, !dbg !14272, !tbaa !2391
  %56 = load i64, i64* %ideal_exp, align 8, !dbg !14273, !tbaa !2391
  %sub72 = sub i64 %56, %55, !dbg !14273
  store i64 %sub72, i64* %ideal_exp, align 8, !dbg !14273, !tbaa !2391
  %57 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14274, !tbaa !2505
  %58 = load i64, i64* %prec, align 8, !dbg !14276, !tbaa !2391
  %59 = load i32*, i32** %status.addr, align 8, !dbg !14277, !tbaa !2505
  %call73 = call i32 @mpd_qshiftl(%struct.mpd_t* %57, %struct.mpd_t* @one, i64 %58, i32* %59), !dbg !14278
  %tobool74 = icmp ne i32 %call73, 0, !dbg !14278
  br i1 %tobool74, label %if.end.76, label %if.then.75, !dbg !14279

if.then.75:                                       ; preds = %if.end.71
  br label %malloc_error, !dbg !14280

if.end.76:                                        ; preds = %if.end.71
  br label %while.cond, !dbg !14282

while.cond:                                       ; preds = %if.end.96, %if.end.76
  br label %while.body, !dbg !14283

while.body:                                       ; preds = %while.cond
  %60 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14286, !tbaa !2505
  %status77 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 4, !dbg !14288
  call void @_mpd_qdivmod(%struct.mpd_t* %q, %struct.mpd_t* %r, %struct.mpd_t* %c, %struct.mpd_t* %60, %struct.mpd_context_t* %maxcontext, i32* %status77), !dbg !14289
  %61 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14290, !tbaa !2505
  %call78 = call i32 @mpd_isspecial(%struct.mpd_t* %61), !dbg !14292
  %tobool79 = icmp ne i32 %call78, 0, !dbg !14292
  br i1 %tobool79, label %if.then.82, label %lor.lhs.false, !dbg !14293

lor.lhs.false:                                    ; preds = %while.body
  %call80 = call i32 @mpd_isspecial(%struct.mpd_t* %q), !dbg !14294
  %tobool81 = icmp ne i32 %call80, 0, !dbg !14294
  br i1 %tobool81, label %if.then.82, label %if.end.85, !dbg !14296

if.then.82:                                       ; preds = %lor.lhs.false, %while.body
  %62 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14297, !tbaa !2505
  %status83 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 4, !dbg !14299
  %63 = load i32, i32* %status83, align 4, !dbg !14299, !tbaa !9309
  %and84 = and i32 %63, 958, !dbg !14300
  %64 = load i32*, i32** %status.addr, align 8, !dbg !14301, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %62, i32 %and84, i32* %64), !dbg !14302
  br label %out, !dbg !14303

if.end.85:                                        ; preds = %lor.lhs.false
  %65 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14304, !tbaa !2505
  %call86 = call i32 @_mpd_cmp(%struct.mpd_t* %65, %struct.mpd_t* %q), !dbg !14306
  %cmp87 = icmp sle i32 %call86, 0, !dbg !14307
  br i1 %cmp87, label %if.then.88, label %if.end.89, !dbg !14308

if.then.88:                                       ; preds = %if.end.85
  br label %while.end, !dbg !14309

if.end.89:                                        ; preds = %if.end.85
  %66 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14311, !tbaa !2505
  %67 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14312, !tbaa !2505
  %status90 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 4, !dbg !14313
  call void @_mpd_qadd_exact(%struct.mpd_t* %66, %struct.mpd_t* %67, %struct.mpd_t* %q, %struct.mpd_context_t* %maxcontext, i32* %status90), !dbg !14314
  %68 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14315, !tbaa !2505
  %call91 = call i32 @mpd_isspecial(%struct.mpd_t* %68), !dbg !14317
  %tobool92 = icmp ne i32 %call91, 0, !dbg !14317
  br i1 %tobool92, label %if.then.93, label %if.end.96, !dbg !14318

if.then.93:                                       ; preds = %if.end.89
  %69 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14319, !tbaa !2505
  %status94 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 4, !dbg !14321
  %70 = load i32, i32* %status94, align 4, !dbg !14321, !tbaa !9309
  %and95 = and i32 %70, 958, !dbg !14322
  %71 = load i32*, i32** %status.addr, align 8, !dbg !14323, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %69, i32 %and95, i32* %71), !dbg !14324
  br label %out, !dbg !14325

if.end.96:                                        ; preds = %if.end.89
  %72 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14326, !tbaa !2505
  %73 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14327, !tbaa !2505
  %status97 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 4, !dbg !14328
  call void @_mpd_qdivmod(%struct.mpd_t* %72, %struct.mpd_t* %r, %struct.mpd_t* %73, %struct.mpd_t* %two, %struct.mpd_context_t* %maxcontext, i32* %status97), !dbg !14329
  br label %while.cond, !dbg !14282

while.end:                                        ; preds = %if.then.88
  %74 = load i32, i32* %exact, align 4, !dbg !14330, !tbaa !2554
  %tobool98 = icmp ne i32 %74, 0, !dbg !14330
  br i1 %tobool98, label %if.then.99, label %if.end.109, !dbg !14332

if.then.99:                                       ; preds = %while.end
  %75 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14333, !tbaa !2505
  %76 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14335, !tbaa !2505
  %status100 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 4, !dbg !14336
  call void @_mpd_qmul_exact(%struct.mpd_t* %r, %struct.mpd_t* %75, %struct.mpd_t* %76, %struct.mpd_context_t* %maxcontext, i32* %status100), !dbg !14337
  %call101 = call i32 @mpd_isspecial(%struct.mpd_t* %r), !dbg !14338
  %tobool102 = icmp ne i32 %call101, 0, !dbg !14338
  br i1 %tobool102, label %if.then.103, label %if.end.106, !dbg !14340

if.then.103:                                      ; preds = %if.then.99
  %77 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14341, !tbaa !2505
  %status104 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 4, !dbg !14343
  %78 = load i32, i32* %status104, align 4, !dbg !14343, !tbaa !9309
  %and105 = and i32 %78, 958, !dbg !14344
  %79 = load i32*, i32** %status.addr, align 8, !dbg !14345, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %77, i32 %and105, i32* %79), !dbg !14346
  br label %out, !dbg !14347

if.end.106:                                       ; preds = %if.then.99
  %call107 = call i32 @_mpd_cmp(%struct.mpd_t* %r, %struct.mpd_t* %c), !dbg !14348
  %cmp108 = icmp eq i32 %call107, 0, !dbg !14349
  %conv = zext i1 %cmp108 to i32, !dbg !14349
  store i32 %conv, i32* %exact, align 4, !dbg !14350, !tbaa !2554
  br label %if.end.109, !dbg !14351

if.end.109:                                       ; preds = %if.end.106, %while.end
  %80 = load i32, i32* %exact, align 4, !dbg !14352, !tbaa !2554
  %tobool110 = icmp ne i32 %80, 0, !dbg !14352
  br i1 %tobool110, label %if.then.111, label %if.else.124, !dbg !14353

if.then.111:                                      ; preds = %if.end.109
  %81 = load i64, i64* %shift, align 8, !dbg !14354, !tbaa !2391
  %cmp112 = icmp sge i64 %81, 0, !dbg !14357
  br i1 %cmp112, label %if.then.114, label %if.else.116, !dbg !14358

if.then.114:                                      ; preds = %if.then.111
  %82 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14359, !tbaa !2505
  %83 = load i64, i64* %shift, align 8, !dbg !14361, !tbaa !2391
  %call115 = call i64 @mpd_qshiftr_inplace(%struct.mpd_t* %82, i64 %83), !dbg !14362
  br label %if.end.122, !dbg !14363

if.else.116:                                      ; preds = %if.then.111
  %84 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14364, !tbaa !2505
  %85 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14367, !tbaa !2505
  %86 = load i64, i64* %shift, align 8, !dbg !14368, !tbaa !2391
  %sub117 = sub i64 0, %86, !dbg !14369
  %87 = load i32*, i32** %status.addr, align 8, !dbg !14370, !tbaa !2505
  %call118 = call i32 @mpd_qshiftl(%struct.mpd_t* %84, %struct.mpd_t* %85, i64 %sub117, i32* %87), !dbg !14371
  %tobool119 = icmp ne i32 %call118, 0, !dbg !14371
  br i1 %tobool119, label %if.end.121, label %if.then.120, !dbg !14372

if.then.120:                                      ; preds = %if.else.116
  br label %malloc_error, !dbg !14373

if.end.121:                                       ; preds = %if.else.116
  br label %if.end.122

if.end.122:                                       ; preds = %if.end.121, %if.then.114
  %88 = load i64, i64* %shift, align 8, !dbg !14375, !tbaa !2391
  %89 = load i64, i64* %ideal_exp, align 8, !dbg !14376, !tbaa !2391
  %add123 = add i64 %89, %88, !dbg !14376
  store i64 %add123, i64* %ideal_exp, align 8, !dbg !14376, !tbaa !2391
  br label %if.end.138, !dbg !14377

if.else.124:                                      ; preds = %if.end.109
  %90 = bitcast i32* %lsd to i8*, !dbg !14378
  call void @llvm.lifetime.start(i64 4, i8* %90) #4, !dbg !14378
  call void @llvm.dbg.declare(metadata i32* %lsd, metadata !1359, metadata !2395), !dbg !14379
  %91 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14380, !tbaa !2505
  %data125 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %91, i32 0, i32 5, !dbg !14381
  %92 = load i64*, i64** %data125, align 8, !dbg !14381, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %92, i64 0, !dbg !14380
  %93 = load i64, i64* %arrayidx, align 8, !dbg !14380, !tbaa !2391
  %call126 = call i64 @mpd_lsd(i64 %93), !dbg !14382
  %conv127 = trunc i64 %call126 to i32, !dbg !14383
  store i32 %conv127, i32* %lsd, align 4, !dbg !14379, !tbaa !2554
  %94 = load i32, i32* %lsd, align 4, !dbg !14384, !tbaa !2554
  %cmp128 = icmp eq i32 %94, 0, !dbg !14386
  br i1 %cmp128, label %if.then.133, label %lor.lhs.false.130, !dbg !14387

lor.lhs.false.130:                                ; preds = %if.else.124
  %95 = load i32, i32* %lsd, align 4, !dbg !14388, !tbaa !2554
  %cmp131 = icmp eq i32 %95, 5, !dbg !14390
  br i1 %cmp131, label %if.then.133, label %if.end.137, !dbg !14391

if.then.133:                                      ; preds = %lor.lhs.false.130, %if.else.124
  %96 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14392, !tbaa !2505
  %data134 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %96, i32 0, i32 5, !dbg !14394
  %97 = load i64*, i64** %data134, align 8, !dbg !14394, !tbaa !2546
  %arrayidx135 = getelementptr i64, i64* %97, i64 0, !dbg !14392
  %98 = load i64, i64* %arrayidx135, align 8, !dbg !14395, !tbaa !2391
  %add136 = add i64 %98, 1, !dbg !14395
  store i64 %add136, i64* %arrayidx135, align 8, !dbg !14395, !tbaa !2391
  br label %if.end.137, !dbg !14396

if.end.137:                                       ; preds = %if.then.133, %lor.lhs.false.130
  %99 = bitcast i32* %lsd to i8*, !dbg !14397
  call void @llvm.lifetime.end(i64 4, i8* %99) #4, !dbg !14397
  br label %if.end.138

if.end.138:                                       ; preds = %if.end.137, %if.end.122
  %100 = load i64, i64* %ideal_exp, align 8, !dbg !14398, !tbaa !2391
  %101 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14399, !tbaa !2505
  %exp139 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %101, i32 0, i32 1, !dbg !14400
  store i64 %100, i64* %exp139, align 8, !dbg !14401, !tbaa !2510
  br label %out, !dbg !14399

out:                                              ; preds = %malloc_error, %if.end.138, %if.then.103, %if.then.93, %if.then.82
  call void @mpd_del(%struct.mpd_t* %c), !dbg !14402
  call void @mpd_del(%struct.mpd_t* %q), !dbg !14403
  call void @mpd_del(%struct.mpd_t* %r), !dbg !14404
  %102 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !14405, !tbaa !2505
  %103 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !14406
  %104 = bitcast %struct.mpd_context_t* %102 to i8*, !dbg !14406
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %104, i64 48, i32 8, i1 false), !dbg !14406, !tbaa.struct !8991
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 6, !dbg !14407
  store i32 6, i32* %round, align 4, !dbg !14408, !tbaa !4148
  %105 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14409, !tbaa !2505
  %106 = load i32*, i32** %status.addr, align 8, !dbg !14410, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %105, %struct.mpd_context_t* %maxcontext, i32* %106), !dbg !14411
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14412

malloc_error:                                     ; preds = %if.then.120, %if.then.75, %if.then.65, %if.then.53, %if.then.44
  %107 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14413, !tbaa !2505
  %108 = load i32*, i32** %status.addr, align 8, !dbg !14414, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %107, i32 512, i32* %108), !dbg !14415
  br label %out, !dbg !14416

cleanup:                                          ; preds = %out, %if.then.39, %if.then.34, %if.end.30, %if.then.29, %if.then.26
  %109 = bitcast i32* %exact to i8*, !dbg !14417
  call void @llvm.lifetime.end(i64 4, i8* %109) #4, !dbg !14417
  %110 = bitcast i64* %shift to i8*, !dbg !14417
  call void @llvm.lifetime.end(i64 8, i8* %110) #4, !dbg !14417
  %111 = bitcast i64* %l to i8*, !dbg !14417
  call void @llvm.lifetime.end(i64 8, i8* %111) #4, !dbg !14417
  %112 = bitcast i64* %ideal_exp to i8*, !dbg !14417
  call void @llvm.lifetime.end(i64 8, i8* %112) #4, !dbg !14417
  %113 = bitcast i64* %prec to i8*, !dbg !14417
  call void @llvm.lifetime.end(i64 8, i8* %113) #4, !dbg !14417
  %114 = bitcast %struct.mpd_t* %two to i8*, !dbg !14417
  call void @llvm.lifetime.end(i64 48, i8* %114) #4, !dbg !14417
  %115 = bitcast [1 x i64]* %two_data to i8*, !dbg !14417
  call void @llvm.lifetime.end(i64 8, i8* %115) #4, !dbg !14417
  %116 = bitcast %struct.mpd_t* %r to i8*, !dbg !14417
  call void @llvm.lifetime.end(i64 48, i8* %116) #4, !dbg !14417
  %117 = bitcast [64 x i64]* %r_data to i8*, !dbg !14417
  call void @llvm.lifetime.end(i64 512, i8* %117) #4, !dbg !14417
  %118 = bitcast %struct.mpd_t* %q to i8*, !dbg !14417
  call void @llvm.lifetime.end(i64 48, i8* %118) #4, !dbg !14417
  %119 = bitcast [64 x i64]* %q_data to i8*, !dbg !14417
  call void @llvm.lifetime.end(i64 512, i8* %119) #4, !dbg !14417
  %120 = bitcast %struct.mpd_t* %c to i8*, !dbg !14417
  call void @llvm.lifetime.end(i64 48, i8* %120) #4, !dbg !14417
  %121 = bitcast [64 x i64]* %c_data to i8*, !dbg !14417
  call void @llvm.lifetime.end(i64 512, i8* %121) #4, !dbg !14417
  %122 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !14417
  call void @llvm.lifetime.end(i64 48, i8* %122) #4, !dbg !14417
  ret void, !dbg !14417
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qadd_exact(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workstatus = alloca i32, align 4
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !2300, metadata !2395), !dbg !14418
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !2301, metadata !2395), !dbg !14419
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !2302, metadata !2395), !dbg !14420
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !2303, metadata !2395), !dbg !14421
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2304, metadata !2395), !dbg !14422
  %0 = bitcast i32* %workstatus to i8*, !dbg !14423
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !14423
  call void @llvm.dbg.declare(metadata i32* %workstatus, metadata !2305, metadata !2395), !dbg !14424
  store i32 0, i32* %workstatus, align 4, !dbg !14424, !tbaa !2554
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14425, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14426, !tbaa !2505
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !14427, !tbaa !2505
  %4 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !14428, !tbaa !2505
  call void @mpd_qadd(%struct.mpd_t* %1, %struct.mpd_t* %2, %struct.mpd_t* %3, %struct.mpd_context_t* %4, i32* %workstatus), !dbg !14429
  %5 = load i32, i32* %workstatus, align 4, !dbg !14430, !tbaa !2554
  %6 = load i32*, i32** %status.addr, align 8, !dbg !14431, !tbaa !2505
  %7 = load i32, i32* %6, align 4, !dbg !14432, !tbaa !2554
  %or = or i32 %7, %5, !dbg !14432
  store i32 %or, i32* %6, align 4, !dbg !14432, !tbaa !2554
  %8 = load i32, i32* %workstatus, align 4, !dbg !14433, !tbaa !2554
  %and = and i32 %8, 4161, !dbg !14435
  %tobool = icmp ne i32 %and, 0, !dbg !14435
  br i1 %tobool, label %if.then, label %if.end, !dbg !14436

if.then:                                          ; preds = %entry
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14437, !tbaa !2505
  %10 = load i32*, i32** %status.addr, align 8, !dbg !14439, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %9, i32 256, i32* %10), !dbg !14440
  br label %if.end, !dbg !14441

if.end:                                           ; preds = %if.then, %entry
  %11 = bitcast i32* %workstatus to i8*, !dbg !14442
  call void @llvm.lifetime.end(i64 4, i8* %11) #4, !dbg !14442
  ret void, !dbg !14442
}

; Function Attrs: nounwind uwtable
define hidden i64 @mpd_sizeinbase(%struct.mpd_t* %a, i32 %base) #0 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %base.addr = alloca i32, align 4
  %x = alloca double, align 8
  %digits = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1366, metadata !2395), !dbg !14443
  store i32 %base, i32* %base.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !1367, metadata !2395), !dbg !14444
  %0 = bitcast double* %x to i8*, !dbg !14445
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !14445
  call void @llvm.dbg.declare(metadata double* %x, metadata !1368, metadata !2395), !dbg !14446
  %1 = bitcast i64* %digits to i8*, !dbg !14447
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !14447
  call void @llvm.dbg.declare(metadata i64* %digits, metadata !1369, metadata !2395), !dbg !14448
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14449, !tbaa !2505
  %call = call i32 @mpd_iszero(%struct.mpd_t* %2), !dbg !14451
  %tobool = icmp ne i32 %call, 0, !dbg !14451
  br i1 %tobool, label %if.then, label %if.end, !dbg !14452

if.then:                                          ; preds = %entry
  store i64 1, i64* %retval, !dbg !14453
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14453

if.end:                                           ; preds = %entry
  %3 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14455, !tbaa !2505
  %digits1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %3, i32 0, i32 2, !dbg !14456
  %4 = load i64, i64* %digits1, align 8, !dbg !14456, !tbaa !2514
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !14457, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %5, i32 0, i32 1, !dbg !14458
  %6 = load i64, i64* %exp, align 8, !dbg !14458, !tbaa !2510
  %add = add i64 %4, %6, !dbg !14459
  store i64 %add, i64* %digits, align 8, !dbg !14460, !tbaa !2391
  %7 = load i64, i64* %digits, align 8, !dbg !14461, !tbaa !2391
  %cmp = icmp ugt i64 %7, 2711437152599294, !dbg !14463
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !14464

if.then.2:                                        ; preds = %if.end
  store i64 -1, i64* %retval, !dbg !14465
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14465

if.end.3:                                         ; preds = %if.end
  %8 = load i64, i64* %digits, align 8, !dbg !14467, !tbaa !2391
  %conv = uitofp i64 %8 to double, !dbg !14468
  %9 = load i32, i32* %base.addr, align 4, !dbg !14469, !tbaa !2554
  %conv4 = uitofp i32 %9 to double, !dbg !14469
  %call5 = call double @log10(double %conv4) #4, !dbg !14470
  %div = fdiv double %conv, %call5, !dbg !14471
  store double %div, double* %x, align 8, !dbg !14472, !tbaa !14473
  %10 = load double, double* %x, align 8, !dbg !14475, !tbaa !14473
  %cmp6 = fcmp ogt double %10, 0x43F0000000000000, !dbg !14476
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !14477

cond.true:                                        ; preds = %if.end.3
  br label %cond.end, !dbg !14478

cond.false:                                       ; preds = %if.end.3
  %11 = load double, double* %x, align 8, !dbg !14480, !tbaa !14473
  %conv8 = fptoui double %11 to i64, !dbg !14482
  %add9 = add i64 %conv8, 1, !dbg !14483
  br label %cond.end, !dbg !14477

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ -1, %cond.true ], [ %add9, %cond.false ], !dbg !14477
  store i64 %cond, i64* %retval, !dbg !14484
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14487

cleanup:                                          ; preds = %cond.end, %if.then.2, %if.then
  %12 = bitcast i64* %digits to i8*, !dbg !14488
  call void @llvm.lifetime.end(i64 8, i8* %12) #4, !dbg !14488
  %13 = bitcast double* %x to i8*, !dbg !14488
  call void @llvm.lifetime.end(i64 8, i8* %13) #4, !dbg !14488
  %14 = load i64, i64* %retval, !dbg !14488
  ret i64 %14, !dbg !14488
}

; Function Attrs: nounwind
declare double @log10(double) #7

; Function Attrs: nounwind uwtable
define hidden i64 @mpd_qexport_u16(i16** %rdata, i64 %rlen, i32 %rbase, %struct.mpd_t* %src, i32* %status) #0 {
entry:
  %retval = alloca i64, align 8
  %rdata.addr = alloca i16**, align 8
  %rlen.addr = alloca i64, align 8
  %rbase.addr = alloca i32, align 4
  %src.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  %tsrc_data = alloca [64 x i64], align 16
  %tsrc = alloca %struct.mpd_t, align 8
  %alloc1 = alloca i32, align 4
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i16** %rdata, i16*** %rdata.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i16*** %rdata.addr, metadata !1376, metadata !2395), !dbg !14489
  store i64 %rlen, i64* %rlen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %rlen.addr, metadata !1377, metadata !2395), !dbg !14490
  store i32 %rbase, i32* %rbase.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %rbase.addr, metadata !1378, metadata !2395), !dbg !14491
  store %struct.mpd_t* %src, %struct.mpd_t** %src.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %src.addr, metadata !1379, metadata !2395), !dbg !14492
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1380, metadata !2395), !dbg !14493
  %0 = bitcast [64 x i64]* %tsrc_data to i8*, !dbg !14494
  call void @llvm.lifetime.start(i64 512, i8* %0) #4, !dbg !14494
  call void @llvm.dbg.declare(metadata [64 x i64]* %tsrc_data, metadata !1381, metadata !2395), !dbg !14495
  %1 = bitcast %struct.mpd_t* %tsrc to i8*, !dbg !14496
  call void @llvm.lifetime.start(i64 48, i8* %1) #4, !dbg !14496
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %tsrc, metadata !1382, metadata !2395), !dbg !14497
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 0, !dbg !14498
  store i8 48, i8* %flags, align 1, !dbg !14498, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 1, !dbg !14498
  store i64 0, i64* %exp, align 8, !dbg !14498, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 2, !dbg !14498
  store i64 0, i64* %digits, align 8, !dbg !14498, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 3, !dbg !14498
  store i64 0, i64* %len, align 8, !dbg !14498, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 4, !dbg !14498
  store i64 64, i64* %alloc, align 8, !dbg !14498, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 5, !dbg !14498
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %tsrc_data, i32 0, i32 0, !dbg !14499
  store i64* %arraydecay, i64** %data, align 8, !dbg !14498, !tbaa !2546
  %2 = bitcast i32* %alloc1 to i8*, !dbg !14500
  call void @llvm.lifetime.start(i64 4, i8* %2) #4, !dbg !14500
  call void @llvm.dbg.declare(metadata i32* %alloc1, metadata !1383, metadata !2395), !dbg !14501
  store i32 0, i32* %alloc1, align 4, !dbg !14501, !tbaa !2554
  %3 = bitcast i64* %n to i8*, !dbg !14502
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !14502
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1384, metadata !2395), !dbg !14503
  %4 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14504, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %4), !dbg !14506
  %tobool = icmp ne i32 %call, 0, !dbg !14506
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !14507

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14508, !tbaa !2505
  %call2 = call i32 @_mpd_isint(%struct.mpd_t* %5), !dbg !14510
  %tobool3 = icmp ne i32 %call2, 0, !dbg !14510
  br i1 %tobool3, label %if.end, label %if.then, !dbg !14511

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load i32*, i32** %status.addr, align 8, !dbg !14512, !tbaa !2505
  %7 = load i32, i32* %6, align 4, !dbg !14514, !tbaa !2554
  %or = or i32 %7, 256, !dbg !14514
  store i32 %or, i32* %6, align 4, !dbg !14514, !tbaa !2554
  store i64 -1, i64* %retval, !dbg !14515
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14515

if.end:                                           ; preds = %lor.lhs.false
  %8 = load i16**, i16*** %rdata.addr, align 8, !dbg !14516, !tbaa !2505
  %9 = load i16*, i16** %8, align 8, !dbg !14518, !tbaa !2505
  %cmp = icmp eq i16* %9, null, !dbg !14519
  br i1 %cmp, label %if.then.4, label %if.end.14, !dbg !14520

if.then.4:                                        ; preds = %if.end
  %10 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14521, !tbaa !2505
  %11 = load i32, i32* %rbase.addr, align 4, !dbg !14523, !tbaa !2554
  %call5 = call i64 @mpd_sizeinbase(%struct.mpd_t* %10, i32 %11), !dbg !14524
  store i64 %call5, i64* %rlen.addr, align 8, !dbg !14525, !tbaa !2391
  %12 = load i64, i64* %rlen.addr, align 8, !dbg !14526, !tbaa !2391
  %cmp6 = icmp eq i64 %12, -1, !dbg !14528
  br i1 %cmp6, label %if.then.7, label %if.end.9, !dbg !14529

if.then.7:                                        ; preds = %if.then.4
  %13 = load i32*, i32** %status.addr, align 8, !dbg !14530, !tbaa !2505
  %14 = load i32, i32* %13, align 4, !dbg !14532, !tbaa !2554
  %or8 = or i32 %14, 256, !dbg !14532
  store i32 %or8, i32* %13, align 4, !dbg !14532, !tbaa !2554
  store i64 -1, i64* %retval, !dbg !14533
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14533

if.end.9:                                         ; preds = %if.then.4
  %15 = load i64, i64* %rlen.addr, align 8, !dbg !14534, !tbaa !2391
  %call10 = call i8* @mpd_alloc(i64 %15, i64 2), !dbg !14535
  %16 = bitcast i8* %call10 to i16*, !dbg !14535
  %17 = load i16**, i16*** %rdata.addr, align 8, !dbg !14536, !tbaa !2505
  store i16* %16, i16** %17, align 8, !dbg !14537, !tbaa !2505
  %18 = load i16**, i16*** %rdata.addr, align 8, !dbg !14538, !tbaa !2505
  %19 = load i16*, i16** %18, align 8, !dbg !14540, !tbaa !2505
  %cmp11 = icmp eq i16* %19, null, !dbg !14541
  br i1 %cmp11, label %if.then.12, label %if.end.13, !dbg !14542

if.then.12:                                       ; preds = %if.end.9
  br label %malloc_error, !dbg !14543

if.end.13:                                        ; preds = %if.end.9
  store i32 1, i32* %alloc1, align 4, !dbg !14545, !tbaa !2554
  br label %if.end.14, !dbg !14546

if.end.14:                                        ; preds = %if.end.13, %if.end
  %20 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14547, !tbaa !2505
  %call15 = call i32 @mpd_iszero(%struct.mpd_t* %20), !dbg !14549
  %tobool16 = icmp ne i32 %call15, 0, !dbg !14549
  br i1 %tobool16, label %if.then.17, label %if.end.18, !dbg !14550

if.then.17:                                       ; preds = %if.end.14
  %21 = load i16**, i16*** %rdata.addr, align 8, !dbg !14551, !tbaa !2505
  %22 = load i16*, i16** %21, align 8, !dbg !14553, !tbaa !2505
  store i16 0, i16* %22, align 2, !dbg !14554, !tbaa !10273
  store i64 1, i64* %retval, !dbg !14555
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14555

if.end.18:                                        ; preds = %if.end.14
  %23 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14556, !tbaa !2505
  %exp19 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %23, i32 0, i32 1, !dbg !14558
  %24 = load i64, i64* %exp19, align 8, !dbg !14558, !tbaa !2510
  %cmp20 = icmp sge i64 %24, 0, !dbg !14559
  br i1 %cmp20, label %if.then.21, label %if.else, !dbg !14560

if.then.21:                                       ; preds = %if.end.18
  %25 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14561, !tbaa !2505
  %26 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14564, !tbaa !2505
  %exp22 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %26, i32 0, i32 1, !dbg !14565
  %27 = load i64, i64* %exp22, align 8, !dbg !14565, !tbaa !2510
  %28 = load i32*, i32** %status.addr, align 8, !dbg !14566, !tbaa !2505
  %call23 = call i32 @mpd_qshiftl(%struct.mpd_t* %tsrc, %struct.mpd_t* %25, i64 %27, i32* %28), !dbg !14567
  %tobool24 = icmp ne i32 %call23, 0, !dbg !14567
  br i1 %tobool24, label %if.end.26, label %if.then.25, !dbg !14568

if.then.25:                                       ; preds = %if.then.21
  br label %malloc_error, !dbg !14569

if.end.26:                                        ; preds = %if.then.21
  br label %if.end.32, !dbg !14571

if.else:                                          ; preds = %if.end.18
  %29 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14572, !tbaa !2505
  %30 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14575, !tbaa !2505
  %exp27 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %30, i32 0, i32 1, !dbg !14576
  %31 = load i64, i64* %exp27, align 8, !dbg !14576, !tbaa !2510
  %sub = sub i64 0, %31, !dbg !14577
  %32 = load i32*, i32** %status.addr, align 8, !dbg !14578, !tbaa !2505
  %call28 = call i64 @mpd_qshiftr(%struct.mpd_t* %tsrc, %struct.mpd_t* %29, i64 %sub, i32* %32), !dbg !14579
  %cmp29 = icmp eq i64 %call28, -1, !dbg !14580
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !14581

if.then.30:                                       ; preds = %if.else
  br label %malloc_error, !dbg !14582

if.end.31:                                        ; preds = %if.else
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.end.26
  %33 = load i16**, i16*** %rdata.addr, align 8, !dbg !14584, !tbaa !2505
  %34 = load i64, i64* %rlen.addr, align 8, !dbg !14585, !tbaa !2391
  %35 = load i32, i32* %rbase.addr, align 4, !dbg !14586, !tbaa !2554
  %conv = zext i32 %35 to i64, !dbg !14586
  %data33 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 5, !dbg !14587
  %36 = load i64*, i64** %data33, align 8, !dbg !14587, !tbaa !2546
  %len34 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 3, !dbg !14588
  %37 = load i64, i64* %len34, align 8, !dbg !14588, !tbaa !2542
  %call35 = call i64 @_baseconv_to_u16(i16** %33, i64 %34, i64 %conv, i64* %36, i64 %37), !dbg !14589
  store i64 %call35, i64* %n, align 8, !dbg !14590, !tbaa !2391
  %38 = load i64, i64* %n, align 8, !dbg !14591, !tbaa !2391
  %cmp36 = icmp eq i64 %38, -1, !dbg !14593
  br i1 %cmp36, label %if.then.38, label %if.end.39, !dbg !14594

if.then.38:                                       ; preds = %if.end.32
  br label %malloc_error, !dbg !14595

if.end.39:                                        ; preds = %if.end.32
  br label %out, !dbg !14597

out:                                              ; preds = %if.end.42, %if.end.39
  call void @mpd_del(%struct.mpd_t* %tsrc), !dbg !14599
  %39 = load i64, i64* %n, align 8, !dbg !14600, !tbaa !2391
  store i64 %39, i64* %retval, !dbg !14601
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14601

malloc_error:                                     ; preds = %if.then.38, %if.then.30, %if.then.25, %if.then.12
  %40 = load i32, i32* %alloc1, align 4, !dbg !14602, !tbaa !2554
  %tobool40 = icmp ne i32 %40, 0, !dbg !14602
  br i1 %tobool40, label %if.then.41, label %if.end.42, !dbg !14604

if.then.41:                                       ; preds = %malloc_error
  %41 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !14605, !tbaa !2505
  %42 = load i16**, i16*** %rdata.addr, align 8, !dbg !14607, !tbaa !2505
  %43 = load i16*, i16** %42, align 8, !dbg !14608, !tbaa !2505
  %44 = bitcast i16* %43 to i8*, !dbg !14608
  call void %41(i8* %44), !dbg !14605
  %45 = load i16**, i16*** %rdata.addr, align 8, !dbg !14609, !tbaa !2505
  store i16* null, i16** %45, align 8, !dbg !14610, !tbaa !2505
  br label %if.end.42, !dbg !14611

if.end.42:                                        ; preds = %if.then.41, %malloc_error
  store i64 -1, i64* %n, align 8, !dbg !14612, !tbaa !2391
  %46 = load i32*, i32** %status.addr, align 8, !dbg !14613, !tbaa !2505
  %47 = load i32, i32* %46, align 4, !dbg !14614, !tbaa !2554
  %or43 = or i32 %47, 512, !dbg !14614
  store i32 %or43, i32* %46, align 4, !dbg !14614, !tbaa !2554
  br label %out, !dbg !14615

cleanup:                                          ; preds = %out, %if.then.17, %if.then.7, %if.then
  %48 = bitcast i64* %n to i8*, !dbg !14616
  call void @llvm.lifetime.end(i64 8, i8* %48) #4, !dbg !14616
  %49 = bitcast i32* %alloc1 to i8*, !dbg !14616
  call void @llvm.lifetime.end(i64 4, i8* %49) #4, !dbg !14616
  %50 = bitcast %struct.mpd_t* %tsrc to i8*, !dbg !14616
  call void @llvm.lifetime.end(i64 48, i8* %50) #4, !dbg !14616
  %51 = bitcast [64 x i64]* %tsrc_data to i8*, !dbg !14616
  call void @llvm.lifetime.end(i64 512, i8* %51) #4, !dbg !14616
  %52 = load i64, i64* %retval, !dbg !14616
  ret i64 %52, !dbg !14616
}

declare hidden i8* @mpd_alloc(i64, i64) #5

; Function Attrs: nounwind uwtable
define internal i64 @_baseconv_to_u16(i16** %w, i64 %wlen, i64 %wbase, i64* %u, i64 %ulen) #0 {
entry:
  %retval = alloca i64, align 8
  %w.addr = alloca i16**, align 8
  %wlen.addr = alloca i64, align 8
  %wbase.addr = alloca i64, align 8
  %u.addr = alloca i64*, align 8
  %ulen.addr = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i16** %w, i16*** %w.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i16*** %w.addr, metadata !2310, metadata !2395), !dbg !14617
  store i64 %wlen, i64* %wlen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %wlen.addr, metadata !2311, metadata !2395), !dbg !14618
  store i64 %wbase, i64* %wbase.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %wbase.addr, metadata !2312, metadata !2395), !dbg !14619
  store i64* %u, i64** %u.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %u.addr, metadata !2313, metadata !2395), !dbg !14620
  store i64 %ulen, i64* %ulen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %ulen.addr, metadata !2314, metadata !2395), !dbg !14621
  %0 = bitcast i64* %n to i8*, !dbg !14622
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !14622
  call void @llvm.dbg.declare(metadata i64* %n, metadata !2315, metadata !2395), !dbg !14623
  store i64 0, i64* %n, align 8, !dbg !14623, !tbaa !2391
  br label %do.body, !dbg !14624

do.body:                                          ; preds = %do.cond, %entry
  %1 = load i64, i64* %n, align 8, !dbg !14625, !tbaa !2391
  %2 = load i64, i64* %wlen.addr, align 8, !dbg !14628, !tbaa !2391
  %cmp = icmp uge i64 %1, %2, !dbg !14629
  br i1 %cmp, label %if.then, label %if.end.3, !dbg !14630

if.then:                                          ; preds = %do.body
  %3 = load i16**, i16*** %w.addr, align 8, !dbg !14631, !tbaa !2505
  %4 = load i64, i64* %n, align 8, !dbg !14634, !tbaa !2391
  %add = add i64 %4, 1, !dbg !14635
  %call = call zeroext i8 @mpd_resize_u16(i16** %3, i64 %add), !dbg !14636
  %tobool = icmp ne i8 %call, 0, !dbg !14636
  br i1 %tobool, label %if.end, label %if.then.1, !dbg !14637

if.then.1:                                        ; preds = %if.then
  store i64 -1, i64* %retval, !dbg !14638
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14638

if.end:                                           ; preds = %if.then
  %5 = load i64, i64* %n, align 8, !dbg !14640, !tbaa !2391
  %add2 = add i64 %5, 1, !dbg !14641
  store i64 %add2, i64* %wlen.addr, align 8, !dbg !14642, !tbaa !2391
  br label %if.end.3, !dbg !14643

if.end.3:                                         ; preds = %if.end, %do.body
  %6 = load i64*, i64** %u.addr, align 8, !dbg !14644, !tbaa !2505
  %7 = load i64*, i64** %u.addr, align 8, !dbg !14645, !tbaa !2505
  %8 = load i64, i64* %ulen.addr, align 8, !dbg !14646, !tbaa !2391
  %9 = load i64, i64* %wbase.addr, align 8, !dbg !14647, !tbaa !2391
  %call4 = call i64 @_mpd_shortdiv(i64* %6, i64* %7, i64 %8, i64 %9), !dbg !14648
  %conv = trunc i64 %call4 to i16, !dbg !14649
  %10 = load i64, i64* %n, align 8, !dbg !14650, !tbaa !2391
  %inc = add i64 %10, 1, !dbg !14650
  store i64 %inc, i64* %n, align 8, !dbg !14650, !tbaa !2391
  %11 = load i16**, i16*** %w.addr, align 8, !dbg !14651, !tbaa !2505
  %12 = load i16*, i16** %11, align 8, !dbg !14652, !tbaa !2505
  %arrayidx = getelementptr i16, i16* %12, i64 %10, !dbg !14653
  store i16 %conv, i16* %arrayidx, align 2, !dbg !14654, !tbaa !10273
  %13 = load i64*, i64** %u.addr, align 8, !dbg !14655, !tbaa !2505
  %14 = load i64, i64* %ulen.addr, align 8, !dbg !14656, !tbaa !2391
  %call5 = call i64 @_mpd_real_size(i64* %13, i64 %14), !dbg !14657
  store i64 %call5, i64* %ulen.addr, align 8, !dbg !14658, !tbaa !2391
  br label %do.cond, !dbg !14659

do.cond:                                          ; preds = %if.end.3
  %15 = load i64, i64* %ulen.addr, align 8, !dbg !14660, !tbaa !2391
  %sub = sub i64 %15, 1, !dbg !14662
  %16 = load i64*, i64** %u.addr, align 8, !dbg !14663, !tbaa !2505
  %arrayidx6 = getelementptr i64, i64* %16, i64 %sub, !dbg !14663
  %17 = load i64, i64* %arrayidx6, align 8, !dbg !14663, !tbaa !2391
  %cmp7 = icmp ne i64 %17, 0, !dbg !14664
  br i1 %cmp7, label %do.body, label %do.end, !dbg !14659

do.end:                                           ; preds = %do.cond
  %18 = load i64, i64* %n, align 8, !dbg !14665, !tbaa !2391
  store i64 %18, i64* %retval, !dbg !14666
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14666

cleanup:                                          ; preds = %do.end, %if.then.1
  %19 = bitcast i64* %n to i8*, !dbg !14667
  call void @llvm.lifetime.end(i64 8, i8* %19) #4, !dbg !14667
  %20 = load i64, i64* %retval, !dbg !14667
  ret i64 %20, !dbg !14667
}

; Function Attrs: nounwind uwtable
define hidden i64 @mpd_qexport_u32(i32** %rdata, i64 %rlen, i32 %rbase, %struct.mpd_t* %src, i32* %status) #0 {
entry:
  %retval = alloca i64, align 8
  %rdata.addr = alloca i32**, align 8
  %rlen.addr = alloca i64, align 8
  %rbase.addr = alloca i32, align 4
  %src.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  %tsrc_data = alloca [64 x i64], align 16
  %tsrc = alloca %struct.mpd_t, align 8
  %alloc1 = alloca i32, align 4
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i32** %rdata, i32*** %rdata.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32*** %rdata.addr, metadata !1390, metadata !2395), !dbg !14668
  store i64 %rlen, i64* %rlen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %rlen.addr, metadata !1391, metadata !2395), !dbg !14669
  store i32 %rbase, i32* %rbase.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %rbase.addr, metadata !1392, metadata !2395), !dbg !14670
  store %struct.mpd_t* %src, %struct.mpd_t** %src.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %src.addr, metadata !1393, metadata !2395), !dbg !14671
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1394, metadata !2395), !dbg !14672
  %0 = bitcast [64 x i64]* %tsrc_data to i8*, !dbg !14673
  call void @llvm.lifetime.start(i64 512, i8* %0) #4, !dbg !14673
  call void @llvm.dbg.declare(metadata [64 x i64]* %tsrc_data, metadata !1395, metadata !2395), !dbg !14674
  %1 = bitcast %struct.mpd_t* %tsrc to i8*, !dbg !14675
  call void @llvm.lifetime.start(i64 48, i8* %1) #4, !dbg !14675
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %tsrc, metadata !1396, metadata !2395), !dbg !14676
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 0, !dbg !14677
  store i8 48, i8* %flags, align 1, !dbg !14677, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 1, !dbg !14677
  store i64 0, i64* %exp, align 8, !dbg !14677, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 2, !dbg !14677
  store i64 0, i64* %digits, align 8, !dbg !14677, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 3, !dbg !14677
  store i64 0, i64* %len, align 8, !dbg !14677, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 4, !dbg !14677
  store i64 64, i64* %alloc, align 8, !dbg !14677, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 5, !dbg !14677
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %tsrc_data, i32 0, i32 0, !dbg !14678
  store i64* %arraydecay, i64** %data, align 8, !dbg !14677, !tbaa !2546
  %2 = bitcast i32* %alloc1 to i8*, !dbg !14679
  call void @llvm.lifetime.start(i64 4, i8* %2) #4, !dbg !14679
  call void @llvm.dbg.declare(metadata i32* %alloc1, metadata !1397, metadata !2395), !dbg !14680
  store i32 0, i32* %alloc1, align 4, !dbg !14680, !tbaa !2554
  %3 = bitcast i64* %n to i8*, !dbg !14681
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !14681
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1398, metadata !2395), !dbg !14682
  %4 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14683, !tbaa !2505
  %call = call i32 @mpd_isspecial(%struct.mpd_t* %4), !dbg !14685
  %tobool = icmp ne i32 %call, 0, !dbg !14685
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !14686

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14687, !tbaa !2505
  %call2 = call i32 @_mpd_isint(%struct.mpd_t* %5), !dbg !14689
  %tobool3 = icmp ne i32 %call2, 0, !dbg !14689
  br i1 %tobool3, label %if.end, label %if.then, !dbg !14690

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load i32*, i32** %status.addr, align 8, !dbg !14691, !tbaa !2505
  %7 = load i32, i32* %6, align 4, !dbg !14693, !tbaa !2554
  %or = or i32 %7, 256, !dbg !14693
  store i32 %or, i32* %6, align 4, !dbg !14693, !tbaa !2554
  store i64 -1, i64* %retval, !dbg !14694
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14694

if.end:                                           ; preds = %lor.lhs.false
  %8 = load i32**, i32*** %rdata.addr, align 8, !dbg !14695, !tbaa !2505
  %9 = load i32*, i32** %8, align 8, !dbg !14697, !tbaa !2505
  %cmp = icmp eq i32* %9, null, !dbg !14698
  br i1 %cmp, label %if.then.4, label %if.end.14, !dbg !14699

if.then.4:                                        ; preds = %if.end
  %10 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14700, !tbaa !2505
  %11 = load i32, i32* %rbase.addr, align 4, !dbg !14702, !tbaa !2554
  %call5 = call i64 @mpd_sizeinbase(%struct.mpd_t* %10, i32 %11), !dbg !14703
  store i64 %call5, i64* %rlen.addr, align 8, !dbg !14704, !tbaa !2391
  %12 = load i64, i64* %rlen.addr, align 8, !dbg !14705, !tbaa !2391
  %cmp6 = icmp eq i64 %12, -1, !dbg !14707
  br i1 %cmp6, label %if.then.7, label %if.end.9, !dbg !14708

if.then.7:                                        ; preds = %if.then.4
  %13 = load i32*, i32** %status.addr, align 8, !dbg !14709, !tbaa !2505
  %14 = load i32, i32* %13, align 4, !dbg !14711, !tbaa !2554
  %or8 = or i32 %14, 256, !dbg !14711
  store i32 %or8, i32* %13, align 4, !dbg !14711, !tbaa !2554
  store i64 -1, i64* %retval, !dbg !14712
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14712

if.end.9:                                         ; preds = %if.then.4
  %15 = load i64, i64* %rlen.addr, align 8, !dbg !14713, !tbaa !2391
  %call10 = call i8* @mpd_alloc(i64 %15, i64 4), !dbg !14714
  %16 = bitcast i8* %call10 to i32*, !dbg !14714
  %17 = load i32**, i32*** %rdata.addr, align 8, !dbg !14715, !tbaa !2505
  store i32* %16, i32** %17, align 8, !dbg !14716, !tbaa !2505
  %18 = load i32**, i32*** %rdata.addr, align 8, !dbg !14717, !tbaa !2505
  %19 = load i32*, i32** %18, align 8, !dbg !14719, !tbaa !2505
  %cmp11 = icmp eq i32* %19, null, !dbg !14720
  br i1 %cmp11, label %if.then.12, label %if.end.13, !dbg !14721

if.then.12:                                       ; preds = %if.end.9
  br label %malloc_error, !dbg !14722

if.end.13:                                        ; preds = %if.end.9
  store i32 1, i32* %alloc1, align 4, !dbg !14724, !tbaa !2554
  br label %if.end.14, !dbg !14725

if.end.14:                                        ; preds = %if.end.13, %if.end
  %20 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14726, !tbaa !2505
  %call15 = call i32 @mpd_iszero(%struct.mpd_t* %20), !dbg !14728
  %tobool16 = icmp ne i32 %call15, 0, !dbg !14728
  br i1 %tobool16, label %if.then.17, label %if.end.18, !dbg !14729

if.then.17:                                       ; preds = %if.end.14
  %21 = load i32**, i32*** %rdata.addr, align 8, !dbg !14730, !tbaa !2505
  %22 = load i32*, i32** %21, align 8, !dbg !14732, !tbaa !2505
  store i32 0, i32* %22, align 4, !dbg !14733, !tbaa !2554
  store i64 1, i64* %retval, !dbg !14734
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14734

if.end.18:                                        ; preds = %if.end.14
  %23 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14735, !tbaa !2505
  %exp19 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %23, i32 0, i32 1, !dbg !14737
  %24 = load i64, i64* %exp19, align 8, !dbg !14737, !tbaa !2510
  %cmp20 = icmp sge i64 %24, 0, !dbg !14738
  br i1 %cmp20, label %if.then.21, label %if.else, !dbg !14739

if.then.21:                                       ; preds = %if.end.18
  %25 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14740, !tbaa !2505
  %26 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14743, !tbaa !2505
  %exp22 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %26, i32 0, i32 1, !dbg !14744
  %27 = load i64, i64* %exp22, align 8, !dbg !14744, !tbaa !2510
  %28 = load i32*, i32** %status.addr, align 8, !dbg !14745, !tbaa !2505
  %call23 = call i32 @mpd_qshiftl(%struct.mpd_t* %tsrc, %struct.mpd_t* %25, i64 %27, i32* %28), !dbg !14746
  %tobool24 = icmp ne i32 %call23, 0, !dbg !14746
  br i1 %tobool24, label %if.end.26, label %if.then.25, !dbg !14747

if.then.25:                                       ; preds = %if.then.21
  br label %malloc_error, !dbg !14748

if.end.26:                                        ; preds = %if.then.21
  br label %if.end.32, !dbg !14750

if.else:                                          ; preds = %if.end.18
  %29 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14751, !tbaa !2505
  %30 = load %struct.mpd_t*, %struct.mpd_t** %src.addr, align 8, !dbg !14754, !tbaa !2505
  %exp27 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %30, i32 0, i32 1, !dbg !14755
  %31 = load i64, i64* %exp27, align 8, !dbg !14755, !tbaa !2510
  %sub = sub i64 0, %31, !dbg !14756
  %32 = load i32*, i32** %status.addr, align 8, !dbg !14757, !tbaa !2505
  %call28 = call i64 @mpd_qshiftr(%struct.mpd_t* %tsrc, %struct.mpd_t* %29, i64 %sub, i32* %32), !dbg !14758
  %cmp29 = icmp eq i64 %call28, -1, !dbg !14759
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !14760

if.then.30:                                       ; preds = %if.else
  br label %malloc_error, !dbg !14761

if.end.31:                                        ; preds = %if.else
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.end.26
  %33 = load i32**, i32*** %rdata.addr, align 8, !dbg !14763, !tbaa !2505
  %34 = load i64, i64* %rlen.addr, align 8, !dbg !14764, !tbaa !2391
  %35 = load i32, i32* %rbase.addr, align 4, !dbg !14765, !tbaa !2554
  %data33 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 5, !dbg !14766
  %36 = load i64*, i64** %data33, align 8, !dbg !14766, !tbaa !2546
  %len34 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %tsrc, i32 0, i32 3, !dbg !14767
  %37 = load i64, i64* %len34, align 8, !dbg !14767, !tbaa !2542
  %call35 = call i64 @_baseconv_to_smaller(i32** %33, i64 %34, i32 %35, i64* %36, i64 %37, i64 -8446744073709551616), !dbg !14768
  store i64 %call35, i64* %n, align 8, !dbg !14769, !tbaa !2391
  %38 = load i64, i64* %n, align 8, !dbg !14770, !tbaa !2391
  %cmp36 = icmp eq i64 %38, -1, !dbg !14772
  br i1 %cmp36, label %if.then.37, label %if.end.38, !dbg !14773

if.then.37:                                       ; preds = %if.end.32
  br label %malloc_error, !dbg !14774

if.end.38:                                        ; preds = %if.end.32
  br label %out, !dbg !14776

out:                                              ; preds = %if.end.41, %if.end.38
  call void @mpd_del(%struct.mpd_t* %tsrc), !dbg !14778
  %39 = load i64, i64* %n, align 8, !dbg !14779, !tbaa !2391
  store i64 %39, i64* %retval, !dbg !14780
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14780

malloc_error:                                     ; preds = %if.then.37, %if.then.30, %if.then.25, %if.then.12
  %40 = load i32, i32* %alloc1, align 4, !dbg !14781, !tbaa !2554
  %tobool39 = icmp ne i32 %40, 0, !dbg !14781
  br i1 %tobool39, label %if.then.40, label %if.end.41, !dbg !14783

if.then.40:                                       ; preds = %malloc_error
  %41 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !14784, !tbaa !2505
  %42 = load i32**, i32*** %rdata.addr, align 8, !dbg !14786, !tbaa !2505
  %43 = load i32*, i32** %42, align 8, !dbg !14787, !tbaa !2505
  %44 = bitcast i32* %43 to i8*, !dbg !14787
  call void %41(i8* %44), !dbg !14784
  %45 = load i32**, i32*** %rdata.addr, align 8, !dbg !14788, !tbaa !2505
  store i32* null, i32** %45, align 8, !dbg !14789, !tbaa !2505
  br label %if.end.41, !dbg !14790

if.end.41:                                        ; preds = %if.then.40, %malloc_error
  store i64 -1, i64* %n, align 8, !dbg !14791, !tbaa !2391
  %46 = load i32*, i32** %status.addr, align 8, !dbg !14792, !tbaa !2505
  %47 = load i32, i32* %46, align 4, !dbg !14793, !tbaa !2554
  %or42 = or i32 %47, 512, !dbg !14793
  store i32 %or42, i32* %46, align 4, !dbg !14793, !tbaa !2554
  br label %out, !dbg !14794

cleanup:                                          ; preds = %out, %if.then.17, %if.then.7, %if.then
  %48 = bitcast i64* %n to i8*, !dbg !14795
  call void @llvm.lifetime.end(i64 8, i8* %48) #4, !dbg !14795
  %49 = bitcast i32* %alloc1 to i8*, !dbg !14795
  call void @llvm.lifetime.end(i64 4, i8* %49) #4, !dbg !14795
  %50 = bitcast %struct.mpd_t* %tsrc to i8*, !dbg !14795
  call void @llvm.lifetime.end(i64 48, i8* %50) #4, !dbg !14795
  %51 = bitcast [64 x i64]* %tsrc_data to i8*, !dbg !14795
  call void @llvm.lifetime.end(i64 512, i8* %51) #4, !dbg !14795
  %52 = load i64, i64* %retval, !dbg !14795
  ret i64 %52, !dbg !14795
}

; Function Attrs: nounwind uwtable
define internal i64 @_baseconv_to_smaller(i32** %w, i64 %wlen, i32 %wbase, i64* %u, i64 %ulen, i64 %ubase) #0 {
entry:
  %retval = alloca i64, align 8
  %w.addr = alloca i32**, align 8
  %wlen.addr = alloca i64, align 8
  %wbase.addr = alloca i32, align 4
  %u.addr = alloca i64*, align 8
  %ulen.addr = alloca i64, align 8
  %ubase.addr = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i32** %w, i32*** %w.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32*** %w.addr, metadata !2327, metadata !2395), !dbg !14796
  store i64 %wlen, i64* %wlen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %wlen.addr, metadata !2328, metadata !2395), !dbg !14797
  store i32 %wbase, i32* %wbase.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %wbase.addr, metadata !2329, metadata !2395), !dbg !14798
  store i64* %u, i64** %u.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %u.addr, metadata !2330, metadata !2395), !dbg !14799
  store i64 %ulen, i64* %ulen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %ulen.addr, metadata !2331, metadata !2395), !dbg !14800
  store i64 %ubase, i64* %ubase.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %ubase.addr, metadata !2332, metadata !2395), !dbg !14801
  %0 = bitcast i64* %n to i8*, !dbg !14802
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !14802
  call void @llvm.dbg.declare(metadata i64* %n, metadata !2333, metadata !2395), !dbg !14803
  store i64 0, i64* %n, align 8, !dbg !14803, !tbaa !2391
  br label %do.body, !dbg !14804

do.body:                                          ; preds = %do.cond, %entry
  %1 = load i64, i64* %n, align 8, !dbg !14805, !tbaa !2391
  %2 = load i64, i64* %wlen.addr, align 8, !dbg !14808, !tbaa !2391
  %cmp = icmp uge i64 %1, %2, !dbg !14809
  br i1 %cmp, label %if.then, label %if.end.3, !dbg !14810

if.then:                                          ; preds = %do.body
  %3 = load i32**, i32*** %w.addr, align 8, !dbg !14811, !tbaa !2505
  %4 = load i64, i64* %n, align 8, !dbg !14814, !tbaa !2391
  %add = add i64 %4, 1, !dbg !14815
  %call = call zeroext i8 @mpd_resize_u32(i32** %3, i64 %add), !dbg !14816
  %tobool = icmp ne i8 %call, 0, !dbg !14816
  br i1 %tobool, label %if.end, label %if.then.1, !dbg !14817

if.then.1:                                        ; preds = %if.then
  store i64 -1, i64* %retval, !dbg !14818
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14818

if.end:                                           ; preds = %if.then
  %5 = load i64, i64* %n, align 8, !dbg !14820, !tbaa !2391
  %add2 = add i64 %5, 1, !dbg !14821
  store i64 %add2, i64* %wlen.addr, align 8, !dbg !14822, !tbaa !2391
  br label %if.end.3, !dbg !14823

if.end.3:                                         ; preds = %if.end, %do.body
  %6 = load i64*, i64** %u.addr, align 8, !dbg !14824, !tbaa !2505
  %7 = load i64*, i64** %u.addr, align 8, !dbg !14825, !tbaa !2505
  %8 = load i64, i64* %ulen.addr, align 8, !dbg !14826, !tbaa !2391
  %9 = load i32, i32* %wbase.addr, align 4, !dbg !14827, !tbaa !2554
  %conv = zext i32 %9 to i64, !dbg !14827
  %10 = load i64, i64* %ubase.addr, align 8, !dbg !14828, !tbaa !2391
  %call4 = call i64 @_mpd_shortdiv_b(i64* %6, i64* %7, i64 %8, i64 %conv, i64 %10), !dbg !14829
  %conv5 = trunc i64 %call4 to i32, !dbg !14830
  %11 = load i64, i64* %n, align 8, !dbg !14831, !tbaa !2391
  %inc = add i64 %11, 1, !dbg !14831
  store i64 %inc, i64* %n, align 8, !dbg !14831, !tbaa !2391
  %12 = load i32**, i32*** %w.addr, align 8, !dbg !14832, !tbaa !2505
  %13 = load i32*, i32** %12, align 8, !dbg !14833, !tbaa !2505
  %arrayidx = getelementptr i32, i32* %13, i64 %11, !dbg !14834
  store i32 %conv5, i32* %arrayidx, align 4, !dbg !14835, !tbaa !2554
  %14 = load i64*, i64** %u.addr, align 8, !dbg !14836, !tbaa !2505
  %15 = load i64, i64* %ulen.addr, align 8, !dbg !14837, !tbaa !2391
  %call6 = call i64 @_mpd_real_size(i64* %14, i64 %15), !dbg !14838
  store i64 %call6, i64* %ulen.addr, align 8, !dbg !14839, !tbaa !2391
  br label %do.cond, !dbg !14840

do.cond:                                          ; preds = %if.end.3
  %16 = load i64, i64* %ulen.addr, align 8, !dbg !14841, !tbaa !2391
  %sub = sub i64 %16, 1, !dbg !14843
  %17 = load i64*, i64** %u.addr, align 8, !dbg !14844, !tbaa !2505
  %arrayidx7 = getelementptr i64, i64* %17, i64 %sub, !dbg !14844
  %18 = load i64, i64* %arrayidx7, align 8, !dbg !14844, !tbaa !2391
  %cmp8 = icmp ne i64 %18, 0, !dbg !14845
  br i1 %cmp8, label %do.body, label %do.end, !dbg !14840

do.end:                                           ; preds = %do.cond
  %19 = load i64, i64* %n, align 8, !dbg !14846, !tbaa !2391
  store i64 %19, i64* %retval, !dbg !14847
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14847

cleanup:                                          ; preds = %do.end, %if.then.1
  %20 = bitcast i64* %n to i8*, !dbg !14848
  call void @llvm.lifetime.end(i64 8, i8* %20) #4, !dbg !14848
  %21 = load i64, i64* %retval, !dbg !14848
  ret i64 %21, !dbg !14848
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qimport_u16(%struct.mpd_t* %result, i16* %srcdata, i64 %srclen, i8 zeroext %srcsign, i32 %srcbase, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %srcdata.addr = alloca i16*, align 8
  %srclen.addr = alloca i64, align 8
  %srcsign.addr = alloca i8, align 1
  %srcbase.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %usrc = alloca i64*, align 8
  %rlen = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1405, metadata !2395), !dbg !14849
  store i16* %srcdata, i16** %srcdata.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i16** %srcdata.addr, metadata !1406, metadata !2395), !dbg !14850
  store i64 %srclen, i64* %srclen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %srclen.addr, metadata !1407, metadata !2395), !dbg !14851
  store i8 %srcsign, i8* %srcsign.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %srcsign.addr, metadata !1408, metadata !2395), !dbg !14852
  store i32 %srcbase, i32* %srcbase.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %srcbase.addr, metadata !1409, metadata !2395), !dbg !14853
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1410, metadata !2395), !dbg !14854
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1411, metadata !2395), !dbg !14855
  %0 = bitcast i64** %usrc to i8*, !dbg !14856
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !14856
  call void @llvm.dbg.declare(metadata i64** %usrc, metadata !1412, metadata !2395), !dbg !14857
  %1 = bitcast i64* %rlen to i8*, !dbg !14858
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !14858
  call void @llvm.dbg.declare(metadata i64* %rlen, metadata !1413, metadata !2395), !dbg !14859
  %2 = bitcast i64* %n to i8*, !dbg !14860
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !14860
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1414, metadata !2395), !dbg !14861
  %3 = load i64, i64* %srclen.addr, align 8, !dbg !14862, !tbaa !2391
  %4 = load i32, i32* %srcbase.addr, align 4, !dbg !14863, !tbaa !2554
  %call = call i64 @_mpd_importsize(i64 %3, i32 %4), !dbg !14864
  store i64 %call, i64* %rlen, align 8, !dbg !14865, !tbaa !2391
  %5 = load i64, i64* %rlen, align 8, !dbg !14866, !tbaa !2391
  %cmp = icmp eq i64 %5, 9223372036854775807, !dbg !14868
  br i1 %cmp, label %if.then, label %if.end, !dbg !14869

if.then:                                          ; preds = %entry
  %6 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14870, !tbaa !2505
  %7 = load i32*, i32** %status.addr, align 8, !dbg !14872, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %6, i32 256, i32* %7), !dbg !14873
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14874

if.end:                                           ; preds = %entry
  %8 = load i64, i64* %srclen.addr, align 8, !dbg !14875, !tbaa !2391
  %call1 = call i8* @mpd_alloc(i64 %8, i64 8), !dbg !14876
  %9 = bitcast i8* %call1 to i64*, !dbg !14876
  store i64* %9, i64** %usrc, align 8, !dbg !14877, !tbaa !2505
  %10 = load i64*, i64** %usrc, align 8, !dbg !14878, !tbaa !2505
  %cmp2 = icmp eq i64* %10, null, !dbg !14880
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !14881

if.then.3:                                        ; preds = %if.end
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14882, !tbaa !2505
  %12 = load i32*, i32** %status.addr, align 8, !dbg !14884, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %11, i32 512, i32* %12), !dbg !14885
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14886

if.end.4:                                         ; preds = %if.end
  store i64 0, i64* %n, align 8, !dbg !14887, !tbaa !2391
  br label %for.cond, !dbg !14889

for.cond:                                         ; preds = %for.inc, %if.end.4
  %13 = load i64, i64* %n, align 8, !dbg !14890, !tbaa !2391
  %14 = load i64, i64* %srclen.addr, align 8, !dbg !14894, !tbaa !2391
  %cmp5 = icmp ult i64 %13, %14, !dbg !14895
  br i1 %cmp5, label %for.body, label %for.end, !dbg !14896

for.body:                                         ; preds = %for.cond
  %15 = load i64, i64* %n, align 8, !dbg !14897, !tbaa !2391
  %16 = load i16*, i16** %srcdata.addr, align 8, !dbg !14899, !tbaa !2505
  %arrayidx = getelementptr i16, i16* %16, i64 %15, !dbg !14899
  %17 = load i16, i16* %arrayidx, align 2, !dbg !14899, !tbaa !10273
  %conv = zext i16 %17 to i64, !dbg !14899
  %18 = load i64, i64* %n, align 8, !dbg !14900, !tbaa !2391
  %19 = load i64*, i64** %usrc, align 8, !dbg !14901, !tbaa !2505
  %arrayidx6 = getelementptr i64, i64* %19, i64 %18, !dbg !14901
  store i64 %conv, i64* %arrayidx6, align 8, !dbg !14902, !tbaa !2391
  br label %for.inc, !dbg !14903

for.inc:                                          ; preds = %for.body
  %20 = load i64, i64* %n, align 8, !dbg !14904, !tbaa !2391
  %inc = add i64 %20, 1, !dbg !14904
  store i64 %inc, i64* %n, align 8, !dbg !14904, !tbaa !2391
  br label %for.cond, !dbg !14905

for.end:                                          ; preds = %for.cond
  %21 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14906, !tbaa !2505
  %22 = load i64, i64* %rlen, align 8, !dbg !14908, !tbaa !2391
  %23 = load i32*, i32** %status.addr, align 8, !dbg !14909, !tbaa !2505
  %call7 = call i32 @mpd_qresize(%struct.mpd_t* %21, i64 %22, i32* %23), !dbg !14910
  %tobool = icmp ne i32 %call7, 0, !dbg !14910
  br i1 %tobool, label %if.end.9, label %if.then.8, !dbg !14911

if.then.8:                                        ; preds = %for.end
  br label %finish, !dbg !14912

if.end.9:                                         ; preds = %for.end
  %24 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14914, !tbaa !2505
  %25 = load i64, i64* %rlen, align 8, !dbg !14915, !tbaa !2391
  %26 = load i64*, i64** %usrc, align 8, !dbg !14916, !tbaa !2505
  %27 = load i64, i64* %srclen.addr, align 8, !dbg !14917, !tbaa !2391
  %28 = load i32, i32* %srcbase.addr, align 4, !dbg !14918, !tbaa !2554
  %29 = load i32*, i32** %status.addr, align 8, !dbg !14919, !tbaa !2505
  %call10 = call i64 @_coeff_from_u16(%struct.mpd_t* %24, i64 %25, i64* %26, i64 %27, i32 %28, i32* %29), !dbg !14920
  store i64 %call10, i64* %n, align 8, !dbg !14921, !tbaa !2391
  %30 = load i64, i64* %n, align 8, !dbg !14922, !tbaa !2391
  %cmp11 = icmp eq i64 %30, -1, !dbg !14924
  br i1 %cmp11, label %if.then.13, label %if.end.14, !dbg !14925

if.then.13:                                       ; preds = %if.end.9
  br label %finish, !dbg !14926

if.end.14:                                        ; preds = %if.end.9
  %31 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14928, !tbaa !2505
  %32 = load i8, i8* %srcsign.addr, align 1, !dbg !14929, !tbaa !2930
  call void @mpd_set_flags(%struct.mpd_t* %31, i8 zeroext %32), !dbg !14930
  %33 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14931, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %33, i32 0, i32 1, !dbg !14932
  store i64 0, i64* %exp, align 8, !dbg !14933, !tbaa !2510
  %34 = load i64, i64* %n, align 8, !dbg !14934, !tbaa !2391
  %35 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14935, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %35, i32 0, i32 3, !dbg !14936
  store i64 %34, i64* %len, align 8, !dbg !14937, !tbaa !2542
  %36 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14938, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %36), !dbg !14939
  %37 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14940, !tbaa !2505
  %38 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14941, !tbaa !2505
  %len15 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %38, i32 0, i32 3, !dbg !14942
  %39 = load i64, i64* %len15, align 8, !dbg !14942, !tbaa !2542
  %40 = load i32*, i32** %status.addr, align 8, !dbg !14943, !tbaa !2505
  %call16 = call i32 @mpd_qresize(%struct.mpd_t* %37, i64 %39, i32* %40), !dbg !14944
  %41 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !14945, !tbaa !2505
  %42 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !14946, !tbaa !2505
  %43 = load i32*, i32** %status.addr, align 8, !dbg !14947, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %41, %struct.mpd_context_t* %42, i32* %43), !dbg !14948
  br label %finish, !dbg !14948

finish:                                           ; preds = %if.end.14, %if.then.13, %if.then.8
  %44 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !14949, !tbaa !2505
  %45 = load i64*, i64** %usrc, align 8, !dbg !14950, !tbaa !2505
  %46 = bitcast i64* %45 to i8*, !dbg !14950
  call void %44(i8* %46), !dbg !14949
  store i32 0, i32* %cleanup.dest.slot, !dbg !14951
  br label %cleanup, !dbg !14951

cleanup:                                          ; preds = %finish, %if.then.3, %if.then
  %47 = bitcast i64* %n to i8*, !dbg !14952
  call void @llvm.lifetime.end(i64 8, i8* %47) #4, !dbg !14952
  %48 = bitcast i64* %rlen to i8*, !dbg !14952
  call void @llvm.lifetime.end(i64 8, i8* %48) #4, !dbg !14952
  %49 = bitcast i64** %usrc to i8*, !dbg !14952
  call void @llvm.lifetime.end(i64 8, i8* %49) #4, !dbg !14952
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !14951

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i64 @_mpd_importsize(i64 %srclen, i32 %base) #0 {
entry:
  %retval = alloca i64, align 8
  %srclen.addr = alloca i64, align 8
  %base.addr = alloca i32, align 4
  %x = alloca double, align 8
  %cleanup.dest.slot = alloca i32
  store i64 %srclen, i64* %srclen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %srclen.addr, metadata !2345, metadata !2395), !dbg !14954
  store i32 %base, i32* %base.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !2346, metadata !2395), !dbg !14955
  %0 = bitcast double* %x to i8*, !dbg !14956
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !14956
  call void @llvm.dbg.declare(metadata double* %x, metadata !2347, metadata !2395), !dbg !14957
  %1 = load i64, i64* %srclen.addr, align 8, !dbg !14958, !tbaa !2391
  %cmp = icmp ugt i64 %1, 9007199254740992, !dbg !14960
  br i1 %cmp, label %if.then, label %if.end, !dbg !14961

if.then:                                          ; preds = %entry
  store i64 9223372036854775807, i64* %retval, !dbg !14962
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14962

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %srclen.addr, align 8, !dbg !14964, !tbaa !2391
  %conv = uitofp i64 %2 to double, !dbg !14965
  %3 = load i32, i32* %base.addr, align 4, !dbg !14966, !tbaa !2554
  %conv1 = uitofp i32 %3 to double, !dbg !14966
  %call = call double @log10(double %conv1) #4, !dbg !14967
  %div = fdiv double %call, 1.900000e+01, !dbg !14968
  %mul = fmul double %conv, %div, !dbg !14969
  store double %mul, double* %x, align 8, !dbg !14970, !tbaa !14473
  %4 = load double, double* %x, align 8, !dbg !14971, !tbaa !14473
  %cmp2 = fcmp oge double %4, 0x43775F848CE406BD, !dbg !14972
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !14973

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !14974

cond.false:                                       ; preds = %if.end
  %5 = load double, double* %x, align 8, !dbg !14976, !tbaa !14473
  %conv4 = fptosi double %5 to i64, !dbg !14978
  %add = add i64 %conv4, 1, !dbg !14979
  br label %cond.end, !dbg !14973

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 9223372036854775807, %cond.true ], [ %add, %cond.false ], !dbg !14973
  store i64 %cond, i64* %retval, !dbg !14980
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14983

cleanup:                                          ; preds = %cond.end, %if.then
  %6 = bitcast double* %x to i8*, !dbg !14984
  call void @llvm.lifetime.end(i64 8, i8* %6) #4, !dbg !14984
  %7 = load i64, i64* %retval, !dbg !14984
  ret i64 %7, !dbg !14984
}

; Function Attrs: nounwind uwtable
define internal i64 @_coeff_from_u16(%struct.mpd_t* %w, i64 %wlen, i64* %u, i64 %ulen, i32 %ubase, i32* %status) #0 {
entry:
  %retval = alloca i64, align 8
  %w.addr = alloca %struct.mpd_t*, align 8
  %wlen.addr = alloca i64, align 8
  %u.addr = alloca i64*, align 8
  %ulen.addr = alloca i64, align 8
  %ubase.addr = alloca i32, align 4
  %status.addr = alloca i32*, align 8
  %n = alloca i64, align 8
  %carry = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %w, %struct.mpd_t** %w.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %w.addr, metadata !2352, metadata !2395), !dbg !14985
  store i64 %wlen, i64* %wlen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %wlen.addr, metadata !2353, metadata !2395), !dbg !14986
  store i64* %u, i64** %u.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %u.addr, metadata !2354, metadata !2395), !dbg !14987
  store i64 %ulen, i64* %ulen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %ulen.addr, metadata !2355, metadata !2395), !dbg !14988
  store i32 %ubase, i32* %ubase.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %ubase.addr, metadata !2356, metadata !2395), !dbg !14989
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2357, metadata !2395), !dbg !14990
  %0 = bitcast i64* %n to i8*, !dbg !14991
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !14991
  call void @llvm.dbg.declare(metadata i64* %n, metadata !2358, metadata !2395), !dbg !14992
  store i64 0, i64* %n, align 8, !dbg !14992, !tbaa !2391
  %1 = bitcast i64* %carry to i8*, !dbg !14993
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !14993
  call void @llvm.dbg.declare(metadata i64* %carry, metadata !2359, metadata !2395), !dbg !14994
  %2 = load i64, i64* %ulen.addr, align 8, !dbg !14995, !tbaa !2391
  %dec = add i64 %2, -1, !dbg !14995
  store i64 %dec, i64* %ulen.addr, align 8, !dbg !14995, !tbaa !2391
  %3 = load i64*, i64** %u.addr, align 8, !dbg !14996, !tbaa !2505
  %arrayidx = getelementptr i64, i64* %3, i64 %dec, !dbg !14996
  %4 = load i64, i64* %arrayidx, align 8, !dbg !14996, !tbaa !2391
  %5 = load i64, i64* %n, align 8, !dbg !14997, !tbaa !2391
  %inc = add i64 %5, 1, !dbg !14997
  store i64 %inc, i64* %n, align 8, !dbg !14997, !tbaa !2391
  %6 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !14998, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %6, i32 0, i32 5, !dbg !14999
  %7 = load i64*, i64** %data, align 8, !dbg !14999, !tbaa !2546
  %arrayidx1 = getelementptr i64, i64* %7, i64 %5, !dbg !14998
  store i64 %4, i64* %arrayidx1, align 8, !dbg !15000, !tbaa !2391
  br label %while.cond, !dbg !15001

while.cond:                                       ; preds = %if.end.35, %entry
  %8 = load i64, i64* %ulen.addr, align 8, !dbg !15002, !tbaa !2391
  %dec2 = add i64 %8, -1, !dbg !15002
  store i64 %dec2, i64* %ulen.addr, align 8, !dbg !15002, !tbaa !2391
  %cmp = icmp ne i64 %dec2, -1, !dbg !15005
  br i1 %cmp, label %while.body, label %while.end, !dbg !15001

while.body:                                       ; preds = %while.cond
  %9 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !15006, !tbaa !2505
  %data3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 5, !dbg !15008
  %10 = load i64*, i64** %data3, align 8, !dbg !15008, !tbaa !2546
  %11 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !15009, !tbaa !2505
  %data4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 5, !dbg !15010
  %12 = load i64*, i64** %data4, align 8, !dbg !15010, !tbaa !2546
  %13 = load i64, i64* %n, align 8, !dbg !15011, !tbaa !2391
  %14 = load i32, i32* %ubase.addr, align 4, !dbg !15012, !tbaa !2554
  %conv = zext i32 %14 to i64, !dbg !15012
  %call = call i64 @_mpd_shortmul_c(i64* %10, i64* %12, i64 %13, i64 %conv), !dbg !15013
  store i64 %call, i64* %carry, align 8, !dbg !15014, !tbaa !2391
  %15 = load i64, i64* %carry, align 8, !dbg !15015, !tbaa !2391
  %tobool = icmp ne i64 %15, 0, !dbg !15015
  br i1 %tobool, label %if.then, label %if.end.16, !dbg !15017

if.then:                                          ; preds = %while.body
  %16 = load i64, i64* %n, align 8, !dbg !15018, !tbaa !2391
  %17 = load i64, i64* %wlen.addr, align 8, !dbg !15021, !tbaa !2391
  %cmp5 = icmp sge i64 %16, %17, !dbg !15022
  br i1 %cmp5, label %if.then.7, label %if.end.12, !dbg !15023

if.then.7:                                        ; preds = %if.then
  %18 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !15024, !tbaa !2505
  %19 = load i64, i64* %n, align 8, !dbg !15027, !tbaa !2391
  %add = add i64 %19, 1, !dbg !15028
  %20 = load i32*, i32** %status.addr, align 8, !dbg !15029, !tbaa !2505
  %call8 = call i32 @mpd_qresize(%struct.mpd_t* %18, i64 %add, i32* %20), !dbg !15030
  %tobool9 = icmp ne i32 %call8, 0, !dbg !15030
  br i1 %tobool9, label %if.end, label %if.then.10, !dbg !15031

if.then.10:                                       ; preds = %if.then.7
  store i64 -1, i64* %retval, !dbg !15032
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15032

if.end:                                           ; preds = %if.then.7
  %21 = load i64, i64* %n, align 8, !dbg !15034, !tbaa !2391
  %add11 = add i64 %21, 1, !dbg !15035
  store i64 %add11, i64* %wlen.addr, align 8, !dbg !15036, !tbaa !2391
  br label %if.end.12, !dbg !15037

if.end.12:                                        ; preds = %if.end, %if.then
  %22 = load i64, i64* %carry, align 8, !dbg !15038, !tbaa !2391
  %23 = load i64, i64* %n, align 8, !dbg !15039, !tbaa !2391
  %inc13 = add i64 %23, 1, !dbg !15039
  store i64 %inc13, i64* %n, align 8, !dbg !15039, !tbaa !2391
  %24 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !15040, !tbaa !2505
  %data14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %24, i32 0, i32 5, !dbg !15041
  %25 = load i64*, i64** %data14, align 8, !dbg !15041, !tbaa !2546
  %arrayidx15 = getelementptr i64, i64* %25, i64 %23, !dbg !15040
  store i64 %22, i64* %arrayidx15, align 8, !dbg !15042, !tbaa !2391
  br label %if.end.16, !dbg !15043

if.end.16:                                        ; preds = %if.end.12, %while.body
  %26 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !15044, !tbaa !2505
  %data17 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %26, i32 0, i32 5, !dbg !15045
  %27 = load i64*, i64** %data17, align 8, !dbg !15045, !tbaa !2546
  %28 = load i64, i64* %n, align 8, !dbg !15046, !tbaa !2391
  %29 = load i64, i64* %ulen.addr, align 8, !dbg !15047, !tbaa !2391
  %30 = load i64*, i64** %u.addr, align 8, !dbg !15048, !tbaa !2505
  %arrayidx18 = getelementptr i64, i64* %30, i64 %29, !dbg !15048
  %31 = load i64, i64* %arrayidx18, align 8, !dbg !15048, !tbaa !2391
  %call19 = call i64 @_mpd_shortadd(i64* %27, i64 %28, i64 %31), !dbg !15049
  store i64 %call19, i64* %carry, align 8, !dbg !15050, !tbaa !2391
  %32 = load i64, i64* %carry, align 8, !dbg !15051, !tbaa !2391
  %tobool20 = icmp ne i64 %32, 0, !dbg !15051
  br i1 %tobool20, label %if.then.21, label %if.end.35, !dbg !15053

if.then.21:                                       ; preds = %if.end.16
  %33 = load i64, i64* %n, align 8, !dbg !15054, !tbaa !2391
  %34 = load i64, i64* %wlen.addr, align 8, !dbg !15057, !tbaa !2391
  %cmp22 = icmp sge i64 %33, %34, !dbg !15058
  br i1 %cmp22, label %if.then.24, label %if.end.31, !dbg !15059

if.then.24:                                       ; preds = %if.then.21
  %35 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !15060, !tbaa !2505
  %36 = load i64, i64* %n, align 8, !dbg !15063, !tbaa !2391
  %add25 = add i64 %36, 1, !dbg !15064
  %37 = load i32*, i32** %status.addr, align 8, !dbg !15065, !tbaa !2505
  %call26 = call i32 @mpd_qresize(%struct.mpd_t* %35, i64 %add25, i32* %37), !dbg !15066
  %tobool27 = icmp ne i32 %call26, 0, !dbg !15066
  br i1 %tobool27, label %if.end.29, label %if.then.28, !dbg !15067

if.then.28:                                       ; preds = %if.then.24
  store i64 -1, i64* %retval, !dbg !15068
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15068

if.end.29:                                        ; preds = %if.then.24
  %38 = load i64, i64* %n, align 8, !dbg !15070, !tbaa !2391
  %add30 = add i64 %38, 1, !dbg !15071
  store i64 %add30, i64* %wlen.addr, align 8, !dbg !15072, !tbaa !2391
  br label %if.end.31, !dbg !15073

if.end.31:                                        ; preds = %if.end.29, %if.then.21
  %39 = load i64, i64* %carry, align 8, !dbg !15074, !tbaa !2391
  %40 = load i64, i64* %n, align 8, !dbg !15075, !tbaa !2391
  %inc32 = add i64 %40, 1, !dbg !15075
  store i64 %inc32, i64* %n, align 8, !dbg !15075, !tbaa !2391
  %41 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !15076, !tbaa !2505
  %data33 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %41, i32 0, i32 5, !dbg !15077
  %42 = load i64*, i64** %data33, align 8, !dbg !15077, !tbaa !2546
  %arrayidx34 = getelementptr i64, i64* %42, i64 %40, !dbg !15076
  store i64 %39, i64* %arrayidx34, align 8, !dbg !15078, !tbaa !2391
  br label %if.end.35, !dbg !15079

if.end.35:                                        ; preds = %if.end.31, %if.end.16
  br label %while.cond, !dbg !15001

while.end:                                        ; preds = %while.cond
  %43 = load i64, i64* %n, align 8, !dbg !15080, !tbaa !2391
  store i64 %43, i64* %retval, !dbg !15081
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15081

cleanup:                                          ; preds = %while.end, %if.then.28, %if.then.10
  %44 = bitcast i64* %carry to i8*, !dbg !15082
  call void @llvm.lifetime.end(i64 8, i8* %44) #4, !dbg !15082
  %45 = bitcast i64* %n to i8*, !dbg !15082
  call void @llvm.lifetime.end(i64 8, i8* %45) #4, !dbg !15082
  %46 = load i64, i64* %retval, !dbg !15082
  ret i64 %46, !dbg !15082
}

; Function Attrs: nounwind uwtable
define hidden void @mpd_qimport_u32(%struct.mpd_t* %result, i32* %srcdata, i64 %srclen, i8 zeroext %srcsign, i32 %srcbase, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %srcdata.addr = alloca i32*, align 8
  %srclen.addr = alloca i64, align 8
  %srcsign.addr = alloca i8, align 1
  %srcbase.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %rlen = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1421, metadata !2395), !dbg !15083
  store i32* %srcdata, i32** %srcdata.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %srcdata.addr, metadata !1422, metadata !2395), !dbg !15084
  store i64 %srclen, i64* %srclen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %srclen.addr, metadata !1423, metadata !2395), !dbg !15085
  store i8 %srcsign, i8* %srcsign.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %srcsign.addr, metadata !1424, metadata !2395), !dbg !15086
  store i32 %srcbase, i32* %srcbase.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %srcbase.addr, metadata !1425, metadata !2395), !dbg !15087
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1426, metadata !2395), !dbg !15088
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1427, metadata !2395), !dbg !15089
  %0 = bitcast i64* %rlen to i8*, !dbg !15090
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !15090
  call void @llvm.dbg.declare(metadata i64* %rlen, metadata !1428, metadata !2395), !dbg !15091
  %1 = bitcast i64* %n to i8*, !dbg !15092
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !15092
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1429, metadata !2395), !dbg !15093
  %2 = load i64, i64* %srclen.addr, align 8, !dbg !15094, !tbaa !2391
  %3 = load i32, i32* %srcbase.addr, align 4, !dbg !15095, !tbaa !2554
  %call = call i64 @_mpd_importsize(i64 %2, i32 %3), !dbg !15096
  store i64 %call, i64* %rlen, align 8, !dbg !15097, !tbaa !2391
  %4 = load i64, i64* %rlen, align 8, !dbg !15098, !tbaa !2391
  %cmp = icmp eq i64 %4, 9223372036854775807, !dbg !15100
  br i1 %cmp, label %if.then, label %if.end, !dbg !15101

if.then:                                          ; preds = %entry
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15102, !tbaa !2505
  %6 = load i32*, i32** %status.addr, align 8, !dbg !15104, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %5, i32 256, i32* %6), !dbg !15105
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15106

if.end:                                           ; preds = %entry
  %7 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15107, !tbaa !2505
  %8 = load i64, i64* %rlen, align 8, !dbg !15109, !tbaa !2391
  %9 = load i32*, i32** %status.addr, align 8, !dbg !15110, !tbaa !2505
  %call1 = call i32 @mpd_qresize(%struct.mpd_t* %7, i64 %8, i32* %9), !dbg !15111
  %tobool = icmp ne i32 %call1, 0, !dbg !15111
  br i1 %tobool, label %if.end.3, label %if.then.2, !dbg !15112

if.then.2:                                        ; preds = %if.end
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15113

if.end.3:                                         ; preds = %if.end
  %10 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15115, !tbaa !2505
  %11 = load i64, i64* %rlen, align 8, !dbg !15116, !tbaa !2391
  %12 = load i32*, i32** %srcdata.addr, align 8, !dbg !15117, !tbaa !2505
  %13 = load i64, i64* %srclen.addr, align 8, !dbg !15118, !tbaa !2391
  %14 = load i32, i32* %srcbase.addr, align 4, !dbg !15119, !tbaa !2554
  %conv = zext i32 %14 to i64, !dbg !15119
  %15 = load i32*, i32** %status.addr, align 8, !dbg !15120, !tbaa !2505
  %call4 = call i64 @_coeff_from_smaller_base(%struct.mpd_t* %10, i64 %11, i64 -8446744073709551616, i32* %12, i64 %13, i64 %conv, i32* %15), !dbg !15121
  store i64 %call4, i64* %n, align 8, !dbg !15122, !tbaa !2391
  %16 = load i64, i64* %n, align 8, !dbg !15123, !tbaa !2391
  %cmp5 = icmp eq i64 %16, -1, !dbg !15125
  br i1 %cmp5, label %if.then.7, label %if.end.8, !dbg !15126

if.then.7:                                        ; preds = %if.end.3
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15127

if.end.8:                                         ; preds = %if.end.3
  %17 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15129, !tbaa !2505
  %18 = load i8, i8* %srcsign.addr, align 1, !dbg !15130, !tbaa !2930
  call void @mpd_set_flags(%struct.mpd_t* %17, i8 zeroext %18), !dbg !15131
  %19 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15132, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %19, i32 0, i32 1, !dbg !15133
  store i64 0, i64* %exp, align 8, !dbg !15134, !tbaa !2510
  %20 = load i64, i64* %n, align 8, !dbg !15135, !tbaa !2391
  %21 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15136, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %21, i32 0, i32 3, !dbg !15137
  store i64 %20, i64* %len, align 8, !dbg !15138, !tbaa !2542
  %22 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15139, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %22), !dbg !15140
  %23 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15141, !tbaa !2505
  %24 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15142, !tbaa !2505
  %len9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %24, i32 0, i32 3, !dbg !15143
  %25 = load i64, i64* %len9, align 8, !dbg !15143, !tbaa !2542
  %26 = load i32*, i32** %status.addr, align 8, !dbg !15144, !tbaa !2505
  %call10 = call i32 @mpd_qresize(%struct.mpd_t* %23, i64 %25, i32* %26), !dbg !15145
  %27 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15146, !tbaa !2505
  %28 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !15147, !tbaa !2505
  %29 = load i32*, i32** %status.addr, align 8, !dbg !15148, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %27, %struct.mpd_context_t* %28, i32* %29), !dbg !15149
  store i32 0, i32* %cleanup.dest.slot, !dbg !15150
  br label %cleanup, !dbg !15150

cleanup:                                          ; preds = %if.end.8, %if.then.7, %if.then.2, %if.then
  %30 = bitcast i64* %n to i8*, !dbg !15151
  call void @llvm.lifetime.end(i64 8, i8* %30) #4, !dbg !15151
  %31 = bitcast i64* %rlen to i8*, !dbg !15151
  call void @llvm.lifetime.end(i64 8, i8* %31) #4, !dbg !15151
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !15150

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i64 @_coeff_from_smaller_base(%struct.mpd_t* %w, i64 %wlen, i64 %wbase, i32* %u, i64 %ulen, i64 %ubase, i32* %status) #0 {
entry:
  %retval = alloca i64, align 8
  %w.addr = alloca %struct.mpd_t*, align 8
  %wlen.addr = alloca i64, align 8
  %wbase.addr = alloca i64, align 8
  %u.addr = alloca i32*, align 8
  %ulen.addr = alloca i64, align 8
  %ubase.addr = alloca i64, align 8
  %status.addr = alloca i32*, align 8
  %n = alloca i64, align 8
  %carry = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %w, %struct.mpd_t** %w.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %w.addr, metadata !2364, metadata !2395), !dbg !15153
  store i64 %wlen, i64* %wlen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %wlen.addr, metadata !2365, metadata !2395), !dbg !15154
  store i64 %wbase, i64* %wbase.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %wbase.addr, metadata !2366, metadata !2395), !dbg !15155
  store i32* %u, i32** %u.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %u.addr, metadata !2367, metadata !2395), !dbg !15156
  store i64 %ulen, i64* %ulen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %ulen.addr, metadata !2368, metadata !2395), !dbg !15157
  store i64 %ubase, i64* %ubase.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %ubase.addr, metadata !2369, metadata !2395), !dbg !15158
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2370, metadata !2395), !dbg !15159
  %0 = bitcast i64* %n to i8*, !dbg !15160
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !15160
  call void @llvm.dbg.declare(metadata i64* %n, metadata !2371, metadata !2395), !dbg !15161
  store i64 0, i64* %n, align 8, !dbg !15161, !tbaa !2391
  %1 = bitcast i64* %carry to i8*, !dbg !15162
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !15162
  call void @llvm.dbg.declare(metadata i64* %carry, metadata !2372, metadata !2395), !dbg !15163
  %2 = load i64, i64* %ulen.addr, align 8, !dbg !15164, !tbaa !2391
  %dec = add i64 %2, -1, !dbg !15164
  store i64 %dec, i64* %ulen.addr, align 8, !dbg !15164, !tbaa !2391
  %3 = load i32*, i32** %u.addr, align 8, !dbg !15165, !tbaa !2505
  %arrayidx = getelementptr i32, i32* %3, i64 %dec, !dbg !15165
  %4 = load i32, i32* %arrayidx, align 4, !dbg !15165, !tbaa !2554
  %conv = zext i32 %4 to i64, !dbg !15165
  %5 = load i64, i64* %n, align 8, !dbg !15166, !tbaa !2391
  %inc = add i64 %5, 1, !dbg !15166
  store i64 %inc, i64* %n, align 8, !dbg !15166, !tbaa !2391
  %6 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !15167, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %6, i32 0, i32 5, !dbg !15168
  %7 = load i64*, i64** %data, align 8, !dbg !15168, !tbaa !2546
  %arrayidx1 = getelementptr i64, i64* %7, i64 %5, !dbg !15167
  store i64 %conv, i64* %arrayidx1, align 8, !dbg !15169, !tbaa !2391
  br label %while.cond, !dbg !15170

while.cond:                                       ; preds = %if.end.37, %entry
  %8 = load i64, i64* %ulen.addr, align 8, !dbg !15171, !tbaa !2391
  %dec2 = add i64 %8, -1, !dbg !15171
  store i64 %dec2, i64* %ulen.addr, align 8, !dbg !15171, !tbaa !2391
  %cmp = icmp ne i64 %dec2, -1, !dbg !15174
  br i1 %cmp, label %while.body, label %while.end, !dbg !15170

while.body:                                       ; preds = %while.cond
  %9 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !15175, !tbaa !2505
  %data4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 5, !dbg !15177
  %10 = load i64*, i64** %data4, align 8, !dbg !15177, !tbaa !2546
  %11 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !15178, !tbaa !2505
  %data5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 5, !dbg !15179
  %12 = load i64*, i64** %data5, align 8, !dbg !15179, !tbaa !2546
  %13 = load i64, i64* %n, align 8, !dbg !15180, !tbaa !2391
  %14 = load i64, i64* %ubase.addr, align 8, !dbg !15181, !tbaa !2391
  %15 = load i64, i64* %wbase.addr, align 8, !dbg !15182, !tbaa !2391
  %call = call i64 @_mpd_shortmul_b(i64* %10, i64* %12, i64 %13, i64 %14, i64 %15), !dbg !15183
  store i64 %call, i64* %carry, align 8, !dbg !15184, !tbaa !2391
  %16 = load i64, i64* %carry, align 8, !dbg !15185, !tbaa !2391
  %tobool = icmp ne i64 %16, 0, !dbg !15185
  br i1 %tobool, label %if.then, label %if.end.17, !dbg !15187

if.then:                                          ; preds = %while.body
  %17 = load i64, i64* %n, align 8, !dbg !15188, !tbaa !2391
  %18 = load i64, i64* %wlen.addr, align 8, !dbg !15191, !tbaa !2391
  %cmp6 = icmp sge i64 %17, %18, !dbg !15192
  br i1 %cmp6, label %if.then.8, label %if.end.13, !dbg !15193

if.then.8:                                        ; preds = %if.then
  %19 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !15194, !tbaa !2505
  %20 = load i64, i64* %n, align 8, !dbg !15197, !tbaa !2391
  %add = add i64 %20, 1, !dbg !15198
  %21 = load i32*, i32** %status.addr, align 8, !dbg !15199, !tbaa !2505
  %call9 = call i32 @mpd_qresize(%struct.mpd_t* %19, i64 %add, i32* %21), !dbg !15200
  %tobool10 = icmp ne i32 %call9, 0, !dbg !15200
  br i1 %tobool10, label %if.end, label %if.then.11, !dbg !15201

if.then.11:                                       ; preds = %if.then.8
  store i64 -1, i64* %retval, !dbg !15202
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15202

if.end:                                           ; preds = %if.then.8
  %22 = load i64, i64* %n, align 8, !dbg !15204, !tbaa !2391
  %add12 = add i64 %22, 1, !dbg !15205
  store i64 %add12, i64* %wlen.addr, align 8, !dbg !15206, !tbaa !2391
  br label %if.end.13, !dbg !15207

if.end.13:                                        ; preds = %if.end, %if.then
  %23 = load i64, i64* %carry, align 8, !dbg !15208, !tbaa !2391
  %24 = load i64, i64* %n, align 8, !dbg !15209, !tbaa !2391
  %inc14 = add i64 %24, 1, !dbg !15209
  store i64 %inc14, i64* %n, align 8, !dbg !15209, !tbaa !2391
  %25 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !15210, !tbaa !2505
  %data15 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %25, i32 0, i32 5, !dbg !15211
  %26 = load i64*, i64** %data15, align 8, !dbg !15211, !tbaa !2546
  %arrayidx16 = getelementptr i64, i64* %26, i64 %24, !dbg !15210
  store i64 %23, i64* %arrayidx16, align 8, !dbg !15212, !tbaa !2391
  br label %if.end.17, !dbg !15213

if.end.17:                                        ; preds = %if.end.13, %while.body
  %27 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !15214, !tbaa !2505
  %data18 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %27, i32 0, i32 5, !dbg !15215
  %28 = load i64*, i64** %data18, align 8, !dbg !15215, !tbaa !2546
  %29 = load i64, i64* %n, align 8, !dbg !15216, !tbaa !2391
  %30 = load i64, i64* %ulen.addr, align 8, !dbg !15217, !tbaa !2391
  %31 = load i32*, i32** %u.addr, align 8, !dbg !15218, !tbaa !2505
  %arrayidx19 = getelementptr i32, i32* %31, i64 %30, !dbg !15218
  %32 = load i32, i32* %arrayidx19, align 4, !dbg !15218, !tbaa !2554
  %conv20 = zext i32 %32 to i64, !dbg !15218
  %33 = load i64, i64* %wbase.addr, align 8, !dbg !15219, !tbaa !2391
  %call21 = call i64 @_mpd_shortadd_b(i64* %28, i64 %29, i64 %conv20, i64 %33), !dbg !15220
  store i64 %call21, i64* %carry, align 8, !dbg !15221, !tbaa !2391
  %34 = load i64, i64* %carry, align 8, !dbg !15222, !tbaa !2391
  %tobool22 = icmp ne i64 %34, 0, !dbg !15222
  br i1 %tobool22, label %if.then.23, label %if.end.37, !dbg !15224

if.then.23:                                       ; preds = %if.end.17
  %35 = load i64, i64* %n, align 8, !dbg !15225, !tbaa !2391
  %36 = load i64, i64* %wlen.addr, align 8, !dbg !15228, !tbaa !2391
  %cmp24 = icmp sge i64 %35, %36, !dbg !15229
  br i1 %cmp24, label %if.then.26, label %if.end.33, !dbg !15230

if.then.26:                                       ; preds = %if.then.23
  %37 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !15231, !tbaa !2505
  %38 = load i64, i64* %n, align 8, !dbg !15234, !tbaa !2391
  %add27 = add i64 %38, 1, !dbg !15235
  %39 = load i32*, i32** %status.addr, align 8, !dbg !15236, !tbaa !2505
  %call28 = call i32 @mpd_qresize(%struct.mpd_t* %37, i64 %add27, i32* %39), !dbg !15237
  %tobool29 = icmp ne i32 %call28, 0, !dbg !15237
  br i1 %tobool29, label %if.end.31, label %if.then.30, !dbg !15238

if.then.30:                                       ; preds = %if.then.26
  store i64 -1, i64* %retval, !dbg !15239
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15239

if.end.31:                                        ; preds = %if.then.26
  %40 = load i64, i64* %n, align 8, !dbg !15241, !tbaa !2391
  %add32 = add i64 %40, 1, !dbg !15242
  store i64 %add32, i64* %wlen.addr, align 8, !dbg !15243, !tbaa !2391
  br label %if.end.33, !dbg !15244

if.end.33:                                        ; preds = %if.end.31, %if.then.23
  %41 = load i64, i64* %carry, align 8, !dbg !15245, !tbaa !2391
  %42 = load i64, i64* %n, align 8, !dbg !15246, !tbaa !2391
  %inc34 = add i64 %42, 1, !dbg !15246
  store i64 %inc34, i64* %n, align 8, !dbg !15246, !tbaa !2391
  %43 = load %struct.mpd_t*, %struct.mpd_t** %w.addr, align 8, !dbg !15247, !tbaa !2505
  %data35 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %43, i32 0, i32 5, !dbg !15248
  %44 = load i64*, i64** %data35, align 8, !dbg !15248, !tbaa !2546
  %arrayidx36 = getelementptr i64, i64* %44, i64 %42, !dbg !15247
  store i64 %41, i64* %arrayidx36, align 8, !dbg !15249, !tbaa !2391
  br label %if.end.37, !dbg !15250

if.end.37:                                        ; preds = %if.end.33, %if.end.17
  br label %while.cond, !dbg !15170

while.end:                                        ; preds = %while.cond
  %45 = load i64, i64* %n, align 8, !dbg !15251, !tbaa !2391
  store i64 %45, i64* %retval, !dbg !15252
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15252

cleanup:                                          ; preds = %while.end, %if.then.30, %if.then.11
  %46 = bitcast i64* %carry to i8*, !dbg !15253
  call void @llvm.lifetime.end(i64 8, i8* %46) #4, !dbg !15253
  %47 = bitcast i64* %n to i8*, !dbg !15253
  call void @llvm.lifetime.end(i64 8, i8* %47) #4, !dbg !15253
  %48 = load i64, i64* %retval, !dbg !15253
  ret i64 %48, !dbg !15253
}

; Function Attrs: nounwind uwtable
define internal i64 @mpd_qsshiftr(%struct.mpd_t* %result, %struct.mpd_t* %a, i64 %n) #0 {
entry:
  %retval = alloca i64, align 8
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %n.addr = alloca i64, align 8
  %rnd = alloca i64, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1484, metadata !2395), !dbg !15254
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1485, metadata !2395), !dbg !15255
  store i64 %n, i64* %n.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !1486, metadata !2395), !dbg !15256
  %0 = bitcast i64* %rnd to i8*, !dbg !15257
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !15257
  call void @llvm.dbg.declare(metadata i64* %rnd, metadata !1487, metadata !2395), !dbg !15258
  %1 = bitcast i64* %size to i8*, !dbg !15259
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !15259
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1488, metadata !2395), !dbg !15260
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15261, !tbaa !2505
  %call = call i32 @mpd_iszerocoeff(%struct.mpd_t* %2), !dbg !15263
  %tobool = icmp ne i32 %call, 0, !dbg !15263
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !15264

lor.lhs.false:                                    ; preds = %entry
  %3 = load i64, i64* %n.addr, align 8, !dbg !15265, !tbaa !2391
  %cmp = icmp eq i64 %3, 0, !dbg !15267
  br i1 %cmp, label %if.then, label %if.end, !dbg !15268

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15269, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15271, !tbaa !2505
  call void @mpd_qcopy_static(%struct.mpd_t* %4, %struct.mpd_t* %5), !dbg !15272
  store i64 0, i64* %retval, !dbg !15273
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15273

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i64, i64* %n.addr, align 8, !dbg !15274, !tbaa !2391
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15276, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %7, i32 0, i32 2, !dbg !15277
  %8 = load i64, i64* %digits, align 8, !dbg !15277, !tbaa !2514
  %cmp1 = icmp sge i64 %6, %8, !dbg !15278
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !15279

if.then.2:                                        ; preds = %if.end
  %9 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15280, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 5, !dbg !15282
  %10 = load i64*, i64** %data, align 8, !dbg !15282, !tbaa !2546
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15283, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 3, !dbg !15284
  %12 = load i64, i64* %len, align 8, !dbg !15284, !tbaa !2542
  %13 = load i64, i64* %n.addr, align 8, !dbg !15285, !tbaa !2391
  %14 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15286, !tbaa !2505
  %digits3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %14, i32 0, i32 2, !dbg !15287
  %15 = load i64, i64* %digits3, align 8, !dbg !15287, !tbaa !2514
  %cmp4 = icmp eq i64 %13, %15, !dbg !15288
  %conv = zext i1 %cmp4 to i32, !dbg !15288
  %call5 = call i64 @_mpd_get_rnd(i64* %10, i64 %12, i32 %conv), !dbg !15289
  store i64 %call5, i64* %rnd, align 8, !dbg !15290, !tbaa !2391
  %16 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15291, !tbaa !2505
  call void @mpd_zerocoeff(%struct.mpd_t* %16), !dbg !15292
  br label %if.end.15, !dbg !15293

if.else:                                          ; preds = %if.end
  %17 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15294, !tbaa !2505
  %digits6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 2, !dbg !15296
  %18 = load i64, i64* %digits6, align 8, !dbg !15296, !tbaa !2514
  %19 = load i64, i64* %n.addr, align 8, !dbg !15297, !tbaa !2391
  %sub = sub i64 %18, %19, !dbg !15298
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15299, !tbaa !2505
  %digits7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %20, i32 0, i32 2, !dbg !15300
  store i64 %sub, i64* %digits7, align 8, !dbg !15301, !tbaa !2514
  %21 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15302, !tbaa !2505
  %digits8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %21, i32 0, i32 2, !dbg !15303
  %22 = load i64, i64* %digits8, align 8, !dbg !15303, !tbaa !2514
  %call9 = call i64 @mpd_digits_to_size(i64 %22), !dbg !15304
  store i64 %call9, i64* %size, align 8, !dbg !15305, !tbaa !2391
  %23 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15306, !tbaa !2505
  %data10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %23, i32 0, i32 5, !dbg !15307
  %24 = load i64*, i64** %data10, align 8, !dbg !15307, !tbaa !2546
  %25 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15308, !tbaa !2505
  %data11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %25, i32 0, i32 5, !dbg !15309
  %26 = load i64*, i64** %data11, align 8, !dbg !15309, !tbaa !2546
  %27 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15310, !tbaa !2505
  %len12 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %27, i32 0, i32 3, !dbg !15311
  %28 = load i64, i64* %len12, align 8, !dbg !15311, !tbaa !2542
  %29 = load i64, i64* %n.addr, align 8, !dbg !15312, !tbaa !2391
  %call13 = call i64 @_mpd_baseshiftr(i64* %24, i64* %26, i64 %28, i64 %29), !dbg !15313
  store i64 %call13, i64* %rnd, align 8, !dbg !15314, !tbaa !2391
  %30 = load i64, i64* %size, align 8, !dbg !15315, !tbaa !2391
  %31 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15316, !tbaa !2505
  %len14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %31, i32 0, i32 3, !dbg !15317
  store i64 %30, i64* %len14, align 8, !dbg !15318, !tbaa !2542
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.then.2
  %32 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15319, !tbaa !2505
  %33 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15320, !tbaa !2505
  call void @mpd_copy_flags(%struct.mpd_t* %32, %struct.mpd_t* %33), !dbg !15321
  %34 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15322, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %34, i32 0, i32 1, !dbg !15323
  %35 = load i64, i64* %exp, align 8, !dbg !15323, !tbaa !2510
  %36 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15324, !tbaa !2505
  %exp16 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %36, i32 0, i32 1, !dbg !15325
  store i64 %35, i64* %exp16, align 8, !dbg !15326, !tbaa !2510
  %37 = load i64, i64* %rnd, align 8, !dbg !15327, !tbaa !2391
  store i64 %37, i64* %retval, !dbg !15328
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15328

cleanup:                                          ; preds = %if.end.15, %if.then
  %38 = bitcast i64* %size to i8*, !dbg !15329
  call void @llvm.lifetime.end(i64 8, i8* %38) #4, !dbg !15329
  %39 = bitcast i64* %rnd to i8*, !dbg !15329
  call void @llvm.lifetime.end(i64 8, i8* %39) #4, !dbg !15329
  %40 = load i64, i64* %retval, !dbg !15329
  ret i64 %40, !dbg !15329
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_get_msdigits(i64* %hi, i64* %lo, %struct.mpd_t* %dec, i32 %n) #3 {
entry:
  %hi.addr = alloca i64*, align 8
  %lo.addr = alloca i64*, align 8
  %dec.addr = alloca %struct.mpd_t*, align 8
  %n.addr = alloca i32, align 4
  %r = alloca i64, align 8
  %tmp = alloca i64, align 8
  store i64* %hi, i64** %hi.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %hi.addr, metadata !1497, metadata !2395), !dbg !15330
  store i64* %lo, i64** %lo.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %lo.addr, metadata !1498, metadata !2395), !dbg !15331
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !1499, metadata !2395), !dbg !15332
  store i32 %n, i32* %n.addr, align 4, !tbaa !2554
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !1500, metadata !2395), !dbg !15333
  %0 = bitcast i64* %r to i8*, !dbg !15334
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !15334
  call void @llvm.dbg.declare(metadata i64* %r, metadata !1501, metadata !2395), !dbg !15335
  %1 = bitcast i64* %tmp to i8*, !dbg !15334
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !15334
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !1502, metadata !2395), !dbg !15336
  %2 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15337, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 2, !dbg !15338
  %3 = load i64, i64* %digits, align 8, !dbg !15338, !tbaa !2514
  call void @_mpd_div_word(i64* %tmp, i64* %r, i64 %3, i64 19), !dbg !15339
  %4 = load i64, i64* %r, align 8, !dbg !15340, !tbaa !2391
  %cmp = icmp eq i64 %4, 0, !dbg !15341
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15342

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !15343

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* %r, align 8, !dbg !15345, !tbaa !2391
  br label %cond.end, !dbg !15342

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 19, %cond.true ], [ %5, %cond.false ], !dbg !15342
  store i64 %cond, i64* %r, align 8, !dbg !15347, !tbaa !2391
  %6 = load i64*, i64** %hi.addr, align 8, !dbg !15350, !tbaa !2505
  store i64 0, i64* %6, align 8, !dbg !15351, !tbaa !2391
  %7 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15352, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %7, i32 0, i32 3, !dbg !15353
  %8 = load i64, i64* %len, align 8, !dbg !15353, !tbaa !2542
  %sub = sub i64 %8, 1, !dbg !15354
  %9 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15355, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %9, i32 0, i32 5, !dbg !15356
  %10 = load i64*, i64** %data, align 8, !dbg !15356, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %10, i64 %sub, !dbg !15355
  %11 = load i64, i64* %arrayidx, align 8, !dbg !15355, !tbaa !2391
  %12 = load i64*, i64** %lo.addr, align 8, !dbg !15357, !tbaa !2505
  store i64 %11, i64* %12, align 8, !dbg !15358, !tbaa !2391
  %13 = load i32, i32* %n.addr, align 4, !dbg !15359, !tbaa !2554
  %conv = zext i32 %13 to i64, !dbg !15359
  %14 = load i64, i64* %r, align 8, !dbg !15361, !tbaa !2391
  %cmp1 = icmp ule i64 %conv, %14, !dbg !15362
  br i1 %cmp1, label %if.then, label %if.else, !dbg !15363

if.then:                                          ; preds = %cond.end
  %15 = load i64, i64* %r, align 8, !dbg !15364, !tbaa !2391
  %16 = load i32, i32* %n.addr, align 4, !dbg !15366, !tbaa !2554
  %conv3 = zext i32 %16 to i64, !dbg !15366
  %sub4 = sub i64 %15, %conv3, !dbg !15367
  %arrayidx5 = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %sub4, !dbg !15368
  %17 = load i64, i64* %arrayidx5, align 8, !dbg !15368, !tbaa !2391
  %18 = load i64*, i64** %lo.addr, align 8, !dbg !15369, !tbaa !2505
  %19 = load i64, i64* %18, align 8, !dbg !15370, !tbaa !2391
  %div = udiv i64 %19, %17, !dbg !15370
  store i64 %div, i64* %18, align 8, !dbg !15370, !tbaa !2391
  br label %if.end.26, !dbg !15371

if.else:                                          ; preds = %cond.end
  %20 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15372, !tbaa !2505
  %len6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %20, i32 0, i32 3, !dbg !15374
  %21 = load i64, i64* %len6, align 8, !dbg !15374, !tbaa !2542
  %cmp7 = icmp sgt i64 %21, 1, !dbg !15375
  br i1 %cmp7, label %if.then.9, label %if.end.25, !dbg !15376

if.then.9:                                        ; preds = %if.else
  %22 = load i64*, i64** %hi.addr, align 8, !dbg !15377, !tbaa !2505
  %23 = load i64*, i64** %lo.addr, align 8, !dbg !15379, !tbaa !2505
  %24 = load i64*, i64** %lo.addr, align 8, !dbg !15380, !tbaa !2505
  %25 = load i64, i64* %24, align 8, !dbg !15381, !tbaa !2391
  %26 = load i32, i32* %n.addr, align 4, !dbg !15382, !tbaa !2554
  %conv10 = zext i32 %26 to i64, !dbg !15382
  %27 = load i64, i64* %r, align 8, !dbg !15383, !tbaa !2391
  %sub11 = sub i64 %conv10, %27, !dbg !15384
  %arrayidx12 = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %sub11, !dbg !15385
  %28 = load i64, i64* %arrayidx12, align 8, !dbg !15385, !tbaa !2391
  call void @_mpd_mul_words(i64* %22, i64* %23, i64 %25, i64 %28), !dbg !15386
  %29 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15387, !tbaa !2505
  %len13 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %29, i32 0, i32 3, !dbg !15388
  %30 = load i64, i64* %len13, align 8, !dbg !15388, !tbaa !2542
  %sub14 = sub i64 %30, 2, !dbg !15389
  %31 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15390, !tbaa !2505
  %data15 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %31, i32 0, i32 5, !dbg !15391
  %32 = load i64*, i64** %data15, align 8, !dbg !15391, !tbaa !2546
  %arrayidx16 = getelementptr i64, i64* %32, i64 %sub14, !dbg !15390
  %33 = load i64, i64* %arrayidx16, align 8, !dbg !15390, !tbaa !2391
  %34 = load i32, i32* %n.addr, align 4, !dbg !15392, !tbaa !2554
  %conv17 = zext i32 %34 to i64, !dbg !15392
  %35 = load i64, i64* %r, align 8, !dbg !15393, !tbaa !2391
  %sub18 = sub i64 %conv17, %35, !dbg !15394
  %sub19 = sub i64 19, %sub18, !dbg !15395
  %arrayidx20 = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %sub19, !dbg !15396
  %36 = load i64, i64* %arrayidx20, align 8, !dbg !15396, !tbaa !2391
  %div21 = udiv i64 %33, %36, !dbg !15397
  store i64 %div21, i64* %tmp, align 8, !dbg !15398, !tbaa !2391
  %37 = load i64*, i64** %lo.addr, align 8, !dbg !15399, !tbaa !2505
  %38 = load i64, i64* %37, align 8, !dbg !15400, !tbaa !2391
  %39 = load i64, i64* %tmp, align 8, !dbg !15401, !tbaa !2391
  %add = add i64 %38, %39, !dbg !15402
  %40 = load i64*, i64** %lo.addr, align 8, !dbg !15403, !tbaa !2505
  store i64 %add, i64* %40, align 8, !dbg !15404, !tbaa !2391
  %41 = load i64*, i64** %lo.addr, align 8, !dbg !15405, !tbaa !2505
  %42 = load i64, i64* %41, align 8, !dbg !15407, !tbaa !2391
  %43 = load i64, i64* %tmp, align 8, !dbg !15408, !tbaa !2391
  %cmp22 = icmp ult i64 %42, %43, !dbg !15409
  br i1 %cmp22, label %if.then.24, label %if.end, !dbg !15410

if.then.24:                                       ; preds = %if.then.9
  %44 = load i64*, i64** %hi.addr, align 8, !dbg !15411, !tbaa !2505
  %45 = load i64, i64* %44, align 8, !dbg !15413, !tbaa !2391
  %inc = add i64 %45, 1, !dbg !15413
  store i64 %inc, i64* %44, align 8, !dbg !15413, !tbaa !2391
  br label %if.end, !dbg !15414

if.end:                                           ; preds = %if.then.24, %if.then.9
  br label %if.end.25, !dbg !15415

if.end.25:                                        ; preds = %if.end, %if.else
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.then
  %46 = bitcast i64* %tmp to i8*, !dbg !15416
  call void @llvm.lifetime.end(i64 8, i8* %46) #4, !dbg !15416
  %47 = bitcast i64* %r to i8*, !dbg !15416
  call void @llvm.lifetime.end(i64 8, i8* %47) #4, !dbg !15416
  ret void, !dbg !15416
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_mul_words(i64* %hi, i64* %lo, i64 %a, i64 %b) #3 {
entry:
  %hi.addr = alloca i64*, align 8
  %lo.addr = alloca i64*, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %h = alloca i64, align 8
  %l = alloca i64, align 8
  store i64* %hi, i64** %hi.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %hi.addr, metadata !1505, metadata !2395), !dbg !15417
  store i64* %lo, i64** %lo.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %lo.addr, metadata !1506, metadata !2395), !dbg !15418
  store i64 %a, i64* %a.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !1507, metadata !2395), !dbg !15419
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !1508, metadata !2395), !dbg !15420
  %0 = bitcast i64* %h to i8*, !dbg !15421
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !15421
  call void @llvm.dbg.declare(metadata i64* %h, metadata !1509, metadata !2395), !dbg !15422
  %1 = bitcast i64* %l to i8*, !dbg !15421
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !15421
  call void @llvm.dbg.declare(metadata i64* %l, metadata !1510, metadata !2395), !dbg !15423
  %2 = load i64, i64* %a.addr, align 8, !dbg !15424, !tbaa !2391
  %3 = load i64, i64* %b.addr, align 8, !dbg !15425, !tbaa !2391
  %4 = call { i64, i64 } asm "mulq $3\0A\09", "={dx},={ax},%{ax},rm,~{cc},~{dirflag},~{fpsr},~{flags}"(i64 %2, i64 %3) #10, !dbg !15426, !srcloc !15427
  %asmresult = extractvalue { i64, i64 } %4, 0, !dbg !15426
  %asmresult1 = extractvalue { i64, i64 } %4, 1, !dbg !15426
  store i64 %asmresult, i64* %h, align 8, !dbg !15426, !tbaa !2391
  store i64 %asmresult1, i64* %l, align 8, !dbg !15426, !tbaa !2391
  %5 = load i64, i64* %h, align 8, !dbg !15428, !tbaa !2391
  %6 = load i64*, i64** %hi.addr, align 8, !dbg !15429, !tbaa !2505
  store i64 %5, i64* %6, align 8, !dbg !15430, !tbaa !2391
  %7 = load i64, i64* %l, align 8, !dbg !15431, !tbaa !2391
  %8 = load i64*, i64** %lo.addr, align 8, !dbg !15432, !tbaa !2505
  store i64 %7, i64* %8, align 8, !dbg !15433, !tbaa !2391
  %9 = bitcast i64* %l to i8*, !dbg !15434
  call void @llvm.lifetime.end(i64 8, i8* %9) #4, !dbg !15434
  %10 = bitcast i64* %h to i8*, !dbg !15434
  call void @llvm.lifetime.end(i64 8, i8* %10) #4, !dbg !15434
  ret void, !dbg !15434
}

; Function Attrs: nounwind uwtable
define internal void @mpd_qcopy_static(%struct.mpd_t* %result, %struct.mpd_t* %a) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1491, metadata !2395), !dbg !15435
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1492, metadata !2395), !dbg !15436
  %0 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15437, !tbaa !2505
  %1 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15439, !tbaa !2505
  %cmp = icmp eq %struct.mpd_t* %0, %1, !dbg !15440
  br i1 %cmp, label %if.then, label %if.end, !dbg !15441

if.then:                                          ; preds = %entry
  br label %return, !dbg !15442

if.end:                                           ; preds = %entry
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15444, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 5, !dbg !15445
  %3 = load i64*, i64** %data, align 8, !dbg !15445, !tbaa !2546
  %4 = bitcast i64* %3 to i8*, !dbg !15446
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15447, !tbaa !2505
  %data1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %5, i32 0, i32 5, !dbg !15448
  %6 = load i64*, i64** %data1, align 8, !dbg !15448, !tbaa !2546
  %7 = bitcast i64* %6 to i8*, !dbg !15446
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15449, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %8, i32 0, i32 3, !dbg !15450
  %9 = load i64, i64* %len, align 8, !dbg !15450, !tbaa !2542
  %mul = mul i64 %9, 8, !dbg !15451
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %7, i64 %mul, i32 8, i1 false), !dbg !15446
  %10 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15452, !tbaa !2505
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15453, !tbaa !2505
  call void @mpd_copy_flags(%struct.mpd_t* %10, %struct.mpd_t* %11), !dbg !15454
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15455, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %12, i32 0, i32 1, !dbg !15456
  %13 = load i64, i64* %exp, align 8, !dbg !15456, !tbaa !2510
  %14 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15457, !tbaa !2505
  %exp2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %14, i32 0, i32 1, !dbg !15458
  store i64 %13, i64* %exp2, align 8, !dbg !15459, !tbaa !2510
  %15 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15460, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %15, i32 0, i32 2, !dbg !15461
  %16 = load i64, i64* %digits, align 8, !dbg !15461, !tbaa !2514
  %17 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15462, !tbaa !2505
  %digits3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 2, !dbg !15463
  store i64 %16, i64* %digits3, align 8, !dbg !15464, !tbaa !2514
  %18 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15465, !tbaa !2505
  %len4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %18, i32 0, i32 3, !dbg !15466
  %19 = load i64, i64* %len4, align 8, !dbg !15466, !tbaa !2542
  %20 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !15467, !tbaa !2505
  %len5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %20, i32 0, i32 3, !dbg !15468
  store i64 %19, i64* %len5, align 8, !dbg !15469, !tbaa !2542
  br label %return, !dbg !15470

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !15471
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_apply_round(%struct.mpd_t* %dec, i64 %rnd, %struct.mpd_context_t* %ctx, i32* %status) #3 {
entry:
  %dec.addr = alloca %struct.mpd_t*, align 8
  %rnd.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %carry = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !1539, metadata !2395), !dbg !15473
  store i64 %rnd, i64* %rnd.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %rnd.addr, metadata !1540, metadata !2395), !dbg !15474
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1541, metadata !2395), !dbg !15475
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1542, metadata !2395), !dbg !15476
  %0 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15477, !tbaa !2505
  %1 = load i64, i64* %rnd.addr, align 8, !dbg !15478, !tbaa !2391
  %2 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !15479, !tbaa !2505
  %call = call i32 @_mpd_rnd_incr(%struct.mpd_t* %0, i64 %1, %struct.mpd_context_t* %2), !dbg !15480
  %tobool = icmp ne i32 %call, 0, !dbg !15480
  br i1 %tobool, label %if.then, label %if.end.13, !dbg !15481

if.then:                                          ; preds = %entry
  %3 = bitcast i64* %carry to i8*, !dbg !15482
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !15482
  call void @llvm.dbg.declare(metadata i64* %carry, metadata !1543, metadata !2395), !dbg !15483
  %4 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15484, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %4, i32 0, i32 5, !dbg !15485
  %5 = load i64*, i64** %data, align 8, !dbg !15485, !tbaa !2546
  %6 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15486, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %6, i32 0, i32 3, !dbg !15487
  %7 = load i64, i64* %len, align 8, !dbg !15487, !tbaa !2542
  %call1 = call i64 @_mpd_baseincr(i64* %5, i64 %7), !dbg !15488
  store i64 %call1, i64* %carry, align 8, !dbg !15483, !tbaa !2391
  %8 = load i64, i64* %carry, align 8, !dbg !15489, !tbaa !2391
  %tobool2 = icmp ne i64 %8, 0, !dbg !15489
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !15491

if.then.3:                                        ; preds = %if.then
  %9 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 18), align 8, !dbg !15492, !tbaa !2391
  %10 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15494, !tbaa !2505
  %len4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %10, i32 0, i32 3, !dbg !15495
  %11 = load i64, i64* %len4, align 8, !dbg !15495, !tbaa !2542
  %sub = sub i64 %11, 1, !dbg !15496
  %12 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15497, !tbaa !2505
  %data5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %12, i32 0, i32 5, !dbg !15498
  %13 = load i64*, i64** %data5, align 8, !dbg !15498, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %13, i64 %sub, !dbg !15497
  store i64 %9, i64* %arrayidx, align 8, !dbg !15499, !tbaa !2391
  %14 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15500, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %14, i32 0, i32 1, !dbg !15501
  %15 = load i64, i64* %exp, align 8, !dbg !15502, !tbaa !2510
  %add = add i64 %15, 1, !dbg !15502
  store i64 %add, i64* %exp, align 8, !dbg !15502, !tbaa !2510
  %16 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15503, !tbaa !2505
  %17 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !15504, !tbaa !2505
  %18 = load i32*, i32** %status.addr, align 8, !dbg !15505, !tbaa !2505
  call void @_mpd_check_exp(%struct.mpd_t* %16, %struct.mpd_context_t* %17, i32* %18), !dbg !15506
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15507

if.end:                                           ; preds = %if.then
  %19 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15508, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %19), !dbg !15509
  %20 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15510, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %20, i32 0, i32 2, !dbg !15512
  %21 = load i64, i64* %digits, align 8, !dbg !15512, !tbaa !2514
  %22 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !15513, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %22, i32 0, i32 0, !dbg !15514
  %23 = load i64, i64* %prec, align 8, !dbg !15514, !tbaa !2526
  %cmp = icmp sgt i64 %21, %23, !dbg !15515
  br i1 %cmp, label %if.then.6, label %if.end.12, !dbg !15516

if.then.6:                                        ; preds = %if.end
  %24 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15517, !tbaa !2505
  %call7 = call i64 @mpd_qshiftr_inplace(%struct.mpd_t* %24, i64 1), !dbg !15519
  %25 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15520, !tbaa !2505
  %exp8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %25, i32 0, i32 1, !dbg !15521
  %26 = load i64, i64* %exp8, align 8, !dbg !15522, !tbaa !2510
  %add9 = add i64 %26, 1, !dbg !15522
  store i64 %add9, i64* %exp8, align 8, !dbg !15522, !tbaa !2510
  %27 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !15523, !tbaa !2505
  %prec10 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %27, i32 0, i32 0, !dbg !15524
  %28 = load i64, i64* %prec10, align 8, !dbg !15524, !tbaa !2526
  %29 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15525, !tbaa !2505
  %digits11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %29, i32 0, i32 2, !dbg !15526
  store i64 %28, i64* %digits11, align 8, !dbg !15527, !tbaa !2514
  %30 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15528, !tbaa !2505
  %31 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !15529, !tbaa !2505
  %32 = load i32*, i32** %status.addr, align 8, !dbg !15530, !tbaa !2505
  call void @_mpd_check_exp(%struct.mpd_t* %30, %struct.mpd_context_t* %31, i32* %32), !dbg !15531
  br label %if.end.12, !dbg !15532

if.end.12:                                        ; preds = %if.then.6, %if.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !15533
  br label %cleanup, !dbg !15533

cleanup:                                          ; preds = %if.end.12, %if.then.3
  %33 = bitcast i64* %carry to i8*, !dbg !15534
  call void @llvm.lifetime.end(i64 8, i8* %33) #4, !dbg !15534
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %if.end.13, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.13, !dbg !15536

if.end.13:                                        ; preds = %LeafBlock, %cleanup.cont, %entry
  ret void, !dbg !15537
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @_mpd_rnd_incr(%struct.mpd_t* %dec, i64 %rnd, %struct.mpd_context_t* %ctx) #3 {
entry:
  %retval = alloca i32, align 4
  %dec.addr = alloca %struct.mpd_t*, align 8
  %rnd.addr = alloca i64, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %ld = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %dec, %struct.mpd_t** %dec.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %dec.addr, metadata !1550, metadata !2395), !dbg !15538
  store i64 %rnd, i64* %rnd.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %rnd.addr, metadata !1551, metadata !2395), !dbg !15539
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1552, metadata !2395), !dbg !15540
  %0 = bitcast i32* %ld to i8*, !dbg !15541
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !15541
  call void @llvm.dbg.declare(metadata i32* %ld, metadata !1553, metadata !2395), !dbg !15542
  %1 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !15543, !tbaa !2505
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %1, i32 0, i32 6, !dbg !15544
  %2 = load i32, i32* %round, align 4, !dbg !15544, !tbaa !4148
  br label %NodeBlock.15

NodeBlock.15:                                     ; preds = %entry
  %Pivot.16 = icmp slt i32 %2, 4
  br i1 %Pivot.16, label %NodeBlock.3, label %NodeBlock.13

NodeBlock.13:                                     ; preds = %NodeBlock.15
  %Pivot.14 = icmp slt i32 %2, 6
  br i1 %Pivot.14, label %NodeBlock.5, label %NodeBlock.11

NodeBlock.11:                                     ; preds = %NodeBlock.13
  %Pivot.12 = icmp slt i32 %2, 7
  br i1 %Pivot.12, label %sw.bb.2, label %NodeBlock.9

NodeBlock.9:                                      ; preds = %NodeBlock.11
  %Pivot.10 = icmp slt i32 %2, 8
  br i1 %Pivot.10, label %sw.bb.33, label %LeafBlock.7

LeafBlock.7:                                      ; preds = %NodeBlock.9
  %SwitchLeaf8 = icmp eq i32 %2, 8
  br i1 %SwitchLeaf8, label %sw.bb, label %NewDefault

NodeBlock.5:                                      ; preds = %NodeBlock.13
  %Pivot.6 = icmp slt i32 %2, 5
  br i1 %Pivot.6, label %sw.bb.1, label %sw.bb.25

NodeBlock.3:                                      ; preds = %NodeBlock.15
  %Pivot.4 = icmp slt i32 %2, 2
  br i1 %Pivot.4, label %NodeBlock, label %NodeBlock.1

NodeBlock.1:                                      ; preds = %NodeBlock.3
  %Pivot.2 = icmp slt i32 %2, 3
  br i1 %Pivot.2, label %sw.bb.7, label %sw.bb.15

NodeBlock:                                        ; preds = %NodeBlock.3
  %Pivot = icmp slt i32 %2, 1
  br i1 %Pivot, label %LeafBlock, label %sw.bb

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %2, 0
  br i1 %SwitchLeaf, label %sw.bb.28, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock.7, %NodeBlock
  store i32 0, i32* %retval, !dbg !15545
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15545

sw.bb.1:                                          ; preds = %NodeBlock.5
  %3 = load i64, i64* %rnd.addr, align 8, !dbg !15547, !tbaa !2391
  %cmp = icmp uge i64 %3, 5, !dbg !15548
  %conv = zext i1 %cmp to i32, !dbg !15548
  store i32 %conv, i32* %retval, !dbg !15549
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15549

sw.bb.2:                                          ; preds = %NodeBlock.11
  %4 = load i64, i64* %rnd.addr, align 8, !dbg !15550, !tbaa !2391
  %cmp3 = icmp ugt i64 %4, 5, !dbg !15551
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !15552

lor.rhs:                                          ; preds = %sw.bb.2
  %5 = load i64, i64* %rnd.addr, align 8, !dbg !15553, !tbaa !2391
  %cmp5 = icmp eq i64 %5, 5, !dbg !15555
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !15556

land.rhs:                                         ; preds = %lor.rhs
  %6 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15557, !tbaa !2505
  %call = call i32 @mpd_isoddcoeff(%struct.mpd_t* %6), !dbg !15559
  %tobool = icmp ne i32 %call, 0, !dbg !15556
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %7 = phi i1 [ false, %lor.rhs ], [ %tobool, %land.rhs ]
  br label %lor.end, !dbg !15560

lor.end:                                          ; preds = %land.end, %sw.bb.2
  %8 = phi i1 [ true, %sw.bb.2 ], [ %7, %land.end ]
  %lor.ext = zext i1 %8 to i32, !dbg !15562
  store i32 %lor.ext, i32* %retval, !dbg !15565
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15565

sw.bb.7:                                          ; preds = %NodeBlock.1
  %9 = load i64, i64* %rnd.addr, align 8, !dbg !15566, !tbaa !2391
  %cmp8 = icmp eq i64 %9, 0, !dbg !15567
  br i1 %cmp8, label %lor.end.13, label %lor.rhs.10, !dbg !15568

lor.rhs.10:                                       ; preds = %sw.bb.7
  %10 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15569, !tbaa !2505
  %call11 = call i32 @mpd_isnegative(%struct.mpd_t* %10), !dbg !15570
  %tobool12 = icmp ne i32 %call11, 0, !dbg !15568
  br label %lor.end.13, !dbg !15568

lor.end.13:                                       ; preds = %lor.rhs.10, %sw.bb.7
  %11 = phi i1 [ true, %sw.bb.7 ], [ %tobool12, %lor.rhs.10 ]
  %lnot = xor i1 %11, true, !dbg !15571
  %lnot.ext = zext i1 %lnot to i32, !dbg !15571
  store i32 %lnot.ext, i32* %retval, !dbg !15573
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15573

sw.bb.15:                                         ; preds = %NodeBlock.1
  %12 = load i64, i64* %rnd.addr, align 8, !dbg !15574, !tbaa !2391
  %cmp16 = icmp eq i64 %12, 0, !dbg !15575
  br i1 %cmp16, label %lor.end.21, label %lor.rhs.18, !dbg !15576

lor.rhs.18:                                       ; preds = %sw.bb.15
  %13 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15577, !tbaa !2505
  %call19 = call i32 @mpd_ispositive(%struct.mpd_t* %13), !dbg !15578
  %tobool20 = icmp ne i32 %call19, 0, !dbg !15576
  br label %lor.end.21, !dbg !15576

lor.end.21:                                       ; preds = %lor.rhs.18, %sw.bb.15
  %14 = phi i1 [ true, %sw.bb.15 ], [ %tobool20, %lor.rhs.18 ]
  %lnot23 = xor i1 %14, true, !dbg !15579
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !15579
  store i32 %lnot.ext24, i32* %retval, !dbg !15580
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15580

sw.bb.25:                                         ; preds = %NodeBlock.5
  %15 = load i64, i64* %rnd.addr, align 8, !dbg !15581, !tbaa !2391
  %cmp26 = icmp ugt i64 %15, 5, !dbg !15582
  %conv27 = zext i1 %cmp26 to i32, !dbg !15582
  store i32 %conv27, i32* %retval, !dbg !15583
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15583

sw.bb.28:                                         ; preds = %LeafBlock
  %16 = load i64, i64* %rnd.addr, align 8, !dbg !15584, !tbaa !2391
  %cmp29 = icmp eq i64 %16, 0, !dbg !15585
  %lnot31 = xor i1 %cmp29, true, !dbg !15586
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !15586
  store i32 %lnot.ext32, i32* %retval, !dbg !15587
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15587

sw.bb.33:                                         ; preds = %NodeBlock.9
  %17 = load %struct.mpd_t*, %struct.mpd_t** %dec.addr, align 8, !dbg !15588, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 5, !dbg !15589
  %18 = load i64*, i64** %data, align 8, !dbg !15589, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %18, i64 0, !dbg !15588
  %19 = load i64, i64* %arrayidx, align 8, !dbg !15588, !tbaa !2391
  %call34 = call i64 @mpd_lsd(i64 %19), !dbg !15590
  %conv35 = trunc i64 %call34 to i32, !dbg !15591
  store i32 %conv35, i32* %ld, align 4, !dbg !15592, !tbaa !2554
  %20 = load i64, i64* %rnd.addr, align 8, !dbg !15593, !tbaa !2391
  %cmp36 = icmp eq i64 %20, 0, !dbg !15594
  br i1 %cmp36, label %land.end.46, label %land.rhs.38, !dbg !15595

land.rhs.38:                                      ; preds = %sw.bb.33
  %21 = load i32, i32* %ld, align 4, !dbg !15596, !tbaa !2554
  %cmp39 = icmp eq i32 %21, 0, !dbg !15597
  br i1 %cmp39, label %lor.end.44, label %lor.rhs.41, !dbg !15598

lor.rhs.41:                                       ; preds = %land.rhs.38
  %22 = load i32, i32* %ld, align 4, !dbg !15599, !tbaa !2554
  %cmp42 = icmp eq i32 %22, 5, !dbg !15600
  br label %lor.end.44, !dbg !15598

lor.end.44:                                       ; preds = %lor.rhs.41, %land.rhs.38
  %23 = phi i1 [ true, %land.rhs.38 ], [ %cmp42, %lor.rhs.41 ]
  br label %land.end.46

land.end.46:                                      ; preds = %lor.end.44, %sw.bb.33
  %24 = phi i1 [ false, %sw.bb.33 ], [ %23, %lor.end.44 ]
  %land.ext = zext i1 %24 to i32, !dbg !15601
  store i32 %land.ext, i32* %retval, !dbg !15602
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15602

NewDefault:                                       ; preds = %LeafBlock.7, %LeafBlock
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  store i32 0, i32* %retval, !dbg !15603
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15603

cleanup:                                          ; preds = %sw.default, %land.end.46, %sw.bb.28, %sw.bb.25, %lor.end.21, %lor.end.13, %lor.end, %sw.bb.1, %sw.bb
  %25 = bitcast i32* %ld to i8*, !dbg !15604
  call void @llvm.lifetime.end(i64 4, i8* %25) #4, !dbg !15604
  %26 = load i32, i32* %retval, !dbg !15604
  ret i32 %26, !dbg !15604
}

declare hidden i64 @_mpd_baseincr(i64*, i64) #5

; Function Attrs: nounwind uwtable
define internal i32 @_mpd_cmp_same_adjexp(%struct.mpd_t* %a, %struct.mpd_t* %b) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %shift = alloca i64, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1565, metadata !2395), !dbg !15605
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1566, metadata !2395), !dbg !15606
  %0 = bitcast i64* %shift to i8*, !dbg !15607
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !15607
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !1567, metadata !2395), !dbg !15608
  %1 = bitcast i64* %i to i8*, !dbg !15607
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !15607
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1568, metadata !2395), !dbg !15609
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15610, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %2, i32 0, i32 1, !dbg !15612
  %3 = load i64, i64* %exp, align 8, !dbg !15612, !tbaa !2510
  %4 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !15613, !tbaa !2505
  %exp1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %4, i32 0, i32 1, !dbg !15614
  %5 = load i64, i64* %exp1, align 8, !dbg !15614, !tbaa !2510
  %cmp = icmp ne i64 %3, %5, !dbg !15615
  br i1 %cmp, label %if.then, label %if.end, !dbg !15616

if.then:                                          ; preds = %entry
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15617, !tbaa !2505
  %exp2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %6, i32 0, i32 1, !dbg !15619
  %7 = load i64, i64* %exp2, align 8, !dbg !15619, !tbaa !2510
  %8 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !15620, !tbaa !2505
  %exp3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %8, i32 0, i32 1, !dbg !15621
  %9 = load i64, i64* %exp3, align 8, !dbg !15621, !tbaa !2510
  %sub = sub i64 %7, %9, !dbg !15622
  store i64 %sub, i64* %shift, align 8, !dbg !15623, !tbaa !2391
  %10 = load i64, i64* %shift, align 8, !dbg !15624, !tbaa !2391
  %cmp4 = icmp sgt i64 %10, 0, !dbg !15626
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !15627

if.then.5:                                        ; preds = %if.then
  %11 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !15628, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %11, i32 0, i32 5, !dbg !15630
  %12 = load i64*, i64** %data, align 8, !dbg !15630, !tbaa !2546
  %13 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15631, !tbaa !2505
  %data6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %13, i32 0, i32 5, !dbg !15632
  %14 = load i64*, i64** %data6, align 8, !dbg !15632, !tbaa !2546
  %15 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !15633, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %15, i32 0, i32 3, !dbg !15634
  %16 = load i64, i64* %len, align 8, !dbg !15634, !tbaa !2542
  %17 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15635, !tbaa !2505
  %len7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 3, !dbg !15636
  %18 = load i64, i64* %len7, align 8, !dbg !15636, !tbaa !2542
  %19 = load i64, i64* %shift, align 8, !dbg !15637, !tbaa !2391
  %call = call i32 @_mpd_basecmp(i64* %12, i64* %14, i64 %16, i64 %18, i64 %19), !dbg !15638
  %mul = mul i32 -1, %call, !dbg !15639
  store i32 %mul, i32* %retval, !dbg !15640
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15640

if.else:                                          ; preds = %if.then
  %20 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15641, !tbaa !2505
  %data8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %20, i32 0, i32 5, !dbg !15643
  %21 = load i64*, i64** %data8, align 8, !dbg !15643, !tbaa !2546
  %22 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !15644, !tbaa !2505
  %data9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %22, i32 0, i32 5, !dbg !15645
  %23 = load i64*, i64** %data9, align 8, !dbg !15645, !tbaa !2546
  %24 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15646, !tbaa !2505
  %len10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %24, i32 0, i32 3, !dbg !15647
  %25 = load i64, i64* %len10, align 8, !dbg !15647, !tbaa !2542
  %26 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !15648, !tbaa !2505
  %len11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %26, i32 0, i32 3, !dbg !15649
  %27 = load i64, i64* %len11, align 8, !dbg !15649, !tbaa !2542
  %28 = load i64, i64* %shift, align 8, !dbg !15650, !tbaa !2391
  %sub12 = sub i64 0, %28, !dbg !15651
  %call13 = call i32 @_mpd_basecmp(i64* %21, i64* %23, i64 %25, i64 %27, i64 %sub12), !dbg !15652
  store i32 %call13, i32* %retval, !dbg !15653
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15653

if.end:                                           ; preds = %entry
  %29 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15654, !tbaa !2505
  %len14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %29, i32 0, i32 3, !dbg !15656
  %30 = load i64, i64* %len14, align 8, !dbg !15656, !tbaa !2542
  %sub15 = sub i64 %30, 1, !dbg !15657
  store i64 %sub15, i64* %i, align 8, !dbg !15658, !tbaa !2391
  br label %for.cond, !dbg !15659

for.cond:                                         ; preds = %for.inc, %if.end
  %31 = load i64, i64* %i, align 8, !dbg !15660, !tbaa !2391
  %cmp16 = icmp sge i64 %31, 0, !dbg !15664
  br i1 %cmp16, label %for.body, label %for.end, !dbg !15665

for.body:                                         ; preds = %for.cond
  %32 = load i64, i64* %i, align 8, !dbg !15666, !tbaa !2391
  %33 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15669, !tbaa !2505
  %data17 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %33, i32 0, i32 5, !dbg !15670
  %34 = load i64*, i64** %data17, align 8, !dbg !15670, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %34, i64 %32, !dbg !15669
  %35 = load i64, i64* %arrayidx, align 8, !dbg !15669, !tbaa !2391
  %36 = load i64, i64* %i, align 8, !dbg !15671, !tbaa !2391
  %37 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !15672, !tbaa !2505
  %data18 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %37, i32 0, i32 5, !dbg !15673
  %38 = load i64*, i64** %data18, align 8, !dbg !15673, !tbaa !2546
  %arrayidx19 = getelementptr i64, i64* %38, i64 %36, !dbg !15672
  %39 = load i64, i64* %arrayidx19, align 8, !dbg !15672, !tbaa !2391
  %cmp20 = icmp ne i64 %35, %39, !dbg !15674
  br i1 %cmp20, label %if.then.21, label %if.end.29, !dbg !15675

if.then.21:                                       ; preds = %for.body
  %40 = load i64, i64* %i, align 8, !dbg !15676, !tbaa !2391
  %41 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !15680, !tbaa !2505
  %data22 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %41, i32 0, i32 5, !dbg !15681
  %42 = load i64*, i64** %data22, align 8, !dbg !15681, !tbaa !2546
  %arrayidx23 = getelementptr i64, i64* %42, i64 %40, !dbg !15680
  %43 = load i64, i64* %arrayidx23, align 8, !dbg !15680, !tbaa !2391
  %44 = load i64, i64* %i, align 8, !dbg !15682, !tbaa !2391
  %45 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !15683, !tbaa !2505
  %data24 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %45, i32 0, i32 5, !dbg !15684
  %46 = load i64*, i64** %data24, align 8, !dbg !15684, !tbaa !2546
  %arrayidx25 = getelementptr i64, i64* %46, i64 %44, !dbg !15683
  %47 = load i64, i64* %arrayidx25, align 8, !dbg !15683, !tbaa !2391
  %cmp26 = icmp ult i64 %43, %47, !dbg !15685
  br i1 %cmp26, label %if.then.27, label %if.end.28, !dbg !15686

if.then.27:                                       ; preds = %if.then.21
  store i32 -1, i32* %retval, !dbg !15687
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15690

if.end.28:                                        ; preds = %if.then.21
  store i32 1, i32* %retval, !dbg !15691
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15693

if.end.29:                                        ; preds = %for.body
  br label %for.inc, !dbg !15694

for.inc:                                          ; preds = %if.end.29
  %48 = load i64, i64* %i, align 8, !dbg !15695, !tbaa !2391
  %dec = add i64 %48, -1, !dbg !15695
  store i64 %dec, i64* %i, align 8, !dbg !15695, !tbaa !2391
  br label %for.cond, !dbg !15696

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, !dbg !15697
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15697

cleanup:                                          ; preds = %for.end, %if.end.28, %if.then.27, %if.else, %if.then.5
  %49 = bitcast i64* %i to i8*, !dbg !15698
  call void @llvm.lifetime.end(i64 8, i8* %49) #4, !dbg !15698
  %50 = bitcast i64* %shift to i8*, !dbg !15698
  call void @llvm.lifetime.end(i64 8, i8* %50) #4, !dbg !15698
  %51 = load i32, i32* %retval, !dbg !15698
  ret i32 %51, !dbg !15698
}

; Function Attrs: nounwind uwtable
define internal i32 @_mpd_basecmp(i64* %big, i64* %small, i64 %n, i64 %m, i64 %shift) #0 {
entry:
  %retval = alloca i32, align 4
  %big.addr = alloca i64*, align 8
  %small.addr = alloca i64*, align 8
  %n.addr = alloca i64, align 8
  %m.addr = alloca i64, align 8
  %shift.addr = alloca i64, align 8
  %l = alloca i64, align 8
  %lprev = alloca i64, align 8
  %h = alloca i64, align 8
  %q = alloca i64, align 8
  %r = alloca i64, align 8
  %ph = alloca i64, align 8
  %x = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i64* %big, i64** %big.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %big.addr, metadata !1573, metadata !2395), !dbg !15699
  store i64* %small, i64** %small.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %small.addr, metadata !1574, metadata !2395), !dbg !15700
  store i64 %n, i64* %n.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !1575, metadata !2395), !dbg !15701
  store i64 %m, i64* %m.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %m.addr, metadata !1576, metadata !2395), !dbg !15702
  store i64 %shift, i64* %shift.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %shift.addr, metadata !1577, metadata !2395), !dbg !15703
  %0 = bitcast i64* %l to i8*, !dbg !15704
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !15704
  call void @llvm.dbg.declare(metadata i64* %l, metadata !1578, metadata !2395), !dbg !15705
  %1 = bitcast i64* %lprev to i8*, !dbg !15704
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !15704
  call void @llvm.dbg.declare(metadata i64* %lprev, metadata !1579, metadata !2395), !dbg !15706
  %2 = bitcast i64* %h to i8*, !dbg !15704
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !15704
  call void @llvm.dbg.declare(metadata i64* %h, metadata !1580, metadata !2395), !dbg !15707
  %3 = bitcast i64* %q to i8*, !dbg !15708
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !15708
  call void @llvm.dbg.declare(metadata i64* %q, metadata !1581, metadata !2395), !dbg !15709
  %4 = bitcast i64* %r to i8*, !dbg !15708
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !15708
  call void @llvm.dbg.declare(metadata i64* %r, metadata !1582, metadata !2395), !dbg !15710
  %5 = bitcast i64* %ph to i8*, !dbg !15711
  call void @llvm.lifetime.start(i64 8, i8* %5) #4, !dbg !15711
  call void @llvm.dbg.declare(metadata i64* %ph, metadata !1583, metadata !2395), !dbg !15712
  %6 = bitcast i64* %x to i8*, !dbg !15711
  call void @llvm.lifetime.start(i64 8, i8* %6) #4, !dbg !15711
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1584, metadata !2395), !dbg !15713
  %7 = load i64, i64* %shift.addr, align 8, !dbg !15714, !tbaa !2391
  call void @_mpd_div_word(i64* %q, i64* %r, i64 %7, i64 19), !dbg !15715
  %8 = load i64, i64* %r, align 8, !dbg !15716, !tbaa !2391
  %cmp = icmp ne i64 %8, 0, !dbg !15718
  br i1 %cmp, label %if.then, label %if.else, !dbg !15719

if.then:                                          ; preds = %entry
  %9 = load i64, i64* %r, align 8, !dbg !15720, !tbaa !2391
  %arrayidx = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %9, !dbg !15722
  %10 = load i64, i64* %arrayidx, align 8, !dbg !15722, !tbaa !2391
  store i64 %10, i64* %ph, align 8, !dbg !15723, !tbaa !2391
  %11 = load i64, i64* %m.addr, align 8, !dbg !15724, !tbaa !2391
  %dec = add i64 %11, -1, !dbg !15724
  store i64 %dec, i64* %m.addr, align 8, !dbg !15724, !tbaa !2391
  %12 = load i64, i64* %n.addr, align 8, !dbg !15725, !tbaa !2391
  %dec1 = add i64 %12, -1, !dbg !15725
  store i64 %dec1, i64* %n.addr, align 8, !dbg !15725, !tbaa !2391
  %13 = load i64, i64* %m.addr, align 8, !dbg !15726, !tbaa !2391
  %dec2 = add i64 %13, -1, !dbg !15726
  store i64 %dec2, i64* %m.addr, align 8, !dbg !15726, !tbaa !2391
  %14 = load i64*, i64** %small.addr, align 8, !dbg !15727, !tbaa !2505
  %arrayidx3 = getelementptr i64, i64* %14, i64 %13, !dbg !15727
  %15 = load i64, i64* %arrayidx3, align 8, !dbg !15727, !tbaa !2391
  %16 = load i64, i64* %r, align 8, !dbg !15728, !tbaa !2391
  %sub = sub i64 19, %16, !dbg !15729
  call void @_mpd_divmod_pow10(i64* %h, i64* %lprev, i64 %15, i64 %sub), !dbg !15730
  %17 = load i64, i64* %h, align 8, !dbg !15731, !tbaa !2391
  %cmp4 = icmp ne i64 %17, 0, !dbg !15733
  br i1 %cmp4, label %if.then.5, label %if.end.14, !dbg !15734

if.then.5:                                        ; preds = %if.then
  %18 = load i64, i64* %n.addr, align 8, !dbg !15735, !tbaa !2391
  %19 = load i64*, i64** %big.addr, align 8, !dbg !15738, !tbaa !2505
  %arrayidx6 = getelementptr i64, i64* %19, i64 %18, !dbg !15738
  %20 = load i64, i64* %arrayidx6, align 8, !dbg !15738, !tbaa !2391
  %21 = load i64, i64* %h, align 8, !dbg !15739, !tbaa !2391
  %cmp7 = icmp ne i64 %20, %21, !dbg !15740
  br i1 %cmp7, label %if.then.8, label %if.end.12, !dbg !15741

if.then.8:                                        ; preds = %if.then.5
  %22 = load i64, i64* %n.addr, align 8, !dbg !15742, !tbaa !2391
  %23 = load i64*, i64** %big.addr, align 8, !dbg !15746, !tbaa !2505
  %arrayidx9 = getelementptr i64, i64* %23, i64 %22, !dbg !15746
  %24 = load i64, i64* %arrayidx9, align 8, !dbg !15746, !tbaa !2391
  %25 = load i64, i64* %h, align 8, !dbg !15747, !tbaa !2391
  %cmp10 = icmp ult i64 %24, %25, !dbg !15748
  br i1 %cmp10, label %if.then.11, label %if.end, !dbg !15749

if.then.11:                                       ; preds = %if.then.8
  store i32 -1, i32* %retval, !dbg !15750
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15753

if.end:                                           ; preds = %if.then.8
  store i32 1, i32* %retval, !dbg !15754
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15756

if.end.12:                                        ; preds = %if.then.5
  %26 = load i64, i64* %n.addr, align 8, !dbg !15757, !tbaa !2391
  %dec13 = add i64 %26, -1, !dbg !15757
  store i64 %dec13, i64* %n.addr, align 8, !dbg !15757, !tbaa !2391
  br label %if.end.14, !dbg !15758

if.end.14:                                        ; preds = %if.end.12, %if.then
  br label %for.cond, !dbg !15759

for.cond:                                         ; preds = %for.inc, %if.end.14
  %27 = load i64, i64* %m.addr, align 8, !dbg !15760, !tbaa !2391
  %cmp15 = icmp ne i64 %27, -1, !dbg !15765
  br i1 %cmp15, label %for.body, label %for.end, !dbg !15766

for.body:                                         ; preds = %for.cond
  %28 = load i64, i64* %m.addr, align 8, !dbg !15767, !tbaa !2391
  %29 = load i64*, i64** %small.addr, align 8, !dbg !15769, !tbaa !2505
  %arrayidx16 = getelementptr i64, i64* %29, i64 %28, !dbg !15769
  %30 = load i64, i64* %arrayidx16, align 8, !dbg !15769, !tbaa !2391
  %31 = load i64, i64* %r, align 8, !dbg !15770, !tbaa !2391
  %sub17 = sub i64 19, %31, !dbg !15771
  call void @_mpd_divmod_pow10(i64* %h, i64* %l, i64 %30, i64 %sub17), !dbg !15772
  %32 = load i64, i64* %ph, align 8, !dbg !15773, !tbaa !2391
  %33 = load i64, i64* %lprev, align 8, !dbg !15774, !tbaa !2391
  %mul = mul i64 %32, %33, !dbg !15775
  %34 = load i64, i64* %h, align 8, !dbg !15776, !tbaa !2391
  %add = add i64 %mul, %34, !dbg !15777
  store i64 %add, i64* %x, align 8, !dbg !15778, !tbaa !2391
  %35 = load i64, i64* %n.addr, align 8, !dbg !15779, !tbaa !2391
  %36 = load i64*, i64** %big.addr, align 8, !dbg !15781, !tbaa !2505
  %arrayidx18 = getelementptr i64, i64* %36, i64 %35, !dbg !15781
  %37 = load i64, i64* %arrayidx18, align 8, !dbg !15781, !tbaa !2391
  %38 = load i64, i64* %x, align 8, !dbg !15782, !tbaa !2391
  %cmp19 = icmp ne i64 %37, %38, !dbg !15783
  br i1 %cmp19, label %if.then.20, label %if.end.25, !dbg !15784

if.then.20:                                       ; preds = %for.body
  %39 = load i64, i64* %n.addr, align 8, !dbg !15785, !tbaa !2391
  %40 = load i64*, i64** %big.addr, align 8, !dbg !15789, !tbaa !2505
  %arrayidx21 = getelementptr i64, i64* %40, i64 %39, !dbg !15789
  %41 = load i64, i64* %arrayidx21, align 8, !dbg !15789, !tbaa !2391
  %42 = load i64, i64* %x, align 8, !dbg !15790, !tbaa !2391
  %cmp22 = icmp ult i64 %41, %42, !dbg !15791
  br i1 %cmp22, label %if.then.23, label %if.end.24, !dbg !15792

if.then.23:                                       ; preds = %if.then.20
  store i32 -1, i32* %retval, !dbg !15793
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15796

if.end.24:                                        ; preds = %if.then.20
  store i32 1, i32* %retval, !dbg !15797
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15799

if.end.25:                                        ; preds = %for.body
  %43 = load i64, i64* %l, align 8, !dbg !15800, !tbaa !2391
  store i64 %43, i64* %lprev, align 8, !dbg !15801, !tbaa !2391
  br label %for.inc, !dbg !15802

for.inc:                                          ; preds = %if.end.25
  %44 = load i64, i64* %m.addr, align 8, !dbg !15803, !tbaa !2391
  %dec26 = add i64 %44, -1, !dbg !15803
  store i64 %dec26, i64* %m.addr, align 8, !dbg !15803, !tbaa !2391
  %45 = load i64, i64* %n.addr, align 8, !dbg !15804, !tbaa !2391
  %dec27 = add i64 %45, -1, !dbg !15804
  store i64 %dec27, i64* %n.addr, align 8, !dbg !15804, !tbaa !2391
  br label %for.cond, !dbg !15805

for.end:                                          ; preds = %for.cond
  %46 = load i64, i64* %ph, align 8, !dbg !15806, !tbaa !2391
  %47 = load i64, i64* %lprev, align 8, !dbg !15807, !tbaa !2391
  %mul28 = mul i64 %46, %47, !dbg !15808
  store i64 %mul28, i64* %x, align 8, !dbg !15809, !tbaa !2391
  %48 = load i64, i64* %q, align 8, !dbg !15810, !tbaa !2391
  %49 = load i64*, i64** %big.addr, align 8, !dbg !15812, !tbaa !2505
  %arrayidx29 = getelementptr i64, i64* %49, i64 %48, !dbg !15812
  %50 = load i64, i64* %arrayidx29, align 8, !dbg !15812, !tbaa !2391
  %51 = load i64, i64* %x, align 8, !dbg !15813, !tbaa !2391
  %cmp30 = icmp ne i64 %50, %51, !dbg !15814
  br i1 %cmp30, label %if.then.31, label %if.end.36, !dbg !15815

if.then.31:                                       ; preds = %for.end
  %52 = load i64, i64* %q, align 8, !dbg !15816, !tbaa !2391
  %53 = load i64*, i64** %big.addr, align 8, !dbg !15820, !tbaa !2505
  %arrayidx32 = getelementptr i64, i64* %53, i64 %52, !dbg !15820
  %54 = load i64, i64* %arrayidx32, align 8, !dbg !15820, !tbaa !2391
  %55 = load i64, i64* %x, align 8, !dbg !15821, !tbaa !2391
  %cmp33 = icmp ult i64 %54, %55, !dbg !15822
  br i1 %cmp33, label %if.then.34, label %if.end.35, !dbg !15823

if.then.34:                                       ; preds = %if.then.31
  store i32 -1, i32* %retval, !dbg !15824
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15827

if.end.35:                                        ; preds = %if.then.31
  store i32 1, i32* %retval, !dbg !15828
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15830

if.end.36:                                        ; preds = %for.end
  br label %if.end.51, !dbg !15831

if.else:                                          ; preds = %entry
  br label %while.cond, !dbg !15832

while.cond:                                       ; preds = %if.end.50, %if.else
  %56 = load i64, i64* %m.addr, align 8, !dbg !15834, !tbaa !2391
  %dec37 = add i64 %56, -1, !dbg !15834
  store i64 %dec37, i64* %m.addr, align 8, !dbg !15834, !tbaa !2391
  %cmp38 = icmp ne i64 %dec37, -1, !dbg !15837
  br i1 %cmp38, label %while.body, label %while.end, !dbg !15832

while.body:                                       ; preds = %while.cond
  %57 = load i64, i64* %m.addr, align 8, !dbg !15838, !tbaa !2391
  %58 = load i64, i64* %q, align 8, !dbg !15841, !tbaa !2391
  %add39 = add i64 %57, %58, !dbg !15842
  %59 = load i64*, i64** %big.addr, align 8, !dbg !15843, !tbaa !2505
  %arrayidx40 = getelementptr i64, i64* %59, i64 %add39, !dbg !15843
  %60 = load i64, i64* %arrayidx40, align 8, !dbg !15843, !tbaa !2391
  %61 = load i64, i64* %m.addr, align 8, !dbg !15844, !tbaa !2391
  %62 = load i64*, i64** %small.addr, align 8, !dbg !15845, !tbaa !2505
  %arrayidx41 = getelementptr i64, i64* %62, i64 %61, !dbg !15845
  %63 = load i64, i64* %arrayidx41, align 8, !dbg !15845, !tbaa !2391
  %cmp42 = icmp ne i64 %60, %63, !dbg !15846
  br i1 %cmp42, label %if.then.43, label %if.end.50, !dbg !15847

if.then.43:                                       ; preds = %while.body
  %64 = load i64, i64* %m.addr, align 8, !dbg !15848, !tbaa !2391
  %65 = load i64, i64* %q, align 8, !dbg !15852, !tbaa !2391
  %add44 = add i64 %64, %65, !dbg !15853
  %66 = load i64*, i64** %big.addr, align 8, !dbg !15854, !tbaa !2505
  %arrayidx45 = getelementptr i64, i64* %66, i64 %add44, !dbg !15854
  %67 = load i64, i64* %arrayidx45, align 8, !dbg !15854, !tbaa !2391
  %68 = load i64, i64* %m.addr, align 8, !dbg !15855, !tbaa !2391
  %69 = load i64*, i64** %small.addr, align 8, !dbg !15856, !tbaa !2505
  %arrayidx46 = getelementptr i64, i64* %69, i64 %68, !dbg !15856
  %70 = load i64, i64* %arrayidx46, align 8, !dbg !15856, !tbaa !2391
  %cmp47 = icmp ult i64 %67, %70, !dbg !15857
  br i1 %cmp47, label %if.then.48, label %if.end.49, !dbg !15858

if.then.48:                                       ; preds = %if.then.43
  store i32 -1, i32* %retval, !dbg !15859
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15862

if.end.49:                                        ; preds = %if.then.43
  store i32 1, i32* %retval, !dbg !15863
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15865

if.end.50:                                        ; preds = %while.body
  br label %while.cond, !dbg !15832

while.end:                                        ; preds = %while.cond
  br label %if.end.51

if.end.51:                                        ; preds = %while.end, %if.end.36
  %71 = load i64*, i64** %big.addr, align 8, !dbg !15866, !tbaa !2505
  %72 = load i64, i64* %q, align 8, !dbg !15867, !tbaa !2391
  %call = call i32 @_mpd_isallzero(i64* %71, i64 %72), !dbg !15868
  %tobool = icmp ne i32 %call, 0, !dbg !15869
  %lnot = xor i1 %tobool, true, !dbg !15869
  %lnot.ext = zext i1 %lnot to i32, !dbg !15869
  store i32 %lnot.ext, i32* %retval, !dbg !15870
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15870

cleanup:                                          ; preds = %if.end.51, %if.end.49, %if.then.48, %if.end.35, %if.then.34, %if.end.24, %if.then.23, %if.end, %if.then.11
  %73 = bitcast i64* %x to i8*, !dbg !15871
  call void @llvm.lifetime.end(i64 8, i8* %73) #4, !dbg !15871
  %74 = bitcast i64* %ph to i8*, !dbg !15871
  call void @llvm.lifetime.end(i64 8, i8* %74) #4, !dbg !15871
  %75 = bitcast i64* %r to i8*, !dbg !15871
  call void @llvm.lifetime.end(i64 8, i8* %75) #4, !dbg !15871
  %76 = bitcast i64* %q to i8*, !dbg !15871
  call void @llvm.lifetime.end(i64 8, i8* %76) #4, !dbg !15871
  %77 = bitcast i64* %h to i8*, !dbg !15871
  call void @llvm.lifetime.end(i64 8, i8* %77) #4, !dbg !15871
  %78 = bitcast i64* %lprev to i8*, !dbg !15871
  call void @llvm.lifetime.end(i64 8, i8* %78) #4, !dbg !15871
  %79 = bitcast i64* %l to i8*, !dbg !15871
  call void @llvm.lifetime.end(i64 8, i8* %79) #4, !dbg !15871
  %80 = load i32, i32* %retval, !dbg !15871
  ret i32 %80, !dbg !15871
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_divmod_pow10(i64* %q, i64* %r, i64 %v, i64 %exp) #3 {
entry:
  %q.addr = alloca i64*, align 8
  %r.addr = alloca i64*, align 8
  %v.addr = alloca i64, align 8
  %exp.addr = alloca i64, align 8
  store i64* %q, i64** %q.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %q.addr, metadata !1587, metadata !2395), !dbg !15872
  store i64* %r, i64** %r.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %r.addr, metadata !1588, metadata !2395), !dbg !15873
  store i64 %v, i64* %v.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %v.addr, metadata !1589, metadata !2395), !dbg !15874
  store i64 %exp, i64* %exp.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %exp.addr, metadata !1590, metadata !2395), !dbg !15875
  %0 = load i64, i64* %exp.addr, align 8, !dbg !15876, !tbaa !2391
  %cmp = icmp ule i64 %0, 9, !dbg !15878
  br i1 %cmp, label %if.then, label %if.else.37, !dbg !15879

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %exp.addr, align 8, !dbg !15880, !tbaa !2391
  %cmp1 = icmp ule i64 %1, 4, !dbg !15883
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !15884

if.then.2:                                        ; preds = %if.then
  %2 = load i64, i64* %exp.addr, align 8, !dbg !15885, !tbaa !2391
  br label %NodeBlock.7

NodeBlock.7:                                      ; preds = %if.then.2
  %Pivot.8 = icmp slt i64 %2, 2
  br i1 %Pivot.8, label %NodeBlock, label %NodeBlock.5

NodeBlock.5:                                      ; preds = %NodeBlock.7
  %Pivot.6 = icmp slt i64 %2, 3
  br i1 %Pivot.6, label %sw.bb.4, label %NodeBlock.3

NodeBlock.3:                                      ; preds = %NodeBlock.5
  %Pivot.4 = icmp slt i64 %2, 4
  br i1 %Pivot.4, label %sw.bb.8, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock.3
  %SwitchLeaf2 = icmp eq i64 %2, 4
  br i1 %SwitchLeaf2, label %sw.bb.12, label %NewDefault

NodeBlock:                                        ; preds = %NodeBlock.7
  %Pivot = icmp slt i64 %2, 1
  br i1 %Pivot, label %LeafBlock, label %sw.bb.3

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i64 %2, 0
  br i1 %SwitchLeaf, label %sw.bb, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock
  %3 = load i64, i64* %v.addr, align 8, !dbg !15887, !tbaa !2391
  %4 = load i64*, i64** %q.addr, align 8, !dbg !15889, !tbaa !2505
  store i64 %3, i64* %4, align 8, !dbg !15890, !tbaa !2391
  %5 = load i64*, i64** %r.addr, align 8, !dbg !15891, !tbaa !2505
  store i64 0, i64* %5, align 8, !dbg !15892, !tbaa !2391
  br label %sw.epilog, !dbg !15893

sw.bb.3:                                          ; preds = %NodeBlock
  %6 = load i64, i64* %v.addr, align 8, !dbg !15894, !tbaa !2391
  %div = udiv i64 %6, 10, !dbg !15895
  %7 = load i64*, i64** %q.addr, align 8, !dbg !15896, !tbaa !2505
  store i64 %div, i64* %7, align 8, !dbg !15897, !tbaa !2391
  %8 = load i64, i64* %v.addr, align 8, !dbg !15898, !tbaa !2391
  %9 = load i64*, i64** %q.addr, align 8, !dbg !15899, !tbaa !2505
  %10 = load i64, i64* %9, align 8, !dbg !15900, !tbaa !2391
  %mul = mul i64 %10, 10, !dbg !15901
  %sub = sub i64 %8, %mul, !dbg !15902
  %11 = load i64*, i64** %r.addr, align 8, !dbg !15903, !tbaa !2505
  store i64 %sub, i64* %11, align 8, !dbg !15904, !tbaa !2391
  br label %sw.epilog, !dbg !15905

sw.bb.4:                                          ; preds = %NodeBlock.5
  %12 = load i64, i64* %v.addr, align 8, !dbg !15906, !tbaa !2391
  %div5 = udiv i64 %12, 100, !dbg !15907
  %13 = load i64*, i64** %q.addr, align 8, !dbg !15908, !tbaa !2505
  store i64 %div5, i64* %13, align 8, !dbg !15909, !tbaa !2391
  %14 = load i64, i64* %v.addr, align 8, !dbg !15910, !tbaa !2391
  %15 = load i64*, i64** %q.addr, align 8, !dbg !15911, !tbaa !2505
  %16 = load i64, i64* %15, align 8, !dbg !15912, !tbaa !2391
  %mul6 = mul i64 %16, 100, !dbg !15913
  %sub7 = sub i64 %14, %mul6, !dbg !15914
  %17 = load i64*, i64** %r.addr, align 8, !dbg !15915, !tbaa !2505
  store i64 %sub7, i64* %17, align 8, !dbg !15916, !tbaa !2391
  br label %sw.epilog, !dbg !15917

sw.bb.8:                                          ; preds = %NodeBlock.3
  %18 = load i64, i64* %v.addr, align 8, !dbg !15918, !tbaa !2391
  %div9 = udiv i64 %18, 1000, !dbg !15919
  %19 = load i64*, i64** %q.addr, align 8, !dbg !15920, !tbaa !2505
  store i64 %div9, i64* %19, align 8, !dbg !15921, !tbaa !2391
  %20 = load i64, i64* %v.addr, align 8, !dbg !15922, !tbaa !2391
  %21 = load i64*, i64** %q.addr, align 8, !dbg !15923, !tbaa !2505
  %22 = load i64, i64* %21, align 8, !dbg !15924, !tbaa !2391
  %mul10 = mul i64 %22, 1000, !dbg !15925
  %sub11 = sub i64 %20, %mul10, !dbg !15926
  %23 = load i64*, i64** %r.addr, align 8, !dbg !15927, !tbaa !2505
  store i64 %sub11, i64* %23, align 8, !dbg !15928, !tbaa !2391
  br label %sw.epilog, !dbg !15929

sw.bb.12:                                         ; preds = %LeafBlock.1
  %24 = load i64, i64* %v.addr, align 8, !dbg !15930, !tbaa !2391
  %div13 = udiv i64 %24, 10000, !dbg !15931
  %25 = load i64*, i64** %q.addr, align 8, !dbg !15932, !tbaa !2505
  store i64 %div13, i64* %25, align 8, !dbg !15933, !tbaa !2391
  %26 = load i64, i64* %v.addr, align 8, !dbg !15934, !tbaa !2391
  %27 = load i64*, i64** %q.addr, align 8, !dbg !15935, !tbaa !2505
  %28 = load i64, i64* %27, align 8, !dbg !15936, !tbaa !2391
  %mul14 = mul i64 %28, 10000, !dbg !15937
  %sub15 = sub i64 %26, %mul14, !dbg !15938
  %29 = load i64*, i64** %r.addr, align 8, !dbg !15939, !tbaa !2505
  store i64 %sub15, i64* %29, align 8, !dbg !15940, !tbaa !2391
  br label %sw.epilog, !dbg !15941

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %sw.epilog

sw.epilog:                                        ; preds = %NewDefault, %sw.bb.12, %sw.bb.8, %sw.bb.4, %sw.bb.3, %sw.bb
  br label %if.end, !dbg !15942

if.else:                                          ; preds = %if.then
  %30 = load i64, i64* %exp.addr, align 8, !dbg !15943, !tbaa !2391
  br label %NodeBlock.20

NodeBlock.20:                                     ; preds = %if.else
  %Pivot.21 = icmp slt i64 %30, 7
  br i1 %Pivot.21, label %NodeBlock.12, label %NodeBlock.18

NodeBlock.18:                                     ; preds = %NodeBlock.20
  %Pivot.19 = icmp slt i64 %30, 8
  br i1 %Pivot.19, label %sw.bb.24, label %NodeBlock.16

NodeBlock.16:                                     ; preds = %NodeBlock.18
  %Pivot.17 = icmp slt i64 %30, 9
  br i1 %Pivot.17, label %sw.bb.28, label %LeafBlock.14

LeafBlock.14:                                     ; preds = %NodeBlock.16
  %SwitchLeaf15 = icmp eq i64 %30, 9
  br i1 %SwitchLeaf15, label %sw.bb.32, label %NewDefault.9

NodeBlock.12:                                     ; preds = %NodeBlock.20
  %Pivot.13 = icmp slt i64 %30, 6
  br i1 %Pivot.13, label %LeafBlock.10, label %sw.bb.20

LeafBlock.10:                                     ; preds = %NodeBlock.12
  %SwitchLeaf11 = icmp eq i64 %30, 5
  br i1 %SwitchLeaf11, label %sw.bb.16, label %NewDefault.9

sw.bb.16:                                         ; preds = %LeafBlock.10
  %31 = load i64, i64* %v.addr, align 8, !dbg !15945, !tbaa !2391
  %div17 = udiv i64 %31, 100000, !dbg !15947
  %32 = load i64*, i64** %q.addr, align 8, !dbg !15948, !tbaa !2505
  store i64 %div17, i64* %32, align 8, !dbg !15949, !tbaa !2391
  %33 = load i64, i64* %v.addr, align 8, !dbg !15950, !tbaa !2391
  %34 = load i64*, i64** %q.addr, align 8, !dbg !15951, !tbaa !2505
  %35 = load i64, i64* %34, align 8, !dbg !15952, !tbaa !2391
  %mul18 = mul i64 %35, 100000, !dbg !15953
  %sub19 = sub i64 %33, %mul18, !dbg !15954
  %36 = load i64*, i64** %r.addr, align 8, !dbg !15955, !tbaa !2505
  store i64 %sub19, i64* %36, align 8, !dbg !15956, !tbaa !2391
  br label %sw.epilog.36, !dbg !15957

sw.bb.20:                                         ; preds = %NodeBlock.12
  %37 = load i64, i64* %v.addr, align 8, !dbg !15958, !tbaa !2391
  %div21 = udiv i64 %37, 1000000, !dbg !15959
  %38 = load i64*, i64** %q.addr, align 8, !dbg !15960, !tbaa !2505
  store i64 %div21, i64* %38, align 8, !dbg !15961, !tbaa !2391
  %39 = load i64, i64* %v.addr, align 8, !dbg !15962, !tbaa !2391
  %40 = load i64*, i64** %q.addr, align 8, !dbg !15963, !tbaa !2505
  %41 = load i64, i64* %40, align 8, !dbg !15964, !tbaa !2391
  %mul22 = mul i64 %41, 1000000, !dbg !15965
  %sub23 = sub i64 %39, %mul22, !dbg !15966
  %42 = load i64*, i64** %r.addr, align 8, !dbg !15967, !tbaa !2505
  store i64 %sub23, i64* %42, align 8, !dbg !15968, !tbaa !2391
  br label %sw.epilog.36, !dbg !15969

sw.bb.24:                                         ; preds = %NodeBlock.18
  %43 = load i64, i64* %v.addr, align 8, !dbg !15970, !tbaa !2391
  %div25 = udiv i64 %43, 10000000, !dbg !15971
  %44 = load i64*, i64** %q.addr, align 8, !dbg !15972, !tbaa !2505
  store i64 %div25, i64* %44, align 8, !dbg !15973, !tbaa !2391
  %45 = load i64, i64* %v.addr, align 8, !dbg !15974, !tbaa !2391
  %46 = load i64*, i64** %q.addr, align 8, !dbg !15975, !tbaa !2505
  %47 = load i64, i64* %46, align 8, !dbg !15976, !tbaa !2391
  %mul26 = mul i64 %47, 10000000, !dbg !15977
  %sub27 = sub i64 %45, %mul26, !dbg !15978
  %48 = load i64*, i64** %r.addr, align 8, !dbg !15979, !tbaa !2505
  store i64 %sub27, i64* %48, align 8, !dbg !15980, !tbaa !2391
  br label %sw.epilog.36, !dbg !15981

sw.bb.28:                                         ; preds = %NodeBlock.16
  %49 = load i64, i64* %v.addr, align 8, !dbg !15982, !tbaa !2391
  %div29 = udiv i64 %49, 100000000, !dbg !15983
  %50 = load i64*, i64** %q.addr, align 8, !dbg !15984, !tbaa !2505
  store i64 %div29, i64* %50, align 8, !dbg !15985, !tbaa !2391
  %51 = load i64, i64* %v.addr, align 8, !dbg !15986, !tbaa !2391
  %52 = load i64*, i64** %q.addr, align 8, !dbg !15987, !tbaa !2505
  %53 = load i64, i64* %52, align 8, !dbg !15988, !tbaa !2391
  %mul30 = mul i64 %53, 100000000, !dbg !15989
  %sub31 = sub i64 %51, %mul30, !dbg !15990
  %54 = load i64*, i64** %r.addr, align 8, !dbg !15991, !tbaa !2505
  store i64 %sub31, i64* %54, align 8, !dbg !15992, !tbaa !2391
  br label %sw.epilog.36, !dbg !15993

sw.bb.32:                                         ; preds = %LeafBlock.14
  %55 = load i64, i64* %v.addr, align 8, !dbg !15994, !tbaa !2391
  %div33 = udiv i64 %55, 1000000000, !dbg !15995
  %56 = load i64*, i64** %q.addr, align 8, !dbg !15996, !tbaa !2505
  store i64 %div33, i64* %56, align 8, !dbg !15997, !tbaa !2391
  %57 = load i64, i64* %v.addr, align 8, !dbg !15998, !tbaa !2391
  %58 = load i64*, i64** %q.addr, align 8, !dbg !15999, !tbaa !2505
  %59 = load i64, i64* %58, align 8, !dbg !16000, !tbaa !2391
  %mul34 = mul i64 %59, 1000000000, !dbg !16001
  %sub35 = sub i64 %57, %mul34, !dbg !16002
  %60 = load i64*, i64** %r.addr, align 8, !dbg !16003, !tbaa !2505
  store i64 %sub35, i64* %60, align 8, !dbg !16004, !tbaa !2391
  br label %sw.epilog.36, !dbg !16005

NewDefault.9:                                     ; preds = %LeafBlock.14, %LeafBlock.10
  br label %sw.epilog.36

sw.epilog.36:                                     ; preds = %NewDefault.9, %sw.bb.32, %sw.bb.28, %sw.bb.24, %sw.bb.20, %sw.bb.16
  br label %if.end

if.end:                                           ; preds = %sw.epilog.36, %sw.epilog
  br label %if.end.84, !dbg !16006

if.else.37:                                       ; preds = %entry
  %61 = load i64, i64* %exp.addr, align 8, !dbg !16007, !tbaa !2391
  %cmp38 = icmp ule i64 %61, 14, !dbg !16010
  br i1 %cmp38, label %if.then.39, label %if.else.61, !dbg !16011

if.then.39:                                       ; preds = %if.else.37
  %62 = load i64, i64* %exp.addr, align 8, !dbg !16012, !tbaa !2391
  br label %NodeBlock.33

NodeBlock.33:                                     ; preds = %if.then.39
  %Pivot.34 = icmp slt i64 %62, 12
  br i1 %Pivot.34, label %NodeBlock.25, label %NodeBlock.31

NodeBlock.31:                                     ; preds = %NodeBlock.33
  %Pivot.32 = icmp slt i64 %62, 13
  br i1 %Pivot.32, label %sw.bb.48, label %NodeBlock.29

NodeBlock.29:                                     ; preds = %NodeBlock.31
  %Pivot.30 = icmp slt i64 %62, 14
  br i1 %Pivot.30, label %sw.bb.52, label %LeafBlock.27

LeafBlock.27:                                     ; preds = %NodeBlock.29
  %SwitchLeaf28 = icmp eq i64 %62, 14
  br i1 %SwitchLeaf28, label %sw.bb.56, label %NewDefault.22

NodeBlock.25:                                     ; preds = %NodeBlock.33
  %Pivot.26 = icmp slt i64 %62, 11
  br i1 %Pivot.26, label %LeafBlock.23, label %sw.bb.44

LeafBlock.23:                                     ; preds = %NodeBlock.25
  %SwitchLeaf24 = icmp eq i64 %62, 10
  br i1 %SwitchLeaf24, label %sw.bb.40, label %NewDefault.22

sw.bb.40:                                         ; preds = %LeafBlock.23
  %63 = load i64, i64* %v.addr, align 8, !dbg !16014, !tbaa !2391
  %div41 = udiv i64 %63, 10000000000, !dbg !16016
  %64 = load i64*, i64** %q.addr, align 8, !dbg !16017, !tbaa !2505
  store i64 %div41, i64* %64, align 8, !dbg !16018, !tbaa !2391
  %65 = load i64, i64* %v.addr, align 8, !dbg !16019, !tbaa !2391
  %66 = load i64*, i64** %q.addr, align 8, !dbg !16020, !tbaa !2505
  %67 = load i64, i64* %66, align 8, !dbg !16021, !tbaa !2391
  %mul42 = mul i64 %67, 10000000000, !dbg !16022
  %sub43 = sub i64 %65, %mul42, !dbg !16023
  %68 = load i64*, i64** %r.addr, align 8, !dbg !16024, !tbaa !2505
  store i64 %sub43, i64* %68, align 8, !dbg !16025, !tbaa !2391
  br label %sw.epilog.60, !dbg !16026

sw.bb.44:                                         ; preds = %NodeBlock.25
  %69 = load i64, i64* %v.addr, align 8, !dbg !16027, !tbaa !2391
  %div45 = udiv i64 %69, 100000000000, !dbg !16028
  %70 = load i64*, i64** %q.addr, align 8, !dbg !16029, !tbaa !2505
  store i64 %div45, i64* %70, align 8, !dbg !16030, !tbaa !2391
  %71 = load i64, i64* %v.addr, align 8, !dbg !16031, !tbaa !2391
  %72 = load i64*, i64** %q.addr, align 8, !dbg !16032, !tbaa !2505
  %73 = load i64, i64* %72, align 8, !dbg !16033, !tbaa !2391
  %mul46 = mul i64 %73, 100000000000, !dbg !16034
  %sub47 = sub i64 %71, %mul46, !dbg !16035
  %74 = load i64*, i64** %r.addr, align 8, !dbg !16036, !tbaa !2505
  store i64 %sub47, i64* %74, align 8, !dbg !16037, !tbaa !2391
  br label %sw.epilog.60, !dbg !16038

sw.bb.48:                                         ; preds = %NodeBlock.31
  %75 = load i64, i64* %v.addr, align 8, !dbg !16039, !tbaa !2391
  %div49 = udiv i64 %75, 1000000000000, !dbg !16040
  %76 = load i64*, i64** %q.addr, align 8, !dbg !16041, !tbaa !2505
  store i64 %div49, i64* %76, align 8, !dbg !16042, !tbaa !2391
  %77 = load i64, i64* %v.addr, align 8, !dbg !16043, !tbaa !2391
  %78 = load i64*, i64** %q.addr, align 8, !dbg !16044, !tbaa !2505
  %79 = load i64, i64* %78, align 8, !dbg !16045, !tbaa !2391
  %mul50 = mul i64 %79, 1000000000000, !dbg !16046
  %sub51 = sub i64 %77, %mul50, !dbg !16047
  %80 = load i64*, i64** %r.addr, align 8, !dbg !16048, !tbaa !2505
  store i64 %sub51, i64* %80, align 8, !dbg !16049, !tbaa !2391
  br label %sw.epilog.60, !dbg !16050

sw.bb.52:                                         ; preds = %NodeBlock.29
  %81 = load i64, i64* %v.addr, align 8, !dbg !16051, !tbaa !2391
  %div53 = udiv i64 %81, 10000000000000, !dbg !16052
  %82 = load i64*, i64** %q.addr, align 8, !dbg !16053, !tbaa !2505
  store i64 %div53, i64* %82, align 8, !dbg !16054, !tbaa !2391
  %83 = load i64, i64* %v.addr, align 8, !dbg !16055, !tbaa !2391
  %84 = load i64*, i64** %q.addr, align 8, !dbg !16056, !tbaa !2505
  %85 = load i64, i64* %84, align 8, !dbg !16057, !tbaa !2391
  %mul54 = mul i64 %85, 10000000000000, !dbg !16058
  %sub55 = sub i64 %83, %mul54, !dbg !16059
  %86 = load i64*, i64** %r.addr, align 8, !dbg !16060, !tbaa !2505
  store i64 %sub55, i64* %86, align 8, !dbg !16061, !tbaa !2391
  br label %sw.epilog.60, !dbg !16062

sw.bb.56:                                         ; preds = %LeafBlock.27
  %87 = load i64, i64* %v.addr, align 8, !dbg !16063, !tbaa !2391
  %div57 = udiv i64 %87, 100000000000000, !dbg !16064
  %88 = load i64*, i64** %q.addr, align 8, !dbg !16065, !tbaa !2505
  store i64 %div57, i64* %88, align 8, !dbg !16066, !tbaa !2391
  %89 = load i64, i64* %v.addr, align 8, !dbg !16067, !tbaa !2391
  %90 = load i64*, i64** %q.addr, align 8, !dbg !16068, !tbaa !2505
  %91 = load i64, i64* %90, align 8, !dbg !16069, !tbaa !2391
  %mul58 = mul i64 %91, 100000000000000, !dbg !16070
  %sub59 = sub i64 %89, %mul58, !dbg !16071
  %92 = load i64*, i64** %r.addr, align 8, !dbg !16072, !tbaa !2505
  store i64 %sub59, i64* %92, align 8, !dbg !16073, !tbaa !2391
  br label %sw.epilog.60, !dbg !16074

NewDefault.22:                                    ; preds = %LeafBlock.27, %LeafBlock.23
  br label %sw.epilog.60

sw.epilog.60:                                     ; preds = %NewDefault.22, %sw.bb.56, %sw.bb.52, %sw.bb.48, %sw.bb.44, %sw.bb.40
  br label %if.end.83, !dbg !16075

if.else.61:                                       ; preds = %if.else.37
  %93 = load i64, i64* %exp.addr, align 8, !dbg !16076, !tbaa !2391
  br label %NodeBlock.46

NodeBlock.46:                                     ; preds = %if.else.61
  %Pivot.47 = icmp slt i64 %93, 17
  br i1 %Pivot.47, label %NodeBlock.38, label %NodeBlock.44

NodeBlock.44:                                     ; preds = %NodeBlock.46
  %Pivot.45 = icmp slt i64 %93, 18
  br i1 %Pivot.45, label %sw.bb.70, label %NodeBlock.42

NodeBlock.42:                                     ; preds = %NodeBlock.44
  %Pivot.43 = icmp slt i64 %93, 19
  br i1 %Pivot.43, label %sw.bb.74, label %LeafBlock.40

LeafBlock.40:                                     ; preds = %NodeBlock.42
  %SwitchLeaf41 = icmp eq i64 %93, 19
  br i1 %SwitchLeaf41, label %sw.bb.78, label %NewDefault.35

NodeBlock.38:                                     ; preds = %NodeBlock.46
  %Pivot.39 = icmp slt i64 %93, 16
  br i1 %Pivot.39, label %LeafBlock.36, label %sw.bb.66

LeafBlock.36:                                     ; preds = %NodeBlock.38
  %SwitchLeaf37 = icmp eq i64 %93, 15
  br i1 %SwitchLeaf37, label %sw.bb.62, label %NewDefault.35

sw.bb.62:                                         ; preds = %LeafBlock.36
  %94 = load i64, i64* %v.addr, align 8, !dbg !16078, !tbaa !2391
  %div63 = udiv i64 %94, 1000000000000000, !dbg !16080
  %95 = load i64*, i64** %q.addr, align 8, !dbg !16081, !tbaa !2505
  store i64 %div63, i64* %95, align 8, !dbg !16082, !tbaa !2391
  %96 = load i64, i64* %v.addr, align 8, !dbg !16083, !tbaa !2391
  %97 = load i64*, i64** %q.addr, align 8, !dbg !16084, !tbaa !2505
  %98 = load i64, i64* %97, align 8, !dbg !16085, !tbaa !2391
  %mul64 = mul i64 %98, 1000000000000000, !dbg !16086
  %sub65 = sub i64 %96, %mul64, !dbg !16087
  %99 = load i64*, i64** %r.addr, align 8, !dbg !16088, !tbaa !2505
  store i64 %sub65, i64* %99, align 8, !dbg !16089, !tbaa !2391
  br label %sw.epilog.82, !dbg !16090

sw.bb.66:                                         ; preds = %NodeBlock.38
  %100 = load i64, i64* %v.addr, align 8, !dbg !16091, !tbaa !2391
  %div67 = udiv i64 %100, 10000000000000000, !dbg !16092
  %101 = load i64*, i64** %q.addr, align 8, !dbg !16093, !tbaa !2505
  store i64 %div67, i64* %101, align 8, !dbg !16094, !tbaa !2391
  %102 = load i64, i64* %v.addr, align 8, !dbg !16095, !tbaa !2391
  %103 = load i64*, i64** %q.addr, align 8, !dbg !16096, !tbaa !2505
  %104 = load i64, i64* %103, align 8, !dbg !16097, !tbaa !2391
  %mul68 = mul i64 %104, 10000000000000000, !dbg !16098
  %sub69 = sub i64 %102, %mul68, !dbg !16099
  %105 = load i64*, i64** %r.addr, align 8, !dbg !16100, !tbaa !2505
  store i64 %sub69, i64* %105, align 8, !dbg !16101, !tbaa !2391
  br label %sw.epilog.82, !dbg !16102

sw.bb.70:                                         ; preds = %NodeBlock.44
  %106 = load i64, i64* %v.addr, align 8, !dbg !16103, !tbaa !2391
  %div71 = udiv i64 %106, 100000000000000000, !dbg !16104
  %107 = load i64*, i64** %q.addr, align 8, !dbg !16105, !tbaa !2505
  store i64 %div71, i64* %107, align 8, !dbg !16106, !tbaa !2391
  %108 = load i64, i64* %v.addr, align 8, !dbg !16107, !tbaa !2391
  %109 = load i64*, i64** %q.addr, align 8, !dbg !16108, !tbaa !2505
  %110 = load i64, i64* %109, align 8, !dbg !16109, !tbaa !2391
  %mul72 = mul i64 %110, 100000000000000000, !dbg !16110
  %sub73 = sub i64 %108, %mul72, !dbg !16111
  %111 = load i64*, i64** %r.addr, align 8, !dbg !16112, !tbaa !2505
  store i64 %sub73, i64* %111, align 8, !dbg !16113, !tbaa !2391
  br label %sw.epilog.82, !dbg !16114

sw.bb.74:                                         ; preds = %NodeBlock.42
  %112 = load i64, i64* %v.addr, align 8, !dbg !16115, !tbaa !2391
  %div75 = udiv i64 %112, 1000000000000000000, !dbg !16116
  %113 = load i64*, i64** %q.addr, align 8, !dbg !16117, !tbaa !2505
  store i64 %div75, i64* %113, align 8, !dbg !16118, !tbaa !2391
  %114 = load i64, i64* %v.addr, align 8, !dbg !16119, !tbaa !2391
  %115 = load i64*, i64** %q.addr, align 8, !dbg !16120, !tbaa !2505
  %116 = load i64, i64* %115, align 8, !dbg !16121, !tbaa !2391
  %mul76 = mul i64 %116, 1000000000000000000, !dbg !16122
  %sub77 = sub i64 %114, %mul76, !dbg !16123
  %117 = load i64*, i64** %r.addr, align 8, !dbg !16124, !tbaa !2505
  store i64 %sub77, i64* %117, align 8, !dbg !16125, !tbaa !2391
  br label %sw.epilog.82, !dbg !16126

sw.bb.78:                                         ; preds = %LeafBlock.40
  %118 = load i64, i64* %v.addr, align 8, !dbg !16127, !tbaa !2391
  %div79 = udiv i64 %118, -8446744073709551616, !dbg !16128
  %119 = load i64*, i64** %q.addr, align 8, !dbg !16129, !tbaa !2505
  store i64 %div79, i64* %119, align 8, !dbg !16130, !tbaa !2391
  %120 = load i64, i64* %v.addr, align 8, !dbg !16131, !tbaa !2391
  %121 = load i64*, i64** %q.addr, align 8, !dbg !16132, !tbaa !2505
  %122 = load i64, i64* %121, align 8, !dbg !16133, !tbaa !2391
  %mul80 = mul i64 %122, -8446744073709551616, !dbg !16134
  %sub81 = sub i64 %120, %mul80, !dbg !16135
  %123 = load i64*, i64** %r.addr, align 8, !dbg !16136, !tbaa !2505
  store i64 %sub81, i64* %123, align 8, !dbg !16137, !tbaa !2391
  br label %sw.epilog.82, !dbg !16138

NewDefault.35:                                    ; preds = %LeafBlock.40, %LeafBlock.36
  br label %sw.epilog.82

sw.epilog.82:                                     ; preds = %NewDefault.35, %sw.bb.78, %sw.bb.74, %sw.bb.70, %sw.bb.66, %sw.bb.62
  br label %if.end.83

if.end.83:                                        ; preds = %sw.epilog.82, %sw.epilog.60
  br label %if.end.84

if.end.84:                                        ; preds = %if.end.83, %if.end
  ret void, !dbg !16139
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @_mpd_isallzero(i64* %data, i64 %len) #3 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca i64*, align 8
  %len.addr = alloca i64, align 8
  store i64* %data, i64** %data.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !1598, metadata !2395), !dbg !16140
  store i64 %len, i64* %len.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !1599, metadata !2395), !dbg !16141
  br label %while.cond, !dbg !16142

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i64, i64* %len.addr, align 8, !dbg !16143, !tbaa !2391
  %dec = add i64 %0, -1, !dbg !16143
  store i64 %dec, i64* %len.addr, align 8, !dbg !16143, !tbaa !2391
  %cmp = icmp sge i64 %dec, 0, !dbg !16146
  br i1 %cmp, label %while.body, label %while.end, !dbg !16142

while.body:                                       ; preds = %while.cond
  %1 = load i64, i64* %len.addr, align 8, !dbg !16147, !tbaa !2391
  %2 = load i64*, i64** %data.addr, align 8, !dbg !16150, !tbaa !2505
  %arrayidx = getelementptr i64, i64* %2, i64 %1, !dbg !16150
  %3 = load i64, i64* %arrayidx, align 8, !dbg !16150, !tbaa !2391
  %cmp1 = icmp ne i64 %3, 0, !dbg !16151
  br i1 %cmp1, label %if.then, label %if.end, !dbg !16152

if.then:                                          ; preds = %while.body
  store i32 0, i32* %retval, !dbg !16153
  br label %return, !dbg !16153

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !16142

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %retval, !dbg !16155
  br label %return, !dbg !16155

return:                                           ; preds = %while.end, %if.then
  %4 = load i32, i32* %retval, !dbg !16156
  ret i32 %4, !dbg !16156
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_ptrswap(%struct.mpd_t** %a, %struct.mpd_t** %b) #3 {
entry:
  %a.addr = alloca %struct.mpd_t**, align 8
  %b.addr = alloca %struct.mpd_t**, align 8
  %t = alloca %struct.mpd_t*, align 8
  store %struct.mpd_t** %a, %struct.mpd_t*** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t*** %a.addr, metadata !1676, metadata !2395), !dbg !16157
  store %struct.mpd_t** %b, %struct.mpd_t*** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t*** %b.addr, metadata !1677, metadata !2395), !dbg !16158
  %0 = bitcast %struct.mpd_t** %t to i8*, !dbg !16159
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !16159
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %t, metadata !1678, metadata !2395), !dbg !16160
  %1 = load %struct.mpd_t**, %struct.mpd_t*** %a.addr, align 8, !dbg !16161, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %1, align 8, !dbg !16162, !tbaa !2505
  store %struct.mpd_t* %2, %struct.mpd_t** %t, align 8, !dbg !16160, !tbaa !2505
  %3 = load %struct.mpd_t**, %struct.mpd_t*** %b.addr, align 8, !dbg !16163, !tbaa !2505
  %4 = load %struct.mpd_t*, %struct.mpd_t** %3, align 8, !dbg !16164, !tbaa !2505
  %5 = load %struct.mpd_t**, %struct.mpd_t*** %a.addr, align 8, !dbg !16165, !tbaa !2505
  store %struct.mpd_t* %4, %struct.mpd_t** %5, align 8, !dbg !16166, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %t, align 8, !dbg !16167, !tbaa !2505
  %7 = load %struct.mpd_t**, %struct.mpd_t*** %b.addr, align 8, !dbg !16168, !tbaa !2505
  store %struct.mpd_t* %6, %struct.mpd_t** %7, align 8, !dbg !16169, !tbaa !2505
  %8 = bitcast %struct.mpd_t** %t to i8*, !dbg !16170
  call void @llvm.lifetime.end(i64 8, i8* %8) #4, !dbg !16170
  ret void, !dbg !16170
}

declare hidden i64 @_mpd_baseadd(i64*, i64*, i64*, i64, i64) #5

declare hidden void @_mpd_basesub(i64*, i64*, i64*, i64, i64) #5

; Function Attrs: nounwind uwtable
define internal void @_mpd_qdiv_inf(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1709, metadata !2395), !dbg !16171
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1710, metadata !2395), !dbg !16172
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1711, metadata !2395), !dbg !16173
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1712, metadata !2395), !dbg !16174
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1713, metadata !2395), !dbg !16175
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16176, !tbaa !2505
  %call = call i32 @mpd_isinfinite(%struct.mpd_t* %0), !dbg !16178
  %tobool = icmp ne i32 %call, 0, !dbg !16178
  br i1 %tobool, label %if.then, label %if.end.8, !dbg !16179

if.then:                                          ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !16180, !tbaa !2505
  %call1 = call i32 @mpd_isinfinite(%struct.mpd_t* %1), !dbg !16183
  %tobool2 = icmp ne i32 %call1, 0, !dbg !16183
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !16184

if.then.3:                                        ; preds = %if.then
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16185, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !16187, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %2, i32 256, i32* %3), !dbg !16188
  br label %return, !dbg !16189

if.end:                                           ; preds = %if.then
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16190, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16191, !tbaa !2505
  %call4 = call zeroext i8 @mpd_sign(%struct.mpd_t* %5), !dbg !16192
  %conv = zext i8 %call4 to i32, !dbg !16192
  %6 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !16193, !tbaa !2505
  %call5 = call zeroext i8 @mpd_sign(%struct.mpd_t* %6), !dbg !16194
  %conv6 = zext i8 %call5 to i32, !dbg !16194
  %xor = xor i32 %conv, %conv6, !dbg !16195
  %conv7 = trunc i32 %xor to i8, !dbg !16192
  call void @mpd_setspecial(%struct.mpd_t* %4, i8 zeroext %conv7, i8 zeroext 2), !dbg !16196
  br label %return, !dbg !16197

if.end.8:                                         ; preds = %entry
  %7 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16198, !tbaa !2505
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16199, !tbaa !2505
  %call9 = call zeroext i8 @mpd_sign(%struct.mpd_t* %8), !dbg !16200
  %conv10 = zext i8 %call9 to i32, !dbg !16200
  %9 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !16201, !tbaa !2505
  %call11 = call zeroext i8 @mpd_sign(%struct.mpd_t* %9), !dbg !16202
  %conv12 = zext i8 %call11 to i32, !dbg !16202
  %xor13 = xor i32 %conv10, %conv12, !dbg !16203
  %conv14 = trunc i32 %xor13 to i8, !dbg !16200
  %10 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !16204, !tbaa !2505
  %call15 = call i64 @mpd_etiny(%struct.mpd_context_t* %10), !dbg !16205
  call void @_settriple(%struct.mpd_t* %7, i8 zeroext %conv14, i64 0, i64 %call15), !dbg !16206
  %11 = load i32*, i32** %status.addr, align 8, !dbg !16207, !tbaa !2505
  %12 = load i32, i32* %11, align 4, !dbg !16208, !tbaa !2554
  %or = or i32 %12, 1, !dbg !16208
  store i32 %or, i32* %11, align 4, !dbg !16208, !tbaa !2554
  br label %return, !dbg !16209

return:                                           ; preds = %if.end.8, %if.end, %if.then.3
  ret void, !dbg !16210
}

declare hidden i64 @_mpd_shortdiv(i64*, i64*, i64, i64) #5

declare hidden i32 @_mpd_basedivmod(i64*, i64*, i64*, i64*, i64, i64) #5

; Function Attrs: nounwind uwtable
define internal void @_mpd_base_ndivmod(%struct.mpd_t* %q, %struct.mpd_t* %r, %struct.mpd_t* %a, %struct.mpd_t* %b, i32* %status) #0 {
entry:
  %q.addr = alloca %struct.mpd_t*, align 8
  %r.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  %workctx = alloca %struct.mpd_context_t, align 8
  %qq = alloca %struct.mpd_t*, align 8
  %rr = alloca %struct.mpd_t*, align 8
  %aa = alloca %struct.mpd_t, align 8
  %bb = alloca %struct.mpd_t, align 8
  %k = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %q, %struct.mpd_t** %q.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %q.addr, metadata !1718, metadata !2395), !dbg !16212
  store %struct.mpd_t* %r, %struct.mpd_t** %r.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %r.addr, metadata !1719, metadata !2395), !dbg !16213
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1720, metadata !2395), !dbg !16214
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1721, metadata !2395), !dbg !16215
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1722, metadata !2395), !dbg !16216
  %0 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !16217
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !16217
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %workctx, metadata !1723, metadata !2395), !dbg !16218
  %1 = bitcast %struct.mpd_t** %qq to i8*, !dbg !16219
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !16219
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %qq, metadata !1724, metadata !2395), !dbg !16220
  %2 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !16221, !tbaa !2505
  store %struct.mpd_t* %2, %struct.mpd_t** %qq, align 8, !dbg !16220, !tbaa !2505
  %3 = bitcast %struct.mpd_t** %rr to i8*, !dbg !16219
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !16219
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %rr, metadata !1725, metadata !2395), !dbg !16222
  %4 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !16223, !tbaa !2505
  store %struct.mpd_t* %4, %struct.mpd_t** %rr, align 8, !dbg !16222, !tbaa !2505
  %5 = bitcast %struct.mpd_t* %aa to i8*, !dbg !16224
  call void @llvm.lifetime.start(i64 48, i8* %5) #4, !dbg !16224
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %aa, metadata !1726, metadata !2395), !dbg !16225
  %6 = bitcast %struct.mpd_t* %bb to i8*, !dbg !16224
  call void @llvm.lifetime.start(i64 48, i8* %6) #4, !dbg !16224
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %bb, metadata !1727, metadata !2395), !dbg !16226
  %7 = bitcast i32* %k to i8*, !dbg !16227
  call void @llvm.lifetime.start(i64 4, i8* %7) #4, !dbg !16227
  call void @llvm.dbg.declare(metadata i32* %k, metadata !1728, metadata !2395), !dbg !16228
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16229, !tbaa !2505
  call void @_mpd_copy_shared(%struct.mpd_t* %aa, %struct.mpd_t* %8), !dbg !16230
  %9 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !16231, !tbaa !2505
  call void @_mpd_copy_shared(%struct.mpd_t* %bb, %struct.mpd_t* %9), !dbg !16232
  call void @mpd_set_positive(%struct.mpd_t* %aa), !dbg !16233
  call void @mpd_set_positive(%struct.mpd_t* %bb), !dbg !16234
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 1, !dbg !16235
  store i64 0, i64* %exp, align 8, !dbg !16236, !tbaa !2510
  %exp1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %bb, i32 0, i32 1, !dbg !16237
  store i64 0, i64* %exp1, align 8, !dbg !16238, !tbaa !2510
  %10 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !16239, !tbaa !2505
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16241, !tbaa !2505
  %cmp = icmp eq %struct.mpd_t* %10, %11, !dbg !16242
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16243

lor.lhs.false:                                    ; preds = %entry
  %12 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !16244, !tbaa !2505
  %13 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !16246, !tbaa !2505
  %cmp2 = icmp eq %struct.mpd_t* %12, %13, !dbg !16247
  br i1 %cmp2, label %if.then, label %if.end.5, !dbg !16248

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = call %struct.mpd_t* @mpd_qnew(), !dbg !16249
  store %struct.mpd_t* %call, %struct.mpd_t** %qq, align 8, !dbg !16252, !tbaa !2505
  %cmp3 = icmp eq %struct.mpd_t* %call, null, !dbg !16253
  br i1 %cmp3, label %if.then.4, label %if.end, !dbg !16254

if.then.4:                                        ; preds = %if.then
  %14 = load i32*, i32** %status.addr, align 8, !dbg !16255, !tbaa !2505
  %15 = load i32, i32* %14, align 4, !dbg !16257, !tbaa !2554
  %or = or i32 %15, 512, !dbg !16257
  store i32 %or, i32* %14, align 4, !dbg !16257, !tbaa !2554
  br label %nanresult, !dbg !16258

if.end:                                           ; preds = %if.then
  br label %if.end.5, !dbg !16259

if.end.5:                                         ; preds = %if.end, %lor.lhs.false
  %16 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !16260, !tbaa !2505
  %17 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16262, !tbaa !2505
  %cmp6 = icmp eq %struct.mpd_t* %16, %17, !dbg !16263
  br i1 %cmp6, label %if.then.9, label %lor.lhs.false.7, !dbg !16264

lor.lhs.false.7:                                  ; preds = %if.end.5
  %18 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !16265, !tbaa !2505
  %19 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !16267, !tbaa !2505
  %cmp8 = icmp eq %struct.mpd_t* %18, %19, !dbg !16268
  br i1 %cmp8, label %if.then.9, label %if.end.15, !dbg !16269

if.then.9:                                        ; preds = %lor.lhs.false.7, %if.end.5
  %call10 = call %struct.mpd_t* @mpd_qnew(), !dbg !16270
  store %struct.mpd_t* %call10, %struct.mpd_t** %rr, align 8, !dbg !16273, !tbaa !2505
  %cmp11 = icmp eq %struct.mpd_t* %call10, null, !dbg !16274
  br i1 %cmp11, label %if.then.12, label %if.end.14, !dbg !16275

if.then.12:                                       ; preds = %if.then.9
  %20 = load i32*, i32** %status.addr, align 8, !dbg !16276, !tbaa !2505
  %21 = load i32, i32* %20, align 4, !dbg !16278, !tbaa !2554
  %or13 = or i32 %21, 512, !dbg !16278
  store i32 %or13, i32* %20, align 4, !dbg !16278, !tbaa !2554
  br label %nanresult, !dbg !16279

if.end.14:                                        ; preds = %if.then.9
  br label %if.end.15, !dbg !16280

if.end.15:                                        ; preds = %if.end.14, %lor.lhs.false.7
  call void @mpd_maxcontext(%struct.mpd_context_t* %workctx), !dbg !16281
  %22 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16282, !tbaa !2505
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %22, i32 0, i32 2, !dbg !16283
  %23 = load i64, i64* %digits, align 8, !dbg !16283, !tbaa !2514
  %24 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !16284, !tbaa !2505
  %digits16 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %24, i32 0, i32 2, !dbg !16285
  %25 = load i64, i64* %digits16, align 8, !dbg !16285, !tbaa !2514
  %sub = sub i64 %23, %25, !dbg !16286
  %add = add i64 %sub, 1, !dbg !16287
  %add17 = add i64 %add, 3, !dbg !16288
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !16289
  store i64 %add17, i64* %prec, align 8, !dbg !16290, !tbaa !2526
  %26 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16291, !tbaa !2505
  %digits18 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %26, i32 0, i32 2, !dbg !16293
  %27 = load i64, i64* %digits18, align 8, !dbg !16293, !tbaa !2514
  %cmp19 = icmp sgt i64 %27, 999999999999999999, !dbg !16294
  br i1 %cmp19, label %if.then.23, label %lor.lhs.false.20, !dbg !16295

lor.lhs.false.20:                                 ; preds = %if.end.15
  %prec21 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !16296
  %28 = load i64, i64* %prec21, align 8, !dbg !16296, !tbaa !2526
  %cmp22 = icmp sgt i64 %28, 999999999999999999, !dbg !16298
  br i1 %cmp22, label %if.then.23, label %if.end.25, !dbg !16299

if.then.23:                                       ; preds = %lor.lhs.false.20, %if.end.15
  %29 = load i32*, i32** %status.addr, align 8, !dbg !16300, !tbaa !2505
  %30 = load i32, i32* %29, align 4, !dbg !16302, !tbaa !2554
  %or24 = or i32 %30, 8, !dbg !16302
  store i32 %or24, i32* %29, align 4, !dbg !16302, !tbaa !2554
  br label %nanresult, !dbg !16303

if.end.25:                                        ; preds = %lor.lhs.false.20
  %31 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16304, !tbaa !2505
  %status26 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !16305
  call void @_mpd_qreciprocal(%struct.mpd_t* %31, %struct.mpd_t* %bb, %struct.mpd_context_t* %workctx, i32* %status26), !dbg !16306
  %32 = load %struct.mpd_t*, %struct.mpd_t** %qq, align 8, !dbg !16307, !tbaa !2505
  %33 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16308, !tbaa !2505
  %status27 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !16309
  call void @_mpd_qmul(%struct.mpd_t* %32, %struct.mpd_t* %aa, %struct.mpd_t* %33, %struct.mpd_context_t* %workctx, i32* %status27), !dbg !16310
  %34 = load %struct.mpd_t*, %struct.mpd_t** %qq, align 8, !dbg !16311, !tbaa !2505
  %35 = load %struct.mpd_t*, %struct.mpd_t** %qq, align 8, !dbg !16312, !tbaa !2505
  %status28 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !16313
  call void @mpd_qtrunc(%struct.mpd_t* %34, %struct.mpd_t* %35, %struct.mpd_context_t* %workctx, i32* %status28), !dbg !16314
  %digits29 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 2, !dbg !16315
  %36 = load i64, i64* %digits29, align 8, !dbg !16315, !tbaa !2514
  %add30 = add i64 %36, 3, !dbg !16316
  %prec31 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 0, !dbg !16317
  store i64 %add30, i64* %prec31, align 8, !dbg !16318, !tbaa !2526
  %emax = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 1, !dbg !16319
  store i64 1000000000000000002, i64* %emax, align 8, !dbg !16320, !tbaa !2533
  %emin = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 2, !dbg !16321
  store i64 -1000000000000000002, i64* %emin, align 8, !dbg !16322, !tbaa !2521
  %37 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16323, !tbaa !2505
  %38 = load %struct.mpd_t*, %struct.mpd_t** %qq, align 8, !dbg !16324, !tbaa !2505
  %status32 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !16325
  call void @_mpd_qmul(%struct.mpd_t* %37, %struct.mpd_t* %bb, %struct.mpd_t* %38, %struct.mpd_context_t* %workctx, i32* %status32), !dbg !16326
  %39 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16327, !tbaa !2505
  %40 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16328, !tbaa !2505
  %status33 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !16329
  call void @_mpd_qsub_exact(%struct.mpd_t* %39, %struct.mpd_t* %aa, %struct.mpd_t* %40, %struct.mpd_context_t* %workctx, i32* %status33), !dbg !16330
  store i32 0, i32* %k, align 4, !dbg !16331, !tbaa !2554
  br label %for.cond, !dbg !16333

for.cond:                                         ; preds = %for.inc, %if.end.25
  %41 = load %struct.mpd_t*, %struct.mpd_t** %qq, align 8, !dbg !16334, !tbaa !2505
  %call34 = call i32 @mpd_isspecial(%struct.mpd_t* %41), !dbg !16338
  %tobool = icmp ne i32 %call34, 0, !dbg !16338
  br i1 %tobool, label %if.then.38, label %lor.lhs.false.35, !dbg !16339

lor.lhs.false.35:                                 ; preds = %for.cond
  %42 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16340, !tbaa !2505
  %call36 = call i32 @mpd_isspecial(%struct.mpd_t* %42), !dbg !16342
  %tobool37 = icmp ne i32 %call36, 0, !dbg !16342
  br i1 %tobool37, label %if.then.38, label %if.end.41, !dbg !16343

if.then.38:                                       ; preds = %lor.lhs.false.35, %for.cond
  %status39 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !16344
  %43 = load i32, i32* %status39, align 4, !dbg !16344, !tbaa !9309
  %and = and i32 %43, 958, !dbg !16346
  %44 = load i32*, i32** %status.addr, align 8, !dbg !16347, !tbaa !2505
  %45 = load i32, i32* %44, align 4, !dbg !16348, !tbaa !2554
  %or40 = or i32 %45, %and, !dbg !16348
  store i32 %or40, i32* %44, align 4, !dbg !16348, !tbaa !2554
  br label %nanresult, !dbg !16349

if.end.41:                                        ; preds = %lor.lhs.false.35
  %46 = load i32, i32* %k, align 4, !dbg !16350, !tbaa !2554
  %cmp42 = icmp sgt i32 %46, 2, !dbg !16352
  br i1 %cmp42, label %if.then.43, label %if.else, !dbg !16353

if.then.43:                                       ; preds = %if.end.41
  br label %do.body, !dbg !16354

do.body:                                          ; preds = %if.then.43
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !16356, !tbaa !2505
  %call44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.12, i32 0, i32 0), i32 7429), !dbg !16359
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !16360, !tbaa !2505
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.13, i32 0, i32 0)), !dbg !16361
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !16362, !tbaa !2505
  %call46 = call i32 @fputc(i32 10, %struct._IO_FILE* %49), !dbg !16363
  br label %do.cond, !dbg !16364

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !16365

do.end:                                           ; preds = %do.cond
  %50 = load i32*, i32** %status.addr, align 8, !dbg !16367, !tbaa !2505
  %51 = load i32, i32* %50, align 4, !dbg !16368, !tbaa !2554
  %or47 = or i32 %51, 256, !dbg !16368
  store i32 %or47, i32* %50, align 4, !dbg !16368, !tbaa !2554
  br label %nanresult, !dbg !16369

if.else:                                          ; preds = %if.end.41
  %52 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16370, !tbaa !2505
  %call48 = call i32 @_mpd_cmp(%struct.mpd_t* @zero, %struct.mpd_t* %52), !dbg !16372
  %cmp49 = icmp eq i32 %call48, 1, !dbg !16373
  br i1 %cmp49, label %if.then.50, label %if.else.53, !dbg !16374

if.then.50:                                       ; preds = %if.else
  %53 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16375, !tbaa !2505
  %54 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16377, !tbaa !2505
  %status51 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !16378
  call void @_mpd_qadd_exact(%struct.mpd_t* %53, %struct.mpd_t* %54, %struct.mpd_t* %bb, %struct.mpd_context_t* %workctx, i32* %status51), !dbg !16379
  %55 = load %struct.mpd_t*, %struct.mpd_t** %qq, align 8, !dbg !16380, !tbaa !2505
  %56 = load %struct.mpd_t*, %struct.mpd_t** %qq, align 8, !dbg !16381, !tbaa !2505
  %status52 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !16382
  call void @_mpd_qadd_exact(%struct.mpd_t* %55, %struct.mpd_t* %56, %struct.mpd_t* @minus_one, %struct.mpd_context_t* %workctx, i32* %status52), !dbg !16383
  br label %if.end.61, !dbg !16384

if.else.53:                                       ; preds = %if.else
  %57 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16385, !tbaa !2505
  %call54 = call i32 @_mpd_cmp(%struct.mpd_t* %57, %struct.mpd_t* %bb), !dbg !16387
  %cmp55 = icmp eq i32 %call54, -1, !dbg !16388
  br i1 %cmp55, label %if.then.56, label %if.else.57, !dbg !16389

if.then.56:                                       ; preds = %if.else.53
  br label %for.end, !dbg !16390

if.else.57:                                       ; preds = %if.else.53
  %58 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16392, !tbaa !2505
  %59 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16394, !tbaa !2505
  %status58 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !16395
  call void @_mpd_qsub_exact(%struct.mpd_t* %58, %struct.mpd_t* %59, %struct.mpd_t* %bb, %struct.mpd_context_t* %workctx, i32* %status58), !dbg !16396
  %60 = load %struct.mpd_t*, %struct.mpd_t** %qq, align 8, !dbg !16397, !tbaa !2505
  %61 = load %struct.mpd_t*, %struct.mpd_t** %qq, align 8, !dbg !16398, !tbaa !2505
  %status59 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !16399
  call void @_mpd_qadd_exact(%struct.mpd_t* %60, %struct.mpd_t* %61, %struct.mpd_t* @one, %struct.mpd_context_t* %workctx, i32* %status59), !dbg !16400
  br label %if.end.60

if.end.60:                                        ; preds = %if.else.57
  br label %if.end.61

if.end.61:                                        ; preds = %if.end.60, %if.then.50
  br label %if.end.62

if.end.62:                                        ; preds = %if.end.61
  br label %for.inc, !dbg !16401

for.inc:                                          ; preds = %if.end.62
  %62 = load i32, i32* %k, align 4, !dbg !16402, !tbaa !2554
  %inc = add i32 %62, 1, !dbg !16402
  store i32 %inc, i32* %k, align 4, !dbg !16402, !tbaa !2554
  br label %for.cond, !dbg !16403

for.end:                                          ; preds = %if.then.56
  %63 = load %struct.mpd_t*, %struct.mpd_t** %qq, align 8, !dbg !16404, !tbaa !2505
  %64 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !16406, !tbaa !2505
  %cmp63 = icmp ne %struct.mpd_t* %63, %64, !dbg !16407
  br i1 %cmp63, label %if.then.64, label %if.end.69, !dbg !16408

if.then.64:                                       ; preds = %for.end
  %65 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !16409, !tbaa !2505
  %66 = load %struct.mpd_t*, %struct.mpd_t** %qq, align 8, !dbg !16412, !tbaa !2505
  %67 = load i32*, i32** %status.addr, align 8, !dbg !16413, !tbaa !2505
  %call65 = call i32 @mpd_qcopy(%struct.mpd_t* %65, %struct.mpd_t* %66, i32* %67), !dbg !16414
  %tobool66 = icmp ne i32 %call65, 0, !dbg !16414
  br i1 %tobool66, label %if.end.68, label %if.then.67, !dbg !16415

if.then.67:                                       ; preds = %if.then.64
  br label %nanresult, !dbg !16416

if.end.68:                                        ; preds = %if.then.64
  %68 = load %struct.mpd_t*, %struct.mpd_t** %qq, align 8, !dbg !16418, !tbaa !2505
  call void @mpd_del(%struct.mpd_t* %68), !dbg !16419
  br label %if.end.69, !dbg !16420

if.end.69:                                        ; preds = %if.end.68, %for.end
  %69 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16421, !tbaa !2505
  %70 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !16423, !tbaa !2505
  %cmp70 = icmp ne %struct.mpd_t* %69, %70, !dbg !16424
  br i1 %cmp70, label %if.then.71, label %if.end.76, !dbg !16425

if.then.71:                                       ; preds = %if.end.69
  %71 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !16426, !tbaa !2505
  %72 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16429, !tbaa !2505
  %73 = load i32*, i32** %status.addr, align 8, !dbg !16430, !tbaa !2505
  %call72 = call i32 @mpd_qcopy(%struct.mpd_t* %71, %struct.mpd_t* %72, i32* %73), !dbg !16431
  %tobool73 = icmp ne i32 %call72, 0, !dbg !16431
  br i1 %tobool73, label %if.end.75, label %if.then.74, !dbg !16432

if.then.74:                                       ; preds = %if.then.71
  br label %nanresult, !dbg !16433

if.end.75:                                        ; preds = %if.then.71
  %74 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16435, !tbaa !2505
  call void @mpd_del(%struct.mpd_t* %74), !dbg !16436
  br label %if.end.76, !dbg !16437

if.end.76:                                        ; preds = %if.end.75, %if.end.69
  %status77 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %workctx, i32 0, i32 4, !dbg !16438
  %75 = load i32, i32* %status77, align 4, !dbg !16438, !tbaa !9309
  %and78 = and i32 %75, 958, !dbg !16439
  %76 = load i32*, i32** %status.addr, align 8, !dbg !16440, !tbaa !2505
  %77 = load i32, i32* %76, align 4, !dbg !16441, !tbaa !2554
  %or79 = or i32 %77, %and78, !dbg !16441
  store i32 %or79, i32* %76, align 4, !dbg !16441, !tbaa !2554
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16442

nanresult:                                        ; preds = %if.then.74, %if.then.67, %do.end, %if.then.38, %if.then.23, %if.then.12, %if.then.4
  %78 = load %struct.mpd_t*, %struct.mpd_t** %qq, align 8, !dbg !16443, !tbaa !2505
  %tobool80 = icmp ne %struct.mpd_t* %78, null, !dbg !16443
  br i1 %tobool80, label %land.lhs.true, label %if.end.83, !dbg !16445

land.lhs.true:                                    ; preds = %nanresult
  %79 = load %struct.mpd_t*, %struct.mpd_t** %qq, align 8, !dbg !16446, !tbaa !2505
  %80 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !16448, !tbaa !2505
  %cmp81 = icmp ne %struct.mpd_t* %79, %80, !dbg !16449
  br i1 %cmp81, label %if.then.82, label %if.end.83, !dbg !16450

if.then.82:                                       ; preds = %land.lhs.true
  %81 = load %struct.mpd_t*, %struct.mpd_t** %qq, align 8, !dbg !16451, !tbaa !2505
  call void @mpd_del(%struct.mpd_t* %81), !dbg !16453
  br label %if.end.83, !dbg !16453

if.end.83:                                        ; preds = %if.then.82, %land.lhs.true, %nanresult
  %82 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16454, !tbaa !2505
  %tobool84 = icmp ne %struct.mpd_t* %82, null, !dbg !16454
  br i1 %tobool84, label %land.lhs.true.85, label %if.end.88, !dbg !16456

land.lhs.true.85:                                 ; preds = %if.end.83
  %83 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16457, !tbaa !2505
  %84 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !16459, !tbaa !2505
  %cmp86 = icmp ne %struct.mpd_t* %83, %84, !dbg !16460
  br i1 %cmp86, label %if.then.87, label %if.end.88, !dbg !16461

if.then.87:                                       ; preds = %land.lhs.true.85
  %85 = load %struct.mpd_t*, %struct.mpd_t** %rr, align 8, !dbg !16462, !tbaa !2505
  call void @mpd_del(%struct.mpd_t* %85), !dbg !16464
  br label %if.end.88, !dbg !16464

if.end.88:                                        ; preds = %if.then.87, %land.lhs.true.85, %if.end.83
  %86 = load %struct.mpd_t*, %struct.mpd_t** %q.addr, align 8, !dbg !16465, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %86, i8 zeroext 0, i8 zeroext 4), !dbg !16466
  %87 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !16467, !tbaa !2505
  call void @mpd_setspecial(%struct.mpd_t* %87, i8 zeroext 0, i8 zeroext 4), !dbg !16468
  store i32 0, i32* %cleanup.dest.slot, !dbg !16469
  br label %cleanup, !dbg !16469

cleanup:                                          ; preds = %if.end.88, %if.end.76
  %88 = bitcast i32* %k to i8*, !dbg !16470
  call void @llvm.lifetime.end(i64 4, i8* %88) #4, !dbg !16470
  %89 = bitcast %struct.mpd_t* %bb to i8*, !dbg !16470
  call void @llvm.lifetime.end(i64 48, i8* %89) #4, !dbg !16470
  %90 = bitcast %struct.mpd_t* %aa to i8*, !dbg !16470
  call void @llvm.lifetime.end(i64 48, i8* %90) #4, !dbg !16470
  %91 = bitcast %struct.mpd_t** %rr to i8*, !dbg !16470
  call void @llvm.lifetime.end(i64 8, i8* %91) #4, !dbg !16470
  %92 = bitcast %struct.mpd_t** %qq to i8*, !dbg !16470
  call void @llvm.lifetime.end(i64 8, i8* %92) #4, !dbg !16470
  %93 = bitcast %struct.mpd_context_t* %workctx to i8*, !dbg !16470
  call void @llvm.lifetime.end(i64 48, i8* %93) #4, !dbg !16470
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !16469

unreachable:                                      ; No predecessors!
  unreachable
}

declare hidden %struct.mpd_t* @mpd_qnew() #5

; Function Attrs: nounwind uwtable
define internal void @_mpd_qreciprocal(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %varcontext = alloca %struct.mpd_context_t, align 8
  %maxcontext = alloca %struct.mpd_context_t, align 8
  %z = alloca %struct.mpd_t*, align 8
  %v = alloca %struct.mpd_t*, align 8
  %vtmp = alloca %struct.mpd_t, align 8
  %s_data = alloca [64 x i64], align 16
  %s = alloca %struct.mpd_t, align 8
  %t_data = alloca [64 x i64], align 16
  %t = alloca %struct.mpd_t, align 8
  %two_data = alloca [1 x i64], align 8
  %two = alloca %struct.mpd_t, align 8
  %klist = alloca [64 x i64], align 16
  %adj = alloca i64, align 8
  %maxprec = alloca i64, align 8
  %initprec = alloca i64, align 8
  %sign = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1731, metadata !2395), !dbg !16472
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1732, metadata !2395), !dbg !16473
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1733, metadata !2395), !dbg !16474
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1734, metadata !2395), !dbg !16475
  %0 = bitcast %struct.mpd_context_t* %varcontext to i8*, !dbg !16476
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !16476
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %varcontext, metadata !1735, metadata !2395), !dbg !16477
  %1 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !16476
  call void @llvm.lifetime.start(i64 48, i8* %1) #4, !dbg !16476
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxcontext, metadata !1736, metadata !2395), !dbg !16478
  %2 = bitcast %struct.mpd_t** %z to i8*, !dbg !16479
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !16479
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %z, metadata !1737, metadata !2395), !dbg !16480
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16481, !tbaa !2505
  store %struct.mpd_t* %3, %struct.mpd_t** %z, align 8, !dbg !16480, !tbaa !2505
  %4 = bitcast %struct.mpd_t** %v to i8*, !dbg !16482
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !16482
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %v, metadata !1738, metadata !2395), !dbg !16483
  %5 = bitcast %struct.mpd_t* %vtmp to i8*, !dbg !16484
  call void @llvm.lifetime.start(i64 48, i8* %5) #4, !dbg !16484
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %vtmp, metadata !1739, metadata !2395), !dbg !16485
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 0, !dbg !16486
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16487, !tbaa !2505
  %flags1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %6, i32 0, i32 0, !dbg !16488
  %7 = load i8, i8* %flags1, align 1, !dbg !16488, !tbaa !2620
  %conv = zext i8 %7 to i32, !dbg !16487
  %and = and i32 %conv, -225, !dbg !16489
  %or = or i32 %and, 16, !dbg !16490
  %or2 = or i32 %or, 64, !dbg !16491
  %conv3 = trunc i32 %or2 to i8, !dbg !16492
  store i8 %conv3, i8* %flags, align 1, !dbg !16486, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 1, !dbg !16486
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16493, !tbaa !2505
  %exp4 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %8, i32 0, i32 1, !dbg !16494
  %9 = load i64, i64* %exp4, align 8, !dbg !16494, !tbaa !2510
  store i64 %9, i64* %exp, align 8, !dbg !16486, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 2, !dbg !16486
  %10 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16495, !tbaa !2505
  %digits5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %10, i32 0, i32 2, !dbg !16496
  %11 = load i64, i64* %digits5, align 8, !dbg !16496, !tbaa !2514
  store i64 %11, i64* %digits, align 8, !dbg !16486, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 3, !dbg !16486
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16497, !tbaa !2505
  %len6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %12, i32 0, i32 3, !dbg !16498
  %13 = load i64, i64* %len6, align 8, !dbg !16498, !tbaa !2542
  store i64 %13, i64* %len, align 8, !dbg !16486, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 4, !dbg !16486
  %14 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16499, !tbaa !2505
  %alloc7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %14, i32 0, i32 4, !dbg !16500
  %15 = load i64, i64* %alloc7, align 8, !dbg !16500, !tbaa !2835
  store i64 %15, i64* %alloc, align 8, !dbg !16486, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %vtmp, i32 0, i32 5, !dbg !16486
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16501, !tbaa !2505
  %data8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %16, i32 0, i32 5, !dbg !16502
  %17 = load i64*, i64** %data8, align 8, !dbg !16502, !tbaa !2546
  store i64* %17, i64** %data, align 8, !dbg !16486, !tbaa !2546
  %18 = bitcast [64 x i64]* %s_data to i8*, !dbg !16503
  call void @llvm.lifetime.start(i64 512, i8* %18) #4, !dbg !16503
  call void @llvm.dbg.declare(metadata [64 x i64]* %s_data, metadata !1740, metadata !2395), !dbg !16504
  %19 = bitcast %struct.mpd_t* %s to i8*, !dbg !16505
  call void @llvm.lifetime.start(i64 48, i8* %19) #4, !dbg !16505
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %s, metadata !1741, metadata !2395), !dbg !16506
  %flags9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %s, i32 0, i32 0, !dbg !16507
  store i8 48, i8* %flags9, align 1, !dbg !16507, !tbaa !2620
  %exp10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %s, i32 0, i32 1, !dbg !16507
  store i64 0, i64* %exp10, align 8, !dbg !16507, !tbaa !2510
  %digits11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %s, i32 0, i32 2, !dbg !16507
  store i64 0, i64* %digits11, align 8, !dbg !16507, !tbaa !2514
  %len12 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %s, i32 0, i32 3, !dbg !16507
  store i64 0, i64* %len12, align 8, !dbg !16507, !tbaa !2542
  %alloc13 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %s, i32 0, i32 4, !dbg !16507
  store i64 64, i64* %alloc13, align 8, !dbg !16507, !tbaa !2835
  %data14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %s, i32 0, i32 5, !dbg !16507
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %s_data, i32 0, i32 0, !dbg !16508
  store i64* %arraydecay, i64** %data14, align 8, !dbg !16507, !tbaa !2546
  %20 = bitcast [64 x i64]* %t_data to i8*, !dbg !16509
  call void @llvm.lifetime.start(i64 512, i8* %20) #4, !dbg !16509
  call void @llvm.dbg.declare(metadata [64 x i64]* %t_data, metadata !1742, metadata !2395), !dbg !16510
  %21 = bitcast %struct.mpd_t* %t to i8*, !dbg !16511
  call void @llvm.lifetime.start(i64 48, i8* %21) #4, !dbg !16511
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %t, metadata !1743, metadata !2395), !dbg !16512
  %flags15 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t, i32 0, i32 0, !dbg !16513
  store i8 48, i8* %flags15, align 1, !dbg !16513, !tbaa !2620
  %exp16 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t, i32 0, i32 1, !dbg !16513
  store i64 0, i64* %exp16, align 8, !dbg !16513, !tbaa !2510
  %digits17 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t, i32 0, i32 2, !dbg !16513
  store i64 0, i64* %digits17, align 8, !dbg !16513, !tbaa !2514
  %len18 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t, i32 0, i32 3, !dbg !16513
  store i64 0, i64* %len18, align 8, !dbg !16513, !tbaa !2542
  %alloc19 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t, i32 0, i32 4, !dbg !16513
  store i64 64, i64* %alloc19, align 8, !dbg !16513, !tbaa !2835
  %data20 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t, i32 0, i32 5, !dbg !16513
  %arraydecay21 = getelementptr inbounds [64 x i64], [64 x i64]* %t_data, i32 0, i32 0, !dbg !16514
  store i64* %arraydecay21, i64** %data20, align 8, !dbg !16513, !tbaa !2546
  %22 = bitcast [1 x i64]* %two_data to i8*, !dbg !16515
  call void @llvm.lifetime.start(i64 8, i8* %22) #4, !dbg !16515
  call void @llvm.dbg.declare(metadata [1 x i64]* %two_data, metadata !1744, metadata !2395), !dbg !16516
  %23 = bitcast [1 x i64]* %two_data to i8*, !dbg !16516
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* bitcast ([1 x i64]* @_mpd_qreciprocal.two_data to i8*), i64 8, i32 8, i1 false), !dbg !16516
  %24 = bitcast %struct.mpd_t* %two to i8*, !dbg !16517
  call void @llvm.lifetime.start(i64 48, i8* %24) #4, !dbg !16517
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %two, metadata !1745, metadata !2395), !dbg !16518
  %flags22 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 0, !dbg !16519
  store i8 -112, i8* %flags22, align 1, !dbg !16519, !tbaa !2620
  %exp23 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 1, !dbg !16519
  store i64 0, i64* %exp23, align 8, !dbg !16519, !tbaa !2510
  %digits24 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 2, !dbg !16519
  store i64 1, i64* %digits24, align 8, !dbg !16519, !tbaa !2514
  %len25 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 3, !dbg !16519
  store i64 1, i64* %len25, align 8, !dbg !16519, !tbaa !2542
  %alloc26 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 4, !dbg !16519
  store i64 1, i64* %alloc26, align 8, !dbg !16519, !tbaa !2835
  %data27 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 5, !dbg !16519
  %arraydecay28 = getelementptr inbounds [1 x i64], [1 x i64]* %two_data, i32 0, i32 0, !dbg !16520
  store i64* %arraydecay28, i64** %data27, align 8, !dbg !16519, !tbaa !2546
  %25 = bitcast [64 x i64]* %klist to i8*, !dbg !16521
  call void @llvm.lifetime.start(i64 512, i8* %25) #4, !dbg !16521
  call void @llvm.dbg.declare(metadata [64 x i64]* %klist, metadata !1746, metadata !2395), !dbg !16522
  %26 = bitcast i64* %adj to i8*, !dbg !16523
  call void @llvm.lifetime.start(i64 8, i8* %26) #4, !dbg !16523
  call void @llvm.dbg.declare(metadata i64* %adj, metadata !1747, metadata !2395), !dbg !16524
  %27 = bitcast i64* %maxprec to i8*, !dbg !16523
  call void @llvm.lifetime.start(i64 8, i8* %27) #4, !dbg !16523
  call void @llvm.dbg.declare(metadata i64* %maxprec, metadata !1748, metadata !2395), !dbg !16525
  %28 = bitcast i64* %initprec to i8*, !dbg !16523
  call void @llvm.lifetime.start(i64 8, i8* %28) #4, !dbg !16523
  call void @llvm.dbg.declare(metadata i64* %initprec, metadata !1749, metadata !2395), !dbg !16526
  call void @llvm.lifetime.start(i64 1, i8* %sign) #4, !dbg !16527
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !1750, metadata !2395), !dbg !16528
  %29 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16529, !tbaa !2505
  %call = call zeroext i8 @mpd_sign(%struct.mpd_t* %29), !dbg !16530
  store i8 %call, i8* %sign, align 1, !dbg !16528, !tbaa !2930
  %30 = bitcast i32* %i to i8*, !dbg !16531
  call void @llvm.lifetime.start(i64 4, i8* %30) #4, !dbg !16531
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1751, metadata !2395), !dbg !16532
  store %struct.mpd_t* %vtmp, %struct.mpd_t** %v, align 8, !dbg !16533, !tbaa !2505
  %31 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !16534, !tbaa !2505
  call void @mpd_clear_flags(%struct.mpd_t* %31), !dbg !16535
  %32 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !16536, !tbaa !2505
  %digits29 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %32, i32 0, i32 2, !dbg !16537
  %33 = load i64, i64* %digits29, align 8, !dbg !16537, !tbaa !2514
  %34 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !16538, !tbaa !2505
  %exp30 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %34, i32 0, i32 1, !dbg !16539
  %35 = load i64, i64* %exp30, align 8, !dbg !16539, !tbaa !2510
  %add = add i64 %33, %35, !dbg !16540
  store i64 %add, i64* %adj, align 8, !dbg !16541, !tbaa !2391
  %36 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !16542, !tbaa !2505
  %digits31 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %36, i32 0, i32 2, !dbg !16543
  %37 = load i64, i64* %digits31, align 8, !dbg !16543, !tbaa !2514
  %sub = sub i64 0, %37, !dbg !16544
  %38 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !16545, !tbaa !2505
  %exp32 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %38, i32 0, i32 1, !dbg !16546
  store i64 %sub, i64* %exp32, align 8, !dbg !16547, !tbaa !2510
  %39 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !16548, !tbaa !2505
  %40 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !16549, !tbaa !2505
  %41 = load i32*, i32** %status.addr, align 8, !dbg !16550, !tbaa !2505
  call void @_mpd_qreciprocal_approx(%struct.mpd_t* %39, %struct.mpd_t* %40, i32* %41), !dbg !16551
  call void @mpd_maxcontext(%struct.mpd_context_t* %varcontext), !dbg !16552
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxcontext), !dbg !16553
  %round = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 6, !dbg !16554
  store i32 8, i32* %round, align 4, !dbg !16555, !tbaa !4148
  %round33 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 6, !dbg !16556
  store i32 8, i32* %round33, align 4, !dbg !16557, !tbaa !4148
  %emax = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 1, !dbg !16558
  store i64 1000000000000000099, i64* %emax, align 8, !dbg !16559, !tbaa !2533
  %emax34 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 1, !dbg !16560
  store i64 1000000000000000099, i64* %emax34, align 8, !dbg !16561, !tbaa !2533
  %emin = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 2, !dbg !16562
  store i64 -1000000000000000099, i64* %emin, align 8, !dbg !16563, !tbaa !2521
  %emin35 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 2, !dbg !16564
  store i64 -1000000000000000099, i64* %emin35, align 8, !dbg !16565, !tbaa !2521
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %maxcontext, i32 0, i32 0, !dbg !16566
  store i64 1000000000000000099, i64* %prec, align 8, !dbg !16567, !tbaa !2526
  %42 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !16568, !tbaa !2505
  %prec36 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %42, i32 0, i32 0, !dbg !16569
  %43 = load i64, i64* %prec36, align 8, !dbg !16569, !tbaa !2526
  store i64 %43, i64* %maxprec, align 8, !dbg !16570, !tbaa !2391
  %44 = load i64, i64* %maxprec, align 8, !dbg !16571, !tbaa !2391
  %add37 = add i64 %44, 2, !dbg !16571
  store i64 %add37, i64* %maxprec, align 8, !dbg !16571, !tbaa !2391
  store i64 16, i64* %initprec, align 8, !dbg !16572, !tbaa !2391
  %arraydecay38 = getelementptr inbounds [64 x i64], [64 x i64]* %klist, i32 0, i32 0, !dbg !16573
  %45 = load i64, i64* %maxprec, align 8, !dbg !16574, !tbaa !2391
  %46 = load i64, i64* %initprec, align 8, !dbg !16575, !tbaa !2391
  %call39 = call i32 @recpr_schedule_prec(i64* %arraydecay38, i64 %45, i64 %46), !dbg !16576
  store i32 %call39, i32* %i, align 4, !dbg !16577, !tbaa !2554
  br label %for.cond, !dbg !16578

for.cond:                                         ; preds = %for.inc, %entry
  %47 = load i32, i32* %i, align 4, !dbg !16579, !tbaa !2554
  %cmp = icmp sge i32 %47, 0, !dbg !16584
  br i1 %cmp, label %for.body, label %for.end, !dbg !16585

for.body:                                         ; preds = %for.cond
  %48 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !16586, !tbaa !2505
  %49 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !16588, !tbaa !2505
  %50 = load i32*, i32** %status.addr, align 8, !dbg !16589, !tbaa !2505
  call void @_mpd_qmul_exact(%struct.mpd_t* %s, %struct.mpd_t* %48, %struct.mpd_t* %49, %struct.mpd_context_t* %maxcontext, i32* %50), !dbg !16590
  %51 = load i32, i32* %i, align 4, !dbg !16591, !tbaa !2554
  %idxprom = sext i32 %51 to i64, !dbg !16592
  %arrayidx = getelementptr [64 x i64], [64 x i64]* %klist, i32 0, i64 %idxprom, !dbg !16592
  %52 = load i64, i64* %arrayidx, align 8, !dbg !16592, !tbaa !2391
  %mul = mul i64 2, %52, !dbg !16593
  %add41 = add i64 %mul, 5, !dbg !16594
  %prec42 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 0, !dbg !16595
  store i64 %add41, i64* %prec42, align 8, !dbg !16596, !tbaa !2526
  %53 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !16597, !tbaa !2505
  %digits43 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %53, i32 0, i32 2, !dbg !16599
  %54 = load i64, i64* %digits43, align 8, !dbg !16599, !tbaa !2514
  %prec44 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 0, !dbg !16600
  %55 = load i64, i64* %prec44, align 8, !dbg !16600, !tbaa !2526
  %cmp45 = icmp sgt i64 %54, %55, !dbg !16601
  br i1 %cmp45, label %if.then, label %if.else, !dbg !16602

if.then:                                          ; preds = %for.body
  %56 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !16603, !tbaa !2505
  %57 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !16605, !tbaa !2505
  %digits47 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %57, i32 0, i32 2, !dbg !16606
  %58 = load i64, i64* %digits47, align 8, !dbg !16606, !tbaa !2514
  %prec48 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 0, !dbg !16607
  %59 = load i64, i64* %prec48, align 8, !dbg !16607, !tbaa !2526
  %sub49 = sub i64 %58, %59, !dbg !16608
  %60 = load i32*, i32** %status.addr, align 8, !dbg !16609, !tbaa !2505
  %call50 = call i64 @mpd_qshiftr(%struct.mpd_t* %t, %struct.mpd_t* %56, i64 %sub49, i32* %60), !dbg !16610
  %prec51 = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %varcontext, i32 0, i32 0, !dbg !16611
  %61 = load i64, i64* %prec51, align 8, !dbg !16611, !tbaa !2526
  %sub52 = sub i64 0, %61, !dbg !16612
  %exp53 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %t, i32 0, i32 1, !dbg !16613
  store i64 %sub52, i64* %exp53, align 8, !dbg !16614, !tbaa !2510
  %62 = load i32*, i32** %status.addr, align 8, !dbg !16615, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %t, %struct.mpd_t* %t, %struct.mpd_t* %s, %struct.mpd_context_t* %varcontext, i32* %62), !dbg !16616
  br label %if.end, !dbg !16617

if.else:                                          ; preds = %for.body
  %63 = load %struct.mpd_t*, %struct.mpd_t** %v, align 8, !dbg !16618, !tbaa !2505
  %64 = load i32*, i32** %status.addr, align 8, !dbg !16620, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %t, %struct.mpd_t* %63, %struct.mpd_t* %s, %struct.mpd_context_t* %varcontext, i32* %64), !dbg !16621
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %65 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !16622, !tbaa !2505
  %66 = load i32*, i32** %status.addr, align 8, !dbg !16623, !tbaa !2505
  call void @_mpd_qmul_exact(%struct.mpd_t* %s, %struct.mpd_t* %65, %struct.mpd_t* %two, %struct.mpd_context_t* %maxcontext, i32* %66), !dbg !16624
  %67 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !16625, !tbaa !2505
  %68 = load i32*, i32** %status.addr, align 8, !dbg !16626, !tbaa !2505
  call void @_mpd_qsub_exact(%struct.mpd_t* %67, %struct.mpd_t* %s, %struct.mpd_t* %t, %struct.mpd_context_t* %maxcontext, i32* %68), !dbg !16627
  br label %for.inc, !dbg !16628

for.inc:                                          ; preds = %if.end
  %69 = load i32, i32* %i, align 4, !dbg !16629, !tbaa !2554
  %dec = add i32 %69, -1, !dbg !16629
  store i32 %dec, i32* %i, align 4, !dbg !16629, !tbaa !2554
  br label %for.cond, !dbg !16630

for.end:                                          ; preds = %for.cond
  %70 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !16631, !tbaa !2505
  %call54 = call i32 @mpd_isspecial(%struct.mpd_t* %70), !dbg !16633
  %tobool = icmp ne i32 %call54, 0, !dbg !16633
  br i1 %tobool, label %if.end.58, label %if.then.55, !dbg !16634

if.then.55:                                       ; preds = %for.end
  %71 = load i64, i64* %adj, align 8, !dbg !16635, !tbaa !2391
  %72 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !16637, !tbaa !2505
  %exp56 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %72, i32 0, i32 1, !dbg !16638
  %73 = load i64, i64* %exp56, align 8, !dbg !16639, !tbaa !2510
  %sub57 = sub i64 %73, %71, !dbg !16639
  store i64 %sub57, i64* %exp56, align 8, !dbg !16639, !tbaa !2510
  %74 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !16640, !tbaa !2505
  %75 = load i8, i8* %sign, align 1, !dbg !16641, !tbaa !2930
  call void @mpd_set_flags(%struct.mpd_t* %74, i8 zeroext %75), !dbg !16642
  br label %if.end.58, !dbg !16643

if.end.58:                                        ; preds = %if.then.55, %for.end
  call void @mpd_del(%struct.mpd_t* %s), !dbg !16644
  call void @mpd_del(%struct.mpd_t* %t), !dbg !16645
  %76 = load %struct.mpd_t*, %struct.mpd_t** %z, align 8, !dbg !16646, !tbaa !2505
  %77 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !16647, !tbaa !2505
  %78 = load i32*, i32** %status.addr, align 8, !dbg !16648, !tbaa !2505
  call void @mpd_qfinalize(%struct.mpd_t* %76, %struct.mpd_context_t* %77, i32* %78), !dbg !16649
  %79 = bitcast i32* %i to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 4, i8* %79) #4, !dbg !16650
  call void @llvm.lifetime.end(i64 1, i8* %sign) #4, !dbg !16650
  %80 = bitcast i64* %initprec to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 8, i8* %80) #4, !dbg !16650
  %81 = bitcast i64* %maxprec to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 8, i8* %81) #4, !dbg !16650
  %82 = bitcast i64* %adj to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 8, i8* %82) #4, !dbg !16650
  %83 = bitcast [64 x i64]* %klist to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 512, i8* %83) #4, !dbg !16650
  %84 = bitcast %struct.mpd_t* %two to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 48, i8* %84) #4, !dbg !16650
  %85 = bitcast [1 x i64]* %two_data to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 8, i8* %85) #4, !dbg !16650
  %86 = bitcast %struct.mpd_t* %t to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 48, i8* %86) #4, !dbg !16650
  %87 = bitcast [64 x i64]* %t_data to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 512, i8* %87) #4, !dbg !16650
  %88 = bitcast %struct.mpd_t* %s to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 48, i8* %88) #4, !dbg !16650
  %89 = bitcast [64 x i64]* %s_data to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 512, i8* %89) #4, !dbg !16650
  %90 = bitcast %struct.mpd_t* %vtmp to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 48, i8* %90) #4, !dbg !16650
  %91 = bitcast %struct.mpd_t** %v to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 8, i8* %91) #4, !dbg !16650
  %92 = bitcast %struct.mpd_t** %z to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 8, i8* %92) #4, !dbg !16650
  %93 = bitcast %struct.mpd_context_t* %maxcontext to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 48, i8* %93) #4, !dbg !16650
  %94 = bitcast %struct.mpd_context_t* %varcontext to i8*, !dbg !16650
  call void @llvm.lifetime.end(i64 48, i8* %94) #4, !dbg !16650
  ret void, !dbg !16650
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qsub_exact(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workstatus = alloca i32, align 4
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1774, metadata !2395), !dbg !16651
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1775, metadata !2395), !dbg !16652
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1776, metadata !2395), !dbg !16653
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1777, metadata !2395), !dbg !16654
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1778, metadata !2395), !dbg !16655
  %0 = bitcast i32* %workstatus to i8*, !dbg !16656
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !16656
  call void @llvm.dbg.declare(metadata i32* %workstatus, metadata !1779, metadata !2395), !dbg !16657
  store i32 0, i32* %workstatus, align 4, !dbg !16657, !tbaa !2554
  %1 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16658, !tbaa !2505
  %2 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16659, !tbaa !2505
  %3 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !16660, !tbaa !2505
  %4 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !16661, !tbaa !2505
  call void @mpd_qsub(%struct.mpd_t* %1, %struct.mpd_t* %2, %struct.mpd_t* %3, %struct.mpd_context_t* %4, i32* %workstatus), !dbg !16662
  %5 = load i32, i32* %workstatus, align 4, !dbg !16663, !tbaa !2554
  %6 = load i32*, i32** %status.addr, align 8, !dbg !16664, !tbaa !2505
  %7 = load i32, i32* %6, align 4, !dbg !16665, !tbaa !2554
  %or = or i32 %7, %5, !dbg !16665
  store i32 %or, i32* %6, align 4, !dbg !16665, !tbaa !2554
  %8 = load i32, i32* %workstatus, align 4, !dbg !16666, !tbaa !2554
  %and = and i32 %8, 4161, !dbg !16668
  %tobool = icmp ne i32 %and, 0, !dbg !16668
  br i1 %tobool, label %if.then, label %if.end, !dbg !16669

if.then:                                          ; preds = %entry
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16670, !tbaa !2505
  %10 = load i32*, i32** %status.addr, align 8, !dbg !16672, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %9, i32 256, i32* %10), !dbg !16673
  br label %if.end, !dbg !16674

if.end:                                           ; preds = %if.then, %entry
  %11 = bitcast i32* %workstatus to i8*, !dbg !16675
  call void @llvm.lifetime.end(i64 4, i8* %11) #4, !dbg !16675
  ret void, !dbg !16675
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #5

declare i32 @fputc(i32, %struct._IO_FILE*) #5

; Function Attrs: nounwind uwtable
define internal void @_mpd_qreciprocal_approx(%struct.mpd_t* %z, %struct.mpd_t* %v, i32* %status) #0 {
entry:
  %z.addr = alloca %struct.mpd_t*, align 8
  %v.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  %p10data = alloca [2 x i64], align 16
  %dummy = alloca i64, align 8
  %word = alloca i64, align 8
  %n = alloca i32, align 4
  store %struct.mpd_t* %z, %struct.mpd_t** %z.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %z.addr, metadata !1756, metadata !2395), !dbg !16676
  store %struct.mpd_t* %v, %struct.mpd_t** %v.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %v.addr, metadata !1757, metadata !2395), !dbg !16677
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1758, metadata !2395), !dbg !16678
  %0 = bitcast [2 x i64]* %p10data to i8*, !dbg !16679
  call void @llvm.lifetime.start(i64 16, i8* %0) #4, !dbg !16679
  call void @llvm.dbg.declare(metadata [2 x i64]* %p10data, metadata !1759, metadata !2395), !dbg !16680
  %arrayinit.begin = getelementptr inbounds [2 x i64], [2 x i64]* %p10data, i64 0, i64 0, !dbg !16681
  store i64 0, i64* %arrayinit.begin, !dbg !16681, !tbaa !2391
  %arrayinit.element = getelementptr inbounds i64, i64* %arrayinit.begin, i64 1, !dbg !16681
  %1 = load i64, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 17), align 8, !dbg !16682, !tbaa !2391
  store i64 %1, i64* %arrayinit.element, !dbg !16681, !tbaa !2391
  %2 = bitcast i64* %dummy to i8*, !dbg !16683
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !16683
  call void @llvm.dbg.declare(metadata i64* %dummy, metadata !1760, metadata !2395), !dbg !16684
  %3 = bitcast i64* %word to i8*, !dbg !16683
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !16683
  call void @llvm.dbg.declare(metadata i64* %word, metadata !1761, metadata !2395), !dbg !16685
  %4 = bitcast i32* %n to i8*, !dbg !16686
  call void @llvm.lifetime.start(i64 4, i8* %4) #4, !dbg !16686
  call void @llvm.dbg.declare(metadata i32* %n, metadata !1762, metadata !2395), !dbg !16687
  %5 = load %struct.mpd_t*, %struct.mpd_t** %v.addr, align 8, !dbg !16688, !tbaa !2505
  call void @_mpd_get_msdigits(i64* %dummy, i64* %word, %struct.mpd_t* %5, i32 19), !dbg !16689
  %6 = load i64, i64* %word, align 8, !dbg !16690, !tbaa !2391
  %call = call i32 @mpd_word_digits(i64 %6), !dbg !16691
  store i32 %call, i32* %n, align 4, !dbg !16692, !tbaa !2554
  %7 = load i32, i32* %n, align 4, !dbg !16693, !tbaa !2554
  %sub = sub i32 19, %7, !dbg !16694
  %idxprom = sext i32 %sub to i64, !dbg !16695
  %arrayidx = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %idxprom, !dbg !16695
  %8 = load i64, i64* %arrayidx, align 8, !dbg !16695, !tbaa !2391
  %9 = load i64, i64* %word, align 8, !dbg !16696, !tbaa !2391
  %mul = mul i64 %9, %8, !dbg !16696
  store i64 %mul, i64* %word, align 8, !dbg !16696, !tbaa !2391
  %10 = load %struct.mpd_t*, %struct.mpd_t** %z.addr, align 8, !dbg !16697, !tbaa !2505
  %11 = load i32*, i32** %status.addr, align 8, !dbg !16698, !tbaa !2505
  %call1 = call i32 @mpd_qresize(%struct.mpd_t* %10, i64 2, i32* %11), !dbg !16699
  %12 = load %struct.mpd_t*, %struct.mpd_t** %z.addr, align 8, !dbg !16700, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %12, i32 0, i32 5, !dbg !16701
  %13 = load i64*, i64** %data, align 8, !dbg !16701, !tbaa !2546
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %p10data, i32 0, i32 0, !dbg !16702
  %14 = load i64, i64* %word, align 8, !dbg !16703, !tbaa !2391
  %call2 = call i64 @_mpd_shortdiv(i64* %13, i64* %arraydecay, i64 2, i64 %14), !dbg !16704
  %15 = load %struct.mpd_t*, %struct.mpd_t** %z.addr, align 8, !dbg !16705, !tbaa !2505
  call void @mpd_clear_flags(%struct.mpd_t* %15), !dbg !16706
  %16 = load %struct.mpd_t*, %struct.mpd_t** %z.addr, align 8, !dbg !16707, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %16, i32 0, i32 1, !dbg !16708
  store i64 -17, i64* %exp, align 8, !dbg !16709, !tbaa !2510
  %17 = load %struct.mpd_t*, %struct.mpd_t** %z.addr, align 8, !dbg !16710, !tbaa !2505
  %data3 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %17, i32 0, i32 5, !dbg !16711
  %18 = load i64*, i64** %data3, align 8, !dbg !16711, !tbaa !2546
  %arrayidx4 = getelementptr i64, i64* %18, i64 1, !dbg !16710
  %19 = load i64, i64* %arrayidx4, align 8, !dbg !16710, !tbaa !2391
  %cmp = icmp eq i64 %19, 0, !dbg !16712
  %cond = select i1 %cmp, i32 1, i32 2, !dbg !16713
  %conv = sext i32 %cond to i64, !dbg !16713
  %20 = load %struct.mpd_t*, %struct.mpd_t** %z.addr, align 8, !dbg !16714, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %20, i32 0, i32 3, !dbg !16715
  store i64 %conv, i64* %len, align 8, !dbg !16716, !tbaa !2542
  %21 = load %struct.mpd_t*, %struct.mpd_t** %z.addr, align 8, !dbg !16717, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %21), !dbg !16718
  %22 = bitcast i32* %n to i8*, !dbg !16719
  call void @llvm.lifetime.end(i64 4, i8* %22) #4, !dbg !16719
  %23 = bitcast i64* %word to i8*, !dbg !16719
  call void @llvm.lifetime.end(i64 8, i8* %23) #4, !dbg !16719
  %24 = bitcast i64* %dummy to i8*, !dbg !16719
  call void @llvm.lifetime.end(i64 8, i8* %24) #4, !dbg !16719
  %25 = bitcast [2 x i64]* %p10data to i8*, !dbg !16719
  call void @llvm.lifetime.end(i64 16, i8* %25) #4, !dbg !16719
  ret void, !dbg !16719
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @recpr_schedule_prec(i64* %klist, i64 %maxprec, i64 %initprec) #3 {
entry:
  %retval = alloca i32, align 4
  %klist.addr = alloca i64*, align 8
  %maxprec.addr = alloca i64, align 8
  %initprec.addr = alloca i64, align 8
  %k = alloca i64, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store i64* %klist, i64** %klist.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %klist.addr, metadata !1767, metadata !2395), !dbg !16720
  store i64 %maxprec, i64* %maxprec.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %maxprec.addr, metadata !1768, metadata !2395), !dbg !16721
  store i64 %initprec, i64* %initprec.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %initprec.addr, metadata !1769, metadata !2395), !dbg !16722
  %0 = bitcast i64* %k to i8*, !dbg !16723
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !16723
  call void @llvm.dbg.declare(metadata i64* %k, metadata !1770, metadata !2395), !dbg !16724
  %1 = bitcast i32* %i to i8*, !dbg !16725
  call void @llvm.lifetime.start(i64 4, i8* %1) #4, !dbg !16725
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1771, metadata !2395), !dbg !16726
  %2 = load i64, i64* %maxprec.addr, align 8, !dbg !16727, !tbaa !2391
  %3 = load i64, i64* %initprec.addr, align 8, !dbg !16729, !tbaa !2391
  %cmp = icmp sle i64 %2, %3, !dbg !16730
  br i1 %cmp, label %if.then, label %if.end, !dbg !16731

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !16732
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16734

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !16735, !tbaa !2554
  %4 = load i64, i64* %maxprec.addr, align 8, !dbg !16736, !tbaa !2391
  store i64 %4, i64* %k, align 8, !dbg !16737, !tbaa !2391
  br label %do.body, !dbg !16738

do.body:                                          ; preds = %do.cond, %if.end
  %5 = load i64, i64* %k, align 8, !dbg !16739, !tbaa !2391
  %add = add i64 %5, 1, !dbg !16741
  %div = sdiv i64 %add, 2, !dbg !16742
  store i64 %div, i64* %k, align 8, !dbg !16743, !tbaa !2391
  %6 = load i64, i64* %k, align 8, !dbg !16744, !tbaa !2391
  %7 = load i32, i32* %i, align 4, !dbg !16745, !tbaa !2554
  %inc = add i32 %7, 1, !dbg !16745
  store i32 %inc, i32* %i, align 4, !dbg !16745, !tbaa !2554
  %idxprom = sext i32 %7 to i64, !dbg !16746
  %8 = load i64*, i64** %klist.addr, align 8, !dbg !16746, !tbaa !2505
  %arrayidx = getelementptr i64, i64* %8, i64 %idxprom, !dbg !16746
  store i64 %6, i64* %arrayidx, align 8, !dbg !16747, !tbaa !2391
  br label %do.cond, !dbg !16748

do.cond:                                          ; preds = %do.body
  %9 = load i64, i64* %k, align 8, !dbg !16749, !tbaa !2391
  %10 = load i64, i64* %initprec.addr, align 8, !dbg !16751, !tbaa !2391
  %cmp1 = icmp sgt i64 %9, %10, !dbg !16752
  br i1 %cmp1, label %do.body, label %do.end, !dbg !16748

do.end:                                           ; preds = %do.cond
  %11 = load i32, i32* %i, align 4, !dbg !16753, !tbaa !2554
  %sub = sub i32 %11, 1, !dbg !16754
  store i32 %sub, i32* %retval, !dbg !16755
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16755

cleanup:                                          ; preds = %do.end, %if.then
  %12 = bitcast i32* %i to i8*, !dbg !16756
  call void @llvm.lifetime.end(i64 4, i8* %12) #4, !dbg !16756
  %13 = bitcast i64* %k to i8*, !dbg !16756
  call void @llvm.lifetime.end(i64 8, i8* %13) #4, !dbg !16756
  %14 = load i32, i32* %retval, !dbg !16756
  ret i32 %14, !dbg !16756
}

; Function Attrs: nounwind uwtable
define internal i32 @_mpd_qexp_check_one(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_context_t* %ctx, i32* %status) #0 {
entry:
  %retval = alloca i32, align 4
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %lim_data = alloca [1 x i64], align 8
  %lim = alloca %struct.mpd_t, align 8
  %aa = alloca %struct.mpd_t, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1819, metadata !2395), !dbg !16757
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1820, metadata !2395), !dbg !16758
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1821, metadata !2395), !dbg !16759
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1822, metadata !2395), !dbg !16760
  %0 = bitcast [1 x i64]* %lim_data to i8*, !dbg !16761
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !16761
  call void @llvm.dbg.declare(metadata [1 x i64]* %lim_data, metadata !1823, metadata !2395), !dbg !16762
  %1 = bitcast [1 x i64]* %lim_data to i8*, !dbg !16762
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([1 x i64]* @_mpd_qexp_check_one.lim_data to i8*), i64 8, i32 8, i1 false), !dbg !16762
  %2 = bitcast %struct.mpd_t* %lim to i8*, !dbg !16763
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !16763
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %lim, metadata !1824, metadata !2395), !dbg !16764
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %lim, i32 0, i32 0, !dbg !16765
  store i8 -112, i8* %flags, align 1, !dbg !16765, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %lim, i32 0, i32 1, !dbg !16765
  %3 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !16766, !tbaa !2505
  %prec = getelementptr inbounds %struct.mpd_context_t, %struct.mpd_context_t* %3, i32 0, i32 0, !dbg !16767
  %4 = load i64, i64* %prec, align 8, !dbg !16767, !tbaa !2526
  %add = add i64 %4, 1, !dbg !16768
  %sub = sub i64 0, %add, !dbg !16769
  store i64 %sub, i64* %exp, align 8, !dbg !16765, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %lim, i32 0, i32 2, !dbg !16765
  store i64 1, i64* %digits, align 8, !dbg !16765, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %lim, i32 0, i32 3, !dbg !16765
  store i64 1, i64* %len, align 8, !dbg !16765, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %lim, i32 0, i32 4, !dbg !16765
  store i64 1, i64* %alloc, align 8, !dbg !16765, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %lim, i32 0, i32 5, !dbg !16765
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %lim_data, i32 0, i32 0, !dbg !16770
  store i64* %arraydecay, i64** %data, align 8, !dbg !16765, !tbaa !2546
  %5 = bitcast %struct.mpd_t* %aa to i8*, !dbg !16771
  call void @llvm.lifetime.start(i64 48, i8* %5) #4, !dbg !16771
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %aa, metadata !1825, metadata !2395), !dbg !16772
  %flags1 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 0, !dbg !16773
  %6 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16774, !tbaa !2505
  %flags2 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %6, i32 0, i32 0, !dbg !16775
  %7 = load i8, i8* %flags2, align 1, !dbg !16775, !tbaa !2620
  %conv = zext i8 %7 to i32, !dbg !16774
  %and = and i32 %conv, -225, !dbg !16776
  %or = or i32 %and, 16, !dbg !16777
  %or3 = or i32 %or, 64, !dbg !16778
  %conv4 = trunc i32 %or3 to i8, !dbg !16779
  store i8 %conv4, i8* %flags1, align 1, !dbg !16773, !tbaa !2620
  %exp5 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 1, !dbg !16773
  %8 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16780, !tbaa !2505
  %exp6 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %8, i32 0, i32 1, !dbg !16781
  %9 = load i64, i64* %exp6, align 8, !dbg !16781, !tbaa !2510
  store i64 %9, i64* %exp5, align 8, !dbg !16773, !tbaa !2510
  %digits7 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 2, !dbg !16773
  %10 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16782, !tbaa !2505
  %digits8 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %10, i32 0, i32 2, !dbg !16783
  %11 = load i64, i64* %digits8, align 8, !dbg !16783, !tbaa !2514
  store i64 %11, i64* %digits7, align 8, !dbg !16773, !tbaa !2514
  %len9 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 3, !dbg !16773
  %12 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16784, !tbaa !2505
  %len10 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %12, i32 0, i32 3, !dbg !16785
  %13 = load i64, i64* %len10, align 8, !dbg !16785, !tbaa !2542
  store i64 %13, i64* %len9, align 8, !dbg !16773, !tbaa !2542
  %alloc11 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 4, !dbg !16773
  %14 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16786, !tbaa !2505
  %alloc12 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %14, i32 0, i32 4, !dbg !16787
  %15 = load i64, i64* %alloc12, align 8, !dbg !16787, !tbaa !2835
  store i64 %15, i64* %alloc11, align 8, !dbg !16773, !tbaa !2835
  %data13 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %aa, i32 0, i32 5, !dbg !16773
  %16 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16788, !tbaa !2505
  %data14 = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %16, i32 0, i32 5, !dbg !16789
  %17 = load i64*, i64** %data14, align 8, !dbg !16789, !tbaa !2546
  store i64* %17, i64** %data13, align 8, !dbg !16773, !tbaa !2546
  call void @mpd_set_positive(%struct.mpd_t* %aa), !dbg !16790
  %call = call i32 @_mpd_cmp(%struct.mpd_t* %aa, %struct.mpd_t* %lim), !dbg !16791
  %cmp = icmp sle i32 %call, 0, !dbg !16793
  br i1 %cmp, label %if.then, label %if.end, !dbg !16794

if.then:                                          ; preds = %entry
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16795, !tbaa !2505
  call void @_settriple(%struct.mpd_t* %18, i8 zeroext 0, i64 1, i64 0), !dbg !16797
  %19 = load i32*, i32** %status.addr, align 8, !dbg !16798, !tbaa !2505
  %20 = load i32, i32* %19, align 4, !dbg !16799, !tbaa !2554
  %or16 = or i32 %20, 4160, !dbg !16799
  store i32 %or16, i32* %19, align 4, !dbg !16799, !tbaa !2554
  store i32 1, i32* %retval, !dbg !16800
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16800

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, !dbg !16801
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16801

cleanup:                                          ; preds = %if.end, %if.then
  %21 = bitcast %struct.mpd_t* %aa to i8*, !dbg !16802
  call void @llvm.lifetime.end(i64 48, i8* %21) #4, !dbg !16802
  %22 = bitcast %struct.mpd_t* %lim to i8*, !dbg !16802
  call void @llvm.lifetime.end(i64 48, i8* %22) #4, !dbg !16802
  %23 = bitcast [1 x i64]* %lim_data to i8*, !dbg !16802
  call void @llvm.lifetime.end(i64 8, i8* %23) #4, !dbg !16802
  %24 = load i32, i32* %retval, !dbg !16802
  ret i32 %24, !dbg !16802
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @_mpd_get_exp_iterations(%struct.mpd_t* %r, i64 %p) #3 {
entry:
  %retval = alloca i64, align 8
  %r.addr = alloca %struct.mpd_t*, align 8
  %p.addr = alloca i64, align 8
  %log10pbyr = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %r, %struct.mpd_t** %r.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %r.addr, metadata !1830, metadata !2395), !dbg !16803
  store i64 %p, i64* %p.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %p.addr, metadata !1831, metadata !2395), !dbg !16804
  %0 = bitcast i64* %log10pbyr to i8*, !dbg !16805
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !16805
  call void @llvm.dbg.declare(metadata i64* %log10pbyr, metadata !1832, metadata !2395), !dbg !16806
  %1 = bitcast i64* %n to i8*, !dbg !16807
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !16807
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1833, metadata !2395), !dbg !16808
  %2 = load i64, i64* %p.addr, align 8, !dbg !16809, !tbaa !2391
  %cmp = icmp sgt i64 %2, 4503599627370496, !dbg !16811
  br i1 %cmp, label %if.then, label %if.end, !dbg !16812

if.then:                                          ; preds = %entry
  store i64 9223372036854775807, i64* %retval, !dbg !16813
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16813

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %p.addr, align 8, !dbg !16815, !tbaa !2391
  %call = call i32 @mpd_word_digits(i64 %3), !dbg !16816
  %sub = sub i32 %call, 1, !dbg !16817
  %conv = sext i32 %sub to i64, !dbg !16818
  %4 = load %struct.mpd_t*, %struct.mpd_t** %r.addr, align 8, !dbg !16819, !tbaa !2505
  %call1 = call i64 @mpd_adjexp(%struct.mpd_t* %4), !dbg !16820
  %add = add i64 %call1, 1, !dbg !16821
  %sub2 = sub i64 %conv, %add, !dbg !16822
  store i64 %sub2, i64* %log10pbyr, align 8, !dbg !16823, !tbaa !2391
  %5 = load i64, i64* %p.addr, align 8, !dbg !16824, !tbaa !2391
  %conv3 = sitofp i64 %5 to double, !dbg !16825
  %mul = fmul double 1.435030e+00, %conv3, !dbg !16826
  %sub4 = fsub double %mul, 1.182000e+00, !dbg !16827
  %6 = load i64, i64* %log10pbyr, align 8, !dbg !16828, !tbaa !2391
  %conv5 = sitofp i64 %6 to double, !dbg !16829
  %div = fdiv double %sub4, %conv5, !dbg !16830
  %call6 = call double @ceil(double %div) #2, !dbg !16831
  %conv7 = fptosi double %call6 to i64, !dbg !16832
  store i64 %conv7, i64* %n, align 8, !dbg !16833, !tbaa !2391
  %7 = load i64, i64* %n, align 8, !dbg !16834, !tbaa !2391
  %cmp8 = icmp sge i64 %7, 3, !dbg !16835
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !16834

cond.true:                                        ; preds = %if.end
  %8 = load i64, i64* %n, align 8, !dbg !16836, !tbaa !2391
  br label %cond.end, !dbg !16834

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !16838

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %8, %cond.true ], [ 3, %cond.false ], !dbg !16834
  store i64 %cond, i64* %retval, !dbg !16840
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16843

cleanup:                                          ; preds = %cond.end, %if.then
  %9 = bitcast i64* %n to i8*, !dbg !16844
  call void @llvm.lifetime.end(i64 8, i8* %9) #4, !dbg !16844
  %10 = bitcast i64* %log10pbyr to i8*, !dbg !16844
  call void @llvm.lifetime.end(i64 8, i8* %10) #4, !dbg !16844
  %11 = load i64, i64* %retval, !dbg !16844
  ret i64 %11, !dbg !16844
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_qpow_uint(%struct.mpd_t* %result, %struct.mpd_t* %base, i64 %exp, i8 zeroext %resultsign, %struct.mpd_context_t* %ctx, i32* %status) #3 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %base.addr = alloca %struct.mpd_t*, align 8
  %exp.addr = alloca i64, align 8
  %resultsign.addr = alloca i8, align 1
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workstatus = alloca i32, align 4
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1838, metadata !2395), !dbg !16845
  store %struct.mpd_t* %base, %struct.mpd_t** %base.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %base.addr, metadata !1839, metadata !2395), !dbg !16846
  store i64 %exp, i64* %exp.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %exp.addr, metadata !1840, metadata !2395), !dbg !16847
  store i8 %resultsign, i8* %resultsign.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %resultsign.addr, metadata !1841, metadata !2395), !dbg !16848
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !1842, metadata !2395), !dbg !16849
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1843, metadata !2395), !dbg !16850
  %0 = bitcast i32* %workstatus to i8*, !dbg !16851
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !16851
  call void @llvm.dbg.declare(metadata i32* %workstatus, metadata !1844, metadata !2395), !dbg !16852
  store i32 0, i32* %workstatus, align 4, !dbg !16852, !tbaa !2554
  %1 = bitcast i64* %n to i8*, !dbg !16853
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !16853
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1845, metadata !2395), !dbg !16854
  %2 = load i64, i64* %exp.addr, align 8, !dbg !16855, !tbaa !2391
  %cmp = icmp eq i64 %2, 0, !dbg !16857
  br i1 %cmp, label %if.then, label %if.end, !dbg !16858

if.then:                                          ; preds = %entry
  %3 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16859, !tbaa !2505
  %4 = load i8, i8* %resultsign.addr, align 1, !dbg !16861, !tbaa !2930
  call void @_settriple(%struct.mpd_t* %3, i8 zeroext %4, i64 1, i64 0), !dbg !16862
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16863

if.end:                                           ; preds = %entry
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16864, !tbaa !2505
  %6 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !16866, !tbaa !2505
  %7 = load i32*, i32** %status.addr, align 8, !dbg !16867, !tbaa !2505
  %call = call i32 @mpd_qcopy(%struct.mpd_t* %5, %struct.mpd_t* %6, i32* %7), !dbg !16868
  %tobool = icmp ne i32 %call, 0, !dbg !16868
  br i1 %tobool, label %if.end.2, label %if.then.1, !dbg !16869

if.then.1:                                        ; preds = %if.end
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16870

if.end.2:                                         ; preds = %if.end
  %8 = load i64, i64* %exp.addr, align 8, !dbg !16872, !tbaa !2391
  %call3 = call i32 @mpd_bsr(i64 %8), !dbg !16873
  %idxprom = sext i32 %call3 to i64, !dbg !16874
  %arrayidx = getelementptr [0 x i64], [0 x i64]* @mpd_bits, i32 0, i64 %idxprom, !dbg !16874
  %9 = load i64, i64* %arrayidx, align 8, !dbg !16874, !tbaa !2391
  store i64 %9, i64* %n, align 8, !dbg !16875, !tbaa !2391
  br label %while.cond, !dbg !16876

while.cond:                                       ; preds = %if.end.15, %if.end.2
  %10 = load i64, i64* %n, align 8, !dbg !16877, !tbaa !2391
  %shr = lshr i64 %10, 1, !dbg !16877
  store i64 %shr, i64* %n, align 8, !dbg !16877, !tbaa !2391
  %tobool4 = icmp ne i64 %shr, 0, !dbg !16876
  br i1 %tobool4, label %while.body, label %while.end, !dbg !16876

while.body:                                       ; preds = %while.cond
  %11 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16880, !tbaa !2505
  %12 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16882, !tbaa !2505
  %13 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16883, !tbaa !2505
  %14 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !16884, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %11, %struct.mpd_t* %12, %struct.mpd_t* %13, %struct.mpd_context_t* %14, i32* %workstatus), !dbg !16885
  %15 = load i64, i64* %exp.addr, align 8, !dbg !16886, !tbaa !2391
  %16 = load i64, i64* %n, align 8, !dbg !16888, !tbaa !2391
  %and = and i64 %15, %16, !dbg !16889
  %tobool5 = icmp ne i64 %and, 0, !dbg !16889
  br i1 %tobool5, label %if.then.6, label %if.end.7, !dbg !16890

if.then.6:                                        ; preds = %while.body
  %17 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16891, !tbaa !2505
  %18 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16893, !tbaa !2505
  %19 = load %struct.mpd_t*, %struct.mpd_t** %base.addr, align 8, !dbg !16894, !tbaa !2505
  %20 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !16895, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %17, %struct.mpd_t* %18, %struct.mpd_t* %19, %struct.mpd_context_t* %20, i32* %workstatus), !dbg !16896
  br label %if.end.7, !dbg !16897

if.end.7:                                         ; preds = %if.then.6, %while.body
  %21 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16898, !tbaa !2505
  %call8 = call i32 @mpd_isspecial(%struct.mpd_t* %21), !dbg !16900
  %tobool9 = icmp ne i32 %call8, 0, !dbg !16900
  br i1 %tobool9, label %if.then.14, label %lor.lhs.false, !dbg !16901

lor.lhs.false:                                    ; preds = %if.end.7
  %22 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16902, !tbaa !2505
  %call10 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %22), !dbg !16903
  %tobool11 = icmp ne i32 %call10, 0, !dbg !16903
  br i1 %tobool11, label %land.lhs.true, label %if.end.15, !dbg !16904

land.lhs.true:                                    ; preds = %lor.lhs.false
  %23 = load i32, i32* %workstatus, align 4, !dbg !16905, !tbaa !2554
  %and12 = and i32 %23, 1, !dbg !16907
  %tobool13 = icmp ne i32 %and12, 0, !dbg !16907
  br i1 %tobool13, label %if.then.14, label %if.end.15, !dbg !16908

if.then.14:                                       ; preds = %land.lhs.true, %if.end.7
  br label %while.end, !dbg !16909

if.end.15:                                        ; preds = %land.lhs.true, %lor.lhs.false
  br label %while.cond, !dbg !16876

while.end:                                        ; preds = %if.then.14, %while.cond
  %24 = load i32, i32* %workstatus, align 4, !dbg !16911, !tbaa !2554
  %25 = load i32*, i32** %status.addr, align 8, !dbg !16912, !tbaa !2505
  %26 = load i32, i32* %25, align 4, !dbg !16913, !tbaa !2554
  %or = or i32 %26, %24, !dbg !16913
  store i32 %or, i32* %25, align 4, !dbg !16913, !tbaa !2554
  %27 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16914, !tbaa !2505
  %28 = load i8, i8* %resultsign.addr, align 1, !dbg !16915, !tbaa !2930
  call void @mpd_set_sign(%struct.mpd_t* %27, i8 zeroext %28), !dbg !16916
  store i32 0, i32* %cleanup.dest.slot, !dbg !16917
  br label %cleanup, !dbg !16917

cleanup:                                          ; preds = %while.end, %if.then.1, %if.then
  %29 = bitcast i64* %n to i8*, !dbg !16918
  call void @llvm.lifetime.end(i64 8, i8* %29) #4, !dbg !16918
  %30 = bitcast i32* %workstatus to i8*, !dbg !16918
  call void @llvm.lifetime.end(i64 4, i8* %30) #4, !dbg !16918
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !16917

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind readnone
declare double @ceil(double) #8

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @mpd_bsr(i64 %a) #3 {
entry:
  %a.addr = alloca i64, align 8
  %retval1 = alloca i64, align 8
  store i64 %a, i64* %a.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !1851, metadata !2395), !dbg !16919
  %0 = bitcast i64* %retval1 to i8*, !dbg !16920
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !16920
  call void @llvm.dbg.declare(metadata i64* %retval1, metadata !1852, metadata !2395), !dbg !16921
  %1 = load i64, i64* %a.addr, align 8, !dbg !16922, !tbaa !2391
  %2 = call i64 asm "bsrq $1, $0\0A\09", "=r,r,~{cc},~{dirflag},~{fpsr},~{flags}"(i64 %1) #2, !dbg !16923, !srcloc !16924
  store i64 %2, i64* %retval1, align 8, !dbg !16923, !tbaa !2391
  %3 = load i64, i64* %retval1, align 8, !dbg !16925, !tbaa !2391
  %conv = trunc i64 %3 to i32, !dbg !16926
  %4 = bitcast i64* %retval1 to i8*, !dbg !16927
  call void @llvm.lifetime.end(i64 8, i8* %4) #4, !dbg !16927
  ret i32 %conv, !dbg !16928
}

; Function Attrs: nounwind uwtable
define internal i32 @mpd_word_ispow10(i64 %word) #0 {
entry:
  %retval = alloca i32, align 4
  %word.addr = alloca i64, align 8
  %n = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store i64 %word, i64* %word.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %word.addr, metadata !1914, metadata !2395), !dbg !16929
  %0 = bitcast i32* %n to i8*, !dbg !16930
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !16930
  call void @llvm.dbg.declare(metadata i32* %n, metadata !1915, metadata !2395), !dbg !16931
  %1 = load i64, i64* %word.addr, align 8, !dbg !16932, !tbaa !2391
  %call = call i32 @mpd_word_digits(i64 %1), !dbg !16933
  store i32 %call, i32* %n, align 4, !dbg !16934, !tbaa !2554
  %2 = load i64, i64* %word.addr, align 8, !dbg !16935, !tbaa !2391
  %3 = load i32, i32* %n, align 4, !dbg !16937, !tbaa !2554
  %sub = sub i32 %3, 1, !dbg !16938
  %idxprom = sext i32 %sub to i64, !dbg !16939
  %arrayidx = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %idxprom, !dbg !16939
  %4 = load i64, i64* %arrayidx, align 8, !dbg !16939, !tbaa !2391
  %cmp = icmp eq i64 %2, %4, !dbg !16940
  br i1 %cmp, label %if.then, label %if.end, !dbg !16941

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, !dbg !16942
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16942

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, !dbg !16944
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !16944

cleanup:                                          ; preds = %if.end, %if.then
  %5 = bitcast i32* %n to i8*, !dbg !16945
  call void @llvm.lifetime.end(i64 4, i8* %5) #4, !dbg !16945
  %6 = load i32, i32* %retval, !dbg !16945
  ret i32 %6, !dbg !16945
}

; Function Attrs: nounwind uwtable
define internal void @_mpd_qmul_inf(%struct.mpd_t* %result, %struct.mpd_t* %a, %struct.mpd_t* %b, i32* %status) #0 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %a.addr = alloca %struct.mpd_t*, align 8
  %b.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !1952, metadata !2395), !dbg !16946
  store %struct.mpd_t* %a, %struct.mpd_t** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %a.addr, metadata !1953, metadata !2395), !dbg !16947
  store %struct.mpd_t* %b, %struct.mpd_t** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %b.addr, metadata !1954, metadata !2395), !dbg !16948
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1955, metadata !2395), !dbg !16949
  %0 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16950, !tbaa !2505
  %call = call i32 @mpd_isinfinite(%struct.mpd_t* %0), !dbg !16952
  %tobool = icmp ne i32 %call, 0, !dbg !16952
  br i1 %tobool, label %if.then, label %if.end.8, !dbg !16953

if.then:                                          ; preds = %entry
  %1 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !16954, !tbaa !2505
  %call1 = call i32 @mpd_iszero(%struct.mpd_t* %1), !dbg !16957
  %tobool2 = icmp ne i32 %call1, 0, !dbg !16957
  br i1 %tobool2, label %if.then.3, label %if.else, !dbg !16958

if.then.3:                                        ; preds = %if.then
  %2 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16959, !tbaa !2505
  %3 = load i32*, i32** %status.addr, align 8, !dbg !16961, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %2, i32 256, i32* %3), !dbg !16962
  br label %if.end, !dbg !16963

if.else:                                          ; preds = %if.then
  %4 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16964, !tbaa !2505
  %5 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16966, !tbaa !2505
  %call4 = call zeroext i8 @mpd_sign(%struct.mpd_t* %5), !dbg !16967
  %conv = zext i8 %call4 to i32, !dbg !16967
  %6 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !16968, !tbaa !2505
  %call5 = call zeroext i8 @mpd_sign(%struct.mpd_t* %6), !dbg !16969
  %conv6 = zext i8 %call5 to i32, !dbg !16969
  %xor = xor i32 %conv, %conv6, !dbg !16970
  %conv7 = trunc i32 %xor to i8, !dbg !16967
  call void @mpd_setspecial(%struct.mpd_t* %4, i8 zeroext %conv7, i8 zeroext 2), !dbg !16971
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  br label %if.end.19, !dbg !16972

if.end.8:                                         ; preds = %entry
  %7 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16973, !tbaa !2505
  %call9 = call i32 @mpd_iszero(%struct.mpd_t* %7), !dbg !16975
  %tobool10 = icmp ne i32 %call9, 0, !dbg !16975
  br i1 %tobool10, label %if.then.11, label %if.else.12, !dbg !16976

if.then.11:                                       ; preds = %if.end.8
  %8 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16977, !tbaa !2505
  %9 = load i32*, i32** %status.addr, align 8, !dbg !16979, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %8, i32 256, i32* %9), !dbg !16980
  br label %if.end.19, !dbg !16981

if.else.12:                                       ; preds = %if.end.8
  %10 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !16982, !tbaa !2505
  %11 = load %struct.mpd_t*, %struct.mpd_t** %a.addr, align 8, !dbg !16984, !tbaa !2505
  %call13 = call zeroext i8 @mpd_sign(%struct.mpd_t* %11), !dbg !16985
  %conv14 = zext i8 %call13 to i32, !dbg !16985
  %12 = load %struct.mpd_t*, %struct.mpd_t** %b.addr, align 8, !dbg !16986, !tbaa !2505
  %call15 = call zeroext i8 @mpd_sign(%struct.mpd_t* %12), !dbg !16987
  %conv16 = zext i8 %call15 to i32, !dbg !16987
  %xor17 = xor i32 %conv14, %conv16, !dbg !16988
  %conv18 = trunc i32 %xor17 to i8, !dbg !16985
  call void @mpd_setspecial(%struct.mpd_t* %10, i8 zeroext %conv18, i8 zeroext 2), !dbg !16989
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.12, %if.then.11, %if.end
  ret void, !dbg !16990
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_singlemul(i64* %w, i64 %u, i64 %v) #3 {
entry:
  %w.addr = alloca i64*, align 8
  %u.addr = alloca i64, align 8
  %v.addr = alloca i64, align 8
  %hi = alloca i64, align 8
  %lo = alloca i64, align 8
  store i64* %w, i64** %w.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %w.addr, metadata !1960, metadata !2395), !dbg !16991
  store i64 %u, i64* %u.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %u.addr, metadata !1961, metadata !2395), !dbg !16992
  store i64 %v, i64* %v.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %v.addr, metadata !1962, metadata !2395), !dbg !16993
  %0 = bitcast i64* %hi to i8*, !dbg !16994
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !16994
  call void @llvm.dbg.declare(metadata i64* %hi, metadata !1963, metadata !2395), !dbg !16995
  %1 = bitcast i64* %lo to i8*, !dbg !16994
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !16994
  call void @llvm.dbg.declare(metadata i64* %lo, metadata !1964, metadata !2395), !dbg !16996
  %2 = load i64, i64* %u.addr, align 8, !dbg !16997, !tbaa !2391
  %3 = load i64, i64* %v.addr, align 8, !dbg !16998, !tbaa !2391
  call void @_mpd_mul_words(i64* %hi, i64* %lo, i64 %2, i64 %3), !dbg !16999
  %4 = load i64*, i64** %w.addr, align 8, !dbg !17000, !tbaa !2505
  %arrayidx = getelementptr i64, i64* %4, i64 1, !dbg !17000
  %5 = load i64*, i64** %w.addr, align 8, !dbg !17001, !tbaa !2505
  %arrayidx1 = getelementptr i64, i64* %5, i64 0, !dbg !17001
  %6 = load i64, i64* %hi, align 8, !dbg !17002, !tbaa !2391
  %7 = load i64, i64* %lo, align 8, !dbg !17003, !tbaa !2391
  call void @_mpd_div_words_r(i64* %arrayidx, i64* %arrayidx1, i64 %6, i64 %7), !dbg !17004
  %8 = bitcast i64* %lo to i8*, !dbg !17005
  call void @llvm.lifetime.end(i64 8, i8* %8) #4, !dbg !17005
  %9 = bitcast i64* %hi to i8*, !dbg !17005
  call void @llvm.lifetime.end(i64 8, i8* %9) #4, !dbg !17005
  ret void, !dbg !17005
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_mul_2_le2(i64* %w, i64* %u, i64* %v, i64 %m) #3 {
entry:
  %w.addr = alloca i64*, align 8
  %u.addr = alloca i64*, align 8
  %v.addr = alloca i64*, align 8
  %m.addr = alloca i64, align 8
  %hi = alloca i64, align 8
  %lo = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i64* %w, i64** %w.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %w.addr, metadata !1980, metadata !2395), !dbg !17006
  store i64* %u, i64** %u.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %u.addr, metadata !1981, metadata !2395), !dbg !17007
  store i64* %v, i64** %v.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %v.addr, metadata !1982, metadata !2395), !dbg !17008
  store i64 %m, i64* %m.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %m.addr, metadata !1983, metadata !2395), !dbg !17009
  %0 = bitcast i64* %hi to i8*, !dbg !17010
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !17010
  call void @llvm.dbg.declare(metadata i64* %hi, metadata !1984, metadata !2395), !dbg !17011
  %1 = bitcast i64* %lo to i8*, !dbg !17010
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !17010
  call void @llvm.dbg.declare(metadata i64* %lo, metadata !1985, metadata !2395), !dbg !17012
  %2 = load i64*, i64** %u.addr, align 8, !dbg !17013, !tbaa !2505
  %arrayidx = getelementptr i64, i64* %2, i64 0, !dbg !17013
  %3 = load i64, i64* %arrayidx, align 8, !dbg !17013, !tbaa !2391
  %4 = load i64*, i64** %v.addr, align 8, !dbg !17014, !tbaa !2505
  %arrayidx1 = getelementptr i64, i64* %4, i64 0, !dbg !17014
  %5 = load i64, i64* %arrayidx1, align 8, !dbg !17014, !tbaa !2391
  call void @_mpd_mul_words(i64* %hi, i64* %lo, i64 %3, i64 %5), !dbg !17015
  %6 = load i64*, i64** %w.addr, align 8, !dbg !17016, !tbaa !2505
  %arrayidx2 = getelementptr i64, i64* %6, i64 1, !dbg !17016
  %7 = load i64*, i64** %w.addr, align 8, !dbg !17017, !tbaa !2505
  %arrayidx3 = getelementptr i64, i64* %7, i64 0, !dbg !17017
  %8 = load i64, i64* %hi, align 8, !dbg !17018, !tbaa !2391
  %9 = load i64, i64* %lo, align 8, !dbg !17019, !tbaa !2391
  call void @_mpd_div_words_r(i64* %arrayidx2, i64* %arrayidx3, i64 %8, i64 %9), !dbg !17020
  %10 = load i64*, i64** %u.addr, align 8, !dbg !17021, !tbaa !2505
  %arrayidx4 = getelementptr i64, i64* %10, i64 1, !dbg !17021
  %11 = load i64, i64* %arrayidx4, align 8, !dbg !17021, !tbaa !2391
  %12 = load i64*, i64** %v.addr, align 8, !dbg !17022, !tbaa !2505
  %arrayidx5 = getelementptr i64, i64* %12, i64 0, !dbg !17022
  %13 = load i64, i64* %arrayidx5, align 8, !dbg !17022, !tbaa !2391
  call void @_mpd_mul_words(i64* %hi, i64* %lo, i64 %11, i64 %13), !dbg !17023
  %14 = load i64*, i64** %w.addr, align 8, !dbg !17024, !tbaa !2505
  %arrayidx6 = getelementptr i64, i64* %14, i64 1, !dbg !17024
  %15 = load i64, i64* %arrayidx6, align 8, !dbg !17024, !tbaa !2391
  %16 = load i64, i64* %lo, align 8, !dbg !17025, !tbaa !2391
  %add = add i64 %15, %16, !dbg !17026
  store i64 %add, i64* %lo, align 8, !dbg !17027, !tbaa !2391
  %17 = load i64, i64* %lo, align 8, !dbg !17028, !tbaa !2391
  %18 = load i64*, i64** %w.addr, align 8, !dbg !17030, !tbaa !2505
  %arrayidx7 = getelementptr i64, i64* %18, i64 1, !dbg !17030
  %19 = load i64, i64* %arrayidx7, align 8, !dbg !17030, !tbaa !2391
  %cmp = icmp ult i64 %17, %19, !dbg !17031
  br i1 %cmp, label %if.then, label %if.end, !dbg !17032

if.then:                                          ; preds = %entry
  %20 = load i64, i64* %hi, align 8, !dbg !17033, !tbaa !2391
  %inc = add i64 %20, 1, !dbg !17033
  store i64 %inc, i64* %hi, align 8, !dbg !17033, !tbaa !2391
  br label %if.end, !dbg !17035

if.end:                                           ; preds = %if.then, %entry
  %21 = load i64*, i64** %w.addr, align 8, !dbg !17036, !tbaa !2505
  %arrayidx8 = getelementptr i64, i64* %21, i64 2, !dbg !17036
  %22 = load i64*, i64** %w.addr, align 8, !dbg !17037, !tbaa !2505
  %arrayidx9 = getelementptr i64, i64* %22, i64 1, !dbg !17037
  %23 = load i64, i64* %hi, align 8, !dbg !17038, !tbaa !2391
  %24 = load i64, i64* %lo, align 8, !dbg !17039, !tbaa !2391
  call void @_mpd_div_words_r(i64* %arrayidx8, i64* %arrayidx9, i64 %23, i64 %24), !dbg !17040
  %25 = load i64, i64* %m.addr, align 8, !dbg !17041, !tbaa !2391
  %cmp10 = icmp eq i64 %25, 1, !dbg !17043
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !17044

if.then.11:                                       ; preds = %if.end
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17045

if.end.12:                                        ; preds = %if.end
  %26 = load i64*, i64** %u.addr, align 8, !dbg !17046, !tbaa !2505
  %arrayidx13 = getelementptr i64, i64* %26, i64 0, !dbg !17046
  %27 = load i64, i64* %arrayidx13, align 8, !dbg !17046, !tbaa !2391
  %28 = load i64*, i64** %v.addr, align 8, !dbg !17047, !tbaa !2505
  %arrayidx14 = getelementptr i64, i64* %28, i64 1, !dbg !17047
  %29 = load i64, i64* %arrayidx14, align 8, !dbg !17047, !tbaa !2391
  call void @_mpd_mul_words(i64* %hi, i64* %lo, i64 %27, i64 %29), !dbg !17048
  %30 = load i64*, i64** %w.addr, align 8, !dbg !17049, !tbaa !2505
  %arrayidx15 = getelementptr i64, i64* %30, i64 1, !dbg !17049
  %31 = load i64, i64* %arrayidx15, align 8, !dbg !17049, !tbaa !2391
  %32 = load i64, i64* %lo, align 8, !dbg !17050, !tbaa !2391
  %add16 = add i64 %31, %32, !dbg !17051
  store i64 %add16, i64* %lo, align 8, !dbg !17052, !tbaa !2391
  %33 = load i64, i64* %lo, align 8, !dbg !17053, !tbaa !2391
  %34 = load i64*, i64** %w.addr, align 8, !dbg !17055, !tbaa !2505
  %arrayidx17 = getelementptr i64, i64* %34, i64 1, !dbg !17055
  %35 = load i64, i64* %arrayidx17, align 8, !dbg !17055, !tbaa !2391
  %cmp18 = icmp ult i64 %33, %35, !dbg !17056
  br i1 %cmp18, label %if.then.19, label %if.end.21, !dbg !17057

if.then.19:                                       ; preds = %if.end.12
  %36 = load i64, i64* %hi, align 8, !dbg !17058, !tbaa !2391
  %inc20 = add i64 %36, 1, !dbg !17058
  store i64 %inc20, i64* %hi, align 8, !dbg !17058, !tbaa !2391
  br label %if.end.21, !dbg !17060

if.end.21:                                        ; preds = %if.then.19, %if.end.12
  %37 = load i64*, i64** %w.addr, align 8, !dbg !17061, !tbaa !2505
  %arrayidx22 = getelementptr i64, i64* %37, i64 3, !dbg !17061
  %38 = load i64*, i64** %w.addr, align 8, !dbg !17062, !tbaa !2505
  %arrayidx23 = getelementptr i64, i64* %38, i64 1, !dbg !17062
  %39 = load i64, i64* %hi, align 8, !dbg !17063, !tbaa !2391
  %40 = load i64, i64* %lo, align 8, !dbg !17064, !tbaa !2391
  call void @_mpd_div_words_r(i64* %arrayidx22, i64* %arrayidx23, i64 %39, i64 %40), !dbg !17065
  %41 = load i64*, i64** %u.addr, align 8, !dbg !17066, !tbaa !2505
  %arrayidx24 = getelementptr i64, i64* %41, i64 1, !dbg !17066
  %42 = load i64, i64* %arrayidx24, align 8, !dbg !17066, !tbaa !2391
  %43 = load i64*, i64** %v.addr, align 8, !dbg !17067, !tbaa !2505
  %arrayidx25 = getelementptr i64, i64* %43, i64 1, !dbg !17067
  %44 = load i64, i64* %arrayidx25, align 8, !dbg !17067, !tbaa !2391
  call void @_mpd_mul_words(i64* %hi, i64* %lo, i64 %42, i64 %44), !dbg !17068
  %45 = load i64*, i64** %w.addr, align 8, !dbg !17069, !tbaa !2505
  %arrayidx26 = getelementptr i64, i64* %45, i64 2, !dbg !17069
  %46 = load i64, i64* %arrayidx26, align 8, !dbg !17069, !tbaa !2391
  %47 = load i64, i64* %lo, align 8, !dbg !17070, !tbaa !2391
  %add27 = add i64 %46, %47, !dbg !17071
  store i64 %add27, i64* %lo, align 8, !dbg !17072, !tbaa !2391
  %48 = load i64, i64* %lo, align 8, !dbg !17073, !tbaa !2391
  %49 = load i64*, i64** %w.addr, align 8, !dbg !17075, !tbaa !2505
  %arrayidx28 = getelementptr i64, i64* %49, i64 2, !dbg !17075
  %50 = load i64, i64* %arrayidx28, align 8, !dbg !17075, !tbaa !2391
  %cmp29 = icmp ult i64 %48, %50, !dbg !17076
  br i1 %cmp29, label %if.then.30, label %if.end.32, !dbg !17077

if.then.30:                                       ; preds = %if.end.21
  %51 = load i64, i64* %hi, align 8, !dbg !17078, !tbaa !2391
  %inc31 = add i64 %51, 1, !dbg !17078
  store i64 %inc31, i64* %hi, align 8, !dbg !17078, !tbaa !2391
  br label %if.end.32, !dbg !17080

if.end.32:                                        ; preds = %if.then.30, %if.end.21
  %52 = load i64*, i64** %w.addr, align 8, !dbg !17081, !tbaa !2505
  %arrayidx33 = getelementptr i64, i64* %52, i64 3, !dbg !17081
  %53 = load i64, i64* %arrayidx33, align 8, !dbg !17081, !tbaa !2391
  %54 = load i64, i64* %lo, align 8, !dbg !17082, !tbaa !2391
  %add34 = add i64 %53, %54, !dbg !17083
  store i64 %add34, i64* %lo, align 8, !dbg !17084, !tbaa !2391
  %55 = load i64, i64* %lo, align 8, !dbg !17085, !tbaa !2391
  %56 = load i64*, i64** %w.addr, align 8, !dbg !17087, !tbaa !2505
  %arrayidx35 = getelementptr i64, i64* %56, i64 3, !dbg !17087
  %57 = load i64, i64* %arrayidx35, align 8, !dbg !17087, !tbaa !2391
  %cmp36 = icmp ult i64 %55, %57, !dbg !17088
  br i1 %cmp36, label %if.then.37, label %if.end.39, !dbg !17089

if.then.37:                                       ; preds = %if.end.32
  %58 = load i64, i64* %hi, align 8, !dbg !17090, !tbaa !2391
  %inc38 = add i64 %58, 1, !dbg !17090
  store i64 %inc38, i64* %hi, align 8, !dbg !17090, !tbaa !2391
  br label %if.end.39, !dbg !17092

if.end.39:                                        ; preds = %if.then.37, %if.end.32
  %59 = load i64*, i64** %w.addr, align 8, !dbg !17093, !tbaa !2505
  %arrayidx40 = getelementptr i64, i64* %59, i64 3, !dbg !17093
  %60 = load i64*, i64** %w.addr, align 8, !dbg !17094, !tbaa !2505
  %arrayidx41 = getelementptr i64, i64* %60, i64 2, !dbg !17094
  %61 = load i64, i64* %hi, align 8, !dbg !17095, !tbaa !2391
  %62 = load i64, i64* %lo, align 8, !dbg !17096, !tbaa !2391
  call void @_mpd_div_words_r(i64* %arrayidx40, i64* %arrayidx41, i64 %61, i64 %62), !dbg !17097
  store i32 0, i32* %cleanup.dest.slot, !dbg !17098
  br label %cleanup, !dbg !17098

cleanup:                                          ; preds = %if.end.39, %if.then.11
  %63 = bitcast i64* %lo to i8*, !dbg !17099
  call void @llvm.lifetime.end(i64 8, i8* %63) #4, !dbg !17099
  %64 = bitcast i64* %hi to i8*, !dbg !17099
  call void @llvm.lifetime.end(i64 8, i8* %64) #4, !dbg !17099
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !17098

unreachable:                                      ; No predecessors!
  unreachable
}

declare hidden void @_mpd_shortmul(i64*, i64*, i64, i64) #5

declare hidden void @_mpd_basemul(i64*, i64*, i64*, i64, i64) #5

declare hidden i8* @mpd_calloc(i64, i64) #5

; Function Attrs: nounwind uwtable
define internal i64* @_mpd_kmul(i64* %u, i64* %v, i64 %ulen, i64 %vlen, i64* %rsize) #0 {
entry:
  %retval = alloca i64*, align 8
  %u.addr = alloca i64*, align 8
  %v.addr = alloca i64*, align 8
  %ulen.addr = alloca i64, align 8
  %vlen.addr = alloca i64, align 8
  %rsize.addr = alloca i64*, align 8
  %result = alloca i64*, align 8
  %w = alloca i64*, align 8
  %m = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i64* %u, i64** %u.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %u.addr, metadata !1991, metadata !2395), !dbg !17101
  store i64* %v, i64** %v.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %v.addr, metadata !1992, metadata !2395), !dbg !17102
  store i64 %ulen, i64* %ulen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %ulen.addr, metadata !1993, metadata !2395), !dbg !17103
  store i64 %vlen, i64* %vlen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %vlen.addr, metadata !1994, metadata !2395), !dbg !17104
  store i64* %rsize, i64** %rsize.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %rsize.addr, metadata !1995, metadata !2395), !dbg !17105
  %0 = bitcast i64** %result to i8*, !dbg !17106
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !17106
  call void @llvm.dbg.declare(metadata i64** %result, metadata !1996, metadata !2395), !dbg !17107
  store i64* null, i64** %result, align 8, !dbg !17107, !tbaa !2505
  %1 = bitcast i64** %w to i8*, !dbg !17106
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !17106
  call void @llvm.dbg.declare(metadata i64** %w, metadata !1997, metadata !2395), !dbg !17108
  store i64* null, i64** %w, align 8, !dbg !17108, !tbaa !2505
  %2 = bitcast i64* %m to i8*, !dbg !17109
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !17109
  call void @llvm.dbg.declare(metadata i64* %m, metadata !1998, metadata !2395), !dbg !17110
  %3 = load i64, i64* %ulen.addr, align 8, !dbg !17111, !tbaa !2391
  %4 = load i64, i64* %vlen.addr, align 8, !dbg !17112, !tbaa !2391
  %call = call i64 @_kmul_resultsize(i64 %3, i64 %4), !dbg !17113
  %5 = load i64*, i64** %rsize.addr, align 8, !dbg !17114, !tbaa !2505
  store i64 %call, i64* %5, align 8, !dbg !17115, !tbaa !2391
  %6 = load i64*, i64** %rsize.addr, align 8, !dbg !17116, !tbaa !2505
  %7 = load i64, i64* %6, align 8, !dbg !17118, !tbaa !2391
  %call1 = call i8* @mpd_calloc(i64 %7, i64 8), !dbg !17119
  %8 = bitcast i8* %call1 to i64*, !dbg !17119
  store i64* %8, i64** %result, align 8, !dbg !17120, !tbaa !2505
  %cmp = icmp eq i64* %8, null, !dbg !17121
  br i1 %cmp, label %if.then, label %if.end, !dbg !17122

if.then:                                          ; preds = %entry
  store i64* null, i64** %retval, !dbg !17123
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17123

if.end:                                           ; preds = %entry
  %9 = load i64, i64* %ulen.addr, align 8, !dbg !17125, !tbaa !2391
  %call2 = call i64 @_kmul_worksize(i64 %9, i64 16), !dbg !17126
  store i64 %call2, i64* %m, align 8, !dbg !17127, !tbaa !2391
  %10 = load i64, i64* %m, align 8, !dbg !17128, !tbaa !2391
  %tobool = icmp ne i64 %10, 0, !dbg !17128
  br i1 %tobool, label %land.lhs.true, label %if.end.6, !dbg !17130

land.lhs.true:                                    ; preds = %if.end
  %11 = load i64, i64* %m, align 8, !dbg !17131, !tbaa !2391
  %call3 = call i8* @mpd_calloc(i64 %11, i64 8), !dbg !17133
  %12 = bitcast i8* %call3 to i64*, !dbg !17133
  store i64* %12, i64** %w, align 8, !dbg !17134, !tbaa !2505
  %cmp4 = icmp eq i64* %12, null, !dbg !17135
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !17136

if.then.5:                                        ; preds = %land.lhs.true
  %13 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !17137, !tbaa !2505
  %14 = load i64*, i64** %result, align 8, !dbg !17139, !tbaa !2505
  %15 = bitcast i64* %14 to i8*, !dbg !17139
  call void %13(i8* %15), !dbg !17137
  store i64* null, i64** %retval, !dbg !17140
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17140

if.end.6:                                         ; preds = %land.lhs.true, %if.end
  %16 = load i64*, i64** %result, align 8, !dbg !17141, !tbaa !2505
  %17 = load i64*, i64** %u.addr, align 8, !dbg !17142, !tbaa !2505
  %18 = load i64*, i64** %v.addr, align 8, !dbg !17143, !tbaa !2505
  %19 = load i64*, i64** %w, align 8, !dbg !17144, !tbaa !2505
  %20 = load i64, i64* %ulen.addr, align 8, !dbg !17145, !tbaa !2391
  %21 = load i64, i64* %vlen.addr, align 8, !dbg !17146, !tbaa !2391
  call void @_karatsuba_rec(i64* %16, i64* %17, i64* %18, i64* %19, i64 %20, i64 %21), !dbg !17147
  %22 = load i64*, i64** %w, align 8, !dbg !17148, !tbaa !2505
  %tobool7 = icmp ne i64* %22, null, !dbg !17148
  br i1 %tobool7, label %if.then.8, label %if.end.9, !dbg !17150

if.then.8:                                        ; preds = %if.end.6
  %23 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !17151, !tbaa !2505
  %24 = load i64*, i64** %w, align 8, !dbg !17153, !tbaa !2505
  %25 = bitcast i64* %24 to i8*, !dbg !17153
  call void %23(i8* %25), !dbg !17154
  br label %if.end.9, !dbg !17154

if.end.9:                                         ; preds = %if.then.8, %if.end.6
  %26 = load i64*, i64** %result, align 8, !dbg !17155, !tbaa !2505
  store i64* %26, i64** %retval, !dbg !17156
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17156

cleanup:                                          ; preds = %if.end.9, %if.then.5, %if.then
  %27 = bitcast i64* %m to i8*, !dbg !17157
  call void @llvm.lifetime.end(i64 8, i8* %27) #4, !dbg !17157
  %28 = bitcast i64** %w to i8*, !dbg !17157
  call void @llvm.lifetime.end(i64 8, i8* %28) #4, !dbg !17157
  %29 = bitcast i64** %result to i8*, !dbg !17157
  call void @llvm.lifetime.end(i64 8, i8* %29) #4, !dbg !17157
  %30 = load i64*, i64** %retval, !dbg !17157
  ret i64* %30, !dbg !17157
}

; Function Attrs: nounwind uwtable
define internal i64* @_mpd_fntmul(i64* %u, i64* %v, i64 %ulen, i64 %vlen, i64* %rsize) #0 {
entry:
  %u.addr = alloca i64*, align 8
  %v.addr = alloca i64*, align 8
  %ulen.addr = alloca i64, align 8
  %vlen.addr = alloca i64, align 8
  %rsize.addr = alloca i64*, align 8
  %c1 = alloca i64*, align 8
  %c2 = alloca i64*, align 8
  %c3 = alloca i64*, align 8
  %vtmp = alloca i64*, align 8
  %n = alloca i64, align 8
  store i64* %u, i64** %u.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %u.addr, metadata !2036, metadata !2395), !dbg !17158
  store i64* %v, i64** %v.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %v.addr, metadata !2037, metadata !2395), !dbg !17159
  store i64 %ulen, i64* %ulen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %ulen.addr, metadata !2038, metadata !2395), !dbg !17160
  store i64 %vlen, i64* %vlen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %vlen.addr, metadata !2039, metadata !2395), !dbg !17161
  store i64* %rsize, i64** %rsize.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %rsize.addr, metadata !2040, metadata !2395), !dbg !17162
  %0 = bitcast i64** %c1 to i8*, !dbg !17163
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !17163
  call void @llvm.dbg.declare(metadata i64** %c1, metadata !2041, metadata !2395), !dbg !17164
  store i64* null, i64** %c1, align 8, !dbg !17164, !tbaa !2505
  %1 = bitcast i64** %c2 to i8*, !dbg !17163
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !17163
  call void @llvm.dbg.declare(metadata i64** %c2, metadata !2042, metadata !2395), !dbg !17165
  store i64* null, i64** %c2, align 8, !dbg !17165, !tbaa !2505
  %2 = bitcast i64** %c3 to i8*, !dbg !17163
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !17163
  call void @llvm.dbg.declare(metadata i64** %c3, metadata !2043, metadata !2395), !dbg !17166
  store i64* null, i64** %c3, align 8, !dbg !17166, !tbaa !2505
  %3 = bitcast i64** %vtmp to i8*, !dbg !17163
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !17163
  call void @llvm.dbg.declare(metadata i64** %vtmp, metadata !2044, metadata !2395), !dbg !17167
  store i64* null, i64** %vtmp, align 8, !dbg !17167, !tbaa !2505
  %4 = bitcast i64* %n to i8*, !dbg !17168
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !17168
  call void @llvm.dbg.declare(metadata i64* %n, metadata !2045, metadata !2395), !dbg !17169
  %5 = load i64, i64* %ulen.addr, align 8, !dbg !17170, !tbaa !2391
  %6 = load i64, i64* %vlen.addr, align 8, !dbg !17171, !tbaa !2391
  %call = call i64 @add_size_t(i64 %5, i64 %6), !dbg !17172
  %7 = load i64*, i64** %rsize.addr, align 8, !dbg !17173, !tbaa !2505
  store i64 %call, i64* %7, align 8, !dbg !17174, !tbaa !2391
  %8 = load i64*, i64** %rsize.addr, align 8, !dbg !17175, !tbaa !2505
  %9 = load i64, i64* %8, align 8, !dbg !17177, !tbaa !2391
  %call1 = call i64 @_mpd_get_transform_len(i64 %9), !dbg !17178
  store i64 %call1, i64* %n, align 8, !dbg !17179, !tbaa !2391
  %cmp = icmp eq i64 %call1, -1, !dbg !17180
  br i1 %cmp, label %if.then, label %if.end, !dbg !17181

if.then:                                          ; preds = %entry
  br label %malloc_error, !dbg !17182

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n, align 8, !dbg !17184, !tbaa !2391
  %call2 = call i8* @mpd_calloc(i64 %10, i64 8), !dbg !17186
  %11 = bitcast i8* %call2 to i64*, !dbg !17186
  store i64* %11, i64** %c1, align 8, !dbg !17187, !tbaa !2505
  %cmp3 = icmp eq i64* %11, null, !dbg !17188
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !17189

if.then.4:                                        ; preds = %if.end
  br label %malloc_error, !dbg !17190

if.end.5:                                         ; preds = %if.end
  %12 = load i64, i64* %n, align 8, !dbg !17192, !tbaa !2391
  %call6 = call i8* @mpd_calloc(i64 %12, i64 8), !dbg !17194
  %13 = bitcast i8* %call6 to i64*, !dbg !17194
  store i64* %13, i64** %c2, align 8, !dbg !17195, !tbaa !2505
  %cmp7 = icmp eq i64* %13, null, !dbg !17196
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !17197

if.then.8:                                        ; preds = %if.end.5
  br label %malloc_error, !dbg !17198

if.end.9:                                         ; preds = %if.end.5
  %14 = load i64, i64* %n, align 8, !dbg !17200, !tbaa !2391
  %call10 = call i8* @mpd_calloc(i64 %14, i64 8), !dbg !17202
  %15 = bitcast i8* %call10 to i64*, !dbg !17202
  store i64* %15, i64** %c3, align 8, !dbg !17203, !tbaa !2505
  %cmp11 = icmp eq i64* %15, null, !dbg !17204
  br i1 %cmp11, label %if.then.12, label %if.end.13, !dbg !17205

if.then.12:                                       ; preds = %if.end.9
  br label %malloc_error, !dbg !17206

if.end.13:                                        ; preds = %if.end.9
  %16 = load i64*, i64** %c1, align 8, !dbg !17208, !tbaa !2505
  %17 = bitcast i64* %16 to i8*, !dbg !17209
  %18 = load i64*, i64** %u.addr, align 8, !dbg !17210, !tbaa !2505
  %19 = bitcast i64* %18 to i8*, !dbg !17209
  %20 = load i64, i64* %ulen.addr, align 8, !dbg !17211, !tbaa !2391
  %mul = mul i64 %20, 8, !dbg !17212
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %19, i64 %mul, i32 8, i1 false), !dbg !17209
  %21 = load i64*, i64** %c2, align 8, !dbg !17213, !tbaa !2505
  %22 = bitcast i64* %21 to i8*, !dbg !17214
  %23 = load i64*, i64** %u.addr, align 8, !dbg !17215, !tbaa !2505
  %24 = bitcast i64* %23 to i8*, !dbg !17214
  %25 = load i64, i64* %ulen.addr, align 8, !dbg !17216, !tbaa !2391
  %mul14 = mul i64 %25, 8, !dbg !17217
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %24, i64 %mul14, i32 8, i1 false), !dbg !17214
  %26 = load i64*, i64** %c3, align 8, !dbg !17218, !tbaa !2505
  %27 = bitcast i64* %26 to i8*, !dbg !17219
  %28 = load i64*, i64** %u.addr, align 8, !dbg !17220, !tbaa !2505
  %29 = bitcast i64* %28 to i8*, !dbg !17219
  %30 = load i64, i64* %ulen.addr, align 8, !dbg !17221, !tbaa !2391
  %mul15 = mul i64 %30, 8, !dbg !17222
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %29, i64 %mul15, i32 8, i1 false), !dbg !17219
  %31 = load i64*, i64** %u.addr, align 8, !dbg !17223, !tbaa !2505
  %32 = load i64*, i64** %v.addr, align 8, !dbg !17225, !tbaa !2505
  %cmp16 = icmp eq i64* %31, %32, !dbg !17226
  br i1 %cmp16, label %if.then.17, label %if.else, !dbg !17227

if.then.17:                                       ; preds = %if.end.13
  %33 = load i64*, i64** %c1, align 8, !dbg !17228, !tbaa !2505
  %34 = load i64, i64* %n, align 8, !dbg !17231, !tbaa !2391
  %call18 = call i32 @fnt_autoconvolute(i64* %33, i64 %34, i32 0), !dbg !17232
  %tobool = icmp ne i32 %call18, 0, !dbg !17232
  br i1 %tobool, label %lor.lhs.false, label %if.then.24, !dbg !17233

lor.lhs.false:                                    ; preds = %if.then.17
  %35 = load i64*, i64** %c2, align 8, !dbg !17234, !tbaa !2505
  %36 = load i64, i64* %n, align 8, !dbg !17235, !tbaa !2391
  %call19 = call i32 @fnt_autoconvolute(i64* %35, i64 %36, i32 1), !dbg !17236
  %tobool20 = icmp ne i32 %call19, 0, !dbg !17236
  br i1 %tobool20, label %lor.lhs.false.21, label %if.then.24, !dbg !17237

lor.lhs.false.21:                                 ; preds = %lor.lhs.false
  %37 = load i64*, i64** %c3, align 8, !dbg !17238, !tbaa !2505
  %38 = load i64, i64* %n, align 8, !dbg !17239, !tbaa !2391
  %call22 = call i32 @fnt_autoconvolute(i64* %37, i64 %38, i32 2), !dbg !17240
  %tobool23 = icmp ne i32 %call22, 0, !dbg !17240
  br i1 %tobool23, label %if.end.25, label %if.then.24, !dbg !17241

if.then.24:                                       ; preds = %lor.lhs.false.21, %lor.lhs.false, %if.then.17
  br label %malloc_error, !dbg !17242

if.end.25:                                        ; preds = %lor.lhs.false.21
  br label %if.end.47, !dbg !17244

if.else:                                          ; preds = %if.end.13
  %39 = load i64, i64* %n, align 8, !dbg !17245, !tbaa !2391
  %call26 = call i8* @mpd_calloc(i64 %39, i64 8), !dbg !17248
  %40 = bitcast i8* %call26 to i64*, !dbg !17248
  store i64* %40, i64** %vtmp, align 8, !dbg !17249, !tbaa !2505
  %cmp27 = icmp eq i64* %40, null, !dbg !17250
  br i1 %cmp27, label %if.then.28, label %if.end.29, !dbg !17251

if.then.28:                                       ; preds = %if.else
  br label %malloc_error, !dbg !17252

if.end.29:                                        ; preds = %if.else
  %41 = load i64*, i64** %vtmp, align 8, !dbg !17254, !tbaa !2505
  %42 = bitcast i64* %41 to i8*, !dbg !17255
  %43 = load i64*, i64** %v.addr, align 8, !dbg !17256, !tbaa !2505
  %44 = bitcast i64* %43 to i8*, !dbg !17255
  %45 = load i64, i64* %vlen.addr, align 8, !dbg !17257, !tbaa !2391
  %mul30 = mul i64 %45, 8, !dbg !17258
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %44, i64 %mul30, i32 8, i1 false), !dbg !17255
  %46 = load i64*, i64** %c1, align 8, !dbg !17259, !tbaa !2505
  %47 = load i64*, i64** %vtmp, align 8, !dbg !17261, !tbaa !2505
  %48 = load i64, i64* %n, align 8, !dbg !17262, !tbaa !2391
  %call31 = call i32 @fnt_convolute(i64* %46, i64* %47, i64 %48, i32 0), !dbg !17263
  %tobool32 = icmp ne i32 %call31, 0, !dbg !17263
  br i1 %tobool32, label %if.end.34, label %if.then.33, !dbg !17264

if.then.33:                                       ; preds = %if.end.29
  %49 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !17265, !tbaa !2505
  %50 = load i64*, i64** %vtmp, align 8, !dbg !17267, !tbaa !2505
  %51 = bitcast i64* %50 to i8*, !dbg !17267
  call void %49(i8* %51), !dbg !17265
  br label %malloc_error, !dbg !17268

if.end.34:                                        ; preds = %if.end.29
  %52 = load i64*, i64** %vtmp, align 8, !dbg !17269, !tbaa !2505
  %53 = bitcast i64* %52 to i8*, !dbg !17270
  %54 = load i64*, i64** %v.addr, align 8, !dbg !17271, !tbaa !2505
  %55 = bitcast i64* %54 to i8*, !dbg !17270
  %56 = load i64, i64* %vlen.addr, align 8, !dbg !17272, !tbaa !2391
  %mul35 = mul i64 %56, 8, !dbg !17273
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %55, i64 %mul35, i32 8, i1 false), !dbg !17270
  %57 = load i64*, i64** %vtmp, align 8, !dbg !17274, !tbaa !2505
  %58 = load i64, i64* %vlen.addr, align 8, !dbg !17275, !tbaa !2391
  %add.ptr = getelementptr i64, i64* %57, i64 %58, !dbg !17276
  %59 = load i64, i64* %n, align 8, !dbg !17277, !tbaa !2391
  %60 = load i64, i64* %vlen.addr, align 8, !dbg !17278, !tbaa !2391
  %sub = sub i64 %59, %60, !dbg !17279
  call void @mpd_uint_zero(i64* %add.ptr, i64 %sub), !dbg !17280
  %61 = load i64*, i64** %c2, align 8, !dbg !17281, !tbaa !2505
  %62 = load i64*, i64** %vtmp, align 8, !dbg !17283, !tbaa !2505
  %63 = load i64, i64* %n, align 8, !dbg !17284, !tbaa !2391
  %call36 = call i32 @fnt_convolute(i64* %61, i64* %62, i64 %63, i32 1), !dbg !17285
  %tobool37 = icmp ne i32 %call36, 0, !dbg !17285
  br i1 %tobool37, label %if.end.39, label %if.then.38, !dbg !17286

if.then.38:                                       ; preds = %if.end.34
  %64 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !17287, !tbaa !2505
  %65 = load i64*, i64** %vtmp, align 8, !dbg !17289, !tbaa !2505
  %66 = bitcast i64* %65 to i8*, !dbg !17289
  call void %64(i8* %66), !dbg !17287
  br label %malloc_error, !dbg !17290

if.end.39:                                        ; preds = %if.end.34
  %67 = load i64*, i64** %vtmp, align 8, !dbg !17291, !tbaa !2505
  %68 = bitcast i64* %67 to i8*, !dbg !17292
  %69 = load i64*, i64** %v.addr, align 8, !dbg !17293, !tbaa !2505
  %70 = bitcast i64* %69 to i8*, !dbg !17292
  %71 = load i64, i64* %vlen.addr, align 8, !dbg !17294, !tbaa !2391
  %mul40 = mul i64 %71, 8, !dbg !17295
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %70, i64 %mul40, i32 8, i1 false), !dbg !17292
  %72 = load i64*, i64** %vtmp, align 8, !dbg !17296, !tbaa !2505
  %73 = load i64, i64* %vlen.addr, align 8, !dbg !17297, !tbaa !2391
  %add.ptr41 = getelementptr i64, i64* %72, i64 %73, !dbg !17298
  %74 = load i64, i64* %n, align 8, !dbg !17299, !tbaa !2391
  %75 = load i64, i64* %vlen.addr, align 8, !dbg !17300, !tbaa !2391
  %sub42 = sub i64 %74, %75, !dbg !17301
  call void @mpd_uint_zero(i64* %add.ptr41, i64 %sub42), !dbg !17302
  %76 = load i64*, i64** %c3, align 8, !dbg !17303, !tbaa !2505
  %77 = load i64*, i64** %vtmp, align 8, !dbg !17305, !tbaa !2505
  %78 = load i64, i64* %n, align 8, !dbg !17306, !tbaa !2391
  %call43 = call i32 @fnt_convolute(i64* %76, i64* %77, i64 %78, i32 2), !dbg !17307
  %tobool44 = icmp ne i32 %call43, 0, !dbg !17307
  br i1 %tobool44, label %if.end.46, label %if.then.45, !dbg !17308

if.then.45:                                       ; preds = %if.end.39
  %79 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !17309, !tbaa !2505
  %80 = load i64*, i64** %vtmp, align 8, !dbg !17311, !tbaa !2505
  %81 = bitcast i64* %80 to i8*, !dbg !17311
  call void %79(i8* %81), !dbg !17309
  br label %malloc_error, !dbg !17312

if.end.46:                                        ; preds = %if.end.39
  %82 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !17313, !tbaa !2505
  %83 = load i64*, i64** %vtmp, align 8, !dbg !17314, !tbaa !2505
  %84 = bitcast i64* %83 to i8*, !dbg !17314
  call void %82(i8* %84), !dbg !17313
  br label %if.end.47

if.end.47:                                        ; preds = %if.end.46, %if.end.25
  %85 = load i64*, i64** %c1, align 8, !dbg !17315, !tbaa !2505
  %86 = load i64*, i64** %c2, align 8, !dbg !17316, !tbaa !2505
  %87 = load i64*, i64** %c3, align 8, !dbg !17317, !tbaa !2505
  %88 = load i64*, i64** %rsize.addr, align 8, !dbg !17318, !tbaa !2505
  %89 = load i64, i64* %88, align 8, !dbg !17319, !tbaa !2391
  call void @crt3(i64* %85, i64* %86, i64* %87, i64 %89), !dbg !17320
  br label %out, !dbg !17320

out:                                              ; preds = %if.end.56, %if.end.47
  %90 = load i64*, i64** %c2, align 8, !dbg !17321, !tbaa !2505
  %tobool48 = icmp ne i64* %90, null, !dbg !17321
  br i1 %tobool48, label %if.then.49, label %if.end.50, !dbg !17323

if.then.49:                                       ; preds = %out
  %91 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !17324, !tbaa !2505
  %92 = load i64*, i64** %c2, align 8, !dbg !17326, !tbaa !2505
  %93 = bitcast i64* %92 to i8*, !dbg !17326
  call void %91(i8* %93), !dbg !17327
  br label %if.end.50, !dbg !17327

if.end.50:                                        ; preds = %if.then.49, %out
  %94 = load i64*, i64** %c3, align 8, !dbg !17328, !tbaa !2505
  %tobool51 = icmp ne i64* %94, null, !dbg !17328
  br i1 %tobool51, label %if.then.52, label %if.end.53, !dbg !17330

if.then.52:                                       ; preds = %if.end.50
  %95 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !17331, !tbaa !2505
  %96 = load i64*, i64** %c3, align 8, !dbg !17333, !tbaa !2505
  %97 = bitcast i64* %96 to i8*, !dbg !17333
  call void %95(i8* %97), !dbg !17334
  br label %if.end.53, !dbg !17334

if.end.53:                                        ; preds = %if.then.52, %if.end.50
  %98 = load i64*, i64** %c1, align 8, !dbg !17335, !tbaa !2505
  %99 = bitcast i64* %n to i8*, !dbg !17336
  call void @llvm.lifetime.end(i64 8, i8* %99) #4, !dbg !17336
  %100 = bitcast i64** %vtmp to i8*, !dbg !17336
  call void @llvm.lifetime.end(i64 8, i8* %100) #4, !dbg !17336
  %101 = bitcast i64** %c3 to i8*, !dbg !17336
  call void @llvm.lifetime.end(i64 8, i8* %101) #4, !dbg !17336
  %102 = bitcast i64** %c2 to i8*, !dbg !17336
  call void @llvm.lifetime.end(i64 8, i8* %102) #4, !dbg !17336
  %103 = bitcast i64** %c1 to i8*, !dbg !17336
  call void @llvm.lifetime.end(i64 8, i8* %103) #4, !dbg !17336
  ret i64* %98, !dbg !17337

malloc_error:                                     ; preds = %if.then.45, %if.then.38, %if.then.33, %if.then.28, %if.then.24, %if.then.12, %if.then.8, %if.then.4, %if.then
  %104 = load i64*, i64** %c1, align 8, !dbg !17338, !tbaa !2505
  %tobool54 = icmp ne i64* %104, null, !dbg !17338
  br i1 %tobool54, label %if.then.55, label %if.end.56, !dbg !17340

if.then.55:                                       ; preds = %malloc_error
  %105 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !17341, !tbaa !2505
  %106 = load i64*, i64** %c1, align 8, !dbg !17343, !tbaa !2505
  %107 = bitcast i64* %106 to i8*, !dbg !17343
  call void %105(i8* %107), !dbg !17344
  br label %if.end.56, !dbg !17344

if.end.56:                                        ; preds = %if.then.55, %malloc_error
  store i64* null, i64** %c1, align 8, !dbg !17345, !tbaa !2505
  br label %out, !dbg !17346
}

; Function Attrs: nounwind uwtable
define internal i64* @_mpd_kmul_fnt(i64* %u, i64* %v, i64 %ulen, i64 %vlen, i64* %rsize) #0 {
entry:
  %retval = alloca i64*, align 8
  %u.addr = alloca i64*, align 8
  %v.addr = alloca i64*, align 8
  %ulen.addr = alloca i64, align 8
  %vlen.addr = alloca i64, align 8
  %rsize.addr = alloca i64*, align 8
  %result = alloca i64*, align 8
  %w = alloca i64*, align 8
  %m = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i64* %u, i64** %u.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %u.addr, metadata !2056, metadata !2395), !dbg !17347
  store i64* %v, i64** %v.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %v.addr, metadata !2057, metadata !2395), !dbg !17348
  store i64 %ulen, i64* %ulen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %ulen.addr, metadata !2058, metadata !2395), !dbg !17349
  store i64 %vlen, i64* %vlen.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %vlen.addr, metadata !2059, metadata !2395), !dbg !17350
  store i64* %rsize, i64** %rsize.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %rsize.addr, metadata !2060, metadata !2395), !dbg !17351
  %0 = bitcast i64** %result to i8*, !dbg !17352
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !17352
  call void @llvm.dbg.declare(metadata i64** %result, metadata !2061, metadata !2395), !dbg !17353
  store i64* null, i64** %result, align 8, !dbg !17353, !tbaa !2505
  %1 = bitcast i64** %w to i8*, !dbg !17352
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !17352
  call void @llvm.dbg.declare(metadata i64** %w, metadata !2062, metadata !2395), !dbg !17354
  store i64* null, i64** %w, align 8, !dbg !17354, !tbaa !2505
  %2 = bitcast i64* %m to i8*, !dbg !17355
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !17355
  call void @llvm.dbg.declare(metadata i64* %m, metadata !2063, metadata !2395), !dbg !17356
  %3 = load i64, i64* %ulen.addr, align 8, !dbg !17357, !tbaa !2391
  %4 = load i64, i64* %vlen.addr, align 8, !dbg !17358, !tbaa !2391
  %call = call i64 @_kmul_resultsize(i64 %3, i64 %4), !dbg !17359
  %5 = load i64*, i64** %rsize.addr, align 8, !dbg !17360, !tbaa !2505
  store i64 %call, i64* %5, align 8, !dbg !17361, !tbaa !2391
  %6 = load i64*, i64** %rsize.addr, align 8, !dbg !17362, !tbaa !2505
  %7 = load i64, i64* %6, align 8, !dbg !17364, !tbaa !2391
  %call1 = call i8* @mpd_calloc(i64 %7, i64 8), !dbg !17365
  %8 = bitcast i8* %call1 to i64*, !dbg !17365
  store i64* %8, i64** %result, align 8, !dbg !17366, !tbaa !2505
  %cmp = icmp eq i64* %8, null, !dbg !17367
  br i1 %cmp, label %if.then, label %if.end, !dbg !17368

if.then:                                          ; preds = %entry
  store i64* null, i64** %retval, !dbg !17369
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17369

if.end:                                           ; preds = %entry
  %9 = load i64, i64* %ulen.addr, align 8, !dbg !17371, !tbaa !2391
  %call2 = call i64 @_kmul_worksize(i64 %9, i64 6442450944), !dbg !17372
  store i64 %call2, i64* %m, align 8, !dbg !17373, !tbaa !2391
  %10 = load i64, i64* %m, align 8, !dbg !17374, !tbaa !2391
  %tobool = icmp ne i64 %10, 0, !dbg !17374
  br i1 %tobool, label %land.lhs.true, label %if.end.6, !dbg !17376

land.lhs.true:                                    ; preds = %if.end
  %11 = load i64, i64* %m, align 8, !dbg !17377, !tbaa !2391
  %call3 = call i8* @mpd_calloc(i64 %11, i64 8), !dbg !17379
  %12 = bitcast i8* %call3 to i64*, !dbg !17379
  store i64* %12, i64** %w, align 8, !dbg !17380, !tbaa !2505
  %cmp4 = icmp eq i64* %12, null, !dbg !17381
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !17382

if.then.5:                                        ; preds = %land.lhs.true
  %13 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !17383, !tbaa !2505
  %14 = load i64*, i64** %result, align 8, !dbg !17385, !tbaa !2505
  %15 = bitcast i64* %14 to i8*, !dbg !17385
  call void %13(i8* %15), !dbg !17383
  store i64* null, i64** %retval, !dbg !17386
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17386

if.end.6:                                         ; preds = %land.lhs.true, %if.end
  %16 = load i64*, i64** %result, align 8, !dbg !17387, !tbaa !2505
  %17 = load i64*, i64** %u.addr, align 8, !dbg !17389, !tbaa !2505
  %18 = load i64*, i64** %v.addr, align 8, !dbg !17390, !tbaa !2505
  %19 = load i64*, i64** %w, align 8, !dbg !17391, !tbaa !2505
  %20 = load i64, i64* %ulen.addr, align 8, !dbg !17392, !tbaa !2391
  %21 = load i64, i64* %vlen.addr, align 8, !dbg !17393, !tbaa !2391
  %call7 = call i32 @_karatsuba_rec_fnt(i64* %16, i64* %17, i64* %18, i64* %19, i64 %20, i64 %21), !dbg !17394
  %tobool8 = icmp ne i32 %call7, 0, !dbg !17394
  br i1 %tobool8, label %if.end.10, label %if.then.9, !dbg !17395

if.then.9:                                        ; preds = %if.end.6
  %22 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !17396, !tbaa !2505
  %23 = load i64*, i64** %result, align 8, !dbg !17398, !tbaa !2505
  %24 = bitcast i64* %23 to i8*, !dbg !17398
  call void %22(i8* %24), !dbg !17396
  store i64* null, i64** %result, align 8, !dbg !17399, !tbaa !2505
  br label %if.end.10, !dbg !17400

if.end.10:                                        ; preds = %if.then.9, %if.end.6
  %25 = load i64*, i64** %w, align 8, !dbg !17401, !tbaa !2505
  %tobool11 = icmp ne i64* %25, null, !dbg !17401
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !17403

if.then.12:                                       ; preds = %if.end.10
  %26 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !17404, !tbaa !2505
  %27 = load i64*, i64** %w, align 8, !dbg !17406, !tbaa !2505
  %28 = bitcast i64* %27 to i8*, !dbg !17406
  call void %26(i8* %28), !dbg !17407
  br label %if.end.13, !dbg !17407

if.end.13:                                        ; preds = %if.then.12, %if.end.10
  %29 = load i64*, i64** %result, align 8, !dbg !17408, !tbaa !2505
  store i64* %29, i64** %retval, !dbg !17409
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17409

cleanup:                                          ; preds = %if.end.13, %if.then.5, %if.then
  %30 = bitcast i64* %m to i8*, !dbg !17410
  call void @llvm.lifetime.end(i64 8, i8* %30) #4, !dbg !17410
  %31 = bitcast i64** %w to i8*, !dbg !17410
  call void @llvm.lifetime.end(i64 8, i8* %31) #4, !dbg !17410
  %32 = bitcast i64** %result to i8*, !dbg !17410
  call void @llvm.lifetime.end(i64 8, i8* %32) #4, !dbg !17410
  %33 = load i64*, i64** %retval, !dbg !17410
  ret i64* %33, !dbg !17410
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_div_words_r(i64* %q, i64* %r, i64 %hi, i64 %lo) #3 {
entry:
  %q.addr = alloca i64*, align 8
  %r.addr = alloca i64*, align 8
  %hi.addr = alloca i64, align 8
  %lo.addr = alloca i64, align 8
  %n_adj = alloca i64, align 8
  %h = alloca i64, align 8
  %l = alloca i64, align 8
  %t = alloca i64, align 8
  %n1_neg = alloca i64, align 8
  store i64* %q, i64** %q.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %q.addr, metadata !1967, metadata !2395), !dbg !17411
  store i64* %r, i64** %r.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %r.addr, metadata !1968, metadata !2395), !dbg !17412
  store i64 %hi, i64* %hi.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %hi.addr, metadata !1969, metadata !2395), !dbg !17413
  store i64 %lo, i64* %lo.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %lo.addr, metadata !1970, metadata !2395), !dbg !17414
  %0 = bitcast i64* %n_adj to i8*, !dbg !17415
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !17415
  call void @llvm.dbg.declare(metadata i64* %n_adj, metadata !1971, metadata !2395), !dbg !17416
  %1 = bitcast i64* %h to i8*, !dbg !17415
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !17415
  call void @llvm.dbg.declare(metadata i64* %h, metadata !1972, metadata !2395), !dbg !17417
  %2 = bitcast i64* %l to i8*, !dbg !17415
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !17415
  call void @llvm.dbg.declare(metadata i64* %l, metadata !1973, metadata !2395), !dbg !17418
  %3 = bitcast i64* %t to i8*, !dbg !17415
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !17415
  call void @llvm.dbg.declare(metadata i64* %t, metadata !1974, metadata !2395), !dbg !17419
  %4 = bitcast i64* %n1_neg to i8*, !dbg !17420
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !17420
  call void @llvm.dbg.declare(metadata i64* %n1_neg, metadata !1975, metadata !2395), !dbg !17421
  %5 = load i64, i64* %lo.addr, align 8, !dbg !17422, !tbaa !2391
  %and = and i64 %5, -9223372036854775808, !dbg !17423
  %tobool = icmp ne i64 %and, 0, !dbg !17424
  %cond = select i1 %tobool, i64 -1, i64 0, !dbg !17424
  store i64 %cond, i64* %n1_neg, align 8, !dbg !17425, !tbaa !2391
  %6 = load i64, i64* %lo.addr, align 8, !dbg !17426, !tbaa !2391
  %7 = load i64, i64* %n1_neg, align 8, !dbg !17427, !tbaa !2391
  %and1 = and i64 %7, -8446744073709551616, !dbg !17428
  %add = add i64 %6, %and1, !dbg !17429
  store i64 %add, i64* %n_adj, align 8, !dbg !17430, !tbaa !2391
  %8 = load i64, i64* @mprime_rdx, align 8, !dbg !17431, !tbaa !2391
  %9 = load i64, i64* %hi.addr, align 8, !dbg !17432, !tbaa !2391
  %10 = load i64, i64* %n1_neg, align 8, !dbg !17433, !tbaa !2391
  %sub = sub i64 %9, %10, !dbg !17434
  call void @_mpd_mul_words(i64* %h, i64* %l, i64 %8, i64 %sub), !dbg !17435
  %11 = load i64, i64* %l, align 8, !dbg !17436, !tbaa !2391
  %12 = load i64, i64* %n_adj, align 8, !dbg !17437, !tbaa !2391
  %add2 = add i64 %11, %12, !dbg !17438
  store i64 %add2, i64* %l, align 8, !dbg !17439, !tbaa !2391
  %13 = load i64, i64* %l, align 8, !dbg !17440, !tbaa !2391
  %14 = load i64, i64* %n_adj, align 8, !dbg !17442, !tbaa !2391
  %cmp = icmp ult i64 %13, %14, !dbg !17443
  br i1 %cmp, label %if.then, label %if.end, !dbg !17444

if.then:                                          ; preds = %entry
  %15 = load i64, i64* %h, align 8, !dbg !17445, !tbaa !2391
  %inc = add i64 %15, 1, !dbg !17445
  store i64 %inc, i64* %h, align 8, !dbg !17445, !tbaa !2391
  br label %if.end, !dbg !17447

if.end:                                           ; preds = %if.then, %entry
  %16 = load i64, i64* %h, align 8, !dbg !17448, !tbaa !2391
  %17 = load i64, i64* %hi.addr, align 8, !dbg !17449, !tbaa !2391
  %add3 = add i64 %16, %17, !dbg !17450
  store i64 %add3, i64* %t, align 8, !dbg !17451, !tbaa !2391
  %18 = load i64, i64* %t, align 8, !dbg !17452, !tbaa !2391
  %sub4 = sub i64 -1, %18, !dbg !17453
  store i64 %sub4, i64* %t, align 8, !dbg !17454, !tbaa !2391
  %19 = load i64, i64* %t, align 8, !dbg !17455, !tbaa !2391
  call void @_mpd_mul_words(i64* %h, i64* %l, i64 %19, i64 -8446744073709551616), !dbg !17456
  %20 = load i64, i64* %l, align 8, !dbg !17457, !tbaa !2391
  %21 = load i64, i64* %lo.addr, align 8, !dbg !17458, !tbaa !2391
  %add5 = add i64 %20, %21, !dbg !17459
  store i64 %add5, i64* %l, align 8, !dbg !17460, !tbaa !2391
  %22 = load i64, i64* %l, align 8, !dbg !17461, !tbaa !2391
  %23 = load i64, i64* %lo.addr, align 8, !dbg !17463, !tbaa !2391
  %cmp6 = icmp ult i64 %22, %23, !dbg !17464
  br i1 %cmp6, label %if.then.7, label %if.end.9, !dbg !17465

if.then.7:                                        ; preds = %if.end
  %24 = load i64, i64* %h, align 8, !dbg !17466, !tbaa !2391
  %inc8 = add i64 %24, 1, !dbg !17466
  store i64 %inc8, i64* %h, align 8, !dbg !17466, !tbaa !2391
  br label %if.end.9, !dbg !17468

if.end.9:                                         ; preds = %if.then.7, %if.end
  %25 = load i64, i64* %hi.addr, align 8, !dbg !17469, !tbaa !2391
  %26 = load i64, i64* %h, align 8, !dbg !17470, !tbaa !2391
  %add10 = add i64 %26, %25, !dbg !17470
  store i64 %add10, i64* %h, align 8, !dbg !17470, !tbaa !2391
  %27 = load i64, i64* %h, align 8, !dbg !17471, !tbaa !2391
  %sub11 = sub i64 %27, -8446744073709551616, !dbg !17471
  store i64 %sub11, i64* %h, align 8, !dbg !17471, !tbaa !2391
  %28 = load i64, i64* %h, align 8, !dbg !17472, !tbaa !2391
  %29 = load i64, i64* %t, align 8, !dbg !17473, !tbaa !2391
  %sub12 = sub i64 %28, %29, !dbg !17474
  %30 = load i64*, i64** %q.addr, align 8, !dbg !17475, !tbaa !2505
  store i64 %sub12, i64* %30, align 8, !dbg !17476, !tbaa !2391
  %31 = load i64, i64* %l, align 8, !dbg !17477, !tbaa !2391
  %32 = load i64, i64* %h, align 8, !dbg !17478, !tbaa !2391
  %and13 = and i64 -8446744073709551616, %32, !dbg !17479
  %add14 = add i64 %31, %and13, !dbg !17480
  %33 = load i64*, i64** %r.addr, align 8, !dbg !17481, !tbaa !2505
  store i64 %add14, i64* %33, align 8, !dbg !17482, !tbaa !2391
  %34 = bitcast i64* %n1_neg to i8*, !dbg !17483
  call void @llvm.lifetime.end(i64 8, i8* %34) #4, !dbg !17483
  %35 = bitcast i64* %t to i8*, !dbg !17483
  call void @llvm.lifetime.end(i64 8, i8* %35) #4, !dbg !17483
  %36 = bitcast i64* %l to i8*, !dbg !17483
  call void @llvm.lifetime.end(i64 8, i8* %36) #4, !dbg !17483
  %37 = bitcast i64* %h to i8*, !dbg !17483
  call void @llvm.lifetime.end(i64 8, i8* %37) #4, !dbg !17483
  %38 = bitcast i64* %n_adj to i8*, !dbg !17483
  call void @llvm.lifetime.end(i64 8, i8* %38) #4, !dbg !17483
  ret void, !dbg !17483
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @_kmul_resultsize(i64 %la, i64 %lb) #3 {
entry:
  %la.addr = alloca i64, align 8
  %lb.addr = alloca i64, align 8
  %n = alloca i64, align 8
  %m = alloca i64, align 8
  store i64 %la, i64* %la.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %la.addr, metadata !2003, metadata !2395), !dbg !17484
  store i64 %lb, i64* %lb.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %lb.addr, metadata !2004, metadata !2395), !dbg !17485
  %0 = bitcast i64* %n to i8*, !dbg !17486
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !17486
  call void @llvm.dbg.declare(metadata i64* %n, metadata !2005, metadata !2395), !dbg !17487
  %1 = bitcast i64* %m to i8*, !dbg !17486
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !17486
  call void @llvm.dbg.declare(metadata i64* %m, metadata !2006, metadata !2395), !dbg !17488
  %2 = load i64, i64* %la.addr, align 8, !dbg !17489, !tbaa !2391
  %3 = load i64, i64* %lb.addr, align 8, !dbg !17490, !tbaa !2391
  %call = call i64 @add_size_t(i64 %2, i64 %3), !dbg !17491
  store i64 %call, i64* %n, align 8, !dbg !17492, !tbaa !2391
  %4 = load i64, i64* %n, align 8, !dbg !17493, !tbaa !2391
  %call1 = call i64 @add_size_t(i64 %4, i64 1), !dbg !17494
  store i64 %call1, i64* %n, align 8, !dbg !17495, !tbaa !2391
  %5 = load i64, i64* %la.addr, align 8, !dbg !17496, !tbaa !2391
  %add = add i64 %5, 1, !dbg !17497
  %div = udiv i64 %add, 2, !dbg !17498
  %add2 = add i64 %div, 1, !dbg !17499
  store i64 %add2, i64* %m, align 8, !dbg !17500, !tbaa !2391
  %6 = load i64, i64* %m, align 8, !dbg !17501, !tbaa !2391
  %call3 = call i64 @mul_size_t(i64 %6, i64 3), !dbg !17502
  store i64 %call3, i64* %m, align 8, !dbg !17503, !tbaa !2391
  %7 = load i64, i64* %m, align 8, !dbg !17504, !tbaa !2391
  %8 = load i64, i64* %n, align 8, !dbg !17505, !tbaa !2391
  %cmp = icmp ugt i64 %7, %8, !dbg !17506
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !17507

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %m, align 8, !dbg !17508, !tbaa !2391
  br label %cond.end, !dbg !17507

cond.false:                                       ; preds = %entry
  %10 = load i64, i64* %n, align 8, !dbg !17510, !tbaa !2391
  br label %cond.end, !dbg !17507

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %9, %cond.true ], [ %10, %cond.false ], !dbg !17507
  %11 = bitcast i64* %m to i8*, !dbg !17512
  call void @llvm.lifetime.end(i64 8, i8* %11) #4, !dbg !17512
  %12 = bitcast i64* %n to i8*, !dbg !17512
  call void @llvm.lifetime.end(i64 8, i8* %12) #4, !dbg !17512
  ret i64 %cond, !dbg !17513
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @_kmul_worksize(i64 %n, i64 %lim) #3 {
entry:
  %retval = alloca i64, align 8
  %n.addr = alloca i64, align 8
  %lim.addr = alloca i64, align 8
  %m = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i64 %n, i64* %n.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !2019, metadata !2395), !dbg !17514
  store i64 %lim, i64* %lim.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %lim.addr, metadata !2020, metadata !2395), !dbg !17515
  %0 = bitcast i64* %m to i8*, !dbg !17516
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !17516
  call void @llvm.dbg.declare(metadata i64* %m, metadata !2021, metadata !2395), !dbg !17517
  %1 = load i64, i64* %n.addr, align 8, !dbg !17518, !tbaa !2391
  %2 = load i64, i64* %lim.addr, align 8, !dbg !17520, !tbaa !2391
  %cmp = icmp ule i64 %1, %2, !dbg !17521
  br i1 %cmp, label %if.then, label %if.end, !dbg !17522

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, !dbg !17523
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17523

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %n.addr, align 8, !dbg !17525, !tbaa !2391
  %add = add i64 %3, 1, !dbg !17526
  %div = udiv i64 %add, 2, !dbg !17527
  %add1 = add i64 %div, 1, !dbg !17528
  store i64 %add1, i64* %m, align 8, !dbg !17529, !tbaa !2391
  %4 = load i64, i64* %m, align 8, !dbg !17530, !tbaa !2391
  %call = call i64 @mul_size_t(i64 %4, i64 2), !dbg !17531
  %5 = load i64, i64* %m, align 8, !dbg !17532, !tbaa !2391
  %6 = load i64, i64* %lim.addr, align 8, !dbg !17533, !tbaa !2391
  %call2 = call i64 @_kmul_worksize(i64 %5, i64 %6), !dbg !17534
  %call3 = call i64 @add_size_t(i64 %call, i64 %call2), !dbg !17535
  store i64 %call3, i64* %retval, !dbg !17536
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17536

cleanup:                                          ; preds = %if.end, %if.then
  %7 = bitcast i64* %m to i8*, !dbg !17537
  call void @llvm.lifetime.end(i64 8, i8* %7) #4, !dbg !17537
  %8 = load i64, i64* %retval, !dbg !17537
  ret i64 %8, !dbg !17537
}

; Function Attrs: nounwind uwtable
define internal void @_karatsuba_rec(i64* %c, i64* %a, i64* %b, i64* %w, i64 %la, i64 %lb) #0 {
entry:
  %c.addr = alloca i64*, align 8
  %a.addr = alloca i64*, align 8
  %b.addr = alloca i64*, align 8
  %w.addr = alloca i64*, align 8
  %la.addr = alloca i64, align 8
  %lb.addr = alloca i64, align 8
  %m = alloca i64, align 8
  %lt = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i64* %c, i64** %c.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %c.addr, metadata !2026, metadata !2395), !dbg !17538
  store i64* %a, i64** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %a.addr, metadata !2027, metadata !2395), !dbg !17539
  store i64* %b, i64** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %b.addr, metadata !2028, metadata !2395), !dbg !17540
  store i64* %w, i64** %w.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %w.addr, metadata !2029, metadata !2395), !dbg !17541
  store i64 %la, i64* %la.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %la.addr, metadata !2030, metadata !2395), !dbg !17542
  store i64 %lb, i64* %lb.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %lb.addr, metadata !2031, metadata !2395), !dbg !17543
  %0 = bitcast i64* %m to i8*, !dbg !17544
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !17544
  call void @llvm.dbg.declare(metadata i64* %m, metadata !2032, metadata !2395), !dbg !17545
  %1 = bitcast i64* %lt to i8*, !dbg !17544
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !17544
  call void @llvm.dbg.declare(metadata i64* %lt, metadata !2033, metadata !2395), !dbg !17546
  %2 = load i64, i64* %la.addr, align 8, !dbg !17547, !tbaa !2391
  %cmp = icmp ule i64 %2, 16, !dbg !17549
  br i1 %cmp, label %if.then, label %if.end, !dbg !17550

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %c.addr, align 8, !dbg !17551, !tbaa !2505
  %4 = load i64*, i64** %a.addr, align 8, !dbg !17553, !tbaa !2505
  %5 = load i64*, i64** %b.addr, align 8, !dbg !17554, !tbaa !2505
  %6 = load i64, i64* %la.addr, align 8, !dbg !17555, !tbaa !2391
  %7 = load i64, i64* %lb.addr, align 8, !dbg !17556, !tbaa !2391
  call void @_mpd_basemul(i64* %3, i64* %4, i64* %5, i64 %6, i64 %7), !dbg !17557
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17558

if.end:                                           ; preds = %entry
  %8 = load i64, i64* %la.addr, align 8, !dbg !17559, !tbaa !2391
  %add = add i64 %8, 1, !dbg !17560
  %div = udiv i64 %add, 2, !dbg !17561
  store i64 %div, i64* %m, align 8, !dbg !17562, !tbaa !2391
  %9 = load i64, i64* %lb.addr, align 8, !dbg !17563, !tbaa !2391
  %10 = load i64, i64* %m, align 8, !dbg !17565, !tbaa !2391
  %cmp1 = icmp ule i64 %9, %10, !dbg !17566
  br i1 %cmp1, label %if.then.2, label %if.end.24, !dbg !17567

if.then.2:                                        ; preds = %if.end
  %11 = load i64, i64* %lb.addr, align 8, !dbg !17568, !tbaa !2391
  %12 = load i64, i64* %la.addr, align 8, !dbg !17571, !tbaa !2391
  %13 = load i64, i64* %m, align 8, !dbg !17572, !tbaa !2391
  %sub = sub i64 %12, %13, !dbg !17573
  %cmp3 = icmp ugt i64 %11, %sub, !dbg !17574
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !17575

if.then.4:                                        ; preds = %if.then.2
  %14 = load i64, i64* %lb.addr, align 8, !dbg !17576, !tbaa !2391
  %15 = load i64, i64* %lb.addr, align 8, !dbg !17578, !tbaa !2391
  %add5 = add i64 %14, %15, !dbg !17579
  %add6 = add i64 %add5, 1, !dbg !17580
  store i64 %add6, i64* %lt, align 8, !dbg !17581, !tbaa !2391
  %16 = load i64*, i64** %w.addr, align 8, !dbg !17582, !tbaa !2505
  %17 = load i64, i64* %lt, align 8, !dbg !17583, !tbaa !2391
  call void @mpd_uint_zero(i64* %16, i64 %17), !dbg !17584
  %18 = load i64*, i64** %w.addr, align 8, !dbg !17585, !tbaa !2505
  %19 = load i64*, i64** %b.addr, align 8, !dbg !17586, !tbaa !2505
  %20 = load i64*, i64** %a.addr, align 8, !dbg !17587, !tbaa !2505
  %21 = load i64, i64* %m, align 8, !dbg !17588, !tbaa !2391
  %add.ptr = getelementptr i64, i64* %20, i64 %21, !dbg !17589
  %22 = load i64*, i64** %w.addr, align 8, !dbg !17590, !tbaa !2505
  %23 = load i64, i64* %lt, align 8, !dbg !17591, !tbaa !2391
  %add.ptr7 = getelementptr i64, i64* %22, i64 %23, !dbg !17592
  %24 = load i64, i64* %lb.addr, align 8, !dbg !17593, !tbaa !2391
  %25 = load i64, i64* %la.addr, align 8, !dbg !17594, !tbaa !2391
  %26 = load i64, i64* %m, align 8, !dbg !17595, !tbaa !2391
  %sub8 = sub i64 %25, %26, !dbg !17596
  call void @_karatsuba_rec(i64* %18, i64* %19, i64* %add.ptr, i64* %add.ptr7, i64 %24, i64 %sub8), !dbg !17597
  br label %if.end.16, !dbg !17598

if.else:                                          ; preds = %if.then.2
  %27 = load i64, i64* %la.addr, align 8, !dbg !17599, !tbaa !2391
  %28 = load i64, i64* %m, align 8, !dbg !17601, !tbaa !2391
  %sub9 = sub i64 %27, %28, !dbg !17602
  %29 = load i64, i64* %la.addr, align 8, !dbg !17603, !tbaa !2391
  %30 = load i64, i64* %m, align 8, !dbg !17604, !tbaa !2391
  %sub10 = sub i64 %29, %30, !dbg !17605
  %add11 = add i64 %sub9, %sub10, !dbg !17606
  %add12 = add i64 %add11, 1, !dbg !17607
  store i64 %add12, i64* %lt, align 8, !dbg !17608, !tbaa !2391
  %31 = load i64*, i64** %w.addr, align 8, !dbg !17609, !tbaa !2505
  %32 = load i64, i64* %lt, align 8, !dbg !17610, !tbaa !2391
  call void @mpd_uint_zero(i64* %31, i64 %32), !dbg !17611
  %33 = load i64*, i64** %w.addr, align 8, !dbg !17612, !tbaa !2505
  %34 = load i64*, i64** %a.addr, align 8, !dbg !17613, !tbaa !2505
  %35 = load i64, i64* %m, align 8, !dbg !17614, !tbaa !2391
  %add.ptr13 = getelementptr i64, i64* %34, i64 %35, !dbg !17615
  %36 = load i64*, i64** %b.addr, align 8, !dbg !17616, !tbaa !2505
  %37 = load i64*, i64** %w.addr, align 8, !dbg !17617, !tbaa !2505
  %38 = load i64, i64* %lt, align 8, !dbg !17618, !tbaa !2391
  %add.ptr14 = getelementptr i64, i64* %37, i64 %38, !dbg !17619
  %39 = load i64, i64* %la.addr, align 8, !dbg !17620, !tbaa !2391
  %40 = load i64, i64* %m, align 8, !dbg !17621, !tbaa !2391
  %sub15 = sub i64 %39, %40, !dbg !17622
  %41 = load i64, i64* %lb.addr, align 8, !dbg !17623, !tbaa !2391
  call void @_karatsuba_rec(i64* %33, i64* %add.ptr13, i64* %36, i64* %add.ptr14, i64 %sub15, i64 %41), !dbg !17624
  br label %if.end.16

if.end.16:                                        ; preds = %if.else, %if.then.4
  %42 = load i64*, i64** %c.addr, align 8, !dbg !17625, !tbaa !2505
  %43 = load i64, i64* %m, align 8, !dbg !17626, !tbaa !2391
  %add.ptr17 = getelementptr i64, i64* %42, i64 %43, !dbg !17627
  %44 = load i64*, i64** %w.addr, align 8, !dbg !17628, !tbaa !2505
  %45 = load i64, i64* %la.addr, align 8, !dbg !17629, !tbaa !2391
  %46 = load i64, i64* %m, align 8, !dbg !17630, !tbaa !2391
  %sub18 = sub i64 %45, %46, !dbg !17631
  %47 = load i64, i64* %lb.addr, align 8, !dbg !17632, !tbaa !2391
  %add19 = add i64 %sub18, %47, !dbg !17633
  call void @_mpd_baseaddto(i64* %add.ptr17, i64* %44, i64 %add19), !dbg !17634
  %48 = load i64, i64* %m, align 8, !dbg !17635, !tbaa !2391
  %49 = load i64, i64* %m, align 8, !dbg !17636, !tbaa !2391
  %add20 = add i64 %48, %49, !dbg !17637
  %add21 = add i64 %add20, 1, !dbg !17638
  store i64 %add21, i64* %lt, align 8, !dbg !17639, !tbaa !2391
  %50 = load i64*, i64** %w.addr, align 8, !dbg !17640, !tbaa !2505
  %51 = load i64, i64* %lt, align 8, !dbg !17641, !tbaa !2391
  call void @mpd_uint_zero(i64* %50, i64 %51), !dbg !17642
  %52 = load i64*, i64** %w.addr, align 8, !dbg !17643, !tbaa !2505
  %53 = load i64*, i64** %a.addr, align 8, !dbg !17644, !tbaa !2505
  %54 = load i64*, i64** %b.addr, align 8, !dbg !17645, !tbaa !2505
  %55 = load i64*, i64** %w.addr, align 8, !dbg !17646, !tbaa !2505
  %56 = load i64, i64* %lt, align 8, !dbg !17647, !tbaa !2391
  %add.ptr22 = getelementptr i64, i64* %55, i64 %56, !dbg !17648
  %57 = load i64, i64* %m, align 8, !dbg !17649, !tbaa !2391
  %58 = load i64, i64* %lb.addr, align 8, !dbg !17650, !tbaa !2391
  call void @_karatsuba_rec(i64* %52, i64* %53, i64* %54, i64* %add.ptr22, i64 %57, i64 %58), !dbg !17651
  %59 = load i64*, i64** %c.addr, align 8, !dbg !17652, !tbaa !2505
  %60 = load i64*, i64** %w.addr, align 8, !dbg !17653, !tbaa !2505
  %61 = load i64, i64* %m, align 8, !dbg !17654, !tbaa !2391
  %62 = load i64, i64* %lb.addr, align 8, !dbg !17655, !tbaa !2391
  %add23 = add i64 %61, %62, !dbg !17656
  call void @_mpd_baseaddto(i64* %59, i64* %60, i64 %add23), !dbg !17657
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17658

if.end.24:                                        ; preds = %if.end
  %63 = load i64*, i64** %w.addr, align 8, !dbg !17659, !tbaa !2505
  %64 = bitcast i64* %63 to i8*, !dbg !17660
  %65 = load i64*, i64** %a.addr, align 8, !dbg !17661, !tbaa !2505
  %66 = bitcast i64* %65 to i8*, !dbg !17660
  %67 = load i64, i64* %m, align 8, !dbg !17662, !tbaa !2391
  %mul = mul i64 %67, 8, !dbg !17663
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %66, i64 %mul, i32 8, i1 false), !dbg !17660
  %68 = load i64, i64* %m, align 8, !dbg !17664, !tbaa !2391
  %69 = load i64*, i64** %w.addr, align 8, !dbg !17665, !tbaa !2505
  %arrayidx = getelementptr i64, i64* %69, i64 %68, !dbg !17665
  store i64 0, i64* %arrayidx, align 8, !dbg !17666, !tbaa !2391
  %70 = load i64*, i64** %w.addr, align 8, !dbg !17667, !tbaa !2505
  %71 = load i64*, i64** %a.addr, align 8, !dbg !17668, !tbaa !2505
  %72 = load i64, i64* %m, align 8, !dbg !17669, !tbaa !2391
  %add.ptr25 = getelementptr i64, i64* %71, i64 %72, !dbg !17670
  %73 = load i64, i64* %la.addr, align 8, !dbg !17671, !tbaa !2391
  %74 = load i64, i64* %m, align 8, !dbg !17672, !tbaa !2391
  %sub26 = sub i64 %73, %74, !dbg !17673
  call void @_mpd_baseaddto(i64* %70, i64* %add.ptr25, i64 %sub26), !dbg !17674
  %75 = load i64*, i64** %w.addr, align 8, !dbg !17675, !tbaa !2505
  %76 = load i64, i64* %m, align 8, !dbg !17676, !tbaa !2391
  %add27 = add i64 %76, 1, !dbg !17677
  %add.ptr28 = getelementptr i64, i64* %75, i64 %add27, !dbg !17678
  %77 = bitcast i64* %add.ptr28 to i8*, !dbg !17679
  %78 = load i64*, i64** %b.addr, align 8, !dbg !17680, !tbaa !2505
  %79 = bitcast i64* %78 to i8*, !dbg !17679
  %80 = load i64, i64* %m, align 8, !dbg !17681, !tbaa !2391
  %mul29 = mul i64 %80, 8, !dbg !17682
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %79, i64 %mul29, i32 8, i1 false), !dbg !17679
  %81 = load i64, i64* %m, align 8, !dbg !17683, !tbaa !2391
  %add30 = add i64 %81, 1, !dbg !17684
  %82 = load i64, i64* %m, align 8, !dbg !17685, !tbaa !2391
  %add31 = add i64 %add30, %82, !dbg !17686
  %83 = load i64*, i64** %w.addr, align 8, !dbg !17687, !tbaa !2505
  %arrayidx32 = getelementptr i64, i64* %83, i64 %add31, !dbg !17687
  store i64 0, i64* %arrayidx32, align 8, !dbg !17688, !tbaa !2391
  %84 = load i64*, i64** %w.addr, align 8, !dbg !17689, !tbaa !2505
  %85 = load i64, i64* %m, align 8, !dbg !17690, !tbaa !2391
  %add33 = add i64 %85, 1, !dbg !17691
  %add.ptr34 = getelementptr i64, i64* %84, i64 %add33, !dbg !17692
  %86 = load i64*, i64** %b.addr, align 8, !dbg !17693, !tbaa !2505
  %87 = load i64, i64* %m, align 8, !dbg !17694, !tbaa !2391
  %add.ptr35 = getelementptr i64, i64* %86, i64 %87, !dbg !17695
  %88 = load i64, i64* %lb.addr, align 8, !dbg !17696, !tbaa !2391
  %89 = load i64, i64* %m, align 8, !dbg !17697, !tbaa !2391
  %sub36 = sub i64 %88, %89, !dbg !17698
  call void @_mpd_baseaddto(i64* %add.ptr34, i64* %add.ptr35, i64 %sub36), !dbg !17699
  %90 = load i64*, i64** %c.addr, align 8, !dbg !17700, !tbaa !2505
  %91 = load i64, i64* %m, align 8, !dbg !17701, !tbaa !2391
  %add.ptr37 = getelementptr i64, i64* %90, i64 %91, !dbg !17702
  %92 = load i64*, i64** %w.addr, align 8, !dbg !17703, !tbaa !2505
  %93 = load i64*, i64** %w.addr, align 8, !dbg !17704, !tbaa !2505
  %94 = load i64, i64* %m, align 8, !dbg !17705, !tbaa !2391
  %add38 = add i64 %94, 1, !dbg !17706
  %add.ptr39 = getelementptr i64, i64* %93, i64 %add38, !dbg !17707
  %95 = load i64*, i64** %w.addr, align 8, !dbg !17708, !tbaa !2505
  %96 = load i64, i64* %m, align 8, !dbg !17709, !tbaa !2391
  %add40 = add i64 %96, 1, !dbg !17710
  %mul41 = mul i64 2, %add40, !dbg !17711
  %add.ptr42 = getelementptr i64, i64* %95, i64 %mul41, !dbg !17712
  %97 = load i64, i64* %m, align 8, !dbg !17713, !tbaa !2391
  %add43 = add i64 %97, 1, !dbg !17714
  %98 = load i64, i64* %m, align 8, !dbg !17715, !tbaa !2391
  %add44 = add i64 %98, 1, !dbg !17716
  call void @_karatsuba_rec(i64* %add.ptr37, i64* %92, i64* %add.ptr39, i64* %add.ptr42, i64 %add43, i64 %add44), !dbg !17717
  %99 = load i64, i64* %la.addr, align 8, !dbg !17718, !tbaa !2391
  %100 = load i64, i64* %m, align 8, !dbg !17719, !tbaa !2391
  %sub45 = sub i64 %99, %100, !dbg !17720
  %101 = load i64, i64* %la.addr, align 8, !dbg !17721, !tbaa !2391
  %102 = load i64, i64* %m, align 8, !dbg !17722, !tbaa !2391
  %sub46 = sub i64 %101, %102, !dbg !17723
  %add47 = add i64 %sub45, %sub46, !dbg !17724
  %add48 = add i64 %add47, 1, !dbg !17725
  store i64 %add48, i64* %lt, align 8, !dbg !17726, !tbaa !2391
  %103 = load i64*, i64** %w.addr, align 8, !dbg !17727, !tbaa !2505
  %104 = load i64, i64* %lt, align 8, !dbg !17728, !tbaa !2391
  call void @mpd_uint_zero(i64* %103, i64 %104), !dbg !17729
  %105 = load i64*, i64** %w.addr, align 8, !dbg !17730, !tbaa !2505
  %106 = load i64*, i64** %a.addr, align 8, !dbg !17731, !tbaa !2505
  %107 = load i64, i64* %m, align 8, !dbg !17732, !tbaa !2391
  %add.ptr49 = getelementptr i64, i64* %106, i64 %107, !dbg !17733
  %108 = load i64*, i64** %b.addr, align 8, !dbg !17734, !tbaa !2505
  %109 = load i64, i64* %m, align 8, !dbg !17735, !tbaa !2391
  %add.ptr50 = getelementptr i64, i64* %108, i64 %109, !dbg !17736
  %110 = load i64*, i64** %w.addr, align 8, !dbg !17737, !tbaa !2505
  %111 = load i64, i64* %lt, align 8, !dbg !17738, !tbaa !2391
  %add.ptr51 = getelementptr i64, i64* %110, i64 %111, !dbg !17739
  %112 = load i64, i64* %la.addr, align 8, !dbg !17740, !tbaa !2391
  %113 = load i64, i64* %m, align 8, !dbg !17741, !tbaa !2391
  %sub52 = sub i64 %112, %113, !dbg !17742
  %114 = load i64, i64* %lb.addr, align 8, !dbg !17743, !tbaa !2391
  %115 = load i64, i64* %m, align 8, !dbg !17744, !tbaa !2391
  %sub53 = sub i64 %114, %115, !dbg !17745
  call void @_karatsuba_rec(i64* %105, i64* %add.ptr49, i64* %add.ptr50, i64* %add.ptr51, i64 %sub52, i64 %sub53), !dbg !17746
  %116 = load i64*, i64** %c.addr, align 8, !dbg !17747, !tbaa !2505
  %117 = load i64, i64* %m, align 8, !dbg !17748, !tbaa !2391
  %mul54 = mul i64 2, %117, !dbg !17749
  %add.ptr55 = getelementptr i64, i64* %116, i64 %mul54, !dbg !17750
  %118 = load i64*, i64** %w.addr, align 8, !dbg !17751, !tbaa !2505
  %119 = load i64, i64* %la.addr, align 8, !dbg !17752, !tbaa !2391
  %120 = load i64, i64* %m, align 8, !dbg !17753, !tbaa !2391
  %sub56 = sub i64 %119, %120, !dbg !17754
  %121 = load i64, i64* %lb.addr, align 8, !dbg !17755, !tbaa !2391
  %122 = load i64, i64* %m, align 8, !dbg !17756, !tbaa !2391
  %sub57 = sub i64 %121, %122, !dbg !17757
  %add58 = add i64 %sub56, %sub57, !dbg !17758
  call void @_mpd_baseaddto(i64* %add.ptr55, i64* %118, i64 %add58), !dbg !17759
  %123 = load i64*, i64** %c.addr, align 8, !dbg !17760, !tbaa !2505
  %124 = load i64, i64* %m, align 8, !dbg !17761, !tbaa !2391
  %add.ptr59 = getelementptr i64, i64* %123, i64 %124, !dbg !17762
  %125 = load i64*, i64** %w.addr, align 8, !dbg !17763, !tbaa !2505
  %126 = load i64, i64* %la.addr, align 8, !dbg !17764, !tbaa !2391
  %127 = load i64, i64* %m, align 8, !dbg !17765, !tbaa !2391
  %sub60 = sub i64 %126, %127, !dbg !17766
  %128 = load i64, i64* %lb.addr, align 8, !dbg !17767, !tbaa !2391
  %129 = load i64, i64* %m, align 8, !dbg !17768, !tbaa !2391
  %sub61 = sub i64 %128, %129, !dbg !17769
  %add62 = add i64 %sub60, %sub61, !dbg !17770
  call void @_mpd_basesubfrom(i64* %add.ptr59, i64* %125, i64 %add62), !dbg !17771
  %130 = load i64, i64* %m, align 8, !dbg !17772, !tbaa !2391
  %131 = load i64, i64* %m, align 8, !dbg !17773, !tbaa !2391
  %add63 = add i64 %130, %131, !dbg !17774
  %add64 = add i64 %add63, 1, !dbg !17775
  store i64 %add64, i64* %lt, align 8, !dbg !17776, !tbaa !2391
  %132 = load i64*, i64** %w.addr, align 8, !dbg !17777, !tbaa !2505
  %133 = load i64, i64* %lt, align 8, !dbg !17778, !tbaa !2391
  call void @mpd_uint_zero(i64* %132, i64 %133), !dbg !17779
  %134 = load i64*, i64** %w.addr, align 8, !dbg !17780, !tbaa !2505
  %135 = load i64*, i64** %a.addr, align 8, !dbg !17781, !tbaa !2505
  %136 = load i64*, i64** %b.addr, align 8, !dbg !17782, !tbaa !2505
  %137 = load i64*, i64** %w.addr, align 8, !dbg !17783, !tbaa !2505
  %138 = load i64, i64* %lt, align 8, !dbg !17784, !tbaa !2391
  %add.ptr65 = getelementptr i64, i64* %137, i64 %138, !dbg !17785
  %139 = load i64, i64* %m, align 8, !dbg !17786, !tbaa !2391
  %140 = load i64, i64* %m, align 8, !dbg !17787, !tbaa !2391
  call void @_karatsuba_rec(i64* %134, i64* %135, i64* %136, i64* %add.ptr65, i64 %139, i64 %140), !dbg !17788
  %141 = load i64*, i64** %c.addr, align 8, !dbg !17789, !tbaa !2505
  %142 = load i64*, i64** %w.addr, align 8, !dbg !17790, !tbaa !2505
  %143 = load i64, i64* %m, align 8, !dbg !17791, !tbaa !2391
  %144 = load i64, i64* %m, align 8, !dbg !17792, !tbaa !2391
  %add66 = add i64 %143, %144, !dbg !17793
  call void @_mpd_baseaddto(i64* %141, i64* %142, i64 %add66), !dbg !17794
  %145 = load i64*, i64** %c.addr, align 8, !dbg !17795, !tbaa !2505
  %146 = load i64, i64* %m, align 8, !dbg !17796, !tbaa !2391
  %add.ptr67 = getelementptr i64, i64* %145, i64 %146, !dbg !17797
  %147 = load i64*, i64** %w.addr, align 8, !dbg !17798, !tbaa !2505
  %148 = load i64, i64* %m, align 8, !dbg !17799, !tbaa !2391
  %149 = load i64, i64* %m, align 8, !dbg !17800, !tbaa !2391
  %add68 = add i64 %148, %149, !dbg !17801
  call void @_mpd_basesubfrom(i64* %add.ptr67, i64* %147, i64 %add68), !dbg !17802
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17803

cleanup:                                          ; preds = %if.end.24, %if.end.16, %if.then
  %150 = bitcast i64* %lt to i8*, !dbg !17804
  call void @llvm.lifetime.end(i64 8, i8* %150) #4, !dbg !17804
  %151 = bitcast i64* %m to i8*, !dbg !17804
  call void @llvm.lifetime.end(i64 8, i8* %151) #4, !dbg !17804
  ret void, !dbg !17804
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @add_size_t(i64 %a, i64 %b) #3 {
entry:
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  store i64 %a, i64* %a.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !2009, metadata !2395), !dbg !17805
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !2010, metadata !2395), !dbg !17806
  %0 = load i64, i64* %a.addr, align 8, !dbg !17807, !tbaa !2391
  %1 = load i64, i64* %b.addr, align 8, !dbg !17809, !tbaa !2391
  %sub = sub i64 -1, %1, !dbg !17810
  %cmp = icmp ugt i64 %0, %sub, !dbg !17811
  br i1 %cmp, label %if.then, label %if.end, !dbg !17812

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !17813

do.body:                                          ; preds = %if.then
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !17815, !tbaa !2505
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.15, i32 0, i32 0), i32 595), !dbg !17818
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !17819, !tbaa !2505
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i32 0, i32 0)), !dbg !17820
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !17821, !tbaa !2505
  %call2 = call i32 @fputc(i32 10, %struct._IO_FILE* %4), !dbg !17822
  call void @abort() #9, !dbg !17823
  unreachable, !dbg !17823

do.end:                                           ; No predecessors!
  br label %if.end, !dbg !17824

if.end:                                           ; preds = %do.end, %entry
  %5 = load i64, i64* %a.addr, align 8, !dbg !17825, !tbaa !2391
  %6 = load i64, i64* %b.addr, align 8, !dbg !17826, !tbaa !2391
  %add = add i64 %5, %6, !dbg !17827
  ret i64 %add, !dbg !17828
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @mul_size_t(i64 %a, i64 %b) #3 {
entry:
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %hi = alloca i64, align 8
  %lo = alloca i64, align 8
  store i64 %a, i64* %a.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !2013, metadata !2395), !dbg !17829
  store i64 %b, i64* %b.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !2014, metadata !2395), !dbg !17830
  %0 = bitcast i64* %hi to i8*, !dbg !17831
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !17831
  call void @llvm.dbg.declare(metadata i64* %hi, metadata !2015, metadata !2395), !dbg !17832
  %1 = bitcast i64* %lo to i8*, !dbg !17831
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !17831
  call void @llvm.dbg.declare(metadata i64* %lo, metadata !2016, metadata !2395), !dbg !17833
  %2 = load i64, i64* %a.addr, align 8, !dbg !17834, !tbaa !2391
  %3 = load i64, i64* %b.addr, align 8, !dbg !17835, !tbaa !2391
  call void @_mpd_mul_words(i64* %hi, i64* %lo, i64 %2, i64 %3), !dbg !17836
  %4 = load i64, i64* %hi, align 8, !dbg !17837, !tbaa !2391
  %tobool = icmp ne i64 %4, 0, !dbg !17837
  br i1 %tobool, label %if.then, label %if.end, !dbg !17839

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !17840

do.body:                                          ; preds = %if.then
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !17842, !tbaa !2505
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.15, i32 0, i32 0), i32 620), !dbg !17845
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !17846, !tbaa !2505
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i32 0, i32 0)), !dbg !17847
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !17848, !tbaa !2505
  %call2 = call i32 @fputc(i32 10, %struct._IO_FILE* %7), !dbg !17849
  call void @abort() #9, !dbg !17850
  unreachable, !dbg !17850

do.cond:                                          ; No predecessors!
  br label %do.end, !dbg !17851

do.end:                                           ; preds = %do.cond
  br label %if.end, !dbg !17852

if.end:                                           ; preds = %do.end, %entry
  %8 = load i64, i64* %lo, align 8, !dbg !17853, !tbaa !2391
  %9 = bitcast i64* %lo to i8*, !dbg !17854
  call void @llvm.lifetime.end(i64 8, i8* %9) #4, !dbg !17854
  %10 = bitcast i64* %hi to i8*, !dbg !17854
  call void @llvm.lifetime.end(i64 8, i8* %10) #4, !dbg !17854
  ret i64 %8, !dbg !17855
}

declare hidden void @_mpd_baseaddto(i64*, i64*, i64) #5

declare hidden void @_mpd_basesubfrom(i64*, i64*, i64) #5

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @_mpd_get_transform_len(i64 %rsize) #3 {
entry:
  %retval = alloca i64, align 8
  %rsize.addr = alloca i64, align 8
  %log2rsize = alloca i64, align 8
  %x = alloca i64, align 8
  %step = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i64 %rsize, i64* %rsize.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %rsize.addr, metadata !2050, metadata !2395), !dbg !17856
  %0 = bitcast i64* %log2rsize to i8*, !dbg !17857
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !17857
  call void @llvm.dbg.declare(metadata i64* %log2rsize, metadata !2051, metadata !2395), !dbg !17858
  %1 = bitcast i64* %x to i8*, !dbg !17859
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !17859
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2052, metadata !2395), !dbg !17860
  %2 = bitcast i64* %step to i8*, !dbg !17859
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !17859
  call void @llvm.dbg.declare(metadata i64* %step, metadata !2053, metadata !2395), !dbg !17861
  %3 = load i64, i64* %rsize.addr, align 8, !dbg !17862, !tbaa !2391
  %call = call i32 @mpd_bsr(i64 %3), !dbg !17863
  %conv = sext i32 %call to i64, !dbg !17863
  store i64 %conv, i64* %log2rsize, align 8, !dbg !17864, !tbaa !2391
  %4 = load i64, i64* %rsize.addr, align 8, !dbg !17865, !tbaa !2391
  %cmp = icmp ule i64 %4, 1024, !dbg !17867
  br i1 %cmp, label %if.then, label %if.else, !dbg !17868

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %log2rsize, align 8, !dbg !17869, !tbaa !2391
  %shl = shl i64 1, %5, !dbg !17871
  store i64 %shl, i64* %x, align 8, !dbg !17872, !tbaa !2391
  %6 = load i64, i64* %rsize.addr, align 8, !dbg !17873, !tbaa !2391
  %7 = load i64, i64* %x, align 8, !dbg !17874, !tbaa !2391
  %cmp2 = icmp eq i64 %6, %7, !dbg !17875
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !17876

cond.true:                                        ; preds = %if.then
  %8 = load i64, i64* %x, align 8, !dbg !17877, !tbaa !2391
  br label %cond.end, !dbg !17876

cond.false:                                       ; preds = %if.then
  %9 = load i64, i64* %x, align 8, !dbg !17879, !tbaa !2391
  %shl4 = shl i64 %9, 1, !dbg !17881
  br label %cond.end, !dbg !17876

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %8, %cond.true ], [ %shl4, %cond.false ], !dbg !17876
  store i64 %cond, i64* %retval, !dbg !17882
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17885

if.else:                                          ; preds = %entry
  %10 = load i64, i64* %rsize.addr, align 8, !dbg !17886, !tbaa !2391
  %cmp5 = icmp ule i64 %10, 4294967296, !dbg !17888
  br i1 %cmp5, label %if.then.7, label %if.else.19, !dbg !17889

if.then.7:                                        ; preds = %if.else
  %11 = load i64, i64* %log2rsize, align 8, !dbg !17890, !tbaa !2391
  %shl8 = shl i64 1, %11, !dbg !17892
  store i64 %shl8, i64* %x, align 8, !dbg !17893, !tbaa !2391
  %12 = load i64, i64* %rsize.addr, align 8, !dbg !17894, !tbaa !2391
  %13 = load i64, i64* %x, align 8, !dbg !17896, !tbaa !2391
  %cmp9 = icmp eq i64 %12, %13, !dbg !17897
  br i1 %cmp9, label %if.then.11, label %if.end, !dbg !17898

if.then.11:                                       ; preds = %if.then.7
  %14 = load i64, i64* %x, align 8, !dbg !17899, !tbaa !2391
  store i64 %14, i64* %retval, !dbg !17901
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17901

if.end:                                           ; preds = %if.then.7
  %15 = load i64, i64* %x, align 8, !dbg !17902, !tbaa !2391
  %shr = lshr i64 %15, 1, !dbg !17903
  store i64 %shr, i64* %step, align 8, !dbg !17904, !tbaa !2391
  %16 = load i64, i64* %step, align 8, !dbg !17905, !tbaa !2391
  %17 = load i64, i64* %x, align 8, !dbg !17906, !tbaa !2391
  %add = add i64 %17, %16, !dbg !17906
  store i64 %add, i64* %x, align 8, !dbg !17906, !tbaa !2391
  %18 = load i64, i64* %rsize.addr, align 8, !dbg !17907, !tbaa !2391
  %19 = load i64, i64* %x, align 8, !dbg !17908, !tbaa !2391
  %cmp12 = icmp ule i64 %18, %19, !dbg !17909
  br i1 %cmp12, label %cond.true.14, label %cond.false.15, !dbg !17910

cond.true.14:                                     ; preds = %if.end
  %20 = load i64, i64* %x, align 8, !dbg !17911, !tbaa !2391
  br label %cond.end.17, !dbg !17910

cond.false.15:                                    ; preds = %if.end
  %21 = load i64, i64* %x, align 8, !dbg !17913, !tbaa !2391
  %22 = load i64, i64* %step, align 8, !dbg !17915, !tbaa !2391
  %add16 = add i64 %21, %22, !dbg !17916
  br label %cond.end.17, !dbg !17910

cond.end.17:                                      ; preds = %cond.false.15, %cond.true.14
  %cond18 = phi i64 [ %20, %cond.true.14 ], [ %add16, %cond.false.15 ], !dbg !17910
  store i64 %cond18, i64* %retval, !dbg !17917
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17920

if.else.19:                                       ; preds = %if.else
  %23 = load i64, i64* %rsize.addr, align 8, !dbg !17921, !tbaa !2391
  %cmp20 = icmp ule i64 %23, 6442450944, !dbg !17923
  br i1 %cmp20, label %if.then.22, label %if.else.23, !dbg !17924

if.then.22:                                       ; preds = %if.else.19
  store i64 6442450944, i64* %retval, !dbg !17925
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17925

if.else.23:                                       ; preds = %if.else.19
  %24 = load i64, i64* %rsize.addr, align 8, !dbg !17927, !tbaa !2391
  %cmp24 = icmp ule i64 %24, 12884901888, !dbg !17929
  br i1 %cmp24, label %if.then.26, label %if.else.27, !dbg !17930

if.then.26:                                       ; preds = %if.else.23
  store i64 12884901888, i64* %retval, !dbg !17931
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17931

if.else.27:                                       ; preds = %if.else.23
  store i64 -1, i64* %retval, !dbg !17933
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17933

cleanup:                                          ; preds = %if.else.27, %if.then.26, %if.then.22, %cond.end.17, %if.then.11, %cond.end
  %25 = bitcast i64* %step to i8*, !dbg !17935
  call void @llvm.lifetime.end(i64 8, i8* %25) #4, !dbg !17935
  %26 = bitcast i64* %x to i8*, !dbg !17935
  call void @llvm.lifetime.end(i64 8, i8* %26) #4, !dbg !17935
  %27 = bitcast i64* %log2rsize to i8*, !dbg !17935
  call void @llvm.lifetime.end(i64 8, i8* %27) #4, !dbg !17935
  %28 = load i64, i64* %retval, !dbg !17935
  ret i64 %28, !dbg !17935
}

declare hidden i32 @fnt_autoconvolute(i64*, i64, i32) #5

declare hidden i32 @fnt_convolute(i64*, i64*, i64, i32) #5

declare hidden void @crt3(i64*, i64*, i64*, i64) #5

; Function Attrs: nounwind uwtable
define internal i32 @_karatsuba_rec_fnt(i64* %c, i64* %a, i64* %b, i64* %w, i64 %la, i64 %lb) #0 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i64*, align 8
  %a.addr = alloca i64*, align 8
  %b.addr = alloca i64*, align 8
  %w.addr = alloca i64*, align 8
  %la.addr = alloca i64, align 8
  %lb.addr = alloca i64, align 8
  %m = alloca i64, align 8
  %lt = alloca i64, align 8
  %result = alloca i64*, align 8
  %dummy = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store i64* %c, i64** %c.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %c.addr, metadata !2068, metadata !2395), !dbg !17936
  store i64* %a, i64** %a.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %a.addr, metadata !2069, metadata !2395), !dbg !17937
  store i64* %b, i64** %b.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %b.addr, metadata !2070, metadata !2395), !dbg !17938
  store i64* %w, i64** %w.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %w.addr, metadata !2071, metadata !2395), !dbg !17939
  store i64 %la, i64* %la.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %la.addr, metadata !2072, metadata !2395), !dbg !17940
  store i64 %lb, i64* %lb.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %lb.addr, metadata !2073, metadata !2395), !dbg !17941
  %0 = bitcast i64* %m to i8*, !dbg !17942
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !17942
  call void @llvm.dbg.declare(metadata i64* %m, metadata !2074, metadata !2395), !dbg !17943
  %1 = bitcast i64* %lt to i8*, !dbg !17942
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !17942
  call void @llvm.dbg.declare(metadata i64* %lt, metadata !2075, metadata !2395), !dbg !17944
  %2 = load i64, i64* %la.addr, align 8, !dbg !17945, !tbaa !2391
  %cmp = icmp ule i64 %2, 6442450944, !dbg !17946
  br i1 %cmp, label %if.then, label %if.end.7, !dbg !17947

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %lb.addr, align 8, !dbg !17948, !tbaa !2391
  %cmp1 = icmp ule i64 %3, 192, !dbg !17949
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !17950

if.then.2:                                        ; preds = %if.then
  %4 = load i64*, i64** %c.addr, align 8, !dbg !17951, !tbaa !2505
  %5 = load i64*, i64** %b.addr, align 8, !dbg !17953, !tbaa !2505
  %6 = load i64*, i64** %a.addr, align 8, !dbg !17954, !tbaa !2505
  %7 = load i64, i64* %lb.addr, align 8, !dbg !17955, !tbaa !2391
  %8 = load i64, i64* %la.addr, align 8, !dbg !17956, !tbaa !2391
  call void @_mpd_basemul(i64* %4, i64* %5, i64* %6, i64 %7, i64 %8), !dbg !17957
  br label %if.end.6, !dbg !17958

if.else:                                          ; preds = %if.then
  %9 = bitcast i64** %result to i8*, !dbg !17959
  call void @llvm.lifetime.start(i64 8, i8* %9) #4, !dbg !17959
  call void @llvm.dbg.declare(metadata i64** %result, metadata !2076, metadata !2395), !dbg !17960
  %10 = bitcast i64* %dummy to i8*, !dbg !17961
  call void @llvm.lifetime.start(i64 8, i8* %10) #4, !dbg !17961
  call void @llvm.dbg.declare(metadata i64* %dummy, metadata !2081, metadata !2395), !dbg !17962
  %11 = load i64*, i64** %a.addr, align 8, !dbg !17963, !tbaa !2505
  %12 = load i64*, i64** %b.addr, align 8, !dbg !17965, !tbaa !2505
  %13 = load i64, i64* %la.addr, align 8, !dbg !17966, !tbaa !2391
  %14 = load i64, i64* %lb.addr, align 8, !dbg !17967, !tbaa !2391
  %call = call i64* @_mpd_fntmul(i64* %11, i64* %12, i64 %13, i64 %14, i64* %dummy), !dbg !17968
  store i64* %call, i64** %result, align 8, !dbg !17969, !tbaa !2505
  %cmp3 = icmp eq i64* %call, null, !dbg !17970
  br i1 %cmp3, label %if.then.4, label %if.end, !dbg !17971

if.then.4:                                        ; preds = %if.else
  store i32 0, i32* %retval, !dbg !17972
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !17972

if.end:                                           ; preds = %if.else
  %15 = load i64*, i64** %c.addr, align 8, !dbg !17974, !tbaa !2505
  %16 = bitcast i64* %15 to i8*, !dbg !17975
  %17 = load i64*, i64** %result, align 8, !dbg !17976, !tbaa !2505
  %18 = bitcast i64* %17 to i8*, !dbg !17975
  %19 = load i64, i64* %la.addr, align 8, !dbg !17977, !tbaa !2391
  %20 = load i64, i64* %lb.addr, align 8, !dbg !17978, !tbaa !2391
  %add = add i64 %19, %20, !dbg !17979
  %mul = mul i64 %add, 8, !dbg !17980
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %18, i64 %mul, i32 8, i1 false), !dbg !17975
  %21 = load void (i8*)*, void (i8*)** @mpd_free, align 8, !dbg !17981, !tbaa !2505
  %22 = load i64*, i64** %result, align 8, !dbg !17982, !tbaa !2505
  %23 = bitcast i64* %22 to i8*, !dbg !17982
  call void %21(i8* %23), !dbg !17981
  store i32 0, i32* %cleanup.dest.slot, !dbg !17983
  br label %cleanup, !dbg !17983

cleanup:                                          ; preds = %if.end, %if.then.4
  %24 = bitcast i64* %dummy to i8*, !dbg !17984
  call void @llvm.lifetime.end(i64 8, i8* %24) #4, !dbg !17984
  %25 = bitcast i64** %result to i8*, !dbg !17984
  call void @llvm.lifetime.end(i64 8, i8* %25) #4, !dbg !17984
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.6

if.end.6:                                         ; preds = %cleanup.cont, %if.then.2
  store i32 1, i32* %retval, !dbg !17986
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102, !dbg !17986

if.end.7:                                         ; preds = %entry
  %26 = load i64, i64* %la.addr, align 8, !dbg !17987, !tbaa !2391
  %add8 = add i64 %26, 1, !dbg !17988
  %div = udiv i64 %add8, 2, !dbg !17989
  store i64 %div, i64* %m, align 8, !dbg !17990, !tbaa !2391
  %27 = load i64, i64* %lb.addr, align 8, !dbg !17991, !tbaa !2391
  %28 = load i64, i64* %m, align 8, !dbg !17993, !tbaa !2391
  %cmp9 = icmp ule i64 %27, %28, !dbg !17994
  br i1 %cmp9, label %if.then.10, label %if.end.44, !dbg !17995

if.then.10:                                       ; preds = %if.end.7
  %29 = load i64, i64* %lb.addr, align 8, !dbg !17996, !tbaa !2391
  %30 = load i64, i64* %la.addr, align 8, !dbg !17999, !tbaa !2391
  %31 = load i64, i64* %m, align 8, !dbg !18000, !tbaa !2391
  %sub = sub i64 %30, %31, !dbg !18001
  %cmp11 = icmp ugt i64 %29, %sub, !dbg !18002
  br i1 %cmp11, label %if.then.12, label %if.else.20, !dbg !18003

if.then.12:                                       ; preds = %if.then.10
  %32 = load i64, i64* %lb.addr, align 8, !dbg !18004, !tbaa !2391
  %33 = load i64, i64* %lb.addr, align 8, !dbg !18006, !tbaa !2391
  %add13 = add i64 %32, %33, !dbg !18007
  %add14 = add i64 %add13, 1, !dbg !18008
  store i64 %add14, i64* %lt, align 8, !dbg !18009, !tbaa !2391
  %34 = load i64*, i64** %w.addr, align 8, !dbg !18010, !tbaa !2505
  %35 = load i64, i64* %lt, align 8, !dbg !18011, !tbaa !2391
  call void @mpd_uint_zero(i64* %34, i64 %35), !dbg !18012
  %36 = load i64*, i64** %w.addr, align 8, !dbg !18013, !tbaa !2505
  %37 = load i64*, i64** %b.addr, align 8, !dbg !18015, !tbaa !2505
  %38 = load i64*, i64** %a.addr, align 8, !dbg !18016, !tbaa !2505
  %39 = load i64, i64* %m, align 8, !dbg !18017, !tbaa !2391
  %add.ptr = getelementptr i64, i64* %38, i64 %39, !dbg !18018
  %40 = load i64*, i64** %w.addr, align 8, !dbg !18019, !tbaa !2505
  %41 = load i64, i64* %lt, align 8, !dbg !18020, !tbaa !2391
  %add.ptr15 = getelementptr i64, i64* %40, i64 %41, !dbg !18021
  %42 = load i64, i64* %lb.addr, align 8, !dbg !18022, !tbaa !2391
  %43 = load i64, i64* %la.addr, align 8, !dbg !18023, !tbaa !2391
  %44 = load i64, i64* %m, align 8, !dbg !18024, !tbaa !2391
  %sub16 = sub i64 %43, %44, !dbg !18025
  %call17 = call i32 @_karatsuba_rec_fnt(i64* %36, i64* %37, i64* %add.ptr, i64* %add.ptr15, i64 %42, i64 %sub16), !dbg !18026
  %tobool = icmp ne i32 %call17, 0, !dbg !18026
  br i1 %tobool, label %if.end.19, label %if.then.18, !dbg !18027

if.then.18:                                       ; preds = %if.then.12
  store i32 0, i32* %retval, !dbg !18028
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102, !dbg !18028

if.end.19:                                        ; preds = %if.then.12
  br label %if.end.32, !dbg !18030

if.else.20:                                       ; preds = %if.then.10
  %45 = load i64, i64* %la.addr, align 8, !dbg !18031, !tbaa !2391
  %46 = load i64, i64* %m, align 8, !dbg !18033, !tbaa !2391
  %sub21 = sub i64 %45, %46, !dbg !18034
  %47 = load i64, i64* %la.addr, align 8, !dbg !18035, !tbaa !2391
  %48 = load i64, i64* %m, align 8, !dbg !18036, !tbaa !2391
  %sub22 = sub i64 %47, %48, !dbg !18037
  %add23 = add i64 %sub21, %sub22, !dbg !18038
  %add24 = add i64 %add23, 1, !dbg !18039
  store i64 %add24, i64* %lt, align 8, !dbg !18040, !tbaa !2391
  %49 = load i64*, i64** %w.addr, align 8, !dbg !18041, !tbaa !2505
  %50 = load i64, i64* %lt, align 8, !dbg !18042, !tbaa !2391
  call void @mpd_uint_zero(i64* %49, i64 %50), !dbg !18043
  %51 = load i64*, i64** %w.addr, align 8, !dbg !18044, !tbaa !2505
  %52 = load i64*, i64** %a.addr, align 8, !dbg !18046, !tbaa !2505
  %53 = load i64, i64* %m, align 8, !dbg !18047, !tbaa !2391
  %add.ptr25 = getelementptr i64, i64* %52, i64 %53, !dbg !18048
  %54 = load i64*, i64** %b.addr, align 8, !dbg !18049, !tbaa !2505
  %55 = load i64*, i64** %w.addr, align 8, !dbg !18050, !tbaa !2505
  %56 = load i64, i64* %lt, align 8, !dbg !18051, !tbaa !2391
  %add.ptr26 = getelementptr i64, i64* %55, i64 %56, !dbg !18052
  %57 = load i64, i64* %la.addr, align 8, !dbg !18053, !tbaa !2391
  %58 = load i64, i64* %m, align 8, !dbg !18054, !tbaa !2391
  %sub27 = sub i64 %57, %58, !dbg !18055
  %59 = load i64, i64* %lb.addr, align 8, !dbg !18056, !tbaa !2391
  %call28 = call i32 @_karatsuba_rec_fnt(i64* %51, i64* %add.ptr25, i64* %54, i64* %add.ptr26, i64 %sub27, i64 %59), !dbg !18057
  %tobool29 = icmp ne i32 %call28, 0, !dbg !18057
  br i1 %tobool29, label %if.end.31, label %if.then.30, !dbg !18058

if.then.30:                                       ; preds = %if.else.20
  store i32 0, i32* %retval, !dbg !18059
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102, !dbg !18059

if.end.31:                                        ; preds = %if.else.20
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.end.19
  %60 = load i64*, i64** %c.addr, align 8, !dbg !18061, !tbaa !2505
  %61 = load i64, i64* %m, align 8, !dbg !18062, !tbaa !2391
  %add.ptr33 = getelementptr i64, i64* %60, i64 %61, !dbg !18063
  %62 = load i64*, i64** %w.addr, align 8, !dbg !18064, !tbaa !2505
  %63 = load i64, i64* %la.addr, align 8, !dbg !18065, !tbaa !2391
  %64 = load i64, i64* %m, align 8, !dbg !18066, !tbaa !2391
  %sub34 = sub i64 %63, %64, !dbg !18067
  %65 = load i64, i64* %lb.addr, align 8, !dbg !18068, !tbaa !2391
  %add35 = add i64 %sub34, %65, !dbg !18069
  call void @_mpd_baseaddto(i64* %add.ptr33, i64* %62, i64 %add35), !dbg !18070
  %66 = load i64, i64* %m, align 8, !dbg !18071, !tbaa !2391
  %67 = load i64, i64* %m, align 8, !dbg !18072, !tbaa !2391
  %add36 = add i64 %66, %67, !dbg !18073
  %add37 = add i64 %add36, 1, !dbg !18074
  store i64 %add37, i64* %lt, align 8, !dbg !18075, !tbaa !2391
  %68 = load i64*, i64** %w.addr, align 8, !dbg !18076, !tbaa !2505
  %69 = load i64, i64* %lt, align 8, !dbg !18077, !tbaa !2391
  call void @mpd_uint_zero(i64* %68, i64 %69), !dbg !18078
  %70 = load i64*, i64** %w.addr, align 8, !dbg !18079, !tbaa !2505
  %71 = load i64*, i64** %a.addr, align 8, !dbg !18081, !tbaa !2505
  %72 = load i64*, i64** %b.addr, align 8, !dbg !18082, !tbaa !2505
  %73 = load i64*, i64** %w.addr, align 8, !dbg !18083, !tbaa !2505
  %74 = load i64, i64* %lt, align 8, !dbg !18084, !tbaa !2391
  %add.ptr38 = getelementptr i64, i64* %73, i64 %74, !dbg !18085
  %75 = load i64, i64* %m, align 8, !dbg !18086, !tbaa !2391
  %76 = load i64, i64* %lb.addr, align 8, !dbg !18087, !tbaa !2391
  %call39 = call i32 @_karatsuba_rec_fnt(i64* %70, i64* %71, i64* %72, i64* %add.ptr38, i64 %75, i64 %76), !dbg !18088
  %tobool40 = icmp ne i32 %call39, 0, !dbg !18088
  br i1 %tobool40, label %if.end.42, label %if.then.41, !dbg !18089

if.then.41:                                       ; preds = %if.end.32
  store i32 0, i32* %retval, !dbg !18090
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102, !dbg !18090

if.end.42:                                        ; preds = %if.end.32
  %77 = load i64*, i64** %c.addr, align 8, !dbg !18092, !tbaa !2505
  %78 = load i64*, i64** %w.addr, align 8, !dbg !18093, !tbaa !2505
  %79 = load i64, i64* %m, align 8, !dbg !18094, !tbaa !2391
  %80 = load i64, i64* %lb.addr, align 8, !dbg !18095, !tbaa !2391
  %add43 = add i64 %79, %80, !dbg !18096
  call void @_mpd_baseaddto(i64* %77, i64* %78, i64 %add43), !dbg !18097
  store i32 1, i32* %retval, !dbg !18098
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102, !dbg !18098

if.end.44:                                        ; preds = %if.end.7
  %81 = load i64*, i64** %w.addr, align 8, !dbg !18099, !tbaa !2505
  %82 = bitcast i64* %81 to i8*, !dbg !18100
  %83 = load i64*, i64** %a.addr, align 8, !dbg !18101, !tbaa !2505
  %84 = bitcast i64* %83 to i8*, !dbg !18100
  %85 = load i64, i64* %m, align 8, !dbg !18102, !tbaa !2391
  %mul45 = mul i64 %85, 8, !dbg !18103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %84, i64 %mul45, i32 8, i1 false), !dbg !18100
  %86 = load i64, i64* %m, align 8, !dbg !18104, !tbaa !2391
  %87 = load i64*, i64** %w.addr, align 8, !dbg !18105, !tbaa !2505
  %arrayidx = getelementptr i64, i64* %87, i64 %86, !dbg !18105
  store i64 0, i64* %arrayidx, align 8, !dbg !18106, !tbaa !2391
  %88 = load i64*, i64** %w.addr, align 8, !dbg !18107, !tbaa !2505
  %89 = load i64*, i64** %a.addr, align 8, !dbg !18108, !tbaa !2505
  %90 = load i64, i64* %m, align 8, !dbg !18109, !tbaa !2391
  %add.ptr46 = getelementptr i64, i64* %89, i64 %90, !dbg !18110
  %91 = load i64, i64* %la.addr, align 8, !dbg !18111, !tbaa !2391
  %92 = load i64, i64* %m, align 8, !dbg !18112, !tbaa !2391
  %sub47 = sub i64 %91, %92, !dbg !18113
  call void @_mpd_baseaddto(i64* %88, i64* %add.ptr46, i64 %sub47), !dbg !18114
  %93 = load i64*, i64** %w.addr, align 8, !dbg !18115, !tbaa !2505
  %94 = load i64, i64* %m, align 8, !dbg !18116, !tbaa !2391
  %add48 = add i64 %94, 1, !dbg !18117
  %add.ptr49 = getelementptr i64, i64* %93, i64 %add48, !dbg !18118
  %95 = bitcast i64* %add.ptr49 to i8*, !dbg !18119
  %96 = load i64*, i64** %b.addr, align 8, !dbg !18120, !tbaa !2505
  %97 = bitcast i64* %96 to i8*, !dbg !18119
  %98 = load i64, i64* %m, align 8, !dbg !18121, !tbaa !2391
  %mul50 = mul i64 %98, 8, !dbg !18122
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %97, i64 %mul50, i32 8, i1 false), !dbg !18119
  %99 = load i64, i64* %m, align 8, !dbg !18123, !tbaa !2391
  %add51 = add i64 %99, 1, !dbg !18124
  %100 = load i64, i64* %m, align 8, !dbg !18125, !tbaa !2391
  %add52 = add i64 %add51, %100, !dbg !18126
  %101 = load i64*, i64** %w.addr, align 8, !dbg !18127, !tbaa !2505
  %arrayidx53 = getelementptr i64, i64* %101, i64 %add52, !dbg !18127
  store i64 0, i64* %arrayidx53, align 8, !dbg !18128, !tbaa !2391
  %102 = load i64*, i64** %w.addr, align 8, !dbg !18129, !tbaa !2505
  %103 = load i64, i64* %m, align 8, !dbg !18130, !tbaa !2391
  %add54 = add i64 %103, 1, !dbg !18131
  %add.ptr55 = getelementptr i64, i64* %102, i64 %add54, !dbg !18132
  %104 = load i64*, i64** %b.addr, align 8, !dbg !18133, !tbaa !2505
  %105 = load i64, i64* %m, align 8, !dbg !18134, !tbaa !2391
  %add.ptr56 = getelementptr i64, i64* %104, i64 %105, !dbg !18135
  %106 = load i64, i64* %lb.addr, align 8, !dbg !18136, !tbaa !2391
  %107 = load i64, i64* %m, align 8, !dbg !18137, !tbaa !2391
  %sub57 = sub i64 %106, %107, !dbg !18138
  call void @_mpd_baseaddto(i64* %add.ptr55, i64* %add.ptr56, i64 %sub57), !dbg !18139
  %108 = load i64*, i64** %c.addr, align 8, !dbg !18140, !tbaa !2505
  %109 = load i64, i64* %m, align 8, !dbg !18142, !tbaa !2391
  %add.ptr58 = getelementptr i64, i64* %108, i64 %109, !dbg !18143
  %110 = load i64*, i64** %w.addr, align 8, !dbg !18144, !tbaa !2505
  %111 = load i64*, i64** %w.addr, align 8, !dbg !18145, !tbaa !2505
  %112 = load i64, i64* %m, align 8, !dbg !18146, !tbaa !2391
  %add59 = add i64 %112, 1, !dbg !18147
  %add.ptr60 = getelementptr i64, i64* %111, i64 %add59, !dbg !18148
  %113 = load i64*, i64** %w.addr, align 8, !dbg !18149, !tbaa !2505
  %114 = load i64, i64* %m, align 8, !dbg !18150, !tbaa !2391
  %add61 = add i64 %114, 1, !dbg !18151
  %mul62 = mul i64 2, %add61, !dbg !18152
  %add.ptr63 = getelementptr i64, i64* %113, i64 %mul62, !dbg !18153
  %115 = load i64, i64* %m, align 8, !dbg !18154, !tbaa !2391
  %add64 = add i64 %115, 1, !dbg !18155
  %116 = load i64, i64* %m, align 8, !dbg !18156, !tbaa !2391
  %add65 = add i64 %116, 1, !dbg !18157
  %call66 = call i32 @_karatsuba_rec_fnt(i64* %add.ptr58, i64* %110, i64* %add.ptr60, i64* %add.ptr63, i64 %add64, i64 %add65), !dbg !18158
  %tobool67 = icmp ne i32 %call66, 0, !dbg !18158
  br i1 %tobool67, label %if.end.69, label %if.then.68, !dbg !18159

if.then.68:                                       ; preds = %if.end.44
  store i32 0, i32* %retval, !dbg !18160
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102, !dbg !18160

if.end.69:                                        ; preds = %if.end.44
  %117 = load i64, i64* %la.addr, align 8, !dbg !18162, !tbaa !2391
  %118 = load i64, i64* %m, align 8, !dbg !18163, !tbaa !2391
  %sub70 = sub i64 %117, %118, !dbg !18164
  %119 = load i64, i64* %la.addr, align 8, !dbg !18165, !tbaa !2391
  %120 = load i64, i64* %m, align 8, !dbg !18166, !tbaa !2391
  %sub71 = sub i64 %119, %120, !dbg !18167
  %add72 = add i64 %sub70, %sub71, !dbg !18168
  %add73 = add i64 %add72, 1, !dbg !18169
  store i64 %add73, i64* %lt, align 8, !dbg !18170, !tbaa !2391
  %121 = load i64*, i64** %w.addr, align 8, !dbg !18171, !tbaa !2505
  %122 = load i64, i64* %lt, align 8, !dbg !18172, !tbaa !2391
  call void @mpd_uint_zero(i64* %121, i64 %122), !dbg !18173
  %123 = load i64*, i64** %w.addr, align 8, !dbg !18174, !tbaa !2505
  %124 = load i64*, i64** %a.addr, align 8, !dbg !18176, !tbaa !2505
  %125 = load i64, i64* %m, align 8, !dbg !18177, !tbaa !2391
  %add.ptr74 = getelementptr i64, i64* %124, i64 %125, !dbg !18178
  %126 = load i64*, i64** %b.addr, align 8, !dbg !18179, !tbaa !2505
  %127 = load i64, i64* %m, align 8, !dbg !18180, !tbaa !2391
  %add.ptr75 = getelementptr i64, i64* %126, i64 %127, !dbg !18181
  %128 = load i64*, i64** %w.addr, align 8, !dbg !18182, !tbaa !2505
  %129 = load i64, i64* %lt, align 8, !dbg !18183, !tbaa !2391
  %add.ptr76 = getelementptr i64, i64* %128, i64 %129, !dbg !18184
  %130 = load i64, i64* %la.addr, align 8, !dbg !18185, !tbaa !2391
  %131 = load i64, i64* %m, align 8, !dbg !18186, !tbaa !2391
  %sub77 = sub i64 %130, %131, !dbg !18187
  %132 = load i64, i64* %lb.addr, align 8, !dbg !18188, !tbaa !2391
  %133 = load i64, i64* %m, align 8, !dbg !18189, !tbaa !2391
  %sub78 = sub i64 %132, %133, !dbg !18190
  %call79 = call i32 @_karatsuba_rec_fnt(i64* %123, i64* %add.ptr74, i64* %add.ptr75, i64* %add.ptr76, i64 %sub77, i64 %sub78), !dbg !18191
  %tobool80 = icmp ne i32 %call79, 0, !dbg !18191
  br i1 %tobool80, label %if.end.82, label %if.then.81, !dbg !18192

if.then.81:                                       ; preds = %if.end.69
  store i32 0, i32* %retval, !dbg !18193
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102, !dbg !18193

if.end.82:                                        ; preds = %if.end.69
  %134 = load i64*, i64** %c.addr, align 8, !dbg !18195, !tbaa !2505
  %135 = load i64, i64* %m, align 8, !dbg !18196, !tbaa !2391
  %mul83 = mul i64 2, %135, !dbg !18197
  %add.ptr84 = getelementptr i64, i64* %134, i64 %mul83, !dbg !18198
  %136 = load i64*, i64** %w.addr, align 8, !dbg !18199, !tbaa !2505
  %137 = load i64, i64* %la.addr, align 8, !dbg !18200, !tbaa !2391
  %138 = load i64, i64* %m, align 8, !dbg !18201, !tbaa !2391
  %sub85 = sub i64 %137, %138, !dbg !18202
  %139 = load i64, i64* %lb.addr, align 8, !dbg !18203, !tbaa !2391
  %140 = load i64, i64* %m, align 8, !dbg !18204, !tbaa !2391
  %sub86 = sub i64 %139, %140, !dbg !18205
  %add87 = add i64 %sub85, %sub86, !dbg !18206
  call void @_mpd_baseaddto(i64* %add.ptr84, i64* %136, i64 %add87), !dbg !18207
  %141 = load i64*, i64** %c.addr, align 8, !dbg !18208, !tbaa !2505
  %142 = load i64, i64* %m, align 8, !dbg !18209, !tbaa !2391
  %add.ptr88 = getelementptr i64, i64* %141, i64 %142, !dbg !18210
  %143 = load i64*, i64** %w.addr, align 8, !dbg !18211, !tbaa !2505
  %144 = load i64, i64* %la.addr, align 8, !dbg !18212, !tbaa !2391
  %145 = load i64, i64* %m, align 8, !dbg !18213, !tbaa !2391
  %sub89 = sub i64 %144, %145, !dbg !18214
  %146 = load i64, i64* %lb.addr, align 8, !dbg !18215, !tbaa !2391
  %147 = load i64, i64* %m, align 8, !dbg !18216, !tbaa !2391
  %sub90 = sub i64 %146, %147, !dbg !18217
  %add91 = add i64 %sub89, %sub90, !dbg !18218
  call void @_mpd_basesubfrom(i64* %add.ptr88, i64* %143, i64 %add91), !dbg !18219
  %148 = load i64, i64* %m, align 8, !dbg !18220, !tbaa !2391
  %149 = load i64, i64* %m, align 8, !dbg !18221, !tbaa !2391
  %add92 = add i64 %148, %149, !dbg !18222
  %add93 = add i64 %add92, 1, !dbg !18223
  store i64 %add93, i64* %lt, align 8, !dbg !18224, !tbaa !2391
  %150 = load i64*, i64** %w.addr, align 8, !dbg !18225, !tbaa !2505
  %151 = load i64, i64* %lt, align 8, !dbg !18226, !tbaa !2391
  call void @mpd_uint_zero(i64* %150, i64 %151), !dbg !18227
  %152 = load i64*, i64** %w.addr, align 8, !dbg !18228, !tbaa !2505
  %153 = load i64*, i64** %a.addr, align 8, !dbg !18230, !tbaa !2505
  %154 = load i64*, i64** %b.addr, align 8, !dbg !18231, !tbaa !2505
  %155 = load i64*, i64** %w.addr, align 8, !dbg !18232, !tbaa !2505
  %156 = load i64, i64* %lt, align 8, !dbg !18233, !tbaa !2391
  %add.ptr94 = getelementptr i64, i64* %155, i64 %156, !dbg !18234
  %157 = load i64, i64* %m, align 8, !dbg !18235, !tbaa !2391
  %158 = load i64, i64* %m, align 8, !dbg !18236, !tbaa !2391
  %call95 = call i32 @_karatsuba_rec_fnt(i64* %152, i64* %153, i64* %154, i64* %add.ptr94, i64 %157, i64 %158), !dbg !18237
  %tobool96 = icmp ne i32 %call95, 0, !dbg !18237
  br i1 %tobool96, label %if.end.98, label %if.then.97, !dbg !18238

if.then.97:                                       ; preds = %if.end.82
  store i32 0, i32* %retval, !dbg !18239
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102, !dbg !18239

if.end.98:                                        ; preds = %if.end.82
  %159 = load i64*, i64** %c.addr, align 8, !dbg !18241, !tbaa !2505
  %160 = load i64*, i64** %w.addr, align 8, !dbg !18242, !tbaa !2505
  %161 = load i64, i64* %m, align 8, !dbg !18243, !tbaa !2391
  %162 = load i64, i64* %m, align 8, !dbg !18244, !tbaa !2391
  %add99 = add i64 %161, %162, !dbg !18245
  call void @_mpd_baseaddto(i64* %159, i64* %160, i64 %add99), !dbg !18246
  %163 = load i64*, i64** %c.addr, align 8, !dbg !18247, !tbaa !2505
  %164 = load i64, i64* %m, align 8, !dbg !18248, !tbaa !2391
  %add.ptr100 = getelementptr i64, i64* %163, i64 %164, !dbg !18249
  %165 = load i64*, i64** %w.addr, align 8, !dbg !18250, !tbaa !2505
  %166 = load i64, i64* %m, align 8, !dbg !18251, !tbaa !2391
  %167 = load i64, i64* %m, align 8, !dbg !18252, !tbaa !2391
  %add101 = add i64 %166, %167, !dbg !18253
  call void @_mpd_basesubfrom(i64* %add.ptr100, i64* %165, i64 %add101), !dbg !18254
  store i32 1, i32* %retval, !dbg !18255
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102, !dbg !18255

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.102

cleanup.102:                                      ; preds = %NewDefault, %if.end.98, %if.then.97, %if.then.81, %if.then.68, %if.end.42, %if.then.41, %if.then.30, %if.then.18, %if.end.6
  %168 = bitcast i64* %lt to i8*, !dbg !18256
  call void @llvm.lifetime.end(i64 8, i8* %168) #4, !dbg !18256
  %169 = bitcast i64* %m to i8*, !dbg !18256
  call void @llvm.lifetime.end(i64 8, i8* %169) #4, !dbg !18256
  %170 = load i32, i32* %retval, !dbg !18256
  ret i32 %170, !dbg !18256
}

; Function Attrs: nounwind uwtable
define internal i64 @_lower_bound_zeta(%struct.mpd_t* %x, i32* %status) #0 {
entry:
  %retval = alloca i64, align 8
  %x.addr = alloca %struct.mpd_t*, align 8
  %status.addr = alloca i32*, align 8
  %maxctx = alloca %struct.mpd_context_t, align 8
  %scratch_data = alloca [64 x i64], align 16
  %scratch = alloca %struct.mpd_t, align 8
  %t = alloca i64, align 8
  %u = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %x, %struct.mpd_t** %x.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %x.addr, metadata !2127, metadata !2395), !dbg !18257
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2128, metadata !2395), !dbg !18258
  %0 = bitcast %struct.mpd_context_t* %maxctx to i8*, !dbg !18259
  call void @llvm.lifetime.start(i64 48, i8* %0) #4, !dbg !18259
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxctx, metadata !2129, metadata !2395), !dbg !18260
  %1 = bitcast [64 x i64]* %scratch_data to i8*, !dbg !18261
  call void @llvm.lifetime.start(i64 512, i8* %1) #4, !dbg !18261
  call void @llvm.dbg.declare(metadata [64 x i64]* %scratch_data, metadata !2130, metadata !2395), !dbg !18262
  %2 = bitcast %struct.mpd_t* %scratch to i8*, !dbg !18263
  call void @llvm.lifetime.start(i64 48, i8* %2) #4, !dbg !18263
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %scratch, metadata !2131, metadata !2395), !dbg !18264
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %scratch, i32 0, i32 0, !dbg !18265
  store i8 48, i8* %flags, align 1, !dbg !18265, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %scratch, i32 0, i32 1, !dbg !18265
  store i64 0, i64* %exp, align 8, !dbg !18265, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %scratch, i32 0, i32 2, !dbg !18265
  store i64 0, i64* %digits, align 8, !dbg !18265, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %scratch, i32 0, i32 3, !dbg !18265
  store i64 0, i64* %len, align 8, !dbg !18265, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %scratch, i32 0, i32 4, !dbg !18265
  store i64 64, i64* %alloc, align 8, !dbg !18265, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %scratch, i32 0, i32 5, !dbg !18265
  %arraydecay = getelementptr inbounds [64 x i64], [64 x i64]* %scratch_data, i32 0, i32 0, !dbg !18266
  store i64* %arraydecay, i64** %data, align 8, !dbg !18265, !tbaa !2546
  %3 = bitcast i64* %t to i8*, !dbg !18267
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !18267
  call void @llvm.dbg.declare(metadata i64* %t, metadata !2132, metadata !2395), !dbg !18268
  %4 = bitcast i64* %u to i8*, !dbg !18267
  call void @llvm.lifetime.start(i64 8, i8* %4) #4, !dbg !18267
  call void @llvm.dbg.declare(metadata i64* %u, metadata !2133, metadata !2395), !dbg !18269
  %5 = load %struct.mpd_t*, %struct.mpd_t** %x.addr, align 8, !dbg !18270, !tbaa !2505
  %call = call i64 @mpd_adjexp(%struct.mpd_t* %5), !dbg !18271
  store i64 %call, i64* %t, align 8, !dbg !18272, !tbaa !2391
  %6 = load i64, i64* %t, align 8, !dbg !18273, !tbaa !2391
  %cmp = icmp sgt i64 %6, 0, !dbg !18275
  br i1 %cmp, label %if.then, label %if.else, !dbg !18276

if.then:                                          ; preds = %entry
  %7 = load i64, i64* %t, align 8, !dbg !18277, !tbaa !2391
  %call1 = call i32 @mpd_exp_digits(i64 %7), !dbg !18279
  %sub = sub i32 %call1, 1, !dbg !18280
  %conv = sext i32 %sub to i64, !dbg !18279
  store i64 %conv, i64* %retval, !dbg !18281
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !18281

if.else:                                          ; preds = %entry
  %8 = load i64, i64* %t, align 8, !dbg !18282, !tbaa !2391
  %cmp2 = icmp slt i64 %8, -1, !dbg !18284
  br i1 %cmp2, label %if.then.4, label %if.else.8, !dbg !18285

if.then.4:                                        ; preds = %if.else
  %9 = load i64, i64* %t, align 8, !dbg !18286, !tbaa !2391
  %add = add i64 %9, 1, !dbg !18288
  %call5 = call i32 @mpd_exp_digits(i64 %add), !dbg !18289
  %sub6 = sub i32 %call5, 1, !dbg !18290
  %conv7 = sext i32 %sub6 to i64, !dbg !18289
  store i64 %conv7, i64* %retval, !dbg !18291
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !18291

if.else.8:                                        ; preds = %if.else
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxctx), !dbg !18292
  %10 = load %struct.mpd_t*, %struct.mpd_t** %x.addr, align 8, !dbg !18294, !tbaa !2505
  %11 = load i32*, i32** %status.addr, align 8, !dbg !18295, !tbaa !2505
  call void @mpd_qsub(%struct.mpd_t* %scratch, %struct.mpd_t* %10, %struct.mpd_t* @one, %struct.mpd_context_t* %maxctx, i32* %11), !dbg !18296
  %call9 = call i32 @mpd_isspecial(%struct.mpd_t* %scratch), !dbg !18297
  %tobool = icmp ne i32 %call9, 0, !dbg !18297
  br i1 %tobool, label %if.then.10, label %if.end, !dbg !18299

if.then.10:                                       ; preds = %if.else.8
  call void @mpd_del(%struct.mpd_t* %scratch), !dbg !18300
  store i64 9223372036854775807, i64* %retval, !dbg !18302
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !18302

if.end:                                           ; preds = %if.else.8
  %call11 = call i64 @mpd_adjexp(%struct.mpd_t* %scratch), !dbg !18303
  store i64 %call11, i64* %u, align 8, !dbg !18304, !tbaa !2391
  call void @mpd_del(%struct.mpd_t* %scratch), !dbg !18305
  %12 = load i64, i64* %t, align 8, !dbg !18306, !tbaa !2391
  %cmp12 = icmp eq i64 %12, 0, !dbg !18307
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !18308

cond.true:                                        ; preds = %if.end
  %13 = load i64, i64* %u, align 8, !dbg !18309, !tbaa !2391
  %sub14 = sub i64 %13, 2, !dbg !18311
  br label %cond.end, !dbg !18308

cond.false:                                       ; preds = %if.end
  %14 = load i64, i64* %u, align 8, !dbg !18312, !tbaa !2391
  %sub15 = sub i64 %14, 1, !dbg !18314
  br label %cond.end, !dbg !18308

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub14, %cond.true ], [ %sub15, %cond.false ], !dbg !18308
  store i64 %cond, i64* %retval, !dbg !18315
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !18318

cleanup:                                          ; preds = %cond.end, %if.then.10, %if.then.4, %if.then
  %15 = bitcast i64* %u to i8*, !dbg !18319
  call void @llvm.lifetime.end(i64 8, i8* %15) #4, !dbg !18319
  %16 = bitcast i64* %t to i8*, !dbg !18319
  call void @llvm.lifetime.end(i64 8, i8* %16) #4, !dbg !18319
  %17 = bitcast %struct.mpd_t* %scratch to i8*, !dbg !18319
  call void @llvm.lifetime.end(i64 48, i8* %17) #4, !dbg !18319
  %18 = bitcast [64 x i64]* %scratch_data to i8*, !dbg !18319
  call void @llvm.lifetime.end(i64 512, i8* %18) #4, !dbg !18319
  %19 = bitcast %struct.mpd_context_t* %maxctx to i8*, !dbg !18319
  call void @llvm.lifetime.end(i64 48, i8* %19) #4, !dbg !18319
  %20 = load i64, i64* %retval, !dbg !18319
  ret i64 %20, !dbg !18319
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_mpd_qpow_mpd(%struct.mpd_t* %result, %struct.mpd_t* %tbase, %struct.mpd_t* %texp, i8 zeroext %resultsign, %struct.mpd_context_t* %ctx, i32* %status) #3 {
entry:
  %result.addr = alloca %struct.mpd_t*, align 8
  %tbase.addr = alloca %struct.mpd_t*, align 8
  %texp.addr = alloca %struct.mpd_t*, align 8
  %resultsign.addr = alloca i8, align 1
  %ctx.addr = alloca %struct.mpd_context_t*, align 8
  %status.addr = alloca i32*, align 8
  %workstatus = alloca i32, align 4
  %maxctx = alloca %struct.mpd_context_t, align 8
  %two_data = alloca [1 x i64], align 8
  %two = alloca %struct.mpd_t, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mpd_t* %result, %struct.mpd_t** %result.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %result.addr, metadata !2152, metadata !2395), !dbg !18320
  store %struct.mpd_t* %tbase, %struct.mpd_t** %tbase.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %tbase.addr, metadata !2153, metadata !2395), !dbg !18321
  store %struct.mpd_t* %texp, %struct.mpd_t** %texp.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %texp.addr, metadata !2154, metadata !2395), !dbg !18322
  store i8 %resultsign, i8* %resultsign.addr, align 1, !tbaa !2930
  call void @llvm.dbg.declare(metadata i8* %resultsign.addr, metadata !2155, metadata !2395), !dbg !18323
  store %struct.mpd_context_t* %ctx, %struct.mpd_context_t** %ctx.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t** %ctx.addr, metadata !2156, metadata !2395), !dbg !18324
  store i32* %status, i32** %status.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2157, metadata !2395), !dbg !18325
  %0 = bitcast i32* %workstatus to i8*, !dbg !18326
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !18326
  call void @llvm.dbg.declare(metadata i32* %workstatus, metadata !2158, metadata !2395), !dbg !18327
  store i32 0, i32* %workstatus, align 4, !dbg !18327, !tbaa !2554
  %1 = bitcast %struct.mpd_context_t* %maxctx to i8*, !dbg !18328
  call void @llvm.lifetime.start(i64 48, i8* %1) #4, !dbg !18328
  call void @llvm.dbg.declare(metadata %struct.mpd_context_t* %maxctx, metadata !2159, metadata !2395), !dbg !18329
  %2 = bitcast [1 x i64]* %two_data to i8*, !dbg !18330
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !18330
  call void @llvm.dbg.declare(metadata [1 x i64]* %two_data, metadata !2160, metadata !2395), !dbg !18331
  %3 = bitcast [1 x i64]* %two_data to i8*, !dbg !18331
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* bitcast ([1 x i64]* @_mpd_qpow_mpd.two_data to i8*), i64 8, i32 8, i1 false), !dbg !18331
  %4 = bitcast %struct.mpd_t* %two to i8*, !dbg !18332
  call void @llvm.lifetime.start(i64 48, i8* %4) #4, !dbg !18332
  call void @llvm.dbg.declare(metadata %struct.mpd_t* %two, metadata !2161, metadata !2395), !dbg !18333
  %flags = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 0, !dbg !18334
  store i8 -112, i8* %flags, align 1, !dbg !18334, !tbaa !2620
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 1, !dbg !18334
  store i64 0, i64* %exp, align 8, !dbg !18334, !tbaa !2510
  %digits = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 2, !dbg !18334
  store i64 1, i64* %digits, align 8, !dbg !18334, !tbaa !2514
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 3, !dbg !18334
  store i64 1, i64* %len, align 8, !dbg !18334, !tbaa !2542
  %alloc = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 4, !dbg !18334
  store i64 1, i64* %alloc, align 8, !dbg !18334, !tbaa !2835
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %two, i32 0, i32 5, !dbg !18334
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %two_data, i32 0, i32 0, !dbg !18335
  store i64* %arraydecay, i64** %data, align 8, !dbg !18334, !tbaa !2546
  call void @mpd_maxcontext(%struct.mpd_context_t* %maxctx), !dbg !18336
  %5 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !18337, !tbaa !2505
  %6 = load i32*, i32** %status.addr, align 8, !dbg !18338, !tbaa !2505
  %call = call i32 @mpd_qcopy(%struct.mpd_t* %5, %struct.mpd_t* @one, i32* %6), !dbg !18339
  br label %while.cond, !dbg !18340

while.cond:                                       ; preds = %if.end.18, %entry
  %7 = load %struct.mpd_t*, %struct.mpd_t** %texp.addr, align 8, !dbg !18341, !tbaa !2505
  %call1 = call i32 @mpd_iszero(%struct.mpd_t* %7), !dbg !18344
  %tobool = icmp ne i32 %call1, 0, !dbg !18345
  %lnot = xor i1 %tobool, true, !dbg !18345
  br i1 %lnot, label %while.body, label %while.end, !dbg !18340

while.body:                                       ; preds = %while.cond
  %8 = load %struct.mpd_t*, %struct.mpd_t** %texp.addr, align 8, !dbg !18346, !tbaa !2505
  %call2 = call i32 @mpd_isodd(%struct.mpd_t* %8), !dbg !18349
  %tobool3 = icmp ne i32 %call2, 0, !dbg !18349
  br i1 %tobool3, label %if.then, label %if.end.10, !dbg !18350

if.then:                                          ; preds = %while.body
  %9 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !18351, !tbaa !2505
  %10 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !18353, !tbaa !2505
  %11 = load %struct.mpd_t*, %struct.mpd_t** %tbase.addr, align 8, !dbg !18354, !tbaa !2505
  %12 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !18355, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %9, %struct.mpd_t* %10, %struct.mpd_t* %11, %struct.mpd_context_t* %12, i32* %workstatus), !dbg !18356
  %13 = load i32, i32* %workstatus, align 4, !dbg !18357, !tbaa !2554
  %14 = load i32*, i32** %status.addr, align 8, !dbg !18358, !tbaa !2505
  %15 = load i32, i32* %14, align 4, !dbg !18359, !tbaa !2554
  %or = or i32 %15, %13, !dbg !18359
  store i32 %or, i32* %14, align 4, !dbg !18359, !tbaa !2554
  %16 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !18360, !tbaa !2505
  %call4 = call i32 @mpd_isspecial(%struct.mpd_t* %16), !dbg !18362
  %tobool5 = icmp ne i32 %call4, 0, !dbg !18362
  br i1 %tobool5, label %if.then.9, label %lor.lhs.false, !dbg !18363

lor.lhs.false:                                    ; preds = %if.then
  %17 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !18364, !tbaa !2505
  %call6 = call i32 @mpd_iszerocoeff(%struct.mpd_t* %17), !dbg !18365
  %tobool7 = icmp ne i32 %call6, 0, !dbg !18365
  br i1 %tobool7, label %land.lhs.true, label %if.end, !dbg !18366

land.lhs.true:                                    ; preds = %lor.lhs.false
  %18 = load i32, i32* %workstatus, align 4, !dbg !18367, !tbaa !2554
  %and = and i32 %18, 1, !dbg !18369
  %tobool8 = icmp ne i32 %and, 0, !dbg !18369
  br i1 %tobool8, label %if.then.9, label %if.end, !dbg !18370

if.then.9:                                        ; preds = %land.lhs.true, %if.then
  br label %while.end, !dbg !18371

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  br label %if.end.10, !dbg !18373

if.end.10:                                        ; preds = %if.end, %while.body
  %19 = load %struct.mpd_t*, %struct.mpd_t** %tbase.addr, align 8, !dbg !18374, !tbaa !2505
  %20 = load %struct.mpd_t*, %struct.mpd_t** %tbase.addr, align 8, !dbg !18375, !tbaa !2505
  %21 = load %struct.mpd_t*, %struct.mpd_t** %tbase.addr, align 8, !dbg !18376, !tbaa !2505
  %22 = load %struct.mpd_context_t*, %struct.mpd_context_t** %ctx.addr, align 8, !dbg !18377, !tbaa !2505
  call void @mpd_qmul(%struct.mpd_t* %19, %struct.mpd_t* %20, %struct.mpd_t* %21, %struct.mpd_context_t* %22, i32* %workstatus), !dbg !18378
  %23 = load %struct.mpd_t*, %struct.mpd_t** %texp.addr, align 8, !dbg !18379, !tbaa !2505
  %24 = load %struct.mpd_t*, %struct.mpd_t** %texp.addr, align 8, !dbg !18380, !tbaa !2505
  call void @mpd_qdivint(%struct.mpd_t* %23, %struct.mpd_t* %24, %struct.mpd_t* %two, %struct.mpd_context_t* %maxctx, i32* %workstatus), !dbg !18381
  %25 = load %struct.mpd_t*, %struct.mpd_t** %tbase.addr, align 8, !dbg !18382, !tbaa !2505
  %call11 = call i32 @mpd_isnan(%struct.mpd_t* %25), !dbg !18384
  %tobool12 = icmp ne i32 %call11, 0, !dbg !18384
  br i1 %tobool12, label %if.then.16, label %lor.lhs.false.13, !dbg !18385

lor.lhs.false.13:                                 ; preds = %if.end.10
  %26 = load %struct.mpd_t*, %struct.mpd_t** %texp.addr, align 8, !dbg !18386, !tbaa !2505
  %call14 = call i32 @mpd_isnan(%struct.mpd_t* %26), !dbg !18388
  %tobool15 = icmp ne i32 %call14, 0, !dbg !18388
  br i1 %tobool15, label %if.then.16, label %if.end.18, !dbg !18389

if.then.16:                                       ; preds = %lor.lhs.false.13, %if.end.10
  %27 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !18390, !tbaa !2505
  %28 = load i32, i32* %workstatus, align 4, !dbg !18392, !tbaa !2554
  %and17 = and i32 %28, 958, !dbg !18393
  %29 = load i32*, i32** %status.addr, align 8, !dbg !18394, !tbaa !2505
  call void @mpd_seterror(%struct.mpd_t* %27, i32 %and17, i32* %29), !dbg !18395
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !18396

if.end.18:                                        ; preds = %lor.lhs.false.13
  br label %while.cond, !dbg !18340

while.end:                                        ; preds = %if.then.9, %while.cond
  %30 = load %struct.mpd_t*, %struct.mpd_t** %result.addr, align 8, !dbg !18397, !tbaa !2505
  %31 = load i8, i8* %resultsign.addr, align 1, !dbg !18398, !tbaa !2930
  call void @mpd_set_sign(%struct.mpd_t* %30, i8 zeroext %31), !dbg !18399
  store i32 0, i32* %cleanup.dest.slot, !dbg !18400
  br label %cleanup, !dbg !18400

cleanup:                                          ; preds = %while.end, %if.then.16
  %32 = bitcast %struct.mpd_t* %two to i8*, !dbg !18401
  call void @llvm.lifetime.end(i64 48, i8* %32) #4, !dbg !18401
  %33 = bitcast [1 x i64]* %two_data to i8*, !dbg !18401
  call void @llvm.lifetime.end(i64 8, i8* %33) #4, !dbg !18401
  %34 = bitcast %struct.mpd_context_t* %maxctx to i8*, !dbg !18401
  call void @llvm.lifetime.end(i64 48, i8* %34) #4, !dbg !18401
  %35 = bitcast i32* %workstatus to i8*, !dbg !18401
  call void @llvm.lifetime.end(i64 4, i8* %35) #4, !dbg !18401
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  ret void, !dbg !18400

unreachable:                                      ; No predecessors!
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @mpd_word_isallnine(i64 %word) #0 {
entry:
  %retval = alloca i32, align 4
  %word.addr = alloca i64, align 8
  %n = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store i64 %word, i64* %word.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %word.addr, metadata !2219, metadata !2395), !dbg !18402
  %0 = bitcast i32* %n to i8*, !dbg !18403
  call void @llvm.lifetime.start(i64 4, i8* %0) #4, !dbg !18403
  call void @llvm.dbg.declare(metadata i32* %n, metadata !2220, metadata !2395), !dbg !18404
  %1 = load i64, i64* %word.addr, align 8, !dbg !18405, !tbaa !2391
  %call = call i32 @mpd_word_digits(i64 %1), !dbg !18406
  store i32 %call, i32* %n, align 4, !dbg !18407, !tbaa !2554
  %2 = load i64, i64* %word.addr, align 8, !dbg !18408, !tbaa !2391
  %3 = load i32, i32* %n, align 4, !dbg !18410, !tbaa !2554
  %idxprom = sext i32 %3 to i64, !dbg !18411
  %arrayidx = getelementptr [0 x i64], [0 x i64]* @mpd_pow10, i32 0, i64 %idxprom, !dbg !18411
  %4 = load i64, i64* %arrayidx, align 8, !dbg !18411, !tbaa !2391
  %sub = sub i64 %4, 1, !dbg !18412
  %cmp = icmp eq i64 %2, %sub, !dbg !18413
  br i1 %cmp, label %if.then, label %if.end, !dbg !18414

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, !dbg !18415
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !18415

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, !dbg !18417
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !18417

cleanup:                                          ; preds = %if.end, %if.then
  %5 = bitcast i32* %n to i8*, !dbg !18418
  call void @llvm.lifetime.end(i64 4, i8* %5) #4, !dbg !18418
  %6 = load i32, i32* %retval, !dbg !18418
  ret i32 %6, !dbg !18418
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @_mpd_isallnine(i64* %data, i64 %len) #3 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca i64*, align 8
  %len.addr = alloca i64, align 8
  store i64* %data, i64** %data.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !2223, metadata !2395), !dbg !18419
  store i64 %len, i64* %len.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !2224, metadata !2395), !dbg !18420
  br label %while.cond, !dbg !18421

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i64, i64* %len.addr, align 8, !dbg !18422, !tbaa !2391
  %dec = add i64 %0, -1, !dbg !18422
  store i64 %dec, i64* %len.addr, align 8, !dbg !18422, !tbaa !2391
  %cmp = icmp sge i64 %dec, 0, !dbg !18425
  br i1 %cmp, label %while.body, label %while.end, !dbg !18421

while.body:                                       ; preds = %while.cond
  %1 = load i64, i64* %len.addr, align 8, !dbg !18426, !tbaa !2391
  %2 = load i64*, i64** %data.addr, align 8, !dbg !18429, !tbaa !2505
  %arrayidx = getelementptr i64, i64* %2, i64 %1, !dbg !18429
  %3 = load i64, i64* %arrayidx, align 8, !dbg !18429, !tbaa !2391
  %cmp1 = icmp ne i64 %3, -8446744073709551617, !dbg !18430
  br i1 %cmp1, label %if.then, label %if.end, !dbg !18431

if.then:                                          ; preds = %while.body
  store i32 0, i32* %retval, !dbg !18432
  br label %return, !dbg !18432

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !18421

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %retval, !dbg !18434
  br label %return, !dbg !18434

return:                                           ; preds = %while.end, %if.then
  %4 = load i32, i32* %retval, !dbg !18435
  ret i32 %4, !dbg !18435
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_invroot_init_approx(%struct.mpd_t* %z, i64 %vhat) #3 {
entry:
  %z.addr = alloca %struct.mpd_t*, align 8
  %vhat.addr = alloca i64, align 8
  %lo = alloca i64, align 8
  %hi = alloca i64, align 8
  %a = alloca i64, align 8
  %sq = alloca i64, align 8
  store %struct.mpd_t* %z, %struct.mpd_t** %z.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata %struct.mpd_t** %z.addr, metadata !2285, metadata !2395), !dbg !18436
  store i64 %vhat, i64* %vhat.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %vhat.addr, metadata !2286, metadata !2395), !dbg !18437
  %0 = bitcast i64* %lo to i8*, !dbg !18438
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !18438
  call void @llvm.dbg.declare(metadata i64* %lo, metadata !2287, metadata !2395), !dbg !18439
  store i64 1000, i64* %lo, align 8, !dbg !18439, !tbaa !2391
  %1 = bitcast i64* %hi to i8*, !dbg !18440
  call void @llvm.lifetime.start(i64 8, i8* %1) #4, !dbg !18440
  call void @llvm.dbg.declare(metadata i64* %hi, metadata !2288, metadata !2395), !dbg !18441
  store i64 10000, i64* %hi, align 8, !dbg !18441, !tbaa !2391
  %2 = bitcast i64* %a to i8*, !dbg !18442
  call void @llvm.lifetime.start(i64 8, i8* %2) #4, !dbg !18442
  call void @llvm.dbg.declare(metadata i64* %a, metadata !2289, metadata !2395), !dbg !18443
  %3 = bitcast i64* %sq to i8*, !dbg !18442
  call void @llvm.lifetime.start(i64 8, i8* %3) #4, !dbg !18442
  call void @llvm.dbg.declare(metadata i64* %sq, metadata !2290, metadata !2395), !dbg !18444
  br label %for.cond, !dbg !18445

for.cond:                                         ; preds = %if.end.7, %entry
  %4 = load i64, i64* %lo, align 8, !dbg !18446, !tbaa !2391
  %5 = load i64, i64* %hi, align 8, !dbg !18450, !tbaa !2391
  %add = add i64 %4, %5, !dbg !18451
  %div = udiv i64 %add, 2, !dbg !18452
  store i64 %div, i64* %a, align 8, !dbg !18453, !tbaa !2391
  %6 = load i64, i64* %a, align 8, !dbg !18454, !tbaa !2391
  %7 = load i64, i64* %a, align 8, !dbg !18455, !tbaa !2391
  %mul = mul i64 %6, %7, !dbg !18456
  store i64 %mul, i64* %sq, align 8, !dbg !18457, !tbaa !2391
  %8 = load i64, i64* %vhat.addr, align 8, !dbg !18458, !tbaa !2391
  %9 = load i64, i64* %sq, align 8, !dbg !18460, !tbaa !2391
  %cmp = icmp uge i64 %8, %9, !dbg !18461
  br i1 %cmp, label %if.then, label %if.else, !dbg !18462

if.then:                                          ; preds = %for.cond
  %10 = load i64, i64* %vhat.addr, align 8, !dbg !18463, !tbaa !2391
  %11 = load i64, i64* %sq, align 8, !dbg !18466, !tbaa !2391
  %12 = load i64, i64* %a, align 8, !dbg !18467, !tbaa !2391
  %mul1 = mul i64 2, %12, !dbg !18468
  %add2 = add i64 %11, %mul1, !dbg !18469
  %add3 = add i64 %add2, 1, !dbg !18470
  %cmp4 = icmp ult i64 %10, %add3, !dbg !18471
  br i1 %cmp4, label %if.then.5, label %if.end, !dbg !18472

if.then.5:                                        ; preds = %if.then
  br label %for.end, !dbg !18473

if.end:                                           ; preds = %if.then
  %13 = load i64, i64* %a, align 8, !dbg !18475, !tbaa !2391
  %add6 = add i64 %13, 1, !dbg !18476
  store i64 %add6, i64* %lo, align 8, !dbg !18477, !tbaa !2391
  br label %if.end.7, !dbg !18478

if.else:                                          ; preds = %for.cond
  %14 = load i64, i64* %a, align 8, !dbg !18479, !tbaa !2391
  %sub = sub i64 %14, 1, !dbg !18481
  store i64 %sub, i64* %hi, align 8, !dbg !18482, !tbaa !2391
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.end
  br label %for.cond, !dbg !18483

for.end:                                          ; preds = %if.then.5
  %15 = load %struct.mpd_t*, %struct.mpd_t** %z.addr, align 8, !dbg !18484, !tbaa !2505
  call void @mpd_minalloc(%struct.mpd_t* %15), !dbg !18485
  %16 = load %struct.mpd_t*, %struct.mpd_t** %z.addr, align 8, !dbg !18486, !tbaa !2505
  call void @mpd_clear_flags(%struct.mpd_t* %16), !dbg !18487
  %17 = load i64, i64* %a, align 8, !dbg !18488, !tbaa !2391
  %div8 = udiv i64 1000000000, %17, !dbg !18489
  %18 = load %struct.mpd_t*, %struct.mpd_t** %z.addr, align 8, !dbg !18490, !tbaa !2505
  %data = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %18, i32 0, i32 5, !dbg !18491
  %19 = load i64*, i64** %data, align 8, !dbg !18491, !tbaa !2546
  %arrayidx = getelementptr i64, i64* %19, i64 0, !dbg !18490
  store i64 %div8, i64* %arrayidx, align 8, !dbg !18492, !tbaa !2391
  %20 = load %struct.mpd_t*, %struct.mpd_t** %z.addr, align 8, !dbg !18493, !tbaa !2505
  %len = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %20, i32 0, i32 3, !dbg !18494
  store i64 1, i64* %len, align 8, !dbg !18495, !tbaa !2542
  %21 = load %struct.mpd_t*, %struct.mpd_t** %z.addr, align 8, !dbg !18496, !tbaa !2505
  %exp = getelementptr inbounds %struct.mpd_t, %struct.mpd_t* %21, i32 0, i32 1, !dbg !18497
  store i64 -6, i64* %exp, align 8, !dbg !18498, !tbaa !2510
  %22 = load %struct.mpd_t*, %struct.mpd_t** %z.addr, align 8, !dbg !18499, !tbaa !2505
  call void @mpd_setdigits(%struct.mpd_t* %22), !dbg !18500
  %23 = bitcast i64* %sq to i8*, !dbg !18501
  call void @llvm.lifetime.end(i64 8, i8* %23) #4, !dbg !18501
  %24 = bitcast i64* %a to i8*, !dbg !18501
  call void @llvm.lifetime.end(i64 8, i8* %24) #4, !dbg !18501
  %25 = bitcast i64* %hi to i8*, !dbg !18501
  call void @llvm.lifetime.end(i64 8, i8* %25) #4, !dbg !18501
  %26 = bitcast i64* %lo to i8*, !dbg !18501
  call void @llvm.lifetime.end(i64 8, i8* %26) #4, !dbg !18501
  ret void, !dbg !18501
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @invroot_schedule_prec(i64* %klist, i64 %maxprec, i64 %initprec) #3 {
entry:
  %retval = alloca i32, align 4
  %klist.addr = alloca i64*, align 8
  %maxprec.addr = alloca i64, align 8
  %initprec.addr = alloca i64, align 8
  %k = alloca i64, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store i64* %klist, i64** %klist.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i64** %klist.addr, metadata !2293, metadata !2395), !dbg !18502
  store i64 %maxprec, i64* %maxprec.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %maxprec.addr, metadata !2294, metadata !2395), !dbg !18503
  store i64 %initprec, i64* %initprec.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %initprec.addr, metadata !2295, metadata !2395), !dbg !18504
  %0 = bitcast i64* %k to i8*, !dbg !18505
  call void @llvm.lifetime.start(i64 8, i8* %0) #4, !dbg !18505
  call void @llvm.dbg.declare(metadata i64* %k, metadata !2296, metadata !2395), !dbg !18506
  %1 = bitcast i32* %i to i8*, !dbg !18507
  call void @llvm.lifetime.start(i64 4, i8* %1) #4, !dbg !18507
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2297, metadata !2395), !dbg !18508
  %2 = load i64, i64* %maxprec.addr, align 8, !dbg !18509, !tbaa !2391
  %3 = load i64, i64* %initprec.addr, align 8, !dbg !18511, !tbaa !2391
  %cmp = icmp sle i64 %2, %3, !dbg !18512
  br i1 %cmp, label %if.then, label %if.end, !dbg !18513

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !18514
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !18516

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !18517, !tbaa !2554
  %4 = load i64, i64* %maxprec.addr, align 8, !dbg !18518, !tbaa !2391
  store i64 %4, i64* %k, align 8, !dbg !18519, !tbaa !2391
  br label %do.body, !dbg !18520

do.body:                                          ; preds = %do.cond, %if.end
  %5 = load i64, i64* %k, align 8, !dbg !18521, !tbaa !2391
  %add = add i64 %5, 3, !dbg !18523
  %div = sdiv i64 %add, 2, !dbg !18524
  store i64 %div, i64* %k, align 8, !dbg !18525, !tbaa !2391
  %6 = load i64, i64* %k, align 8, !dbg !18526, !tbaa !2391
  %7 = load i32, i32* %i, align 4, !dbg !18527, !tbaa !2554
  %inc = add i32 %7, 1, !dbg !18527
  store i32 %inc, i32* %i, align 4, !dbg !18527, !tbaa !2554
  %idxprom = sext i32 %7 to i64, !dbg !18528
  %8 = load i64*, i64** %klist.addr, align 8, !dbg !18528, !tbaa !2505
  %arrayidx = getelementptr i64, i64* %8, i64 %idxprom, !dbg !18528
  store i64 %6, i64* %arrayidx, align 8, !dbg !18529, !tbaa !2391
  br label %do.cond, !dbg !18530

do.cond:                                          ; preds = %do.body
  %9 = load i64, i64* %k, align 8, !dbg !18531, !tbaa !2391
  %10 = load i64, i64* %initprec.addr, align 8, !dbg !18533, !tbaa !2391
  %cmp1 = icmp sgt i64 %9, %10, !dbg !18534
  br i1 %cmp1, label %do.body, label %do.end, !dbg !18530

do.end:                                           ; preds = %do.cond
  %11 = load i32, i32* %i, align 4, !dbg !18535, !tbaa !2554
  %sub = sub i32 %11, 1, !dbg !18536
  store i32 %sub, i32* %retval, !dbg !18537
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !18537

cleanup:                                          ; preds = %do.end, %if.then
  %12 = bitcast i32* %i to i8*, !dbg !18538
  call void @llvm.lifetime.end(i64 4, i8* %12) #4, !dbg !18538
  %13 = bitcast i64* %k to i8*, !dbg !18538
  call void @llvm.lifetime.end(i64 8, i8* %13) #4, !dbg !18538
  %14 = load i32, i32* %retval, !dbg !18538
  ret i32 %14, !dbg !18538
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @mpd_resize_u16(i16** %w, i64 %nmemb) #0 {
entry:
  %w.addr = alloca i16**, align 8
  %nmemb.addr = alloca i64, align 8
  %err = alloca i8, align 1
  store i16** %w, i16*** %w.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i16*** %w.addr, metadata !2320, metadata !2395), !dbg !18539
  store i64 %nmemb, i64* %nmemb.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %nmemb.addr, metadata !2321, metadata !2395), !dbg !18540
  call void @llvm.lifetime.start(i64 1, i8* %err) #4, !dbg !18541
  call void @llvm.dbg.declare(metadata i8* %err, metadata !2322, metadata !2395), !dbg !18542
  store i8 0, i8* %err, align 1, !dbg !18542, !tbaa !2930
  %0 = load i16**, i16*** %w.addr, align 8, !dbg !18543, !tbaa !2505
  %1 = load i16*, i16** %0, align 8, !dbg !18544, !tbaa !2505
  %2 = bitcast i16* %1 to i8*, !dbg !18544
  %3 = load i64, i64* %nmemb.addr, align 8, !dbg !18545, !tbaa !2391
  %call = call i8* @mpd_realloc(i8* %2, i64 %3, i64 2, i8* %err), !dbg !18546
  %4 = bitcast i8* %call to i16*, !dbg !18546
  %5 = load i16**, i16*** %w.addr, align 8, !dbg !18547, !tbaa !2505
  store i16* %4, i16** %5, align 8, !dbg !18548, !tbaa !2505
  %6 = load i8, i8* %err, align 1, !dbg !18549, !tbaa !2930
  %tobool = icmp ne i8 %6, 0, !dbg !18550
  %lnot = xor i1 %tobool, true, !dbg !18550
  %lnot.ext = zext i1 %lnot to i32, !dbg !18550
  %conv = trunc i32 %lnot.ext to i8, !dbg !18550
  call void @llvm.lifetime.end(i64 1, i8* %err) #4, !dbg !18551
  ret i8 %conv, !dbg !18552
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @mpd_resize_u32(i32** %w, i64 %nmemb) #0 {
entry:
  %w.addr = alloca i32**, align 8
  %nmemb.addr = alloca i64, align 8
  %err = alloca i8, align 1
  store i32** %w, i32*** %w.addr, align 8, !tbaa !2505
  call void @llvm.dbg.declare(metadata i32*** %w.addr, metadata !2338, metadata !2395), !dbg !18553
  store i64 %nmemb, i64* %nmemb.addr, align 8, !tbaa !2391
  call void @llvm.dbg.declare(metadata i64* %nmemb.addr, metadata !2339, metadata !2395), !dbg !18554
  call void @llvm.lifetime.start(i64 1, i8* %err) #4, !dbg !18555
  call void @llvm.dbg.declare(metadata i8* %err, metadata !2340, metadata !2395), !dbg !18556
  store i8 0, i8* %err, align 1, !dbg !18556, !tbaa !2930
  %0 = load i32**, i32*** %w.addr, align 8, !dbg !18557, !tbaa !2505
  %1 = load i32*, i32** %0, align 8, !dbg !18558, !tbaa !2505
  %2 = bitcast i32* %1 to i8*, !dbg !18558
  %3 = load i64, i64* %nmemb.addr, align 8, !dbg !18559, !tbaa !2391
  %call = call i8* @mpd_realloc(i8* %2, i64 %3, i64 4, i8* %err), !dbg !18560
  %4 = bitcast i8* %call to i32*, !dbg !18560
  %5 = load i32**, i32*** %w.addr, align 8, !dbg !18561, !tbaa !2505
  store i32* %4, i32** %5, align 8, !dbg !18562, !tbaa !2505
  %6 = load i8, i8* %err, align 1, !dbg !18563, !tbaa !2930
  %tobool = icmp ne i8 %6, 0, !dbg !18564
  %lnot = xor i1 %tobool, true, !dbg !18564
  %lnot.ext = zext i1 %lnot to i32, !dbg !18564
  %conv = trunc i32 %lnot.ext to i8, !dbg !18564
  call void @llvm.lifetime.end(i64 1, i8* %err) #4, !dbg !18565
  ret i8 %conv, !dbg !18566
}

declare hidden i64 @_mpd_shortdiv_b(i64*, i64*, i64, i64, i64) #5

declare hidden i64 @_mpd_shortmul_c(i64*, i64*, i64, i64) #5

declare hidden i64 @_mpd_shortadd(i64*, i64, i64) #5

declare hidden i64 @_mpd_shortmul_b(i64*, i64*, i64, i64, i64) #5

declare hidden i64 @_mpd_shortadd_b(i64*, i64, i64, i64) #5

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { alwaysinline inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2386, !2387, !2388}
!llvm.ident = !{!2389}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !36, subprograms: !69, globals: !2373)
!1 = !DIFile(filename: "mpdecimal.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{!3, !8, !21, !25, !30}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 3648, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_decimal/libmpdec/mpdecimal.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!5 = !{!6, !7}
!6 = !DIEnumerator(name: "NO_IDEAL_EXP", value: 0)
!7 = !DIEnumerator(name: "SET_IDEAL_EXP", value: 1)
!8 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 241, size: 32, align: 32, elements: !10)
!9 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_decimal/libmpdec/mpdecimal.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!10 = !{!11, !12, !13, !14, !15, !16, !17, !18, !19, !20}
!11 = !DIEnumerator(name: "MPD_ROUND_UP", value: 0)
!12 = !DIEnumerator(name: "MPD_ROUND_DOWN", value: 1)
!13 = !DIEnumerator(name: "MPD_ROUND_CEILING", value: 2)
!14 = !DIEnumerator(name: "MPD_ROUND_FLOOR", value: 3)
!15 = !DIEnumerator(name: "MPD_ROUND_HALF_UP", value: 4)
!16 = !DIEnumerator(name: "MPD_ROUND_HALF_DOWN", value: 5)
!17 = !DIEnumerator(name: "MPD_ROUND_HALF_EVEN", value: 6)
!18 = !DIEnumerator(name: "MPD_ROUND_05UP", value: 7)
!19 = !DIEnumerator(name: "MPD_ROUND_TRUNC", value: 8)
!20 = !DIEnumerator(name: "MPD_ROUND_GUARD", value: 9)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 4957, size: 32, align: 32, elements: !22)
!22 = !{!23, !24}
!23 = !DIEnumerator(name: "SKIP_FINALIZE", value: 0)
!24 = !DIEnumerator(name: "DO_FINALIZE", value: 1)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 7119, size: 32, align: 32, elements: !26)
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TO_INT_EXACT", value: 0)
!28 = !DIEnumerator(name: "TO_INT_SILENT", value: 1)
!29 = !DIEnumerator(name: "TO_INT_TRUNC", value: 2)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !31, line: 71, size: 32, align: 32, elements: !32)
!31 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_decimal/libmpdec/constants.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!32 = !{!33, !34, !35}
!33 = !DIEnumerator(name: "P1", value: 0)
!34 = !DIEnumerator(name: "P2", value: 1)
!35 = !DIEnumerator(name: "P3", value: 2)
!36 = !{!37, !40, !43, !47, !49, !51, !44, !50, !52, !53, !55, !56, !67}
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !38, line: 48, baseType: !39)
!38 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!39 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "mpd_uint_t", file: !9, line: 149, baseType: !41)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !38, line: 55, baseType: !42)
!42 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "mpd_ssize_t", file: !9, line: 157, baseType: !44)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !45, line: 197, baseType: !46)
!45 = !DIFile(filename: "/usr/include/sys/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!46 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!47 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !38, line: 51, baseType: !48)
!48 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!49 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !45, line: 196, baseType: !50)
!50 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!52 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!53 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !54, line: 62, baseType: !42)
!54 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "mpd_size_t", file: !9, line: 152, baseType: !53)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64, align: 64)
!57 = !DIDerivedType(tag: DW_TAG_typedef, name: "mpd_t", file: !9, line: 379, baseType: !58)
!58 = !DICompositeType(tag: DW_TAG_structure_type, name: "mpd_t", file: !9, line: 372, size: 384, align: 64, elements: !59)
!59 = !{!60, !61, !62, !63, !64, !65}
!60 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !58, file: !9, line: 373, baseType: !37, size: 8, align: 8)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !58, file: !9, line: 374, baseType: !43, size: 64, align: 64, offset: 64)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "digits", scope: !58, file: !9, line: 375, baseType: !43, size: 64, align: 64, offset: 128)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !58, file: !9, line: 376, baseType: !43, size: 64, align: 64, offset: 192)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !58, file: !9, line: 377, baseType: !43, size: 64, align: 64, offset: 256)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !58, file: !9, line: 378, baseType: !66, size: 64, align: 64, offset: 320)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64, align: 64)
!67 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !38, line: 49, baseType: !68)
!68 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!69 = !{!70, !77, !82, !89, !108, !111, !116, !122, !125, !132, !137, !142, !145, !148, !151, !154, !157, !160, !163, !166, !169, !172, !175, !181, !185, !188, !191, !196, !199, !202, !205, !208, !211, !214, !217, !220, !227, !232, !240, !245, !251, !260, !266, !270, !276, !283, !286, !289, !292, !295, !298, !301, !304, !307, !310, !313, !316, !319, !323, !328, !331, !340, !346, !349, !354, !357, !364, !371, !381, !389, !397, !405, !413, !421, !427, !433, !439, !445, !451, !457, !463, !467, !475, !481, !487, !494, !501, !509, !521, !526, !533, !539, !544, !549, !558, !565, !573, !581, !592, !600, !606, !612, !621, !630, !640, !659, !665, !682, !688, !705, !725, !736, !745, !754, !771, !777, !784, !791, !801, !813, !823, !833, !842, !851, !860, !869, !876, !883, !890, !897, !904, !915, !925, !935, !945, !952, !959, !966, !973, !993, !1005, !1026, !1046, !1069, !1077, !1085, !1093, !1101, !1108, !1118, !1128, !1135, !1142, !1149, !1156, !1162, !1168, !1177, !1186, !1194, !1209, !1234, !1246, !1256, !1265, !1282, !1289, !1296, !1302, !1308, !1314, !1321, !1328, !1332, !1339, !1362, !1370, !1385, !1399, !1415, !1430, !1440, !1444, !1452, !1460, !1466, !1480, !1489, !1493, !1503, !1511, !1521, !1530, !1537, !1546, !1554, !1557, !1563, !1569, !1585, !1591, !1600, !1604, !1610, !1620, !1626, !1633, !1640, !1649, !1671, !1679, !1707, !1714, !1729, !1752, !1763, !1772, !1780, !1801, !1817, !1826, !1834, !1846, !1853, !1861, !1866, !1875, !1882, !1909, !1912, !1916, !1928, !1935, !1948, !1956, !1965, !1976, !1986, !1999, !2007, !2011, !2017, !2022, !2034, !2046, !2054, !2064, !2082, !2088, !2099, !2112, !2125, !2134, !2148, !2162, !2172, !2185, !2193, !2203, !2214, !2217, !2221, !2225, !2232, !2242, !2250, !2281, !2291, !2298, !2306, !2316, !2323, !2334, !2341, !2348, !2360}
!70 = !DISubprogram(name: "mpd_version", scope: !4, file: !4, line: 120, type: !71, isLocal: false, isDefinition: true, scopeLine: 121, flags: DIFlagPrototyped, isOptimized: true, function: i8* ()* @mpd_version, variables: !76)
!71 = !DISubroutineType(types: !72)
!72 = !{!73}
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64, align: 64)
!74 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !75)
!75 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!76 = !{}
!77 = !DISubprogram(name: "mpd_word_digits", scope: !4, file: !4, line: 133, type: !78, isLocal: false, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64)* @mpd_word_digits, variables: !80)
!78 = !DISubroutineType(types: !79)
!79 = !{!50, !40}
!80 = !{!81}
!81 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "word", arg: 1, scope: !77, file: !4, line: 133, type: !40)
!82 = !DISubprogram(name: "mpd_adjexp", scope: !4, file: !4, line: 192, type: !83, isLocal: false, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*)* @mpd_adjexp, variables: !87)
!83 = !DISubroutineType(types: !84)
!84 = !{!43, !85}
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64, align: 64)
!86 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !57)
!87 = !{!88}
!88 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !82, file: !4, line: 192, type: !85)
!89 = !DISubprogram(name: "mpd_etiny", scope: !4, file: !4, line: 199, type: !90, isLocal: false, isDefinition: true, scopeLine: 200, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_context_t*)* @mpd_etiny, variables: !106)
!90 = !DISubroutineType(types: !91)
!91 = !{!43, !92}
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64, align: 64)
!93 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !94)
!94 = !DIDerivedType(tag: DW_TAG_typedef, name: "mpd_context_t", file: !9, line: 270, baseType: !95)
!95 = !DICompositeType(tag: DW_TAG_structure_type, name: "mpd_context_t", file: !9, line: 260, size: 384, align: 64, elements: !96)
!96 = !{!97, !98, !99, !100, !101, !102, !103, !104, !105}
!97 = !DIDerivedType(tag: DW_TAG_member, name: "prec", scope: !95, file: !9, line: 261, baseType: !43, size: 64, align: 64)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "emax", scope: !95, file: !9, line: 262, baseType: !43, size: 64, align: 64, offset: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "emin", scope: !95, file: !9, line: 263, baseType: !43, size: 64, align: 64, offset: 128)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "traps", scope: !95, file: !9, line: 264, baseType: !47, size: 32, align: 32, offset: 192)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !95, file: !9, line: 265, baseType: !47, size: 32, align: 32, offset: 224)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "newtrap", scope: !95, file: !9, line: 266, baseType: !47, size: 32, align: 32, offset: 256)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "round", scope: !95, file: !9, line: 267, baseType: !50, size: 32, align: 32, offset: 288)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "clamp", scope: !95, file: !9, line: 268, baseType: !50, size: 32, align: 32, offset: 320)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "allcr", scope: !95, file: !9, line: 269, baseType: !50, size: 32, align: 32, offset: 352)
!106 = !{!107}
!107 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 1, scope: !89, file: !4, line: 199, type: !92)
!108 = !DISubprogram(name: "mpd_etop", scope: !4, file: !4, line: 206, type: !90, isLocal: false, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_context_t*)* @mpd_etop, variables: !109)
!109 = !{!110}
!110 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 1, scope: !108, file: !4, line: 206, type: !92)
!111 = !DISubprogram(name: "mpd_msword", scope: !4, file: !4, line: 213, type: !112, isLocal: false, isDefinition: true, scopeLine: 214, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*)* @mpd_msword, variables: !114)
!112 = !DISubroutineType(types: !113)
!113 = !{!40, !85}
!114 = !{!115}
!115 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !111, file: !4, line: 213, type: !85)
!116 = !DISubprogram(name: "mpd_msd", scope: !4, file: !4, line: 221, type: !117, isLocal: false, isDefinition: true, scopeLine: 222, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i64)* @mpd_msd, variables: !119)
!117 = !DISubroutineType(types: !118)
!118 = !{!40, !40}
!119 = !{!120, !121}
!120 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "word", arg: 1, scope: !116, file: !4, line: 221, type: !40)
!121 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !116, file: !4, line: 223, type: !50)
!122 = !DISubprogram(name: "mpd_lsd", scope: !4, file: !4, line: 231, type: !117, isLocal: false, isDefinition: true, scopeLine: 232, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i64)* @mpd_lsd, variables: !123)
!123 = !{!124}
!124 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "word", arg: 1, scope: !122, file: !4, line: 231, type: !40)
!125 = !DISubprogram(name: "mpd_digits_to_size", scope: !4, file: !4, line: 238, type: !126, isLocal: false, isDefinition: true, scopeLine: 239, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i64)* @mpd_digits_to_size, variables: !128)
!126 = !DISubroutineType(types: !127)
!127 = !{!43, !43}
!128 = !{!129, !130, !131}
!129 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "digits", arg: 1, scope: !125, file: !4, line: 238, type: !43)
!130 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q", scope: !125, file: !4, line: 240, type: !43)
!131 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !125, file: !4, line: 240, type: !43)
!132 = !DISubprogram(name: "mpd_exp_digits", scope: !4, file: !4, line: 248, type: !133, isLocal: false, isDefinition: true, scopeLine: 249, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64)* @mpd_exp_digits, variables: !135)
!133 = !DISubroutineType(types: !134)
!134 = !{!50, !43}
!135 = !{!136}
!136 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exp", arg: 1, scope: !132, file: !4, line: 248, type: !43)
!137 = !DISubprogram(name: "mpd_iscanonical", scope: !4, file: !4, line: 256, type: !138, isLocal: false, isDefinition: true, scopeLine: 257, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_iscanonical, variables: !140)
!138 = !DISubroutineType(types: !139)
!139 = !{!50, !85}
!140 = !{!141}
!141 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !137, file: !4, line: 256, type: !85)
!142 = !DISubprogram(name: "mpd_isfinite", scope: !4, file: !4, line: 263, type: !138, isLocal: false, isDefinition: true, scopeLine: 264, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_isfinite, variables: !143)
!143 = !{!144}
!144 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !142, file: !4, line: 263, type: !85)
!145 = !DISubprogram(name: "mpd_isinfinite", scope: !4, file: !4, line: 270, type: !138, isLocal: false, isDefinition: true, scopeLine: 271, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_isinfinite, variables: !146)
!146 = !{!147}
!147 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !145, file: !4, line: 270, type: !85)
!148 = !DISubprogram(name: "mpd_isnan", scope: !4, file: !4, line: 277, type: !138, isLocal: false, isDefinition: true, scopeLine: 278, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_isnan, variables: !149)
!149 = !{!150}
!150 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !148, file: !4, line: 277, type: !85)
!151 = !DISubprogram(name: "mpd_isnegative", scope: !4, file: !4, line: 284, type: !138, isLocal: false, isDefinition: true, scopeLine: 285, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_isnegative, variables: !152)
!152 = !{!153}
!153 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !151, file: !4, line: 284, type: !85)
!154 = !DISubprogram(name: "mpd_ispositive", scope: !4, file: !4, line: 291, type: !138, isLocal: false, isDefinition: true, scopeLine: 292, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_ispositive, variables: !155)
!155 = !{!156}
!156 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !154, file: !4, line: 291, type: !85)
!157 = !DISubprogram(name: "mpd_isqnan", scope: !4, file: !4, line: 298, type: !138, isLocal: false, isDefinition: true, scopeLine: 299, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_isqnan, variables: !158)
!158 = !{!159}
!159 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !157, file: !4, line: 298, type: !85)
!160 = !DISubprogram(name: "mpd_issigned", scope: !4, file: !4, line: 305, type: !138, isLocal: false, isDefinition: true, scopeLine: 306, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_issigned, variables: !161)
!161 = !{!162}
!162 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !160, file: !4, line: 305, type: !85)
!163 = !DISubprogram(name: "mpd_issnan", scope: !4, file: !4, line: 312, type: !138, isLocal: false, isDefinition: true, scopeLine: 313, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_issnan, variables: !164)
!164 = !{!165}
!165 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !163, file: !4, line: 312, type: !85)
!166 = !DISubprogram(name: "mpd_isspecial", scope: !4, file: !4, line: 319, type: !138, isLocal: false, isDefinition: true, scopeLine: 320, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_isspecial, variables: !167)
!167 = !{!168}
!168 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !166, file: !4, line: 319, type: !85)
!169 = !DISubprogram(name: "mpd_iszero", scope: !4, file: !4, line: 326, type: !138, isLocal: false, isDefinition: true, scopeLine: 327, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_iszero, variables: !170)
!170 = !{!171}
!171 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !169, file: !4, line: 326, type: !85)
!172 = !DISubprogram(name: "mpd_iszerocoeff", scope: !4, file: !4, line: 333, type: !138, isLocal: false, isDefinition: true, scopeLine: 334, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_iszerocoeff, variables: !173)
!173 = !{!174}
!174 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !172, file: !4, line: 333, type: !85)
!175 = !DISubprogram(name: "mpd_isnormal", scope: !4, file: !4, line: 340, type: !176, isLocal: false, isDefinition: true, scopeLine: 341, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_context_t*)* @mpd_isnormal, variables: !178)
!176 = !DISubroutineType(types: !177)
!177 = !{!50, !85, !92}
!178 = !{!179, !180}
!179 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !175, file: !4, line: 340, type: !85)
!180 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !175, file: !4, line: 340, type: !92)
!181 = !DISubprogram(name: "mpd_issubnormal", scope: !4, file: !4, line: 350, type: !176, isLocal: false, isDefinition: true, scopeLine: 351, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_context_t*)* @mpd_issubnormal, variables: !182)
!182 = !{!183, !184}
!183 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !181, file: !4, line: 350, type: !85)
!184 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !181, file: !4, line: 350, type: !92)
!185 = !DISubprogram(name: "mpd_isoddword", scope: !4, file: !4, line: 360, type: !78, isLocal: false, isDefinition: true, scopeLine: 361, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64)* @mpd_isoddword, variables: !186)
!186 = !{!187}
!187 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "word", arg: 1, scope: !185, file: !4, line: 360, type: !40)
!188 = !DISubprogram(name: "mpd_isoddcoeff", scope: !4, file: !4, line: 367, type: !138, isLocal: false, isDefinition: true, scopeLine: 368, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_isoddcoeff, variables: !189)
!189 = !{!190}
!190 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !188, file: !4, line: 367, type: !85)
!191 = !DISubprogram(name: "mpd_sign", scope: !4, file: !4, line: 374, type: !192, isLocal: false, isDefinition: true, scopeLine: 375, flags: DIFlagPrototyped, isOptimized: true, function: i8 (%struct.mpd_t*)* @mpd_sign, variables: !194)
!192 = !DISubroutineType(types: !193)
!193 = !{!37, !85}
!194 = !{!195}
!195 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !191, file: !4, line: 374, type: !85)
!196 = !DISubprogram(name: "mpd_arith_sign", scope: !4, file: !4, line: 381, type: !138, isLocal: false, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_arith_sign, variables: !197)
!197 = !{!198}
!198 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !196, file: !4, line: 381, type: !85)
!199 = !DISubprogram(name: "mpd_radix", scope: !4, file: !4, line: 388, type: !200, isLocal: false, isDefinition: true, scopeLine: 389, flags: DIFlagPrototyped, isOptimized: true, function: i64 ()* @mpd_radix, variables: !76)
!200 = !DISubroutineType(types: !201)
!201 = !{!46}
!202 = !DISubprogram(name: "mpd_isdynamic", scope: !4, file: !4, line: 395, type: !138, isLocal: false, isDefinition: true, scopeLine: 396, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_isdynamic, variables: !203)
!203 = !{!204}
!204 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !202, file: !4, line: 395, type: !85)
!205 = !DISubprogram(name: "mpd_isstatic", scope: !4, file: !4, line: 402, type: !138, isLocal: false, isDefinition: true, scopeLine: 403, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_isstatic, variables: !206)
!206 = !{!207}
!207 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !205, file: !4, line: 402, type: !85)
!208 = !DISubprogram(name: "mpd_isdynamic_data", scope: !4, file: !4, line: 409, type: !138, isLocal: false, isDefinition: true, scopeLine: 410, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_isdynamic_data, variables: !209)
!209 = !{!210}
!210 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !208, file: !4, line: 409, type: !85)
!211 = !DISubprogram(name: "mpd_isstatic_data", scope: !4, file: !4, line: 416, type: !138, isLocal: false, isDefinition: true, scopeLine: 417, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_isstatic_data, variables: !212)
!212 = !{!213}
!213 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !211, file: !4, line: 416, type: !85)
!214 = !DISubprogram(name: "mpd_isshared_data", scope: !4, file: !4, line: 423, type: !138, isLocal: false, isDefinition: true, scopeLine: 424, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_isshared_data, variables: !215)
!215 = !{!216}
!216 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !214, file: !4, line: 423, type: !85)
!217 = !DISubprogram(name: "mpd_isconst_data", scope: !4, file: !4, line: 430, type: !138, isLocal: false, isDefinition: true, scopeLine: 431, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_isconst_data, variables: !218)
!218 = !{!219}
!219 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !217, file: !4, line: 430, type: !85)
!220 = !DISubprogram(name: "mpd_uint_zero", scope: !4, file: !4, line: 442, type: !221, isLocal: false, isDefinition: true, scopeLine: 443, flags: DIFlagPrototyped, isOptimized: true, function: void (i64*, i64)* @mpd_uint_zero, variables: !223)
!221 = !DISubroutineType(types: !222)
!222 = !{null, !66, !55}
!223 = !{!224, !225, !226}
!224 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dest", arg: 1, scope: !220, file: !4, line: 442, type: !66)
!225 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 2, scope: !220, file: !4, line: 442, type: !55)
!226 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !220, file: !4, line: 444, type: !55)
!227 = !DISubprogram(name: "mpd_del", scope: !4, file: !4, line: 453, type: !228, isLocal: false, isDefinition: true, scopeLine: 454, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_del, variables: !230)
!228 = !DISubroutineType(types: !229)
!229 = !{null, !56}
!230 = !{!231}
!231 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !227, file: !4, line: 453, type: !56)
!232 = !DISubprogram(name: "mpd_qresize", scope: !4, file: !4, line: 488, type: !233, isLocal: false, isDefinition: true, scopeLine: 489, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, i64, i32*)* @mpd_qresize, variables: !236)
!233 = !DISubroutineType(types: !234)
!234 = !{!50, !56, !43, !235}
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64, align: 64)
!236 = !{!237, !238, !239}
!237 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !232, file: !4, line: 488, type: !56)
!238 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nwords", arg: 2, scope: !232, file: !4, line: 488, type: !43)
!239 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !232, file: !4, line: 488, type: !235)
!240 = !DISubprogram(name: "mpd_qresize_zero", scope: !4, file: !4, line: 511, type: !233, isLocal: false, isDefinition: true, scopeLine: 512, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, i64, i32*)* @mpd_qresize_zero, variables: !241)
!241 = !{!242, !243, !244}
!242 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !240, file: !4, line: 511, type: !56)
!243 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nwords", arg: 2, scope: !240, file: !4, line: 511, type: !43)
!244 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !240, file: !4, line: 511, type: !235)
!245 = !DISubprogram(name: "mpd_minalloc", scope: !4, file: !4, line: 540, type: !228, isLocal: false, isDefinition: true, scopeLine: 541, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_minalloc, variables: !246)
!246 = !{!247, !248}
!247 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !245, file: !4, line: 540, type: !56)
!248 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !249, file: !4, line: 546, type: !37)
!249 = distinct !DILexicalBlock(scope: !250, file: !4, line: 545, column: 69)
!250 = distinct !DILexicalBlock(scope: !245, file: !4, line: 545, column: 9)
!251 = !DISubprogram(name: "mpd_resize", scope: !4, file: !4, line: 556, type: !252, isLocal: false, isDefinition: true, scopeLine: 557, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, i64, %struct.mpd_context_t*)* @mpd_resize, variables: !255)
!252 = !DISubroutineType(types: !253)
!253 = !{!50, !56, !43, !254}
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64, align: 64)
!255 = !{!256, !257, !258, !259}
!256 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !251, file: !4, line: 556, type: !56)
!257 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nwords", arg: 2, scope: !251, file: !4, line: 556, type: !43)
!258 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !251, file: !4, line: 556, type: !254)
!259 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "status", scope: !251, file: !4, line: 558, type: !47)
!260 = !DISubprogram(name: "mpd_resize_zero", scope: !4, file: !4, line: 567, type: !252, isLocal: false, isDefinition: true, scopeLine: 568, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, i64, %struct.mpd_context_t*)* @mpd_resize_zero, variables: !261)
!261 = !{!262, !263, !264, !265}
!262 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !260, file: !4, line: 567, type: !56)
!263 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nwords", arg: 2, scope: !260, file: !4, line: 567, type: !43)
!264 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !260, file: !4, line: 567, type: !254)
!265 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "status", scope: !260, file: !4, line: 569, type: !47)
!266 = !DISubprogram(name: "mpd_setdigits", scope: !4, file: !4, line: 584, type: !228, isLocal: false, isDefinition: true, scopeLine: 585, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_setdigits, variables: !267)
!267 = !{!268, !269}
!268 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !266, file: !4, line: 584, type: !56)
!269 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wdigits", scope: !266, file: !4, line: 586, type: !43)
!270 = !DISubprogram(name: "mpd_set_sign", scope: !4, file: !4, line: 592, type: !271, isLocal: false, isDefinition: true, scopeLine: 593, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i8)* @mpd_set_sign, variables: !273)
!271 = !DISubroutineType(types: !272)
!272 = !{null, !56, !37}
!273 = !{!274, !275}
!274 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !270, file: !4, line: 592, type: !56)
!275 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sign", arg: 2, scope: !270, file: !4, line: 592, type: !37)
!276 = !DISubprogram(name: "mpd_signcpy", scope: !4, file: !4, line: 600, type: !277, isLocal: false, isDefinition: true, scopeLine: 601, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*)* @mpd_signcpy, variables: !279)
!277 = !DISubroutineType(types: !278)
!278 = !{null, !56, !85}
!279 = !{!280, !281, !282}
!280 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !276, file: !4, line: 600, type: !56)
!281 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !276, file: !4, line: 600, type: !85)
!282 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign", scope: !276, file: !4, line: 602, type: !37)
!283 = !DISubprogram(name: "mpd_set_infinity", scope: !4, file: !4, line: 610, type: !228, isLocal: false, isDefinition: true, scopeLine: 611, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_set_infinity, variables: !284)
!284 = !{!285}
!285 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !283, file: !4, line: 610, type: !56)
!286 = !DISubprogram(name: "mpd_set_qnan", scope: !4, file: !4, line: 618, type: !228, isLocal: false, isDefinition: true, scopeLine: 619, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_set_qnan, variables: !287)
!287 = !{!288}
!288 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !286, file: !4, line: 618, type: !56)
!289 = !DISubprogram(name: "mpd_set_snan", scope: !4, file: !4, line: 626, type: !228, isLocal: false, isDefinition: true, scopeLine: 627, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_set_snan, variables: !290)
!290 = !{!291}
!291 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !289, file: !4, line: 626, type: !56)
!292 = !DISubprogram(name: "mpd_set_negative", scope: !4, file: !4, line: 634, type: !228, isLocal: false, isDefinition: true, scopeLine: 635, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_set_negative, variables: !293)
!293 = !{!294}
!294 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !292, file: !4, line: 634, type: !56)
!295 = !DISubprogram(name: "mpd_set_positive", scope: !4, file: !4, line: 641, type: !228, isLocal: false, isDefinition: true, scopeLine: 642, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_set_positive, variables: !296)
!296 = !{!297}
!297 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !295, file: !4, line: 641, type: !56)
!298 = !DISubprogram(name: "mpd_set_dynamic", scope: !4, file: !4, line: 648, type: !228, isLocal: false, isDefinition: true, scopeLine: 649, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_set_dynamic, variables: !299)
!299 = !{!300}
!300 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !298, file: !4, line: 648, type: !56)
!301 = !DISubprogram(name: "mpd_set_static", scope: !4, file: !4, line: 655, type: !228, isLocal: false, isDefinition: true, scopeLine: 656, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_set_static, variables: !302)
!302 = !{!303}
!303 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !301, file: !4, line: 655, type: !56)
!304 = !DISubprogram(name: "mpd_set_dynamic_data", scope: !4, file: !4, line: 662, type: !228, isLocal: false, isDefinition: true, scopeLine: 663, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_set_dynamic_data, variables: !305)
!305 = !{!306}
!306 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !304, file: !4, line: 662, type: !56)
!307 = !DISubprogram(name: "mpd_set_static_data", scope: !4, file: !4, line: 669, type: !228, isLocal: false, isDefinition: true, scopeLine: 670, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_set_static_data, variables: !308)
!308 = !{!309}
!309 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !307, file: !4, line: 669, type: !56)
!310 = !DISubprogram(name: "mpd_set_shared_data", scope: !4, file: !4, line: 677, type: !228, isLocal: false, isDefinition: true, scopeLine: 678, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_set_shared_data, variables: !311)
!311 = !{!312}
!312 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !310, file: !4, line: 677, type: !56)
!313 = !DISubprogram(name: "mpd_set_const_data", scope: !4, file: !4, line: 685, type: !228, isLocal: false, isDefinition: true, scopeLine: 686, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_set_const_data, variables: !314)
!314 = !{!315}
!315 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !313, file: !4, line: 685, type: !56)
!316 = !DISubprogram(name: "mpd_clear_flags", scope: !4, file: !4, line: 693, type: !228, isLocal: false, isDefinition: true, scopeLine: 694, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_clear_flags, variables: !317)
!317 = !{!318}
!318 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !316, file: !4, line: 693, type: !56)
!319 = !DISubprogram(name: "mpd_set_flags", scope: !4, file: !4, line: 700, type: !271, isLocal: false, isDefinition: true, scopeLine: 701, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i8)* @mpd_set_flags, variables: !320)
!320 = !{!321, !322}
!321 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !319, file: !4, line: 700, type: !56)
!322 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "flags", arg: 2, scope: !319, file: !4, line: 700, type: !37)
!323 = !DISubprogram(name: "mpd_copy_flags", scope: !4, file: !4, line: 708, type: !277, isLocal: false, isDefinition: true, scopeLine: 709, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*)* @mpd_copy_flags, variables: !324)
!324 = !{!325, !326, !327}
!325 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !323, file: !4, line: 708, type: !56)
!326 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !323, file: !4, line: 708, type: !85)
!327 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aflags", scope: !323, file: !4, line: 710, type: !37)
!328 = !DISubprogram(name: "mpd_zerocoeff", scope: !4, file: !4, line: 744, type: !228, isLocal: false, isDefinition: true, scopeLine: 745, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @mpd_zerocoeff, variables: !329)
!329 = !{!330}
!330 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !328, file: !4, line: 744, type: !56)
!331 = !DISubprogram(name: "mpd_qmaxcoeff", scope: !4, file: !4, line: 754, type: !332, isLocal: false, isDefinition: true, scopeLine: 755, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qmaxcoeff, variables: !334)
!332 = !DISubroutineType(types: !333)
!333 = !{null, !56, !92, !235}
!334 = !{!335, !336, !337, !338, !339}
!335 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !331, file: !4, line: 754, type: !56)
!336 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !331, file: !4, line: 754, type: !92)
!337 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !331, file: !4, line: 754, type: !235)
!338 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !331, file: !4, line: 756, type: !43)
!339 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !331, file: !4, line: 756, type: !43)
!340 = !DISubprogram(name: "mpd_trail_zeros", scope: !4, file: !4, line: 895, type: !83, isLocal: false, isDefinition: true, scopeLine: 896, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*)* @mpd_trail_zeros, variables: !341)
!341 = !{!342, !343, !344, !345}
!342 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !340, file: !4, line: 895, type: !85)
!343 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "word", scope: !340, file: !4, line: 897, type: !40)
!344 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !340, file: !4, line: 898, type: !43)
!345 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tz", scope: !340, file: !4, line: 898, type: !43)
!346 = !DISubprogram(name: "mpd_isinteger", scope: !4, file: !4, line: 931, type: !138, isLocal: false, isDefinition: true, scopeLine: 932, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_isinteger, variables: !347)
!347 = !{!348}
!348 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !346, file: !4, line: 931, type: !85)
!349 = !DISubprogram(name: "mpd_isodd", scope: !4, file: !4, line: 995, type: !138, isLocal: false, isDefinition: true, scopeLine: 996, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_isodd, variables: !350)
!350 = !{!351, !352, !353}
!351 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !349, file: !4, line: 995, type: !85)
!352 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q", scope: !349, file: !4, line: 997, type: !40)
!353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !349, file: !4, line: 997, type: !40)
!354 = !DISubprogram(name: "mpd_iseven", scope: !4, file: !4, line: 1010, type: !138, isLocal: false, isDefinition: true, scopeLine: 1011, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_iseven, variables: !355)
!355 = !{!356}
!356 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !354, file: !4, line: 1010, type: !85)
!357 = !DISubprogram(name: "mpd_setspecial", scope: !4, file: !4, line: 1044, type: !358, isLocal: false, isDefinition: true, scopeLine: 1045, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i8, i8)* @mpd_setspecial, variables: !360)
!358 = !DISubroutineType(types: !359)
!359 = !{null, !56, !37, !37}
!360 = !{!361, !362, !363}
!361 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !357, file: !4, line: 1044, type: !56)
!362 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sign", arg: 2, scope: !357, file: !4, line: 1044, type: !37)
!363 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 3, scope: !357, file: !4, line: 1044, type: !37)
!364 = !DISubprogram(name: "mpd_seterror", scope: !4, file: !4, line: 1054, type: !365, isLocal: false, isDefinition: true, scopeLine: 1055, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i32, i32*)* @mpd_seterror, variables: !367)
!365 = !DISubroutineType(types: !366)
!366 = !{null, !56, !47, !235}
!367 = !{!368, !369, !370}
!368 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !364, file: !4, line: 1054, type: !56)
!369 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "flags", arg: 2, scope: !364, file: !4, line: 1054, type: !47)
!370 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !364, file: !4, line: 1054, type: !235)
!371 = !DISubprogram(name: "mpd_qsset_ssize", scope: !4, file: !4, line: 1065, type: !372, isLocal: false, isDefinition: true, scopeLine: 1067, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qsset_ssize, variables: !374)
!372 = !DISubroutineType(types: !373)
!373 = !{null, !56, !43, !92, !235}
!374 = !{!375, !376, !377, !378, !379, !380}
!375 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !371, file: !4, line: 1065, type: !56)
!376 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !371, file: !4, line: 1065, type: !43)
!377 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !371, file: !4, line: 1065, type: !92)
!378 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !371, file: !4, line: 1066, type: !235)
!379 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "u", scope: !371, file: !4, line: 1068, type: !40)
!380 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign", scope: !371, file: !4, line: 1069, type: !37)
!381 = !DISubprogram(name: "mpd_qsset_uint", scope: !4, file: !4, line: 1090, type: !382, isLocal: false, isDefinition: true, scopeLine: 1092, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qsset_uint, variables: !384)
!382 = !DISubroutineType(types: !383)
!383 = !{null, !56, !40, !92, !235}
!384 = !{!385, !386, !387, !388}
!385 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !381, file: !4, line: 1090, type: !56)
!386 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !381, file: !4, line: 1090, type: !40)
!387 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !381, file: !4, line: 1090, type: !92)
!388 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !381, file: !4, line: 1091, type: !235)
!389 = !DISubprogram(name: "mpd_qsset_i32", scope: !4, file: !4, line: 1099, type: !390, isLocal: false, isDefinition: true, scopeLine: 1101, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i32, %struct.mpd_context_t*, i32*)* @mpd_qsset_i32, variables: !392)
!390 = !DISubroutineType(types: !391)
!391 = !{null, !56, !49, !92, !235}
!392 = !{!393, !394, !395, !396}
!393 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !389, file: !4, line: 1099, type: !56)
!394 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !389, file: !4, line: 1099, type: !49)
!395 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !389, file: !4, line: 1099, type: !92)
!396 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !389, file: !4, line: 1100, type: !235)
!397 = !DISubprogram(name: "mpd_qsset_u32", scope: !4, file: !4, line: 1107, type: !398, isLocal: false, isDefinition: true, scopeLine: 1109, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i32, %struct.mpd_context_t*, i32*)* @mpd_qsset_u32, variables: !400)
!398 = !DISubroutineType(types: !399)
!399 = !{null, !56, !47, !92, !235}
!400 = !{!401, !402, !403, !404}
!401 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !397, file: !4, line: 1107, type: !56)
!402 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !397, file: !4, line: 1107, type: !47)
!403 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !397, file: !4, line: 1107, type: !92)
!404 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !397, file: !4, line: 1108, type: !235)
!405 = !DISubprogram(name: "mpd_qsset_i64", scope: !4, file: !4, line: 1116, type: !406, isLocal: false, isDefinition: true, scopeLine: 1118, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qsset_i64, variables: !408)
!406 = !DISubroutineType(types: !407)
!407 = !{null, !56, !44, !92, !235}
!408 = !{!409, !410, !411, !412}
!409 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !405, file: !4, line: 1116, type: !56)
!410 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !405, file: !4, line: 1116, type: !44)
!411 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !405, file: !4, line: 1116, type: !92)
!412 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !405, file: !4, line: 1117, type: !235)
!413 = !DISubprogram(name: "mpd_qsset_u64", scope: !4, file: !4, line: 1124, type: !414, isLocal: false, isDefinition: true, scopeLine: 1126, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qsset_u64, variables: !416)
!414 = !DISubroutineType(types: !415)
!415 = !{null, !56, !41, !92, !235}
!416 = !{!417, !418, !419, !420}
!417 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !413, file: !4, line: 1124, type: !56)
!418 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !413, file: !4, line: 1124, type: !41)
!419 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !413, file: !4, line: 1124, type: !92)
!420 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !413, file: !4, line: 1125, type: !235)
!421 = !DISubprogram(name: "mpd_qset_ssize", scope: !4, file: !4, line: 1133, type: !372, isLocal: false, isDefinition: true, scopeLine: 1135, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qset_ssize, variables: !422)
!422 = !{!423, !424, !425, !426}
!423 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !421, file: !4, line: 1133, type: !56)
!424 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !421, file: !4, line: 1133, type: !43)
!425 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !421, file: !4, line: 1133, type: !92)
!426 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !421, file: !4, line: 1134, type: !235)
!427 = !DISubprogram(name: "mpd_qset_uint", scope: !4, file: !4, line: 1142, type: !382, isLocal: false, isDefinition: true, scopeLine: 1144, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qset_uint, variables: !428)
!428 = !{!429, !430, !431, !432}
!429 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !427, file: !4, line: 1142, type: !56)
!430 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !427, file: !4, line: 1142, type: !40)
!431 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !427, file: !4, line: 1142, type: !92)
!432 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !427, file: !4, line: 1143, type: !235)
!433 = !DISubprogram(name: "mpd_qset_i32", scope: !4, file: !4, line: 1151, type: !390, isLocal: false, isDefinition: true, scopeLine: 1153, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i32, %struct.mpd_context_t*, i32*)* @mpd_qset_i32, variables: !434)
!434 = !{!435, !436, !437, !438}
!435 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !433, file: !4, line: 1151, type: !56)
!436 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !433, file: !4, line: 1151, type: !49)
!437 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !433, file: !4, line: 1151, type: !92)
!438 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !433, file: !4, line: 1152, type: !235)
!439 = !DISubprogram(name: "mpd_qset_u32", scope: !4, file: !4, line: 1159, type: !398, isLocal: false, isDefinition: true, scopeLine: 1161, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i32, %struct.mpd_context_t*, i32*)* @mpd_qset_u32, variables: !440)
!440 = !{!441, !442, !443, !444}
!441 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !439, file: !4, line: 1159, type: !56)
!442 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !439, file: !4, line: 1159, type: !47)
!443 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !439, file: !4, line: 1159, type: !92)
!444 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !439, file: !4, line: 1160, type: !235)
!445 = !DISubprogram(name: "mpd_qset_i64", scope: !4, file: !4, line: 1230, type: !406, isLocal: false, isDefinition: true, scopeLine: 1232, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qset_i64, variables: !446)
!446 = !{!447, !448, !449, !450}
!447 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !445, file: !4, line: 1230, type: !56)
!448 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !445, file: !4, line: 1230, type: !44)
!449 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !445, file: !4, line: 1230, type: !92)
!450 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !445, file: !4, line: 1231, type: !235)
!451 = !DISubprogram(name: "mpd_qset_u64", scope: !4, file: !4, line: 1242, type: !414, isLocal: false, isDefinition: true, scopeLine: 1244, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qset_u64, variables: !452)
!452 = !{!453, !454, !455, !456}
!453 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !451, file: !4, line: 1242, type: !56)
!454 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !451, file: !4, line: 1242, type: !41)
!455 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !451, file: !4, line: 1242, type: !92)
!456 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !451, file: !4, line: 1243, type: !235)
!457 = !DISubprogram(name: "mpd_qget_uint", scope: !4, file: !4, line: 1325, type: !458, isLocal: false, isDefinition: true, scopeLine: 1326, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*, i32*)* @mpd_qget_uint, variables: !460)
!458 = !DISubroutineType(types: !459)
!459 = !{!40, !85, !235}
!460 = !{!461, !462}
!461 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !457, file: !4, line: 1325, type: !85)
!462 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 2, scope: !457, file: !4, line: 1325, type: !235)
!463 = !DISubprogram(name: "mpd_qabs_uint", scope: !4, file: !4, line: 1332, type: !458, isLocal: false, isDefinition: true, scopeLine: 1333, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*, i32*)* @mpd_qabs_uint, variables: !464)
!464 = !{!465, !466}
!465 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !463, file: !4, line: 1332, type: !85)
!466 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 2, scope: !463, file: !4, line: 1332, type: !235)
!467 = !DISubprogram(name: "mpd_qget_ssize", scope: !4, file: !4, line: 1339, type: !468, isLocal: false, isDefinition: true, scopeLine: 1340, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*, i32*)* @mpd_qget_ssize, variables: !470)
!468 = !DISubroutineType(types: !469)
!469 = !{!43, !85, !235}
!470 = !{!471, !472, !473, !474}
!471 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !467, file: !4, line: 1339, type: !85)
!472 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 2, scope: !467, file: !4, line: 1339, type: !235)
!473 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "u", scope: !467, file: !4, line: 1341, type: !40)
!474 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "isneg", scope: !467, file: !4, line: 1342, type: !50)
!475 = !DISubprogram(name: "mpd_qget_u64", scope: !4, file: !4, line: 1449, type: !476, isLocal: false, isDefinition: true, scopeLine: 1450, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*, i32*)* @mpd_qget_u64, variables: !478)
!476 = !DISubroutineType(types: !477)
!477 = !{!41, !85, !235}
!478 = !{!479, !480}
!479 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !475, file: !4, line: 1449, type: !85)
!480 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 2, scope: !475, file: !4, line: 1449, type: !235)
!481 = !DISubprogram(name: "mpd_qget_i64", scope: !4, file: !4, line: 1456, type: !482, isLocal: false, isDefinition: true, scopeLine: 1457, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*, i32*)* @mpd_qget_i64, variables: !484)
!482 = !DISubroutineType(types: !483)
!483 = !{!44, !85, !235}
!484 = !{!485, !486}
!485 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !481, file: !4, line: 1456, type: !85)
!486 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 2, scope: !481, file: !4, line: 1456, type: !235)
!487 = !DISubprogram(name: "mpd_qget_u32", scope: !4, file: !4, line: 1463, type: !488, isLocal: false, isDefinition: true, scopeLine: 1464, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, i32*)* @mpd_qget_u32, variables: !490)
!488 = !DISubroutineType(types: !489)
!489 = !{!47, !85, !235}
!490 = !{!491, !492, !493}
!491 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !487, file: !4, line: 1463, type: !85)
!492 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 2, scope: !487, file: !4, line: 1463, type: !235)
!493 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !487, file: !4, line: 1465, type: !41)
!494 = !DISubprogram(name: "mpd_qget_i32", scope: !4, file: !4, line: 1480, type: !495, isLocal: false, isDefinition: true, scopeLine: 1481, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, i32*)* @mpd_qget_i32, variables: !497)
!495 = !DISubroutineType(types: !496)
!496 = !{!49, !85, !235}
!497 = !{!498, !499, !500}
!498 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !494, file: !4, line: 1480, type: !85)
!499 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 2, scope: !494, file: !4, line: 1480, type: !235)
!500 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !494, file: !4, line: 1482, type: !44)
!501 = !DISubprogram(name: "mpd_qcheck_nan", scope: !4, file: !4, line: 1537, type: !502, isLocal: false, isDefinition: true, scopeLine: 1539, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qcheck_nan, variables: !504)
!502 = !DISubroutineType(types: !503)
!503 = !{!50, !56, !85, !92, !235}
!504 = !{!505, !506, !507, !508}
!505 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !501, file: !4, line: 1537, type: !56)
!506 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !501, file: !4, line: 1537, type: !85)
!507 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !501, file: !4, line: 1537, type: !92)
!508 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !501, file: !4, line: 1538, type: !235)
!509 = !DISubprogram(name: "mpd_qcheck_nans", scope: !4, file: !4, line: 1556, type: !510, isLocal: false, isDefinition: true, scopeLine: 1558, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qcheck_nans, variables: !512)
!510 = !DISubroutineType(types: !511)
!511 = !{!50, !56, !85, !85, !92, !235}
!512 = !{!513, !514, !515, !516, !517, !518}
!513 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !509, file: !4, line: 1556, type: !56)
!514 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !509, file: !4, line: 1556, type: !85)
!515 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !509, file: !4, line: 1556, type: !85)
!516 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !509, file: !4, line: 1557, type: !92)
!517 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !509, file: !4, line: 1557, type: !235)
!518 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "choice", scope: !519, file: !4, line: 1560, type: !85)
!519 = distinct !DILexicalBlock(scope: !520, file: !4, line: 1559, column: 58)
!520 = distinct !DILexicalBlock(scope: !509, file: !4, line: 1559, column: 9)
!521 = !DISubprogram(name: "mpd_qfinalize", scope: !4, file: !4, line: 1880, type: !332, isLocal: false, isDefinition: true, scopeLine: 1881, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qfinalize, variables: !522)
!522 = !{!523, !524, !525}
!523 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !521, file: !4, line: 1880, type: !56)
!524 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !521, file: !4, line: 1880, type: !92)
!525 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !521, file: !4, line: 1880, type: !235)
!526 = !DISubprogram(name: "mpd_qcopy", scope: !4, file: !4, line: 1916, type: !527, isLocal: false, isDefinition: true, scopeLine: 1917, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, i32*)* @mpd_qcopy, variables: !529)
!527 = !DISubroutineType(types: !528)
!528 = !{!50, !56, !85, !235}
!529 = !{!530, !531, !532}
!530 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !526, file: !4, line: 1916, type: !56)
!531 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !526, file: !4, line: 1916, type: !85)
!532 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !526, file: !4, line: 1916, type: !235)
!533 = !DISubprogram(name: "mpd_qncopy", scope: !4, file: !4, line: 1955, type: !534, isLocal: false, isDefinition: true, scopeLine: 1956, flags: DIFlagPrototyped, isOptimized: true, function: %struct.mpd_t* (%struct.mpd_t*)* @mpd_qncopy, variables: !536)
!534 = !DISubroutineType(types: !535)
!535 = !{!56, !85}
!536 = !{!537, !538}
!537 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !533, file: !4, line: 1955, type: !85)
!538 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !533, file: !4, line: 1957, type: !56)
!539 = !DISubprogram(name: "mpd_qcopy_abs", scope: !4, file: !4, line: 1976, type: !527, isLocal: false, isDefinition: true, scopeLine: 1977, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, i32*)* @mpd_qcopy_abs, variables: !540)
!540 = !{!541, !542, !543}
!541 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !539, file: !4, line: 1976, type: !56)
!542 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !539, file: !4, line: 1976, type: !85)
!543 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !539, file: !4, line: 1976, type: !235)
!544 = !DISubprogram(name: "mpd_qcopy_negate", scope: !4, file: !4, line: 1990, type: !527, isLocal: false, isDefinition: true, scopeLine: 1991, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, i32*)* @mpd_qcopy_negate, variables: !545)
!545 = !{!546, !547, !548}
!546 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !544, file: !4, line: 1990, type: !56)
!547 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !544, file: !4, line: 1990, type: !85)
!548 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !544, file: !4, line: 1990, type: !235)
!549 = !DISubprogram(name: "mpd_qcopy_sign", scope: !4, file: !4, line: 2004, type: !550, isLocal: false, isDefinition: true, scopeLine: 2005, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, i32*)* @mpd_qcopy_sign, variables: !552)
!550 = !DISubroutineType(types: !551)
!551 = !{!50, !56, !85, !85, !235}
!552 = !{!553, !554, !555, !556, !557}
!553 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !549, file: !4, line: 2004, type: !56)
!554 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !549, file: !4, line: 2004, type: !85)
!555 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !549, file: !4, line: 2004, type: !85)
!556 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !549, file: !4, line: 2004, type: !235)
!557 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign_b", scope: !549, file: !4, line: 2006, type: !37)
!558 = !DISubprogram(name: "mpd_qcmp", scope: !4, file: !4, line: 2222, type: !559, isLocal: false, isDefinition: true, scopeLine: 2223, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, i32*)* @mpd_qcmp, variables: !561)
!559 = !DISubroutineType(types: !560)
!560 = !{!50, !85, !85, !235}
!561 = !{!562, !563, !564}
!562 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !558, file: !4, line: 2222, type: !85)
!563 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !558, file: !4, line: 2222, type: !85)
!564 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !558, file: !4, line: 2222, type: !235)
!565 = !DISubprogram(name: "mpd_qcompare", scope: !4, file: !4, line: 2240, type: !510, isLocal: false, isDefinition: true, scopeLine: 2242, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qcompare, variables: !566)
!566 = !{!567, !568, !569, !570, !571, !572}
!567 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !565, file: !4, line: 2240, type: !56)
!568 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !565, file: !4, line: 2240, type: !85)
!569 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !565, file: !4, line: 2240, type: !85)
!570 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !565, file: !4, line: 2241, type: !92)
!571 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !565, file: !4, line: 2241, type: !235)
!572 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !565, file: !4, line: 2243, type: !50)
!573 = !DISubprogram(name: "mpd_qcompare_signal", scope: !4, file: !4, line: 2258, type: !510, isLocal: false, isDefinition: true, scopeLine: 2260, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qcompare_signal, variables: !574)
!574 = !{!575, !576, !577, !578, !579, !580}
!575 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !573, file: !4, line: 2258, type: !56)
!576 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !573, file: !4, line: 2258, type: !85)
!577 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !573, file: !4, line: 2258, type: !85)
!578 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !573, file: !4, line: 2259, type: !92)
!579 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !573, file: !4, line: 2259, type: !235)
!580 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !573, file: !4, line: 2261, type: !50)
!581 = !DISubprogram(name: "mpd_cmp_total", scope: !4, file: !4, line: 2277, type: !582, isLocal: false, isDefinition: true, scopeLine: 2278, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*)* @mpd_cmp_total, variables: !584)
!582 = !DISubroutineType(types: !583)
!583 = !{!50, !85, !85}
!584 = !{!585, !586, !587, !588, !589, !590, !591}
!585 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !581, file: !4, line: 2277, type: !85)
!586 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !581, file: !4, line: 2277, type: !85)
!587 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aa", scope: !581, file: !4, line: 2279, type: !57)
!588 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb", scope: !581, file: !4, line: 2279, type: !57)
!589 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nan_a", scope: !581, file: !4, line: 2280, type: !50)
!590 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nan_b", scope: !581, file: !4, line: 2280, type: !50)
!591 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !581, file: !4, line: 2281, type: !50)
!592 = !DISubprogram(name: "mpd_compare_total", scope: !4, file: !4, line: 2329, type: !593, isLocal: false, isDefinition: true, scopeLine: 2330, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*)* @mpd_compare_total, variables: !595)
!593 = !DISubroutineType(types: !594)
!594 = !{!50, !56, !85, !85}
!595 = !{!596, !597, !598, !599}
!596 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !592, file: !4, line: 2329, type: !56)
!597 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !592, file: !4, line: 2329, type: !85)
!598 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !592, file: !4, line: 2329, type: !85)
!599 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !592, file: !4, line: 2331, type: !50)
!600 = !DISubprogram(name: "mpd_cmp_total_mag", scope: !4, file: !4, line: 2340, type: !582, isLocal: false, isDefinition: true, scopeLine: 2341, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*)* @mpd_cmp_total_mag, variables: !601)
!601 = !{!602, !603, !604, !605}
!602 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !600, file: !4, line: 2340, type: !85)
!603 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !600, file: !4, line: 2340, type: !85)
!604 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aa", scope: !600, file: !4, line: 2342, type: !57)
!605 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb", scope: !600, file: !4, line: 2342, type: !57)
!606 = !DISubprogram(name: "mpd_compare_total_mag", scope: !4, file: !4, line: 2359, type: !593, isLocal: false, isDefinition: true, scopeLine: 2360, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*)* @mpd_compare_total_mag, variables: !607)
!607 = !{!608, !609, !610, !611}
!608 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !606, file: !4, line: 2359, type: !56)
!609 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !606, file: !4, line: 2359, type: !85)
!610 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !606, file: !4, line: 2359, type: !85)
!611 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !606, file: !4, line: 2361, type: !50)
!612 = !DISubprogram(name: "mpd_qshiftl", scope: !4, file: !4, line: 2399, type: !613, isLocal: false, isDefinition: true, scopeLine: 2400, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, i64, i32*)* @mpd_qshiftl, variables: !615)
!613 = !DISubroutineType(types: !614)
!614 = !{!50, !56, !85, !43, !235}
!615 = !{!616, !617, !618, !619, !620}
!616 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !612, file: !4, line: 2399, type: !56)
!617 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !612, file: !4, line: 2399, type: !85)
!618 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 3, scope: !612, file: !4, line: 2399, type: !43)
!619 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !612, file: !4, line: 2399, type: !235)
!620 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !612, file: !4, line: 2401, type: !43)
!621 = !DISubprogram(name: "mpd_qshiftr_inplace", scope: !4, file: !4, line: 2489, type: !622, isLocal: false, isDefinition: true, scopeLine: 2490, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*, i64)* @mpd_qshiftr_inplace, variables: !624)
!622 = !DISubroutineType(types: !623)
!623 = !{!40, !56, !43}
!624 = !{!625, !626, !627, !628, !629}
!625 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !621, file: !4, line: 2489, type: !56)
!626 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 2, scope: !621, file: !4, line: 2489, type: !43)
!627 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dummy", scope: !621, file: !4, line: 2491, type: !47)
!628 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rnd", scope: !621, file: !4, line: 2492, type: !40)
!629 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !621, file: !4, line: 2493, type: !43)
!630 = !DISubprogram(name: "mpd_qshiftr", scope: !4, file: !4, line: 2526, type: !631, isLocal: false, isDefinition: true, scopeLine: 2527, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*, %struct.mpd_t*, i64, i32*)* @mpd_qshiftr, variables: !633)
!631 = !DISubroutineType(types: !632)
!632 = !{!40, !56, !85, !43, !235}
!633 = !{!634, !635, !636, !637, !638, !639}
!634 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !630, file: !4, line: 2526, type: !56)
!635 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !630, file: !4, line: 2526, type: !85)
!636 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 3, scope: !630, file: !4, line: 2526, type: !43)
!637 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !630, file: !4, line: 2526, type: !235)
!638 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rnd", scope: !630, file: !4, line: 2528, type: !40)
!639 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !630, file: !4, line: 2529, type: !43)
!640 = !DISubprogram(name: "mpd_qand", scope: !4, file: !4, line: 2575, type: !641, isLocal: false, isDefinition: true, scopeLine: 2577, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qand, variables: !643)
!641 = !DISubroutineType(types: !642)
!642 = !{null, !56, !85, !85, !92, !235}
!643 = !{!644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658}
!644 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !640, file: !4, line: 2575, type: !56)
!645 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !640, file: !4, line: 2575, type: !85)
!646 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !640, file: !4, line: 2575, type: !85)
!647 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !640, file: !4, line: 2576, type: !92)
!648 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !640, file: !4, line: 2576, type: !235)
!649 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "big", scope: !640, file: !4, line: 2578, type: !85)
!650 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "small", scope: !640, file: !4, line: 2578, type: !85)
!651 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !640, file: !4, line: 2579, type: !40)
!652 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !640, file: !4, line: 2579, type: !40)
!653 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "z", scope: !640, file: !4, line: 2579, type: !40)
!654 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xbit", scope: !640, file: !4, line: 2579, type: !40)
!655 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ybit", scope: !640, file: !4, line: 2579, type: !40)
!656 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !640, file: !4, line: 2580, type: !50)
!657 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mswdigits", scope: !640, file: !4, line: 2580, type: !50)
!658 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !640, file: !4, line: 2581, type: !43)
!659 = !DISubprogram(name: "mpd_class", scope: !4, file: !4, line: 2666, type: !660, isLocal: false, isDefinition: true, scopeLine: 2667, flags: DIFlagPrototyped, isOptimized: true, function: i8* (%struct.mpd_t*, %struct.mpd_context_t*)* @mpd_class, variables: !662)
!660 = !DISubroutineType(types: !661)
!661 = !{!73, !85, !92}
!662 = !{!663, !664}
!663 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !659, file: !4, line: 2666, type: !85)
!664 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !659, file: !4, line: 2666, type: !92)
!665 = !DISubprogram(name: "mpd_qinvert", scope: !4, file: !4, line: 2698, type: !666, isLocal: false, isDefinition: true, scopeLine: 2700, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qinvert, variables: !668)
!666 = !DISubroutineType(types: !667)
!667 = !{null, !56, !85, !92, !235}
!668 = !{!669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681}
!669 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !665, file: !4, line: 2698, type: !56)
!670 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !665, file: !4, line: 2698, type: !85)
!671 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !665, file: !4, line: 2698, type: !92)
!672 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !665, file: !4, line: 2699, type: !235)
!673 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !665, file: !4, line: 2701, type: !40)
!674 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "z", scope: !665, file: !4, line: 2701, type: !40)
!675 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xbit", scope: !665, file: !4, line: 2701, type: !40)
!676 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !665, file: !4, line: 2702, type: !43)
!677 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "digits", scope: !665, file: !4, line: 2702, type: !43)
!678 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !665, file: !4, line: 2702, type: !43)
!679 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q", scope: !665, file: !4, line: 2703, type: !43)
!680 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !665, file: !4, line: 2703, type: !43)
!681 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !665, file: !4, line: 2704, type: !50)
!682 = !DISubprogram(name: "mpd_qlogb", scope: !4, file: !4, line: 2746, type: !666, isLocal: false, isDefinition: true, scopeLine: 2748, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qlogb, variables: !683)
!683 = !{!684, !685, !686, !687}
!684 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !682, file: !4, line: 2746, type: !56)
!685 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !682, file: !4, line: 2746, type: !85)
!686 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !682, file: !4, line: 2746, type: !92)
!687 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !682, file: !4, line: 2747, type: !235)
!688 = !DISubprogram(name: "mpd_qor", scope: !4, file: !4, line: 2766, type: !641, isLocal: false, isDefinition: true, scopeLine: 2768, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qor, variables: !689)
!689 = !{!690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704}
!690 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !688, file: !4, line: 2766, type: !56)
!691 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !688, file: !4, line: 2766, type: !85)
!692 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !688, file: !4, line: 2766, type: !85)
!693 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !688, file: !4, line: 2767, type: !92)
!694 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !688, file: !4, line: 2767, type: !235)
!695 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "big", scope: !688, file: !4, line: 2769, type: !85)
!696 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "small", scope: !688, file: !4, line: 2769, type: !85)
!697 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !688, file: !4, line: 2770, type: !40)
!698 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !688, file: !4, line: 2770, type: !40)
!699 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "z", scope: !688, file: !4, line: 2770, type: !40)
!700 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xbit", scope: !688, file: !4, line: 2770, type: !40)
!701 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ybit", scope: !688, file: !4, line: 2770, type: !40)
!702 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !688, file: !4, line: 2771, type: !50)
!703 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mswdigits", scope: !688, file: !4, line: 2771, type: !50)
!704 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !688, file: !4, line: 2772, type: !43)
!705 = !DISubprogram(name: "mpd_qrotate", scope: !4, file: !4, line: 2862, type: !641, isLocal: false, isDefinition: true, scopeLine: 2864, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qrotate, variables: !706)
!706 = !{!707, !708, !709, !710, !711, !712, !713, !717, !718, !719, !720, !721, !722, !723, !724}
!707 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !705, file: !4, line: 2862, type: !56)
!708 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !705, file: !4, line: 2862, type: !85)
!709 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !705, file: !4, line: 2862, type: !85)
!710 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !705, file: !4, line: 2863, type: !92)
!711 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !705, file: !4, line: 2863, type: !235)
!712 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workstatus", scope: !705, file: !4, line: 2865, type: !47)
!713 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp_data", scope: !705, file: !4, line: 2866, type: !714)
!714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 4096, align: 64, elements: !715)
!715 = !{!716}
!716 = !DISubrange(count: 64)
!717 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !705, file: !4, line: 2866, type: !57)
!718 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "big_data", scope: !705, file: !4, line: 2867, type: !714)
!719 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "big", scope: !705, file: !4, line: 2867, type: !57)
!720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "small_data", scope: !705, file: !4, line: 2868, type: !714)
!721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "small", scope: !705, file: !4, line: 2868, type: !57)
!722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !705, file: !4, line: 2869, type: !43)
!723 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lshift", scope: !705, file: !4, line: 2869, type: !43)
!724 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rshift", scope: !705, file: !4, line: 2869, type: !43)
!725 = !DISubprogram(name: "mpd_qscaleb", scope: !4, file: !4, line: 2938, type: !641, isLocal: false, isDefinition: true, scopeLine: 2940, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qscaleb, variables: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735}
!727 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !725, file: !4, line: 2938, type: !56)
!728 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !725, file: !4, line: 2938, type: !85)
!729 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !725, file: !4, line: 2938, type: !85)
!730 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !725, file: !4, line: 2939, type: !92)
!731 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !725, file: !4, line: 2939, type: !235)
!732 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workstatus", scope: !725, file: !4, line: 2941, type: !47)
!733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !725, file: !4, line: 2942, type: !40)
!734 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxjump", scope: !725, file: !4, line: 2942, type: !40)
!735 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exp", scope: !725, file: !4, line: 2944, type: !44)
!736 = !DISubprogram(name: "mpd_qshiftn", scope: !4, file: !4, line: 3008, type: !737, isLocal: false, isDefinition: true, scopeLine: 3010, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qshiftn, variables: !739)
!737 = !DISubroutineType(types: !738)
!738 = !{null, !56, !85, !43, !92, !235}
!739 = !{!740, !741, !742, !743, !744}
!740 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !736, file: !4, line: 3008, type: !56)
!741 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !736, file: !4, line: 3008, type: !85)
!742 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 3, scope: !736, file: !4, line: 3008, type: !43)
!743 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !736, file: !4, line: 3008, type: !92)
!744 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !736, file: !4, line: 3009, type: !235)
!745 = !DISubprogram(name: "mpd_qshift", scope: !4, file: !4, line: 3040, type: !641, isLocal: false, isDefinition: true, scopeLine: 3042, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qshift, variables: !746)
!746 = !{!747, !748, !749, !750, !751, !752, !753}
!747 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !745, file: !4, line: 3040, type: !56)
!748 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !745, file: !4, line: 3040, type: !85)
!749 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !745, file: !4, line: 3040, type: !85)
!750 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !745, file: !4, line: 3040, type: !92)
!751 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !745, file: !4, line: 3041, type: !235)
!752 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workstatus", scope: !745, file: !4, line: 3043, type: !47)
!753 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !745, file: !4, line: 3044, type: !43)
!754 = !DISubprogram(name: "mpd_qxor", scope: !4, file: !4, line: 3085, type: !641, isLocal: false, isDefinition: true, scopeLine: 3087, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qxor, variables: !755)
!755 = !{!756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770}
!756 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !754, file: !4, line: 3085, type: !56)
!757 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !754, file: !4, line: 3085, type: !85)
!758 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !754, file: !4, line: 3085, type: !85)
!759 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !754, file: !4, line: 3086, type: !92)
!760 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !754, file: !4, line: 3086, type: !235)
!761 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "big", scope: !754, file: !4, line: 3088, type: !85)
!762 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "small", scope: !754, file: !4, line: 3088, type: !85)
!763 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !754, file: !4, line: 3089, type: !40)
!764 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !754, file: !4, line: 3089, type: !40)
!765 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "z", scope: !754, file: !4, line: 3089, type: !40)
!766 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xbit", scope: !754, file: !4, line: 3089, type: !40)
!767 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ybit", scope: !754, file: !4, line: 3089, type: !40)
!768 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !754, file: !4, line: 3090, type: !50)
!769 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mswdigits", scope: !754, file: !4, line: 3090, type: !50)
!770 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !754, file: !4, line: 3091, type: !43)
!771 = !DISubprogram(name: "mpd_qabs", scope: !4, file: !4, line: 3187, type: !666, isLocal: false, isDefinition: true, scopeLine: 3189, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qabs, variables: !772)
!772 = !{!773, !774, !775, !776}
!773 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !771, file: !4, line: 3187, type: !56)
!774 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !771, file: !4, line: 3187, type: !85)
!775 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !771, file: !4, line: 3187, type: !92)
!776 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !771, file: !4, line: 3188, type: !235)
!777 = !DISubprogram(name: "mpd_qadd", scope: !4, file: !4, line: 3389, type: !641, isLocal: false, isDefinition: true, scopeLine: 3391, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qadd, variables: !778)
!778 = !{!779, !780, !781, !782, !783}
!779 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !777, file: !4, line: 3389, type: !56)
!780 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !777, file: !4, line: 3389, type: !85)
!781 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !777, file: !4, line: 3389, type: !85)
!782 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !777, file: !4, line: 3390, type: !92)
!783 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !777, file: !4, line: 3390, type: !235)
!784 = !DISubprogram(name: "mpd_qsub", scope: !4, file: !4, line: 3420, type: !641, isLocal: false, isDefinition: true, scopeLine: 3422, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qsub, variables: !785)
!785 = !{!786, !787, !788, !789, !790}
!786 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !784, file: !4, line: 3420, type: !56)
!787 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !784, file: !4, line: 3420, type: !85)
!788 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !784, file: !4, line: 3420, type: !85)
!789 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !784, file: !4, line: 3421, type: !92)
!790 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !784, file: !4, line: 3421, type: !235)
!791 = !DISubprogram(name: "mpd_qadd_ssize", scope: !4, file: !4, line: 3451, type: !737, isLocal: false, isDefinition: true, scopeLine: 3453, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qadd_ssize, variables: !792)
!792 = !{!793, !794, !795, !796, !797, !798, !799, !800}
!793 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !791, file: !4, line: 3451, type: !56)
!794 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !791, file: !4, line: 3451, type: !85)
!795 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !791, file: !4, line: 3451, type: !43)
!796 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !791, file: !4, line: 3452, type: !92)
!797 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !791, file: !4, line: 3452, type: !235)
!798 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxcontext", scope: !791, file: !4, line: 3454, type: !94)
!799 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb_data", scope: !791, file: !4, line: 3455, type: !714)
!800 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb", scope: !791, file: !4, line: 3455, type: !57)
!801 = !DISubprogram(name: "mpd_qadd_uint", scope: !4, file: !4, line: 3465, type: !802, isLocal: false, isDefinition: true, scopeLine: 3467, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qadd_uint, variables: !804)
!802 = !DISubroutineType(types: !803)
!803 = !{null, !56, !85, !40, !92, !235}
!804 = !{!805, !806, !807, !808, !809, !810, !811, !812}
!805 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !801, file: !4, line: 3465, type: !56)
!806 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !801, file: !4, line: 3465, type: !85)
!807 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !801, file: !4, line: 3465, type: !40)
!808 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !801, file: !4, line: 3466, type: !92)
!809 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !801, file: !4, line: 3466, type: !235)
!810 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxcontext", scope: !801, file: !4, line: 3468, type: !94)
!811 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb_data", scope: !801, file: !4, line: 3469, type: !714)
!812 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb", scope: !801, file: !4, line: 3469, type: !57)
!813 = !DISubprogram(name: "mpd_qsub_ssize", scope: !4, file: !4, line: 3479, type: !737, isLocal: false, isDefinition: true, scopeLine: 3481, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qsub_ssize, variables: !814)
!814 = !{!815, !816, !817, !818, !819, !820, !821, !822}
!815 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !813, file: !4, line: 3479, type: !56)
!816 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !813, file: !4, line: 3479, type: !85)
!817 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !813, file: !4, line: 3479, type: !43)
!818 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !813, file: !4, line: 3480, type: !92)
!819 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !813, file: !4, line: 3480, type: !235)
!820 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxcontext", scope: !813, file: !4, line: 3482, type: !94)
!821 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb_data", scope: !813, file: !4, line: 3483, type: !714)
!822 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb", scope: !813, file: !4, line: 3483, type: !57)
!823 = !DISubprogram(name: "mpd_qsub_uint", scope: !4, file: !4, line: 3493, type: !802, isLocal: false, isDefinition: true, scopeLine: 3495, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qsub_uint, variables: !824)
!824 = !{!825, !826, !827, !828, !829, !830, !831, !832}
!825 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !823, file: !4, line: 3493, type: !56)
!826 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !823, file: !4, line: 3493, type: !85)
!827 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !823, file: !4, line: 3493, type: !40)
!828 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !823, file: !4, line: 3494, type: !92)
!829 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !823, file: !4, line: 3494, type: !235)
!830 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxcontext", scope: !823, file: !4, line: 3496, type: !94)
!831 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb_data", scope: !823, file: !4, line: 3497, type: !714)
!832 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb", scope: !823, file: !4, line: 3497, type: !57)
!833 = !DISubprogram(name: "mpd_qadd_i32", scope: !4, file: !4, line: 3507, type: !834, isLocal: false, isDefinition: true, scopeLine: 3509, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i32, %struct.mpd_context_t*, i32*)* @mpd_qadd_i32, variables: !836)
!834 = !DISubroutineType(types: !835)
!835 = !{null, !56, !85, !49, !92, !235}
!836 = !{!837, !838, !839, !840, !841}
!837 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !833, file: !4, line: 3507, type: !56)
!838 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !833, file: !4, line: 3507, type: !85)
!839 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !833, file: !4, line: 3507, type: !49)
!840 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !833, file: !4, line: 3508, type: !92)
!841 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !833, file: !4, line: 3508, type: !235)
!842 = !DISubprogram(name: "mpd_qadd_u32", scope: !4, file: !4, line: 3515, type: !843, isLocal: false, isDefinition: true, scopeLine: 3517, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i32, %struct.mpd_context_t*, i32*)* @mpd_qadd_u32, variables: !845)
!843 = !DISubroutineType(types: !844)
!844 = !{null, !56, !85, !47, !92, !235}
!845 = !{!846, !847, !848, !849, !850}
!846 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !842, file: !4, line: 3515, type: !56)
!847 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !842, file: !4, line: 3515, type: !85)
!848 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !842, file: !4, line: 3515, type: !47)
!849 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !842, file: !4, line: 3516, type: !92)
!850 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !842, file: !4, line: 3516, type: !235)
!851 = !DISubprogram(name: "mpd_qadd_i64", scope: !4, file: !4, line: 3524, type: !852, isLocal: false, isDefinition: true, scopeLine: 3526, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qadd_i64, variables: !854)
!852 = !DISubroutineType(types: !853)
!853 = !{null, !56, !85, !44, !92, !235}
!854 = !{!855, !856, !857, !858, !859}
!855 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !851, file: !4, line: 3524, type: !56)
!856 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !851, file: !4, line: 3524, type: !85)
!857 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !851, file: !4, line: 3524, type: !44)
!858 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !851, file: !4, line: 3525, type: !92)
!859 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !851, file: !4, line: 3525, type: !235)
!860 = !DISubprogram(name: "mpd_qadd_u64", scope: !4, file: !4, line: 3532, type: !861, isLocal: false, isDefinition: true, scopeLine: 3534, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qadd_u64, variables: !863)
!861 = !DISubroutineType(types: !862)
!862 = !{null, !56, !85, !41, !92, !235}
!863 = !{!864, !865, !866, !867, !868}
!864 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !860, file: !4, line: 3532, type: !56)
!865 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !860, file: !4, line: 3532, type: !85)
!866 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !860, file: !4, line: 3532, type: !41)
!867 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !860, file: !4, line: 3533, type: !92)
!868 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !860, file: !4, line: 3533, type: !235)
!869 = !DISubprogram(name: "mpd_qsub_i32", scope: !4, file: !4, line: 3569, type: !834, isLocal: false, isDefinition: true, scopeLine: 3571, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i32, %struct.mpd_context_t*, i32*)* @mpd_qsub_i32, variables: !870)
!870 = !{!871, !872, !873, !874, !875}
!871 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !869, file: !4, line: 3569, type: !56)
!872 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !869, file: !4, line: 3569, type: !85)
!873 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !869, file: !4, line: 3569, type: !49)
!874 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !869, file: !4, line: 3570, type: !92)
!875 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !869, file: !4, line: 3570, type: !235)
!876 = !DISubprogram(name: "mpd_qsub_u32", scope: !4, file: !4, line: 3577, type: !843, isLocal: false, isDefinition: true, scopeLine: 3579, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i32, %struct.mpd_context_t*, i32*)* @mpd_qsub_u32, variables: !877)
!877 = !{!878, !879, !880, !881, !882}
!878 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !876, file: !4, line: 3577, type: !56)
!879 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !876, file: !4, line: 3577, type: !85)
!880 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !876, file: !4, line: 3577, type: !47)
!881 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !876, file: !4, line: 3578, type: !92)
!882 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !876, file: !4, line: 3578, type: !235)
!883 = !DISubprogram(name: "mpd_qsub_i64", scope: !4, file: !4, line: 3586, type: !852, isLocal: false, isDefinition: true, scopeLine: 3588, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qsub_i64, variables: !884)
!884 = !{!885, !886, !887, !888, !889}
!885 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !883, file: !4, line: 3586, type: !56)
!886 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !883, file: !4, line: 3586, type: !85)
!887 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !883, file: !4, line: 3586, type: !44)
!888 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !883, file: !4, line: 3587, type: !92)
!889 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !883, file: !4, line: 3587, type: !235)
!890 = !DISubprogram(name: "mpd_qsub_u64", scope: !4, file: !4, line: 3594, type: !861, isLocal: false, isDefinition: true, scopeLine: 3596, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qsub_u64, variables: !891)
!891 = !{!892, !893, !894, !895, !896}
!892 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !890, file: !4, line: 3594, type: !56)
!893 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !890, file: !4, line: 3594, type: !85)
!894 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !890, file: !4, line: 3594, type: !41)
!895 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !890, file: !4, line: 3595, type: !92)
!896 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !890, file: !4, line: 3595, type: !235)
!897 = !DISubprogram(name: "mpd_qdiv", scope: !4, file: !4, line: 3773, type: !641, isLocal: false, isDefinition: true, scopeLine: 3775, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qdiv, variables: !898)
!898 = !{!899, !900, !901, !902, !903}
!899 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 1, scope: !897, file: !4, line: 3773, type: !56)
!900 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !897, file: !4, line: 3773, type: !85)
!901 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !897, file: !4, line: 3773, type: !85)
!902 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !897, file: !4, line: 3774, type: !92)
!903 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !897, file: !4, line: 3774, type: !235)
!904 = !DISubprogram(name: "mpd_qdivmod", scope: !4, file: !4, line: 3923, type: !905, isLocal: false, isDefinition: true, scopeLine: 3925, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qdivmod, variables: !907)
!905 = !DISubroutineType(types: !906)
!906 = !{null, !56, !56, !85, !85, !92, !235}
!907 = !{!908, !909, !910, !911, !912, !913, !914}
!908 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 1, scope: !904, file: !4, line: 3923, type: !56)
!909 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "r", arg: 2, scope: !904, file: !4, line: 3923, type: !56)
!910 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 3, scope: !904, file: !4, line: 3923, type: !85)
!911 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 4, scope: !904, file: !4, line: 3923, type: !85)
!912 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 5, scope: !904, file: !4, line: 3924, type: !92)
!913 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 6, scope: !904, file: !4, line: 3924, type: !235)
!914 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign", scope: !904, file: !4, line: 3926, type: !37)
!915 = !DISubprogram(name: "mpd_qdivint", scope: !4, file: !4, line: 3976, type: !641, isLocal: false, isDefinition: true, scopeLine: 3978, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qdivint, variables: !916)
!916 = !{!917, !918, !919, !920, !921, !922, !923, !924}
!917 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 1, scope: !915, file: !4, line: 3976, type: !56)
!918 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !915, file: !4, line: 3976, type: !85)
!919 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !915, file: !4, line: 3976, type: !85)
!920 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !915, file: !4, line: 3977, type: !92)
!921 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !915, file: !4, line: 3977, type: !235)
!922 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r_data", scope: !915, file: !4, line: 3979, type: !714)
!923 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !915, file: !4, line: 3979, type: !57)
!924 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign", scope: !915, file: !4, line: 3980, type: !37)
!925 = !DISubprogram(name: "mpd_qdiv_ssize", scope: !4, file: !4, line: 4020, type: !737, isLocal: false, isDefinition: true, scopeLine: 4022, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qdiv_ssize, variables: !926)
!926 = !{!927, !928, !929, !930, !931, !932, !933, !934}
!927 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !925, file: !4, line: 4020, type: !56)
!928 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !925, file: !4, line: 4020, type: !85)
!929 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !925, file: !4, line: 4020, type: !43)
!930 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !925, file: !4, line: 4021, type: !92)
!931 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !925, file: !4, line: 4021, type: !235)
!932 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxcontext", scope: !925, file: !4, line: 4023, type: !94)
!933 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb_data", scope: !925, file: !4, line: 4024, type: !714)
!934 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb", scope: !925, file: !4, line: 4024, type: !57)
!935 = !DISubprogram(name: "mpd_qdiv_uint", scope: !4, file: !4, line: 4034, type: !802, isLocal: false, isDefinition: true, scopeLine: 4036, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qdiv_uint, variables: !936)
!936 = !{!937, !938, !939, !940, !941, !942, !943, !944}
!937 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !935, file: !4, line: 4034, type: !56)
!938 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !935, file: !4, line: 4034, type: !85)
!939 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !935, file: !4, line: 4034, type: !40)
!940 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !935, file: !4, line: 4035, type: !92)
!941 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !935, file: !4, line: 4035, type: !235)
!942 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxcontext", scope: !935, file: !4, line: 4037, type: !94)
!943 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb_data", scope: !935, file: !4, line: 4038, type: !714)
!944 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb", scope: !935, file: !4, line: 4038, type: !57)
!945 = !DISubprogram(name: "mpd_qdiv_i32", scope: !4, file: !4, line: 4048, type: !834, isLocal: false, isDefinition: true, scopeLine: 4050, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i32, %struct.mpd_context_t*, i32*)* @mpd_qdiv_i32, variables: !946)
!946 = !{!947, !948, !949, !950, !951}
!947 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !945, file: !4, line: 4048, type: !56)
!948 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !945, file: !4, line: 4048, type: !85)
!949 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !945, file: !4, line: 4048, type: !49)
!950 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !945, file: !4, line: 4049, type: !92)
!951 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !945, file: !4, line: 4049, type: !235)
!952 = !DISubprogram(name: "mpd_qdiv_u32", scope: !4, file: !4, line: 4056, type: !843, isLocal: false, isDefinition: true, scopeLine: 4058, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i32, %struct.mpd_context_t*, i32*)* @mpd_qdiv_u32, variables: !953)
!953 = !{!954, !955, !956, !957, !958}
!954 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !952, file: !4, line: 4056, type: !56)
!955 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !952, file: !4, line: 4056, type: !85)
!956 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !952, file: !4, line: 4056, type: !47)
!957 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !952, file: !4, line: 4057, type: !92)
!958 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !952, file: !4, line: 4057, type: !235)
!959 = !DISubprogram(name: "mpd_qdiv_i64", scope: !4, file: !4, line: 4065, type: !852, isLocal: false, isDefinition: true, scopeLine: 4067, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qdiv_i64, variables: !960)
!960 = !{!961, !962, !963, !964, !965}
!961 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !959, file: !4, line: 4065, type: !56)
!962 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !959, file: !4, line: 4065, type: !85)
!963 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !959, file: !4, line: 4065, type: !44)
!964 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !959, file: !4, line: 4066, type: !92)
!965 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !959, file: !4, line: 4066, type: !235)
!966 = !DISubprogram(name: "mpd_qdiv_u64", scope: !4, file: !4, line: 4073, type: !861, isLocal: false, isDefinition: true, scopeLine: 4075, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qdiv_u64, variables: !967)
!967 = !{!968, !969, !970, !971, !972}
!968 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !966, file: !4, line: 4073, type: !56)
!969 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !966, file: !4, line: 4073, type: !85)
!970 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !966, file: !4, line: 4073, type: !41)
!971 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !966, file: !4, line: 4074, type: !92)
!972 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !966, file: !4, line: 4074, type: !235)
!973 = !DISubprogram(name: "mpd_qexp", scope: !4, file: !4, line: 4321, type: !666, isLocal: false, isDefinition: true, scopeLine: 4323, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qexp, variables: !974)
!974 = !{!975, !976, !977, !978, !979, !980, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992}
!975 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !973, file: !4, line: 4321, type: !56)
!976 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !973, file: !4, line: 4321, type: !85)
!977 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !973, file: !4, line: 4321, type: !92)
!978 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !973, file: !4, line: 4322, type: !235)
!979 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workctx", scope: !973, file: !4, line: 4324, type: !94)
!980 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t1_data", scope: !981, file: !4, line: 4347, type: !714)
!981 = distinct !DILexicalBlock(scope: !982, file: !4, line: 4346, column: 21)
!982 = distinct !DILexicalBlock(scope: !973, file: !4, line: 4346, column: 9)
!983 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t1", scope: !981, file: !4, line: 4347, type: !57)
!984 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t2_data", scope: !981, file: !4, line: 4348, type: !714)
!985 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t2", scope: !981, file: !4, line: 4348, type: !57)
!986 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ulp_data", scope: !981, file: !4, line: 4349, type: !714)
!987 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ulp", scope: !981, file: !4, line: 4349, type: !57)
!988 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aa_data", scope: !981, file: !4, line: 4350, type: !714)
!989 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aa", scope: !981, file: !4, line: 4350, type: !57)
!990 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prec", scope: !981, file: !4, line: 4351, type: !43)
!991 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ulpexp", scope: !981, file: !4, line: 4352, type: !43)
!992 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workstatus", scope: !981, file: !4, line: 4353, type: !47)
!993 = !DISubprogram(name: "mpd_qfma", scope: !4, file: !4, line: 4420, type: !994, isLocal: false, isDefinition: true, scopeLine: 4422, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qfma, variables: !996)
!994 = !DISubroutineType(types: !995)
!995 = !{null, !56, !85, !85, !85, !92, !235}
!996 = !{!997, !998, !999, !1000, !1001, !1002, !1003, !1004}
!997 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !993, file: !4, line: 4420, type: !56)
!998 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !993, file: !4, line: 4420, type: !85)
!999 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !993, file: !4, line: 4420, type: !85)
!1000 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 4, scope: !993, file: !4, line: 4420, type: !85)
!1001 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 5, scope: !993, file: !4, line: 4421, type: !92)
!1002 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 6, scope: !993, file: !4, line: 4421, type: !235)
!1003 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workstatus", scope: !993, file: !4, line: 4423, type: !47)
!1004 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cc", scope: !993, file: !4, line: 4424, type: !56)
!1005 = !DISubprogram(name: "mpd_qln10", scope: !4, file: !4, line: 4538, type: !1006, isLocal: false, isDefinition: true, scopeLine: 4539, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i64, i32*)* @mpd_qln10, variables: !1008)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{null, !56, !43, !235}
!1008 = !{!1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1020, !1021, !1023, !1024, !1025}
!1009 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1005, file: !4, line: 4538, type: !56)
!1010 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "prec", arg: 2, scope: !1005, file: !4, line: 4538, type: !43)
!1011 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !1005, file: !4, line: 4538, type: !235)
!1012 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "varcontext", scope: !1005, file: !4, line: 4540, type: !94)
!1013 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxcontext", scope: !1005, file: !4, line: 4540, type: !94)
!1014 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp_data", scope: !1005, file: !4, line: 4541, type: !714)
!1015 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1005, file: !4, line: 4541, type: !57)
!1016 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "static10_data", scope: !1005, file: !4, line: 4542, type: !1017)
!1017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 64, align: 64, elements: !1018)
!1018 = !{!1019}
!1019 = !DISubrange(count: 1)
!1020 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "static10", scope: !1005, file: !4, line: 4542, type: !57)
!1021 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "klist", scope: !1005, file: !4, line: 4543, type: !1022)
!1022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 4096, align: 64, elements: !715)
!1023 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rnd", scope: !1005, file: !4, line: 4544, type: !40)
!1024 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !1005, file: !4, line: 4545, type: !43)
!1025 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1005, file: !4, line: 4546, type: !50)
!1026 = !DISubprogram(name: "mpd_qln", scope: !4, file: !4, line: 4841, type: !666, isLocal: false, isDefinition: true, scopeLine: 4843, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qln, variables: !1027)
!1027 = !{!1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045}
!1028 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1026, file: !4, line: 4841, type: !56)
!1029 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1026, file: !4, line: 4841, type: !85)
!1030 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1026, file: !4, line: 4841, type: !92)
!1031 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1026, file: !4, line: 4842, type: !235)
!1032 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workctx", scope: !1026, file: !4, line: 4844, type: !94)
!1033 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "adjexp", scope: !1026, file: !4, line: 4845, type: !43)
!1034 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !1026, file: !4, line: 4845, type: !43)
!1035 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t1_data", scope: !1036, file: !4, line: 4904, type: !714)
!1036 = distinct !DILexicalBlock(scope: !1037, file: !4, line: 4903, column: 21)
!1037 = distinct !DILexicalBlock(scope: !1026, file: !4, line: 4903, column: 9)
!1038 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t1", scope: !1036, file: !4, line: 4904, type: !57)
!1039 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t2_data", scope: !1036, file: !4, line: 4905, type: !714)
!1040 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t2", scope: !1036, file: !4, line: 4905, type: !57)
!1041 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ulp_data", scope: !1036, file: !4, line: 4906, type: !714)
!1042 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ulp", scope: !1036, file: !4, line: 4906, type: !57)
!1043 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aa_data", scope: !1036, file: !4, line: 4907, type: !714)
!1044 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aa", scope: !1036, file: !4, line: 4907, type: !57)
!1045 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prec", scope: !1036, file: !4, line: 4908, type: !43)
!1046 = !DISubprogram(name: "mpd_qlog10", scope: !4, file: !4, line: 4985, type: !666, isLocal: false, isDefinition: true, scopeLine: 4987, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qlog10, variables: !1047)
!1047 = !{!1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1058, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068}
!1048 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1046, file: !4, line: 4985, type: !56)
!1049 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1046, file: !4, line: 4985, type: !85)
!1050 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1046, file: !4, line: 4985, type: !92)
!1051 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1046, file: !4, line: 4986, type: !235)
!1052 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workctx", scope: !1046, file: !4, line: 4988, type: !94)
!1053 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "adjexp", scope: !1046, file: !4, line: 4989, type: !43)
!1054 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !1046, file: !4, line: 4989, type: !43)
!1055 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign", scope: !1056, file: !4, line: 5014, type: !37)
!1056 = distinct !DILexicalBlock(scope: !1057, file: !4, line: 5013, column: 31)
!1057 = distinct !DILexicalBlock(scope: !1046, file: !4, line: 5013, column: 9)
!1058 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t1_data", scope: !1059, file: !4, line: 5053, type: !714)
!1059 = distinct !DILexicalBlock(scope: !1060, file: !4, line: 5052, column: 21)
!1060 = distinct !DILexicalBlock(scope: !1046, file: !4, line: 5052, column: 9)
!1061 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t1", scope: !1059, file: !4, line: 5053, type: !57)
!1062 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t2_data", scope: !1059, file: !4, line: 5054, type: !714)
!1063 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t2", scope: !1059, file: !4, line: 5054, type: !57)
!1064 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ulp_data", scope: !1059, file: !4, line: 5055, type: !714)
!1065 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ulp", scope: !1059, file: !4, line: 5055, type: !57)
!1066 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aa_data", scope: !1059, file: !4, line: 5056, type: !714)
!1067 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aa", scope: !1059, file: !4, line: 5056, type: !57)
!1068 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prec", scope: !1059, file: !4, line: 5057, type: !43)
!1069 = !DISubprogram(name: "mpd_qmax", scope: !4, file: !4, line: 5104, type: !641, isLocal: false, isDefinition: true, scopeLine: 5106, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qmax, variables: !1070)
!1070 = !{!1071, !1072, !1073, !1074, !1075, !1076}
!1071 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1069, file: !4, line: 5104, type: !56)
!1072 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1069, file: !4, line: 5104, type: !85)
!1073 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1069, file: !4, line: 5104, type: !85)
!1074 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1069, file: !4, line: 5105, type: !92)
!1075 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1069, file: !4, line: 5105, type: !235)
!1076 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !1069, file: !4, line: 5107, type: !50)
!1077 = !DISubprogram(name: "mpd_qmax_mag", scope: !4, file: !4, line: 5140, type: !641, isLocal: false, isDefinition: true, scopeLine: 5142, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qmax_mag, variables: !1078)
!1078 = !{!1079, !1080, !1081, !1082, !1083, !1084}
!1079 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1077, file: !4, line: 5140, type: !56)
!1080 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1077, file: !4, line: 5140, type: !85)
!1081 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1077, file: !4, line: 5140, type: !85)
!1082 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1077, file: !4, line: 5141, type: !92)
!1083 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1077, file: !4, line: 5141, type: !235)
!1084 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !1077, file: !4, line: 5143, type: !50)
!1085 = !DISubprogram(name: "mpd_qmin", scope: !4, file: !4, line: 5177, type: !641, isLocal: false, isDefinition: true, scopeLine: 5179, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qmin, variables: !1086)
!1086 = !{!1087, !1088, !1089, !1090, !1091, !1092}
!1087 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1085, file: !4, line: 5177, type: !56)
!1088 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1085, file: !4, line: 5177, type: !85)
!1089 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1085, file: !4, line: 5177, type: !85)
!1090 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1085, file: !4, line: 5178, type: !92)
!1091 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1085, file: !4, line: 5178, type: !235)
!1092 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !1085, file: !4, line: 5180, type: !50)
!1093 = !DISubprogram(name: "mpd_qmin_mag", scope: !4, file: !4, line: 5213, type: !641, isLocal: false, isDefinition: true, scopeLine: 5215, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qmin_mag, variables: !1094)
!1094 = !{!1095, !1096, !1097, !1098, !1099, !1100}
!1095 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1093, file: !4, line: 5213, type: !56)
!1096 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1093, file: !4, line: 5213, type: !85)
!1097 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1093, file: !4, line: 5213, type: !85)
!1098 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1093, file: !4, line: 5214, type: !92)
!1099 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1093, file: !4, line: 5214, type: !235)
!1100 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !1093, file: !4, line: 5216, type: !50)
!1101 = !DISubprogram(name: "mpd_qmul", scope: !4, file: !4, line: 5823, type: !641, isLocal: false, isDefinition: true, scopeLine: 5825, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qmul, variables: !1102)
!1102 = !{!1103, !1104, !1105, !1106, !1107}
!1103 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1101, file: !4, line: 5823, type: !56)
!1104 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1101, file: !4, line: 5823, type: !85)
!1105 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1101, file: !4, line: 5823, type: !85)
!1106 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1101, file: !4, line: 5824, type: !92)
!1107 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1101, file: !4, line: 5824, type: !235)
!1108 = !DISubprogram(name: "mpd_qmul_ssize", scope: !4, file: !4, line: 5846, type: !737, isLocal: false, isDefinition: true, scopeLine: 5848, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qmul_ssize, variables: !1109)
!1109 = !{!1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117}
!1110 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1108, file: !4, line: 5846, type: !56)
!1111 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1108, file: !4, line: 5846, type: !85)
!1112 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1108, file: !4, line: 5846, type: !43)
!1113 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1108, file: !4, line: 5847, type: !92)
!1114 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1108, file: !4, line: 5847, type: !235)
!1115 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxcontext", scope: !1108, file: !4, line: 5849, type: !94)
!1116 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb_data", scope: !1108, file: !4, line: 5850, type: !714)
!1117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb", scope: !1108, file: !4, line: 5850, type: !57)
!1118 = !DISubprogram(name: "mpd_qmul_uint", scope: !4, file: !4, line: 5860, type: !802, isLocal: false, isDefinition: true, scopeLine: 5862, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qmul_uint, variables: !1119)
!1119 = !{!1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127}
!1120 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1118, file: !4, line: 5860, type: !56)
!1121 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1118, file: !4, line: 5860, type: !85)
!1122 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1118, file: !4, line: 5860, type: !40)
!1123 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1118, file: !4, line: 5861, type: !92)
!1124 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1118, file: !4, line: 5861, type: !235)
!1125 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxcontext", scope: !1118, file: !4, line: 5863, type: !94)
!1126 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb_data", scope: !1118, file: !4, line: 5864, type: !714)
!1127 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb", scope: !1118, file: !4, line: 5864, type: !57)
!1128 = !DISubprogram(name: "mpd_qmul_i32", scope: !4, file: !4, line: 5873, type: !834, isLocal: false, isDefinition: true, scopeLine: 5875, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i32, %struct.mpd_context_t*, i32*)* @mpd_qmul_i32, variables: !1129)
!1129 = !{!1130, !1131, !1132, !1133, !1134}
!1130 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1128, file: !4, line: 5873, type: !56)
!1131 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1128, file: !4, line: 5873, type: !85)
!1132 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1128, file: !4, line: 5873, type: !49)
!1133 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1128, file: !4, line: 5874, type: !92)
!1134 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1128, file: !4, line: 5874, type: !235)
!1135 = !DISubprogram(name: "mpd_qmul_u32", scope: !4, file: !4, line: 5880, type: !843, isLocal: false, isDefinition: true, scopeLine: 5882, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i32, %struct.mpd_context_t*, i32*)* @mpd_qmul_u32, variables: !1136)
!1136 = !{!1137, !1138, !1139, !1140, !1141}
!1137 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1135, file: !4, line: 5880, type: !56)
!1138 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1135, file: !4, line: 5880, type: !85)
!1139 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1135, file: !4, line: 5880, type: !47)
!1140 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1135, file: !4, line: 5881, type: !92)
!1141 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1135, file: !4, line: 5881, type: !235)
!1142 = !DISubprogram(name: "mpd_qmul_i64", scope: !4, file: !4, line: 5888, type: !852, isLocal: false, isDefinition: true, scopeLine: 5890, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qmul_i64, variables: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !1148}
!1144 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1142, file: !4, line: 5888, type: !56)
!1145 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1142, file: !4, line: 5888, type: !85)
!1146 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1142, file: !4, line: 5888, type: !44)
!1147 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1142, file: !4, line: 5889, type: !92)
!1148 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1142, file: !4, line: 5889, type: !235)
!1149 = !DISubprogram(name: "mpd_qmul_u64", scope: !4, file: !4, line: 5895, type: !861, isLocal: false, isDefinition: true, scopeLine: 5897, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qmul_u64, variables: !1150)
!1150 = !{!1151, !1152, !1153, !1154, !1155}
!1151 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1149, file: !4, line: 5895, type: !56)
!1152 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1149, file: !4, line: 5895, type: !85)
!1153 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1149, file: !4, line: 5895, type: !41)
!1154 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1149, file: !4, line: 5896, type: !92)
!1155 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1149, file: !4, line: 5896, type: !235)
!1156 = !DISubprogram(name: "mpd_qminus", scope: !4, file: !4, line: 5932, type: !666, isLocal: false, isDefinition: true, scopeLine: 5934, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qminus, variables: !1157)
!1157 = !{!1158, !1159, !1160, !1161}
!1158 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1156, file: !4, line: 5932, type: !56)
!1159 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1156, file: !4, line: 5932, type: !85)
!1160 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1156, file: !4, line: 5932, type: !92)
!1161 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1156, file: !4, line: 5933, type: !235)
!1162 = !DISubprogram(name: "mpd_qplus", scope: !4, file: !4, line: 5953, type: !666, isLocal: false, isDefinition: true, scopeLine: 5955, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qplus, variables: !1163)
!1163 = !{!1164, !1165, !1166, !1167}
!1164 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1162, file: !4, line: 5953, type: !56)
!1165 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1162, file: !4, line: 5953, type: !85)
!1166 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1162, file: !4, line: 5953, type: !92)
!1167 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1162, file: !4, line: 5954, type: !235)
!1168 = !DISubprogram(name: "mpd_qnext_minus", scope: !4, file: !4, line: 5974, type: !666, isLocal: false, isDefinition: true, scopeLine: 5976, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qnext_minus, variables: !1169)
!1169 = !{!1170, !1171, !1172, !1173, !1174, !1175, !1176}
!1170 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1168, file: !4, line: 5974, type: !56)
!1171 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1168, file: !4, line: 5974, type: !85)
!1172 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1168, file: !4, line: 5974, type: !92)
!1173 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1168, file: !4, line: 5975, type: !235)
!1174 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workctx", scope: !1168, file: !4, line: 5977, type: !94)
!1175 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tiny_data", scope: !1168, file: !4, line: 5978, type: !1017)
!1176 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tiny", scope: !1168, file: !4, line: 5978, type: !57)
!1177 = !DISubprogram(name: "mpd_qnext_plus", scope: !4, file: !4, line: 6021, type: !666, isLocal: false, isDefinition: true, scopeLine: 6023, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qnext_plus, variables: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1183, !1184, !1185}
!1179 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1177, file: !4, line: 6021, type: !56)
!1180 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1177, file: !4, line: 6021, type: !85)
!1181 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1177, file: !4, line: 6021, type: !92)
!1182 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1177, file: !4, line: 6022, type: !235)
!1183 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workctx", scope: !1177, file: !4, line: 6024, type: !94)
!1184 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tiny_data", scope: !1177, file: !4, line: 6025, type: !1017)
!1185 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tiny", scope: !1177, file: !4, line: 6025, type: !57)
!1186 = !DISubprogram(name: "mpd_qnext_toward", scope: !4, file: !4, line: 6071, type: !641, isLocal: false, isDefinition: true, scopeLine: 6073, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qnext_toward, variables: !1187)
!1187 = !{!1188, !1189, !1190, !1191, !1192, !1193}
!1188 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1186, file: !4, line: 6071, type: !56)
!1189 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1186, file: !4, line: 6071, type: !85)
!1190 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1186, file: !4, line: 6071, type: !85)
!1191 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1186, file: !4, line: 6072, type: !92)
!1192 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1186, file: !4, line: 6072, type: !235)
!1193 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !1186, file: !4, line: 6074, type: !50)
!1194 = !DISubprogram(name: "mpd_qpow", scope: !4, file: !4, line: 6537, type: !641, isLocal: false, isDefinition: true, scopeLine: 6539, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qpow, variables: !1195)
!1195 = !{!1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204}
!1196 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1194, file: !4, line: 6537, type: !56)
!1197 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 2, scope: !1194, file: !4, line: 6537, type: !85)
!1198 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exp", arg: 3, scope: !1194, file: !4, line: 6537, type: !85)
!1199 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1194, file: !4, line: 6538, type: !92)
!1200 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1194, file: !4, line: 6538, type: !235)
!1201 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "resultsign", scope: !1194, file: !4, line: 6540, type: !37)
!1202 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "intexp", scope: !1194, file: !4, line: 6541, type: !50)
!1203 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cmp", scope: !1194, file: !4, line: 6542, type: !50)
!1204 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !1205, file: !4, line: 6618, type: !43)
!1205 = distinct !DILexicalBlock(scope: !1206, file: !4, line: 6617, column: 68)
!1206 = distinct !DILexicalBlock(scope: !1207, file: !4, line: 6617, column: 13)
!1207 = distinct !DILexicalBlock(scope: !1208, file: !4, line: 6615, column: 10)
!1208 = distinct !DILexicalBlock(scope: !1194, file: !4, line: 6612, column: 9)
!1209 = !DISubprogram(name: "mpd_qpowmod", scope: !4, file: !4, line: 6658, type: !994, isLocal: false, isDefinition: true, scopeLine: 6661, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qpowmod, variables: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233}
!1211 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1209, file: !4, line: 6658, type: !56)
!1212 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 2, scope: !1209, file: !4, line: 6658, type: !85)
!1213 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exp", arg: 3, scope: !1209, file: !4, line: 6658, type: !85)
!1214 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mod", arg: 4, scope: !1209, file: !4, line: 6659, type: !85)
!1215 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 5, scope: !1209, file: !4, line: 6660, type: !92)
!1216 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 6, scope: !1209, file: !4, line: 6660, type: !235)
!1217 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxcontext", scope: !1209, file: !4, line: 6662, type: !94)
!1218 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tbase_data", scope: !1209, file: !4, line: 6663, type: !714)
!1219 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tbase", scope: !1209, file: !4, line: 6663, type: !57)
!1220 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "texp_data", scope: !1209, file: !4, line: 6664, type: !714)
!1221 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "texp", scope: !1209, file: !4, line: 6664, type: !57)
!1222 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmod_data", scope: !1209, file: !4, line: 6665, type: !714)
!1223 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmod", scope: !1209, file: !4, line: 6665, type: !57)
!1224 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp_data", scope: !1209, file: !4, line: 6666, type: !714)
!1225 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1209, file: !4, line: 6666, type: !57)
!1226 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "two_data", scope: !1209, file: !4, line: 6667, type: !1017)
!1227 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "two", scope: !1209, file: !4, line: 6667, type: !57)
!1228 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tbase_exp", scope: !1209, file: !4, line: 6668, type: !43)
!1229 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "texp_exp", scope: !1209, file: !4, line: 6668, type: !43)
!1230 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1209, file: !4, line: 6669, type: !43)
!1231 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !1209, file: !4, line: 6670, type: !57)
!1232 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1209, file: !4, line: 6671, type: !40)
!1233 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign", scope: !1209, file: !4, line: 6672, type: !37)
!1234 = !DISubprogram(name: "mpd_qquantize", scope: !4, file: !4, line: 6790, type: !641, isLocal: false, isDefinition: true, scopeLine: 6792, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qquantize, variables: !1235)
!1235 = !{!1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245}
!1236 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1234, file: !4, line: 6790, type: !56)
!1237 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1234, file: !4, line: 6790, type: !85)
!1238 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1234, file: !4, line: 6790, type: !85)
!1239 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1234, file: !4, line: 6791, type: !92)
!1240 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1234, file: !4, line: 6791, type: !235)
!1241 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workstatus", scope: !1234, file: !4, line: 6793, type: !47)
!1242 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b_exp", scope: !1234, file: !4, line: 6794, type: !43)
!1243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "expdiff", scope: !1234, file: !4, line: 6795, type: !43)
!1244 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !1234, file: !4, line: 6795, type: !43)
!1245 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rnd", scope: !1234, file: !4, line: 6796, type: !40)
!1246 = !DISubprogram(name: "mpd_qreduce", scope: !4, file: !4, line: 6864, type: !666, isLocal: false, isDefinition: true, scopeLine: 6866, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qreduce, variables: !1247)
!1247 = !{!1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255}
!1248 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1246, file: !4, line: 6864, type: !56)
!1249 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1246, file: !4, line: 6864, type: !85)
!1250 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1246, file: !4, line: 6864, type: !92)
!1251 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1246, file: !4, line: 6865, type: !235)
!1252 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !1246, file: !4, line: 6867, type: !43)
!1253 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxexp", scope: !1246, file: !4, line: 6867, type: !43)
!1254 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxshift", scope: !1246, file: !4, line: 6867, type: !43)
!1255 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign_a", scope: !1246, file: !4, line: 6868, type: !37)
!1256 = !DISubprogram(name: "mpd_qrem", scope: !4, file: !4, line: 6901, type: !641, isLocal: false, isDefinition: true, scopeLine: 6903, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qrem, variables: !1257)
!1257 = !{!1258, !1259, !1260, !1261, !1262, !1263, !1264}
!1258 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "r", arg: 1, scope: !1256, file: !4, line: 6901, type: !56)
!1259 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1256, file: !4, line: 6901, type: !85)
!1260 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1256, file: !4, line: 6901, type: !85)
!1261 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1256, file: !4, line: 6901, type: !92)
!1262 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1256, file: !4, line: 6902, type: !235)
!1263 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q_data", scope: !1256, file: !4, line: 6904, type: !714)
!1264 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q", scope: !1256, file: !4, line: 6904, type: !57)
!1265 = !DISubprogram(name: "mpd_qrem_near", scope: !4, file: !4, line: 6938, type: !641, isLocal: false, isDefinition: true, scopeLine: 6940, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qrem_near, variables: !1266)
!1266 = !{!1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281}
!1267 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "r", arg: 1, scope: !1265, file: !4, line: 6938, type: !56)
!1268 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1265, file: !4, line: 6938, type: !85)
!1269 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1265, file: !4, line: 6938, type: !85)
!1270 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1265, file: !4, line: 6939, type: !92)
!1271 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1265, file: !4, line: 6939, type: !235)
!1272 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workctx", scope: !1265, file: !4, line: 6941, type: !94)
!1273 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "btmp_data", scope: !1265, file: !4, line: 6942, type: !714)
!1274 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "btmp", scope: !1265, file: !4, line: 6942, type: !57)
!1275 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q_data", scope: !1265, file: !4, line: 6943, type: !714)
!1276 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q", scope: !1265, file: !4, line: 6943, type: !57)
!1277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "expdiff", scope: !1265, file: !4, line: 6944, type: !43)
!1278 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "qdigits", scope: !1265, file: !4, line: 6944, type: !43)
!1279 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cmp", scope: !1265, file: !4, line: 6945, type: !50)
!1280 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "isodd", scope: !1265, file: !4, line: 6945, type: !50)
!1281 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "allnine", scope: !1265, file: !4, line: 6945, type: !50)
!1282 = !DISubprogram(name: "mpd_qrescale", scope: !4, file: !4, line: 7087, type: !737, isLocal: false, isDefinition: true, scopeLine: 7089, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qrescale, variables: !1283)
!1283 = !{!1284, !1285, !1286, !1287, !1288}
!1284 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1282, file: !4, line: 7087, type: !56)
!1285 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1282, file: !4, line: 7087, type: !85)
!1286 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exp", arg: 3, scope: !1282, file: !4, line: 7087, type: !43)
!1287 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1282, file: !4, line: 7088, type: !92)
!1288 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1282, file: !4, line: 7088, type: !235)
!1289 = !DISubprogram(name: "mpd_qrescale_fmt", scope: !4, file: !4, line: 7107, type: !737, isLocal: false, isDefinition: true, scopeLine: 7109, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @mpd_qrescale_fmt, variables: !1290)
!1290 = !{!1291, !1292, !1293, !1294, !1295}
!1291 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1289, file: !4, line: 7107, type: !56)
!1292 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1289, file: !4, line: 7107, type: !85)
!1293 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exp", arg: 3, scope: !1289, file: !4, line: 7107, type: !43)
!1294 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1289, file: !4, line: 7108, type: !92)
!1295 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1289, file: !4, line: 7108, type: !235)
!1296 = !DISubprogram(name: "mpd_qround_to_intx", scope: !4, file: !4, line: 7160, type: !666, isLocal: false, isDefinition: true, scopeLine: 7162, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qround_to_intx, variables: !1297)
!1297 = !{!1298, !1299, !1300, !1301}
!1298 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1296, file: !4, line: 7160, type: !56)
!1299 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1296, file: !4, line: 7160, type: !85)
!1300 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1296, file: !4, line: 7160, type: !92)
!1301 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1296, file: !4, line: 7161, type: !235)
!1302 = !DISubprogram(name: "mpd_qround_to_int", scope: !4, file: !4, line: 7167, type: !666, isLocal: false, isDefinition: true, scopeLine: 7169, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qround_to_int, variables: !1303)
!1303 = !{!1304, !1305, !1306, !1307}
!1304 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1302, file: !4, line: 7167, type: !56)
!1305 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1302, file: !4, line: 7167, type: !85)
!1306 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1302, file: !4, line: 7167, type: !92)
!1307 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1302, file: !4, line: 7168, type: !235)
!1308 = !DISubprogram(name: "mpd_qtrunc", scope: !4, file: !4, line: 7174, type: !666, isLocal: false, isDefinition: true, scopeLine: 7176, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qtrunc, variables: !1309)
!1309 = !{!1310, !1311, !1312, !1313}
!1310 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1308, file: !4, line: 7174, type: !56)
!1311 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1308, file: !4, line: 7174, type: !85)
!1312 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1308, file: !4, line: 7174, type: !92)
!1313 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1308, file: !4, line: 7175, type: !235)
!1314 = !DISubprogram(name: "mpd_qfloor", scope: !4, file: !4, line: 7181, type: !666, isLocal: false, isDefinition: true, scopeLine: 7183, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qfloor, variables: !1315)
!1315 = !{!1316, !1317, !1318, !1319, !1320}
!1316 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1314, file: !4, line: 7181, type: !56)
!1317 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1314, file: !4, line: 7181, type: !85)
!1318 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1314, file: !4, line: 7181, type: !92)
!1319 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1314, file: !4, line: 7182, type: !235)
!1320 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workctx", scope: !1314, file: !4, line: 7184, type: !94)
!1321 = !DISubprogram(name: "mpd_qceil", scope: !4, file: !4, line: 7191, type: !666, isLocal: false, isDefinition: true, scopeLine: 7193, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qceil, variables: !1322)
!1322 = !{!1323, !1324, !1325, !1326, !1327}
!1323 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1321, file: !4, line: 7191, type: !56)
!1324 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1321, file: !4, line: 7191, type: !85)
!1325 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1321, file: !4, line: 7191, type: !92)
!1326 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1321, file: !4, line: 7192, type: !235)
!1327 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workctx", scope: !1321, file: !4, line: 7194, type: !94)
!1328 = !DISubprogram(name: "mpd_same_quantum", scope: !4, file: !4, line: 7201, type: !582, isLocal: false, isDefinition: true, scopeLine: 7202, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*)* @mpd_same_quantum, variables: !1329)
!1329 = !{!1330, !1331}
!1330 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !1328, file: !4, line: 7201, type: !85)
!1331 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !1328, file: !4, line: 7201, type: !85)
!1332 = !DISubprogram(name: "mpd_qinvroot", scope: !4, file: !4, line: 7661, type: !666, isLocal: false, isDefinition: true, scopeLine: 7663, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qinvroot, variables: !1333)
!1333 = !{!1334, !1335, !1336, !1337, !1338}
!1334 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1332, file: !4, line: 7661, type: !56)
!1335 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1332, file: !4, line: 7661, type: !85)
!1336 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1332, file: !4, line: 7661, type: !92)
!1337 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1332, file: !4, line: 7662, type: !235)
!1338 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workctx", scope: !1332, file: !4, line: 7664, type: !94)
!1339 = !DISubprogram(name: "mpd_qsqrt", scope: !4, file: !4, line: 7699, type: !666, isLocal: false, isDefinition: true, scopeLine: 7701, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qsqrt, variables: !1340)
!1340 = !{!1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359}
!1341 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1339, file: !4, line: 7699, type: !56)
!1342 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1339, file: !4, line: 7699, type: !85)
!1343 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1339, file: !4, line: 7699, type: !92)
!1344 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1339, file: !4, line: 7700, type: !235)
!1345 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxcontext", scope: !1339, file: !4, line: 7702, type: !94)
!1346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c_data", scope: !1339, file: !4, line: 7703, type: !714)
!1347 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !1339, file: !4, line: 7703, type: !57)
!1348 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q_data", scope: !1339, file: !4, line: 7704, type: !714)
!1349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q", scope: !1339, file: !4, line: 7704, type: !57)
!1350 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r_data", scope: !1339, file: !4, line: 7705, type: !714)
!1351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1339, file: !4, line: 7705, type: !57)
!1352 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "two_data", scope: !1339, file: !4, line: 7706, type: !1017)
!1353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "two", scope: !1339, file: !4, line: 7706, type: !57)
!1354 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prec", scope: !1339, file: !4, line: 7707, type: !43)
!1355 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ideal_exp", scope: !1339, file: !4, line: 7707, type: !43)
!1356 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "l", scope: !1339, file: !4, line: 7708, type: !43)
!1357 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !1339, file: !4, line: 7708, type: !43)
!1358 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exact", scope: !1339, file: !4, line: 7709, type: !50)
!1359 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lsd", scope: !1360, file: !4, line: 7809, type: !50)
!1360 = distinct !DILexicalBlock(scope: !1361, file: !4, line: 7808, column: 10)
!1361 = distinct !DILexicalBlock(scope: !1339, file: !4, line: 7797, column: 9)
!1362 = !DISubprogram(name: "mpd_sizeinbase", scope: !4, file: !4, line: 7839, type: !1363, isLocal: false, isDefinition: true, scopeLine: 7840, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*, i32)* @mpd_sizeinbase, variables: !1365)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{!53, !85, !47}
!1365 = !{!1366, !1367, !1368, !1369}
!1366 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !1362, file: !4, line: 7839, type: !85)
!1367 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 2, scope: !1362, file: !4, line: 7839, type: !47)
!1368 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1362, file: !4, line: 7841, type: !52)
!1369 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "digits", scope: !1362, file: !4, line: 7842, type: !53)
!1370 = !DISubprogram(name: "mpd_qexport_u16", scope: !4, file: !4, line: 8126, type: !1371, isLocal: false, isDefinition: true, scopeLine: 8128, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i16**, i64, i32, %struct.mpd_t*, i32*)* @mpd_qexport_u16, variables: !1375)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{!53, !1373, !53, !47, !85, !235}
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64, align: 64)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64, align: 64)
!1375 = !{!1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384}
!1376 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rdata", arg: 1, scope: !1370, file: !4, line: 8126, type: !1373)
!1377 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rlen", arg: 2, scope: !1370, file: !4, line: 8126, type: !53)
!1378 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rbase", arg: 3, scope: !1370, file: !4, line: 8126, type: !47)
!1379 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 4, scope: !1370, file: !4, line: 8127, type: !85)
!1380 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1370, file: !4, line: 8127, type: !235)
!1381 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tsrc_data", scope: !1370, file: !4, line: 8129, type: !714)
!1382 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tsrc", scope: !1370, file: !4, line: 8129, type: !57)
!1383 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "alloc", scope: !1370, file: !4, line: 8130, type: !50)
!1384 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1370, file: !4, line: 8131, type: !53)
!1385 = !DISubprogram(name: "mpd_qexport_u32", scope: !4, file: !4, line: 8205, type: !1386, isLocal: false, isDefinition: true, scopeLine: 8207, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i32**, i64, i32, %struct.mpd_t*, i32*)* @mpd_qexport_u32, variables: !1389)
!1386 = !DISubroutineType(types: !1387)
!1387 = !{!53, !1388, !53, !47, !85, !235}
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64, align: 64)
!1389 = !{!1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398}
!1390 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rdata", arg: 1, scope: !1385, file: !4, line: 8205, type: !1388)
!1391 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rlen", arg: 2, scope: !1385, file: !4, line: 8205, type: !53)
!1392 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rbase", arg: 3, scope: !1385, file: !4, line: 8205, type: !47)
!1393 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 4, scope: !1385, file: !4, line: 8206, type: !85)
!1394 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1385, file: !4, line: 8206, type: !235)
!1395 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tsrc_data", scope: !1385, file: !4, line: 8208, type: !714)
!1396 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tsrc", scope: !1385, file: !4, line: 8208, type: !57)
!1397 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "alloc", scope: !1385, file: !4, line: 8209, type: !50)
!1398 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1385, file: !4, line: 8210, type: !53)
!1399 = !DISubprogram(name: "mpd_qimport_u16", scope: !4, file: !4, line: 8288, type: !1400, isLocal: false, isDefinition: true, scopeLine: 8292, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i16*, i64, i8, i32, %struct.mpd_context_t*, i32*)* @mpd_qimport_u16, variables: !1404)
!1400 = !DISubroutineType(types: !1401)
!1401 = !{null, !56, !1402, !53, !37, !47, !92, !235}
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64, align: 64)
!1403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !67)
!1404 = !{!1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414}
!1405 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1399, file: !4, line: 8288, type: !56)
!1406 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "srcdata", arg: 2, scope: !1399, file: !4, line: 8289, type: !1402)
!1407 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "srclen", arg: 3, scope: !1399, file: !4, line: 8289, type: !53)
!1408 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "srcsign", arg: 4, scope: !1399, file: !4, line: 8290, type: !37)
!1409 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "srcbase", arg: 5, scope: !1399, file: !4, line: 8290, type: !47)
!1410 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 6, scope: !1399, file: !4, line: 8291, type: !92)
!1411 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 7, scope: !1399, file: !4, line: 8291, type: !235)
!1412 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "usrc", scope: !1399, file: !4, line: 8293, type: !66)
!1413 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rlen", scope: !1399, file: !4, line: 8294, type: !43)
!1414 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1399, file: !4, line: 8295, type: !53)
!1415 = !DISubprogram(name: "mpd_qimport_u32", scope: !4, file: !4, line: 8342, type: !1416, isLocal: false, isDefinition: true, scopeLine: 8346, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i32*, i64, i8, i32, %struct.mpd_context_t*, i32*)* @mpd_qimport_u32, variables: !1420)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{null, !56, !1418, !53, !37, !47, !92, !235}
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64, align: 64)
!1419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !47)
!1420 = !{!1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429}
!1421 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1415, file: !4, line: 8342, type: !56)
!1422 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "srcdata", arg: 2, scope: !1415, file: !4, line: 8343, type: !1418)
!1423 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "srclen", arg: 3, scope: !1415, file: !4, line: 8343, type: !53)
!1424 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "srcsign", arg: 4, scope: !1415, file: !4, line: 8344, type: !37)
!1425 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "srcbase", arg: 5, scope: !1415, file: !4, line: 8344, type: !47)
!1426 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 6, scope: !1415, file: !4, line: 8345, type: !92)
!1427 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 7, scope: !1415, file: !4, line: 8345, type: !235)
!1428 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rlen", scope: !1415, file: !4, line: 8347, type: !43)
!1429 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1415, file: !4, line: 8348, type: !53)
!1430 = !DISubprogram(name: "_mpd_idiv_word", scope: !1431, file: !1431, line: 573, type: !1432, isLocal: true, isDefinition: true, scopeLine: 574, flags: DIFlagPrototyped, isOptimized: true, function: void (i64*, i64*, i64, i64)* @_mpd_idiv_word, variables: !1435)
!1431 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_decimal/libmpdec/typearith.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1432 = !DISubroutineType(types: !1433)
!1433 = !{null, !1434, !1434, !43, !43}
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64, align: 64)
!1435 = !{!1436, !1437, !1438, !1439}
!1436 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 1, scope: !1430, file: !1431, line: 573, type: !1434)
!1437 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "r", arg: 2, scope: !1430, file: !1431, line: 573, type: !1434)
!1438 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v", arg: 3, scope: !1430, file: !1431, line: 573, type: !43)
!1439 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "d", arg: 4, scope: !1430, file: !1431, line: 573, type: !43)
!1440 = !DISubprogram(name: "_mpd_isint", scope: !4, file: !4, line: 917, type: !138, isLocal: true, isDefinition: true, scopeLine: 918, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @_mpd_isint, variables: !1441)
!1441 = !{!1442, !1443}
!1442 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !1440, file: !4, line: 917, type: !85)
!1443 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tz", scope: !1440, file: !4, line: 919, type: !43)
!1444 = !DISubprogram(name: "_mpd_div_word", scope: !1431, file: !1431, line: 566, type: !1445, isLocal: true, isDefinition: true, scopeLine: 567, flags: DIFlagPrototyped, isOptimized: true, function: void (i64*, i64*, i64, i64)* @_mpd_div_word, variables: !1447)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{null, !66, !66, !40, !40}
!1447 = !{!1448, !1449, !1450, !1451}
!1448 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 1, scope: !1444, file: !1431, line: 566, type: !66)
!1449 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "r", arg: 2, scope: !1444, file: !1431, line: 566, type: !66)
!1450 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v", arg: 3, scope: !1444, file: !1431, line: 566, type: !40)
!1451 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "d", arg: 4, scope: !1444, file: !1431, line: 566, type: !40)
!1452 = !DISubprogram(name: "_ssettriple", scope: !4, file: !4, line: 1021, type: !1453, isLocal: true, isDefinition: true, scopeLine: 1022, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i8, i64, i64)* @_ssettriple, variables: !1455)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{null, !56, !37, !40, !43}
!1455 = !{!1456, !1457, !1458, !1459}
!1456 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1452, file: !4, line: 1021, type: !56)
!1457 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sign", arg: 2, scope: !1452, file: !4, line: 1021, type: !37)
!1458 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 3, scope: !1452, file: !4, line: 1021, type: !40)
!1459 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exp", arg: 4, scope: !1452, file: !4, line: 1021, type: !43)
!1460 = !DISubprogram(name: "_settriple", scope: !4, file: !4, line: 1032, type: !1453, isLocal: true, isDefinition: true, scopeLine: 1033, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i8, i64, i64)* @_settriple, variables: !1461)
!1461 = !{!1462, !1463, !1464, !1465}
!1462 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1460, file: !4, line: 1032, type: !56)
!1463 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sign", arg: 2, scope: !1460, file: !4, line: 1032, type: !37)
!1464 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 3, scope: !1460, file: !4, line: 1032, type: !40)
!1465 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exp", arg: 4, scope: !1460, file: !4, line: 1032, type: !43)
!1466 = !DISubprogram(name: "_mpd_qget_uint", scope: !4, file: !4, line: 1262, type: !1467, isLocal: true, isDefinition: true, scopeLine: 1263, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i32, %struct.mpd_t*, i32*)* @_mpd_qget_uint, variables: !1469)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!40, !50, !85, !235}
!1469 = !{!1470, !1471, !1472, !1473, !1474, !1478, !1479}
!1470 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "use_sign", arg: 1, scope: !1466, file: !4, line: 1262, type: !50)
!1471 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1466, file: !4, line: 1262, type: !85)
!1472 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !1466, file: !4, line: 1262, type: !235)
!1473 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1466, file: !4, line: 1264, type: !57)
!1474 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp_data", scope: !1466, file: !4, line: 1265, type: !1475)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 128, align: 64, elements: !1476)
!1476 = !{!1477}
!1477 = !DISubrange(count: 2)
!1478 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lo", scope: !1466, file: !4, line: 1266, type: !40)
!1479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hi", scope: !1466, file: !4, line: 1266, type: !40)
!1480 = !DISubprogram(name: "mpd_qsshiftr", scope: !4, file: !4, line: 2453, type: !1481, isLocal: true, isDefinition: true, scopeLine: 2454, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*, %struct.mpd_t*, i64)* @mpd_qsshiftr, variables: !1483)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{!40, !56, !85, !43}
!1483 = !{!1484, !1485, !1486, !1487, !1488}
!1484 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1480, file: !4, line: 2453, type: !56)
!1485 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1480, file: !4, line: 2453, type: !85)
!1486 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 3, scope: !1480, file: !4, line: 2453, type: !43)
!1487 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rnd", scope: !1480, file: !4, line: 2455, type: !40)
!1488 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1480, file: !4, line: 2456, type: !43)
!1489 = !DISubprogram(name: "mpd_qcopy_static", scope: !4, file: !4, line: 1938, type: !277, isLocal: true, isDefinition: true, scopeLine: 1939, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*)* @mpd_qcopy_static, variables: !1490)
!1490 = !{!1491, !1492}
!1491 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1489, file: !4, line: 1938, type: !56)
!1492 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1489, file: !4, line: 1938, type: !85)
!1493 = !DISubprogram(name: "_mpd_get_msdigits", scope: !4, file: !4, line: 853, type: !1494, isLocal: true, isDefinition: true, scopeLine: 855, flags: DIFlagPrototyped, isOptimized: true, function: void (i64*, i64*, %struct.mpd_t*, i32)* @_mpd_get_msdigits, variables: !1496)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{null, !66, !66, !85, !48}
!1496 = !{!1497, !1498, !1499, !1500, !1501, !1502}
!1497 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hi", arg: 1, scope: !1493, file: !4, line: 853, type: !66)
!1498 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lo", arg: 2, scope: !1493, file: !4, line: 853, type: !66)
!1499 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 3, scope: !1493, file: !4, line: 853, type: !85)
!1500 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 4, scope: !1493, file: !4, line: 854, type: !48)
!1501 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1493, file: !4, line: 856, type: !40)
!1502 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1493, file: !4, line: 856, type: !40)
!1503 = !DISubprogram(name: "_mpd_mul_words", scope: !1431, file: !1431, line: 206, type: !1445, isLocal: true, isDefinition: true, scopeLine: 207, flags: DIFlagPrototyped, isOptimized: true, function: void (i64*, i64*, i64, i64)* @_mpd_mul_words, variables: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509, !1510}
!1505 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hi", arg: 1, scope: !1503, file: !1431, line: 206, type: !66)
!1506 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lo", arg: 2, scope: !1503, file: !1431, line: 206, type: !66)
!1507 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 3, scope: !1503, file: !1431, line: 206, type: !40)
!1508 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 4, scope: !1503, file: !1431, line: 206, type: !40)
!1509 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h", scope: !1503, file: !1431, line: 208, type: !40)
!1510 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "l", scope: !1503, file: !1431, line: 208, type: !40)
!1511 = !DISubprogram(name: "_mpd_fix_nan", scope: !4, file: !4, line: 811, type: !1512, isLocal: true, isDefinition: true, scopeLine: 812, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_context_t*)* @_mpd_fix_nan, variables: !1514)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{null, !56, !92}
!1514 = !{!1515, !1516, !1517, !1518, !1519, !1520}
!1515 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1511, file: !4, line: 811, type: !56)
!1516 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !1511, file: !4, line: 811, type: !92)
!1517 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dummy", scope: !1511, file: !4, line: 813, type: !47)
!1518 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prec", scope: !1511, file: !4, line: 814, type: !43)
!1519 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1511, file: !4, line: 815, type: !43)
!1520 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1511, file: !4, line: 815, type: !43)
!1521 = !DISubprogram(name: "_mpd_check_exp", scope: !4, file: !4, line: 1733, type: !332, isLocal: true, isDefinition: true, scopeLine: 1734, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_check_exp, variables: !1522)
!1522 = !{!1523, !1524, !1525, !1526, !1527, !1528, !1529}
!1523 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !1521, file: !4, line: 1733, type: !56)
!1524 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !1521, file: !4, line: 1733, type: !92)
!1525 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !1521, file: !4, line: 1733, type: !235)
!1526 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "adjexp", scope: !1521, file: !4, line: 1735, type: !43)
!1527 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "etiny", scope: !1521, file: !4, line: 1735, type: !43)
!1528 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !1521, file: !4, line: 1735, type: !43)
!1529 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rnd", scope: !1521, file: !4, line: 1736, type: !50)
!1530 = !DISubprogram(name: "_mpd_check_round", scope: !4, file: !4, line: 1856, type: !332, isLocal: true, isDefinition: true, scopeLine: 1857, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_check_round, variables: !1531)
!1531 = !{!1532, !1533, !1534, !1535, !1536}
!1532 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !1530, file: !4, line: 1856, type: !56)
!1533 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !1530, file: !4, line: 1856, type: !92)
!1534 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !1530, file: !4, line: 1856, type: !235)
!1535 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rnd", scope: !1530, file: !4, line: 1858, type: !40)
!1536 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !1530, file: !4, line: 1859, type: !43)
!1537 = !DISubprogram(name: "_mpd_apply_round", scope: !4, file: !4, line: 1652, type: !382, isLocal: true, isDefinition: true, scopeLine: 1654, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @_mpd_apply_round, variables: !1538)
!1538 = !{!1539, !1540, !1541, !1542, !1543}
!1539 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !1537, file: !4, line: 1652, type: !56)
!1540 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rnd", arg: 2, scope: !1537, file: !4, line: 1652, type: !40)
!1541 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1537, file: !4, line: 1652, type: !92)
!1542 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1537, file: !4, line: 1653, type: !235)
!1543 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "carry", scope: !1544, file: !4, line: 1665, type: !40)
!1544 = distinct !DILexicalBlock(scope: !1545, file: !4, line: 1655, column: 39)
!1545 = distinct !DILexicalBlock(scope: !1537, file: !4, line: 1655, column: 9)
!1546 = !DISubprogram(name: "_mpd_rnd_incr", scope: !4, file: !4, line: 1617, type: !1547, isLocal: true, isDefinition: true, scopeLine: 1618, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, i64, %struct.mpd_context_t*)* @_mpd_rnd_incr, variables: !1549)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!50, !85, !40, !92}
!1549 = !{!1550, !1551, !1552, !1553}
!1550 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !1546, file: !4, line: 1617, type: !85)
!1551 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rnd", arg: 2, scope: !1546, file: !4, line: 1617, type: !40)
!1552 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1546, file: !4, line: 1617, type: !92)
!1553 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ld", scope: !1546, file: !4, line: 1619, type: !50)
!1554 = !DISubprogram(name: "_mpd_negate", scope: !4, file: !4, line: 737, type: !228, isLocal: true, isDefinition: true, scopeLine: 738, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*)* @_mpd_negate, variables: !1555)
!1555 = !{!1556}
!1556 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !1554, file: !4, line: 737, type: !56)
!1557 = !DISubprogram(name: "_mpd_cmp", scope: !4, file: !4, line: 2123, type: !582, isLocal: true, isDefinition: true, scopeLine: 2124, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*)* @_mpd_cmp, variables: !1558)
!1558 = !{!1559, !1560, !1561, !1562}
!1559 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !1557, file: !4, line: 2123, type: !85)
!1560 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !1557, file: !4, line: 2123, type: !85)
!1561 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "adjexp_a", scope: !1557, file: !4, line: 2125, type: !43)
!1562 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "adjexp_b", scope: !1557, file: !4, line: 2125, type: !43)
!1563 = !DISubprogram(name: "_mpd_cmp_same_adjexp", scope: !4, file: !4, line: 2094, type: !582, isLocal: true, isDefinition: true, scopeLine: 2095, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*)* @_mpd_cmp_same_adjexp, variables: !1564)
!1564 = !{!1565, !1566, !1567, !1568}
!1565 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !1563, file: !4, line: 2094, type: !85)
!1566 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !1563, file: !4, line: 2094, type: !85)
!1567 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !1563, file: !4, line: 2096, type: !43)
!1568 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1563, file: !4, line: 2096, type: !43)
!1569 = !DISubprogram(name: "_mpd_basecmp", scope: !4, file: !4, line: 2048, type: !1570, isLocal: true, isDefinition: true, scopeLine: 2050, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64*, i64*, i64, i64, i64)* @_mpd_basecmp, variables: !1572)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!50, !66, !66, !55, !55, !55}
!1572 = !{!1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584}
!1573 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "big", arg: 1, scope: !1569, file: !4, line: 2048, type: !66)
!1574 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "small", arg: 2, scope: !1569, file: !4, line: 2048, type: !66)
!1575 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 3, scope: !1569, file: !4, line: 2048, type: !55)
!1576 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 4, scope: !1569, file: !4, line: 2048, type: !55)
!1577 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shift", arg: 5, scope: !1569, file: !4, line: 2049, type: !55)
!1578 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "l", scope: !1569, file: !4, line: 2055, type: !40)
!1579 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lprev", scope: !1569, file: !4, line: 2055, type: !40)
!1580 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h", scope: !1569, file: !4, line: 2055, type: !40)
!1581 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q", scope: !1569, file: !4, line: 2057, type: !40)
!1582 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1569, file: !4, line: 2057, type: !40)
!1583 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ph", scope: !1569, file: !4, line: 2058, type: !40)
!1584 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1569, file: !4, line: 2058, type: !40)
!1585 = !DISubprogram(name: "_mpd_divmod_pow10", scope: !1431, file: !1431, line: 256, type: !1445, isLocal: true, isDefinition: true, scopeLine: 257, flags: DIFlagPrototyped, isOptimized: true, function: void (i64*, i64*, i64, i64)* @_mpd_divmod_pow10, variables: !1586)
!1586 = !{!1587, !1588, !1589, !1590}
!1587 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 1, scope: !1585, file: !1431, line: 256, type: !66)
!1588 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "r", arg: 2, scope: !1585, file: !1431, line: 256, type: !66)
!1589 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v", arg: 3, scope: !1585, file: !1431, line: 256, type: !40)
!1590 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exp", arg: 4, scope: !1585, file: !1431, line: 256, type: !40)
!1591 = !DISubprogram(name: "_mpd_isallzero", scope: !1592, file: !1592, line: 194, type: !1593, isLocal: true, isDefinition: true, scopeLine: 195, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64*, i64)* @_mpd_isallzero, variables: !1597)
!1592 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_decimal/libmpdec/basearith.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!50, !1595, !43}
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64, align: 64)
!1596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !40)
!1597 = !{!1598, !1599}
!1598 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 1, scope: !1591, file: !1592, line: 194, type: !1595)
!1599 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 2, scope: !1591, file: !1592, line: 194, type: !43)
!1600 = !DISubprogram(name: "_mpd_copy_shared", scope: !4, file: !4, line: 1900, type: !277, isLocal: true, isDefinition: true, scopeLine: 1901, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*)* @_mpd_copy_shared, variables: !1601)
!1601 = !{!1602, !1603}
!1602 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dest", arg: 1, scope: !1600, file: !4, line: 1900, type: !56)
!1603 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !1600, file: !4, line: 1900, type: !85)
!1604 = !DISubprogram(name: "_mpd_cmp_abs", scope: !4, file: !4, line: 2175, type: !582, isLocal: true, isDefinition: true, scopeLine: 2176, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*)* @_mpd_cmp_abs, variables: !1605)
!1605 = !{!1606, !1607, !1608, !1609}
!1606 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !1604, file: !4, line: 2175, type: !85)
!1607 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !1604, file: !4, line: 2175, type: !85)
!1608 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "adjexp_a", scope: !1604, file: !4, line: 2177, type: !43)
!1609 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "adjexp_b", scope: !1604, file: !4, line: 2177, type: !43)
!1610 = !DISubprogram(name: "_mpd_get_rnd", scope: !4, file: !4, line: 2428, type: !1611, isLocal: true, isDefinition: true, scopeLine: 2429, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i64*, i64, i32)* @_mpd_get_rnd, variables: !1613)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{!40, !1595, !43, !50}
!1613 = !{!1614, !1615, !1616, !1617, !1618, !1619}
!1614 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 1, scope: !1610, file: !4, line: 2428, type: !1595)
!1615 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 2, scope: !1610, file: !4, line: 2428, type: !43)
!1616 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "use_msd", arg: 3, scope: !1610, file: !4, line: 2428, type: !50)
!1617 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rnd", scope: !1610, file: !4, line: 2430, type: !40)
!1618 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rest", scope: !1610, file: !4, line: 2430, type: !40)
!1619 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "word", scope: !1610, file: !4, line: 2430, type: !40)
!1620 = !DISubprogram(name: "_mpd_real_size", scope: !4, file: !4, line: 884, type: !1621, isLocal: true, isDefinition: true, scopeLine: 885, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i64*, i64)* @_mpd_real_size, variables: !1623)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{!43, !66, !43}
!1623 = !{!1624, !1625}
!1624 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 1, scope: !1620, file: !4, line: 884, type: !66)
!1625 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 2, scope: !1620, file: !4, line: 884, type: !43)
!1626 = !DISubprogram(name: "_mpd_cap", scope: !4, file: !4, line: 782, type: !1512, isLocal: true, isDefinition: true, scopeLine: 783, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_context_t*)* @_mpd_cap, variables: !1627)
!1627 = !{!1628, !1629, !1630, !1631, !1632}
!1628 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1626, file: !4, line: 782, type: !56)
!1629 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !1626, file: !4, line: 782, type: !92)
!1630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dummy", scope: !1626, file: !4, line: 784, type: !47)
!1631 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1626, file: !4, line: 785, type: !43)
!1632 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1626, file: !4, line: 785, type: !43)
!1633 = !DISubprogram(name: "_mpd_qadd", scope: !4, file: !4, line: 3373, type: !641, isLocal: true, isDefinition: true, scopeLine: 3375, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qadd, variables: !1634)
!1634 = !{!1635, !1636, !1637, !1638, !1639}
!1635 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1633, file: !4, line: 3373, type: !56)
!1636 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1633, file: !4, line: 3373, type: !85)
!1637 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1633, file: !4, line: 3373, type: !85)
!1638 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1633, file: !4, line: 3374, type: !92)
!1639 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1633, file: !4, line: 3374, type: !235)
!1640 = !DISubprogram(name: "_mpd_qaddsub_inf", scope: !4, file: !4, line: 3214, type: !1641, isLocal: true, isDefinition: true, scopeLine: 3216, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, i8, i32*)* @_mpd_qaddsub_inf, variables: !1643)
!1641 = !DISubroutineType(types: !1642)
!1642 = !{null, !56, !85, !85, !37, !235}
!1643 = !{!1644, !1645, !1646, !1647, !1648}
!1644 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1640, file: !4, line: 3214, type: !56)
!1645 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1640, file: !4, line: 3214, type: !85)
!1646 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1640, file: !4, line: 3214, type: !85)
!1647 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sign_b", arg: 4, scope: !1640, file: !4, line: 3214, type: !37)
!1648 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1640, file: !4, line: 3215, type: !235)
!1649 = !DISubprogram(name: "_mpd_qaddsub", scope: !4, file: !4, line: 3232, type: !1650, isLocal: true, isDefinition: true, scopeLine: 3234, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, i8, %struct.mpd_context_t*, i32*)* @_mpd_qaddsub, variables: !1652)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{null, !56, !85, !85, !37, !92, !235}
!1652 = !{!1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670}
!1653 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1649, file: !4, line: 3232, type: !56)
!1654 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1649, file: !4, line: 3232, type: !85)
!1655 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1649, file: !4, line: 3232, type: !85)
!1656 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sign_b", arg: 4, scope: !1649, file: !4, line: 3232, type: !37)
!1657 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 5, scope: !1649, file: !4, line: 3233, type: !92)
!1658 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 6, scope: !1649, file: !4, line: 3233, type: !235)
!1659 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "big", scope: !1649, file: !4, line: 3235, type: !85)
!1660 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "small", scope: !1649, file: !4, line: 3235, type: !85)
!1661 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "big_aligned_data", scope: !1649, file: !4, line: 3236, type: !714)
!1662 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "big_aligned", scope: !1649, file: !4, line: 3236, type: !57)
!1663 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tiny_data", scope: !1649, file: !4, line: 3237, type: !1017)
!1664 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tiny", scope: !1649, file: !4, line: 3237, type: !57)
!1665 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "carry", scope: !1649, file: !4, line: 3238, type: !40)
!1666 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newsize", scope: !1649, file: !4, line: 3239, type: !43)
!1667 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !1649, file: !4, line: 3239, type: !43)
!1668 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exp", scope: !1649, file: !4, line: 3240, type: !43)
!1669 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1649, file: !4, line: 3240, type: !43)
!1670 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "swap", scope: !1649, file: !4, line: 3241, type: !50)
!1671 = !DISubprogram(name: "_mpd_ptrswap", scope: !4, file: !4, line: 3205, type: !1672, isLocal: true, isDefinition: true, scopeLine: 3206, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t**, %struct.mpd_t**)* @_mpd_ptrswap, variables: !1675)
!1672 = !DISubroutineType(types: !1673)
!1673 = !{null, !1674, !1674}
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64, align: 64)
!1675 = !{!1676, !1677, !1678}
!1676 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !1671, file: !4, line: 3205, type: !1674)
!1677 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !1671, file: !4, line: 3205, type: !1674)
!1678 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !1671, file: !4, line: 3207, type: !85)
!1679 = !DISubprogram(name: "_mpd_qdiv", scope: !4, file: !4, line: 3651, type: !1680, isLocal: true, isDefinition: true, scopeLine: 3653, flags: DIFlagPrototyped, isOptimized: true, function: void (i32, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qdiv, variables: !1682)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{null, !50, !56, !85, !85, !92, !235}
!1682 = !{!1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1704, !1706}
!1683 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "action", arg: 1, scope: !1679, file: !4, line: 3651, type: !50)
!1684 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 2, scope: !1679, file: !4, line: 3651, type: !56)
!1685 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 3, scope: !1679, file: !4, line: 3651, type: !85)
!1686 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 4, scope: !1679, file: !4, line: 3651, type: !85)
!1687 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 5, scope: !1679, file: !4, line: 3652, type: !92)
!1688 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 6, scope: !1679, file: !4, line: 3652, type: !235)
!1689 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aligned_data", scope: !1679, file: !4, line: 3654, type: !714)
!1690 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aligned", scope: !1679, file: !4, line: 3654, type: !57)
!1691 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ld", scope: !1679, file: !4, line: 3655, type: !40)
!1692 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !1679, file: !4, line: 3656, type: !43)
!1693 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exp", scope: !1679, file: !4, line: 3656, type: !43)
!1694 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tz", scope: !1679, file: !4, line: 3656, type: !43)
!1695 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newsize", scope: !1679, file: !4, line: 3657, type: !43)
!1696 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ideal_exp", scope: !1679, file: !4, line: 3658, type: !43)
!1697 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rem", scope: !1679, file: !4, line: 3659, type: !40)
!1698 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign_a", scope: !1679, file: !4, line: 3660, type: !37)
!1699 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign_b", scope: !1679, file: !4, line: 3661, type: !37)
!1700 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1701, file: !4, line: 3721, type: !50)
!1701 = distinct !DILexicalBlock(scope: !1702, file: !4, line: 3720, column: 31)
!1702 = distinct !DILexicalBlock(scope: !1703, file: !4, line: 3720, column: 14)
!1703 = distinct !DILexicalBlock(scope: !1679, file: !4, line: 3717, column: 9)
!1704 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r_data", scope: !1705, file: !4, line: 3730, type: !714)
!1705 = distinct !DILexicalBlock(scope: !1702, file: !4, line: 3729, column: 10)
!1706 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1705, file: !4, line: 3730, type: !57)
!1707 = !DISubprogram(name: "_mpd_qdiv_inf", scope: !4, file: !4, line: 3632, type: !641, isLocal: true, isDefinition: true, scopeLine: 3634, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qdiv_inf, variables: !1708)
!1708 = !{!1709, !1710, !1711, !1712, !1713}
!1709 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1707, file: !4, line: 3632, type: !56)
!1710 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1707, file: !4, line: 3632, type: !85)
!1711 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1707, file: !4, line: 3632, type: !85)
!1712 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1707, file: !4, line: 3633, type: !92)
!1713 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1707, file: !4, line: 3633, type: !235)
!1714 = !DISubprogram(name: "_mpd_base_ndivmod", scope: !4, file: !4, line: 7355, type: !1715, isLocal: true, isDefinition: true, scopeLine: 7357, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, i32*)* @_mpd_base_ndivmod, variables: !1717)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{null, !56, !56, !85, !85, !235}
!1717 = !{!1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728}
!1718 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 1, scope: !1714, file: !4, line: 7355, type: !56)
!1719 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "r", arg: 2, scope: !1714, file: !4, line: 7355, type: !56)
!1720 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 3, scope: !1714, file: !4, line: 7355, type: !85)
!1721 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 4, scope: !1714, file: !4, line: 7355, type: !85)
!1722 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1714, file: !4, line: 7356, type: !235)
!1723 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workctx", scope: !1714, file: !4, line: 7358, type: !94)
!1724 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "qq", scope: !1714, file: !4, line: 7359, type: !56)
!1725 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rr", scope: !1714, file: !4, line: 7359, type: !56)
!1726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aa", scope: !1714, file: !4, line: 7360, type: !57)
!1727 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bb", scope: !1714, file: !4, line: 7360, type: !57)
!1728 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !1714, file: !4, line: 7361, type: !50)
!1729 = !DISubprogram(name: "_mpd_qreciprocal", scope: !4, file: !4, line: 7268, type: !666, isLocal: true, isDefinition: true, scopeLine: 7270, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qreciprocal, variables: !1730)
!1730 = !{!1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751}
!1731 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1729, file: !4, line: 7268, type: !56)
!1732 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1729, file: !4, line: 7268, type: !85)
!1733 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1729, file: !4, line: 7268, type: !92)
!1734 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1729, file: !4, line: 7269, type: !235)
!1735 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "varcontext", scope: !1729, file: !4, line: 7271, type: !94)
!1736 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxcontext", scope: !1729, file: !4, line: 7271, type: !94)
!1737 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "z", scope: !1729, file: !4, line: 7272, type: !56)
!1738 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !1729, file: !4, line: 7273, type: !56)
!1739 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vtmp", scope: !1729, file: !4, line: 7274, type: !57)
!1740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s_data", scope: !1729, file: !4, line: 7275, type: !714)
!1741 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !1729, file: !4, line: 7275, type: !57)
!1742 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_data", scope: !1729, file: !4, line: 7276, type: !714)
!1743 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !1729, file: !4, line: 7276, type: !57)
!1744 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "two_data", scope: !1729, file: !4, line: 7277, type: !1017)
!1745 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "two", scope: !1729, file: !4, line: 7277, type: !57)
!1746 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "klist", scope: !1729, file: !4, line: 7278, type: !1022)
!1747 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "adj", scope: !1729, file: !4, line: 7279, type: !43)
!1748 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxprec", scope: !1729, file: !4, line: 7279, type: !43)
!1749 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "initprec", scope: !1729, file: !4, line: 7279, type: !43)
!1750 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign", scope: !1729, file: !4, line: 7280, type: !37)
!1751 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1729, file: !4, line: 7281, type: !50)
!1752 = !DISubprogram(name: "_mpd_qreciprocal_approx", scope: !4, file: !4, line: 7240, type: !1753, isLocal: true, isDefinition: true, scopeLine: 7241, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i32*)* @_mpd_qreciprocal_approx, variables: !1755)
!1753 = !DISubroutineType(types: !1754)
!1754 = !{null, !56, !85, !235}
!1755 = !{!1756, !1757, !1758, !1759, !1760, !1761, !1762}
!1756 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "z", arg: 1, scope: !1752, file: !4, line: 7240, type: !56)
!1757 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v", arg: 2, scope: !1752, file: !4, line: 7240, type: !85)
!1758 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !1752, file: !4, line: 7240, type: !235)
!1759 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p10data", scope: !1752, file: !4, line: 7242, type: !1475)
!1760 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dummy", scope: !1752, file: !4, line: 7243, type: !40)
!1761 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "word", scope: !1752, file: !4, line: 7243, type: !40)
!1762 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1752, file: !4, line: 7244, type: !50)
!1763 = !DISubprogram(name: "recpr_schedule_prec", scope: !4, file: !4, line: 7213, type: !1764, isLocal: true, isDefinition: true, scopeLine: 7215, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64*, i64, i64)* @recpr_schedule_prec, variables: !1766)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!50, !1434, !43, !43}
!1766 = !{!1767, !1768, !1769, !1770, !1771}
!1767 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "klist", arg: 1, scope: !1763, file: !4, line: 7213, type: !1434)
!1768 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "maxprec", arg: 2, scope: !1763, file: !4, line: 7214, type: !43)
!1769 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "initprec", arg: 3, scope: !1763, file: !4, line: 7214, type: !43)
!1770 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !1763, file: !4, line: 7216, type: !43)
!1771 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1763, file: !4, line: 7217, type: !50)
!1772 = !DISubprogram(name: "_mpd_qsub_exact", scope: !4, file: !4, line: 3437, type: !641, isLocal: true, isDefinition: true, scopeLine: 3439, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qsub_exact, variables: !1773)
!1773 = !{!1774, !1775, !1776, !1777, !1778, !1779}
!1774 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1772, file: !4, line: 3437, type: !56)
!1775 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1772, file: !4, line: 3437, type: !85)
!1776 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1772, file: !4, line: 3437, type: !85)
!1777 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1772, file: !4, line: 3438, type: !92)
!1778 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1772, file: !4, line: 3438, type: !235)
!1779 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workstatus", scope: !1772, file: !4, line: 3440, type: !47)
!1780 = !DISubprogram(name: "_mpd_qdivmod", scope: !4, file: !4, line: 3781, type: !905, isLocal: true, isDefinition: true, scopeLine: 3783, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qdivmod, variables: !1781)
!1781 = !{!1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797}
!1782 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 1, scope: !1780, file: !4, line: 3781, type: !56)
!1783 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "r", arg: 2, scope: !1780, file: !4, line: 3781, type: !56)
!1784 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 3, scope: !1780, file: !4, line: 3781, type: !85)
!1785 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 4, scope: !1780, file: !4, line: 3781, type: !85)
!1786 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 5, scope: !1780, file: !4, line: 3782, type: !92)
!1787 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 6, scope: !1780, file: !4, line: 3782, type: !235)
!1788 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aligned_data", scope: !1780, file: !4, line: 3784, type: !714)
!1789 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aligned", scope: !1780, file: !4, line: 3784, type: !57)
!1790 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "qsize", scope: !1780, file: !4, line: 3785, type: !43)
!1791 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rsize", scope: !1780, file: !4, line: 3785, type: !43)
!1792 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ideal_exp", scope: !1780, file: !4, line: 3786, type: !43)
!1793 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "expdiff", scope: !1780, file: !4, line: 3786, type: !43)
!1794 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !1780, file: !4, line: 3786, type: !43)
!1795 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign_a", scope: !1780, file: !4, line: 3787, type: !37)
!1796 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign_ab", scope: !1780, file: !4, line: 3788, type: !37)
!1797 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !1798, file: !4, line: 3874, type: !50)
!1798 = distinct !DILexicalBlock(scope: !1799, file: !4, line: 3873, column: 31)
!1799 = distinct !DILexicalBlock(scope: !1800, file: !4, line: 3873, column: 14)
!1800 = distinct !DILexicalBlock(scope: !1780, file: !4, line: 3865, column: 9)
!1801 = !DISubprogram(name: "_mpd_qexp", scope: !4, file: !4, line: 4213, type: !666, isLocal: true, isDefinition: true, scopeLine: 4215, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qexp, variables: !1802)
!1802 = !{!1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1803 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1801, file: !4, line: 4213, type: !56)
!1804 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1801, file: !4, line: 4213, type: !85)
!1805 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1801, file: !4, line: 4213, type: !92)
!1806 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1801, file: !4, line: 4214, type: !235)
!1807 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workctx", scope: !1801, file: !4, line: 4216, type: !94)
!1808 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp_data", scope: !1801, file: !4, line: 4217, type: !714)
!1809 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1801, file: !4, line: 4217, type: !57)
!1810 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum_data", scope: !1801, file: !4, line: 4218, type: !714)
!1811 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum", scope: !1801, file: !4, line: 4218, type: !57)
!1812 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "word_data", scope: !1801, file: !4, line: 4219, type: !1017)
!1813 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "word", scope: !1801, file: !4, line: 4219, type: !57)
!1814 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !1801, file: !4, line: 4220, type: !43)
!1815 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1801, file: !4, line: 4220, type: !43)
!1816 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !1801, file: !4, line: 4220, type: !43)
!1817 = !DISubprogram(name: "_mpd_qexp_check_one", scope: !4, file: !4, line: 4122, type: !502, isLocal: true, isDefinition: true, scopeLine: 4124, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qexp_check_one, variables: !1818)
!1818 = !{!1819, !1820, !1821, !1822, !1823, !1824, !1825}
!1819 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1817, file: !4, line: 4122, type: !56)
!1820 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1817, file: !4, line: 4122, type: !85)
!1821 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1817, file: !4, line: 4122, type: !92)
!1822 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1817, file: !4, line: 4123, type: !235)
!1823 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lim_data", scope: !1817, file: !4, line: 4125, type: !1017)
!1824 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lim", scope: !1817, file: !4, line: 4125, type: !57)
!1825 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aa", scope: !1817, file: !4, line: 4126, type: !57)
!1826 = !DISubprogram(name: "_mpd_get_exp_iterations", scope: !4, file: !4, line: 4144, type: !1827, isLocal: true, isDefinition: true, scopeLine: 4145, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*, i64)* @_mpd_get_exp_iterations, variables: !1829)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{!43, !85, !43}
!1829 = !{!1830, !1831, !1832, !1833}
!1830 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "r", arg: 1, scope: !1826, file: !4, line: 4144, type: !85)
!1831 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 2, scope: !1826, file: !4, line: 4144, type: !43)
!1832 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "log10pbyr", scope: !1826, file: !4, line: 4146, type: !43)
!1833 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1826, file: !4, line: 4147, type: !43)
!1834 = !DISubprogram(name: "_mpd_qpow_uint", scope: !4, file: !4, line: 6115, type: !1835, isLocal: true, isDefinition: true, scopeLine: 6117, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, i8, %struct.mpd_context_t*, i32*)* @_mpd_qpow_uint, variables: !1837)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{null, !56, !85, !40, !37, !92, !235}
!1837 = !{!1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845}
!1838 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1834, file: !4, line: 6115, type: !56)
!1839 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 2, scope: !1834, file: !4, line: 6115, type: !85)
!1840 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exp", arg: 3, scope: !1834, file: !4, line: 6115, type: !40)
!1841 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "resultsign", arg: 4, scope: !1834, file: !4, line: 6116, type: !37)
!1842 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 5, scope: !1834, file: !4, line: 6116, type: !92)
!1843 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 6, scope: !1834, file: !4, line: 6116, type: !235)
!1844 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workstatus", scope: !1834, file: !4, line: 6118, type: !47)
!1845 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1834, file: !4, line: 6119, type: !40)
!1846 = !DISubprogram(name: "mpd_bsr", scope: !1847, file: !1847, line: 107, type: !1848, isLocal: true, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64)* @mpd_bsr, variables: !1850)
!1847 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_decimal/libmpdec/bits.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1848 = !DISubroutineType(types: !1849)
!1849 = !{!50, !55}
!1850 = !{!1851, !1852}
!1851 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !1846, file: !1847, line: 107, type: !55)
!1852 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retval", scope: !1846, file: !1847, line: 109, type: !55)
!1853 = !DISubprogram(name: "_mpd_zeropad", scope: !4, file: !4, line: 4110, type: !332, isLocal: true, isDefinition: true, scopeLine: 4111, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_zeropad, variables: !1854)
!1854 = !{!1855, !1856, !1857, !1858}
!1855 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1853, file: !4, line: 4110, type: !56)
!1856 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !1853, file: !4, line: 4110, type: !92)
!1857 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !1853, file: !4, line: 4110, type: !235)
!1858 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !1859, file: !4, line: 4114, type: !43)
!1859 = distinct !DILexicalBlock(scope: !1860, file: !4, line: 4113, column: 37)
!1860 = distinct !DILexicalBlock(scope: !1853, file: !4, line: 4112, column: 9)
!1861 = !DISubprogram(name: "mpd_check_underflow", scope: !4, file: !4, line: 1846, type: !332, isLocal: true, isDefinition: true, scopeLine: 1847, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_check_underflow, variables: !1862)
!1862 = !{!1863, !1864, !1865}
!1863 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !1861, file: !4, line: 1846, type: !56)
!1864 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !1861, file: !4, line: 1846, type: !92)
!1865 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 3, scope: !1861, file: !4, line: 1846, type: !235)
!1866 = !DISubprogram(name: "_mpd_apply_round_excess", scope: !4, file: !4, line: 1686, type: !382, isLocal: true, isDefinition: true, scopeLine: 1688, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @_mpd_apply_round_excess, variables: !1867)
!1867 = !{!1868, !1869, !1870, !1871, !1872}
!1868 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !1866, file: !4, line: 1686, type: !56)
!1869 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rnd", arg: 2, scope: !1866, file: !4, line: 1686, type: !40)
!1870 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1866, file: !4, line: 1686, type: !92)
!1871 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1866, file: !4, line: 1687, type: !235)
!1872 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "carry", scope: !1873, file: !4, line: 1690, type: !40)
!1873 = distinct !DILexicalBlock(scope: !1874, file: !4, line: 1689, column: 39)
!1874 = distinct !DILexicalBlock(scope: !1866, file: !4, line: 1689, column: 9)
!1875 = !DISubprogram(name: "ln_schedule_prec", scope: !4, file: !4, line: 4456, type: !1764, isLocal: true, isDefinition: true, scopeLine: 4458, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64*, i64, i64)* @ln_schedule_prec, variables: !1876)
!1876 = !{!1877, !1878, !1879, !1880, !1881}
!1877 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "klist", arg: 1, scope: !1875, file: !4, line: 4456, type: !1434)
!1878 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "maxprec", arg: 2, scope: !1875, file: !4, line: 4456, type: !43)
!1879 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "initprec", arg: 3, scope: !1875, file: !4, line: 4457, type: !43)
!1880 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !1875, file: !4, line: 4459, type: !43)
!1881 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1875, file: !4, line: 4460, type: !50)
!1882 = !DISubprogram(name: "_mpd_qln", scope: !4, file: !4, line: 4673, type: !666, isLocal: true, isDefinition: true, scopeLine: 4675, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qln, variables: !1883)
!1883 = !{!1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906}
!1884 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1882, file: !4, line: 4673, type: !56)
!1885 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1882, file: !4, line: 4673, type: !85)
!1886 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !1882, file: !4, line: 4673, type: !92)
!1887 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1882, file: !4, line: 4674, type: !235)
!1888 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "varcontext", scope: !1882, file: !4, line: 4676, type: !94)
!1889 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxcontext", scope: !1882, file: !4, line: 4676, type: !94)
!1890 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "z", scope: !1882, file: !4, line: 4677, type: !56)
!1891 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v_data", scope: !1882, file: !4, line: 4678, type: !714)
!1892 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !1882, file: !4, line: 4678, type: !57)
!1893 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vtmp_data", scope: !1882, file: !4, line: 4679, type: !714)
!1894 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vtmp", scope: !1882, file: !4, line: 4679, type: !57)
!1895 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp_data", scope: !1882, file: !4, line: 4680, type: !714)
!1896 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1882, file: !4, line: 4680, type: !57)
!1897 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "klist", scope: !1882, file: !4, line: 4681, type: !1022)
!1898 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxprec", scope: !1882, file: !4, line: 4682, type: !43)
!1899 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !1882, file: !4, line: 4682, type: !43)
!1900 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !1882, file: !4, line: 4682, type: !43)
!1901 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a_digits", scope: !1882, file: !4, line: 4683, type: !43)
!1902 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a_exp", scope: !1882, file: !4, line: 4683, type: !43)
!1903 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dummy", scope: !1882, file: !4, line: 4684, type: !40)
!1904 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1882, file: !4, line: 4684, type: !40)
!1905 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1882, file: !4, line: 4685, type: !50)
!1906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cmp", scope: !1907, file: !4, line: 4747, type: !50)
!1907 = distinct !DILexicalBlock(scope: !1908, file: !4, line: 4736, column: 42)
!1908 = distinct !DILexicalBlock(scope: !1882, file: !4, line: 4736, column: 9)
!1909 = !DISubprogram(name: "mpd_coeff_ispow10", scope: !4, file: !4, line: 955, type: !138, isLocal: true, isDefinition: true, scopeLine: 956, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_coeff_ispow10, variables: !1910)
!1910 = !{!1911}
!1911 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !1909, file: !4, line: 955, type: !85)
!1912 = !DISubprogram(name: "mpd_word_ispow10", scope: !4, file: !4, line: 941, type: !78, isLocal: true, isDefinition: true, scopeLine: 942, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64)* @mpd_word_ispow10, variables: !1913)
!1913 = !{!1914, !1915}
!1914 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "word", arg: 1, scope: !1912, file: !4, line: 941, type: !40)
!1915 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1912, file: !4, line: 943, type: !50)
!1916 = !DISubprogram(name: "_mpd_qlog10", scope: !4, file: !4, line: 4959, type: !1917, isLocal: true, isDefinition: true, scopeLine: 4961, flags: DIFlagPrototyped, isOptimized: true, function: void (i32, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qlog10, variables: !1919)
!1917 = !DISubroutineType(types: !1918)
!1918 = !{null, !50, !56, !85, !92, !235}
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927}
!1920 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "action", arg: 1, scope: !1916, file: !4, line: 4959, type: !50)
!1921 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 2, scope: !1916, file: !4, line: 4959, type: !56)
!1922 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 3, scope: !1916, file: !4, line: 4959, type: !85)
!1923 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1916, file: !4, line: 4960, type: !92)
!1924 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1916, file: !4, line: 4960, type: !235)
!1925 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workctx", scope: !1916, file: !4, line: 4962, type: !94)
!1926 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ln10_data", scope: !1916, file: !4, line: 4963, type: !714)
!1927 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ln10", scope: !1916, file: !4, line: 4963, type: !57)
!1928 = !DISubprogram(name: "_mpd_cmp_numequal", scope: !4, file: !4, line: 2370, type: !582, isLocal: true, isDefinition: true, scopeLine: 2371, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*)* @_mpd_cmp_numequal, variables: !1929)
!1929 = !{!1930, !1931, !1932, !1933, !1934}
!1930 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !1928, file: !4, line: 2370, type: !85)
!1931 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !1928, file: !4, line: 2370, type: !85)
!1932 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign_a", scope: !1928, file: !4, line: 2372, type: !50)
!1933 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign_b", scope: !1928, file: !4, line: 2372, type: !50)
!1934 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !1928, file: !4, line: 2373, type: !50)
!1935 = !DISubprogram(name: "_mpd_qmul", scope: !4, file: !4, line: 5728, type: !641, isLocal: true, isDefinition: true, scopeLine: 5730, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qmul, variables: !1936)
!1936 = !{!1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947}
!1937 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1935, file: !4, line: 5728, type: !56)
!1938 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1935, file: !4, line: 5728, type: !85)
!1939 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1935, file: !4, line: 5728, type: !85)
!1940 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !1935, file: !4, line: 5729, type: !92)
!1941 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !1935, file: !4, line: 5729, type: !235)
!1942 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "big", scope: !1935, file: !4, line: 5731, type: !85)
!1943 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "small", scope: !1935, file: !4, line: 5731, type: !85)
!1944 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rdata", scope: !1935, file: !4, line: 5732, type: !66)
!1945 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rbuf", scope: !1935, file: !4, line: 5733, type: !714)
!1946 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rsize", scope: !1935, file: !4, line: 5734, type: !55)
!1947 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1935, file: !4, line: 5734, type: !55)
!1948 = !DISubprogram(name: "_mpd_qmul_inf", scope: !4, file: !4, line: 5703, type: !1949, isLocal: true, isDefinition: true, scopeLine: 5704, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, i32*)* @_mpd_qmul_inf, variables: !1951)
!1949 = !DISubroutineType(types: !1950)
!1950 = !{null, !56, !85, !85, !235}
!1951 = !{!1952, !1953, !1954, !1955}
!1952 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1948, file: !4, line: 5703, type: !56)
!1953 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !1948, file: !4, line: 5703, type: !85)
!1954 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !1948, file: !4, line: 5703, type: !85)
!1955 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !1948, file: !4, line: 5703, type: !235)
!1956 = !DISubprogram(name: "_mpd_singlemul", scope: !1592, file: !1592, line: 152, type: !1957, isLocal: true, isDefinition: true, scopeLine: 153, flags: DIFlagPrototyped, isOptimized: true, function: void (i64*, i64, i64)* @_mpd_singlemul, variables: !1959)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{null, !66, !40, !40}
!1959 = !{!1960, !1961, !1962, !1963, !1964}
!1960 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w", arg: 1, scope: !1956, file: !1592, line: 152, type: !66)
!1961 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "u", arg: 2, scope: !1956, file: !1592, line: 152, type: !40)
!1962 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v", arg: 3, scope: !1956, file: !1592, line: 152, type: !40)
!1963 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hi", scope: !1956, file: !1592, line: 154, type: !40)
!1964 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lo", scope: !1956, file: !1592, line: 154, type: !40)
!1965 = !DISubprogram(name: "_mpd_div_words_r", scope: !1592, file: !1592, line: 99, type: !1445, isLocal: true, isDefinition: true, scopeLine: 100, flags: DIFlagPrototyped, isOptimized: true, function: void (i64*, i64*, i64, i64)* @_mpd_div_words_r, variables: !1966)
!1966 = !{!1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975}
!1967 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 1, scope: !1965, file: !1592, line: 99, type: !66)
!1968 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "r", arg: 2, scope: !1965, file: !1592, line: 99, type: !66)
!1969 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hi", arg: 3, scope: !1965, file: !1592, line: 99, type: !40)
!1970 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lo", arg: 4, scope: !1965, file: !1592, line: 99, type: !40)
!1971 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n_adj", scope: !1965, file: !1592, line: 101, type: !40)
!1972 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h", scope: !1965, file: !1592, line: 101, type: !40)
!1973 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "l", scope: !1965, file: !1592, line: 101, type: !40)
!1974 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !1965, file: !1592, line: 101, type: !40)
!1975 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n1_neg", scope: !1965, file: !1592, line: 102, type: !40)
!1976 = !DISubprogram(name: "_mpd_mul_2_le2", scope: !1592, file: !1592, line: 162, type: !1977, isLocal: true, isDefinition: true, scopeLine: 163, flags: DIFlagPrototyped, isOptimized: true, function: void (i64*, i64*, i64*, i64)* @_mpd_mul_2_le2, variables: !1979)
!1977 = !DISubroutineType(types: !1978)
!1978 = !{null, !66, !66, !66, !43}
!1979 = !{!1980, !1981, !1982, !1983, !1984, !1985}
!1980 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w", arg: 1, scope: !1976, file: !1592, line: 162, type: !66)
!1981 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "u", arg: 2, scope: !1976, file: !1592, line: 162, type: !66)
!1982 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v", arg: 3, scope: !1976, file: !1592, line: 162, type: !66)
!1983 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 4, scope: !1976, file: !1592, line: 162, type: !43)
!1984 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hi", scope: !1976, file: !1592, line: 164, type: !40)
!1985 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lo", scope: !1976, file: !1592, line: 164, type: !40)
!1986 = !DISubprogram(name: "_mpd_kmul", scope: !4, file: !4, line: 5360, type: !1987, isLocal: true, isDefinition: true, scopeLine: 5363, flags: DIFlagPrototyped, isOptimized: true, function: i64* (i64*, i64*, i64, i64, i64*)* @_mpd_kmul, variables: !1990)
!1987 = !DISubroutineType(types: !1988)
!1988 = !{!66, !1595, !1595, !55, !55, !1989}
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64, align: 64)
!1990 = !{!1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998}
!1991 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "u", arg: 1, scope: !1986, file: !4, line: 5360, type: !1595)
!1992 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v", arg: 2, scope: !1986, file: !4, line: 5360, type: !1595)
!1993 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ulen", arg: 3, scope: !1986, file: !4, line: 5361, type: !55)
!1994 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "vlen", arg: 4, scope: !1986, file: !4, line: 5361, type: !55)
!1995 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rsize", arg: 5, scope: !1986, file: !4, line: 5362, type: !1989)
!1996 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1986, file: !4, line: 5364, type: !66)
!1997 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "w", scope: !1986, file: !4, line: 5364, type: !66)
!1998 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !1986, file: !4, line: 5365, type: !55)
!1999 = !DISubprogram(name: "_kmul_resultsize", scope: !4, file: !4, line: 5246, type: !2000, isLocal: true, isDefinition: true, scopeLine: 5247, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i64, i64)* @_kmul_resultsize, variables: !2002)
!2000 = !DISubroutineType(types: !2001)
!2001 = !{!55, !55, !55}
!2002 = !{!2003, !2004, !2005, !2006}
!2003 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "la", arg: 1, scope: !1999, file: !4, line: 5246, type: !55)
!2004 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lb", arg: 2, scope: !1999, file: !4, line: 5246, type: !55)
!2005 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !1999, file: !4, line: 5248, type: !55)
!2006 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !1999, file: !4, line: 5248, type: !55)
!2007 = !DISubprogram(name: "add_size_t", scope: !1431, file: !1431, line: 592, type: !2000, isLocal: true, isDefinition: true, scopeLine: 593, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i64, i64)* @add_size_t, variables: !2008)
!2008 = !{!2009, !2010}
!2009 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !2007, file: !1431, line: 592, type: !55)
!2010 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !2007, file: !1431, line: 592, type: !55)
!2011 = !DISubprogram(name: "mul_size_t", scope: !1431, file: !1431, line: 614, type: !2000, isLocal: true, isDefinition: true, scopeLine: 615, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i64, i64)* @mul_size_t, variables: !2012)
!2012 = !{!2013, !2014, !2015, !2016}
!2013 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !2011, file: !1431, line: 614, type: !55)
!2014 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !2011, file: !1431, line: 614, type: !55)
!2015 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hi", scope: !2011, file: !1431, line: 616, type: !40)
!2016 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lo", scope: !2011, file: !1431, line: 616, type: !40)
!2017 = !DISubprogram(name: "_kmul_worksize", scope: !4, file: !4, line: 5261, type: !2000, isLocal: true, isDefinition: true, scopeLine: 5262, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i64, i64)* @_kmul_worksize, variables: !2018)
!2018 = !{!2019, !2020, !2021}
!2019 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 1, scope: !2017, file: !4, line: 5261, type: !55)
!2020 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lim", arg: 2, scope: !2017, file: !4, line: 5261, type: !55)
!2021 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !2017, file: !4, line: 5263, type: !55)
!2022 = !DISubprogram(name: "_karatsuba_rec", scope: !4, file: !4, line: 5286, type: !2023, isLocal: true, isDefinition: true, scopeLine: 5288, flags: DIFlagPrototyped, isOptimized: true, function: void (i64*, i64*, i64*, i64*, i64, i64)* @_karatsuba_rec, variables: !2025)
!2023 = !DISubroutineType(types: !2024)
!2024 = !{null, !66, !1595, !1595, !66, !55, !55}
!2025 = !{!2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033}
!2026 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 1, scope: !2022, file: !4, line: 5286, type: !66)
!2027 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !2022, file: !4, line: 5286, type: !1595)
!2028 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !2022, file: !4, line: 5286, type: !1595)
!2029 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w", arg: 4, scope: !2022, file: !4, line: 5287, type: !66)
!2030 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "la", arg: 5, scope: !2022, file: !4, line: 5287, type: !55)
!2031 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lb", arg: 6, scope: !2022, file: !4, line: 5287, type: !55)
!2032 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !2022, file: !4, line: 5289, type: !55)
!2033 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lt", scope: !2022, file: !4, line: 5289, type: !55)
!2034 = !DISubprogram(name: "_mpd_fntmul", scope: !4, file: !4, line: 5483, type: !1987, isLocal: true, isDefinition: true, scopeLine: 5486, flags: DIFlagPrototyped, isOptimized: true, function: i64* (i64*, i64*, i64, i64, i64*)* @_mpd_fntmul, variables: !2035)
!2035 = !{!2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045}
!2036 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "u", arg: 1, scope: !2034, file: !4, line: 5483, type: !1595)
!2037 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v", arg: 2, scope: !2034, file: !4, line: 5483, type: !1595)
!2038 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ulen", arg: 3, scope: !2034, file: !4, line: 5484, type: !55)
!2039 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "vlen", arg: 4, scope: !2034, file: !4, line: 5484, type: !55)
!2040 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rsize", arg: 5, scope: !2034, file: !4, line: 5485, type: !1989)
!2041 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c1", scope: !2034, file: !4, line: 5487, type: !66)
!2042 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c2", scope: !2034, file: !4, line: 5487, type: !66)
!2043 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c3", scope: !2034, file: !4, line: 5487, type: !66)
!2044 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vtmp", scope: !2034, file: !4, line: 5487, type: !66)
!2045 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !2034, file: !4, line: 5488, type: !55)
!2046 = !DISubprogram(name: "_mpd_get_transform_len", scope: !4, file: !4, line: 5395, type: !2047, isLocal: true, isDefinition: true, scopeLine: 5396, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i64)* @_mpd_get_transform_len, variables: !2049)
!2047 = !DISubroutineType(types: !2048)
!2048 = !{!55, !55}
!2049 = !{!2050, !2051, !2052, !2053}
!2050 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rsize", arg: 1, scope: !2046, file: !4, line: 5395, type: !55)
!2051 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "log2rsize", scope: !2046, file: !4, line: 5397, type: !55)
!2052 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !2046, file: !4, line: 5398, type: !55)
!2053 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !2046, file: !4, line: 5398, type: !55)
!2054 = !DISubprogram(name: "_mpd_kmul_fnt", scope: !4, file: !4, line: 5669, type: !1987, isLocal: true, isDefinition: true, scopeLine: 5672, flags: DIFlagPrototyped, isOptimized: true, function: i64* (i64*, i64*, i64, i64, i64*)* @_mpd_kmul_fnt, variables: !2055)
!2055 = !{!2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063}
!2056 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "u", arg: 1, scope: !2054, file: !4, line: 5669, type: !1595)
!2057 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v", arg: 2, scope: !2054, file: !4, line: 5669, type: !1595)
!2058 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ulen", arg: 3, scope: !2054, file: !4, line: 5670, type: !55)
!2059 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "vlen", arg: 4, scope: !2054, file: !4, line: 5670, type: !55)
!2060 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rsize", arg: 5, scope: !2054, file: !4, line: 5671, type: !1989)
!2061 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2054, file: !4, line: 5673, type: !66)
!2062 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "w", scope: !2054, file: !4, line: 5673, type: !66)
!2063 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !2054, file: !4, line: 5674, type: !55)
!2064 = !DISubprogram(name: "_karatsuba_rec_fnt", scope: !4, file: !4, line: 5570, type: !2065, isLocal: true, isDefinition: true, scopeLine: 5572, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64*, i64*, i64*, i64*, i64, i64)* @_karatsuba_rec_fnt, variables: !2067)
!2065 = !DISubroutineType(types: !2066)
!2066 = !{!50, !66, !1595, !1595, !66, !55, !55}
!2067 = !{!2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2081}
!2068 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 1, scope: !2064, file: !4, line: 5570, type: !66)
!2069 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !2064, file: !4, line: 5570, type: !1595)
!2070 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !2064, file: !4, line: 5570, type: !1595)
!2071 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w", arg: 4, scope: !2064, file: !4, line: 5571, type: !66)
!2072 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "la", arg: 5, scope: !2064, file: !4, line: 5571, type: !55)
!2073 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lb", arg: 6, scope: !2064, file: !4, line: 5571, type: !55)
!2074 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !2064, file: !4, line: 5573, type: !55)
!2075 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lt", scope: !2064, file: !4, line: 5573, type: !55)
!2076 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2077, file: !4, line: 5584, type: !66)
!2077 = distinct !DILexicalBlock(scope: !2078, file: !4, line: 5583, column: 14)
!2078 = distinct !DILexicalBlock(scope: !2079, file: !4, line: 5580, column: 13)
!2079 = distinct !DILexicalBlock(scope: !2080, file: !4, line: 5578, column: 36)
!2080 = distinct !DILexicalBlock(scope: !2064, file: !4, line: 5578, column: 9)
!2081 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dummy", scope: !2077, file: !4, line: 5585, type: !55)
!2082 = !DISubprogram(name: "mpd_workcontext", scope: !4, file: !4, line: 717, type: !2083, isLocal: true, isDefinition: true, scopeLine: 718, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_context_t*, %struct.mpd_context_t*)* @mpd_workcontext, variables: !2085)
!2083 = !DISubroutineType(types: !2084)
!2084 = !{null, !254, !92}
!2085 = !{!2086, !2087}
!2086 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "workctx", arg: 1, scope: !2082, file: !4, line: 717, type: !254)
!2087 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 2, scope: !2082, file: !4, line: 717, type: !92)
!2088 = !DISubprogram(name: "_qcheck_pow_one_inf", scope: !4, file: !4, line: 6253, type: !2089, isLocal: true, isDefinition: true, scopeLine: 6255, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, i8, %struct.mpd_context_t*, i32*)* @_qcheck_pow_one_inf, variables: !2091)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{!50, !56, !85, !37, !92, !235}
!2091 = !{!2092, !2093, !2094, !2095, !2096, !2097, !2098}
!2092 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !2088, file: !4, line: 6253, type: !56)
!2093 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 2, scope: !2088, file: !4, line: 6253, type: !85)
!2094 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "resultsign", arg: 3, scope: !2088, file: !4, line: 6253, type: !37)
!2095 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !2088, file: !4, line: 6254, type: !92)
!2096 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !2088, file: !4, line: 6254, type: !235)
!2097 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !2088, file: !4, line: 6256, type: !43)
!2098 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cmp", scope: !2088, file: !4, line: 6257, type: !50)
!2099 = !DISubprogram(name: "_qcheck_pow_one", scope: !4, file: !4, line: 6278, type: !2100, isLocal: true, isDefinition: true, scopeLine: 6281, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, i8, %struct.mpd_context_t*, i32*)* @_qcheck_pow_one, variables: !2102)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!50, !56, !85, !85, !37, !92, !235}
!2102 = !{!2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111}
!2103 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !2099, file: !4, line: 6278, type: !56)
!2104 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 2, scope: !2099, file: !4, line: 6278, type: !85)
!2105 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exp", arg: 3, scope: !2099, file: !4, line: 6278, type: !85)
!2106 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "resultsign", arg: 4, scope: !2099, file: !4, line: 6279, type: !37)
!2107 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 5, scope: !2099, file: !4, line: 6280, type: !92)
!2108 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 6, scope: !2099, file: !4, line: 6280, type: !235)
!2109 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workstatus", scope: !2099, file: !4, line: 6282, type: !47)
!2110 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !2099, file: !4, line: 6283, type: !43)
!2111 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cmp", scope: !2099, file: !4, line: 6284, type: !50)
!2112 = !DISubprogram(name: "_qcheck_pow_bounds", scope: !4, file: !4, line: 6426, type: !2100, isLocal: true, isDefinition: true, scopeLine: 6429, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, i8, %struct.mpd_context_t*, i32*)* @_qcheck_pow_bounds, variables: !2113)
!2113 = !{!2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124}
!2114 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !2112, file: !4, line: 6426, type: !56)
!2115 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 2, scope: !2112, file: !4, line: 6426, type: !85)
!2116 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 3, scope: !2112, file: !4, line: 6426, type: !85)
!2117 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "resultsign", arg: 4, scope: !2112, file: !4, line: 6427, type: !37)
!2118 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 5, scope: !2112, file: !4, line: 6428, type: !92)
!2119 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 6, scope: !2112, file: !4, line: 6428, type: !235)
!2120 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "abs_x", scope: !2112, file: !4, line: 6430, type: !57)
!2121 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ub_omega", scope: !2112, file: !4, line: 6431, type: !43)
!2122 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lb_zeta", scope: !2112, file: !4, line: 6431, type: !43)
!2123 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lb_theta", scope: !2112, file: !4, line: 6431, type: !43)
!2124 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign", scope: !2112, file: !4, line: 6432, type: !37)
!2125 = !DISubprogram(name: "_lower_bound_zeta", scope: !4, file: !4, line: 6388, type: !468, isLocal: true, isDefinition: true, scopeLine: 6389, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*, i32*)* @_lower_bound_zeta, variables: !2126)
!2126 = !{!2127, !2128, !2129, !2130, !2131, !2132, !2133}
!2127 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 1, scope: !2125, file: !4, line: 6388, type: !85)
!2128 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 2, scope: !2125, file: !4, line: 6388, type: !235)
!2129 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxctx", scope: !2125, file: !4, line: 6390, type: !94)
!2130 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "scratch_data", scope: !2125, file: !4, line: 6391, type: !714)
!2131 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "scratch", scope: !2125, file: !4, line: 6391, type: !57)
!2132 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !2125, file: !4, line: 6392, type: !43)
!2133 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "u", scope: !2125, file: !4, line: 6392, type: !43)
!2134 = !DISubprogram(name: "_mpd_qpow_int", scope: !4, file: !4, line: 6195, type: !1650, isLocal: true, isDefinition: true, scopeLine: 6198, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, i8, %struct.mpd_context_t*, i32*)* @_mpd_qpow_int, variables: !2135)
!2135 = !{!2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147}
!2136 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !2134, file: !4, line: 6195, type: !56)
!2137 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 2, scope: !2134, file: !4, line: 6195, type: !85)
!2138 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exp", arg: 3, scope: !2134, file: !4, line: 6195, type: !85)
!2139 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "resultsign", arg: 4, scope: !2134, file: !4, line: 6196, type: !37)
!2140 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 5, scope: !2134, file: !4, line: 6197, type: !92)
!2141 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 6, scope: !2134, file: !4, line: 6197, type: !235)
!2142 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workctx", scope: !2134, file: !4, line: 6199, type: !94)
!2143 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tbase_data", scope: !2134, file: !4, line: 6200, type: !714)
!2144 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tbase", scope: !2134, file: !4, line: 6200, type: !57)
!2145 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "texp_data", scope: !2134, file: !4, line: 6201, type: !714)
!2146 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "texp", scope: !2134, file: !4, line: 6201, type: !57)
!2147 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !2134, file: !4, line: 6202, type: !43)
!2148 = !DISubprogram(name: "_mpd_qpow_mpd", scope: !4, file: !4, line: 6157, type: !2149, isLocal: true, isDefinition: true, scopeLine: 6159, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, i8, %struct.mpd_context_t*, i32*)* @_mpd_qpow_mpd, variables: !2151)
!2149 = !DISubroutineType(types: !2150)
!2150 = !{null, !56, !56, !56, !37, !92, !235}
!2151 = !{!2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161}
!2152 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !2148, file: !4, line: 6157, type: !56)
!2153 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tbase", arg: 2, scope: !2148, file: !4, line: 6157, type: !56)
!2154 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "texp", arg: 3, scope: !2148, file: !4, line: 6157, type: !56)
!2155 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "resultsign", arg: 4, scope: !2148, file: !4, line: 6157, type: !37)
!2156 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 5, scope: !2148, file: !4, line: 6158, type: !92)
!2157 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 6, scope: !2148, file: !4, line: 6158, type: !235)
!2158 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workstatus", scope: !2148, file: !4, line: 6160, type: !47)
!2159 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxctx", scope: !2148, file: !4, line: 6161, type: !94)
!2160 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "two_data", scope: !2148, file: !4, line: 6162, type: !1017)
!2161 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "two", scope: !2148, file: !4, line: 6162, type: !57)
!2162 = !DISubprogram(name: "_mpd_qpow_real", scope: !4, file: !4, line: 6485, type: !641, isLocal: true, isDefinition: true, scopeLine: 6487, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qpow_real, variables: !2163)
!2163 = !{!2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171}
!2164 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !2162, file: !4, line: 6485, type: !56)
!2165 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 2, scope: !2162, file: !4, line: 6485, type: !85)
!2166 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exp", arg: 3, scope: !2162, file: !4, line: 6485, type: !85)
!2167 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !2162, file: !4, line: 6486, type: !92)
!2168 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !2162, file: !4, line: 6486, type: !235)
!2169 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workctx", scope: !2162, file: !4, line: 6488, type: !94)
!2170 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "texp_data", scope: !2162, file: !4, line: 6489, type: !714)
!2171 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "texp", scope: !2162, file: !4, line: 6489, type: !57)
!2172 = !DISubprogram(name: "mpd_qcheck_3nans", scope: !4, file: !4, line: 1585, type: !2173, isLocal: true, isDefinition: true, scopeLine: 1587, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @mpd_qcheck_3nans, variables: !2175)
!2173 = !DISubroutineType(types: !2174)
!2174 = !{!50, !56, !85, !85, !85, !92, !235}
!2175 = !{!2176, !2177, !2178, !2179, !2180, !2181, !2182}
!2176 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !2172, file: !4, line: 1585, type: !56)
!2177 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !2172, file: !4, line: 1585, type: !85)
!2178 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !2172, file: !4, line: 1585, type: !85)
!2179 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 4, scope: !2172, file: !4, line: 1585, type: !85)
!2180 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 5, scope: !2172, file: !4, line: 1586, type: !92)
!2181 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 6, scope: !2172, file: !4, line: 1586, type: !235)
!2182 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "choice", scope: !2183, file: !4, line: 1589, type: !85)
!2183 = distinct !DILexicalBlock(scope: !2184, file: !4, line: 1588, column: 67)
!2184 = distinct !DILexicalBlock(scope: !2172, file: !4, line: 1588, column: 9)
!2185 = !DISubprogram(name: "_mpd_qmul_exact", scope: !4, file: !4, line: 5832, type: !641, isLocal: true, isDefinition: true, scopeLine: 5834, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qmul_exact, variables: !2186)
!2186 = !{!2187, !2188, !2189, !2190, !2191, !2192}
!2187 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !2185, file: !4, line: 5832, type: !56)
!2188 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !2185, file: !4, line: 5832, type: !85)
!2189 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !2185, file: !4, line: 5832, type: !85)
!2190 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !2185, file: !4, line: 5833, type: !92)
!2191 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !2185, file: !4, line: 5833, type: !235)
!2192 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workstatus", scope: !2185, file: !4, line: 5835, type: !47)
!2193 = !DISubprogram(name: "_mpd_qpowmod_uint", scope: !4, file: !4, line: 6635, type: !2194, isLocal: true, isDefinition: true, scopeLine: 6637, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_t*, i32*)* @_mpd_qpowmod_uint, variables: !2196)
!2194 = !DISubroutineType(types: !2195)
!2195 = !{null, !56, !56, !40, !85, !235}
!2196 = !{!2197, !2198, !2199, !2200, !2201, !2202}
!2197 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !2193, file: !4, line: 6635, type: !56)
!2198 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 2, scope: !2193, file: !4, line: 6635, type: !56)
!2199 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exp", arg: 3, scope: !2193, file: !4, line: 6635, type: !40)
!2200 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mod", arg: 4, scope: !2193, file: !4, line: 6636, type: !85)
!2201 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !2193, file: !4, line: 6636, type: !235)
!2202 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxcontext", scope: !2193, file: !4, line: 6638, type: !94)
!2203 = !DISubprogram(name: "_mpd_apply_round_fit", scope: !4, file: !4, line: 1708, type: !2204, isLocal: true, isDefinition: true, scopeLine: 1710, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @_mpd_apply_round_fit, variables: !2206)
!2204 = !DISubroutineType(types: !2205)
!2205 = !{!50, !56, !40, !92, !235}
!2206 = !{!2207, !2208, !2209, !2210, !2211}
!2207 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !2203, file: !4, line: 1708, type: !56)
!2208 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rnd", arg: 2, scope: !2203, file: !4, line: 1708, type: !40)
!2209 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !2203, file: !4, line: 1708, type: !92)
!2210 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !2203, file: !4, line: 1709, type: !235)
!2211 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "carry", scope: !2212, file: !4, line: 1712, type: !40)
!2212 = distinct !DILexicalBlock(scope: !2213, file: !4, line: 1711, column: 39)
!2213 = distinct !DILexicalBlock(scope: !2203, file: !4, line: 1711, column: 9)
!2214 = !DISubprogram(name: "mpd_coeff_isallnine", scope: !4, file: !4, line: 982, type: !138, isLocal: true, isDefinition: true, scopeLine: 983, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.mpd_t*)* @mpd_coeff_isallnine, variables: !2215)
!2215 = !{!2216}
!2216 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dec", arg: 1, scope: !2214, file: !4, line: 982, type: !85)
!2217 = !DISubprogram(name: "mpd_word_isallnine", scope: !4, file: !4, line: 968, type: !78, isLocal: true, isDefinition: true, scopeLine: 969, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64)* @mpd_word_isallnine, variables: !2218)
!2218 = !{!2219, !2220}
!2219 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "word", arg: 1, scope: !2217, file: !4, line: 968, type: !40)
!2220 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !2217, file: !4, line: 970, type: !50)
!2221 = !DISubprogram(name: "_mpd_isallnine", scope: !1592, file: !1592, line: 207, type: !1593, isLocal: true, isDefinition: true, scopeLine: 208, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64*, i64)* @_mpd_isallnine, variables: !2222)
!2222 = !{!2223, !2224}
!2223 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 1, scope: !2221, file: !1592, line: 207, type: !1595)
!2224 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 2, scope: !2221, file: !1592, line: 207, type: !43)
!2225 = !DISubprogram(name: "_mpd_qsub", scope: !4, file: !4, line: 3381, type: !641, isLocal: true, isDefinition: true, scopeLine: 3383, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qsub, variables: !2226)
!2226 = !{!2227, !2228, !2229, !2230, !2231}
!2227 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !2225, file: !4, line: 3381, type: !56)
!2228 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !2225, file: !4, line: 3381, type: !85)
!2229 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !2225, file: !4, line: 3381, type: !85)
!2230 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !2225, file: !4, line: 3382, type: !92)
!2231 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !2225, file: !4, line: 3382, type: !235)
!2232 = !DISubprogram(name: "_mpd_qrescale", scope: !4, file: !4, line: 7031, type: !737, isLocal: true, isDefinition: true, scopeLine: 7033, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, i64, %struct.mpd_context_t*, i32*)* @_mpd_qrescale, variables: !2233)
!2233 = !{!2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241}
!2234 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !2232, file: !4, line: 7031, type: !56)
!2235 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !2232, file: !4, line: 7031, type: !85)
!2236 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "exp", arg: 3, scope: !2232, file: !4, line: 7031, type: !43)
!2237 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !2232, file: !4, line: 7032, type: !92)
!2238 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !2232, file: !4, line: 7032, type: !235)
!2239 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "expdiff", scope: !2232, file: !4, line: 7034, type: !43)
!2240 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !2232, file: !4, line: 7034, type: !43)
!2241 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rnd", scope: !2232, file: !4, line: 7035, type: !40)
!2242 = !DISubprogram(name: "_mpd_qround_to_integral", scope: !4, file: !4, line: 7121, type: !1917, isLocal: true, isDefinition: true, scopeLine: 7123, flags: DIFlagPrototyped, isOptimized: true, function: void (i32, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qround_to_integral, variables: !2243)
!2243 = !{!2244, !2245, !2246, !2247, !2248, !2249}
!2244 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "action", arg: 1, scope: !2242, file: !4, line: 7121, type: !50)
!2245 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 2, scope: !2242, file: !4, line: 7121, type: !56)
!2246 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 3, scope: !2242, file: !4, line: 7121, type: !85)
!2247 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !2242, file: !4, line: 7122, type: !92)
!2248 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !2242, file: !4, line: 7122, type: !235)
!2249 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rnd", scope: !2242, file: !4, line: 7124, type: !40)
!2250 = !DISubprogram(name: "_mpd_qinvroot", scope: !4, file: !4, line: 7562, type: !666, isLocal: true, isDefinition: true, scopeLine: 7564, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qinvroot, variables: !2251)
!2251 = !{!2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280}
!2252 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !2250, file: !4, line: 7562, type: !56)
!2253 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !2250, file: !4, line: 7562, type: !85)
!2254 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 3, scope: !2250, file: !4, line: 7562, type: !92)
!2255 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 4, scope: !2250, file: !4, line: 7563, type: !235)
!2256 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workstatus", scope: !2250, file: !4, line: 7565, type: !47)
!2257 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "varcontext", scope: !2250, file: !4, line: 7566, type: !94)
!2258 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxcontext", scope: !2250, file: !4, line: 7566, type: !94)
!2259 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "z", scope: !2250, file: !4, line: 7567, type: !56)
!2260 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !2250, file: !4, line: 7568, type: !56)
!2261 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vtmp", scope: !2250, file: !4, line: 7569, type: !57)
!2262 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s_data", scope: !2250, file: !4, line: 7570, type: !714)
!2263 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !2250, file: !4, line: 7570, type: !57)
!2264 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_data", scope: !2250, file: !4, line: 7571, type: !714)
!2265 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !2250, file: !4, line: 7571, type: !57)
!2266 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "one_half_data", scope: !2250, file: !4, line: 7572, type: !1017)
!2267 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "one_half", scope: !2250, file: !4, line: 7572, type: !57)
!2268 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "three_data", scope: !2250, file: !4, line: 7573, type: !1017)
!2269 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "three", scope: !2250, file: !4, line: 7573, type: !57)
!2270 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "klist", scope: !2250, file: !4, line: 7574, type: !1022)
!2271 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ideal_exp", scope: !2250, file: !4, line: 7575, type: !43)
!2272 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "shift", scope: !2250, file: !4, line: 7575, type: !43)
!2273 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "adj", scope: !2250, file: !4, line: 7576, type: !43)
!2274 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tz", scope: !2250, file: !4, line: 7576, type: !43)
!2275 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxprec", scope: !2250, file: !4, line: 7577, type: !43)
!2276 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fracdigits", scope: !2250, file: !4, line: 7577, type: !43)
!2277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vhat", scope: !2250, file: !4, line: 7578, type: !40)
!2278 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dummy", scope: !2250, file: !4, line: 7578, type: !40)
!2279 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2250, file: !4, line: 7579, type: !50)
!2280 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !2250, file: !4, line: 7579, type: !50)
!2281 = !DISubprogram(name: "_invroot_init_approx", scope: !4, file: !4, line: 7514, type: !2282, isLocal: true, isDefinition: true, scopeLine: 7515, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, i64)* @_invroot_init_approx, variables: !2284)
!2282 = !DISubroutineType(types: !2283)
!2283 = !{null, !56, !40}
!2284 = !{!2285, !2286, !2287, !2288, !2289, !2290}
!2285 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "z", arg: 1, scope: !2281, file: !4, line: 7514, type: !56)
!2286 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "vhat", arg: 2, scope: !2281, file: !4, line: 7514, type: !40)
!2287 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lo", scope: !2281, file: !4, line: 7516, type: !40)
!2288 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hi", scope: !2281, file: !4, line: 7517, type: !40)
!2289 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !2281, file: !4, line: 7518, type: !40)
!2290 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sq", scope: !2281, file: !4, line: 7518, type: !40)
!2291 = !DISubprogram(name: "invroot_schedule_prec", scope: !4, file: !4, line: 7487, type: !1764, isLocal: true, isDefinition: true, scopeLine: 7489, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64*, i64, i64)* @invroot_schedule_prec, variables: !2292)
!2292 = !{!2293, !2294, !2295, !2296, !2297}
!2293 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "klist", arg: 1, scope: !2291, file: !4, line: 7487, type: !1434)
!2294 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "maxprec", arg: 2, scope: !2291, file: !4, line: 7488, type: !43)
!2295 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "initprec", arg: 3, scope: !2291, file: !4, line: 7488, type: !43)
!2296 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !2291, file: !4, line: 7490, type: !43)
!2297 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2291, file: !4, line: 7491, type: !50)
!2298 = !DISubprogram(name: "_mpd_qadd_exact", scope: !4, file: !4, line: 3406, type: !641, isLocal: true, isDefinition: true, scopeLine: 3408, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.mpd_t*, %struct.mpd_t*, %struct.mpd_t*, %struct.mpd_context_t*, i32*)* @_mpd_qadd_exact, variables: !2299)
!2299 = !{!2300, !2301, !2302, !2303, !2304, !2305}
!2300 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !2298, file: !4, line: 3406, type: !56)
!2301 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !2298, file: !4, line: 3406, type: !85)
!2302 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !2298, file: !4, line: 3406, type: !85)
!2303 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 4, scope: !2298, file: !4, line: 3407, type: !92)
!2304 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 5, scope: !2298, file: !4, line: 3407, type: !235)
!2305 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workstatus", scope: !2298, file: !4, line: 3409, type: !47)
!2306 = !DISubprogram(name: "_baseconv_to_u16", scope: !4, file: !4, line: 7901, type: !2307, isLocal: true, isDefinition: true, scopeLine: 7903, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i16**, i64, i64, i64*, i64)* @_baseconv_to_u16, variables: !2309)
!2307 = !DISubroutineType(types: !2308)
!2308 = !{!53, !1373, !53, !40, !66, !43}
!2309 = !{!2310, !2311, !2312, !2313, !2314, !2315}
!2310 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w", arg: 1, scope: !2306, file: !4, line: 7901, type: !1373)
!2311 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "wlen", arg: 2, scope: !2306, file: !4, line: 7901, type: !53)
!2312 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "wbase", arg: 3, scope: !2306, file: !4, line: 7901, type: !40)
!2313 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "u", arg: 4, scope: !2306, file: !4, line: 7902, type: !66)
!2314 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ulen", arg: 5, scope: !2306, file: !4, line: 7902, type: !43)
!2315 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !2306, file: !4, line: 7904, type: !53)
!2316 = !DISubprogram(name: "mpd_resize_u16", scope: !4, file: !4, line: 7885, type: !2317, isLocal: true, isDefinition: true, scopeLine: 7886, flags: DIFlagPrototyped, isOptimized: true, function: i8 (i16**, i64)* @mpd_resize_u16, variables: !2319)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{!37, !1373, !53}
!2319 = !{!2320, !2321, !2322}
!2320 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w", arg: 1, scope: !2316, file: !4, line: 7885, type: !1373)
!2321 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nmemb", arg: 2, scope: !2316, file: !4, line: 7885, type: !53)
!2322 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !2316, file: !4, line: 7887, type: !37)
!2323 = !DISubprogram(name: "_baseconv_to_smaller", scope: !4, file: !4, line: 7965, type: !2324, isLocal: true, isDefinition: true, scopeLine: 7967, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i32**, i64, i32, i64*, i64, i64)* @_baseconv_to_smaller, variables: !2326)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{!53, !1388, !53, !47, !66, !43, !40}
!2326 = !{!2327, !2328, !2329, !2330, !2331, !2332, !2333}
!2327 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w", arg: 1, scope: !2323, file: !4, line: 7965, type: !1388)
!2328 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "wlen", arg: 2, scope: !2323, file: !4, line: 7965, type: !53)
!2329 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "wbase", arg: 3, scope: !2323, file: !4, line: 7965, type: !47)
!2330 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "u", arg: 4, scope: !2323, file: !4, line: 7966, type: !66)
!2331 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ulen", arg: 5, scope: !2323, file: !4, line: 7966, type: !43)
!2332 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ubase", arg: 6, scope: !2323, file: !4, line: 7966, type: !40)
!2333 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !2323, file: !4, line: 7968, type: !53)
!2334 = !DISubprogram(name: "mpd_resize_u32", scope: !4, file: !4, line: 7893, type: !2335, isLocal: true, isDefinition: true, scopeLine: 7894, flags: DIFlagPrototyped, isOptimized: true, function: i8 (i32**, i64)* @mpd_resize_u32, variables: !2337)
!2335 = !DISubroutineType(types: !2336)
!2336 = !{!37, !1388, !53}
!2337 = !{!2338, !2339, !2340}
!2338 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w", arg: 1, scope: !2334, file: !4, line: 7893, type: !1388)
!2339 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nmemb", arg: 2, scope: !2334, file: !4, line: 7893, type: !53)
!2340 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !2334, file: !4, line: 7895, type: !37)
!2341 = !DISubprogram(name: "_mpd_importsize", scope: !4, file: !4, line: 7867, type: !2342, isLocal: true, isDefinition: true, scopeLine: 7868, flags: DIFlagPrototyped, isOptimized: true, function: i64 (i64, i32)* @_mpd_importsize, variables: !2344)
!2342 = !DISubroutineType(types: !2343)
!2343 = !{!43, !53, !47}
!2344 = !{!2345, !2346, !2347}
!2345 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "srclen", arg: 1, scope: !2341, file: !4, line: 7867, type: !53)
!2346 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 2, scope: !2341, file: !4, line: 7867, type: !47)
!2347 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !2341, file: !4, line: 7869, type: !52)
!2348 = !DISubprogram(name: "_coeff_from_u16", scope: !4, file: !4, line: 7926, type: !2349, isLocal: true, isDefinition: true, scopeLine: 7929, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*, i64, i64*, i64, i32, i32*)* @_coeff_from_u16, variables: !2351)
!2349 = !DISubroutineType(types: !2350)
!2350 = !{!53, !56, !43, !1595, !53, !47, !235}
!2351 = !{!2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359}
!2352 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w", arg: 1, scope: !2348, file: !4, line: 7926, type: !56)
!2353 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "wlen", arg: 2, scope: !2348, file: !4, line: 7926, type: !43)
!2354 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "u", arg: 3, scope: !2348, file: !4, line: 7927, type: !1595)
!2355 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ulen", arg: 4, scope: !2348, file: !4, line: 7927, type: !53)
!2356 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ubase", arg: 5, scope: !2348, file: !4, line: 7927, type: !47)
!2357 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 6, scope: !2348, file: !4, line: 7928, type: !235)
!2358 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !2348, file: !4, line: 7930, type: !43)
!2359 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "carry", scope: !2348, file: !4, line: 7931, type: !40)
!2360 = !DISubprogram(name: "_coeff_from_smaller_base", scope: !4, file: !4, line: 8073, type: !2361, isLocal: true, isDefinition: true, scopeLine: 8076, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct.mpd_t*, i64, i64, i32*, i64, i64, i32*)* @_coeff_from_smaller_base, variables: !2363)
!2361 = !DISubroutineType(types: !2362)
!2362 = !{!53, !56, !43, !40, !1418, !53, !40, !235}
!2363 = !{!2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372}
!2364 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w", arg: 1, scope: !2360, file: !4, line: 8073, type: !56)
!2365 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "wlen", arg: 2, scope: !2360, file: !4, line: 8073, type: !43)
!2366 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "wbase", arg: 3, scope: !2360, file: !4, line: 8073, type: !40)
!2367 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "u", arg: 4, scope: !2360, file: !4, line: 8074, type: !1418)
!2368 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ulen", arg: 5, scope: !2360, file: !4, line: 8074, type: !53)
!2369 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ubase", arg: 6, scope: !2360, file: !4, line: 8074, type: !40)
!2370 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "status", arg: 7, scope: !2360, file: !4, line: 8075, type: !235)
!2371 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !2360, file: !4, line: 8077, type: !43)
!2372 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "carry", scope: !2360, file: !4, line: 8078, type: !40)
!2373 = !{!2374, !2375, !2376, !2377, !2378, !2379, !2381, !2382}
!2374 = !DIGlobalVariable(name: "zero", scope: !0, file: !4, line: 92, type: !86, isLocal: true, isDefinition: true, variable: %struct.mpd_t* @zero)
!2375 = !DIGlobalVariable(name: "data_zero", scope: !0, file: !4, line: 88, type: !1017, isLocal: true, isDefinition: true, variable: [1 x i64]* @data_zero)
!2376 = !DIGlobalVariable(name: "minus_one", scope: !0, file: !4, line: 90, type: !86, isLocal: true, isDefinition: true, variable: %struct.mpd_t* @minus_one)
!2377 = !DIGlobalVariable(name: "data_one", scope: !0, file: !4, line: 87, type: !1017, isLocal: true, isDefinition: true, variable: [1 x i64]* @data_one)
!2378 = !DIGlobalVariable(name: "_mpd_ln10", scope: !0, file: !4, line: 4523, type: !86, isLocal: true, isDefinition: true, variable: %struct.mpd_t* @_mpd_ln10)
!2379 = !DIGlobalVariable(name: "mpd_ln10_data", scope: !0, file: !4, line: 4479, type: !2380, isLocal: true, isDefinition: true, variable: [64 x i64]* @mpd_ln10_data)
!2380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1596, size: 4096, align: 64, elements: !715)
!2381 = !DIGlobalVariable(name: "one", scope: !0, file: !4, line: 89, type: !86, isLocal: true, isDefinition: true, variable: %struct.mpd_t* @one)
!2382 = !DIGlobalVariable(name: "lnapprox", scope: !0, file: !4, line: 4602, type: !2383, isLocal: true, isDefinition: true, variable: [900 x i16]* @lnapprox)
!2383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 14400, align: 16, elements: !2384)
!2384 = !{!2385}
!2385 = !DISubrange(count: 900)
!2386 = !{i32 2, !"Dwarf Version", i32 4}
!2387 = !{i32 2, !"Debug Info Version", i32 3}
!2388 = !{i32 1, !"PIC Level", i32 2}
!2389 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!2390 = !DILocation(line: 122, column: 5, scope: !70)
!2391 = !{!2392, !2392, i64 0}
!2392 = !{!"long", !2393, i64 0}
!2393 = !{!"omnipotent char", !2394, i64 0}
!2394 = !{!"Simple C/C++ TBAA"}
!2395 = !DIExpression()
!2396 = !DILocation(line: 133, column: 28, scope: !77)
!2397 = !DILocation(line: 135, column: 9, scope: !2398)
!2398 = distinct !DILexicalBlock(scope: !77, file: !4, line: 135, column: 9)
!2399 = !DILocation(line: 135, column: 16, scope: !2398)
!2400 = !DILocation(line: 135, column: 14, scope: !2398)
!2401 = !DILocation(line: 135, column: 9, scope: !77)
!2402 = !DILocation(line: 136, column: 13, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2404, file: !4, line: 136, column: 13)
!2404 = distinct !DILexicalBlock(scope: !2398, file: !4, line: 135, column: 30)
!2405 = !DILocation(line: 136, column: 20, scope: !2403)
!2406 = !DILocation(line: 136, column: 18, scope: !2403)
!2407 = !DILocation(line: 136, column: 13, scope: !2404)
!2408 = !DILocation(line: 137, column: 17, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2410, file: !4, line: 137, column: 17)
!2410 = distinct !DILexicalBlock(scope: !2403, file: !4, line: 136, column: 34)
!2411 = !DILocation(line: 137, column: 24, scope: !2409)
!2412 = !DILocation(line: 137, column: 22, scope: !2409)
!2413 = !DILocation(line: 137, column: 17, scope: !2410)
!2414 = !DILocation(line: 138, column: 25, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !2409, file: !4, line: 137, column: 38)
!2416 = !DILocation(line: 138, column: 32, scope: !2415)
!2417 = !DILocation(line: 138, column: 30, scope: !2415)
!2418 = !DILocation(line: 138, column: 24, scope: !2415)
!2419 = !DILocation(line: 138, column: 17, scope: !2415)
!2420 = !DILocation(line: 140, column: 21, scope: !2410)
!2421 = !DILocation(line: 140, column: 28, scope: !2410)
!2422 = !DILocation(line: 140, column: 26, scope: !2410)
!2423 = !DILocation(line: 140, column: 20, scope: !2410)
!2424 = !DILocation(line: 140, column: 13, scope: !2410)
!2425 = !DILocation(line: 142, column: 13, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2404, file: !4, line: 142, column: 13)
!2427 = !DILocation(line: 142, column: 20, scope: !2426)
!2428 = !DILocation(line: 142, column: 18, scope: !2426)
!2429 = !DILocation(line: 142, column: 13, scope: !2404)
!2430 = !DILocation(line: 143, column: 21, scope: !2431)
!2431 = distinct !DILexicalBlock(scope: !2426, file: !4, line: 142, column: 34)
!2432 = !DILocation(line: 143, column: 28, scope: !2431)
!2433 = !DILocation(line: 143, column: 26, scope: !2431)
!2434 = !DILocation(line: 143, column: 20, scope: !2431)
!2435 = !DILocation(line: 143, column: 13, scope: !2431)
!2436 = !DILocation(line: 145, column: 13, scope: !2437)
!2437 = distinct !DILexicalBlock(scope: !2404, file: !4, line: 145, column: 13)
!2438 = !DILocation(line: 145, column: 20, scope: !2437)
!2439 = !DILocation(line: 145, column: 18, scope: !2437)
!2440 = !DILocation(line: 145, column: 13, scope: !2404)
!2441 = !DILocation(line: 146, column: 21, scope: !2442)
!2442 = distinct !DILexicalBlock(scope: !2437, file: !4, line: 145, column: 34)
!2443 = !DILocation(line: 146, column: 28, scope: !2442)
!2444 = !DILocation(line: 146, column: 26, scope: !2442)
!2445 = !DILocation(line: 146, column: 20, scope: !2442)
!2446 = !DILocation(line: 146, column: 13, scope: !2442)
!2447 = !DILocation(line: 148, column: 9, scope: !2404)
!2448 = !DILocation(line: 150, column: 9, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !77, file: !4, line: 150, column: 9)
!2450 = !DILocation(line: 150, column: 16, scope: !2449)
!2451 = !DILocation(line: 150, column: 14, scope: !2449)
!2452 = !DILocation(line: 150, column: 9, scope: !77)
!2453 = !DILocation(line: 151, column: 13, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2455, file: !4, line: 151, column: 13)
!2455 = distinct !DILexicalBlock(scope: !2449, file: !4, line: 150, column: 31)
!2456 = !DILocation(line: 151, column: 20, scope: !2454)
!2457 = !DILocation(line: 151, column: 18, scope: !2454)
!2458 = !DILocation(line: 151, column: 13, scope: !2455)
!2459 = !DILocation(line: 152, column: 21, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2454, file: !4, line: 151, column: 35)
!2461 = !DILocation(line: 152, column: 28, scope: !2460)
!2462 = !DILocation(line: 152, column: 26, scope: !2460)
!2463 = !DILocation(line: 152, column: 20, scope: !2460)
!2464 = !DILocation(line: 152, column: 13, scope: !2460)
!2465 = !DILocation(line: 154, column: 13, scope: !2466)
!2466 = distinct !DILexicalBlock(scope: !2455, file: !4, line: 154, column: 13)
!2467 = !DILocation(line: 154, column: 20, scope: !2466)
!2468 = !DILocation(line: 154, column: 18, scope: !2466)
!2469 = !DILocation(line: 154, column: 13, scope: !2455)
!2470 = !DILocation(line: 155, column: 21, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2466, file: !4, line: 154, column: 35)
!2472 = !DILocation(line: 155, column: 28, scope: !2471)
!2473 = !DILocation(line: 155, column: 26, scope: !2471)
!2474 = !DILocation(line: 155, column: 20, scope: !2471)
!2475 = !DILocation(line: 155, column: 13, scope: !2471)
!2476 = !DILocation(line: 157, column: 9, scope: !2455)
!2477 = !DILocation(line: 159, column: 9, scope: !2478)
!2478 = distinct !DILexicalBlock(scope: !77, file: !4, line: 159, column: 9)
!2479 = !DILocation(line: 159, column: 16, scope: !2478)
!2480 = !DILocation(line: 159, column: 14, scope: !2478)
!2481 = !DILocation(line: 159, column: 9, scope: !77)
!2482 = !DILocation(line: 160, column: 13, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !2484, file: !4, line: 160, column: 13)
!2484 = distinct !DILexicalBlock(scope: !2478, file: !4, line: 159, column: 31)
!2485 = !DILocation(line: 160, column: 20, scope: !2483)
!2486 = !DILocation(line: 160, column: 18, scope: !2483)
!2487 = !DILocation(line: 160, column: 13, scope: !2484)
!2488 = !DILocation(line: 161, column: 21, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2483, file: !4, line: 160, column: 35)
!2490 = !DILocation(line: 161, column: 28, scope: !2489)
!2491 = !DILocation(line: 161, column: 26, scope: !2489)
!2492 = !DILocation(line: 161, column: 20, scope: !2489)
!2493 = !DILocation(line: 161, column: 13, scope: !2489)
!2494 = !DILocation(line: 163, column: 17, scope: !2484)
!2495 = !DILocation(line: 163, column: 24, scope: !2484)
!2496 = !DILocation(line: 163, column: 22, scope: !2484)
!2497 = !DILocation(line: 163, column: 16, scope: !2484)
!2498 = !DILocation(line: 163, column: 9, scope: !2484)
!2499 = !DILocation(line: 166, column: 13, scope: !77)
!2500 = !DILocation(line: 166, column: 20, scope: !77)
!2501 = !DILocation(line: 166, column: 18, scope: !77)
!2502 = !DILocation(line: 166, column: 12, scope: !77)
!2503 = !DILocation(line: 166, column: 5, scope: !77)
!2504 = !DILocation(line: 167, column: 1, scope: !77)
!2505 = !{!2506, !2506, i64 0}
!2506 = !{!"any pointer", !2393, i64 0}
!2507 = !DILocation(line: 192, column: 25, scope: !82)
!2508 = !DILocation(line: 194, column: 13, scope: !82)
!2509 = !DILocation(line: 194, column: 18, scope: !82)
!2510 = !{!2511, !2392, i64 8}
!2511 = !{!"mpd_t", !2393, i64 0, !2392, i64 8, !2392, i64 16, !2392, i64 24, !2392, i64 32, !2506, i64 40}
!2512 = !DILocation(line: 194, column: 24, scope: !82)
!2513 = !DILocation(line: 194, column: 29, scope: !82)
!2514 = !{!2511, !2392, i64 16}
!2515 = !DILocation(line: 194, column: 22, scope: !82)
!2516 = !DILocation(line: 194, column: 37, scope: !82)
!2517 = !DILocation(line: 194, column: 5, scope: !82)
!2518 = !DILocation(line: 199, column: 32, scope: !89)
!2519 = !DILocation(line: 201, column: 12, scope: !89)
!2520 = !DILocation(line: 201, column: 17, scope: !89)
!2521 = !{!2522, !2392, i64 16}
!2522 = !{!"mpd_context_t", !2392, i64 0, !2392, i64 8, !2392, i64 16, !2523, i64 24, !2523, i64 28, !2523, i64 32, !2523, i64 36, !2523, i64 40, !2523, i64 44}
!2523 = !{!"int", !2393, i64 0}
!2524 = !DILocation(line: 201, column: 25, scope: !89)
!2525 = !DILocation(line: 201, column: 30, scope: !89)
!2526 = !{!2522, !2392, i64 0}
!2527 = !DILocation(line: 201, column: 35, scope: !89)
!2528 = !DILocation(line: 201, column: 22, scope: !89)
!2529 = !DILocation(line: 201, column: 5, scope: !89)
!2530 = !DILocation(line: 206, column: 31, scope: !108)
!2531 = !DILocation(line: 208, column: 12, scope: !108)
!2532 = !DILocation(line: 208, column: 17, scope: !108)
!2533 = !{!2522, !2392, i64 8}
!2534 = !DILocation(line: 208, column: 25, scope: !108)
!2535 = !DILocation(line: 208, column: 30, scope: !108)
!2536 = !DILocation(line: 208, column: 35, scope: !108)
!2537 = !DILocation(line: 208, column: 22, scope: !108)
!2538 = !DILocation(line: 208, column: 5, scope: !108)
!2539 = !DILocation(line: 213, column: 25, scope: !111)
!2540 = !DILocation(line: 216, column: 22, scope: !111)
!2541 = !DILocation(line: 216, column: 27, scope: !111)
!2542 = !{!2511, !2392, i64 24}
!2543 = !DILocation(line: 216, column: 30, scope: !111)
!2544 = !DILocation(line: 216, column: 12, scope: !111)
!2545 = !DILocation(line: 216, column: 17, scope: !111)
!2546 = !{!2511, !2506, i64 40}
!2547 = !DILocation(line: 216, column: 5, scope: !111)
!2548 = !DILocation(line: 221, column: 20, scope: !116)
!2549 = !DILocation(line: 223, column: 5, scope: !116)
!2550 = !DILocation(line: 223, column: 9, scope: !116)
!2551 = !DILocation(line: 225, column: 25, scope: !116)
!2552 = !DILocation(line: 225, column: 9, scope: !116)
!2553 = !DILocation(line: 225, column: 7, scope: !116)
!2554 = !{!2523, !2523, i64 0}
!2555 = !DILocation(line: 226, column: 12, scope: !116)
!2556 = !DILocation(line: 226, column: 29, scope: !116)
!2557 = !DILocation(line: 226, column: 30, scope: !116)
!2558 = !DILocation(line: 226, column: 19, scope: !116)
!2559 = !DILocation(line: 226, column: 17, scope: !116)
!2560 = !DILocation(line: 227, column: 1, scope: !116)
!2561 = !DILocation(line: 226, column: 5, scope: !116)
!2562 = !DILocation(line: 231, column: 20, scope: !122)
!2563 = !DILocation(line: 233, column: 12, scope: !122)
!2564 = !DILocation(line: 233, column: 17, scope: !122)
!2565 = !DILocation(line: 233, column: 5, scope: !122)
!2566 = !DILocation(line: 238, column: 32, scope: !125)
!2567 = !DILocation(line: 240, column: 5, scope: !125)
!2568 = !DILocation(line: 240, column: 17, scope: !125)
!2569 = !DILocation(line: 240, column: 20, scope: !125)
!2570 = !DILocation(line: 242, column: 28, scope: !125)
!2571 = !DILocation(line: 242, column: 5, scope: !125)
!2572 = !DILocation(line: 243, column: 13, scope: !125)
!2573 = !DILocation(line: 243, column: 15, scope: !125)
!2574 = !DILocation(line: 243, column: 12, scope: !125)
!2575 = !DILocation(line: 243, column: 23, scope: !2576)
!2576 = !DILexicalBlockFile(scope: !125, file: !4, discriminator: 1)
!2577 = !DILocation(line: 243, column: 27, scope: !2578)
!2578 = !DILexicalBlockFile(scope: !125, file: !4, discriminator: 2)
!2579 = !DILocation(line: 243, column: 28, scope: !125)
!2580 = !DILocation(line: 244, column: 1, scope: !125)
!2581 = !DILocation(line: 243, column: 5, scope: !125)
!2582 = !DILocation(line: 573, column: 29, scope: !1430)
!2583 = !DILocation(line: 573, column: 45, scope: !1430)
!2584 = !DILocation(line: 573, column: 60, scope: !1430)
!2585 = !DILocation(line: 573, column: 75, scope: !1430)
!2586 = !DILocation(line: 575, column: 10, scope: !1430)
!2587 = !DILocation(line: 575, column: 14, scope: !1430)
!2588 = !DILocation(line: 575, column: 12, scope: !1430)
!2589 = !DILocation(line: 575, column: 6, scope: !1430)
!2590 = !DILocation(line: 575, column: 8, scope: !1430)
!2591 = !DILocation(line: 576, column: 10, scope: !1430)
!2592 = !DILocation(line: 576, column: 15, scope: !1430)
!2593 = !DILocation(line: 576, column: 14, scope: !1430)
!2594 = !DILocation(line: 576, column: 19, scope: !1430)
!2595 = !DILocation(line: 576, column: 17, scope: !1430)
!2596 = !DILocation(line: 576, column: 12, scope: !1430)
!2597 = !DILocation(line: 576, column: 6, scope: !1430)
!2598 = !DILocation(line: 576, column: 8, scope: !1430)
!2599 = !DILocation(line: 577, column: 1, scope: !1430)
!2600 = !DILocation(line: 248, column: 28, scope: !132)
!2601 = !DILocation(line: 250, column: 12, scope: !132)
!2602 = !DILocation(line: 250, column: 16, scope: !132)
!2603 = !DILocation(line: 250, column: 11, scope: !132)
!2604 = !DILocation(line: 250, column: 24, scope: !2605)
!2605 = !DILexicalBlockFile(scope: !132, file: !4, discriminator: 1)
!2606 = !DILocation(line: 250, column: 23, scope: !132)
!2607 = !DILocation(line: 250, column: 30, scope: !2608)
!2608 = !DILexicalBlockFile(scope: !132, file: !4, discriminator: 2)
!2609 = !DILocation(line: 250, column: 9, scope: !2610)
!2610 = !DILexicalBlockFile(scope: !2611, file: !4, discriminator: 4)
!2611 = !DILexicalBlockFile(scope: !132, file: !4, discriminator: 3)
!2612 = !DILocation(line: 251, column: 28, scope: !132)
!2613 = !DILocation(line: 251, column: 12, scope: !132)
!2614 = !DILocation(line: 251, column: 5, scope: !132)
!2615 = !DILocation(line: 256, column: 30, scope: !137)
!2616 = !DILocation(line: 258, column: 5, scope: !137)
!2617 = !DILocation(line: 263, column: 27, scope: !142)
!2618 = !DILocation(line: 265, column: 14, scope: !142)
!2619 = !DILocation(line: 265, column: 19, scope: !142)
!2620 = !{!2511, !2393, i64 0}
!2621 = !DILocation(line: 265, column: 25, scope: !142)
!2622 = !DILocation(line: 265, column: 12, scope: !142)
!2623 = !DILocation(line: 265, column: 5, scope: !142)
!2624 = !DILocation(line: 270, column: 29, scope: !145)
!2625 = !DILocation(line: 272, column: 12, scope: !145)
!2626 = !DILocation(line: 272, column: 17, scope: !145)
!2627 = !DILocation(line: 272, column: 23, scope: !145)
!2628 = !DILocation(line: 272, column: 5, scope: !145)
!2629 = !DILocation(line: 277, column: 24, scope: !148)
!2630 = !DILocation(line: 279, column: 12, scope: !148)
!2631 = !DILocation(line: 279, column: 17, scope: !148)
!2632 = !DILocation(line: 279, column: 23, scope: !148)
!2633 = !DILocation(line: 279, column: 5, scope: !148)
!2634 = !DILocation(line: 284, column: 29, scope: !151)
!2635 = !DILocation(line: 286, column: 12, scope: !151)
!2636 = !DILocation(line: 286, column: 17, scope: !151)
!2637 = !DILocation(line: 286, column: 23, scope: !151)
!2638 = !DILocation(line: 286, column: 5, scope: !151)
!2639 = !DILocation(line: 291, column: 29, scope: !154)
!2640 = !DILocation(line: 293, column: 14, scope: !154)
!2641 = !DILocation(line: 293, column: 19, scope: !154)
!2642 = !DILocation(line: 293, column: 25, scope: !154)
!2643 = !DILocation(line: 293, column: 12, scope: !154)
!2644 = !DILocation(line: 293, column: 5, scope: !154)
!2645 = !DILocation(line: 298, column: 25, scope: !157)
!2646 = !DILocation(line: 300, column: 12, scope: !157)
!2647 = !DILocation(line: 300, column: 17, scope: !157)
!2648 = !DILocation(line: 300, column: 23, scope: !157)
!2649 = !DILocation(line: 300, column: 5, scope: !157)
!2650 = !DILocation(line: 305, column: 27, scope: !160)
!2651 = !DILocation(line: 307, column: 12, scope: !160)
!2652 = !DILocation(line: 307, column: 17, scope: !160)
!2653 = !DILocation(line: 307, column: 23, scope: !160)
!2654 = !DILocation(line: 307, column: 5, scope: !160)
!2655 = !DILocation(line: 312, column: 25, scope: !163)
!2656 = !DILocation(line: 314, column: 12, scope: !163)
!2657 = !DILocation(line: 314, column: 17, scope: !163)
!2658 = !DILocation(line: 314, column: 23, scope: !163)
!2659 = !DILocation(line: 314, column: 5, scope: !163)
!2660 = !DILocation(line: 319, column: 28, scope: !166)
!2661 = !DILocation(line: 321, column: 12, scope: !166)
!2662 = !DILocation(line: 321, column: 17, scope: !166)
!2663 = !DILocation(line: 321, column: 23, scope: !166)
!2664 = !DILocation(line: 321, column: 5, scope: !166)
!2665 = !DILocation(line: 326, column: 25, scope: !169)
!2666 = !DILocation(line: 328, column: 27, scope: !169)
!2667 = !DILocation(line: 328, column: 13, scope: !169)
!2668 = !DILocation(line: 328, column: 32, scope: !169)
!2669 = !DILocation(line: 328, column: 46, scope: !2670)
!2670 = !DILexicalBlockFile(scope: !169, file: !4, discriminator: 2)
!2671 = !DILocation(line: 328, column: 35, scope: !169)
!2672 = !DILocation(line: 328, column: 51, scope: !169)
!2673 = !DILocation(line: 328, column: 32, scope: !2674)
!2674 = !DILexicalBlockFile(scope: !169, file: !4, discriminator: 1)
!2675 = !DILocation(line: 328, column: 5, scope: !169)
!2676 = !DILocation(line: 333, column: 30, scope: !172)
!2677 = !DILocation(line: 335, column: 23, scope: !172)
!2678 = !DILocation(line: 335, column: 12, scope: !172)
!2679 = !DILocation(line: 335, column: 28, scope: !172)
!2680 = !DILocation(line: 335, column: 5, scope: !172)
!2681 = !DILocation(line: 340, column: 27, scope: !175)
!2682 = !DILocation(line: 340, column: 53, scope: !175)
!2683 = !DILocation(line: 342, column: 23, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !175, file: !4, line: 342, column: 9)
!2685 = !DILocation(line: 342, column: 9, scope: !2684)
!2686 = !DILocation(line: 342, column: 9, scope: !175)
!2687 = !DILocation(line: 342, column: 29, scope: !2688)
!2688 = !DILexicalBlockFile(scope: !2684, file: !4, discriminator: 1)
!2689 = !DILocation(line: 343, column: 25, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !175, file: !4, line: 343, column: 9)
!2691 = !DILocation(line: 343, column: 9, scope: !2690)
!2692 = !DILocation(line: 343, column: 9, scope: !175)
!2693 = !DILocation(line: 343, column: 31, scope: !2694)
!2694 = !DILexicalBlockFile(scope: !2690, file: !4, discriminator: 1)
!2695 = !DILocation(line: 345, column: 23, scope: !175)
!2696 = !DILocation(line: 345, column: 12, scope: !175)
!2697 = !DILocation(line: 345, column: 31, scope: !175)
!2698 = !DILocation(line: 345, column: 36, scope: !175)
!2699 = !DILocation(line: 345, column: 28, scope: !175)
!2700 = !DILocation(line: 345, column: 5, scope: !175)
!2701 = !DILocation(line: 346, column: 1, scope: !175)
!2702 = !DILocation(line: 350, column: 30, scope: !181)
!2703 = !DILocation(line: 350, column: 56, scope: !181)
!2704 = !DILocation(line: 352, column: 23, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !181, file: !4, line: 352, column: 9)
!2706 = !DILocation(line: 352, column: 9, scope: !2705)
!2707 = !DILocation(line: 352, column: 9, scope: !181)
!2708 = !DILocation(line: 352, column: 29, scope: !2709)
!2709 = !DILexicalBlockFile(scope: !2705, file: !4, discriminator: 1)
!2710 = !DILocation(line: 353, column: 25, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !181, file: !4, line: 353, column: 9)
!2712 = !DILocation(line: 353, column: 9, scope: !2711)
!2713 = !DILocation(line: 353, column: 9, scope: !181)
!2714 = !DILocation(line: 353, column: 31, scope: !2715)
!2715 = !DILexicalBlockFile(scope: !2711, file: !4, discriminator: 1)
!2716 = !DILocation(line: 355, column: 23, scope: !181)
!2717 = !DILocation(line: 355, column: 12, scope: !181)
!2718 = !DILocation(line: 355, column: 30, scope: !181)
!2719 = !DILocation(line: 355, column: 35, scope: !181)
!2720 = !DILocation(line: 355, column: 28, scope: !181)
!2721 = !DILocation(line: 355, column: 5, scope: !181)
!2722 = !DILocation(line: 356, column: 1, scope: !181)
!2723 = !DILocation(line: 360, column: 26, scope: !185)
!2724 = !DILocation(line: 362, column: 12, scope: !185)
!2725 = !DILocation(line: 362, column: 17, scope: !185)
!2726 = !DILocation(line: 362, column: 5, scope: !185)
!2727 = !DILocation(line: 367, column: 29, scope: !188)
!2728 = !DILocation(line: 369, column: 26, scope: !188)
!2729 = !DILocation(line: 369, column: 31, scope: !188)
!2730 = !DILocation(line: 369, column: 12, scope: !188)
!2731 = !DILocation(line: 369, column: 5, scope: !188)
!2732 = !DILocation(line: 374, column: 23, scope: !191)
!2733 = !DILocation(line: 376, column: 12, scope: !191)
!2734 = !DILocation(line: 376, column: 17, scope: !191)
!2735 = !DILocation(line: 376, column: 23, scope: !191)
!2736 = !DILocation(line: 376, column: 5, scope: !191)
!2737 = !DILocation(line: 381, column: 29, scope: !196)
!2738 = !DILocation(line: 383, column: 35, scope: !196)
!2739 = !DILocation(line: 383, column: 20, scope: !196)
!2740 = !DILocation(line: 383, column: 18, scope: !196)
!2741 = !DILocation(line: 383, column: 14, scope: !196)
!2742 = !DILocation(line: 383, column: 5, scope: !196)
!2743 = !DILocation(line: 390, column: 5, scope: !199)
!2744 = !DILocation(line: 395, column: 28, scope: !202)
!2745 = !DILocation(line: 397, column: 14, scope: !202)
!2746 = !DILocation(line: 397, column: 19, scope: !202)
!2747 = !DILocation(line: 397, column: 25, scope: !202)
!2748 = !DILocation(line: 397, column: 12, scope: !202)
!2749 = !DILocation(line: 397, column: 5, scope: !202)
!2750 = !DILocation(line: 402, column: 27, scope: !205)
!2751 = !DILocation(line: 404, column: 12, scope: !205)
!2752 = !DILocation(line: 404, column: 17, scope: !205)
!2753 = !DILocation(line: 404, column: 23, scope: !205)
!2754 = !DILocation(line: 404, column: 5, scope: !205)
!2755 = !DILocation(line: 409, column: 33, scope: !208)
!2756 = !DILocation(line: 411, column: 14, scope: !208)
!2757 = !DILocation(line: 411, column: 19, scope: !208)
!2758 = !DILocation(line: 411, column: 25, scope: !208)
!2759 = !DILocation(line: 411, column: 12, scope: !208)
!2760 = !DILocation(line: 411, column: 5, scope: !208)
!2761 = !DILocation(line: 416, column: 32, scope: !211)
!2762 = !DILocation(line: 418, column: 12, scope: !211)
!2763 = !DILocation(line: 418, column: 17, scope: !211)
!2764 = !DILocation(line: 418, column: 23, scope: !211)
!2765 = !DILocation(line: 418, column: 5, scope: !211)
!2766 = !DILocation(line: 423, column: 32, scope: !214)
!2767 = !DILocation(line: 425, column: 12, scope: !214)
!2768 = !DILocation(line: 425, column: 17, scope: !214)
!2769 = !DILocation(line: 425, column: 23, scope: !214)
!2770 = !DILocation(line: 425, column: 5, scope: !214)
!2771 = !DILocation(line: 430, column: 31, scope: !217)
!2772 = !DILocation(line: 432, column: 12, scope: !217)
!2773 = !DILocation(line: 432, column: 17, scope: !217)
!2774 = !DILocation(line: 432, column: 23, scope: !217)
!2775 = !DILocation(line: 432, column: 5, scope: !217)
!2776 = !DILocation(line: 442, column: 27, scope: !220)
!2777 = !DILocation(line: 442, column: 44, scope: !220)
!2778 = !DILocation(line: 444, column: 5, scope: !220)
!2779 = !DILocation(line: 444, column: 16, scope: !220)
!2780 = !DILocation(line: 446, column: 12, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !220, file: !4, line: 446, column: 5)
!2782 = !DILocation(line: 446, column: 10, scope: !2781)
!2783 = !DILocation(line: 446, column: 17, scope: !2784)
!2784 = !DILexicalBlockFile(scope: !2785, file: !4, discriminator: 2)
!2785 = !DILexicalBlockFile(scope: !2786, file: !4, discriminator: 1)
!2786 = distinct !DILexicalBlock(scope: !2781, file: !4, line: 446, column: 5)
!2787 = !DILocation(line: 446, column: 21, scope: !2786)
!2788 = !DILocation(line: 446, column: 19, scope: !2786)
!2789 = !DILocation(line: 446, column: 5, scope: !2781)
!2790 = !DILocation(line: 447, column: 14, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2786, file: !4, line: 446, column: 31)
!2792 = !DILocation(line: 447, column: 9, scope: !2791)
!2793 = !DILocation(line: 447, column: 17, scope: !2791)
!2794 = !DILocation(line: 448, column: 5, scope: !2791)
!2795 = !DILocation(line: 446, column: 27, scope: !2786)
!2796 = !DILocation(line: 446, column: 5, scope: !2786)
!2797 = !DILocation(line: 449, column: 1, scope: !220)
!2798 = !DILocation(line: 453, column: 16, scope: !227)
!2799 = !DILocation(line: 455, column: 28, scope: !2800)
!2800 = distinct !DILexicalBlock(scope: !227, file: !4, line: 455, column: 9)
!2801 = !DILocation(line: 455, column: 9, scope: !2800)
!2802 = !DILocation(line: 455, column: 9, scope: !227)
!2803 = !DILocation(line: 456, column: 9, scope: !2804)
!2804 = distinct !DILexicalBlock(scope: !2800, file: !4, line: 455, column: 34)
!2805 = !DILocation(line: 456, column: 18, scope: !2804)
!2806 = !DILocation(line: 456, column: 23, scope: !2804)
!2807 = !DILocation(line: 457, column: 5, scope: !2804)
!2808 = !DILocation(line: 458, column: 23, scope: !2809)
!2809 = distinct !DILexicalBlock(scope: !227, file: !4, line: 458, column: 9)
!2810 = !DILocation(line: 458, column: 9, scope: !2809)
!2811 = !DILocation(line: 458, column: 9, scope: !227)
!2812 = !DILocation(line: 459, column: 9, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2809, file: !4, line: 458, column: 29)
!2814 = !DILocation(line: 459, column: 18, scope: !2813)
!2815 = !DILocation(line: 460, column: 5, scope: !2813)
!2816 = !DILocation(line: 461, column: 1, scope: !227)
!2817 = !DILocation(line: 488, column: 20, scope: !232)
!2818 = !DILocation(line: 488, column: 40, scope: !232)
!2819 = !DILocation(line: 488, column: 58, scope: !232)
!2820 = !DILocation(line: 494, column: 15, scope: !232)
!2821 = !DILocation(line: 494, column: 25, scope: !232)
!2822 = !DILocation(line: 494, column: 22, scope: !232)
!2823 = !DILocation(line: 494, column: 14, scope: !232)
!2824 = !DILocation(line: 494, column: 41, scope: !2825)
!2825 = !DILexicalBlockFile(scope: !232, file: !4, discriminator: 1)
!2826 = !DILocation(line: 494, column: 56, scope: !2827)
!2827 = !DILexicalBlockFile(scope: !232, file: !4, discriminator: 2)
!2828 = !DILocation(line: 494, column: 12, scope: !2829)
!2829 = !DILexicalBlockFile(scope: !2830, file: !4, discriminator: 4)
!2830 = !DILexicalBlockFile(scope: !232, file: !4, discriminator: 3)
!2831 = !DILocation(line: 495, column: 9, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !232, file: !4, line: 495, column: 9)
!2833 = !DILocation(line: 495, column: 19, scope: !2832)
!2834 = !DILocation(line: 495, column: 27, scope: !2832)
!2835 = !{!2511, !2392, i64 32}
!2836 = !DILocation(line: 495, column: 16, scope: !2832)
!2837 = !DILocation(line: 495, column: 9, scope: !232)
!2838 = !DILocation(line: 496, column: 9, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2832, file: !4, line: 495, column: 34)
!2840 = !DILocation(line: 498, column: 27, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !232, file: !4, line: 498, column: 9)
!2842 = !DILocation(line: 498, column: 9, scope: !2841)
!2843 = !DILocation(line: 498, column: 9, scope: !232)
!2844 = !DILocation(line: 499, column: 13, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2846, file: !4, line: 499, column: 13)
!2846 = distinct !DILexicalBlock(scope: !2841, file: !4, line: 498, column: 36)
!2847 = !DILocation(line: 499, column: 22, scope: !2845)
!2848 = !DILocation(line: 499, column: 30, scope: !2845)
!2849 = !DILocation(line: 499, column: 20, scope: !2845)
!2850 = !DILocation(line: 499, column: 13, scope: !2846)
!2851 = !DILocation(line: 500, column: 38, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2845, file: !4, line: 499, column: 37)
!2853 = !DILocation(line: 500, column: 46, scope: !2852)
!2854 = !DILocation(line: 500, column: 54, scope: !2852)
!2855 = !DILocation(line: 500, column: 20, scope: !2852)
!2856 = !DILocation(line: 500, column: 13, scope: !2852)
!2857 = !DILocation(line: 502, column: 9, scope: !2846)
!2858 = !DILocation(line: 505, column: 28, scope: !232)
!2859 = !DILocation(line: 505, column: 36, scope: !232)
!2860 = !DILocation(line: 505, column: 44, scope: !232)
!2861 = !DILocation(line: 505, column: 12, scope: !232)
!2862 = !DILocation(line: 505, column: 5, scope: !232)
!2863 = !DILocation(line: 506, column: 1, scope: !232)
!2864 = !DILocation(line: 511, column: 25, scope: !240)
!2865 = !DILocation(line: 511, column: 45, scope: !240)
!2866 = !DILocation(line: 511, column: 63, scope: !240)
!2867 = !DILocation(line: 517, column: 15, scope: !240)
!2868 = !DILocation(line: 517, column: 25, scope: !240)
!2869 = !DILocation(line: 517, column: 22, scope: !240)
!2870 = !DILocation(line: 517, column: 14, scope: !240)
!2871 = !DILocation(line: 517, column: 41, scope: !2872)
!2872 = !DILexicalBlockFile(scope: !240, file: !4, discriminator: 1)
!2873 = !DILocation(line: 517, column: 56, scope: !2874)
!2874 = !DILexicalBlockFile(scope: !240, file: !4, discriminator: 2)
!2875 = !DILocation(line: 517, column: 12, scope: !2876)
!2876 = !DILexicalBlockFile(scope: !2877, file: !4, discriminator: 4)
!2877 = !DILexicalBlockFile(scope: !240, file: !4, discriminator: 3)
!2878 = !DILocation(line: 518, column: 9, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !240, file: !4, line: 518, column: 9)
!2880 = !DILocation(line: 518, column: 19, scope: !2879)
!2881 = !DILocation(line: 518, column: 27, scope: !2879)
!2882 = !DILocation(line: 518, column: 16, scope: !2879)
!2883 = !DILocation(line: 518, column: 9, scope: !240)
!2884 = !DILocation(line: 519, column: 31, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2886, file: !4, line: 519, column: 13)
!2886 = distinct !DILexicalBlock(scope: !2879, file: !4, line: 518, column: 34)
!2887 = !DILocation(line: 519, column: 13, scope: !2885)
!2888 = !DILocation(line: 519, column: 13, scope: !2886)
!2889 = !DILocation(line: 520, column: 17, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2891, file: !4, line: 520, column: 17)
!2891 = distinct !DILexicalBlock(scope: !2885, file: !4, line: 519, column: 40)
!2892 = !DILocation(line: 520, column: 26, scope: !2890)
!2893 = !DILocation(line: 520, column: 34, scope: !2890)
!2894 = !DILocation(line: 520, column: 24, scope: !2890)
!2895 = !DILocation(line: 520, column: 17, scope: !2891)
!2896 = !DILocation(line: 521, column: 47, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2890, file: !4, line: 520, column: 41)
!2898 = !DILocation(line: 521, column: 55, scope: !2897)
!2899 = !DILocation(line: 521, column: 63, scope: !2897)
!2900 = !DILocation(line: 521, column: 24, scope: !2897)
!2901 = !DILocation(line: 521, column: 17, scope: !2897)
!2902 = !DILocation(line: 523, column: 9, scope: !2891)
!2903 = !DILocation(line: 524, column: 35, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2885, file: !4, line: 524, column: 18)
!2905 = !DILocation(line: 524, column: 43, scope: !2904)
!2906 = !DILocation(line: 524, column: 51, scope: !2904)
!2907 = !DILocation(line: 524, column: 19, scope: !2904)
!2908 = !DILocation(line: 524, column: 18, scope: !2885)
!2909 = !DILocation(line: 525, column: 13, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2904, file: !4, line: 524, column: 60)
!2911 = !DILocation(line: 527, column: 5, scope: !2886)
!2912 = !DILocation(line: 529, column: 19, scope: !240)
!2913 = !DILocation(line: 529, column: 27, scope: !240)
!2914 = !DILocation(line: 529, column: 33, scope: !240)
!2915 = !DILocation(line: 529, column: 5, scope: !240)
!2916 = !DILocation(line: 530, column: 5, scope: !240)
!2917 = !DILocation(line: 531, column: 1, scope: !240)
!2918 = !DILocation(line: 540, column: 21, scope: !245)
!2919 = !DILocation(line: 545, column: 28, scope: !250)
!2920 = !DILocation(line: 545, column: 10, scope: !250)
!2921 = !DILocation(line: 545, column: 36, scope: !250)
!2922 = !DILocation(line: 545, column: 39, scope: !2923)
!2923 = !DILexicalBlockFile(scope: !250, file: !4, discriminator: 1)
!2924 = !DILocation(line: 545, column: 47, scope: !250)
!2925 = !DILocation(line: 545, column: 55, scope: !250)
!2926 = !DILocation(line: 545, column: 53, scope: !250)
!2927 = !DILocation(line: 545, column: 9, scope: !245)
!2928 = !DILocation(line: 546, column: 9, scope: !249)
!2929 = !DILocation(line: 546, column: 17, scope: !249)
!2930 = !{!2393, !2393, i64 0}
!2931 = !DILocation(line: 547, column: 36, scope: !249)
!2932 = !DILocation(line: 547, column: 44, scope: !249)
!2933 = !DILocation(line: 547, column: 50, scope: !249)
!2934 = !DILocation(line: 547, column: 24, scope: !249)
!2935 = !DILocation(line: 547, column: 9, scope: !249)
!2936 = !DILocation(line: 547, column: 17, scope: !249)
!2937 = !DILocation(line: 547, column: 22, scope: !249)
!2938 = !DILocation(line: 549, column: 14, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !249, file: !4, line: 549, column: 13)
!2940 = !DILocation(line: 549, column: 13, scope: !249)
!2941 = !DILocation(line: 550, column: 29, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2939, file: !4, line: 549, column: 19)
!2943 = !DILocation(line: 550, column: 13, scope: !2942)
!2944 = !DILocation(line: 550, column: 21, scope: !2942)
!2945 = !DILocation(line: 550, column: 27, scope: !2942)
!2946 = !DILocation(line: 551, column: 9, scope: !2942)
!2947 = !DILocation(line: 552, column: 5, scope: !250)
!2948 = !DILocation(line: 552, column: 5, scope: !249)
!2949 = !DILocation(line: 553, column: 1, scope: !245)
!2950 = !DILocation(line: 556, column: 19, scope: !251)
!2951 = !DILocation(line: 556, column: 39, scope: !251)
!2952 = !DILocation(line: 556, column: 62, scope: !251)
!2953 = !DILocation(line: 558, column: 5, scope: !251)
!2954 = !DILocation(line: 558, column: 14, scope: !251)
!2955 = !DILocation(line: 559, column: 22, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !251, file: !4, line: 559, column: 9)
!2957 = !DILocation(line: 559, column: 30, scope: !2956)
!2958 = !DILocation(line: 559, column: 10, scope: !2956)
!2959 = !DILocation(line: 559, column: 9, scope: !251)
!2960 = !DILocation(line: 560, column: 29, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2956, file: !4, line: 559, column: 48)
!2962 = !DILocation(line: 560, column: 34, scope: !2961)
!2963 = !DILocation(line: 560, column: 9, scope: !2961)
!2964 = !DILocation(line: 561, column: 9, scope: !2961)
!2965 = !DILocation(line: 563, column: 5, scope: !251)
!2966 = !DILocation(line: 564, column: 1, scope: !251)
!2967 = !DILocation(line: 567, column: 24, scope: !260)
!2968 = !DILocation(line: 567, column: 44, scope: !260)
!2969 = !DILocation(line: 567, column: 67, scope: !260)
!2970 = !DILocation(line: 569, column: 5, scope: !260)
!2971 = !DILocation(line: 569, column: 14, scope: !260)
!2972 = !DILocation(line: 570, column: 27, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !260, file: !4, line: 570, column: 9)
!2974 = !DILocation(line: 570, column: 35, scope: !2973)
!2975 = !DILocation(line: 570, column: 10, scope: !2973)
!2976 = !DILocation(line: 570, column: 9, scope: !260)
!2977 = !DILocation(line: 571, column: 29, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2973, file: !4, line: 570, column: 53)
!2979 = !DILocation(line: 571, column: 34, scope: !2978)
!2980 = !DILocation(line: 571, column: 9, scope: !2978)
!2981 = !DILocation(line: 572, column: 9, scope: !2978)
!2982 = !DILocation(line: 574, column: 5, scope: !260)
!2983 = !DILocation(line: 575, column: 1, scope: !260)
!2984 = !DILocation(line: 584, column: 22, scope: !266)
!2985 = !DILocation(line: 586, column: 5, scope: !266)
!2986 = !DILocation(line: 586, column: 17, scope: !266)
!2987 = !DILocation(line: 586, column: 54, scope: !266)
!2988 = !DILocation(line: 586, column: 43, scope: !266)
!2989 = !DILocation(line: 586, column: 27, scope: !266)
!2990 = !DILocation(line: 587, column: 22, scope: !266)
!2991 = !DILocation(line: 587, column: 33, scope: !266)
!2992 = !DILocation(line: 587, column: 41, scope: !266)
!2993 = !DILocation(line: 587, column: 44, scope: !266)
!2994 = !DILocation(line: 587, column: 48, scope: !266)
!2995 = !DILocation(line: 587, column: 30, scope: !266)
!2996 = !DILocation(line: 587, column: 5, scope: !266)
!2997 = !DILocation(line: 587, column: 13, scope: !266)
!2998 = !DILocation(line: 587, column: 20, scope: !266)
!2999 = !DILocation(line: 588, column: 1, scope: !266)
!3000 = !DILocation(line: 592, column: 21, scope: !270)
!3001 = !DILocation(line: 592, column: 37, scope: !270)
!3002 = !DILocation(line: 594, column: 5, scope: !270)
!3003 = !DILocation(line: 594, column: 13, scope: !270)
!3004 = !DILocation(line: 594, column: 19, scope: !270)
!3005 = !DILocation(line: 595, column: 22, scope: !270)
!3006 = !DILocation(line: 595, column: 5, scope: !270)
!3007 = !DILocation(line: 595, column: 13, scope: !270)
!3008 = !DILocation(line: 595, column: 19, scope: !270)
!3009 = !DILocation(line: 596, column: 1, scope: !270)
!3010 = !DILocation(line: 600, column: 20, scope: !276)
!3011 = !DILocation(line: 600, column: 41, scope: !276)
!3012 = !DILocation(line: 602, column: 5, scope: !276)
!3013 = !DILocation(line: 602, column: 13, scope: !276)
!3014 = !DILocation(line: 602, column: 20, scope: !276)
!3015 = !DILocation(line: 602, column: 23, scope: !276)
!3016 = !DILocation(line: 602, column: 28, scope: !276)
!3017 = !DILocation(line: 604, column: 5, scope: !276)
!3018 = !DILocation(line: 604, column: 13, scope: !276)
!3019 = !DILocation(line: 604, column: 19, scope: !276)
!3020 = !DILocation(line: 605, column: 22, scope: !276)
!3021 = !DILocation(line: 605, column: 5, scope: !276)
!3022 = !DILocation(line: 605, column: 13, scope: !276)
!3023 = !DILocation(line: 605, column: 19, scope: !276)
!3024 = !DILocation(line: 606, column: 1, scope: !276)
!3025 = !DILocation(line: 610, column: 25, scope: !283)
!3026 = !DILocation(line: 612, column: 5, scope: !283)
!3027 = !DILocation(line: 612, column: 13, scope: !283)
!3028 = !DILocation(line: 612, column: 19, scope: !283)
!3029 = !DILocation(line: 613, column: 5, scope: !283)
!3030 = !DILocation(line: 613, column: 13, scope: !283)
!3031 = !DILocation(line: 613, column: 19, scope: !283)
!3032 = !DILocation(line: 614, column: 1, scope: !283)
!3033 = !DILocation(line: 618, column: 21, scope: !286)
!3034 = !DILocation(line: 620, column: 5, scope: !286)
!3035 = !DILocation(line: 620, column: 13, scope: !286)
!3036 = !DILocation(line: 620, column: 19, scope: !286)
!3037 = !DILocation(line: 621, column: 5, scope: !286)
!3038 = !DILocation(line: 621, column: 13, scope: !286)
!3039 = !DILocation(line: 621, column: 19, scope: !286)
!3040 = !DILocation(line: 622, column: 1, scope: !286)
!3041 = !DILocation(line: 626, column: 21, scope: !289)
!3042 = !DILocation(line: 628, column: 5, scope: !289)
!3043 = !DILocation(line: 628, column: 13, scope: !289)
!3044 = !DILocation(line: 628, column: 19, scope: !289)
!3045 = !DILocation(line: 629, column: 5, scope: !289)
!3046 = !DILocation(line: 629, column: 13, scope: !289)
!3047 = !DILocation(line: 629, column: 19, scope: !289)
!3048 = !DILocation(line: 630, column: 1, scope: !289)
!3049 = !DILocation(line: 634, column: 25, scope: !292)
!3050 = !DILocation(line: 636, column: 5, scope: !292)
!3051 = !DILocation(line: 636, column: 13, scope: !292)
!3052 = !DILocation(line: 636, column: 19, scope: !292)
!3053 = !DILocation(line: 637, column: 1, scope: !292)
!3054 = !DILocation(line: 641, column: 25, scope: !295)
!3055 = !DILocation(line: 643, column: 5, scope: !295)
!3056 = !DILocation(line: 643, column: 13, scope: !295)
!3057 = !DILocation(line: 643, column: 19, scope: !295)
!3058 = !DILocation(line: 644, column: 1, scope: !295)
!3059 = !DILocation(line: 648, column: 24, scope: !298)
!3060 = !DILocation(line: 650, column: 5, scope: !298)
!3061 = !DILocation(line: 650, column: 13, scope: !298)
!3062 = !DILocation(line: 650, column: 19, scope: !298)
!3063 = !DILocation(line: 651, column: 1, scope: !298)
!3064 = !DILocation(line: 655, column: 23, scope: !301)
!3065 = !DILocation(line: 657, column: 5, scope: !301)
!3066 = !DILocation(line: 657, column: 13, scope: !301)
!3067 = !DILocation(line: 657, column: 19, scope: !301)
!3068 = !DILocation(line: 658, column: 1, scope: !301)
!3069 = !DILocation(line: 662, column: 29, scope: !304)
!3070 = !DILocation(line: 664, column: 5, scope: !304)
!3071 = !DILocation(line: 664, column: 13, scope: !304)
!3072 = !DILocation(line: 664, column: 19, scope: !304)
!3073 = !DILocation(line: 665, column: 1, scope: !304)
!3074 = !DILocation(line: 669, column: 28, scope: !307)
!3075 = !DILocation(line: 671, column: 5, scope: !307)
!3076 = !DILocation(line: 671, column: 13, scope: !307)
!3077 = !DILocation(line: 671, column: 19, scope: !307)
!3078 = !DILocation(line: 672, column: 5, scope: !307)
!3079 = !DILocation(line: 672, column: 13, scope: !307)
!3080 = !DILocation(line: 672, column: 19, scope: !307)
!3081 = !DILocation(line: 673, column: 1, scope: !307)
!3082 = !DILocation(line: 677, column: 28, scope: !310)
!3083 = !DILocation(line: 679, column: 5, scope: !310)
!3084 = !DILocation(line: 679, column: 13, scope: !310)
!3085 = !DILocation(line: 679, column: 19, scope: !310)
!3086 = !DILocation(line: 680, column: 5, scope: !310)
!3087 = !DILocation(line: 680, column: 13, scope: !310)
!3088 = !DILocation(line: 680, column: 19, scope: !310)
!3089 = !DILocation(line: 681, column: 1, scope: !310)
!3090 = !DILocation(line: 685, column: 27, scope: !313)
!3091 = !DILocation(line: 687, column: 5, scope: !313)
!3092 = !DILocation(line: 687, column: 13, scope: !313)
!3093 = !DILocation(line: 687, column: 19, scope: !313)
!3094 = !DILocation(line: 688, column: 5, scope: !313)
!3095 = !DILocation(line: 688, column: 13, scope: !313)
!3096 = !DILocation(line: 688, column: 19, scope: !313)
!3097 = !DILocation(line: 689, column: 1, scope: !313)
!3098 = !DILocation(line: 693, column: 24, scope: !316)
!3099 = !DILocation(line: 695, column: 5, scope: !316)
!3100 = !DILocation(line: 695, column: 13, scope: !316)
!3101 = !DILocation(line: 695, column: 19, scope: !316)
!3102 = !DILocation(line: 696, column: 1, scope: !316)
!3103 = !DILocation(line: 700, column: 22, scope: !319)
!3104 = !DILocation(line: 700, column: 38, scope: !319)
!3105 = !DILocation(line: 702, column: 5, scope: !319)
!3106 = !DILocation(line: 702, column: 13, scope: !319)
!3107 = !DILocation(line: 702, column: 19, scope: !319)
!3108 = !DILocation(line: 703, column: 22, scope: !319)
!3109 = !DILocation(line: 703, column: 5, scope: !319)
!3110 = !DILocation(line: 703, column: 13, scope: !319)
!3111 = !DILocation(line: 703, column: 19, scope: !319)
!3112 = !DILocation(line: 704, column: 1, scope: !319)
!3113 = !DILocation(line: 708, column: 23, scope: !323)
!3114 = !DILocation(line: 708, column: 44, scope: !323)
!3115 = !DILocation(line: 710, column: 5, scope: !323)
!3116 = !DILocation(line: 710, column: 13, scope: !323)
!3117 = !DILocation(line: 710, column: 22, scope: !323)
!3118 = !DILocation(line: 710, column: 25, scope: !323)
!3119 = !DILocation(line: 711, column: 5, scope: !323)
!3120 = !DILocation(line: 711, column: 13, scope: !323)
!3121 = !DILocation(line: 711, column: 19, scope: !323)
!3122 = !DILocation(line: 712, column: 23, scope: !323)
!3123 = !DILocation(line: 712, column: 30, scope: !323)
!3124 = !DILocation(line: 712, column: 5, scope: !323)
!3125 = !DILocation(line: 712, column: 13, scope: !323)
!3126 = !DILocation(line: 712, column: 19, scope: !323)
!3127 = !DILocation(line: 713, column: 1, scope: !323)
!3128 = !DILocation(line: 744, column: 22, scope: !328)
!3129 = !DILocation(line: 746, column: 18, scope: !328)
!3130 = !DILocation(line: 746, column: 5, scope: !328)
!3131 = !DILocation(line: 747, column: 5, scope: !328)
!3132 = !DILocation(line: 747, column: 13, scope: !328)
!3133 = !DILocation(line: 747, column: 20, scope: !328)
!3134 = !DILocation(line: 748, column: 5, scope: !328)
!3135 = !DILocation(line: 748, column: 13, scope: !328)
!3136 = !DILocation(line: 748, column: 17, scope: !328)
!3137 = !DILocation(line: 749, column: 5, scope: !328)
!3138 = !DILocation(line: 749, column: 13, scope: !328)
!3139 = !DILocation(line: 749, column: 21, scope: !328)
!3140 = !DILocation(line: 750, column: 1, scope: !328)
!3141 = !DILocation(line: 754, column: 22, scope: !331)
!3142 = !DILocation(line: 754, column: 51, scope: !331)
!3143 = !DILocation(line: 754, column: 66, scope: !331)
!3144 = !DILocation(line: 756, column: 5, scope: !331)
!3145 = !DILocation(line: 756, column: 17, scope: !331)
!3146 = !DILocation(line: 756, column: 22, scope: !331)
!3147 = !DILocation(line: 758, column: 30, scope: !331)
!3148 = !DILocation(line: 758, column: 35, scope: !331)
!3149 = !DILocation(line: 758, column: 5, scope: !331)
!3150 = !DILocation(line: 759, column: 12, scope: !331)
!3151 = !DILocation(line: 759, column: 14, scope: !331)
!3152 = !DILocation(line: 759, column: 11, scope: !331)
!3153 = !DILocation(line: 759, column: 22, scope: !3154)
!3154 = !DILexicalBlockFile(scope: !331, file: !4, discriminator: 1)
!3155 = !DILocation(line: 759, column: 28, scope: !3156)
!3156 = !DILexicalBlockFile(scope: !331, file: !4, discriminator: 2)
!3157 = !DILocation(line: 759, column: 31, scope: !331)
!3158 = !DILocation(line: 759, column: 9, scope: !3159)
!3159 = !DILexicalBlockFile(scope: !3160, file: !4, discriminator: 4)
!3160 = !DILexicalBlockFile(scope: !331, file: !4, discriminator: 3)
!3161 = !DILocation(line: 761, column: 22, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !331, file: !4, line: 761, column: 9)
!3163 = !DILocation(line: 761, column: 30, scope: !3162)
!3164 = !DILocation(line: 761, column: 35, scope: !3162)
!3165 = !DILocation(line: 761, column: 10, scope: !3162)
!3166 = !DILocation(line: 761, column: 9, scope: !331)
!3167 = !DILocation(line: 762, column: 9, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3162, file: !4, line: 761, column: 44)
!3169 = !DILocation(line: 765, column: 19, scope: !331)
!3170 = !DILocation(line: 765, column: 5, scope: !331)
!3171 = !DILocation(line: 765, column: 13, scope: !331)
!3172 = !DILocation(line: 765, column: 17, scope: !331)
!3173 = !DILocation(line: 766, column: 22, scope: !331)
!3174 = !DILocation(line: 766, column: 27, scope: !331)
!3175 = !DILocation(line: 766, column: 5, scope: !331)
!3176 = !DILocation(line: 766, column: 13, scope: !331)
!3177 = !DILocation(line: 766, column: 20, scope: !331)
!3178 = !DILocation(line: 768, column: 5, scope: !331)
!3179 = !DILocation(line: 769, column: 9, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !331, file: !4, line: 769, column: 9)
!3181 = !DILocation(line: 769, column: 11, scope: !3180)
!3182 = !DILocation(line: 769, column: 9, scope: !331)
!3183 = !DILocation(line: 770, column: 41, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3180, file: !4, line: 769, column: 16)
!3185 = !DILocation(line: 770, column: 31, scope: !3184)
!3186 = !DILocation(line: 770, column: 43, scope: !3184)
!3187 = !DILocation(line: 770, column: 25, scope: !3184)
!3188 = !DILocation(line: 770, column: 9, scope: !3184)
!3189 = !DILocation(line: 770, column: 17, scope: !3184)
!3190 = !DILocation(line: 770, column: 29, scope: !3184)
!3191 = !DILocation(line: 771, column: 5, scope: !3184)
!3192 = !DILocation(line: 772, column: 5, scope: !331)
!3193 = !DILocation(line: 772, column: 12, scope: !3194)
!3194 = !DILexicalBlockFile(scope: !3195, file: !4, discriminator: 2)
!3195 = !DILexicalBlockFile(scope: !3196, file: !4, discriminator: 1)
!3196 = distinct !DILexicalBlock(scope: !3197, file: !4, line: 772, column: 5)
!3197 = distinct !DILexicalBlock(scope: !331, file: !4, line: 772, column: 5)
!3198 = !DILocation(line: 772, column: 16, scope: !3196)
!3199 = !DILocation(line: 772, column: 5, scope: !3197)
!3200 = !DILocation(line: 773, column: 22, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3196, file: !4, line: 772, column: 29)
!3202 = !DILocation(line: 773, column: 9, scope: !3201)
!3203 = !DILocation(line: 773, column: 17, scope: !3201)
!3204 = !DILocation(line: 773, column: 27, scope: !3201)
!3205 = !DILocation(line: 774, column: 5, scope: !3201)
!3206 = !DILocation(line: 772, column: 22, scope: !3196)
!3207 = !DILocation(line: 772, column: 5, scope: !3196)
!3208 = !DILocation(line: 775, column: 1, scope: !331)
!3209 = !DILocation(line: 775, column: 1, scope: !3154)
!3210 = !DILocation(line: 895, column: 30, scope: !340)
!3211 = !DILocation(line: 897, column: 5, scope: !340)
!3212 = !DILocation(line: 897, column: 16, scope: !340)
!3213 = !DILocation(line: 898, column: 5, scope: !340)
!3214 = !DILocation(line: 898, column: 17, scope: !340)
!3215 = !DILocation(line: 898, column: 20, scope: !340)
!3216 = !DILocation(line: 900, column: 11, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !340, file: !4, line: 900, column: 5)
!3218 = !DILocation(line: 900, column: 10, scope: !3217)
!3219 = !DILocation(line: 900, column: 15, scope: !3220)
!3220 = !DILexicalBlockFile(scope: !3221, file: !4, discriminator: 2)
!3221 = !DILexicalBlockFile(scope: !3222, file: !4, discriminator: 1)
!3222 = distinct !DILexicalBlock(scope: !3217, file: !4, line: 900, column: 5)
!3223 = !DILocation(line: 900, column: 19, scope: !3222)
!3224 = !DILocation(line: 900, column: 24, scope: !3222)
!3225 = !DILocation(line: 900, column: 17, scope: !3222)
!3226 = !DILocation(line: 900, column: 5, scope: !3217)
!3227 = !DILocation(line: 901, column: 23, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3229, file: !4, line: 901, column: 13)
!3229 = distinct !DILexicalBlock(scope: !3222, file: !4, line: 900, column: 34)
!3230 = !DILocation(line: 901, column: 13, scope: !3228)
!3231 = !DILocation(line: 901, column: 18, scope: !3228)
!3232 = !DILocation(line: 901, column: 26, scope: !3228)
!3233 = !DILocation(line: 901, column: 13, scope: !3229)
!3234 = !DILocation(line: 902, column: 30, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3228, file: !4, line: 901, column: 32)
!3236 = !DILocation(line: 902, column: 20, scope: !3235)
!3237 = !DILocation(line: 902, column: 25, scope: !3235)
!3238 = !DILocation(line: 902, column: 18, scope: !3235)
!3239 = !DILocation(line: 903, column: 18, scope: !3235)
!3240 = !DILocation(line: 903, column: 20, scope: !3235)
!3241 = !DILocation(line: 903, column: 16, scope: !3235)
!3242 = !DILocation(line: 904, column: 13, scope: !3235)
!3243 = !DILocation(line: 904, column: 20, scope: !3244)
!3244 = !DILexicalBlockFile(scope: !3245, file: !4, discriminator: 2)
!3245 = !DILexicalBlockFile(scope: !3235, file: !4, discriminator: 1)
!3246 = !DILocation(line: 904, column: 25, scope: !3235)
!3247 = !DILocation(line: 904, column: 30, scope: !3235)
!3248 = !DILocation(line: 905, column: 22, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3235, file: !4, line: 904, column: 36)
!3250 = !DILocation(line: 906, column: 19, scope: !3249)
!3251 = !DILocation(line: 908, column: 13, scope: !3235)
!3252 = !DILocation(line: 910, column: 5, scope: !3229)
!3253 = !DILocation(line: 900, column: 29, scope: !3222)
!3254 = !DILocation(line: 900, column: 5, scope: !3222)
!3255 = !DILocation(line: 912, column: 12, scope: !340)
!3256 = !DILocation(line: 913, column: 1, scope: !340)
!3257 = !DILocation(line: 912, column: 5, scope: !340)
!3258 = !DILocation(line: 931, column: 28, scope: !346)
!3259 = !DILocation(line: 933, column: 23, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !346, file: !4, line: 933, column: 9)
!3261 = !DILocation(line: 933, column: 9, scope: !3260)
!3262 = !DILocation(line: 933, column: 9, scope: !346)
!3263 = !DILocation(line: 934, column: 9, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3260, file: !4, line: 933, column: 29)
!3265 = !DILocation(line: 936, column: 23, scope: !346)
!3266 = !DILocation(line: 936, column: 12, scope: !346)
!3267 = !DILocation(line: 936, column: 5, scope: !346)
!3268 = !DILocation(line: 937, column: 1, scope: !346)
!3269 = !DILocation(line: 917, column: 25, scope: !1440)
!3270 = !DILocation(line: 919, column: 5, scope: !1440)
!3271 = !DILocation(line: 919, column: 17, scope: !1440)
!3272 = !DILocation(line: 921, column: 25, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !1440, file: !4, line: 921, column: 9)
!3274 = !DILocation(line: 921, column: 9, scope: !3273)
!3275 = !DILocation(line: 921, column: 9, scope: !1440)
!3276 = !DILocation(line: 922, column: 9, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3273, file: !4, line: 921, column: 31)
!3278 = !DILocation(line: 925, column: 26, scope: !1440)
!3279 = !DILocation(line: 925, column: 10, scope: !1440)
!3280 = !DILocation(line: 925, column: 8, scope: !1440)
!3281 = !DILocation(line: 926, column: 13, scope: !1440)
!3282 = !DILocation(line: 926, column: 18, scope: !1440)
!3283 = !DILocation(line: 926, column: 24, scope: !1440)
!3284 = !DILocation(line: 926, column: 22, scope: !1440)
!3285 = !DILocation(line: 926, column: 27, scope: !1440)
!3286 = !DILocation(line: 926, column: 5, scope: !1440)
!3287 = !DILocation(line: 927, column: 1, scope: !1440)
!3288 = !DILocation(line: 995, column: 24, scope: !349)
!3289 = !DILocation(line: 997, column: 5, scope: !349)
!3290 = !DILocation(line: 997, column: 16, scope: !349)
!3291 = !DILocation(line: 997, column: 19, scope: !349)
!3292 = !DILocation(line: 999, column: 25, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !349, file: !4, line: 999, column: 9)
!3294 = !DILocation(line: 999, column: 9, scope: !3293)
!3295 = !DILocation(line: 999, column: 9, scope: !349)
!3296 = !DILocation(line: 999, column: 31, scope: !3297)
!3297 = !DILexicalBlockFile(scope: !3293, file: !4, discriminator: 1)
!3298 = !DILocation(line: 999, column: 31, scope: !3293)
!3299 = !DILocation(line: 1000, column: 9, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !349, file: !4, line: 1000, column: 9)
!3301 = !DILocation(line: 1000, column: 14, scope: !3300)
!3302 = !DILocation(line: 1000, column: 18, scope: !3300)
!3303 = !DILocation(line: 1000, column: 9, scope: !349)
!3304 = !DILocation(line: 1001, column: 32, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3300, file: !4, line: 1000, column: 23)
!3306 = !DILocation(line: 1001, column: 37, scope: !3305)
!3307 = !DILocation(line: 1001, column: 31, scope: !3305)
!3308 = !DILocation(line: 1001, column: 9, scope: !3305)
!3309 = !DILocation(line: 1002, column: 23, scope: !3305)
!3310 = !DILocation(line: 1002, column: 13, scope: !3305)
!3311 = !DILocation(line: 1002, column: 18, scope: !3305)
!3312 = !DILocation(line: 1002, column: 38, scope: !3305)
!3313 = !DILocation(line: 1002, column: 28, scope: !3305)
!3314 = !DILocation(line: 1002, column: 26, scope: !3305)
!3315 = !DILocation(line: 1002, column: 11, scope: !3305)
!3316 = !DILocation(line: 1003, column: 30, scope: !3305)
!3317 = !DILocation(line: 1003, column: 16, scope: !3305)
!3318 = !DILocation(line: 1003, column: 9, scope: !3305)
!3319 = !DILocation(line: 1005, column: 12, scope: !349)
!3320 = !DILocation(line: 1005, column: 17, scope: !349)
!3321 = !DILocation(line: 1005, column: 21, scope: !349)
!3322 = !DILocation(line: 1005, column: 26, scope: !349)
!3323 = !DILocation(line: 1005, column: 43, scope: !3324)
!3324 = !DILexicalBlockFile(scope: !349, file: !4, discriminator: 1)
!3325 = !DILocation(line: 1005, column: 48, scope: !349)
!3326 = !DILocation(line: 1005, column: 43, scope: !349)
!3327 = !DILocation(line: 1005, column: 29, scope: !349)
!3328 = !DILocation(line: 1005, column: 26, scope: !3329)
!3329 = !DILexicalBlockFile(scope: !349, file: !4, discriminator: 2)
!3330 = !DILocation(line: 1005, column: 5, scope: !349)
!3331 = !DILocation(line: 1006, column: 1, scope: !349)
!3332 = !DILocation(line: 566, column: 27, scope: !1444)
!3333 = !DILocation(line: 566, column: 42, scope: !1444)
!3334 = !DILocation(line: 566, column: 56, scope: !1444)
!3335 = !DILocation(line: 566, column: 70, scope: !1444)
!3336 = !DILocation(line: 568, column: 10, scope: !1444)
!3337 = !DILocation(line: 568, column: 14, scope: !1444)
!3338 = !DILocation(line: 568, column: 12, scope: !1444)
!3339 = !DILocation(line: 568, column: 6, scope: !1444)
!3340 = !DILocation(line: 568, column: 8, scope: !1444)
!3341 = !DILocation(line: 569, column: 10, scope: !1444)
!3342 = !DILocation(line: 569, column: 15, scope: !1444)
!3343 = !DILocation(line: 569, column: 14, scope: !1444)
!3344 = !DILocation(line: 569, column: 19, scope: !1444)
!3345 = !DILocation(line: 569, column: 17, scope: !1444)
!3346 = !DILocation(line: 569, column: 12, scope: !1444)
!3347 = !DILocation(line: 569, column: 6, scope: !1444)
!3348 = !DILocation(line: 569, column: 8, scope: !1444)
!3349 = !DILocation(line: 570, column: 1, scope: !1444)
!3350 = !DILocation(line: 1010, column: 25, scope: !354)
!3351 = !DILocation(line: 1012, column: 23, scope: !354)
!3352 = !DILocation(line: 1012, column: 13, scope: !354)
!3353 = !DILocation(line: 1012, column: 12, scope: !354)
!3354 = !DILocation(line: 1012, column: 5, scope: !354)
!3355 = !DILocation(line: 1044, column: 23, scope: !357)
!3356 = !DILocation(line: 1044, column: 39, scope: !357)
!3357 = !DILocation(line: 1044, column: 53, scope: !357)
!3358 = !DILocation(line: 1046, column: 18, scope: !357)
!3359 = !DILocation(line: 1046, column: 5, scope: !357)
!3360 = !DILocation(line: 1047, column: 5, scope: !357)
!3361 = !DILocation(line: 1047, column: 13, scope: !357)
!3362 = !DILocation(line: 1047, column: 19, scope: !357)
!3363 = !DILocation(line: 1048, column: 23, scope: !357)
!3364 = !DILocation(line: 1048, column: 28, scope: !357)
!3365 = !DILocation(line: 1048, column: 27, scope: !357)
!3366 = !DILocation(line: 1048, column: 5, scope: !357)
!3367 = !DILocation(line: 1048, column: 13, scope: !357)
!3368 = !DILocation(line: 1048, column: 19, scope: !357)
!3369 = !DILocation(line: 1049, column: 36, scope: !357)
!3370 = !DILocation(line: 1049, column: 44, scope: !357)
!3371 = !DILocation(line: 1049, column: 48, scope: !357)
!3372 = !DILocation(line: 1049, column: 19, scope: !357)
!3373 = !DILocation(line: 1049, column: 27, scope: !357)
!3374 = !DILocation(line: 1049, column: 34, scope: !357)
!3375 = !DILocation(line: 1049, column: 5, scope: !357)
!3376 = !DILocation(line: 1049, column: 13, scope: !357)
!3377 = !DILocation(line: 1049, column: 17, scope: !357)
!3378 = !DILocation(line: 1050, column: 1, scope: !357)
!3379 = !DILocation(line: 1054, column: 21, scope: !364)
!3380 = !DILocation(line: 1054, column: 38, scope: !364)
!3381 = !DILocation(line: 1054, column: 55, scope: !364)
!3382 = !DILocation(line: 1056, column: 18, scope: !364)
!3383 = !DILocation(line: 1056, column: 5, scope: !364)
!3384 = !DILocation(line: 1057, column: 18, scope: !364)
!3385 = !DILocation(line: 1057, column: 5, scope: !364)
!3386 = !DILocation(line: 1058, column: 22, scope: !364)
!3387 = !DILocation(line: 1058, column: 5, scope: !364)
!3388 = !DILocation(line: 1059, column: 36, scope: !364)
!3389 = !DILocation(line: 1059, column: 44, scope: !364)
!3390 = !DILocation(line: 1059, column: 48, scope: !364)
!3391 = !DILocation(line: 1059, column: 19, scope: !364)
!3392 = !DILocation(line: 1059, column: 27, scope: !364)
!3393 = !DILocation(line: 1059, column: 34, scope: !364)
!3394 = !DILocation(line: 1059, column: 5, scope: !364)
!3395 = !DILocation(line: 1059, column: 13, scope: !364)
!3396 = !DILocation(line: 1059, column: 17, scope: !364)
!3397 = !DILocation(line: 1060, column: 16, scope: !364)
!3398 = !DILocation(line: 1060, column: 6, scope: !364)
!3399 = !DILocation(line: 1060, column: 13, scope: !364)
!3400 = !DILocation(line: 1061, column: 1, scope: !364)
!3401 = !DILocation(line: 1065, column: 24, scope: !371)
!3402 = !DILocation(line: 1065, column: 44, scope: !371)
!3403 = !DILocation(line: 1065, column: 68, scope: !371)
!3404 = !DILocation(line: 1066, column: 27, scope: !371)
!3405 = !DILocation(line: 1068, column: 5, scope: !371)
!3406 = !DILocation(line: 1068, column: 16, scope: !371)
!3407 = !DILocation(line: 1069, column: 5, scope: !371)
!3408 = !DILocation(line: 1069, column: 13, scope: !371)
!3409 = !DILocation(line: 1071, column: 9, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !371, file: !4, line: 1071, column: 9)
!3411 = !DILocation(line: 1071, column: 11, scope: !3410)
!3412 = !DILocation(line: 1071, column: 9, scope: !371)
!3413 = !DILocation(line: 1072, column: 13, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !4, line: 1072, column: 13)
!3415 = distinct !DILexicalBlock(scope: !3410, file: !4, line: 1071, column: 16)
!3416 = !DILocation(line: 1072, column: 15, scope: !3414)
!3417 = !DILocation(line: 1072, column: 13, scope: !3415)
!3418 = !DILocation(line: 1073, column: 15, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3414, file: !4, line: 1072, column: 46)
!3420 = !DILocation(line: 1075, column: 9, scope: !3419)
!3421 = !DILocation(line: 1077, column: 18, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3414, file: !4, line: 1076, column: 14)
!3423 = !DILocation(line: 1077, column: 17, scope: !3422)
!3424 = !DILocation(line: 1077, column: 15, scope: !3422)
!3425 = !DILocation(line: 1079, column: 14, scope: !3415)
!3426 = !DILocation(line: 1080, column: 5, scope: !3415)
!3427 = !DILocation(line: 1082, column: 13, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3410, file: !4, line: 1081, column: 10)
!3429 = !DILocation(line: 1082, column: 11, scope: !3428)
!3430 = !DILocation(line: 1084, column: 17, scope: !371)
!3431 = !DILocation(line: 1084, column: 25, scope: !371)
!3432 = !DILocation(line: 1084, column: 31, scope: !371)
!3433 = !DILocation(line: 1084, column: 5, scope: !371)
!3434 = !DILocation(line: 1085, column: 19, scope: !371)
!3435 = !DILocation(line: 1085, column: 27, scope: !371)
!3436 = !DILocation(line: 1085, column: 32, scope: !371)
!3437 = !DILocation(line: 1085, column: 5, scope: !371)
!3438 = !DILocation(line: 1086, column: 1, scope: !371)
!3439 = !DILocation(line: 1021, column: 20, scope: !1452)
!3440 = !DILocation(line: 1021, column: 36, scope: !1452)
!3441 = !DILocation(line: 1021, column: 53, scope: !1452)
!3442 = !DILocation(line: 1021, column: 68, scope: !1452)
!3443 = !DILocation(line: 1023, column: 19, scope: !1452)
!3444 = !DILocation(line: 1023, column: 27, scope: !1452)
!3445 = !DILocation(line: 1023, column: 5, scope: !1452)
!3446 = !DILocation(line: 1024, column: 19, scope: !1452)
!3447 = !DILocation(line: 1024, column: 5, scope: !1452)
!3448 = !DILocation(line: 1024, column: 13, scope: !1452)
!3449 = !DILocation(line: 1024, column: 17, scope: !1452)
!3450 = !DILocation(line: 1025, column: 20, scope: !1452)
!3451 = !DILocation(line: 1025, column: 28, scope: !1452)
!3452 = !DILocation(line: 1025, column: 38, scope: !1452)
!3453 = !DILocation(line: 1025, column: 46, scope: !1452)
!3454 = !DILocation(line: 1025, column: 55, scope: !1452)
!3455 = !DILocation(line: 1025, column: 5, scope: !1452)
!3456 = !DILocation(line: 1026, column: 20, scope: !1452)
!3457 = !DILocation(line: 1026, column: 28, scope: !1452)
!3458 = !DILocation(line: 1026, column: 36, scope: !1452)
!3459 = !DILocation(line: 1026, column: 19, scope: !1452)
!3460 = !DILocation(line: 1026, column: 5, scope: !1452)
!3461 = !DILocation(line: 1026, column: 13, scope: !1452)
!3462 = !DILocation(line: 1026, column: 17, scope: !1452)
!3463 = !DILocation(line: 1027, column: 19, scope: !1452)
!3464 = !DILocation(line: 1027, column: 5, scope: !1452)
!3465 = !DILocation(line: 1028, column: 1, scope: !1452)
!3466 = !DILocation(line: 1880, column: 22, scope: !521)
!3467 = !DILocation(line: 1880, column: 51, scope: !521)
!3468 = !DILocation(line: 1880, column: 66, scope: !521)
!3469 = !DILocation(line: 1882, column: 23, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !521, file: !4, line: 1882, column: 9)
!3471 = !DILocation(line: 1882, column: 9, scope: !3470)
!3472 = !DILocation(line: 1882, column: 9, scope: !521)
!3473 = !DILocation(line: 1883, column: 23, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !4, line: 1883, column: 13)
!3475 = distinct !DILexicalBlock(scope: !3470, file: !4, line: 1882, column: 32)
!3476 = !DILocation(line: 1883, column: 13, scope: !3474)
!3477 = !DILocation(line: 1883, column: 13, scope: !3475)
!3478 = !DILocation(line: 1884, column: 26, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3474, file: !4, line: 1883, column: 32)
!3480 = !DILocation(line: 1884, column: 34, scope: !3479)
!3481 = !DILocation(line: 1884, column: 13, scope: !3479)
!3482 = !DILocation(line: 1885, column: 9, scope: !3479)
!3483 = !DILocation(line: 1886, column: 9, scope: !3475)
!3484 = !DILocation(line: 1889, column: 20, scope: !521)
!3485 = !DILocation(line: 1889, column: 28, scope: !521)
!3486 = !DILocation(line: 1889, column: 33, scope: !521)
!3487 = !DILocation(line: 1889, column: 5, scope: !521)
!3488 = !DILocation(line: 1890, column: 22, scope: !521)
!3489 = !DILocation(line: 1890, column: 30, scope: !521)
!3490 = !DILocation(line: 1890, column: 35, scope: !521)
!3491 = !DILocation(line: 1890, column: 5, scope: !521)
!3492 = !DILocation(line: 1891, column: 1, scope: !521)
!3493 = !DILocation(line: 1891, column: 1, scope: !3494)
!3494 = !DILexicalBlockFile(scope: !521, file: !4, discriminator: 1)
!3495 = !DILocation(line: 1090, column: 23, scope: !381)
!3496 = !DILocation(line: 1090, column: 42, scope: !381)
!3497 = !DILocation(line: 1090, column: 66, scope: !381)
!3498 = !DILocation(line: 1091, column: 26, scope: !381)
!3499 = !DILocation(line: 1093, column: 17, scope: !381)
!3500 = !DILocation(line: 1093, column: 39, scope: !381)
!3501 = !DILocation(line: 1093, column: 5, scope: !381)
!3502 = !DILocation(line: 1094, column: 19, scope: !381)
!3503 = !DILocation(line: 1094, column: 27, scope: !381)
!3504 = !DILocation(line: 1094, column: 32, scope: !381)
!3505 = !DILocation(line: 1094, column: 5, scope: !381)
!3506 = !DILocation(line: 1095, column: 1, scope: !381)
!3507 = !DILocation(line: 1099, column: 22, scope: !389)
!3508 = !DILocation(line: 1099, column: 38, scope: !389)
!3509 = !DILocation(line: 1099, column: 62, scope: !389)
!3510 = !DILocation(line: 1100, column: 25, scope: !389)
!3511 = !DILocation(line: 1102, column: 21, scope: !389)
!3512 = !DILocation(line: 1102, column: 29, scope: !389)
!3513 = !DILocation(line: 1102, column: 32, scope: !389)
!3514 = !DILocation(line: 1102, column: 37, scope: !389)
!3515 = !DILocation(line: 1102, column: 5, scope: !389)
!3516 = !DILocation(line: 1103, column: 1, scope: !389)
!3517 = !DILocation(line: 1107, column: 22, scope: !397)
!3518 = !DILocation(line: 1107, column: 39, scope: !397)
!3519 = !DILocation(line: 1107, column: 63, scope: !397)
!3520 = !DILocation(line: 1108, column: 25, scope: !397)
!3521 = !DILocation(line: 1110, column: 20, scope: !397)
!3522 = !DILocation(line: 1110, column: 28, scope: !397)
!3523 = !DILocation(line: 1110, column: 31, scope: !397)
!3524 = !DILocation(line: 1110, column: 36, scope: !397)
!3525 = !DILocation(line: 1110, column: 5, scope: !397)
!3526 = !DILocation(line: 1111, column: 1, scope: !397)
!3527 = !DILocation(line: 1116, column: 22, scope: !405)
!3528 = !DILocation(line: 1116, column: 38, scope: !405)
!3529 = !DILocation(line: 1116, column: 62, scope: !405)
!3530 = !DILocation(line: 1117, column: 25, scope: !405)
!3531 = !DILocation(line: 1119, column: 21, scope: !405)
!3532 = !DILocation(line: 1119, column: 29, scope: !405)
!3533 = !DILocation(line: 1119, column: 32, scope: !405)
!3534 = !DILocation(line: 1119, column: 37, scope: !405)
!3535 = !DILocation(line: 1119, column: 5, scope: !405)
!3536 = !DILocation(line: 1120, column: 1, scope: !405)
!3537 = !DILocation(line: 1124, column: 22, scope: !413)
!3538 = !DILocation(line: 1124, column: 39, scope: !413)
!3539 = !DILocation(line: 1124, column: 63, scope: !413)
!3540 = !DILocation(line: 1125, column: 25, scope: !413)
!3541 = !DILocation(line: 1127, column: 20, scope: !413)
!3542 = !DILocation(line: 1127, column: 28, scope: !413)
!3543 = !DILocation(line: 1127, column: 31, scope: !413)
!3544 = !DILocation(line: 1127, column: 36, scope: !413)
!3545 = !DILocation(line: 1127, column: 5, scope: !413)
!3546 = !DILocation(line: 1128, column: 1, scope: !413)
!3547 = !DILocation(line: 1133, column: 23, scope: !421)
!3548 = !DILocation(line: 1133, column: 43, scope: !421)
!3549 = !DILocation(line: 1133, column: 67, scope: !421)
!3550 = !DILocation(line: 1134, column: 26, scope: !421)
!3551 = !DILocation(line: 1136, column: 18, scope: !421)
!3552 = !DILocation(line: 1136, column: 5, scope: !421)
!3553 = !DILocation(line: 1137, column: 21, scope: !421)
!3554 = !DILocation(line: 1137, column: 29, scope: !421)
!3555 = !DILocation(line: 1137, column: 32, scope: !421)
!3556 = !DILocation(line: 1137, column: 37, scope: !421)
!3557 = !DILocation(line: 1137, column: 5, scope: !421)
!3558 = !DILocation(line: 1138, column: 1, scope: !421)
!3559 = !DILocation(line: 1142, column: 22, scope: !427)
!3560 = !DILocation(line: 1142, column: 41, scope: !427)
!3561 = !DILocation(line: 1142, column: 65, scope: !427)
!3562 = !DILocation(line: 1143, column: 25, scope: !427)
!3563 = !DILocation(line: 1145, column: 16, scope: !427)
!3564 = !DILocation(line: 1145, column: 38, scope: !427)
!3565 = !DILocation(line: 1145, column: 5, scope: !427)
!3566 = !DILocation(line: 1146, column: 19, scope: !427)
!3567 = !DILocation(line: 1146, column: 27, scope: !427)
!3568 = !DILocation(line: 1146, column: 32, scope: !427)
!3569 = !DILocation(line: 1146, column: 5, scope: !427)
!3570 = !DILocation(line: 1147, column: 1, scope: !427)
!3571 = !DILocation(line: 1032, column: 19, scope: !1460)
!3572 = !DILocation(line: 1032, column: 35, scope: !1460)
!3573 = !DILocation(line: 1032, column: 52, scope: !1460)
!3574 = !DILocation(line: 1032, column: 67, scope: !1460)
!3575 = !DILocation(line: 1034, column: 18, scope: !1460)
!3576 = !DILocation(line: 1034, column: 5, scope: !1460)
!3577 = !DILocation(line: 1035, column: 19, scope: !1460)
!3578 = !DILocation(line: 1035, column: 27, scope: !1460)
!3579 = !DILocation(line: 1035, column: 5, scope: !1460)
!3580 = !DILocation(line: 1036, column: 19, scope: !1460)
!3581 = !DILocation(line: 1036, column: 5, scope: !1460)
!3582 = !DILocation(line: 1036, column: 13, scope: !1460)
!3583 = !DILocation(line: 1036, column: 17, scope: !1460)
!3584 = !DILocation(line: 1037, column: 20, scope: !1460)
!3585 = !DILocation(line: 1037, column: 28, scope: !1460)
!3586 = !DILocation(line: 1037, column: 38, scope: !1460)
!3587 = !DILocation(line: 1037, column: 46, scope: !1460)
!3588 = !DILocation(line: 1037, column: 55, scope: !1460)
!3589 = !DILocation(line: 1037, column: 5, scope: !1460)
!3590 = !DILocation(line: 1038, column: 20, scope: !1460)
!3591 = !DILocation(line: 1038, column: 28, scope: !1460)
!3592 = !DILocation(line: 1038, column: 36, scope: !1460)
!3593 = !DILocation(line: 1038, column: 19, scope: !1460)
!3594 = !DILocation(line: 1038, column: 5, scope: !1460)
!3595 = !DILocation(line: 1038, column: 13, scope: !1460)
!3596 = !DILocation(line: 1038, column: 17, scope: !1460)
!3597 = !DILocation(line: 1039, column: 19, scope: !1460)
!3598 = !DILocation(line: 1039, column: 5, scope: !1460)
!3599 = !DILocation(line: 1040, column: 1, scope: !1460)
!3600 = !DILocation(line: 1151, column: 21, scope: !433)
!3601 = !DILocation(line: 1151, column: 37, scope: !433)
!3602 = !DILocation(line: 1151, column: 61, scope: !433)
!3603 = !DILocation(line: 1152, column: 24, scope: !433)
!3604 = !DILocation(line: 1154, column: 20, scope: !433)
!3605 = !DILocation(line: 1154, column: 28, scope: !433)
!3606 = !DILocation(line: 1154, column: 31, scope: !433)
!3607 = !DILocation(line: 1154, column: 36, scope: !433)
!3608 = !DILocation(line: 1154, column: 5, scope: !433)
!3609 = !DILocation(line: 1155, column: 1, scope: !433)
!3610 = !DILocation(line: 1159, column: 21, scope: !439)
!3611 = !DILocation(line: 1159, column: 38, scope: !439)
!3612 = !DILocation(line: 1159, column: 62, scope: !439)
!3613 = !DILocation(line: 1160, column: 24, scope: !439)
!3614 = !DILocation(line: 1162, column: 19, scope: !439)
!3615 = !DILocation(line: 1162, column: 27, scope: !439)
!3616 = !DILocation(line: 1162, column: 30, scope: !439)
!3617 = !DILocation(line: 1162, column: 35, scope: !439)
!3618 = !DILocation(line: 1162, column: 5, scope: !439)
!3619 = !DILocation(line: 1163, column: 1, scope: !439)
!3620 = !DILocation(line: 1230, column: 21, scope: !445)
!3621 = !DILocation(line: 1230, column: 37, scope: !445)
!3622 = !DILocation(line: 1230, column: 61, scope: !445)
!3623 = !DILocation(line: 1231, column: 24, scope: !445)
!3624 = !DILocation(line: 1234, column: 20, scope: !445)
!3625 = !DILocation(line: 1234, column: 28, scope: !445)
!3626 = !DILocation(line: 1234, column: 31, scope: !445)
!3627 = !DILocation(line: 1234, column: 36, scope: !445)
!3628 = !DILocation(line: 1234, column: 5, scope: !445)
!3629 = !DILocation(line: 1238, column: 1, scope: !445)
!3630 = !DILocation(line: 1242, column: 21, scope: !451)
!3631 = !DILocation(line: 1242, column: 38, scope: !451)
!3632 = !DILocation(line: 1242, column: 62, scope: !451)
!3633 = !DILocation(line: 1243, column: 24, scope: !451)
!3634 = !DILocation(line: 1246, column: 19, scope: !451)
!3635 = !DILocation(line: 1246, column: 27, scope: !451)
!3636 = !DILocation(line: 1246, column: 30, scope: !451)
!3637 = !DILocation(line: 1246, column: 35, scope: !451)
!3638 = !DILocation(line: 1246, column: 5, scope: !451)
!3639 = !DILocation(line: 1250, column: 1, scope: !451)
!3640 = !DILocation(line: 1325, column: 28, scope: !457)
!3641 = !DILocation(line: 1325, column: 41, scope: !457)
!3642 = !DILocation(line: 1327, column: 30, scope: !457)
!3643 = !DILocation(line: 1327, column: 33, scope: !457)
!3644 = !DILocation(line: 1327, column: 12, scope: !457)
!3645 = !DILocation(line: 1327, column: 5, scope: !457)
!3646 = !DILocation(line: 1262, column: 20, scope: !1466)
!3647 = !DILocation(line: 1262, column: 43, scope: !1466)
!3648 = !DILocation(line: 1262, column: 56, scope: !1466)
!3649 = !DILocation(line: 1264, column: 5, scope: !1466)
!3650 = !DILocation(line: 1264, column: 11, scope: !1466)
!3651 = !DILocation(line: 1265, column: 5, scope: !1466)
!3652 = !DILocation(line: 1265, column: 16, scope: !1466)
!3653 = !DILocation(line: 1266, column: 5, scope: !1466)
!3654 = !DILocation(line: 1266, column: 16, scope: !1466)
!3655 = !DILocation(line: 1266, column: 20, scope: !1466)
!3656 = !DILocation(line: 1268, column: 23, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !1466, file: !4, line: 1268, column: 9)
!3658 = !DILocation(line: 1268, column: 9, scope: !3657)
!3659 = !DILocation(line: 1268, column: 9, scope: !1466)
!3660 = !DILocation(line: 1269, column: 10, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3657, file: !4, line: 1268, column: 27)
!3662 = !DILocation(line: 1269, column: 17, scope: !3661)
!3663 = !DILocation(line: 1270, column: 9, scope: !3661)
!3664 = !DILocation(line: 1272, column: 20, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !1466, file: !4, line: 1272, column: 9)
!3666 = !DILocation(line: 1272, column: 9, scope: !3665)
!3667 = !DILocation(line: 1272, column: 9, scope: !1466)
!3668 = !DILocation(line: 1273, column: 9, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3665, file: !4, line: 1272, column: 24)
!3670 = !DILocation(line: 1275, column: 9, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !1466, file: !4, line: 1275, column: 9)
!3672 = !DILocation(line: 1275, column: 18, scope: !3671)
!3673 = !DILocation(line: 1275, column: 36, scope: !3674)
!3674 = !DILexicalBlockFile(scope: !3671, file: !4, discriminator: 1)
!3675 = !DILocation(line: 1275, column: 21, scope: !3671)
!3676 = !DILocation(line: 1275, column: 9, scope: !1466)
!3677 = !DILocation(line: 1276, column: 10, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3671, file: !4, line: 1275, column: 40)
!3679 = !DILocation(line: 1276, column: 17, scope: !3678)
!3680 = !DILocation(line: 1277, column: 9, scope: !3678)
!3681 = !DILocation(line: 1280, column: 9, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !1466, file: !4, line: 1280, column: 9)
!3683 = !DILocation(line: 1280, column: 12, scope: !3682)
!3684 = !DILocation(line: 1280, column: 19, scope: !3682)
!3685 = !DILocation(line: 1280, column: 22, scope: !3682)
!3686 = !DILocation(line: 1280, column: 18, scope: !3682)
!3687 = !DILocation(line: 1280, column: 26, scope: !3682)
!3688 = !DILocation(line: 1280, column: 9, scope: !1466)
!3689 = !DILocation(line: 1281, column: 10, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3682, file: !4, line: 1280, column: 35)
!3691 = !DILocation(line: 1281, column: 17, scope: !3690)
!3692 = !DILocation(line: 1282, column: 9, scope: !3690)
!3693 = !DILocation(line: 1285, column: 9, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !1466, file: !4, line: 1285, column: 9)
!3695 = !DILocation(line: 1285, column: 12, scope: !3694)
!3696 = !DILocation(line: 1285, column: 16, scope: !3694)
!3697 = !DILocation(line: 1285, column: 9, scope: !1466)
!3698 = !DILocation(line: 1286, column: 25, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !4, line: 1286, column: 13)
!3700 = distinct !DILexicalBlock(scope: !3694, file: !4, line: 1285, column: 21)
!3701 = !DILocation(line: 1286, column: 14, scope: !3699)
!3702 = !DILocation(line: 1286, column: 13, scope: !3700)
!3703 = !DILocation(line: 1287, column: 14, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3699, file: !4, line: 1286, column: 29)
!3705 = !DILocation(line: 1287, column: 21, scope: !3704)
!3706 = !DILocation(line: 1288, column: 13, scope: !3704)
!3707 = !DILocation(line: 1292, column: 20, scope: !3700)
!3708 = !DILocation(line: 1292, column: 13, scope: !3700)
!3709 = !DILocation(line: 1292, column: 18, scope: !3700)
!3710 = !DILocation(line: 1293, column: 13, scope: !3700)
!3711 = !DILocation(line: 1293, column: 19, scope: !3700)
!3712 = !DILocation(line: 1294, column: 13, scope: !3700)
!3713 = !DILocation(line: 1294, column: 19, scope: !3700)
!3714 = !DILocation(line: 1295, column: 28, scope: !3700)
!3715 = !DILocation(line: 1295, column: 32, scope: !3700)
!3716 = !DILocation(line: 1295, column: 35, scope: !3700)
!3717 = !DILocation(line: 1295, column: 31, scope: !3700)
!3718 = !DILocation(line: 1295, column: 9, scope: !3700)
!3719 = !DILocation(line: 1296, column: 13, scope: !3700)
!3720 = !DILocation(line: 1296, column: 17, scope: !3700)
!3721 = !DILocation(line: 1297, column: 11, scope: !3700)
!3722 = !DILocation(line: 1298, column: 5, scope: !3700)
!3723 = !DILocation(line: 1300, column: 33, scope: !1466)
!3724 = !DILocation(line: 1300, column: 5, scope: !1466)
!3725 = !DILocation(line: 1301, column: 9, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !1466, file: !4, line: 1301, column: 9)
!3727 = !DILocation(line: 1301, column: 9, scope: !1466)
!3728 = !DILocation(line: 1302, column: 10, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3726, file: !4, line: 1301, column: 13)
!3730 = !DILocation(line: 1302, column: 17, scope: !3729)
!3731 = !DILocation(line: 1303, column: 9, scope: !3729)
!3732 = !DILocation(line: 1306, column: 9, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !1466, file: !4, line: 1306, column: 9)
!3734 = !DILocation(line: 1306, column: 12, scope: !3733)
!3735 = !DILocation(line: 1306, column: 16, scope: !3733)
!3736 = !DILocation(line: 1306, column: 9, scope: !1466)
!3737 = !DILocation(line: 1307, column: 34, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3733, file: !4, line: 1306, column: 21)
!3739 = !DILocation(line: 1307, column: 48, scope: !3738)
!3740 = !DILocation(line: 1307, column: 51, scope: !3738)
!3741 = !DILocation(line: 1307, column: 38, scope: !3738)
!3742 = !DILocation(line: 1307, column: 9, scope: !3738)
!3743 = !DILocation(line: 1308, column: 13, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3738, file: !4, line: 1308, column: 13)
!3745 = !DILocation(line: 1308, column: 13, scope: !3738)
!3746 = !DILocation(line: 1309, column: 14, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3744, file: !4, line: 1308, column: 17)
!3748 = !DILocation(line: 1309, column: 21, scope: !3747)
!3749 = !DILocation(line: 1310, column: 13, scope: !3747)
!3750 = !DILocation(line: 1312, column: 5, scope: !3738)
!3751 = !DILocation(line: 1314, column: 12, scope: !1466)
!3752 = !DILocation(line: 1314, column: 5, scope: !1466)
!3753 = !DILocation(line: 1315, column: 1, scope: !1466)
!3754 = !DILocation(line: 1332, column: 28, scope: !463)
!3755 = !DILocation(line: 1332, column: 41, scope: !463)
!3756 = !DILocation(line: 1334, column: 30, scope: !463)
!3757 = !DILocation(line: 1334, column: 33, scope: !463)
!3758 = !DILocation(line: 1334, column: 12, scope: !463)
!3759 = !DILocation(line: 1334, column: 5, scope: !463)
!3760 = !DILocation(line: 1339, column: 29, scope: !467)
!3761 = !DILocation(line: 1339, column: 42, scope: !467)
!3762 = !DILocation(line: 1341, column: 5, scope: !467)
!3763 = !DILocation(line: 1341, column: 16, scope: !467)
!3764 = !DILocation(line: 1342, column: 5, scope: !467)
!3765 = !DILocation(line: 1342, column: 9, scope: !467)
!3766 = !DILocation(line: 1344, column: 23, scope: !467)
!3767 = !DILocation(line: 1344, column: 26, scope: !467)
!3768 = !DILocation(line: 1344, column: 9, scope: !467)
!3769 = !DILocation(line: 1344, column: 7, scope: !467)
!3770 = !DILocation(line: 1345, column: 10, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !467, file: !4, line: 1345, column: 9)
!3772 = !DILocation(line: 1345, column: 9, scope: !3771)
!3773 = !DILocation(line: 1345, column: 16, scope: !3771)
!3774 = !DILocation(line: 1345, column: 9, scope: !467)
!3775 = !DILocation(line: 1346, column: 9, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3771, file: !4, line: 1345, column: 30)
!3777 = !DILocation(line: 1349, column: 28, scope: !467)
!3778 = !DILocation(line: 1349, column: 13, scope: !467)
!3779 = !DILocation(line: 1349, column: 11, scope: !467)
!3780 = !DILocation(line: 1350, column: 9, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !467, file: !4, line: 1350, column: 9)
!3782 = !DILocation(line: 1350, column: 11, scope: !3781)
!3783 = !DILocation(line: 1350, column: 9, scope: !467)
!3784 = !DILocation(line: 1351, column: 16, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3781, file: !4, line: 1350, column: 38)
!3786 = !DILocation(line: 1351, column: 39, scope: !3787)
!3787 = !DILexicalBlockFile(scope: !3785, file: !4, discriminator: 1)
!3788 = !DILocation(line: 1351, column: 24, scope: !3785)
!3789 = !DILocation(line: 1351, column: 57, scope: !3790)
!3790 = !DILexicalBlockFile(scope: !3785, file: !4, discriminator: 2)
!3791 = !DILocation(line: 1351, column: 9, scope: !3792)
!3792 = !DILexicalBlockFile(scope: !3793, file: !4, discriminator: 4)
!3793 = !DILexicalBlockFile(scope: !3785, file: !4, discriminator: 3)
!3794 = !DILocation(line: 1351, column: 9, scope: !3785)
!3795 = !DILocation(line: 1353, column: 14, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3781, file: !4, line: 1353, column: 14)
!3797 = !DILocation(line: 1353, column: 20, scope: !3796)
!3798 = !DILocation(line: 1353, column: 23, scope: !3799)
!3799 = !DILexicalBlockFile(scope: !3796, file: !4, discriminator: 1)
!3800 = !DILocation(line: 1353, column: 24, scope: !3796)
!3801 = !DILocation(line: 1353, column: 77, scope: !3796)
!3802 = !DILocation(line: 1353, column: 14, scope: !3781)
!3803 = !DILocation(line: 1354, column: 9, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3796, file: !4, line: 1353, column: 104)
!3805 = !DILocation(line: 1357, column: 6, scope: !467)
!3806 = !DILocation(line: 1357, column: 13, scope: !467)
!3807 = !DILocation(line: 1358, column: 5, scope: !467)
!3808 = !DILocation(line: 1359, column: 1, scope: !467)
!3809 = !DILocation(line: 1449, column: 27, scope: !475)
!3810 = !DILocation(line: 1449, column: 40, scope: !475)
!3811 = !DILocation(line: 1451, column: 26, scope: !475)
!3812 = !DILocation(line: 1451, column: 29, scope: !475)
!3813 = !DILocation(line: 1451, column: 12, scope: !475)
!3814 = !DILocation(line: 1451, column: 5, scope: !475)
!3815 = !DILocation(line: 1456, column: 27, scope: !481)
!3816 = !DILocation(line: 1456, column: 40, scope: !481)
!3817 = !DILocation(line: 1458, column: 27, scope: !481)
!3818 = !DILocation(line: 1458, column: 30, scope: !481)
!3819 = !DILocation(line: 1458, column: 12, scope: !481)
!3820 = !DILocation(line: 1458, column: 5, scope: !481)
!3821 = !DILocation(line: 1463, column: 27, scope: !487)
!3822 = !DILocation(line: 1463, column: 40, scope: !487)
!3823 = !DILocation(line: 1465, column: 5, scope: !487)
!3824 = !DILocation(line: 1465, column: 14, scope: !487)
!3825 = !DILocation(line: 1465, column: 32, scope: !487)
!3826 = !DILocation(line: 1465, column: 35, scope: !487)
!3827 = !DILocation(line: 1465, column: 18, scope: !487)
!3828 = !DILocation(line: 1467, column: 10, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !487, file: !4, line: 1467, column: 9)
!3830 = !DILocation(line: 1467, column: 9, scope: !3829)
!3831 = !DILocation(line: 1467, column: 16, scope: !3829)
!3832 = !DILocation(line: 1467, column: 9, scope: !487)
!3833 = !DILocation(line: 1468, column: 9, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3829, file: !4, line: 1467, column: 30)
!3835 = !DILocation(line: 1470, column: 9, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !487, file: !4, line: 1470, column: 9)
!3837 = !DILocation(line: 1470, column: 11, scope: !3836)
!3838 = !DILocation(line: 1470, column: 9, scope: !487)
!3839 = !DILocation(line: 1471, column: 10, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3836, file: !4, line: 1470, column: 28)
!3841 = !DILocation(line: 1471, column: 17, scope: !3840)
!3842 = !DILocation(line: 1472, column: 9, scope: !3840)
!3843 = !DILocation(line: 1475, column: 22, scope: !487)
!3844 = !DILocation(line: 1475, column: 12, scope: !487)
!3845 = !DILocation(line: 1475, column: 5, scope: !487)
!3846 = !DILocation(line: 1476, column: 1, scope: !487)
!3847 = !DILocation(line: 1480, column: 27, scope: !494)
!3848 = !DILocation(line: 1480, column: 40, scope: !494)
!3849 = !DILocation(line: 1482, column: 5, scope: !494)
!3850 = !DILocation(line: 1482, column: 13, scope: !494)
!3851 = !DILocation(line: 1482, column: 32, scope: !494)
!3852 = !DILocation(line: 1482, column: 35, scope: !494)
!3853 = !DILocation(line: 1482, column: 17, scope: !494)
!3854 = !DILocation(line: 1484, column: 10, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !494, file: !4, line: 1484, column: 9)
!3856 = !DILocation(line: 1484, column: 9, scope: !3855)
!3857 = !DILocation(line: 1484, column: 16, scope: !3855)
!3858 = !DILocation(line: 1484, column: 9, scope: !494)
!3859 = !DILocation(line: 1485, column: 9, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3855, file: !4, line: 1484, column: 30)
!3861 = !DILocation(line: 1487, column: 9, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !494, file: !4, line: 1487, column: 9)
!3863 = !DILocation(line: 1487, column: 11, scope: !3862)
!3864 = !DILocation(line: 1487, column: 29, scope: !3862)
!3865 = !DILocation(line: 1487, column: 32, scope: !3866)
!3866 = !DILexicalBlockFile(scope: !3862, file: !4, discriminator: 1)
!3867 = !DILocation(line: 1487, column: 34, scope: !3862)
!3868 = !DILocation(line: 1487, column: 9, scope: !494)
!3869 = !DILocation(line: 1488, column: 10, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3862, file: !4, line: 1487, column: 50)
!3871 = !DILocation(line: 1488, column: 17, scope: !3870)
!3872 = !DILocation(line: 1489, column: 9, scope: !3870)
!3873 = !DILocation(line: 1492, column: 21, scope: !494)
!3874 = !DILocation(line: 1492, column: 12, scope: !494)
!3875 = !DILocation(line: 1492, column: 5, scope: !494)
!3876 = !DILocation(line: 1493, column: 1, scope: !494)
!3877 = !DILocation(line: 1537, column: 23, scope: !501)
!3878 = !DILocation(line: 1537, column: 44, scope: !501)
!3879 = !DILocation(line: 1537, column: 68, scope: !501)
!3880 = !DILocation(line: 1538, column: 26, scope: !501)
!3881 = !DILocation(line: 1540, column: 19, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !501, file: !4, line: 1540, column: 9)
!3883 = !DILocation(line: 1540, column: 9, scope: !3882)
!3884 = !DILocation(line: 1540, column: 9, scope: !501)
!3885 = !DILocation(line: 1541, column: 31, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3882, file: !4, line: 1540, column: 23)
!3887 = !DILocation(line: 1541, column: 20, scope: !3886)
!3888 = !DILocation(line: 1541, column: 10, scope: !3886)
!3889 = !DILocation(line: 1541, column: 17, scope: !3886)
!3890 = !DILocation(line: 1542, column: 19, scope: !3886)
!3891 = !DILocation(line: 1542, column: 27, scope: !3886)
!3892 = !DILocation(line: 1542, column: 30, scope: !3886)
!3893 = !DILocation(line: 1542, column: 9, scope: !3886)
!3894 = !DILocation(line: 1543, column: 22, scope: !3886)
!3895 = !DILocation(line: 1543, column: 9, scope: !3886)
!3896 = !DILocation(line: 1544, column: 22, scope: !3886)
!3897 = !DILocation(line: 1544, column: 30, scope: !3886)
!3898 = !DILocation(line: 1544, column: 9, scope: !3886)
!3899 = !DILocation(line: 1545, column: 9, scope: !3886)
!3900 = !DILocation(line: 1547, column: 5, scope: !501)
!3901 = !DILocation(line: 1548, column: 1, scope: !501)
!3902 = !DILocation(line: 1916, column: 18, scope: !526)
!3903 = !DILocation(line: 1916, column: 39, scope: !526)
!3904 = !DILocation(line: 1916, column: 52, scope: !526)
!3905 = !DILocation(line: 1918, column: 9, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !526, file: !4, line: 1918, column: 9)
!3907 = !DILocation(line: 1918, column: 19, scope: !3906)
!3908 = !DILocation(line: 1918, column: 16, scope: !3906)
!3909 = !DILocation(line: 1918, column: 9, scope: !526)
!3910 = !DILocation(line: 1918, column: 22, scope: !3911)
!3911 = !DILexicalBlockFile(scope: !3906, file: !4, discriminator: 1)
!3912 = !DILocation(line: 1920, column: 22, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !526, file: !4, line: 1920, column: 9)
!3914 = !DILocation(line: 1920, column: 30, scope: !3913)
!3915 = !DILocation(line: 1920, column: 33, scope: !3913)
!3916 = !DILocation(line: 1920, column: 38, scope: !3913)
!3917 = !DILocation(line: 1920, column: 10, scope: !3913)
!3918 = !DILocation(line: 1920, column: 9, scope: !526)
!3919 = !DILocation(line: 1921, column: 9, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3913, file: !4, line: 1920, column: 47)
!3921 = !DILocation(line: 1924, column: 20, scope: !526)
!3922 = !DILocation(line: 1924, column: 28, scope: !526)
!3923 = !DILocation(line: 1924, column: 5, scope: !526)
!3924 = !DILocation(line: 1925, column: 19, scope: !526)
!3925 = !DILocation(line: 1925, column: 22, scope: !526)
!3926 = !DILocation(line: 1925, column: 5, scope: !526)
!3927 = !DILocation(line: 1925, column: 13, scope: !526)
!3928 = !DILocation(line: 1925, column: 17, scope: !526)
!3929 = !DILocation(line: 1926, column: 22, scope: !526)
!3930 = !DILocation(line: 1926, column: 25, scope: !526)
!3931 = !DILocation(line: 1926, column: 5, scope: !526)
!3932 = !DILocation(line: 1926, column: 13, scope: !526)
!3933 = !DILocation(line: 1926, column: 20, scope: !526)
!3934 = !DILocation(line: 1927, column: 19, scope: !526)
!3935 = !DILocation(line: 1927, column: 22, scope: !526)
!3936 = !DILocation(line: 1927, column: 5, scope: !526)
!3937 = !DILocation(line: 1927, column: 13, scope: !526)
!3938 = !DILocation(line: 1927, column: 17, scope: !526)
!3939 = !DILocation(line: 1928, column: 12, scope: !526)
!3940 = !DILocation(line: 1928, column: 20, scope: !526)
!3941 = !DILocation(line: 1928, column: 5, scope: !526)
!3942 = !DILocation(line: 1928, column: 26, scope: !526)
!3943 = !DILocation(line: 1928, column: 29, scope: !526)
!3944 = !DILocation(line: 1928, column: 35, scope: !526)
!3945 = !DILocation(line: 1928, column: 38, scope: !526)
!3946 = !DILocation(line: 1928, column: 42, scope: !526)
!3947 = !DILocation(line: 1930, column: 5, scope: !526)
!3948 = !DILocation(line: 1931, column: 1, scope: !526)
!3949 = !DILocation(line: 811, column: 21, scope: !1511)
!3950 = !DILocation(line: 811, column: 50, scope: !1511)
!3951 = !DILocation(line: 813, column: 5, scope: !1511)
!3952 = !DILocation(line: 813, column: 14, scope: !1511)
!3953 = !DILocation(line: 814, column: 5, scope: !1511)
!3954 = !DILocation(line: 814, column: 17, scope: !1511)
!3955 = !DILocation(line: 815, column: 5, scope: !1511)
!3956 = !DILocation(line: 815, column: 17, scope: !1511)
!3957 = !DILocation(line: 815, column: 22, scope: !1511)
!3958 = !DILocation(line: 817, column: 12, scope: !1511)
!3959 = !DILocation(line: 817, column: 17, scope: !1511)
!3960 = !DILocation(line: 817, column: 24, scope: !1511)
!3961 = !DILocation(line: 817, column: 29, scope: !1511)
!3962 = !{!2522, !2523, i64 40}
!3963 = !DILocation(line: 817, column: 22, scope: !1511)
!3964 = !DILocation(line: 817, column: 10, scope: !1511)
!3965 = !DILocation(line: 818, column: 9, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !1511, file: !4, line: 818, column: 9)
!3967 = !DILocation(line: 818, column: 17, scope: !3966)
!3968 = !DILocation(line: 818, column: 21, scope: !3966)
!3969 = !DILocation(line: 818, column: 25, scope: !3966)
!3970 = !DILocation(line: 818, column: 28, scope: !3971)
!3971 = !DILexicalBlockFile(scope: !3966, file: !4, discriminator: 1)
!3972 = !DILocation(line: 818, column: 36, scope: !3966)
!3973 = !DILocation(line: 818, column: 45, scope: !3966)
!3974 = !DILocation(line: 818, column: 43, scope: !3966)
!3975 = !DILocation(line: 818, column: 9, scope: !1511)
!3976 = !DILocation(line: 819, column: 13, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3978, file: !4, line: 819, column: 13)
!3978 = distinct !DILexicalBlock(scope: !3966, file: !4, line: 818, column: 51)
!3979 = !DILocation(line: 819, column: 18, scope: !3977)
!3980 = !DILocation(line: 819, column: 13, scope: !3978)
!3981 = !DILocation(line: 820, column: 26, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3977, file: !4, line: 819, column: 24)
!3983 = !DILocation(line: 820, column: 13, scope: !3982)
!3984 = !DILocation(line: 821, column: 27, scope: !3982)
!3985 = !DILocation(line: 821, column: 35, scope: !3982)
!3986 = !DILocation(line: 821, column: 42, scope: !3982)
!3987 = !DILocation(line: 821, column: 13, scope: !3982)
!3988 = !DILocation(line: 821, column: 21, scope: !3982)
!3989 = !DILocation(line: 821, column: 25, scope: !3982)
!3990 = !DILocation(line: 822, column: 9, scope: !3982)
!3991 = !DILocation(line: 824, column: 38, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3977, file: !4, line: 823, column: 14)
!3993 = !DILocation(line: 824, column: 13, scope: !3992)
!3994 = !DILocation(line: 825, column: 20, scope: !3992)
!3995 = !DILocation(line: 825, column: 22, scope: !3992)
!3996 = !DILocation(line: 825, column: 19, scope: !3992)
!3997 = !DILocation(line: 825, column: 30, scope: !3998)
!3998 = !DILexicalBlockFile(scope: !3992, file: !4, discriminator: 1)
!3999 = !DILocation(line: 825, column: 36, scope: !4000)
!4000 = !DILexicalBlockFile(scope: !3992, file: !4, discriminator: 2)
!4001 = !DILocation(line: 825, column: 39, scope: !3992)
!4002 = !DILocation(line: 825, column: 17, scope: !4003)
!4003 = !DILexicalBlockFile(scope: !4004, file: !4, discriminator: 4)
!4004 = !DILexicalBlockFile(scope: !3992, file: !4, discriminator: 3)
!4005 = !DILocation(line: 827, column: 17, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !3992, file: !4, line: 827, column: 17)
!4007 = !DILocation(line: 827, column: 19, scope: !4006)
!4008 = !DILocation(line: 827, column: 17, scope: !3992)
!4009 = !DILocation(line: 828, column: 51, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4006, file: !4, line: 827, column: 25)
!4011 = !DILocation(line: 828, column: 41, scope: !4010)
!4012 = !DILocation(line: 828, column: 31, scope: !4010)
!4013 = !DILocation(line: 828, column: 34, scope: !4010)
!4014 = !DILocation(line: 828, column: 18, scope: !4010)
!4015 = !DILocation(line: 828, column: 26, scope: !4010)
!4016 = !DILocation(line: 828, column: 38, scope: !4010)
!4017 = !DILocation(line: 829, column: 13, scope: !4010)
!4018 = !DILocation(line: 831, column: 34, scope: !3992)
!4019 = !DILocation(line: 831, column: 42, scope: !3992)
!4020 = !DILocation(line: 831, column: 48, scope: !3992)
!4021 = !DILocation(line: 831, column: 19, scope: !3992)
!4022 = !DILocation(line: 831, column: 17, scope: !3992)
!4023 = !DILocation(line: 833, column: 25, scope: !3992)
!4024 = !DILocation(line: 833, column: 33, scope: !3992)
!4025 = !DILocation(line: 833, column: 13, scope: !3992)
!4026 = !DILocation(line: 834, column: 27, scope: !3992)
!4027 = !DILocation(line: 834, column: 13, scope: !3992)
!4028 = !DILocation(line: 834, column: 21, scope: !3992)
!4029 = !DILocation(line: 834, column: 25, scope: !3992)
!4030 = !DILocation(line: 835, column: 27, scope: !3992)
!4031 = !DILocation(line: 835, column: 13, scope: !3992)
!4032 = !DILocation(line: 836, column: 33, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !3992, file: !4, line: 836, column: 17)
!4034 = !DILocation(line: 836, column: 17, scope: !4033)
!4035 = !DILocation(line: 836, column: 17, scope: !3992)
!4036 = !DILocation(line: 838, column: 31, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4033, file: !4, line: 836, column: 42)
!4038 = !DILocation(line: 838, column: 39, scope: !4037)
!4039 = !DILocation(line: 838, column: 46, scope: !4037)
!4040 = !DILocation(line: 838, column: 17, scope: !4037)
!4041 = !DILocation(line: 838, column: 25, scope: !4037)
!4042 = !DILocation(line: 838, column: 29, scope: !4037)
!4043 = !DILocation(line: 839, column: 13, scope: !4037)
!4044 = !DILocation(line: 841, column: 5, scope: !3978)
!4045 = !DILocation(line: 842, column: 1, scope: !1511)
!4046 = !DILocation(line: 1556, column: 24, scope: !509)
!4047 = !DILocation(line: 1556, column: 45, scope: !509)
!4048 = !DILocation(line: 1556, column: 61, scope: !509)
!4049 = !DILocation(line: 1557, column: 38, scope: !509)
!4050 = !DILocation(line: 1557, column: 53, scope: !509)
!4051 = !DILocation(line: 1559, column: 10, scope: !520)
!4052 = !DILocation(line: 1559, column: 13, scope: !520)
!4053 = !DILocation(line: 1559, column: 19, scope: !520)
!4054 = !DILocation(line: 1559, column: 22, scope: !520)
!4055 = !DILocation(line: 1559, column: 18, scope: !520)
!4056 = !DILocation(line: 1559, column: 28, scope: !520)
!4057 = !DILocation(line: 1559, column: 9, scope: !509)
!4058 = !DILocation(line: 1560, column: 9, scope: !519)
!4059 = !DILocation(line: 1560, column: 22, scope: !519)
!4060 = !DILocation(line: 1560, column: 31, scope: !519)
!4061 = !DILocation(line: 1561, column: 24, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !519, file: !4, line: 1561, column: 13)
!4063 = !DILocation(line: 1561, column: 13, scope: !4062)
!4064 = !DILocation(line: 1561, column: 13, scope: !519)
!4065 = !DILocation(line: 1562, column: 22, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4062, file: !4, line: 1561, column: 28)
!4067 = !DILocation(line: 1562, column: 20, scope: !4066)
!4068 = !DILocation(line: 1563, column: 14, scope: !4066)
!4069 = !DILocation(line: 1563, column: 21, scope: !4066)
!4070 = !DILocation(line: 1564, column: 9, scope: !4066)
!4071 = !DILocation(line: 1565, column: 29, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4062, file: !4, line: 1565, column: 18)
!4073 = !DILocation(line: 1565, column: 18, scope: !4072)
!4074 = !DILocation(line: 1565, column: 18, scope: !4062)
!4075 = !DILocation(line: 1566, column: 14, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4072, file: !4, line: 1565, column: 33)
!4077 = !DILocation(line: 1566, column: 21, scope: !4076)
!4078 = !DILocation(line: 1567, column: 9, scope: !4076)
!4079 = !DILocation(line: 1568, column: 29, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4072, file: !4, line: 1568, column: 18)
!4081 = !DILocation(line: 1568, column: 18, scope: !4080)
!4082 = !DILocation(line: 1568, column: 18, scope: !4072)
!4083 = !DILocation(line: 1569, column: 22, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4080, file: !4, line: 1568, column: 33)
!4085 = !DILocation(line: 1569, column: 20, scope: !4084)
!4086 = !DILocation(line: 1570, column: 9, scope: !4084)
!4087 = !DILocation(line: 1571, column: 19, scope: !519)
!4088 = !DILocation(line: 1571, column: 27, scope: !519)
!4089 = !DILocation(line: 1571, column: 35, scope: !519)
!4090 = !DILocation(line: 1571, column: 9, scope: !519)
!4091 = !DILocation(line: 1572, column: 22, scope: !519)
!4092 = !DILocation(line: 1572, column: 9, scope: !519)
!4093 = !DILocation(line: 1573, column: 22, scope: !519)
!4094 = !DILocation(line: 1573, column: 30, scope: !519)
!4095 = !DILocation(line: 1573, column: 9, scope: !519)
!4096 = !DILocation(line: 1574, column: 9, scope: !519)
!4097 = !DILocation(line: 1575, column: 5, scope: !520)
!4098 = !DILocation(line: 1576, column: 5, scope: !509)
!4099 = !DILocation(line: 1577, column: 1, scope: !509)
!4100 = !DILocation(line: 1733, column: 23, scope: !1521)
!4101 = !DILocation(line: 1733, column: 49, scope: !1521)
!4102 = !DILocation(line: 1733, column: 64, scope: !1521)
!4103 = !DILocation(line: 1735, column: 5, scope: !1521)
!4104 = !DILocation(line: 1735, column: 17, scope: !1521)
!4105 = !DILocation(line: 1735, column: 25, scope: !1521)
!4106 = !DILocation(line: 1735, column: 32, scope: !1521)
!4107 = !DILocation(line: 1736, column: 5, scope: !1521)
!4108 = !DILocation(line: 1736, column: 9, scope: !1521)
!4109 = !DILocation(line: 1738, column: 25, scope: !1521)
!4110 = !DILocation(line: 1738, column: 14, scope: !1521)
!4111 = !DILocation(line: 1738, column: 12, scope: !1521)
!4112 = !DILocation(line: 1739, column: 9, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !1521, file: !4, line: 1739, column: 9)
!4114 = !DILocation(line: 1739, column: 18, scope: !4113)
!4115 = !DILocation(line: 1739, column: 23, scope: !4113)
!4116 = !DILocation(line: 1739, column: 16, scope: !4113)
!4117 = !DILocation(line: 1739, column: 9, scope: !1521)
!4118 = !DILocation(line: 1741, column: 29, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4120, file: !4, line: 1741, column: 13)
!4120 = distinct !DILexicalBlock(scope: !4113, file: !4, line: 1739, column: 29)
!4121 = !DILocation(line: 1741, column: 13, scope: !4119)
!4122 = !DILocation(line: 1741, column: 13, scope: !4120)
!4123 = !DILocation(line: 1742, column: 24, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4119, file: !4, line: 1741, column: 35)
!4125 = !DILocation(line: 1742, column: 29, scope: !4124)
!4126 = !DILocation(line: 1742, column: 13, scope: !4124)
!4127 = !DILocation(line: 1742, column: 18, scope: !4124)
!4128 = !DILocation(line: 1742, column: 22, scope: !4124)
!4129 = !DILocation(line: 1743, column: 17, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4124, file: !4, line: 1743, column: 17)
!4131 = !DILocation(line: 1743, column: 22, scope: !4130)
!4132 = !DILocation(line: 1743, column: 17, scope: !4124)
!4133 = !DILocation(line: 1744, column: 30, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4130, file: !4, line: 1743, column: 29)
!4135 = !DILocation(line: 1744, column: 35, scope: !4134)
!4136 = !DILocation(line: 1744, column: 39, scope: !4134)
!4137 = !DILocation(line: 1744, column: 17, scope: !4134)
!4138 = !DILocation(line: 1744, column: 22, scope: !4134)
!4139 = !DILocation(line: 1744, column: 26, scope: !4134)
!4140 = !DILocation(line: 1745, column: 13, scope: !4134)
!4141 = !DILocation(line: 1746, column: 27, scope: !4124)
!4142 = !DILocation(line: 1746, column: 13, scope: !4124)
!4143 = !DILocation(line: 1747, column: 14, scope: !4124)
!4144 = !DILocation(line: 1747, column: 21, scope: !4124)
!4145 = !DILocation(line: 1748, column: 13, scope: !4124)
!4146 = !DILocation(line: 1751, column: 17, scope: !4120)
!4147 = !DILocation(line: 1751, column: 22, scope: !4120)
!4148 = !{!2522, !2523, i64 36}
!4149 = !DILocation(line: 1755, column: 28, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4120, file: !4, line: 1751, column: 29)
!4151 = !DILocation(line: 1755, column: 42, scope: !4150)
!4152 = !DILocation(line: 1755, column: 33, scope: !4150)
!4153 = !DILocation(line: 1755, column: 13, scope: !4150)
!4154 = !DILocation(line: 1756, column: 13, scope: !4150)
!4155 = !DILocation(line: 1758, column: 27, scope: !4150)
!4156 = !DILocation(line: 1758, column: 32, scope: !4150)
!4157 = !DILocation(line: 1758, column: 37, scope: !4150)
!4158 = !DILocation(line: 1758, column: 13, scope: !4150)
!4159 = !DILocation(line: 1759, column: 24, scope: !4150)
!4160 = !DILocation(line: 1759, column: 29, scope: !4150)
!4161 = !DILocation(line: 1759, column: 36, scope: !4150)
!4162 = !DILocation(line: 1759, column: 41, scope: !4150)
!4163 = !DILocation(line: 1759, column: 34, scope: !4150)
!4164 = !DILocation(line: 1759, column: 46, scope: !4150)
!4165 = !DILocation(line: 1759, column: 13, scope: !4150)
!4166 = !DILocation(line: 1759, column: 18, scope: !4150)
!4167 = !DILocation(line: 1759, column: 22, scope: !4150)
!4168 = !DILocation(line: 1760, column: 13, scope: !4150)
!4169 = !DILocation(line: 1762, column: 32, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4150, file: !4, line: 1762, column: 17)
!4171 = !DILocation(line: 1762, column: 17, scope: !4170)
!4172 = !DILocation(line: 1762, column: 17, scope: !4150)
!4173 = !DILocation(line: 1763, column: 31, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4170, file: !4, line: 1762, column: 38)
!4175 = !DILocation(line: 1763, column: 36, scope: !4174)
!4176 = !DILocation(line: 1763, column: 41, scope: !4174)
!4177 = !DILocation(line: 1763, column: 17, scope: !4174)
!4178 = !DILocation(line: 1764, column: 28, scope: !4174)
!4179 = !DILocation(line: 1764, column: 33, scope: !4174)
!4180 = !DILocation(line: 1764, column: 40, scope: !4174)
!4181 = !DILocation(line: 1764, column: 45, scope: !4174)
!4182 = !DILocation(line: 1764, column: 38, scope: !4174)
!4183 = !DILocation(line: 1764, column: 50, scope: !4174)
!4184 = !DILocation(line: 1764, column: 17, scope: !4174)
!4185 = !DILocation(line: 1764, column: 22, scope: !4174)
!4186 = !DILocation(line: 1764, column: 26, scope: !4174)
!4187 = !DILocation(line: 1765, column: 13, scope: !4174)
!4188 = !DILocation(line: 1767, column: 32, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4170, file: !4, line: 1766, column: 18)
!4190 = !DILocation(line: 1767, column: 17, scope: !4189)
!4191 = !DILocation(line: 1769, column: 13, scope: !4150)
!4192 = !DILocation(line: 1771, column: 32, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4150, file: !4, line: 1771, column: 17)
!4194 = !DILocation(line: 1771, column: 17, scope: !4193)
!4195 = !DILocation(line: 1771, column: 17, scope: !4150)
!4196 = !DILocation(line: 1772, column: 31, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4193, file: !4, line: 1771, column: 38)
!4198 = !DILocation(line: 1772, column: 36, scope: !4197)
!4199 = !DILocation(line: 1772, column: 41, scope: !4197)
!4200 = !DILocation(line: 1772, column: 17, scope: !4197)
!4201 = !DILocation(line: 1773, column: 28, scope: !4197)
!4202 = !DILocation(line: 1773, column: 33, scope: !4197)
!4203 = !DILocation(line: 1773, column: 40, scope: !4197)
!4204 = !DILocation(line: 1773, column: 45, scope: !4197)
!4205 = !DILocation(line: 1773, column: 38, scope: !4197)
!4206 = !DILocation(line: 1773, column: 50, scope: !4197)
!4207 = !DILocation(line: 1773, column: 17, scope: !4197)
!4208 = !DILocation(line: 1773, column: 22, scope: !4197)
!4209 = !DILocation(line: 1773, column: 26, scope: !4197)
!4210 = !DILocation(line: 1774, column: 13, scope: !4197)
!4211 = !DILocation(line: 1776, column: 32, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4193, file: !4, line: 1775, column: 18)
!4213 = !DILocation(line: 1776, column: 17, scope: !4212)
!4214 = !DILocation(line: 1778, column: 13, scope: !4150)
!4215 = !DILocation(line: 1780, column: 13, scope: !4150)
!4216 = !DILocation(line: 1783, column: 10, scope: !4120)
!4217 = !DILocation(line: 1783, column: 17, scope: !4120)
!4218 = !DILocation(line: 1785, column: 5, scope: !4120)
!4219 = !DILocation(line: 1786, column: 14, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4113, file: !4, line: 1786, column: 14)
!4221 = !DILocation(line: 1786, column: 19, scope: !4220)
!4222 = !DILocation(line: 1786, column: 25, scope: !4220)
!4223 = !DILocation(line: 1786, column: 28, scope: !4224)
!4224 = !DILexicalBlockFile(scope: !4220, file: !4, discriminator: 1)
!4225 = !DILocation(line: 1786, column: 33, scope: !4220)
!4226 = !DILocation(line: 1786, column: 48, scope: !4220)
!4227 = !DILocation(line: 1786, column: 39, scope: !4220)
!4228 = !DILocation(line: 1786, column: 37, scope: !4220)
!4229 = !DILocation(line: 1786, column: 14, scope: !4113)
!4230 = !DILocation(line: 1790, column: 17, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4220, file: !4, line: 1786, column: 54)
!4232 = !DILocation(line: 1790, column: 22, scope: !4231)
!4233 = !DILocation(line: 1790, column: 37, scope: !4231)
!4234 = !DILocation(line: 1790, column: 28, scope: !4231)
!4235 = !DILocation(line: 1790, column: 26, scope: !4231)
!4236 = !DILocation(line: 1790, column: 15, scope: !4231)
!4237 = !DILocation(line: 1791, column: 26, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4231, file: !4, line: 1791, column: 13)
!4239 = !DILocation(line: 1791, column: 31, scope: !4238)
!4240 = !DILocation(line: 1791, column: 36, scope: !4238)
!4241 = !DILocation(line: 1791, column: 43, scope: !4238)
!4242 = !DILocation(line: 1791, column: 14, scope: !4238)
!4243 = !DILocation(line: 1791, column: 13, scope: !4231)
!4244 = !DILocation(line: 1792, column: 13, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4238, file: !4, line: 1791, column: 52)
!4246 = !DILocation(line: 1794, column: 21, scope: !4231)
!4247 = !DILocation(line: 1794, column: 9, scope: !4231)
!4248 = !DILocation(line: 1794, column: 14, scope: !4231)
!4249 = !DILocation(line: 1794, column: 18, scope: !4231)
!4250 = !DILocation(line: 1795, column: 10, scope: !4231)
!4251 = !DILocation(line: 1795, column: 17, scope: !4231)
!4252 = !DILocation(line: 1796, column: 30, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4231, file: !4, line: 1796, column: 13)
!4254 = !DILocation(line: 1796, column: 14, scope: !4253)
!4255 = !DILocation(line: 1796, column: 35, scope: !4253)
!4256 = !DILocation(line: 1796, column: 38, scope: !4257)
!4257 = !DILexicalBlockFile(scope: !4253, file: !4, discriminator: 1)
!4258 = !DILocation(line: 1796, column: 47, scope: !4253)
!4259 = !DILocation(line: 1796, column: 52, scope: !4253)
!4260 = !DILocation(line: 1796, column: 45, scope: !4253)
!4261 = !DILocation(line: 1796, column: 13, scope: !4231)
!4262 = !DILocation(line: 1799, column: 14, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4253, file: !4, line: 1796, column: 58)
!4264 = !DILocation(line: 1799, column: 21, scope: !4263)
!4265 = !DILocation(line: 1800, column: 9, scope: !4263)
!4266 = !DILocation(line: 1801, column: 5, scope: !4231)
!4267 = !DILocation(line: 1802, column: 14, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4220, file: !4, line: 1802, column: 14)
!4269 = !DILocation(line: 1802, column: 23, scope: !4268)
!4270 = !DILocation(line: 1802, column: 28, scope: !4268)
!4271 = !DILocation(line: 1802, column: 21, scope: !4268)
!4272 = !DILocation(line: 1802, column: 14, scope: !4220)
!4273 = !DILocation(line: 1804, column: 27, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4268, file: !4, line: 1802, column: 34)
!4275 = !DILocation(line: 1804, column: 17, scope: !4274)
!4276 = !DILocation(line: 1804, column: 15, scope: !4274)
!4277 = !DILocation(line: 1806, column: 29, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4274, file: !4, line: 1806, column: 13)
!4279 = !DILocation(line: 1806, column: 13, scope: !4278)
!4280 = !DILocation(line: 1806, column: 13, scope: !4274)
!4281 = !DILocation(line: 1807, column: 17, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4283, file: !4, line: 1807, column: 17)
!4283 = distinct !DILexicalBlock(scope: !4278, file: !4, line: 1806, column: 35)
!4284 = !DILocation(line: 1807, column: 22, scope: !4282)
!4285 = !DILocation(line: 1807, column: 28, scope: !4282)
!4286 = !DILocation(line: 1807, column: 26, scope: !4282)
!4287 = !DILocation(line: 1807, column: 17, scope: !4283)
!4288 = !DILocation(line: 1808, column: 28, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4282, file: !4, line: 1807, column: 35)
!4290 = !DILocation(line: 1808, column: 17, scope: !4289)
!4291 = !DILocation(line: 1808, column: 22, scope: !4289)
!4292 = !DILocation(line: 1808, column: 26, scope: !4289)
!4293 = !DILocation(line: 1809, column: 31, scope: !4289)
!4294 = !DILocation(line: 1809, column: 17, scope: !4289)
!4295 = !DILocation(line: 1810, column: 18, scope: !4289)
!4296 = !DILocation(line: 1810, column: 25, scope: !4289)
!4297 = !DILocation(line: 1811, column: 13, scope: !4289)
!4298 = !DILocation(line: 1812, column: 13, scope: !4283)
!4299 = !DILocation(line: 1815, column: 10, scope: !4274)
!4300 = !DILocation(line: 1815, column: 17, scope: !4274)
!4301 = !DILocation(line: 1816, column: 13, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4274, file: !4, line: 1816, column: 13)
!4303 = !DILocation(line: 1816, column: 18, scope: !4302)
!4304 = !DILocation(line: 1816, column: 24, scope: !4302)
!4305 = !DILocation(line: 1816, column: 22, scope: !4302)
!4306 = !DILocation(line: 1816, column: 13, scope: !4274)
!4307 = !DILocation(line: 1820, column: 21, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4302, file: !4, line: 1816, column: 31)
!4309 = !DILocation(line: 1820, column: 29, scope: !4308)
!4310 = !DILocation(line: 1820, column: 34, scope: !4308)
!4311 = !DILocation(line: 1820, column: 27, scope: !4308)
!4312 = !DILocation(line: 1820, column: 19, scope: !4308)
!4313 = !DILocation(line: 1821, column: 44, scope: !4308)
!4314 = !DILocation(line: 1821, column: 49, scope: !4308)
!4315 = !DILocation(line: 1821, column: 24, scope: !4308)
!4316 = !DILocation(line: 1821, column: 19, scope: !4308)
!4317 = !DILocation(line: 1821, column: 17, scope: !4308)
!4318 = !DILocation(line: 1822, column: 24, scope: !4308)
!4319 = !DILocation(line: 1822, column: 13, scope: !4308)
!4320 = !DILocation(line: 1822, column: 18, scope: !4308)
!4321 = !DILocation(line: 1822, column: 22, scope: !4308)
!4322 = !DILocation(line: 1824, column: 37, scope: !4308)
!4323 = !DILocation(line: 1824, column: 42, scope: !4308)
!4324 = !DILocation(line: 1824, column: 47, scope: !4308)
!4325 = !DILocation(line: 1824, column: 52, scope: !4308)
!4326 = !DILocation(line: 1824, column: 13, scope: !4308)
!4327 = !DILocation(line: 1825, column: 14, scope: !4308)
!4328 = !DILocation(line: 1825, column: 21, scope: !4308)
!4329 = !DILocation(line: 1826, column: 17, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4308, file: !4, line: 1826, column: 17)
!4331 = !DILocation(line: 1826, column: 17, scope: !4308)
!4332 = !DILocation(line: 1827, column: 18, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4330, file: !4, line: 1826, column: 22)
!4334 = !DILocation(line: 1827, column: 25, scope: !4333)
!4335 = !DILocation(line: 1828, column: 37, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4333, file: !4, line: 1828, column: 21)
!4337 = !DILocation(line: 1828, column: 21, scope: !4336)
!4338 = !DILocation(line: 1828, column: 21, scope: !4333)
!4339 = !DILocation(line: 1829, column: 35, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4336, file: !4, line: 1828, column: 43)
!4341 = !DILocation(line: 1829, column: 21, scope: !4340)
!4342 = !DILocation(line: 1830, column: 22, scope: !4340)
!4343 = !DILocation(line: 1830, column: 29, scope: !4340)
!4344 = !DILocation(line: 1831, column: 17, scope: !4340)
!4345 = !DILocation(line: 1832, column: 13, scope: !4333)
!4346 = !DILocation(line: 1833, column: 9, scope: !4308)
!4347 = !DILocation(line: 1837, column: 5, scope: !4274)
!4348 = !DILocation(line: 1838, column: 1, scope: !1521)
!4349 = !DILocation(line: 1838, column: 1, scope: !4350)
!4350 = !DILexicalBlockFile(scope: !1521, file: !4, discriminator: 1)
!4351 = !DILocation(line: 1856, column: 25, scope: !1530)
!4352 = !DILocation(line: 1856, column: 51, scope: !1530)
!4353 = !DILocation(line: 1856, column: 66, scope: !1530)
!4354 = !DILocation(line: 1858, column: 5, scope: !1530)
!4355 = !DILocation(line: 1858, column: 16, scope: !1530)
!4356 = !DILocation(line: 1859, column: 5, scope: !1530)
!4357 = !DILocation(line: 1859, column: 17, scope: !1530)
!4358 = !DILocation(line: 1862, column: 23, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !1530, file: !4, line: 1862, column: 9)
!4360 = !DILocation(line: 1862, column: 9, scope: !4359)
!4361 = !DILocation(line: 1862, column: 9, scope: !1530)
!4362 = !DILocation(line: 1863, column: 9, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4359, file: !4, line: 1862, column: 29)
!4364 = !DILocation(line: 1866, column: 9, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !1530, file: !4, line: 1866, column: 9)
!4366 = !DILocation(line: 1866, column: 14, scope: !4365)
!4367 = !DILocation(line: 1866, column: 23, scope: !4365)
!4368 = !DILocation(line: 1866, column: 28, scope: !4365)
!4369 = !DILocation(line: 1866, column: 21, scope: !4365)
!4370 = !DILocation(line: 1866, column: 9, scope: !1530)
!4371 = !DILocation(line: 1867, column: 17, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4365, file: !4, line: 1866, column: 34)
!4373 = !DILocation(line: 1867, column: 22, scope: !4372)
!4374 = !DILocation(line: 1867, column: 31, scope: !4372)
!4375 = !DILocation(line: 1867, column: 36, scope: !4372)
!4376 = !DILocation(line: 1867, column: 29, scope: !4372)
!4377 = !DILocation(line: 1867, column: 15, scope: !4372)
!4378 = !DILocation(line: 1868, column: 35, scope: !4372)
!4379 = !DILocation(line: 1868, column: 40, scope: !4372)
!4380 = !DILocation(line: 1868, column: 15, scope: !4372)
!4381 = !DILocation(line: 1868, column: 13, scope: !4372)
!4382 = !DILocation(line: 1869, column: 21, scope: !4372)
!4383 = !DILocation(line: 1869, column: 9, scope: !4372)
!4384 = !DILocation(line: 1869, column: 14, scope: !4372)
!4385 = !DILocation(line: 1869, column: 18, scope: !4372)
!4386 = !DILocation(line: 1870, column: 26, scope: !4372)
!4387 = !DILocation(line: 1870, column: 31, scope: !4372)
!4388 = !DILocation(line: 1870, column: 36, scope: !4372)
!4389 = !DILocation(line: 1870, column: 41, scope: !4372)
!4390 = !DILocation(line: 1870, column: 9, scope: !4372)
!4391 = !DILocation(line: 1871, column: 10, scope: !4372)
!4392 = !DILocation(line: 1871, column: 17, scope: !4372)
!4393 = !DILocation(line: 1872, column: 13, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4372, file: !4, line: 1872, column: 13)
!4395 = !DILocation(line: 1872, column: 13, scope: !4372)
!4396 = !DILocation(line: 1873, column: 14, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4394, file: !4, line: 1872, column: 18)
!4398 = !DILocation(line: 1873, column: 21, scope: !4397)
!4399 = !DILocation(line: 1874, column: 9, scope: !4397)
!4400 = !DILocation(line: 1875, column: 5, scope: !4372)
!4401 = !DILocation(line: 1876, column: 1, scope: !1530)
!4402 = !DILocation(line: 1876, column: 1, scope: !4403)
!4403 = !DILexicalBlockFile(scope: !1530, file: !4, discriminator: 1)
!4404 = !DILocation(line: 1955, column: 25, scope: !533)
!4405 = !DILocation(line: 1957, column: 5, scope: !533)
!4406 = !DILocation(line: 1957, column: 12, scope: !533)
!4407 = !DILocation(line: 1959, column: 33, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !533, file: !4, line: 1959, column: 9)
!4409 = !DILocation(line: 1959, column: 36, scope: !4408)
!4410 = !DILocation(line: 1959, column: 19, scope: !4408)
!4411 = !DILocation(line: 1959, column: 17, scope: !4408)
!4412 = !DILocation(line: 1959, column: 42, scope: !4408)
!4413 = !DILocation(line: 1959, column: 9, scope: !533)
!4414 = !DILocation(line: 1960, column: 9, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4408, file: !4, line: 1959, column: 57)
!4416 = !DILocation(line: 1962, column: 12, scope: !533)
!4417 = !DILocation(line: 1962, column: 20, scope: !533)
!4418 = !DILocation(line: 1962, column: 5, scope: !533)
!4419 = !DILocation(line: 1962, column: 26, scope: !533)
!4420 = !DILocation(line: 1962, column: 29, scope: !533)
!4421 = !DILocation(line: 1962, column: 35, scope: !533)
!4422 = !DILocation(line: 1962, column: 38, scope: !533)
!4423 = !DILocation(line: 1962, column: 42, scope: !533)
!4424 = !DILocation(line: 1963, column: 20, scope: !533)
!4425 = !DILocation(line: 1963, column: 28, scope: !533)
!4426 = !DILocation(line: 1963, column: 5, scope: !533)
!4427 = !DILocation(line: 1964, column: 19, scope: !533)
!4428 = !DILocation(line: 1964, column: 22, scope: !533)
!4429 = !DILocation(line: 1964, column: 5, scope: !533)
!4430 = !DILocation(line: 1964, column: 13, scope: !533)
!4431 = !DILocation(line: 1964, column: 17, scope: !533)
!4432 = !DILocation(line: 1965, column: 22, scope: !533)
!4433 = !DILocation(line: 1965, column: 25, scope: !533)
!4434 = !DILocation(line: 1965, column: 5, scope: !533)
!4435 = !DILocation(line: 1965, column: 13, scope: !533)
!4436 = !DILocation(line: 1965, column: 20, scope: !533)
!4437 = !DILocation(line: 1966, column: 19, scope: !533)
!4438 = !DILocation(line: 1966, column: 22, scope: !533)
!4439 = !DILocation(line: 1966, column: 5, scope: !533)
!4440 = !DILocation(line: 1966, column: 13, scope: !533)
!4441 = !DILocation(line: 1966, column: 17, scope: !533)
!4442 = !DILocation(line: 1968, column: 12, scope: !533)
!4443 = !DILocation(line: 1968, column: 5, scope: !533)
!4444 = !DILocation(line: 1969, column: 1, scope: !533)
!4445 = !DILocation(line: 1976, column: 22, scope: !539)
!4446 = !DILocation(line: 1976, column: 43, scope: !539)
!4447 = !DILocation(line: 1976, column: 56, scope: !539)
!4448 = !DILocation(line: 1978, column: 20, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !539, file: !4, line: 1978, column: 9)
!4450 = !DILocation(line: 1978, column: 28, scope: !4449)
!4451 = !DILocation(line: 1978, column: 31, scope: !4449)
!4452 = !DILocation(line: 1978, column: 10, scope: !4449)
!4453 = !DILocation(line: 1978, column: 9, scope: !539)
!4454 = !DILocation(line: 1979, column: 9, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4449, file: !4, line: 1978, column: 40)
!4456 = !DILocation(line: 1981, column: 22, scope: !539)
!4457 = !DILocation(line: 1981, column: 5, scope: !539)
!4458 = !DILocation(line: 1982, column: 5, scope: !539)
!4459 = !DILocation(line: 1983, column: 1, scope: !539)
!4460 = !DILocation(line: 1990, column: 25, scope: !544)
!4461 = !DILocation(line: 1990, column: 46, scope: !544)
!4462 = !DILocation(line: 1990, column: 59, scope: !544)
!4463 = !DILocation(line: 1992, column: 20, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !544, file: !4, line: 1992, column: 9)
!4465 = !DILocation(line: 1992, column: 28, scope: !4464)
!4466 = !DILocation(line: 1992, column: 31, scope: !4464)
!4467 = !DILocation(line: 1992, column: 10, scope: !4464)
!4468 = !DILocation(line: 1992, column: 9, scope: !544)
!4469 = !DILocation(line: 1993, column: 9, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4464, file: !4, line: 1992, column: 40)
!4471 = !DILocation(line: 1995, column: 17, scope: !544)
!4472 = !DILocation(line: 1995, column: 5, scope: !544)
!4473 = !DILocation(line: 1996, column: 5, scope: !544)
!4474 = !DILocation(line: 1997, column: 1, scope: !544)
!4475 = !DILocation(line: 737, column: 20, scope: !1554)
!4476 = !DILocation(line: 739, column: 5, scope: !1554)
!4477 = !DILocation(line: 739, column: 10, scope: !1554)
!4478 = !DILocation(line: 739, column: 16, scope: !1554)
!4479 = !DILocation(line: 740, column: 1, scope: !1554)
!4480 = !DILocation(line: 2004, column: 23, scope: !549)
!4481 = !DILocation(line: 2004, column: 44, scope: !549)
!4482 = !DILocation(line: 2004, column: 60, scope: !549)
!4483 = !DILocation(line: 2004, column: 73, scope: !549)
!4484 = !DILocation(line: 2006, column: 5, scope: !549)
!4485 = !DILocation(line: 2006, column: 13, scope: !549)
!4486 = !DILocation(line: 2006, column: 31, scope: !549)
!4487 = !DILocation(line: 2006, column: 22, scope: !549)
!4488 = !DILocation(line: 2008, column: 20, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !549, file: !4, line: 2008, column: 9)
!4490 = !DILocation(line: 2008, column: 28, scope: !4489)
!4491 = !DILocation(line: 2008, column: 31, scope: !4489)
!4492 = !DILocation(line: 2008, column: 10, scope: !4489)
!4493 = !DILocation(line: 2008, column: 9, scope: !549)
!4494 = !DILocation(line: 2009, column: 9, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4489, file: !4, line: 2008, column: 40)
!4496 = !DILocation(line: 2011, column: 18, scope: !549)
!4497 = !DILocation(line: 2011, column: 26, scope: !549)
!4498 = !DILocation(line: 2011, column: 5, scope: !549)
!4499 = !DILocation(line: 2012, column: 5, scope: !549)
!4500 = !DILocation(line: 2013, column: 1, scope: !549)
!4501 = !DILocation(line: 2222, column: 23, scope: !558)
!4502 = !DILocation(line: 2222, column: 39, scope: !558)
!4503 = !DILocation(line: 2222, column: 52, scope: !558)
!4504 = !DILocation(line: 2224, column: 23, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !558, file: !4, line: 2224, column: 9)
!4506 = !DILocation(line: 2224, column: 9, scope: !4505)
!4507 = !DILocation(line: 2224, column: 26, scope: !4505)
!4508 = !DILocation(line: 2224, column: 43, scope: !4509)
!4509 = !DILexicalBlockFile(scope: !4505, file: !4, discriminator: 1)
!4510 = !DILocation(line: 2224, column: 29, scope: !4505)
!4511 = !DILocation(line: 2224, column: 9, scope: !558)
!4512 = !DILocation(line: 2225, column: 23, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4514, file: !4, line: 2225, column: 13)
!4514 = distinct !DILexicalBlock(scope: !4505, file: !4, line: 2224, column: 47)
!4515 = !DILocation(line: 2225, column: 13, scope: !4513)
!4516 = !DILocation(line: 2225, column: 26, scope: !4513)
!4517 = !DILocation(line: 2225, column: 39, scope: !4518)
!4518 = !DILexicalBlockFile(scope: !4513, file: !4, discriminator: 1)
!4519 = !DILocation(line: 2225, column: 29, scope: !4513)
!4520 = !DILocation(line: 2225, column: 13, scope: !4514)
!4521 = !DILocation(line: 2226, column: 14, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4513, file: !4, line: 2225, column: 43)
!4523 = !DILocation(line: 2226, column: 21, scope: !4522)
!4524 = !DILocation(line: 2227, column: 13, scope: !4522)
!4525 = !DILocation(line: 2229, column: 5, scope: !4514)
!4526 = !DILocation(line: 2231, column: 21, scope: !558)
!4527 = !DILocation(line: 2231, column: 24, scope: !558)
!4528 = !DILocation(line: 2231, column: 12, scope: !558)
!4529 = !DILocation(line: 2231, column: 5, scope: !558)
!4530 = !DILocation(line: 2232, column: 1, scope: !558)
!4531 = !DILocation(line: 2123, column: 23, scope: !1557)
!4532 = !DILocation(line: 2123, column: 39, scope: !1557)
!4533 = !DILocation(line: 2125, column: 5, scope: !1557)
!4534 = !DILocation(line: 2125, column: 17, scope: !1557)
!4535 = !DILocation(line: 2125, column: 27, scope: !1557)
!4536 = !DILocation(line: 2128, column: 9, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !1557, file: !4, line: 2128, column: 9)
!4538 = !DILocation(line: 2128, column: 14, scope: !4537)
!4539 = !DILocation(line: 2128, column: 11, scope: !4537)
!4540 = !DILocation(line: 2128, column: 9, scope: !1557)
!4541 = !DILocation(line: 2129, column: 9, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4537, file: !4, line: 2128, column: 17)
!4543 = !DILocation(line: 2133, column: 24, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !1557, file: !4, line: 2133, column: 9)
!4545 = !DILocation(line: 2133, column: 9, scope: !4544)
!4546 = !DILocation(line: 2133, column: 9, scope: !1557)
!4547 = !DILocation(line: 2134, column: 28, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !4, line: 2134, column: 13)
!4549 = distinct !DILexicalBlock(scope: !4544, file: !4, line: 2133, column: 28)
!4550 = !DILocation(line: 2134, column: 13, scope: !4548)
!4551 = !DILocation(line: 2134, column: 13, scope: !4549)
!4552 = !DILocation(line: 2135, column: 35, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4548, file: !4, line: 2134, column: 32)
!4554 = !DILocation(line: 2135, column: 20, scope: !4553)
!4555 = !DILocation(line: 2135, column: 55, scope: !4553)
!4556 = !DILocation(line: 2135, column: 40, scope: !4553)
!4557 = !DILocation(line: 2135, column: 38, scope: !4553)
!4558 = !DILocation(line: 2135, column: 13, scope: !4553)
!4559 = !DILocation(line: 2137, column: 31, scope: !4549)
!4560 = !DILocation(line: 2137, column: 16, scope: !4549)
!4561 = !DILocation(line: 2137, column: 9, scope: !4549)
!4562 = !DILocation(line: 2139, column: 24, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !1557, file: !4, line: 2139, column: 9)
!4564 = !DILocation(line: 2139, column: 9, scope: !4563)
!4565 = !DILocation(line: 2139, column: 9, scope: !1557)
!4566 = !DILocation(line: 2140, column: 32, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4563, file: !4, line: 2139, column: 28)
!4568 = !DILocation(line: 2140, column: 17, scope: !4567)
!4569 = !DILocation(line: 2140, column: 16, scope: !4567)
!4570 = !DILocation(line: 2140, column: 9, scope: !4567)
!4571 = !DILocation(line: 2144, column: 25, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !1557, file: !4, line: 2144, column: 9)
!4573 = !DILocation(line: 2144, column: 9, scope: !4572)
!4574 = !DILocation(line: 2144, column: 9, scope: !1557)
!4575 = !DILocation(line: 2145, column: 29, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4577, file: !4, line: 2145, column: 13)
!4577 = distinct !DILexicalBlock(scope: !4572, file: !4, line: 2144, column: 29)
!4578 = !DILocation(line: 2145, column: 13, scope: !4576)
!4579 = !DILocation(line: 2145, column: 13, scope: !4577)
!4580 = !DILocation(line: 2146, column: 13, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4576, file: !4, line: 2145, column: 33)
!4582 = !DILocation(line: 2148, column: 32, scope: !4577)
!4583 = !DILocation(line: 2148, column: 17, scope: !4577)
!4584 = !DILocation(line: 2148, column: 16, scope: !4577)
!4585 = !DILocation(line: 2148, column: 9, scope: !4577)
!4586 = !DILocation(line: 2150, column: 25, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !1557, file: !4, line: 2150, column: 9)
!4588 = !DILocation(line: 2150, column: 9, scope: !4587)
!4589 = !DILocation(line: 2150, column: 9, scope: !1557)
!4590 = !DILocation(line: 2151, column: 31, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4587, file: !4, line: 2150, column: 29)
!4592 = !DILocation(line: 2151, column: 16, scope: !4591)
!4593 = !DILocation(line: 2151, column: 9, scope: !4591)
!4594 = !DILocation(line: 2155, column: 18, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !1557, file: !4, line: 2155, column: 9)
!4596 = !DILocation(line: 2155, column: 9, scope: !4595)
!4597 = !DILocation(line: 2155, column: 33, scope: !4595)
!4598 = !DILocation(line: 2155, column: 24, scope: !4595)
!4599 = !DILocation(line: 2155, column: 21, scope: !4595)
!4600 = !DILocation(line: 2155, column: 9, scope: !1557)
!4601 = !DILocation(line: 2156, column: 25, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4595, file: !4, line: 2155, column: 37)
!4603 = !DILocation(line: 2156, column: 16, scope: !4602)
!4604 = !DILocation(line: 2156, column: 39, scope: !4602)
!4605 = !DILocation(line: 2156, column: 30, scope: !4602)
!4606 = !DILocation(line: 2156, column: 28, scope: !4602)
!4607 = !DILocation(line: 2156, column: 9, scope: !4602)
!4608 = !DILocation(line: 2160, column: 27, scope: !1557)
!4609 = !DILocation(line: 2160, column: 16, scope: !1557)
!4610 = !DILocation(line: 2160, column: 14, scope: !1557)
!4611 = !DILocation(line: 2161, column: 27, scope: !1557)
!4612 = !DILocation(line: 2161, column: 16, scope: !1557)
!4613 = !DILocation(line: 2161, column: 14, scope: !1557)
!4614 = !DILocation(line: 2162, column: 9, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !1557, file: !4, line: 2162, column: 9)
!4616 = !DILocation(line: 2162, column: 21, scope: !4615)
!4617 = !DILocation(line: 2162, column: 18, scope: !4615)
!4618 = !DILocation(line: 2162, column: 9, scope: !1557)
!4619 = !DILocation(line: 2163, column: 13, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !4, line: 2163, column: 13)
!4621 = distinct !DILexicalBlock(scope: !4615, file: !4, line: 2162, column: 31)
!4622 = !DILocation(line: 2163, column: 24, scope: !4620)
!4623 = !DILocation(line: 2163, column: 22, scope: !4620)
!4624 = !DILocation(line: 2163, column: 13, scope: !4621)
!4625 = !DILocation(line: 2164, column: 40, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4620, file: !4, line: 2163, column: 34)
!4627 = !DILocation(line: 2164, column: 25, scope: !4626)
!4628 = !DILocation(line: 2164, column: 23, scope: !4626)
!4629 = !DILocation(line: 2164, column: 13, scope: !4626)
!4630 = !DILocation(line: 2166, column: 31, scope: !4621)
!4631 = !DILocation(line: 2166, column: 16, scope: !4621)
!4632 = !DILocation(line: 2166, column: 9, scope: !4621)
!4633 = !DILocation(line: 2170, column: 33, scope: !1557)
!4634 = !DILocation(line: 2170, column: 36, scope: !1557)
!4635 = !DILocation(line: 2170, column: 12, scope: !1557)
!4636 = !DILocation(line: 2170, column: 56, scope: !1557)
!4637 = !DILocation(line: 2170, column: 41, scope: !1557)
!4638 = !DILocation(line: 2170, column: 39, scope: !1557)
!4639 = !DILocation(line: 2170, column: 5, scope: !1557)
!4640 = !DILocation(line: 2171, column: 1, scope: !1557)
!4641 = !DILocation(line: 2240, column: 21, scope: !565)
!4642 = !DILocation(line: 2240, column: 42, scope: !565)
!4643 = !DILocation(line: 2240, column: 58, scope: !565)
!4644 = !DILocation(line: 2241, column: 35, scope: !565)
!4645 = !DILocation(line: 2241, column: 50, scope: !565)
!4646 = !DILocation(line: 2243, column: 5, scope: !565)
!4647 = !DILocation(line: 2243, column: 9, scope: !565)
!4648 = !DILocation(line: 2245, column: 23, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !565, file: !4, line: 2245, column: 9)
!4650 = !DILocation(line: 2245, column: 9, scope: !4649)
!4651 = !DILocation(line: 2245, column: 26, scope: !4649)
!4652 = !DILocation(line: 2245, column: 43, scope: !4653)
!4653 = !DILexicalBlockFile(scope: !4649, file: !4, discriminator: 1)
!4654 = !DILocation(line: 2245, column: 29, scope: !4649)
!4655 = !DILocation(line: 2245, column: 9, scope: !565)
!4656 = !DILocation(line: 2246, column: 29, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !4, line: 2246, column: 13)
!4658 = distinct !DILexicalBlock(scope: !4649, file: !4, line: 2245, column: 47)
!4659 = !DILocation(line: 2246, column: 37, scope: !4657)
!4660 = !DILocation(line: 2246, column: 40, scope: !4657)
!4661 = !DILocation(line: 2246, column: 43, scope: !4657)
!4662 = !DILocation(line: 2246, column: 48, scope: !4657)
!4663 = !DILocation(line: 2246, column: 13, scope: !4657)
!4664 = !DILocation(line: 2246, column: 13, scope: !4658)
!4665 = !DILocation(line: 2247, column: 13, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4657, file: !4, line: 2246, column: 57)
!4667 = !DILocation(line: 2249, column: 5, scope: !4658)
!4668 = !DILocation(line: 2251, column: 18, scope: !565)
!4669 = !DILocation(line: 2251, column: 21, scope: !565)
!4670 = !DILocation(line: 2251, column: 9, scope: !565)
!4671 = !DILocation(line: 2251, column: 7, scope: !565)
!4672 = !DILocation(line: 2252, column: 16, scope: !565)
!4673 = !DILocation(line: 2252, column: 25, scope: !565)
!4674 = !DILocation(line: 2252, column: 27, scope: !565)
!4675 = !DILocation(line: 2252, column: 24, scope: !565)
!4676 = !DILocation(line: 2252, column: 34, scope: !565)
!4677 = !DILocation(line: 2252, column: 36, scope: !565)
!4678 = !DILocation(line: 2252, column: 33, scope: !565)
!4679 = !DILocation(line: 2252, column: 5, scope: !565)
!4680 = !DILocation(line: 2253, column: 12, scope: !565)
!4681 = !DILocation(line: 2253, column: 5, scope: !565)
!4682 = !DILocation(line: 2254, column: 1, scope: !565)
!4683 = !DILocation(line: 2258, column: 28, scope: !573)
!4684 = !DILocation(line: 2258, column: 49, scope: !573)
!4685 = !DILocation(line: 2258, column: 65, scope: !573)
!4686 = !DILocation(line: 2259, column: 42, scope: !573)
!4687 = !DILocation(line: 2259, column: 57, scope: !573)
!4688 = !DILocation(line: 2261, column: 5, scope: !573)
!4689 = !DILocation(line: 2261, column: 9, scope: !573)
!4690 = !DILocation(line: 2263, column: 23, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !573, file: !4, line: 2263, column: 9)
!4692 = !DILocation(line: 2263, column: 9, scope: !4691)
!4693 = !DILocation(line: 2263, column: 26, scope: !4691)
!4694 = !DILocation(line: 2263, column: 43, scope: !4695)
!4695 = !DILexicalBlockFile(scope: !4691, file: !4, discriminator: 1)
!4696 = !DILocation(line: 2263, column: 29, scope: !4691)
!4697 = !DILocation(line: 2263, column: 9, scope: !573)
!4698 = !DILocation(line: 2264, column: 29, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !4, line: 2264, column: 13)
!4700 = distinct !DILexicalBlock(scope: !4691, file: !4, line: 2263, column: 47)
!4701 = !DILocation(line: 2264, column: 37, scope: !4699)
!4702 = !DILocation(line: 2264, column: 40, scope: !4699)
!4703 = !DILocation(line: 2264, column: 43, scope: !4699)
!4704 = !DILocation(line: 2264, column: 48, scope: !4699)
!4705 = !DILocation(line: 2264, column: 13, scope: !4699)
!4706 = !DILocation(line: 2264, column: 13, scope: !4700)
!4707 = !DILocation(line: 2265, column: 14, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4699, file: !4, line: 2264, column: 57)
!4709 = !DILocation(line: 2265, column: 21, scope: !4708)
!4710 = !DILocation(line: 2266, column: 13, scope: !4708)
!4711 = !DILocation(line: 2268, column: 5, scope: !4700)
!4712 = !DILocation(line: 2270, column: 18, scope: !573)
!4713 = !DILocation(line: 2270, column: 21, scope: !573)
!4714 = !DILocation(line: 2270, column: 9, scope: !573)
!4715 = !DILocation(line: 2270, column: 7, scope: !573)
!4716 = !DILocation(line: 2271, column: 16, scope: !573)
!4717 = !DILocation(line: 2271, column: 25, scope: !573)
!4718 = !DILocation(line: 2271, column: 27, scope: !573)
!4719 = !DILocation(line: 2271, column: 24, scope: !573)
!4720 = !DILocation(line: 2271, column: 34, scope: !573)
!4721 = !DILocation(line: 2271, column: 36, scope: !573)
!4722 = !DILocation(line: 2271, column: 33, scope: !573)
!4723 = !DILocation(line: 2271, column: 5, scope: !573)
!4724 = !DILocation(line: 2272, column: 12, scope: !573)
!4725 = !DILocation(line: 2272, column: 5, scope: !573)
!4726 = !DILocation(line: 2273, column: 1, scope: !573)
!4727 = !DILocation(line: 2277, column: 28, scope: !581)
!4728 = !DILocation(line: 2277, column: 44, scope: !581)
!4729 = !DILocation(line: 2279, column: 5, scope: !581)
!4730 = !DILocation(line: 2279, column: 11, scope: !581)
!4731 = !DILocation(line: 2279, column: 15, scope: !581)
!4732 = !DILocation(line: 2280, column: 5, scope: !581)
!4733 = !DILocation(line: 2280, column: 9, scope: !581)
!4734 = !DILocation(line: 2280, column: 16, scope: !581)
!4735 = !DILocation(line: 2281, column: 5, scope: !581)
!4736 = !DILocation(line: 2281, column: 9, scope: !581)
!4737 = !DILocation(line: 2283, column: 18, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !581, file: !4, line: 2283, column: 9)
!4739 = !DILocation(line: 2283, column: 9, scope: !4738)
!4740 = !DILocation(line: 2283, column: 33, scope: !4738)
!4741 = !DILocation(line: 2283, column: 24, scope: !4738)
!4742 = !DILocation(line: 2283, column: 21, scope: !4738)
!4743 = !DILocation(line: 2283, column: 9, scope: !581)
!4744 = !DILocation(line: 2284, column: 25, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4738, file: !4, line: 2283, column: 37)
!4746 = !DILocation(line: 2284, column: 16, scope: !4745)
!4747 = !DILocation(line: 2284, column: 39, scope: !4745)
!4748 = !DILocation(line: 2284, column: 30, scope: !4745)
!4749 = !DILocation(line: 2284, column: 28, scope: !4745)
!4750 = !DILocation(line: 2284, column: 9, scope: !4745)
!4751 = !DILocation(line: 2288, column: 19, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !581, file: !4, line: 2288, column: 9)
!4753 = !DILocation(line: 2288, column: 9, scope: !4752)
!4754 = !DILocation(line: 2288, column: 9, scope: !581)
!4755 = !DILocation(line: 2289, column: 11, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4752, file: !4, line: 2288, column: 23)
!4757 = !DILocation(line: 2290, column: 23, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4756, file: !4, line: 2290, column: 13)
!4759 = !DILocation(line: 2290, column: 13, scope: !4758)
!4760 = !DILocation(line: 2290, column: 13, scope: !4756)
!4761 = !DILocation(line: 2291, column: 33, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4758, file: !4, line: 2290, column: 27)
!4763 = !DILocation(line: 2291, column: 22, scope: !4762)
!4764 = !DILocation(line: 2291, column: 21, scope: !4762)
!4765 = !DILocation(line: 2291, column: 19, scope: !4762)
!4766 = !DILocation(line: 2292, column: 33, scope: !4762)
!4767 = !DILocation(line: 2292, column: 22, scope: !4762)
!4768 = !DILocation(line: 2292, column: 21, scope: !4762)
!4769 = !DILocation(line: 2292, column: 19, scope: !4762)
!4770 = !DILocation(line: 2293, column: 17, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4762, file: !4, line: 2293, column: 17)
!4772 = !DILocation(line: 2293, column: 26, scope: !4771)
!4773 = !DILocation(line: 2293, column: 23, scope: !4771)
!4774 = !DILocation(line: 2293, column: 17, scope: !4762)
!4775 = !DILocation(line: 2294, column: 21, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !4, line: 2294, column: 21)
!4777 = distinct !DILexicalBlock(scope: !4771, file: !4, line: 2293, column: 33)
!4778 = !DILocation(line: 2294, column: 24, scope: !4776)
!4779 = !DILocation(line: 2294, column: 28, scope: !4776)
!4780 = !DILocation(line: 2294, column: 32, scope: !4776)
!4781 = !DILocation(line: 2294, column: 35, scope: !4782)
!4782 = !DILexicalBlockFile(scope: !4776, file: !4, discriminator: 1)
!4783 = !DILocation(line: 2294, column: 38, scope: !4776)
!4784 = !DILocation(line: 2294, column: 42, scope: !4776)
!4785 = !DILocation(line: 2294, column: 21, scope: !4777)
!4786 = !DILocation(line: 2295, column: 43, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4776, file: !4, line: 2294, column: 47)
!4788 = !DILocation(line: 2295, column: 21, scope: !4787)
!4789 = !DILocation(line: 2296, column: 43, scope: !4787)
!4790 = !DILocation(line: 2296, column: 21, scope: !4787)
!4791 = !DILocation(line: 2297, column: 33, scope: !4787)
!4792 = !DILocation(line: 2297, column: 37, scope: !4787)
!4793 = !DILocation(line: 2297, column: 24, scope: !4787)
!4794 = !DILocation(line: 2297, column: 28, scope: !4787)
!4795 = !DILocation(line: 2299, column: 25, scope: !4787)
!4796 = !DILocation(line: 2299, column: 23, scope: !4787)
!4797 = !DILocation(line: 2300, column: 17, scope: !4787)
!4798 = !DILocation(line: 2302, column: 26, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4776, file: !4, line: 2301, column: 22)
!4800 = !DILocation(line: 2302, column: 29, scope: !4799)
!4801 = !DILocation(line: 2302, column: 33, scope: !4799)
!4802 = !DILocation(line: 2302, column: 41, scope: !4799)
!4803 = !DILocation(line: 2302, column: 44, scope: !4799)
!4804 = !DILocation(line: 2302, column: 48, scope: !4799)
!4805 = !DILocation(line: 2302, column: 38, scope: !4799)
!4806 = !DILocation(line: 2302, column: 23, scope: !4799)
!4807 = !DILocation(line: 2304, column: 13, scope: !4777)
!4808 = !DILocation(line: 2306, column: 21, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4771, file: !4, line: 2305, column: 18)
!4810 = !DILocation(line: 2306, column: 29, scope: !4809)
!4811 = !DILocation(line: 2306, column: 27, scope: !4809)
!4812 = !DILocation(line: 2306, column: 19, scope: !4809)
!4813 = !DILocation(line: 2308, column: 9, scope: !4762)
!4814 = !DILocation(line: 2309, column: 5, scope: !4756)
!4815 = !DILocation(line: 2310, column: 24, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4752, file: !4, line: 2310, column: 14)
!4817 = !DILocation(line: 2310, column: 14, scope: !4816)
!4818 = !DILocation(line: 2310, column: 14, scope: !4752)
!4819 = !DILocation(line: 2311, column: 11, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4816, file: !4, line: 2310, column: 28)
!4821 = !DILocation(line: 2312, column: 5, scope: !4820)
!4822 = !DILocation(line: 2314, column: 26, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4816, file: !4, line: 2313, column: 10)
!4824 = !DILocation(line: 2314, column: 29, scope: !4823)
!4825 = !DILocation(line: 2314, column: 13, scope: !4823)
!4826 = !DILocation(line: 2314, column: 11, scope: !4823)
!4827 = !DILocation(line: 2315, column: 13, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4823, file: !4, line: 2315, column: 13)
!4829 = !DILocation(line: 2315, column: 15, scope: !4828)
!4830 = !DILocation(line: 2315, column: 20, scope: !4828)
!4831 = !DILocation(line: 2315, column: 23, scope: !4832)
!4832 = !DILexicalBlockFile(scope: !4828, file: !4, discriminator: 1)
!4833 = !DILocation(line: 2315, column: 26, scope: !4828)
!4834 = !DILocation(line: 2315, column: 33, scope: !4828)
!4835 = !DILocation(line: 2315, column: 36, scope: !4828)
!4836 = !DILocation(line: 2315, column: 30, scope: !4828)
!4837 = !DILocation(line: 2315, column: 13, scope: !4823)
!4838 = !DILocation(line: 2316, column: 18, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4828, file: !4, line: 2315, column: 41)
!4840 = !DILocation(line: 2316, column: 21, scope: !4839)
!4841 = !DILocation(line: 2316, column: 27, scope: !4839)
!4842 = !DILocation(line: 2316, column: 30, scope: !4839)
!4843 = !DILocation(line: 2316, column: 25, scope: !4839)
!4844 = !DILocation(line: 2316, column: 17, scope: !4839)
!4845 = !DILocation(line: 2316, column: 15, scope: !4839)
!4846 = !DILocation(line: 2317, column: 9, scope: !4839)
!4847 = !DILocation(line: 2320, column: 12, scope: !581)
!4848 = !DILocation(line: 2320, column: 31, scope: !581)
!4849 = !DILocation(line: 2320, column: 16, scope: !581)
!4850 = !DILocation(line: 2320, column: 14, scope: !581)
!4851 = !DILocation(line: 2320, column: 5, scope: !581)
!4852 = !DILocation(line: 2321, column: 1, scope: !581)
!4853 = !DILocation(line: 1900, column: 25, scope: !1600)
!4854 = !DILocation(line: 1900, column: 44, scope: !1600)
!4855 = !DILocation(line: 1902, column: 19, scope: !1600)
!4856 = !DILocation(line: 1902, column: 24, scope: !1600)
!4857 = !DILocation(line: 1902, column: 5, scope: !1600)
!4858 = !DILocation(line: 1902, column: 11, scope: !1600)
!4859 = !DILocation(line: 1902, column: 17, scope: !1600)
!4860 = !DILocation(line: 1903, column: 17, scope: !1600)
!4861 = !DILocation(line: 1903, column: 22, scope: !1600)
!4862 = !DILocation(line: 1903, column: 5, scope: !1600)
!4863 = !DILocation(line: 1903, column: 11, scope: !1600)
!4864 = !DILocation(line: 1903, column: 15, scope: !1600)
!4865 = !DILocation(line: 1904, column: 20, scope: !1600)
!4866 = !DILocation(line: 1904, column: 25, scope: !1600)
!4867 = !DILocation(line: 1904, column: 5, scope: !1600)
!4868 = !DILocation(line: 1904, column: 11, scope: !1600)
!4869 = !DILocation(line: 1904, column: 18, scope: !1600)
!4870 = !DILocation(line: 1905, column: 17, scope: !1600)
!4871 = !DILocation(line: 1905, column: 22, scope: !1600)
!4872 = !DILocation(line: 1905, column: 5, scope: !1600)
!4873 = !DILocation(line: 1905, column: 11, scope: !1600)
!4874 = !DILocation(line: 1905, column: 15, scope: !1600)
!4875 = !DILocation(line: 1906, column: 19, scope: !1600)
!4876 = !DILocation(line: 1906, column: 24, scope: !1600)
!4877 = !DILocation(line: 1906, column: 5, scope: !1600)
!4878 = !DILocation(line: 1906, column: 11, scope: !1600)
!4879 = !DILocation(line: 1906, column: 17, scope: !1600)
!4880 = !DILocation(line: 1907, column: 18, scope: !1600)
!4881 = !DILocation(line: 1907, column: 23, scope: !1600)
!4882 = !DILocation(line: 1907, column: 5, scope: !1600)
!4883 = !DILocation(line: 1907, column: 11, scope: !1600)
!4884 = !DILocation(line: 1907, column: 16, scope: !1600)
!4885 = !DILocation(line: 1909, column: 25, scope: !1600)
!4886 = !DILocation(line: 1909, column: 5, scope: !1600)
!4887 = !DILocation(line: 1910, column: 1, scope: !1600)
!4888 = !DILocation(line: 2175, column: 27, scope: !1604)
!4889 = !DILocation(line: 2175, column: 43, scope: !1604)
!4890 = !DILocation(line: 2177, column: 5, scope: !1604)
!4891 = !DILocation(line: 2177, column: 17, scope: !1604)
!4892 = !DILocation(line: 2177, column: 27, scope: !1604)
!4893 = !DILocation(line: 2180, column: 9, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !1604, file: !4, line: 2180, column: 9)
!4895 = !DILocation(line: 2180, column: 14, scope: !4894)
!4896 = !DILocation(line: 2180, column: 11, scope: !4894)
!4897 = !DILocation(line: 2180, column: 9, scope: !1604)
!4898 = !DILocation(line: 2181, column: 9, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4894, file: !4, line: 2180, column: 17)
!4900 = !DILocation(line: 2185, column: 24, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !1604, file: !4, line: 2185, column: 9)
!4902 = !DILocation(line: 2185, column: 9, scope: !4901)
!4903 = !DILocation(line: 2185, column: 9, scope: !1604)
!4904 = !DILocation(line: 2186, column: 28, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4906, file: !4, line: 2186, column: 13)
!4906 = distinct !DILexicalBlock(scope: !4901, file: !4, line: 2185, column: 28)
!4907 = !DILocation(line: 2186, column: 13, scope: !4905)
!4908 = !DILocation(line: 2186, column: 13, scope: !4906)
!4909 = !DILocation(line: 2187, column: 13, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4905, file: !4, line: 2186, column: 32)
!4911 = !DILocation(line: 2189, column: 9, scope: !4906)
!4912 = !DILocation(line: 2191, column: 24, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !1604, file: !4, line: 2191, column: 9)
!4914 = !DILocation(line: 2191, column: 9, scope: !4913)
!4915 = !DILocation(line: 2191, column: 9, scope: !1604)
!4916 = !DILocation(line: 2192, column: 9, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4913, file: !4, line: 2191, column: 28)
!4918 = !DILocation(line: 2196, column: 25, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !1604, file: !4, line: 2196, column: 9)
!4920 = !DILocation(line: 2196, column: 9, scope: !4919)
!4921 = !DILocation(line: 2196, column: 9, scope: !1604)
!4922 = !DILocation(line: 2197, column: 29, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !4, line: 2197, column: 13)
!4924 = distinct !DILexicalBlock(scope: !4919, file: !4, line: 2196, column: 29)
!4925 = !DILocation(line: 2197, column: 13, scope: !4923)
!4926 = !DILocation(line: 2197, column: 13, scope: !4924)
!4927 = !DILocation(line: 2198, column: 13, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4923, file: !4, line: 2197, column: 33)
!4929 = !DILocation(line: 2200, column: 9, scope: !4924)
!4930 = !DILocation(line: 2202, column: 25, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !1604, file: !4, line: 2202, column: 9)
!4932 = !DILocation(line: 2202, column: 9, scope: !4931)
!4933 = !DILocation(line: 2202, column: 9, scope: !1604)
!4934 = !DILocation(line: 2203, column: 9, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4931, file: !4, line: 2202, column: 29)
!4936 = !DILocation(line: 2207, column: 27, scope: !1604)
!4937 = !DILocation(line: 2207, column: 16, scope: !1604)
!4938 = !DILocation(line: 2207, column: 14, scope: !1604)
!4939 = !DILocation(line: 2208, column: 27, scope: !1604)
!4940 = !DILocation(line: 2208, column: 16, scope: !1604)
!4941 = !DILocation(line: 2208, column: 14, scope: !1604)
!4942 = !DILocation(line: 2209, column: 9, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !1604, file: !4, line: 2209, column: 9)
!4944 = !DILocation(line: 2209, column: 21, scope: !4943)
!4945 = !DILocation(line: 2209, column: 18, scope: !4943)
!4946 = !DILocation(line: 2209, column: 9, scope: !1604)
!4947 = !DILocation(line: 2210, column: 13, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4949, file: !4, line: 2210, column: 13)
!4949 = distinct !DILexicalBlock(scope: !4943, file: !4, line: 2209, column: 31)
!4950 = !DILocation(line: 2210, column: 24, scope: !4948)
!4951 = !DILocation(line: 2210, column: 22, scope: !4948)
!4952 = !DILocation(line: 2210, column: 13, scope: !4949)
!4953 = !DILocation(line: 2211, column: 13, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4948, file: !4, line: 2210, column: 34)
!4955 = !DILocation(line: 2213, column: 9, scope: !4949)
!4956 = !DILocation(line: 2217, column: 33, scope: !1604)
!4957 = !DILocation(line: 2217, column: 36, scope: !1604)
!4958 = !DILocation(line: 2217, column: 12, scope: !1604)
!4959 = !DILocation(line: 2217, column: 5, scope: !1604)
!4960 = !DILocation(line: 2218, column: 1, scope: !1604)
!4961 = !DILocation(line: 2329, column: 26, scope: !592)
!4962 = !DILocation(line: 2329, column: 47, scope: !592)
!4963 = !DILocation(line: 2329, column: 63, scope: !592)
!4964 = !DILocation(line: 2331, column: 5, scope: !592)
!4965 = !DILocation(line: 2331, column: 9, scope: !592)
!4966 = !DILocation(line: 2333, column: 23, scope: !592)
!4967 = !DILocation(line: 2333, column: 26, scope: !592)
!4968 = !DILocation(line: 2333, column: 9, scope: !592)
!4969 = !DILocation(line: 2333, column: 7, scope: !592)
!4970 = !DILocation(line: 2334, column: 16, scope: !592)
!4971 = !DILocation(line: 2334, column: 25, scope: !592)
!4972 = !DILocation(line: 2334, column: 27, scope: !592)
!4973 = !DILocation(line: 2334, column: 24, scope: !592)
!4974 = !DILocation(line: 2334, column: 34, scope: !592)
!4975 = !DILocation(line: 2334, column: 36, scope: !592)
!4976 = !DILocation(line: 2334, column: 33, scope: !592)
!4977 = !DILocation(line: 2334, column: 5, scope: !592)
!4978 = !DILocation(line: 2335, column: 12, scope: !592)
!4979 = !DILocation(line: 2336, column: 1, scope: !592)
!4980 = !DILocation(line: 2335, column: 5, scope: !592)
!4981 = !DILocation(line: 2340, column: 32, scope: !600)
!4982 = !DILocation(line: 2340, column: 48, scope: !600)
!4983 = !DILocation(line: 2342, column: 5, scope: !600)
!4984 = !DILocation(line: 2342, column: 11, scope: !600)
!4985 = !DILocation(line: 2342, column: 15, scope: !600)
!4986 = !DILocation(line: 2344, column: 27, scope: !600)
!4987 = !DILocation(line: 2344, column: 5, scope: !600)
!4988 = !DILocation(line: 2345, column: 27, scope: !600)
!4989 = !DILocation(line: 2345, column: 5, scope: !600)
!4990 = !DILocation(line: 2347, column: 5, scope: !600)
!4991 = !DILocation(line: 2348, column: 5, scope: !600)
!4992 = !DILocation(line: 2350, column: 12, scope: !600)
!4993 = !DILocation(line: 2351, column: 1, scope: !600)
!4994 = !DILocation(line: 2350, column: 5, scope: !600)
!4995 = !DILocation(line: 2359, column: 30, scope: !606)
!4996 = !DILocation(line: 2359, column: 51, scope: !606)
!4997 = !DILocation(line: 2359, column: 67, scope: !606)
!4998 = !DILocation(line: 2361, column: 5, scope: !606)
!4999 = !DILocation(line: 2361, column: 9, scope: !606)
!5000 = !DILocation(line: 2363, column: 27, scope: !606)
!5001 = !DILocation(line: 2363, column: 30, scope: !606)
!5002 = !DILocation(line: 2363, column: 9, scope: !606)
!5003 = !DILocation(line: 2363, column: 7, scope: !606)
!5004 = !DILocation(line: 2364, column: 16, scope: !606)
!5005 = !DILocation(line: 2364, column: 25, scope: !606)
!5006 = !DILocation(line: 2364, column: 27, scope: !606)
!5007 = !DILocation(line: 2364, column: 24, scope: !606)
!5008 = !DILocation(line: 2364, column: 34, scope: !606)
!5009 = !DILocation(line: 2364, column: 36, scope: !606)
!5010 = !DILocation(line: 2364, column: 33, scope: !606)
!5011 = !DILocation(line: 2364, column: 5, scope: !606)
!5012 = !DILocation(line: 2365, column: 12, scope: !606)
!5013 = !DILocation(line: 2366, column: 1, scope: !606)
!5014 = !DILocation(line: 2365, column: 5, scope: !606)
!5015 = !DILocation(line: 2399, column: 20, scope: !612)
!5016 = !DILocation(line: 2399, column: 41, scope: !612)
!5017 = !DILocation(line: 2399, column: 56, scope: !612)
!5018 = !DILocation(line: 2399, column: 69, scope: !612)
!5019 = !DILocation(line: 2401, column: 5, scope: !612)
!5020 = !DILocation(line: 2401, column: 17, scope: !612)
!5021 = !DILocation(line: 2406, column: 25, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !612, file: !4, line: 2406, column: 9)
!5023 = !DILocation(line: 2406, column: 9, scope: !5022)
!5024 = !DILocation(line: 2406, column: 28, scope: !5022)
!5025 = !DILocation(line: 2406, column: 31, scope: !5026)
!5026 = !DILexicalBlockFile(scope: !5022, file: !4, discriminator: 1)
!5027 = !DILocation(line: 2406, column: 33, scope: !5022)
!5028 = !DILocation(line: 2406, column: 9, scope: !612)
!5029 = !DILocation(line: 2407, column: 26, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5022, file: !4, line: 2406, column: 39)
!5031 = !DILocation(line: 2407, column: 34, scope: !5030)
!5032 = !DILocation(line: 2407, column: 37, scope: !5030)
!5033 = !DILocation(line: 2407, column: 16, scope: !5030)
!5034 = !DILocation(line: 2407, column: 9, scope: !5030)
!5035 = !DILocation(line: 2410, column: 31, scope: !612)
!5036 = !DILocation(line: 2410, column: 34, scope: !612)
!5037 = !DILocation(line: 2410, column: 41, scope: !612)
!5038 = !DILocation(line: 2410, column: 40, scope: !612)
!5039 = !DILocation(line: 2410, column: 12, scope: !612)
!5040 = !DILocation(line: 2410, column: 10, scope: !612)
!5041 = !DILocation(line: 2411, column: 22, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !612, file: !4, line: 2411, column: 9)
!5043 = !DILocation(line: 2411, column: 30, scope: !5042)
!5044 = !DILocation(line: 2411, column: 36, scope: !5042)
!5045 = !DILocation(line: 2411, column: 10, scope: !5042)
!5046 = !DILocation(line: 2411, column: 9, scope: !612)
!5047 = !DILocation(line: 2412, column: 9, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5042, file: !4, line: 2411, column: 45)
!5049 = !DILocation(line: 2415, column: 21, scope: !612)
!5050 = !DILocation(line: 2415, column: 29, scope: !612)
!5051 = !DILocation(line: 2415, column: 35, scope: !612)
!5052 = !DILocation(line: 2415, column: 38, scope: !612)
!5053 = !DILocation(line: 2415, column: 44, scope: !612)
!5054 = !DILocation(line: 2415, column: 50, scope: !612)
!5055 = !DILocation(line: 2415, column: 53, scope: !612)
!5056 = !DILocation(line: 2415, column: 58, scope: !612)
!5057 = !DILocation(line: 2415, column: 5, scope: !612)
!5058 = !DILocation(line: 2417, column: 20, scope: !612)
!5059 = !DILocation(line: 2417, column: 28, scope: !612)
!5060 = !DILocation(line: 2417, column: 5, scope: !612)
!5061 = !DILocation(line: 2418, column: 19, scope: !612)
!5062 = !DILocation(line: 2418, column: 22, scope: !612)
!5063 = !DILocation(line: 2418, column: 5, scope: !612)
!5064 = !DILocation(line: 2418, column: 13, scope: !612)
!5065 = !DILocation(line: 2418, column: 17, scope: !612)
!5066 = !DILocation(line: 2419, column: 22, scope: !612)
!5067 = !DILocation(line: 2419, column: 25, scope: !612)
!5068 = !DILocation(line: 2419, column: 32, scope: !612)
!5069 = !DILocation(line: 2419, column: 31, scope: !612)
!5070 = !DILocation(line: 2419, column: 5, scope: !612)
!5071 = !DILocation(line: 2419, column: 13, scope: !612)
!5072 = !DILocation(line: 2419, column: 20, scope: !612)
!5073 = !DILocation(line: 2420, column: 19, scope: !612)
!5074 = !DILocation(line: 2420, column: 5, scope: !612)
!5075 = !DILocation(line: 2420, column: 13, scope: !612)
!5076 = !DILocation(line: 2420, column: 17, scope: !612)
!5077 = !DILocation(line: 2422, column: 5, scope: !612)
!5078 = !DILocation(line: 2423, column: 1, scope: !612)
!5079 = !DILocation(line: 2489, column: 28, scope: !621)
!5080 = !DILocation(line: 2489, column: 48, scope: !621)
!5081 = !DILocation(line: 2491, column: 5, scope: !621)
!5082 = !DILocation(line: 2491, column: 14, scope: !621)
!5083 = !DILocation(line: 2492, column: 5, scope: !621)
!5084 = !DILocation(line: 2492, column: 16, scope: !621)
!5085 = !DILocation(line: 2493, column: 5, scope: !621)
!5086 = !DILocation(line: 2493, column: 17, scope: !621)
!5087 = !DILocation(line: 2498, column: 25, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !621, file: !4, line: 2498, column: 9)
!5089 = !DILocation(line: 2498, column: 9, scope: !5088)
!5090 = !DILocation(line: 2498, column: 33, scope: !5088)
!5091 = !DILocation(line: 2498, column: 36, scope: !5092)
!5092 = !DILexicalBlockFile(scope: !5088, file: !4, discriminator: 1)
!5093 = !DILocation(line: 2498, column: 38, scope: !5088)
!5094 = !DILocation(line: 2498, column: 9, scope: !621)
!5095 = !DILocation(line: 2499, column: 9, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5088, file: !4, line: 2498, column: 44)
!5097 = !DILocation(line: 2502, column: 9, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !621, file: !4, line: 2502, column: 9)
!5099 = !DILocation(line: 2502, column: 14, scope: !5098)
!5100 = !DILocation(line: 2502, column: 22, scope: !5098)
!5101 = !DILocation(line: 2502, column: 11, scope: !5098)
!5102 = !DILocation(line: 2502, column: 9, scope: !621)
!5103 = !DILocation(line: 2503, column: 28, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5098, file: !4, line: 2502, column: 30)
!5105 = !DILocation(line: 2503, column: 36, scope: !5104)
!5106 = !DILocation(line: 2503, column: 42, scope: !5104)
!5107 = !DILocation(line: 2503, column: 50, scope: !5104)
!5108 = !DILocation(line: 2503, column: 56, scope: !5104)
!5109 = !DILocation(line: 2503, column: 59, scope: !5104)
!5110 = !DILocation(line: 2503, column: 67, scope: !5104)
!5111 = !DILocation(line: 2503, column: 57, scope: !5104)
!5112 = !DILocation(line: 2503, column: 15, scope: !5104)
!5113 = !DILocation(line: 2503, column: 13, scope: !5104)
!5114 = !DILocation(line: 2504, column: 23, scope: !5104)
!5115 = !DILocation(line: 2504, column: 9, scope: !5104)
!5116 = !DILocation(line: 2505, column: 5, scope: !5104)
!5117 = !DILocation(line: 2507, column: 31, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5098, file: !4, line: 2506, column: 10)
!5119 = !DILocation(line: 2507, column: 39, scope: !5118)
!5120 = !DILocation(line: 2507, column: 45, scope: !5118)
!5121 = !DILocation(line: 2507, column: 53, scope: !5118)
!5122 = !DILocation(line: 2507, column: 59, scope: !5118)
!5123 = !DILocation(line: 2507, column: 67, scope: !5118)
!5124 = !DILocation(line: 2507, column: 72, scope: !5118)
!5125 = !DILocation(line: 2507, column: 15, scope: !5118)
!5126 = !DILocation(line: 2507, column: 13, scope: !5118)
!5127 = !DILocation(line: 2508, column: 27, scope: !5118)
!5128 = !DILocation(line: 2508, column: 9, scope: !5118)
!5129 = !DILocation(line: 2508, column: 17, scope: !5118)
!5130 = !DILocation(line: 2508, column: 24, scope: !5118)
!5131 = !DILocation(line: 2509, column: 35, scope: !5118)
!5132 = !DILocation(line: 2509, column: 43, scope: !5118)
!5133 = !DILocation(line: 2509, column: 16, scope: !5118)
!5134 = !DILocation(line: 2509, column: 14, scope: !5118)
!5135 = !DILocation(line: 2511, column: 21, scope: !5118)
!5136 = !DILocation(line: 2511, column: 29, scope: !5118)
!5137 = !DILocation(line: 2511, column: 9, scope: !5118)
!5138 = !DILocation(line: 2512, column: 23, scope: !5118)
!5139 = !DILocation(line: 2512, column: 9, scope: !5118)
!5140 = !DILocation(line: 2512, column: 17, scope: !5118)
!5141 = !DILocation(line: 2512, column: 21, scope: !5118)
!5142 = !DILocation(line: 2515, column: 12, scope: !621)
!5143 = !DILocation(line: 2515, column: 5, scope: !621)
!5144 = !DILocation(line: 2516, column: 1, scope: !621)
!5145 = !DILocation(line: 2428, column: 32, scope: !1610)
!5146 = !DILocation(line: 2428, column: 50, scope: !1610)
!5147 = !DILocation(line: 2428, column: 59, scope: !1610)
!5148 = !DILocation(line: 2430, column: 5, scope: !1610)
!5149 = !DILocation(line: 2430, column: 16, scope: !1610)
!5150 = !DILocation(line: 2430, column: 25, scope: !1610)
!5151 = !DILocation(line: 2430, column: 35, scope: !1610)
!5152 = !DILocation(line: 2432, column: 17, scope: !1610)
!5153 = !DILocation(line: 2432, column: 20, scope: !1610)
!5154 = !DILocation(line: 2432, column: 12, scope: !1610)
!5155 = !DILocation(line: 2432, column: 10, scope: !1610)
!5156 = !DILocation(line: 2434, column: 9, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !1610, file: !4, line: 2434, column: 9)
!5158 = !DILocation(line: 2434, column: 9, scope: !1610)
!5159 = !DILocation(line: 2435, column: 40, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5157, file: !4, line: 2434, column: 18)
!5161 = !DILocation(line: 2435, column: 62, scope: !5160)
!5162 = !DILocation(line: 2435, column: 46, scope: !5160)
!5163 = !DILocation(line: 2435, column: 67, scope: !5160)
!5164 = !DILocation(line: 2435, column: 9, scope: !5160)
!5165 = !DILocation(line: 2436, column: 13, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5160, file: !4, line: 2436, column: 13)
!5167 = !DILocation(line: 2436, column: 17, scope: !5166)
!5168 = !DILocation(line: 2436, column: 21, scope: !5166)
!5169 = !DILocation(line: 2436, column: 24, scope: !5170)
!5170 = !DILexicalBlockFile(scope: !5166, file: !4, discriminator: 1)
!5171 = !DILocation(line: 2436, column: 29, scope: !5166)
!5172 = !DILocation(line: 2436, column: 13, scope: !5160)
!5173 = !DILocation(line: 2437, column: 37, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5166, file: !4, line: 2436, column: 35)
!5175 = !DILocation(line: 2437, column: 43, scope: !5174)
!5176 = !DILocation(line: 2437, column: 46, scope: !5174)
!5177 = !DILocation(line: 2437, column: 22, scope: !5174)
!5178 = !DILocation(line: 2437, column: 21, scope: !5174)
!5179 = !DILocation(line: 2437, column: 19, scope: !5174)
!5180 = !DILocation(line: 2438, column: 9, scope: !5174)
!5181 = !DILocation(line: 2439, column: 5, scope: !5160)
!5182 = !DILocation(line: 2441, column: 32, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5157, file: !4, line: 2440, column: 10)
!5184 = !DILocation(line: 2441, column: 38, scope: !5183)
!5185 = !DILocation(line: 2441, column: 17, scope: !5183)
!5186 = !DILocation(line: 2441, column: 16, scope: !5183)
!5187 = !DILocation(line: 2441, column: 14, scope: !5183)
!5188 = !DILocation(line: 2444, column: 13, scope: !1610)
!5189 = !DILocation(line: 2444, column: 17, scope: !1610)
!5190 = !DILocation(line: 2444, column: 22, scope: !1610)
!5191 = !DILocation(line: 2444, column: 25, scope: !5192)
!5192 = !DILexicalBlockFile(scope: !1610, file: !4, discriminator: 2)
!5193 = !DILocation(line: 2444, column: 29, scope: !1610)
!5194 = !DILocation(line: 2444, column: 12, scope: !1610)
!5195 = !DILocation(line: 2444, column: 37, scope: !5196)
!5196 = !DILexicalBlockFile(scope: !5197, file: !4, discriminator: 3)
!5197 = !DILexicalBlockFile(scope: !1610, file: !4, discriminator: 1)
!5198 = !DILocation(line: 2444, column: 45, scope: !1610)
!5199 = !DILocation(line: 2444, column: 44, scope: !1610)
!5200 = !DILocation(line: 2444, column: 43, scope: !1610)
!5201 = !DILocation(line: 2444, column: 41, scope: !1610)
!5202 = !DILocation(line: 2444, column: 52, scope: !5203)
!5203 = !DILexicalBlockFile(scope: !1610, file: !4, discriminator: 4)
!5204 = !DILocation(line: 2445, column: 1, scope: !1610)
!5205 = !DILocation(line: 2444, column: 5, scope: !1610)
!5206 = !DILocation(line: 2526, column: 20, scope: !630)
!5207 = !DILocation(line: 2526, column: 41, scope: !630)
!5208 = !DILocation(line: 2526, column: 56, scope: !630)
!5209 = !DILocation(line: 2526, column: 69, scope: !630)
!5210 = !DILocation(line: 2528, column: 5, scope: !630)
!5211 = !DILocation(line: 2528, column: 16, scope: !630)
!5212 = !DILocation(line: 2529, column: 5, scope: !630)
!5213 = !DILocation(line: 2529, column: 17, scope: !630)
!5214 = !DILocation(line: 2534, column: 25, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !630, file: !4, line: 2534, column: 9)
!5216 = !DILocation(line: 2534, column: 9, scope: !5215)
!5217 = !DILocation(line: 2534, column: 28, scope: !5215)
!5218 = !DILocation(line: 2534, column: 31, scope: !5219)
!5219 = !DILexicalBlockFile(scope: !5215, file: !4, discriminator: 1)
!5220 = !DILocation(line: 2534, column: 33, scope: !5215)
!5221 = !DILocation(line: 2534, column: 9, scope: !630)
!5222 = !DILocation(line: 2535, column: 24, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5224, file: !4, line: 2535, column: 13)
!5224 = distinct !DILexicalBlock(scope: !5215, file: !4, line: 2534, column: 39)
!5225 = !DILocation(line: 2535, column: 32, scope: !5223)
!5226 = !DILocation(line: 2535, column: 35, scope: !5223)
!5227 = !DILocation(line: 2535, column: 14, scope: !5223)
!5228 = !DILocation(line: 2535, column: 13, scope: !5224)
!5229 = !DILocation(line: 2536, column: 13, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5223, file: !4, line: 2535, column: 44)
!5231 = !DILocation(line: 2538, column: 9, scope: !5224)
!5232 = !DILocation(line: 2541, column: 9, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !630, file: !4, line: 2541, column: 9)
!5234 = !DILocation(line: 2541, column: 14, scope: !5233)
!5235 = !DILocation(line: 2541, column: 17, scope: !5233)
!5236 = !DILocation(line: 2541, column: 11, scope: !5233)
!5237 = !DILocation(line: 2541, column: 9, scope: !630)
!5238 = !DILocation(line: 2542, column: 28, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5233, file: !4, line: 2541, column: 25)
!5240 = !DILocation(line: 2542, column: 31, scope: !5239)
!5241 = !DILocation(line: 2542, column: 37, scope: !5239)
!5242 = !DILocation(line: 2542, column: 40, scope: !5239)
!5243 = !DILocation(line: 2542, column: 46, scope: !5239)
!5244 = !DILocation(line: 2542, column: 49, scope: !5239)
!5245 = !DILocation(line: 2542, column: 52, scope: !5239)
!5246 = !DILocation(line: 2542, column: 47, scope: !5239)
!5247 = !DILocation(line: 2542, column: 15, scope: !5239)
!5248 = !DILocation(line: 2542, column: 13, scope: !5239)
!5249 = !DILocation(line: 2543, column: 23, scope: !5239)
!5250 = !DILocation(line: 2543, column: 9, scope: !5239)
!5251 = !DILocation(line: 2544, column: 5, scope: !5239)
!5252 = !DILocation(line: 2546, column: 26, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5233, file: !4, line: 2545, column: 10)
!5254 = !DILocation(line: 2546, column: 29, scope: !5253)
!5255 = !DILocation(line: 2546, column: 36, scope: !5253)
!5256 = !DILocation(line: 2546, column: 35, scope: !5253)
!5257 = !DILocation(line: 2546, column: 9, scope: !5253)
!5258 = !DILocation(line: 2546, column: 17, scope: !5253)
!5259 = !DILocation(line: 2546, column: 24, scope: !5253)
!5260 = !DILocation(line: 2547, column: 35, scope: !5253)
!5261 = !DILocation(line: 2547, column: 43, scope: !5253)
!5262 = !DILocation(line: 2547, column: 16, scope: !5253)
!5263 = !DILocation(line: 2547, column: 14, scope: !5253)
!5264 = !DILocation(line: 2548, column: 13, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5253, file: !4, line: 2548, column: 13)
!5266 = !DILocation(line: 2548, column: 23, scope: !5265)
!5267 = !DILocation(line: 2548, column: 20, scope: !5265)
!5268 = !DILocation(line: 2548, column: 13, scope: !5253)
!5269 = !DILocation(line: 2549, column: 35, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5265, file: !4, line: 2548, column: 26)
!5271 = !DILocation(line: 2549, column: 43, scope: !5270)
!5272 = !DILocation(line: 2549, column: 49, scope: !5270)
!5273 = !DILocation(line: 2549, column: 52, scope: !5270)
!5274 = !DILocation(line: 2549, column: 58, scope: !5270)
!5275 = !DILocation(line: 2549, column: 61, scope: !5270)
!5276 = !DILocation(line: 2549, column: 66, scope: !5270)
!5277 = !DILocation(line: 2549, column: 19, scope: !5270)
!5278 = !DILocation(line: 2549, column: 17, scope: !5270)
!5279 = !DILocation(line: 2551, column: 25, scope: !5270)
!5280 = !DILocation(line: 2551, column: 33, scope: !5270)
!5281 = !DILocation(line: 2551, column: 39, scope: !5270)
!5282 = !DILocation(line: 2551, column: 13, scope: !5270)
!5283 = !DILocation(line: 2552, column: 9, scope: !5270)
!5284 = !DILocation(line: 2554, column: 30, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5286, file: !4, line: 2554, column: 17)
!5286 = distinct !DILexicalBlock(scope: !5265, file: !4, line: 2553, column: 14)
!5287 = !DILocation(line: 2554, column: 38, scope: !5285)
!5288 = !DILocation(line: 2554, column: 44, scope: !5285)
!5289 = !DILocation(line: 2554, column: 18, scope: !5285)
!5290 = !DILocation(line: 2554, column: 17, scope: !5286)
!5291 = !DILocation(line: 2555, column: 17, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5285, file: !4, line: 2554, column: 53)
!5293 = !DILocation(line: 2557, column: 35, scope: !5286)
!5294 = !DILocation(line: 2557, column: 43, scope: !5286)
!5295 = !DILocation(line: 2557, column: 49, scope: !5286)
!5296 = !DILocation(line: 2557, column: 52, scope: !5286)
!5297 = !DILocation(line: 2557, column: 58, scope: !5286)
!5298 = !DILocation(line: 2557, column: 61, scope: !5286)
!5299 = !DILocation(line: 2557, column: 66, scope: !5286)
!5300 = !DILocation(line: 2557, column: 19, scope: !5286)
!5301 = !DILocation(line: 2557, column: 17, scope: !5286)
!5302 = !DILocation(line: 2559, column: 23, scope: !5253)
!5303 = !DILocation(line: 2559, column: 9, scope: !5253)
!5304 = !DILocation(line: 2559, column: 17, scope: !5253)
!5305 = !DILocation(line: 2559, column: 21, scope: !5253)
!5306 = !DILocation(line: 2562, column: 20, scope: !630)
!5307 = !DILocation(line: 2562, column: 28, scope: !630)
!5308 = !DILocation(line: 2562, column: 5, scope: !630)
!5309 = !DILocation(line: 2563, column: 19, scope: !630)
!5310 = !DILocation(line: 2563, column: 22, scope: !630)
!5311 = !DILocation(line: 2563, column: 5, scope: !630)
!5312 = !DILocation(line: 2563, column: 13, scope: !630)
!5313 = !DILocation(line: 2563, column: 17, scope: !630)
!5314 = !DILocation(line: 2565, column: 12, scope: !630)
!5315 = !DILocation(line: 2565, column: 5, scope: !630)
!5316 = !DILocation(line: 2566, column: 1, scope: !630)
!5317 = !DILocation(line: 2575, column: 17, scope: !640)
!5318 = !DILocation(line: 2575, column: 38, scope: !640)
!5319 = !DILocation(line: 2575, column: 54, scope: !640)
!5320 = !DILocation(line: 2576, column: 31, scope: !640)
!5321 = !DILocation(line: 2576, column: 46, scope: !640)
!5322 = !DILocation(line: 2578, column: 5, scope: !640)
!5323 = !DILocation(line: 2578, column: 18, scope: !640)
!5324 = !DILocation(line: 2578, column: 24, scope: !640)
!5325 = !DILocation(line: 2578, column: 28, scope: !640)
!5326 = !DILocation(line: 2578, column: 36, scope: !640)
!5327 = !DILocation(line: 2579, column: 5, scope: !640)
!5328 = !DILocation(line: 2579, column: 16, scope: !640)
!5329 = !DILocation(line: 2579, column: 19, scope: !640)
!5330 = !DILocation(line: 2579, column: 22, scope: !640)
!5331 = !DILocation(line: 2579, column: 25, scope: !640)
!5332 = !DILocation(line: 2579, column: 31, scope: !640)
!5333 = !DILocation(line: 2580, column: 5, scope: !640)
!5334 = !DILocation(line: 2580, column: 9, scope: !640)
!5335 = !DILocation(line: 2580, column: 12, scope: !640)
!5336 = !DILocation(line: 2581, column: 5, scope: !640)
!5337 = !DILocation(line: 2581, column: 17, scope: !640)
!5338 = !DILocation(line: 2583, column: 23, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !640, file: !4, line: 2583, column: 9)
!5340 = !DILocation(line: 2583, column: 9, scope: !5339)
!5341 = !DILocation(line: 2583, column: 26, scope: !5339)
!5342 = !DILocation(line: 2583, column: 43, scope: !5343)
!5343 = !DILexicalBlockFile(scope: !5339, file: !4, discriminator: 1)
!5344 = !DILocation(line: 2583, column: 29, scope: !5339)
!5345 = !DILocation(line: 2583, column: 46, scope: !5339)
!5346 = !DILocation(line: 2584, column: 24, scope: !5339)
!5347 = !DILocation(line: 2584, column: 9, scope: !5339)
!5348 = !DILocation(line: 2584, column: 27, scope: !5339)
!5349 = !DILocation(line: 2584, column: 45, scope: !5343)
!5350 = !DILocation(line: 2584, column: 30, scope: !5339)
!5351 = !DILocation(line: 2584, column: 48, scope: !5339)
!5352 = !DILocation(line: 2585, column: 9, scope: !5339)
!5353 = !DILocation(line: 2585, column: 12, scope: !5339)
!5354 = !DILocation(line: 2585, column: 16, scope: !5339)
!5355 = !DILocation(line: 2585, column: 21, scope: !5339)
!5356 = !DILocation(line: 2585, column: 24, scope: !5343)
!5357 = !DILocation(line: 2585, column: 27, scope: !5339)
!5358 = !DILocation(line: 2585, column: 31, scope: !5339)
!5359 = !DILocation(line: 2583, column: 9, scope: !640)
!5360 = !DILocation(line: 2586, column: 22, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5339, file: !4, line: 2585, column: 37)
!5362 = !DILocation(line: 2586, column: 43, scope: !5361)
!5363 = !DILocation(line: 2586, column: 9, scope: !5361)
!5364 = !DILocation(line: 2587, column: 9, scope: !5361)
!5365 = !DILocation(line: 2589, column: 9, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !640, file: !4, line: 2589, column: 9)
!5367 = !DILocation(line: 2589, column: 12, scope: !5366)
!5368 = !DILocation(line: 2589, column: 21, scope: !5366)
!5369 = !DILocation(line: 2589, column: 24, scope: !5366)
!5370 = !DILocation(line: 2589, column: 19, scope: !5366)
!5371 = !DILocation(line: 2589, column: 9, scope: !640)
!5372 = !DILocation(line: 2590, column: 15, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5366, file: !4, line: 2589, column: 32)
!5374 = !DILocation(line: 2590, column: 13, scope: !5373)
!5375 = !DILocation(line: 2591, column: 17, scope: !5373)
!5376 = !DILocation(line: 2591, column: 15, scope: !5373)
!5377 = !DILocation(line: 2592, column: 5, scope: !5373)
!5378 = !DILocation(line: 2593, column: 22, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !640, file: !4, line: 2593, column: 9)
!5380 = !DILocation(line: 2593, column: 30, scope: !5379)
!5381 = !DILocation(line: 2593, column: 35, scope: !5379)
!5382 = !DILocation(line: 2593, column: 40, scope: !5379)
!5383 = !DILocation(line: 2593, column: 10, scope: !5379)
!5384 = !DILocation(line: 2593, column: 9, scope: !640)
!5385 = !DILocation(line: 2594, column: 9, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5379, file: !4, line: 2593, column: 49)
!5387 = !DILocation(line: 2599, column: 12, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !640, file: !4, line: 2599, column: 5)
!5389 = !DILocation(line: 2599, column: 10, scope: !5388)
!5390 = !DILocation(line: 2599, column: 17, scope: !5391)
!5391 = !DILexicalBlockFile(scope: !5392, file: !4, discriminator: 2)
!5392 = !DILexicalBlockFile(scope: !5393, file: !4, discriminator: 1)
!5393 = distinct !DILexicalBlock(scope: !5388, file: !4, line: 2599, column: 5)
!5394 = !DILocation(line: 2599, column: 21, scope: !5393)
!5395 = !DILocation(line: 2599, column: 28, scope: !5393)
!5396 = !DILocation(line: 2599, column: 31, scope: !5393)
!5397 = !DILocation(line: 2599, column: 19, scope: !5393)
!5398 = !DILocation(line: 2599, column: 5, scope: !5388)
!5399 = !DILocation(line: 2600, column: 25, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5393, file: !4, line: 2599, column: 40)
!5401 = !DILocation(line: 2600, column: 13, scope: !5400)
!5402 = !DILocation(line: 2600, column: 20, scope: !5400)
!5403 = !DILocation(line: 2600, column: 11, scope: !5400)
!5404 = !DILocation(line: 2601, column: 23, scope: !5400)
!5405 = !DILocation(line: 2601, column: 13, scope: !5400)
!5406 = !DILocation(line: 2601, column: 18, scope: !5400)
!5407 = !DILocation(line: 2601, column: 11, scope: !5400)
!5408 = !DILocation(line: 2602, column: 11, scope: !5400)
!5409 = !DILocation(line: 2603, column: 16, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5400, file: !4, line: 2603, column: 9)
!5411 = !DILocation(line: 2603, column: 14, scope: !5410)
!5412 = !DILocation(line: 2603, column: 21, scope: !5413)
!5413 = !DILexicalBlockFile(scope: !5414, file: !4, discriminator: 2)
!5414 = !DILexicalBlockFile(scope: !5415, file: !4, discriminator: 1)
!5415 = distinct !DILexicalBlock(scope: !5410, file: !4, line: 2603, column: 9)
!5416 = !DILocation(line: 2603, column: 23, scope: !5415)
!5417 = !DILocation(line: 2603, column: 9, scope: !5410)
!5418 = !DILocation(line: 2604, column: 20, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5415, file: !4, line: 2603, column: 34)
!5420 = !DILocation(line: 2604, column: 22, scope: !5419)
!5421 = !DILocation(line: 2604, column: 18, scope: !5419)
!5422 = !DILocation(line: 2605, column: 15, scope: !5419)
!5423 = !DILocation(line: 2606, column: 20, scope: !5419)
!5424 = !DILocation(line: 2606, column: 22, scope: !5419)
!5425 = !DILocation(line: 2606, column: 18, scope: !5419)
!5426 = !DILocation(line: 2607, column: 15, scope: !5419)
!5427 = !DILocation(line: 2608, column: 17, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5419, file: !4, line: 2608, column: 17)
!5429 = !DILocation(line: 2608, column: 22, scope: !5428)
!5430 = !DILocation(line: 2608, column: 26, scope: !5428)
!5431 = !DILocation(line: 2608, column: 29, scope: !5432)
!5432 = !DILexicalBlockFile(scope: !5428, file: !4, discriminator: 1)
!5433 = !DILocation(line: 2608, column: 34, scope: !5428)
!5434 = !DILocation(line: 2608, column: 17, scope: !5419)
!5435 = !DILocation(line: 2609, column: 17, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5428, file: !4, line: 2608, column: 39)
!5437 = !DILocation(line: 2611, column: 19, scope: !5419)
!5438 = !DILocation(line: 2611, column: 24, scope: !5419)
!5439 = !DILocation(line: 2611, column: 23, scope: !5419)
!5440 = !DILocation(line: 2611, column: 18, scope: !5419)
!5441 = !DILocation(line: 2611, column: 42, scope: !5442)
!5442 = !DILexicalBlockFile(scope: !5419, file: !4, discriminator: 1)
!5443 = !DILocation(line: 2611, column: 32, scope: !5419)
!5444 = !DILocation(line: 2611, column: 18, scope: !5445)
!5445 = !DILexicalBlockFile(scope: !5419, file: !4, discriminator: 2)
!5446 = !DILocation(line: 2611, column: 15, scope: !5447)
!5447 = !DILexicalBlockFile(scope: !5448, file: !4, discriminator: 4)
!5448 = !DILexicalBlockFile(scope: !5419, file: !4, discriminator: 3)
!5449 = !DILocation(line: 2612, column: 9, scope: !5419)
!5450 = !DILocation(line: 2603, column: 30, scope: !5415)
!5451 = !DILocation(line: 2603, column: 9, scope: !5415)
!5452 = !DILocation(line: 2613, column: 27, scope: !5400)
!5453 = !DILocation(line: 2613, column: 22, scope: !5400)
!5454 = !DILocation(line: 2613, column: 9, scope: !5400)
!5455 = !DILocation(line: 2613, column: 17, scope: !5400)
!5456 = !DILocation(line: 2613, column: 25, scope: !5400)
!5457 = !DILocation(line: 2614, column: 5, scope: !5400)
!5458 = !DILocation(line: 2599, column: 36, scope: !5393)
!5459 = !DILocation(line: 2599, column: 5, scope: !5393)
!5460 = !DILocation(line: 2616, column: 21, scope: !640)
!5461 = !DILocation(line: 2616, column: 9, scope: !640)
!5462 = !DILocation(line: 2616, column: 16, scope: !640)
!5463 = !DILocation(line: 2616, column: 7, scope: !640)
!5464 = !DILocation(line: 2617, column: 19, scope: !640)
!5465 = !DILocation(line: 2617, column: 9, scope: !640)
!5466 = !DILocation(line: 2617, column: 14, scope: !640)
!5467 = !DILocation(line: 2617, column: 7, scope: !640)
!5468 = !DILocation(line: 2618, column: 7, scope: !640)
!5469 = !DILocation(line: 2619, column: 33, scope: !640)
!5470 = !DILocation(line: 2619, column: 17, scope: !640)
!5471 = !DILocation(line: 2619, column: 15, scope: !640)
!5472 = !DILocation(line: 2620, column: 12, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !640, file: !4, line: 2620, column: 5)
!5474 = !DILocation(line: 2620, column: 10, scope: !5473)
!5475 = !DILocation(line: 2620, column: 17, scope: !5476)
!5476 = !DILexicalBlockFile(scope: !5477, file: !4, discriminator: 2)
!5477 = !DILexicalBlockFile(scope: !5478, file: !4, discriminator: 1)
!5478 = distinct !DILexicalBlock(scope: !5473, file: !4, line: 2620, column: 5)
!5479 = !DILocation(line: 2620, column: 21, scope: !5478)
!5480 = !DILocation(line: 2620, column: 19, scope: !5478)
!5481 = !DILocation(line: 2620, column: 5, scope: !5473)
!5482 = !DILocation(line: 2621, column: 16, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5478, file: !4, line: 2620, column: 37)
!5484 = !DILocation(line: 2621, column: 18, scope: !5483)
!5485 = !DILocation(line: 2621, column: 14, scope: !5483)
!5486 = !DILocation(line: 2622, column: 11, scope: !5483)
!5487 = !DILocation(line: 2623, column: 16, scope: !5483)
!5488 = !DILocation(line: 2623, column: 18, scope: !5483)
!5489 = !DILocation(line: 2623, column: 14, scope: !5483)
!5490 = !DILocation(line: 2624, column: 11, scope: !5483)
!5491 = !DILocation(line: 2625, column: 13, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5483, file: !4, line: 2625, column: 13)
!5493 = !DILocation(line: 2625, column: 18, scope: !5492)
!5494 = !DILocation(line: 2625, column: 22, scope: !5492)
!5495 = !DILocation(line: 2625, column: 25, scope: !5496)
!5496 = !DILexicalBlockFile(scope: !5492, file: !4, discriminator: 1)
!5497 = !DILocation(line: 2625, column: 30, scope: !5492)
!5498 = !DILocation(line: 2625, column: 13, scope: !5483)
!5499 = !DILocation(line: 2626, column: 13, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5492, file: !4, line: 2625, column: 35)
!5501 = !DILocation(line: 2628, column: 15, scope: !5483)
!5502 = !DILocation(line: 2628, column: 20, scope: !5483)
!5503 = !DILocation(line: 2628, column: 19, scope: !5483)
!5504 = !DILocation(line: 2628, column: 14, scope: !5483)
!5505 = !DILocation(line: 2628, column: 38, scope: !5506)
!5506 = !DILexicalBlockFile(scope: !5483, file: !4, discriminator: 1)
!5507 = !DILocation(line: 2628, column: 28, scope: !5483)
!5508 = !DILocation(line: 2628, column: 14, scope: !5509)
!5509 = !DILexicalBlockFile(scope: !5483, file: !4, discriminator: 2)
!5510 = !DILocation(line: 2628, column: 11, scope: !5511)
!5511 = !DILexicalBlockFile(scope: !5512, file: !4, discriminator: 4)
!5512 = !DILexicalBlockFile(scope: !5483, file: !4, discriminator: 3)
!5513 = !DILocation(line: 2629, column: 5, scope: !5483)
!5514 = !DILocation(line: 2620, column: 33, scope: !5478)
!5515 = !DILocation(line: 2620, column: 5, scope: !5478)
!5516 = !DILocation(line: 2630, column: 25, scope: !640)
!5517 = !DILocation(line: 2630, column: 19, scope: !640)
!5518 = !DILocation(line: 2630, column: 5, scope: !640)
!5519 = !DILocation(line: 2630, column: 13, scope: !640)
!5520 = !DILocation(line: 2630, column: 23, scope: !640)
!5521 = !DILocation(line: 2633, column: 5, scope: !640)
!5522 = !DILocation(line: 2633, column: 12, scope: !5523)
!5523 = !DILexicalBlockFile(scope: !5524, file: !4, discriminator: 2)
!5524 = !DILexicalBlockFile(scope: !5525, file: !4, discriminator: 1)
!5525 = distinct !DILexicalBlock(scope: !5526, file: !4, line: 2633, column: 5)
!5526 = distinct !DILexicalBlock(scope: !640, file: !4, line: 2633, column: 5)
!5527 = !DILocation(line: 2633, column: 14, scope: !5525)
!5528 = !DILocation(line: 2633, column: 5, scope: !5526)
!5529 = !DILocation(line: 2634, column: 16, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5525, file: !4, line: 2633, column: 25)
!5531 = !DILocation(line: 2634, column: 18, scope: !5530)
!5532 = !DILocation(line: 2634, column: 14, scope: !5530)
!5533 = !DILocation(line: 2635, column: 11, scope: !5530)
!5534 = !DILocation(line: 2636, column: 13, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5530, file: !4, line: 2636, column: 13)
!5536 = !DILocation(line: 2636, column: 18, scope: !5535)
!5537 = !DILocation(line: 2636, column: 13, scope: !5530)
!5538 = !DILocation(line: 2637, column: 13, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5535, file: !4, line: 2636, column: 23)
!5540 = !DILocation(line: 2639, column: 5, scope: !5530)
!5541 = !DILocation(line: 2633, column: 21, scope: !5525)
!5542 = !DILocation(line: 2633, column: 5, scope: !5525)
!5543 = !DILocation(line: 2641, column: 5, scope: !640)
!5544 = !DILocation(line: 2641, column: 12, scope: !5545)
!5545 = !DILexicalBlockFile(scope: !5546, file: !4, discriminator: 2)
!5546 = !DILexicalBlockFile(scope: !5547, file: !4, discriminator: 1)
!5547 = distinct !DILexicalBlock(scope: !5548, file: !4, line: 2641, column: 5)
!5548 = distinct !DILexicalBlock(scope: !640, file: !4, line: 2641, column: 5)
!5549 = !DILocation(line: 2641, column: 16, scope: !5547)
!5550 = !DILocation(line: 2641, column: 21, scope: !5547)
!5551 = !DILocation(line: 2641, column: 14, scope: !5547)
!5552 = !DILocation(line: 2641, column: 5, scope: !5548)
!5553 = !DILocation(line: 2642, column: 23, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5547, file: !4, line: 2641, column: 31)
!5555 = !DILocation(line: 2642, column: 13, scope: !5554)
!5556 = !DILocation(line: 2642, column: 18, scope: !5554)
!5557 = !DILocation(line: 2642, column: 11, scope: !5554)
!5558 = !DILocation(line: 2643, column: 16, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5554, file: !4, line: 2643, column: 9)
!5560 = !DILocation(line: 2643, column: 14, scope: !5559)
!5561 = !DILocation(line: 2643, column: 21, scope: !5562)
!5562 = !DILexicalBlockFile(scope: !5563, file: !4, discriminator: 2)
!5563 = !DILexicalBlockFile(scope: !5564, file: !4, discriminator: 1)
!5564 = distinct !DILexicalBlock(scope: !5559, file: !4, line: 2643, column: 9)
!5565 = !DILocation(line: 2643, column: 23, scope: !5564)
!5566 = !DILocation(line: 2643, column: 9, scope: !5559)
!5567 = !DILocation(line: 2644, column: 20, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5564, file: !4, line: 2643, column: 34)
!5569 = !DILocation(line: 2644, column: 22, scope: !5568)
!5570 = !DILocation(line: 2644, column: 18, scope: !5568)
!5571 = !DILocation(line: 2645, column: 15, scope: !5568)
!5572 = !DILocation(line: 2646, column: 17, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5568, file: !4, line: 2646, column: 17)
!5574 = !DILocation(line: 2646, column: 22, scope: !5573)
!5575 = !DILocation(line: 2646, column: 17, scope: !5568)
!5576 = !DILocation(line: 2647, column: 17, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5573, file: !4, line: 2646, column: 27)
!5578 = !DILocation(line: 2649, column: 9, scope: !5568)
!5579 = !DILocation(line: 2643, column: 30, scope: !5564)
!5580 = !DILocation(line: 2643, column: 9, scope: !5564)
!5581 = !DILocation(line: 2650, column: 5, scope: !5554)
!5582 = !DILocation(line: 2641, column: 27, scope: !5547)
!5583 = !DILocation(line: 2641, column: 5, scope: !5547)
!5584 = !DILocation(line: 2652, column: 21, scope: !640)
!5585 = !DILocation(line: 2652, column: 5, scope: !640)
!5586 = !DILocation(line: 2653, column: 5, scope: !640)
!5587 = !DILocation(line: 2653, column: 13, scope: !640)
!5588 = !DILocation(line: 2653, column: 17, scope: !640)
!5589 = !DILocation(line: 2654, column: 34, scope: !640)
!5590 = !DILocation(line: 2654, column: 42, scope: !640)
!5591 = !DILocation(line: 2654, column: 48, scope: !640)
!5592 = !DILocation(line: 2654, column: 55, scope: !640)
!5593 = !DILocation(line: 2654, column: 19, scope: !640)
!5594 = !DILocation(line: 2654, column: 5, scope: !640)
!5595 = !DILocation(line: 2654, column: 13, scope: !640)
!5596 = !DILocation(line: 2654, column: 17, scope: !640)
!5597 = !DILocation(line: 2655, column: 17, scope: !640)
!5598 = !DILocation(line: 2655, column: 25, scope: !640)
!5599 = !DILocation(line: 2655, column: 33, scope: !640)
!5600 = !DILocation(line: 2655, column: 38, scope: !640)
!5601 = !DILocation(line: 2655, column: 5, scope: !640)
!5602 = !DILocation(line: 2656, column: 19, scope: !640)
!5603 = !DILocation(line: 2656, column: 5, scope: !640)
!5604 = !DILocation(line: 2657, column: 14, scope: !640)
!5605 = !DILocation(line: 2657, column: 22, scope: !640)
!5606 = !DILocation(line: 2657, column: 5, scope: !640)
!5607 = !DILocation(line: 2658, column: 5, scope: !640)
!5608 = !DILocation(line: 2661, column: 18, scope: !640)
!5609 = !DILocation(line: 2661, column: 39, scope: !640)
!5610 = !DILocation(line: 2661, column: 5, scope: !640)
!5611 = !DILocation(line: 2662, column: 1, scope: !640)
!5612 = !DILocation(line: 2662, column: 1, scope: !5613)
!5613 = !DILexicalBlockFile(scope: !640, file: !4, discriminator: 1)
!5614 = !DILocation(line: 884, column: 28, scope: !1620)
!5615 = !DILocation(line: 884, column: 46, scope: !1620)
!5616 = !DILocation(line: 886, column: 5, scope: !1620)
!5617 = !DILocation(line: 886, column: 12, scope: !5618)
!5618 = !DILexicalBlockFile(scope: !5619, file: !4, discriminator: 4)
!5619 = !DILexicalBlockFile(scope: !1620, file: !4, discriminator: 1)
!5620 = !DILocation(line: 886, column: 17, scope: !1620)
!5621 = !DILocation(line: 886, column: 21, scope: !1620)
!5622 = !DILocation(line: 886, column: 29, scope: !5623)
!5623 = !DILexicalBlockFile(scope: !1620, file: !4, discriminator: 2)
!5624 = !DILocation(line: 886, column: 33, scope: !1620)
!5625 = !DILocation(line: 886, column: 24, scope: !1620)
!5626 = !DILocation(line: 886, column: 37, scope: !1620)
!5627 = !DILocation(line: 886, column: 5, scope: !5628)
!5628 = !DILexicalBlockFile(scope: !1620, file: !4, discriminator: 3)
!5629 = !DILocation(line: 887, column: 13, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !1620, file: !4, line: 886, column: 43)
!5631 = !DILocation(line: 890, column: 12, scope: !1620)
!5632 = !DILocation(line: 890, column: 5, scope: !1620)
!5633 = !DILocation(line: 782, column: 17, scope: !1626)
!5634 = !DILocation(line: 782, column: 46, scope: !1626)
!5635 = !DILocation(line: 784, column: 5, scope: !1626)
!5636 = !DILocation(line: 784, column: 14, scope: !1626)
!5637 = !DILocation(line: 785, column: 5, scope: !1626)
!5638 = !DILocation(line: 785, column: 17, scope: !1626)
!5639 = !DILocation(line: 785, column: 22, scope: !1626)
!5640 = !DILocation(line: 787, column: 9, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !1626, file: !4, line: 787, column: 9)
!5642 = !DILocation(line: 787, column: 17, scope: !5641)
!5643 = !DILocation(line: 787, column: 21, scope: !5641)
!5644 = !DILocation(line: 787, column: 25, scope: !5641)
!5645 = !DILocation(line: 787, column: 28, scope: !5646)
!5646 = !DILexicalBlockFile(scope: !5641, file: !4, discriminator: 1)
!5647 = !DILocation(line: 787, column: 36, scope: !5641)
!5648 = !DILocation(line: 787, column: 45, scope: !5641)
!5649 = !DILocation(line: 787, column: 50, scope: !5641)
!5650 = !DILocation(line: 787, column: 43, scope: !5641)
!5651 = !DILocation(line: 787, column: 9, scope: !1626)
!5652 = !DILocation(line: 788, column: 34, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5641, file: !4, line: 787, column: 56)
!5654 = !DILocation(line: 788, column: 39, scope: !5653)
!5655 = !DILocation(line: 788, column: 9, scope: !5653)
!5656 = !DILocation(line: 789, column: 16, scope: !5653)
!5657 = !DILocation(line: 789, column: 18, scope: !5653)
!5658 = !DILocation(line: 789, column: 15, scope: !5653)
!5659 = !DILocation(line: 789, column: 26, scope: !5660)
!5660 = !DILexicalBlockFile(scope: !5653, file: !4, discriminator: 1)
!5661 = !DILocation(line: 789, column: 32, scope: !5662)
!5662 = !DILexicalBlockFile(scope: !5653, file: !4, discriminator: 2)
!5663 = !DILocation(line: 789, column: 35, scope: !5653)
!5664 = !DILocation(line: 789, column: 13, scope: !5665)
!5665 = !DILexicalBlockFile(scope: !5666, file: !4, discriminator: 4)
!5666 = !DILexicalBlockFile(scope: !5653, file: !4, discriminator: 3)
!5667 = !DILocation(line: 791, column: 13, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5653, file: !4, line: 791, column: 13)
!5669 = !DILocation(line: 791, column: 15, scope: !5668)
!5670 = !DILocation(line: 791, column: 13, scope: !5653)
!5671 = !DILocation(line: 792, column: 46, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5668, file: !4, line: 791, column: 21)
!5673 = !DILocation(line: 792, column: 36, scope: !5672)
!5674 = !DILocation(line: 792, column: 26, scope: !5672)
!5675 = !DILocation(line: 792, column: 29, scope: !5672)
!5676 = !DILocation(line: 792, column: 13, scope: !5672)
!5677 = !DILocation(line: 792, column: 21, scope: !5672)
!5678 = !DILocation(line: 792, column: 33, scope: !5672)
!5679 = !DILocation(line: 793, column: 9, scope: !5672)
!5680 = !DILocation(line: 795, column: 30, scope: !5653)
!5681 = !DILocation(line: 795, column: 38, scope: !5653)
!5682 = !DILocation(line: 795, column: 44, scope: !5653)
!5683 = !DILocation(line: 795, column: 15, scope: !5653)
!5684 = !DILocation(line: 795, column: 13, scope: !5653)
!5685 = !DILocation(line: 797, column: 21, scope: !5653)
!5686 = !DILocation(line: 797, column: 29, scope: !5653)
!5687 = !DILocation(line: 797, column: 9, scope: !5653)
!5688 = !DILocation(line: 798, column: 23, scope: !5653)
!5689 = !DILocation(line: 798, column: 9, scope: !5653)
!5690 = !DILocation(line: 798, column: 17, scope: !5653)
!5691 = !DILocation(line: 798, column: 21, scope: !5653)
!5692 = !DILocation(line: 799, column: 23, scope: !5653)
!5693 = !DILocation(line: 799, column: 9, scope: !5653)
!5694 = !DILocation(line: 800, column: 5, scope: !5653)
!5695 = !DILocation(line: 801, column: 20, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !1626, file: !4, line: 801, column: 9)
!5697 = !DILocation(line: 801, column: 9, scope: !5696)
!5698 = !DILocation(line: 801, column: 9, scope: !1626)
!5699 = !DILocation(line: 802, column: 20, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5696, file: !4, line: 801, column: 29)
!5701 = !DILocation(line: 802, column: 37, scope: !5700)
!5702 = !DILocation(line: 802, column: 28, scope: !5700)
!5703 = !DILocation(line: 802, column: 49, scope: !5700)
!5704 = !DILocation(line: 802, column: 57, scope: !5700)
!5705 = !DILocation(line: 802, column: 9, scope: !5700)
!5706 = !DILocation(line: 803, column: 5, scope: !5700)
!5707 = !DILocation(line: 804, column: 1, scope: !1626)
!5708 = !DILocation(line: 2666, column: 24, scope: !659)
!5709 = !DILocation(line: 2666, column: 48, scope: !659)
!5710 = !DILocation(line: 2668, column: 19, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !659, file: !4, line: 2668, column: 9)
!5712 = !DILocation(line: 2668, column: 9, scope: !5711)
!5713 = !DILocation(line: 2668, column: 9, scope: !659)
!5714 = !DILocation(line: 2669, column: 24, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5716, file: !4, line: 2669, column: 13)
!5716 = distinct !DILexicalBlock(scope: !5711, file: !4, line: 2668, column: 23)
!5717 = !DILocation(line: 2669, column: 13, scope: !5715)
!5718 = !DILocation(line: 2669, column: 13, scope: !5716)
!5719 = !DILocation(line: 2670, column: 13, scope: !5715)
!5720 = !DILocation(line: 2672, column: 13, scope: !5715)
!5721 = !DILocation(line: 2674, column: 29, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5711, file: !4, line: 2674, column: 14)
!5723 = !DILocation(line: 2674, column: 14, scope: !5722)
!5724 = !DILocation(line: 2674, column: 14, scope: !5711)
!5725 = !DILocation(line: 2675, column: 28, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5727, file: !4, line: 2675, column: 13)
!5727 = distinct !DILexicalBlock(scope: !5722, file: !4, line: 2674, column: 33)
!5728 = !DILocation(line: 2675, column: 13, scope: !5726)
!5729 = !DILocation(line: 2675, column: 13, scope: !5727)
!5730 = !DILocation(line: 2676, column: 13, scope: !5726)
!5731 = !DILocation(line: 2677, column: 29, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5726, file: !4, line: 2677, column: 18)
!5733 = !DILocation(line: 2677, column: 18, scope: !5732)
!5734 = !DILocation(line: 2677, column: 18, scope: !5726)
!5735 = !DILocation(line: 2678, column: 13, scope: !5732)
!5736 = !DILocation(line: 2679, column: 31, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5732, file: !4, line: 2679, column: 18)
!5738 = !DILocation(line: 2679, column: 34, scope: !5737)
!5739 = !DILocation(line: 2679, column: 18, scope: !5737)
!5740 = !DILocation(line: 2679, column: 18, scope: !5732)
!5741 = !DILocation(line: 2680, column: 13, scope: !5737)
!5742 = !DILocation(line: 2682, column: 13, scope: !5737)
!5743 = !DILocation(line: 2685, column: 28, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5745, file: !4, line: 2685, column: 13)
!5745 = distinct !DILexicalBlock(scope: !5722, file: !4, line: 2684, column: 10)
!5746 = !DILocation(line: 2685, column: 13, scope: !5744)
!5747 = !DILocation(line: 2685, column: 13, scope: !5745)
!5748 = !DILocation(line: 2686, column: 13, scope: !5744)
!5749 = !DILocation(line: 2687, column: 29, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5744, file: !4, line: 2687, column: 18)
!5751 = !DILocation(line: 2687, column: 18, scope: !5750)
!5752 = !DILocation(line: 2687, column: 18, scope: !5744)
!5753 = !DILocation(line: 2688, column: 13, scope: !5750)
!5754 = !DILocation(line: 2689, column: 31, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5750, file: !4, line: 2689, column: 18)
!5756 = !DILocation(line: 2689, column: 34, scope: !5755)
!5757 = !DILocation(line: 2689, column: 18, scope: !5755)
!5758 = !DILocation(line: 2689, column: 18, scope: !5750)
!5759 = !DILocation(line: 2690, column: 13, scope: !5755)
!5760 = !DILocation(line: 2692, column: 13, scope: !5755)
!5761 = !DILocation(line: 2694, column: 1, scope: !659)
!5762 = !DILocation(line: 2698, column: 20, scope: !665)
!5763 = !DILocation(line: 2698, column: 41, scope: !665)
!5764 = !DILocation(line: 2698, column: 65, scope: !665)
!5765 = !DILocation(line: 2699, column: 23, scope: !665)
!5766 = !DILocation(line: 2701, column: 5, scope: !665)
!5767 = !DILocation(line: 2701, column: 16, scope: !665)
!5768 = !DILocation(line: 2701, column: 19, scope: !665)
!5769 = !DILocation(line: 2701, column: 22, scope: !665)
!5770 = !DILocation(line: 2702, column: 5, scope: !665)
!5771 = !DILocation(line: 2702, column: 17, scope: !665)
!5772 = !DILocation(line: 2702, column: 20, scope: !665)
!5773 = !DILocation(line: 2702, column: 28, scope: !665)
!5774 = !DILocation(line: 2703, column: 5, scope: !665)
!5775 = !DILocation(line: 2703, column: 17, scope: !665)
!5776 = !DILocation(line: 2703, column: 20, scope: !665)
!5777 = !DILocation(line: 2704, column: 5, scope: !665)
!5778 = !DILocation(line: 2704, column: 9, scope: !665)
!5779 = !DILocation(line: 2706, column: 23, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !665, file: !4, line: 2706, column: 9)
!5781 = !DILocation(line: 2706, column: 9, scope: !5780)
!5782 = !DILocation(line: 2706, column: 26, scope: !5780)
!5783 = !DILocation(line: 2706, column: 44, scope: !5784)
!5784 = !DILexicalBlockFile(scope: !5780, file: !4, discriminator: 1)
!5785 = !DILocation(line: 2706, column: 29, scope: !5780)
!5786 = !DILocation(line: 2706, column: 47, scope: !5780)
!5787 = !DILocation(line: 2706, column: 50, scope: !5788)
!5788 = !DILexicalBlockFile(scope: !5780, file: !4, discriminator: 2)
!5789 = !DILocation(line: 2706, column: 53, scope: !5780)
!5790 = !DILocation(line: 2706, column: 57, scope: !5780)
!5791 = !DILocation(line: 2706, column: 9, scope: !665)
!5792 = !DILocation(line: 2707, column: 22, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5780, file: !4, line: 2706, column: 63)
!5794 = !DILocation(line: 2707, column: 43, scope: !5793)
!5795 = !DILocation(line: 2707, column: 9, scope: !5793)
!5796 = !DILocation(line: 2708, column: 9, scope: !5793)
!5797 = !DILocation(line: 2711, column: 15, scope: !665)
!5798 = !DILocation(line: 2711, column: 18, scope: !665)
!5799 = !DILocation(line: 2711, column: 27, scope: !665)
!5800 = !DILocation(line: 2711, column: 32, scope: !665)
!5801 = !DILocation(line: 2711, column: 25, scope: !665)
!5802 = !DILocation(line: 2711, column: 14, scope: !665)
!5803 = !DILocation(line: 2711, column: 40, scope: !5804)
!5804 = !DILexicalBlockFile(scope: !665, file: !4, discriminator: 1)
!5805 = !DILocation(line: 2711, column: 45, scope: !665)
!5806 = !DILocation(line: 2711, column: 52, scope: !5807)
!5807 = !DILexicalBlockFile(scope: !665, file: !4, discriminator: 2)
!5808 = !DILocation(line: 2711, column: 55, scope: !665)
!5809 = !DILocation(line: 2711, column: 12, scope: !5810)
!5810 = !DILexicalBlockFile(scope: !5811, file: !4, discriminator: 4)
!5811 = !DILexicalBlockFile(scope: !665, file: !4, discriminator: 3)
!5812 = !DILocation(line: 2712, column: 28, scope: !665)
!5813 = !DILocation(line: 2712, column: 5, scope: !665)
!5814 = !DILocation(line: 2713, column: 12, scope: !665)
!5815 = !DILocation(line: 2713, column: 14, scope: !665)
!5816 = !DILocation(line: 2713, column: 11, scope: !665)
!5817 = !DILocation(line: 2713, column: 22, scope: !5804)
!5818 = !DILocation(line: 2713, column: 26, scope: !5807)
!5819 = !DILocation(line: 2713, column: 27, scope: !665)
!5820 = !DILocation(line: 2713, column: 9, scope: !5810)
!5821 = !DILocation(line: 2714, column: 22, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !665, file: !4, line: 2714, column: 9)
!5823 = !DILocation(line: 2714, column: 30, scope: !5822)
!5824 = !DILocation(line: 2714, column: 35, scope: !5822)
!5825 = !DILocation(line: 2714, column: 10, scope: !5822)
!5826 = !DILocation(line: 2714, column: 9, scope: !665)
!5827 = !DILocation(line: 2715, column: 9, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5822, file: !4, line: 2714, column: 44)
!5829 = !DILocation(line: 2718, column: 12, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !665, file: !4, line: 2718, column: 5)
!5831 = !DILocation(line: 2718, column: 10, scope: !5830)
!5832 = !DILocation(line: 2718, column: 17, scope: !5833)
!5833 = !DILexicalBlockFile(scope: !5834, file: !4, discriminator: 2)
!5834 = !DILexicalBlockFile(scope: !5835, file: !4, discriminator: 1)
!5835 = distinct !DILexicalBlock(scope: !5830, file: !4, line: 2718, column: 5)
!5836 = !DILocation(line: 2718, column: 21, scope: !5835)
!5837 = !DILocation(line: 2718, column: 19, scope: !5835)
!5838 = !DILocation(line: 2718, column: 5, scope: !5830)
!5839 = !DILocation(line: 2719, column: 14, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5835, file: !4, line: 2718, column: 31)
!5841 = !DILocation(line: 2719, column: 18, scope: !5840)
!5842 = !DILocation(line: 2719, column: 21, scope: !5840)
!5843 = !DILocation(line: 2719, column: 16, scope: !5840)
!5844 = !DILocation(line: 2719, column: 13, scope: !5840)
!5845 = !DILocation(line: 2719, column: 36, scope: !5846)
!5846 = !DILexicalBlockFile(scope: !5840, file: !4, discriminator: 1)
!5847 = !DILocation(line: 2719, column: 28, scope: !5840)
!5848 = !DILocation(line: 2719, column: 31, scope: !5840)
!5849 = !DILocation(line: 2719, column: 13, scope: !5850)
!5850 = !DILexicalBlockFile(scope: !5840, file: !4, discriminator: 2)
!5851 = !DILocation(line: 2719, column: 11, scope: !5852)
!5852 = !DILexicalBlockFile(scope: !5853, file: !4, discriminator: 4)
!5853 = !DILexicalBlockFile(scope: !5840, file: !4, discriminator: 3)
!5854 = !DILocation(line: 2720, column: 11, scope: !5840)
!5855 = !DILocation(line: 2721, column: 16, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5840, file: !4, line: 2721, column: 9)
!5857 = !DILocation(line: 2721, column: 14, scope: !5856)
!5858 = !DILocation(line: 2721, column: 21, scope: !5859)
!5859 = !DILexicalBlockFile(scope: !5860, file: !4, discriminator: 2)
!5860 = !DILexicalBlockFile(scope: !5861, file: !4, discriminator: 1)
!5861 = distinct !DILexicalBlock(scope: !5856, file: !4, line: 2721, column: 9)
!5862 = !DILocation(line: 2721, column: 23, scope: !5861)
!5863 = !DILocation(line: 2721, column: 9, scope: !5856)
!5864 = !DILocation(line: 2722, column: 20, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5861, file: !4, line: 2721, column: 34)
!5866 = !DILocation(line: 2722, column: 22, scope: !5865)
!5867 = !DILocation(line: 2722, column: 18, scope: !5865)
!5868 = !DILocation(line: 2723, column: 15, scope: !5865)
!5869 = !DILocation(line: 2724, column: 17, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5865, file: !4, line: 2724, column: 17)
!5871 = !DILocation(line: 2724, column: 22, scope: !5870)
!5872 = !DILocation(line: 2724, column: 17, scope: !5865)
!5873 = !DILocation(line: 2725, column: 17, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5870, file: !4, line: 2724, column: 27)
!5875 = !DILocation(line: 2727, column: 19, scope: !5865)
!5876 = !DILocation(line: 2727, column: 18, scope: !5865)
!5877 = !DILocation(line: 2727, column: 36, scope: !5878)
!5878 = !DILexicalBlockFile(scope: !5865, file: !4, discriminator: 2)
!5879 = !DILocation(line: 2727, column: 26, scope: !5865)
!5880 = !DILocation(line: 2727, column: 18, scope: !5881)
!5881 = !DILexicalBlockFile(scope: !5865, file: !4, discriminator: 1)
!5882 = !DILocation(line: 2727, column: 15, scope: !5883)
!5883 = !DILexicalBlockFile(scope: !5884, file: !4, discriminator: 4)
!5884 = !DILexicalBlockFile(scope: !5865, file: !4, discriminator: 3)
!5885 = !DILocation(line: 2728, column: 9, scope: !5865)
!5886 = !DILocation(line: 2721, column: 30, scope: !5861)
!5887 = !DILocation(line: 2721, column: 9, scope: !5861)
!5888 = !DILocation(line: 2729, column: 27, scope: !5840)
!5889 = !DILocation(line: 2729, column: 22, scope: !5840)
!5890 = !DILocation(line: 2729, column: 9, scope: !5840)
!5891 = !DILocation(line: 2729, column: 17, scope: !5840)
!5892 = !DILocation(line: 2729, column: 25, scope: !5840)
!5893 = !DILocation(line: 2730, column: 5, scope: !5840)
!5894 = !DILocation(line: 2718, column: 27, scope: !5835)
!5895 = !DILocation(line: 2718, column: 5, scope: !5835)
!5896 = !DILocation(line: 2732, column: 21, scope: !665)
!5897 = !DILocation(line: 2732, column: 5, scope: !665)
!5898 = !DILocation(line: 2733, column: 5, scope: !665)
!5899 = !DILocation(line: 2733, column: 13, scope: !665)
!5900 = !DILocation(line: 2733, column: 17, scope: !665)
!5901 = !DILocation(line: 2734, column: 34, scope: !665)
!5902 = !DILocation(line: 2734, column: 42, scope: !665)
!5903 = !DILocation(line: 2734, column: 48, scope: !665)
!5904 = !DILocation(line: 2734, column: 19, scope: !665)
!5905 = !DILocation(line: 2734, column: 5, scope: !665)
!5906 = !DILocation(line: 2734, column: 13, scope: !665)
!5907 = !DILocation(line: 2734, column: 17, scope: !665)
!5908 = !DILocation(line: 2735, column: 17, scope: !665)
!5909 = !DILocation(line: 2735, column: 25, scope: !665)
!5910 = !DILocation(line: 2735, column: 33, scope: !665)
!5911 = !DILocation(line: 2735, column: 38, scope: !665)
!5912 = !DILocation(line: 2735, column: 5, scope: !665)
!5913 = !DILocation(line: 2736, column: 19, scope: !665)
!5914 = !DILocation(line: 2736, column: 5, scope: !665)
!5915 = !DILocation(line: 2737, column: 14, scope: !665)
!5916 = !DILocation(line: 2737, column: 22, scope: !665)
!5917 = !DILocation(line: 2737, column: 5, scope: !665)
!5918 = !DILocation(line: 2738, column: 5, scope: !665)
!5919 = !DILocation(line: 2741, column: 18, scope: !665)
!5920 = !DILocation(line: 2741, column: 39, scope: !665)
!5921 = !DILocation(line: 2741, column: 5, scope: !665)
!5922 = !DILocation(line: 2742, column: 1, scope: !665)
!5923 = !DILocation(line: 2742, column: 1, scope: !5804)
!5924 = !DILocation(line: 2746, column: 18, scope: !682)
!5925 = !DILocation(line: 2746, column: 39, scope: !682)
!5926 = !DILocation(line: 2746, column: 63, scope: !682)
!5927 = !DILocation(line: 2747, column: 21, scope: !682)
!5928 = !DILocation(line: 2749, column: 23, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !682, file: !4, line: 2749, column: 9)
!5930 = !DILocation(line: 2749, column: 9, scope: !5929)
!5931 = !DILocation(line: 2749, column: 9, scope: !682)
!5932 = !DILocation(line: 2750, column: 28, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5934, file: !4, line: 2750, column: 13)
!5934 = distinct !DILexicalBlock(scope: !5929, file: !4, line: 2749, column: 27)
!5935 = !DILocation(line: 2750, column: 36, scope: !5933)
!5936 = !DILocation(line: 2750, column: 39, scope: !5933)
!5937 = !DILocation(line: 2750, column: 44, scope: !5933)
!5938 = !DILocation(line: 2750, column: 13, scope: !5933)
!5939 = !DILocation(line: 2750, column: 13, scope: !5934)
!5940 = !DILocation(line: 2751, column: 13, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5933, file: !4, line: 2750, column: 53)
!5942 = !DILocation(line: 2753, column: 24, scope: !5934)
!5943 = !DILocation(line: 2753, column: 9, scope: !5934)
!5944 = !DILocation(line: 2754, column: 5, scope: !5934)
!5945 = !DILocation(line: 2755, column: 30, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5929, file: !4, line: 2755, column: 14)
!5947 = !DILocation(line: 2755, column: 14, scope: !5946)
!5948 = !DILocation(line: 2755, column: 14, scope: !5929)
!5949 = !DILocation(line: 2756, column: 24, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5946, file: !4, line: 2755, column: 34)
!5951 = !DILocation(line: 2756, column: 9, scope: !5950)
!5952 = !DILocation(line: 2757, column: 10, scope: !5950)
!5953 = !DILocation(line: 2757, column: 17, scope: !5950)
!5954 = !DILocation(line: 2758, column: 5, scope: !5950)
!5955 = !DILocation(line: 2760, column: 24, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5946, file: !4, line: 2759, column: 10)
!5957 = !DILocation(line: 2760, column: 43, scope: !5956)
!5958 = !DILocation(line: 2760, column: 32, scope: !5956)
!5959 = !DILocation(line: 2760, column: 47, scope: !5956)
!5960 = !DILocation(line: 2760, column: 52, scope: !5956)
!5961 = !DILocation(line: 2760, column: 9, scope: !5956)
!5962 = !DILocation(line: 2762, column: 1, scope: !682)
!5963 = !DILocation(line: 2766, column: 16, scope: !688)
!5964 = !DILocation(line: 2766, column: 37, scope: !688)
!5965 = !DILocation(line: 2766, column: 53, scope: !688)
!5966 = !DILocation(line: 2767, column: 30, scope: !688)
!5967 = !DILocation(line: 2767, column: 45, scope: !688)
!5968 = !DILocation(line: 2769, column: 5, scope: !688)
!5969 = !DILocation(line: 2769, column: 18, scope: !688)
!5970 = !DILocation(line: 2769, column: 24, scope: !688)
!5971 = !DILocation(line: 2769, column: 28, scope: !688)
!5972 = !DILocation(line: 2769, column: 36, scope: !688)
!5973 = !DILocation(line: 2770, column: 5, scope: !688)
!5974 = !DILocation(line: 2770, column: 16, scope: !688)
!5975 = !DILocation(line: 2770, column: 19, scope: !688)
!5976 = !DILocation(line: 2770, column: 22, scope: !688)
!5977 = !DILocation(line: 2770, column: 25, scope: !688)
!5978 = !DILocation(line: 2770, column: 31, scope: !688)
!5979 = !DILocation(line: 2771, column: 5, scope: !688)
!5980 = !DILocation(line: 2771, column: 9, scope: !688)
!5981 = !DILocation(line: 2771, column: 12, scope: !688)
!5982 = !DILocation(line: 2772, column: 5, scope: !688)
!5983 = !DILocation(line: 2772, column: 17, scope: !688)
!5984 = !DILocation(line: 2774, column: 23, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !688, file: !4, line: 2774, column: 9)
!5986 = !DILocation(line: 2774, column: 9, scope: !5985)
!5987 = !DILocation(line: 2774, column: 26, scope: !5985)
!5988 = !DILocation(line: 2774, column: 43, scope: !5989)
!5989 = !DILexicalBlockFile(scope: !5985, file: !4, discriminator: 1)
!5990 = !DILocation(line: 2774, column: 29, scope: !5985)
!5991 = !DILocation(line: 2774, column: 46, scope: !5985)
!5992 = !DILocation(line: 2775, column: 24, scope: !5985)
!5993 = !DILocation(line: 2775, column: 9, scope: !5985)
!5994 = !DILocation(line: 2775, column: 27, scope: !5985)
!5995 = !DILocation(line: 2775, column: 45, scope: !5989)
!5996 = !DILocation(line: 2775, column: 30, scope: !5985)
!5997 = !DILocation(line: 2775, column: 48, scope: !5985)
!5998 = !DILocation(line: 2776, column: 9, scope: !5985)
!5999 = !DILocation(line: 2776, column: 12, scope: !5985)
!6000 = !DILocation(line: 2776, column: 16, scope: !5985)
!6001 = !DILocation(line: 2776, column: 21, scope: !5985)
!6002 = !DILocation(line: 2776, column: 24, scope: !5989)
!6003 = !DILocation(line: 2776, column: 27, scope: !5985)
!6004 = !DILocation(line: 2776, column: 31, scope: !5985)
!6005 = !DILocation(line: 2774, column: 9, scope: !688)
!6006 = !DILocation(line: 2777, column: 22, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5985, file: !4, line: 2776, column: 37)
!6008 = !DILocation(line: 2777, column: 43, scope: !6007)
!6009 = !DILocation(line: 2777, column: 9, scope: !6007)
!6010 = !DILocation(line: 2778, column: 9, scope: !6007)
!6011 = !DILocation(line: 2780, column: 9, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !688, file: !4, line: 2780, column: 9)
!6013 = !DILocation(line: 2780, column: 12, scope: !6012)
!6014 = !DILocation(line: 2780, column: 21, scope: !6012)
!6015 = !DILocation(line: 2780, column: 24, scope: !6012)
!6016 = !DILocation(line: 2780, column: 19, scope: !6012)
!6017 = !DILocation(line: 2780, column: 9, scope: !688)
!6018 = !DILocation(line: 2781, column: 15, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6012, file: !4, line: 2780, column: 32)
!6020 = !DILocation(line: 2781, column: 13, scope: !6019)
!6021 = !DILocation(line: 2782, column: 17, scope: !6019)
!6022 = !DILocation(line: 2782, column: 15, scope: !6019)
!6023 = !DILocation(line: 2783, column: 5, scope: !6019)
!6024 = !DILocation(line: 2784, column: 22, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !688, file: !4, line: 2784, column: 9)
!6026 = !DILocation(line: 2784, column: 30, scope: !6025)
!6027 = !DILocation(line: 2784, column: 35, scope: !6025)
!6028 = !DILocation(line: 2784, column: 40, scope: !6025)
!6029 = !DILocation(line: 2784, column: 10, scope: !6025)
!6030 = !DILocation(line: 2784, column: 9, scope: !688)
!6031 = !DILocation(line: 2785, column: 9, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6025, file: !4, line: 2784, column: 49)
!6033 = !DILocation(line: 2790, column: 12, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !688, file: !4, line: 2790, column: 5)
!6035 = !DILocation(line: 2790, column: 10, scope: !6034)
!6036 = !DILocation(line: 2790, column: 17, scope: !6037)
!6037 = !DILexicalBlockFile(scope: !6038, file: !4, discriminator: 2)
!6038 = !DILexicalBlockFile(scope: !6039, file: !4, discriminator: 1)
!6039 = distinct !DILexicalBlock(scope: !6034, file: !4, line: 2790, column: 5)
!6040 = !DILocation(line: 2790, column: 21, scope: !6039)
!6041 = !DILocation(line: 2790, column: 28, scope: !6039)
!6042 = !DILocation(line: 2790, column: 31, scope: !6039)
!6043 = !DILocation(line: 2790, column: 19, scope: !6039)
!6044 = !DILocation(line: 2790, column: 5, scope: !6034)
!6045 = !DILocation(line: 2791, column: 25, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6039, file: !4, line: 2790, column: 40)
!6047 = !DILocation(line: 2791, column: 13, scope: !6046)
!6048 = !DILocation(line: 2791, column: 20, scope: !6046)
!6049 = !DILocation(line: 2791, column: 11, scope: !6046)
!6050 = !DILocation(line: 2792, column: 23, scope: !6046)
!6051 = !DILocation(line: 2792, column: 13, scope: !6046)
!6052 = !DILocation(line: 2792, column: 18, scope: !6046)
!6053 = !DILocation(line: 2792, column: 11, scope: !6046)
!6054 = !DILocation(line: 2793, column: 11, scope: !6046)
!6055 = !DILocation(line: 2794, column: 16, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6046, file: !4, line: 2794, column: 9)
!6057 = !DILocation(line: 2794, column: 14, scope: !6056)
!6058 = !DILocation(line: 2794, column: 21, scope: !6059)
!6059 = !DILexicalBlockFile(scope: !6060, file: !4, discriminator: 2)
!6060 = !DILexicalBlockFile(scope: !6061, file: !4, discriminator: 1)
!6061 = distinct !DILexicalBlock(scope: !6056, file: !4, line: 2794, column: 9)
!6062 = !DILocation(line: 2794, column: 23, scope: !6061)
!6063 = !DILocation(line: 2794, column: 9, scope: !6056)
!6064 = !DILocation(line: 2795, column: 20, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6061, file: !4, line: 2794, column: 34)
!6066 = !DILocation(line: 2795, column: 22, scope: !6065)
!6067 = !DILocation(line: 2795, column: 18, scope: !6065)
!6068 = !DILocation(line: 2796, column: 15, scope: !6065)
!6069 = !DILocation(line: 2797, column: 20, scope: !6065)
!6070 = !DILocation(line: 2797, column: 22, scope: !6065)
!6071 = !DILocation(line: 2797, column: 18, scope: !6065)
!6072 = !DILocation(line: 2798, column: 15, scope: !6065)
!6073 = !DILocation(line: 2799, column: 17, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6065, file: !4, line: 2799, column: 17)
!6075 = !DILocation(line: 2799, column: 22, scope: !6074)
!6076 = !DILocation(line: 2799, column: 26, scope: !6074)
!6077 = !DILocation(line: 2799, column: 29, scope: !6078)
!6078 = !DILexicalBlockFile(scope: !6074, file: !4, discriminator: 1)
!6079 = !DILocation(line: 2799, column: 34, scope: !6074)
!6080 = !DILocation(line: 2799, column: 17, scope: !6065)
!6081 = !DILocation(line: 2800, column: 17, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6074, file: !4, line: 2799, column: 39)
!6083 = !DILocation(line: 2802, column: 19, scope: !6065)
!6084 = !DILocation(line: 2802, column: 24, scope: !6065)
!6085 = !DILocation(line: 2802, column: 23, scope: !6065)
!6086 = !DILocation(line: 2802, column: 18, scope: !6065)
!6087 = !DILocation(line: 2802, column: 42, scope: !6088)
!6088 = !DILexicalBlockFile(scope: !6065, file: !4, discriminator: 1)
!6089 = !DILocation(line: 2802, column: 32, scope: !6065)
!6090 = !DILocation(line: 2802, column: 18, scope: !6091)
!6091 = !DILexicalBlockFile(scope: !6065, file: !4, discriminator: 2)
!6092 = !DILocation(line: 2802, column: 15, scope: !6093)
!6093 = !DILexicalBlockFile(scope: !6094, file: !4, discriminator: 4)
!6094 = !DILexicalBlockFile(scope: !6065, file: !4, discriminator: 3)
!6095 = !DILocation(line: 2803, column: 9, scope: !6065)
!6096 = !DILocation(line: 2794, column: 30, scope: !6061)
!6097 = !DILocation(line: 2794, column: 9, scope: !6061)
!6098 = !DILocation(line: 2804, column: 27, scope: !6046)
!6099 = !DILocation(line: 2804, column: 22, scope: !6046)
!6100 = !DILocation(line: 2804, column: 9, scope: !6046)
!6101 = !DILocation(line: 2804, column: 17, scope: !6046)
!6102 = !DILocation(line: 2804, column: 25, scope: !6046)
!6103 = !DILocation(line: 2805, column: 5, scope: !6046)
!6104 = !DILocation(line: 2790, column: 36, scope: !6039)
!6105 = !DILocation(line: 2790, column: 5, scope: !6039)
!6106 = !DILocation(line: 2807, column: 21, scope: !688)
!6107 = !DILocation(line: 2807, column: 9, scope: !688)
!6108 = !DILocation(line: 2807, column: 16, scope: !688)
!6109 = !DILocation(line: 2807, column: 7, scope: !688)
!6110 = !DILocation(line: 2808, column: 19, scope: !688)
!6111 = !DILocation(line: 2808, column: 9, scope: !688)
!6112 = !DILocation(line: 2808, column: 14, scope: !688)
!6113 = !DILocation(line: 2808, column: 7, scope: !688)
!6114 = !DILocation(line: 2809, column: 7, scope: !688)
!6115 = !DILocation(line: 2810, column: 33, scope: !688)
!6116 = !DILocation(line: 2810, column: 17, scope: !688)
!6117 = !DILocation(line: 2810, column: 15, scope: !688)
!6118 = !DILocation(line: 2811, column: 12, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !688, file: !4, line: 2811, column: 5)
!6120 = !DILocation(line: 2811, column: 10, scope: !6119)
!6121 = !DILocation(line: 2811, column: 17, scope: !6122)
!6122 = !DILexicalBlockFile(scope: !6123, file: !4, discriminator: 2)
!6123 = !DILexicalBlockFile(scope: !6124, file: !4, discriminator: 1)
!6124 = distinct !DILexicalBlock(scope: !6119, file: !4, line: 2811, column: 5)
!6125 = !DILocation(line: 2811, column: 21, scope: !6124)
!6126 = !DILocation(line: 2811, column: 19, scope: !6124)
!6127 = !DILocation(line: 2811, column: 5, scope: !6119)
!6128 = !DILocation(line: 2812, column: 16, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6124, file: !4, line: 2811, column: 37)
!6130 = !DILocation(line: 2812, column: 18, scope: !6129)
!6131 = !DILocation(line: 2812, column: 14, scope: !6129)
!6132 = !DILocation(line: 2813, column: 11, scope: !6129)
!6133 = !DILocation(line: 2814, column: 16, scope: !6129)
!6134 = !DILocation(line: 2814, column: 18, scope: !6129)
!6135 = !DILocation(line: 2814, column: 14, scope: !6129)
!6136 = !DILocation(line: 2815, column: 11, scope: !6129)
!6137 = !DILocation(line: 2816, column: 13, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6129, file: !4, line: 2816, column: 13)
!6139 = !DILocation(line: 2816, column: 18, scope: !6138)
!6140 = !DILocation(line: 2816, column: 22, scope: !6138)
!6141 = !DILocation(line: 2816, column: 25, scope: !6142)
!6142 = !DILexicalBlockFile(scope: !6138, file: !4, discriminator: 1)
!6143 = !DILocation(line: 2816, column: 30, scope: !6138)
!6144 = !DILocation(line: 2816, column: 13, scope: !6129)
!6145 = !DILocation(line: 2817, column: 13, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6138, file: !4, line: 2816, column: 35)
!6147 = !DILocation(line: 2819, column: 15, scope: !6129)
!6148 = !DILocation(line: 2819, column: 20, scope: !6129)
!6149 = !DILocation(line: 2819, column: 19, scope: !6129)
!6150 = !DILocation(line: 2819, column: 14, scope: !6129)
!6151 = !DILocation(line: 2819, column: 38, scope: !6152)
!6152 = !DILexicalBlockFile(scope: !6129, file: !4, discriminator: 1)
!6153 = !DILocation(line: 2819, column: 28, scope: !6129)
!6154 = !DILocation(line: 2819, column: 14, scope: !6155)
!6155 = !DILexicalBlockFile(scope: !6129, file: !4, discriminator: 2)
!6156 = !DILocation(line: 2819, column: 11, scope: !6157)
!6157 = !DILexicalBlockFile(scope: !6158, file: !4, discriminator: 4)
!6158 = !DILexicalBlockFile(scope: !6129, file: !4, discriminator: 3)
!6159 = !DILocation(line: 2820, column: 5, scope: !6129)
!6160 = !DILocation(line: 2811, column: 33, scope: !6124)
!6161 = !DILocation(line: 2811, column: 5, scope: !6124)
!6162 = !DILocation(line: 2823, column: 5, scope: !688)
!6163 = !DILocation(line: 2823, column: 12, scope: !6164)
!6164 = !DILexicalBlockFile(scope: !6165, file: !4, discriminator: 2)
!6165 = !DILexicalBlockFile(scope: !6166, file: !4, discriminator: 1)
!6166 = distinct !DILexicalBlock(scope: !6167, file: !4, line: 2823, column: 5)
!6167 = distinct !DILexicalBlock(scope: !688, file: !4, line: 2823, column: 5)
!6168 = !DILocation(line: 2823, column: 14, scope: !6166)
!6169 = !DILocation(line: 2823, column: 5, scope: !6167)
!6170 = !DILocation(line: 2824, column: 16, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6166, file: !4, line: 2823, column: 25)
!6172 = !DILocation(line: 2824, column: 18, scope: !6171)
!6173 = !DILocation(line: 2824, column: 14, scope: !6171)
!6174 = !DILocation(line: 2825, column: 11, scope: !6171)
!6175 = !DILocation(line: 2826, column: 13, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6171, file: !4, line: 2826, column: 13)
!6177 = !DILocation(line: 2826, column: 18, scope: !6176)
!6178 = !DILocation(line: 2826, column: 13, scope: !6171)
!6179 = !DILocation(line: 2827, column: 13, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6176, file: !4, line: 2826, column: 23)
!6181 = !DILocation(line: 2829, column: 14, scope: !6171)
!6182 = !DILocation(line: 2829, column: 29, scope: !6171)
!6183 = !DILocation(line: 2829, column: 19, scope: !6171)
!6184 = !DILocation(line: 2829, column: 18, scope: !6171)
!6185 = !DILocation(line: 2829, column: 11, scope: !6171)
!6186 = !DILocation(line: 2830, column: 5, scope: !6171)
!6187 = !DILocation(line: 2823, column: 21, scope: !6166)
!6188 = !DILocation(line: 2823, column: 5, scope: !6166)
!6189 = !DILocation(line: 2831, column: 25, scope: !688)
!6190 = !DILocation(line: 2831, column: 19, scope: !688)
!6191 = !DILocation(line: 2831, column: 5, scope: !688)
!6192 = !DILocation(line: 2831, column: 13, scope: !688)
!6193 = !DILocation(line: 2831, column: 23, scope: !688)
!6194 = !DILocation(line: 2833, column: 5, scope: !688)
!6195 = !DILocation(line: 2833, column: 12, scope: !6196)
!6196 = !DILexicalBlockFile(scope: !6197, file: !4, discriminator: 2)
!6197 = !DILexicalBlockFile(scope: !6198, file: !4, discriminator: 1)
!6198 = distinct !DILexicalBlock(scope: !6199, file: !4, line: 2833, column: 5)
!6199 = distinct !DILexicalBlock(scope: !688, file: !4, line: 2833, column: 5)
!6200 = !DILocation(line: 2833, column: 16, scope: !6198)
!6201 = !DILocation(line: 2833, column: 21, scope: !6198)
!6202 = !DILocation(line: 2833, column: 14, scope: !6198)
!6203 = !DILocation(line: 2833, column: 5, scope: !6199)
!6204 = !DILocation(line: 2834, column: 23, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6198, file: !4, line: 2833, column: 31)
!6206 = !DILocation(line: 2834, column: 13, scope: !6205)
!6207 = !DILocation(line: 2834, column: 18, scope: !6205)
!6208 = !DILocation(line: 2834, column: 11, scope: !6205)
!6209 = !DILocation(line: 2835, column: 16, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6205, file: !4, line: 2835, column: 9)
!6211 = !DILocation(line: 2835, column: 14, scope: !6210)
!6212 = !DILocation(line: 2835, column: 21, scope: !6213)
!6213 = !DILexicalBlockFile(scope: !6214, file: !4, discriminator: 2)
!6214 = !DILexicalBlockFile(scope: !6215, file: !4, discriminator: 1)
!6215 = distinct !DILexicalBlock(scope: !6210, file: !4, line: 2835, column: 9)
!6216 = !DILocation(line: 2835, column: 23, scope: !6215)
!6217 = !DILocation(line: 2835, column: 9, scope: !6210)
!6218 = !DILocation(line: 2836, column: 20, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6215, file: !4, line: 2835, column: 34)
!6220 = !DILocation(line: 2836, column: 22, scope: !6219)
!6221 = !DILocation(line: 2836, column: 18, scope: !6219)
!6222 = !DILocation(line: 2837, column: 15, scope: !6219)
!6223 = !DILocation(line: 2838, column: 17, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6219, file: !4, line: 2838, column: 17)
!6225 = !DILocation(line: 2838, column: 22, scope: !6224)
!6226 = !DILocation(line: 2838, column: 17, scope: !6219)
!6227 = !DILocation(line: 2839, column: 17, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6224, file: !4, line: 2838, column: 27)
!6229 = !DILocation(line: 2841, column: 9, scope: !6219)
!6230 = !DILocation(line: 2835, column: 30, scope: !6215)
!6231 = !DILocation(line: 2835, column: 9, scope: !6215)
!6232 = !DILocation(line: 2842, column: 37, scope: !6205)
!6233 = !DILocation(line: 2842, column: 27, scope: !6205)
!6234 = !DILocation(line: 2842, column: 32, scope: !6205)
!6235 = !DILocation(line: 2842, column: 22, scope: !6205)
!6236 = !DILocation(line: 2842, column: 9, scope: !6205)
!6237 = !DILocation(line: 2842, column: 17, scope: !6205)
!6238 = !DILocation(line: 2842, column: 25, scope: !6205)
!6239 = !DILocation(line: 2843, column: 5, scope: !6205)
!6240 = !DILocation(line: 2833, column: 27, scope: !6198)
!6241 = !DILocation(line: 2833, column: 5, scope: !6198)
!6242 = !DILocation(line: 2845, column: 21, scope: !688)
!6243 = !DILocation(line: 2845, column: 5, scope: !688)
!6244 = !DILocation(line: 2846, column: 5, scope: !688)
!6245 = !DILocation(line: 2846, column: 13, scope: !688)
!6246 = !DILocation(line: 2846, column: 17, scope: !688)
!6247 = !DILocation(line: 2847, column: 34, scope: !688)
!6248 = !DILocation(line: 2847, column: 42, scope: !688)
!6249 = !DILocation(line: 2847, column: 48, scope: !688)
!6250 = !DILocation(line: 2847, column: 53, scope: !688)
!6251 = !DILocation(line: 2847, column: 19, scope: !688)
!6252 = !DILocation(line: 2847, column: 5, scope: !688)
!6253 = !DILocation(line: 2847, column: 13, scope: !688)
!6254 = !DILocation(line: 2847, column: 17, scope: !688)
!6255 = !DILocation(line: 2848, column: 17, scope: !688)
!6256 = !DILocation(line: 2848, column: 25, scope: !688)
!6257 = !DILocation(line: 2848, column: 33, scope: !688)
!6258 = !DILocation(line: 2848, column: 38, scope: !688)
!6259 = !DILocation(line: 2848, column: 5, scope: !688)
!6260 = !DILocation(line: 2849, column: 19, scope: !688)
!6261 = !DILocation(line: 2849, column: 5, scope: !688)
!6262 = !DILocation(line: 2850, column: 14, scope: !688)
!6263 = !DILocation(line: 2850, column: 22, scope: !688)
!6264 = !DILocation(line: 2850, column: 5, scope: !688)
!6265 = !DILocation(line: 2851, column: 5, scope: !688)
!6266 = !DILocation(line: 2854, column: 18, scope: !688)
!6267 = !DILocation(line: 2854, column: 39, scope: !688)
!6268 = !DILocation(line: 2854, column: 5, scope: !688)
!6269 = !DILocation(line: 2855, column: 1, scope: !688)
!6270 = !DILocation(line: 2855, column: 1, scope: !6271)
!6271 = !DILexicalBlockFile(scope: !688, file: !4, discriminator: 1)
!6272 = !DILocation(line: 2862, column: 20, scope: !705)
!6273 = !DILocation(line: 2862, column: 41, scope: !705)
!6274 = !DILocation(line: 2862, column: 57, scope: !705)
!6275 = !DILocation(line: 2863, column: 34, scope: !705)
!6276 = !DILocation(line: 2863, column: 49, scope: !705)
!6277 = !DILocation(line: 2865, column: 5, scope: !705)
!6278 = !DILocation(line: 2865, column: 14, scope: !705)
!6279 = !DILocation(line: 2866, column: 5, scope: !705)
!6280 = !DILocation(line: 2866, column: 16, scope: !705)
!6281 = !DILocation(line: 2866, column: 30, scope: !705)
!6282 = !DILocation(line: 2866, column: 36, scope: !705)
!6283 = !DILocation(line: 2866, column: 42, scope: !705)
!6284 = !DILocation(line: 2866, column: 87, scope: !705)
!6285 = !DILocation(line: 2867, column: 5, scope: !705)
!6286 = !DILocation(line: 2867, column: 16, scope: !705)
!6287 = !DILocation(line: 2867, column: 30, scope: !705)
!6288 = !DILocation(line: 2867, column: 36, scope: !705)
!6289 = !DILocation(line: 2867, column: 42, scope: !705)
!6290 = !DILocation(line: 2867, column: 87, scope: !705)
!6291 = !DILocation(line: 2868, column: 5, scope: !705)
!6292 = !DILocation(line: 2868, column: 16, scope: !705)
!6293 = !DILocation(line: 2868, column: 32, scope: !705)
!6294 = !DILocation(line: 2868, column: 38, scope: !705)
!6295 = !DILocation(line: 2868, column: 46, scope: !705)
!6296 = !DILocation(line: 2868, column: 91, scope: !705)
!6297 = !DILocation(line: 2869, column: 5, scope: !705)
!6298 = !DILocation(line: 2869, column: 17, scope: !705)
!6299 = !DILocation(line: 2869, column: 20, scope: !705)
!6300 = !DILocation(line: 2869, column: 28, scope: !705)
!6301 = !DILocation(line: 2871, column: 23, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !705, file: !4, line: 2871, column: 9)
!6303 = !DILocation(line: 2871, column: 9, scope: !6302)
!6304 = !DILocation(line: 2871, column: 26, scope: !6302)
!6305 = !DILocation(line: 2871, column: 43, scope: !6306)
!6306 = !DILexicalBlockFile(scope: !6302, file: !4, discriminator: 1)
!6307 = !DILocation(line: 2871, column: 29, scope: !6302)
!6308 = !DILocation(line: 2871, column: 9, scope: !705)
!6309 = !DILocation(line: 2872, column: 29, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !4, line: 2872, column: 13)
!6311 = distinct !DILexicalBlock(scope: !6302, file: !4, line: 2871, column: 47)
!6312 = !DILocation(line: 2872, column: 37, scope: !6310)
!6313 = !DILocation(line: 2872, column: 40, scope: !6310)
!6314 = !DILocation(line: 2872, column: 43, scope: !6310)
!6315 = !DILocation(line: 2872, column: 48, scope: !6310)
!6316 = !DILocation(line: 2872, column: 13, scope: !6310)
!6317 = !DILocation(line: 2872, column: 13, scope: !6311)
!6318 = !DILocation(line: 2873, column: 13, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6310, file: !4, line: 2872, column: 57)
!6320 = !DILocation(line: 2875, column: 5, scope: !6311)
!6321 = !DILocation(line: 2876, column: 9, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !705, file: !4, line: 2876, column: 9)
!6323 = !DILocation(line: 2876, column: 12, scope: !6322)
!6324 = !DILocation(line: 2876, column: 16, scope: !6322)
!6325 = !DILocation(line: 2876, column: 21, scope: !6322)
!6326 = !DILocation(line: 2876, column: 39, scope: !6327)
!6327 = !DILexicalBlockFile(scope: !6322, file: !4, discriminator: 1)
!6328 = !DILocation(line: 2876, column: 24, scope: !6322)
!6329 = !DILocation(line: 2876, column: 9, scope: !705)
!6330 = !DILocation(line: 2877, column: 22, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6322, file: !4, line: 2876, column: 43)
!6332 = !DILocation(line: 2877, column: 43, scope: !6331)
!6333 = !DILocation(line: 2877, column: 9, scope: !6331)
!6334 = !DILocation(line: 2878, column: 9, scope: !6331)
!6335 = !DILocation(line: 2881, column: 24, scope: !705)
!6336 = !DILocation(line: 2881, column: 9, scope: !705)
!6337 = !DILocation(line: 2881, column: 7, scope: !705)
!6338 = !DILocation(line: 2882, column: 9, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !705, file: !4, line: 2882, column: 9)
!6340 = !DILocation(line: 2882, column: 19, scope: !6339)
!6341 = !DILocation(line: 2882, column: 9, scope: !705)
!6342 = !DILocation(line: 2883, column: 22, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6339, file: !4, line: 2882, column: 33)
!6344 = !DILocation(line: 2883, column: 43, scope: !6343)
!6345 = !DILocation(line: 2883, column: 9, scope: !6343)
!6346 = !DILocation(line: 2884, column: 9, scope: !6343)
!6347 = !DILocation(line: 2886, column: 9, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !705, file: !4, line: 2886, column: 9)
!6349 = !DILocation(line: 2886, column: 13, scope: !6348)
!6350 = !DILocation(line: 2886, column: 18, scope: !6348)
!6351 = !DILocation(line: 2886, column: 11, scope: !6348)
!6352 = !DILocation(line: 2886, column: 23, scope: !6348)
!6353 = !DILocation(line: 2886, column: 26, scope: !6354)
!6354 = !DILexicalBlockFile(scope: !6348, file: !4, discriminator: 1)
!6355 = !DILocation(line: 2886, column: 31, scope: !6348)
!6356 = !DILocation(line: 2886, column: 36, scope: !6348)
!6357 = !DILocation(line: 2886, column: 30, scope: !6348)
!6358 = !DILocation(line: 2886, column: 28, scope: !6348)
!6359 = !DILocation(line: 2886, column: 9, scope: !705)
!6360 = !DILocation(line: 2887, column: 22, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6348, file: !4, line: 2886, column: 42)
!6362 = !DILocation(line: 2887, column: 43, scope: !6361)
!6363 = !DILocation(line: 2887, column: 9, scope: !6361)
!6364 = !DILocation(line: 2888, column: 9, scope: !6361)
!6365 = !DILocation(line: 2890, column: 24, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !705, file: !4, line: 2890, column: 9)
!6367 = !DILocation(line: 2890, column: 9, scope: !6366)
!6368 = !DILocation(line: 2890, column: 9, scope: !705)
!6369 = !DILocation(line: 2891, column: 19, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6366, file: !4, line: 2890, column: 28)
!6371 = !DILocation(line: 2891, column: 27, scope: !6370)
!6372 = !DILocation(line: 2891, column: 30, scope: !6370)
!6373 = !DILocation(line: 2891, column: 9, scope: !6370)
!6374 = !DILocation(line: 2892, column: 9, scope: !6370)
!6375 = !DILocation(line: 2895, column: 9, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !705, file: !4, line: 2895, column: 9)
!6377 = !DILocation(line: 2895, column: 11, scope: !6376)
!6378 = !DILocation(line: 2895, column: 9, scope: !705)
!6379 = !DILocation(line: 2896, column: 18, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6376, file: !4, line: 2895, column: 17)
!6381 = !DILocation(line: 2896, column: 16, scope: !6380)
!6382 = !DILocation(line: 2897, column: 18, scope: !6380)
!6383 = !DILocation(line: 2897, column: 23, scope: !6380)
!6384 = !DILocation(line: 2897, column: 28, scope: !6380)
!6385 = !DILocation(line: 2897, column: 27, scope: !6380)
!6386 = !DILocation(line: 2897, column: 16, scope: !6380)
!6387 = !DILocation(line: 2898, column: 5, scope: !6380)
!6388 = !DILocation(line: 2900, column: 18, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6376, file: !4, line: 2899, column: 10)
!6390 = !DILocation(line: 2900, column: 23, scope: !6389)
!6391 = !DILocation(line: 2900, column: 28, scope: !6389)
!6392 = !DILocation(line: 2900, column: 27, scope: !6389)
!6393 = !DILocation(line: 2900, column: 16, scope: !6389)
!6394 = !DILocation(line: 2901, column: 19, scope: !6389)
!6395 = !DILocation(line: 2901, column: 18, scope: !6389)
!6396 = !DILocation(line: 2901, column: 16, scope: !6389)
!6397 = !DILocation(line: 2904, column: 9, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !705, file: !4, line: 2904, column: 9)
!6399 = !DILocation(line: 2904, column: 12, scope: !6398)
!6400 = !DILocation(line: 2904, column: 21, scope: !6398)
!6401 = !DILocation(line: 2904, column: 26, scope: !6398)
!6402 = !DILocation(line: 2904, column: 19, scope: !6398)
!6403 = !DILocation(line: 2904, column: 9, scope: !705)
!6404 = !DILocation(line: 2905, column: 30, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6406, file: !4, line: 2905, column: 13)
!6406 = distinct !DILexicalBlock(scope: !6398, file: !4, line: 2904, column: 32)
!6407 = !DILocation(line: 2905, column: 33, scope: !6405)
!6408 = !DILocation(line: 2905, column: 14, scope: !6405)
!6409 = !DILocation(line: 2905, column: 13, scope: !6406)
!6410 = !DILocation(line: 2906, column: 26, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6405, file: !4, line: 2905, column: 42)
!6412 = !DILocation(line: 2906, column: 47, scope: !6411)
!6413 = !DILocation(line: 2906, column: 13, scope: !6411)
!6414 = !DILocation(line: 2907, column: 13, scope: !6411)
!6415 = !DILocation(line: 2909, column: 24, scope: !6406)
!6416 = !DILocation(line: 2909, column: 9, scope: !6406)
!6417 = !DILocation(line: 2910, column: 11, scope: !6406)
!6418 = !DILocation(line: 2911, column: 5, scope: !6406)
!6419 = !DILocation(line: 2913, column: 28, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !705, file: !4, line: 2913, column: 9)
!6421 = !DILocation(line: 2913, column: 31, scope: !6420)
!6422 = !DILocation(line: 2913, column: 39, scope: !6420)
!6423 = !DILocation(line: 2913, column: 10, scope: !6420)
!6424 = !DILocation(line: 2913, column: 9, scope: !705)
!6425 = !DILocation(line: 2914, column: 22, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6420, file: !4, line: 2913, column: 48)
!6427 = !DILocation(line: 2914, column: 43, scope: !6426)
!6428 = !DILocation(line: 2914, column: 9, scope: !6426)
!6429 = !DILocation(line: 2915, column: 9, scope: !6426)
!6430 = !DILocation(line: 2917, column: 20, scope: !705)
!6431 = !DILocation(line: 2917, column: 5, scope: !705)
!6432 = !DILocation(line: 2919, column: 29, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !705, file: !4, line: 2919, column: 9)
!6434 = !DILocation(line: 2919, column: 32, scope: !6433)
!6435 = !DILocation(line: 2919, column: 40, scope: !6433)
!6436 = !DILocation(line: 2919, column: 9, scope: !6433)
!6437 = !DILocation(line: 2919, column: 48, scope: !6433)
!6438 = !DILocation(line: 2919, column: 9, scope: !705)
!6439 = !DILocation(line: 2920, column: 22, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6433, file: !4, line: 2919, column: 77)
!6441 = !DILocation(line: 2920, column: 43, scope: !6440)
!6442 = !DILocation(line: 2920, column: 9, scope: !6440)
!6443 = !DILocation(line: 2921, column: 9, scope: !6440)
!6444 = !DILocation(line: 2923, column: 15, scope: !705)
!6445 = !DILocation(line: 2923, column: 37, scope: !705)
!6446 = !DILocation(line: 2923, column: 42, scope: !705)
!6447 = !DILocation(line: 2923, column: 5, scope: !705)
!6448 = !DILocation(line: 2927, column: 5, scope: !705)
!6449 = !DILocation(line: 2928, column: 5, scope: !705)
!6450 = !DILocation(line: 2929, column: 5, scope: !705)
!6451 = !DILocation(line: 2930, column: 1, scope: !705)
!6452 = !DILocation(line: 2930, column: 1, scope: !6453)
!6453 = !DILexicalBlockFile(scope: !705, file: !4, discriminator: 1)
!6454 = !DILocation(line: 3373, column: 18, scope: !1633)
!6455 = !DILocation(line: 3373, column: 39, scope: !1633)
!6456 = !DILocation(line: 3373, column: 55, scope: !1633)
!6457 = !DILocation(line: 3374, column: 32, scope: !1633)
!6458 = !DILocation(line: 3374, column: 47, scope: !1633)
!6459 = !DILocation(line: 3376, column: 18, scope: !1633)
!6460 = !DILocation(line: 3376, column: 26, scope: !1633)
!6461 = !DILocation(line: 3376, column: 29, scope: !1633)
!6462 = !DILocation(line: 3376, column: 41, scope: !1633)
!6463 = !DILocation(line: 3376, column: 32, scope: !1633)
!6464 = !DILocation(line: 3376, column: 45, scope: !1633)
!6465 = !DILocation(line: 3376, column: 50, scope: !1633)
!6466 = !DILocation(line: 3376, column: 5, scope: !1633)
!6467 = !DILocation(line: 3377, column: 1, scope: !1633)
!6468 = !DILocation(line: 2938, column: 20, scope: !725)
!6469 = !DILocation(line: 2938, column: 41, scope: !725)
!6470 = !DILocation(line: 2938, column: 57, scope: !725)
!6471 = !DILocation(line: 2939, column: 34, scope: !725)
!6472 = !DILocation(line: 2939, column: 49, scope: !725)
!6473 = !DILocation(line: 2941, column: 5, scope: !725)
!6474 = !DILocation(line: 2941, column: 14, scope: !725)
!6475 = !DILocation(line: 2942, column: 5, scope: !725)
!6476 = !DILocation(line: 2942, column: 16, scope: !725)
!6477 = !DILocation(line: 2942, column: 19, scope: !725)
!6478 = !DILocation(line: 2944, column: 5, scope: !725)
!6479 = !DILocation(line: 2944, column: 13, scope: !725)
!6480 = !DILocation(line: 2951, column: 23, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !725, file: !4, line: 2951, column: 9)
!6482 = !DILocation(line: 2951, column: 9, scope: !6481)
!6483 = !DILocation(line: 2951, column: 26, scope: !6481)
!6484 = !DILocation(line: 2951, column: 43, scope: !6485)
!6485 = !DILexicalBlockFile(scope: !6481, file: !4, discriminator: 1)
!6486 = !DILocation(line: 2951, column: 29, scope: !6481)
!6487 = !DILocation(line: 2951, column: 9, scope: !725)
!6488 = !DILocation(line: 2952, column: 29, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6490, file: !4, line: 2952, column: 13)
!6490 = distinct !DILexicalBlock(scope: !6481, file: !4, line: 2951, column: 47)
!6491 = !DILocation(line: 2952, column: 37, scope: !6489)
!6492 = !DILocation(line: 2952, column: 40, scope: !6489)
!6493 = !DILocation(line: 2952, column: 43, scope: !6489)
!6494 = !DILocation(line: 2952, column: 48, scope: !6489)
!6495 = !DILocation(line: 2952, column: 13, scope: !6489)
!6496 = !DILocation(line: 2952, column: 13, scope: !6490)
!6497 = !DILocation(line: 2953, column: 13, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6489, file: !4, line: 2952, column: 57)
!6499 = !DILocation(line: 2955, column: 5, scope: !6490)
!6500 = !DILocation(line: 2956, column: 9, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !725, file: !4, line: 2956, column: 9)
!6502 = !DILocation(line: 2956, column: 12, scope: !6501)
!6503 = !DILocation(line: 2956, column: 16, scope: !6501)
!6504 = !DILocation(line: 2956, column: 21, scope: !6501)
!6505 = !DILocation(line: 2956, column: 39, scope: !6506)
!6506 = !DILexicalBlockFile(scope: !6501, file: !4, discriminator: 1)
!6507 = !DILocation(line: 2956, column: 24, scope: !6501)
!6508 = !DILocation(line: 2956, column: 9, scope: !725)
!6509 = !DILocation(line: 2957, column: 22, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6501, file: !4, line: 2956, column: 43)
!6511 = !DILocation(line: 2957, column: 43, scope: !6510)
!6512 = !DILocation(line: 2957, column: 9, scope: !6510)
!6513 = !DILocation(line: 2958, column: 9, scope: !6510)
!6514 = !DILocation(line: 2961, column: 23, scope: !725)
!6515 = !DILocation(line: 2961, column: 9, scope: !725)
!6516 = !DILocation(line: 2961, column: 7, scope: !725)
!6517 = !DILocation(line: 2963, column: 32, scope: !725)
!6518 = !DILocation(line: 2963, column: 37, scope: !725)
!6519 = !DILocation(line: 2963, column: 44, scope: !725)
!6520 = !DILocation(line: 2963, column: 49, scope: !725)
!6521 = !DILocation(line: 2963, column: 42, scope: !725)
!6522 = !DILocation(line: 2963, column: 17, scope: !725)
!6523 = !DILocation(line: 2963, column: 13, scope: !725)
!6524 = !DILocation(line: 2965, column: 9, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !725, file: !4, line: 2965, column: 9)
!6526 = !DILocation(line: 2965, column: 13, scope: !6525)
!6527 = !DILocation(line: 2965, column: 11, scope: !6525)
!6528 = !DILocation(line: 2965, column: 21, scope: !6525)
!6529 = !DILocation(line: 2965, column: 24, scope: !6530)
!6530 = !DILexicalBlockFile(scope: !6525, file: !4, discriminator: 1)
!6531 = !DILocation(line: 2965, column: 34, scope: !6525)
!6532 = !DILocation(line: 2965, column: 9, scope: !725)
!6533 = !DILocation(line: 2966, column: 22, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6525, file: !4, line: 2965, column: 48)
!6535 = !DILocation(line: 2966, column: 43, scope: !6534)
!6536 = !DILocation(line: 2966, column: 9, scope: !6534)
!6537 = !DILocation(line: 2967, column: 9, scope: !6534)
!6538 = !DILocation(line: 2969, column: 24, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !725, file: !4, line: 2969, column: 9)
!6540 = !DILocation(line: 2969, column: 9, scope: !6539)
!6541 = !DILocation(line: 2969, column: 9, scope: !725)
!6542 = !DILocation(line: 2970, column: 19, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6539, file: !4, line: 2969, column: 28)
!6544 = !DILocation(line: 2970, column: 27, scope: !6543)
!6545 = !DILocation(line: 2970, column: 30, scope: !6543)
!6546 = !DILocation(line: 2970, column: 9, scope: !6543)
!6547 = !DILocation(line: 2971, column: 9, scope: !6543)
!6548 = !DILocation(line: 2975, column: 11, scope: !725)
!6549 = !DILocation(line: 2975, column: 14, scope: !725)
!6550 = !DILocation(line: 2975, column: 29, scope: !725)
!6551 = !DILocation(line: 2975, column: 48, scope: !725)
!6552 = !DILocation(line: 2975, column: 33, scope: !725)
!6553 = !DILocation(line: 2975, column: 31, scope: !725)
!6554 = !DILocation(line: 2975, column: 18, scope: !725)
!6555 = !DILocation(line: 2975, column: 9, scope: !725)
!6556 = !DILocation(line: 2976, column: 12, scope: !725)
!6557 = !DILocation(line: 2976, column: 16, scope: !725)
!6558 = !DILocation(line: 2976, column: 11, scope: !725)
!6559 = !DILocation(line: 2976, column: 11, scope: !6560)
!6560 = !DILexicalBlockFile(scope: !725, file: !4, discriminator: 1)
!6561 = !DILocation(line: 2976, column: 67, scope: !6562)
!6562 = !DILexicalBlockFile(scope: !725, file: !4, discriminator: 2)
!6563 = !DILocation(line: 2976, column: 9, scope: !6564)
!6564 = !DILexicalBlockFile(scope: !6565, file: !4, discriminator: 4)
!6565 = !DILexicalBlockFile(scope: !725, file: !4, discriminator: 3)
!6566 = !DILocation(line: 2977, column: 12, scope: !725)
!6567 = !DILocation(line: 2977, column: 16, scope: !725)
!6568 = !DILocation(line: 2977, column: 11, scope: !725)
!6569 = !DILocation(line: 2977, column: 11, scope: !6560)
!6570 = !DILocation(line: 2977, column: 73, scope: !6562)
!6571 = !DILocation(line: 2977, column: 9, scope: !6564)
!6572 = !DILocation(line: 2996, column: 15, scope: !725)
!6573 = !DILocation(line: 2996, column: 23, scope: !725)
!6574 = !DILocation(line: 2996, column: 26, scope: !725)
!6575 = !DILocation(line: 2996, column: 5, scope: !725)
!6576 = !DILocation(line: 2997, column: 32, scope: !725)
!6577 = !DILocation(line: 2997, column: 5, scope: !725)
!6578 = !DILocation(line: 2997, column: 13, scope: !725)
!6579 = !DILocation(line: 2997, column: 17, scope: !725)
!6580 = !DILocation(line: 2999, column: 19, scope: !725)
!6581 = !DILocation(line: 2999, column: 27, scope: !725)
!6582 = !DILocation(line: 2999, column: 32, scope: !725)
!6583 = !DILocation(line: 2999, column: 5, scope: !725)
!6584 = !DILocation(line: 3000, column: 1, scope: !725)
!6585 = !DILocation(line: 3000, column: 1, scope: !6560)
!6586 = !DILocation(line: 3008, column: 20, scope: !736)
!6587 = !DILocation(line: 3008, column: 41, scope: !736)
!6588 = !DILocation(line: 3008, column: 56, scope: !736)
!6589 = !DILocation(line: 3008, column: 80, scope: !736)
!6590 = !DILocation(line: 3009, column: 23, scope: !736)
!6591 = !DILocation(line: 3011, column: 23, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !736, file: !4, line: 3011, column: 9)
!6593 = !DILocation(line: 3011, column: 9, scope: !6592)
!6594 = !DILocation(line: 3011, column: 9, scope: !736)
!6595 = !DILocation(line: 3012, column: 28, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6597, file: !4, line: 3012, column: 13)
!6597 = distinct !DILexicalBlock(scope: !6592, file: !4, line: 3011, column: 27)
!6598 = !DILocation(line: 3012, column: 36, scope: !6596)
!6599 = !DILocation(line: 3012, column: 39, scope: !6596)
!6600 = !DILocation(line: 3012, column: 44, scope: !6596)
!6601 = !DILocation(line: 3012, column: 13, scope: !6596)
!6602 = !DILocation(line: 3012, column: 13, scope: !6597)
!6603 = !DILocation(line: 3013, column: 13, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6596, file: !4, line: 3012, column: 53)
!6605 = !DILocation(line: 3015, column: 19, scope: !6597)
!6606 = !DILocation(line: 3015, column: 27, scope: !6597)
!6607 = !DILocation(line: 3015, column: 30, scope: !6597)
!6608 = !DILocation(line: 3015, column: 9, scope: !6597)
!6609 = !DILocation(line: 3016, column: 9, scope: !6597)
!6610 = !DILocation(line: 3019, column: 9, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !736, file: !4, line: 3019, column: 9)
!6612 = !DILocation(line: 3019, column: 11, scope: !6611)
!6613 = !DILocation(line: 3019, column: 16, scope: !6611)
!6614 = !DILocation(line: 3019, column: 19, scope: !6615)
!6615 = !DILexicalBlockFile(scope: !6611, file: !4, discriminator: 1)
!6616 = !DILocation(line: 3019, column: 24, scope: !6611)
!6617 = !DILocation(line: 3019, column: 29, scope: !6611)
!6618 = !DILocation(line: 3019, column: 21, scope: !6611)
!6619 = !DILocation(line: 3019, column: 9, scope: !736)
!6620 = !DILocation(line: 3020, column: 21, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6611, file: !4, line: 3019, column: 35)
!6622 = !DILocation(line: 3020, column: 29, scope: !6621)
!6623 = !DILocation(line: 3020, column: 32, scope: !6621)
!6624 = !DILocation(line: 3020, column: 35, scope: !6621)
!6625 = !DILocation(line: 3020, column: 9, scope: !6621)
!6626 = !DILocation(line: 3021, column: 18, scope: !6621)
!6627 = !DILocation(line: 3021, column: 26, scope: !6621)
!6628 = !DILocation(line: 3021, column: 9, scope: !6621)
!6629 = !DILocation(line: 3022, column: 5, scope: !6621)
!6630 = !DILocation(line: 3023, column: 14, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6611, file: !4, line: 3023, column: 14)
!6632 = !DILocation(line: 3023, column: 16, scope: !6631)
!6633 = !DILocation(line: 3023, column: 20, scope: !6631)
!6634 = !DILocation(line: 3023, column: 23, scope: !6635)
!6635 = !DILexicalBlockFile(scope: !6631, file: !4, discriminator: 1)
!6636 = !DILocation(line: 3023, column: 29, scope: !6631)
!6637 = !DILocation(line: 3023, column: 34, scope: !6631)
!6638 = !DILocation(line: 3023, column: 28, scope: !6631)
!6639 = !DILocation(line: 3023, column: 25, scope: !6631)
!6640 = !DILocation(line: 3023, column: 14, scope: !6611)
!6641 = !DILocation(line: 3024, column: 24, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6643, file: !4, line: 3024, column: 13)
!6643 = distinct !DILexicalBlock(scope: !6631, file: !4, line: 3023, column: 40)
!6644 = !DILocation(line: 3024, column: 32, scope: !6642)
!6645 = !DILocation(line: 3024, column: 35, scope: !6642)
!6646 = !DILocation(line: 3024, column: 14, scope: !6642)
!6647 = !DILocation(line: 3024, column: 13, scope: !6643)
!6648 = !DILocation(line: 3025, column: 13, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6642, file: !4, line: 3024, column: 44)
!6650 = !DILocation(line: 3027, column: 18, scope: !6643)
!6651 = !DILocation(line: 3027, column: 26, scope: !6643)
!6652 = !DILocation(line: 3027, column: 9, scope: !6643)
!6653 = !DILocation(line: 3028, column: 29, scope: !6643)
!6654 = !DILocation(line: 3028, column: 38, scope: !6643)
!6655 = !DILocation(line: 3028, column: 37, scope: !6643)
!6656 = !DILocation(line: 3028, column: 9, scope: !6643)
!6657 = !DILocation(line: 3029, column: 5, scope: !6643)
!6658 = !DILocation(line: 3031, column: 22, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6631, file: !4, line: 3030, column: 10)
!6660 = !DILocation(line: 3031, column: 43, scope: !6659)
!6661 = !DILocation(line: 3031, column: 9, scope: !6659)
!6662 = !DILocation(line: 3033, column: 1, scope: !736)
!6663 = !DILocation(line: 3040, column: 19, scope: !745)
!6664 = !DILocation(line: 3040, column: 40, scope: !745)
!6665 = !DILocation(line: 3040, column: 56, scope: !745)
!6666 = !DILocation(line: 3040, column: 80, scope: !745)
!6667 = !DILocation(line: 3041, column: 22, scope: !745)
!6668 = !DILocation(line: 3043, column: 5, scope: !745)
!6669 = !DILocation(line: 3043, column: 14, scope: !745)
!6670 = !DILocation(line: 3044, column: 5, scope: !745)
!6671 = !DILocation(line: 3044, column: 17, scope: !745)
!6672 = !DILocation(line: 3046, column: 23, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !745, file: !4, line: 3046, column: 9)
!6674 = !DILocation(line: 3046, column: 9, scope: !6673)
!6675 = !DILocation(line: 3046, column: 26, scope: !6673)
!6676 = !DILocation(line: 3046, column: 43, scope: !6677)
!6677 = !DILexicalBlockFile(scope: !6673, file: !4, discriminator: 1)
!6678 = !DILocation(line: 3046, column: 29, scope: !6673)
!6679 = !DILocation(line: 3046, column: 9, scope: !745)
!6680 = !DILocation(line: 3047, column: 29, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !4, line: 3047, column: 13)
!6682 = distinct !DILexicalBlock(scope: !6673, file: !4, line: 3046, column: 47)
!6683 = !DILocation(line: 3047, column: 37, scope: !6681)
!6684 = !DILocation(line: 3047, column: 40, scope: !6681)
!6685 = !DILocation(line: 3047, column: 43, scope: !6681)
!6686 = !DILocation(line: 3047, column: 48, scope: !6681)
!6687 = !DILocation(line: 3047, column: 13, scope: !6681)
!6688 = !DILocation(line: 3047, column: 13, scope: !6682)
!6689 = !DILocation(line: 3048, column: 13, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6681, file: !4, line: 3047, column: 57)
!6691 = !DILocation(line: 3050, column: 5, scope: !6682)
!6692 = !DILocation(line: 3051, column: 9, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !745, file: !4, line: 3051, column: 9)
!6694 = !DILocation(line: 3051, column: 12, scope: !6693)
!6695 = !DILocation(line: 3051, column: 16, scope: !6693)
!6696 = !DILocation(line: 3051, column: 21, scope: !6693)
!6697 = !DILocation(line: 3051, column: 39, scope: !6698)
!6698 = !DILexicalBlockFile(scope: !6693, file: !4, discriminator: 1)
!6699 = !DILocation(line: 3051, column: 24, scope: !6693)
!6700 = !DILocation(line: 3051, column: 9, scope: !745)
!6701 = !DILocation(line: 3052, column: 22, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6693, file: !4, line: 3051, column: 43)
!6703 = !DILocation(line: 3052, column: 43, scope: !6702)
!6704 = !DILocation(line: 3052, column: 9, scope: !6702)
!6705 = !DILocation(line: 3053, column: 9, scope: !6702)
!6706 = !DILocation(line: 3056, column: 24, scope: !745)
!6707 = !DILocation(line: 3056, column: 9, scope: !745)
!6708 = !DILocation(line: 3056, column: 7, scope: !745)
!6709 = !DILocation(line: 3057, column: 9, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !745, file: !4, line: 3057, column: 9)
!6711 = !DILocation(line: 3057, column: 19, scope: !6710)
!6712 = !DILocation(line: 3057, column: 9, scope: !745)
!6713 = !DILocation(line: 3058, column: 22, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6710, file: !4, line: 3057, column: 33)
!6715 = !DILocation(line: 3058, column: 43, scope: !6714)
!6716 = !DILocation(line: 3058, column: 9, scope: !6714)
!6717 = !DILocation(line: 3059, column: 9, scope: !6714)
!6718 = !DILocation(line: 3061, column: 9, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !745, file: !4, line: 3061, column: 9)
!6720 = !DILocation(line: 3061, column: 13, scope: !6719)
!6721 = !DILocation(line: 3061, column: 18, scope: !6719)
!6722 = !DILocation(line: 3061, column: 11, scope: !6719)
!6723 = !DILocation(line: 3061, column: 23, scope: !6719)
!6724 = !DILocation(line: 3061, column: 26, scope: !6725)
!6725 = !DILexicalBlockFile(scope: !6719, file: !4, discriminator: 1)
!6726 = !DILocation(line: 3061, column: 31, scope: !6719)
!6727 = !DILocation(line: 3061, column: 36, scope: !6719)
!6728 = !DILocation(line: 3061, column: 30, scope: !6719)
!6729 = !DILocation(line: 3061, column: 28, scope: !6719)
!6730 = !DILocation(line: 3061, column: 9, scope: !745)
!6731 = !DILocation(line: 3062, column: 22, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6719, file: !4, line: 3061, column: 42)
!6733 = !DILocation(line: 3062, column: 43, scope: !6732)
!6734 = !DILocation(line: 3062, column: 9, scope: !6732)
!6735 = !DILocation(line: 3063, column: 9, scope: !6732)
!6736 = !DILocation(line: 3065, column: 24, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !745, file: !4, line: 3065, column: 9)
!6738 = !DILocation(line: 3065, column: 9, scope: !6737)
!6739 = !DILocation(line: 3065, column: 9, scope: !745)
!6740 = !DILocation(line: 3066, column: 19, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6737, file: !4, line: 3065, column: 28)
!6742 = !DILocation(line: 3066, column: 27, scope: !6741)
!6743 = !DILocation(line: 3066, column: 30, scope: !6741)
!6744 = !DILocation(line: 3066, column: 9, scope: !6741)
!6745 = !DILocation(line: 3067, column: 9, scope: !6741)
!6746 = !DILocation(line: 3070, column: 9, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !745, file: !4, line: 3070, column: 9)
!6748 = !DILocation(line: 3070, column: 11, scope: !6747)
!6749 = !DILocation(line: 3070, column: 9, scope: !745)
!6750 = !DILocation(line: 3071, column: 21, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6747, file: !4, line: 3070, column: 17)
!6752 = !DILocation(line: 3071, column: 29, scope: !6751)
!6753 = !DILocation(line: 3071, column: 32, scope: !6751)
!6754 = !DILocation(line: 3071, column: 35, scope: !6751)
!6755 = !DILocation(line: 3071, column: 9, scope: !6751)
!6756 = !DILocation(line: 3072, column: 18, scope: !6751)
!6757 = !DILocation(line: 3072, column: 26, scope: !6751)
!6758 = !DILocation(line: 3072, column: 9, scope: !6751)
!6759 = !DILocation(line: 3073, column: 5, scope: !6751)
!6760 = !DILocation(line: 3075, column: 24, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !4, line: 3075, column: 13)
!6762 = distinct !DILexicalBlock(scope: !6747, file: !4, line: 3074, column: 10)
!6763 = !DILocation(line: 3075, column: 32, scope: !6761)
!6764 = !DILocation(line: 3075, column: 35, scope: !6761)
!6765 = !DILocation(line: 3075, column: 14, scope: !6761)
!6766 = !DILocation(line: 3075, column: 13, scope: !6762)
!6767 = !DILocation(line: 3076, column: 13, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6761, file: !4, line: 3075, column: 44)
!6769 = !DILocation(line: 3078, column: 18, scope: !6762)
!6770 = !DILocation(line: 3078, column: 26, scope: !6762)
!6771 = !DILocation(line: 3078, column: 9, scope: !6762)
!6772 = !DILocation(line: 3079, column: 29, scope: !6762)
!6773 = !DILocation(line: 3079, column: 38, scope: !6762)
!6774 = !DILocation(line: 3079, column: 37, scope: !6762)
!6775 = !DILocation(line: 3079, column: 9, scope: !6762)
!6776 = !DILocation(line: 3081, column: 1, scope: !745)
!6777 = !DILocation(line: 3081, column: 1, scope: !6778)
!6778 = !DILexicalBlockFile(scope: !745, file: !4, discriminator: 1)
!6779 = !DILocation(line: 3085, column: 17, scope: !754)
!6780 = !DILocation(line: 3085, column: 38, scope: !754)
!6781 = !DILocation(line: 3085, column: 54, scope: !754)
!6782 = !DILocation(line: 3086, column: 30, scope: !754)
!6783 = !DILocation(line: 3086, column: 45, scope: !754)
!6784 = !DILocation(line: 3088, column: 5, scope: !754)
!6785 = !DILocation(line: 3088, column: 18, scope: !754)
!6786 = !DILocation(line: 3088, column: 24, scope: !754)
!6787 = !DILocation(line: 3088, column: 28, scope: !754)
!6788 = !DILocation(line: 3088, column: 36, scope: !754)
!6789 = !DILocation(line: 3089, column: 5, scope: !754)
!6790 = !DILocation(line: 3089, column: 16, scope: !754)
!6791 = !DILocation(line: 3089, column: 19, scope: !754)
!6792 = !DILocation(line: 3089, column: 22, scope: !754)
!6793 = !DILocation(line: 3089, column: 25, scope: !754)
!6794 = !DILocation(line: 3089, column: 31, scope: !754)
!6795 = !DILocation(line: 3090, column: 5, scope: !754)
!6796 = !DILocation(line: 3090, column: 9, scope: !754)
!6797 = !DILocation(line: 3090, column: 12, scope: !754)
!6798 = !DILocation(line: 3091, column: 5, scope: !754)
!6799 = !DILocation(line: 3091, column: 17, scope: !754)
!6800 = !DILocation(line: 3093, column: 23, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !754, file: !4, line: 3093, column: 9)
!6802 = !DILocation(line: 3093, column: 9, scope: !6801)
!6803 = !DILocation(line: 3093, column: 26, scope: !6801)
!6804 = !DILocation(line: 3093, column: 43, scope: !6805)
!6805 = !DILexicalBlockFile(scope: !6801, file: !4, discriminator: 1)
!6806 = !DILocation(line: 3093, column: 29, scope: !6801)
!6807 = !DILocation(line: 3093, column: 46, scope: !6801)
!6808 = !DILocation(line: 3094, column: 24, scope: !6801)
!6809 = !DILocation(line: 3094, column: 9, scope: !6801)
!6810 = !DILocation(line: 3094, column: 27, scope: !6801)
!6811 = !DILocation(line: 3094, column: 45, scope: !6805)
!6812 = !DILocation(line: 3094, column: 30, scope: !6801)
!6813 = !DILocation(line: 3094, column: 48, scope: !6801)
!6814 = !DILocation(line: 3095, column: 9, scope: !6801)
!6815 = !DILocation(line: 3095, column: 12, scope: !6801)
!6816 = !DILocation(line: 3095, column: 16, scope: !6801)
!6817 = !DILocation(line: 3095, column: 21, scope: !6801)
!6818 = !DILocation(line: 3095, column: 24, scope: !6805)
!6819 = !DILocation(line: 3095, column: 27, scope: !6801)
!6820 = !DILocation(line: 3095, column: 31, scope: !6801)
!6821 = !DILocation(line: 3093, column: 9, scope: !754)
!6822 = !DILocation(line: 3096, column: 22, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6801, file: !4, line: 3095, column: 37)
!6824 = !DILocation(line: 3096, column: 43, scope: !6823)
!6825 = !DILocation(line: 3096, column: 9, scope: !6823)
!6826 = !DILocation(line: 3097, column: 9, scope: !6823)
!6827 = !DILocation(line: 3099, column: 9, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !754, file: !4, line: 3099, column: 9)
!6829 = !DILocation(line: 3099, column: 12, scope: !6828)
!6830 = !DILocation(line: 3099, column: 21, scope: !6828)
!6831 = !DILocation(line: 3099, column: 24, scope: !6828)
!6832 = !DILocation(line: 3099, column: 19, scope: !6828)
!6833 = !DILocation(line: 3099, column: 9, scope: !754)
!6834 = !DILocation(line: 3100, column: 15, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6828, file: !4, line: 3099, column: 32)
!6836 = !DILocation(line: 3100, column: 13, scope: !6835)
!6837 = !DILocation(line: 3101, column: 17, scope: !6835)
!6838 = !DILocation(line: 3101, column: 15, scope: !6835)
!6839 = !DILocation(line: 3102, column: 5, scope: !6835)
!6840 = !DILocation(line: 3103, column: 22, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !754, file: !4, line: 3103, column: 9)
!6842 = !DILocation(line: 3103, column: 30, scope: !6841)
!6843 = !DILocation(line: 3103, column: 35, scope: !6841)
!6844 = !DILocation(line: 3103, column: 40, scope: !6841)
!6845 = !DILocation(line: 3103, column: 10, scope: !6841)
!6846 = !DILocation(line: 3103, column: 9, scope: !754)
!6847 = !DILocation(line: 3104, column: 9, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6841, file: !4, line: 3103, column: 49)
!6849 = !DILocation(line: 3109, column: 12, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !754, file: !4, line: 3109, column: 5)
!6851 = !DILocation(line: 3109, column: 10, scope: !6850)
!6852 = !DILocation(line: 3109, column: 17, scope: !6853)
!6853 = !DILexicalBlockFile(scope: !6854, file: !4, discriminator: 2)
!6854 = !DILexicalBlockFile(scope: !6855, file: !4, discriminator: 1)
!6855 = distinct !DILexicalBlock(scope: !6850, file: !4, line: 3109, column: 5)
!6856 = !DILocation(line: 3109, column: 21, scope: !6855)
!6857 = !DILocation(line: 3109, column: 28, scope: !6855)
!6858 = !DILocation(line: 3109, column: 31, scope: !6855)
!6859 = !DILocation(line: 3109, column: 19, scope: !6855)
!6860 = !DILocation(line: 3109, column: 5, scope: !6850)
!6861 = !DILocation(line: 3110, column: 25, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6855, file: !4, line: 3109, column: 40)
!6863 = !DILocation(line: 3110, column: 13, scope: !6862)
!6864 = !DILocation(line: 3110, column: 20, scope: !6862)
!6865 = !DILocation(line: 3110, column: 11, scope: !6862)
!6866 = !DILocation(line: 3111, column: 23, scope: !6862)
!6867 = !DILocation(line: 3111, column: 13, scope: !6862)
!6868 = !DILocation(line: 3111, column: 18, scope: !6862)
!6869 = !DILocation(line: 3111, column: 11, scope: !6862)
!6870 = !DILocation(line: 3112, column: 11, scope: !6862)
!6871 = !DILocation(line: 3113, column: 16, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6862, file: !4, line: 3113, column: 9)
!6873 = !DILocation(line: 3113, column: 14, scope: !6872)
!6874 = !DILocation(line: 3113, column: 21, scope: !6875)
!6875 = !DILexicalBlockFile(scope: !6876, file: !4, discriminator: 2)
!6876 = !DILexicalBlockFile(scope: !6877, file: !4, discriminator: 1)
!6877 = distinct !DILexicalBlock(scope: !6872, file: !4, line: 3113, column: 9)
!6878 = !DILocation(line: 3113, column: 23, scope: !6877)
!6879 = !DILocation(line: 3113, column: 9, scope: !6872)
!6880 = !DILocation(line: 3114, column: 20, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6877, file: !4, line: 3113, column: 34)
!6882 = !DILocation(line: 3114, column: 22, scope: !6881)
!6883 = !DILocation(line: 3114, column: 18, scope: !6881)
!6884 = !DILocation(line: 3115, column: 15, scope: !6881)
!6885 = !DILocation(line: 3116, column: 20, scope: !6881)
!6886 = !DILocation(line: 3116, column: 22, scope: !6881)
!6887 = !DILocation(line: 3116, column: 18, scope: !6881)
!6888 = !DILocation(line: 3117, column: 15, scope: !6881)
!6889 = !DILocation(line: 3118, column: 17, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6881, file: !4, line: 3118, column: 17)
!6891 = !DILocation(line: 3118, column: 22, scope: !6890)
!6892 = !DILocation(line: 3118, column: 26, scope: !6890)
!6893 = !DILocation(line: 3118, column: 29, scope: !6894)
!6894 = !DILexicalBlockFile(scope: !6890, file: !4, discriminator: 1)
!6895 = !DILocation(line: 3118, column: 34, scope: !6890)
!6896 = !DILocation(line: 3118, column: 17, scope: !6881)
!6897 = !DILocation(line: 3119, column: 17, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6890, file: !4, line: 3118, column: 39)
!6899 = !DILocation(line: 3121, column: 19, scope: !6881)
!6900 = !DILocation(line: 3121, column: 24, scope: !6881)
!6901 = !DILocation(line: 3121, column: 23, scope: !6881)
!6902 = !DILocation(line: 3121, column: 18, scope: !6881)
!6903 = !DILocation(line: 3121, column: 42, scope: !6904)
!6904 = !DILexicalBlockFile(scope: !6881, file: !4, discriminator: 1)
!6905 = !DILocation(line: 3121, column: 32, scope: !6881)
!6906 = !DILocation(line: 3121, column: 18, scope: !6907)
!6907 = !DILexicalBlockFile(scope: !6881, file: !4, discriminator: 2)
!6908 = !DILocation(line: 3121, column: 15, scope: !6909)
!6909 = !DILexicalBlockFile(scope: !6910, file: !4, discriminator: 4)
!6910 = !DILexicalBlockFile(scope: !6881, file: !4, discriminator: 3)
!6911 = !DILocation(line: 3122, column: 9, scope: !6881)
!6912 = !DILocation(line: 3113, column: 30, scope: !6877)
!6913 = !DILocation(line: 3113, column: 9, scope: !6877)
!6914 = !DILocation(line: 3123, column: 27, scope: !6862)
!6915 = !DILocation(line: 3123, column: 22, scope: !6862)
!6916 = !DILocation(line: 3123, column: 9, scope: !6862)
!6917 = !DILocation(line: 3123, column: 17, scope: !6862)
!6918 = !DILocation(line: 3123, column: 25, scope: !6862)
!6919 = !DILocation(line: 3124, column: 5, scope: !6862)
!6920 = !DILocation(line: 3109, column: 36, scope: !6855)
!6921 = !DILocation(line: 3109, column: 5, scope: !6855)
!6922 = !DILocation(line: 3126, column: 21, scope: !754)
!6923 = !DILocation(line: 3126, column: 9, scope: !754)
!6924 = !DILocation(line: 3126, column: 16, scope: !754)
!6925 = !DILocation(line: 3126, column: 7, scope: !754)
!6926 = !DILocation(line: 3127, column: 19, scope: !754)
!6927 = !DILocation(line: 3127, column: 9, scope: !754)
!6928 = !DILocation(line: 3127, column: 14, scope: !754)
!6929 = !DILocation(line: 3127, column: 7, scope: !754)
!6930 = !DILocation(line: 3128, column: 7, scope: !754)
!6931 = !DILocation(line: 3129, column: 33, scope: !754)
!6932 = !DILocation(line: 3129, column: 17, scope: !754)
!6933 = !DILocation(line: 3129, column: 15, scope: !754)
!6934 = !DILocation(line: 3130, column: 12, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !754, file: !4, line: 3130, column: 5)
!6936 = !DILocation(line: 3130, column: 10, scope: !6935)
!6937 = !DILocation(line: 3130, column: 17, scope: !6938)
!6938 = !DILexicalBlockFile(scope: !6939, file: !4, discriminator: 2)
!6939 = !DILexicalBlockFile(scope: !6940, file: !4, discriminator: 1)
!6940 = distinct !DILexicalBlock(scope: !6935, file: !4, line: 3130, column: 5)
!6941 = !DILocation(line: 3130, column: 21, scope: !6940)
!6942 = !DILocation(line: 3130, column: 19, scope: !6940)
!6943 = !DILocation(line: 3130, column: 5, scope: !6935)
!6944 = !DILocation(line: 3131, column: 16, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6940, file: !4, line: 3130, column: 37)
!6946 = !DILocation(line: 3131, column: 18, scope: !6945)
!6947 = !DILocation(line: 3131, column: 14, scope: !6945)
!6948 = !DILocation(line: 3132, column: 11, scope: !6945)
!6949 = !DILocation(line: 3133, column: 16, scope: !6945)
!6950 = !DILocation(line: 3133, column: 18, scope: !6945)
!6951 = !DILocation(line: 3133, column: 14, scope: !6945)
!6952 = !DILocation(line: 3134, column: 11, scope: !6945)
!6953 = !DILocation(line: 3135, column: 13, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6945, file: !4, line: 3135, column: 13)
!6955 = !DILocation(line: 3135, column: 18, scope: !6954)
!6956 = !DILocation(line: 3135, column: 22, scope: !6954)
!6957 = !DILocation(line: 3135, column: 25, scope: !6958)
!6958 = !DILexicalBlockFile(scope: !6954, file: !4, discriminator: 1)
!6959 = !DILocation(line: 3135, column: 30, scope: !6954)
!6960 = !DILocation(line: 3135, column: 13, scope: !6945)
!6961 = !DILocation(line: 3136, column: 13, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6954, file: !4, line: 3135, column: 35)
!6963 = !DILocation(line: 3138, column: 15, scope: !6945)
!6964 = !DILocation(line: 3138, column: 20, scope: !6945)
!6965 = !DILocation(line: 3138, column: 19, scope: !6945)
!6966 = !DILocation(line: 3138, column: 14, scope: !6945)
!6967 = !DILocation(line: 3138, column: 38, scope: !6968)
!6968 = !DILexicalBlockFile(scope: !6945, file: !4, discriminator: 1)
!6969 = !DILocation(line: 3138, column: 28, scope: !6945)
!6970 = !DILocation(line: 3138, column: 14, scope: !6971)
!6971 = !DILexicalBlockFile(scope: !6945, file: !4, discriminator: 2)
!6972 = !DILocation(line: 3138, column: 11, scope: !6973)
!6973 = !DILexicalBlockFile(scope: !6974, file: !4, discriminator: 4)
!6974 = !DILexicalBlockFile(scope: !6945, file: !4, discriminator: 3)
!6975 = !DILocation(line: 3139, column: 5, scope: !6945)
!6976 = !DILocation(line: 3130, column: 33, scope: !6940)
!6977 = !DILocation(line: 3130, column: 5, scope: !6940)
!6978 = !DILocation(line: 3142, column: 5, scope: !754)
!6979 = !DILocation(line: 3142, column: 12, scope: !6980)
!6980 = !DILexicalBlockFile(scope: !6981, file: !4, discriminator: 2)
!6981 = !DILexicalBlockFile(scope: !6982, file: !4, discriminator: 1)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !4, line: 3142, column: 5)
!6983 = distinct !DILexicalBlock(scope: !754, file: !4, line: 3142, column: 5)
!6984 = !DILocation(line: 3142, column: 14, scope: !6982)
!6985 = !DILocation(line: 3142, column: 5, scope: !6983)
!6986 = !DILocation(line: 3143, column: 16, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6982, file: !4, line: 3142, column: 25)
!6988 = !DILocation(line: 3143, column: 18, scope: !6987)
!6989 = !DILocation(line: 3143, column: 14, scope: !6987)
!6990 = !DILocation(line: 3144, column: 11, scope: !6987)
!6991 = !DILocation(line: 3145, column: 13, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6987, file: !4, line: 3145, column: 13)
!6993 = !DILocation(line: 3145, column: 18, scope: !6992)
!6994 = !DILocation(line: 3145, column: 13, scope: !6987)
!6995 = !DILocation(line: 3146, column: 13, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6992, file: !4, line: 3145, column: 23)
!6997 = !DILocation(line: 3148, column: 14, scope: !6987)
!6998 = !DILocation(line: 3148, column: 29, scope: !6987)
!6999 = !DILocation(line: 3148, column: 19, scope: !6987)
!7000 = !DILocation(line: 3148, column: 18, scope: !6987)
!7001 = !DILocation(line: 3148, column: 11, scope: !6987)
!7002 = !DILocation(line: 3149, column: 5, scope: !6987)
!7003 = !DILocation(line: 3142, column: 21, scope: !6982)
!7004 = !DILocation(line: 3142, column: 5, scope: !6982)
!7005 = !DILocation(line: 3150, column: 25, scope: !754)
!7006 = !DILocation(line: 3150, column: 19, scope: !754)
!7007 = !DILocation(line: 3150, column: 5, scope: !754)
!7008 = !DILocation(line: 3150, column: 13, scope: !754)
!7009 = !DILocation(line: 3150, column: 23, scope: !754)
!7010 = !DILocation(line: 3152, column: 5, scope: !754)
!7011 = !DILocation(line: 3152, column: 12, scope: !7012)
!7012 = !DILexicalBlockFile(scope: !7013, file: !4, discriminator: 2)
!7013 = !DILexicalBlockFile(scope: !7014, file: !4, discriminator: 1)
!7014 = distinct !DILexicalBlock(scope: !7015, file: !4, line: 3152, column: 5)
!7015 = distinct !DILexicalBlock(scope: !754, file: !4, line: 3152, column: 5)
!7016 = !DILocation(line: 3152, column: 16, scope: !7014)
!7017 = !DILocation(line: 3152, column: 21, scope: !7014)
!7018 = !DILocation(line: 3152, column: 14, scope: !7014)
!7019 = !DILocation(line: 3152, column: 5, scope: !7015)
!7020 = !DILocation(line: 3153, column: 23, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7014, file: !4, line: 3152, column: 31)
!7022 = !DILocation(line: 3153, column: 13, scope: !7021)
!7023 = !DILocation(line: 3153, column: 18, scope: !7021)
!7024 = !DILocation(line: 3153, column: 11, scope: !7021)
!7025 = !DILocation(line: 3154, column: 16, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7021, file: !4, line: 3154, column: 9)
!7027 = !DILocation(line: 3154, column: 14, scope: !7026)
!7028 = !DILocation(line: 3154, column: 21, scope: !7029)
!7029 = !DILexicalBlockFile(scope: !7030, file: !4, discriminator: 2)
!7030 = !DILexicalBlockFile(scope: !7031, file: !4, discriminator: 1)
!7031 = distinct !DILexicalBlock(scope: !7026, file: !4, line: 3154, column: 9)
!7032 = !DILocation(line: 3154, column: 23, scope: !7031)
!7033 = !DILocation(line: 3154, column: 9, scope: !7026)
!7034 = !DILocation(line: 3155, column: 20, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7031, file: !4, line: 3154, column: 34)
!7036 = !DILocation(line: 3155, column: 22, scope: !7035)
!7037 = !DILocation(line: 3155, column: 18, scope: !7035)
!7038 = !DILocation(line: 3156, column: 15, scope: !7035)
!7039 = !DILocation(line: 3157, column: 17, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7035, file: !4, line: 3157, column: 17)
!7041 = !DILocation(line: 3157, column: 22, scope: !7040)
!7042 = !DILocation(line: 3157, column: 17, scope: !7035)
!7043 = !DILocation(line: 3158, column: 17, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7040, file: !4, line: 3157, column: 27)
!7045 = !DILocation(line: 3160, column: 9, scope: !7035)
!7046 = !DILocation(line: 3154, column: 30, scope: !7031)
!7047 = !DILocation(line: 3154, column: 9, scope: !7031)
!7048 = !DILocation(line: 3161, column: 37, scope: !7021)
!7049 = !DILocation(line: 3161, column: 27, scope: !7021)
!7050 = !DILocation(line: 3161, column: 32, scope: !7021)
!7051 = !DILocation(line: 3161, column: 22, scope: !7021)
!7052 = !DILocation(line: 3161, column: 9, scope: !7021)
!7053 = !DILocation(line: 3161, column: 17, scope: !7021)
!7054 = !DILocation(line: 3161, column: 25, scope: !7021)
!7055 = !DILocation(line: 3162, column: 5, scope: !7021)
!7056 = !DILocation(line: 3152, column: 27, scope: !7014)
!7057 = !DILocation(line: 3152, column: 5, scope: !7014)
!7058 = !DILocation(line: 3164, column: 21, scope: !754)
!7059 = !DILocation(line: 3164, column: 5, scope: !754)
!7060 = !DILocation(line: 3165, column: 5, scope: !754)
!7061 = !DILocation(line: 3165, column: 13, scope: !754)
!7062 = !DILocation(line: 3165, column: 17, scope: !754)
!7063 = !DILocation(line: 3166, column: 34, scope: !754)
!7064 = !DILocation(line: 3166, column: 42, scope: !754)
!7065 = !DILocation(line: 3166, column: 48, scope: !754)
!7066 = !DILocation(line: 3166, column: 53, scope: !754)
!7067 = !DILocation(line: 3166, column: 19, scope: !754)
!7068 = !DILocation(line: 3166, column: 5, scope: !754)
!7069 = !DILocation(line: 3166, column: 13, scope: !754)
!7070 = !DILocation(line: 3166, column: 17, scope: !754)
!7071 = !DILocation(line: 3167, column: 17, scope: !754)
!7072 = !DILocation(line: 3167, column: 25, scope: !754)
!7073 = !DILocation(line: 3167, column: 33, scope: !754)
!7074 = !DILocation(line: 3167, column: 38, scope: !754)
!7075 = !DILocation(line: 3167, column: 5, scope: !754)
!7076 = !DILocation(line: 3168, column: 19, scope: !754)
!7077 = !DILocation(line: 3168, column: 5, scope: !754)
!7078 = !DILocation(line: 3169, column: 14, scope: !754)
!7079 = !DILocation(line: 3169, column: 22, scope: !754)
!7080 = !DILocation(line: 3169, column: 5, scope: !754)
!7081 = !DILocation(line: 3170, column: 5, scope: !754)
!7082 = !DILocation(line: 3173, column: 18, scope: !754)
!7083 = !DILocation(line: 3173, column: 39, scope: !754)
!7084 = !DILocation(line: 3173, column: 5, scope: !754)
!7085 = !DILocation(line: 3174, column: 1, scope: !754)
!7086 = !DILocation(line: 3174, column: 1, scope: !7087)
!7087 = !DILexicalBlockFile(scope: !754, file: !4, discriminator: 1)
!7088 = !DILocation(line: 3187, column: 17, scope: !771)
!7089 = !DILocation(line: 3187, column: 38, scope: !771)
!7090 = !DILocation(line: 3187, column: 62, scope: !771)
!7091 = !DILocation(line: 3188, column: 20, scope: !771)
!7092 = !DILocation(line: 3190, column: 23, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !771, file: !4, line: 3190, column: 9)
!7094 = !DILocation(line: 3190, column: 9, scope: !7093)
!7095 = !DILocation(line: 3190, column: 9, scope: !771)
!7096 = !DILocation(line: 3191, column: 28, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !4, line: 3191, column: 13)
!7098 = distinct !DILexicalBlock(scope: !7093, file: !4, line: 3190, column: 27)
!7099 = !DILocation(line: 3191, column: 36, scope: !7097)
!7100 = !DILocation(line: 3191, column: 39, scope: !7097)
!7101 = !DILocation(line: 3191, column: 44, scope: !7097)
!7102 = !DILocation(line: 3191, column: 13, scope: !7097)
!7103 = !DILocation(line: 3191, column: 13, scope: !7098)
!7104 = !DILocation(line: 3192, column: 13, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7097, file: !4, line: 3191, column: 53)
!7106 = !DILocation(line: 3194, column: 5, scope: !7098)
!7107 = !DILocation(line: 3196, column: 24, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !771, file: !4, line: 3196, column: 9)
!7109 = !DILocation(line: 3196, column: 9, scope: !7108)
!7110 = !DILocation(line: 3196, column: 9, scope: !771)
!7111 = !DILocation(line: 3197, column: 20, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7108, file: !4, line: 3196, column: 28)
!7113 = !DILocation(line: 3197, column: 28, scope: !7112)
!7114 = !DILocation(line: 3197, column: 31, scope: !7112)
!7115 = !DILocation(line: 3197, column: 36, scope: !7112)
!7116 = !DILocation(line: 3197, column: 9, scope: !7112)
!7117 = !DILocation(line: 3198, column: 5, scope: !7112)
!7118 = !DILocation(line: 3200, column: 19, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7108, file: !4, line: 3199, column: 10)
!7120 = !DILocation(line: 3200, column: 27, scope: !7119)
!7121 = !DILocation(line: 3200, column: 30, scope: !7119)
!7122 = !DILocation(line: 3200, column: 35, scope: !7119)
!7123 = !DILocation(line: 3200, column: 9, scope: !7119)
!7124 = !DILocation(line: 3202, column: 1, scope: !771)
!7125 = !DILocation(line: 5932, column: 19, scope: !1156)
!7126 = !DILocation(line: 5932, column: 40, scope: !1156)
!7127 = !DILocation(line: 5932, column: 64, scope: !1156)
!7128 = !DILocation(line: 5933, column: 22, scope: !1156)
!7129 = !DILocation(line: 5935, column: 23, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !1156, file: !4, line: 5935, column: 9)
!7131 = !DILocation(line: 5935, column: 9, scope: !7130)
!7132 = !DILocation(line: 5935, column: 9, scope: !1156)
!7133 = !DILocation(line: 5936, column: 28, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7135, file: !4, line: 5936, column: 13)
!7135 = distinct !DILexicalBlock(scope: !7130, file: !4, line: 5935, column: 27)
!7136 = !DILocation(line: 5936, column: 36, scope: !7134)
!7137 = !DILocation(line: 5936, column: 39, scope: !7134)
!7138 = !DILocation(line: 5936, column: 44, scope: !7134)
!7139 = !DILocation(line: 5936, column: 13, scope: !7134)
!7140 = !DILocation(line: 5936, column: 13, scope: !7135)
!7141 = !DILocation(line: 5937, column: 13, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7134, file: !4, line: 5936, column: 53)
!7143 = !DILocation(line: 5939, column: 5, scope: !7135)
!7144 = !DILocation(line: 5941, column: 20, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !1156, file: !4, line: 5941, column: 9)
!7146 = !DILocation(line: 5941, column: 9, scope: !7145)
!7147 = !DILocation(line: 5941, column: 23, scope: !7145)
!7148 = !DILocation(line: 5941, column: 26, scope: !7149)
!7149 = !DILexicalBlockFile(scope: !7145, file: !4, discriminator: 1)
!7150 = !DILocation(line: 5941, column: 31, scope: !7145)
!7151 = !DILocation(line: 5941, column: 37, scope: !7145)
!7152 = !DILocation(line: 5941, column: 9, scope: !1156)
!7153 = !DILocation(line: 5942, column: 23, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7145, file: !4, line: 5941, column: 57)
!7155 = !DILocation(line: 5942, column: 31, scope: !7154)
!7156 = !DILocation(line: 5942, column: 34, scope: !7154)
!7157 = !DILocation(line: 5942, column: 9, scope: !7154)
!7158 = !DILocation(line: 5943, column: 5, scope: !7154)
!7159 = !DILocation(line: 5945, column: 26, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7145, file: !4, line: 5944, column: 10)
!7161 = !DILocation(line: 5945, column: 34, scope: !7160)
!7162 = !DILocation(line: 5945, column: 37, scope: !7160)
!7163 = !DILocation(line: 5945, column: 9, scope: !7160)
!7164 = !DILocation(line: 5948, column: 19, scope: !1156)
!7165 = !DILocation(line: 5948, column: 27, scope: !1156)
!7166 = !DILocation(line: 5948, column: 32, scope: !1156)
!7167 = !DILocation(line: 5948, column: 5, scope: !1156)
!7168 = !DILocation(line: 5949, column: 1, scope: !1156)
!7169 = !DILocation(line: 5949, column: 1, scope: !7170)
!7170 = !DILexicalBlockFile(scope: !1156, file: !4, discriminator: 1)
!7171 = !DILocation(line: 5953, column: 18, scope: !1162)
!7172 = !DILocation(line: 5953, column: 39, scope: !1162)
!7173 = !DILocation(line: 5953, column: 63, scope: !1162)
!7174 = !DILocation(line: 5954, column: 21, scope: !1162)
!7175 = !DILocation(line: 5956, column: 23, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !1162, file: !4, line: 5956, column: 9)
!7177 = !DILocation(line: 5956, column: 9, scope: !7176)
!7178 = !DILocation(line: 5956, column: 9, scope: !1162)
!7179 = !DILocation(line: 5957, column: 28, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7181, file: !4, line: 5957, column: 13)
!7181 = distinct !DILexicalBlock(scope: !7176, file: !4, line: 5956, column: 27)
!7182 = !DILocation(line: 5957, column: 36, scope: !7180)
!7183 = !DILocation(line: 5957, column: 39, scope: !7180)
!7184 = !DILocation(line: 5957, column: 44, scope: !7180)
!7185 = !DILocation(line: 5957, column: 13, scope: !7180)
!7186 = !DILocation(line: 5957, column: 13, scope: !7181)
!7187 = !DILocation(line: 5958, column: 13, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7180, file: !4, line: 5957, column: 53)
!7189 = !DILocation(line: 5960, column: 5, scope: !7181)
!7190 = !DILocation(line: 5962, column: 20, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !1162, file: !4, line: 5962, column: 9)
!7192 = !DILocation(line: 5962, column: 9, scope: !7191)
!7193 = !DILocation(line: 5962, column: 23, scope: !7191)
!7194 = !DILocation(line: 5962, column: 26, scope: !7195)
!7195 = !DILexicalBlockFile(scope: !7191, file: !4, discriminator: 1)
!7196 = !DILocation(line: 5962, column: 31, scope: !7191)
!7197 = !DILocation(line: 5962, column: 37, scope: !7191)
!7198 = !DILocation(line: 5962, column: 9, scope: !1162)
!7199 = !DILocation(line: 5963, column: 23, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7191, file: !4, line: 5962, column: 57)
!7201 = !DILocation(line: 5963, column: 31, scope: !7200)
!7202 = !DILocation(line: 5963, column: 34, scope: !7200)
!7203 = !DILocation(line: 5963, column: 9, scope: !7200)
!7204 = !DILocation(line: 5964, column: 5, scope: !7200)
!7205 = !DILocation(line: 5966, column: 19, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7191, file: !4, line: 5965, column: 10)
!7207 = !DILocation(line: 5966, column: 27, scope: !7206)
!7208 = !DILocation(line: 5966, column: 30, scope: !7206)
!7209 = !DILocation(line: 5966, column: 9, scope: !7206)
!7210 = !DILocation(line: 5969, column: 19, scope: !1162)
!7211 = !DILocation(line: 5969, column: 27, scope: !1162)
!7212 = !DILocation(line: 5969, column: 32, scope: !1162)
!7213 = !DILocation(line: 5969, column: 5, scope: !1162)
!7214 = !DILocation(line: 5970, column: 1, scope: !1162)
!7215 = !DILocation(line: 5970, column: 1, scope: !7216)
!7216 = !DILexicalBlockFile(scope: !1162, file: !4, discriminator: 1)
!7217 = !DILocation(line: 3389, column: 17, scope: !777)
!7218 = !DILocation(line: 3389, column: 38, scope: !777)
!7219 = !DILocation(line: 3389, column: 54, scope: !777)
!7220 = !DILocation(line: 3390, column: 31, scope: !777)
!7221 = !DILocation(line: 3390, column: 46, scope: !777)
!7222 = !DILocation(line: 3392, column: 23, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !777, file: !4, line: 3392, column: 9)
!7224 = !DILocation(line: 3392, column: 9, scope: !7223)
!7225 = !DILocation(line: 3392, column: 26, scope: !7223)
!7226 = !DILocation(line: 3392, column: 43, scope: !7227)
!7227 = !DILexicalBlockFile(scope: !7223, file: !4, discriminator: 1)
!7228 = !DILocation(line: 3392, column: 29, scope: !7223)
!7229 = !DILocation(line: 3392, column: 9, scope: !777)
!7230 = !DILocation(line: 3393, column: 29, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7232, file: !4, line: 3393, column: 13)
!7232 = distinct !DILexicalBlock(scope: !7223, file: !4, line: 3392, column: 47)
!7233 = !DILocation(line: 3393, column: 37, scope: !7231)
!7234 = !DILocation(line: 3393, column: 40, scope: !7231)
!7235 = !DILocation(line: 3393, column: 43, scope: !7231)
!7236 = !DILocation(line: 3393, column: 48, scope: !7231)
!7237 = !DILocation(line: 3393, column: 13, scope: !7231)
!7238 = !DILocation(line: 3393, column: 13, scope: !7232)
!7239 = !DILocation(line: 3394, column: 13, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7231, file: !4, line: 3393, column: 57)
!7241 = !DILocation(line: 3396, column: 26, scope: !7232)
!7242 = !DILocation(line: 3396, column: 34, scope: !7232)
!7243 = !DILocation(line: 3396, column: 37, scope: !7232)
!7244 = !DILocation(line: 3396, column: 49, scope: !7232)
!7245 = !DILocation(line: 3396, column: 40, scope: !7232)
!7246 = !DILocation(line: 3396, column: 53, scope: !7232)
!7247 = !DILocation(line: 3396, column: 9, scope: !7232)
!7248 = !DILocation(line: 3397, column: 9, scope: !7232)
!7249 = !DILocation(line: 3400, column: 18, scope: !777)
!7250 = !DILocation(line: 3400, column: 26, scope: !777)
!7251 = !DILocation(line: 3400, column: 29, scope: !777)
!7252 = !DILocation(line: 3400, column: 41, scope: !777)
!7253 = !DILocation(line: 3400, column: 32, scope: !777)
!7254 = !DILocation(line: 3400, column: 45, scope: !777)
!7255 = !DILocation(line: 3400, column: 50, scope: !777)
!7256 = !DILocation(line: 3400, column: 5, scope: !777)
!7257 = !DILocation(line: 3401, column: 19, scope: !777)
!7258 = !DILocation(line: 3401, column: 27, scope: !777)
!7259 = !DILocation(line: 3401, column: 32, scope: !777)
!7260 = !DILocation(line: 3401, column: 5, scope: !777)
!7261 = !DILocation(line: 3402, column: 1, scope: !777)
!7262 = !DILocation(line: 3402, column: 1, scope: !7263)
!7263 = !DILexicalBlockFile(scope: !777, file: !4, discriminator: 1)
!7264 = !DILocation(line: 3214, column: 25, scope: !1640)
!7265 = !DILocation(line: 3214, column: 46, scope: !1640)
!7266 = !DILocation(line: 3214, column: 62, scope: !1640)
!7267 = !DILocation(line: 3214, column: 73, scope: !1640)
!7268 = !DILocation(line: 3215, column: 28, scope: !1640)
!7269 = !DILocation(line: 3217, column: 24, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !1640, file: !4, line: 3217, column: 9)
!7271 = !DILocation(line: 3217, column: 9, scope: !7270)
!7272 = !DILocation(line: 3217, column: 9, scope: !1640)
!7273 = !DILocation(line: 3218, column: 22, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7275, file: !4, line: 3218, column: 13)
!7275 = distinct !DILexicalBlock(scope: !7270, file: !4, line: 3217, column: 28)
!7276 = !DILocation(line: 3218, column: 13, scope: !7274)
!7277 = !DILocation(line: 3218, column: 28, scope: !7274)
!7278 = !DILocation(line: 3218, column: 25, scope: !7274)
!7279 = !DILocation(line: 3218, column: 35, scope: !7274)
!7280 = !DILocation(line: 3218, column: 53, scope: !7281)
!7281 = !DILexicalBlockFile(scope: !7274, file: !4, discriminator: 1)
!7282 = !DILocation(line: 3218, column: 38, scope: !7274)
!7283 = !DILocation(line: 3218, column: 13, scope: !7275)
!7284 = !DILocation(line: 3219, column: 26, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7274, file: !4, line: 3218, column: 57)
!7286 = !DILocation(line: 3219, column: 47, scope: !7285)
!7287 = !DILocation(line: 3219, column: 13, scope: !7285)
!7288 = !DILocation(line: 3220, column: 9, scope: !7285)
!7289 = !DILocation(line: 3222, column: 28, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7274, file: !4, line: 3221, column: 14)
!7291 = !DILocation(line: 3222, column: 45, scope: !7290)
!7292 = !DILocation(line: 3222, column: 36, scope: !7290)
!7293 = !DILocation(line: 3222, column: 13, scope: !7290)
!7294 = !DILocation(line: 3224, column: 9, scope: !7275)
!7295 = !DILocation(line: 3227, column: 20, scope: !1640)
!7296 = !DILocation(line: 3227, column: 28, scope: !1640)
!7297 = !DILocation(line: 3227, column: 5, scope: !1640)
!7298 = !DILocation(line: 3228, column: 1, scope: !1640)
!7299 = !DILocation(line: 3228, column: 1, scope: !7300)
!7300 = !DILexicalBlockFile(scope: !1640, file: !4, discriminator: 1)
!7301 = !DILocation(line: 3232, column: 21, scope: !1649)
!7302 = !DILocation(line: 3232, column: 42, scope: !1649)
!7303 = !DILocation(line: 3232, column: 58, scope: !1649)
!7304 = !DILocation(line: 3232, column: 69, scope: !1649)
!7305 = !DILocation(line: 3233, column: 35, scope: !1649)
!7306 = !DILocation(line: 3233, column: 50, scope: !1649)
!7307 = !DILocation(line: 3235, column: 5, scope: !1649)
!7308 = !DILocation(line: 3235, column: 18, scope: !1649)
!7309 = !DILocation(line: 3235, column: 24, scope: !1649)
!7310 = !DILocation(line: 3236, column: 5, scope: !1649)
!7311 = !DILocation(line: 3236, column: 16, scope: !1649)
!7312 = !DILocation(line: 3236, column: 38, scope: !1649)
!7313 = !DILocation(line: 3236, column: 44, scope: !1649)
!7314 = !DILocation(line: 3236, column: 58, scope: !1649)
!7315 = !DILocation(line: 3236, column: 103, scope: !1649)
!7316 = !DILocation(line: 3237, column: 5, scope: !1649)
!7317 = !DILocation(line: 3237, column: 16, scope: !1649)
!7318 = !DILocation(line: 3237, column: 36, scope: !1649)
!7319 = !DILocation(line: 3237, column: 42, scope: !1649)
!7320 = !DILocation(line: 3237, column: 49, scope: !1649)
!7321 = !DILocation(line: 3237, column: 94, scope: !1649)
!7322 = !DILocation(line: 3238, column: 5, scope: !1649)
!7323 = !DILocation(line: 3238, column: 16, scope: !1649)
!7324 = !DILocation(line: 3239, column: 5, scope: !1649)
!7325 = !DILocation(line: 3239, column: 17, scope: !1649)
!7326 = !DILocation(line: 3239, column: 26, scope: !1649)
!7327 = !DILocation(line: 3240, column: 5, scope: !1649)
!7328 = !DILocation(line: 3240, column: 17, scope: !1649)
!7329 = !DILocation(line: 3240, column: 22, scope: !1649)
!7330 = !DILocation(line: 3241, column: 5, scope: !1649)
!7331 = !DILocation(line: 3241, column: 9, scope: !1649)
!7332 = !DILocation(line: 3245, column: 11, scope: !1649)
!7333 = !DILocation(line: 3245, column: 9, scope: !1649)
!7334 = !DILocation(line: 3245, column: 22, scope: !1649)
!7335 = !DILocation(line: 3245, column: 20, scope: !1649)
!7336 = !DILocation(line: 3246, column: 9, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !1649, file: !4, line: 3246, column: 9)
!7338 = !DILocation(line: 3246, column: 14, scope: !7337)
!7339 = !DILocation(line: 3246, column: 21, scope: !7337)
!7340 = !DILocation(line: 3246, column: 28, scope: !7337)
!7341 = !DILocation(line: 3246, column: 18, scope: !7337)
!7342 = !DILocation(line: 3246, column: 9, scope: !1649)
!7343 = !DILocation(line: 3247, column: 13, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7345, file: !4, line: 3247, column: 13)
!7345 = distinct !DILexicalBlock(scope: !7337, file: !4, line: 3246, column: 33)
!7346 = !DILocation(line: 3247, column: 20, scope: !7344)
!7347 = !DILocation(line: 3247, column: 26, scope: !7344)
!7348 = !DILocation(line: 3247, column: 31, scope: !7344)
!7349 = !DILocation(line: 3247, column: 24, scope: !7344)
!7350 = !DILocation(line: 3247, column: 13, scope: !7345)
!7351 = !DILocation(line: 3248, column: 13, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7344, file: !4, line: 3247, column: 36)
!7353 = !DILocation(line: 3249, column: 17, scope: !7352)
!7354 = !DILocation(line: 3250, column: 9, scope: !7352)
!7355 = !DILocation(line: 3252, column: 30, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7345, file: !4, line: 3252, column: 13)
!7357 = !DILocation(line: 3252, column: 14, scope: !7356)
!7358 = !DILocation(line: 3252, column: 13, scope: !7345)
!7359 = !DILocation(line: 3253, column: 19, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7356, file: !4, line: 3252, column: 36)
!7361 = !DILocation(line: 3253, column: 24, scope: !7360)
!7362 = !DILocation(line: 3253, column: 28, scope: !7360)
!7363 = !DILocation(line: 3253, column: 17, scope: !7360)
!7364 = !DILocation(line: 3254, column: 21, scope: !7360)
!7365 = !DILocation(line: 3254, column: 26, scope: !7360)
!7366 = !DILocation(line: 3254, column: 35, scope: !7360)
!7367 = !DILocation(line: 3254, column: 40, scope: !7360)
!7368 = !DILocation(line: 3254, column: 33, scope: !7360)
!7369 = !DILocation(line: 3254, column: 20, scope: !7360)
!7370 = !DILocation(line: 3254, column: 20, scope: !7371)
!7371 = !DILexicalBlockFile(scope: !7360, file: !4, discriminator: 1)
!7372 = !DILocation(line: 3254, column: 52, scope: !7373)
!7373 = !DILexicalBlockFile(scope: !7360, file: !4, discriminator: 2)
!7374 = !DILocation(line: 3254, column: 57, scope: !7360)
!7375 = !DILocation(line: 3254, column: 64, scope: !7360)
!7376 = !DILocation(line: 3254, column: 69, scope: !7360)
!7377 = !DILocation(line: 3254, column: 63, scope: !7360)
!7378 = !DILocation(line: 3254, column: 73, scope: !7360)
!7379 = !DILocation(line: 3254, column: 17, scope: !7380)
!7380 = !DILexicalBlockFile(scope: !7381, file: !4, discriminator: 4)
!7381 = !DILexicalBlockFile(scope: !7360, file: !4, discriminator: 3)
!7382 = !DILocation(line: 3255, column: 28, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7360, file: !4, line: 3255, column: 17)
!7384 = !DILocation(line: 3255, column: 17, scope: !7383)
!7385 = !DILocation(line: 3255, column: 37, scope: !7383)
!7386 = !DILocation(line: 3255, column: 35, scope: !7383)
!7387 = !DILocation(line: 3255, column: 17, scope: !7360)
!7388 = !DILocation(line: 3288, column: 39, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7383, file: !4, line: 3255, column: 42)
!7390 = !DILocation(line: 3288, column: 17, scope: !7389)
!7391 = !DILocation(line: 3289, column: 28, scope: !7389)
!7392 = !DILocation(line: 3289, column: 22, scope: !7389)
!7393 = !DILocation(line: 3289, column: 26, scope: !7389)
!7394 = !DILocation(line: 3290, column: 22, scope: !7389)
!7395 = !DILocation(line: 3290, column: 29, scope: !7389)
!7396 = !DILocation(line: 3291, column: 22, scope: !7389)
!7397 = !DILocation(line: 3291, column: 26, scope: !7389)
!7398 = !DILocation(line: 3292, column: 48, scope: !7389)
!7399 = !DILocation(line: 3292, column: 32, scope: !7389)
!7400 = !DILocation(line: 3292, column: 22, scope: !7389)
!7401 = !DILocation(line: 3292, column: 17, scope: !7389)
!7402 = !DILocation(line: 3292, column: 30, scope: !7389)
!7403 = !DILocation(line: 3293, column: 23, scope: !7389)
!7404 = !DILocation(line: 3294, column: 13, scope: !7389)
!7405 = !DILocation(line: 3296, column: 21, scope: !7360)
!7406 = !DILocation(line: 3296, column: 26, scope: !7360)
!7407 = !DILocation(line: 3296, column: 32, scope: !7360)
!7408 = !DILocation(line: 3296, column: 39, scope: !7360)
!7409 = !DILocation(line: 3296, column: 30, scope: !7360)
!7410 = !DILocation(line: 3296, column: 19, scope: !7360)
!7411 = !DILocation(line: 3297, column: 44, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7360, file: !4, line: 3297, column: 17)
!7413 = !DILocation(line: 3297, column: 49, scope: !7412)
!7414 = !DILocation(line: 3297, column: 56, scope: !7412)
!7415 = !DILocation(line: 3297, column: 18, scope: !7412)
!7416 = !DILocation(line: 3297, column: 17, scope: !7360)
!7417 = !DILocation(line: 3298, column: 30, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7412, file: !4, line: 3297, column: 65)
!7419 = !DILocation(line: 3298, column: 51, scope: !7418)
!7420 = !DILocation(line: 3298, column: 17, scope: !7418)
!7421 = !DILocation(line: 3299, column: 17, scope: !7418)
!7422 = !DILocation(line: 3301, column: 17, scope: !7360)
!7423 = !DILocation(line: 3302, column: 9, scope: !7360)
!7424 = !DILocation(line: 3303, column: 5, scope: !7345)
!7425 = !DILocation(line: 3304, column: 19, scope: !1649)
!7426 = !DILocation(line: 3304, column: 26, scope: !1649)
!7427 = !DILocation(line: 3304, column: 5, scope: !1649)
!7428 = !DILocation(line: 3304, column: 13, scope: !1649)
!7429 = !DILocation(line: 3304, column: 17, scope: !1649)
!7430 = !DILocation(line: 3308, column: 9, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !1649, file: !4, line: 3308, column: 9)
!7432 = !DILocation(line: 3308, column: 14, scope: !7431)
!7433 = !DILocation(line: 3308, column: 20, scope: !7431)
!7434 = !DILocation(line: 3308, column: 27, scope: !7431)
!7435 = !DILocation(line: 3308, column: 18, scope: !7431)
!7436 = !DILocation(line: 3308, column: 9, scope: !1649)
!7437 = !DILocation(line: 3309, column: 9, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7431, file: !4, line: 3308, column: 32)
!7439 = !DILocation(line: 3310, column: 13, scope: !7438)
!7440 = !DILocation(line: 3311, column: 5, scope: !7438)
!7441 = !DILocation(line: 3313, column: 15, scope: !1649)
!7442 = !DILocation(line: 3313, column: 20, scope: !1649)
!7443 = !DILocation(line: 3313, column: 13, scope: !1649)
!7444 = !DILocation(line: 3314, column: 22, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !1649, file: !4, line: 3314, column: 9)
!7446 = !DILocation(line: 3314, column: 30, scope: !7445)
!7447 = !DILocation(line: 3314, column: 39, scope: !7445)
!7448 = !DILocation(line: 3314, column: 10, scope: !7445)
!7449 = !DILocation(line: 3314, column: 9, scope: !1649)
!7450 = !DILocation(line: 3315, column: 9, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7445, file: !4, line: 3314, column: 48)
!7452 = !DILocation(line: 3318, column: 18, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !1649, file: !4, line: 3318, column: 9)
!7454 = !DILocation(line: 3318, column: 9, scope: !7453)
!7455 = !DILocation(line: 3318, column: 24, scope: !7453)
!7456 = !DILocation(line: 3318, column: 21, scope: !7453)
!7457 = !DILocation(line: 3318, column: 9, scope: !1649)
!7458 = !DILocation(line: 3320, column: 30, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7453, file: !4, line: 3318, column: 32)
!7460 = !DILocation(line: 3320, column: 38, scope: !7459)
!7461 = !DILocation(line: 3320, column: 44, scope: !7459)
!7462 = !DILocation(line: 3320, column: 49, scope: !7459)
!7463 = !DILocation(line: 3320, column: 55, scope: !7459)
!7464 = !DILocation(line: 3320, column: 62, scope: !7459)
!7465 = !DILocation(line: 3321, column: 30, scope: !7459)
!7466 = !DILocation(line: 3321, column: 35, scope: !7459)
!7467 = !DILocation(line: 3321, column: 40, scope: !7459)
!7468 = !DILocation(line: 3321, column: 47, scope: !7459)
!7469 = !DILocation(line: 3320, column: 17, scope: !7459)
!7470 = !DILocation(line: 3320, column: 15, scope: !7459)
!7471 = !DILocation(line: 3323, column: 13, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7459, file: !4, line: 3323, column: 13)
!7473 = !DILocation(line: 3323, column: 13, scope: !7459)
!7474 = !DILocation(line: 3324, column: 23, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7472, file: !4, line: 3323, column: 20)
!7476 = !DILocation(line: 3324, column: 28, scope: !7475)
!7477 = !DILocation(line: 3324, column: 32, scope: !7475)
!7478 = !DILocation(line: 3324, column: 21, scope: !7475)
!7479 = !DILocation(line: 3325, column: 30, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7475, file: !4, line: 3325, column: 17)
!7481 = !DILocation(line: 3325, column: 38, scope: !7480)
!7482 = !DILocation(line: 3325, column: 47, scope: !7480)
!7483 = !DILocation(line: 3325, column: 18, scope: !7480)
!7484 = !DILocation(line: 3325, column: 17, scope: !7475)
!7485 = !DILocation(line: 3326, column: 17, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7480, file: !4, line: 3325, column: 56)
!7487 = !DILocation(line: 3328, column: 39, scope: !7475)
!7488 = !DILocation(line: 3328, column: 26, scope: !7475)
!7489 = !DILocation(line: 3328, column: 33, scope: !7475)
!7490 = !DILocation(line: 3328, column: 13, scope: !7475)
!7491 = !DILocation(line: 3328, column: 21, scope: !7475)
!7492 = !DILocation(line: 3328, column: 37, scope: !7475)
!7493 = !DILocation(line: 3329, column: 9, scope: !7475)
!7494 = !DILocation(line: 3331, column: 23, scope: !7459)
!7495 = !DILocation(line: 3331, column: 9, scope: !7459)
!7496 = !DILocation(line: 3331, column: 17, scope: !7459)
!7497 = !DILocation(line: 3331, column: 21, scope: !7459)
!7498 = !DILocation(line: 3332, column: 23, scope: !7459)
!7499 = !DILocation(line: 3332, column: 31, scope: !7459)
!7500 = !DILocation(line: 3332, column: 9, scope: !7459)
!7501 = !DILocation(line: 3333, column: 5, scope: !7459)
!7502 = !DILocation(line: 3335, column: 13, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7504, file: !4, line: 3335, column: 13)
!7504 = distinct !DILexicalBlock(scope: !7453, file: !4, line: 3334, column: 10)
!7505 = !DILocation(line: 3335, column: 18, scope: !7503)
!7506 = !DILocation(line: 3335, column: 25, scope: !7503)
!7507 = !DILocation(line: 3335, column: 32, scope: !7503)
!7508 = !DILocation(line: 3335, column: 22, scope: !7503)
!7509 = !DILocation(line: 3335, column: 13, scope: !7504)
!7510 = !DILocation(line: 3336, column: 20, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7512, file: !4, line: 3336, column: 13)
!7512 = distinct !DILexicalBlock(scope: !7503, file: !4, line: 3335, column: 37)
!7513 = !DILocation(line: 3336, column: 25, scope: !7511)
!7514 = !DILocation(line: 3336, column: 28, scope: !7511)
!7515 = !DILocation(line: 3336, column: 19, scope: !7511)
!7516 = !DILocation(line: 3336, column: 18, scope: !7511)
!7517 = !DILocation(line: 3336, column: 32, scope: !7518)
!7518 = !DILexicalBlockFile(scope: !7519, file: !4, discriminator: 2)
!7519 = !DILexicalBlockFile(scope: !7520, file: !4, discriminator: 1)
!7520 = distinct !DILexicalBlock(scope: !7511, file: !4, line: 3336, column: 13)
!7521 = !DILocation(line: 3336, column: 34, scope: !7520)
!7522 = !DILocation(line: 3336, column: 13, scope: !7511)
!7523 = !DILocation(line: 3337, column: 31, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7525, file: !4, line: 3337, column: 21)
!7525 = distinct !DILexicalBlock(scope: !7520, file: !4, line: 3336, column: 45)
!7526 = !DILocation(line: 3337, column: 21, scope: !7524)
!7527 = !DILocation(line: 3337, column: 26, scope: !7524)
!7528 = !DILocation(line: 3337, column: 49, scope: !7524)
!7529 = !DILocation(line: 3337, column: 37, scope: !7524)
!7530 = !DILocation(line: 3337, column: 44, scope: !7524)
!7531 = !DILocation(line: 3337, column: 34, scope: !7524)
!7532 = !DILocation(line: 3337, column: 21, scope: !7525)
!7533 = !DILocation(line: 3338, column: 35, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7535, file: !4, line: 3338, column: 25)
!7535 = distinct !DILexicalBlock(scope: !7524, file: !4, line: 3337, column: 53)
!7536 = !DILocation(line: 3338, column: 25, scope: !7534)
!7537 = !DILocation(line: 3338, column: 30, scope: !7534)
!7538 = !DILocation(line: 3338, column: 52, scope: !7534)
!7539 = !DILocation(line: 3338, column: 40, scope: !7534)
!7540 = !DILocation(line: 3338, column: 47, scope: !7534)
!7541 = !DILocation(line: 3338, column: 38, scope: !7534)
!7542 = !DILocation(line: 3338, column: 25, scope: !7535)
!7543 = !DILocation(line: 3339, column: 25, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7534, file: !4, line: 3338, column: 56)
!7545 = !DILocation(line: 3340, column: 29, scope: !7544)
!7546 = !DILocation(line: 3341, column: 21, scope: !7544)
!7547 = !DILocation(line: 3342, column: 21, scope: !7535)
!7548 = !DILocation(line: 3344, column: 13, scope: !7525)
!7549 = !DILocation(line: 3336, column: 40, scope: !7520)
!7550 = !DILocation(line: 3336, column: 13, scope: !7520)
!7551 = !DILocation(line: 3345, column: 9, scope: !7512)
!7552 = !DILocation(line: 3347, column: 22, scope: !7504)
!7553 = !DILocation(line: 3347, column: 30, scope: !7504)
!7554 = !DILocation(line: 3347, column: 36, scope: !7504)
!7555 = !DILocation(line: 3347, column: 41, scope: !7504)
!7556 = !DILocation(line: 3347, column: 47, scope: !7504)
!7557 = !DILocation(line: 3347, column: 54, scope: !7504)
!7558 = !DILocation(line: 3348, column: 22, scope: !7504)
!7559 = !DILocation(line: 3348, column: 27, scope: !7504)
!7560 = !DILocation(line: 3348, column: 32, scope: !7504)
!7561 = !DILocation(line: 3348, column: 39, scope: !7504)
!7562 = !DILocation(line: 3347, column: 9, scope: !7504)
!7563 = !DILocation(line: 3349, column: 34, scope: !7504)
!7564 = !DILocation(line: 3349, column: 42, scope: !7504)
!7565 = !DILocation(line: 3349, column: 48, scope: !7504)
!7566 = !DILocation(line: 3349, column: 53, scope: !7504)
!7567 = !DILocation(line: 3349, column: 19, scope: !7504)
!7568 = !DILocation(line: 3349, column: 17, scope: !7504)
!7569 = !DILocation(line: 3351, column: 27, scope: !7504)
!7570 = !DILocation(line: 3351, column: 35, scope: !7504)
!7571 = !DILocation(line: 3351, column: 44, scope: !7504)
!7572 = !DILocation(line: 3351, column: 15, scope: !7504)
!7573 = !DILocation(line: 3353, column: 23, scope: !7504)
!7574 = !DILocation(line: 3353, column: 9, scope: !7504)
!7575 = !DILocation(line: 3353, column: 17, scope: !7504)
!7576 = !DILocation(line: 3353, column: 21, scope: !7504)
!7577 = !DILocation(line: 3354, column: 19, scope: !7504)
!7578 = !DILocation(line: 3354, column: 24, scope: !7504)
!7579 = !DILocation(line: 3354, column: 18, scope: !7504)
!7580 = !DILocation(line: 3354, column: 31, scope: !7581)
!7581 = !DILexicalBlockFile(scope: !7504, file: !4, discriminator: 1)
!7582 = !DILocation(line: 3354, column: 49, scope: !7583)
!7583 = !DILexicalBlockFile(scope: !7504, file: !4, discriminator: 2)
!7584 = !DILocation(line: 3354, column: 40, scope: !7504)
!7585 = !DILocation(line: 3354, column: 18, scope: !7586)
!7586 = !DILexicalBlockFile(scope: !7587, file: !4, discriminator: 4)
!7587 = !DILexicalBlockFile(scope: !7504, file: !4, discriminator: 3)
!7588 = !DILocation(line: 3354, column: 16, scope: !7504)
!7589 = !DILocation(line: 3355, column: 23, scope: !7504)
!7590 = !DILocation(line: 3355, column: 31, scope: !7504)
!7591 = !DILocation(line: 3355, column: 9, scope: !7504)
!7592 = !DILocation(line: 3357, column: 29, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7504, file: !4, line: 3357, column: 13)
!7594 = !DILocation(line: 3357, column: 13, scope: !7593)
!7595 = !DILocation(line: 3357, column: 13, scope: !7504)
!7596 = !DILocation(line: 3358, column: 30, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7593, file: !4, line: 3357, column: 38)
!7598 = !DILocation(line: 3358, column: 13, scope: !7597)
!7599 = !DILocation(line: 3359, column: 17, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7597, file: !4, line: 3359, column: 17)
!7601 = !DILocation(line: 3359, column: 22, scope: !7600)
!7602 = !DILocation(line: 3359, column: 28, scope: !7600)
!7603 = !DILocation(line: 3359, column: 17, scope: !7597)
!7604 = !DILocation(line: 3360, column: 34, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7600, file: !4, line: 3359, column: 48)
!7606 = !DILocation(line: 3360, column: 17, scope: !7605)
!7607 = !DILocation(line: 3361, column: 13, scope: !7605)
!7608 = !DILocation(line: 3362, column: 9, scope: !7597)
!7609 = !DILocation(line: 3365, column: 19, scope: !1649)
!7610 = !DILocation(line: 3365, column: 5, scope: !1649)
!7611 = !DILocation(line: 3368, column: 5, scope: !1649)
!7612 = !DILocation(line: 3369, column: 1, scope: !1649)
!7613 = !DILocation(line: 3420, column: 17, scope: !784)
!7614 = !DILocation(line: 3420, column: 38, scope: !784)
!7615 = !DILocation(line: 3420, column: 54, scope: !784)
!7616 = !DILocation(line: 3421, column: 31, scope: !784)
!7617 = !DILocation(line: 3421, column: 46, scope: !784)
!7618 = !DILocation(line: 3423, column: 23, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !784, file: !4, line: 3423, column: 9)
!7620 = !DILocation(line: 3423, column: 9, scope: !7619)
!7621 = !DILocation(line: 3423, column: 26, scope: !7619)
!7622 = !DILocation(line: 3423, column: 43, scope: !7623)
!7623 = !DILexicalBlockFile(scope: !7619, file: !4, discriminator: 1)
!7624 = !DILocation(line: 3423, column: 29, scope: !7619)
!7625 = !DILocation(line: 3423, column: 9, scope: !784)
!7626 = !DILocation(line: 3424, column: 29, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7628, file: !4, line: 3424, column: 13)
!7628 = distinct !DILexicalBlock(scope: !7619, file: !4, line: 3423, column: 47)
!7629 = !DILocation(line: 3424, column: 37, scope: !7627)
!7630 = !DILocation(line: 3424, column: 40, scope: !7627)
!7631 = !DILocation(line: 3424, column: 43, scope: !7627)
!7632 = !DILocation(line: 3424, column: 48, scope: !7627)
!7633 = !DILocation(line: 3424, column: 13, scope: !7627)
!7634 = !DILocation(line: 3424, column: 13, scope: !7628)
!7635 = !DILocation(line: 3425, column: 13, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7627, file: !4, line: 3424, column: 57)
!7637 = !DILocation(line: 3427, column: 26, scope: !7628)
!7638 = !DILocation(line: 3427, column: 34, scope: !7628)
!7639 = !DILocation(line: 3427, column: 37, scope: !7628)
!7640 = !DILocation(line: 3427, column: 50, scope: !7628)
!7641 = !DILocation(line: 3427, column: 41, scope: !7628)
!7642 = !DILocation(line: 3427, column: 40, scope: !7628)
!7643 = !DILocation(line: 3427, column: 54, scope: !7628)
!7644 = !DILocation(line: 3427, column: 9, scope: !7628)
!7645 = !DILocation(line: 3428, column: 9, scope: !7628)
!7646 = !DILocation(line: 3431, column: 18, scope: !784)
!7647 = !DILocation(line: 3431, column: 26, scope: !784)
!7648 = !DILocation(line: 3431, column: 29, scope: !784)
!7649 = !DILocation(line: 3431, column: 42, scope: !784)
!7650 = !DILocation(line: 3431, column: 33, scope: !784)
!7651 = !DILocation(line: 3431, column: 32, scope: !784)
!7652 = !DILocation(line: 3431, column: 46, scope: !784)
!7653 = !DILocation(line: 3431, column: 51, scope: !784)
!7654 = !DILocation(line: 3431, column: 5, scope: !784)
!7655 = !DILocation(line: 3432, column: 19, scope: !784)
!7656 = !DILocation(line: 3432, column: 27, scope: !784)
!7657 = !DILocation(line: 3432, column: 32, scope: !784)
!7658 = !DILocation(line: 3432, column: 5, scope: !784)
!7659 = !DILocation(line: 3433, column: 1, scope: !784)
!7660 = !DILocation(line: 3433, column: 1, scope: !7661)
!7661 = !DILexicalBlockFile(scope: !784, file: !4, discriminator: 1)
!7662 = !DILocation(line: 3451, column: 23, scope: !791)
!7663 = !DILocation(line: 3451, column: 44, scope: !791)
!7664 = !DILocation(line: 3451, column: 59, scope: !791)
!7665 = !DILocation(line: 3452, column: 37, scope: !791)
!7666 = !DILocation(line: 3452, column: 52, scope: !791)
!7667 = !DILocation(line: 3454, column: 5, scope: !791)
!7668 = !DILocation(line: 3454, column: 19, scope: !791)
!7669 = !DILocation(line: 3455, column: 5, scope: !791)
!7670 = !DILocation(line: 3455, column: 16, scope: !791)
!7671 = !DILocation(line: 3455, column: 29, scope: !791)
!7672 = !DILocation(line: 3455, column: 35, scope: !791)
!7673 = !DILocation(line: 3455, column: 40, scope: !791)
!7674 = !DILocation(line: 3455, column: 85, scope: !791)
!7675 = !DILocation(line: 3457, column: 5, scope: !791)
!7676 = !DILocation(line: 3458, column: 26, scope: !791)
!7677 = !DILocation(line: 3458, column: 42, scope: !791)
!7678 = !DILocation(line: 3458, column: 5, scope: !791)
!7679 = !DILocation(line: 3459, column: 14, scope: !791)
!7680 = !DILocation(line: 3459, column: 22, scope: !791)
!7681 = !DILocation(line: 3459, column: 30, scope: !791)
!7682 = !DILocation(line: 3459, column: 35, scope: !791)
!7683 = !DILocation(line: 3459, column: 5, scope: !791)
!7684 = !DILocation(line: 3460, column: 5, scope: !791)
!7685 = !DILocation(line: 3461, column: 1, scope: !791)
!7686 = !DILocation(line: 3465, column: 22, scope: !801)
!7687 = !DILocation(line: 3465, column: 43, scope: !801)
!7688 = !DILocation(line: 3465, column: 57, scope: !801)
!7689 = !DILocation(line: 3466, column: 36, scope: !801)
!7690 = !DILocation(line: 3466, column: 51, scope: !801)
!7691 = !DILocation(line: 3468, column: 5, scope: !801)
!7692 = !DILocation(line: 3468, column: 19, scope: !801)
!7693 = !DILocation(line: 3469, column: 5, scope: !801)
!7694 = !DILocation(line: 3469, column: 16, scope: !801)
!7695 = !DILocation(line: 3469, column: 29, scope: !801)
!7696 = !DILocation(line: 3469, column: 35, scope: !801)
!7697 = !DILocation(line: 3469, column: 40, scope: !801)
!7698 = !DILocation(line: 3469, column: 85, scope: !801)
!7699 = !DILocation(line: 3471, column: 5, scope: !801)
!7700 = !DILocation(line: 3472, column: 25, scope: !801)
!7701 = !DILocation(line: 3472, column: 41, scope: !801)
!7702 = !DILocation(line: 3472, column: 5, scope: !801)
!7703 = !DILocation(line: 3473, column: 14, scope: !801)
!7704 = !DILocation(line: 3473, column: 22, scope: !801)
!7705 = !DILocation(line: 3473, column: 30, scope: !801)
!7706 = !DILocation(line: 3473, column: 35, scope: !801)
!7707 = !DILocation(line: 3473, column: 5, scope: !801)
!7708 = !DILocation(line: 3474, column: 5, scope: !801)
!7709 = !DILocation(line: 3475, column: 1, scope: !801)
!7710 = !DILocation(line: 3479, column: 23, scope: !813)
!7711 = !DILocation(line: 3479, column: 44, scope: !813)
!7712 = !DILocation(line: 3479, column: 59, scope: !813)
!7713 = !DILocation(line: 3480, column: 37, scope: !813)
!7714 = !DILocation(line: 3480, column: 52, scope: !813)
!7715 = !DILocation(line: 3482, column: 5, scope: !813)
!7716 = !DILocation(line: 3482, column: 19, scope: !813)
!7717 = !DILocation(line: 3483, column: 5, scope: !813)
!7718 = !DILocation(line: 3483, column: 16, scope: !813)
!7719 = !DILocation(line: 3483, column: 29, scope: !813)
!7720 = !DILocation(line: 3483, column: 35, scope: !813)
!7721 = !DILocation(line: 3483, column: 40, scope: !813)
!7722 = !DILocation(line: 3483, column: 85, scope: !813)
!7723 = !DILocation(line: 3485, column: 5, scope: !813)
!7724 = !DILocation(line: 3486, column: 26, scope: !813)
!7725 = !DILocation(line: 3486, column: 42, scope: !813)
!7726 = !DILocation(line: 3486, column: 5, scope: !813)
!7727 = !DILocation(line: 3487, column: 14, scope: !813)
!7728 = !DILocation(line: 3487, column: 22, scope: !813)
!7729 = !DILocation(line: 3487, column: 30, scope: !813)
!7730 = !DILocation(line: 3487, column: 35, scope: !813)
!7731 = !DILocation(line: 3487, column: 5, scope: !813)
!7732 = !DILocation(line: 3488, column: 5, scope: !813)
!7733 = !DILocation(line: 3489, column: 1, scope: !813)
!7734 = !DILocation(line: 3493, column: 22, scope: !823)
!7735 = !DILocation(line: 3493, column: 43, scope: !823)
!7736 = !DILocation(line: 3493, column: 57, scope: !823)
!7737 = !DILocation(line: 3494, column: 36, scope: !823)
!7738 = !DILocation(line: 3494, column: 51, scope: !823)
!7739 = !DILocation(line: 3496, column: 5, scope: !823)
!7740 = !DILocation(line: 3496, column: 19, scope: !823)
!7741 = !DILocation(line: 3497, column: 5, scope: !823)
!7742 = !DILocation(line: 3497, column: 16, scope: !823)
!7743 = !DILocation(line: 3497, column: 29, scope: !823)
!7744 = !DILocation(line: 3497, column: 35, scope: !823)
!7745 = !DILocation(line: 3497, column: 40, scope: !823)
!7746 = !DILocation(line: 3497, column: 85, scope: !823)
!7747 = !DILocation(line: 3499, column: 5, scope: !823)
!7748 = !DILocation(line: 3500, column: 25, scope: !823)
!7749 = !DILocation(line: 3500, column: 41, scope: !823)
!7750 = !DILocation(line: 3500, column: 5, scope: !823)
!7751 = !DILocation(line: 3501, column: 14, scope: !823)
!7752 = !DILocation(line: 3501, column: 22, scope: !823)
!7753 = !DILocation(line: 3501, column: 30, scope: !823)
!7754 = !DILocation(line: 3501, column: 35, scope: !823)
!7755 = !DILocation(line: 3501, column: 5, scope: !823)
!7756 = !DILocation(line: 3502, column: 5, scope: !823)
!7757 = !DILocation(line: 3503, column: 1, scope: !823)
!7758 = !DILocation(line: 3507, column: 21, scope: !833)
!7759 = !DILocation(line: 3507, column: 42, scope: !833)
!7760 = !DILocation(line: 3507, column: 53, scope: !833)
!7761 = !DILocation(line: 3508, column: 35, scope: !833)
!7762 = !DILocation(line: 3508, column: 50, scope: !833)
!7763 = !DILocation(line: 3510, column: 20, scope: !833)
!7764 = !DILocation(line: 3510, column: 28, scope: !833)
!7765 = !DILocation(line: 3510, column: 31, scope: !833)
!7766 = !DILocation(line: 3510, column: 34, scope: !833)
!7767 = !DILocation(line: 3510, column: 39, scope: !833)
!7768 = !DILocation(line: 3510, column: 5, scope: !833)
!7769 = !DILocation(line: 3511, column: 1, scope: !833)
!7770 = !DILocation(line: 3515, column: 21, scope: !842)
!7771 = !DILocation(line: 3515, column: 42, scope: !842)
!7772 = !DILocation(line: 3515, column: 54, scope: !842)
!7773 = !DILocation(line: 3516, column: 35, scope: !842)
!7774 = !DILocation(line: 3516, column: 50, scope: !842)
!7775 = !DILocation(line: 3518, column: 19, scope: !842)
!7776 = !DILocation(line: 3518, column: 27, scope: !842)
!7777 = !DILocation(line: 3518, column: 30, scope: !842)
!7778 = !DILocation(line: 3518, column: 33, scope: !842)
!7779 = !DILocation(line: 3518, column: 38, scope: !842)
!7780 = !DILocation(line: 3518, column: 5, scope: !842)
!7781 = !DILocation(line: 3519, column: 1, scope: !842)
!7782 = !DILocation(line: 3524, column: 21, scope: !851)
!7783 = !DILocation(line: 3524, column: 42, scope: !851)
!7784 = !DILocation(line: 3524, column: 53, scope: !851)
!7785 = !DILocation(line: 3525, column: 35, scope: !851)
!7786 = !DILocation(line: 3525, column: 50, scope: !851)
!7787 = !DILocation(line: 3527, column: 20, scope: !851)
!7788 = !DILocation(line: 3527, column: 28, scope: !851)
!7789 = !DILocation(line: 3527, column: 31, scope: !851)
!7790 = !DILocation(line: 3527, column: 34, scope: !851)
!7791 = !DILocation(line: 3527, column: 39, scope: !851)
!7792 = !DILocation(line: 3527, column: 5, scope: !851)
!7793 = !DILocation(line: 3528, column: 1, scope: !851)
!7794 = !DILocation(line: 3532, column: 21, scope: !860)
!7795 = !DILocation(line: 3532, column: 42, scope: !860)
!7796 = !DILocation(line: 3532, column: 54, scope: !860)
!7797 = !DILocation(line: 3533, column: 35, scope: !860)
!7798 = !DILocation(line: 3533, column: 50, scope: !860)
!7799 = !DILocation(line: 3535, column: 19, scope: !860)
!7800 = !DILocation(line: 3535, column: 27, scope: !860)
!7801 = !DILocation(line: 3535, column: 30, scope: !860)
!7802 = !DILocation(line: 3535, column: 33, scope: !860)
!7803 = !DILocation(line: 3535, column: 38, scope: !860)
!7804 = !DILocation(line: 3535, column: 5, scope: !860)
!7805 = !DILocation(line: 3536, column: 1, scope: !860)
!7806 = !DILocation(line: 3569, column: 21, scope: !869)
!7807 = !DILocation(line: 3569, column: 42, scope: !869)
!7808 = !DILocation(line: 3569, column: 53, scope: !869)
!7809 = !DILocation(line: 3570, column: 35, scope: !869)
!7810 = !DILocation(line: 3570, column: 50, scope: !869)
!7811 = !DILocation(line: 3572, column: 20, scope: !869)
!7812 = !DILocation(line: 3572, column: 28, scope: !869)
!7813 = !DILocation(line: 3572, column: 31, scope: !869)
!7814 = !DILocation(line: 3572, column: 34, scope: !869)
!7815 = !DILocation(line: 3572, column: 39, scope: !869)
!7816 = !DILocation(line: 3572, column: 5, scope: !869)
!7817 = !DILocation(line: 3573, column: 1, scope: !869)
!7818 = !DILocation(line: 3577, column: 21, scope: !876)
!7819 = !DILocation(line: 3577, column: 42, scope: !876)
!7820 = !DILocation(line: 3577, column: 54, scope: !876)
!7821 = !DILocation(line: 3578, column: 35, scope: !876)
!7822 = !DILocation(line: 3578, column: 50, scope: !876)
!7823 = !DILocation(line: 3580, column: 19, scope: !876)
!7824 = !DILocation(line: 3580, column: 27, scope: !876)
!7825 = !DILocation(line: 3580, column: 30, scope: !876)
!7826 = !DILocation(line: 3580, column: 33, scope: !876)
!7827 = !DILocation(line: 3580, column: 38, scope: !876)
!7828 = !DILocation(line: 3580, column: 5, scope: !876)
!7829 = !DILocation(line: 3581, column: 1, scope: !876)
!7830 = !DILocation(line: 3586, column: 21, scope: !883)
!7831 = !DILocation(line: 3586, column: 42, scope: !883)
!7832 = !DILocation(line: 3586, column: 53, scope: !883)
!7833 = !DILocation(line: 3587, column: 35, scope: !883)
!7834 = !DILocation(line: 3587, column: 50, scope: !883)
!7835 = !DILocation(line: 3589, column: 20, scope: !883)
!7836 = !DILocation(line: 3589, column: 28, scope: !883)
!7837 = !DILocation(line: 3589, column: 31, scope: !883)
!7838 = !DILocation(line: 3589, column: 34, scope: !883)
!7839 = !DILocation(line: 3589, column: 39, scope: !883)
!7840 = !DILocation(line: 3589, column: 5, scope: !883)
!7841 = !DILocation(line: 3590, column: 1, scope: !883)
!7842 = !DILocation(line: 3594, column: 21, scope: !890)
!7843 = !DILocation(line: 3594, column: 42, scope: !890)
!7844 = !DILocation(line: 3594, column: 54, scope: !890)
!7845 = !DILocation(line: 3595, column: 35, scope: !890)
!7846 = !DILocation(line: 3595, column: 50, scope: !890)
!7847 = !DILocation(line: 3597, column: 19, scope: !890)
!7848 = !DILocation(line: 3597, column: 27, scope: !890)
!7849 = !DILocation(line: 3597, column: 30, scope: !890)
!7850 = !DILocation(line: 3597, column: 33, scope: !890)
!7851 = !DILocation(line: 3597, column: 38, scope: !890)
!7852 = !DILocation(line: 3597, column: 5, scope: !890)
!7853 = !DILocation(line: 3598, column: 1, scope: !890)
!7854 = !DILocation(line: 3773, column: 17, scope: !897)
!7855 = !DILocation(line: 3773, column: 33, scope: !897)
!7856 = !DILocation(line: 3773, column: 49, scope: !897)
!7857 = !DILocation(line: 3774, column: 31, scope: !897)
!7858 = !DILocation(line: 3774, column: 46, scope: !897)
!7859 = !DILocation(line: 3776, column: 30, scope: !897)
!7860 = !DILocation(line: 3776, column: 33, scope: !897)
!7861 = !DILocation(line: 3776, column: 36, scope: !897)
!7862 = !DILocation(line: 3776, column: 39, scope: !897)
!7863 = !DILocation(line: 3776, column: 44, scope: !897)
!7864 = !DILocation(line: 3776, column: 5, scope: !897)
!7865 = !DILocation(line: 3777, column: 1, scope: !897)
!7866 = !DILocation(line: 3651, column: 15, scope: !1679)
!7867 = !DILocation(line: 3651, column: 30, scope: !1679)
!7868 = !DILocation(line: 3651, column: 46, scope: !1679)
!7869 = !DILocation(line: 3651, column: 62, scope: !1679)
!7870 = !DILocation(line: 3652, column: 32, scope: !1679)
!7871 = !DILocation(line: 3652, column: 47, scope: !1679)
!7872 = !DILocation(line: 3654, column: 5, scope: !1679)
!7873 = !DILocation(line: 3654, column: 16, scope: !1679)
!7874 = !DILocation(line: 3654, column: 34, scope: !1679)
!7875 = !DILocation(line: 3654, column: 40, scope: !1679)
!7876 = !DILocation(line: 3654, column: 50, scope: !1679)
!7877 = !DILocation(line: 3654, column: 95, scope: !1679)
!7878 = !DILocation(line: 3655, column: 5, scope: !1679)
!7879 = !DILocation(line: 3655, column: 16, scope: !1679)
!7880 = !DILocation(line: 3656, column: 5, scope: !1679)
!7881 = !DILocation(line: 3656, column: 17, scope: !1679)
!7882 = !DILocation(line: 3656, column: 24, scope: !1679)
!7883 = !DILocation(line: 3656, column: 29, scope: !1679)
!7884 = !DILocation(line: 3657, column: 5, scope: !1679)
!7885 = !DILocation(line: 3657, column: 17, scope: !1679)
!7886 = !DILocation(line: 3658, column: 5, scope: !1679)
!7887 = !DILocation(line: 3658, column: 17, scope: !1679)
!7888 = !DILocation(line: 3659, column: 5, scope: !1679)
!7889 = !DILocation(line: 3659, column: 16, scope: !1679)
!7890 = !DILocation(line: 3660, column: 5, scope: !1679)
!7891 = !DILocation(line: 3660, column: 13, scope: !1679)
!7892 = !DILocation(line: 3660, column: 31, scope: !1679)
!7893 = !DILocation(line: 3660, column: 22, scope: !1679)
!7894 = !DILocation(line: 3661, column: 5, scope: !1679)
!7895 = !DILocation(line: 3661, column: 13, scope: !1679)
!7896 = !DILocation(line: 3661, column: 31, scope: !1679)
!7897 = !DILocation(line: 3661, column: 22, scope: !1679)
!7898 = !DILocation(line: 3664, column: 23, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !1679, file: !4, line: 3664, column: 9)
!7900 = !DILocation(line: 3664, column: 9, scope: !7899)
!7901 = !DILocation(line: 3664, column: 26, scope: !7899)
!7902 = !DILocation(line: 3664, column: 43, scope: !7903)
!7903 = !DILexicalBlockFile(scope: !7899, file: !4, discriminator: 1)
!7904 = !DILocation(line: 3664, column: 29, scope: !7899)
!7905 = !DILocation(line: 3664, column: 9, scope: !1679)
!7906 = !DILocation(line: 3665, column: 29, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7908, file: !4, line: 3665, column: 13)
!7908 = distinct !DILexicalBlock(scope: !7899, file: !4, line: 3664, column: 47)
!7909 = !DILocation(line: 3665, column: 32, scope: !7907)
!7910 = !DILocation(line: 3665, column: 35, scope: !7907)
!7911 = !DILocation(line: 3665, column: 38, scope: !7907)
!7912 = !DILocation(line: 3665, column: 43, scope: !7907)
!7913 = !DILocation(line: 3665, column: 13, scope: !7907)
!7914 = !DILocation(line: 3665, column: 13, scope: !7908)
!7915 = !DILocation(line: 3666, column: 13, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7907, file: !4, line: 3665, column: 52)
!7917 = !DILocation(line: 3668, column: 23, scope: !7908)
!7918 = !DILocation(line: 3668, column: 26, scope: !7908)
!7919 = !DILocation(line: 3668, column: 29, scope: !7908)
!7920 = !DILocation(line: 3668, column: 32, scope: !7908)
!7921 = !DILocation(line: 3668, column: 37, scope: !7908)
!7922 = !DILocation(line: 3668, column: 9, scope: !7908)
!7923 = !DILocation(line: 3669, column: 9, scope: !7908)
!7924 = !DILocation(line: 3671, column: 25, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !1679, file: !4, line: 3671, column: 9)
!7926 = !DILocation(line: 3671, column: 9, scope: !7925)
!7927 = !DILocation(line: 3671, column: 9, scope: !1679)
!7928 = !DILocation(line: 3672, column: 29, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7930, file: !4, line: 3672, column: 13)
!7930 = distinct !DILexicalBlock(scope: !7925, file: !4, line: 3671, column: 29)
!7931 = !DILocation(line: 3672, column: 13, scope: !7929)
!7932 = !DILocation(line: 3672, column: 13, scope: !7930)
!7933 = !DILocation(line: 3673, column: 26, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7929, file: !4, line: 3672, column: 33)
!7935 = !DILocation(line: 3673, column: 42, scope: !7934)
!7936 = !DILocation(line: 3673, column: 13, scope: !7934)
!7937 = !DILocation(line: 3674, column: 9, scope: !7934)
!7938 = !DILocation(line: 3676, column: 28, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7929, file: !4, line: 3675, column: 14)
!7940 = !DILocation(line: 3676, column: 31, scope: !7939)
!7941 = !DILocation(line: 3676, column: 38, scope: !7939)
!7942 = !DILocation(line: 3676, column: 37, scope: !7939)
!7943 = !DILocation(line: 3676, column: 13, scope: !7939)
!7944 = !DILocation(line: 3677, column: 14, scope: !7939)
!7945 = !DILocation(line: 3677, column: 21, scope: !7939)
!7946 = !DILocation(line: 3679, column: 9, scope: !7930)
!7947 = !DILocation(line: 3681, column: 25, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !1679, file: !4, line: 3681, column: 9)
!7949 = !DILocation(line: 3681, column: 9, scope: !7948)
!7950 = !DILocation(line: 3681, column: 9, scope: !1679)
!7951 = !DILocation(line: 3682, column: 15, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7948, file: !4, line: 3681, column: 29)
!7953 = !DILocation(line: 3682, column: 18, scope: !7952)
!7954 = !DILocation(line: 3682, column: 24, scope: !7952)
!7955 = !DILocation(line: 3682, column: 27, scope: !7952)
!7956 = !DILocation(line: 3682, column: 22, scope: !7952)
!7957 = !DILocation(line: 3682, column: 13, scope: !7952)
!7958 = !DILocation(line: 3683, column: 20, scope: !7952)
!7959 = !DILocation(line: 3683, column: 23, scope: !7952)
!7960 = !DILocation(line: 3683, column: 30, scope: !7952)
!7961 = !DILocation(line: 3683, column: 29, scope: !7952)
!7962 = !DILocation(line: 3683, column: 41, scope: !7952)
!7963 = !DILocation(line: 3683, column: 9, scope: !7952)
!7964 = !DILocation(line: 3684, column: 23, scope: !7952)
!7965 = !DILocation(line: 3684, column: 26, scope: !7952)
!7966 = !DILocation(line: 3684, column: 31, scope: !7952)
!7967 = !DILocation(line: 3684, column: 9, scope: !7952)
!7968 = !DILocation(line: 3685, column: 9, scope: !7952)
!7969 = !DILocation(line: 3688, column: 14, scope: !1679)
!7970 = !DILocation(line: 3688, column: 17, scope: !1679)
!7971 = !DILocation(line: 3688, column: 26, scope: !1679)
!7972 = !DILocation(line: 3688, column: 29, scope: !1679)
!7973 = !DILocation(line: 3688, column: 24, scope: !1679)
!7974 = !DILocation(line: 3688, column: 39, scope: !1679)
!7975 = !DILocation(line: 3688, column: 44, scope: !1679)
!7976 = !DILocation(line: 3688, column: 37, scope: !1679)
!7977 = !DILocation(line: 3688, column: 49, scope: !1679)
!7978 = !DILocation(line: 3688, column: 11, scope: !1679)
!7979 = !DILocation(line: 3689, column: 17, scope: !1679)
!7980 = !DILocation(line: 3689, column: 20, scope: !1679)
!7981 = !DILocation(line: 3689, column: 26, scope: !1679)
!7982 = !DILocation(line: 3689, column: 29, scope: !1679)
!7983 = !DILocation(line: 3689, column: 24, scope: !1679)
!7984 = !DILocation(line: 3689, column: 15, scope: !1679)
!7985 = !DILocation(line: 3690, column: 11, scope: !1679)
!7986 = !DILocation(line: 3690, column: 23, scope: !1679)
!7987 = !DILocation(line: 3690, column: 21, scope: !1679)
!7988 = !DILocation(line: 3690, column: 9, scope: !1679)
!7989 = !DILocation(line: 3691, column: 9, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !1679, file: !4, line: 3691, column: 9)
!7991 = !DILocation(line: 3691, column: 15, scope: !7990)
!7992 = !DILocation(line: 3691, column: 9, scope: !1679)
!7993 = !DILocation(line: 3692, column: 36, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7995, file: !4, line: 3692, column: 13)
!7995 = distinct !DILexicalBlock(scope: !7990, file: !4, line: 3691, column: 20)
!7996 = !DILocation(line: 3692, column: 39, scope: !7994)
!7997 = !DILocation(line: 3692, column: 46, scope: !7994)
!7998 = !DILocation(line: 3692, column: 14, scope: !7994)
!7999 = !DILocation(line: 3692, column: 13, scope: !7995)
!8000 = !DILocation(line: 3693, column: 26, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7994, file: !4, line: 3692, column: 55)
!8002 = !DILocation(line: 3693, column: 42, scope: !8001)
!8003 = !DILocation(line: 3693, column: 13, scope: !8001)
!8004 = !DILocation(line: 3694, column: 13, scope: !8001)
!8005 = !DILocation(line: 3696, column: 11, scope: !7995)
!8006 = !DILocation(line: 3697, column: 5, scope: !7995)
!8007 = !DILocation(line: 3698, column: 14, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !7990, file: !4, line: 3698, column: 14)
!8009 = !DILocation(line: 3698, column: 20, scope: !8008)
!8010 = !DILocation(line: 3698, column: 14, scope: !7990)
!8011 = !DILocation(line: 3699, column: 18, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8008, file: !4, line: 3698, column: 25)
!8013 = !DILocation(line: 3699, column: 17, scope: !8012)
!8014 = !DILocation(line: 3699, column: 15, scope: !8012)
!8015 = !DILocation(line: 3700, column: 36, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8012, file: !4, line: 3700, column: 13)
!8017 = !DILocation(line: 3700, column: 39, scope: !8016)
!8018 = !DILocation(line: 3700, column: 46, scope: !8016)
!8019 = !DILocation(line: 3700, column: 14, scope: !8016)
!8020 = !DILocation(line: 3700, column: 13, scope: !8012)
!8021 = !DILocation(line: 3701, column: 26, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8016, file: !4, line: 3700, column: 55)
!8023 = !DILocation(line: 3701, column: 42, scope: !8022)
!8024 = !DILocation(line: 3701, column: 13, scope: !8022)
!8025 = !DILocation(line: 3702, column: 13, scope: !8022)
!8026 = !DILocation(line: 3704, column: 11, scope: !8012)
!8027 = !DILocation(line: 3705, column: 5, scope: !8012)
!8028 = !DILocation(line: 3708, column: 15, scope: !1679)
!8029 = !DILocation(line: 3708, column: 18, scope: !1679)
!8030 = !DILocation(line: 3708, column: 24, scope: !1679)
!8031 = !DILocation(line: 3708, column: 27, scope: !1679)
!8032 = !DILocation(line: 3708, column: 22, scope: !1679)
!8033 = !DILocation(line: 3708, column: 31, scope: !1679)
!8034 = !DILocation(line: 3708, column: 13, scope: !1679)
!8035 = !DILocation(line: 3709, column: 10, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !1679, file: !4, line: 3709, column: 9)
!8037 = !DILocation(line: 3709, column: 15, scope: !8036)
!8038 = !DILocation(line: 3709, column: 12, scope: !8036)
!8039 = !DILocation(line: 3709, column: 17, scope: !8036)
!8040 = !DILocation(line: 3709, column: 20, scope: !8041)
!8041 = !DILexicalBlockFile(scope: !8036, file: !4, discriminator: 1)
!8042 = !DILocation(line: 3709, column: 25, scope: !8036)
!8043 = !DILocation(line: 3709, column: 22, scope: !8036)
!8044 = !DILocation(line: 3709, column: 28, scope: !8036)
!8045 = !DILocation(line: 3709, column: 32, scope: !8046)
!8046 = !DILexicalBlockFile(scope: !8047, file: !4, discriminator: 3)
!8047 = !DILexicalBlockFile(scope: !8036, file: !4, discriminator: 2)
!8048 = !DILocation(line: 3709, column: 37, scope: !8036)
!8049 = !DILocation(line: 3709, column: 34, scope: !8036)
!8050 = !DILocation(line: 3709, column: 39, scope: !8036)
!8051 = !DILocation(line: 3709, column: 42, scope: !8052)
!8052 = !DILexicalBlockFile(scope: !8036, file: !4, discriminator: 4)
!8053 = !DILocation(line: 3709, column: 52, scope: !8036)
!8054 = !DILocation(line: 3709, column: 55, scope: !8036)
!8055 = !DILocation(line: 3709, column: 50, scope: !8036)
!8056 = !DILocation(line: 3709, column: 9, scope: !1679)
!8057 = !DILocation(line: 3710, column: 26, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8059, file: !4, line: 3710, column: 13)
!8059 = distinct !DILexicalBlock(scope: !8036, file: !4, line: 3709, column: 61)
!8060 = !DILocation(line: 3710, column: 29, scope: !8058)
!8061 = !DILocation(line: 3710, column: 38, scope: !8058)
!8062 = !DILocation(line: 3710, column: 14, scope: !8058)
!8063 = !DILocation(line: 3710, column: 13, scope: !8059)
!8064 = !DILocation(line: 3711, column: 26, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8058, file: !4, line: 3710, column: 47)
!8066 = !DILocation(line: 3711, column: 42, scope: !8065)
!8067 = !DILocation(line: 3711, column: 13, scope: !8065)
!8068 = !DILocation(line: 3712, column: 13, scope: !8065)
!8069 = !DILocation(line: 3714, column: 5, scope: !8059)
!8070 = !DILocation(line: 3717, column: 9, scope: !1703)
!8071 = !DILocation(line: 3717, column: 12, scope: !1703)
!8072 = !DILocation(line: 3717, column: 16, scope: !1703)
!8073 = !DILocation(line: 3717, column: 9, scope: !1679)
!8074 = !DILocation(line: 3718, column: 29, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !1703, file: !4, line: 3717, column: 22)
!8076 = !DILocation(line: 3718, column: 32, scope: !8075)
!8077 = !DILocation(line: 3718, column: 38, scope: !8075)
!8078 = !DILocation(line: 3718, column: 41, scope: !8075)
!8079 = !DILocation(line: 3718, column: 47, scope: !8075)
!8080 = !DILocation(line: 3718, column: 50, scope: !8075)
!8081 = !DILocation(line: 3718, column: 55, scope: !8075)
!8082 = !DILocation(line: 3718, column: 58, scope: !8075)
!8083 = !DILocation(line: 3718, column: 15, scope: !8075)
!8084 = !DILocation(line: 3718, column: 13, scope: !8075)
!8085 = !DILocation(line: 3719, column: 5, scope: !8075)
!8086 = !DILocation(line: 3720, column: 14, scope: !1702)
!8087 = !DILocation(line: 3720, column: 17, scope: !1702)
!8088 = !DILocation(line: 3720, column: 21, scope: !1702)
!8089 = !DILocation(line: 3720, column: 14, scope: !1703)
!8090 = !DILocation(line: 3721, column: 9, scope: !1701)
!8091 = !DILocation(line: 3721, column: 13, scope: !1701)
!8092 = !DILocation(line: 3721, column: 35, scope: !1701)
!8093 = !DILocation(line: 3721, column: 38, scope: !1701)
!8094 = !DILocation(line: 3721, column: 56, scope: !1701)
!8095 = !DILocation(line: 3721, column: 59, scope: !1701)
!8096 = !DILocation(line: 3721, column: 65, scope: !1701)
!8097 = !DILocation(line: 3721, column: 68, scope: !1701)
!8098 = !DILocation(line: 3722, column: 35, scope: !1701)
!8099 = !DILocation(line: 3722, column: 38, scope: !1701)
!8100 = !DILocation(line: 3722, column: 43, scope: !1701)
!8101 = !DILocation(line: 3722, column: 46, scope: !1701)
!8102 = !DILocation(line: 3721, column: 19, scope: !1701)
!8103 = !DILocation(line: 3723, column: 13, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !1701, file: !4, line: 3723, column: 13)
!8105 = !DILocation(line: 3723, column: 17, scope: !8104)
!8106 = !DILocation(line: 3723, column: 13, scope: !1701)
!8107 = !DILocation(line: 3724, column: 26, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8104, file: !4, line: 3723, column: 22)
!8109 = !DILocation(line: 3724, column: 42, scope: !8108)
!8110 = !DILocation(line: 3724, column: 13, scope: !8108)
!8111 = !DILocation(line: 3725, column: 13, scope: !8108)
!8112 = !DILocation(line: 3727, column: 15, scope: !1701)
!8113 = !DILocation(line: 3727, column: 13, scope: !1701)
!8114 = !DILocation(line: 3728, column: 5, scope: !1702)
!8115 = !DILocation(line: 3728, column: 5, scope: !8116)
!8116 = !DILexicalBlockFile(scope: !1702, file: !4, discriminator: 1)
!8117 = !DILocation(line: 3728, column: 5, scope: !1701)
!8118 = !DILocation(line: 3730, column: 9, scope: !1705)
!8119 = !DILocation(line: 3730, column: 20, scope: !1705)
!8120 = !DILocation(line: 3730, column: 32, scope: !1705)
!8121 = !DILocation(line: 3730, column: 38, scope: !1705)
!8122 = !DILocation(line: 3730, column: 42, scope: !1705)
!8123 = !DILocation(line: 3730, column: 87, scope: !1705)
!8124 = !DILocation(line: 3731, column: 27, scope: !1705)
!8125 = !DILocation(line: 3731, column: 34, scope: !1705)
!8126 = !DILocation(line: 3731, column: 37, scope: !1705)
!8127 = !DILocation(line: 3731, column: 40, scope: !1705)
!8128 = !DILocation(line: 3731, column: 9, scope: !1705)
!8129 = !DILocation(line: 3732, column: 27, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !1705, file: !4, line: 3732, column: 13)
!8131 = !DILocation(line: 3732, column: 13, scope: !8130)
!8132 = !DILocation(line: 3732, column: 30, scope: !8130)
!8133 = !DILocation(line: 3732, column: 33, scope: !8134)
!8134 = !DILexicalBlockFile(scope: !8130, file: !4, discriminator: 1)
!8135 = !DILocation(line: 3732, column: 13, scope: !1705)
!8136 = !DILocation(line: 3733, column: 28, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8130, file: !4, line: 3732, column: 52)
!8138 = !DILocation(line: 3733, column: 13, scope: !8137)
!8139 = !DILocation(line: 3734, column: 13, scope: !8137)
!8140 = !DILocation(line: 3735, column: 13, scope: !8137)
!8141 = !DILocation(line: 3737, column: 16, scope: !1705)
!8142 = !DILocation(line: 3737, column: 15, scope: !1705)
!8143 = !DILocation(line: 3737, column: 13, scope: !1705)
!8144 = !DILocation(line: 3738, column: 9, scope: !1705)
!8145 = !DILocation(line: 3739, column: 19, scope: !1705)
!8146 = !DILocation(line: 3739, column: 22, scope: !1705)
!8147 = !DILocation(line: 3739, column: 17, scope: !1705)
!8148 = !DILocation(line: 3740, column: 5, scope: !1702)
!8149 = !DILocation(line: 3740, column: 5, scope: !8116)
!8150 = !DILocation(line: 3742, column: 30, scope: !1679)
!8151 = !DILocation(line: 3742, column: 33, scope: !1679)
!8152 = !DILocation(line: 3742, column: 39, scope: !1679)
!8153 = !DILocation(line: 3742, column: 15, scope: !1679)
!8154 = !DILocation(line: 3742, column: 13, scope: !1679)
!8155 = !DILocation(line: 3744, column: 17, scope: !1679)
!8156 = !DILocation(line: 3744, column: 20, scope: !1679)
!8157 = !DILocation(line: 3744, column: 29, scope: !1679)
!8158 = !DILocation(line: 3744, column: 5, scope: !1679)
!8159 = !DILocation(line: 3745, column: 19, scope: !1679)
!8160 = !DILocation(line: 3745, column: 22, scope: !1679)
!8161 = !DILocation(line: 3745, column: 29, scope: !1679)
!8162 = !DILocation(line: 3745, column: 28, scope: !1679)
!8163 = !DILocation(line: 3745, column: 5, scope: !1679)
!8164 = !DILocation(line: 3746, column: 14, scope: !1679)
!8165 = !DILocation(line: 3746, column: 5, scope: !1679)
!8166 = !DILocation(line: 3746, column: 8, scope: !1679)
!8167 = !DILocation(line: 3746, column: 12, scope: !1679)
!8168 = !DILocation(line: 3747, column: 19, scope: !1679)
!8169 = !DILocation(line: 3747, column: 5, scope: !1679)
!8170 = !DILocation(line: 3749, column: 13, scope: !1679)
!8171 = !DILocation(line: 3749, column: 25, scope: !1679)
!8172 = !DILocation(line: 3749, column: 23, scope: !1679)
!8173 = !DILocation(line: 3749, column: 11, scope: !1679)
!8174 = !DILocation(line: 3750, column: 9, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !1679, file: !4, line: 3750, column: 9)
!8176 = !DILocation(line: 3750, column: 9, scope: !1679)
!8177 = !DILocation(line: 3751, column: 22, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8175, file: !4, line: 3750, column: 14)
!8179 = !DILocation(line: 3751, column: 25, scope: !8178)
!8180 = !DILocation(line: 3751, column: 14, scope: !8178)
!8181 = !DILocation(line: 3751, column: 12, scope: !8178)
!8182 = !DILocation(line: 3752, column: 13, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8178, file: !4, line: 3752, column: 13)
!8184 = !DILocation(line: 3752, column: 16, scope: !8183)
!8185 = !DILocation(line: 3752, column: 21, scope: !8183)
!8186 = !DILocation(line: 3752, column: 24, scope: !8187)
!8187 = !DILexicalBlockFile(scope: !8183, file: !4, discriminator: 1)
!8188 = !DILocation(line: 3752, column: 27, scope: !8183)
!8189 = !DILocation(line: 3752, column: 13, scope: !8178)
!8190 = !DILocation(line: 3753, column: 13, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8183, file: !4, line: 3752, column: 33)
!8192 = !DILocation(line: 3753, column: 16, scope: !8191)
!8193 = !DILocation(line: 3753, column: 24, scope: !8191)
!8194 = !DILocation(line: 3754, column: 9, scope: !8191)
!8195 = !DILocation(line: 3755, column: 5, scope: !8178)
!8196 = !DILocation(line: 3756, column: 14, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8175, file: !4, line: 3756, column: 14)
!8198 = !DILocation(line: 3756, column: 21, scope: !8197)
!8199 = !DILocation(line: 3756, column: 38, scope: !8197)
!8200 = !DILocation(line: 3756, column: 41, scope: !8201)
!8201 = !DILexicalBlockFile(scope: !8197, file: !4, discriminator: 1)
!8202 = !DILocation(line: 3756, column: 47, scope: !8197)
!8203 = !DILocation(line: 3756, column: 14, scope: !8175)
!8204 = !DILocation(line: 3757, column: 30, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8197, file: !4, line: 3756, column: 52)
!8206 = !DILocation(line: 3757, column: 14, scope: !8205)
!8207 = !DILocation(line: 3757, column: 12, scope: !8205)
!8208 = !DILocation(line: 3758, column: 18, scope: !8205)
!8209 = !DILocation(line: 3758, column: 23, scope: !8205)
!8210 = !DILocation(line: 3758, column: 21, scope: !8205)
!8211 = !DILocation(line: 3758, column: 17, scope: !8205)
!8212 = !DILocation(line: 3758, column: 32, scope: !8213)
!8213 = !DILexicalBlockFile(scope: !8205, file: !4, discriminator: 1)
!8214 = !DILocation(line: 3758, column: 40, scope: !8215)
!8215 = !DILexicalBlockFile(scope: !8205, file: !4, discriminator: 2)
!8216 = !DILocation(line: 3758, column: 15, scope: !8217)
!8217 = !DILexicalBlockFile(scope: !8218, file: !4, discriminator: 4)
!8218 = !DILexicalBlockFile(scope: !8205, file: !4, discriminator: 3)
!8219 = !DILocation(line: 3759, column: 29, scope: !8205)
!8220 = !DILocation(line: 3759, column: 32, scope: !8205)
!8221 = !DILocation(line: 3759, column: 9, scope: !8205)
!8222 = !DILocation(line: 3760, column: 16, scope: !8205)
!8223 = !DILocation(line: 3760, column: 13, scope: !8205)
!8224 = !DILocation(line: 3761, column: 5, scope: !8205)
!8225 = !DILocation(line: 3763, column: 14, scope: !1679)
!8226 = !DILocation(line: 3763, column: 5, scope: !1679)
!8227 = !DILocation(line: 3763, column: 8, scope: !1679)
!8228 = !DILocation(line: 3763, column: 12, scope: !1679)
!8229 = !DILocation(line: 3767, column: 5, scope: !1679)
!8230 = !DILocation(line: 3768, column: 19, scope: !1679)
!8231 = !DILocation(line: 3768, column: 22, scope: !1679)
!8232 = !DILocation(line: 3768, column: 27, scope: !1679)
!8233 = !DILocation(line: 3768, column: 5, scope: !1679)
!8234 = !DILocation(line: 3769, column: 1, scope: !1679)
!8235 = !DILocation(line: 3769, column: 1, scope: !8236)
!8236 = !DILexicalBlockFile(scope: !1679, file: !4, discriminator: 1)
!8237 = !DILocation(line: 3923, column: 20, scope: !904)
!8238 = !DILocation(line: 3923, column: 30, scope: !904)
!8239 = !DILocation(line: 3923, column: 46, scope: !904)
!8240 = !DILocation(line: 3923, column: 62, scope: !904)
!8241 = !DILocation(line: 3924, column: 34, scope: !904)
!8242 = !DILocation(line: 3924, column: 49, scope: !904)
!8243 = !DILocation(line: 3926, column: 5, scope: !904)
!8244 = !DILocation(line: 3926, column: 13, scope: !904)
!8245 = !DILocation(line: 3926, column: 29, scope: !904)
!8246 = !DILocation(line: 3926, column: 20, scope: !904)
!8247 = !DILocation(line: 3926, column: 41, scope: !904)
!8248 = !DILocation(line: 3926, column: 32, scope: !904)
!8249 = !DILocation(line: 3926, column: 31, scope: !904)
!8250 = !DILocation(line: 3928, column: 23, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !904, file: !4, line: 3928, column: 9)
!8252 = !DILocation(line: 3928, column: 9, scope: !8251)
!8253 = !DILocation(line: 3928, column: 26, scope: !8251)
!8254 = !DILocation(line: 3928, column: 43, scope: !8255)
!8255 = !DILexicalBlockFile(scope: !8251, file: !4, discriminator: 1)
!8256 = !DILocation(line: 3928, column: 29, scope: !8251)
!8257 = !DILocation(line: 3928, column: 9, scope: !904)
!8258 = !DILocation(line: 3929, column: 29, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8260, file: !4, line: 3929, column: 13)
!8260 = distinct !DILexicalBlock(scope: !8251, file: !4, line: 3928, column: 47)
!8261 = !DILocation(line: 3929, column: 32, scope: !8259)
!8262 = !DILocation(line: 3929, column: 35, scope: !8259)
!8263 = !DILocation(line: 3929, column: 38, scope: !8259)
!8264 = !DILocation(line: 3929, column: 43, scope: !8259)
!8265 = !DILocation(line: 3929, column: 13, scope: !8259)
!8266 = !DILocation(line: 3929, column: 13, scope: !8260)
!8267 = !DILocation(line: 3930, column: 23, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8259, file: !4, line: 3929, column: 52)
!8269 = !DILocation(line: 3930, column: 26, scope: !8268)
!8270 = !DILocation(line: 3930, column: 29, scope: !8268)
!8271 = !DILocation(line: 3930, column: 13, scope: !8268)
!8272 = !DILocation(line: 3931, column: 13, scope: !8268)
!8273 = !DILocation(line: 3933, column: 28, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8260, file: !4, line: 3933, column: 13)
!8275 = !DILocation(line: 3933, column: 13, scope: !8274)
!8276 = !DILocation(line: 3933, column: 13, scope: !8260)
!8277 = !DILocation(line: 3934, column: 32, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8279, file: !4, line: 3934, column: 17)
!8279 = distinct !DILexicalBlock(scope: !8274, file: !4, line: 3933, column: 32)
!8280 = !DILocation(line: 3934, column: 17, scope: !8278)
!8281 = !DILocation(line: 3934, column: 17, scope: !8279)
!8282 = !DILocation(line: 3935, column: 32, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8278, file: !4, line: 3934, column: 36)
!8284 = !DILocation(line: 3935, column: 17, scope: !8283)
!8285 = !DILocation(line: 3936, column: 13, scope: !8283)
!8286 = !DILocation(line: 3938, column: 32, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8278, file: !4, line: 3937, column: 18)
!8288 = !DILocation(line: 3938, column: 35, scope: !8287)
!8289 = !DILocation(line: 3938, column: 17, scope: !8287)
!8290 = !DILocation(line: 3940, column: 28, scope: !8279)
!8291 = !DILocation(line: 3940, column: 13, scope: !8279)
!8292 = !DILocation(line: 3941, column: 14, scope: !8279)
!8293 = !DILocation(line: 3941, column: 21, scope: !8279)
!8294 = !DILocation(line: 3942, column: 13, scope: !8279)
!8295 = !DILocation(line: 3944, column: 28, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8260, file: !4, line: 3944, column: 13)
!8297 = !DILocation(line: 3944, column: 13, scope: !8296)
!8298 = !DILocation(line: 3944, column: 13, scope: !8260)
!8299 = !DILocation(line: 3945, column: 28, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8301, file: !4, line: 3945, column: 17)
!8301 = distinct !DILexicalBlock(scope: !8296, file: !4, line: 3944, column: 32)
!8302 = !DILocation(line: 3945, column: 31, scope: !8300)
!8303 = !DILocation(line: 3945, column: 34, scope: !8300)
!8304 = !DILocation(line: 3945, column: 18, scope: !8300)
!8305 = !DILocation(line: 3945, column: 17, scope: !8301)
!8306 = !DILocation(line: 3946, column: 30, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8300, file: !4, line: 3945, column: 43)
!8308 = !DILocation(line: 3946, column: 46, scope: !8307)
!8309 = !DILocation(line: 3946, column: 17, scope: !8307)
!8310 = !DILocation(line: 3947, column: 17, scope: !8307)
!8311 = !DILocation(line: 3949, column: 27, scope: !8301)
!8312 = !DILocation(line: 3949, column: 30, scope: !8301)
!8313 = !DILocation(line: 3949, column: 35, scope: !8301)
!8314 = !DILocation(line: 3949, column: 13, scope: !8301)
!8315 = !DILocation(line: 3950, column: 24, scope: !8301)
!8316 = !DILocation(line: 3950, column: 27, scope: !8301)
!8317 = !DILocation(line: 3950, column: 13, scope: !8301)
!8318 = !DILocation(line: 3951, column: 13, scope: !8301)
!8319 = !DILocation(line: 3954, column: 9, scope: !8260)
!8320 = !DILocation(line: 3956, column: 25, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !904, file: !4, line: 3956, column: 9)
!8322 = !DILocation(line: 3956, column: 9, scope: !8321)
!8323 = !DILocation(line: 3956, column: 9, scope: !904)
!8324 = !DILocation(line: 3957, column: 29, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8326, file: !4, line: 3957, column: 13)
!8326 = distinct !DILexicalBlock(scope: !8321, file: !4, line: 3956, column: 29)
!8327 = !DILocation(line: 3957, column: 13, scope: !8325)
!8328 = !DILocation(line: 3957, column: 13, scope: !8326)
!8329 = !DILocation(line: 3958, column: 28, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8325, file: !4, line: 3957, column: 33)
!8331 = !DILocation(line: 3958, column: 13, scope: !8330)
!8332 = !DILocation(line: 3959, column: 28, scope: !8330)
!8333 = !DILocation(line: 3959, column: 13, scope: !8330)
!8334 = !DILocation(line: 3960, column: 14, scope: !8330)
!8335 = !DILocation(line: 3960, column: 21, scope: !8330)
!8336 = !DILocation(line: 3961, column: 9, scope: !8330)
!8337 = !DILocation(line: 3963, column: 28, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8325, file: !4, line: 3962, column: 14)
!8339 = !DILocation(line: 3963, column: 31, scope: !8338)
!8340 = !DILocation(line: 3963, column: 13, scope: !8338)
!8341 = !DILocation(line: 3964, column: 28, scope: !8338)
!8342 = !DILocation(line: 3964, column: 13, scope: !8338)
!8343 = !DILocation(line: 3965, column: 14, scope: !8338)
!8344 = !DILocation(line: 3965, column: 21, scope: !8338)
!8345 = !DILocation(line: 3967, column: 9, scope: !8326)
!8346 = !DILocation(line: 3970, column: 18, scope: !904)
!8347 = !DILocation(line: 3970, column: 21, scope: !904)
!8348 = !DILocation(line: 3970, column: 24, scope: !904)
!8349 = !DILocation(line: 3970, column: 27, scope: !904)
!8350 = !DILocation(line: 3970, column: 30, scope: !904)
!8351 = !DILocation(line: 3970, column: 35, scope: !904)
!8352 = !DILocation(line: 3970, column: 5, scope: !904)
!8353 = !DILocation(line: 3971, column: 19, scope: !904)
!8354 = !DILocation(line: 3971, column: 22, scope: !904)
!8355 = !DILocation(line: 3971, column: 27, scope: !904)
!8356 = !DILocation(line: 3971, column: 5, scope: !904)
!8357 = !DILocation(line: 3972, column: 19, scope: !904)
!8358 = !DILocation(line: 3972, column: 22, scope: !904)
!8359 = !DILocation(line: 3972, column: 27, scope: !904)
!8360 = !DILocation(line: 3972, column: 5, scope: !904)
!8361 = !DILocation(line: 3973, column: 1, scope: !904)
!8362 = !DILocation(line: 3781, column: 21, scope: !1780)
!8363 = !DILocation(line: 3781, column: 31, scope: !1780)
!8364 = !DILocation(line: 3781, column: 47, scope: !1780)
!8365 = !DILocation(line: 3781, column: 63, scope: !1780)
!8366 = !DILocation(line: 3782, column: 35, scope: !1780)
!8367 = !DILocation(line: 3782, column: 50, scope: !1780)
!8368 = !DILocation(line: 3784, column: 5, scope: !1780)
!8369 = !DILocation(line: 3784, column: 16, scope: !1780)
!8370 = !DILocation(line: 3784, column: 34, scope: !1780)
!8371 = !DILocation(line: 3784, column: 40, scope: !1780)
!8372 = !DILocation(line: 3784, column: 50, scope: !1780)
!8373 = !DILocation(line: 3784, column: 95, scope: !1780)
!8374 = !DILocation(line: 3785, column: 5, scope: !1780)
!8375 = !DILocation(line: 3785, column: 17, scope: !1780)
!8376 = !DILocation(line: 3785, column: 24, scope: !1780)
!8377 = !DILocation(line: 3786, column: 5, scope: !1780)
!8378 = !DILocation(line: 3786, column: 17, scope: !1780)
!8379 = !DILocation(line: 3786, column: 28, scope: !1780)
!8380 = !DILocation(line: 3786, column: 37, scope: !1780)
!8381 = !DILocation(line: 3787, column: 5, scope: !1780)
!8382 = !DILocation(line: 3787, column: 13, scope: !1780)
!8383 = !DILocation(line: 3787, column: 31, scope: !1780)
!8384 = !DILocation(line: 3787, column: 22, scope: !1780)
!8385 = !DILocation(line: 3788, column: 5, scope: !1780)
!8386 = !DILocation(line: 3788, column: 13, scope: !1780)
!8387 = !DILocation(line: 3788, column: 32, scope: !1780)
!8388 = !DILocation(line: 3788, column: 23, scope: !1780)
!8389 = !DILocation(line: 3788, column: 44, scope: !1780)
!8390 = !DILocation(line: 3788, column: 35, scope: !1780)
!8391 = !DILocation(line: 3788, column: 34, scope: !1780)
!8392 = !DILocation(line: 3791, column: 18, scope: !1780)
!8393 = !DILocation(line: 3791, column: 21, scope: !1780)
!8394 = !DILocation(line: 3791, column: 27, scope: !1780)
!8395 = !DILocation(line: 3791, column: 30, scope: !1780)
!8396 = !DILocation(line: 3791, column: 25, scope: !1780)
!8397 = !DILocation(line: 3791, column: 17, scope: !1780)
!8398 = !DILocation(line: 3791, column: 37, scope: !8399)
!8399 = !DILexicalBlockFile(scope: !1780, file: !4, discriminator: 1)
!8400 = !DILocation(line: 3791, column: 40, scope: !1780)
!8401 = !DILocation(line: 3791, column: 46, scope: !8402)
!8402 = !DILexicalBlockFile(scope: !1780, file: !4, discriminator: 2)
!8403 = !DILocation(line: 3791, column: 49, scope: !1780)
!8404 = !DILocation(line: 3791, column: 15, scope: !8405)
!8405 = !DILexicalBlockFile(scope: !8406, file: !4, discriminator: 4)
!8406 = !DILexicalBlockFile(scope: !1780, file: !4, discriminator: 3)
!8407 = !DILocation(line: 3792, column: 25, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !1780, file: !4, line: 3792, column: 9)
!8409 = !DILocation(line: 3792, column: 9, scope: !8408)
!8410 = !DILocation(line: 3792, column: 9, scope: !1780)
!8411 = !DILocation(line: 3793, column: 24, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8413, file: !4, line: 3793, column: 13)
!8413 = distinct !DILexicalBlock(scope: !8408, file: !4, line: 3792, column: 29)
!8414 = !DILocation(line: 3793, column: 27, scope: !8412)
!8415 = !DILocation(line: 3793, column: 30, scope: !8412)
!8416 = !DILocation(line: 3793, column: 14, scope: !8412)
!8417 = !DILocation(line: 3793, column: 13, scope: !8413)
!8418 = !DILocation(line: 3794, column: 13, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8412, file: !4, line: 3793, column: 39)
!8420 = !DILocation(line: 3796, column: 18, scope: !8413)
!8421 = !DILocation(line: 3796, column: 9, scope: !8413)
!8422 = !DILocation(line: 3796, column: 12, scope: !8413)
!8423 = !DILocation(line: 3796, column: 16, scope: !8413)
!8424 = !DILocation(line: 3797, column: 20, scope: !8413)
!8425 = !DILocation(line: 3797, column: 23, scope: !8413)
!8426 = !DILocation(line: 3797, column: 9, scope: !8413)
!8427 = !DILocation(line: 3798, column: 9, scope: !8413)
!8428 = !DILocation(line: 3801, column: 26, scope: !1780)
!8429 = !DILocation(line: 3801, column: 15, scope: !1780)
!8430 = !DILocation(line: 3801, column: 42, scope: !1780)
!8431 = !DILocation(line: 3801, column: 31, scope: !1780)
!8432 = !DILocation(line: 3801, column: 29, scope: !1780)
!8433 = !DILocation(line: 3801, column: 13, scope: !1780)
!8434 = !DILocation(line: 3802, column: 9, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !1780, file: !4, line: 3802, column: 9)
!8436 = !DILocation(line: 3802, column: 17, scope: !8435)
!8437 = !DILocation(line: 3802, column: 9, scope: !1780)
!8438 = !DILocation(line: 3803, column: 13, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8440, file: !4, line: 3803, column: 13)
!8440 = distinct !DILexicalBlock(scope: !8435, file: !4, line: 3802, column: 22)
!8441 = !DILocation(line: 3803, column: 16, scope: !8439)
!8442 = !DILocation(line: 3803, column: 22, scope: !8439)
!8443 = !DILocation(line: 3803, column: 25, scope: !8439)
!8444 = !DILocation(line: 3803, column: 20, scope: !8439)
!8445 = !DILocation(line: 3803, column: 13, scope: !8440)
!8446 = !DILocation(line: 3805, column: 21, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8439, file: !4, line: 3803, column: 30)
!8448 = !DILocation(line: 3805, column: 24, scope: !8447)
!8449 = !DILocation(line: 3805, column: 30, scope: !8447)
!8450 = !DILocation(line: 3805, column: 33, scope: !8447)
!8451 = !DILocation(line: 3805, column: 28, scope: !8447)
!8452 = !DILocation(line: 3805, column: 19, scope: !8447)
!8453 = !DILocation(line: 3806, column: 30, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8447, file: !4, line: 3806, column: 17)
!8455 = !DILocation(line: 3806, column: 33, scope: !8454)
!8456 = !DILocation(line: 3806, column: 36, scope: !8454)
!8457 = !DILocation(line: 3806, column: 43, scope: !8454)
!8458 = !DILocation(line: 3806, column: 18, scope: !8454)
!8459 = !DILocation(line: 3806, column: 17, scope: !8447)
!8460 = !DILocation(line: 3807, column: 17, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8454, file: !4, line: 3806, column: 52)
!8462 = !DILocation(line: 3809, column: 22, scope: !8447)
!8463 = !DILocation(line: 3809, column: 13, scope: !8447)
!8464 = !DILocation(line: 3809, column: 16, scope: !8447)
!8465 = !DILocation(line: 3809, column: 20, scope: !8447)
!8466 = !DILocation(line: 3810, column: 9, scope: !8447)
!8467 = !DILocation(line: 3812, column: 28, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8469, file: !4, line: 3812, column: 17)
!8469 = distinct !DILexicalBlock(scope: !8439, file: !4, line: 3811, column: 14)
!8470 = !DILocation(line: 3812, column: 31, scope: !8468)
!8471 = !DILocation(line: 3812, column: 34, scope: !8468)
!8472 = !DILocation(line: 3812, column: 18, scope: !8468)
!8473 = !DILocation(line: 3812, column: 17, scope: !8469)
!8474 = !DILocation(line: 3813, column: 17, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8468, file: !4, line: 3812, column: 43)
!8476 = !DILocation(line: 3816, column: 20, scope: !8440)
!8477 = !DILocation(line: 3816, column: 23, scope: !8440)
!8478 = !DILocation(line: 3816, column: 9, scope: !8440)
!8479 = !DILocation(line: 3817, column: 9, scope: !8440)
!8480 = !DILocation(line: 3819, column: 9, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !1780, file: !4, line: 3819, column: 9)
!8482 = !DILocation(line: 3819, column: 19, scope: !8481)
!8483 = !DILocation(line: 3819, column: 24, scope: !8481)
!8484 = !DILocation(line: 3819, column: 17, scope: !8481)
!8485 = !DILocation(line: 3819, column: 9, scope: !1780)
!8486 = !DILocation(line: 3820, column: 10, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8481, file: !4, line: 3819, column: 30)
!8488 = !DILocation(line: 3820, column: 17, scope: !8487)
!8489 = !DILocation(line: 3821, column: 9, scope: !8487)
!8490 = !DILocation(line: 3831, column: 9, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !1780, file: !4, line: 3831, column: 9)
!8492 = !DILocation(line: 3831, column: 12, scope: !8491)
!8493 = !DILocation(line: 3831, column: 19, scope: !8491)
!8494 = !DILocation(line: 3831, column: 22, scope: !8491)
!8495 = !DILocation(line: 3831, column: 16, scope: !8491)
!8496 = !DILocation(line: 3831, column: 9, scope: !1780)
!8497 = !DILocation(line: 3832, column: 17, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8491, file: !4, line: 3831, column: 27)
!8499 = !DILocation(line: 3832, column: 20, scope: !8498)
!8500 = !DILocation(line: 3832, column: 26, scope: !8498)
!8501 = !DILocation(line: 3832, column: 29, scope: !8498)
!8502 = !DILocation(line: 3832, column: 24, scope: !8498)
!8503 = !DILocation(line: 3832, column: 15, scope: !8498)
!8504 = !DILocation(line: 3833, column: 13, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8498, file: !4, line: 3833, column: 13)
!8506 = !DILocation(line: 3833, column: 19, scope: !8505)
!8507 = !DILocation(line: 3833, column: 13, scope: !8498)
!8508 = !DILocation(line: 3835, column: 40, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8510, file: !4, line: 3835, column: 17)
!8510 = distinct !DILexicalBlock(scope: !8505, file: !4, line: 3833, column: 24)
!8511 = !DILocation(line: 3835, column: 43, scope: !8509)
!8512 = !DILocation(line: 3835, column: 50, scope: !8509)
!8513 = !DILocation(line: 3835, column: 18, scope: !8509)
!8514 = !DILocation(line: 3835, column: 17, scope: !8510)
!8515 = !DILocation(line: 3836, column: 17, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8509, file: !4, line: 3835, column: 59)
!8517 = !DILocation(line: 3838, column: 15, scope: !8510)
!8518 = !DILocation(line: 3839, column: 9, scope: !8510)
!8519 = !DILocation(line: 3841, column: 22, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8505, file: !4, line: 3840, column: 14)
!8521 = !DILocation(line: 3841, column: 21, scope: !8520)
!8522 = !DILocation(line: 3841, column: 19, scope: !8520)
!8523 = !DILocation(line: 3843, column: 40, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8520, file: !4, line: 3843, column: 17)
!8525 = !DILocation(line: 3843, column: 43, scope: !8524)
!8526 = !DILocation(line: 3843, column: 50, scope: !8524)
!8527 = !DILocation(line: 3843, column: 18, scope: !8524)
!8528 = !DILocation(line: 3843, column: 17, scope: !8520)
!8529 = !DILocation(line: 3844, column: 17, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8524, file: !4, line: 3843, column: 59)
!8531 = !DILocation(line: 3846, column: 15, scope: !8520)
!8532 = !DILocation(line: 3848, column: 5, scope: !8498)
!8533 = !DILocation(line: 3851, column: 13, scope: !1780)
!8534 = !DILocation(line: 3851, column: 16, scope: !1780)
!8535 = !DILocation(line: 3851, column: 22, scope: !1780)
!8536 = !DILocation(line: 3851, column: 25, scope: !1780)
!8537 = !DILocation(line: 3851, column: 20, scope: !1780)
!8538 = !DILocation(line: 3851, column: 29, scope: !1780)
!8539 = !DILocation(line: 3851, column: 11, scope: !1780)
!8540 = !DILocation(line: 3852, column: 11, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !1780, file: !4, line: 3852, column: 9)
!8542 = !DILocation(line: 3852, column: 16, scope: !8541)
!8543 = !DILocation(line: 3852, column: 13, scope: !8541)
!8544 = !DILocation(line: 3852, column: 18, scope: !8541)
!8545 = !DILocation(line: 3852, column: 21, scope: !8546)
!8546 = !DILexicalBlockFile(scope: !8541, file: !4, discriminator: 1)
!8547 = !DILocation(line: 3852, column: 29, scope: !8541)
!8548 = !DILocation(line: 3852, column: 32, scope: !8541)
!8549 = !DILocation(line: 3852, column: 27, scope: !8541)
!8550 = !DILocation(line: 3852, column: 37, scope: !8541)
!8551 = !DILocation(line: 3852, column: 42, scope: !8552)
!8552 = !DILexicalBlockFile(scope: !8553, file: !4, discriminator: 3)
!8553 = !DILexicalBlockFile(scope: !8541, file: !4, discriminator: 2)
!8554 = !DILocation(line: 3852, column: 47, scope: !8541)
!8555 = !DILocation(line: 3852, column: 44, scope: !8541)
!8556 = !DILocation(line: 3852, column: 49, scope: !8541)
!8557 = !DILocation(line: 3852, column: 52, scope: !8558)
!8558 = !DILexicalBlockFile(scope: !8541, file: !4, discriminator: 4)
!8559 = !DILocation(line: 3852, column: 60, scope: !8541)
!8560 = !DILocation(line: 3852, column: 63, scope: !8541)
!8561 = !DILocation(line: 3852, column: 58, scope: !8541)
!8562 = !DILocation(line: 3852, column: 9, scope: !1780)
!8563 = !DILocation(line: 3853, column: 26, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8565, file: !4, line: 3853, column: 13)
!8565 = distinct !DILexicalBlock(scope: !8541, file: !4, line: 3852, column: 69)
!8566 = !DILocation(line: 3853, column: 29, scope: !8564)
!8567 = !DILocation(line: 3853, column: 36, scope: !8564)
!8568 = !DILocation(line: 3853, column: 14, scope: !8564)
!8569 = !DILocation(line: 3853, column: 13, scope: !8565)
!8570 = !DILocation(line: 3854, column: 13, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8564, file: !4, line: 3853, column: 45)
!8572 = !DILocation(line: 3856, column: 5, scope: !8565)
!8573 = !DILocation(line: 3858, column: 13, scope: !1780)
!8574 = !DILocation(line: 3858, column: 16, scope: !1780)
!8575 = !DILocation(line: 3858, column: 11, scope: !1780)
!8576 = !DILocation(line: 3859, column: 11, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !1780, file: !4, line: 3859, column: 9)
!8578 = !DILocation(line: 3859, column: 16, scope: !8577)
!8579 = !DILocation(line: 3859, column: 13, scope: !8577)
!8580 = !DILocation(line: 3859, column: 18, scope: !8577)
!8581 = !DILocation(line: 3859, column: 21, scope: !8582)
!8582 = !DILexicalBlockFile(scope: !8577, file: !4, discriminator: 1)
!8583 = !DILocation(line: 3859, column: 29, scope: !8577)
!8584 = !DILocation(line: 3859, column: 32, scope: !8577)
!8585 = !DILocation(line: 3859, column: 27, scope: !8577)
!8586 = !DILocation(line: 3859, column: 9, scope: !1780)
!8587 = !DILocation(line: 3860, column: 26, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !4, line: 3860, column: 13)
!8589 = distinct !DILexicalBlock(scope: !8577, file: !4, line: 3859, column: 38)
!8590 = !DILocation(line: 3860, column: 29, scope: !8588)
!8591 = !DILocation(line: 3860, column: 36, scope: !8588)
!8592 = !DILocation(line: 3860, column: 14, scope: !8588)
!8593 = !DILocation(line: 3860, column: 13, scope: !8589)
!8594 = !DILocation(line: 3861, column: 13, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8588, file: !4, line: 3860, column: 45)
!8596 = !DILocation(line: 3863, column: 5, scope: !8589)
!8597 = !DILocation(line: 3865, column: 9, scope: !1800)
!8598 = !DILocation(line: 3865, column: 12, scope: !1800)
!8599 = !DILocation(line: 3865, column: 16, scope: !1800)
!8600 = !DILocation(line: 3865, column: 9, scope: !1780)
!8601 = !DILocation(line: 3866, column: 13, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8603, file: !4, line: 3866, column: 13)
!8603 = distinct !DILexicalBlock(scope: !1800, file: !4, line: 3865, column: 22)
!8604 = !DILocation(line: 3866, column: 16, scope: !8602)
!8605 = !DILocation(line: 3866, column: 20, scope: !8602)
!8606 = !DILocation(line: 3866, column: 13, scope: !8603)
!8607 = !DILocation(line: 3867, column: 28, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8602, file: !4, line: 3866, column: 26)
!8609 = !DILocation(line: 3867, column: 31, scope: !8608)
!8610 = !DILocation(line: 3867, column: 41, scope: !8608)
!8611 = !DILocation(line: 3867, column: 44, scope: !8608)
!8612 = !DILocation(line: 3867, column: 53, scope: !8608)
!8613 = !DILocation(line: 3867, column: 56, scope: !8608)
!8614 = !DILocation(line: 3867, column: 65, scope: !8608)
!8615 = !DILocation(line: 3867, column: 68, scope: !8608)
!8616 = !DILocation(line: 3867, column: 13, scope: !8608)
!8617 = !DILocation(line: 3868, column: 9, scope: !8608)
!8618 = !DILocation(line: 3870, column: 40, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8602, file: !4, line: 3869, column: 14)
!8620 = !DILocation(line: 3870, column: 43, scope: !8619)
!8621 = !DILocation(line: 3870, column: 49, scope: !8619)
!8622 = !DILocation(line: 3870, column: 52, scope: !8619)
!8623 = !DILocation(line: 3870, column: 58, scope: !8619)
!8624 = !DILocation(line: 3870, column: 61, scope: !8619)
!8625 = !DILocation(line: 3870, column: 66, scope: !8619)
!8626 = !DILocation(line: 3870, column: 69, scope: !8619)
!8627 = !DILocation(line: 3870, column: 26, scope: !8619)
!8628 = !DILocation(line: 3870, column: 13, scope: !8619)
!8629 = !DILocation(line: 3870, column: 16, scope: !8619)
!8630 = !DILocation(line: 3870, column: 24, scope: !8619)
!8631 = !DILocation(line: 3872, column: 5, scope: !8603)
!8632 = !DILocation(line: 3873, column: 14, scope: !1799)
!8633 = !DILocation(line: 3873, column: 17, scope: !1799)
!8634 = !DILocation(line: 3873, column: 21, scope: !1799)
!8635 = !DILocation(line: 3873, column: 14, scope: !1800)
!8636 = !DILocation(line: 3874, column: 9, scope: !1798)
!8637 = !DILocation(line: 3874, column: 13, scope: !1798)
!8638 = !DILocation(line: 3875, column: 31, scope: !1798)
!8639 = !DILocation(line: 3875, column: 34, scope: !1798)
!8640 = !DILocation(line: 3875, column: 40, scope: !1798)
!8641 = !DILocation(line: 3875, column: 43, scope: !1798)
!8642 = !DILocation(line: 3875, column: 49, scope: !1798)
!8643 = !DILocation(line: 3875, column: 52, scope: !1798)
!8644 = !DILocation(line: 3875, column: 58, scope: !1798)
!8645 = !DILocation(line: 3875, column: 61, scope: !1798)
!8646 = !DILocation(line: 3876, column: 31, scope: !1798)
!8647 = !DILocation(line: 3876, column: 34, scope: !1798)
!8648 = !DILocation(line: 3876, column: 39, scope: !1798)
!8649 = !DILocation(line: 3876, column: 42, scope: !1798)
!8650 = !DILocation(line: 3875, column: 15, scope: !1798)
!8651 = !DILocation(line: 3875, column: 13, scope: !1798)
!8652 = !DILocation(line: 3877, column: 13, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !1798, file: !4, line: 3877, column: 13)
!8654 = !DILocation(line: 3877, column: 17, scope: !8653)
!8655 = !DILocation(line: 3877, column: 13, scope: !1798)
!8656 = !DILocation(line: 3878, column: 14, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8653, file: !4, line: 3877, column: 24)
!8658 = !DILocation(line: 3878, column: 21, scope: !8657)
!8659 = !DILocation(line: 3879, column: 13, scope: !8657)
!8660 = !DILocation(line: 3881, column: 5, scope: !1799)
!8661 = !DILocation(line: 3881, column: 5, scope: !8662)
!8662 = !DILexicalBlockFile(scope: !1799, file: !4, discriminator: 1)
!8663 = !DILocation(line: 3881, column: 5, scope: !1798)
!8664 = !DILocation(line: 3883, column: 27, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !1799, file: !4, line: 3882, column: 10)
!8666 = !DILocation(line: 3883, column: 30, scope: !8665)
!8667 = !DILocation(line: 3883, column: 33, scope: !8665)
!8668 = !DILocation(line: 3883, column: 36, scope: !8665)
!8669 = !DILocation(line: 3883, column: 39, scope: !8665)
!8670 = !DILocation(line: 3883, column: 9, scope: !8665)
!8671 = !DILocation(line: 3884, column: 27, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8665, file: !4, line: 3884, column: 13)
!8673 = !DILocation(line: 3884, column: 13, scope: !8672)
!8674 = !DILocation(line: 3884, column: 30, scope: !8672)
!8675 = !DILocation(line: 3884, column: 47, scope: !8676)
!8676 = !DILexicalBlockFile(scope: !8672, file: !4, discriminator: 1)
!8677 = !DILocation(line: 3884, column: 33, scope: !8672)
!8678 = !DILocation(line: 3884, column: 13, scope: !8665)
!8679 = !DILocation(line: 3885, column: 13, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8672, file: !4, line: 3884, column: 51)
!8681 = !DILocation(line: 3887, column: 17, scope: !8665)
!8682 = !DILocation(line: 3887, column: 20, scope: !8665)
!8683 = !DILocation(line: 3887, column: 15, scope: !8665)
!8684 = !DILocation(line: 3888, column: 17, scope: !8665)
!8685 = !DILocation(line: 3888, column: 20, scope: !8665)
!8686 = !DILocation(line: 3888, column: 15, scope: !8665)
!8687 = !DILocation(line: 3891, column: 28, scope: !1780)
!8688 = !DILocation(line: 3891, column: 31, scope: !1780)
!8689 = !DILocation(line: 3891, column: 37, scope: !1780)
!8690 = !DILocation(line: 3891, column: 13, scope: !1780)
!8691 = !DILocation(line: 3891, column: 11, scope: !1780)
!8692 = !DILocation(line: 3893, column: 17, scope: !1780)
!8693 = !DILocation(line: 3893, column: 20, scope: !1780)
!8694 = !DILocation(line: 3893, column: 27, scope: !1780)
!8695 = !DILocation(line: 3893, column: 5, scope: !1780)
!8696 = !DILocation(line: 3894, column: 14, scope: !1780)
!8697 = !DILocation(line: 3894, column: 5, scope: !1780)
!8698 = !DILocation(line: 3894, column: 8, scope: !1780)
!8699 = !DILocation(line: 3894, column: 12, scope: !1780)
!8700 = !DILocation(line: 3895, column: 19, scope: !1780)
!8701 = !DILocation(line: 3895, column: 5, scope: !1780)
!8702 = !DILocation(line: 3896, column: 19, scope: !1780)
!8703 = !DILocation(line: 3896, column: 22, scope: !1780)
!8704 = !DILocation(line: 3896, column: 5, scope: !1780)
!8705 = !DILocation(line: 3897, column: 5, scope: !1780)
!8706 = !DILocation(line: 3897, column: 8, scope: !1780)
!8707 = !DILocation(line: 3897, column: 12, scope: !1780)
!8708 = !DILocation(line: 3898, column: 9, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !1780, file: !4, line: 3898, column: 9)
!8710 = !DILocation(line: 3898, column: 12, scope: !8709)
!8711 = !DILocation(line: 3898, column: 21, scope: !8709)
!8712 = !DILocation(line: 3898, column: 26, scope: !8709)
!8713 = !DILocation(line: 3898, column: 19, scope: !8709)
!8714 = !DILocation(line: 3898, column: 9, scope: !1780)
!8715 = !DILocation(line: 3899, column: 10, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8709, file: !4, line: 3898, column: 32)
!8717 = !DILocation(line: 3899, column: 17, scope: !8716)
!8718 = !DILocation(line: 3900, column: 9, scope: !8716)
!8719 = !DILocation(line: 3903, column: 28, scope: !1780)
!8720 = !DILocation(line: 3903, column: 31, scope: !1780)
!8721 = !DILocation(line: 3903, column: 37, scope: !1780)
!8722 = !DILocation(line: 3903, column: 13, scope: !1780)
!8723 = !DILocation(line: 3903, column: 11, scope: !1780)
!8724 = !DILocation(line: 3905, column: 17, scope: !1780)
!8725 = !DILocation(line: 3905, column: 20, scope: !1780)
!8726 = !DILocation(line: 3905, column: 27, scope: !1780)
!8727 = !DILocation(line: 3905, column: 5, scope: !1780)
!8728 = !DILocation(line: 3906, column: 14, scope: !1780)
!8729 = !DILocation(line: 3906, column: 5, scope: !1780)
!8730 = !DILocation(line: 3906, column: 8, scope: !1780)
!8731 = !DILocation(line: 3906, column: 12, scope: !1780)
!8732 = !DILocation(line: 3907, column: 19, scope: !1780)
!8733 = !DILocation(line: 3907, column: 5, scope: !1780)
!8734 = !DILocation(line: 3908, column: 19, scope: !1780)
!8735 = !DILocation(line: 3908, column: 22, scope: !1780)
!8736 = !DILocation(line: 3908, column: 5, scope: !1780)
!8737 = !DILocation(line: 3909, column: 14, scope: !1780)
!8738 = !DILocation(line: 3909, column: 5, scope: !1780)
!8739 = !DILocation(line: 3909, column: 8, scope: !1780)
!8740 = !DILocation(line: 3909, column: 12, scope: !1780)
!8741 = !DILocation(line: 3912, column: 5, scope: !1780)
!8742 = !DILocation(line: 3913, column: 5, scope: !1780)
!8743 = !DILocation(line: 3916, column: 20, scope: !1780)
!8744 = !DILocation(line: 3916, column: 5, scope: !1780)
!8745 = !DILocation(line: 3917, column: 20, scope: !1780)
!8746 = !DILocation(line: 3917, column: 5, scope: !1780)
!8747 = !DILocation(line: 3918, column: 5, scope: !1780)
!8748 = !DILocation(line: 3919, column: 1, scope: !1780)
!8749 = !DILocation(line: 3976, column: 20, scope: !915)
!8750 = !DILocation(line: 3976, column: 36, scope: !915)
!8751 = !DILocation(line: 3976, column: 52, scope: !915)
!8752 = !DILocation(line: 3977, column: 34, scope: !915)
!8753 = !DILocation(line: 3977, column: 49, scope: !915)
!8754 = !DILocation(line: 3979, column: 5, scope: !915)
!8755 = !DILocation(line: 3979, column: 16, scope: !915)
!8756 = !DILocation(line: 3979, column: 28, scope: !915)
!8757 = !DILocation(line: 3979, column: 34, scope: !915)
!8758 = !DILocation(line: 3979, column: 38, scope: !915)
!8759 = !DILocation(line: 3979, column: 83, scope: !915)
!8760 = !DILocation(line: 3980, column: 5, scope: !915)
!8761 = !DILocation(line: 3980, column: 13, scope: !915)
!8762 = !DILocation(line: 3980, column: 29, scope: !915)
!8763 = !DILocation(line: 3980, column: 20, scope: !915)
!8764 = !DILocation(line: 3980, column: 41, scope: !915)
!8765 = !DILocation(line: 3980, column: 32, scope: !915)
!8766 = !DILocation(line: 3980, column: 31, scope: !915)
!8767 = !DILocation(line: 3982, column: 23, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !915, file: !4, line: 3982, column: 9)
!8769 = !DILocation(line: 3982, column: 9, scope: !8768)
!8770 = !DILocation(line: 3982, column: 26, scope: !8768)
!8771 = !DILocation(line: 3982, column: 43, scope: !8772)
!8772 = !DILexicalBlockFile(scope: !8768, file: !4, discriminator: 1)
!8773 = !DILocation(line: 3982, column: 29, scope: !8768)
!8774 = !DILocation(line: 3982, column: 9, scope: !915)
!8775 = !DILocation(line: 3983, column: 29, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8777, file: !4, line: 3983, column: 13)
!8777 = distinct !DILexicalBlock(scope: !8768, file: !4, line: 3982, column: 47)
!8778 = !DILocation(line: 3983, column: 32, scope: !8776)
!8779 = !DILocation(line: 3983, column: 35, scope: !8776)
!8780 = !DILocation(line: 3983, column: 38, scope: !8776)
!8781 = !DILocation(line: 3983, column: 43, scope: !8776)
!8782 = !DILocation(line: 3983, column: 13, scope: !8776)
!8783 = !DILocation(line: 3983, column: 13, scope: !8777)
!8784 = !DILocation(line: 3984, column: 13, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8776, file: !4, line: 3983, column: 52)
!8786 = !DILocation(line: 3986, column: 28, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8777, file: !4, line: 3986, column: 13)
!8788 = !DILocation(line: 3986, column: 13, scope: !8787)
!8789 = !DILocation(line: 3986, column: 31, scope: !8787)
!8790 = !DILocation(line: 3986, column: 49, scope: !8791)
!8791 = !DILexicalBlockFile(scope: !8787, file: !4, discriminator: 1)
!8792 = !DILocation(line: 3986, column: 34, scope: !8787)
!8793 = !DILocation(line: 3986, column: 13, scope: !8777)
!8794 = !DILocation(line: 3987, column: 26, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8787, file: !4, line: 3986, column: 53)
!8796 = !DILocation(line: 3987, column: 42, scope: !8795)
!8797 = !DILocation(line: 3987, column: 13, scope: !8795)
!8798 = !DILocation(line: 3988, column: 13, scope: !8795)
!8799 = !DILocation(line: 3990, column: 28, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8777, file: !4, line: 3990, column: 13)
!8801 = !DILocation(line: 3990, column: 13, scope: !8800)
!8802 = !DILocation(line: 3990, column: 13, scope: !8777)
!8803 = !DILocation(line: 3991, column: 28, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8800, file: !4, line: 3990, column: 32)
!8805 = !DILocation(line: 3991, column: 31, scope: !8804)
!8806 = !DILocation(line: 3991, column: 13, scope: !8804)
!8807 = !DILocation(line: 3992, column: 13, scope: !8804)
!8808 = !DILocation(line: 3994, column: 28, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8777, file: !4, line: 3994, column: 13)
!8810 = !DILocation(line: 3994, column: 13, scope: !8809)
!8811 = !DILocation(line: 3994, column: 13, scope: !8777)
!8812 = !DILocation(line: 3995, column: 24, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8809, file: !4, line: 3994, column: 32)
!8814 = !DILocation(line: 3995, column: 27, scope: !8813)
!8815 = !DILocation(line: 3995, column: 13, scope: !8813)
!8816 = !DILocation(line: 3996, column: 13, scope: !8813)
!8817 = !DILocation(line: 3999, column: 9, scope: !8777)
!8818 = !DILocation(line: 4001, column: 25, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !915, file: !4, line: 4001, column: 9)
!8820 = !DILocation(line: 4001, column: 9, scope: !8819)
!8821 = !DILocation(line: 4001, column: 9, scope: !915)
!8822 = !DILocation(line: 4002, column: 29, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8824, file: !4, line: 4002, column: 13)
!8824 = distinct !DILexicalBlock(scope: !8819, file: !4, line: 4001, column: 29)
!8825 = !DILocation(line: 4002, column: 13, scope: !8823)
!8826 = !DILocation(line: 4002, column: 13, scope: !8824)
!8827 = !DILocation(line: 4003, column: 26, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8823, file: !4, line: 4002, column: 33)
!8829 = !DILocation(line: 4003, column: 42, scope: !8828)
!8830 = !DILocation(line: 4003, column: 13, scope: !8828)
!8831 = !DILocation(line: 4004, column: 9, scope: !8828)
!8832 = !DILocation(line: 4006, column: 28, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8823, file: !4, line: 4005, column: 14)
!8834 = !DILocation(line: 4006, column: 31, scope: !8833)
!8835 = !DILocation(line: 4006, column: 13, scope: !8833)
!8836 = !DILocation(line: 4007, column: 14, scope: !8833)
!8837 = !DILocation(line: 4007, column: 21, scope: !8833)
!8838 = !DILocation(line: 4009, column: 9, scope: !8824)
!8839 = !DILocation(line: 4013, column: 18, scope: !915)
!8840 = !DILocation(line: 4013, column: 25, scope: !915)
!8841 = !DILocation(line: 4013, column: 28, scope: !915)
!8842 = !DILocation(line: 4013, column: 31, scope: !915)
!8843 = !DILocation(line: 4013, column: 36, scope: !915)
!8844 = !DILocation(line: 4013, column: 5, scope: !915)
!8845 = !DILocation(line: 4014, column: 5, scope: !915)
!8846 = !DILocation(line: 4015, column: 19, scope: !915)
!8847 = !DILocation(line: 4015, column: 22, scope: !915)
!8848 = !DILocation(line: 4015, column: 27, scope: !915)
!8849 = !DILocation(line: 4015, column: 5, scope: !915)
!8850 = !DILocation(line: 4016, column: 1, scope: !915)
!8851 = !DILocation(line: 4016, column: 1, scope: !8852)
!8852 = !DILexicalBlockFile(scope: !915, file: !4, discriminator: 1)
!8853 = !DILocation(line: 4020, column: 23, scope: !925)
!8854 = !DILocation(line: 4020, column: 44, scope: !925)
!8855 = !DILocation(line: 4020, column: 59, scope: !925)
!8856 = !DILocation(line: 4021, column: 37, scope: !925)
!8857 = !DILocation(line: 4021, column: 52, scope: !925)
!8858 = !DILocation(line: 4023, column: 5, scope: !925)
!8859 = !DILocation(line: 4023, column: 19, scope: !925)
!8860 = !DILocation(line: 4024, column: 5, scope: !925)
!8861 = !DILocation(line: 4024, column: 16, scope: !925)
!8862 = !DILocation(line: 4024, column: 29, scope: !925)
!8863 = !DILocation(line: 4024, column: 35, scope: !925)
!8864 = !DILocation(line: 4024, column: 40, scope: !925)
!8865 = !DILocation(line: 4024, column: 85, scope: !925)
!8866 = !DILocation(line: 4026, column: 5, scope: !925)
!8867 = !DILocation(line: 4027, column: 26, scope: !925)
!8868 = !DILocation(line: 4027, column: 42, scope: !925)
!8869 = !DILocation(line: 4027, column: 5, scope: !925)
!8870 = !DILocation(line: 4028, column: 14, scope: !925)
!8871 = !DILocation(line: 4028, column: 22, scope: !925)
!8872 = !DILocation(line: 4028, column: 30, scope: !925)
!8873 = !DILocation(line: 4028, column: 35, scope: !925)
!8874 = !DILocation(line: 4028, column: 5, scope: !925)
!8875 = !DILocation(line: 4029, column: 5, scope: !925)
!8876 = !DILocation(line: 4030, column: 1, scope: !925)
!8877 = !DILocation(line: 4034, column: 22, scope: !935)
!8878 = !DILocation(line: 4034, column: 43, scope: !935)
!8879 = !DILocation(line: 4034, column: 57, scope: !935)
!8880 = !DILocation(line: 4035, column: 36, scope: !935)
!8881 = !DILocation(line: 4035, column: 51, scope: !935)
!8882 = !DILocation(line: 4037, column: 5, scope: !935)
!8883 = !DILocation(line: 4037, column: 19, scope: !935)
!8884 = !DILocation(line: 4038, column: 5, scope: !935)
!8885 = !DILocation(line: 4038, column: 16, scope: !935)
!8886 = !DILocation(line: 4038, column: 29, scope: !935)
!8887 = !DILocation(line: 4038, column: 35, scope: !935)
!8888 = !DILocation(line: 4038, column: 40, scope: !935)
!8889 = !DILocation(line: 4038, column: 85, scope: !935)
!8890 = !DILocation(line: 4040, column: 5, scope: !935)
!8891 = !DILocation(line: 4041, column: 25, scope: !935)
!8892 = !DILocation(line: 4041, column: 41, scope: !935)
!8893 = !DILocation(line: 4041, column: 5, scope: !935)
!8894 = !DILocation(line: 4042, column: 14, scope: !935)
!8895 = !DILocation(line: 4042, column: 22, scope: !935)
!8896 = !DILocation(line: 4042, column: 30, scope: !935)
!8897 = !DILocation(line: 4042, column: 35, scope: !935)
!8898 = !DILocation(line: 4042, column: 5, scope: !935)
!8899 = !DILocation(line: 4043, column: 5, scope: !935)
!8900 = !DILocation(line: 4044, column: 1, scope: !935)
!8901 = !DILocation(line: 4048, column: 21, scope: !945)
!8902 = !DILocation(line: 4048, column: 42, scope: !945)
!8903 = !DILocation(line: 4048, column: 53, scope: !945)
!8904 = !DILocation(line: 4049, column: 35, scope: !945)
!8905 = !DILocation(line: 4049, column: 50, scope: !945)
!8906 = !DILocation(line: 4051, column: 20, scope: !945)
!8907 = !DILocation(line: 4051, column: 28, scope: !945)
!8908 = !DILocation(line: 4051, column: 31, scope: !945)
!8909 = !DILocation(line: 4051, column: 34, scope: !945)
!8910 = !DILocation(line: 4051, column: 39, scope: !945)
!8911 = !DILocation(line: 4051, column: 5, scope: !945)
!8912 = !DILocation(line: 4052, column: 1, scope: !945)
!8913 = !DILocation(line: 4056, column: 21, scope: !952)
!8914 = !DILocation(line: 4056, column: 42, scope: !952)
!8915 = !DILocation(line: 4056, column: 54, scope: !952)
!8916 = !DILocation(line: 4057, column: 35, scope: !952)
!8917 = !DILocation(line: 4057, column: 50, scope: !952)
!8918 = !DILocation(line: 4059, column: 19, scope: !952)
!8919 = !DILocation(line: 4059, column: 27, scope: !952)
!8920 = !DILocation(line: 4059, column: 30, scope: !952)
!8921 = !DILocation(line: 4059, column: 33, scope: !952)
!8922 = !DILocation(line: 4059, column: 38, scope: !952)
!8923 = !DILocation(line: 4059, column: 5, scope: !952)
!8924 = !DILocation(line: 4060, column: 1, scope: !952)
!8925 = !DILocation(line: 4065, column: 21, scope: !959)
!8926 = !DILocation(line: 4065, column: 42, scope: !959)
!8927 = !DILocation(line: 4065, column: 53, scope: !959)
!8928 = !DILocation(line: 4066, column: 35, scope: !959)
!8929 = !DILocation(line: 4066, column: 50, scope: !959)
!8930 = !DILocation(line: 4068, column: 20, scope: !959)
!8931 = !DILocation(line: 4068, column: 28, scope: !959)
!8932 = !DILocation(line: 4068, column: 31, scope: !959)
!8933 = !DILocation(line: 4068, column: 34, scope: !959)
!8934 = !DILocation(line: 4068, column: 39, scope: !959)
!8935 = !DILocation(line: 4068, column: 5, scope: !959)
!8936 = !DILocation(line: 4069, column: 1, scope: !959)
!8937 = !DILocation(line: 4073, column: 21, scope: !966)
!8938 = !DILocation(line: 4073, column: 42, scope: !966)
!8939 = !DILocation(line: 4073, column: 54, scope: !966)
!8940 = !DILocation(line: 4074, column: 35, scope: !966)
!8941 = !DILocation(line: 4074, column: 50, scope: !966)
!8942 = !DILocation(line: 4076, column: 19, scope: !966)
!8943 = !DILocation(line: 4076, column: 27, scope: !966)
!8944 = !DILocation(line: 4076, column: 30, scope: !966)
!8945 = !DILocation(line: 4076, column: 33, scope: !966)
!8946 = !DILocation(line: 4076, column: 38, scope: !966)
!8947 = !DILocation(line: 4076, column: 5, scope: !966)
!8948 = !DILocation(line: 4077, column: 1, scope: !966)
!8949 = !DILocation(line: 4321, column: 17, scope: !973)
!8950 = !DILocation(line: 4321, column: 38, scope: !973)
!8951 = !DILocation(line: 4321, column: 62, scope: !973)
!8952 = !DILocation(line: 4322, column: 20, scope: !973)
!8953 = !DILocation(line: 4324, column: 5, scope: !973)
!8954 = !DILocation(line: 4324, column: 19, scope: !973)
!8955 = !DILocation(line: 4326, column: 23, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !973, file: !4, line: 4326, column: 9)
!8957 = !DILocation(line: 4326, column: 9, scope: !8956)
!8958 = !DILocation(line: 4326, column: 9, scope: !973)
!8959 = !DILocation(line: 4327, column: 28, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !4, line: 4327, column: 13)
!8961 = distinct !DILexicalBlock(scope: !8956, file: !4, line: 4326, column: 27)
!8962 = !DILocation(line: 4327, column: 36, scope: !8960)
!8963 = !DILocation(line: 4327, column: 39, scope: !8960)
!8964 = !DILocation(line: 4327, column: 44, scope: !8960)
!8965 = !DILocation(line: 4327, column: 13, scope: !8960)
!8966 = !DILocation(line: 4327, column: 13, scope: !8961)
!8967 = !DILocation(line: 4328, column: 13, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8960, file: !4, line: 4327, column: 53)
!8969 = !DILocation(line: 4330, column: 28, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8961, file: !4, line: 4330, column: 13)
!8971 = !DILocation(line: 4330, column: 13, scope: !8970)
!8972 = !DILocation(line: 4330, column: 13, scope: !8961)
!8973 = !DILocation(line: 4331, column: 24, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8970, file: !4, line: 4330, column: 32)
!8975 = !DILocation(line: 4331, column: 13, scope: !8974)
!8976 = !DILocation(line: 4332, column: 9, scope: !8974)
!8977 = !DILocation(line: 4334, column: 28, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8970, file: !4, line: 4333, column: 14)
!8979 = !DILocation(line: 4334, column: 13, scope: !8978)
!8980 = !DILocation(line: 4336, column: 9, scope: !8961)
!8981 = !DILocation(line: 4338, column: 25, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !973, file: !4, line: 4338, column: 9)
!8983 = !DILocation(line: 4338, column: 9, scope: !8982)
!8984 = !DILocation(line: 4338, column: 9, scope: !973)
!8985 = !DILocation(line: 4339, column: 20, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8982, file: !4, line: 4338, column: 29)
!8987 = !DILocation(line: 4339, column: 9, scope: !8986)
!8988 = !DILocation(line: 4340, column: 9, scope: !8986)
!8989 = !DILocation(line: 4343, column: 16, scope: !973)
!8990 = !DILocation(line: 4343, column: 15, scope: !973)
!8991 = !{i64 0, i64 8, !2391, i64 8, i64 8, !2391, i64 16, i64 8, !2391, i64 24, i64 4, !2554, i64 28, i64 4, !2554, i64 32, i64 4, !2554, i64 36, i64 4, !2554, i64 40, i64 4, !2554, i64 44, i64 4, !2554}
!8992 = !DILocation(line: 4344, column: 13, scope: !973)
!8993 = !DILocation(line: 4344, column: 19, scope: !973)
!8994 = !DILocation(line: 4346, column: 9, scope: !982)
!8995 = !DILocation(line: 4346, column: 14, scope: !982)
!8996 = !{!2522, !2523, i64 44}
!8997 = !DILocation(line: 4346, column: 9, scope: !973)
!8998 = !DILocation(line: 4347, column: 9, scope: !981)
!8999 = !DILocation(line: 4347, column: 20, scope: !981)
!9000 = !DILocation(line: 4347, column: 33, scope: !981)
!9001 = !DILocation(line: 4347, column: 39, scope: !981)
!9002 = !DILocation(line: 4347, column: 44, scope: !981)
!9003 = !DILocation(line: 4347, column: 89, scope: !981)
!9004 = !DILocation(line: 4348, column: 9, scope: !981)
!9005 = !DILocation(line: 4348, column: 20, scope: !981)
!9006 = !DILocation(line: 4348, column: 33, scope: !981)
!9007 = !DILocation(line: 4348, column: 39, scope: !981)
!9008 = !DILocation(line: 4348, column: 44, scope: !981)
!9009 = !DILocation(line: 4348, column: 89, scope: !981)
!9010 = !DILocation(line: 4349, column: 9, scope: !981)
!9011 = !DILocation(line: 4349, column: 20, scope: !981)
!9012 = !DILocation(line: 4349, column: 34, scope: !981)
!9013 = !DILocation(line: 4349, column: 40, scope: !981)
!9014 = !DILocation(line: 4349, column: 46, scope: !981)
!9015 = !DILocation(line: 4349, column: 91, scope: !981)
!9016 = !DILocation(line: 4350, column: 9, scope: !981)
!9017 = !DILocation(line: 4350, column: 20, scope: !981)
!9018 = !DILocation(line: 4350, column: 33, scope: !981)
!9019 = !DILocation(line: 4350, column: 39, scope: !981)
!9020 = !DILocation(line: 4350, column: 44, scope: !981)
!9021 = !DILocation(line: 4350, column: 89, scope: !981)
!9022 = !DILocation(line: 4351, column: 9, scope: !981)
!9023 = !DILocation(line: 4351, column: 21, scope: !981)
!9024 = !DILocation(line: 4352, column: 9, scope: !981)
!9025 = !DILocation(line: 4352, column: 21, scope: !981)
!9026 = !DILocation(line: 4353, column: 9, scope: !981)
!9027 = !DILocation(line: 4353, column: 18, scope: !981)
!9028 = !DILocation(line: 4355, column: 13, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !981, file: !4, line: 4355, column: 13)
!9030 = !DILocation(line: 4355, column: 23, scope: !9029)
!9031 = !DILocation(line: 4355, column: 20, scope: !9029)
!9032 = !DILocation(line: 4355, column: 13, scope: !981)
!9033 = !DILocation(line: 4356, column: 33, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9035, file: !4, line: 4356, column: 17)
!9035 = distinct !DILexicalBlock(scope: !9029, file: !4, line: 4355, column: 26)
!9036 = !DILocation(line: 4356, column: 36, scope: !9034)
!9037 = !DILocation(line: 4356, column: 18, scope: !9034)
!9038 = !DILocation(line: 4356, column: 17, scope: !9035)
!9039 = !DILocation(line: 4357, column: 30, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9034, file: !4, line: 4356, column: 45)
!9041 = !DILocation(line: 4357, column: 51, scope: !9040)
!9042 = !DILocation(line: 4357, column: 17, scope: !9040)
!9043 = !DILocation(line: 4358, column: 17, scope: !9040)
!9044 = !DILocation(line: 4360, column: 15, scope: !9035)
!9045 = !DILocation(line: 4361, column: 9, scope: !9035)
!9046 = !DILocation(line: 4363, column: 17, scope: !981)
!9047 = !DILocation(line: 4363, column: 23, scope: !981)
!9048 = !DILocation(line: 4364, column: 16, scope: !981)
!9049 = !DILocation(line: 4364, column: 21, scope: !981)
!9050 = !DILocation(line: 4364, column: 26, scope: !981)
!9051 = !DILocation(line: 4364, column: 14, scope: !981)
!9052 = !DILocation(line: 4365, column: 9, scope: !981)
!9053 = !DILocation(line: 4365, column: 9, scope: !9054)
!9054 = !DILexicalBlockFile(scope: !9055, file: !4, discriminator: 2)
!9055 = !DILexicalBlockFile(scope: !981, file: !4, discriminator: 1)
!9056 = !DILocation(line: 4366, column: 28, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !981, file: !4, line: 4365, column: 19)
!9058 = !DILocation(line: 4366, column: 21, scope: !9057)
!9059 = !DILocation(line: 4366, column: 26, scope: !9057)
!9060 = !DILocation(line: 4367, column: 24, scope: !9057)
!9061 = !DILocation(line: 4369, column: 23, scope: !9057)
!9062 = !DILocation(line: 4369, column: 31, scope: !9057)
!9063 = !DILocation(line: 4369, column: 13, scope: !9057)
!9064 = !DILocation(line: 4370, column: 24, scope: !9057)
!9065 = !DILocation(line: 4370, column: 14, scope: !9057)
!9066 = !DILocation(line: 4370, column: 21, scope: !9057)
!9067 = !DILocation(line: 4372, column: 22, scope: !9057)
!9068 = !DILocation(line: 4372, column: 30, scope: !9057)
!9069 = !DILocation(line: 4372, column: 36, scope: !9057)
!9070 = !DILocation(line: 4372, column: 44, scope: !9057)
!9071 = !DILocation(line: 4372, column: 34, scope: !9057)
!9072 = !DILocation(line: 4372, column: 61, scope: !9057)
!9073 = !DILocation(line: 4372, column: 51, scope: !9057)
!9074 = !DILocation(line: 4372, column: 20, scope: !9057)
!9075 = !DILocation(line: 4373, column: 17, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9057, file: !4, line: 4373, column: 17)
!9077 = !DILocation(line: 4373, column: 28, scope: !9076)
!9078 = !DILocation(line: 4373, column: 17, scope: !9057)
!9079 = !DILocation(line: 4375, column: 26, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9076, file: !4, line: 4373, column: 43)
!9081 = !DILocation(line: 4375, column: 34, scope: !9080)
!9082 = !DILocation(line: 4375, column: 24, scope: !9080)
!9083 = !DILocation(line: 4376, column: 13, scope: !9080)
!9084 = !DILocation(line: 4377, column: 48, scope: !9057)
!9085 = !DILocation(line: 4377, column: 13, scope: !9057)
!9086 = !DILocation(line: 4392, column: 28, scope: !9057)
!9087 = !DILocation(line: 4392, column: 33, scope: !9057)
!9088 = !DILocation(line: 4392, column: 21, scope: !9057)
!9089 = !DILocation(line: 4392, column: 26, scope: !9057)
!9090 = !DILocation(line: 4393, column: 27, scope: !9057)
!9091 = !DILocation(line: 4393, column: 60, scope: !9057)
!9092 = !DILocation(line: 4393, column: 13, scope: !9057)
!9093 = !DILocation(line: 4394, column: 27, scope: !9057)
!9094 = !DILocation(line: 4394, column: 60, scope: !9057)
!9095 = !DILocation(line: 4394, column: 13, scope: !9057)
!9096 = !DILocation(line: 4395, column: 31, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9057, file: !4, line: 4395, column: 17)
!9098 = !DILocation(line: 4395, column: 17, scope: !9097)
!9099 = !DILocation(line: 4395, column: 39, scope: !9097)
!9100 = !DILocation(line: 4395, column: 58, scope: !9101)
!9101 = !DILexicalBlockFile(scope: !9097, file: !4, discriminator: 1)
!9102 = !DILocation(line: 4395, column: 42, scope: !9097)
!9103 = !DILocation(line: 4395, column: 66, scope: !9097)
!9104 = !DILocation(line: 4396, column: 36, scope: !9097)
!9105 = !DILocation(line: 4396, column: 17, scope: !9097)
!9106 = !DILocation(line: 4396, column: 44, scope: !9097)
!9107 = !DILocation(line: 4395, column: 17, scope: !9057)
!9108 = !DILocation(line: 4397, column: 33, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9097, file: !4, line: 4396, column: 50)
!9110 = !DILocation(line: 4397, column: 38, scope: !9109)
!9111 = !DILocation(line: 4397, column: 25, scope: !9109)
!9112 = !DILocation(line: 4397, column: 31, scope: !9109)
!9113 = !DILocation(line: 4398, column: 30, scope: !9109)
!9114 = !DILocation(line: 4398, column: 48, scope: !9109)
!9115 = !DILocation(line: 4398, column: 17, scope: !9109)
!9116 = !DILocation(line: 4399, column: 37, scope: !9109)
!9117 = !DILocation(line: 4399, column: 55, scope: !9109)
!9118 = !DILocation(line: 4399, column: 17, scope: !9109)
!9119 = !DILocation(line: 4400, column: 31, scope: !9109)
!9120 = !DILocation(line: 4400, column: 49, scope: !9109)
!9121 = !DILocation(line: 4400, column: 17, scope: !9109)
!9122 = !DILocation(line: 4401, column: 17, scope: !9109)
!9123 = !DILocation(line: 4403, column: 18, scope: !9057)
!9124 = !DILocation(line: 4405, column: 9, scope: !981)
!9125 = !DILocation(line: 4406, column: 9, scope: !981)
!9126 = !DILocation(line: 4407, column: 9, scope: !981)
!9127 = !DILocation(line: 4408, column: 9, scope: !981)
!9128 = !DILocation(line: 4409, column: 5, scope: !982)
!9129 = !DILocation(line: 4409, column: 5, scope: !9130)
!9130 = !DILexicalBlockFile(scope: !982, file: !4, discriminator: 1)
!9131 = !DILocation(line: 4409, column: 5, scope: !981)
!9132 = !DILocation(line: 4411, column: 19, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !982, file: !4, line: 4410, column: 10)
!9134 = !DILocation(line: 4411, column: 27, scope: !9133)
!9135 = !DILocation(line: 4411, column: 40, scope: !9133)
!9136 = !DILocation(line: 4411, column: 9, scope: !9133)
!9137 = !DILocation(line: 4412, column: 22, scope: !9133)
!9138 = !DILocation(line: 4412, column: 40, scope: !9133)
!9139 = !DILocation(line: 4412, column: 9, scope: !9133)
!9140 = !DILocation(line: 4413, column: 29, scope: !9133)
!9141 = !DILocation(line: 4413, column: 47, scope: !9133)
!9142 = !DILocation(line: 4413, column: 9, scope: !9133)
!9143 = !DILocation(line: 4414, column: 23, scope: !9133)
!9144 = !DILocation(line: 4414, column: 41, scope: !9133)
!9145 = !DILocation(line: 4414, column: 9, scope: !9133)
!9146 = !DILocation(line: 4416, column: 1, scope: !973)
!9147 = !DILocation(line: 4416, column: 1, scope: !9148)
!9148 = !DILexicalBlockFile(scope: !973, file: !4, discriminator: 1)
!9149 = !DILocation(line: 4213, column: 18, scope: !1801)
!9150 = !DILocation(line: 4213, column: 39, scope: !1801)
!9151 = !DILocation(line: 4213, column: 63, scope: !1801)
!9152 = !DILocation(line: 4214, column: 21, scope: !1801)
!9153 = !DILocation(line: 4216, column: 5, scope: !1801)
!9154 = !DILocation(line: 4216, column: 19, scope: !1801)
!9155 = !DILocation(line: 4217, column: 5, scope: !1801)
!9156 = !DILocation(line: 4217, column: 16, scope: !1801)
!9157 = !DILocation(line: 4217, column: 30, scope: !1801)
!9158 = !DILocation(line: 4217, column: 36, scope: !1801)
!9159 = !DILocation(line: 4217, column: 42, scope: !1801)
!9160 = !DILocation(line: 4217, column: 87, scope: !1801)
!9161 = !DILocation(line: 4218, column: 5, scope: !1801)
!9162 = !DILocation(line: 4218, column: 16, scope: !1801)
!9163 = !DILocation(line: 4218, column: 30, scope: !1801)
!9164 = !DILocation(line: 4218, column: 36, scope: !1801)
!9165 = !DILocation(line: 4218, column: 42, scope: !1801)
!9166 = !DILocation(line: 4218, column: 87, scope: !1801)
!9167 = !DILocation(line: 4219, column: 5, scope: !1801)
!9168 = !DILocation(line: 4219, column: 16, scope: !1801)
!9169 = !DILocation(line: 4219, column: 36, scope: !1801)
!9170 = !DILocation(line: 4219, column: 42, scope: !1801)
!9171 = !DILocation(line: 4219, column: 49, scope: !1801)
!9172 = !DILocation(line: 4219, column: 94, scope: !1801)
!9173 = !DILocation(line: 4220, column: 5, scope: !1801)
!9174 = !DILocation(line: 4220, column: 17, scope: !1801)
!9175 = !DILocation(line: 4220, column: 20, scope: !1801)
!9176 = !DILocation(line: 4220, column: 23, scope: !1801)
!9177 = !DILocation(line: 4224, column: 25, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !1801, file: !4, line: 4224, column: 9)
!9179 = !DILocation(line: 4224, column: 9, scope: !9178)
!9180 = !DILocation(line: 4224, column: 9, scope: !1801)
!9181 = !DILocation(line: 4225, column: 20, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9178, file: !4, line: 4224, column: 29)
!9183 = !DILocation(line: 4225, column: 9, scope: !9182)
!9184 = !DILocation(line: 4226, column: 9, scope: !9182)
!9185 = !DILocation(line: 4247, column: 9, scope: !1801)
!9186 = !DILocation(line: 4247, column: 12, scope: !1801)
!9187 = !DILocation(line: 4247, column: 21, scope: !1801)
!9188 = !DILocation(line: 4247, column: 24, scope: !1801)
!9189 = !DILocation(line: 4247, column: 19, scope: !1801)
!9190 = !DILocation(line: 4247, column: 7, scope: !1801)
!9191 = !DILocation(line: 4248, column: 10, scope: !1801)
!9192 = !DILocation(line: 4248, column: 12, scope: !1801)
!9193 = !DILocation(line: 4248, column: 9, scope: !1801)
!9194 = !DILocation(line: 4248, column: 19, scope: !9195)
!9195 = !DILexicalBlockFile(scope: !1801, file: !4, discriminator: 1)
!9196 = !DILocation(line: 4248, column: 9, scope: !9197)
!9197 = !DILexicalBlockFile(scope: !1801, file: !4, discriminator: 2)
!9198 = !DILocation(line: 4248, column: 7, scope: !9199)
!9199 = !DILexicalBlockFile(scope: !9200, file: !4, discriminator: 4)
!9200 = !DILexicalBlockFile(scope: !1801, file: !4, discriminator: 3)
!9201 = !DILocation(line: 4249, column: 9, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !1801, file: !4, line: 4249, column: 9)
!9203 = !DILocation(line: 4249, column: 11, scope: !9202)
!9204 = !DILocation(line: 4249, column: 9, scope: !1801)
!9205 = !DILocation(line: 4250, column: 28, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9207, file: !4, line: 4250, column: 13)
!9207 = distinct !DILexicalBlock(scope: !9202, file: !4, line: 4249, column: 17)
!9208 = !DILocation(line: 4250, column: 13, scope: !9206)
!9209 = !DILocation(line: 4250, column: 13, scope: !9207)
!9210 = !DILocation(line: 4251, column: 28, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9206, file: !4, line: 4250, column: 32)
!9212 = !DILocation(line: 4251, column: 13, scope: !9211)
!9213 = !DILocation(line: 4252, column: 14, scope: !9211)
!9214 = !DILocation(line: 4252, column: 21, scope: !9211)
!9215 = !DILocation(line: 4253, column: 9, scope: !9211)
!9216 = !DILocation(line: 4255, column: 24, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9206, file: !4, line: 4254, column: 14)
!9218 = !DILocation(line: 4255, column: 59, scope: !9217)
!9219 = !DILocation(line: 4255, column: 49, scope: !9217)
!9220 = !DILocation(line: 4255, column: 13, scope: !9217)
!9221 = !DILocation(line: 4256, column: 14, scope: !9217)
!9222 = !DILocation(line: 4256, column: 21, scope: !9217)
!9223 = !DILocation(line: 4259, column: 9, scope: !9207)
!9224 = !DILocation(line: 4263, column: 29, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !1801, file: !4, line: 4263, column: 9)
!9226 = !DILocation(line: 4263, column: 37, scope: !9225)
!9227 = !DILocation(line: 4263, column: 40, scope: !9225)
!9228 = !DILocation(line: 4263, column: 45, scope: !9225)
!9229 = !DILocation(line: 4263, column: 9, scope: !9225)
!9230 = !DILocation(line: 4263, column: 9, scope: !1801)
!9231 = !DILocation(line: 4264, column: 9, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9225, file: !4, line: 4263, column: 54)
!9233 = !DILocation(line: 4267, column: 5, scope: !1801)
!9234 = !DILocation(line: 4268, column: 20, scope: !1801)
!9235 = !DILocation(line: 4268, column: 25, scope: !1801)
!9236 = !DILocation(line: 4268, column: 32, scope: !1801)
!9237 = !DILocation(line: 4268, column: 30, scope: !1801)
!9238 = !DILocation(line: 4268, column: 34, scope: !1801)
!9239 = !DILocation(line: 4268, column: 13, scope: !1801)
!9240 = !DILocation(line: 4268, column: 18, scope: !1801)
!9241 = !DILocation(line: 4269, column: 29, scope: !1801)
!9242 = !DILocation(line: 4269, column: 34, scope: !1801)
!9243 = !DILocation(line: 4269, column: 20, scope: !1801)
!9244 = !DILocation(line: 4269, column: 20, scope: !9195)
!9245 = !DILocation(line: 4269, column: 55, scope: !9197)
!9246 = !DILocation(line: 4269, column: 13, scope: !9199)
!9247 = !DILocation(line: 4269, column: 18, scope: !1801)
!9248 = !DILocation(line: 4270, column: 13, scope: !1801)
!9249 = !DILocation(line: 4270, column: 19, scope: !1801)
!9250 = !DILocation(line: 4272, column: 20, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !1801, file: !4, line: 4272, column: 9)
!9252 = !DILocation(line: 4272, column: 28, scope: !9251)
!9253 = !DILocation(line: 4272, column: 31, scope: !9251)
!9254 = !DILocation(line: 4272, column: 10, scope: !9251)
!9255 = !DILocation(line: 4272, column: 9, scope: !1801)
!9256 = !DILocation(line: 4273, column: 9, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9251, file: !4, line: 4272, column: 40)
!9258 = !DILocation(line: 4275, column: 20, scope: !1801)
!9259 = !DILocation(line: 4275, column: 5, scope: !1801)
!9260 = !DILocation(line: 4275, column: 13, scope: !1801)
!9261 = !DILocation(line: 4275, column: 17, scope: !1801)
!9262 = !DILocation(line: 4284, column: 33, scope: !1801)
!9263 = !DILocation(line: 4284, column: 49, scope: !1801)
!9264 = !DILocation(line: 4284, column: 9, scope: !1801)
!9265 = !DILocation(line: 4284, column: 7, scope: !1801)
!9266 = !DILocation(line: 4285, column: 9, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !1801, file: !4, line: 4285, column: 9)
!9268 = !DILocation(line: 4285, column: 11, scope: !9267)
!9269 = !DILocation(line: 4285, column: 9, scope: !1801)
!9270 = !DILocation(line: 4286, column: 22, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9267, file: !4, line: 4285, column: 38)
!9272 = !DILocation(line: 4286, column: 43, scope: !9271)
!9273 = !DILocation(line: 4286, column: 9, scope: !9271)
!9274 = !DILocation(line: 4287, column: 9, scope: !9271)
!9275 = !DILocation(line: 4290, column: 5, scope: !1801)
!9276 = !DILocation(line: 4292, column: 14, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !1801, file: !4, line: 4292, column: 5)
!9278 = !DILocation(line: 4292, column: 15, scope: !9277)
!9279 = !DILocation(line: 4292, column: 12, scope: !9277)
!9280 = !DILocation(line: 4292, column: 10, scope: !9277)
!9281 = !DILocation(line: 4292, column: 19, scope: !9282)
!9282 = !DILexicalBlockFile(scope: !9283, file: !4, discriminator: 2)
!9283 = !DILexicalBlockFile(scope: !9284, file: !4, discriminator: 1)
!9284 = distinct !DILexicalBlock(scope: !9277, file: !4, line: 4292, column: 5)
!9285 = !DILocation(line: 4292, column: 21, scope: !9284)
!9286 = !DILocation(line: 4292, column: 5, scope: !9277)
!9287 = !DILocation(line: 4293, column: 24, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9284, file: !4, line: 4292, column: 32)
!9289 = !DILocation(line: 4293, column: 14, scope: !9288)
!9290 = !DILocation(line: 4293, column: 9, scope: !9288)
!9291 = !DILocation(line: 4293, column: 22, scope: !9288)
!9292 = !DILocation(line: 4294, column: 9, scope: !9288)
!9293 = !DILocation(line: 4295, column: 24, scope: !9288)
!9294 = !DILocation(line: 4295, column: 58, scope: !9288)
!9295 = !DILocation(line: 4295, column: 9, scope: !9288)
!9296 = !DILocation(line: 4296, column: 61, scope: !9288)
!9297 = !DILocation(line: 4296, column: 9, scope: !9288)
!9298 = !DILocation(line: 4297, column: 5, scope: !9288)
!9299 = !DILocation(line: 4292, column: 28, scope: !9284)
!9300 = !DILocation(line: 4292, column: 5, scope: !9284)
!9301 = !DILocation(line: 4300, column: 20, scope: !1801)
!9302 = !DILocation(line: 4300, column: 44, scope: !1801)
!9303 = !DILocation(line: 4300, column: 34, scope: !1801)
!9304 = !DILocation(line: 4300, column: 72, scope: !1801)
!9305 = !DILocation(line: 4300, column: 5, scope: !1801)
!9306 = !DILocation(line: 4313, column: 5, scope: !1801)
!9307 = !DILocation(line: 4314, column: 5, scope: !1801)
!9308 = !DILocation(line: 4315, column: 25, scope: !1801)
!9309 = !{!2522, !2523, i64 28}
!9310 = !DILocation(line: 4315, column: 31, scope: !1801)
!9311 = !DILocation(line: 4315, column: 6, scope: !1801)
!9312 = !DILocation(line: 4315, column: 13, scope: !1801)
!9313 = !DILocation(line: 4316, column: 6, scope: !1801)
!9314 = !DILocation(line: 4316, column: 13, scope: !1801)
!9315 = !DILocation(line: 4317, column: 1, scope: !1801)
!9316 = !DILocation(line: 4317, column: 1, scope: !9195)
!9317 = !DILocation(line: 4110, column: 21, scope: !1853)
!9318 = !DILocation(line: 4110, column: 50, scope: !1853)
!9319 = !DILocation(line: 4110, column: 65, scope: !1853)
!9320 = !DILocation(line: 4112, column: 24, scope: !1860)
!9321 = !DILocation(line: 4112, column: 10, scope: !1860)
!9322 = !DILocation(line: 4112, column: 32, scope: !1860)
!9323 = !DILocation(line: 4112, column: 47, scope: !9324)
!9324 = !DILexicalBlockFile(scope: !1860, file: !4, discriminator: 1)
!9325 = !DILocation(line: 4112, column: 36, scope: !1860)
!9326 = !DILocation(line: 4112, column: 55, scope: !1860)
!9327 = !DILocation(line: 4113, column: 9, scope: !1860)
!9328 = !DILocation(line: 4113, column: 17, scope: !1860)
!9329 = !DILocation(line: 4113, column: 26, scope: !1860)
!9330 = !DILocation(line: 4113, column: 31, scope: !1860)
!9331 = !DILocation(line: 4113, column: 24, scope: !1860)
!9332 = !DILocation(line: 4112, column: 9, scope: !1853)
!9333 = !DILocation(line: 4114, column: 8, scope: !1859)
!9334 = !DILocation(line: 4114, column: 20, scope: !1859)
!9335 = !DILocation(line: 4114, column: 28, scope: !1859)
!9336 = !DILocation(line: 4114, column: 33, scope: !1859)
!9337 = !DILocation(line: 4114, column: 40, scope: !1859)
!9338 = !DILocation(line: 4114, column: 48, scope: !1859)
!9339 = !DILocation(line: 4114, column: 38, scope: !1859)
!9340 = !DILocation(line: 4115, column: 20, scope: !1859)
!9341 = !DILocation(line: 4115, column: 28, scope: !1859)
!9342 = !DILocation(line: 4115, column: 36, scope: !1859)
!9343 = !DILocation(line: 4115, column: 43, scope: !1859)
!9344 = !DILocation(line: 4115, column: 8, scope: !1859)
!9345 = !DILocation(line: 4116, column: 23, scope: !1859)
!9346 = !DILocation(line: 4116, column: 8, scope: !1859)
!9347 = !DILocation(line: 4116, column: 16, scope: !1859)
!9348 = !DILocation(line: 4116, column: 20, scope: !1859)
!9349 = !DILocation(line: 4117, column: 5, scope: !1860)
!9350 = !DILocation(line: 4117, column: 5, scope: !1859)
!9351 = !DILocation(line: 4118, column: 1, scope: !1853)
!9352 = !DILocation(line: 1846, column: 28, scope: !1861)
!9353 = !DILocation(line: 1846, column: 54, scope: !1861)
!9354 = !DILocation(line: 1846, column: 69, scope: !1861)
!9355 = !DILocation(line: 1848, column: 20, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !1861, file: !4, line: 1848, column: 9)
!9357 = !DILocation(line: 1848, column: 9, scope: !9356)
!9358 = !DILocation(line: 1848, column: 27, scope: !9356)
!9359 = !DILocation(line: 1848, column: 32, scope: !9356)
!9360 = !DILocation(line: 1848, column: 25, scope: !9356)
!9361 = !DILocation(line: 1848, column: 37, scope: !9356)
!9362 = !DILocation(line: 1848, column: 52, scope: !9363)
!9363 = !DILexicalBlockFile(scope: !9356, file: !4, discriminator: 1)
!9364 = !DILocation(line: 1848, column: 41, scope: !9356)
!9365 = !DILocation(line: 1848, column: 57, scope: !9356)
!9366 = !DILocation(line: 1849, column: 9, scope: !9356)
!9367 = !DILocation(line: 1849, column: 14, scope: !9356)
!9368 = !DILocation(line: 1849, column: 30, scope: !9356)
!9369 = !DILocation(line: 1849, column: 20, scope: !9356)
!9370 = !DILocation(line: 1849, column: 18, scope: !9356)
!9371 = !DILocation(line: 1848, column: 9, scope: !1861)
!9372 = !DILocation(line: 1850, column: 10, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9356, file: !4, line: 1849, column: 36)
!9374 = !DILocation(line: 1850, column: 17, scope: !9373)
!9375 = !DILocation(line: 1851, column: 5, scope: !9373)
!9376 = !DILocation(line: 1852, column: 1, scope: !1861)
!9377 = !DILocation(line: 4420, column: 17, scope: !993)
!9378 = !DILocation(line: 4420, column: 38, scope: !993)
!9379 = !DILocation(line: 4420, column: 54, scope: !993)
!9380 = !DILocation(line: 4420, column: 70, scope: !993)
!9381 = !DILocation(line: 4421, column: 31, scope: !993)
!9382 = !DILocation(line: 4421, column: 46, scope: !993)
!9383 = !DILocation(line: 4423, column: 5, scope: !993)
!9384 = !DILocation(line: 4423, column: 14, scope: !993)
!9385 = !DILocation(line: 4424, column: 5, scope: !993)
!9386 = !DILocation(line: 4424, column: 12, scope: !993)
!9387 = !DILocation(line: 4426, column: 9, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !993, file: !4, line: 4426, column: 9)
!9389 = !DILocation(line: 4426, column: 19, scope: !9388)
!9390 = !DILocation(line: 4426, column: 16, scope: !9388)
!9391 = !DILocation(line: 4426, column: 9, scope: !993)
!9392 = !DILocation(line: 4427, column: 30, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9394, file: !4, line: 4427, column: 13)
!9394 = distinct !DILexicalBlock(scope: !9388, file: !4, line: 4426, column: 22)
!9395 = !DILocation(line: 4427, column: 19, scope: !9393)
!9396 = !DILocation(line: 4427, column: 17, scope: !9393)
!9397 = !DILocation(line: 4427, column: 34, scope: !9393)
!9398 = !DILocation(line: 4427, column: 13, scope: !9394)
!9399 = !DILocation(line: 4428, column: 26, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9393, file: !4, line: 4427, column: 49)
!9401 = !DILocation(line: 4428, column: 47, scope: !9400)
!9402 = !DILocation(line: 4428, column: 13, scope: !9400)
!9403 = !DILocation(line: 4429, column: 13, scope: !9400)
!9404 = !DILocation(line: 4431, column: 13, scope: !9394)
!9405 = !DILocation(line: 4431, column: 11, scope: !9394)
!9406 = !DILocation(line: 4432, column: 5, scope: !9394)
!9407 = !DILocation(line: 4434, column: 15, scope: !993)
!9408 = !DILocation(line: 4434, column: 23, scope: !993)
!9409 = !DILocation(line: 4434, column: 26, scope: !993)
!9410 = !DILocation(line: 4434, column: 29, scope: !993)
!9411 = !DILocation(line: 4434, column: 5, scope: !993)
!9412 = !DILocation(line: 4435, column: 11, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !993, file: !4, line: 4435, column: 9)
!9414 = !DILocation(line: 4435, column: 21, scope: !9413)
!9415 = !DILocation(line: 4435, column: 9, scope: !993)
!9416 = !DILocation(line: 4436, column: 18, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9413, file: !4, line: 4435, column: 36)
!9418 = !DILocation(line: 4436, column: 26, scope: !9417)
!9419 = !DILocation(line: 4436, column: 34, scope: !9417)
!9420 = !DILocation(line: 4436, column: 37, scope: !9417)
!9421 = !DILocation(line: 4436, column: 9, scope: !9417)
!9422 = !DILocation(line: 4437, column: 5, scope: !9417)
!9423 = !DILocation(line: 4439, column: 9, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !993, file: !4, line: 4439, column: 9)
!9425 = !DILocation(line: 4439, column: 9, scope: !993)
!9426 = !DILocation(line: 4439, column: 21, scope: !9427)
!9427 = !DILexicalBlockFile(scope: !9424, file: !4, discriminator: 1)
!9428 = !DILocation(line: 4439, column: 13, scope: !9424)
!9429 = !DILocation(line: 4440, column: 16, scope: !993)
!9430 = !DILocation(line: 4440, column: 6, scope: !993)
!9431 = !DILocation(line: 4440, column: 13, scope: !993)
!9432 = !DILocation(line: 4441, column: 1, scope: !993)
!9433 = !DILocation(line: 4441, column: 1, scope: !9434)
!9434 = !DILexicalBlockFile(scope: !993, file: !4, discriminator: 1)
!9435 = !DILocation(line: 5728, column: 18, scope: !1935)
!9436 = !DILocation(line: 5728, column: 39, scope: !1935)
!9437 = !DILocation(line: 5728, column: 55, scope: !1935)
!9438 = !DILocation(line: 5729, column: 32, scope: !1935)
!9439 = !DILocation(line: 5729, column: 47, scope: !1935)
!9440 = !DILocation(line: 5731, column: 5, scope: !1935)
!9441 = !DILocation(line: 5731, column: 18, scope: !1935)
!9442 = !DILocation(line: 5731, column: 24, scope: !1935)
!9443 = !DILocation(line: 5731, column: 28, scope: !1935)
!9444 = !DILocation(line: 5731, column: 36, scope: !1935)
!9445 = !DILocation(line: 5732, column: 5, scope: !1935)
!9446 = !DILocation(line: 5732, column: 17, scope: !1935)
!9447 = !DILocation(line: 5733, column: 5, scope: !1935)
!9448 = !DILocation(line: 5733, column: 16, scope: !1935)
!9449 = !DILocation(line: 5734, column: 5, scope: !1935)
!9450 = !DILocation(line: 5734, column: 16, scope: !1935)
!9451 = !DILocation(line: 5734, column: 23, scope: !1935)
!9452 = !DILocation(line: 5737, column: 23, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !1935, file: !4, line: 5737, column: 9)
!9454 = !DILocation(line: 5737, column: 9, scope: !9453)
!9455 = !DILocation(line: 5737, column: 26, scope: !9453)
!9456 = !DILocation(line: 5737, column: 43, scope: !9457)
!9457 = !DILexicalBlockFile(scope: !9453, file: !4, discriminator: 1)
!9458 = !DILocation(line: 5737, column: 29, scope: !9453)
!9459 = !DILocation(line: 5737, column: 9, scope: !1935)
!9460 = !DILocation(line: 5738, column: 29, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !4, line: 5738, column: 13)
!9462 = distinct !DILexicalBlock(scope: !9453, file: !4, line: 5737, column: 47)
!9463 = !DILocation(line: 5738, column: 37, scope: !9461)
!9464 = !DILocation(line: 5738, column: 40, scope: !9461)
!9465 = !DILocation(line: 5738, column: 43, scope: !9461)
!9466 = !DILocation(line: 5738, column: 48, scope: !9461)
!9467 = !DILocation(line: 5738, column: 13, scope: !9461)
!9468 = !DILocation(line: 5738, column: 13, scope: !9462)
!9469 = !DILocation(line: 5739, column: 13, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9461, file: !4, line: 5738, column: 57)
!9471 = !DILocation(line: 5741, column: 23, scope: !9462)
!9472 = !DILocation(line: 5741, column: 31, scope: !9462)
!9473 = !DILocation(line: 5741, column: 34, scope: !9462)
!9474 = !DILocation(line: 5741, column: 37, scope: !9462)
!9475 = !DILocation(line: 5741, column: 9, scope: !9462)
!9476 = !DILocation(line: 5742, column: 9, scope: !9462)
!9477 = !DILocation(line: 5745, column: 9, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !1935, file: !4, line: 5745, column: 9)
!9479 = !DILocation(line: 5745, column: 16, scope: !9478)
!9480 = !DILocation(line: 5745, column: 22, scope: !9478)
!9481 = !DILocation(line: 5745, column: 27, scope: !9478)
!9482 = !DILocation(line: 5745, column: 20, scope: !9478)
!9483 = !DILocation(line: 5745, column: 9, scope: !1935)
!9484 = !DILocation(line: 5746, column: 9, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9478, file: !4, line: 5745, column: 32)
!9486 = !DILocation(line: 5747, column: 5, scope: !9485)
!9487 = !DILocation(line: 5749, column: 13, scope: !1935)
!9488 = !DILocation(line: 5749, column: 18, scope: !1935)
!9489 = !DILocation(line: 5749, column: 24, scope: !1935)
!9490 = !DILocation(line: 5749, column: 31, scope: !1935)
!9491 = !DILocation(line: 5749, column: 22, scope: !1935)
!9492 = !DILocation(line: 5749, column: 11, scope: !1935)
!9493 = !DILocation(line: 5751, column: 9, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !1935, file: !4, line: 5751, column: 9)
!9495 = !DILocation(line: 5751, column: 14, scope: !9494)
!9496 = !DILocation(line: 5751, column: 18, scope: !9494)
!9497 = !DILocation(line: 5751, column: 9, scope: !1935)
!9498 = !DILocation(line: 5752, column: 24, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9494, file: !4, line: 5751, column: 24)
!9500 = !DILocation(line: 5752, column: 32, scope: !9499)
!9501 = !DILocation(line: 5752, column: 38, scope: !9499)
!9502 = !DILocation(line: 5752, column: 43, scope: !9499)
!9503 = !DILocation(line: 5752, column: 52, scope: !9499)
!9504 = !DILocation(line: 5752, column: 59, scope: !9499)
!9505 = !DILocation(line: 5752, column: 9, scope: !9499)
!9506 = !DILocation(line: 5753, column: 9, scope: !9499)
!9507 = !DILocation(line: 5755, column: 9, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !1935, file: !4, line: 5755, column: 9)
!9509 = !DILocation(line: 5755, column: 15, scope: !9508)
!9510 = !DILocation(line: 5755, column: 9, scope: !1935)
!9511 = !DILocation(line: 5756, column: 13, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9513, file: !4, line: 5756, column: 13)
!9513 = distinct !DILexicalBlock(scope: !9508, file: !4, line: 5755, column: 34)
!9514 = !DILocation(line: 5756, column: 18, scope: !9512)
!9515 = !DILocation(line: 5756, column: 22, scope: !9512)
!9516 = !DILocation(line: 5756, column: 13, scope: !9513)
!9517 = !DILocation(line: 5757, column: 28, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9512, file: !4, line: 5756, column: 28)
!9519 = !DILocation(line: 5757, column: 34, scope: !9518)
!9520 = !DILocation(line: 5757, column: 39, scope: !9518)
!9521 = !DILocation(line: 5757, column: 45, scope: !9518)
!9522 = !DILocation(line: 5757, column: 52, scope: !9518)
!9523 = !DILocation(line: 5757, column: 58, scope: !9518)
!9524 = !DILocation(line: 5757, column: 65, scope: !9518)
!9525 = !DILocation(line: 5757, column: 13, scope: !9518)
!9526 = !DILocation(line: 5758, column: 9, scope: !9518)
!9527 = !DILocation(line: 5760, column: 27, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9512, file: !4, line: 5759, column: 14)
!9529 = !DILocation(line: 5760, column: 33, scope: !9528)
!9530 = !DILocation(line: 5760, column: 13, scope: !9528)
!9531 = !DILocation(line: 5761, column: 17, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9528, file: !4, line: 5761, column: 17)
!9533 = !DILocation(line: 5761, column: 24, scope: !9532)
!9534 = !DILocation(line: 5761, column: 28, scope: !9532)
!9535 = !DILocation(line: 5761, column: 17, scope: !9528)
!9536 = !DILocation(line: 5762, column: 31, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9532, file: !4, line: 5761, column: 34)
!9538 = !DILocation(line: 5762, column: 37, scope: !9537)
!9539 = !DILocation(line: 5762, column: 42, scope: !9537)
!9540 = !DILocation(line: 5762, column: 48, scope: !9537)
!9541 = !DILocation(line: 5762, column: 53, scope: !9537)
!9542 = !DILocation(line: 5762, column: 58, scope: !9537)
!9543 = !DILocation(line: 5762, column: 65, scope: !9537)
!9544 = !DILocation(line: 5762, column: 17, scope: !9537)
!9545 = !DILocation(line: 5763, column: 13, scope: !9537)
!9546 = !DILocation(line: 5765, column: 30, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9532, file: !4, line: 5764, column: 18)
!9548 = !DILocation(line: 5765, column: 36, scope: !9547)
!9549 = !DILocation(line: 5765, column: 43, scope: !9547)
!9550 = !DILocation(line: 5765, column: 49, scope: !9547)
!9551 = !DILocation(line: 5765, column: 54, scope: !9547)
!9552 = !DILocation(line: 5765, column: 60, scope: !9547)
!9553 = !DILocation(line: 5765, column: 67, scope: !9547)
!9554 = !DILocation(line: 5765, column: 72, scope: !9547)
!9555 = !DILocation(line: 5765, column: 77, scope: !9547)
!9556 = !DILocation(line: 5765, column: 17, scope: !9547)
!9557 = !DILocation(line: 5768, column: 26, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9513, file: !4, line: 5768, column: 13)
!9559 = !DILocation(line: 5768, column: 34, scope: !9558)
!9560 = !DILocation(line: 5768, column: 41, scope: !9558)
!9561 = !DILocation(line: 5768, column: 14, scope: !9558)
!9562 = !DILocation(line: 5768, column: 13, scope: !9513)
!9563 = !DILocation(line: 5769, column: 13, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9558, file: !4, line: 5768, column: 50)
!9565 = !DILocation(line: 5771, column: 15, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9513, file: !4, line: 5771, column: 9)
!9567 = !DILocation(line: 5771, column: 13, scope: !9566)
!9568 = !DILocation(line: 5771, column: 20, scope: !9569)
!9569 = !DILexicalBlockFile(scope: !9570, file: !4, discriminator: 2)
!9570 = !DILexicalBlockFile(scope: !9571, file: !4, discriminator: 1)
!9571 = distinct !DILexicalBlock(scope: !9566, file: !4, line: 5771, column: 9)
!9572 = !DILocation(line: 5771, column: 24, scope: !9571)
!9573 = !DILocation(line: 5771, column: 22, scope: !9571)
!9574 = !DILocation(line: 5771, column: 9, scope: !9566)
!9575 = !DILocation(line: 5772, column: 36, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9571, file: !4, line: 5771, column: 36)
!9577 = !DILocation(line: 5772, column: 31, scope: !9576)
!9578 = !DILocation(line: 5772, column: 26, scope: !9576)
!9579 = !DILocation(line: 5772, column: 13, scope: !9576)
!9580 = !DILocation(line: 5772, column: 21, scope: !9576)
!9581 = !DILocation(line: 5772, column: 29, scope: !9576)
!9582 = !DILocation(line: 5773, column: 9, scope: !9576)
!9583 = !DILocation(line: 5771, column: 32, scope: !9571)
!9584 = !DILocation(line: 5771, column: 9, scope: !9571)
!9585 = !DILocation(line: 5774, column: 9, scope: !9513)
!9586 = !DILocation(line: 5778, column: 9, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !1935, file: !4, line: 5778, column: 9)
!9588 = !DILocation(line: 5778, column: 16, scope: !9587)
!9589 = !DILocation(line: 5778, column: 20, scope: !9587)
!9590 = !DILocation(line: 5778, column: 9, scope: !1935)
!9591 = !DILocation(line: 5779, column: 28, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9587, file: !4, line: 5778, column: 28)
!9593 = !DILocation(line: 5779, column: 17, scope: !9592)
!9594 = !DILocation(line: 5779, column: 15, scope: !9592)
!9595 = !DILocation(line: 5780, column: 13, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9592, file: !4, line: 5780, column: 13)
!9597 = !DILocation(line: 5780, column: 19, scope: !9596)
!9598 = !DILocation(line: 5780, column: 13, scope: !9592)
!9599 = !DILocation(line: 5781, column: 17, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9601, file: !4, line: 5781, column: 17)
!9601 = distinct !DILexicalBlock(scope: !9596, file: !4, line: 5780, column: 34)
!9602 = !DILocation(line: 5781, column: 24, scope: !9600)
!9603 = !DILocation(line: 5781, column: 28, scope: !9600)
!9604 = !DILocation(line: 5781, column: 17, scope: !9601)
!9605 = !DILocation(line: 5782, column: 31, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9600, file: !4, line: 5781, column: 34)
!9607 = !DILocation(line: 5782, column: 38, scope: !9606)
!9608 = !DILocation(line: 5782, column: 43, scope: !9606)
!9609 = !DILocation(line: 5782, column: 49, scope: !9606)
!9610 = !DILocation(line: 5782, column: 54, scope: !9606)
!9611 = !DILocation(line: 5782, column: 59, scope: !9606)
!9612 = !DILocation(line: 5782, column: 66, scope: !9606)
!9613 = !DILocation(line: 5782, column: 17, scope: !9606)
!9614 = !DILocation(line: 5783, column: 13, scope: !9606)
!9615 = !DILocation(line: 5785, column: 30, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9600, file: !4, line: 5784, column: 18)
!9617 = !DILocation(line: 5785, column: 37, scope: !9616)
!9618 = !DILocation(line: 5785, column: 44, scope: !9616)
!9619 = !DILocation(line: 5785, column: 50, scope: !9616)
!9620 = !DILocation(line: 5785, column: 55, scope: !9616)
!9621 = !DILocation(line: 5785, column: 61, scope: !9616)
!9622 = !DILocation(line: 5785, column: 68, scope: !9616)
!9623 = !DILocation(line: 5785, column: 73, scope: !9616)
!9624 = !DILocation(line: 5785, column: 78, scope: !9616)
!9625 = !DILocation(line: 5785, column: 17, scope: !9616)
!9626 = !DILocation(line: 5787, column: 9, scope: !9601)
!9627 = !DILocation(line: 5788, column: 5, scope: !9592)
!9628 = !DILocation(line: 5789, column: 14, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9587, file: !4, line: 5789, column: 14)
!9630 = !DILocation(line: 5789, column: 20, scope: !9629)
!9631 = !DILocation(line: 5789, column: 14, scope: !9587)
!9632 = !DILocation(line: 5790, column: 27, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9629, file: !4, line: 5789, column: 29)
!9634 = !DILocation(line: 5790, column: 32, scope: !9633)
!9635 = !DILocation(line: 5790, column: 38, scope: !9633)
!9636 = !DILocation(line: 5790, column: 45, scope: !9633)
!9637 = !DILocation(line: 5790, column: 51, scope: !9633)
!9638 = !DILocation(line: 5790, column: 56, scope: !9633)
!9639 = !DILocation(line: 5790, column: 61, scope: !9633)
!9640 = !DILocation(line: 5790, column: 68, scope: !9633)
!9641 = !DILocation(line: 5790, column: 17, scope: !9633)
!9642 = !DILocation(line: 5790, column: 15, scope: !9633)
!9643 = !DILocation(line: 5791, column: 5, scope: !9633)
!9644 = !DILocation(line: 5792, column: 14, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9629, file: !4, line: 5792, column: 14)
!9646 = !DILocation(line: 5792, column: 20, scope: !9645)
!9647 = !DILocation(line: 5792, column: 14, scope: !9629)
!9648 = !DILocation(line: 5793, column: 29, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9645, file: !4, line: 5792, column: 40)
!9650 = !DILocation(line: 5793, column: 34, scope: !9649)
!9651 = !DILocation(line: 5793, column: 40, scope: !9649)
!9652 = !DILocation(line: 5793, column: 47, scope: !9649)
!9653 = !DILocation(line: 5793, column: 53, scope: !9649)
!9654 = !DILocation(line: 5793, column: 58, scope: !9649)
!9655 = !DILocation(line: 5793, column: 63, scope: !9649)
!9656 = !DILocation(line: 5793, column: 70, scope: !9649)
!9657 = !DILocation(line: 5793, column: 17, scope: !9649)
!9658 = !DILocation(line: 5793, column: 15, scope: !9649)
!9659 = !DILocation(line: 5794, column: 5, scope: !9649)
!9660 = !DILocation(line: 5796, column: 31, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9645, file: !4, line: 5795, column: 10)
!9662 = !DILocation(line: 5796, column: 36, scope: !9661)
!9663 = !DILocation(line: 5796, column: 42, scope: !9661)
!9664 = !DILocation(line: 5796, column: 49, scope: !9661)
!9665 = !DILocation(line: 5796, column: 55, scope: !9661)
!9666 = !DILocation(line: 5796, column: 60, scope: !9661)
!9667 = !DILocation(line: 5796, column: 65, scope: !9661)
!9668 = !DILocation(line: 5796, column: 72, scope: !9661)
!9669 = !DILocation(line: 5796, column: 17, scope: !9661)
!9670 = !DILocation(line: 5796, column: 15, scope: !9661)
!9671 = !DILocation(line: 5799, column: 9, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !1935, file: !4, line: 5799, column: 9)
!9673 = !DILocation(line: 5799, column: 15, scope: !9672)
!9674 = !DILocation(line: 5799, column: 9, scope: !1935)
!9675 = !DILocation(line: 5800, column: 22, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9672, file: !4, line: 5799, column: 30)
!9677 = !DILocation(line: 5800, column: 43, scope: !9676)
!9678 = !DILocation(line: 5800, column: 9, scope: !9676)
!9679 = !DILocation(line: 5801, column: 9, scope: !9676)
!9680 = !DILocation(line: 5804, column: 28, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !1935, file: !4, line: 5804, column: 9)
!9682 = !DILocation(line: 5804, column: 9, scope: !9681)
!9683 = !DILocation(line: 5804, column: 9, scope: !1935)
!9684 = !DILocation(line: 5805, column: 9, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9681, file: !4, line: 5804, column: 37)
!9686 = !DILocation(line: 5805, column: 18, scope: !9685)
!9687 = !DILocation(line: 5805, column: 26, scope: !9685)
!9688 = !DILocation(line: 5806, column: 5, scope: !9685)
!9689 = !DILocation(line: 5807, column: 20, scope: !1935)
!9690 = !DILocation(line: 5807, column: 5, scope: !1935)
!9691 = !DILocation(line: 5807, column: 13, scope: !1935)
!9692 = !DILocation(line: 5807, column: 18, scope: !1935)
!9693 = !DILocation(line: 5808, column: 21, scope: !1935)
!9694 = !DILocation(line: 5808, column: 5, scope: !1935)
!9695 = !DILocation(line: 5808, column: 13, scope: !1935)
!9696 = !DILocation(line: 5808, column: 19, scope: !1935)
!9697 = !DILocation(line: 5809, column: 26, scope: !1935)
!9698 = !DILocation(line: 5809, column: 5, scope: !1935)
!9699 = !DILocation(line: 5813, column: 19, scope: !1935)
!9700 = !DILocation(line: 5813, column: 36, scope: !1935)
!9701 = !DILocation(line: 5813, column: 27, scope: !1935)
!9702 = !DILocation(line: 5813, column: 48, scope: !1935)
!9703 = !DILocation(line: 5813, column: 39, scope: !1935)
!9704 = !DILocation(line: 5813, column: 38, scope: !1935)
!9705 = !DILocation(line: 5813, column: 5, scope: !1935)
!9706 = !DILocation(line: 5814, column: 19, scope: !1935)
!9707 = !DILocation(line: 5814, column: 24, scope: !1935)
!9708 = !DILocation(line: 5814, column: 30, scope: !1935)
!9709 = !DILocation(line: 5814, column: 37, scope: !1935)
!9710 = !DILocation(line: 5814, column: 28, scope: !1935)
!9711 = !DILocation(line: 5814, column: 5, scope: !1935)
!9712 = !DILocation(line: 5814, column: 13, scope: !1935)
!9713 = !DILocation(line: 5814, column: 17, scope: !1935)
!9714 = !DILocation(line: 5815, column: 34, scope: !1935)
!9715 = !DILocation(line: 5815, column: 42, scope: !1935)
!9716 = !DILocation(line: 5815, column: 48, scope: !1935)
!9717 = !DILocation(line: 5815, column: 19, scope: !1935)
!9718 = !DILocation(line: 5815, column: 5, scope: !1935)
!9719 = !DILocation(line: 5815, column: 13, scope: !1935)
!9720 = !DILocation(line: 5815, column: 17, scope: !1935)
!9721 = !DILocation(line: 5817, column: 17, scope: !1935)
!9722 = !DILocation(line: 5817, column: 25, scope: !1935)
!9723 = !DILocation(line: 5817, column: 33, scope: !1935)
!9724 = !DILocation(line: 5817, column: 38, scope: !1935)
!9725 = !DILocation(line: 5817, column: 5, scope: !1935)
!9726 = !DILocation(line: 5818, column: 19, scope: !1935)
!9727 = !DILocation(line: 5818, column: 5, scope: !1935)
!9728 = !DILocation(line: 5819, column: 1, scope: !1935)
!9729 = !DILocation(line: 5819, column: 1, scope: !9730)
!9730 = !DILexicalBlockFile(scope: !1935, file: !4, discriminator: 1)
!9731 = !DILocation(line: 4538, column: 18, scope: !1005)
!9732 = !DILocation(line: 4538, column: 38, scope: !1005)
!9733 = !DILocation(line: 4538, column: 54, scope: !1005)
!9734 = !DILocation(line: 4540, column: 5, scope: !1005)
!9735 = !DILocation(line: 4540, column: 19, scope: !1005)
!9736 = !DILocation(line: 4540, column: 31, scope: !1005)
!9737 = !DILocation(line: 4541, column: 5, scope: !1005)
!9738 = !DILocation(line: 4541, column: 16, scope: !1005)
!9739 = !DILocation(line: 4541, column: 30, scope: !1005)
!9740 = !DILocation(line: 4541, column: 36, scope: !1005)
!9741 = !DILocation(line: 4541, column: 42, scope: !1005)
!9742 = !DILocation(line: 4541, column: 87, scope: !1005)
!9743 = !DILocation(line: 4542, column: 5, scope: !1005)
!9744 = !DILocation(line: 4542, column: 16, scope: !1005)
!9745 = !DILocation(line: 4542, column: 41, scope: !1005)
!9746 = !DILocation(line: 4542, column: 47, scope: !1005)
!9747 = !DILocation(line: 4542, column: 58, scope: !1005)
!9748 = !DILocation(line: 4542, column: 103, scope: !1005)
!9749 = !DILocation(line: 4543, column: 5, scope: !1005)
!9750 = !DILocation(line: 4543, column: 17, scope: !1005)
!9751 = !DILocation(line: 4544, column: 5, scope: !1005)
!9752 = !DILocation(line: 4544, column: 16, scope: !1005)
!9753 = !DILocation(line: 4545, column: 5, scope: !1005)
!9754 = !DILocation(line: 4545, column: 17, scope: !1005)
!9755 = !DILocation(line: 4546, column: 5, scope: !1005)
!9756 = !DILocation(line: 4546, column: 9, scope: !1005)
!9757 = !DILocation(line: 4550, column: 20, scope: !1005)
!9758 = !DILocation(line: 4550, column: 19, scope: !1005)
!9759 = !DILocation(line: 4550, column: 11, scope: !1005)
!9760 = !DILocation(line: 4551, column: 13, scope: !1005)
!9761 = !DILocation(line: 4551, column: 19, scope: !1005)
!9762 = !DILocation(line: 4551, column: 13, scope: !9763)
!9763 = !DILexicalBlockFile(scope: !1005, file: !4, discriminator: 1)
!9764 = !DILocation(line: 4551, column: 29, scope: !9765)
!9765 = !DILexicalBlockFile(scope: !1005, file: !4, discriminator: 2)
!9766 = !DILocation(line: 4551, column: 11, scope: !9767)
!9767 = !DILexicalBlockFile(scope: !9768, file: !4, discriminator: 4)
!9768 = !DILexicalBlockFile(scope: !1005, file: !4, discriminator: 3)
!9769 = !DILocation(line: 4553, column: 23, scope: !1005)
!9770 = !DILocation(line: 4553, column: 43, scope: !1005)
!9771 = !DILocation(line: 4553, column: 50, scope: !1005)
!9772 = !DILocation(line: 4553, column: 11, scope: !1005)
!9773 = !DILocation(line: 4553, column: 9, scope: !1005)
!9774 = !DILocation(line: 4554, column: 9, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !1005, file: !4, line: 4554, column: 9)
!9776 = !DILocation(line: 4554, column: 13, scope: !9775)
!9777 = !DILocation(line: 4554, column: 9, scope: !1005)
!9778 = !DILocation(line: 4555, column: 22, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9775, file: !4, line: 4554, column: 42)
!9780 = !DILocation(line: 4555, column: 43, scope: !9779)
!9781 = !DILocation(line: 4555, column: 9, scope: !9779)
!9782 = !DILocation(line: 4556, column: 9, scope: !9779)
!9783 = !DILocation(line: 4558, column: 21, scope: !1005)
!9784 = !DILocation(line: 4558, column: 29, scope: !1005)
!9785 = !DILocation(line: 4558, column: 35, scope: !1005)
!9786 = !DILocation(line: 4558, column: 19, scope: !1005)
!9787 = !DILocation(line: 4558, column: 5, scope: !1005)
!9788 = !DILocation(line: 4558, column: 13, scope: !1005)
!9789 = !DILocation(line: 4558, column: 17, scope: !1005)
!9790 = !DILocation(line: 4560, column: 5, scope: !1005)
!9791 = !DILocation(line: 4561, column: 9, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !1005, file: !4, line: 4561, column: 9)
!9793 = !DILocation(line: 4561, column: 14, scope: !9792)
!9794 = !DILocation(line: 4561, column: 9, scope: !1005)
!9795 = !DILocation(line: 4562, column: 27, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9792, file: !4, line: 4561, column: 23)
!9797 = !DILocation(line: 4562, column: 20, scope: !9796)
!9798 = !DILocation(line: 4562, column: 25, scope: !9796)
!9799 = !DILocation(line: 4563, column: 33, scope: !9796)
!9800 = !DILocation(line: 4563, column: 41, scope: !9796)
!9801 = !DILocation(line: 4563, column: 59, scope: !9796)
!9802 = !DILocation(line: 4563, column: 9, scope: !9796)
!9803 = !DILocation(line: 4564, column: 10, scope: !9796)
!9804 = !DILocation(line: 4564, column: 17, scope: !9796)
!9805 = !DILocation(line: 4565, column: 9, scope: !9796)
!9806 = !DILocation(line: 4568, column: 5, scope: !1005)
!9807 = !DILocation(line: 4569, column: 16, scope: !1005)
!9808 = !DILocation(line: 4569, column: 22, scope: !1005)
!9809 = !DILocation(line: 4571, column: 26, scope: !1005)
!9810 = !DILocation(line: 4571, column: 33, scope: !1005)
!9811 = !DILocation(line: 4571, column: 37, scope: !1005)
!9812 = !DILocation(line: 4571, column: 42, scope: !1005)
!9813 = !DILocation(line: 4571, column: 50, scope: !1005)
!9814 = !DILocation(line: 4571, column: 41, scope: !1005)
!9815 = !DILocation(line: 4571, column: 9, scope: !1005)
!9816 = !DILocation(line: 4571, column: 7, scope: !1005)
!9817 = !DILocation(line: 4572, column: 5, scope: !1005)
!9818 = !DILocation(line: 4572, column: 12, scope: !9819)
!9819 = !DILexicalBlockFile(scope: !9820, file: !4, discriminator: 2)
!9820 = !DILexicalBlockFile(scope: !9821, file: !4, discriminator: 1)
!9821 = distinct !DILexicalBlock(scope: !9822, file: !4, line: 4572, column: 5)
!9822 = distinct !DILexicalBlock(scope: !1005, file: !4, line: 4572, column: 5)
!9823 = !DILocation(line: 4572, column: 14, scope: !9821)
!9824 = !DILocation(line: 4572, column: 5, scope: !9822)
!9825 = !DILocation(line: 4573, column: 35, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9821, file: !4, line: 4572, column: 25)
!9827 = !DILocation(line: 4573, column: 29, scope: !9826)
!9828 = !DILocation(line: 4573, column: 28, scope: !9826)
!9829 = !DILocation(line: 4573, column: 37, scope: !9826)
!9830 = !DILocation(line: 4573, column: 20, scope: !9826)
!9831 = !DILocation(line: 4573, column: 25, scope: !9826)
!9832 = !DILocation(line: 4574, column: 9, scope: !9826)
!9833 = !DILocation(line: 4574, column: 17, scope: !9826)
!9834 = !DILocation(line: 4574, column: 23, scope: !9826)
!9835 = !DILocation(line: 4575, column: 25, scope: !9826)
!9836 = !DILocation(line: 4575, column: 46, scope: !9826)
!9837 = !DILocation(line: 4575, column: 9, scope: !9826)
!9838 = !DILocation(line: 4576, column: 9, scope: !9826)
!9839 = !DILocation(line: 4576, column: 17, scope: !9826)
!9840 = !DILocation(line: 4576, column: 23, scope: !9826)
!9841 = !DILocation(line: 4577, column: 54, scope: !9826)
!9842 = !DILocation(line: 4577, column: 9, scope: !9826)
!9843 = !DILocation(line: 4578, column: 49, scope: !9826)
!9844 = !DILocation(line: 4578, column: 9, scope: !9826)
!9845 = !DILocation(line: 4579, column: 18, scope: !9826)
!9846 = !DILocation(line: 4579, column: 26, scope: !9826)
!9847 = !DILocation(line: 4579, column: 53, scope: !9826)
!9848 = !DILocation(line: 4579, column: 9, scope: !9826)
!9849 = !DILocation(line: 4580, column: 27, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9826, file: !4, line: 4580, column: 13)
!9851 = !DILocation(line: 4580, column: 13, scope: !9850)
!9852 = !DILocation(line: 4580, column: 13, scope: !9826)
!9853 = !DILocation(line: 4581, column: 13, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9850, file: !4, line: 4580, column: 36)
!9855 = !DILocation(line: 4583, column: 5, scope: !9826)
!9856 = !DILocation(line: 4572, column: 21, scope: !9821)
!9857 = !DILocation(line: 4572, column: 5, scope: !9821)
!9858 = !DILocation(line: 4585, column: 5, scope: !1005)
!9859 = !DILocation(line: 4586, column: 23, scope: !1005)
!9860 = !DILocation(line: 4586, column: 16, scope: !1005)
!9861 = !DILocation(line: 4586, column: 21, scope: !1005)
!9862 = !DILocation(line: 4587, column: 19, scope: !1005)
!9863 = !DILocation(line: 4587, column: 40, scope: !1005)
!9864 = !DILocation(line: 4587, column: 5, scope: !1005)
!9865 = !DILocation(line: 4588, column: 1, scope: !1005)
!9866 = !DILocation(line: 4588, column: 1, scope: !9763)
!9867 = !DILocation(line: 1686, column: 32, scope: !1866)
!9868 = !DILocation(line: 1686, column: 48, scope: !1866)
!9869 = !DILocation(line: 1686, column: 74, scope: !1866)
!9870 = !DILocation(line: 1687, column: 35, scope: !1866)
!9871 = !DILocation(line: 1689, column: 23, scope: !1874)
!9872 = !DILocation(line: 1689, column: 28, scope: !1874)
!9873 = !DILocation(line: 1689, column: 33, scope: !1874)
!9874 = !DILocation(line: 1689, column: 9, scope: !1874)
!9875 = !DILocation(line: 1689, column: 9, scope: !1866)
!9876 = !DILocation(line: 1690, column: 9, scope: !1873)
!9877 = !DILocation(line: 1690, column: 20, scope: !1873)
!9878 = !DILocation(line: 1690, column: 42, scope: !1873)
!9879 = !DILocation(line: 1690, column: 47, scope: !1873)
!9880 = !DILocation(line: 1690, column: 53, scope: !1873)
!9881 = !DILocation(line: 1690, column: 58, scope: !1873)
!9882 = !DILocation(line: 1690, column: 28, scope: !1873)
!9883 = !DILocation(line: 1691, column: 13, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !1873, file: !4, line: 1691, column: 13)
!9885 = !DILocation(line: 1691, column: 13, scope: !1873)
!9886 = !DILocation(line: 1692, column: 30, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9888, file: !4, line: 1692, column: 17)
!9888 = distinct !DILexicalBlock(scope: !9884, file: !4, line: 1691, column: 20)
!9889 = !DILocation(line: 1692, column: 35, scope: !9887)
!9890 = !DILocation(line: 1692, column: 40, scope: !9887)
!9891 = !DILocation(line: 1692, column: 43, scope: !9887)
!9892 = !DILocation(line: 1692, column: 47, scope: !9887)
!9893 = !DILocation(line: 1692, column: 18, scope: !9887)
!9894 = !DILocation(line: 1692, column: 17, scope: !9888)
!9895 = !DILocation(line: 1693, column: 17, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9887, file: !4, line: 1692, column: 56)
!9897 = !DILocation(line: 1695, column: 23, scope: !9888)
!9898 = !DILocation(line: 1695, column: 28, scope: !9888)
!9899 = !DILocation(line: 1695, column: 13, scope: !9888)
!9900 = !DILocation(line: 1695, column: 18, scope: !9888)
!9901 = !DILocation(line: 1695, column: 33, scope: !9888)
!9902 = !DILocation(line: 1696, column: 13, scope: !9888)
!9903 = !DILocation(line: 1696, column: 18, scope: !9888)
!9904 = !DILocation(line: 1696, column: 22, scope: !9888)
!9905 = !DILocation(line: 1697, column: 9, scope: !9888)
!9906 = !DILocation(line: 1698, column: 23, scope: !1873)
!9907 = !DILocation(line: 1698, column: 9, scope: !1873)
!9908 = !DILocation(line: 1699, column: 5, scope: !1874)
!9909 = !DILocation(line: 1699, column: 5, scope: !9910)
!9910 = !DILexicalBlockFile(scope: !1874, file: !4, discriminator: 1)
!9911 = !DILocation(line: 1699, column: 5, scope: !1873)
!9912 = !DILocation(line: 1700, column: 1, scope: !1866)
!9913 = !DILocation(line: 4456, column: 30, scope: !1875)
!9914 = !DILocation(line: 4456, column: 53, scope: !1875)
!9915 = !DILocation(line: 4457, column: 30, scope: !1875)
!9916 = !DILocation(line: 4459, column: 5, scope: !1875)
!9917 = !DILocation(line: 4459, column: 17, scope: !1875)
!9918 = !DILocation(line: 4460, column: 5, scope: !1875)
!9919 = !DILocation(line: 4460, column: 9, scope: !1875)
!9920 = !DILocation(line: 4463, column: 9, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !1875, file: !4, line: 4463, column: 9)
!9922 = !DILocation(line: 4463, column: 20, scope: !9921)
!9923 = !DILocation(line: 4463, column: 17, scope: !9921)
!9924 = !DILocation(line: 4463, column: 9, scope: !1875)
!9925 = !DILocation(line: 4463, column: 30, scope: !9926)
!9926 = !DILexicalBlockFile(scope: !9921, file: !4, discriminator: 1)
!9927 = !DILocation(line: 4463, column: 30, scope: !9921)
!9928 = !DILocation(line: 4465, column: 7, scope: !1875)
!9929 = !DILocation(line: 4465, column: 16, scope: !1875)
!9930 = !DILocation(line: 4465, column: 14, scope: !1875)
!9931 = !DILocation(line: 4466, column: 5, scope: !1875)
!9932 = !DILocation(line: 4467, column: 14, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !1875, file: !4, line: 4466, column: 8)
!9934 = !DILocation(line: 4467, column: 15, scope: !9933)
!9935 = !DILocation(line: 4467, column: 19, scope: !9933)
!9936 = !DILocation(line: 4467, column: 11, scope: !9933)
!9937 = !DILocation(line: 4468, column: 22, scope: !9933)
!9938 = !DILocation(line: 4468, column: 16, scope: !9933)
!9939 = !DILocation(line: 4468, column: 9, scope: !9933)
!9940 = !DILocation(line: 4468, column: 20, scope: !9933)
!9941 = !DILocation(line: 4469, column: 5, scope: !9933)
!9942 = !DILocation(line: 4469, column: 14, scope: !9943)
!9943 = !DILexicalBlockFile(scope: !1875, file: !4, discriminator: 1)
!9944 = !DILocation(line: 4469, column: 18, scope: !1875)
!9945 = !DILocation(line: 4469, column: 16, scope: !1875)
!9946 = !DILocation(line: 4471, column: 12, scope: !1875)
!9947 = !DILocation(line: 4471, column: 13, scope: !1875)
!9948 = !DILocation(line: 4471, column: 5, scope: !1875)
!9949 = !DILocation(line: 4472, column: 1, scope: !1875)
!9950 = !DILocation(line: 5823, column: 17, scope: !1101)
!9951 = !DILocation(line: 5823, column: 38, scope: !1101)
!9952 = !DILocation(line: 5823, column: 54, scope: !1101)
!9953 = !DILocation(line: 5824, column: 31, scope: !1101)
!9954 = !DILocation(line: 5824, column: 46, scope: !1101)
!9955 = !DILocation(line: 5826, column: 15, scope: !1101)
!9956 = !DILocation(line: 5826, column: 23, scope: !1101)
!9957 = !DILocation(line: 5826, column: 26, scope: !1101)
!9958 = !DILocation(line: 5826, column: 29, scope: !1101)
!9959 = !DILocation(line: 5826, column: 34, scope: !1101)
!9960 = !DILocation(line: 5826, column: 5, scope: !1101)
!9961 = !DILocation(line: 5827, column: 19, scope: !1101)
!9962 = !DILocation(line: 5827, column: 27, scope: !1101)
!9963 = !DILocation(line: 5827, column: 32, scope: !1101)
!9964 = !DILocation(line: 5827, column: 5, scope: !1101)
!9965 = !DILocation(line: 5828, column: 1, scope: !1101)
!9966 = !DILocation(line: 4841, column: 16, scope: !1026)
!9967 = !DILocation(line: 4841, column: 37, scope: !1026)
!9968 = !DILocation(line: 4841, column: 61, scope: !1026)
!9969 = !DILocation(line: 4842, column: 19, scope: !1026)
!9970 = !DILocation(line: 4844, column: 5, scope: !1026)
!9971 = !DILocation(line: 4844, column: 19, scope: !1026)
!9972 = !DILocation(line: 4845, column: 5, scope: !1026)
!9973 = !DILocation(line: 4845, column: 17, scope: !1026)
!9974 = !DILocation(line: 4845, column: 25, scope: !1026)
!9975 = !DILocation(line: 4847, column: 23, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !1026, file: !4, line: 4847, column: 9)
!9977 = !DILocation(line: 4847, column: 9, scope: !9976)
!9978 = !DILocation(line: 4847, column: 9, scope: !1026)
!9979 = !DILocation(line: 4848, column: 28, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9981, file: !4, line: 4848, column: 13)
!9981 = distinct !DILexicalBlock(scope: !9976, file: !4, line: 4847, column: 27)
!9982 = !DILocation(line: 4848, column: 36, scope: !9980)
!9983 = !DILocation(line: 4848, column: 39, scope: !9980)
!9984 = !DILocation(line: 4848, column: 44, scope: !9980)
!9985 = !DILocation(line: 4848, column: 13, scope: !9980)
!9986 = !DILocation(line: 4848, column: 13, scope: !9981)
!9987 = !DILocation(line: 4849, column: 13, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9980, file: !4, line: 4848, column: 53)
!9989 = !DILocation(line: 4851, column: 28, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9981, file: !4, line: 4851, column: 13)
!9991 = !DILocation(line: 4851, column: 13, scope: !9990)
!9992 = !DILocation(line: 4851, column: 13, scope: !9981)
!9993 = !DILocation(line: 4852, column: 26, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9990, file: !4, line: 4851, column: 32)
!9995 = !DILocation(line: 4852, column: 47, scope: !9994)
!9996 = !DILocation(line: 4852, column: 13, scope: !9994)
!9997 = !DILocation(line: 4853, column: 13, scope: !9994)
!9998 = !DILocation(line: 4855, column: 24, scope: !9981)
!9999 = !DILocation(line: 4855, column: 9, scope: !9981)
!10000 = !DILocation(line: 4856, column: 9, scope: !9981)
!10001 = !DILocation(line: 4858, column: 25, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !1026, file: !4, line: 4858, column: 9)
!10003 = !DILocation(line: 4858, column: 9, scope: !10002)
!10004 = !DILocation(line: 4858, column: 9, scope: !1026)
!10005 = !DILocation(line: 4859, column: 24, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10002, file: !4, line: 4858, column: 29)
!10007 = !DILocation(line: 4859, column: 9, scope: !10006)
!10008 = !DILocation(line: 4860, column: 9, scope: !10006)
!10009 = !DILocation(line: 4862, column: 24, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !1026, file: !4, line: 4862, column: 9)
!10011 = !DILocation(line: 4862, column: 9, scope: !10010)
!10012 = !DILocation(line: 4862, column: 9, scope: !1026)
!10013 = !DILocation(line: 4863, column: 22, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10010, file: !4, line: 4862, column: 28)
!10015 = !DILocation(line: 4863, column: 43, scope: !10014)
!10016 = !DILocation(line: 4863, column: 9, scope: !10014)
!10017 = !DILocation(line: 4864, column: 9, scope: !10014)
!10018 = !DILocation(line: 4866, column: 18, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !1026, file: !4, line: 4866, column: 9)
!10020 = !DILocation(line: 4866, column: 9, scope: !10019)
!10021 = !DILocation(line: 4866, column: 27, scope: !10019)
!10022 = !DILocation(line: 4866, column: 9, scope: !1026)
!10023 = !DILocation(line: 4867, column: 20, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !10019, file: !4, line: 4866, column: 33)
!10025 = !DILocation(line: 4867, column: 9, scope: !10024)
!10026 = !DILocation(line: 4868, column: 9, scope: !10024)
!10027 = !DILocation(line: 4891, column: 25, scope: !1026)
!10028 = !DILocation(line: 4891, column: 14, scope: !1026)
!10029 = !DILocation(line: 4891, column: 12, scope: !1026)
!10030 = !DILocation(line: 4892, column: 10, scope: !1026)
!10031 = !DILocation(line: 4892, column: 17, scope: !1026)
!10032 = !DILocation(line: 4892, column: 9, scope: !1026)
!10033 = !DILocation(line: 4892, column: 25, scope: !10034)
!10034 = !DILexicalBlockFile(scope: !1026, file: !4, discriminator: 1)
!10035 = !DILocation(line: 4892, column: 24, scope: !1026)
!10036 = !DILocation(line: 4892, column: 31, scope: !1026)
!10037 = !DILocation(line: 4892, column: 36, scope: !10038)
!10038 = !DILexicalBlockFile(scope: !1026, file: !4, discriminator: 2)
!10039 = !DILocation(line: 4892, column: 7, scope: !10040)
!10040 = !DILexicalBlockFile(scope: !10041, file: !4, discriminator: 4)
!10041 = !DILexicalBlockFile(scope: !1026, file: !4, discriminator: 3)
!10042 = !DILocation(line: 4893, column: 7, scope: !1026)
!10043 = !DILocation(line: 4894, column: 24, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !1026, file: !4, line: 4894, column: 9)
!10045 = !DILocation(line: 4894, column: 9, scope: !10044)
!10046 = !DILocation(line: 4894, column: 26, scope: !10044)
!10047 = !DILocation(line: 4894, column: 31, scope: !10044)
!10048 = !DILocation(line: 4894, column: 36, scope: !10044)
!10049 = !DILocation(line: 4894, column: 29, scope: !10044)
!10050 = !DILocation(line: 4894, column: 9, scope: !1026)
!10051 = !DILocation(line: 4895, column: 10, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10044, file: !4, line: 4894, column: 42)
!10053 = !DILocation(line: 4895, column: 17, scope: !10052)
!10054 = !DILocation(line: 4896, column: 24, scope: !10052)
!10055 = !DILocation(line: 4896, column: 33, scope: !10052)
!10056 = !DILocation(line: 4896, column: 39, scope: !10052)
!10057 = !DILocation(line: 4896, column: 32, scope: !10052)
!10058 = !DILocation(line: 4896, column: 9, scope: !10052)
!10059 = !DILocation(line: 4897, column: 9, scope: !10052)
!10060 = !DILocation(line: 4900, column: 16, scope: !1026)
!10061 = !DILocation(line: 4900, column: 15, scope: !1026)
!10062 = !DILocation(line: 4901, column: 13, scope: !1026)
!10063 = !DILocation(line: 4901, column: 19, scope: !1026)
!10064 = !DILocation(line: 4903, column: 9, scope: !1037)
!10065 = !DILocation(line: 4903, column: 14, scope: !1037)
!10066 = !DILocation(line: 4903, column: 9, scope: !1026)
!10067 = !DILocation(line: 4904, column: 9, scope: !1036)
!10068 = !DILocation(line: 4904, column: 20, scope: !1036)
!10069 = !DILocation(line: 4904, column: 33, scope: !1036)
!10070 = !DILocation(line: 4904, column: 39, scope: !1036)
!10071 = !DILocation(line: 4904, column: 44, scope: !1036)
!10072 = !DILocation(line: 4904, column: 89, scope: !1036)
!10073 = !DILocation(line: 4905, column: 9, scope: !1036)
!10074 = !DILocation(line: 4905, column: 20, scope: !1036)
!10075 = !DILocation(line: 4905, column: 33, scope: !1036)
!10076 = !DILocation(line: 4905, column: 39, scope: !1036)
!10077 = !DILocation(line: 4905, column: 44, scope: !1036)
!10078 = !DILocation(line: 4905, column: 89, scope: !1036)
!10079 = !DILocation(line: 4906, column: 9, scope: !1036)
!10080 = !DILocation(line: 4906, column: 20, scope: !1036)
!10081 = !DILocation(line: 4906, column: 34, scope: !1036)
!10082 = !DILocation(line: 4906, column: 40, scope: !1036)
!10083 = !DILocation(line: 4906, column: 46, scope: !1036)
!10084 = !DILocation(line: 4906, column: 91, scope: !1036)
!10085 = !DILocation(line: 4907, column: 9, scope: !1036)
!10086 = !DILocation(line: 4907, column: 20, scope: !1036)
!10087 = !DILocation(line: 4907, column: 33, scope: !1036)
!10088 = !DILocation(line: 4907, column: 39, scope: !1036)
!10089 = !DILocation(line: 4907, column: 44, scope: !1036)
!10090 = !DILocation(line: 4907, column: 89, scope: !1036)
!10091 = !DILocation(line: 4908, column: 9, scope: !1036)
!10092 = !DILocation(line: 4908, column: 21, scope: !1036)
!10093 = !DILocation(line: 4910, column: 13, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !1036, file: !4, line: 4910, column: 13)
!10095 = !DILocation(line: 4910, column: 23, scope: !10094)
!10096 = !DILocation(line: 4910, column: 20, scope: !10094)
!10097 = !DILocation(line: 4910, column: 13, scope: !1036)
!10098 = !DILocation(line: 4911, column: 33, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10100, file: !4, line: 4911, column: 17)
!10100 = distinct !DILexicalBlock(scope: !10094, file: !4, line: 4910, column: 26)
!10101 = !DILocation(line: 4911, column: 36, scope: !10099)
!10102 = !DILocation(line: 4911, column: 18, scope: !10099)
!10103 = !DILocation(line: 4911, column: 17, scope: !10100)
!10104 = !DILocation(line: 4912, column: 30, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !10099, file: !4, line: 4911, column: 45)
!10106 = !DILocation(line: 4912, column: 51, scope: !10105)
!10107 = !DILocation(line: 4912, column: 17, scope: !10105)
!10108 = !DILocation(line: 4913, column: 17, scope: !10105)
!10109 = !DILocation(line: 4915, column: 15, scope: !10100)
!10110 = !DILocation(line: 4916, column: 9, scope: !10100)
!10111 = !DILocation(line: 4918, column: 17, scope: !1036)
!10112 = !DILocation(line: 4918, column: 23, scope: !1036)
!10113 = !DILocation(line: 4919, column: 16, scope: !1036)
!10114 = !DILocation(line: 4919, column: 21, scope: !1036)
!10115 = !DILocation(line: 4919, column: 26, scope: !1036)
!10116 = !DILocation(line: 4919, column: 14, scope: !1036)
!10117 = !DILocation(line: 4920, column: 9, scope: !1036)
!10118 = !DILocation(line: 4920, column: 9, scope: !10119)
!10119 = !DILexicalBlockFile(scope: !10120, file: !4, discriminator: 2)
!10120 = !DILexicalBlockFile(scope: !1036, file: !4, discriminator: 1)
!10121 = !DILocation(line: 4921, column: 28, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !1036, file: !4, line: 4920, column: 19)
!10123 = !DILocation(line: 4921, column: 21, scope: !10122)
!10124 = !DILocation(line: 4921, column: 26, scope: !10122)
!10125 = !DILocation(line: 4922, column: 22, scope: !10122)
!10126 = !DILocation(line: 4922, column: 30, scope: !10122)
!10127 = !DILocation(line: 4922, column: 43, scope: !10122)
!10128 = !DILocation(line: 4922, column: 13, scope: !10122)
!10129 = !DILocation(line: 4924, column: 25, scope: !10122)
!10130 = !DILocation(line: 4924, column: 33, scope: !10122)
!10131 = !DILocation(line: 4924, column: 39, scope: !10122)
!10132 = !DILocation(line: 4924, column: 47, scope: !10122)
!10133 = !DILocation(line: 4924, column: 37, scope: !10122)
!10134 = !DILocation(line: 4924, column: 62, scope: !10122)
!10135 = !DILocation(line: 4924, column: 53, scope: !10122)
!10136 = !DILocation(line: 4923, column: 13, scope: !10122)
!10137 = !DILocation(line: 4926, column: 28, scope: !10122)
!10138 = !DILocation(line: 4926, column: 33, scope: !10122)
!10139 = !DILocation(line: 4926, column: 21, scope: !10122)
!10140 = !DILocation(line: 4926, column: 26, scope: !10122)
!10141 = !DILocation(line: 4927, column: 27, scope: !10122)
!10142 = !DILocation(line: 4927, column: 60, scope: !10122)
!10143 = !DILocation(line: 4927, column: 13, scope: !10122)
!10144 = !DILocation(line: 4928, column: 27, scope: !10122)
!10145 = !DILocation(line: 4928, column: 60, scope: !10122)
!10146 = !DILocation(line: 4928, column: 13, scope: !10122)
!10147 = !DILocation(line: 4929, column: 31, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10122, file: !4, line: 4929, column: 17)
!10149 = !DILocation(line: 4929, column: 17, scope: !10148)
!10150 = !DILocation(line: 4929, column: 39, scope: !10148)
!10151 = !DILocation(line: 4929, column: 58, scope: !10152)
!10152 = !DILexicalBlockFile(scope: !10148, file: !4, discriminator: 1)
!10153 = !DILocation(line: 4929, column: 42, scope: !10148)
!10154 = !DILocation(line: 4929, column: 66, scope: !10148)
!10155 = !DILocation(line: 4930, column: 36, scope: !10148)
!10156 = !DILocation(line: 4930, column: 17, scope: !10148)
!10157 = !DILocation(line: 4930, column: 44, scope: !10148)
!10158 = !DILocation(line: 4929, column: 17, scope: !10122)
!10159 = !DILocation(line: 4931, column: 33, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10148, file: !4, line: 4930, column: 50)
!10161 = !DILocation(line: 4931, column: 38, scope: !10160)
!10162 = !DILocation(line: 4931, column: 25, scope: !10160)
!10163 = !DILocation(line: 4931, column: 31, scope: !10160)
!10164 = !DILocation(line: 4932, column: 37, scope: !10160)
!10165 = !DILocation(line: 4932, column: 55, scope: !10160)
!10166 = !DILocation(line: 4932, column: 17, scope: !10160)
!10167 = !DILocation(line: 4933, column: 31, scope: !10160)
!10168 = !DILocation(line: 4933, column: 49, scope: !10160)
!10169 = !DILocation(line: 4933, column: 17, scope: !10160)
!10170 = !DILocation(line: 4934, column: 17, scope: !10160)
!10171 = !DILocation(line: 4936, column: 18, scope: !10122)
!10172 = !DILocation(line: 4938, column: 9, scope: !1036)
!10173 = !DILocation(line: 4939, column: 9, scope: !1036)
!10174 = !DILocation(line: 4940, column: 9, scope: !1036)
!10175 = !DILocation(line: 4941, column: 9, scope: !1036)
!10176 = !DILocation(line: 4942, column: 5, scope: !1037)
!10177 = !DILocation(line: 4942, column: 5, scope: !10178)
!10178 = !DILexicalBlockFile(scope: !1037, file: !4, discriminator: 1)
!10179 = !DILocation(line: 4942, column: 5, scope: !1036)
!10180 = !DILocation(line: 4944, column: 18, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !1037, file: !4, line: 4943, column: 10)
!10182 = !DILocation(line: 4944, column: 26, scope: !10181)
!10183 = !DILocation(line: 4944, column: 39, scope: !10181)
!10184 = !DILocation(line: 4944, column: 9, scope: !10181)
!10185 = !DILocation(line: 4945, column: 29, scope: !10181)
!10186 = !DILocation(line: 4945, column: 47, scope: !10181)
!10187 = !DILocation(line: 4945, column: 9, scope: !10181)
!10188 = !DILocation(line: 4946, column: 23, scope: !10181)
!10189 = !DILocation(line: 4946, column: 41, scope: !10181)
!10190 = !DILocation(line: 4946, column: 9, scope: !10181)
!10191 = !DILocation(line: 4948, column: 1, scope: !1026)
!10192 = !DILocation(line: 4948, column: 1, scope: !10034)
!10193 = !DILocation(line: 4673, column: 17, scope: !1882)
!10194 = !DILocation(line: 4673, column: 38, scope: !1882)
!10195 = !DILocation(line: 4673, column: 62, scope: !1882)
!10196 = !DILocation(line: 4674, column: 20, scope: !1882)
!10197 = !DILocation(line: 4676, column: 5, scope: !1882)
!10198 = !DILocation(line: 4676, column: 19, scope: !1882)
!10199 = !DILocation(line: 4676, column: 31, scope: !1882)
!10200 = !DILocation(line: 4677, column: 5, scope: !1882)
!10201 = !DILocation(line: 4677, column: 12, scope: !1882)
!10202 = !DILocation(line: 4677, column: 26, scope: !1882)
!10203 = !DILocation(line: 4678, column: 5, scope: !1882)
!10204 = !DILocation(line: 4678, column: 16, scope: !1882)
!10205 = !DILocation(line: 4678, column: 28, scope: !1882)
!10206 = !DILocation(line: 4678, column: 34, scope: !1882)
!10207 = !DILocation(line: 4678, column: 38, scope: !1882)
!10208 = !DILocation(line: 4678, column: 83, scope: !1882)
!10209 = !DILocation(line: 4679, column: 5, scope: !1882)
!10210 = !DILocation(line: 4679, column: 16, scope: !1882)
!10211 = !DILocation(line: 4679, column: 31, scope: !1882)
!10212 = !DILocation(line: 4679, column: 37, scope: !1882)
!10213 = !DILocation(line: 4679, column: 44, scope: !1882)
!10214 = !DILocation(line: 4679, column: 89, scope: !1882)
!10215 = !DILocation(line: 4680, column: 5, scope: !1882)
!10216 = !DILocation(line: 4680, column: 16, scope: !1882)
!10217 = !DILocation(line: 4680, column: 30, scope: !1882)
!10218 = !DILocation(line: 4680, column: 36, scope: !1882)
!10219 = !DILocation(line: 4680, column: 42, scope: !1882)
!10220 = !DILocation(line: 4680, column: 87, scope: !1882)
!10221 = !DILocation(line: 4681, column: 5, scope: !1882)
!10222 = !DILocation(line: 4681, column: 17, scope: !1882)
!10223 = !DILocation(line: 4682, column: 5, scope: !1882)
!10224 = !DILocation(line: 4682, column: 17, scope: !1882)
!10225 = !DILocation(line: 4682, column: 26, scope: !1882)
!10226 = !DILocation(line: 4682, column: 33, scope: !1882)
!10227 = !DILocation(line: 4683, column: 5, scope: !1882)
!10228 = !DILocation(line: 4683, column: 17, scope: !1882)
!10229 = !DILocation(line: 4683, column: 27, scope: !1882)
!10230 = !DILocation(line: 4684, column: 5, scope: !1882)
!10231 = !DILocation(line: 4684, column: 16, scope: !1882)
!10232 = !DILocation(line: 4684, column: 23, scope: !1882)
!10233 = !DILocation(line: 4685, column: 5, scope: !1882)
!10234 = !DILocation(line: 4685, column: 9, scope: !1882)
!10235 = !DILocation(line: 4693, column: 24, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !1882, file: !4, line: 4693, column: 9)
!10237 = !DILocation(line: 4693, column: 27, scope: !10236)
!10238 = !DILocation(line: 4693, column: 10, scope: !10236)
!10239 = !DILocation(line: 4693, column: 9, scope: !1882)
!10240 = !DILocation(line: 4694, column: 22, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10236, file: !4, line: 4693, column: 36)
!10242 = !DILocation(line: 4694, column: 43, scope: !10241)
!10243 = !DILocation(line: 4694, column: 9, scope: !10241)
!10244 = !DILocation(line: 4695, column: 9, scope: !10241)
!10245 = !DILocation(line: 4699, column: 5, scope: !1882)
!10246 = !DILocation(line: 4700, column: 9, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !1882, file: !4, line: 4700, column: 9)
!10248 = !DILocation(line: 4700, column: 11, scope: !10247)
!10249 = !DILocation(line: 4700, column: 9, scope: !1882)
!10250 = !DILocation(line: 4700, column: 19, scope: !10251)
!10251 = !DILexicalBlockFile(scope: !10247, file: !4, discriminator: 1)
!10252 = !DILocation(line: 4700, column: 17, scope: !10247)
!10253 = !DILocation(line: 4701, column: 9, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !1882, file: !4, line: 4701, column: 9)
!10255 = !DILocation(line: 4701, column: 11, scope: !10254)
!10256 = !DILocation(line: 4701, column: 9, scope: !1882)
!10257 = !DILocation(line: 4701, column: 20, scope: !10258)
!10258 = !DILexicalBlockFile(scope: !10254, file: !4, discriminator: 1)
!10259 = !DILocation(line: 4701, column: 18, scope: !10254)
!10260 = !DILocation(line: 4702, column: 7, scope: !1882)
!10261 = !DILocation(line: 4705, column: 16, scope: !1882)
!10262 = !DILocation(line: 4705, column: 19, scope: !1882)
!10263 = !DILocation(line: 4705, column: 14, scope: !1882)
!10264 = !DILocation(line: 4706, column: 13, scope: !1882)
!10265 = !DILocation(line: 4706, column: 16, scope: !1882)
!10266 = !DILocation(line: 4706, column: 11, scope: !1882)
!10267 = !DILocation(line: 4708, column: 18, scope: !1882)
!10268 = !DILocation(line: 4708, column: 5, scope: !1882)
!10269 = !DILocation(line: 4709, column: 21, scope: !1882)
!10270 = !DILocation(line: 4709, column: 5, scope: !1882)
!10271 = !DILocation(line: 4710, column: 27, scope: !1882)
!10272 = !DILocation(line: 4710, column: 18, scope: !1882)
!10273 = !{!10274, !10274, i64 0}
!10274 = !{!"short", !2393, i64 0}
!10275 = !DILocation(line: 4710, column: 5, scope: !1882)
!10276 = !DILocation(line: 4710, column: 8, scope: !1882)
!10277 = !DILocation(line: 4710, column: 16, scope: !1882)
!10278 = !DILocation(line: 4711, column: 5, scope: !1882)
!10279 = !DILocation(line: 4711, column: 8, scope: !1882)
!10280 = !DILocation(line: 4711, column: 12, scope: !1882)
!10281 = !DILocation(line: 4712, column: 5, scope: !1882)
!10282 = !DILocation(line: 4712, column: 8, scope: !1882)
!10283 = !DILocation(line: 4712, column: 12, scope: !1882)
!10284 = !DILocation(line: 4713, column: 19, scope: !1882)
!10285 = !DILocation(line: 4713, column: 5, scope: !1882)
!10286 = !DILocation(line: 4715, column: 9, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !1882, file: !4, line: 4715, column: 9)
!10288 = !DILocation(line: 4715, column: 11, scope: !10287)
!10289 = !DILocation(line: 4715, column: 9, scope: !1882)
!10290 = !DILocation(line: 4719, column: 19, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10287, file: !4, line: 4715, column: 19)
!10292 = !DILocation(line: 4719, column: 28, scope: !10291)
!10293 = !DILocation(line: 4719, column: 17, scope: !10291)
!10294 = !DILocation(line: 4719, column: 11, scope: !10291)
!10295 = !DILocation(line: 4719, column: 15, scope: !10291)
!10296 = !DILocation(line: 4720, column: 13, scope: !10291)
!10297 = !DILocation(line: 4720, column: 21, scope: !10291)
!10298 = !DILocation(line: 4720, column: 19, scope: !10291)
!10299 = !DILocation(line: 4720, column: 30, scope: !10291)
!10300 = !DILocation(line: 4720, column: 11, scope: !10291)
!10301 = !DILocation(line: 4721, column: 5, scope: !10291)
!10302 = !DILocation(line: 4726, column: 18, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10287, file: !4, line: 4722, column: 10)
!10304 = !DILocation(line: 4726, column: 17, scope: !10303)
!10305 = !DILocation(line: 4726, column: 11, scope: !10303)
!10306 = !DILocation(line: 4726, column: 15, scope: !10303)
!10307 = !DILocation(line: 4727, column: 13, scope: !10303)
!10308 = !DILocation(line: 4727, column: 21, scope: !10303)
!10309 = !DILocation(line: 4727, column: 19, scope: !10303)
!10310 = !DILocation(line: 4727, column: 11, scope: !10303)
!10311 = !DILocation(line: 4728, column: 26, scope: !10303)
!10312 = !DILocation(line: 4728, column: 9, scope: !10303)
!10313 = !DILocation(line: 4731, column: 5, scope: !1882)
!10314 = !DILocation(line: 4732, column: 5, scope: !1882)
!10315 = !DILocation(line: 4733, column: 16, scope: !1882)
!10316 = !DILocation(line: 4733, column: 22, scope: !1882)
!10317 = !DILocation(line: 4735, column: 15, scope: !1882)
!10318 = !DILocation(line: 4735, column: 20, scope: !1882)
!10319 = !DILocation(line: 4735, column: 25, scope: !1882)
!10320 = !DILocation(line: 4735, column: 13, scope: !1882)
!10321 = !DILocation(line: 4736, column: 9, scope: !1908)
!10322 = !DILocation(line: 4736, column: 11, scope: !1908)
!10323 = !DILocation(line: 4736, column: 16, scope: !1908)
!10324 = !DILocation(line: 4736, column: 20, scope: !10325)
!10325 = !DILexicalBlockFile(scope: !1908, file: !4, discriminator: 1)
!10326 = !DILocation(line: 4736, column: 22, scope: !1908)
!10327 = !DILocation(line: 4736, column: 28, scope: !1908)
!10328 = !DILocation(line: 4736, column: 31, scope: !10329)
!10329 = !DILexicalBlockFile(scope: !1908, file: !4, discriminator: 2)
!10330 = !DILocation(line: 4736, column: 33, scope: !1908)
!10331 = !DILocation(line: 4736, column: 9, scope: !1882)
!10332 = !DILocation(line: 4747, column: 9, scope: !1907)
!10333 = !DILocation(line: 4747, column: 13, scope: !1907)
!10334 = !DILocation(line: 4747, column: 19, scope: !1907)
!10335 = !DILocation(line: 4750, column: 60, scope: !1907)
!10336 = !DILocation(line: 4750, column: 9, scope: !1907)
!10337 = !DILocation(line: 4751, column: 24, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !1907, file: !4, line: 4751, column: 13)
!10339 = !DILocation(line: 4751, column: 31, scope: !10338)
!10340 = !DILocation(line: 4751, column: 13, scope: !1907)
!10341 = !DILocation(line: 4752, column: 26, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10338, file: !4, line: 4751, column: 148)
!10343 = !DILocation(line: 4752, column: 47, scope: !10342)
!10344 = !DILocation(line: 4752, column: 13, scope: !10342)
!10345 = !DILocation(line: 4753, column: 13, scope: !10342)
!10346 = !DILocation(line: 4756, column: 13, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !1907, file: !4, line: 4756, column: 13)
!10348 = !DILocation(line: 4756, column: 17, scope: !10347)
!10349 = !DILocation(line: 4756, column: 13, scope: !1907)
!10350 = !DILocation(line: 4758, column: 17, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10347, file: !4, line: 4756, column: 22)
!10352 = !DILocation(line: 4758, column: 21, scope: !10351)
!10353 = !DILocation(line: 4759, column: 9, scope: !10351)
!10354 = !DILocation(line: 4760, column: 13, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !1907, file: !4, line: 4760, column: 13)
!10356 = !DILocation(line: 4760, column: 42, scope: !10355)
!10357 = !DILocation(line: 4760, column: 32, scope: !10355)
!10358 = !DILocation(line: 4760, column: 30, scope: !10355)
!10359 = !DILocation(line: 4760, column: 13, scope: !1907)
!10360 = !DILocation(line: 4762, column: 24, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10355, file: !4, line: 4760, column: 48)
!10362 = !DILocation(line: 4762, column: 33, scope: !10361)
!10363 = !DILocation(line: 4762, column: 36, scope: !10361)
!10364 = !DILocation(line: 4762, column: 32, scope: !10361)
!10365 = !DILocation(line: 4762, column: 54, scope: !10361)
!10366 = !DILocation(line: 4762, column: 44, scope: !10361)
!10367 = !DILocation(line: 4762, column: 58, scope: !10361)
!10368 = !DILocation(line: 4762, column: 13, scope: !10361)
!10369 = !DILocation(line: 4763, column: 13, scope: !10361)
!10370 = !DILocation(line: 4766, column: 13, scope: !1907)
!10371 = !DILocation(line: 4766, column: 17, scope: !1907)
!10372 = !DILocation(line: 4767, column: 13, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !1907, file: !4, line: 4767, column: 13)
!10374 = !DILocation(line: 4767, column: 30, scope: !10373)
!10375 = !DILocation(line: 4767, column: 13, scope: !1907)
!10376 = !DILocation(line: 4775, column: 23, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10373, file: !4, line: 4767, column: 35)
!10378 = !DILocation(line: 4775, column: 33, scope: !10377)
!10379 = !DILocation(line: 4775, column: 31, scope: !10377)
!10380 = !DILocation(line: 4775, column: 21, scope: !10377)
!10381 = !DILocation(line: 4776, column: 9, scope: !10377)
!10382 = !DILocation(line: 4777, column: 5, scope: !1908)
!10383 = !DILocation(line: 4777, column: 5, scope: !10325)
!10384 = !DILocation(line: 4777, column: 5, scope: !1907)
!10385 = !DILocation(line: 4779, column: 26, scope: !1882)
!10386 = !DILocation(line: 4779, column: 33, scope: !1882)
!10387 = !DILocation(line: 4779, column: 9, scope: !1882)
!10388 = !DILocation(line: 4779, column: 7, scope: !1882)
!10389 = !DILocation(line: 4780, column: 5, scope: !1882)
!10390 = !DILocation(line: 4780, column: 12, scope: !10391)
!10391 = !DILexicalBlockFile(scope: !10392, file: !4, discriminator: 2)
!10392 = !DILexicalBlockFile(scope: !10393, file: !4, discriminator: 1)
!10393 = distinct !DILexicalBlock(scope: !10394, file: !4, line: 4780, column: 5)
!10394 = distinct !DILexicalBlock(scope: !1882, file: !4, line: 4780, column: 5)
!10395 = !DILocation(line: 4780, column: 14, scope: !10393)
!10396 = !DILocation(line: 4780, column: 5, scope: !10394)
!10397 = !DILocation(line: 4781, column: 35, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10393, file: !4, line: 4780, column: 25)
!10399 = !DILocation(line: 4781, column: 29, scope: !10398)
!10400 = !DILocation(line: 4781, column: 28, scope: !10398)
!10401 = !DILocation(line: 4781, column: 37, scope: !10398)
!10402 = !DILocation(line: 4781, column: 20, scope: !10398)
!10403 = !DILocation(line: 4781, column: 25, scope: !10398)
!10404 = !DILocation(line: 4782, column: 9, scope: !10398)
!10405 = !DILocation(line: 4782, column: 12, scope: !10398)
!10406 = !DILocation(line: 4782, column: 18, scope: !10398)
!10407 = !DILocation(line: 4783, column: 25, scope: !10398)
!10408 = !DILocation(line: 4783, column: 41, scope: !10398)
!10409 = !DILocation(line: 4783, column: 9, scope: !10398)
!10410 = !DILocation(line: 4784, column: 9, scope: !10398)
!10411 = !DILocation(line: 4784, column: 12, scope: !10398)
!10412 = !DILocation(line: 4784, column: 18, scope: !10398)
!10413 = !DILocation(line: 4786, column: 15, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10398, file: !4, line: 4786, column: 13)
!10415 = !DILocation(line: 4786, column: 35, scope: !10414)
!10416 = !DILocation(line: 4786, column: 22, scope: !10414)
!10417 = !DILocation(line: 4786, column: 13, scope: !10398)
!10418 = !DILocation(line: 4787, column: 23, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10414, file: !4, line: 4786, column: 41)
!10420 = !DILocation(line: 4787, column: 43, scope: !10419)
!10421 = !DILocation(line: 4787, column: 30, scope: !10419)
!10422 = !DILocation(line: 4787, column: 19, scope: !10419)
!10423 = !DILocation(line: 4788, column: 36, scope: !10419)
!10424 = !DILocation(line: 4788, column: 43, scope: !10419)
!10425 = !DILocation(line: 4788, column: 13, scope: !10419)
!10426 = !DILocation(line: 4789, column: 25, scope: !10419)
!10427 = !DILocation(line: 4789, column: 18, scope: !10419)
!10428 = !DILocation(line: 4789, column: 22, scope: !10419)
!10429 = !DILocation(line: 4790, column: 54, scope: !10419)
!10430 = !DILocation(line: 4790, column: 13, scope: !10419)
!10431 = !DILocation(line: 4791, column: 9, scope: !10419)
!10432 = !DILocation(line: 4793, column: 51, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10414, file: !4, line: 4792, column: 14)
!10434 = !DILocation(line: 4793, column: 13, scope: !10433)
!10435 = !DILocation(line: 4796, column: 49, scope: !10398)
!10436 = !DILocation(line: 4796, column: 9, scope: !10398)
!10437 = !DILocation(line: 4797, column: 18, scope: !10398)
!10438 = !DILocation(line: 4797, column: 21, scope: !10398)
!10439 = !DILocation(line: 4797, column: 43, scope: !10398)
!10440 = !DILocation(line: 4797, column: 9, scope: !10398)
!10441 = !DILocation(line: 4798, column: 27, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10398, file: !4, line: 4798, column: 13)
!10443 = !DILocation(line: 4798, column: 13, scope: !10442)
!10444 = !DILocation(line: 4798, column: 13, scope: !10398)
!10445 = !DILocation(line: 4799, column: 13, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10442, file: !4, line: 4798, column: 31)
!10447 = !DILocation(line: 4801, column: 5, scope: !10398)
!10448 = !DILocation(line: 4780, column: 21, scope: !10393)
!10449 = !DILocation(line: 4780, column: 5, scope: !10393)
!10450 = !DILocation(line: 4827, column: 19, scope: !1882)
!10451 = !DILocation(line: 4827, column: 26, scope: !1882)
!10452 = !DILocation(line: 4827, column: 30, scope: !1882)
!10453 = !DILocation(line: 4827, column: 5, scope: !1882)
!10454 = !DILocation(line: 4828, column: 30, scope: !1882)
!10455 = !DILocation(line: 4828, column: 46, scope: !1882)
!10456 = !DILocation(line: 4828, column: 5, scope: !1882)
!10457 = !DILocation(line: 4829, column: 14, scope: !1882)
!10458 = !DILocation(line: 4829, column: 28, scope: !1882)
!10459 = !DILocation(line: 4829, column: 44, scope: !1882)
!10460 = !DILocation(line: 4829, column: 5, scope: !1882)
!10461 = !DILocation(line: 4833, column: 6, scope: !1882)
!10462 = !DILocation(line: 4833, column: 13, scope: !1882)
!10463 = !DILocation(line: 4834, column: 5, scope: !1882)
!10464 = !DILocation(line: 4835, column: 5, scope: !1882)
!10465 = !DILocation(line: 4836, column: 5, scope: !1882)
!10466 = !DILocation(line: 4837, column: 1, scope: !1882)
!10467 = !DILocation(line: 4985, column: 19, scope: !1046)
!10468 = !DILocation(line: 4985, column: 40, scope: !1046)
!10469 = !DILocation(line: 4985, column: 64, scope: !1046)
!10470 = !DILocation(line: 4986, column: 22, scope: !1046)
!10471 = !DILocation(line: 4988, column: 5, scope: !1046)
!10472 = !DILocation(line: 4988, column: 19, scope: !1046)
!10473 = !DILocation(line: 4989, column: 5, scope: !1046)
!10474 = !DILocation(line: 4989, column: 17, scope: !1046)
!10475 = !DILocation(line: 4989, column: 25, scope: !1046)
!10476 = !DILocation(line: 4991, column: 16, scope: !1046)
!10477 = !DILocation(line: 4991, column: 15, scope: !1046)
!10478 = !DILocation(line: 4992, column: 13, scope: !1046)
!10479 = !DILocation(line: 4992, column: 19, scope: !1046)
!10480 = !DILocation(line: 4994, column: 23, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !1046, file: !4, line: 4994, column: 9)
!10482 = !DILocation(line: 4994, column: 9, scope: !10481)
!10483 = !DILocation(line: 4994, column: 9, scope: !1046)
!10484 = !DILocation(line: 4995, column: 28, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10486, file: !4, line: 4995, column: 13)
!10486 = distinct !DILexicalBlock(scope: !10481, file: !4, line: 4994, column: 27)
!10487 = !DILocation(line: 4995, column: 36, scope: !10485)
!10488 = !DILocation(line: 4995, column: 39, scope: !10485)
!10489 = !DILocation(line: 4995, column: 44, scope: !10485)
!10490 = !DILocation(line: 4995, column: 13, scope: !10485)
!10491 = !DILocation(line: 4995, column: 13, scope: !10486)
!10492 = !DILocation(line: 4996, column: 13, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10485, file: !4, line: 4995, column: 53)
!10494 = !DILocation(line: 4998, column: 28, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10486, file: !4, line: 4998, column: 13)
!10496 = !DILocation(line: 4998, column: 13, scope: !10495)
!10497 = !DILocation(line: 4998, column: 13, scope: !10486)
!10498 = !DILocation(line: 4999, column: 26, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10495, file: !4, line: 4998, column: 32)
!10500 = !DILocation(line: 4999, column: 47, scope: !10499)
!10501 = !DILocation(line: 4999, column: 13, scope: !10499)
!10502 = !DILocation(line: 5000, column: 13, scope: !10499)
!10503 = !DILocation(line: 5002, column: 24, scope: !10486)
!10504 = !DILocation(line: 5002, column: 9, scope: !10486)
!10505 = !DILocation(line: 5003, column: 9, scope: !10486)
!10506 = !DILocation(line: 5005, column: 25, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !1046, file: !4, line: 5005, column: 9)
!10508 = !DILocation(line: 5005, column: 9, scope: !10507)
!10509 = !DILocation(line: 5005, column: 9, scope: !1046)
!10510 = !DILocation(line: 5006, column: 24, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10507, file: !4, line: 5005, column: 29)
!10512 = !DILocation(line: 5006, column: 9, scope: !10511)
!10513 = !DILocation(line: 5007, column: 9, scope: !10511)
!10514 = !DILocation(line: 5009, column: 24, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !1046, file: !4, line: 5009, column: 9)
!10516 = !DILocation(line: 5009, column: 9, scope: !10515)
!10517 = !DILocation(line: 5009, column: 9, scope: !1046)
!10518 = !DILocation(line: 5010, column: 22, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10515, file: !4, line: 5009, column: 28)
!10520 = !DILocation(line: 5010, column: 43, scope: !10519)
!10521 = !DILocation(line: 5010, column: 9, scope: !10519)
!10522 = !DILocation(line: 5011, column: 9, scope: !10519)
!10523 = !DILocation(line: 5013, column: 27, scope: !1057)
!10524 = !DILocation(line: 5013, column: 9, scope: !1057)
!10525 = !DILocation(line: 5013, column: 9, scope: !1046)
!10526 = !DILocation(line: 5014, column: 9, scope: !1056)
!10527 = !DILocation(line: 5014, column: 17, scope: !1056)
!10528 = !DILocation(line: 5015, column: 29, scope: !1056)
!10529 = !DILocation(line: 5015, column: 18, scope: !1056)
!10530 = !DILocation(line: 5015, column: 16, scope: !1056)
!10531 = !DILocation(line: 5016, column: 13, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !1056, file: !4, line: 5016, column: 13)
!10533 = !DILocation(line: 5016, column: 20, scope: !10532)
!10534 = !DILocation(line: 5016, column: 13, scope: !1056)
!10535 = !DILocation(line: 5017, column: 18, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10532, file: !4, line: 5016, column: 25)
!10537 = !DILocation(line: 5018, column: 23, scope: !10536)
!10538 = !DILocation(line: 5018, column: 22, scope: !10536)
!10539 = !DILocation(line: 5018, column: 20, scope: !10536)
!10540 = !DILocation(line: 5019, column: 9, scope: !10536)
!10541 = !DILocation(line: 5020, column: 20, scope: !1056)
!10542 = !DILocation(line: 5020, column: 28, scope: !1056)
!10543 = !DILocation(line: 5020, column: 34, scope: !1056)
!10544 = !DILocation(line: 5020, column: 9, scope: !1056)
!10545 = !DILocation(line: 5021, column: 23, scope: !1056)
!10546 = !DILocation(line: 5021, column: 41, scope: !1056)
!10547 = !DILocation(line: 5021, column: 9, scope: !1056)
!10548 = !DILocation(line: 5023, column: 5, scope: !1057)
!10549 = !DILocation(line: 5044, column: 25, scope: !1046)
!10550 = !DILocation(line: 5044, column: 14, scope: !1046)
!10551 = !DILocation(line: 5044, column: 12, scope: !1046)
!10552 = !DILocation(line: 5045, column: 10, scope: !1046)
!10553 = !DILocation(line: 5045, column: 17, scope: !1046)
!10554 = !DILocation(line: 5045, column: 9, scope: !1046)
!10555 = !DILocation(line: 5045, column: 25, scope: !10556)
!10556 = !DILexicalBlockFile(scope: !1046, file: !4, discriminator: 1)
!10557 = !DILocation(line: 5045, column: 24, scope: !1046)
!10558 = !DILocation(line: 5045, column: 31, scope: !1046)
!10559 = !DILocation(line: 5045, column: 36, scope: !10560)
!10560 = !DILexicalBlockFile(scope: !1046, file: !4, discriminator: 2)
!10561 = !DILocation(line: 5045, column: 7, scope: !10562)
!10562 = !DILexicalBlockFile(scope: !10563, file: !4, discriminator: 4)
!10563 = !DILexicalBlockFile(scope: !1046, file: !4, discriminator: 3)
!10564 = !DILocation(line: 5046, column: 24, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !1046, file: !4, line: 5046, column: 9)
!10566 = !DILocation(line: 5046, column: 9, scope: !10565)
!10567 = !DILocation(line: 5046, column: 26, scope: !10565)
!10568 = !DILocation(line: 5046, column: 31, scope: !10565)
!10569 = !DILocation(line: 5046, column: 36, scope: !10565)
!10570 = !DILocation(line: 5046, column: 29, scope: !10565)
!10571 = !DILocation(line: 5046, column: 9, scope: !1046)
!10572 = !DILocation(line: 5047, column: 10, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10565, file: !4, line: 5046, column: 42)
!10574 = !DILocation(line: 5047, column: 17, scope: !10573)
!10575 = !DILocation(line: 5048, column: 24, scope: !10573)
!10576 = !DILocation(line: 5048, column: 33, scope: !10573)
!10577 = !DILocation(line: 5048, column: 39, scope: !10573)
!10578 = !DILocation(line: 5048, column: 32, scope: !10573)
!10579 = !DILocation(line: 5048, column: 9, scope: !10573)
!10580 = !DILocation(line: 5049, column: 9, scope: !10573)
!10581 = !DILocation(line: 5052, column: 9, scope: !1060)
!10582 = !DILocation(line: 5052, column: 14, scope: !1060)
!10583 = !DILocation(line: 5052, column: 9, scope: !1046)
!10584 = !DILocation(line: 5053, column: 9, scope: !1059)
!10585 = !DILocation(line: 5053, column: 20, scope: !1059)
!10586 = !DILocation(line: 5053, column: 33, scope: !1059)
!10587 = !DILocation(line: 5053, column: 39, scope: !1059)
!10588 = !DILocation(line: 5053, column: 44, scope: !1059)
!10589 = !DILocation(line: 5053, column: 89, scope: !1059)
!10590 = !DILocation(line: 5054, column: 9, scope: !1059)
!10591 = !DILocation(line: 5054, column: 20, scope: !1059)
!10592 = !DILocation(line: 5054, column: 33, scope: !1059)
!10593 = !DILocation(line: 5054, column: 39, scope: !1059)
!10594 = !DILocation(line: 5054, column: 44, scope: !1059)
!10595 = !DILocation(line: 5054, column: 89, scope: !1059)
!10596 = !DILocation(line: 5055, column: 9, scope: !1059)
!10597 = !DILocation(line: 5055, column: 20, scope: !1059)
!10598 = !DILocation(line: 5055, column: 34, scope: !1059)
!10599 = !DILocation(line: 5055, column: 40, scope: !1059)
!10600 = !DILocation(line: 5055, column: 46, scope: !1059)
!10601 = !DILocation(line: 5055, column: 91, scope: !1059)
!10602 = !DILocation(line: 5056, column: 9, scope: !1059)
!10603 = !DILocation(line: 5056, column: 20, scope: !1059)
!10604 = !DILocation(line: 5056, column: 33, scope: !1059)
!10605 = !DILocation(line: 5056, column: 39, scope: !1059)
!10606 = !DILocation(line: 5056, column: 44, scope: !1059)
!10607 = !DILocation(line: 5056, column: 89, scope: !1059)
!10608 = !DILocation(line: 5057, column: 9, scope: !1059)
!10609 = !DILocation(line: 5057, column: 21, scope: !1059)
!10610 = !DILocation(line: 5059, column: 13, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !1059, file: !4, line: 5059, column: 13)
!10612 = !DILocation(line: 5059, column: 23, scope: !10611)
!10613 = !DILocation(line: 5059, column: 20, scope: !10611)
!10614 = !DILocation(line: 5059, column: 13, scope: !1059)
!10615 = !DILocation(line: 5060, column: 33, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10617, file: !4, line: 5060, column: 17)
!10617 = distinct !DILexicalBlock(scope: !10611, file: !4, line: 5059, column: 26)
!10618 = !DILocation(line: 5060, column: 36, scope: !10616)
!10619 = !DILocation(line: 5060, column: 18, scope: !10616)
!10620 = !DILocation(line: 5060, column: 17, scope: !10617)
!10621 = !DILocation(line: 5061, column: 30, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10616, file: !4, line: 5060, column: 45)
!10623 = !DILocation(line: 5061, column: 51, scope: !10622)
!10624 = !DILocation(line: 5061, column: 17, scope: !10622)
!10625 = !DILocation(line: 5062, column: 17, scope: !10622)
!10626 = !DILocation(line: 5064, column: 15, scope: !10617)
!10627 = !DILocation(line: 5065, column: 9, scope: !10617)
!10628 = !DILocation(line: 5067, column: 17, scope: !1059)
!10629 = !DILocation(line: 5067, column: 23, scope: !1059)
!10630 = !DILocation(line: 5068, column: 16, scope: !1059)
!10631 = !DILocation(line: 5068, column: 21, scope: !1059)
!10632 = !DILocation(line: 5068, column: 26, scope: !1059)
!10633 = !DILocation(line: 5068, column: 14, scope: !1059)
!10634 = !DILocation(line: 5069, column: 9, scope: !1059)
!10635 = !DILocation(line: 5069, column: 9, scope: !10636)
!10636 = !DILexicalBlockFile(scope: !10637, file: !4, discriminator: 2)
!10637 = !DILexicalBlockFile(scope: !1059, file: !4, discriminator: 1)
!10638 = !DILocation(line: 5070, column: 28, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !1059, file: !4, line: 5069, column: 19)
!10640 = !DILocation(line: 5070, column: 21, scope: !10639)
!10641 = !DILocation(line: 5070, column: 26, scope: !10639)
!10642 = !DILocation(line: 5071, column: 40, scope: !10639)
!10643 = !DILocation(line: 5071, column: 48, scope: !10639)
!10644 = !DILocation(line: 5071, column: 61, scope: !10639)
!10645 = !DILocation(line: 5071, column: 13, scope: !10639)
!10646 = !DILocation(line: 5073, column: 25, scope: !10639)
!10647 = !DILocation(line: 5073, column: 33, scope: !10639)
!10648 = !DILocation(line: 5073, column: 39, scope: !10639)
!10649 = !DILocation(line: 5073, column: 47, scope: !10639)
!10650 = !DILocation(line: 5073, column: 37, scope: !10639)
!10651 = !DILocation(line: 5073, column: 62, scope: !10639)
!10652 = !DILocation(line: 5073, column: 53, scope: !10639)
!10653 = !DILocation(line: 5072, column: 13, scope: !10639)
!10654 = !DILocation(line: 5075, column: 28, scope: !10639)
!10655 = !DILocation(line: 5075, column: 33, scope: !10639)
!10656 = !DILocation(line: 5075, column: 21, scope: !10639)
!10657 = !DILocation(line: 5075, column: 26, scope: !10639)
!10658 = !DILocation(line: 5076, column: 27, scope: !10639)
!10659 = !DILocation(line: 5076, column: 60, scope: !10639)
!10660 = !DILocation(line: 5076, column: 13, scope: !10639)
!10661 = !DILocation(line: 5077, column: 27, scope: !10639)
!10662 = !DILocation(line: 5077, column: 60, scope: !10639)
!10663 = !DILocation(line: 5077, column: 13, scope: !10639)
!10664 = !DILocation(line: 5078, column: 31, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10639, file: !4, line: 5078, column: 17)
!10666 = !DILocation(line: 5078, column: 17, scope: !10665)
!10667 = !DILocation(line: 5078, column: 39, scope: !10665)
!10668 = !DILocation(line: 5078, column: 58, scope: !10669)
!10669 = !DILexicalBlockFile(scope: !10665, file: !4, discriminator: 1)
!10670 = !DILocation(line: 5078, column: 42, scope: !10665)
!10671 = !DILocation(line: 5078, column: 66, scope: !10665)
!10672 = !DILocation(line: 5079, column: 36, scope: !10665)
!10673 = !DILocation(line: 5079, column: 17, scope: !10665)
!10674 = !DILocation(line: 5079, column: 44, scope: !10665)
!10675 = !DILocation(line: 5078, column: 17, scope: !10639)
!10676 = !DILocation(line: 5080, column: 33, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10665, file: !4, line: 5079, column: 50)
!10678 = !DILocation(line: 5080, column: 38, scope: !10677)
!10679 = !DILocation(line: 5080, column: 25, scope: !10677)
!10680 = !DILocation(line: 5080, column: 31, scope: !10677)
!10681 = !DILocation(line: 5081, column: 37, scope: !10677)
!10682 = !DILocation(line: 5081, column: 55, scope: !10677)
!10683 = !DILocation(line: 5081, column: 17, scope: !10677)
!10684 = !DILocation(line: 5082, column: 31, scope: !10677)
!10685 = !DILocation(line: 5082, column: 49, scope: !10677)
!10686 = !DILocation(line: 5082, column: 17, scope: !10677)
!10687 = !DILocation(line: 5083, column: 17, scope: !10677)
!10688 = !DILocation(line: 5085, column: 18, scope: !10639)
!10689 = !DILocation(line: 5087, column: 9, scope: !1059)
!10690 = !DILocation(line: 5088, column: 9, scope: !1059)
!10691 = !DILocation(line: 5089, column: 9, scope: !1059)
!10692 = !DILocation(line: 5090, column: 9, scope: !1059)
!10693 = !DILocation(line: 5091, column: 5, scope: !1060)
!10694 = !DILocation(line: 5091, column: 5, scope: !10695)
!10695 = !DILexicalBlockFile(scope: !1060, file: !4, discriminator: 1)
!10696 = !DILocation(line: 5091, column: 5, scope: !1059)
!10697 = !DILocation(line: 5093, column: 34, scope: !10698)
!10698 = distinct !DILexicalBlock(scope: !1060, file: !4, line: 5092, column: 10)
!10699 = !DILocation(line: 5093, column: 42, scope: !10698)
!10700 = !DILocation(line: 5093, column: 55, scope: !10698)
!10701 = !DILocation(line: 5093, column: 9, scope: !10698)
!10702 = !DILocation(line: 5094, column: 29, scope: !10698)
!10703 = !DILocation(line: 5094, column: 47, scope: !10698)
!10704 = !DILocation(line: 5094, column: 9, scope: !10698)
!10705 = !DILocation(line: 5096, column: 1, scope: !1046)
!10706 = !DILocation(line: 5096, column: 1, scope: !10556)
!10707 = !DILocation(line: 955, column: 32, scope: !1909)
!10708 = !DILocation(line: 957, column: 37, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !1909, file: !4, line: 957, column: 9)
!10710 = !DILocation(line: 957, column: 26, scope: !10709)
!10711 = !DILocation(line: 957, column: 9, scope: !10709)
!10712 = !DILocation(line: 957, column: 9, scope: !1909)
!10713 = !DILocation(line: 958, column: 28, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10715, file: !4, line: 958, column: 13)
!10715 = distinct !DILexicalBlock(scope: !10709, file: !4, line: 957, column: 44)
!10716 = !DILocation(line: 958, column: 33, scope: !10714)
!10717 = !DILocation(line: 958, column: 39, scope: !10714)
!10718 = !DILocation(line: 958, column: 44, scope: !10714)
!10719 = !DILocation(line: 958, column: 47, scope: !10714)
!10720 = !DILocation(line: 958, column: 13, scope: !10714)
!10721 = !DILocation(line: 958, column: 13, scope: !10715)
!10722 = !DILocation(line: 959, column: 13, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10714, file: !4, line: 958, column: 52)
!10724 = !DILocation(line: 961, column: 5, scope: !10715)
!10725 = !DILocation(line: 963, column: 5, scope: !1909)
!10726 = !DILocation(line: 964, column: 1, scope: !1909)
!10727 = !DILocation(line: 4959, column: 17, scope: !1916)
!10728 = !DILocation(line: 4959, column: 32, scope: !1916)
!10729 = !DILocation(line: 4959, column: 53, scope: !1916)
!10730 = !DILocation(line: 4960, column: 34, scope: !1916)
!10731 = !DILocation(line: 4960, column: 49, scope: !1916)
!10732 = !DILocation(line: 4962, column: 5, scope: !1916)
!10733 = !DILocation(line: 4962, column: 19, scope: !1916)
!10734 = !DILocation(line: 4963, column: 5, scope: !1916)
!10735 = !DILocation(line: 4963, column: 16, scope: !1916)
!10736 = !DILocation(line: 4963, column: 31, scope: !1916)
!10737 = !DILocation(line: 4963, column: 37, scope: !1916)
!10738 = !DILocation(line: 4963, column: 44, scope: !1916)
!10739 = !DILocation(line: 4963, column: 89, scope: !1916)
!10740 = !DILocation(line: 4965, column: 5, scope: !1916)
!10741 = !DILocation(line: 4966, column: 20, scope: !1916)
!10742 = !DILocation(line: 4966, column: 25, scope: !1916)
!10743 = !DILocation(line: 4966, column: 30, scope: !1916)
!10744 = !DILocation(line: 4966, column: 13, scope: !1916)
!10745 = !DILocation(line: 4966, column: 18, scope: !1916)
!10746 = !DILocation(line: 4969, column: 14, scope: !1916)
!10747 = !DILocation(line: 4969, column: 22, scope: !1916)
!10748 = !DILocation(line: 4969, column: 35, scope: !1916)
!10749 = !DILocation(line: 4969, column: 5, scope: !1916)
!10750 = !DILocation(line: 4971, column: 30, scope: !1916)
!10751 = !DILocation(line: 4971, column: 36, scope: !1916)
!10752 = !DILocation(line: 4971, column: 5, scope: !1916)
!10753 = !DILocation(line: 4973, column: 9, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !1916, file: !4, line: 4973, column: 9)
!10755 = !DILocation(line: 4973, column: 16, scope: !10754)
!10756 = !DILocation(line: 4973, column: 9, scope: !1916)
!10757 = !DILocation(line: 4974, column: 20, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10754, file: !4, line: 4973, column: 32)
!10759 = !DILocation(line: 4974, column: 19, scope: !10758)
!10760 = !DILocation(line: 4975, column: 17, scope: !10758)
!10761 = !DILocation(line: 4975, column: 23, scope: !10758)
!10762 = !DILocation(line: 4976, column: 5, scope: !10758)
!10763 = !DILocation(line: 4978, column: 29, scope: !1916)
!10764 = !DILocation(line: 4978, column: 37, scope: !1916)
!10765 = !DILocation(line: 4978, column: 62, scope: !1916)
!10766 = !DILocation(line: 4978, column: 5, scope: !1916)
!10767 = !DILocation(line: 4980, column: 5, scope: !1916)
!10768 = !DILocation(line: 4981, column: 1, scope: !1916)
!10769 = !DILocation(line: 5104, column: 17, scope: !1069)
!10770 = !DILocation(line: 5104, column: 38, scope: !1069)
!10771 = !DILocation(line: 5104, column: 54, scope: !1069)
!10772 = !DILocation(line: 5105, column: 31, scope: !1069)
!10773 = !DILocation(line: 5105, column: 46, scope: !1069)
!10774 = !DILocation(line: 5107, column: 5, scope: !1069)
!10775 = !DILocation(line: 5107, column: 9, scope: !1069)
!10776 = !DILocation(line: 5109, column: 20, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !1069, file: !4, line: 5109, column: 9)
!10778 = !DILocation(line: 5109, column: 9, scope: !10777)
!10779 = !DILocation(line: 5109, column: 23, scope: !10777)
!10780 = !DILocation(line: 5109, column: 37, scope: !10781)
!10781 = !DILexicalBlockFile(scope: !10777, file: !4, discriminator: 1)
!10782 = !DILocation(line: 5109, column: 27, scope: !10777)
!10783 = !DILocation(line: 5109, column: 9, scope: !1069)
!10784 = !DILocation(line: 5110, column: 19, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10777, file: !4, line: 5109, column: 41)
!10786 = !DILocation(line: 5110, column: 27, scope: !10785)
!10787 = !DILocation(line: 5110, column: 30, scope: !10785)
!10788 = !DILocation(line: 5110, column: 9, scope: !10785)
!10789 = !DILocation(line: 5111, column: 5, scope: !10785)
!10790 = !DILocation(line: 5112, column: 25, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10777, file: !4, line: 5112, column: 14)
!10792 = !DILocation(line: 5112, column: 14, scope: !10791)
!10793 = !DILocation(line: 5112, column: 28, scope: !10791)
!10794 = !DILocation(line: 5112, column: 42, scope: !10795)
!10795 = !DILexicalBlockFile(scope: !10791, file: !4, discriminator: 1)
!10796 = !DILocation(line: 5112, column: 32, scope: !10791)
!10797 = !DILocation(line: 5112, column: 14, scope: !10777)
!10798 = !DILocation(line: 5113, column: 19, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10791, file: !4, line: 5112, column: 46)
!10800 = !DILocation(line: 5113, column: 27, scope: !10799)
!10801 = !DILocation(line: 5113, column: 30, scope: !10799)
!10802 = !DILocation(line: 5113, column: 9, scope: !10799)
!10803 = !DILocation(line: 5114, column: 5, scope: !10799)
!10804 = !DILocation(line: 5115, column: 30, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10791, file: !4, line: 5115, column: 14)
!10806 = !DILocation(line: 5115, column: 38, scope: !10805)
!10807 = !DILocation(line: 5115, column: 41, scope: !10805)
!10808 = !DILocation(line: 5115, column: 44, scope: !10805)
!10809 = !DILocation(line: 5115, column: 49, scope: !10805)
!10810 = !DILocation(line: 5115, column: 14, scope: !10805)
!10811 = !DILocation(line: 5115, column: 14, scope: !10791)
!10812 = !DILocation(line: 5116, column: 9, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10805, file: !4, line: 5115, column: 58)
!10814 = !DILocation(line: 5119, column: 22, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10805, file: !4, line: 5118, column: 10)
!10816 = !DILocation(line: 5119, column: 25, scope: !10815)
!10817 = !DILocation(line: 5119, column: 13, scope: !10815)
!10818 = !DILocation(line: 5119, column: 11, scope: !10815)
!10819 = !DILocation(line: 5120, column: 13, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10815, file: !4, line: 5120, column: 13)
!10821 = !DILocation(line: 5120, column: 15, scope: !10820)
!10822 = !DILocation(line: 5120, column: 13, scope: !10815)
!10823 = !DILocation(line: 5121, column: 35, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10820, file: !4, line: 5120, column: 21)
!10825 = !DILocation(line: 5121, column: 38, scope: !10824)
!10826 = !DILocation(line: 5121, column: 17, scope: !10824)
!10827 = !DILocation(line: 5121, column: 15, scope: !10824)
!10828 = !DILocation(line: 5122, column: 9, scope: !10824)
!10829 = !DILocation(line: 5124, column: 13, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10815, file: !4, line: 5124, column: 13)
!10831 = !DILocation(line: 5124, column: 15, scope: !10830)
!10832 = !DILocation(line: 5124, column: 13, scope: !10815)
!10833 = !DILocation(line: 5125, column: 23, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10830, file: !4, line: 5124, column: 20)
!10835 = !DILocation(line: 5125, column: 31, scope: !10834)
!10836 = !DILocation(line: 5125, column: 34, scope: !10834)
!10837 = !DILocation(line: 5125, column: 13, scope: !10834)
!10838 = !DILocation(line: 5126, column: 9, scope: !10834)
!10839 = !DILocation(line: 5128, column: 23, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10830, file: !4, line: 5127, column: 14)
!10841 = !DILocation(line: 5128, column: 31, scope: !10840)
!10842 = !DILocation(line: 5128, column: 34, scope: !10840)
!10843 = !DILocation(line: 5128, column: 13, scope: !10840)
!10844 = !DILocation(line: 5132, column: 19, scope: !1069)
!10845 = !DILocation(line: 5132, column: 27, scope: !1069)
!10846 = !DILocation(line: 5132, column: 32, scope: !1069)
!10847 = !DILocation(line: 5132, column: 5, scope: !1069)
!10848 = !DILocation(line: 5133, column: 1, scope: !1069)
!10849 = !DILocation(line: 5133, column: 1, scope: !10850)
!10850 = !DILexicalBlockFile(scope: !1069, file: !4, discriminator: 1)
!10851 = !DILocation(line: 2370, column: 32, scope: !1928)
!10852 = !DILocation(line: 2370, column: 48, scope: !1928)
!10853 = !DILocation(line: 2372, column: 5, scope: !1928)
!10854 = !DILocation(line: 2372, column: 9, scope: !1928)
!10855 = !DILocation(line: 2372, column: 17, scope: !1928)
!10856 = !DILocation(line: 2373, column: 5, scope: !1928)
!10857 = !DILocation(line: 2373, column: 9, scope: !1928)
!10858 = !DILocation(line: 2375, column: 23, scope: !1928)
!10859 = !DILocation(line: 2375, column: 14, scope: !1928)
!10860 = !DILocation(line: 2375, column: 12, scope: !1928)
!10861 = !DILocation(line: 2376, column: 23, scope: !1928)
!10862 = !DILocation(line: 2376, column: 14, scope: !1928)
!10863 = !DILocation(line: 2376, column: 12, scope: !1928)
!10864 = !DILocation(line: 2377, column: 9, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !1928, file: !4, line: 2377, column: 9)
!10866 = !DILocation(line: 2377, column: 19, scope: !10865)
!10867 = !DILocation(line: 2377, column: 16, scope: !10865)
!10868 = !DILocation(line: 2377, column: 9, scope: !1928)
!10869 = !DILocation(line: 2378, column: 13, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10865, file: !4, line: 2377, column: 27)
!10871 = !DILocation(line: 2378, column: 22, scope: !10870)
!10872 = !DILocation(line: 2378, column: 20, scope: !10870)
!10873 = !DILocation(line: 2378, column: 11, scope: !10870)
!10874 = !DILocation(line: 2379, column: 5, scope: !10870)
!10875 = !DILocation(line: 2381, column: 14, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10865, file: !4, line: 2380, column: 10)
!10877 = !DILocation(line: 2381, column: 17, scope: !10876)
!10878 = !DILocation(line: 2381, column: 23, scope: !10876)
!10879 = !DILocation(line: 2381, column: 26, scope: !10876)
!10880 = !DILocation(line: 2381, column: 21, scope: !10876)
!10881 = !DILocation(line: 2381, column: 13, scope: !10876)
!10882 = !DILocation(line: 2381, column: 11, scope: !10876)
!10883 = !DILocation(line: 2382, column: 29, scope: !10876)
!10884 = !DILocation(line: 2382, column: 14, scope: !10876)
!10885 = !DILocation(line: 2382, column: 11, scope: !10876)
!10886 = !DILocation(line: 2385, column: 12, scope: !1928)
!10887 = !DILocation(line: 2386, column: 1, scope: !1928)
!10888 = !DILocation(line: 2385, column: 5, scope: !1928)
!10889 = !DILocation(line: 5140, column: 21, scope: !1077)
!10890 = !DILocation(line: 5140, column: 42, scope: !1077)
!10891 = !DILocation(line: 5140, column: 58, scope: !1077)
!10892 = !DILocation(line: 5141, column: 35, scope: !1077)
!10893 = !DILocation(line: 5141, column: 50, scope: !1077)
!10894 = !DILocation(line: 5143, column: 5, scope: !1077)
!10895 = !DILocation(line: 5143, column: 9, scope: !1077)
!10896 = !DILocation(line: 5145, column: 20, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !1077, file: !4, line: 5145, column: 9)
!10898 = !DILocation(line: 5145, column: 9, scope: !10897)
!10899 = !DILocation(line: 5145, column: 23, scope: !10897)
!10900 = !DILocation(line: 5145, column: 37, scope: !10901)
!10901 = !DILexicalBlockFile(scope: !10897, file: !4, discriminator: 1)
!10902 = !DILocation(line: 5145, column: 27, scope: !10897)
!10903 = !DILocation(line: 5145, column: 9, scope: !1077)
!10904 = !DILocation(line: 5146, column: 19, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10897, file: !4, line: 5145, column: 41)
!10906 = !DILocation(line: 5146, column: 27, scope: !10905)
!10907 = !DILocation(line: 5146, column: 30, scope: !10905)
!10908 = !DILocation(line: 5146, column: 9, scope: !10905)
!10909 = !DILocation(line: 5147, column: 5, scope: !10905)
!10910 = !DILocation(line: 5148, column: 25, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10897, file: !4, line: 5148, column: 14)
!10912 = !DILocation(line: 5148, column: 14, scope: !10911)
!10913 = !DILocation(line: 5148, column: 28, scope: !10911)
!10914 = !DILocation(line: 5148, column: 42, scope: !10915)
!10915 = !DILexicalBlockFile(scope: !10911, file: !4, discriminator: 1)
!10916 = !DILocation(line: 5148, column: 32, scope: !10911)
!10917 = !DILocation(line: 5148, column: 14, scope: !10897)
!10918 = !DILocation(line: 5149, column: 19, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10911, file: !4, line: 5148, column: 46)
!10920 = !DILocation(line: 5149, column: 27, scope: !10919)
!10921 = !DILocation(line: 5149, column: 30, scope: !10919)
!10922 = !DILocation(line: 5149, column: 9, scope: !10919)
!10923 = !DILocation(line: 5150, column: 5, scope: !10919)
!10924 = !DILocation(line: 5151, column: 30, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10911, file: !4, line: 5151, column: 14)
!10926 = !DILocation(line: 5151, column: 38, scope: !10925)
!10927 = !DILocation(line: 5151, column: 41, scope: !10925)
!10928 = !DILocation(line: 5151, column: 44, scope: !10925)
!10929 = !DILocation(line: 5151, column: 49, scope: !10925)
!10930 = !DILocation(line: 5151, column: 14, scope: !10925)
!10931 = !DILocation(line: 5151, column: 14, scope: !10911)
!10932 = !DILocation(line: 5152, column: 9, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10925, file: !4, line: 5151, column: 58)
!10934 = !DILocation(line: 5155, column: 26, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10925, file: !4, line: 5154, column: 10)
!10936 = !DILocation(line: 5155, column: 29, scope: !10935)
!10937 = !DILocation(line: 5155, column: 13, scope: !10935)
!10938 = !DILocation(line: 5155, column: 11, scope: !10935)
!10939 = !DILocation(line: 5156, column: 13, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10935, file: !4, line: 5156, column: 13)
!10941 = !DILocation(line: 5156, column: 15, scope: !10940)
!10942 = !DILocation(line: 5156, column: 13, scope: !10935)
!10943 = !DILocation(line: 5157, column: 35, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10940, file: !4, line: 5156, column: 21)
!10945 = !DILocation(line: 5157, column: 38, scope: !10944)
!10946 = !DILocation(line: 5157, column: 17, scope: !10944)
!10947 = !DILocation(line: 5157, column: 15, scope: !10944)
!10948 = !DILocation(line: 5158, column: 9, scope: !10944)
!10949 = !DILocation(line: 5160, column: 13, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10935, file: !4, line: 5160, column: 13)
!10951 = !DILocation(line: 5160, column: 15, scope: !10950)
!10952 = !DILocation(line: 5160, column: 13, scope: !10935)
!10953 = !DILocation(line: 5161, column: 23, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10950, file: !4, line: 5160, column: 20)
!10955 = !DILocation(line: 5161, column: 31, scope: !10954)
!10956 = !DILocation(line: 5161, column: 34, scope: !10954)
!10957 = !DILocation(line: 5161, column: 13, scope: !10954)
!10958 = !DILocation(line: 5162, column: 9, scope: !10954)
!10959 = !DILocation(line: 5164, column: 23, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10950, file: !4, line: 5163, column: 14)
!10961 = !DILocation(line: 5164, column: 31, scope: !10960)
!10962 = !DILocation(line: 5164, column: 34, scope: !10960)
!10963 = !DILocation(line: 5164, column: 13, scope: !10960)
!10964 = !DILocation(line: 5168, column: 19, scope: !1077)
!10965 = !DILocation(line: 5168, column: 27, scope: !1077)
!10966 = !DILocation(line: 5168, column: 32, scope: !1077)
!10967 = !DILocation(line: 5168, column: 5, scope: !1077)
!10968 = !DILocation(line: 5169, column: 1, scope: !1077)
!10969 = !DILocation(line: 5169, column: 1, scope: !10970)
!10970 = !DILexicalBlockFile(scope: !1077, file: !4, discriminator: 1)
!10971 = !DILocation(line: 5177, column: 17, scope: !1085)
!10972 = !DILocation(line: 5177, column: 38, scope: !1085)
!10973 = !DILocation(line: 5177, column: 54, scope: !1085)
!10974 = !DILocation(line: 5178, column: 31, scope: !1085)
!10975 = !DILocation(line: 5178, column: 46, scope: !1085)
!10976 = !DILocation(line: 5180, column: 5, scope: !1085)
!10977 = !DILocation(line: 5180, column: 9, scope: !1085)
!10978 = !DILocation(line: 5182, column: 20, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !1085, file: !4, line: 5182, column: 9)
!10980 = !DILocation(line: 5182, column: 9, scope: !10979)
!10981 = !DILocation(line: 5182, column: 23, scope: !10979)
!10982 = !DILocation(line: 5182, column: 37, scope: !10983)
!10983 = !DILexicalBlockFile(scope: !10979, file: !4, discriminator: 1)
!10984 = !DILocation(line: 5182, column: 27, scope: !10979)
!10985 = !DILocation(line: 5182, column: 9, scope: !1085)
!10986 = !DILocation(line: 5183, column: 19, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10979, file: !4, line: 5182, column: 41)
!10988 = !DILocation(line: 5183, column: 27, scope: !10987)
!10989 = !DILocation(line: 5183, column: 30, scope: !10987)
!10990 = !DILocation(line: 5183, column: 9, scope: !10987)
!10991 = !DILocation(line: 5184, column: 5, scope: !10987)
!10992 = !DILocation(line: 5185, column: 25, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10979, file: !4, line: 5185, column: 14)
!10994 = !DILocation(line: 5185, column: 14, scope: !10993)
!10995 = !DILocation(line: 5185, column: 28, scope: !10993)
!10996 = !DILocation(line: 5185, column: 42, scope: !10997)
!10997 = !DILexicalBlockFile(scope: !10993, file: !4, discriminator: 1)
!10998 = !DILocation(line: 5185, column: 32, scope: !10993)
!10999 = !DILocation(line: 5185, column: 14, scope: !10979)
!11000 = !DILocation(line: 5186, column: 19, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10993, file: !4, line: 5185, column: 46)
!11002 = !DILocation(line: 5186, column: 27, scope: !11001)
!11003 = !DILocation(line: 5186, column: 30, scope: !11001)
!11004 = !DILocation(line: 5186, column: 9, scope: !11001)
!11005 = !DILocation(line: 5187, column: 5, scope: !11001)
!11006 = !DILocation(line: 5188, column: 30, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !10993, file: !4, line: 5188, column: 14)
!11008 = !DILocation(line: 5188, column: 38, scope: !11007)
!11009 = !DILocation(line: 5188, column: 41, scope: !11007)
!11010 = !DILocation(line: 5188, column: 44, scope: !11007)
!11011 = !DILocation(line: 5188, column: 49, scope: !11007)
!11012 = !DILocation(line: 5188, column: 14, scope: !11007)
!11013 = !DILocation(line: 5188, column: 14, scope: !10993)
!11014 = !DILocation(line: 5189, column: 9, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11007, file: !4, line: 5188, column: 58)
!11016 = !DILocation(line: 5192, column: 22, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11007, file: !4, line: 5191, column: 10)
!11018 = !DILocation(line: 5192, column: 25, scope: !11017)
!11019 = !DILocation(line: 5192, column: 13, scope: !11017)
!11020 = !DILocation(line: 5192, column: 11, scope: !11017)
!11021 = !DILocation(line: 5193, column: 13, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11017, file: !4, line: 5193, column: 13)
!11023 = !DILocation(line: 5193, column: 15, scope: !11022)
!11024 = !DILocation(line: 5193, column: 13, scope: !11017)
!11025 = !DILocation(line: 5194, column: 35, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11022, file: !4, line: 5193, column: 21)
!11027 = !DILocation(line: 5194, column: 38, scope: !11026)
!11028 = !DILocation(line: 5194, column: 17, scope: !11026)
!11029 = !DILocation(line: 5194, column: 15, scope: !11026)
!11030 = !DILocation(line: 5195, column: 9, scope: !11026)
!11031 = !DILocation(line: 5197, column: 13, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11017, file: !4, line: 5197, column: 13)
!11033 = !DILocation(line: 5197, column: 15, scope: !11032)
!11034 = !DILocation(line: 5197, column: 13, scope: !11017)
!11035 = !DILocation(line: 5198, column: 23, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11032, file: !4, line: 5197, column: 20)
!11037 = !DILocation(line: 5198, column: 31, scope: !11036)
!11038 = !DILocation(line: 5198, column: 34, scope: !11036)
!11039 = !DILocation(line: 5198, column: 13, scope: !11036)
!11040 = !DILocation(line: 5199, column: 9, scope: !11036)
!11041 = !DILocation(line: 5201, column: 23, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !11032, file: !4, line: 5200, column: 14)
!11043 = !DILocation(line: 5201, column: 31, scope: !11042)
!11044 = !DILocation(line: 5201, column: 34, scope: !11042)
!11045 = !DILocation(line: 5201, column: 13, scope: !11042)
!11046 = !DILocation(line: 5205, column: 19, scope: !1085)
!11047 = !DILocation(line: 5205, column: 27, scope: !1085)
!11048 = !DILocation(line: 5205, column: 32, scope: !1085)
!11049 = !DILocation(line: 5205, column: 5, scope: !1085)
!11050 = !DILocation(line: 5206, column: 1, scope: !1085)
!11051 = !DILocation(line: 5206, column: 1, scope: !11052)
!11052 = !DILexicalBlockFile(scope: !1085, file: !4, discriminator: 1)
!11053 = !DILocation(line: 5213, column: 21, scope: !1093)
!11054 = !DILocation(line: 5213, column: 42, scope: !1093)
!11055 = !DILocation(line: 5213, column: 58, scope: !1093)
!11056 = !DILocation(line: 5214, column: 35, scope: !1093)
!11057 = !DILocation(line: 5214, column: 50, scope: !1093)
!11058 = !DILocation(line: 5216, column: 5, scope: !1093)
!11059 = !DILocation(line: 5216, column: 9, scope: !1093)
!11060 = !DILocation(line: 5218, column: 20, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !1093, file: !4, line: 5218, column: 9)
!11062 = !DILocation(line: 5218, column: 9, scope: !11061)
!11063 = !DILocation(line: 5218, column: 23, scope: !11061)
!11064 = !DILocation(line: 5218, column: 37, scope: !11065)
!11065 = !DILexicalBlockFile(scope: !11061, file: !4, discriminator: 1)
!11066 = !DILocation(line: 5218, column: 27, scope: !11061)
!11067 = !DILocation(line: 5218, column: 9, scope: !1093)
!11068 = !DILocation(line: 5219, column: 19, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11061, file: !4, line: 5218, column: 41)
!11070 = !DILocation(line: 5219, column: 27, scope: !11069)
!11071 = !DILocation(line: 5219, column: 30, scope: !11069)
!11072 = !DILocation(line: 5219, column: 9, scope: !11069)
!11073 = !DILocation(line: 5220, column: 5, scope: !11069)
!11074 = !DILocation(line: 5221, column: 25, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11061, file: !4, line: 5221, column: 14)
!11076 = !DILocation(line: 5221, column: 14, scope: !11075)
!11077 = !DILocation(line: 5221, column: 28, scope: !11075)
!11078 = !DILocation(line: 5221, column: 42, scope: !11079)
!11079 = !DILexicalBlockFile(scope: !11075, file: !4, discriminator: 1)
!11080 = !DILocation(line: 5221, column: 32, scope: !11075)
!11081 = !DILocation(line: 5221, column: 14, scope: !11061)
!11082 = !DILocation(line: 5222, column: 19, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11075, file: !4, line: 5221, column: 46)
!11084 = !DILocation(line: 5222, column: 27, scope: !11083)
!11085 = !DILocation(line: 5222, column: 30, scope: !11083)
!11086 = !DILocation(line: 5222, column: 9, scope: !11083)
!11087 = !DILocation(line: 5223, column: 5, scope: !11083)
!11088 = !DILocation(line: 5224, column: 30, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11075, file: !4, line: 5224, column: 14)
!11090 = !DILocation(line: 5224, column: 38, scope: !11089)
!11091 = !DILocation(line: 5224, column: 41, scope: !11089)
!11092 = !DILocation(line: 5224, column: 44, scope: !11089)
!11093 = !DILocation(line: 5224, column: 49, scope: !11089)
!11094 = !DILocation(line: 5224, column: 14, scope: !11089)
!11095 = !DILocation(line: 5224, column: 14, scope: !11075)
!11096 = !DILocation(line: 5225, column: 9, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11089, file: !4, line: 5224, column: 58)
!11098 = !DILocation(line: 5228, column: 26, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11089, file: !4, line: 5227, column: 10)
!11100 = !DILocation(line: 5228, column: 29, scope: !11099)
!11101 = !DILocation(line: 5228, column: 13, scope: !11099)
!11102 = !DILocation(line: 5228, column: 11, scope: !11099)
!11103 = !DILocation(line: 5229, column: 13, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11099, file: !4, line: 5229, column: 13)
!11105 = !DILocation(line: 5229, column: 15, scope: !11104)
!11106 = !DILocation(line: 5229, column: 13, scope: !11099)
!11107 = !DILocation(line: 5230, column: 35, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11104, file: !4, line: 5229, column: 21)
!11109 = !DILocation(line: 5230, column: 38, scope: !11108)
!11110 = !DILocation(line: 5230, column: 17, scope: !11108)
!11111 = !DILocation(line: 5230, column: 15, scope: !11108)
!11112 = !DILocation(line: 5231, column: 9, scope: !11108)
!11113 = !DILocation(line: 5233, column: 13, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11099, file: !4, line: 5233, column: 13)
!11115 = !DILocation(line: 5233, column: 15, scope: !11114)
!11116 = !DILocation(line: 5233, column: 13, scope: !11099)
!11117 = !DILocation(line: 5234, column: 23, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11114, file: !4, line: 5233, column: 20)
!11119 = !DILocation(line: 5234, column: 31, scope: !11118)
!11120 = !DILocation(line: 5234, column: 34, scope: !11118)
!11121 = !DILocation(line: 5234, column: 13, scope: !11118)
!11122 = !DILocation(line: 5235, column: 9, scope: !11118)
!11123 = !DILocation(line: 5237, column: 23, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11114, file: !4, line: 5236, column: 14)
!11125 = !DILocation(line: 5237, column: 31, scope: !11124)
!11126 = !DILocation(line: 5237, column: 34, scope: !11124)
!11127 = !DILocation(line: 5237, column: 13, scope: !11124)
!11128 = !DILocation(line: 5241, column: 19, scope: !1093)
!11129 = !DILocation(line: 5241, column: 27, scope: !1093)
!11130 = !DILocation(line: 5241, column: 32, scope: !1093)
!11131 = !DILocation(line: 5241, column: 5, scope: !1093)
!11132 = !DILocation(line: 5242, column: 1, scope: !1093)
!11133 = !DILocation(line: 5242, column: 1, scope: !11134)
!11134 = !DILexicalBlockFile(scope: !1093, file: !4, discriminator: 1)
!11135 = !DILocation(line: 5846, column: 23, scope: !1108)
!11136 = !DILocation(line: 5846, column: 44, scope: !1108)
!11137 = !DILocation(line: 5846, column: 59, scope: !1108)
!11138 = !DILocation(line: 5847, column: 37, scope: !1108)
!11139 = !DILocation(line: 5847, column: 52, scope: !1108)
!11140 = !DILocation(line: 5849, column: 5, scope: !1108)
!11141 = !DILocation(line: 5849, column: 19, scope: !1108)
!11142 = !DILocation(line: 5850, column: 5, scope: !1108)
!11143 = !DILocation(line: 5850, column: 16, scope: !1108)
!11144 = !DILocation(line: 5850, column: 29, scope: !1108)
!11145 = !DILocation(line: 5850, column: 35, scope: !1108)
!11146 = !DILocation(line: 5850, column: 40, scope: !1108)
!11147 = !DILocation(line: 5850, column: 85, scope: !1108)
!11148 = !DILocation(line: 5852, column: 5, scope: !1108)
!11149 = !DILocation(line: 5853, column: 26, scope: !1108)
!11150 = !DILocation(line: 5853, column: 42, scope: !1108)
!11151 = !DILocation(line: 5853, column: 5, scope: !1108)
!11152 = !DILocation(line: 5854, column: 14, scope: !1108)
!11153 = !DILocation(line: 5854, column: 22, scope: !1108)
!11154 = !DILocation(line: 5854, column: 30, scope: !1108)
!11155 = !DILocation(line: 5854, column: 35, scope: !1108)
!11156 = !DILocation(line: 5854, column: 5, scope: !1108)
!11157 = !DILocation(line: 5855, column: 5, scope: !1108)
!11158 = !DILocation(line: 5856, column: 1, scope: !1108)
!11159 = !DILocation(line: 5860, column: 22, scope: !1118)
!11160 = !DILocation(line: 5860, column: 43, scope: !1118)
!11161 = !DILocation(line: 5860, column: 57, scope: !1118)
!11162 = !DILocation(line: 5861, column: 36, scope: !1118)
!11163 = !DILocation(line: 5861, column: 51, scope: !1118)
!11164 = !DILocation(line: 5863, column: 5, scope: !1118)
!11165 = !DILocation(line: 5863, column: 19, scope: !1118)
!11166 = !DILocation(line: 5864, column: 5, scope: !1118)
!11167 = !DILocation(line: 5864, column: 16, scope: !1118)
!11168 = !DILocation(line: 5864, column: 29, scope: !1118)
!11169 = !DILocation(line: 5864, column: 35, scope: !1118)
!11170 = !DILocation(line: 5864, column: 40, scope: !1118)
!11171 = !DILocation(line: 5864, column: 85, scope: !1118)
!11172 = !DILocation(line: 5866, column: 5, scope: !1118)
!11173 = !DILocation(line: 5867, column: 25, scope: !1118)
!11174 = !DILocation(line: 5867, column: 41, scope: !1118)
!11175 = !DILocation(line: 5867, column: 5, scope: !1118)
!11176 = !DILocation(line: 5868, column: 14, scope: !1118)
!11177 = !DILocation(line: 5868, column: 22, scope: !1118)
!11178 = !DILocation(line: 5868, column: 30, scope: !1118)
!11179 = !DILocation(line: 5868, column: 35, scope: !1118)
!11180 = !DILocation(line: 5868, column: 5, scope: !1118)
!11181 = !DILocation(line: 5869, column: 5, scope: !1118)
!11182 = !DILocation(line: 5870, column: 1, scope: !1118)
!11183 = !DILocation(line: 5873, column: 21, scope: !1128)
!11184 = !DILocation(line: 5873, column: 42, scope: !1128)
!11185 = !DILocation(line: 5873, column: 53, scope: !1128)
!11186 = !DILocation(line: 5874, column: 35, scope: !1128)
!11187 = !DILocation(line: 5874, column: 50, scope: !1128)
!11188 = !DILocation(line: 5876, column: 20, scope: !1128)
!11189 = !DILocation(line: 5876, column: 28, scope: !1128)
!11190 = !DILocation(line: 5876, column: 31, scope: !1128)
!11191 = !DILocation(line: 5876, column: 34, scope: !1128)
!11192 = !DILocation(line: 5876, column: 39, scope: !1128)
!11193 = !DILocation(line: 5876, column: 5, scope: !1128)
!11194 = !DILocation(line: 5877, column: 1, scope: !1128)
!11195 = !DILocation(line: 5880, column: 21, scope: !1135)
!11196 = !DILocation(line: 5880, column: 42, scope: !1135)
!11197 = !DILocation(line: 5880, column: 54, scope: !1135)
!11198 = !DILocation(line: 5881, column: 35, scope: !1135)
!11199 = !DILocation(line: 5881, column: 50, scope: !1135)
!11200 = !DILocation(line: 5883, column: 19, scope: !1135)
!11201 = !DILocation(line: 5883, column: 27, scope: !1135)
!11202 = !DILocation(line: 5883, column: 30, scope: !1135)
!11203 = !DILocation(line: 5883, column: 33, scope: !1135)
!11204 = !DILocation(line: 5883, column: 38, scope: !1135)
!11205 = !DILocation(line: 5883, column: 5, scope: !1135)
!11206 = !DILocation(line: 5884, column: 1, scope: !1135)
!11207 = !DILocation(line: 5888, column: 21, scope: !1142)
!11208 = !DILocation(line: 5888, column: 42, scope: !1142)
!11209 = !DILocation(line: 5888, column: 53, scope: !1142)
!11210 = !DILocation(line: 5889, column: 35, scope: !1142)
!11211 = !DILocation(line: 5889, column: 50, scope: !1142)
!11212 = !DILocation(line: 5891, column: 20, scope: !1142)
!11213 = !DILocation(line: 5891, column: 28, scope: !1142)
!11214 = !DILocation(line: 5891, column: 31, scope: !1142)
!11215 = !DILocation(line: 5891, column: 34, scope: !1142)
!11216 = !DILocation(line: 5891, column: 39, scope: !1142)
!11217 = !DILocation(line: 5891, column: 5, scope: !1142)
!11218 = !DILocation(line: 5892, column: 1, scope: !1142)
!11219 = !DILocation(line: 5895, column: 21, scope: !1149)
!11220 = !DILocation(line: 5895, column: 42, scope: !1149)
!11221 = !DILocation(line: 5895, column: 54, scope: !1149)
!11222 = !DILocation(line: 5896, column: 35, scope: !1149)
!11223 = !DILocation(line: 5896, column: 50, scope: !1149)
!11224 = !DILocation(line: 5898, column: 19, scope: !1149)
!11225 = !DILocation(line: 5898, column: 27, scope: !1149)
!11226 = !DILocation(line: 5898, column: 30, scope: !1149)
!11227 = !DILocation(line: 5898, column: 33, scope: !1149)
!11228 = !DILocation(line: 5898, column: 38, scope: !1149)
!11229 = !DILocation(line: 5898, column: 5, scope: !1149)
!11230 = !DILocation(line: 5899, column: 1, scope: !1149)
!11231 = !DILocation(line: 5974, column: 24, scope: !1168)
!11232 = !DILocation(line: 5974, column: 45, scope: !1168)
!11233 = !DILocation(line: 5974, column: 69, scope: !1168)
!11234 = !DILocation(line: 5975, column: 27, scope: !1168)
!11235 = !DILocation(line: 5977, column: 5, scope: !1168)
!11236 = !DILocation(line: 5977, column: 19, scope: !1168)
!11237 = !DILocation(line: 5978, column: 5, scope: !1168)
!11238 = !DILocation(line: 5978, column: 16, scope: !1168)
!11239 = !DILocation(line: 5978, column: 36, scope: !1168)
!11240 = !DILocation(line: 5978, column: 42, scope: !1168)
!11241 = !DILocation(line: 5978, column: 49, scope: !1168)
!11242 = !DILocation(line: 5978, column: 103, scope: !1168)
!11243 = !DILocation(line: 5978, column: 93, scope: !1168)
!11244 = !DILocation(line: 5978, column: 107, scope: !1168)
!11245 = !DILocation(line: 5978, column: 120, scope: !1168)
!11246 = !DILocation(line: 5980, column: 23, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !1168, file: !4, line: 5980, column: 9)
!11248 = !DILocation(line: 5980, column: 9, scope: !11247)
!11249 = !DILocation(line: 5980, column: 9, scope: !1168)
!11250 = !DILocation(line: 5981, column: 28, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !4, line: 5981, column: 13)
!11252 = distinct !DILexicalBlock(scope: !11247, file: !4, line: 5980, column: 27)
!11253 = !DILocation(line: 5981, column: 36, scope: !11251)
!11254 = !DILocation(line: 5981, column: 39, scope: !11251)
!11255 = !DILocation(line: 5981, column: 44, scope: !11251)
!11256 = !DILocation(line: 5981, column: 13, scope: !11251)
!11257 = !DILocation(line: 5981, column: 13, scope: !11252)
!11258 = !DILocation(line: 5982, column: 13, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11251, file: !4, line: 5981, column: 53)
!11260 = !DILocation(line: 5986, column: 28, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11252, file: !4, line: 5986, column: 13)
!11262 = !DILocation(line: 5986, column: 13, scope: !11261)
!11263 = !DILocation(line: 5986, column: 13, scope: !11252)
!11264 = !DILocation(line: 5987, column: 23, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11261, file: !4, line: 5986, column: 32)
!11266 = !DILocation(line: 5987, column: 31, scope: !11265)
!11267 = !DILocation(line: 5987, column: 34, scope: !11265)
!11268 = !DILocation(line: 5987, column: 13, scope: !11265)
!11269 = !DILocation(line: 5988, column: 13, scope: !11265)
!11270 = !DILocation(line: 5991, column: 29, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11261, file: !4, line: 5990, column: 14)
!11272 = !DILocation(line: 5991, column: 13, scope: !11271)
!11273 = !DILocation(line: 5992, column: 27, scope: !11271)
!11274 = !DILocation(line: 5992, column: 35, scope: !11271)
!11275 = !DILocation(line: 5992, column: 40, scope: !11271)
!11276 = !DILocation(line: 5992, column: 13, scope: !11271)
!11277 = !DILocation(line: 5993, column: 27, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11271, file: !4, line: 5993, column: 17)
!11279 = !DILocation(line: 5993, column: 17, scope: !11278)
!11280 = !DILocation(line: 5993, column: 17, scope: !11271)
!11281 = !DILocation(line: 5994, column: 17, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11278, file: !4, line: 5993, column: 36)
!11283 = !DILocation(line: 5996, column: 36, scope: !11271)
!11284 = !DILocation(line: 5996, column: 27, scope: !11271)
!11285 = !DILocation(line: 5996, column: 13, scope: !11271)
!11286 = !DILocation(line: 5996, column: 21, scope: !11271)
!11287 = !DILocation(line: 5996, column: 25, scope: !11271)
!11288 = !DILocation(line: 5997, column: 13, scope: !11271)
!11289 = !DILocation(line: 6001, column: 31, scope: !1168)
!11290 = !DILocation(line: 6001, column: 5, scope: !1168)
!11291 = !DILocation(line: 6002, column: 13, scope: !1168)
!11292 = !DILocation(line: 6002, column: 19, scope: !1168)
!11293 = !DILocation(line: 6004, column: 20, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !1168, file: !4, line: 6004, column: 9)
!11295 = !DILocation(line: 6004, column: 28, scope: !11294)
!11296 = !DILocation(line: 6004, column: 31, scope: !11294)
!11297 = !DILocation(line: 6004, column: 10, scope: !11294)
!11298 = !DILocation(line: 6004, column: 9, scope: !1168)
!11299 = !DILocation(line: 6005, column: 9, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11294, file: !4, line: 6004, column: 40)
!11301 = !DILocation(line: 6008, column: 19, scope: !1168)
!11302 = !DILocation(line: 6008, column: 46, scope: !1168)
!11303 = !DILocation(line: 6008, column: 5, scope: !1168)
!11304 = !DILocation(line: 6009, column: 17, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !1168, file: !4, line: 6009, column: 9)
!11306 = !DILocation(line: 6009, column: 23, scope: !11305)
!11307 = !DILocation(line: 6009, column: 9, scope: !1168)
!11308 = !DILocation(line: 6010, column: 29, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11305, file: !4, line: 6009, column: 153)
!11310 = !DILocation(line: 6010, column: 35, scope: !11309)
!11311 = !DILocation(line: 6010, column: 10, scope: !11309)
!11312 = !DILocation(line: 6010, column: 17, scope: !11309)
!11313 = !DILocation(line: 6011, column: 9, scope: !11309)
!11314 = !DILocation(line: 6014, column: 13, scope: !1168)
!11315 = !DILocation(line: 6014, column: 20, scope: !1168)
!11316 = !DILocation(line: 6015, column: 14, scope: !1168)
!11317 = !DILocation(line: 6015, column: 22, scope: !1168)
!11318 = !DILocation(line: 6015, column: 51, scope: !1168)
!11319 = !DILocation(line: 6015, column: 5, scope: !1168)
!11320 = !DILocation(line: 6016, column: 25, scope: !1168)
!11321 = !DILocation(line: 6016, column: 31, scope: !1168)
!11322 = !DILocation(line: 6016, column: 6, scope: !1168)
!11323 = !DILocation(line: 6016, column: 13, scope: !1168)
!11324 = !DILocation(line: 6017, column: 1, scope: !1168)
!11325 = !DILocation(line: 6017, column: 1, scope: !11326)
!11326 = !DILexicalBlockFile(scope: !1168, file: !4, discriminator: 1)
!11327 = !DILocation(line: 717, column: 32, scope: !2082)
!11328 = !DILocation(line: 717, column: 62, scope: !2082)
!11329 = !DILocation(line: 719, column: 21, scope: !2082)
!11330 = !DILocation(line: 719, column: 26, scope: !2082)
!11331 = !DILocation(line: 719, column: 5, scope: !2082)
!11332 = !DILocation(line: 719, column: 14, scope: !2082)
!11333 = !DILocation(line: 719, column: 19, scope: !2082)
!11334 = !DILocation(line: 720, column: 21, scope: !2082)
!11335 = !DILocation(line: 720, column: 26, scope: !2082)
!11336 = !DILocation(line: 720, column: 5, scope: !2082)
!11337 = !DILocation(line: 720, column: 14, scope: !2082)
!11338 = !DILocation(line: 720, column: 19, scope: !2082)
!11339 = !DILocation(line: 721, column: 21, scope: !2082)
!11340 = !DILocation(line: 721, column: 26, scope: !2082)
!11341 = !DILocation(line: 721, column: 5, scope: !2082)
!11342 = !DILocation(line: 721, column: 14, scope: !2082)
!11343 = !DILocation(line: 721, column: 19, scope: !2082)
!11344 = !DILocation(line: 722, column: 22, scope: !2082)
!11345 = !DILocation(line: 722, column: 27, scope: !2082)
!11346 = !DILocation(line: 722, column: 5, scope: !2082)
!11347 = !DILocation(line: 722, column: 14, scope: !2082)
!11348 = !DILocation(line: 722, column: 20, scope: !2082)
!11349 = !DILocation(line: 723, column: 5, scope: !2082)
!11350 = !DILocation(line: 723, column: 14, scope: !2082)
!11351 = !DILocation(line: 723, column: 20, scope: !2082)
!11352 = !{!2522, !2523, i64 24}
!11353 = !DILocation(line: 724, column: 5, scope: !2082)
!11354 = !DILocation(line: 724, column: 14, scope: !2082)
!11355 = !DILocation(line: 724, column: 21, scope: !2082)
!11356 = !DILocation(line: 725, column: 5, scope: !2082)
!11357 = !DILocation(line: 725, column: 14, scope: !2082)
!11358 = !DILocation(line: 725, column: 22, scope: !2082)
!11359 = !{!2522, !2523, i64 32}
!11360 = !DILocation(line: 726, column: 22, scope: !2082)
!11361 = !DILocation(line: 726, column: 27, scope: !2082)
!11362 = !DILocation(line: 726, column: 5, scope: !2082)
!11363 = !DILocation(line: 726, column: 14, scope: !2082)
!11364 = !DILocation(line: 726, column: 20, scope: !2082)
!11365 = !DILocation(line: 727, column: 22, scope: !2082)
!11366 = !DILocation(line: 727, column: 27, scope: !2082)
!11367 = !DILocation(line: 727, column: 5, scope: !2082)
!11368 = !DILocation(line: 727, column: 14, scope: !2082)
!11369 = !DILocation(line: 727, column: 20, scope: !2082)
!11370 = !DILocation(line: 728, column: 1, scope: !2082)
!11371 = !DILocation(line: 6021, column: 23, scope: !1177)
!11372 = !DILocation(line: 6021, column: 44, scope: !1177)
!11373 = !DILocation(line: 6021, column: 68, scope: !1177)
!11374 = !DILocation(line: 6022, column: 26, scope: !1177)
!11375 = !DILocation(line: 6024, column: 5, scope: !1177)
!11376 = !DILocation(line: 6024, column: 19, scope: !1177)
!11377 = !DILocation(line: 6025, column: 5, scope: !1177)
!11378 = !DILocation(line: 6025, column: 16, scope: !1177)
!11379 = !DILocation(line: 6025, column: 36, scope: !1177)
!11380 = !DILocation(line: 6025, column: 42, scope: !1177)
!11381 = !DILocation(line: 6025, column: 49, scope: !1177)
!11382 = !DILocation(line: 6025, column: 103, scope: !1177)
!11383 = !DILocation(line: 6025, column: 93, scope: !1177)
!11384 = !DILocation(line: 6025, column: 107, scope: !1177)
!11385 = !DILocation(line: 6025, column: 120, scope: !1177)
!11386 = !DILocation(line: 6027, column: 23, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !1177, file: !4, line: 6027, column: 9)
!11388 = !DILocation(line: 6027, column: 9, scope: !11387)
!11389 = !DILocation(line: 6027, column: 9, scope: !1177)
!11390 = !DILocation(line: 6028, column: 28, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11392, file: !4, line: 6028, column: 13)
!11392 = distinct !DILexicalBlock(scope: !11387, file: !4, line: 6027, column: 27)
!11393 = !DILocation(line: 6028, column: 36, scope: !11391)
!11394 = !DILocation(line: 6028, column: 39, scope: !11391)
!11395 = !DILocation(line: 6028, column: 44, scope: !11391)
!11396 = !DILocation(line: 6028, column: 13, scope: !11391)
!11397 = !DILocation(line: 6028, column: 13, scope: !11392)
!11398 = !DILocation(line: 6029, column: 13, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11391, file: !4, line: 6028, column: 53)
!11400 = !DILocation(line: 6033, column: 28, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11392, file: !4, line: 6033, column: 13)
!11402 = !DILocation(line: 6033, column: 13, scope: !11401)
!11403 = !DILocation(line: 6033, column: 13, scope: !11392)
!11404 = !DILocation(line: 6034, column: 23, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11401, file: !4, line: 6033, column: 32)
!11406 = !DILocation(line: 6034, column: 31, scope: !11405)
!11407 = !DILocation(line: 6034, column: 34, scope: !11405)
!11408 = !DILocation(line: 6034, column: 13, scope: !11405)
!11409 = !DILocation(line: 6035, column: 9, scope: !11405)
!11410 = !DILocation(line: 6037, column: 29, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11401, file: !4, line: 6036, column: 14)
!11412 = !DILocation(line: 6037, column: 13, scope: !11411)
!11413 = !DILocation(line: 6038, column: 27, scope: !11411)
!11414 = !DILocation(line: 6038, column: 35, scope: !11411)
!11415 = !DILocation(line: 6038, column: 40, scope: !11411)
!11416 = !DILocation(line: 6038, column: 13, scope: !11411)
!11417 = !DILocation(line: 6039, column: 27, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11411, file: !4, line: 6039, column: 17)
!11419 = !DILocation(line: 6039, column: 17, scope: !11418)
!11420 = !DILocation(line: 6039, column: 17, scope: !11411)
!11421 = !DILocation(line: 6040, column: 17, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11418, file: !4, line: 6039, column: 36)
!11423 = !DILocation(line: 6042, column: 27, scope: !11411)
!11424 = !DILocation(line: 6042, column: 13, scope: !11411)
!11425 = !DILocation(line: 6043, column: 36, scope: !11411)
!11426 = !DILocation(line: 6043, column: 27, scope: !11411)
!11427 = !DILocation(line: 6043, column: 13, scope: !11411)
!11428 = !DILocation(line: 6043, column: 21, scope: !11411)
!11429 = !DILocation(line: 6043, column: 25, scope: !11411)
!11430 = !DILocation(line: 6045, column: 9, scope: !11392)
!11431 = !DILocation(line: 6048, column: 31, scope: !1177)
!11432 = !DILocation(line: 6048, column: 5, scope: !1177)
!11433 = !DILocation(line: 6049, column: 13, scope: !1177)
!11434 = !DILocation(line: 6049, column: 19, scope: !1177)
!11435 = !DILocation(line: 6051, column: 20, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !1177, file: !4, line: 6051, column: 9)
!11437 = !DILocation(line: 6051, column: 28, scope: !11436)
!11438 = !DILocation(line: 6051, column: 31, scope: !11436)
!11439 = !DILocation(line: 6051, column: 10, scope: !11436)
!11440 = !DILocation(line: 6051, column: 9, scope: !1177)
!11441 = !DILocation(line: 6052, column: 9, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11436, file: !4, line: 6051, column: 40)
!11443 = !DILocation(line: 6055, column: 19, scope: !1177)
!11444 = !DILocation(line: 6055, column: 46, scope: !1177)
!11445 = !DILocation(line: 6055, column: 5, scope: !1177)
!11446 = !DILocation(line: 6056, column: 17, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !1177, file: !4, line: 6056, column: 9)
!11448 = !DILocation(line: 6056, column: 24, scope: !11447)
!11449 = !DILocation(line: 6056, column: 9, scope: !1177)
!11450 = !DILocation(line: 6057, column: 29, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11447, file: !4, line: 6056, column: 155)
!11452 = !DILocation(line: 6057, column: 35, scope: !11451)
!11453 = !DILocation(line: 6057, column: 10, scope: !11451)
!11454 = !DILocation(line: 6057, column: 17, scope: !11451)
!11455 = !DILocation(line: 6058, column: 9, scope: !11451)
!11456 = !DILocation(line: 6061, column: 13, scope: !1177)
!11457 = !DILocation(line: 6061, column: 20, scope: !1177)
!11458 = !DILocation(line: 6062, column: 14, scope: !1177)
!11459 = !DILocation(line: 6062, column: 22, scope: !1177)
!11460 = !DILocation(line: 6062, column: 51, scope: !1177)
!11461 = !DILocation(line: 6062, column: 5, scope: !1177)
!11462 = !DILocation(line: 6063, column: 25, scope: !1177)
!11463 = !DILocation(line: 6063, column: 31, scope: !1177)
!11464 = !DILocation(line: 6063, column: 6, scope: !1177)
!11465 = !DILocation(line: 6063, column: 13, scope: !1177)
!11466 = !DILocation(line: 6064, column: 1, scope: !1177)
!11467 = !DILocation(line: 6064, column: 1, scope: !11468)
!11468 = !DILexicalBlockFile(scope: !1177, file: !4, discriminator: 1)
!11469 = !DILocation(line: 6071, column: 25, scope: !1186)
!11470 = !DILocation(line: 6071, column: 46, scope: !1186)
!11471 = !DILocation(line: 6071, column: 62, scope: !1186)
!11472 = !DILocation(line: 6072, column: 39, scope: !1186)
!11473 = !DILocation(line: 6072, column: 54, scope: !1186)
!11474 = !DILocation(line: 6074, column: 5, scope: !1186)
!11475 = !DILocation(line: 6074, column: 9, scope: !1186)
!11476 = !DILocation(line: 6076, column: 25, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !1186, file: !4, line: 6076, column: 9)
!11478 = !DILocation(line: 6076, column: 33, scope: !11477)
!11479 = !DILocation(line: 6076, column: 36, scope: !11477)
!11480 = !DILocation(line: 6076, column: 39, scope: !11477)
!11481 = !DILocation(line: 6076, column: 44, scope: !11477)
!11482 = !DILocation(line: 6076, column: 9, scope: !11477)
!11483 = !DILocation(line: 6076, column: 9, scope: !1186)
!11484 = !DILocation(line: 6077, column: 9, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11477, file: !4, line: 6076, column: 53)
!11486 = !DILocation(line: 6080, column: 18, scope: !1186)
!11487 = !DILocation(line: 6080, column: 21, scope: !1186)
!11488 = !DILocation(line: 6080, column: 9, scope: !1186)
!11489 = !DILocation(line: 6080, column: 7, scope: !1186)
!11490 = !DILocation(line: 6081, column: 9, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !1186, file: !4, line: 6081, column: 9)
!11492 = !DILocation(line: 6081, column: 11, scope: !11491)
!11493 = !DILocation(line: 6081, column: 9, scope: !1186)
!11494 = !DILocation(line: 6082, column: 24, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11491, file: !4, line: 6081, column: 17)
!11496 = !DILocation(line: 6082, column: 32, scope: !11495)
!11497 = !DILocation(line: 6082, column: 35, scope: !11495)
!11498 = !DILocation(line: 6082, column: 38, scope: !11495)
!11499 = !DILocation(line: 6082, column: 9, scope: !11495)
!11500 = !DILocation(line: 6083, column: 9, scope: !11495)
!11501 = !DILocation(line: 6086, column: 9, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !1186, file: !4, line: 6086, column: 9)
!11503 = !DILocation(line: 6086, column: 11, scope: !11502)
!11504 = !DILocation(line: 6086, column: 9, scope: !1186)
!11505 = !DILocation(line: 6087, column: 24, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11502, file: !4, line: 6086, column: 16)
!11507 = !DILocation(line: 6087, column: 32, scope: !11506)
!11508 = !DILocation(line: 6087, column: 35, scope: !11506)
!11509 = !DILocation(line: 6087, column: 40, scope: !11506)
!11510 = !DILocation(line: 6087, column: 9, scope: !11506)
!11511 = !DILocation(line: 6088, column: 5, scope: !11506)
!11512 = !DILocation(line: 6090, column: 25, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11502, file: !4, line: 6089, column: 10)
!11514 = !DILocation(line: 6090, column: 33, scope: !11513)
!11515 = !DILocation(line: 6090, column: 36, scope: !11513)
!11516 = !DILocation(line: 6090, column: 41, scope: !11513)
!11517 = !DILocation(line: 6090, column: 9, scope: !11513)
!11518 = !DILocation(line: 6093, column: 24, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !1186, file: !4, line: 6093, column: 9)
!11520 = !DILocation(line: 6093, column: 9, scope: !11519)
!11521 = !DILocation(line: 6093, column: 9, scope: !1186)
!11522 = !DILocation(line: 6094, column: 10, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11519, file: !4, line: 6093, column: 33)
!11524 = !DILocation(line: 6094, column: 17, scope: !11523)
!11525 = !DILocation(line: 6095, column: 5, scope: !11523)
!11526 = !DILocation(line: 6096, column: 25, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11519, file: !4, line: 6096, column: 14)
!11528 = !DILocation(line: 6096, column: 14, scope: !11527)
!11529 = !DILocation(line: 6096, column: 35, scope: !11527)
!11530 = !DILocation(line: 6096, column: 40, scope: !11527)
!11531 = !DILocation(line: 6096, column: 33, scope: !11527)
!11532 = !DILocation(line: 6096, column: 14, scope: !11519)
!11533 = !DILocation(line: 6097, column: 10, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11527, file: !4, line: 6096, column: 46)
!11535 = !DILocation(line: 6097, column: 17, scope: !11534)
!11536 = !DILocation(line: 6098, column: 24, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11534, file: !4, line: 6098, column: 13)
!11538 = !DILocation(line: 6098, column: 13, scope: !11537)
!11539 = !DILocation(line: 6098, column: 13, scope: !11534)
!11540 = !DILocation(line: 6099, column: 14, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11537, file: !4, line: 6098, column: 33)
!11542 = !DILocation(line: 6099, column: 21, scope: !11541)
!11543 = !DILocation(line: 6100, column: 9, scope: !11541)
!11544 = !DILocation(line: 6101, column: 5, scope: !11534)
!11545 = !DILocation(line: 6102, column: 1, scope: !1186)
!11546 = !DILocation(line: 6102, column: 1, scope: !11547)
!11547 = !DILexicalBlockFile(scope: !1186, file: !4, discriminator: 1)
!11548 = !DILocation(line: 6537, column: 17, scope: !1194)
!11549 = !DILocation(line: 6537, column: 38, scope: !1194)
!11550 = !DILocation(line: 6537, column: 57, scope: !1194)
!11551 = !DILocation(line: 6538, column: 31, scope: !1194)
!11552 = !DILocation(line: 6538, column: 46, scope: !1194)
!11553 = !DILocation(line: 6540, column: 5, scope: !1194)
!11554 = !DILocation(line: 6540, column: 13, scope: !1194)
!11555 = !DILocation(line: 6541, column: 5, scope: !1194)
!11556 = !DILocation(line: 6541, column: 9, scope: !1194)
!11557 = !DILocation(line: 6542, column: 5, scope: !1194)
!11558 = !DILocation(line: 6542, column: 9, scope: !1194)
!11559 = !DILocation(line: 6544, column: 23, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !1194, file: !4, line: 6544, column: 9)
!11561 = !DILocation(line: 6544, column: 9, scope: !11560)
!11562 = !DILocation(line: 6544, column: 29, scope: !11560)
!11563 = !DILocation(line: 6544, column: 46, scope: !11564)
!11564 = !DILexicalBlockFile(scope: !11560, file: !4, discriminator: 1)
!11565 = !DILocation(line: 6544, column: 32, scope: !11560)
!11566 = !DILocation(line: 6544, column: 9, scope: !1194)
!11567 = !DILocation(line: 6545, column: 29, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11569, file: !4, line: 6545, column: 13)
!11569 = distinct !DILexicalBlock(scope: !11560, file: !4, line: 6544, column: 52)
!11570 = !DILocation(line: 6545, column: 37, scope: !11568)
!11571 = !DILocation(line: 6545, column: 43, scope: !11568)
!11572 = !DILocation(line: 6545, column: 48, scope: !11568)
!11573 = !DILocation(line: 6545, column: 53, scope: !11568)
!11574 = !DILocation(line: 6545, column: 13, scope: !11568)
!11575 = !DILocation(line: 6545, column: 13, scope: !11569)
!11576 = !DILocation(line: 6546, column: 13, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11568, file: !4, line: 6545, column: 62)
!11578 = !DILocation(line: 6548, column: 5, scope: !11569)
!11579 = !DILocation(line: 6549, column: 23, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !1194, file: !4, line: 6549, column: 9)
!11581 = !DILocation(line: 6549, column: 9, scope: !11580)
!11582 = !DILocation(line: 6549, column: 9, scope: !1194)
!11583 = !DILocation(line: 6550, column: 16, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11580, file: !4, line: 6549, column: 29)
!11585 = !DILocation(line: 6551, column: 37, scope: !11584)
!11586 = !DILocation(line: 6551, column: 22, scope: !11584)
!11587 = !DILocation(line: 6551, column: 43, scope: !11584)
!11588 = !DILocation(line: 6551, column: 56, scope: !11589)
!11589 = !DILexicalBlockFile(scope: !11584, file: !4, discriminator: 1)
!11590 = !DILocation(line: 6551, column: 46, scope: !11584)
!11591 = !DILocation(line: 6551, column: 43, scope: !11592)
!11592 = !DILexicalBlockFile(scope: !11584, file: !4, discriminator: 2)
!11593 = !DILocation(line: 6551, column: 20, scope: !11584)
!11594 = !DILocation(line: 6552, column: 5, scope: !11584)
!11595 = !DILocation(line: 6554, column: 20, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !1194, file: !4, line: 6554, column: 9)
!11597 = !DILocation(line: 6554, column: 9, scope: !11596)
!11598 = !DILocation(line: 6554, column: 9, scope: !1194)
!11599 = !DILocation(line: 6555, column: 24, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11601, file: !4, line: 6555, column: 13)
!11601 = distinct !DILexicalBlock(scope: !11596, file: !4, line: 6554, column: 27)
!11602 = !DILocation(line: 6555, column: 13, scope: !11600)
!11603 = !DILocation(line: 6555, column: 13, scope: !11601)
!11604 = !DILocation(line: 6556, column: 26, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11600, file: !4, line: 6555, column: 30)
!11606 = !DILocation(line: 6556, column: 47, scope: !11605)
!11607 = !DILocation(line: 6556, column: 13, scope: !11605)
!11608 = !DILocation(line: 6557, column: 9, scope: !11605)
!11609 = !DILocation(line: 6558, column: 33, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11600, file: !4, line: 6558, column: 18)
!11611 = !DILocation(line: 6558, column: 18, scope: !11610)
!11612 = !DILocation(line: 6558, column: 18, scope: !11600)
!11613 = !DILocation(line: 6559, column: 28, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11610, file: !4, line: 6558, column: 39)
!11615 = !DILocation(line: 6559, column: 36, scope: !11614)
!11616 = !DILocation(line: 6559, column: 13, scope: !11614)
!11617 = !DILocation(line: 6560, column: 9, scope: !11614)
!11618 = !DILocation(line: 6562, column: 24, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11610, file: !4, line: 6561, column: 14)
!11620 = !DILocation(line: 6562, column: 32, scope: !11619)
!11621 = !DILocation(line: 6562, column: 13, scope: !11619)
!11622 = !DILocation(line: 6564, column: 9, scope: !11601)
!11623 = !DILocation(line: 6566, column: 24, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !1194, file: !4, line: 6566, column: 9)
!11625 = !DILocation(line: 6566, column: 9, scope: !11624)
!11626 = !DILocation(line: 6566, column: 9, scope: !1194)
!11627 = !DILocation(line: 6567, column: 14, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11629, file: !4, line: 6567, column: 13)
!11629 = distinct !DILexicalBlock(scope: !11624, file: !4, line: 6566, column: 31)
!11630 = !DILocation(line: 6567, column: 21, scope: !11628)
!11631 = !DILocation(line: 6567, column: 39, scope: !11632)
!11632 = !DILexicalBlockFile(scope: !11628, file: !4, discriminator: 1)
!11633 = !DILocation(line: 6567, column: 24, scope: !11628)
!11634 = !DILocation(line: 6567, column: 13, scope: !11629)
!11635 = !DILocation(line: 6568, column: 26, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11628, file: !4, line: 6567, column: 45)
!11637 = !DILocation(line: 6568, column: 47, scope: !11636)
!11638 = !DILocation(line: 6568, column: 13, scope: !11636)
!11639 = !DILocation(line: 6569, column: 13, scope: !11636)
!11640 = !DILocation(line: 6571, column: 5, scope: !11629)
!11641 = !DILocation(line: 6572, column: 24, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !1194, file: !4, line: 6572, column: 9)
!11643 = !DILocation(line: 6572, column: 9, scope: !11642)
!11644 = !DILocation(line: 6572, column: 9, scope: !1194)
!11645 = !DILocation(line: 6574, column: 35, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11642, file: !4, line: 6572, column: 30)
!11647 = !DILocation(line: 6574, column: 43, scope: !11646)
!11648 = !DILocation(line: 6574, column: 49, scope: !11646)
!11649 = !DILocation(line: 6574, column: 61, scope: !11646)
!11650 = !DILocation(line: 6574, column: 66, scope: !11646)
!11651 = !DILocation(line: 6574, column: 15, scope: !11646)
!11652 = !DILocation(line: 6574, column: 13, scope: !11646)
!11653 = !DILocation(line: 6575, column: 13, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11646, file: !4, line: 6575, column: 13)
!11655 = !DILocation(line: 6575, column: 17, scope: !11654)
!11656 = !DILocation(line: 6575, column: 13, scope: !11646)
!11657 = !DILocation(line: 6576, column: 13, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11654, file: !4, line: 6575, column: 23)
!11659 = !DILocation(line: 6579, column: 35, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11654, file: !4, line: 6578, column: 14)
!11661 = !DILocation(line: 6579, column: 20, scope: !11660)
!11662 = !DILocation(line: 6579, column: 17, scope: !11660)
!11663 = !DILocation(line: 6580, column: 17, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11660, file: !4, line: 6580, column: 17)
!11665 = !DILocation(line: 6580, column: 21, scope: !11664)
!11666 = !DILocation(line: 6580, column: 17, scope: !11660)
!11667 = !DILocation(line: 6581, column: 28, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11664, file: !4, line: 6580, column: 26)
!11669 = !DILocation(line: 6581, column: 36, scope: !11668)
!11670 = !DILocation(line: 6581, column: 17, scope: !11668)
!11671 = !DILocation(line: 6582, column: 13, scope: !11668)
!11672 = !DILocation(line: 6584, column: 32, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11664, file: !4, line: 6583, column: 18)
!11674 = !DILocation(line: 6584, column: 40, scope: !11673)
!11675 = !DILocation(line: 6584, column: 17, scope: !11673)
!11676 = !DILocation(line: 6587, column: 9, scope: !11646)
!11677 = !DILocation(line: 6589, column: 24, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !1194, file: !4, line: 6589, column: 9)
!11679 = !DILocation(line: 6589, column: 9, scope: !11678)
!11680 = !DILocation(line: 6589, column: 9, scope: !1194)
!11681 = !DILocation(line: 6590, column: 24, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11683, file: !4, line: 6590, column: 13)
!11683 = distinct !DILexicalBlock(scope: !11678, file: !4, line: 6589, column: 31)
!11684 = !DILocation(line: 6590, column: 13, scope: !11682)
!11685 = !DILocation(line: 6590, column: 13, scope: !11683)
!11686 = !DILocation(line: 6591, column: 24, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11682, file: !4, line: 6590, column: 30)
!11688 = !DILocation(line: 6591, column: 32, scope: !11687)
!11689 = !DILocation(line: 6591, column: 13, scope: !11687)
!11690 = !DILocation(line: 6592, column: 9, scope: !11687)
!11691 = !DILocation(line: 6593, column: 33, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11682, file: !4, line: 6593, column: 18)
!11693 = !DILocation(line: 6593, column: 18, scope: !11692)
!11694 = !DILocation(line: 6593, column: 18, scope: !11682)
!11695 = !DILocation(line: 6594, column: 24, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11692, file: !4, line: 6593, column: 39)
!11697 = !DILocation(line: 6594, column: 32, scope: !11696)
!11698 = !DILocation(line: 6594, column: 13, scope: !11696)
!11699 = !DILocation(line: 6595, column: 9, scope: !11696)
!11700 = !DILocation(line: 6597, column: 28, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11692, file: !4, line: 6596, column: 14)
!11702 = !DILocation(line: 6597, column: 36, scope: !11701)
!11703 = !DILocation(line: 6597, column: 13, scope: !11701)
!11704 = !DILocation(line: 6599, column: 9, scope: !11683)
!11705 = !DILocation(line: 6601, column: 20, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !1194, file: !4, line: 6601, column: 9)
!11707 = !DILocation(line: 6601, column: 9, scope: !11706)
!11708 = !DILocation(line: 6601, column: 9, scope: !1194)
!11709 = !DILocation(line: 6602, column: 20, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11706, file: !4, line: 6601, column: 26)
!11711 = !DILocation(line: 6602, column: 28, scope: !11710)
!11712 = !DILocation(line: 6602, column: 9, scope: !11710)
!11713 = !DILocation(line: 6603, column: 9, scope: !11710)
!11714 = !DILocation(line: 6605, column: 25, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !1194, file: !4, line: 6605, column: 9)
!11716 = !DILocation(line: 6605, column: 33, scope: !11715)
!11717 = !DILocation(line: 6605, column: 39, scope: !11715)
!11718 = !DILocation(line: 6605, column: 44, scope: !11715)
!11719 = !DILocation(line: 6605, column: 56, scope: !11715)
!11720 = !DILocation(line: 6605, column: 61, scope: !11715)
!11721 = !DILocation(line: 6605, column: 9, scope: !11715)
!11722 = !DILocation(line: 6605, column: 69, scope: !11715)
!11723 = !DILocation(line: 6605, column: 9, scope: !1194)
!11724 = !DILocation(line: 6606, column: 9, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11715, file: !4, line: 6605, column: 75)
!11726 = !DILocation(line: 6608, column: 28, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !1194, file: !4, line: 6608, column: 9)
!11728 = !DILocation(line: 6608, column: 36, scope: !11727)
!11729 = !DILocation(line: 6608, column: 42, scope: !11727)
!11730 = !DILocation(line: 6608, column: 47, scope: !11727)
!11731 = !DILocation(line: 6608, column: 59, scope: !11727)
!11732 = !DILocation(line: 6608, column: 64, scope: !11727)
!11733 = !DILocation(line: 6608, column: 9, scope: !11727)
!11734 = !DILocation(line: 6608, column: 9, scope: !1194)
!11735 = !DILocation(line: 6609, column: 9, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11727, file: !4, line: 6608, column: 73)
!11737 = !DILocation(line: 6612, column: 9, scope: !1208)
!11738 = !DILocation(line: 6612, column: 9, scope: !1194)
!11739 = !DILocation(line: 6613, column: 23, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !1208, file: !4, line: 6612, column: 17)
!11741 = !DILocation(line: 6613, column: 31, scope: !11740)
!11742 = !DILocation(line: 6613, column: 37, scope: !11740)
!11743 = !DILocation(line: 6613, column: 42, scope: !11740)
!11744 = !DILocation(line: 6613, column: 54, scope: !11740)
!11745 = !DILocation(line: 6613, column: 59, scope: !11740)
!11746 = !DILocation(line: 6613, column: 9, scope: !11740)
!11747 = !DILocation(line: 6614, column: 5, scope: !11740)
!11748 = !DILocation(line: 6616, column: 24, scope: !1207)
!11749 = !DILocation(line: 6616, column: 32, scope: !1207)
!11750 = !DILocation(line: 6616, column: 38, scope: !1207)
!11751 = !DILocation(line: 6616, column: 43, scope: !1207)
!11752 = !DILocation(line: 6616, column: 48, scope: !1207)
!11753 = !DILocation(line: 6616, column: 9, scope: !1207)
!11754 = !DILocation(line: 6617, column: 28, scope: !1206)
!11755 = !DILocation(line: 6617, column: 14, scope: !1206)
!11756 = !DILocation(line: 6617, column: 36, scope: !1206)
!11757 = !DILocation(line: 6617, column: 48, scope: !11758)
!11758 = !DILexicalBlockFile(scope: !1206, file: !4, discriminator: 1)
!11759 = !DILocation(line: 6617, column: 39, scope: !1206)
!11760 = !DILocation(line: 6617, column: 62, scope: !1206)
!11761 = !DILocation(line: 6617, column: 13, scope: !1207)
!11762 = !DILocation(line: 6618, column: 13, scope: !1205)
!11763 = !DILocation(line: 6618, column: 25, scope: !1205)
!11764 = !DILocation(line: 6618, column: 33, scope: !1205)
!11765 = !DILocation(line: 6618, column: 38, scope: !1205)
!11766 = !DILocation(line: 6618, column: 42, scope: !1205)
!11767 = !DILocation(line: 6619, column: 25, scope: !1205)
!11768 = !DILocation(line: 6619, column: 39, scope: !1205)
!11769 = !DILocation(line: 6619, column: 46, scope: !1205)
!11770 = !DILocation(line: 6619, column: 13, scope: !1205)
!11771 = !DILocation(line: 6620, column: 28, scope: !1205)
!11772 = !DILocation(line: 6620, column: 27, scope: !1205)
!11773 = !DILocation(line: 6620, column: 13, scope: !1205)
!11774 = !DILocation(line: 6620, column: 21, scope: !1205)
!11775 = !DILocation(line: 6620, column: 25, scope: !1205)
!11776 = !DILocation(line: 6621, column: 9, scope: !1206)
!11777 = !DILocation(line: 6621, column: 9, scope: !1205)
!11778 = !DILocation(line: 6622, column: 28, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !1207, file: !4, line: 6622, column: 13)
!11780 = !DILocation(line: 6622, column: 13, scope: !11779)
!11781 = !DILocation(line: 6622, column: 13, scope: !1207)
!11782 = !DILocation(line: 6624, column: 24, scope: !11783)
!11783 = distinct !DILexicalBlock(scope: !11779, file: !4, line: 6622, column: 37)
!11784 = !DILocation(line: 6624, column: 13, scope: !11783)
!11785 = !DILocation(line: 6625, column: 9, scope: !11783)
!11786 = !DILocation(line: 6626, column: 23, scope: !1207)
!11787 = !DILocation(line: 6626, column: 31, scope: !1207)
!11788 = !DILocation(line: 6626, column: 36, scope: !1207)
!11789 = !DILocation(line: 6626, column: 9, scope: !1207)
!11790 = !DILocation(line: 6628, column: 1, scope: !1194)
!11791 = !DILocation(line: 6628, column: 1, scope: !11792)
!11792 = !DILexicalBlockFile(scope: !1194, file: !4, discriminator: 1)
!11793 = !DILocation(line: 6253, column: 28, scope: !2088)
!11794 = !DILocation(line: 6253, column: 49, scope: !2088)
!11795 = !DILocation(line: 6253, column: 63, scope: !2088)
!11796 = !DILocation(line: 6254, column: 42, scope: !2088)
!11797 = !DILocation(line: 6254, column: 57, scope: !2088)
!11798 = !DILocation(line: 6256, column: 5, scope: !2088)
!11799 = !DILocation(line: 6256, column: 17, scope: !2088)
!11800 = !DILocation(line: 6257, column: 5, scope: !2088)
!11801 = !DILocation(line: 6257, column: 9, scope: !2088)
!11802 = !DILocation(line: 6259, column: 25, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !2088, file: !4, line: 6259, column: 9)
!11804 = !DILocation(line: 6259, column: 16, scope: !11803)
!11805 = !DILocation(line: 6259, column: 14, scope: !11803)
!11806 = !DILocation(line: 6259, column: 38, scope: !11803)
!11807 = !DILocation(line: 6259, column: 9, scope: !2088)
!11808 = !DILocation(line: 6260, column: 17, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11803, file: !4, line: 6259, column: 44)
!11810 = !DILocation(line: 6260, column: 22, scope: !11809)
!11811 = !DILocation(line: 6260, column: 26, scope: !11809)
!11812 = !DILocation(line: 6260, column: 15, scope: !11809)
!11813 = !DILocation(line: 6261, column: 21, scope: !11809)
!11814 = !DILocation(line: 6261, column: 35, scope: !11809)
!11815 = !DILocation(line: 6261, column: 42, scope: !11809)
!11816 = !DILocation(line: 6261, column: 9, scope: !11809)
!11817 = !DILocation(line: 6262, column: 24, scope: !11809)
!11818 = !DILocation(line: 6262, column: 23, scope: !11809)
!11819 = !DILocation(line: 6262, column: 9, scope: !11809)
!11820 = !DILocation(line: 6262, column: 17, scope: !11809)
!11821 = !DILocation(line: 6262, column: 21, scope: !11809)
!11822 = !DILocation(line: 6263, column: 23, scope: !11809)
!11823 = !DILocation(line: 6263, column: 31, scope: !11809)
!11824 = !DILocation(line: 6263, column: 9, scope: !11809)
!11825 = !DILocation(line: 6264, column: 10, scope: !11809)
!11826 = !DILocation(line: 6264, column: 17, scope: !11809)
!11827 = !DILocation(line: 6265, column: 5, scope: !11809)
!11828 = !DILocation(line: 6267, column: 12, scope: !2088)
!11829 = !DILocation(line: 6268, column: 1, scope: !2088)
!11830 = !DILocation(line: 6267, column: 5, scope: !2088)
!11831 = !DILocation(line: 6278, column: 24, scope: !2099)
!11832 = !DILocation(line: 6278, column: 45, scope: !2099)
!11833 = !DILocation(line: 6278, column: 64, scope: !2099)
!11834 = !DILocation(line: 6279, column: 25, scope: !2099)
!11835 = !DILocation(line: 6280, column: 38, scope: !2099)
!11836 = !DILocation(line: 6280, column: 53, scope: !2099)
!11837 = !DILocation(line: 6282, column: 5, scope: !2099)
!11838 = !DILocation(line: 6282, column: 14, scope: !2099)
!11839 = !DILocation(line: 6283, column: 5, scope: !2099)
!11840 = !DILocation(line: 6283, column: 17, scope: !2099)
!11841 = !DILocation(line: 6284, column: 5, scope: !2099)
!11842 = !DILocation(line: 6284, column: 9, scope: !2099)
!11843 = !DILocation(line: 6286, column: 29, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !2099, file: !4, line: 6286, column: 9)
!11845 = !DILocation(line: 6286, column: 16, scope: !11844)
!11846 = !DILocation(line: 6286, column: 14, scope: !11844)
!11847 = !DILocation(line: 6286, column: 42, scope: !11844)
!11848 = !DILocation(line: 6286, column: 9, scope: !2099)
!11849 = !DILocation(line: 6287, column: 24, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11851, file: !4, line: 6287, column: 13)
!11851 = distinct !DILexicalBlock(scope: !11844, file: !4, line: 6286, column: 48)
!11852 = !DILocation(line: 6287, column: 13, scope: !11850)
!11853 = !DILocation(line: 6287, column: 13, scope: !11851)
!11854 = !DILocation(line: 6288, column: 32, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11856, file: !4, line: 6288, column: 17)
!11856 = distinct !DILexicalBlock(scope: !11850, file: !4, line: 6287, column: 30)
!11857 = !DILocation(line: 6288, column: 17, scope: !11855)
!11858 = !DILocation(line: 6288, column: 17, scope: !11856)
!11859 = !DILocation(line: 6289, column: 28, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11855, file: !4, line: 6288, column: 38)
!11861 = !DILocation(line: 6289, column: 36, scope: !11860)
!11862 = !DILocation(line: 6289, column: 17, scope: !11860)
!11863 = !DILocation(line: 6290, column: 17, scope: !11860)
!11864 = !DILocation(line: 6293, column: 28, scope: !11856)
!11865 = !DILocation(line: 6293, column: 36, scope: !11856)
!11866 = !DILocation(line: 6293, column: 42, scope: !11856)
!11867 = !DILocation(line: 6293, column: 48, scope: !11856)
!11868 = !DILocation(line: 6293, column: 41, scope: !11856)
!11869 = !DILocation(line: 6293, column: 53, scope: !11856)
!11870 = !DILocation(line: 6293, column: 13, scope: !11856)
!11871 = !DILocation(line: 6294, column: 17, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11856, file: !4, line: 6294, column: 17)
!11873 = !DILocation(line: 6294, column: 27, scope: !11872)
!11874 = !DILocation(line: 6294, column: 17, scope: !11856)
!11875 = !DILocation(line: 6295, column: 29, scope: !11876)
!11876 = distinct !DILexicalBlock(scope: !11872, file: !4, line: 6294, column: 143)
!11877 = !DILocation(line: 6295, column: 39, scope: !11876)
!11878 = !DILocation(line: 6295, column: 18, scope: !11876)
!11879 = !DILocation(line: 6295, column: 25, scope: !11876)
!11880 = !DILocation(line: 6296, column: 17, scope: !11876)
!11881 = !DILocation(line: 6299, column: 36, scope: !11856)
!11882 = !DILocation(line: 6299, column: 21, scope: !11856)
!11883 = !DILocation(line: 6299, column: 19, scope: !11856)
!11884 = !DILocation(line: 6301, column: 17, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11856, file: !4, line: 6301, column: 17)
!11886 = !DILocation(line: 6301, column: 25, scope: !11885)
!11887 = !DILocation(line: 6301, column: 30, scope: !11885)
!11888 = !DILocation(line: 6301, column: 34, scope: !11885)
!11889 = !DILocation(line: 6301, column: 23, scope: !11885)
!11890 = !DILocation(line: 6301, column: 17, scope: !11856)
!11891 = !DILocation(line: 6302, column: 25, scope: !11892)
!11892 = distinct !DILexicalBlock(scope: !11885, file: !4, line: 6301, column: 38)
!11893 = !DILocation(line: 6302, column: 30, scope: !11892)
!11894 = !DILocation(line: 6302, column: 34, scope: !11892)
!11895 = !DILocation(line: 6302, column: 23, scope: !11892)
!11896 = !DILocation(line: 6303, column: 18, scope: !11892)
!11897 = !DILocation(line: 6303, column: 25, scope: !11892)
!11898 = !DILocation(line: 6304, column: 13, scope: !11892)
!11899 = !DILocation(line: 6305, column: 9, scope: !11856)
!11900 = !DILocation(line: 6306, column: 33, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11850, file: !4, line: 6306, column: 18)
!11902 = !DILocation(line: 6306, column: 18, scope: !11901)
!11903 = !DILocation(line: 6306, column: 18, scope: !11850)
!11904 = !DILocation(line: 6307, column: 21, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11901, file: !4, line: 6306, column: 40)
!11906 = !DILocation(line: 6307, column: 26, scope: !11905)
!11907 = !DILocation(line: 6307, column: 30, scope: !11905)
!11908 = !DILocation(line: 6307, column: 19, scope: !11905)
!11909 = !DILocation(line: 6308, column: 14, scope: !11905)
!11910 = !DILocation(line: 6308, column: 21, scope: !11905)
!11911 = !DILocation(line: 6309, column: 9, scope: !11905)
!11912 = !DILocation(line: 6311, column: 13, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11901, file: !4, line: 6310, column: 14)
!11914 = !DILocation(line: 6313, column: 26, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11851, file: !4, line: 6313, column: 13)
!11916 = !DILocation(line: 6313, column: 40, scope: !11915)
!11917 = !DILocation(line: 6313, column: 47, scope: !11915)
!11918 = !DILocation(line: 6313, column: 14, scope: !11915)
!11919 = !DILocation(line: 6313, column: 13, scope: !11851)
!11920 = !DILocation(line: 6314, column: 13, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11915, file: !4, line: 6313, column: 56)
!11922 = !DILocation(line: 6316, column: 24, scope: !11851)
!11923 = !DILocation(line: 6316, column: 23, scope: !11851)
!11924 = !DILocation(line: 6316, column: 9, scope: !11851)
!11925 = !DILocation(line: 6316, column: 17, scope: !11851)
!11926 = !DILocation(line: 6316, column: 21, scope: !11851)
!11927 = !DILocation(line: 6317, column: 23, scope: !11851)
!11928 = !DILocation(line: 6317, column: 31, scope: !11851)
!11929 = !DILocation(line: 6317, column: 9, scope: !11851)
!11930 = !DILocation(line: 6318, column: 5, scope: !11851)
!11931 = !DILocation(line: 6320, column: 12, scope: !2099)
!11932 = !DILocation(line: 6320, column: 5, scope: !2099)
!11933 = !DILocation(line: 6321, column: 1, scope: !2099)
!11934 = !DILocation(line: 6426, column: 27, scope: !2112)
!11935 = !DILocation(line: 6426, column: 48, scope: !2112)
!11936 = !DILocation(line: 6426, column: 64, scope: !2112)
!11937 = !DILocation(line: 6427, column: 28, scope: !2112)
!11938 = !DILocation(line: 6428, column: 41, scope: !2112)
!11939 = !DILocation(line: 6428, column: 56, scope: !2112)
!11940 = !DILocation(line: 6430, column: 5, scope: !2112)
!11941 = !DILocation(line: 6430, column: 11, scope: !2112)
!11942 = !DILocation(line: 6430, column: 19, scope: !2112)
!11943 = !DILocation(line: 6430, column: 21, scope: !2112)
!11944 = !DILocation(line: 6430, column: 24, scope: !2112)
!11945 = !DILocation(line: 6430, column: 29, scope: !2112)
!11946 = !DILocation(line: 6430, column: 76, scope: !2112)
!11947 = !DILocation(line: 6430, column: 90, scope: !2112)
!11948 = !DILocation(line: 6430, column: 20, scope: !2112)
!11949 = !DILocation(line: 6430, column: 106, scope: !2112)
!11950 = !DILocation(line: 6430, column: 109, scope: !2112)
!11951 = !DILocation(line: 6430, column: 114, scope: !2112)
!11952 = !DILocation(line: 6430, column: 117, scope: !2112)
!11953 = !DILocation(line: 6430, column: 125, scope: !2112)
!11954 = !DILocation(line: 6430, column: 128, scope: !2112)
!11955 = !DILocation(line: 6430, column: 133, scope: !2112)
!11956 = !DILocation(line: 6430, column: 136, scope: !2112)
!11957 = !DILocation(line: 6430, column: 143, scope: !2112)
!11958 = !DILocation(line: 6430, column: 146, scope: !2112)
!11959 = !DILocation(line: 6431, column: 5, scope: !2112)
!11960 = !DILocation(line: 6431, column: 17, scope: !2112)
!11961 = !DILocation(line: 6431, column: 27, scope: !2112)
!11962 = !DILocation(line: 6431, column: 36, scope: !2112)
!11963 = !DILocation(line: 6432, column: 5, scope: !2112)
!11964 = !DILocation(line: 6432, column: 13, scope: !2112)
!11965 = !DILocation(line: 6434, column: 5, scope: !2112)
!11966 = !DILocation(line: 6436, column: 27, scope: !2112)
!11967 = !DILocation(line: 6436, column: 16, scope: !2112)
!11968 = !DILocation(line: 6436, column: 14, scope: !2112)
!11969 = !DILocation(line: 6437, column: 41, scope: !2112)
!11970 = !DILocation(line: 6437, column: 15, scope: !2112)
!11971 = !DILocation(line: 6437, column: 13, scope: !2112)
!11972 = !DILocation(line: 6438, column: 9, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !2112, file: !4, line: 6438, column: 9)
!11974 = !DILocation(line: 6438, column: 17, scope: !11973)
!11975 = !DILocation(line: 6438, column: 9, scope: !2112)
!11976 = !DILocation(line: 6439, column: 22, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11973, file: !4, line: 6438, column: 44)
!11978 = !DILocation(line: 6439, column: 43, scope: !11977)
!11979 = !DILocation(line: 6439, column: 9, scope: !11977)
!11980 = !DILocation(line: 6440, column: 9, scope: !11977)
!11981 = !DILocation(line: 6443, column: 13, scope: !2112)
!11982 = !DILocation(line: 6443, column: 32, scope: !2112)
!11983 = !DILocation(line: 6443, column: 48, scope: !2112)
!11984 = !DILocation(line: 6443, column: 39, scope: !2112)
!11985 = !DILocation(line: 6443, column: 37, scope: !2112)
!11986 = !DILocation(line: 6443, column: 12, scope: !2112)
!11987 = !DILocation(line: 6443, column: 10, scope: !2112)
!11988 = !DILocation(line: 6444, column: 9, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !2112, file: !4, line: 6444, column: 9)
!11990 = !DILocation(line: 6444, column: 14, scope: !11989)
!11991 = !DILocation(line: 6444, column: 9, scope: !2112)
!11992 = !DILocation(line: 6446, column: 35, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11989, file: !4, line: 6444, column: 20)
!11994 = !DILocation(line: 6446, column: 40, scope: !11993)
!11995 = !DILocation(line: 6446, column: 20, scope: !11993)
!11996 = !DILocation(line: 6446, column: 18, scope: !11993)
!11997 = !DILocation(line: 6447, column: 13, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11993, file: !4, line: 6447, column: 13)
!11999 = !DILocation(line: 6447, column: 24, scope: !11998)
!12000 = !DILocation(line: 6447, column: 34, scope: !11998)
!12001 = !DILocation(line: 6447, column: 32, scope: !11998)
!12002 = !DILocation(line: 6447, column: 22, scope: !11998)
!12003 = !DILocation(line: 6447, column: 13, scope: !11993)
!12004 = !DILocation(line: 6448, column: 24, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !11998, file: !4, line: 6447, column: 44)
!12006 = !DILocation(line: 6448, column: 32, scope: !12005)
!12007 = !DILocation(line: 6448, column: 13, scope: !12005)
!12008 = !DILocation(line: 6449, column: 27, scope: !12005)
!12009 = !DILocation(line: 6449, column: 35, scope: !12005)
!12010 = !DILocation(line: 6449, column: 40, scope: !12005)
!12011 = !DILocation(line: 6449, column: 13, scope: !12005)
!12012 = !DILocation(line: 6450, column: 13, scope: !12005)
!12013 = !DILocation(line: 6452, column: 5, scope: !11993)
!12014 = !DILocation(line: 6455, column: 45, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !11989, file: !4, line: 6453, column: 10)
!12016 = !DILocation(line: 6455, column: 35, scope: !12015)
!12017 = !DILocation(line: 6455, column: 20, scope: !12015)
!12018 = !DILocation(line: 6455, column: 18, scope: !12015)
!12019 = !DILocation(line: 6456, column: 13, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12015, file: !4, line: 6456, column: 13)
!12021 = !DILocation(line: 6456, column: 24, scope: !12020)
!12022 = !DILocation(line: 6456, column: 34, scope: !12020)
!12023 = !DILocation(line: 6456, column: 32, scope: !12020)
!12024 = !DILocation(line: 6456, column: 22, scope: !12020)
!12025 = !DILocation(line: 6456, column: 13, scope: !12015)
!12026 = !DILocation(line: 6457, column: 24, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12020, file: !4, line: 6456, column: 44)
!12028 = !DILocation(line: 6457, column: 32, scope: !12027)
!12029 = !DILocation(line: 6457, column: 57, scope: !12027)
!12030 = !DILocation(line: 6457, column: 47, scope: !12027)
!12031 = !DILocation(line: 6457, column: 61, scope: !12027)
!12032 = !DILocation(line: 6457, column: 13, scope: !12027)
!12033 = !DILocation(line: 6458, column: 27, scope: !12027)
!12034 = !DILocation(line: 6458, column: 35, scope: !12027)
!12035 = !DILocation(line: 6458, column: 40, scope: !12027)
!12036 = !DILocation(line: 6458, column: 13, scope: !12027)
!12037 = !DILocation(line: 6459, column: 13, scope: !12027)
!12038 = !DILocation(line: 6463, column: 5, scope: !2112)
!12039 = !DILocation(line: 6464, column: 1, scope: !2112)
!12040 = !DILocation(line: 6195, column: 22, scope: !2134)
!12041 = !DILocation(line: 6195, column: 43, scope: !2134)
!12042 = !DILocation(line: 6195, column: 62, scope: !2134)
!12043 = !DILocation(line: 6196, column: 23, scope: !2134)
!12044 = !DILocation(line: 6197, column: 36, scope: !2134)
!12045 = !DILocation(line: 6197, column: 51, scope: !2134)
!12046 = !DILocation(line: 6199, column: 5, scope: !2134)
!12047 = !DILocation(line: 6199, column: 19, scope: !2134)
!12048 = !DILocation(line: 6200, column: 5, scope: !2134)
!12049 = !DILocation(line: 6200, column: 16, scope: !2134)
!12050 = !DILocation(line: 6200, column: 32, scope: !2134)
!12051 = !DILocation(line: 6200, column: 38, scope: !2134)
!12052 = !DILocation(line: 6200, column: 46, scope: !2134)
!12053 = !DILocation(line: 6200, column: 91, scope: !2134)
!12054 = !DILocation(line: 6201, column: 5, scope: !2134)
!12055 = !DILocation(line: 6201, column: 16, scope: !2134)
!12056 = !DILocation(line: 6201, column: 31, scope: !2134)
!12057 = !DILocation(line: 6201, column: 37, scope: !2134)
!12058 = !DILocation(line: 6201, column: 44, scope: !2134)
!12059 = !DILocation(line: 6201, column: 89, scope: !2134)
!12060 = !DILocation(line: 6202, column: 5, scope: !2134)
!12061 = !DILocation(line: 6202, column: 17, scope: !2134)
!12062 = !DILocation(line: 6205, column: 31, scope: !2134)
!12063 = !DILocation(line: 6205, column: 5, scope: !2134)
!12064 = !DILocation(line: 6206, column: 22, scope: !2134)
!12065 = !DILocation(line: 6206, column: 27, scope: !2134)
!12066 = !DILocation(line: 6206, column: 36, scope: !2134)
!12067 = !DILocation(line: 6206, column: 41, scope: !2134)
!12068 = !DILocation(line: 6206, column: 34, scope: !2134)
!12069 = !DILocation(line: 6206, column: 45, scope: !2134)
!12070 = !DILocation(line: 6206, column: 13, scope: !2134)
!12071 = !DILocation(line: 6206, column: 18, scope: !2134)
!12072 = !DILocation(line: 6207, column: 13, scope: !2134)
!12073 = !DILocation(line: 6207, column: 19, scope: !2134)
!12074 = !DILocation(line: 6208, column: 13, scope: !2134)
!12075 = !DILocation(line: 6208, column: 19, scope: !2134)
!12076 = !DILocation(line: 6209, column: 24, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !2134, file: !4, line: 6209, column: 9)
!12078 = !DILocation(line: 6209, column: 9, scope: !12077)
!12079 = !DILocation(line: 6209, column: 9, scope: !2134)
!12080 = !DILocation(line: 6210, column: 17, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12077, file: !4, line: 6209, column: 30)
!12082 = !DILocation(line: 6210, column: 22, scope: !12081)
!12083 = !DILocation(line: 6211, column: 32, scope: !12081)
!12084 = !DILocation(line: 6211, column: 48, scope: !12081)
!12085 = !DILocation(line: 6211, column: 9, scope: !12081)
!12086 = !DILocation(line: 6212, column: 14, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12081, file: !4, line: 6212, column: 13)
!12088 = !DILocation(line: 6212, column: 13, scope: !12087)
!12089 = !DILocation(line: 6212, column: 20, scope: !12087)
!12090 = !DILocation(line: 6212, column: 13, scope: !12081)
!12091 = !DILocation(line: 6213, column: 28, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12087, file: !4, line: 6212, column: 136)
!12093 = !DILocation(line: 6213, column: 13, scope: !12092)
!12094 = !DILocation(line: 6214, column: 13, scope: !12092)
!12095 = !DILocation(line: 6216, column: 5, scope: !12081)
!12096 = !DILocation(line: 6218, column: 32, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12098, file: !4, line: 6218, column: 13)
!12098 = distinct !DILexicalBlock(scope: !12077, file: !4, line: 6217, column: 10)
!12099 = !DILocation(line: 6218, column: 38, scope: !12097)
!12100 = !DILocation(line: 6218, column: 14, scope: !12097)
!12101 = !DILocation(line: 6218, column: 13, scope: !12098)
!12102 = !DILocation(line: 6219, column: 28, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12097, file: !4, line: 6218, column: 47)
!12104 = !DILocation(line: 6219, column: 13, scope: !12103)
!12105 = !DILocation(line: 6220, column: 13, scope: !12103)
!12106 = !DILocation(line: 6224, column: 23, scope: !2134)
!12107 = !DILocation(line: 6224, column: 37, scope: !2134)
!12108 = !DILocation(line: 6224, column: 9, scope: !2134)
!12109 = !DILocation(line: 6224, column: 7, scope: !2134)
!12110 = !DILocation(line: 6225, column: 17, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !2134, file: !4, line: 6225, column: 9)
!12112 = !DILocation(line: 6225, column: 23, scope: !12111)
!12113 = !DILocation(line: 6225, column: 9, scope: !2134)
!12114 = !DILocation(line: 6226, column: 31, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12116, file: !4, line: 6226, column: 13)
!12116 = distinct !DILexicalBlock(scope: !12111, file: !4, line: 6225, column: 37)
!12117 = !DILocation(line: 6226, column: 36, scope: !12115)
!12118 = !DILocation(line: 6226, column: 14, scope: !12115)
!12119 = !DILocation(line: 6226, column: 13, scope: !12116)
!12120 = !DILocation(line: 6227, column: 28, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12115, file: !4, line: 6226, column: 45)
!12122 = !DILocation(line: 6227, column: 13, scope: !12121)
!12123 = !DILocation(line: 6228, column: 13, scope: !12121)
!12124 = !DILocation(line: 6230, column: 23, scope: !12116)
!12125 = !DILocation(line: 6230, column: 46, scope: !12116)
!12126 = !DILocation(line: 6230, column: 68, scope: !12116)
!12127 = !DILocation(line: 6230, column: 9, scope: !12116)
!12128 = !DILocation(line: 6231, column: 5, scope: !12116)
!12129 = !DILocation(line: 6233, column: 24, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12111, file: !4, line: 6232, column: 10)
!12131 = !DILocation(line: 6233, column: 40, scope: !12130)
!12132 = !DILocation(line: 6233, column: 43, scope: !12130)
!12133 = !DILocation(line: 6233, column: 65, scope: !12130)
!12134 = !DILocation(line: 6233, column: 9, scope: !12130)
!12135 = !DILocation(line: 6236, column: 24, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !2134, file: !4, line: 6236, column: 9)
!12137 = !DILocation(line: 6236, column: 9, scope: !12136)
!12138 = !DILocation(line: 6236, column: 9, scope: !2134)
!12139 = !DILocation(line: 6238, column: 20, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12136, file: !4, line: 6236, column: 33)
!12141 = !DILocation(line: 6238, column: 28, scope: !12140)
!12142 = !DILocation(line: 6238, column: 9, scope: !12140)
!12143 = !DILocation(line: 6239, column: 5, scope: !12140)
!12144 = !DILocation(line: 6236, column: 30, scope: !12145)
!12145 = !DILexicalBlockFile(scope: !12136, file: !4, discriminator: 1)
!12146 = !DILocation(line: 6242, column: 5, scope: !2134)
!12147 = !DILocation(line: 6243, column: 5, scope: !2134)
!12148 = !DILocation(line: 6244, column: 19, scope: !2134)
!12149 = !DILocation(line: 6244, column: 27, scope: !2134)
!12150 = !DILocation(line: 6244, column: 32, scope: !2134)
!12151 = !DILocation(line: 6244, column: 5, scope: !2134)
!12152 = !DILocation(line: 6245, column: 1, scope: !2134)
!12153 = !DILocation(line: 6485, column: 23, scope: !2162)
!12154 = !DILocation(line: 6485, column: 44, scope: !2162)
!12155 = !DILocation(line: 6485, column: 63, scope: !2162)
!12156 = !DILocation(line: 6486, column: 37, scope: !2162)
!12157 = !DILocation(line: 6486, column: 52, scope: !2162)
!12158 = !DILocation(line: 6488, column: 5, scope: !2162)
!12159 = !DILocation(line: 6488, column: 19, scope: !2162)
!12160 = !DILocation(line: 6489, column: 5, scope: !2162)
!12161 = !DILocation(line: 6489, column: 16, scope: !2162)
!12162 = !DILocation(line: 6489, column: 31, scope: !2162)
!12163 = !DILocation(line: 6489, column: 37, scope: !2162)
!12164 = !DILocation(line: 6489, column: 44, scope: !2162)
!12165 = !DILocation(line: 6489, column: 89, scope: !2162)
!12166 = !DILocation(line: 6491, column: 27, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !2162, file: !4, line: 6491, column: 9)
!12168 = !DILocation(line: 6491, column: 32, scope: !12167)
!12169 = !DILocation(line: 6491, column: 10, scope: !12167)
!12170 = !DILocation(line: 6491, column: 9, scope: !2162)
!12171 = !DILocation(line: 6492, column: 22, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12167, file: !4, line: 6491, column: 41)
!12173 = !DILocation(line: 6492, column: 43, scope: !12172)
!12174 = !DILocation(line: 6492, column: 9, scope: !12172)
!12175 = !DILocation(line: 6493, column: 9, scope: !12172)
!12176 = !DILocation(line: 6496, column: 5, scope: !2162)
!12177 = !DILocation(line: 6497, column: 21, scope: !2162)
!12178 = !DILocation(line: 6497, column: 27, scope: !2162)
!12179 = !DILocation(line: 6497, column: 36, scope: !2162)
!12180 = !DILocation(line: 6497, column: 41, scope: !2162)
!12181 = !DILocation(line: 6497, column: 34, scope: !2162)
!12182 = !DILocation(line: 6497, column: 20, scope: !2162)
!12183 = !DILocation(line: 6497, column: 49, scope: !12184)
!12184 = !DILexicalBlockFile(scope: !2162, file: !4, discriminator: 1)
!12185 = !DILocation(line: 6497, column: 55, scope: !2162)
!12186 = !DILocation(line: 6497, column: 64, scope: !12187)
!12187 = !DILexicalBlockFile(scope: !2162, file: !4, discriminator: 2)
!12188 = !DILocation(line: 6497, column: 69, scope: !2162)
!12189 = !DILocation(line: 6497, column: 13, scope: !12190)
!12190 = !DILexicalBlockFile(scope: !12191, file: !4, discriminator: 4)
!12191 = !DILexicalBlockFile(scope: !2162, file: !4, discriminator: 3)
!12192 = !DILocation(line: 6497, column: 18, scope: !2162)
!12193 = !DILocation(line: 6498, column: 13, scope: !2162)
!12194 = !DILocation(line: 6498, column: 18, scope: !2162)
!12195 = !DILocation(line: 6499, column: 13, scope: !2162)
!12196 = !DILocation(line: 6499, column: 19, scope: !2162)
!12197 = !DILocation(line: 6500, column: 21, scope: !2162)
!12198 = !DILocation(line: 6500, column: 26, scope: !2162)
!12199 = !DILocation(line: 6500, column: 13, scope: !2162)
!12200 = !DILocation(line: 6500, column: 19, scope: !2162)
!12201 = !DILocation(line: 6526, column: 13, scope: !2162)
!12202 = !DILocation(line: 6526, column: 21, scope: !2162)
!12203 = !DILocation(line: 6526, column: 46, scope: !2162)
!12204 = !DILocation(line: 6526, column: 5, scope: !2162)
!12205 = !DILocation(line: 6527, column: 14, scope: !2162)
!12206 = !DILocation(line: 6527, column: 22, scope: !2162)
!12207 = !DILocation(line: 6527, column: 56, scope: !2162)
!12208 = !DILocation(line: 6527, column: 5, scope: !2162)
!12209 = !DILocation(line: 6528, column: 14, scope: !2162)
!12210 = !DILocation(line: 6528, column: 22, scope: !2162)
!12211 = !DILocation(line: 6528, column: 40, scope: !2162)
!12212 = !DILocation(line: 6528, column: 5, scope: !2162)
!12213 = !DILocation(line: 6530, column: 5, scope: !2162)
!12214 = !DILocation(line: 6531, column: 25, scope: !2162)
!12215 = !DILocation(line: 6531, column: 31, scope: !2162)
!12216 = !DILocation(line: 6531, column: 6, scope: !2162)
!12217 = !DILocation(line: 6531, column: 13, scope: !2162)
!12218 = !DILocation(line: 6532, column: 6, scope: !2162)
!12219 = !DILocation(line: 6532, column: 13, scope: !2162)
!12220 = !DILocation(line: 6533, column: 1, scope: !2162)
!12221 = !DILocation(line: 6533, column: 1, scope: !12184)
!12222 = !DILocation(line: 6658, column: 20, scope: !1209)
!12223 = !DILocation(line: 6658, column: 41, scope: !1209)
!12224 = !DILocation(line: 6658, column: 60, scope: !1209)
!12225 = !DILocation(line: 6659, column: 26, scope: !1209)
!12226 = !DILocation(line: 6660, column: 34, scope: !1209)
!12227 = !DILocation(line: 6660, column: 49, scope: !1209)
!12228 = !DILocation(line: 6662, column: 5, scope: !1209)
!12229 = !DILocation(line: 6662, column: 19, scope: !1209)
!12230 = !DILocation(line: 6663, column: 5, scope: !1209)
!12231 = !DILocation(line: 6663, column: 16, scope: !1209)
!12232 = !DILocation(line: 6663, column: 32, scope: !1209)
!12233 = !DILocation(line: 6663, column: 38, scope: !1209)
!12234 = !DILocation(line: 6663, column: 46, scope: !1209)
!12235 = !DILocation(line: 6663, column: 91, scope: !1209)
!12236 = !DILocation(line: 6664, column: 5, scope: !1209)
!12237 = !DILocation(line: 6664, column: 16, scope: !1209)
!12238 = !DILocation(line: 6664, column: 31, scope: !1209)
!12239 = !DILocation(line: 6664, column: 37, scope: !1209)
!12240 = !DILocation(line: 6664, column: 44, scope: !1209)
!12241 = !DILocation(line: 6664, column: 89, scope: !1209)
!12242 = !DILocation(line: 6665, column: 5, scope: !1209)
!12243 = !DILocation(line: 6665, column: 16, scope: !1209)
!12244 = !DILocation(line: 6665, column: 31, scope: !1209)
!12245 = !DILocation(line: 6665, column: 37, scope: !1209)
!12246 = !DILocation(line: 6665, column: 44, scope: !1209)
!12247 = !DILocation(line: 6665, column: 89, scope: !1209)
!12248 = !DILocation(line: 6666, column: 5, scope: !1209)
!12249 = !DILocation(line: 6666, column: 16, scope: !1209)
!12250 = !DILocation(line: 6666, column: 30, scope: !1209)
!12251 = !DILocation(line: 6666, column: 36, scope: !1209)
!12252 = !DILocation(line: 6666, column: 42, scope: !1209)
!12253 = !DILocation(line: 6666, column: 87, scope: !1209)
!12254 = !DILocation(line: 6667, column: 5, scope: !1209)
!12255 = !DILocation(line: 6667, column: 16, scope: !1209)
!12256 = !DILocation(line: 6667, column: 35, scope: !1209)
!12257 = !DILocation(line: 6667, column: 41, scope: !1209)
!12258 = !DILocation(line: 6667, column: 47, scope: !1209)
!12259 = !DILocation(line: 6667, column: 92, scope: !1209)
!12260 = !DILocation(line: 6668, column: 5, scope: !1209)
!12261 = !DILocation(line: 6668, column: 17, scope: !1209)
!12262 = !DILocation(line: 6668, column: 28, scope: !1209)
!12263 = !DILocation(line: 6669, column: 5, scope: !1209)
!12264 = !DILocation(line: 6669, column: 17, scope: !1209)
!12265 = !DILocation(line: 6670, column: 5, scope: !1209)
!12266 = !DILocation(line: 6670, column: 11, scope: !1209)
!12267 = !DILocation(line: 6671, column: 5, scope: !1209)
!12268 = !DILocation(line: 6671, column: 16, scope: !1209)
!12269 = !DILocation(line: 6672, column: 5, scope: !1209)
!12270 = !DILocation(line: 6672, column: 13, scope: !1209)
!12271 = !DILocation(line: 6675, column: 23, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !1209, file: !4, line: 6675, column: 9)
!12273 = !DILocation(line: 6675, column: 9, scope: !12272)
!12274 = !DILocation(line: 6675, column: 29, scope: !12272)
!12275 = !DILocation(line: 6675, column: 46, scope: !12276)
!12276 = !DILexicalBlockFile(scope: !12272, file: !4, discriminator: 1)
!12277 = !DILocation(line: 6675, column: 32, scope: !12272)
!12278 = !DILocation(line: 6675, column: 51, scope: !12272)
!12279 = !DILocation(line: 6675, column: 68, scope: !12280)
!12280 = !DILexicalBlockFile(scope: !12272, file: !4, discriminator: 2)
!12281 = !DILocation(line: 6675, column: 54, scope: !12272)
!12282 = !DILocation(line: 6675, column: 9, scope: !1209)
!12283 = !DILocation(line: 6676, column: 30, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12285, file: !4, line: 6676, column: 13)
!12285 = distinct !DILexicalBlock(scope: !12272, file: !4, line: 6675, column: 74)
!12286 = !DILocation(line: 6676, column: 38, scope: !12284)
!12287 = !DILocation(line: 6676, column: 44, scope: !12284)
!12288 = !DILocation(line: 6676, column: 49, scope: !12284)
!12289 = !DILocation(line: 6676, column: 54, scope: !12284)
!12290 = !DILocation(line: 6676, column: 59, scope: !12284)
!12291 = !DILocation(line: 6676, column: 13, scope: !12284)
!12292 = !DILocation(line: 6676, column: 13, scope: !12285)
!12293 = !DILocation(line: 6677, column: 13, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12284, file: !4, line: 6676, column: 68)
!12295 = !DILocation(line: 6679, column: 22, scope: !12285)
!12296 = !DILocation(line: 6679, column: 43, scope: !12285)
!12297 = !DILocation(line: 6679, column: 9, scope: !12285)
!12298 = !DILocation(line: 6680, column: 9, scope: !12285)
!12299 = !DILocation(line: 6684, column: 21, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !1209, file: !4, line: 6684, column: 9)
!12301 = !DILocation(line: 6684, column: 10, scope: !12300)
!12302 = !DILocation(line: 6684, column: 27, scope: !12300)
!12303 = !DILocation(line: 6684, column: 42, scope: !12304)
!12304 = !DILexicalBlockFile(scope: !12300, file: !4, discriminator: 1)
!12305 = !DILocation(line: 6684, column: 31, scope: !12300)
!12306 = !DILocation(line: 6684, column: 47, scope: !12300)
!12307 = !DILocation(line: 6684, column: 62, scope: !12308)
!12308 = !DILexicalBlockFile(scope: !12300, file: !4, discriminator: 2)
!12309 = !DILocation(line: 6684, column: 51, scope: !12300)
!12310 = !DILocation(line: 6684, column: 9, scope: !1209)
!12311 = !DILocation(line: 6685, column: 22, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12300, file: !4, line: 6684, column: 68)
!12313 = !DILocation(line: 6685, column: 43, scope: !12312)
!12314 = !DILocation(line: 6685, column: 9, scope: !12312)
!12315 = !DILocation(line: 6686, column: 9, scope: !12312)
!12316 = !DILocation(line: 6688, column: 25, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !1209, file: !4, line: 6688, column: 9)
!12318 = !DILocation(line: 6688, column: 9, scope: !12317)
!12319 = !DILocation(line: 6688, column: 9, scope: !1209)
!12320 = !DILocation(line: 6689, column: 22, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12317, file: !4, line: 6688, column: 31)
!12322 = !DILocation(line: 6689, column: 43, scope: !12321)
!12323 = !DILocation(line: 6689, column: 9, scope: !12321)
!12324 = !DILocation(line: 6690, column: 9, scope: !12321)
!12325 = !DILocation(line: 6692, column: 9, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !1209, file: !4, line: 6692, column: 9)
!12327 = !DILocation(line: 6692, column: 14, scope: !12326)
!12328 = !DILocation(line: 6692, column: 21, scope: !12326)
!12329 = !DILocation(line: 6692, column: 26, scope: !12326)
!12330 = !DILocation(line: 6692, column: 20, scope: !12326)
!12331 = !DILocation(line: 6692, column: 32, scope: !12326)
!12332 = !DILocation(line: 6692, column: 37, scope: !12326)
!12333 = !DILocation(line: 6692, column: 30, scope: !12326)
!12334 = !DILocation(line: 6692, column: 9, scope: !1209)
!12335 = !DILocation(line: 6693, column: 22, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12326, file: !4, line: 6692, column: 43)
!12337 = !DILocation(line: 6693, column: 43, scope: !12336)
!12338 = !DILocation(line: 6693, column: 9, scope: !12336)
!12339 = !DILocation(line: 6694, column: 9, scope: !12336)
!12340 = !DILocation(line: 6697, column: 28, scope: !1209)
!12341 = !DILocation(line: 6697, column: 13, scope: !1209)
!12342 = !DILocation(line: 6697, column: 35, scope: !1209)
!12343 = !DILocation(line: 6697, column: 49, scope: !12344)
!12344 = !DILexicalBlockFile(scope: !1209, file: !4, discriminator: 1)
!12345 = !DILocation(line: 6697, column: 39, scope: !1209)
!12346 = !DILocation(line: 6697, column: 35, scope: !12347)
!12347 = !DILexicalBlockFile(scope: !1209, file: !4, discriminator: 2)
!12348 = !DILocation(line: 6697, column: 12, scope: !1209)
!12349 = !DILocation(line: 6697, column: 10, scope: !1209)
!12350 = !DILocation(line: 6698, column: 25, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !1209, file: !4, line: 6698, column: 9)
!12352 = !DILocation(line: 6698, column: 9, scope: !12351)
!12353 = !DILocation(line: 6698, column: 9, scope: !1209)
!12354 = !DILocation(line: 6699, column: 29, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12356, file: !4, line: 6699, column: 13)
!12356 = distinct !DILexicalBlock(scope: !12351, file: !4, line: 6698, column: 31)
!12357 = !DILocation(line: 6699, column: 13, scope: !12355)
!12358 = !DILocation(line: 6699, column: 13, scope: !12356)
!12359 = !DILocation(line: 6700, column: 26, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12355, file: !4, line: 6699, column: 36)
!12361 = !DILocation(line: 6700, column: 47, scope: !12360)
!12362 = !DILocation(line: 6700, column: 13, scope: !12360)
!12363 = !DILocation(line: 6701, column: 13, scope: !12360)
!12364 = !DILocation(line: 6703, column: 27, scope: !12356)
!12365 = !DILocation(line: 6703, column: 14, scope: !12356)
!12366 = !DILocation(line: 6703, column: 37, scope: !12356)
!12367 = !DILocation(line: 6703, column: 13, scope: !12356)
!12368 = !DILocation(line: 6703, column: 11, scope: !12356)
!12369 = !DILocation(line: 6704, column: 20, scope: !12356)
!12370 = !DILocation(line: 6704, column: 28, scope: !12356)
!12371 = !DILocation(line: 6704, column: 34, scope: !12356)
!12372 = !DILocation(line: 6704, column: 9, scope: !12356)
!12373 = !DILocation(line: 6705, column: 9, scope: !12356)
!12374 = !DILocation(line: 6707, column: 24, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !1209, file: !4, line: 6707, column: 9)
!12376 = !DILocation(line: 6707, column: 9, scope: !12375)
!12377 = !DILocation(line: 6707, column: 9, scope: !1209)
!12378 = !DILocation(line: 6708, column: 22, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12375, file: !4, line: 6707, column: 30)
!12380 = !DILocation(line: 6708, column: 43, scope: !12379)
!12381 = !DILocation(line: 6708, column: 9, scope: !12379)
!12382 = !DILocation(line: 6709, column: 9, scope: !12379)
!12383 = !DILocation(line: 6711, column: 25, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !1209, file: !4, line: 6711, column: 9)
!12385 = !DILocation(line: 6711, column: 9, scope: !12384)
!12386 = !DILocation(line: 6711, column: 9, scope: !1209)
!12387 = !DILocation(line: 6712, column: 20, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12384, file: !4, line: 6711, column: 32)
!12389 = !DILocation(line: 6712, column: 28, scope: !12388)
!12390 = !DILocation(line: 6712, column: 9, scope: !12388)
!12391 = !DILocation(line: 6713, column: 9, scope: !12388)
!12392 = !DILocation(line: 6716, column: 5, scope: !1209)
!12393 = !DILocation(line: 6718, column: 25, scope: !1209)
!12394 = !DILocation(line: 6718, column: 58, scope: !1209)
!12395 = !DILocation(line: 6718, column: 5, scope: !1209)
!12396 = !DILocation(line: 6719, column: 20, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !1209, file: !4, line: 6719, column: 9)
!12398 = !DILocation(line: 6719, column: 26, scope: !12397)
!12399 = !DILocation(line: 6719, column: 9, scope: !1209)
!12400 = !DILocation(line: 6720, column: 22, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12397, file: !4, line: 6719, column: 142)
!12402 = !DILocation(line: 6720, column: 41, scope: !12401)
!12403 = !DILocation(line: 6720, column: 47, scope: !12401)
!12404 = !DILocation(line: 6720, column: 163, scope: !12401)
!12405 = !DILocation(line: 6720, column: 9, scope: !12401)
!12406 = !DILocation(line: 6721, column: 9, scope: !12401)
!12407 = !DILocation(line: 6723, column: 16, scope: !1209)
!12408 = !DILocation(line: 6723, column: 23, scope: !1209)
!12409 = !DILocation(line: 6724, column: 5, scope: !1209)
!12410 = !DILocation(line: 6726, column: 31, scope: !1209)
!12411 = !DILocation(line: 6726, column: 50, scope: !1209)
!12412 = !DILocation(line: 6726, column: 5, scope: !1209)
!12413 = !DILocation(line: 6727, column: 5, scope: !1209)
!12414 = !DILocation(line: 6728, column: 23, scope: !1209)
!12415 = !DILocation(line: 6728, column: 15, scope: !1209)
!12416 = !DILocation(line: 6729, column: 11, scope: !1209)
!12417 = !DILocation(line: 6729, column: 15, scope: !1209)
!12418 = !DILocation(line: 6731, column: 30, scope: !1209)
!12419 = !DILocation(line: 6731, column: 48, scope: !1209)
!12420 = !DILocation(line: 6731, column: 5, scope: !1209)
!12421 = !DILocation(line: 6732, column: 21, scope: !1209)
!12422 = !DILocation(line: 6732, column: 14, scope: !1209)
!12423 = !DILocation(line: 6733, column: 10, scope: !1209)
!12424 = !DILocation(line: 6733, column: 14, scope: !1209)
!12425 = !DILocation(line: 6736, column: 50, scope: !1209)
!12426 = !DILocation(line: 6736, column: 5, scope: !1209)
!12427 = !DILocation(line: 6737, column: 17, scope: !1209)
!12428 = !DILocation(line: 6737, column: 31, scope: !1209)
!12429 = !DILocation(line: 6737, column: 42, scope: !1209)
!12430 = !DILocation(line: 6737, column: 5, scope: !1209)
!12431 = !DILocation(line: 6738, column: 14, scope: !1209)
!12432 = !DILocation(line: 6738, column: 22, scope: !1209)
!12433 = !DILocation(line: 6738, column: 50, scope: !1209)
!12434 = !DILocation(line: 6738, column: 5, scope: !1209)
!12435 = !DILocation(line: 6739, column: 37, scope: !1209)
!12436 = !DILocation(line: 6739, column: 58, scope: !1209)
!12437 = !DILocation(line: 6739, column: 5, scope: !1209)
!12438 = !DILocation(line: 6740, column: 50, scope: !1209)
!12439 = !DILocation(line: 6740, column: 5, scope: !1209)
!12440 = !DILocation(line: 6741, column: 9, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !1209, file: !4, line: 6741, column: 9)
!12442 = !DILocation(line: 6741, column: 31, scope: !12441)
!12443 = !DILocation(line: 6742, column: 9, scope: !12441)
!12444 = !DILocation(line: 6742, column: 30, scope: !12441)
!12445 = !DILocation(line: 6743, column: 9, scope: !12441)
!12446 = !DILocation(line: 6741, column: 9, scope: !1209)
!12447 = !DILocation(line: 6744, column: 9, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12441, file: !4, line: 6743, column: 31)
!12449 = !DILocation(line: 6747, column: 12, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !1209, file: !4, line: 6747, column: 5)
!12451 = !DILocation(line: 6747, column: 10, scope: !12450)
!12452 = !DILocation(line: 6747, column: 17, scope: !12453)
!12453 = !DILexicalBlockFile(scope: !12454, file: !4, discriminator: 2)
!12454 = !DILexicalBlockFile(scope: !12455, file: !4, discriminator: 1)
!12455 = distinct !DILexicalBlock(scope: !12450, file: !4, line: 6747, column: 5)
!12456 = !DILocation(line: 6747, column: 21, scope: !12455)
!12457 = !DILocation(line: 6747, column: 19, scope: !12455)
!12458 = !DILocation(line: 6747, column: 5, scope: !12450)
!12459 = !DILocation(line: 6748, column: 52, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12455, file: !4, line: 6747, column: 36)
!12461 = !DILocation(line: 6748, column: 9, scope: !12460)
!12462 = !DILocation(line: 6749, column: 13, scope: !12460)
!12463 = !{i64 0, i64 1, !2930, i64 8, i64 8, !2391, i64 16, i64 8, !2391, i64 24, i64 8, !2391, i64 32, i64 8, !2391, i64 40, i64 8, !2505}
!12464 = !DILocation(line: 6750, column: 15, scope: !12460)
!12465 = !DILocation(line: 6751, column: 17, scope: !12460)
!12466 = !DILocation(line: 6752, column: 5, scope: !12460)
!12467 = !DILocation(line: 6747, column: 32, scope: !12455)
!12468 = !DILocation(line: 6747, column: 5, scope: !12455)
!12469 = !DILocation(line: 6753, column: 9, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !1209, file: !4, line: 6753, column: 9)
!12471 = !DILocation(line: 6753, column: 9, scope: !1209)
!12472 = !DILocation(line: 6754, column: 9, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12470, file: !4, line: 6753, column: 32)
!12474 = !DILocation(line: 6758, column: 15, scope: !1209)
!12475 = !DILocation(line: 6758, column: 29, scope: !1209)
!12476 = !DILocation(line: 6758, column: 5, scope: !1209)
!12477 = !DILocation(line: 6759, column: 5, scope: !1209)
!12478 = !DILocation(line: 6759, column: 12, scope: !12479)
!12479 = !DILexicalBlockFile(scope: !12344, file: !4, discriminator: 4)
!12480 = !DILocation(line: 6759, column: 32, scope: !1209)
!12481 = !DILocation(line: 6759, column: 36, scope: !12347)
!12482 = !DILocation(line: 6759, column: 35, scope: !1209)
!12483 = !DILocation(line: 6759, column: 5, scope: !12484)
!12484 = !DILexicalBlockFile(scope: !1209, file: !4, discriminator: 3)
!12485 = !DILocation(line: 6760, column: 13, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12487, file: !4, line: 6760, column: 13)
!12487 = distinct !DILexicalBlock(scope: !1209, file: !4, line: 6759, column: 55)
!12488 = !DILocation(line: 6760, column: 13, scope: !12487)
!12489 = !DILocation(line: 6761, column: 29, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12486, file: !4, line: 6760, column: 31)
!12491 = !DILocation(line: 6761, column: 37, scope: !12490)
!12492 = !DILocation(line: 6761, column: 66, scope: !12490)
!12493 = !DILocation(line: 6761, column: 13, scope: !12490)
!12494 = !DILocation(line: 6762, column: 22, scope: !12490)
!12495 = !DILocation(line: 6762, column: 30, scope: !12490)
!12496 = !DILocation(line: 6762, column: 58, scope: !12490)
!12497 = !DILocation(line: 6762, column: 13, scope: !12490)
!12498 = !DILocation(line: 6763, column: 9, scope: !12490)
!12499 = !DILocation(line: 6764, column: 62, scope: !12487)
!12500 = !DILocation(line: 6764, column: 9, scope: !12487)
!12501 = !DILocation(line: 6765, column: 54, scope: !12487)
!12502 = !DILocation(line: 6765, column: 9, scope: !12487)
!12503 = !DILocation(line: 6766, column: 54, scope: !12487)
!12504 = !DILocation(line: 6766, column: 9, scope: !12487)
!12505 = !DILocation(line: 6768, column: 9, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !1209, file: !4, line: 6768, column: 9)
!12507 = !DILocation(line: 6768, column: 30, scope: !12506)
!12508 = !DILocation(line: 6768, column: 33, scope: !12509)
!12509 = !DILexicalBlockFile(scope: !12506, file: !4, discriminator: 1)
!12510 = !DILocation(line: 6768, column: 55, scope: !12506)
!12511 = !DILocation(line: 6769, column: 9, scope: !12506)
!12512 = !DILocation(line: 6769, column: 30, scope: !12506)
!12513 = !DILocation(line: 6769, column: 47, scope: !12509)
!12514 = !DILocation(line: 6769, column: 33, scope: !12506)
!12515 = !DILocation(line: 6768, column: 9, scope: !1209)
!12516 = !DILocation(line: 6771, column: 9, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12506, file: !4, line: 6769, column: 56)
!12518 = !DILocation(line: 6774, column: 22, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12506, file: !4, line: 6773, column: 10)
!12520 = !DILocation(line: 6774, column: 30, scope: !12519)
!12521 = !DILocation(line: 6774, column: 9, scope: !12519)
!12522 = !DILocation(line: 6769, column: 53, scope: !12506)
!12523 = !DILocation(line: 6778, column: 5, scope: !1209)
!12524 = !DILocation(line: 6779, column: 5, scope: !1209)
!12525 = !DILocation(line: 6780, column: 5, scope: !1209)
!12526 = !DILocation(line: 6781, column: 5, scope: !1209)
!12527 = !DILocation(line: 6782, column: 5, scope: !1209)
!12528 = !DILocation(line: 6785, column: 20, scope: !1209)
!12529 = !DILocation(line: 6785, column: 5, scope: !1209)
!12530 = !DILocation(line: 6786, column: 5, scope: !1209)
!12531 = !DILocation(line: 6787, column: 1, scope: !1209)
!12532 = !DILocation(line: 1585, column: 25, scope: !2172)
!12533 = !DILocation(line: 1585, column: 46, scope: !2172)
!12534 = !DILocation(line: 1585, column: 62, scope: !2172)
!12535 = !DILocation(line: 1585, column: 78, scope: !2172)
!12536 = !DILocation(line: 1586, column: 39, scope: !2172)
!12537 = !DILocation(line: 1586, column: 54, scope: !2172)
!12538 = !DILocation(line: 1588, column: 10, scope: !2184)
!12539 = !DILocation(line: 1588, column: 13, scope: !2184)
!12540 = !DILocation(line: 1588, column: 19, scope: !2184)
!12541 = !DILocation(line: 1588, column: 22, scope: !2184)
!12542 = !DILocation(line: 1588, column: 18, scope: !2184)
!12543 = !DILocation(line: 1588, column: 28, scope: !2184)
!12544 = !DILocation(line: 1588, column: 31, scope: !2184)
!12545 = !DILocation(line: 1588, column: 27, scope: !2184)
!12546 = !DILocation(line: 1588, column: 37, scope: !2184)
!12547 = !DILocation(line: 1588, column: 9, scope: !2172)
!12548 = !DILocation(line: 1589, column: 9, scope: !2183)
!12549 = !DILocation(line: 1589, column: 22, scope: !2183)
!12550 = !DILocation(line: 1589, column: 31, scope: !2183)
!12551 = !DILocation(line: 1590, column: 24, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !2183, file: !4, line: 1590, column: 13)
!12553 = !DILocation(line: 1590, column: 13, scope: !12552)
!12554 = !DILocation(line: 1590, column: 13, scope: !2183)
!12555 = !DILocation(line: 1591, column: 22, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12552, file: !4, line: 1590, column: 28)
!12557 = !DILocation(line: 1591, column: 20, scope: !12556)
!12558 = !DILocation(line: 1592, column: 14, scope: !12556)
!12559 = !DILocation(line: 1592, column: 21, scope: !12556)
!12560 = !DILocation(line: 1593, column: 9, scope: !12556)
!12561 = !DILocation(line: 1594, column: 29, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12552, file: !4, line: 1594, column: 18)
!12563 = !DILocation(line: 1594, column: 18, scope: !12562)
!12564 = !DILocation(line: 1594, column: 18, scope: !12552)
!12565 = !DILocation(line: 1595, column: 22, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12562, file: !4, line: 1594, column: 33)
!12567 = !DILocation(line: 1595, column: 20, scope: !12566)
!12568 = !DILocation(line: 1596, column: 14, scope: !12566)
!12569 = !DILocation(line: 1596, column: 21, scope: !12566)
!12570 = !DILocation(line: 1597, column: 9, scope: !12566)
!12571 = !DILocation(line: 1598, column: 29, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12562, file: !4, line: 1598, column: 18)
!12573 = !DILocation(line: 1598, column: 18, scope: !12572)
!12574 = !DILocation(line: 1598, column: 18, scope: !12562)
!12575 = !DILocation(line: 1599, column: 14, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12572, file: !4, line: 1598, column: 33)
!12577 = !DILocation(line: 1599, column: 21, scope: !12576)
!12578 = !DILocation(line: 1600, column: 9, scope: !12576)
!12579 = !DILocation(line: 1601, column: 29, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12572, file: !4, line: 1601, column: 18)
!12581 = !DILocation(line: 1601, column: 18, scope: !12580)
!12582 = !DILocation(line: 1601, column: 18, scope: !12572)
!12583 = !DILocation(line: 1602, column: 22, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12580, file: !4, line: 1601, column: 33)
!12585 = !DILocation(line: 1602, column: 20, scope: !12584)
!12586 = !DILocation(line: 1603, column: 9, scope: !12584)
!12587 = !DILocation(line: 1604, column: 29, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12580, file: !4, line: 1604, column: 18)
!12589 = !DILocation(line: 1604, column: 18, scope: !12588)
!12590 = !DILocation(line: 1604, column: 18, scope: !12580)
!12591 = !DILocation(line: 1605, column: 22, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12588, file: !4, line: 1604, column: 33)
!12593 = !DILocation(line: 1605, column: 20, scope: !12592)
!12594 = !DILocation(line: 1606, column: 9, scope: !12592)
!12595 = !DILocation(line: 1607, column: 19, scope: !2183)
!12596 = !DILocation(line: 1607, column: 27, scope: !2183)
!12597 = !DILocation(line: 1607, column: 35, scope: !2183)
!12598 = !DILocation(line: 1607, column: 9, scope: !2183)
!12599 = !DILocation(line: 1608, column: 22, scope: !2183)
!12600 = !DILocation(line: 1608, column: 9, scope: !2183)
!12601 = !DILocation(line: 1609, column: 22, scope: !2183)
!12602 = !DILocation(line: 1609, column: 30, scope: !2183)
!12603 = !DILocation(line: 1609, column: 9, scope: !2183)
!12604 = !DILocation(line: 1610, column: 9, scope: !2183)
!12605 = !DILocation(line: 1611, column: 5, scope: !2184)
!12606 = !DILocation(line: 1612, column: 5, scope: !2172)
!12607 = !DILocation(line: 1613, column: 1, scope: !2172)
!12608 = !DILocation(line: 7087, column: 21, scope: !1282)
!12609 = !DILocation(line: 7087, column: 42, scope: !1282)
!12610 = !DILocation(line: 7087, column: 57, scope: !1282)
!12611 = !DILocation(line: 7088, column: 35, scope: !1282)
!12612 = !DILocation(line: 7088, column: 50, scope: !1282)
!12613 = !DILocation(line: 7090, column: 9, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !1282, file: !4, line: 7090, column: 9)
!12615 = !DILocation(line: 7090, column: 13, scope: !12614)
!12616 = !DILocation(line: 7090, column: 39, scope: !12614)
!12617 = !DILocation(line: 7090, column: 42, scope: !12618)
!12618 = !DILexicalBlockFile(scope: !12614, file: !4, discriminator: 1)
!12619 = !DILocation(line: 7090, column: 46, scope: !12614)
!12620 = !DILocation(line: 7090, column: 9, scope: !1282)
!12621 = !DILocation(line: 7091, column: 22, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12614, file: !4, line: 7090, column: 101)
!12623 = !DILocation(line: 7091, column: 43, scope: !12622)
!12624 = !DILocation(line: 7091, column: 9, scope: !12622)
!12625 = !DILocation(line: 7092, column: 9, scope: !12622)
!12626 = !DILocation(line: 7095, column: 19, scope: !1282)
!12627 = !DILocation(line: 7095, column: 27, scope: !1282)
!12628 = !DILocation(line: 7095, column: 30, scope: !1282)
!12629 = !DILocation(line: 7095, column: 35, scope: !1282)
!12630 = !DILocation(line: 7095, column: 40, scope: !1282)
!12631 = !DILocation(line: 7095, column: 5, scope: !1282)
!12632 = !DILocation(line: 7096, column: 1, scope: !1282)
!12633 = !DILocation(line: 7096, column: 1, scope: !12634)
!12634 = !DILexicalBlockFile(scope: !1282, file: !4, discriminator: 1)
!12635 = !DILocation(line: 7167, column: 26, scope: !1302)
!12636 = !DILocation(line: 7167, column: 47, scope: !1302)
!12637 = !DILocation(line: 7167, column: 71, scope: !1302)
!12638 = !DILocation(line: 7168, column: 29, scope: !1302)
!12639 = !DILocation(line: 7170, column: 50, scope: !1302)
!12640 = !DILocation(line: 7170, column: 58, scope: !1302)
!12641 = !DILocation(line: 7170, column: 61, scope: !1302)
!12642 = !DILocation(line: 7170, column: 66, scope: !1302)
!12643 = !DILocation(line: 7170, column: 11, scope: !1302)
!12644 = !DILocation(line: 7171, column: 1, scope: !1302)
!12645 = !DILocation(line: 6901, column: 17, scope: !1256)
!12646 = !DILocation(line: 6901, column: 33, scope: !1256)
!12647 = !DILocation(line: 6901, column: 49, scope: !1256)
!12648 = !DILocation(line: 6901, column: 73, scope: !1256)
!12649 = !DILocation(line: 6902, column: 20, scope: !1256)
!12650 = !DILocation(line: 6904, column: 5, scope: !1256)
!12651 = !DILocation(line: 6904, column: 16, scope: !1256)
!12652 = !DILocation(line: 6904, column: 28, scope: !1256)
!12653 = !DILocation(line: 6904, column: 34, scope: !1256)
!12654 = !DILocation(line: 6904, column: 38, scope: !1256)
!12655 = !DILocation(line: 6904, column: 83, scope: !1256)
!12656 = !DILocation(line: 6906, column: 23, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !1256, file: !4, line: 6906, column: 9)
!12658 = !DILocation(line: 6906, column: 9, scope: !12657)
!12659 = !DILocation(line: 6906, column: 26, scope: !12657)
!12660 = !DILocation(line: 6906, column: 43, scope: !12661)
!12661 = !DILexicalBlockFile(scope: !12657, file: !4, discriminator: 1)
!12662 = !DILocation(line: 6906, column: 29, scope: !12657)
!12663 = !DILocation(line: 6906, column: 9, scope: !1256)
!12664 = !DILocation(line: 6907, column: 29, scope: !12665)
!12665 = distinct !DILexicalBlock(scope: !12666, file: !4, line: 6907, column: 13)
!12666 = distinct !DILexicalBlock(scope: !12657, file: !4, line: 6906, column: 47)
!12667 = !DILocation(line: 6907, column: 32, scope: !12665)
!12668 = !DILocation(line: 6907, column: 35, scope: !12665)
!12669 = !DILocation(line: 6907, column: 38, scope: !12665)
!12670 = !DILocation(line: 6907, column: 43, scope: !12665)
!12671 = !DILocation(line: 6907, column: 13, scope: !12665)
!12672 = !DILocation(line: 6907, column: 13, scope: !12666)
!12673 = !DILocation(line: 6908, column: 13, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12665, file: !4, line: 6907, column: 52)
!12675 = !DILocation(line: 6910, column: 28, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12666, file: !4, line: 6910, column: 13)
!12677 = !DILocation(line: 6910, column: 13, scope: !12676)
!12678 = !DILocation(line: 6910, column: 13, scope: !12666)
!12679 = !DILocation(line: 6911, column: 26, scope: !12680)
!12680 = distinct !DILexicalBlock(scope: !12676, file: !4, line: 6910, column: 32)
!12681 = !DILocation(line: 6911, column: 42, scope: !12680)
!12682 = !DILocation(line: 6911, column: 13, scope: !12680)
!12683 = !DILocation(line: 6912, column: 13, scope: !12680)
!12684 = !DILocation(line: 6914, column: 28, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12666, file: !4, line: 6914, column: 13)
!12686 = !DILocation(line: 6914, column: 13, scope: !12685)
!12687 = !DILocation(line: 6914, column: 13, scope: !12666)
!12688 = !DILocation(line: 6915, column: 23, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12685, file: !4, line: 6914, column: 32)
!12690 = !DILocation(line: 6915, column: 26, scope: !12689)
!12691 = !DILocation(line: 6915, column: 29, scope: !12689)
!12692 = !DILocation(line: 6915, column: 13, scope: !12689)
!12693 = !DILocation(line: 6916, column: 27, scope: !12689)
!12694 = !DILocation(line: 6916, column: 30, scope: !12689)
!12695 = !DILocation(line: 6916, column: 35, scope: !12689)
!12696 = !DILocation(line: 6916, column: 13, scope: !12689)
!12697 = !DILocation(line: 6917, column: 13, scope: !12689)
!12698 = !DILocation(line: 6920, column: 9, scope: !12666)
!12699 = !DILocation(line: 6922, column: 25, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !1256, file: !4, line: 6922, column: 9)
!12701 = !DILocation(line: 6922, column: 9, scope: !12700)
!12702 = !DILocation(line: 6922, column: 9, scope: !1256)
!12703 = !DILocation(line: 6923, column: 29, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12705, file: !4, line: 6923, column: 13)
!12705 = distinct !DILexicalBlock(scope: !12700, file: !4, line: 6922, column: 29)
!12706 = !DILocation(line: 6923, column: 13, scope: !12704)
!12707 = !DILocation(line: 6923, column: 13, scope: !12705)
!12708 = !DILocation(line: 6924, column: 26, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12704, file: !4, line: 6923, column: 33)
!12710 = !DILocation(line: 6924, column: 42, scope: !12709)
!12711 = !DILocation(line: 6924, column: 13, scope: !12709)
!12712 = !DILocation(line: 6925, column: 9, scope: !12709)
!12713 = !DILocation(line: 6927, column: 26, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12704, file: !4, line: 6926, column: 14)
!12715 = !DILocation(line: 6927, column: 42, scope: !12714)
!12716 = !DILocation(line: 6927, column: 13, scope: !12714)
!12717 = !DILocation(line: 6929, column: 9, scope: !12705)
!12718 = !DILocation(line: 6932, column: 22, scope: !1256)
!12719 = !DILocation(line: 6932, column: 25, scope: !1256)
!12720 = !DILocation(line: 6932, column: 28, scope: !1256)
!12721 = !DILocation(line: 6932, column: 31, scope: !1256)
!12722 = !DILocation(line: 6932, column: 36, scope: !1256)
!12723 = !DILocation(line: 6932, column: 5, scope: !1256)
!12724 = !DILocation(line: 6933, column: 5, scope: !1256)
!12725 = !DILocation(line: 6934, column: 19, scope: !1256)
!12726 = !DILocation(line: 6934, column: 22, scope: !1256)
!12727 = !DILocation(line: 6934, column: 27, scope: !1256)
!12728 = !DILocation(line: 6934, column: 5, scope: !1256)
!12729 = !DILocation(line: 6935, column: 1, scope: !1256)
!12730 = !DILocation(line: 6935, column: 1, scope: !12731)
!12731 = !DILexicalBlockFile(scope: !1256, file: !4, discriminator: 1)
!12732 = !DILocation(line: 5832, column: 24, scope: !2185)
!12733 = !DILocation(line: 5832, column: 45, scope: !2185)
!12734 = !DILocation(line: 5832, column: 61, scope: !2185)
!12735 = !DILocation(line: 5833, column: 38, scope: !2185)
!12736 = !DILocation(line: 5833, column: 53, scope: !2185)
!12737 = !DILocation(line: 5835, column: 5, scope: !2185)
!12738 = !DILocation(line: 5835, column: 14, scope: !2185)
!12739 = !DILocation(line: 5837, column: 14, scope: !2185)
!12740 = !DILocation(line: 5837, column: 22, scope: !2185)
!12741 = !DILocation(line: 5837, column: 25, scope: !2185)
!12742 = !DILocation(line: 5837, column: 28, scope: !2185)
!12743 = !DILocation(line: 5837, column: 5, scope: !2185)
!12744 = !DILocation(line: 5838, column: 16, scope: !2185)
!12745 = !DILocation(line: 5838, column: 6, scope: !2185)
!12746 = !DILocation(line: 5838, column: 13, scope: !2185)
!12747 = !DILocation(line: 5839, column: 9, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !2185, file: !4, line: 5839, column: 9)
!12749 = !DILocation(line: 5839, column: 20, scope: !12748)
!12750 = !DILocation(line: 5839, column: 9, scope: !2185)
!12751 = !DILocation(line: 5840, column: 22, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12748, file: !4, line: 5839, column: 61)
!12753 = !DILocation(line: 5840, column: 43, scope: !12752)
!12754 = !DILocation(line: 5840, column: 9, scope: !12752)
!12755 = !DILocation(line: 5841, column: 5, scope: !12752)
!12756 = !DILocation(line: 5842, column: 1, scope: !2185)
!12757 = !DILocation(line: 6635, column: 26, scope: !2193)
!12758 = !DILocation(line: 6635, column: 41, scope: !2193)
!12759 = !DILocation(line: 6635, column: 58, scope: !2193)
!12760 = !DILocation(line: 6636, column: 32, scope: !2193)
!12761 = !DILocation(line: 6636, column: 47, scope: !2193)
!12762 = !DILocation(line: 6638, column: 5, scope: !2193)
!12763 = !DILocation(line: 6638, column: 19, scope: !2193)
!12764 = !DILocation(line: 6640, column: 5, scope: !2193)
!12765 = !DILocation(line: 6643, column: 15, scope: !2193)
!12766 = !DILocation(line: 6643, column: 29, scope: !2193)
!12767 = !DILocation(line: 6643, column: 5, scope: !2193)
!12768 = !DILocation(line: 6645, column: 5, scope: !2193)
!12769 = !DILocation(line: 6645, column: 12, scope: !12770)
!12770 = !DILexicalBlockFile(scope: !12771, file: !4, discriminator: 2)
!12771 = !DILexicalBlockFile(scope: !2193, file: !4, discriminator: 1)
!12772 = !DILocation(line: 6645, column: 16, scope: !2193)
!12773 = !DILocation(line: 6646, column: 13, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12775, file: !4, line: 6646, column: 13)
!12775 = distinct !DILexicalBlock(scope: !2193, file: !4, line: 6645, column: 21)
!12776 = !DILocation(line: 6646, column: 17, scope: !12774)
!12777 = !DILocation(line: 6646, column: 13, scope: !12775)
!12778 = !DILocation(line: 6647, column: 29, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12774, file: !4, line: 6646, column: 22)
!12780 = !DILocation(line: 6647, column: 37, scope: !12779)
!12781 = !DILocation(line: 6647, column: 45, scope: !12779)
!12782 = !DILocation(line: 6647, column: 64, scope: !12779)
!12783 = !DILocation(line: 6647, column: 13, scope: !12779)
!12784 = !DILocation(line: 6648, column: 22, scope: !12779)
!12785 = !DILocation(line: 6648, column: 30, scope: !12779)
!12786 = !DILocation(line: 6648, column: 38, scope: !12779)
!12787 = !DILocation(line: 6648, column: 56, scope: !12779)
!12788 = !DILocation(line: 6648, column: 13, scope: !12779)
!12789 = !DILocation(line: 6649, column: 9, scope: !12779)
!12790 = !DILocation(line: 6650, column: 25, scope: !12775)
!12791 = !DILocation(line: 6650, column: 31, scope: !12775)
!12792 = !DILocation(line: 6650, column: 37, scope: !12775)
!12793 = !DILocation(line: 6650, column: 56, scope: !12775)
!12794 = !DILocation(line: 6650, column: 9, scope: !12775)
!12795 = !DILocation(line: 6651, column: 18, scope: !12775)
!12796 = !DILocation(line: 6651, column: 24, scope: !12775)
!12797 = !DILocation(line: 6651, column: 30, scope: !12775)
!12798 = !DILocation(line: 6651, column: 48, scope: !12775)
!12799 = !DILocation(line: 6651, column: 9, scope: !12775)
!12800 = !DILocation(line: 6652, column: 13, scope: !12775)
!12801 = !DILocation(line: 6654, column: 1, scope: !2193)
!12802 = !DILocation(line: 6790, column: 22, scope: !1234)
!12803 = !DILocation(line: 6790, column: 43, scope: !1234)
!12804 = !DILocation(line: 6790, column: 59, scope: !1234)
!12805 = !DILocation(line: 6791, column: 36, scope: !1234)
!12806 = !DILocation(line: 6791, column: 51, scope: !1234)
!12807 = !DILocation(line: 6793, column: 5, scope: !1234)
!12808 = !DILocation(line: 6793, column: 14, scope: !1234)
!12809 = !DILocation(line: 6794, column: 5, scope: !1234)
!12810 = !DILocation(line: 6794, column: 17, scope: !1234)
!12811 = !DILocation(line: 6794, column: 25, scope: !1234)
!12812 = !DILocation(line: 6794, column: 28, scope: !1234)
!12813 = !DILocation(line: 6795, column: 5, scope: !1234)
!12814 = !DILocation(line: 6795, column: 17, scope: !1234)
!12815 = !DILocation(line: 6795, column: 26, scope: !1234)
!12816 = !DILocation(line: 6796, column: 5, scope: !1234)
!12817 = !DILocation(line: 6796, column: 16, scope: !1234)
!12818 = !DILocation(line: 6798, column: 23, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !1234, file: !4, line: 6798, column: 9)
!12820 = !DILocation(line: 6798, column: 9, scope: !12819)
!12821 = !DILocation(line: 6798, column: 26, scope: !12819)
!12822 = !DILocation(line: 6798, column: 43, scope: !12823)
!12823 = !DILexicalBlockFile(scope: !12819, file: !4, discriminator: 1)
!12824 = !DILocation(line: 6798, column: 29, scope: !12819)
!12825 = !DILocation(line: 6798, column: 9, scope: !1234)
!12826 = !DILocation(line: 6799, column: 29, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12828, file: !4, line: 6799, column: 13)
!12828 = distinct !DILexicalBlock(scope: !12819, file: !4, line: 6798, column: 47)
!12829 = !DILocation(line: 6799, column: 37, scope: !12827)
!12830 = !DILocation(line: 6799, column: 40, scope: !12827)
!12831 = !DILocation(line: 6799, column: 43, scope: !12827)
!12832 = !DILocation(line: 6799, column: 48, scope: !12827)
!12833 = !DILocation(line: 6799, column: 13, scope: !12827)
!12834 = !DILocation(line: 6799, column: 13, scope: !12828)
!12835 = !DILocation(line: 6800, column: 13, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12827, file: !4, line: 6799, column: 57)
!12837 = !DILocation(line: 6802, column: 28, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12828, file: !4, line: 6802, column: 13)
!12839 = !DILocation(line: 6802, column: 13, scope: !12838)
!12840 = !DILocation(line: 6802, column: 31, scope: !12838)
!12841 = !DILocation(line: 6802, column: 49, scope: !12842)
!12842 = !DILexicalBlockFile(scope: !12838, file: !4, discriminator: 1)
!12843 = !DILocation(line: 6802, column: 34, scope: !12838)
!12844 = !DILocation(line: 6802, column: 13, scope: !12828)
!12845 = !DILocation(line: 6803, column: 23, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12838, file: !4, line: 6802, column: 53)
!12847 = !DILocation(line: 6803, column: 31, scope: !12846)
!12848 = !DILocation(line: 6803, column: 34, scope: !12846)
!12849 = !DILocation(line: 6803, column: 13, scope: !12846)
!12850 = !DILocation(line: 6804, column: 13, scope: !12846)
!12851 = !DILocation(line: 6806, column: 22, scope: !12828)
!12852 = !DILocation(line: 6806, column: 43, scope: !12828)
!12853 = !DILocation(line: 6806, column: 9, scope: !12828)
!12854 = !DILocation(line: 6807, column: 9, scope: !12828)
!12855 = !DILocation(line: 6810, column: 9, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !1234, file: !4, line: 6810, column: 9)
!12857 = !DILocation(line: 6810, column: 12, scope: !12856)
!12858 = !DILocation(line: 6810, column: 18, scope: !12856)
!12859 = !DILocation(line: 6810, column: 23, scope: !12856)
!12860 = !DILocation(line: 6810, column: 16, scope: !12856)
!12861 = !DILocation(line: 6810, column: 28, scope: !12856)
!12862 = !DILocation(line: 6810, column: 31, scope: !12863)
!12863 = !DILexicalBlockFile(scope: !12856, file: !4, discriminator: 1)
!12864 = !DILocation(line: 6810, column: 34, scope: !12856)
!12865 = !DILocation(line: 6810, column: 50, scope: !12856)
!12866 = !DILocation(line: 6810, column: 40, scope: !12856)
!12867 = !DILocation(line: 6810, column: 38, scope: !12856)
!12868 = !DILocation(line: 6810, column: 9, scope: !1234)
!12869 = !DILocation(line: 6811, column: 22, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12856, file: !4, line: 6810, column: 56)
!12871 = !DILocation(line: 6811, column: 43, scope: !12870)
!12872 = !DILocation(line: 6811, column: 9, scope: !12870)
!12873 = !DILocation(line: 6812, column: 9, scope: !12870)
!12874 = !DILocation(line: 6815, column: 20, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !1234, file: !4, line: 6815, column: 9)
!12876 = !DILocation(line: 6815, column: 9, scope: !12875)
!12877 = !DILocation(line: 6815, column: 9, scope: !1234)
!12878 = !DILocation(line: 6816, column: 20, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12875, file: !4, line: 6815, column: 24)
!12880 = !DILocation(line: 6816, column: 37, scope: !12879)
!12881 = !DILocation(line: 6816, column: 28, scope: !12879)
!12882 = !DILocation(line: 6816, column: 44, scope: !12879)
!12883 = !DILocation(line: 6816, column: 47, scope: !12879)
!12884 = !DILocation(line: 6816, column: 9, scope: !12879)
!12885 = !DILocation(line: 6817, column: 23, scope: !12879)
!12886 = !DILocation(line: 6817, column: 31, scope: !12879)
!12887 = !DILocation(line: 6817, column: 36, scope: !12879)
!12888 = !DILocation(line: 6817, column: 9, scope: !12879)
!12889 = !DILocation(line: 6818, column: 9, scope: !12879)
!12890 = !DILocation(line: 6822, column: 15, scope: !1234)
!12891 = !DILocation(line: 6822, column: 18, scope: !1234)
!12892 = !DILocation(line: 6822, column: 24, scope: !1234)
!12893 = !DILocation(line: 6822, column: 27, scope: !1234)
!12894 = !DILocation(line: 6822, column: 22, scope: !1234)
!12895 = !DILocation(line: 6822, column: 13, scope: !1234)
!12896 = !DILocation(line: 6823, column: 9, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !1234, file: !4, line: 6823, column: 9)
!12898 = !DILocation(line: 6823, column: 12, scope: !12897)
!12899 = !DILocation(line: 6823, column: 21, scope: !12897)
!12900 = !DILocation(line: 6823, column: 19, scope: !12897)
!12901 = !DILocation(line: 6823, column: 31, scope: !12897)
!12902 = !DILocation(line: 6823, column: 36, scope: !12897)
!12903 = !DILocation(line: 6823, column: 29, scope: !12897)
!12904 = !DILocation(line: 6823, column: 9, scope: !1234)
!12905 = !DILocation(line: 6824, column: 22, scope: !12906)
!12906 = distinct !DILexicalBlock(scope: !12897, file: !4, line: 6823, column: 42)
!12907 = !DILocation(line: 6824, column: 43, scope: !12906)
!12908 = !DILocation(line: 6824, column: 9, scope: !12906)
!12909 = !DILocation(line: 6825, column: 9, scope: !12906)
!12910 = !DILocation(line: 6828, column: 9, scope: !12911)
!12911 = distinct !DILexicalBlock(scope: !1234, file: !4, line: 6828, column: 9)
!12912 = !DILocation(line: 6828, column: 17, scope: !12911)
!12913 = !DILocation(line: 6828, column: 9, scope: !1234)
!12914 = !DILocation(line: 6829, column: 17, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12911, file: !4, line: 6828, column: 23)
!12916 = !DILocation(line: 6829, column: 15, scope: !12915)
!12917 = !DILocation(line: 6830, column: 26, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12915, file: !4, line: 6830, column: 13)
!12919 = !DILocation(line: 6830, column: 34, scope: !12918)
!12920 = !DILocation(line: 6830, column: 37, scope: !12918)
!12921 = !DILocation(line: 6830, column: 44, scope: !12918)
!12922 = !DILocation(line: 6830, column: 14, scope: !12918)
!12923 = !DILocation(line: 6830, column: 13, scope: !12915)
!12924 = !DILocation(line: 6831, column: 13, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12918, file: !4, line: 6830, column: 53)
!12926 = !DILocation(line: 6833, column: 23, scope: !12915)
!12927 = !DILocation(line: 6833, column: 9, scope: !12915)
!12928 = !DILocation(line: 6833, column: 17, scope: !12915)
!12929 = !DILocation(line: 6833, column: 21, scope: !12915)
!12930 = !DILocation(line: 6834, column: 5, scope: !12915)
!12931 = !DILocation(line: 6838, column: 18, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12911, file: !4, line: 6835, column: 10)
!12933 = !DILocation(line: 6838, column: 17, scope: !12932)
!12934 = !DILocation(line: 6838, column: 15, scope: !12932)
!12935 = !DILocation(line: 6839, column: 27, scope: !12932)
!12936 = !DILocation(line: 6839, column: 35, scope: !12932)
!12937 = !DILocation(line: 6839, column: 38, scope: !12932)
!12938 = !DILocation(line: 6839, column: 45, scope: !12932)
!12939 = !DILocation(line: 6839, column: 15, scope: !12932)
!12940 = !DILocation(line: 6839, column: 13, scope: !12932)
!12941 = !DILocation(line: 6840, column: 13, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12932, file: !4, line: 6840, column: 13)
!12943 = !DILocation(line: 6840, column: 17, scope: !12942)
!12944 = !DILocation(line: 6840, column: 13, scope: !12932)
!12945 = !DILocation(line: 6841, column: 13, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12942, file: !4, line: 6840, column: 46)
!12947 = !DILocation(line: 6843, column: 23, scope: !12932)
!12948 = !DILocation(line: 6843, column: 9, scope: !12932)
!12949 = !DILocation(line: 6843, column: 17, scope: !12932)
!12950 = !DILocation(line: 6843, column: 21, scope: !12932)
!12951 = !DILocation(line: 6844, column: 35, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12932, file: !4, line: 6844, column: 13)
!12953 = !DILocation(line: 6844, column: 43, scope: !12952)
!12954 = !DILocation(line: 6844, column: 48, scope: !12952)
!12955 = !DILocation(line: 6844, column: 53, scope: !12952)
!12956 = !DILocation(line: 6844, column: 14, scope: !12952)
!12957 = !DILocation(line: 6844, column: 13, scope: !12932)
!12958 = !DILocation(line: 6845, column: 13, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12952, file: !4, line: 6844, column: 62)
!12960 = !DILocation(line: 6847, column: 20, scope: !12932)
!12961 = !DILocation(line: 6848, column: 13, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12932, file: !4, line: 6848, column: 13)
!12963 = !DILocation(line: 6848, column: 13, scope: !12932)
!12964 = !DILocation(line: 6849, column: 24, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12962, file: !4, line: 6848, column: 18)
!12966 = !DILocation(line: 6850, column: 9, scope: !12965)
!12967 = !DILocation(line: 6853, column: 20, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !1234, file: !4, line: 6853, column: 9)
!12969 = !DILocation(line: 6853, column: 9, scope: !12968)
!12970 = !DILocation(line: 6853, column: 30, scope: !12968)
!12971 = !DILocation(line: 6853, column: 35, scope: !12968)
!12972 = !DILocation(line: 6853, column: 28, scope: !12968)
!12973 = !DILocation(line: 6853, column: 40, scope: !12968)
!12974 = !DILocation(line: 6854, column: 20, scope: !12968)
!12975 = !DILocation(line: 6854, column: 9, scope: !12968)
!12976 = !DILocation(line: 6854, column: 40, scope: !12968)
!12977 = !DILocation(line: 6854, column: 30, scope: !12968)
!12978 = !DILocation(line: 6854, column: 28, scope: !12968)
!12979 = !DILocation(line: 6853, column: 9, scope: !1234)
!12980 = !DILocation(line: 6855, column: 22, scope: !12981)
!12981 = distinct !DILexicalBlock(scope: !12968, file: !4, line: 6854, column: 46)
!12982 = !DILocation(line: 6855, column: 43, scope: !12981)
!12983 = !DILocation(line: 6855, column: 9, scope: !12981)
!12984 = !DILocation(line: 6856, column: 9, scope: !12981)
!12985 = !DILocation(line: 6859, column: 16, scope: !1234)
!12986 = !DILocation(line: 6859, column: 6, scope: !1234)
!12987 = !DILocation(line: 6859, column: 13, scope: !1234)
!12988 = !DILocation(line: 6860, column: 19, scope: !1234)
!12989 = !DILocation(line: 6860, column: 27, scope: !1234)
!12990 = !DILocation(line: 6860, column: 32, scope: !1234)
!12991 = !DILocation(line: 6860, column: 5, scope: !1234)
!12992 = !DILocation(line: 6861, column: 1, scope: !1234)
!12993 = !DILocation(line: 6861, column: 1, scope: !12994)
!12994 = !DILexicalBlockFile(scope: !1234, file: !4, discriminator: 1)
!12995 = !DILocation(line: 1708, column: 29, scope: !2203)
!12996 = !DILocation(line: 1708, column: 45, scope: !2203)
!12997 = !DILocation(line: 1708, column: 71, scope: !2203)
!12998 = !DILocation(line: 1709, column: 32, scope: !2203)
!12999 = !DILocation(line: 1711, column: 23, scope: !2213)
!13000 = !DILocation(line: 1711, column: 28, scope: !2213)
!13001 = !DILocation(line: 1711, column: 33, scope: !2213)
!13002 = !DILocation(line: 1711, column: 9, scope: !2213)
!13003 = !DILocation(line: 1711, column: 9, scope: !2203)
!13004 = !DILocation(line: 1712, column: 9, scope: !2212)
!13005 = !DILocation(line: 1712, column: 20, scope: !2212)
!13006 = !DILocation(line: 1712, column: 42, scope: !2212)
!13007 = !DILocation(line: 1712, column: 47, scope: !2212)
!13008 = !DILocation(line: 1712, column: 53, scope: !2212)
!13009 = !DILocation(line: 1712, column: 58, scope: !2212)
!13010 = !DILocation(line: 1712, column: 28, scope: !2212)
!13011 = !DILocation(line: 1713, column: 13, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !2212, file: !4, line: 1713, column: 13)
!13013 = !DILocation(line: 1713, column: 13, scope: !2212)
!13014 = !DILocation(line: 1714, column: 30, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !13016, file: !4, line: 1714, column: 17)
!13016 = distinct !DILexicalBlock(scope: !13012, file: !4, line: 1713, column: 20)
!13017 = !DILocation(line: 1714, column: 35, scope: !13015)
!13018 = !DILocation(line: 1714, column: 40, scope: !13015)
!13019 = !DILocation(line: 1714, column: 43, scope: !13015)
!13020 = !DILocation(line: 1714, column: 47, scope: !13015)
!13021 = !DILocation(line: 1714, column: 18, scope: !13015)
!13022 = !DILocation(line: 1714, column: 17, scope: !13016)
!13023 = !DILocation(line: 1715, column: 17, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13015, file: !4, line: 1714, column: 56)
!13025 = !DILocation(line: 1717, column: 23, scope: !13016)
!13026 = !DILocation(line: 1717, column: 28, scope: !13016)
!13027 = !DILocation(line: 1717, column: 13, scope: !13016)
!13028 = !DILocation(line: 1717, column: 18, scope: !13016)
!13029 = !DILocation(line: 1717, column: 33, scope: !13016)
!13030 = !DILocation(line: 1718, column: 13, scope: !13016)
!13031 = !DILocation(line: 1718, column: 18, scope: !13016)
!13032 = !DILocation(line: 1718, column: 22, scope: !13016)
!13033 = !DILocation(line: 1719, column: 9, scope: !13016)
!13034 = !DILocation(line: 1720, column: 23, scope: !2212)
!13035 = !DILocation(line: 1720, column: 9, scope: !2212)
!13036 = !DILocation(line: 1721, column: 13, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !2212, file: !4, line: 1721, column: 13)
!13038 = !DILocation(line: 1721, column: 18, scope: !13037)
!13039 = !DILocation(line: 1721, column: 27, scope: !13037)
!13040 = !DILocation(line: 1721, column: 32, scope: !13037)
!13041 = !DILocation(line: 1721, column: 25, scope: !13037)
!13042 = !DILocation(line: 1721, column: 13, scope: !2212)
!13043 = !DILocation(line: 1722, column: 26, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13037, file: !4, line: 1721, column: 38)
!13045 = !DILocation(line: 1722, column: 44, scope: !13044)
!13046 = !DILocation(line: 1722, column: 13, scope: !13044)
!13047 = !DILocation(line: 1723, column: 13, scope: !13044)
!13048 = !DILocation(line: 1725, column: 5, scope: !2213)
!13049 = !DILocation(line: 1725, column: 5, scope: !13050)
!13050 = !DILexicalBlockFile(scope: !2213, file: !4, discriminator: 1)
!13051 = !DILocation(line: 1725, column: 5, scope: !2212)
!13052 = !DILocation(line: 1726, column: 5, scope: !2203)
!13053 = !DILocation(line: 1727, column: 1, scope: !2203)
!13054 = !DILocation(line: 6864, column: 20, scope: !1246)
!13055 = !DILocation(line: 6864, column: 41, scope: !1246)
!13056 = !DILocation(line: 6864, column: 65, scope: !1246)
!13057 = !DILocation(line: 6865, column: 23, scope: !1246)
!13058 = !DILocation(line: 6867, column: 5, scope: !1246)
!13059 = !DILocation(line: 6867, column: 17, scope: !1246)
!13060 = !DILocation(line: 6867, column: 24, scope: !1246)
!13061 = !DILocation(line: 6867, column: 32, scope: !1246)
!13062 = !DILocation(line: 6868, column: 5, scope: !1246)
!13063 = !DILocation(line: 6868, column: 13, scope: !1246)
!13064 = !DILocation(line: 6868, column: 31, scope: !1246)
!13065 = !DILocation(line: 6868, column: 22, scope: !1246)
!13066 = !DILocation(line: 6870, column: 23, scope: !13067)
!13067 = distinct !DILexicalBlock(scope: !1246, file: !4, line: 6870, column: 9)
!13068 = !DILocation(line: 6870, column: 9, scope: !13067)
!13069 = !DILocation(line: 6870, column: 9, scope: !1246)
!13070 = !DILocation(line: 6871, column: 28, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13072, file: !4, line: 6871, column: 13)
!13072 = distinct !DILexicalBlock(scope: !13067, file: !4, line: 6870, column: 27)
!13073 = !DILocation(line: 6871, column: 36, scope: !13071)
!13074 = !DILocation(line: 6871, column: 39, scope: !13071)
!13075 = !DILocation(line: 6871, column: 44, scope: !13071)
!13076 = !DILocation(line: 6871, column: 13, scope: !13071)
!13077 = !DILocation(line: 6871, column: 13, scope: !13072)
!13078 = !DILocation(line: 6872, column: 13, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13071, file: !4, line: 6871, column: 53)
!13080 = !DILocation(line: 6874, column: 19, scope: !13072)
!13081 = !DILocation(line: 6874, column: 27, scope: !13072)
!13082 = !DILocation(line: 6874, column: 30, scope: !13072)
!13083 = !DILocation(line: 6874, column: 9, scope: !13072)
!13084 = !DILocation(line: 6875, column: 9, scope: !13072)
!13085 = !DILocation(line: 6878, column: 20, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !1246, file: !4, line: 6878, column: 9)
!13087 = !DILocation(line: 6878, column: 28, scope: !13086)
!13088 = !DILocation(line: 6878, column: 31, scope: !13086)
!13089 = !DILocation(line: 6878, column: 10, scope: !13086)
!13090 = !DILocation(line: 6878, column: 9, scope: !1246)
!13091 = !DILocation(line: 6879, column: 9, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13086, file: !4, line: 6878, column: 40)
!13093 = !DILocation(line: 6881, column: 19, scope: !1246)
!13094 = !DILocation(line: 6881, column: 27, scope: !1246)
!13095 = !DILocation(line: 6881, column: 32, scope: !1246)
!13096 = !DILocation(line: 6881, column: 5, scope: !1246)
!13097 = !DILocation(line: 6882, column: 23, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !1246, file: !4, line: 6882, column: 9)
!13099 = !DILocation(line: 6882, column: 9, scope: !13098)
!13100 = !DILocation(line: 6882, column: 9, scope: !1246)
!13101 = !DILocation(line: 6883, column: 9, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !13098, file: !4, line: 6882, column: 32)
!13103 = !DILocation(line: 6885, column: 20, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !1246, file: !4, line: 6885, column: 9)
!13105 = !DILocation(line: 6885, column: 9, scope: !13104)
!13106 = !DILocation(line: 6885, column: 9, scope: !1246)
!13107 = !DILocation(line: 6886, column: 20, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13104, file: !4, line: 6885, column: 29)
!13109 = !DILocation(line: 6886, column: 28, scope: !13108)
!13110 = !DILocation(line: 6886, column: 9, scope: !13108)
!13111 = !DILocation(line: 6887, column: 9, scope: !13108)
!13112 = !DILocation(line: 6890, column: 29, scope: !1246)
!13113 = !DILocation(line: 6890, column: 13, scope: !1246)
!13114 = !DILocation(line: 6890, column: 11, scope: !1246)
!13115 = !DILocation(line: 6891, column: 15, scope: !1246)
!13116 = !DILocation(line: 6891, column: 20, scope: !1246)
!13117 = !DILocation(line: 6891, column: 14, scope: !1246)
!13118 = !DILocation(line: 6891, column: 38, scope: !13119)
!13119 = !DILexicalBlockFile(scope: !1246, file: !4, discriminator: 1)
!13120 = !DILocation(line: 6891, column: 29, scope: !1246)
!13121 = !DILocation(line: 6891, column: 45, scope: !13122)
!13122 = !DILexicalBlockFile(scope: !1246, file: !4, discriminator: 2)
!13123 = !DILocation(line: 6891, column: 50, scope: !1246)
!13124 = !DILocation(line: 6891, column: 12, scope: !13125)
!13125 = !DILexicalBlockFile(scope: !13126, file: !4, discriminator: 4)
!13126 = !DILexicalBlockFile(scope: !1246, file: !4, discriminator: 3)
!13127 = !DILocation(line: 6893, column: 16, scope: !1246)
!13128 = !DILocation(line: 6893, column: 25, scope: !1246)
!13129 = !DILocation(line: 6893, column: 33, scope: !1246)
!13130 = !DILocation(line: 6893, column: 23, scope: !1246)
!13131 = !DILocation(line: 6893, column: 14, scope: !1246)
!13132 = !DILocation(line: 6894, column: 14, scope: !1246)
!13133 = !DILocation(line: 6894, column: 22, scope: !1246)
!13134 = !DILocation(line: 6894, column: 20, scope: !1246)
!13135 = !DILocation(line: 6894, column: 13, scope: !1246)
!13136 = !DILocation(line: 6894, column: 34, scope: !13119)
!13137 = !DILocation(line: 6894, column: 45, scope: !13122)
!13138 = !DILocation(line: 6894, column: 11, scope: !13125)
!13139 = !DILocation(line: 6896, column: 25, scope: !1246)
!13140 = !DILocation(line: 6896, column: 33, scope: !1246)
!13141 = !DILocation(line: 6896, column: 5, scope: !1246)
!13142 = !DILocation(line: 6897, column: 20, scope: !1246)
!13143 = !DILocation(line: 6897, column: 5, scope: !1246)
!13144 = !DILocation(line: 6897, column: 13, scope: !1246)
!13145 = !DILocation(line: 6897, column: 17, scope: !1246)
!13146 = !DILocation(line: 6898, column: 1, scope: !1246)
!13147 = !DILocation(line: 6898, column: 1, scope: !13119)
!13148 = !DILocation(line: 6938, column: 22, scope: !1265)
!13149 = !DILocation(line: 6938, column: 38, scope: !1265)
!13150 = !DILocation(line: 6938, column: 54, scope: !1265)
!13151 = !DILocation(line: 6939, column: 36, scope: !1265)
!13152 = !DILocation(line: 6939, column: 51, scope: !1265)
!13153 = !DILocation(line: 6941, column: 5, scope: !1265)
!13154 = !DILocation(line: 6941, column: 19, scope: !1265)
!13155 = !DILocation(line: 6942, column: 5, scope: !1265)
!13156 = !DILocation(line: 6942, column: 16, scope: !1265)
!13157 = !DILocation(line: 6942, column: 31, scope: !1265)
!13158 = !DILocation(line: 6942, column: 37, scope: !1265)
!13159 = !DILocation(line: 6942, column: 44, scope: !1265)
!13160 = !DILocation(line: 6942, column: 89, scope: !1265)
!13161 = !DILocation(line: 6943, column: 5, scope: !1265)
!13162 = !DILocation(line: 6943, column: 16, scope: !1265)
!13163 = !DILocation(line: 6943, column: 28, scope: !1265)
!13164 = !DILocation(line: 6943, column: 34, scope: !1265)
!13165 = !DILocation(line: 6943, column: 38, scope: !1265)
!13166 = !DILocation(line: 6943, column: 83, scope: !1265)
!13167 = !DILocation(line: 6944, column: 5, scope: !1265)
!13168 = !DILocation(line: 6944, column: 17, scope: !1265)
!13169 = !DILocation(line: 6944, column: 26, scope: !1265)
!13170 = !DILocation(line: 6945, column: 5, scope: !1265)
!13171 = !DILocation(line: 6945, column: 9, scope: !1265)
!13172 = !DILocation(line: 6945, column: 14, scope: !1265)
!13173 = !DILocation(line: 6945, column: 21, scope: !1265)
!13174 = !DILocation(line: 6947, column: 23, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !1265, file: !4, line: 6947, column: 9)
!13176 = !DILocation(line: 6947, column: 9, scope: !13175)
!13177 = !DILocation(line: 6947, column: 26, scope: !13175)
!13178 = !DILocation(line: 6947, column: 43, scope: !13179)
!13179 = !DILexicalBlockFile(scope: !13175, file: !4, discriminator: 1)
!13180 = !DILocation(line: 6947, column: 29, scope: !13175)
!13181 = !DILocation(line: 6947, column: 9, scope: !1265)
!13182 = !DILocation(line: 6948, column: 29, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13184, file: !4, line: 6948, column: 13)
!13184 = distinct !DILexicalBlock(scope: !13175, file: !4, line: 6947, column: 47)
!13185 = !DILocation(line: 6948, column: 32, scope: !13183)
!13186 = !DILocation(line: 6948, column: 35, scope: !13183)
!13187 = !DILocation(line: 6948, column: 38, scope: !13183)
!13188 = !DILocation(line: 6948, column: 43, scope: !13183)
!13189 = !DILocation(line: 6948, column: 13, scope: !13183)
!13190 = !DILocation(line: 6948, column: 13, scope: !13184)
!13191 = !DILocation(line: 6949, column: 13, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13183, file: !4, line: 6948, column: 52)
!13193 = !DILocation(line: 6951, column: 28, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13184, file: !4, line: 6951, column: 13)
!13195 = !DILocation(line: 6951, column: 13, scope: !13194)
!13196 = !DILocation(line: 6951, column: 13, scope: !13184)
!13197 = !DILocation(line: 6952, column: 26, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13194, file: !4, line: 6951, column: 32)
!13199 = !DILocation(line: 6952, column: 42, scope: !13198)
!13200 = !DILocation(line: 6952, column: 13, scope: !13198)
!13201 = !DILocation(line: 6953, column: 13, scope: !13198)
!13202 = !DILocation(line: 6955, column: 28, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13184, file: !4, line: 6955, column: 13)
!13204 = !DILocation(line: 6955, column: 13, scope: !13203)
!13205 = !DILocation(line: 6955, column: 13, scope: !13184)
!13206 = !DILocation(line: 6956, column: 23, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13203, file: !4, line: 6955, column: 32)
!13208 = !DILocation(line: 6956, column: 26, scope: !13207)
!13209 = !DILocation(line: 6956, column: 29, scope: !13207)
!13210 = !DILocation(line: 6956, column: 13, scope: !13207)
!13211 = !DILocation(line: 6957, column: 27, scope: !13207)
!13212 = !DILocation(line: 6957, column: 30, scope: !13207)
!13213 = !DILocation(line: 6957, column: 35, scope: !13207)
!13214 = !DILocation(line: 6957, column: 13, scope: !13207)
!13215 = !DILocation(line: 6958, column: 13, scope: !13207)
!13216 = !DILocation(line: 6961, column: 9, scope: !13184)
!13217 = !DILocation(line: 6963, column: 25, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !1265, file: !4, line: 6963, column: 9)
!13219 = !DILocation(line: 6963, column: 9, scope: !13218)
!13220 = !DILocation(line: 6963, column: 9, scope: !1265)
!13221 = !DILocation(line: 6964, column: 29, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13223, file: !4, line: 6964, column: 13)
!13223 = distinct !DILexicalBlock(scope: !13218, file: !4, line: 6963, column: 29)
!13224 = !DILocation(line: 6964, column: 13, scope: !13222)
!13225 = !DILocation(line: 6964, column: 13, scope: !13223)
!13226 = !DILocation(line: 6965, column: 26, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13222, file: !4, line: 6964, column: 33)
!13228 = !DILocation(line: 6965, column: 42, scope: !13227)
!13229 = !DILocation(line: 6965, column: 13, scope: !13227)
!13230 = !DILocation(line: 6966, column: 9, scope: !13227)
!13231 = !DILocation(line: 6968, column: 26, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13222, file: !4, line: 6967, column: 14)
!13233 = !DILocation(line: 6968, column: 42, scope: !13232)
!13234 = !DILocation(line: 6968, column: 13, scope: !13232)
!13235 = !DILocation(line: 6970, column: 9, scope: !13223)
!13236 = !DILocation(line: 6973, column: 9, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !1265, file: !4, line: 6973, column: 9)
!13238 = !DILocation(line: 6973, column: 14, scope: !13237)
!13239 = !DILocation(line: 6973, column: 11, scope: !13237)
!13240 = !DILocation(line: 6973, column: 9, scope: !1265)
!13241 = !DILocation(line: 6974, column: 31, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13243, file: !4, line: 6974, column: 13)
!13243 = distinct !DILexicalBlock(scope: !13237, file: !4, line: 6973, column: 17)
!13244 = !DILocation(line: 6974, column: 34, scope: !13242)
!13245 = !DILocation(line: 6974, column: 14, scope: !13242)
!13246 = !DILocation(line: 6974, column: 13, scope: !13243)
!13247 = !DILocation(line: 6975, column: 26, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13242, file: !4, line: 6974, column: 43)
!13249 = !DILocation(line: 6975, column: 42, scope: !13248)
!13250 = !DILocation(line: 6975, column: 13, scope: !13248)
!13251 = !DILocation(line: 6976, column: 13, scope: !13248)
!13252 = !DILocation(line: 6978, column: 11, scope: !13243)
!13253 = !DILocation(line: 6979, column: 5, scope: !13243)
!13254 = !DILocation(line: 6981, column: 22, scope: !1265)
!13255 = !DILocation(line: 6981, column: 25, scope: !1265)
!13256 = !DILocation(line: 6981, column: 28, scope: !1265)
!13257 = !DILocation(line: 6981, column: 31, scope: !1265)
!13258 = !DILocation(line: 6981, column: 36, scope: !1265)
!13259 = !DILocation(line: 6981, column: 5, scope: !1265)
!13260 = !DILocation(line: 6982, column: 9, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !1265, file: !4, line: 6982, column: 9)
!13262 = !DILocation(line: 6982, column: 23, scope: !13261)
!13263 = !DILocation(line: 6982, column: 36, scope: !13264)
!13264 = !DILexicalBlockFile(scope: !13261, file: !4, discriminator: 1)
!13265 = !DILocation(line: 6982, column: 26, scope: !13261)
!13266 = !DILocation(line: 6982, column: 9, scope: !1265)
!13267 = !DILocation(line: 6983, column: 9, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13261, file: !4, line: 6982, column: 40)
!13269 = !DILocation(line: 6985, column: 25, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !1265, file: !4, line: 6985, column: 9)
!13271 = !DILocation(line: 6985, column: 9, scope: !13270)
!13272 = !DILocation(line: 6985, column: 9, scope: !1265)
!13273 = !DILocation(line: 6986, column: 9, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13270, file: !4, line: 6985, column: 29)
!13275 = !DILocation(line: 6989, column: 26, scope: !1265)
!13276 = !DILocation(line: 6989, column: 15, scope: !1265)
!13277 = !DILocation(line: 6989, column: 42, scope: !1265)
!13278 = !DILocation(line: 6989, column: 31, scope: !1265)
!13279 = !DILocation(line: 6989, column: 29, scope: !1265)
!13280 = !DILocation(line: 6989, column: 13, scope: !1265)
!13281 = !DILocation(line: 6990, column: 15, scope: !13282)
!13282 = distinct !DILexicalBlock(scope: !1265, file: !4, line: 6990, column: 9)
!13283 = !DILocation(line: 6990, column: 12, scope: !13282)
!13284 = !DILocation(line: 6990, column: 23, scope: !13282)
!13285 = !DILocation(line: 6990, column: 26, scope: !13286)
!13286 = !DILexicalBlockFile(scope: !13282, file: !4, discriminator: 1)
!13287 = !DILocation(line: 6990, column: 34, scope: !13282)
!13288 = !DILocation(line: 6990, column: 9, scope: !1265)
!13289 = !DILocation(line: 6992, column: 19, scope: !13290)
!13290 = distinct !DILexicalBlock(scope: !13282, file: !4, line: 6990, column: 40)
!13291 = !DILocation(line: 6992, column: 17, scope: !13290)
!13292 = !DILocation(line: 6993, column: 21, scope: !13290)
!13293 = !DILocation(line: 6993, column: 17, scope: !13290)
!13294 = !DILocation(line: 6994, column: 17, scope: !13290)
!13295 = !DILocation(line: 6994, column: 15, scope: !13290)
!13296 = !DILocation(line: 6996, column: 9, scope: !13290)
!13297 = !DILocation(line: 6997, column: 22, scope: !13298)
!13298 = distinct !DILexicalBlock(scope: !13290, file: !4, line: 6997, column: 13)
!13299 = !DILocation(line: 6997, column: 13, scope: !13298)
!13300 = !DILocation(line: 6997, column: 37, scope: !13298)
!13301 = !DILocation(line: 6997, column: 28, scope: !13298)
!13302 = !DILocation(line: 6997, column: 25, scope: !13298)
!13303 = !DILocation(line: 6997, column: 13, scope: !13290)
!13304 = !DILocation(line: 6999, column: 27, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13298, file: !4, line: 6997, column: 41)
!13306 = !DILocation(line: 6999, column: 30, scope: !13305)
!13307 = !DILocation(line: 6999, column: 52, scope: !13305)
!13308 = !DILocation(line: 6999, column: 13, scope: !13305)
!13309 = !DILocation(line: 7000, column: 9, scope: !13305)
!13310 = !DILocation(line: 7003, column: 27, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13298, file: !4, line: 7001, column: 14)
!13312 = !DILocation(line: 7003, column: 30, scope: !13311)
!13313 = !DILocation(line: 7003, column: 52, scope: !13311)
!13314 = !DILocation(line: 7003, column: 13, scope: !13311)
!13315 = !DILocation(line: 7006, column: 21, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13290, file: !4, line: 7006, column: 13)
!13317 = !DILocation(line: 7006, column: 27, scope: !13316)
!13318 = !DILocation(line: 7006, column: 13, scope: !13290)
!13319 = !DILocation(line: 7007, column: 26, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13316, file: !4, line: 7006, column: 143)
!13321 = !DILocation(line: 7007, column: 37, scope: !13320)
!13322 = !DILocation(line: 7007, column: 43, scope: !13320)
!13323 = !DILocation(line: 7007, column: 159, scope: !13320)
!13324 = !DILocation(line: 7007, column: 13, scope: !13320)
!13325 = !DILocation(line: 7008, column: 13, scope: !13320)
!13326 = !DILocation(line: 7011, column: 32, scope: !13290)
!13327 = !DILocation(line: 7011, column: 15, scope: !13290)
!13328 = !DILocation(line: 7011, column: 13, scope: !13290)
!13329 = !DILocation(line: 7012, column: 13, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13290, file: !4, line: 7012, column: 13)
!13331 = !DILocation(line: 7012, column: 17, scope: !13330)
!13332 = !DILocation(line: 7012, column: 21, scope: !13330)
!13333 = !DILocation(line: 7012, column: 25, scope: !13334)
!13334 = !DILexicalBlockFile(scope: !13330, file: !4, discriminator: 1)
!13335 = !DILocation(line: 7012, column: 29, scope: !13330)
!13336 = !DILocation(line: 7012, column: 34, scope: !13330)
!13337 = !DILocation(line: 7012, column: 37, scope: !13338)
!13338 = !DILexicalBlockFile(scope: !13330, file: !4, discriminator: 2)
!13339 = !DILocation(line: 7012, column: 13, scope: !13290)
!13340 = !DILocation(line: 7014, column: 17, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13342, file: !4, line: 7014, column: 17)
!13342 = distinct !DILexicalBlock(scope: !13330, file: !4, line: 7012, column: 45)
!13343 = !DILocation(line: 7014, column: 25, scope: !13341)
!13344 = !DILocation(line: 7014, column: 28, scope: !13345)
!13345 = !DILexicalBlockFile(scope: !13341, file: !4, discriminator: 1)
!13346 = !DILocation(line: 7014, column: 39, scope: !13341)
!13347 = !DILocation(line: 7014, column: 44, scope: !13341)
!13348 = !DILocation(line: 7014, column: 36, scope: !13341)
!13349 = !DILocation(line: 7014, column: 17, scope: !13342)
!13350 = !DILocation(line: 7016, column: 30, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13341, file: !4, line: 7014, column: 50)
!13352 = !DILocation(line: 7016, column: 46, scope: !13351)
!13353 = !DILocation(line: 7016, column: 17, scope: !13351)
!13354 = !DILocation(line: 7017, column: 17, scope: !13351)
!13355 = !DILocation(line: 7019, column: 23, scope: !13342)
!13356 = !DILocation(line: 7019, column: 30, scope: !13342)
!13357 = !DILocation(line: 7019, column: 13, scope: !13342)
!13358 = !DILocation(line: 7020, column: 9, scope: !13342)
!13359 = !DILocation(line: 7021, column: 5, scope: !13290)
!13360 = !DILocation(line: 6990, column: 37, scope: !13361)
!13361 = !DILexicalBlockFile(scope: !13362, file: !4, discriminator: 3)
!13362 = !DILexicalBlockFile(scope: !13282, file: !4, discriminator: 2)
!13363 = !DILocation(line: 7025, column: 5, scope: !1265)
!13364 = !DILocation(line: 7026, column: 5, scope: !1265)
!13365 = !DILocation(line: 7027, column: 19, scope: !1265)
!13366 = !DILocation(line: 7027, column: 22, scope: !1265)
!13367 = !DILocation(line: 7027, column: 27, scope: !1265)
!13368 = !DILocation(line: 7027, column: 5, scope: !1265)
!13369 = !DILocation(line: 7028, column: 1, scope: !1265)
!13370 = !DILocation(line: 7028, column: 1, scope: !13371)
!13371 = !DILexicalBlockFile(scope: !1265, file: !4, discriminator: 1)
!13372 = !DILocation(line: 982, column: 34, scope: !2214)
!13373 = !DILocation(line: 984, column: 39, scope: !13374)
!13374 = distinct !DILexicalBlock(scope: !2214, file: !4, line: 984, column: 9)
!13375 = !DILocation(line: 984, column: 28, scope: !13374)
!13376 = !DILocation(line: 984, column: 9, scope: !13374)
!13377 = !DILocation(line: 984, column: 9, scope: !2214)
!13378 = !DILocation(line: 985, column: 28, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13380, file: !4, line: 985, column: 13)
!13380 = distinct !DILexicalBlock(scope: !13374, file: !4, line: 984, column: 46)
!13381 = !DILocation(line: 985, column: 33, scope: !13379)
!13382 = !DILocation(line: 985, column: 39, scope: !13379)
!13383 = !DILocation(line: 985, column: 44, scope: !13379)
!13384 = !DILocation(line: 985, column: 47, scope: !13379)
!13385 = !DILocation(line: 985, column: 13, scope: !13379)
!13386 = !DILocation(line: 985, column: 13, scope: !13380)
!13387 = !DILocation(line: 986, column: 13, scope: !13388)
!13388 = distinct !DILexicalBlock(scope: !13379, file: !4, line: 985, column: 52)
!13389 = !DILocation(line: 988, column: 5, scope: !13380)
!13390 = !DILocation(line: 990, column: 5, scope: !2214)
!13391 = !DILocation(line: 991, column: 1, scope: !2214)
!13392 = !DILocation(line: 3381, column: 18, scope: !2225)
!13393 = !DILocation(line: 3381, column: 39, scope: !2225)
!13394 = !DILocation(line: 3381, column: 55, scope: !2225)
!13395 = !DILocation(line: 3382, column: 32, scope: !2225)
!13396 = !DILocation(line: 3382, column: 47, scope: !2225)
!13397 = !DILocation(line: 3384, column: 19, scope: !2225)
!13398 = !DILocation(line: 3384, column: 27, scope: !2225)
!13399 = !DILocation(line: 3384, column: 30, scope: !2225)
!13400 = !DILocation(line: 3384, column: 43, scope: !2225)
!13401 = !DILocation(line: 3384, column: 34, scope: !2225)
!13402 = !DILocation(line: 3384, column: 33, scope: !2225)
!13403 = !DILocation(line: 3384, column: 47, scope: !2225)
!13404 = !DILocation(line: 3384, column: 52, scope: !2225)
!13405 = !DILocation(line: 3384, column: 6, scope: !2225)
!13406 = !DILocation(line: 3385, column: 1, scope: !2225)
!13407 = !DILocation(line: 7031, column: 22, scope: !2232)
!13408 = !DILocation(line: 7031, column: 43, scope: !2232)
!13409 = !DILocation(line: 7031, column: 58, scope: !2232)
!13410 = !DILocation(line: 7032, column: 36, scope: !2232)
!13411 = !DILocation(line: 7032, column: 51, scope: !2232)
!13412 = !DILocation(line: 7034, column: 5, scope: !2232)
!13413 = !DILocation(line: 7034, column: 17, scope: !2232)
!13414 = !DILocation(line: 7034, column: 26, scope: !2232)
!13415 = !DILocation(line: 7035, column: 5, scope: !2232)
!13416 = !DILocation(line: 7035, column: 16, scope: !2232)
!13417 = !DILocation(line: 7037, column: 23, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !2232, file: !4, line: 7037, column: 9)
!13419 = !DILocation(line: 7037, column: 9, scope: !13418)
!13420 = !DILocation(line: 7037, column: 9, scope: !2232)
!13421 = !DILocation(line: 7038, column: 19, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13418, file: !4, line: 7037, column: 27)
!13423 = !DILocation(line: 7038, column: 27, scope: !13422)
!13424 = !DILocation(line: 7038, column: 30, scope: !13422)
!13425 = !DILocation(line: 7038, column: 9, scope: !13422)
!13426 = !DILocation(line: 7039, column: 9, scope: !13422)
!13427 = !DILocation(line: 7042, column: 20, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !2232, file: !4, line: 7042, column: 9)
!13429 = !DILocation(line: 7042, column: 9, scope: !13428)
!13430 = !DILocation(line: 7042, column: 9, scope: !2232)
!13431 = !DILocation(line: 7043, column: 20, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13428, file: !4, line: 7042, column: 24)
!13433 = !DILocation(line: 7043, column: 37, scope: !13432)
!13434 = !DILocation(line: 7043, column: 28, scope: !13432)
!13435 = !DILocation(line: 7043, column: 44, scope: !13432)
!13436 = !DILocation(line: 7043, column: 9, scope: !13432)
!13437 = !DILocation(line: 7044, column: 9, scope: !13432)
!13438 = !DILocation(line: 7047, column: 15, scope: !2232)
!13439 = !DILocation(line: 7047, column: 18, scope: !2232)
!13440 = !DILocation(line: 7047, column: 24, scope: !2232)
!13441 = !DILocation(line: 7047, column: 22, scope: !2232)
!13442 = !DILocation(line: 7047, column: 13, scope: !2232)
!13443 = !DILocation(line: 7048, column: 9, scope: !13444)
!13444 = distinct !DILexicalBlock(scope: !2232, file: !4, line: 7048, column: 9)
!13445 = !DILocation(line: 7048, column: 17, scope: !13444)
!13446 = !DILocation(line: 7048, column: 9, scope: !2232)
!13447 = !DILocation(line: 7049, column: 17, scope: !13448)
!13448 = distinct !DILexicalBlock(scope: !13444, file: !4, line: 7048, column: 23)
!13449 = !DILocation(line: 7049, column: 15, scope: !13448)
!13450 = !DILocation(line: 7050, column: 13, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13448, file: !4, line: 7050, column: 13)
!13452 = !DILocation(line: 7050, column: 16, scope: !13451)
!13453 = !DILocation(line: 7050, column: 25, scope: !13451)
!13454 = !DILocation(line: 7050, column: 23, scope: !13451)
!13455 = !DILocation(line: 7050, column: 31, scope: !13451)
!13456 = !DILocation(line: 7050, column: 13, scope: !13448)
!13457 = !DILocation(line: 7051, column: 26, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13451, file: !4, line: 7050, column: 58)
!13459 = !DILocation(line: 7051, column: 47, scope: !13458)
!13460 = !DILocation(line: 7051, column: 13, scope: !13458)
!13461 = !DILocation(line: 7052, column: 13, scope: !13458)
!13462 = !DILocation(line: 7054, column: 26, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13448, file: !4, line: 7054, column: 13)
!13464 = !DILocation(line: 7054, column: 34, scope: !13463)
!13465 = !DILocation(line: 7054, column: 37, scope: !13463)
!13466 = !DILocation(line: 7054, column: 44, scope: !13463)
!13467 = !DILocation(line: 7054, column: 14, scope: !13463)
!13468 = !DILocation(line: 7054, column: 13, scope: !13448)
!13469 = !DILocation(line: 7055, column: 13, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13463, file: !4, line: 7054, column: 53)
!13471 = !DILocation(line: 7057, column: 23, scope: !13448)
!13472 = !DILocation(line: 7057, column: 9, scope: !13448)
!13473 = !DILocation(line: 7057, column: 17, scope: !13448)
!13474 = !DILocation(line: 7057, column: 21, scope: !13448)
!13475 = !DILocation(line: 7058, column: 5, scope: !13448)
!13476 = !DILocation(line: 7060, column: 18, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13444, file: !4, line: 7059, column: 10)
!13478 = !DILocation(line: 7060, column: 17, scope: !13477)
!13479 = !DILocation(line: 7060, column: 15, scope: !13477)
!13480 = !DILocation(line: 7061, column: 27, scope: !13477)
!13481 = !DILocation(line: 7061, column: 35, scope: !13477)
!13482 = !DILocation(line: 7061, column: 38, scope: !13477)
!13483 = !DILocation(line: 7061, column: 45, scope: !13477)
!13484 = !DILocation(line: 7061, column: 15, scope: !13477)
!13485 = !DILocation(line: 7061, column: 13, scope: !13477)
!13486 = !DILocation(line: 7062, column: 13, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13477, file: !4, line: 7062, column: 13)
!13488 = !DILocation(line: 7062, column: 17, scope: !13487)
!13489 = !DILocation(line: 7062, column: 13, scope: !13477)
!13490 = !DILocation(line: 7063, column: 13, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13487, file: !4, line: 7062, column: 46)
!13492 = !DILocation(line: 7065, column: 23, scope: !13477)
!13493 = !DILocation(line: 7065, column: 9, scope: !13477)
!13494 = !DILocation(line: 7065, column: 17, scope: !13477)
!13495 = !DILocation(line: 7065, column: 21, scope: !13477)
!13496 = !DILocation(line: 7066, column: 33, scope: !13477)
!13497 = !DILocation(line: 7066, column: 41, scope: !13477)
!13498 = !DILocation(line: 7066, column: 46, scope: !13477)
!13499 = !DILocation(line: 7066, column: 51, scope: !13477)
!13500 = !DILocation(line: 7066, column: 9, scope: !13477)
!13501 = !DILocation(line: 7067, column: 10, scope: !13477)
!13502 = !DILocation(line: 7067, column: 17, scope: !13477)
!13503 = !DILocation(line: 7068, column: 13, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13477, file: !4, line: 7068, column: 13)
!13505 = !DILocation(line: 7068, column: 13, scope: !13477)
!13506 = !DILocation(line: 7069, column: 14, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13504, file: !4, line: 7068, column: 18)
!13508 = !DILocation(line: 7069, column: 21, scope: !13507)
!13509 = !DILocation(line: 7070, column: 9, scope: !13507)
!13510 = !DILocation(line: 7073, column: 25, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !2232, file: !4, line: 7073, column: 9)
!13512 = !DILocation(line: 7073, column: 33, scope: !13511)
!13513 = !DILocation(line: 7073, column: 9, scope: !13511)
!13514 = !DILocation(line: 7073, column: 9, scope: !2232)
!13515 = !DILocation(line: 7074, column: 10, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13511, file: !4, line: 7073, column: 39)
!13517 = !DILocation(line: 7074, column: 17, scope: !13516)
!13518 = !DILocation(line: 7075, column: 5, scope: !13516)
!13519 = !DILocation(line: 7076, column: 1, scope: !2232)
!13520 = !DILocation(line: 7076, column: 1, scope: !13521)
!13521 = !DILexicalBlockFile(scope: !2232, file: !4, discriminator: 1)
!13522 = !DILocation(line: 7107, column: 25, scope: !1289)
!13523 = !DILocation(line: 7107, column: 46, scope: !1289)
!13524 = !DILocation(line: 7107, column: 61, scope: !1289)
!13525 = !DILocation(line: 7108, column: 39, scope: !1289)
!13526 = !DILocation(line: 7108, column: 54, scope: !1289)
!13527 = !DILocation(line: 7110, column: 9, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !1289, file: !4, line: 7110, column: 9)
!13529 = !DILocation(line: 7110, column: 13, scope: !13528)
!13530 = !DILocation(line: 7110, column: 39, scope: !13528)
!13531 = !DILocation(line: 7110, column: 42, scope: !13532)
!13532 = !DILexicalBlockFile(scope: !13528, file: !4, discriminator: 1)
!13533 = !DILocation(line: 7110, column: 46, scope: !13528)
!13534 = !DILocation(line: 7110, column: 9, scope: !1289)
!13535 = !DILocation(line: 7111, column: 22, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13528, file: !4, line: 7110, column: 122)
!13537 = !DILocation(line: 7111, column: 43, scope: !13536)
!13538 = !DILocation(line: 7111, column: 9, scope: !13536)
!13539 = !DILocation(line: 7112, column: 9, scope: !13536)
!13540 = !DILocation(line: 7115, column: 19, scope: !1289)
!13541 = !DILocation(line: 7115, column: 27, scope: !1289)
!13542 = !DILocation(line: 7115, column: 30, scope: !1289)
!13543 = !DILocation(line: 7115, column: 35, scope: !1289)
!13544 = !DILocation(line: 7115, column: 40, scope: !1289)
!13545 = !DILocation(line: 7115, column: 5, scope: !1289)
!13546 = !DILocation(line: 7116, column: 1, scope: !1289)
!13547 = !DILocation(line: 7116, column: 1, scope: !13548)
!13548 = !DILexicalBlockFile(scope: !1289, file: !4, discriminator: 1)
!13549 = !DILocation(line: 7160, column: 27, scope: !1296)
!13550 = !DILocation(line: 7160, column: 48, scope: !1296)
!13551 = !DILocation(line: 7160, column: 72, scope: !1296)
!13552 = !DILocation(line: 7161, column: 30, scope: !1296)
!13553 = !DILocation(line: 7163, column: 49, scope: !1296)
!13554 = !DILocation(line: 7163, column: 57, scope: !1296)
!13555 = !DILocation(line: 7163, column: 60, scope: !1296)
!13556 = !DILocation(line: 7163, column: 65, scope: !1296)
!13557 = !DILocation(line: 7163, column: 11, scope: !1296)
!13558 = !DILocation(line: 7164, column: 1, scope: !1296)
!13559 = !DILocation(line: 7121, column: 29, scope: !2242)
!13560 = !DILocation(line: 7121, column: 44, scope: !2242)
!13561 = !DILocation(line: 7121, column: 65, scope: !2242)
!13562 = !DILocation(line: 7122, column: 46, scope: !2242)
!13563 = !DILocation(line: 7122, column: 61, scope: !2242)
!13564 = !DILocation(line: 7124, column: 5, scope: !2242)
!13565 = !DILocation(line: 7124, column: 16, scope: !2242)
!13566 = !DILocation(line: 7126, column: 23, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !2242, file: !4, line: 7126, column: 9)
!13568 = !DILocation(line: 7126, column: 9, scope: !13567)
!13569 = !DILocation(line: 7126, column: 9, scope: !2242)
!13570 = !DILocation(line: 7127, column: 28, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13572, file: !4, line: 7127, column: 13)
!13572 = distinct !DILexicalBlock(scope: !13567, file: !4, line: 7126, column: 27)
!13573 = !DILocation(line: 7127, column: 36, scope: !13571)
!13574 = !DILocation(line: 7127, column: 39, scope: !13571)
!13575 = !DILocation(line: 7127, column: 44, scope: !13571)
!13576 = !DILocation(line: 7127, column: 13, scope: !13571)
!13577 = !DILocation(line: 7127, column: 13, scope: !13572)
!13578 = !DILocation(line: 7128, column: 13, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13571, file: !4, line: 7127, column: 53)
!13580 = !DILocation(line: 7130, column: 19, scope: !13572)
!13581 = !DILocation(line: 7130, column: 27, scope: !13572)
!13582 = !DILocation(line: 7130, column: 30, scope: !13572)
!13583 = !DILocation(line: 7130, column: 9, scope: !13572)
!13584 = !DILocation(line: 7131, column: 9, scope: !13572)
!13585 = !DILocation(line: 7133, column: 9, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !2242, file: !4, line: 7133, column: 9)
!13587 = !DILocation(line: 7133, column: 12, scope: !13586)
!13588 = !DILocation(line: 7133, column: 16, scope: !13586)
!13589 = !DILocation(line: 7133, column: 9, scope: !2242)
!13590 = !DILocation(line: 7134, column: 19, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13586, file: !4, line: 7133, column: 22)
!13592 = !DILocation(line: 7134, column: 27, scope: !13591)
!13593 = !DILocation(line: 7134, column: 30, scope: !13591)
!13594 = !DILocation(line: 7134, column: 9, scope: !13591)
!13595 = !DILocation(line: 7135, column: 9, scope: !13591)
!13596 = !DILocation(line: 7137, column: 25, scope: !13597)
!13597 = distinct !DILexicalBlock(scope: !2242, file: !4, line: 7137, column: 9)
!13598 = !DILocation(line: 7137, column: 9, scope: !13597)
!13599 = !DILocation(line: 7137, column: 9, scope: !2242)
!13600 = !DILocation(line: 7138, column: 20, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13597, file: !4, line: 7137, column: 29)
!13602 = !DILocation(line: 7138, column: 37, scope: !13601)
!13603 = !DILocation(line: 7138, column: 28, scope: !13601)
!13604 = !DILocation(line: 7138, column: 9, scope: !13601)
!13605 = !DILocation(line: 7139, column: 9, scope: !13601)
!13606 = !DILocation(line: 7142, column: 23, scope: !2242)
!13607 = !DILocation(line: 7142, column: 31, scope: !2242)
!13608 = !DILocation(line: 7142, column: 35, scope: !2242)
!13609 = !DILocation(line: 7142, column: 38, scope: !2242)
!13610 = !DILocation(line: 7142, column: 34, scope: !2242)
!13611 = !DILocation(line: 7142, column: 43, scope: !2242)
!13612 = !DILocation(line: 7142, column: 11, scope: !2242)
!13613 = !DILocation(line: 7142, column: 9, scope: !2242)
!13614 = !DILocation(line: 7143, column: 9, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !2242, file: !4, line: 7143, column: 9)
!13616 = !DILocation(line: 7143, column: 13, scope: !13615)
!13617 = !DILocation(line: 7143, column: 9, scope: !2242)
!13618 = !DILocation(line: 7144, column: 9, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13615, file: !4, line: 7143, column: 42)
!13620 = !DILocation(line: 7146, column: 5, scope: !2242)
!13621 = !DILocation(line: 7146, column: 13, scope: !2242)
!13622 = !DILocation(line: 7146, column: 17, scope: !2242)
!13623 = !DILocation(line: 7148, column: 9, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !2242, file: !4, line: 7148, column: 9)
!13625 = !DILocation(line: 7148, column: 16, scope: !13624)
!13626 = !DILocation(line: 7148, column: 32, scope: !13624)
!13627 = !DILocation(line: 7148, column: 35, scope: !13628)
!13628 = !DILexicalBlockFile(scope: !13624, file: !4, discriminator: 1)
!13629 = !DILocation(line: 7148, column: 42, scope: !13624)
!13630 = !DILocation(line: 7148, column: 9, scope: !2242)
!13631 = !DILocation(line: 7149, column: 33, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13624, file: !4, line: 7148, column: 60)
!13633 = !DILocation(line: 7149, column: 41, scope: !13632)
!13634 = !DILocation(line: 7149, column: 46, scope: !13632)
!13635 = !DILocation(line: 7149, column: 51, scope: !13632)
!13636 = !DILocation(line: 7149, column: 9, scope: !13632)
!13637 = !DILocation(line: 7150, column: 13, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13632, file: !4, line: 7150, column: 13)
!13639 = !DILocation(line: 7150, column: 20, scope: !13638)
!13640 = !DILocation(line: 7150, column: 13, scope: !13632)
!13641 = !DILocation(line: 7151, column: 14, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13638, file: !4, line: 7150, column: 37)
!13643 = !DILocation(line: 7151, column: 21, scope: !13642)
!13644 = !DILocation(line: 7152, column: 17, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13642, file: !4, line: 7152, column: 17)
!13646 = !DILocation(line: 7152, column: 17, scope: !13642)
!13647 = !DILocation(line: 7153, column: 18, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13645, file: !4, line: 7152, column: 22)
!13649 = !DILocation(line: 7153, column: 25, scope: !13648)
!13650 = !DILocation(line: 7154, column: 13, scope: !13648)
!13651 = !DILocation(line: 7155, column: 9, scope: !13642)
!13652 = !DILocation(line: 7156, column: 5, scope: !13632)
!13653 = !DILocation(line: 7157, column: 1, scope: !2242)
!13654 = !DILocation(line: 7157, column: 1, scope: !13655)
!13655 = !DILexicalBlockFile(scope: !2242, file: !4, discriminator: 1)
!13656 = !DILocation(line: 7174, column: 19, scope: !1308)
!13657 = !DILocation(line: 7174, column: 40, scope: !1308)
!13658 = !DILocation(line: 7174, column: 64, scope: !1308)
!13659 = !DILocation(line: 7175, column: 22, scope: !1308)
!13660 = !DILocation(line: 7177, column: 49, scope: !1308)
!13661 = !DILocation(line: 7177, column: 57, scope: !1308)
!13662 = !DILocation(line: 7177, column: 60, scope: !1308)
!13663 = !DILocation(line: 7177, column: 65, scope: !1308)
!13664 = !DILocation(line: 7177, column: 11, scope: !1308)
!13665 = !DILocation(line: 7178, column: 1, scope: !1308)
!13666 = !DILocation(line: 7181, column: 19, scope: !1314)
!13667 = !DILocation(line: 7181, column: 40, scope: !1314)
!13668 = !DILocation(line: 7181, column: 64, scope: !1314)
!13669 = !DILocation(line: 7182, column: 22, scope: !1314)
!13670 = !DILocation(line: 7184, column: 5, scope: !1314)
!13671 = !DILocation(line: 7184, column: 19, scope: !1314)
!13672 = !DILocation(line: 7184, column: 30, scope: !1314)
!13673 = !DILocation(line: 7184, column: 29, scope: !1314)
!13674 = !DILocation(line: 7185, column: 13, scope: !1314)
!13675 = !DILocation(line: 7185, column: 19, scope: !1314)
!13676 = !DILocation(line: 7186, column: 50, scope: !1314)
!13677 = !DILocation(line: 7186, column: 58, scope: !1314)
!13678 = !DILocation(line: 7187, column: 45, scope: !1314)
!13679 = !DILocation(line: 7186, column: 11, scope: !1314)
!13680 = !DILocation(line: 7188, column: 1, scope: !1314)
!13681 = !DILocation(line: 7191, column: 18, scope: !1321)
!13682 = !DILocation(line: 7191, column: 39, scope: !1321)
!13683 = !DILocation(line: 7191, column: 63, scope: !1321)
!13684 = !DILocation(line: 7192, column: 21, scope: !1321)
!13685 = !DILocation(line: 7194, column: 5, scope: !1321)
!13686 = !DILocation(line: 7194, column: 19, scope: !1321)
!13687 = !DILocation(line: 7194, column: 30, scope: !1321)
!13688 = !DILocation(line: 7194, column: 29, scope: !1321)
!13689 = !DILocation(line: 7195, column: 13, scope: !1321)
!13690 = !DILocation(line: 7195, column: 19, scope: !1321)
!13691 = !DILocation(line: 7196, column: 50, scope: !1321)
!13692 = !DILocation(line: 7196, column: 58, scope: !1321)
!13693 = !DILocation(line: 7197, column: 45, scope: !1321)
!13694 = !DILocation(line: 7196, column: 11, scope: !1321)
!13695 = !DILocation(line: 7198, column: 1, scope: !1321)
!13696 = !DILocation(line: 7201, column: 31, scope: !1328)
!13697 = !DILocation(line: 7201, column: 47, scope: !1328)
!13698 = !DILocation(line: 7203, column: 23, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !1328, file: !4, line: 7203, column: 9)
!13700 = !DILocation(line: 7203, column: 9, scope: !13699)
!13701 = !DILocation(line: 7203, column: 26, scope: !13699)
!13702 = !DILocation(line: 7203, column: 43, scope: !13703)
!13703 = !DILexicalBlockFile(scope: !13699, file: !4, discriminator: 1)
!13704 = !DILocation(line: 7203, column: 29, scope: !13699)
!13705 = !DILocation(line: 7203, column: 9, scope: !1328)
!13706 = !DILocation(line: 7204, column: 28, scope: !13707)
!13707 = distinct !DILexicalBlock(scope: !13699, file: !4, line: 7203, column: 47)
!13708 = !DILocation(line: 7204, column: 18, scope: !13707)
!13709 = !DILocation(line: 7204, column: 31, scope: !13707)
!13710 = !DILocation(line: 7204, column: 44, scope: !13711)
!13711 = !DILexicalBlockFile(scope: !13707, file: !4, discriminator: 1)
!13712 = !DILocation(line: 7204, column: 34, scope: !13707)
!13713 = !DILocation(line: 7204, column: 48, scope: !13707)
!13714 = !DILocation(line: 7205, column: 33, scope: !13707)
!13715 = !DILocation(line: 7205, column: 18, scope: !13707)
!13716 = !DILocation(line: 7205, column: 36, scope: !13707)
!13717 = !DILocation(line: 7205, column: 54, scope: !13711)
!13718 = !DILocation(line: 7205, column: 39, scope: !13707)
!13719 = !DILocation(line: 7204, column: 48, scope: !13720)
!13720 = !DILexicalBlockFile(scope: !13721, file: !4, discriminator: 3)
!13721 = !DILexicalBlockFile(scope: !13707, file: !4, discriminator: 2)
!13722 = !DILocation(line: 7204, column: 9, scope: !13707)
!13723 = !DILocation(line: 7208, column: 12, scope: !1328)
!13724 = !DILocation(line: 7208, column: 15, scope: !1328)
!13725 = !DILocation(line: 7208, column: 22, scope: !1328)
!13726 = !DILocation(line: 7208, column: 25, scope: !1328)
!13727 = !DILocation(line: 7208, column: 19, scope: !1328)
!13728 = !DILocation(line: 7208, column: 5, scope: !1328)
!13729 = !DILocation(line: 7209, column: 1, scope: !1328)
!13730 = !DILocation(line: 7661, column: 21, scope: !1332)
!13731 = !DILocation(line: 7661, column: 42, scope: !1332)
!13732 = !DILocation(line: 7661, column: 66, scope: !1332)
!13733 = !DILocation(line: 7662, column: 24, scope: !1332)
!13734 = !DILocation(line: 7664, column: 5, scope: !1332)
!13735 = !DILocation(line: 7664, column: 19, scope: !1332)
!13736 = !DILocation(line: 7666, column: 23, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !1332, file: !4, line: 7666, column: 9)
!13738 = !DILocation(line: 7666, column: 9, scope: !13737)
!13739 = !DILocation(line: 7666, column: 9, scope: !1332)
!13740 = !DILocation(line: 7667, column: 28, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13742, file: !4, line: 7667, column: 13)
!13742 = distinct !DILexicalBlock(scope: !13737, file: !4, line: 7666, column: 27)
!13743 = !DILocation(line: 7667, column: 36, scope: !13741)
!13744 = !DILocation(line: 7667, column: 39, scope: !13741)
!13745 = !DILocation(line: 7667, column: 44, scope: !13741)
!13746 = !DILocation(line: 7667, column: 13, scope: !13741)
!13747 = !DILocation(line: 7667, column: 13, scope: !13742)
!13748 = !DILocation(line: 7668, column: 13, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13741, file: !4, line: 7667, column: 53)
!13750 = !DILocation(line: 7670, column: 28, scope: !13751)
!13751 = distinct !DILexicalBlock(scope: !13742, file: !4, line: 7670, column: 13)
!13752 = !DILocation(line: 7670, column: 13, scope: !13751)
!13753 = !DILocation(line: 7670, column: 13, scope: !13742)
!13754 = !DILocation(line: 7671, column: 26, scope: !13755)
!13755 = distinct !DILexicalBlock(scope: !13751, file: !4, line: 7670, column: 32)
!13756 = !DILocation(line: 7671, column: 47, scope: !13755)
!13757 = !DILocation(line: 7671, column: 13, scope: !13755)
!13758 = !DILocation(line: 7672, column: 13, scope: !13755)
!13759 = !DILocation(line: 7675, column: 20, scope: !13742)
!13760 = !DILocation(line: 7675, column: 55, scope: !13742)
!13761 = !DILocation(line: 7675, column: 45, scope: !13742)
!13762 = !DILocation(line: 7675, column: 9, scope: !13742)
!13763 = !DILocation(line: 7676, column: 10, scope: !13742)
!13764 = !DILocation(line: 7676, column: 17, scope: !13742)
!13765 = !DILocation(line: 7677, column: 9, scope: !13742)
!13766 = !DILocation(line: 7679, column: 20, scope: !13767)
!13767 = distinct !DILexicalBlock(scope: !1332, file: !4, line: 7679, column: 9)
!13768 = !DILocation(line: 7679, column: 9, scope: !13767)
!13769 = !DILocation(line: 7679, column: 9, scope: !1332)
!13770 = !DILocation(line: 7680, column: 24, scope: !13771)
!13771 = distinct !DILexicalBlock(scope: !13767, file: !4, line: 7679, column: 24)
!13772 = !DILocation(line: 7680, column: 41, scope: !13771)
!13773 = !DILocation(line: 7680, column: 32, scope: !13771)
!13774 = !DILocation(line: 7680, column: 9, scope: !13771)
!13775 = !DILocation(line: 7681, column: 10, scope: !13771)
!13776 = !DILocation(line: 7681, column: 17, scope: !13771)
!13777 = !DILocation(line: 7682, column: 9, scope: !13771)
!13778 = !DILocation(line: 7684, column: 24, scope: !13779)
!13779 = distinct !DILexicalBlock(scope: !1332, file: !4, line: 7684, column: 9)
!13780 = !DILocation(line: 7684, column: 9, scope: !13779)
!13781 = !DILocation(line: 7684, column: 9, scope: !1332)
!13782 = !DILocation(line: 7685, column: 22, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13779, file: !4, line: 7684, column: 28)
!13784 = !DILocation(line: 7685, column: 43, scope: !13783)
!13785 = !DILocation(line: 7685, column: 9, scope: !13783)
!13786 = !DILocation(line: 7686, column: 9, scope: !13783)
!13787 = !DILocation(line: 7689, column: 16, scope: !1332)
!13788 = !DILocation(line: 7689, column: 15, scope: !1332)
!13789 = !DILocation(line: 7690, column: 13, scope: !1332)
!13790 = !DILocation(line: 7690, column: 18, scope: !1332)
!13791 = !DILocation(line: 7691, column: 13, scope: !1332)
!13792 = !DILocation(line: 7691, column: 19, scope: !1332)
!13793 = !DILocation(line: 7692, column: 19, scope: !1332)
!13794 = !DILocation(line: 7692, column: 27, scope: !1332)
!13795 = !DILocation(line: 7692, column: 40, scope: !1332)
!13796 = !DILocation(line: 7692, column: 5, scope: !1332)
!13797 = !DILocation(line: 7693, column: 19, scope: !1332)
!13798 = !DILocation(line: 7693, column: 27, scope: !1332)
!13799 = !DILocation(line: 7693, column: 32, scope: !1332)
!13800 = !DILocation(line: 7693, column: 5, scope: !1332)
!13801 = !DILocation(line: 7694, column: 1, scope: !1332)
!13802 = !DILocation(line: 7694, column: 1, scope: !13803)
!13803 = !DILexicalBlockFile(scope: !1332, file: !4, discriminator: 1)
!13804 = !DILocation(line: 7562, column: 22, scope: !2250)
!13805 = !DILocation(line: 7562, column: 43, scope: !2250)
!13806 = !DILocation(line: 7562, column: 67, scope: !2250)
!13807 = !DILocation(line: 7563, column: 25, scope: !2250)
!13808 = !DILocation(line: 7565, column: 5, scope: !2250)
!13809 = !DILocation(line: 7565, column: 14, scope: !2250)
!13810 = !DILocation(line: 7566, column: 5, scope: !2250)
!13811 = !DILocation(line: 7566, column: 19, scope: !2250)
!13812 = !DILocation(line: 7566, column: 31, scope: !2250)
!13813 = !DILocation(line: 7567, column: 5, scope: !2250)
!13814 = !DILocation(line: 7567, column: 12, scope: !2250)
!13815 = !DILocation(line: 7567, column: 16, scope: !2250)
!13816 = !DILocation(line: 7568, column: 5, scope: !2250)
!13817 = !DILocation(line: 7568, column: 12, scope: !2250)
!13818 = !DILocation(line: 7569, column: 5, scope: !2250)
!13819 = !DILocation(line: 7569, column: 11, scope: !2250)
!13820 = !DILocation(line: 7569, column: 18, scope: !2250)
!13821 = !DILocation(line: 7569, column: 20, scope: !2250)
!13822 = !DILocation(line: 7569, column: 23, scope: !2250)
!13823 = !DILocation(line: 7569, column: 28, scope: !2250)
!13824 = !DILocation(line: 7569, column: 75, scope: !2250)
!13825 = !DILocation(line: 7569, column: 89, scope: !2250)
!13826 = !DILocation(line: 7569, column: 19, scope: !2250)
!13827 = !DILocation(line: 7569, column: 105, scope: !2250)
!13828 = !DILocation(line: 7569, column: 108, scope: !2250)
!13829 = !DILocation(line: 7569, column: 113, scope: !2250)
!13830 = !DILocation(line: 7569, column: 116, scope: !2250)
!13831 = !DILocation(line: 7569, column: 124, scope: !2250)
!13832 = !DILocation(line: 7569, column: 127, scope: !2250)
!13833 = !DILocation(line: 7569, column: 132, scope: !2250)
!13834 = !DILocation(line: 7569, column: 135, scope: !2250)
!13835 = !DILocation(line: 7569, column: 142, scope: !2250)
!13836 = !DILocation(line: 7569, column: 145, scope: !2250)
!13837 = !DILocation(line: 7570, column: 5, scope: !2250)
!13838 = !DILocation(line: 7570, column: 16, scope: !2250)
!13839 = !DILocation(line: 7570, column: 28, scope: !2250)
!13840 = !DILocation(line: 7570, column: 34, scope: !2250)
!13841 = !DILocation(line: 7570, column: 38, scope: !2250)
!13842 = !DILocation(line: 7570, column: 83, scope: !2250)
!13843 = !DILocation(line: 7571, column: 5, scope: !2250)
!13844 = !DILocation(line: 7571, column: 16, scope: !2250)
!13845 = !DILocation(line: 7571, column: 28, scope: !2250)
!13846 = !DILocation(line: 7571, column: 34, scope: !2250)
!13847 = !DILocation(line: 7571, column: 38, scope: !2250)
!13848 = !DILocation(line: 7571, column: 83, scope: !2250)
!13849 = !DILocation(line: 7572, column: 5, scope: !2250)
!13850 = !DILocation(line: 7572, column: 16, scope: !2250)
!13851 = !DILocation(line: 7572, column: 40, scope: !2250)
!13852 = !DILocation(line: 7572, column: 46, scope: !2250)
!13853 = !DILocation(line: 7572, column: 57, scope: !2250)
!13854 = !DILocation(line: 7572, column: 103, scope: !2250)
!13855 = !DILocation(line: 7573, column: 5, scope: !2250)
!13856 = !DILocation(line: 7573, column: 16, scope: !2250)
!13857 = !DILocation(line: 7573, column: 37, scope: !2250)
!13858 = !DILocation(line: 7573, column: 43, scope: !2250)
!13859 = !DILocation(line: 7573, column: 51, scope: !2250)
!13860 = !DILocation(line: 7573, column: 96, scope: !2250)
!13861 = !DILocation(line: 7574, column: 5, scope: !2250)
!13862 = !DILocation(line: 7574, column: 17, scope: !2250)
!13863 = !DILocation(line: 7575, column: 5, scope: !2250)
!13864 = !DILocation(line: 7575, column: 17, scope: !2250)
!13865 = !DILocation(line: 7575, column: 28, scope: !2250)
!13866 = !DILocation(line: 7576, column: 5, scope: !2250)
!13867 = !DILocation(line: 7576, column: 17, scope: !2250)
!13868 = !DILocation(line: 7576, column: 22, scope: !2250)
!13869 = !DILocation(line: 7577, column: 5, scope: !2250)
!13870 = !DILocation(line: 7577, column: 17, scope: !2250)
!13871 = !DILocation(line: 7577, column: 26, scope: !2250)
!13872 = !DILocation(line: 7578, column: 5, scope: !2250)
!13873 = !DILocation(line: 7578, column: 16, scope: !2250)
!13874 = !DILocation(line: 7578, column: 22, scope: !2250)
!13875 = !DILocation(line: 7579, column: 5, scope: !2250)
!13876 = !DILocation(line: 7579, column: 9, scope: !2250)
!13877 = !DILocation(line: 7579, column: 12, scope: !2250)
!13878 = !DILocation(line: 7582, column: 19, scope: !2250)
!13879 = !DILocation(line: 7582, column: 22, scope: !2250)
!13880 = !DILocation(line: 7582, column: 29, scope: !2250)
!13881 = !DILocation(line: 7582, column: 32, scope: !2250)
!13882 = !DILocation(line: 7582, column: 36, scope: !2250)
!13883 = !DILocation(line: 7582, column: 26, scope: !2250)
!13884 = !DILocation(line: 7582, column: 17, scope: !2250)
!13885 = !DILocation(line: 7582, column: 42, scope: !2250)
!13886 = !DILocation(line: 7582, column: 15, scope: !2250)
!13887 = !DILocation(line: 7584, column: 7, scope: !2250)
!13888 = !DILocation(line: 7585, column: 9, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !2250, file: !4, line: 7585, column: 9)
!13890 = !DILocation(line: 7585, column: 19, scope: !13889)
!13891 = !DILocation(line: 7585, column: 16, scope: !13889)
!13892 = !DILocation(line: 7585, column: 9, scope: !2250)
!13893 = !DILocation(line: 7586, column: 29, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13895, file: !4, line: 7586, column: 13)
!13895 = distinct !DILexicalBlock(scope: !13889, file: !4, line: 7585, column: 22)
!13896 = !DILocation(line: 7586, column: 18, scope: !13894)
!13897 = !DILocation(line: 7586, column: 16, scope: !13894)
!13898 = !DILocation(line: 7586, column: 33, scope: !13894)
!13899 = !DILocation(line: 7586, column: 13, scope: !13895)
!13900 = !DILocation(line: 7587, column: 26, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13894, file: !4, line: 7586, column: 48)
!13902 = !DILocation(line: 7587, column: 47, scope: !13901)
!13903 = !DILocation(line: 7587, column: 13, scope: !13901)
!13904 = !DILocation(line: 7588, column: 13, scope: !13901)
!13905 = !DILocation(line: 7590, column: 5, scope: !13895)
!13906 = !DILocation(line: 7593, column: 10, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !2250, file: !4, line: 7593, column: 9)
!13908 = !DILocation(line: 7593, column: 13, scope: !13907)
!13909 = !DILocation(line: 7593, column: 20, scope: !13907)
!13910 = !DILocation(line: 7593, column: 23, scope: !13907)
!13911 = !DILocation(line: 7593, column: 19, scope: !13907)
!13912 = !DILocation(line: 7593, column: 28, scope: !13907)
!13913 = !DILocation(line: 7593, column: 9, scope: !2250)
!13914 = !DILocation(line: 7594, column: 22, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13907, file: !4, line: 7593, column: 33)
!13916 = !DILocation(line: 7594, column: 25, scope: !13915)
!13917 = !DILocation(line: 7594, column: 32, scope: !13915)
!13918 = !DILocation(line: 7594, column: 20, scope: !13915)
!13919 = !DILocation(line: 7595, column: 19, scope: !13915)
!13920 = !DILocation(line: 7595, column: 18, scope: !13915)
!13921 = !DILocation(line: 7595, column: 9, scope: !13915)
!13922 = !DILocation(line: 7595, column: 12, scope: !13915)
!13923 = !DILocation(line: 7595, column: 16, scope: !13915)
!13924 = !DILocation(line: 7596, column: 14, scope: !13915)
!13925 = !DILocation(line: 7596, column: 17, scope: !13915)
!13926 = !DILocation(line: 7596, column: 24, scope: !13915)
!13927 = !DILocation(line: 7596, column: 13, scope: !13915)
!13928 = !DILocation(line: 7596, column: 13, scope: !13929)
!13929 = !DILexicalBlockFile(scope: !13915, file: !4, discriminator: 1)
!13930 = !DILocation(line: 7596, column: 40, scope: !13931)
!13931 = !DILexicalBlockFile(scope: !13915, file: !4, discriminator: 2)
!13932 = !DILocation(line: 7596, column: 43, scope: !13915)
!13933 = !DILocation(line: 7596, column: 35, scope: !13915)
!13934 = !DILocation(line: 7596, column: 11, scope: !13935)
!13935 = !DILexicalBlockFile(scope: !13936, file: !4, discriminator: 4)
!13936 = !DILexicalBlockFile(scope: !13915, file: !4, discriminator: 3)
!13937 = !DILocation(line: 7598, column: 42, scope: !13915)
!13938 = !DILocation(line: 7598, column: 45, scope: !13915)
!13939 = !DILocation(line: 7598, column: 9, scope: !13915)
!13940 = !DILocation(line: 7599, column: 13, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13915, file: !4, line: 7599, column: 13)
!13942 = !DILocation(line: 7599, column: 15, scope: !13941)
!13943 = !DILocation(line: 7599, column: 13, scope: !13915)
!13944 = !DILocation(line: 7600, column: 33, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13941, file: !4, line: 7599, column: 20)
!13946 = !DILocation(line: 7600, column: 32, scope: !13945)
!13947 = !DILocation(line: 7600, column: 21, scope: !13945)
!13948 = !DILocation(line: 7600, column: 18, scope: !13945)
!13949 = !DILocation(line: 7601, column: 9, scope: !13945)
!13950 = !DILocation(line: 7602, column: 5, scope: !13915)
!13951 = !DILocation(line: 7604, column: 22, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13907, file: !4, line: 7603, column: 10)
!13953 = !DILocation(line: 7604, column: 25, scope: !13952)
!13954 = !DILocation(line: 7604, column: 32, scope: !13952)
!13955 = !DILocation(line: 7604, column: 20, scope: !13952)
!13956 = !DILocation(line: 7605, column: 19, scope: !13952)
!13957 = !DILocation(line: 7605, column: 18, scope: !13952)
!13958 = !DILocation(line: 7605, column: 9, scope: !13952)
!13959 = !DILocation(line: 7605, column: 12, scope: !13952)
!13960 = !DILocation(line: 7605, column: 16, scope: !13952)
!13961 = !DILocation(line: 7606, column: 14, scope: !13952)
!13962 = !DILocation(line: 7606, column: 17, scope: !13952)
!13963 = !DILocation(line: 7606, column: 24, scope: !13952)
!13964 = !DILocation(line: 7606, column: 13, scope: !13952)
!13965 = !DILocation(line: 7606, column: 13, scope: !13966)
!13966 = !DILexicalBlockFile(scope: !13952, file: !4, discriminator: 1)
!13967 = !DILocation(line: 7606, column: 40, scope: !13968)
!13968 = !DILexicalBlockFile(scope: !13952, file: !4, discriminator: 2)
!13969 = !DILocation(line: 7606, column: 43, scope: !13952)
!13970 = !DILocation(line: 7606, column: 35, scope: !13952)
!13971 = !DILocation(line: 7606, column: 11, scope: !13972)
!13972 = !DILexicalBlockFile(scope: !13973, file: !4, discriminator: 4)
!13973 = !DILexicalBlockFile(scope: !13952, file: !4, discriminator: 3)
!13974 = !DILocation(line: 7608, column: 42, scope: !13952)
!13975 = !DILocation(line: 7608, column: 45, scope: !13952)
!13976 = !DILocation(line: 7608, column: 9, scope: !13952)
!13977 = !DILocation(line: 7609, column: 13, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13952, file: !4, line: 7609, column: 13)
!13979 = !DILocation(line: 7609, column: 15, scope: !13978)
!13980 = !DILocation(line: 7609, column: 13, scope: !13952)
!13981 = !DILocation(line: 7610, column: 33, scope: !13982)
!13982 = distinct !DILexicalBlock(scope: !13978, file: !4, line: 7609, column: 20)
!13983 = !DILocation(line: 7610, column: 32, scope: !13982)
!13984 = !DILocation(line: 7610, column: 21, scope: !13982)
!13985 = !DILocation(line: 7610, column: 18, scope: !13982)
!13986 = !DILocation(line: 7611, column: 9, scope: !13982)
!13987 = !DILocation(line: 7613, column: 12, scope: !2250)
!13988 = !DILocation(line: 7613, column: 15, scope: !2250)
!13989 = !DILocation(line: 7613, column: 19, scope: !2250)
!13990 = !DILocation(line: 7613, column: 22, scope: !2250)
!13991 = !DILocation(line: 7613, column: 18, scope: !2250)
!13992 = !DILocation(line: 7613, column: 27, scope: !2250)
!13993 = !DILocation(line: 7613, column: 9, scope: !2250)
!13994 = !DILocation(line: 7616, column: 26, scope: !2250)
!13995 = !DILocation(line: 7616, column: 29, scope: !2250)
!13996 = !DILocation(line: 7616, column: 5, scope: !2250)
!13997 = !DILocation(line: 7618, column: 5, scope: !2250)
!13998 = !DILocation(line: 7619, column: 5, scope: !2250)
!13999 = !DILocation(line: 7620, column: 16, scope: !2250)
!14000 = !DILocation(line: 7620, column: 22, scope: !2250)
!14001 = !DILocation(line: 7621, column: 15, scope: !2250)
!14002 = !DILocation(line: 7621, column: 20, scope: !2250)
!14003 = !DILocation(line: 7621, column: 25, scope: !2250)
!14004 = !DILocation(line: 7621, column: 13, scope: !2250)
!14005 = !DILocation(line: 7624, column: 31, scope: !2250)
!14006 = !DILocation(line: 7624, column: 38, scope: !2250)
!14007 = !DILocation(line: 7624, column: 9, scope: !2250)
!14008 = !DILocation(line: 7624, column: 7, scope: !2250)
!14009 = !DILocation(line: 7625, column: 5, scope: !2250)
!14010 = !DILocation(line: 7625, column: 12, scope: !14011)
!14011 = !DILexicalBlockFile(scope: !14012, file: !4, discriminator: 2)
!14012 = !DILexicalBlockFile(scope: !14013, file: !4, discriminator: 1)
!14013 = distinct !DILexicalBlock(scope: !14014, file: !4, line: 7625, column: 5)
!14014 = distinct !DILexicalBlock(scope: !2250, file: !4, line: 7625, column: 5)
!14015 = !DILocation(line: 7625, column: 14, scope: !14013)
!14016 = !DILocation(line: 7625, column: 5, scope: !14014)
!14017 = !DILocation(line: 7626, column: 35, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !14013, file: !4, line: 7625, column: 25)
!14019 = !DILocation(line: 7626, column: 29, scope: !14018)
!14020 = !DILocation(line: 7626, column: 28, scope: !14018)
!14021 = !DILocation(line: 7626, column: 37, scope: !14018)
!14022 = !DILocation(line: 7626, column: 20, scope: !14018)
!14023 = !DILocation(line: 7626, column: 25, scope: !14018)
!14024 = !DILocation(line: 7627, column: 22, scope: !14018)
!14025 = !DILocation(line: 7627, column: 25, scope: !14018)
!14026 = !DILocation(line: 7627, column: 9, scope: !14018)
!14027 = !DILocation(line: 7628, column: 13, scope: !14028)
!14028 = distinct !DILexicalBlock(scope: !14018, file: !4, line: 7628, column: 13)
!14029 = !DILocation(line: 7628, column: 16, scope: !14028)
!14030 = !DILocation(line: 7628, column: 36, scope: !14028)
!14031 = !DILocation(line: 7628, column: 23, scope: !14028)
!14032 = !DILocation(line: 7628, column: 13, scope: !14018)
!14033 = !DILocation(line: 7629, column: 21, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14028, file: !4, line: 7628, column: 42)
!14035 = !DILocation(line: 7629, column: 24, scope: !14034)
!14036 = !DILocation(line: 7629, column: 44, scope: !14034)
!14037 = !DILocation(line: 7629, column: 31, scope: !14034)
!14038 = !DILocation(line: 7629, column: 19, scope: !14034)
!14039 = !DILocation(line: 7630, column: 29, scope: !14034)
!14040 = !DILocation(line: 7630, column: 32, scope: !14034)
!14041 = !DILocation(line: 7630, column: 13, scope: !14034)
!14042 = !DILocation(line: 7631, column: 22, scope: !14034)
!14043 = !DILocation(line: 7631, column: 15, scope: !14034)
!14044 = !DILocation(line: 7631, column: 19, scope: !14034)
!14045 = !DILocation(line: 7632, column: 13, scope: !14034)
!14046 = !DILocation(line: 7633, column: 9, scope: !14034)
!14047 = !DILocation(line: 7635, column: 26, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !14028, file: !4, line: 7634, column: 14)
!14049 = !DILocation(line: 7635, column: 13, scope: !14048)
!14050 = !DILocation(line: 7637, column: 9, scope: !14018)
!14051 = !DILocation(line: 7638, column: 18, scope: !14018)
!14052 = !DILocation(line: 7638, column: 21, scope: !14018)
!14053 = !DILocation(line: 7638, column: 9, scope: !14018)
!14054 = !DILocation(line: 7639, column: 18, scope: !14018)
!14055 = !DILocation(line: 7639, column: 21, scope: !14018)
!14056 = !DILocation(line: 7639, column: 9, scope: !14018)
!14057 = !DILocation(line: 7640, column: 5, scope: !14018)
!14058 = !DILocation(line: 7625, column: 21, scope: !14013)
!14059 = !DILocation(line: 7625, column: 5, scope: !14013)
!14060 = !DILocation(line: 7642, column: 15, scope: !2250)
!14061 = !DILocation(line: 7642, column: 5, scope: !2250)
!14062 = !DILocation(line: 7642, column: 8, scope: !2250)
!14063 = !DILocation(line: 7642, column: 12, scope: !2250)
!14064 = !DILocation(line: 7644, column: 26, scope: !2250)
!14065 = !DILocation(line: 7644, column: 10, scope: !2250)
!14066 = !DILocation(line: 7644, column: 8, scope: !2250)
!14067 = !DILocation(line: 7645, column: 13, scope: !2250)
!14068 = !DILocation(line: 7645, column: 25, scope: !2250)
!14069 = !DILocation(line: 7645, column: 33, scope: !2250)
!14070 = !DILocation(line: 7645, column: 23, scope: !2250)
!14071 = !DILocation(line: 7645, column: 11, scope: !2250)
!14072 = !DILocation(line: 7646, column: 14, scope: !2250)
!14073 = !DILocation(line: 7646, column: 19, scope: !2250)
!14074 = !DILocation(line: 7646, column: 17, scope: !2250)
!14075 = !DILocation(line: 7646, column: 13, scope: !2250)
!14076 = !DILocation(line: 7646, column: 28, scope: !14077)
!14077 = !DILexicalBlockFile(scope: !2250, file: !4, discriminator: 1)
!14078 = !DILocation(line: 7646, column: 36, scope: !14079)
!14079 = !DILexicalBlockFile(scope: !2250, file: !4, discriminator: 2)
!14080 = !DILocation(line: 7646, column: 11, scope: !14081)
!14081 = !DILexicalBlockFile(scope: !14082, file: !4, discriminator: 4)
!14082 = !DILexicalBlockFile(scope: !2250, file: !4, discriminator: 3)
!14083 = !DILocation(line: 7647, column: 9, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !2250, file: !4, line: 7647, column: 9)
!14085 = !DILocation(line: 7647, column: 15, scope: !14084)
!14086 = !DILocation(line: 7647, column: 9, scope: !2250)
!14087 = !DILocation(line: 7648, column: 29, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14084, file: !4, line: 7647, column: 20)
!14089 = !DILocation(line: 7648, column: 37, scope: !14088)
!14090 = !DILocation(line: 7648, column: 9, scope: !14088)
!14091 = !DILocation(line: 7649, column: 24, scope: !14088)
!14092 = !DILocation(line: 7649, column: 9, scope: !14088)
!14093 = !DILocation(line: 7649, column: 17, scope: !14088)
!14094 = !DILocation(line: 7649, column: 21, scope: !14088)
!14095 = !DILocation(line: 7650, column: 5, scope: !14088)
!14096 = !DILocation(line: 7653, column: 5, scope: !2250)
!14097 = !DILocation(line: 7654, column: 5, scope: !2250)
!14098 = !DILocation(line: 7655, column: 9, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !2250, file: !4, line: 7655, column: 9)
!14100 = !DILocation(line: 7655, column: 11, scope: !14099)
!14101 = !DILocation(line: 7655, column: 9, scope: !2250)
!14102 = !DILocation(line: 7655, column: 29, scope: !14103)
!14103 = !DILexicalBlockFile(scope: !14099, file: !4, discriminator: 1)
!14104 = !DILocation(line: 7655, column: 21, scope: !14099)
!14105 = !DILocation(line: 7656, column: 17, scope: !2250)
!14106 = !DILocation(line: 7656, column: 27, scope: !2250)
!14107 = !DILocation(line: 7656, column: 6, scope: !2250)
!14108 = !DILocation(line: 7656, column: 13, scope: !2250)
!14109 = !DILocation(line: 7657, column: 6, scope: !2250)
!14110 = !DILocation(line: 7657, column: 13, scope: !2250)
!14111 = !DILocation(line: 7658, column: 1, scope: !2250)
!14112 = !DILocation(line: 7658, column: 1, scope: !14077)
!14113 = !DILocation(line: 7699, column: 18, scope: !1339)
!14114 = !DILocation(line: 7699, column: 39, scope: !1339)
!14115 = !DILocation(line: 7699, column: 63, scope: !1339)
!14116 = !DILocation(line: 7700, column: 21, scope: !1339)
!14117 = !DILocation(line: 7702, column: 5, scope: !1339)
!14118 = !DILocation(line: 7702, column: 19, scope: !1339)
!14119 = !DILocation(line: 7703, column: 5, scope: !1339)
!14120 = !DILocation(line: 7703, column: 16, scope: !1339)
!14121 = !DILocation(line: 7703, column: 28, scope: !1339)
!14122 = !DILocation(line: 7703, column: 34, scope: !1339)
!14123 = !DILocation(line: 7703, column: 38, scope: !1339)
!14124 = !DILocation(line: 7703, column: 83, scope: !1339)
!14125 = !DILocation(line: 7704, column: 5, scope: !1339)
!14126 = !DILocation(line: 7704, column: 16, scope: !1339)
!14127 = !DILocation(line: 7704, column: 28, scope: !1339)
!14128 = !DILocation(line: 7704, column: 34, scope: !1339)
!14129 = !DILocation(line: 7704, column: 38, scope: !1339)
!14130 = !DILocation(line: 7704, column: 83, scope: !1339)
!14131 = !DILocation(line: 7705, column: 5, scope: !1339)
!14132 = !DILocation(line: 7705, column: 16, scope: !1339)
!14133 = !DILocation(line: 7705, column: 28, scope: !1339)
!14134 = !DILocation(line: 7705, column: 34, scope: !1339)
!14135 = !DILocation(line: 7705, column: 38, scope: !1339)
!14136 = !DILocation(line: 7705, column: 83, scope: !1339)
!14137 = !DILocation(line: 7706, column: 5, scope: !1339)
!14138 = !DILocation(line: 7706, column: 16, scope: !1339)
!14139 = !DILocation(line: 7706, column: 35, scope: !1339)
!14140 = !DILocation(line: 7706, column: 41, scope: !1339)
!14141 = !DILocation(line: 7706, column: 47, scope: !1339)
!14142 = !DILocation(line: 7706, column: 92, scope: !1339)
!14143 = !DILocation(line: 7707, column: 5, scope: !1339)
!14144 = !DILocation(line: 7707, column: 17, scope: !1339)
!14145 = !DILocation(line: 7707, column: 23, scope: !1339)
!14146 = !DILocation(line: 7708, column: 5, scope: !1339)
!14147 = !DILocation(line: 7708, column: 17, scope: !1339)
!14148 = !DILocation(line: 7708, column: 20, scope: !1339)
!14149 = !DILocation(line: 7709, column: 5, scope: !1339)
!14150 = !DILocation(line: 7709, column: 9, scope: !1339)
!14151 = !DILocation(line: 7712, column: 18, scope: !1339)
!14152 = !DILocation(line: 7712, column: 21, scope: !1339)
!14153 = !DILocation(line: 7712, column: 28, scope: !1339)
!14154 = !DILocation(line: 7712, column: 31, scope: !1339)
!14155 = !DILocation(line: 7712, column: 35, scope: !1339)
!14156 = !DILocation(line: 7712, column: 25, scope: !1339)
!14157 = !DILocation(line: 7712, column: 41, scope: !1339)
!14158 = !DILocation(line: 7712, column: 15, scope: !1339)
!14159 = !DILocation(line: 7714, column: 23, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !1339, file: !4, line: 7714, column: 9)
!14161 = !DILocation(line: 7714, column: 9, scope: !14160)
!14162 = !DILocation(line: 7714, column: 9, scope: !1339)
!14163 = !DILocation(line: 7715, column: 28, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !14165, file: !4, line: 7715, column: 13)
!14165 = distinct !DILexicalBlock(scope: !14160, file: !4, line: 7714, column: 27)
!14166 = !DILocation(line: 7715, column: 36, scope: !14164)
!14167 = !DILocation(line: 7715, column: 39, scope: !14164)
!14168 = !DILocation(line: 7715, column: 44, scope: !14164)
!14169 = !DILocation(line: 7715, column: 13, scope: !14164)
!14170 = !DILocation(line: 7715, column: 13, scope: !14165)
!14171 = !DILocation(line: 7716, column: 13, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14164, file: !4, line: 7715, column: 53)
!14173 = !DILocation(line: 7718, column: 28, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !14165, file: !4, line: 7718, column: 13)
!14175 = !DILocation(line: 7718, column: 13, scope: !14174)
!14176 = !DILocation(line: 7718, column: 13, scope: !14165)
!14177 = !DILocation(line: 7719, column: 26, scope: !14178)
!14178 = distinct !DILexicalBlock(scope: !14174, file: !4, line: 7718, column: 32)
!14179 = !DILocation(line: 7719, column: 47, scope: !14178)
!14180 = !DILocation(line: 7719, column: 13, scope: !14178)
!14181 = !DILocation(line: 7720, column: 13, scope: !14178)
!14182 = !DILocation(line: 7722, column: 24, scope: !14165)
!14183 = !DILocation(line: 7722, column: 9, scope: !14165)
!14184 = !DILocation(line: 7723, column: 9, scope: !14165)
!14185 = !DILocation(line: 7725, column: 20, scope: !14186)
!14186 = distinct !DILexicalBlock(scope: !1339, file: !4, line: 7725, column: 9)
!14187 = !DILocation(line: 7725, column: 9, scope: !14186)
!14188 = !DILocation(line: 7725, column: 9, scope: !1339)
!14189 = !DILocation(line: 7726, column: 20, scope: !14190)
!14190 = distinct !DILexicalBlock(scope: !14186, file: !4, line: 7725, column: 24)
!14191 = !DILocation(line: 7726, column: 37, scope: !14190)
!14192 = !DILocation(line: 7726, column: 28, scope: !14190)
!14193 = !DILocation(line: 7726, column: 44, scope: !14190)
!14194 = !DILocation(line: 7726, column: 9, scope: !14190)
!14195 = !DILocation(line: 7727, column: 23, scope: !14190)
!14196 = !DILocation(line: 7727, column: 31, scope: !14190)
!14197 = !DILocation(line: 7727, column: 36, scope: !14190)
!14198 = !DILocation(line: 7727, column: 9, scope: !14190)
!14199 = !DILocation(line: 7728, column: 9, scope: !14190)
!14200 = !DILocation(line: 7730, column: 24, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !1339, file: !4, line: 7730, column: 9)
!14202 = !DILocation(line: 7730, column: 9, scope: !14201)
!14203 = !DILocation(line: 7730, column: 9, scope: !1339)
!14204 = !DILocation(line: 7731, column: 22, scope: !14205)
!14205 = distinct !DILexicalBlock(scope: !14201, file: !4, line: 7730, column: 28)
!14206 = !DILocation(line: 7731, column: 43, scope: !14205)
!14207 = !DILocation(line: 7731, column: 9, scope: !14205)
!14208 = !DILocation(line: 7732, column: 9, scope: !14205)
!14209 = !DILocation(line: 7735, column: 5, scope: !1339)
!14210 = !DILocation(line: 7736, column: 12, scope: !1339)
!14211 = !DILocation(line: 7736, column: 17, scope: !1339)
!14212 = !DILocation(line: 7736, column: 22, scope: !1339)
!14213 = !DILocation(line: 7736, column: 10, scope: !1339)
!14214 = !DILocation(line: 7738, column: 24, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !1339, file: !4, line: 7738, column: 9)
!14216 = !DILocation(line: 7738, column: 27, scope: !14215)
!14217 = !DILocation(line: 7738, column: 10, scope: !14215)
!14218 = !DILocation(line: 7738, column: 9, scope: !1339)
!14219 = !DILocation(line: 7739, column: 9, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14215, file: !4, line: 7738, column: 36)
!14221 = !DILocation(line: 7741, column: 7, scope: !1339)
!14222 = !DILocation(line: 7741, column: 11, scope: !1339)
!14223 = !DILocation(line: 7743, column: 9, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !1339, file: !4, line: 7743, column: 9)
!14225 = !DILocation(line: 7743, column: 12, scope: !14224)
!14226 = !DILocation(line: 7743, column: 16, scope: !14224)
!14227 = !DILocation(line: 7743, column: 9, scope: !1339)
!14228 = !DILocation(line: 7744, column: 37, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14230, file: !4, line: 7744, column: 13)
!14230 = distinct !DILexicalBlock(scope: !14224, file: !4, line: 7743, column: 21)
!14231 = !DILocation(line: 7744, column: 14, scope: !14229)
!14232 = !DILocation(line: 7744, column: 13, scope: !14230)
!14233 = !DILocation(line: 7745, column: 13, scope: !14234)
!14234 = distinct !DILexicalBlock(scope: !14229, file: !4, line: 7744, column: 46)
!14235 = !DILocation(line: 7747, column: 14, scope: !14230)
!14236 = !DILocation(line: 7747, column: 17, scope: !14230)
!14237 = !DILocation(line: 7747, column: 24, scope: !14230)
!14238 = !DILocation(line: 7747, column: 30, scope: !14230)
!14239 = !DILocation(line: 7747, column: 11, scope: !14230)
!14240 = !DILocation(line: 7748, column: 5, scope: !14230)
!14241 = !DILocation(line: 7750, column: 14, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14224, file: !4, line: 7749, column: 10)
!14243 = !DILocation(line: 7750, column: 17, scope: !14242)
!14244 = !DILocation(line: 7750, column: 24, scope: !14242)
!14245 = !DILocation(line: 7750, column: 29, scope: !14242)
!14246 = !DILocation(line: 7750, column: 11, scope: !14242)
!14247 = !DILocation(line: 7753, column: 13, scope: !1339)
!14248 = !DILocation(line: 7753, column: 20, scope: !1339)
!14249 = !DILocation(line: 7753, column: 18, scope: !1339)
!14250 = !DILocation(line: 7753, column: 11, scope: !1339)
!14251 = !DILocation(line: 7754, column: 9, scope: !14252)
!14252 = distinct !DILexicalBlock(scope: !1339, file: !4, line: 7754, column: 9)
!14253 = !DILocation(line: 7754, column: 15, scope: !14252)
!14254 = !DILocation(line: 7754, column: 9, scope: !1339)
!14255 = !DILocation(line: 7755, column: 36, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14257, file: !4, line: 7755, column: 13)
!14257 = distinct !DILexicalBlock(scope: !14252, file: !4, line: 7754, column: 21)
!14258 = !DILocation(line: 7755, column: 35, scope: !14256)
!14259 = !DILocation(line: 7755, column: 43, scope: !14256)
!14260 = !DILocation(line: 7755, column: 14, scope: !14256)
!14261 = !DILocation(line: 7755, column: 13, scope: !14257)
!14262 = !DILocation(line: 7756, column: 13, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !14256, file: !4, line: 7755, column: 52)
!14264 = !DILocation(line: 7758, column: 15, scope: !14257)
!14265 = !DILocation(line: 7759, column: 5, scope: !14257)
!14266 = !DILocation(line: 7761, column: 45, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14252, file: !4, line: 7760, column: 10)
!14268 = !DILocation(line: 7761, column: 44, scope: !14267)
!14269 = !DILocation(line: 7761, column: 18, scope: !14267)
!14270 = !DILocation(line: 7761, column: 17, scope: !14267)
!14271 = !DILocation(line: 7761, column: 15, scope: !14267)
!14272 = !DILocation(line: 7764, column: 18, scope: !1339)
!14273 = !DILocation(line: 7764, column: 15, scope: !1339)
!14274 = !DILocation(line: 7767, column: 22, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !1339, file: !4, line: 7767, column: 9)
!14276 = !DILocation(line: 7767, column: 36, scope: !14275)
!14277 = !DILocation(line: 7767, column: 42, scope: !14275)
!14278 = !DILocation(line: 7767, column: 10, scope: !14275)
!14279 = !DILocation(line: 7767, column: 9, scope: !1339)
!14280 = !DILocation(line: 7768, column: 9, scope: !14281)
!14281 = distinct !DILexicalBlock(scope: !14275, file: !4, line: 7767, column: 51)
!14282 = !DILocation(line: 7771, column: 5, scope: !1339)
!14283 = !DILocation(line: 7771, column: 5, scope: !14284)
!14284 = !DILexicalBlockFile(scope: !14285, file: !4, discriminator: 2)
!14285 = !DILexicalBlockFile(scope: !1339, file: !4, discriminator: 1)
!14286 = !DILocation(line: 7772, column: 34, scope: !14287)
!14287 = distinct !DILexicalBlock(scope: !1339, file: !4, line: 7771, column: 15)
!14288 = !DILocation(line: 7772, column: 67, scope: !14287)
!14289 = !DILocation(line: 7772, column: 9, scope: !14287)
!14290 = !DILocation(line: 7773, column: 27, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14287, file: !4, line: 7773, column: 13)
!14292 = !DILocation(line: 7773, column: 13, scope: !14291)
!14293 = !DILocation(line: 7773, column: 35, scope: !14291)
!14294 = !DILocation(line: 7773, column: 38, scope: !14295)
!14295 = !DILexicalBlockFile(scope: !14291, file: !4, discriminator: 1)
!14296 = !DILocation(line: 7773, column: 13, scope: !14287)
!14297 = !DILocation(line: 7774, column: 26, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14291, file: !4, line: 7773, column: 57)
!14299 = !DILocation(line: 7774, column: 45, scope: !14298)
!14300 = !DILocation(line: 7774, column: 51, scope: !14298)
!14301 = !DILocation(line: 7774, column: 167, scope: !14298)
!14302 = !DILocation(line: 7774, column: 13, scope: !14298)
!14303 = !DILocation(line: 7775, column: 13, scope: !14298)
!14304 = !DILocation(line: 7777, column: 22, scope: !14305)
!14305 = distinct !DILexicalBlock(scope: !14287, file: !4, line: 7777, column: 13)
!14306 = !DILocation(line: 7777, column: 13, scope: !14305)
!14307 = !DILocation(line: 7777, column: 34, scope: !14305)
!14308 = !DILocation(line: 7777, column: 13, scope: !14287)
!14309 = !DILocation(line: 7778, column: 13, scope: !14310)
!14310 = distinct !DILexicalBlock(scope: !14305, file: !4, line: 7777, column: 40)
!14311 = !DILocation(line: 7780, column: 25, scope: !14287)
!14312 = !DILocation(line: 7780, column: 33, scope: !14287)
!14313 = !DILocation(line: 7780, column: 70, scope: !14287)
!14314 = !DILocation(line: 7780, column: 9, scope: !14287)
!14315 = !DILocation(line: 7781, column: 27, scope: !14316)
!14316 = distinct !DILexicalBlock(scope: !14287, file: !4, line: 7781, column: 13)
!14317 = !DILocation(line: 7781, column: 13, scope: !14316)
!14318 = !DILocation(line: 7781, column: 13, scope: !14287)
!14319 = !DILocation(line: 7782, column: 26, scope: !14320)
!14320 = distinct !DILexicalBlock(scope: !14316, file: !4, line: 7781, column: 36)
!14321 = !DILocation(line: 7782, column: 45, scope: !14320)
!14322 = !DILocation(line: 7782, column: 51, scope: !14320)
!14323 = !DILocation(line: 7782, column: 167, scope: !14320)
!14324 = !DILocation(line: 7782, column: 13, scope: !14320)
!14325 = !DILocation(line: 7783, column: 13, scope: !14320)
!14326 = !DILocation(line: 7785, column: 22, scope: !14287)
!14327 = !DILocation(line: 7785, column: 34, scope: !14287)
!14328 = !DILocation(line: 7785, column: 73, scope: !14287)
!14329 = !DILocation(line: 7785, column: 9, scope: !14287)
!14330 = !DILocation(line: 7788, column: 9, scope: !14331)
!14331 = distinct !DILexicalBlock(scope: !1339, file: !4, line: 7788, column: 9)
!14332 = !DILocation(line: 7788, column: 9, scope: !1339)
!14333 = !DILocation(line: 7789, column: 29, scope: !14334)
!14334 = distinct !DILexicalBlock(scope: !14331, file: !4, line: 7788, column: 16)
!14335 = !DILocation(line: 7789, column: 37, scope: !14334)
!14336 = !DILocation(line: 7789, column: 70, scope: !14334)
!14337 = !DILocation(line: 7789, column: 9, scope: !14334)
!14338 = !DILocation(line: 7790, column: 13, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14334, file: !4, line: 7790, column: 13)
!14340 = !DILocation(line: 7790, column: 13, scope: !14334)
!14341 = !DILocation(line: 7791, column: 26, scope: !14342)
!14342 = distinct !DILexicalBlock(scope: !14339, file: !4, line: 7790, column: 32)
!14343 = !DILocation(line: 7791, column: 45, scope: !14342)
!14344 = !DILocation(line: 7791, column: 51, scope: !14342)
!14345 = !DILocation(line: 7791, column: 167, scope: !14342)
!14346 = !DILocation(line: 7791, column: 13, scope: !14342)
!14347 = !DILocation(line: 7792, column: 13, scope: !14342)
!14348 = !DILocation(line: 7794, column: 18, scope: !14334)
!14349 = !DILocation(line: 7794, column: 35, scope: !14334)
!14350 = !DILocation(line: 7794, column: 15, scope: !14334)
!14351 = !DILocation(line: 7795, column: 5, scope: !14334)
!14352 = !DILocation(line: 7797, column: 9, scope: !1361)
!14353 = !DILocation(line: 7797, column: 9, scope: !1339)
!14354 = !DILocation(line: 7798, column: 13, scope: !14355)
!14355 = distinct !DILexicalBlock(scope: !14356, file: !4, line: 7798, column: 13)
!14356 = distinct !DILexicalBlock(scope: !1361, file: !4, line: 7797, column: 16)
!14357 = !DILocation(line: 7798, column: 19, scope: !14355)
!14358 = !DILocation(line: 7798, column: 13, scope: !14356)
!14359 = !DILocation(line: 7799, column: 33, scope: !14360)
!14360 = distinct !DILexicalBlock(scope: !14355, file: !4, line: 7798, column: 25)
!14361 = !DILocation(line: 7799, column: 41, scope: !14360)
!14362 = !DILocation(line: 7799, column: 13, scope: !14360)
!14363 = !DILocation(line: 7800, column: 9, scope: !14360)
!14364 = !DILocation(line: 7802, column: 30, scope: !14365)
!14365 = distinct !DILexicalBlock(scope: !14366, file: !4, line: 7802, column: 17)
!14366 = distinct !DILexicalBlock(scope: !14355, file: !4, line: 7801, column: 14)
!14367 = !DILocation(line: 7802, column: 38, scope: !14365)
!14368 = !DILocation(line: 7802, column: 47, scope: !14365)
!14369 = !DILocation(line: 7802, column: 46, scope: !14365)
!14370 = !DILocation(line: 7802, column: 54, scope: !14365)
!14371 = !DILocation(line: 7802, column: 18, scope: !14365)
!14372 = !DILocation(line: 7802, column: 17, scope: !14366)
!14373 = !DILocation(line: 7803, column: 17, scope: !14374)
!14374 = distinct !DILexicalBlock(scope: !14365, file: !4, line: 7802, column: 63)
!14375 = !DILocation(line: 7806, column: 22, scope: !14356)
!14376 = !DILocation(line: 7806, column: 19, scope: !14356)
!14377 = !DILocation(line: 7807, column: 5, scope: !14356)
!14378 = !DILocation(line: 7809, column: 9, scope: !1360)
!14379 = !DILocation(line: 7809, column: 13, scope: !1360)
!14380 = !DILocation(line: 7809, column: 32, scope: !1360)
!14381 = !DILocation(line: 7809, column: 40, scope: !1360)
!14382 = !DILocation(line: 7809, column: 24, scope: !1360)
!14383 = !DILocation(line: 7809, column: 19, scope: !1360)
!14384 = !DILocation(line: 7810, column: 13, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !1360, file: !4, line: 7810, column: 13)
!14386 = !DILocation(line: 7810, column: 17, scope: !14385)
!14387 = !DILocation(line: 7810, column: 22, scope: !14385)
!14388 = !DILocation(line: 7810, column: 25, scope: !14389)
!14389 = !DILexicalBlockFile(scope: !14385, file: !4, discriminator: 1)
!14390 = !DILocation(line: 7810, column: 29, scope: !14385)
!14391 = !DILocation(line: 7810, column: 13, scope: !1360)
!14392 = !DILocation(line: 7811, column: 13, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14385, file: !4, line: 7810, column: 35)
!14394 = !DILocation(line: 7811, column: 21, scope: !14393)
!14395 = !DILocation(line: 7811, column: 29, scope: !14393)
!14396 = !DILocation(line: 7812, column: 9, scope: !14393)
!14397 = !DILocation(line: 7813, column: 5, scope: !1361)
!14398 = !DILocation(line: 7815, column: 19, scope: !1339)
!14399 = !DILocation(line: 7815, column: 5, scope: !1339)
!14400 = !DILocation(line: 7815, column: 13, scope: !1339)
!14401 = !DILocation(line: 7815, column: 17, scope: !1339)
!14402 = !DILocation(line: 7819, column: 5, scope: !1339)
!14403 = !DILocation(line: 7820, column: 5, scope: !1339)
!14404 = !DILocation(line: 7821, column: 5, scope: !1339)
!14405 = !DILocation(line: 7822, column: 19, scope: !1339)
!14406 = !DILocation(line: 7822, column: 18, scope: !1339)
!14407 = !DILocation(line: 7823, column: 16, scope: !1339)
!14408 = !DILocation(line: 7823, column: 22, scope: !1339)
!14409 = !DILocation(line: 7824, column: 19, scope: !1339)
!14410 = !DILocation(line: 7824, column: 40, scope: !1339)
!14411 = !DILocation(line: 7824, column: 5, scope: !1339)
!14412 = !DILocation(line: 7825, column: 5, scope: !1339)
!14413 = !DILocation(line: 7828, column: 18, scope: !1339)
!14414 = !DILocation(line: 7828, column: 39, scope: !1339)
!14415 = !DILocation(line: 7828, column: 5, scope: !1339)
!14416 = !DILocation(line: 7829, column: 5, scope: !1339)
!14417 = !DILocation(line: 7830, column: 1, scope: !1339)
!14418 = !DILocation(line: 3406, column: 24, scope: !2298)
!14419 = !DILocation(line: 3406, column: 45, scope: !2298)
!14420 = !DILocation(line: 3406, column: 61, scope: !2298)
!14421 = !DILocation(line: 3407, column: 38, scope: !2298)
!14422 = !DILocation(line: 3407, column: 53, scope: !2298)
!14423 = !DILocation(line: 3409, column: 5, scope: !2298)
!14424 = !DILocation(line: 3409, column: 14, scope: !2298)
!14425 = !DILocation(line: 3411, column: 14, scope: !2298)
!14426 = !DILocation(line: 3411, column: 22, scope: !2298)
!14427 = !DILocation(line: 3411, column: 25, scope: !2298)
!14428 = !DILocation(line: 3411, column: 28, scope: !2298)
!14429 = !DILocation(line: 3411, column: 5, scope: !2298)
!14430 = !DILocation(line: 3412, column: 16, scope: !2298)
!14431 = !DILocation(line: 3412, column: 6, scope: !2298)
!14432 = !DILocation(line: 3412, column: 13, scope: !2298)
!14433 = !DILocation(line: 3413, column: 9, scope: !14434)
!14434 = distinct !DILexicalBlock(scope: !2298, file: !4, line: 3413, column: 9)
!14435 = !DILocation(line: 3413, column: 20, scope: !14434)
!14436 = !DILocation(line: 3413, column: 9, scope: !2298)
!14437 = !DILocation(line: 3414, column: 22, scope: !14438)
!14438 = distinct !DILexicalBlock(scope: !14434, file: !4, line: 3413, column: 61)
!14439 = !DILocation(line: 3414, column: 43, scope: !14438)
!14440 = !DILocation(line: 3414, column: 9, scope: !14438)
!14441 = !DILocation(line: 3415, column: 5, scope: !14438)
!14442 = !DILocation(line: 3416, column: 1, scope: !2298)
!14443 = !DILocation(line: 7839, column: 29, scope: !1362)
!14444 = !DILocation(line: 7839, column: 41, scope: !1362)
!14445 = !DILocation(line: 7841, column: 5, scope: !1362)
!14446 = !DILocation(line: 7841, column: 12, scope: !1362)
!14447 = !DILocation(line: 7842, column: 5, scope: !1362)
!14448 = !DILocation(line: 7842, column: 12, scope: !1362)
!14449 = !DILocation(line: 7847, column: 20, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !1362, file: !4, line: 7847, column: 9)
!14451 = !DILocation(line: 7847, column: 9, scope: !14450)
!14452 = !DILocation(line: 7847, column: 9, scope: !1362)
!14453 = !DILocation(line: 7848, column: 9, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !14450, file: !4, line: 7847, column: 24)
!14455 = !DILocation(line: 7851, column: 14, scope: !1362)
!14456 = !DILocation(line: 7851, column: 17, scope: !1362)
!14457 = !DILocation(line: 7851, column: 24, scope: !1362)
!14458 = !DILocation(line: 7851, column: 27, scope: !1362)
!14459 = !DILocation(line: 7851, column: 23, scope: !1362)
!14460 = !DILocation(line: 7851, column: 12, scope: !1362)
!14461 = !DILocation(line: 7856, column: 9, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !1362, file: !4, line: 7856, column: 9)
!14463 = !DILocation(line: 7856, column: 16, scope: !14462)
!14464 = !DILocation(line: 7856, column: 9, scope: !1362)
!14465 = !DILocation(line: 7857, column: 9, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14462, file: !4, line: 7856, column: 39)
!14467 = !DILocation(line: 7861, column: 17, scope: !1362)
!14468 = !DILocation(line: 7861, column: 9, scope: !1362)
!14469 = !DILocation(line: 7861, column: 32, scope: !1362)
!14470 = !DILocation(line: 7861, column: 26, scope: !1362)
!14471 = !DILocation(line: 7861, column: 24, scope: !1362)
!14472 = !DILocation(line: 7861, column: 7, scope: !1362)
!14473 = !{!14474, !14474, i64 0}
!14474 = !{!"double", !2393, i64 0}
!14475 = !DILocation(line: 7862, column: 13, scope: !1362)
!14476 = !DILocation(line: 7862, column: 15, scope: !1362)
!14477 = !DILocation(line: 7862, column: 12, scope: !1362)
!14478 = !DILocation(line: 7862, column: 12, scope: !14479)
!14479 = !DILexicalBlockFile(scope: !1362, file: !4, discriminator: 1)
!14480 = !DILocation(line: 7862, column: 82, scope: !14481)
!14481 = !DILexicalBlockFile(scope: !1362, file: !4, discriminator: 2)
!14482 = !DILocation(line: 7862, column: 74, scope: !1362)
!14483 = !DILocation(line: 7862, column: 84, scope: !1362)
!14484 = !DILocation(line: 7862, column: 5, scope: !14485)
!14485 = !DILexicalBlockFile(scope: !14486, file: !4, discriminator: 4)
!14486 = !DILexicalBlockFile(scope: !1362, file: !4, discriminator: 3)
!14487 = !DILocation(line: 7862, column: 5, scope: !1362)
!14488 = !DILocation(line: 7863, column: 1, scope: !1362)
!14489 = !DILocation(line: 8126, column: 28, scope: !1370)
!14490 = !DILocation(line: 8126, column: 42, scope: !1370)
!14491 = !DILocation(line: 8126, column: 57, scope: !1370)
!14492 = !DILocation(line: 8127, column: 30, scope: !1370)
!14493 = !DILocation(line: 8127, column: 45, scope: !1370)
!14494 = !DILocation(line: 8129, column: 5, scope: !1370)
!14495 = !DILocation(line: 8129, column: 16, scope: !1370)
!14496 = !DILocation(line: 8129, column: 31, scope: !1370)
!14497 = !DILocation(line: 8129, column: 37, scope: !1370)
!14498 = !DILocation(line: 8129, column: 44, scope: !1370)
!14499 = !DILocation(line: 8129, column: 89, scope: !1370)
!14500 = !DILocation(line: 8130, column: 5, scope: !1370)
!14501 = !DILocation(line: 8130, column: 9, scope: !1370)
!14502 = !DILocation(line: 8131, column: 5, scope: !1370)
!14503 = !DILocation(line: 8131, column: 12, scope: !1370)
!14504 = !DILocation(line: 8135, column: 23, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !1370, file: !4, line: 8135, column: 9)
!14506 = !DILocation(line: 8135, column: 9, scope: !14505)
!14507 = !DILocation(line: 8135, column: 28, scope: !14505)
!14508 = !DILocation(line: 8135, column: 43, scope: !14509)
!14509 = !DILexicalBlockFile(scope: !14505, file: !4, discriminator: 1)
!14510 = !DILocation(line: 8135, column: 32, scope: !14505)
!14511 = !DILocation(line: 8135, column: 9, scope: !1370)
!14512 = !DILocation(line: 8136, column: 10, scope: !14513)
!14513 = distinct !DILexicalBlock(scope: !14505, file: !4, line: 8135, column: 49)
!14514 = !DILocation(line: 8136, column: 17, scope: !14513)
!14515 = !DILocation(line: 8137, column: 9, scope: !14513)
!14516 = !DILocation(line: 8140, column: 10, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !1370, file: !4, line: 8140, column: 9)
!14518 = !DILocation(line: 8140, column: 9, scope: !14517)
!14519 = !DILocation(line: 8140, column: 16, scope: !14517)
!14520 = !DILocation(line: 8140, column: 9, scope: !1370)
!14521 = !DILocation(line: 8141, column: 31, scope: !14522)
!14522 = distinct !DILexicalBlock(scope: !14517, file: !4, line: 8140, column: 31)
!14523 = !DILocation(line: 8141, column: 36, scope: !14522)
!14524 = !DILocation(line: 8141, column: 16, scope: !14522)
!14525 = !DILocation(line: 8141, column: 14, scope: !14522)
!14526 = !DILocation(line: 8142, column: 13, scope: !14527)
!14527 = distinct !DILexicalBlock(scope: !14522, file: !4, line: 8142, column: 13)
!14528 = !DILocation(line: 8142, column: 18, scope: !14527)
!14529 = !DILocation(line: 8142, column: 13, scope: !14522)
!14530 = !DILocation(line: 8143, column: 14, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14527, file: !4, line: 8142, column: 47)
!14532 = !DILocation(line: 8143, column: 21, scope: !14531)
!14533 = !DILocation(line: 8144, column: 13, scope: !14531)
!14534 = !DILocation(line: 8146, column: 28, scope: !14522)
!14535 = !DILocation(line: 8146, column: 18, scope: !14522)
!14536 = !DILocation(line: 8146, column: 10, scope: !14522)
!14537 = !DILocation(line: 8146, column: 16, scope: !14522)
!14538 = !DILocation(line: 8147, column: 14, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !14522, file: !4, line: 8147, column: 13)
!14540 = !DILocation(line: 8147, column: 13, scope: !14539)
!14541 = !DILocation(line: 8147, column: 20, scope: !14539)
!14542 = !DILocation(line: 8147, column: 13, scope: !14522)
!14543 = !DILocation(line: 8148, column: 13, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !14539, file: !4, line: 8147, column: 35)
!14545 = !DILocation(line: 8150, column: 15, scope: !14522)
!14546 = !DILocation(line: 8151, column: 5, scope: !14522)
!14547 = !DILocation(line: 8153, column: 20, scope: !14548)
!14548 = distinct !DILexicalBlock(scope: !1370, file: !4, line: 8153, column: 9)
!14549 = !DILocation(line: 8153, column: 9, scope: !14548)
!14550 = !DILocation(line: 8153, column: 9, scope: !1370)
!14551 = !DILocation(line: 8154, column: 11, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14548, file: !4, line: 8153, column: 26)
!14553 = !DILocation(line: 8154, column: 10, scope: !14552)
!14554 = !DILocation(line: 8154, column: 17, scope: !14552)
!14555 = !DILocation(line: 8155, column: 9, scope: !14552)
!14556 = !DILocation(line: 8158, column: 9, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !1370, file: !4, line: 8158, column: 9)
!14558 = !DILocation(line: 8158, column: 14, scope: !14557)
!14559 = !DILocation(line: 8158, column: 18, scope: !14557)
!14560 = !DILocation(line: 8158, column: 9, scope: !1370)
!14561 = !DILocation(line: 8159, column: 33, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14563, file: !4, line: 8159, column: 13)
!14563 = distinct !DILexicalBlock(scope: !14557, file: !4, line: 8158, column: 24)
!14564 = !DILocation(line: 8159, column: 38, scope: !14562)
!14565 = !DILocation(line: 8159, column: 43, scope: !14562)
!14566 = !DILocation(line: 8159, column: 48, scope: !14562)
!14567 = !DILocation(line: 8159, column: 14, scope: !14562)
!14568 = !DILocation(line: 8159, column: 13, scope: !14563)
!14569 = !DILocation(line: 8160, column: 13, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14562, file: !4, line: 8159, column: 57)
!14571 = !DILocation(line: 8162, column: 5, scope: !14563)
!14572 = !DILocation(line: 8164, column: 32, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14574, file: !4, line: 8164, column: 13)
!14574 = distinct !DILexicalBlock(scope: !14557, file: !4, line: 8163, column: 10)
!14575 = !DILocation(line: 8164, column: 38, scope: !14573)
!14576 = !DILocation(line: 8164, column: 43, scope: !14573)
!14577 = !DILocation(line: 8164, column: 37, scope: !14573)
!14578 = !DILocation(line: 8164, column: 48, scope: !14573)
!14579 = !DILocation(line: 8164, column: 13, scope: !14573)
!14580 = !DILocation(line: 8164, column: 56, scope: !14573)
!14581 = !DILocation(line: 8164, column: 13, scope: !14574)
!14582 = !DILocation(line: 8165, column: 13, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14573, file: !4, line: 8164, column: 85)
!14584 = !DILocation(line: 8169, column: 26, scope: !1370)
!14585 = !DILocation(line: 8169, column: 33, scope: !1370)
!14586 = !DILocation(line: 8169, column: 39, scope: !1370)
!14587 = !DILocation(line: 8169, column: 51, scope: !1370)
!14588 = !DILocation(line: 8169, column: 62, scope: !1370)
!14589 = !DILocation(line: 8169, column: 9, scope: !1370)
!14590 = !DILocation(line: 8169, column: 7, scope: !1370)
!14591 = !DILocation(line: 8170, column: 9, scope: !14592)
!14592 = distinct !DILexicalBlock(scope: !1370, file: !4, line: 8170, column: 9)
!14593 = !DILocation(line: 8170, column: 11, scope: !14592)
!14594 = !DILocation(line: 8170, column: 9, scope: !1370)
!14595 = !DILocation(line: 8171, column: 9, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14592, file: !4, line: 8170, column: 40)
!14597 = !DILocation(line: 8170, column: 37, scope: !14598)
!14598 = !DILexicalBlockFile(scope: !14592, file: !4, discriminator: 1)
!14599 = !DILocation(line: 8176, column: 5, scope: !1370)
!14600 = !DILocation(line: 8177, column: 12, scope: !1370)
!14601 = !DILocation(line: 8177, column: 5, scope: !1370)
!14602 = !DILocation(line: 8180, column: 9, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !1370, file: !4, line: 8180, column: 9)
!14604 = !DILocation(line: 8180, column: 9, scope: !1370)
!14605 = !DILocation(line: 8181, column: 9, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14603, file: !4, line: 8180, column: 16)
!14607 = !DILocation(line: 8181, column: 19, scope: !14606)
!14608 = !DILocation(line: 8181, column: 18, scope: !14606)
!14609 = !DILocation(line: 8182, column: 10, scope: !14606)
!14610 = !DILocation(line: 8182, column: 16, scope: !14606)
!14611 = !DILocation(line: 8183, column: 5, scope: !14606)
!14612 = !DILocation(line: 8184, column: 7, scope: !1370)
!14613 = !DILocation(line: 8185, column: 6, scope: !1370)
!14614 = !DILocation(line: 8185, column: 13, scope: !1370)
!14615 = !DILocation(line: 8186, column: 5, scope: !1370)
!14616 = !DILocation(line: 8187, column: 1, scope: !1370)
!14617 = !DILocation(line: 7901, column: 29, scope: !2306)
!14618 = !DILocation(line: 7901, column: 39, scope: !2306)
!14619 = !DILocation(line: 7901, column: 56, scope: !2306)
!14620 = !DILocation(line: 7902, column: 30, scope: !2306)
!14621 = !DILocation(line: 7902, column: 45, scope: !2306)
!14622 = !DILocation(line: 7904, column: 5, scope: !2306)
!14623 = !DILocation(line: 7904, column: 12, scope: !2306)
!14624 = !DILocation(line: 7909, column: 5, scope: !2306)
!14625 = !DILocation(line: 7910, column: 13, scope: !14626)
!14626 = distinct !DILexicalBlock(scope: !14627, file: !4, line: 7910, column: 13)
!14627 = distinct !DILexicalBlock(scope: !2306, file: !4, line: 7909, column: 8)
!14628 = !DILocation(line: 7910, column: 18, scope: !14626)
!14629 = !DILocation(line: 7910, column: 15, scope: !14626)
!14630 = !DILocation(line: 7910, column: 13, scope: !14627)
!14631 = !DILocation(line: 7911, column: 33, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14633, file: !4, line: 7911, column: 17)
!14633 = distinct !DILexicalBlock(scope: !14626, file: !4, line: 7910, column: 24)
!14634 = !DILocation(line: 7911, column: 36, scope: !14632)
!14635 = !DILocation(line: 7911, column: 37, scope: !14632)
!14636 = !DILocation(line: 7911, column: 18, scope: !14632)
!14637 = !DILocation(line: 7911, column: 17, scope: !14633)
!14638 = !DILocation(line: 7912, column: 17, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !14632, file: !4, line: 7911, column: 42)
!14640 = !DILocation(line: 7914, column: 20, scope: !14633)
!14641 = !DILocation(line: 7914, column: 21, scope: !14633)
!14642 = !DILocation(line: 7914, column: 18, scope: !14633)
!14643 = !DILocation(line: 7915, column: 9, scope: !14633)
!14644 = !DILocation(line: 7916, column: 45, scope: !14627)
!14645 = !DILocation(line: 7916, column: 48, scope: !14627)
!14646 = !DILocation(line: 7916, column: 51, scope: !14627)
!14647 = !DILocation(line: 7916, column: 57, scope: !14627)
!14648 = !DILocation(line: 7916, column: 31, scope: !14627)
!14649 = !DILocation(line: 7916, column: 21, scope: !14627)
!14650 = !DILocation(line: 7916, column: 15, scope: !14627)
!14651 = !DILocation(line: 7916, column: 11, scope: !14627)
!14652 = !DILocation(line: 7916, column: 10, scope: !14627)
!14653 = !DILocation(line: 7916, column: 9, scope: !14627)
!14654 = !DILocation(line: 7916, column: 19, scope: !14627)
!14655 = !DILocation(line: 7918, column: 31, scope: !14627)
!14656 = !DILocation(line: 7918, column: 34, scope: !14627)
!14657 = !DILocation(line: 7918, column: 16, scope: !14627)
!14658 = !DILocation(line: 7918, column: 14, scope: !14627)
!14659 = !DILocation(line: 7920, column: 5, scope: !14627)
!14660 = !DILocation(line: 7920, column: 16, scope: !14661)
!14661 = !DILexicalBlockFile(scope: !2306, file: !4, discriminator: 1)
!14662 = !DILocation(line: 7920, column: 20, scope: !2306)
!14663 = !DILocation(line: 7920, column: 14, scope: !2306)
!14664 = !DILocation(line: 7920, column: 24, scope: !2306)
!14665 = !DILocation(line: 7922, column: 12, scope: !2306)
!14666 = !DILocation(line: 7922, column: 5, scope: !2306)
!14667 = !DILocation(line: 7923, column: 1, scope: !2306)
!14668 = !DILocation(line: 8205, column: 28, scope: !1385)
!14669 = !DILocation(line: 8205, column: 42, scope: !1385)
!14670 = !DILocation(line: 8205, column: 57, scope: !1385)
!14671 = !DILocation(line: 8206, column: 30, scope: !1385)
!14672 = !DILocation(line: 8206, column: 45, scope: !1385)
!14673 = !DILocation(line: 8208, column: 5, scope: !1385)
!14674 = !DILocation(line: 8208, column: 16, scope: !1385)
!14675 = !DILocation(line: 8208, column: 31, scope: !1385)
!14676 = !DILocation(line: 8208, column: 37, scope: !1385)
!14677 = !DILocation(line: 8208, column: 44, scope: !1385)
!14678 = !DILocation(line: 8208, column: 89, scope: !1385)
!14679 = !DILocation(line: 8209, column: 5, scope: !1385)
!14680 = !DILocation(line: 8209, column: 9, scope: !1385)
!14681 = !DILocation(line: 8210, column: 5, scope: !1385)
!14682 = !DILocation(line: 8210, column: 12, scope: !1385)
!14683 = !DILocation(line: 8212, column: 23, scope: !14684)
!14684 = distinct !DILexicalBlock(scope: !1385, file: !4, line: 8212, column: 9)
!14685 = !DILocation(line: 8212, column: 9, scope: !14684)
!14686 = !DILocation(line: 8212, column: 28, scope: !14684)
!14687 = !DILocation(line: 8212, column: 43, scope: !14688)
!14688 = !DILexicalBlockFile(scope: !14684, file: !4, discriminator: 1)
!14689 = !DILocation(line: 8212, column: 32, scope: !14684)
!14690 = !DILocation(line: 8212, column: 9, scope: !1385)
!14691 = !DILocation(line: 8213, column: 10, scope: !14692)
!14692 = distinct !DILexicalBlock(scope: !14684, file: !4, line: 8212, column: 49)
!14693 = !DILocation(line: 8213, column: 17, scope: !14692)
!14694 = !DILocation(line: 8214, column: 9, scope: !14692)
!14695 = !DILocation(line: 8217, column: 10, scope: !14696)
!14696 = distinct !DILexicalBlock(scope: !1385, file: !4, line: 8217, column: 9)
!14697 = !DILocation(line: 8217, column: 9, scope: !14696)
!14698 = !DILocation(line: 8217, column: 16, scope: !14696)
!14699 = !DILocation(line: 8217, column: 9, scope: !1385)
!14700 = !DILocation(line: 8218, column: 31, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14696, file: !4, line: 8217, column: 31)
!14702 = !DILocation(line: 8218, column: 36, scope: !14701)
!14703 = !DILocation(line: 8218, column: 16, scope: !14701)
!14704 = !DILocation(line: 8218, column: 14, scope: !14701)
!14705 = !DILocation(line: 8219, column: 13, scope: !14706)
!14706 = distinct !DILexicalBlock(scope: !14701, file: !4, line: 8219, column: 13)
!14707 = !DILocation(line: 8219, column: 18, scope: !14706)
!14708 = !DILocation(line: 8219, column: 13, scope: !14701)
!14709 = !DILocation(line: 8220, column: 14, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14706, file: !4, line: 8219, column: 47)
!14711 = !DILocation(line: 8220, column: 21, scope: !14710)
!14712 = !DILocation(line: 8221, column: 13, scope: !14710)
!14713 = !DILocation(line: 8223, column: 28, scope: !14701)
!14714 = !DILocation(line: 8223, column: 18, scope: !14701)
!14715 = !DILocation(line: 8223, column: 10, scope: !14701)
!14716 = !DILocation(line: 8223, column: 16, scope: !14701)
!14717 = !DILocation(line: 8224, column: 14, scope: !14718)
!14718 = distinct !DILexicalBlock(scope: !14701, file: !4, line: 8224, column: 13)
!14719 = !DILocation(line: 8224, column: 13, scope: !14718)
!14720 = !DILocation(line: 8224, column: 20, scope: !14718)
!14721 = !DILocation(line: 8224, column: 13, scope: !14701)
!14722 = !DILocation(line: 8225, column: 13, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14718, file: !4, line: 8224, column: 35)
!14724 = !DILocation(line: 8227, column: 15, scope: !14701)
!14725 = !DILocation(line: 8228, column: 5, scope: !14701)
!14726 = !DILocation(line: 8230, column: 20, scope: !14727)
!14727 = distinct !DILexicalBlock(scope: !1385, file: !4, line: 8230, column: 9)
!14728 = !DILocation(line: 8230, column: 9, scope: !14727)
!14729 = !DILocation(line: 8230, column: 9, scope: !1385)
!14730 = !DILocation(line: 8231, column: 11, scope: !14731)
!14731 = distinct !DILexicalBlock(scope: !14727, file: !4, line: 8230, column: 26)
!14732 = !DILocation(line: 8231, column: 10, scope: !14731)
!14733 = !DILocation(line: 8231, column: 17, scope: !14731)
!14734 = !DILocation(line: 8232, column: 9, scope: !14731)
!14735 = !DILocation(line: 8235, column: 9, scope: !14736)
!14736 = distinct !DILexicalBlock(scope: !1385, file: !4, line: 8235, column: 9)
!14737 = !DILocation(line: 8235, column: 14, scope: !14736)
!14738 = !DILocation(line: 8235, column: 18, scope: !14736)
!14739 = !DILocation(line: 8235, column: 9, scope: !1385)
!14740 = !DILocation(line: 8236, column: 33, scope: !14741)
!14741 = distinct !DILexicalBlock(scope: !14742, file: !4, line: 8236, column: 13)
!14742 = distinct !DILexicalBlock(scope: !14736, file: !4, line: 8235, column: 24)
!14743 = !DILocation(line: 8236, column: 38, scope: !14741)
!14744 = !DILocation(line: 8236, column: 43, scope: !14741)
!14745 = !DILocation(line: 8236, column: 48, scope: !14741)
!14746 = !DILocation(line: 8236, column: 14, scope: !14741)
!14747 = !DILocation(line: 8236, column: 13, scope: !14742)
!14748 = !DILocation(line: 8237, column: 13, scope: !14749)
!14749 = distinct !DILexicalBlock(scope: !14741, file: !4, line: 8236, column: 57)
!14750 = !DILocation(line: 8239, column: 5, scope: !14742)
!14751 = !DILocation(line: 8241, column: 32, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14753, file: !4, line: 8241, column: 13)
!14753 = distinct !DILexicalBlock(scope: !14736, file: !4, line: 8240, column: 10)
!14754 = !DILocation(line: 8241, column: 38, scope: !14752)
!14755 = !DILocation(line: 8241, column: 43, scope: !14752)
!14756 = !DILocation(line: 8241, column: 37, scope: !14752)
!14757 = !DILocation(line: 8241, column: 48, scope: !14752)
!14758 = !DILocation(line: 8241, column: 13, scope: !14752)
!14759 = !DILocation(line: 8241, column: 56, scope: !14752)
!14760 = !DILocation(line: 8241, column: 13, scope: !14753)
!14761 = !DILocation(line: 8242, column: 13, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14752, file: !4, line: 8241, column: 85)
!14763 = !DILocation(line: 8247, column: 30, scope: !1385)
!14764 = !DILocation(line: 8247, column: 37, scope: !1385)
!14765 = !DILocation(line: 8247, column: 43, scope: !1385)
!14766 = !DILocation(line: 8248, column: 35, scope: !1385)
!14767 = !DILocation(line: 8248, column: 46, scope: !1385)
!14768 = !DILocation(line: 8247, column: 9, scope: !1385)
!14769 = !DILocation(line: 8247, column: 7, scope: !1385)
!14770 = !DILocation(line: 8263, column: 9, scope: !14771)
!14771 = distinct !DILexicalBlock(scope: !1385, file: !4, line: 8263, column: 9)
!14772 = !DILocation(line: 8263, column: 11, scope: !14771)
!14773 = !DILocation(line: 8263, column: 9, scope: !1385)
!14774 = !DILocation(line: 8264, column: 9, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14771, file: !4, line: 8263, column: 40)
!14776 = !DILocation(line: 8263, column: 37, scope: !14777)
!14777 = !DILexicalBlockFile(scope: !14771, file: !4, discriminator: 1)
!14778 = !DILocation(line: 8269, column: 5, scope: !1385)
!14779 = !DILocation(line: 8270, column: 12, scope: !1385)
!14780 = !DILocation(line: 8270, column: 5, scope: !1385)
!14781 = !DILocation(line: 8273, column: 9, scope: !14782)
!14782 = distinct !DILexicalBlock(scope: !1385, file: !4, line: 8273, column: 9)
!14783 = !DILocation(line: 8273, column: 9, scope: !1385)
!14784 = !DILocation(line: 8274, column: 9, scope: !14785)
!14785 = distinct !DILexicalBlock(scope: !14782, file: !4, line: 8273, column: 16)
!14786 = !DILocation(line: 8274, column: 19, scope: !14785)
!14787 = !DILocation(line: 8274, column: 18, scope: !14785)
!14788 = !DILocation(line: 8275, column: 10, scope: !14785)
!14789 = !DILocation(line: 8275, column: 16, scope: !14785)
!14790 = !DILocation(line: 8276, column: 5, scope: !14785)
!14791 = !DILocation(line: 8277, column: 7, scope: !1385)
!14792 = !DILocation(line: 8278, column: 6, scope: !1385)
!14793 = !DILocation(line: 8278, column: 13, scope: !1385)
!14794 = !DILocation(line: 8279, column: 5, scope: !1385)
!14795 = !DILocation(line: 8280, column: 1, scope: !1385)
!14796 = !DILocation(line: 7965, column: 33, scope: !2323)
!14797 = !DILocation(line: 7965, column: 43, scope: !2323)
!14798 = !DILocation(line: 7965, column: 58, scope: !2323)
!14799 = !DILocation(line: 7966, column: 34, scope: !2323)
!14800 = !DILocation(line: 7966, column: 49, scope: !2323)
!14801 = !DILocation(line: 7966, column: 66, scope: !2323)
!14802 = !DILocation(line: 7968, column: 5, scope: !2323)
!14803 = !DILocation(line: 7968, column: 12, scope: !2323)
!14804 = !DILocation(line: 7973, column: 5, scope: !2323)
!14805 = !DILocation(line: 7974, column: 13, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14807, file: !4, line: 7974, column: 13)
!14807 = distinct !DILexicalBlock(scope: !2323, file: !4, line: 7973, column: 8)
!14808 = !DILocation(line: 7974, column: 18, scope: !14806)
!14809 = !DILocation(line: 7974, column: 15, scope: !14806)
!14810 = !DILocation(line: 7974, column: 13, scope: !14807)
!14811 = !DILocation(line: 7975, column: 33, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14813, file: !4, line: 7975, column: 17)
!14813 = distinct !DILexicalBlock(scope: !14806, file: !4, line: 7974, column: 24)
!14814 = !DILocation(line: 7975, column: 36, scope: !14812)
!14815 = !DILocation(line: 7975, column: 37, scope: !14812)
!14816 = !DILocation(line: 7975, column: 18, scope: !14812)
!14817 = !DILocation(line: 7975, column: 17, scope: !14813)
!14818 = !DILocation(line: 7976, column: 17, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14812, file: !4, line: 7975, column: 42)
!14820 = !DILocation(line: 7978, column: 20, scope: !14813)
!14821 = !DILocation(line: 7978, column: 21, scope: !14813)
!14822 = !DILocation(line: 7978, column: 18, scope: !14813)
!14823 = !DILocation(line: 7979, column: 9, scope: !14813)
!14824 = !DILocation(line: 7980, column: 47, scope: !14807)
!14825 = !DILocation(line: 7980, column: 50, scope: !14807)
!14826 = !DILocation(line: 7980, column: 53, scope: !14807)
!14827 = !DILocation(line: 7980, column: 59, scope: !14807)
!14828 = !DILocation(line: 7980, column: 66, scope: !14807)
!14829 = !DILocation(line: 7980, column: 31, scope: !14807)
!14830 = !DILocation(line: 7980, column: 21, scope: !14807)
!14831 = !DILocation(line: 7980, column: 15, scope: !14807)
!14832 = !DILocation(line: 7980, column: 11, scope: !14807)
!14833 = !DILocation(line: 7980, column: 10, scope: !14807)
!14834 = !DILocation(line: 7980, column: 9, scope: !14807)
!14835 = !DILocation(line: 7980, column: 19, scope: !14807)
!14836 = !DILocation(line: 7982, column: 31, scope: !14807)
!14837 = !DILocation(line: 7982, column: 34, scope: !14807)
!14838 = !DILocation(line: 7982, column: 16, scope: !14807)
!14839 = !DILocation(line: 7982, column: 14, scope: !14807)
!14840 = !DILocation(line: 7984, column: 5, scope: !14807)
!14841 = !DILocation(line: 7984, column: 16, scope: !14842)
!14842 = !DILexicalBlockFile(scope: !2323, file: !4, discriminator: 1)
!14843 = !DILocation(line: 7984, column: 20, scope: !2323)
!14844 = !DILocation(line: 7984, column: 14, scope: !2323)
!14845 = !DILocation(line: 7984, column: 24, scope: !2323)
!14846 = !DILocation(line: 7986, column: 12, scope: !2323)
!14847 = !DILocation(line: 7986, column: 5, scope: !2323)
!14848 = !DILocation(line: 7987, column: 1, scope: !2323)
!14849 = !DILocation(line: 8288, column: 24, scope: !1399)
!14850 = !DILocation(line: 8289, column: 33, scope: !1399)
!14851 = !DILocation(line: 8289, column: 49, scope: !1399)
!14852 = !DILocation(line: 8290, column: 25, scope: !1399)
!14853 = !DILocation(line: 8290, column: 43, scope: !1399)
!14854 = !DILocation(line: 8291, column: 38, scope: !1399)
!14855 = !DILocation(line: 8291, column: 53, scope: !1399)
!14856 = !DILocation(line: 8293, column: 5, scope: !1399)
!14857 = !DILocation(line: 8293, column: 17, scope: !1399)
!14858 = !DILocation(line: 8294, column: 5, scope: !1399)
!14859 = !DILocation(line: 8294, column: 17, scope: !1399)
!14860 = !DILocation(line: 8295, column: 5, scope: !1399)
!14861 = !DILocation(line: 8295, column: 12, scope: !1399)
!14862 = !DILocation(line: 8300, column: 28, scope: !1399)
!14863 = !DILocation(line: 8300, column: 36, scope: !1399)
!14864 = !DILocation(line: 8300, column: 12, scope: !1399)
!14865 = !DILocation(line: 8300, column: 10, scope: !1399)
!14866 = !DILocation(line: 8301, column: 9, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !1399, file: !4, line: 8301, column: 9)
!14868 = !DILocation(line: 8301, column: 14, scope: !14867)
!14869 = !DILocation(line: 8301, column: 9, scope: !1399)
!14870 = !DILocation(line: 8302, column: 22, scope: !14871)
!14871 = distinct !DILexicalBlock(scope: !14867, file: !4, line: 8301, column: 41)
!14872 = !DILocation(line: 8302, column: 43, scope: !14871)
!14873 = !DILocation(line: 8302, column: 9, scope: !14871)
!14874 = !DILocation(line: 8303, column: 9, scope: !14871)
!14875 = !DILocation(line: 8306, column: 34, scope: !1399)
!14876 = !DILocation(line: 8306, column: 12, scope: !1399)
!14877 = !DILocation(line: 8306, column: 10, scope: !1399)
!14878 = !DILocation(line: 8307, column: 9, scope: !14879)
!14879 = distinct !DILexicalBlock(scope: !1399, file: !4, line: 8307, column: 9)
!14880 = !DILocation(line: 8307, column: 14, scope: !14879)
!14881 = !DILocation(line: 8307, column: 9, scope: !1399)
!14882 = !DILocation(line: 8308, column: 22, scope: !14883)
!14883 = distinct !DILexicalBlock(scope: !14879, file: !4, line: 8307, column: 29)
!14884 = !DILocation(line: 8308, column: 43, scope: !14883)
!14885 = !DILocation(line: 8308, column: 9, scope: !14883)
!14886 = !DILocation(line: 8309, column: 9, scope: !14883)
!14887 = !DILocation(line: 8311, column: 12, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !1399, file: !4, line: 8311, column: 5)
!14889 = !DILocation(line: 8311, column: 10, scope: !14888)
!14890 = !DILocation(line: 8311, column: 17, scope: !14891)
!14891 = !DILexicalBlockFile(scope: !14892, file: !4, discriminator: 2)
!14892 = !DILexicalBlockFile(scope: !14893, file: !4, discriminator: 1)
!14893 = distinct !DILexicalBlock(scope: !14888, file: !4, line: 8311, column: 5)
!14894 = !DILocation(line: 8311, column: 21, scope: !14893)
!14895 = !DILocation(line: 8311, column: 19, scope: !14893)
!14896 = !DILocation(line: 8311, column: 5, scope: !14888)
!14897 = !DILocation(line: 8312, column: 27, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14893, file: !4, line: 8311, column: 34)
!14899 = !DILocation(line: 8312, column: 19, scope: !14898)
!14900 = !DILocation(line: 8312, column: 14, scope: !14898)
!14901 = !DILocation(line: 8312, column: 9, scope: !14898)
!14902 = !DILocation(line: 8312, column: 17, scope: !14898)
!14903 = !DILocation(line: 8313, column: 5, scope: !14898)
!14904 = !DILocation(line: 8311, column: 30, scope: !14893)
!14905 = !DILocation(line: 8311, column: 5, scope: !14893)
!14906 = !DILocation(line: 8315, column: 22, scope: !14907)
!14907 = distinct !DILexicalBlock(scope: !1399, file: !4, line: 8315, column: 9)
!14908 = !DILocation(line: 8315, column: 30, scope: !14907)
!14909 = !DILocation(line: 8315, column: 36, scope: !14907)
!14910 = !DILocation(line: 8315, column: 10, scope: !14907)
!14911 = !DILocation(line: 8315, column: 9, scope: !1399)
!14912 = !DILocation(line: 8316, column: 9, scope: !14913)
!14913 = distinct !DILexicalBlock(scope: !14907, file: !4, line: 8315, column: 45)
!14914 = !DILocation(line: 8319, column: 25, scope: !1399)
!14915 = !DILocation(line: 8319, column: 33, scope: !1399)
!14916 = !DILocation(line: 8319, column: 39, scope: !1399)
!14917 = !DILocation(line: 8319, column: 45, scope: !1399)
!14918 = !DILocation(line: 8319, column: 53, scope: !1399)
!14919 = !DILocation(line: 8319, column: 62, scope: !1399)
!14920 = !DILocation(line: 8319, column: 9, scope: !1399)
!14921 = !DILocation(line: 8319, column: 7, scope: !1399)
!14922 = !DILocation(line: 8320, column: 9, scope: !14923)
!14923 = distinct !DILexicalBlock(scope: !1399, file: !4, line: 8320, column: 9)
!14924 = !DILocation(line: 8320, column: 11, scope: !14923)
!14925 = !DILocation(line: 8320, column: 9, scope: !1399)
!14926 = !DILocation(line: 8321, column: 9, scope: !14927)
!14927 = distinct !DILexicalBlock(scope: !14923, file: !4, line: 8320, column: 40)
!14928 = !DILocation(line: 8324, column: 19, scope: !1399)
!14929 = !DILocation(line: 8324, column: 27, scope: !1399)
!14930 = !DILocation(line: 8324, column: 5, scope: !1399)
!14931 = !DILocation(line: 8325, column: 5, scope: !1399)
!14932 = !DILocation(line: 8325, column: 13, scope: !1399)
!14933 = !DILocation(line: 8325, column: 17, scope: !1399)
!14934 = !DILocation(line: 8326, column: 19, scope: !1399)
!14935 = !DILocation(line: 8326, column: 5, scope: !1399)
!14936 = !DILocation(line: 8326, column: 13, scope: !1399)
!14937 = !DILocation(line: 8326, column: 17, scope: !1399)
!14938 = !DILocation(line: 8327, column: 19, scope: !1399)
!14939 = !DILocation(line: 8327, column: 5, scope: !1399)
!14940 = !DILocation(line: 8329, column: 17, scope: !1399)
!14941 = !DILocation(line: 8329, column: 25, scope: !1399)
!14942 = !DILocation(line: 8329, column: 33, scope: !1399)
!14943 = !DILocation(line: 8329, column: 38, scope: !1399)
!14944 = !DILocation(line: 8329, column: 5, scope: !1399)
!14945 = !DILocation(line: 8330, column: 19, scope: !1399)
!14946 = !DILocation(line: 8330, column: 27, scope: !1399)
!14947 = !DILocation(line: 8330, column: 32, scope: !1399)
!14948 = !DILocation(line: 8330, column: 5, scope: !1399)
!14949 = !DILocation(line: 8334, column: 5, scope: !1399)
!14950 = !DILocation(line: 8334, column: 14, scope: !1399)
!14951 = !DILocation(line: 8335, column: 1, scope: !1399)
!14952 = !DILocation(line: 8335, column: 1, scope: !14953)
!14953 = !DILexicalBlockFile(scope: !1399, file: !4, discriminator: 1)
!14954 = !DILocation(line: 7867, column: 24, scope: !2341)
!14955 = !DILocation(line: 7867, column: 41, scope: !2341)
!14956 = !DILocation(line: 7869, column: 5, scope: !2341)
!14957 = !DILocation(line: 7869, column: 12, scope: !2341)
!14958 = !DILocation(line: 7875, column: 9, scope: !14959)
!14959 = distinct !DILexicalBlock(scope: !2341, file: !4, line: 7875, column: 9)
!14960 = !DILocation(line: 7875, column: 16, scope: !14959)
!14961 = !DILocation(line: 7875, column: 9, scope: !2341)
!14962 = !DILocation(line: 7876, column: 9, scope: !14963)
!14963 = distinct !DILexicalBlock(scope: !14959, file: !4, line: 7875, column: 30)
!14964 = !DILocation(line: 7880, column: 17, scope: !2341)
!14965 = !DILocation(line: 7880, column: 9, scope: !2341)
!14966 = !DILocation(line: 7880, column: 33, scope: !2341)
!14967 = !DILocation(line: 7880, column: 27, scope: !2341)
!14968 = !DILocation(line: 7880, column: 38, scope: !2341)
!14969 = !DILocation(line: 7880, column: 24, scope: !2341)
!14970 = !DILocation(line: 7880, column: 7, scope: !2341)
!14971 = !DILocation(line: 7881, column: 13, scope: !2341)
!14972 = !DILocation(line: 7881, column: 15, scope: !2341)
!14973 = !DILocation(line: 7881, column: 12, scope: !2341)
!14974 = !DILocation(line: 7881, column: 12, scope: !14975)
!14975 = !DILexicalBlockFile(scope: !2341, file: !4, discriminator: 1)
!14976 = !DILocation(line: 7881, column: 79, scope: !14977)
!14977 = !DILexicalBlockFile(scope: !2341, file: !4, discriminator: 2)
!14978 = !DILocation(line: 7881, column: 66, scope: !2341)
!14979 = !DILocation(line: 7881, column: 81, scope: !2341)
!14980 = !DILocation(line: 7881, column: 5, scope: !14981)
!14981 = !DILexicalBlockFile(scope: !14982, file: !4, discriminator: 4)
!14982 = !DILexicalBlockFile(scope: !2341, file: !4, discriminator: 3)
!14983 = !DILocation(line: 7881, column: 5, scope: !2341)
!14984 = !DILocation(line: 7882, column: 1, scope: !2341)
!14985 = !DILocation(line: 7926, column: 24, scope: !2348)
!14986 = !DILocation(line: 7926, column: 39, scope: !2348)
!14987 = !DILocation(line: 7927, column: 35, scope: !2348)
!14988 = !DILocation(line: 7927, column: 45, scope: !2348)
!14989 = !DILocation(line: 7927, column: 60, scope: !2348)
!14990 = !DILocation(line: 7928, column: 27, scope: !2348)
!14991 = !DILocation(line: 7930, column: 5, scope: !2348)
!14992 = !DILocation(line: 7930, column: 17, scope: !2348)
!14993 = !DILocation(line: 7931, column: 5, scope: !2348)
!14994 = !DILocation(line: 7931, column: 16, scope: !2348)
!14995 = !DILocation(line: 7936, column: 22, scope: !2348)
!14996 = !DILocation(line: 7936, column: 20, scope: !2348)
!14997 = !DILocation(line: 7936, column: 14, scope: !2348)
!14998 = !DILocation(line: 7936, column: 5, scope: !2348)
!14999 = !DILocation(line: 7936, column: 8, scope: !2348)
!15000 = !DILocation(line: 7936, column: 18, scope: !2348)
!15001 = !DILocation(line: 7937, column: 5, scope: !2348)
!15002 = !DILocation(line: 7937, column: 12, scope: !15003)
!15003 = !DILexicalBlockFile(scope: !15004, file: !4, discriminator: 2)
!15004 = !DILexicalBlockFile(scope: !2348, file: !4, discriminator: 1)
!15005 = !DILocation(line: 7937, column: 19, scope: !2348)
!15006 = !DILocation(line: 7938, column: 33, scope: !15007)
!15007 = distinct !DILexicalBlock(scope: !2348, file: !4, line: 7937, column: 48)
!15008 = !DILocation(line: 7938, column: 36, scope: !15007)
!15009 = !DILocation(line: 7938, column: 42, scope: !15007)
!15010 = !DILocation(line: 7938, column: 45, scope: !15007)
!15011 = !DILocation(line: 7938, column: 51, scope: !15007)
!15012 = !DILocation(line: 7938, column: 54, scope: !15007)
!15013 = !DILocation(line: 7938, column: 17, scope: !15007)
!15014 = !DILocation(line: 7938, column: 15, scope: !15007)
!15015 = !DILocation(line: 7939, column: 13, scope: !15016)
!15016 = distinct !DILexicalBlock(scope: !15007, file: !4, line: 7939, column: 13)
!15017 = !DILocation(line: 7939, column: 13, scope: !15007)
!15018 = !DILocation(line: 7940, column: 17, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !15020, file: !4, line: 7940, column: 17)
!15020 = distinct !DILexicalBlock(scope: !15016, file: !4, line: 7939, column: 20)
!15021 = !DILocation(line: 7940, column: 22, scope: !15019)
!15022 = !DILocation(line: 7940, column: 19, scope: !15019)
!15023 = !DILocation(line: 7940, column: 17, scope: !15020)
!15024 = !DILocation(line: 7941, column: 34, scope: !15025)
!15025 = distinct !DILexicalBlock(scope: !15026, file: !4, line: 7941, column: 21)
!15026 = distinct !DILexicalBlock(scope: !15019, file: !4, line: 7940, column: 28)
!15027 = !DILocation(line: 7941, column: 37, scope: !15025)
!15028 = !DILocation(line: 7941, column: 38, scope: !15025)
!15029 = !DILocation(line: 7941, column: 42, scope: !15025)
!15030 = !DILocation(line: 7941, column: 22, scope: !15025)
!15031 = !DILocation(line: 7941, column: 21, scope: !15026)
!15032 = !DILocation(line: 7942, column: 21, scope: !15033)
!15033 = distinct !DILexicalBlock(scope: !15025, file: !4, line: 7941, column: 51)
!15034 = !DILocation(line: 7944, column: 24, scope: !15026)
!15035 = !DILocation(line: 7944, column: 25, scope: !15026)
!15036 = !DILocation(line: 7944, column: 22, scope: !15026)
!15037 = !DILocation(line: 7945, column: 13, scope: !15026)
!15038 = !DILocation(line: 7946, column: 28, scope: !15020)
!15039 = !DILocation(line: 7946, column: 22, scope: !15020)
!15040 = !DILocation(line: 7946, column: 13, scope: !15020)
!15041 = !DILocation(line: 7946, column: 16, scope: !15020)
!15042 = !DILocation(line: 7946, column: 26, scope: !15020)
!15043 = !DILocation(line: 7947, column: 9, scope: !15020)
!15044 = !DILocation(line: 7948, column: 31, scope: !15007)
!15045 = !DILocation(line: 7948, column: 34, scope: !15007)
!15046 = !DILocation(line: 7948, column: 40, scope: !15007)
!15047 = !DILocation(line: 7948, column: 45, scope: !15007)
!15048 = !DILocation(line: 7948, column: 43, scope: !15007)
!15049 = !DILocation(line: 7948, column: 17, scope: !15007)
!15050 = !DILocation(line: 7948, column: 15, scope: !15007)
!15051 = !DILocation(line: 7949, column: 13, scope: !15052)
!15052 = distinct !DILexicalBlock(scope: !15007, file: !4, line: 7949, column: 13)
!15053 = !DILocation(line: 7949, column: 13, scope: !15007)
!15054 = !DILocation(line: 7950, column: 17, scope: !15055)
!15055 = distinct !DILexicalBlock(scope: !15056, file: !4, line: 7950, column: 17)
!15056 = distinct !DILexicalBlock(scope: !15052, file: !4, line: 7949, column: 20)
!15057 = !DILocation(line: 7950, column: 22, scope: !15055)
!15058 = !DILocation(line: 7950, column: 19, scope: !15055)
!15059 = !DILocation(line: 7950, column: 17, scope: !15056)
!15060 = !DILocation(line: 7951, column: 34, scope: !15061)
!15061 = distinct !DILexicalBlock(scope: !15062, file: !4, line: 7951, column: 21)
!15062 = distinct !DILexicalBlock(scope: !15055, file: !4, line: 7950, column: 28)
!15063 = !DILocation(line: 7951, column: 37, scope: !15061)
!15064 = !DILocation(line: 7951, column: 38, scope: !15061)
!15065 = !DILocation(line: 7951, column: 42, scope: !15061)
!15066 = !DILocation(line: 7951, column: 22, scope: !15061)
!15067 = !DILocation(line: 7951, column: 21, scope: !15062)
!15068 = !DILocation(line: 7952, column: 21, scope: !15069)
!15069 = distinct !DILexicalBlock(scope: !15061, file: !4, line: 7951, column: 51)
!15070 = !DILocation(line: 7954, column: 24, scope: !15062)
!15071 = !DILocation(line: 7954, column: 25, scope: !15062)
!15072 = !DILocation(line: 7954, column: 22, scope: !15062)
!15073 = !DILocation(line: 7955, column: 13, scope: !15062)
!15074 = !DILocation(line: 7956, column: 28, scope: !15056)
!15075 = !DILocation(line: 7956, column: 22, scope: !15056)
!15076 = !DILocation(line: 7956, column: 13, scope: !15056)
!15077 = !DILocation(line: 7956, column: 16, scope: !15056)
!15078 = !DILocation(line: 7956, column: 26, scope: !15056)
!15079 = !DILocation(line: 7957, column: 9, scope: !15056)
!15080 = !DILocation(line: 7960, column: 12, scope: !2348)
!15081 = !DILocation(line: 7960, column: 5, scope: !2348)
!15082 = !DILocation(line: 7961, column: 1, scope: !2348)
!15083 = !DILocation(line: 8342, column: 24, scope: !1415)
!15084 = !DILocation(line: 8343, column: 33, scope: !1415)
!15085 = !DILocation(line: 8343, column: 49, scope: !1415)
!15086 = !DILocation(line: 8344, column: 25, scope: !1415)
!15087 = !DILocation(line: 8344, column: 43, scope: !1415)
!15088 = !DILocation(line: 8345, column: 38, scope: !1415)
!15089 = !DILocation(line: 8345, column: 53, scope: !1415)
!15090 = !DILocation(line: 8347, column: 5, scope: !1415)
!15091 = !DILocation(line: 8347, column: 17, scope: !1415)
!15092 = !DILocation(line: 8348, column: 5, scope: !1415)
!15093 = !DILocation(line: 8348, column: 12, scope: !1415)
!15094 = !DILocation(line: 8352, column: 28, scope: !1415)
!15095 = !DILocation(line: 8352, column: 36, scope: !1415)
!15096 = !DILocation(line: 8352, column: 12, scope: !1415)
!15097 = !DILocation(line: 8352, column: 10, scope: !1415)
!15098 = !DILocation(line: 8353, column: 9, scope: !15099)
!15099 = distinct !DILexicalBlock(scope: !1415, file: !4, line: 8353, column: 9)
!15100 = !DILocation(line: 8353, column: 14, scope: !15099)
!15101 = !DILocation(line: 8353, column: 9, scope: !1415)
!15102 = !DILocation(line: 8354, column: 22, scope: !15103)
!15103 = distinct !DILexicalBlock(scope: !15099, file: !4, line: 8353, column: 41)
!15104 = !DILocation(line: 8354, column: 43, scope: !15103)
!15105 = !DILocation(line: 8354, column: 9, scope: !15103)
!15106 = !DILocation(line: 8355, column: 9, scope: !15103)
!15107 = !DILocation(line: 8358, column: 22, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !1415, file: !4, line: 8358, column: 9)
!15109 = !DILocation(line: 8358, column: 30, scope: !15108)
!15110 = !DILocation(line: 8358, column: 36, scope: !15108)
!15111 = !DILocation(line: 8358, column: 10, scope: !15108)
!15112 = !DILocation(line: 8358, column: 9, scope: !1415)
!15113 = !DILocation(line: 8359, column: 9, scope: !15114)
!15114 = distinct !DILexicalBlock(scope: !15108, file: !4, line: 8358, column: 45)
!15115 = !DILocation(line: 8363, column: 34, scope: !1415)
!15116 = !DILocation(line: 8363, column: 42, scope: !1415)
!15117 = !DILocation(line: 8364, column: 34, scope: !1415)
!15118 = !DILocation(line: 8364, column: 43, scope: !1415)
!15119 = !DILocation(line: 8364, column: 51, scope: !1415)
!15120 = !DILocation(line: 8365, column: 34, scope: !1415)
!15121 = !DILocation(line: 8363, column: 9, scope: !1415)
!15122 = !DILocation(line: 8363, column: 7, scope: !1415)
!15123 = !DILocation(line: 8396, column: 9, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !1415, file: !4, line: 8396, column: 9)
!15125 = !DILocation(line: 8396, column: 11, scope: !15124)
!15126 = !DILocation(line: 8396, column: 9, scope: !1415)
!15127 = !DILocation(line: 8397, column: 9, scope: !15128)
!15128 = distinct !DILexicalBlock(scope: !15124, file: !4, line: 8396, column: 40)
!15129 = !DILocation(line: 8400, column: 19, scope: !1415)
!15130 = !DILocation(line: 8400, column: 27, scope: !1415)
!15131 = !DILocation(line: 8400, column: 5, scope: !1415)
!15132 = !DILocation(line: 8401, column: 5, scope: !1415)
!15133 = !DILocation(line: 8401, column: 13, scope: !1415)
!15134 = !DILocation(line: 8401, column: 17, scope: !1415)
!15135 = !DILocation(line: 8402, column: 19, scope: !1415)
!15136 = !DILocation(line: 8402, column: 5, scope: !1415)
!15137 = !DILocation(line: 8402, column: 13, scope: !1415)
!15138 = !DILocation(line: 8402, column: 17, scope: !1415)
!15139 = !DILocation(line: 8403, column: 19, scope: !1415)
!15140 = !DILocation(line: 8403, column: 5, scope: !1415)
!15141 = !DILocation(line: 8405, column: 17, scope: !1415)
!15142 = !DILocation(line: 8405, column: 25, scope: !1415)
!15143 = !DILocation(line: 8405, column: 33, scope: !1415)
!15144 = !DILocation(line: 8405, column: 38, scope: !1415)
!15145 = !DILocation(line: 8405, column: 5, scope: !1415)
!15146 = !DILocation(line: 8406, column: 19, scope: !1415)
!15147 = !DILocation(line: 8406, column: 27, scope: !1415)
!15148 = !DILocation(line: 8406, column: 32, scope: !1415)
!15149 = !DILocation(line: 8406, column: 5, scope: !1415)
!15150 = !DILocation(line: 8407, column: 1, scope: !1415)
!15151 = !DILocation(line: 8407, column: 1, scope: !15152)
!15152 = !DILexicalBlockFile(scope: !1415, file: !4, discriminator: 1)
!15153 = !DILocation(line: 8073, column: 33, scope: !2360)
!15154 = !DILocation(line: 8073, column: 48, scope: !2360)
!15155 = !DILocation(line: 8073, column: 65, scope: !2360)
!15156 = !DILocation(line: 8074, column: 42, scope: !2360)
!15157 = !DILocation(line: 8074, column: 52, scope: !2360)
!15158 = !DILocation(line: 8074, column: 69, scope: !2360)
!15159 = !DILocation(line: 8075, column: 36, scope: !2360)
!15160 = !DILocation(line: 8077, column: 5, scope: !2360)
!15161 = !DILocation(line: 8077, column: 17, scope: !2360)
!15162 = !DILocation(line: 8078, column: 5, scope: !2360)
!15163 = !DILocation(line: 8078, column: 16, scope: !2360)
!15164 = !DILocation(line: 8083, column: 22, scope: !2360)
!15165 = !DILocation(line: 8083, column: 20, scope: !2360)
!15166 = !DILocation(line: 8083, column: 14, scope: !2360)
!15167 = !DILocation(line: 8083, column: 5, scope: !2360)
!15168 = !DILocation(line: 8083, column: 8, scope: !2360)
!15169 = !DILocation(line: 8083, column: 18, scope: !2360)
!15170 = !DILocation(line: 8084, column: 5, scope: !2360)
!15171 = !DILocation(line: 8084, column: 12, scope: !15172)
!15172 = !DILexicalBlockFile(scope: !15173, file: !4, discriminator: 2)
!15173 = !DILexicalBlockFile(scope: !2360, file: !4, discriminator: 1)
!15174 = !DILocation(line: 8084, column: 19, scope: !2360)
!15175 = !DILocation(line: 8085, column: 33, scope: !15176)
!15176 = distinct !DILexicalBlock(scope: !2360, file: !4, line: 8084, column: 48)
!15177 = !DILocation(line: 8085, column: 36, scope: !15176)
!15178 = !DILocation(line: 8085, column: 42, scope: !15176)
!15179 = !DILocation(line: 8085, column: 45, scope: !15176)
!15180 = !DILocation(line: 8085, column: 51, scope: !15176)
!15181 = !DILocation(line: 8085, column: 54, scope: !15176)
!15182 = !DILocation(line: 8085, column: 61, scope: !15176)
!15183 = !DILocation(line: 8085, column: 17, scope: !15176)
!15184 = !DILocation(line: 8085, column: 15, scope: !15176)
!15185 = !DILocation(line: 8086, column: 13, scope: !15186)
!15186 = distinct !DILexicalBlock(scope: !15176, file: !4, line: 8086, column: 13)
!15187 = !DILocation(line: 8086, column: 13, scope: !15176)
!15188 = !DILocation(line: 8087, column: 17, scope: !15189)
!15189 = distinct !DILexicalBlock(scope: !15190, file: !4, line: 8087, column: 17)
!15190 = distinct !DILexicalBlock(scope: !15186, file: !4, line: 8086, column: 20)
!15191 = !DILocation(line: 8087, column: 22, scope: !15189)
!15192 = !DILocation(line: 8087, column: 19, scope: !15189)
!15193 = !DILocation(line: 8087, column: 17, scope: !15190)
!15194 = !DILocation(line: 8088, column: 34, scope: !15195)
!15195 = distinct !DILexicalBlock(scope: !15196, file: !4, line: 8088, column: 21)
!15196 = distinct !DILexicalBlock(scope: !15189, file: !4, line: 8087, column: 28)
!15197 = !DILocation(line: 8088, column: 37, scope: !15195)
!15198 = !DILocation(line: 8088, column: 38, scope: !15195)
!15199 = !DILocation(line: 8088, column: 42, scope: !15195)
!15200 = !DILocation(line: 8088, column: 22, scope: !15195)
!15201 = !DILocation(line: 8088, column: 21, scope: !15196)
!15202 = !DILocation(line: 8089, column: 21, scope: !15203)
!15203 = distinct !DILexicalBlock(scope: !15195, file: !4, line: 8088, column: 51)
!15204 = !DILocation(line: 8091, column: 24, scope: !15196)
!15205 = !DILocation(line: 8091, column: 25, scope: !15196)
!15206 = !DILocation(line: 8091, column: 22, scope: !15196)
!15207 = !DILocation(line: 8092, column: 13, scope: !15196)
!15208 = !DILocation(line: 8093, column: 28, scope: !15190)
!15209 = !DILocation(line: 8093, column: 22, scope: !15190)
!15210 = !DILocation(line: 8093, column: 13, scope: !15190)
!15211 = !DILocation(line: 8093, column: 16, scope: !15190)
!15212 = !DILocation(line: 8093, column: 26, scope: !15190)
!15213 = !DILocation(line: 8094, column: 9, scope: !15190)
!15214 = !DILocation(line: 8095, column: 33, scope: !15176)
!15215 = !DILocation(line: 8095, column: 36, scope: !15176)
!15216 = !DILocation(line: 8095, column: 42, scope: !15176)
!15217 = !DILocation(line: 8095, column: 47, scope: !15176)
!15218 = !DILocation(line: 8095, column: 45, scope: !15176)
!15219 = !DILocation(line: 8095, column: 54, scope: !15176)
!15220 = !DILocation(line: 8095, column: 17, scope: !15176)
!15221 = !DILocation(line: 8095, column: 15, scope: !15176)
!15222 = !DILocation(line: 8096, column: 13, scope: !15223)
!15223 = distinct !DILexicalBlock(scope: !15176, file: !4, line: 8096, column: 13)
!15224 = !DILocation(line: 8096, column: 13, scope: !15176)
!15225 = !DILocation(line: 8097, column: 17, scope: !15226)
!15226 = distinct !DILexicalBlock(scope: !15227, file: !4, line: 8097, column: 17)
!15227 = distinct !DILexicalBlock(scope: !15223, file: !4, line: 8096, column: 20)
!15228 = !DILocation(line: 8097, column: 22, scope: !15226)
!15229 = !DILocation(line: 8097, column: 19, scope: !15226)
!15230 = !DILocation(line: 8097, column: 17, scope: !15227)
!15231 = !DILocation(line: 8098, column: 34, scope: !15232)
!15232 = distinct !DILexicalBlock(scope: !15233, file: !4, line: 8098, column: 21)
!15233 = distinct !DILexicalBlock(scope: !15226, file: !4, line: 8097, column: 28)
!15234 = !DILocation(line: 8098, column: 37, scope: !15232)
!15235 = !DILocation(line: 8098, column: 38, scope: !15232)
!15236 = !DILocation(line: 8098, column: 42, scope: !15232)
!15237 = !DILocation(line: 8098, column: 22, scope: !15232)
!15238 = !DILocation(line: 8098, column: 21, scope: !15233)
!15239 = !DILocation(line: 8099, column: 21, scope: !15240)
!15240 = distinct !DILexicalBlock(scope: !15232, file: !4, line: 8098, column: 51)
!15241 = !DILocation(line: 8101, column: 24, scope: !15233)
!15242 = !DILocation(line: 8101, column: 25, scope: !15233)
!15243 = !DILocation(line: 8101, column: 22, scope: !15233)
!15244 = !DILocation(line: 8102, column: 13, scope: !15233)
!15245 = !DILocation(line: 8103, column: 28, scope: !15227)
!15246 = !DILocation(line: 8103, column: 22, scope: !15227)
!15247 = !DILocation(line: 8103, column: 13, scope: !15227)
!15248 = !DILocation(line: 8103, column: 16, scope: !15227)
!15249 = !DILocation(line: 8103, column: 26, scope: !15227)
!15250 = !DILocation(line: 8104, column: 9, scope: !15227)
!15251 = !DILocation(line: 8107, column: 12, scope: !2360)
!15252 = !DILocation(line: 8107, column: 5, scope: !2360)
!15253 = !DILocation(line: 8108, column: 1, scope: !2360)
!15254 = !DILocation(line: 2453, column: 21, scope: !1480)
!15255 = !DILocation(line: 2453, column: 42, scope: !1480)
!15256 = !DILocation(line: 2453, column: 57, scope: !1480)
!15257 = !DILocation(line: 2455, column: 5, scope: !1480)
!15258 = !DILocation(line: 2455, column: 16, scope: !1480)
!15259 = !DILocation(line: 2456, column: 5, scope: !1480)
!15260 = !DILocation(line: 2456, column: 17, scope: !1480)
!15261 = !DILocation(line: 2461, column: 25, scope: !15262)
!15262 = distinct !DILexicalBlock(scope: !1480, file: !4, line: 2461, column: 9)
!15263 = !DILocation(line: 2461, column: 9, scope: !15262)
!15264 = !DILocation(line: 2461, column: 28, scope: !15262)
!15265 = !DILocation(line: 2461, column: 31, scope: !15266)
!15266 = !DILexicalBlockFile(scope: !15262, file: !4, discriminator: 1)
!15267 = !DILocation(line: 2461, column: 33, scope: !15262)
!15268 = !DILocation(line: 2461, column: 9, scope: !1480)
!15269 = !DILocation(line: 2462, column: 26, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !15262, file: !4, line: 2461, column: 39)
!15271 = !DILocation(line: 2462, column: 34, scope: !15270)
!15272 = !DILocation(line: 2462, column: 9, scope: !15270)
!15273 = !DILocation(line: 2463, column: 9, scope: !15270)
!15274 = !DILocation(line: 2466, column: 9, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !1480, file: !4, line: 2466, column: 9)
!15276 = !DILocation(line: 2466, column: 14, scope: !15275)
!15277 = !DILocation(line: 2466, column: 17, scope: !15275)
!15278 = !DILocation(line: 2466, column: 11, scope: !15275)
!15279 = !DILocation(line: 2466, column: 9, scope: !1480)
!15280 = !DILocation(line: 2467, column: 28, scope: !15281)
!15281 = distinct !DILexicalBlock(scope: !15275, file: !4, line: 2466, column: 25)
!15282 = !DILocation(line: 2467, column: 31, scope: !15281)
!15283 = !DILocation(line: 2467, column: 37, scope: !15281)
!15284 = !DILocation(line: 2467, column: 40, scope: !15281)
!15285 = !DILocation(line: 2467, column: 46, scope: !15281)
!15286 = !DILocation(line: 2467, column: 49, scope: !15281)
!15287 = !DILocation(line: 2467, column: 52, scope: !15281)
!15288 = !DILocation(line: 2467, column: 47, scope: !15281)
!15289 = !DILocation(line: 2467, column: 15, scope: !15281)
!15290 = !DILocation(line: 2467, column: 13, scope: !15281)
!15291 = !DILocation(line: 2468, column: 23, scope: !15281)
!15292 = !DILocation(line: 2468, column: 9, scope: !15281)
!15293 = !DILocation(line: 2469, column: 5, scope: !15281)
!15294 = !DILocation(line: 2471, column: 26, scope: !15295)
!15295 = distinct !DILexicalBlock(scope: !15275, file: !4, line: 2470, column: 10)
!15296 = !DILocation(line: 2471, column: 29, scope: !15295)
!15297 = !DILocation(line: 2471, column: 36, scope: !15295)
!15298 = !DILocation(line: 2471, column: 35, scope: !15295)
!15299 = !DILocation(line: 2471, column: 9, scope: !15295)
!15300 = !DILocation(line: 2471, column: 17, scope: !15295)
!15301 = !DILocation(line: 2471, column: 24, scope: !15295)
!15302 = !DILocation(line: 2472, column: 35, scope: !15295)
!15303 = !DILocation(line: 2472, column: 43, scope: !15295)
!15304 = !DILocation(line: 2472, column: 16, scope: !15295)
!15305 = !DILocation(line: 2472, column: 14, scope: !15295)
!15306 = !DILocation(line: 2473, column: 31, scope: !15295)
!15307 = !DILocation(line: 2473, column: 39, scope: !15295)
!15308 = !DILocation(line: 2473, column: 45, scope: !15295)
!15309 = !DILocation(line: 2473, column: 48, scope: !15295)
!15310 = !DILocation(line: 2473, column: 54, scope: !15295)
!15311 = !DILocation(line: 2473, column: 57, scope: !15295)
!15312 = !DILocation(line: 2473, column: 62, scope: !15295)
!15313 = !DILocation(line: 2473, column: 15, scope: !15295)
!15314 = !DILocation(line: 2473, column: 13, scope: !15295)
!15315 = !DILocation(line: 2474, column: 23, scope: !15295)
!15316 = !DILocation(line: 2474, column: 9, scope: !15295)
!15317 = !DILocation(line: 2474, column: 17, scope: !15295)
!15318 = !DILocation(line: 2474, column: 21, scope: !15295)
!15319 = !DILocation(line: 2477, column: 20, scope: !1480)
!15320 = !DILocation(line: 2477, column: 28, scope: !1480)
!15321 = !DILocation(line: 2477, column: 5, scope: !1480)
!15322 = !DILocation(line: 2478, column: 19, scope: !1480)
!15323 = !DILocation(line: 2478, column: 22, scope: !1480)
!15324 = !DILocation(line: 2478, column: 5, scope: !1480)
!15325 = !DILocation(line: 2478, column: 13, scope: !1480)
!15326 = !DILocation(line: 2478, column: 17, scope: !1480)
!15327 = !DILocation(line: 2480, column: 12, scope: !1480)
!15328 = !DILocation(line: 2480, column: 5, scope: !1480)
!15329 = !DILocation(line: 2481, column: 1, scope: !1480)
!15330 = !DILocation(line: 853, column: 31, scope: !1493)
!15331 = !DILocation(line: 853, column: 47, scope: !1493)
!15332 = !DILocation(line: 853, column: 64, scope: !1493)
!15333 = !DILocation(line: 854, column: 32, scope: !1493)
!15334 = !DILocation(line: 856, column: 5, scope: !1493)
!15335 = !DILocation(line: 856, column: 16, scope: !1493)
!15336 = !DILocation(line: 856, column: 19, scope: !1493)
!15337 = !DILocation(line: 860, column: 29, scope: !1493)
!15338 = !DILocation(line: 860, column: 34, scope: !1493)
!15339 = !DILocation(line: 860, column: 5, scope: !1493)
!15340 = !DILocation(line: 861, column: 10, scope: !1493)
!15341 = !DILocation(line: 861, column: 12, scope: !1493)
!15342 = !DILocation(line: 861, column: 9, scope: !1493)
!15343 = !DILocation(line: 861, column: 9, scope: !15344)
!15344 = !DILexicalBlockFile(scope: !1493, file: !4, discriminator: 1)
!15345 = !DILocation(line: 861, column: 25, scope: !15346)
!15346 = !DILexicalBlockFile(scope: !1493, file: !4, discriminator: 2)
!15347 = !DILocation(line: 861, column: 7, scope: !15348)
!15348 = !DILexicalBlockFile(scope: !15349, file: !4, discriminator: 4)
!15349 = !DILexicalBlockFile(scope: !1493, file: !4, discriminator: 3)
!15350 = !DILocation(line: 863, column: 6, scope: !1493)
!15351 = !DILocation(line: 863, column: 9, scope: !1493)
!15352 = !DILocation(line: 864, column: 21, scope: !1493)
!15353 = !DILocation(line: 864, column: 26, scope: !1493)
!15354 = !DILocation(line: 864, column: 29, scope: !1493)
!15355 = !DILocation(line: 864, column: 11, scope: !1493)
!15356 = !DILocation(line: 864, column: 16, scope: !1493)
!15357 = !DILocation(line: 864, column: 6, scope: !1493)
!15358 = !DILocation(line: 864, column: 9, scope: !1493)
!15359 = !DILocation(line: 865, column: 9, scope: !15360)
!15360 = distinct !DILexicalBlock(scope: !1493, file: !4, line: 865, column: 9)
!15361 = !DILocation(line: 865, column: 14, scope: !15360)
!15362 = !DILocation(line: 865, column: 11, scope: !15360)
!15363 = !DILocation(line: 865, column: 9, scope: !1493)
!15364 = !DILocation(line: 866, column: 26, scope: !15365)
!15365 = distinct !DILexicalBlock(scope: !15360, file: !4, line: 865, column: 17)
!15366 = !DILocation(line: 866, column: 28, scope: !15365)
!15367 = !DILocation(line: 866, column: 27, scope: !15365)
!15368 = !DILocation(line: 866, column: 16, scope: !15365)
!15369 = !DILocation(line: 866, column: 10, scope: !15365)
!15370 = !DILocation(line: 866, column: 13, scope: !15365)
!15371 = !DILocation(line: 867, column: 5, scope: !15365)
!15372 = !DILocation(line: 868, column: 14, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15360, file: !4, line: 868, column: 14)
!15374 = !DILocation(line: 868, column: 19, scope: !15373)
!15375 = !DILocation(line: 868, column: 23, scope: !15373)
!15376 = !DILocation(line: 868, column: 14, scope: !15360)
!15377 = !DILocation(line: 870, column: 24, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15373, file: !4, line: 868, column: 28)
!15379 = !DILocation(line: 870, column: 28, scope: !15378)
!15380 = !DILocation(line: 870, column: 33, scope: !15378)
!15381 = !DILocation(line: 870, column: 32, scope: !15378)
!15382 = !DILocation(line: 870, column: 47, scope: !15378)
!15383 = !DILocation(line: 870, column: 49, scope: !15378)
!15384 = !DILocation(line: 870, column: 48, scope: !15378)
!15385 = !DILocation(line: 870, column: 37, scope: !15378)
!15386 = !DILocation(line: 870, column: 9, scope: !15378)
!15387 = !DILocation(line: 871, column: 25, scope: !15378)
!15388 = !DILocation(line: 871, column: 30, scope: !15378)
!15389 = !DILocation(line: 871, column: 33, scope: !15378)
!15390 = !DILocation(line: 871, column: 15, scope: !15378)
!15391 = !DILocation(line: 871, column: 20, scope: !15378)
!15392 = !DILocation(line: 871, column: 54, scope: !15378)
!15393 = !DILocation(line: 871, column: 56, scope: !15378)
!15394 = !DILocation(line: 871, column: 55, scope: !15378)
!15395 = !DILocation(line: 871, column: 52, scope: !15378)
!15396 = !DILocation(line: 871, column: 39, scope: !15378)
!15397 = !DILocation(line: 871, column: 37, scope: !15378)
!15398 = !DILocation(line: 871, column: 13, scope: !15378)
!15399 = !DILocation(line: 872, column: 16, scope: !15378)
!15400 = !DILocation(line: 872, column: 15, scope: !15378)
!15401 = !DILocation(line: 872, column: 21, scope: !15378)
!15402 = !DILocation(line: 872, column: 19, scope: !15378)
!15403 = !DILocation(line: 872, column: 10, scope: !15378)
!15404 = !DILocation(line: 872, column: 13, scope: !15378)
!15405 = !DILocation(line: 873, column: 14, scope: !15406)
!15406 = distinct !DILexicalBlock(scope: !15378, file: !4, line: 873, column: 13)
!15407 = !DILocation(line: 873, column: 13, scope: !15406)
!15408 = !DILocation(line: 873, column: 19, scope: !15406)
!15409 = !DILocation(line: 873, column: 17, scope: !15406)
!15410 = !DILocation(line: 873, column: 13, scope: !15378)
!15411 = !DILocation(line: 873, column: 26, scope: !15412)
!15412 = !DILexicalBlockFile(scope: !15406, file: !4, discriminator: 1)
!15413 = !DILocation(line: 873, column: 29, scope: !15406)
!15414 = !DILocation(line: 873, column: 24, scope: !15406)
!15415 = !DILocation(line: 874, column: 5, scope: !15378)
!15416 = !DILocation(line: 875, column: 1, scope: !1493)
!15417 = !DILocation(line: 206, column: 28, scope: !1503)
!15418 = !DILocation(line: 206, column: 44, scope: !1503)
!15419 = !DILocation(line: 206, column: 59, scope: !1503)
!15420 = !DILocation(line: 206, column: 73, scope: !1503)
!15421 = !DILocation(line: 208, column: 5, scope: !1503)
!15422 = !DILocation(line: 208, column: 16, scope: !1503)
!15423 = !DILocation(line: 208, column: 19, scope: !1503)
!15424 = !DILocation(line: 212, column: 23, scope: !1503)
!15425 = !DILocation(line: 212, column: 33, scope: !1503)
!15426 = !DILocation(line: 210, column: 5, scope: !1503)
!15427 = !{i32 140404, i32 140414}
!15428 = !DILocation(line: 216, column: 11, scope: !1503)
!15429 = !DILocation(line: 216, column: 6, scope: !1503)
!15430 = !DILocation(line: 216, column: 9, scope: !1503)
!15431 = !DILocation(line: 217, column: 11, scope: !1503)
!15432 = !DILocation(line: 217, column: 6, scope: !1503)
!15433 = !DILocation(line: 217, column: 9, scope: !1503)
!15434 = !DILocation(line: 218, column: 1, scope: !1503)
!15435 = !DILocation(line: 1938, column: 25, scope: !1489)
!15436 = !DILocation(line: 1938, column: 46, scope: !1489)
!15437 = !DILocation(line: 1940, column: 9, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !1489, file: !4, line: 1940, column: 9)
!15439 = !DILocation(line: 1940, column: 19, scope: !15438)
!15440 = !DILocation(line: 1940, column: 16, scope: !15438)
!15441 = !DILocation(line: 1940, column: 9, scope: !1489)
!15442 = !DILocation(line: 1940, column: 22, scope: !15443)
!15443 = !DILexicalBlockFile(scope: !15438, file: !4, discriminator: 1)
!15444 = !DILocation(line: 1942, column: 12, scope: !1489)
!15445 = !DILocation(line: 1942, column: 20, scope: !1489)
!15446 = !DILocation(line: 1942, column: 5, scope: !1489)
!15447 = !DILocation(line: 1942, column: 26, scope: !1489)
!15448 = !DILocation(line: 1942, column: 29, scope: !1489)
!15449 = !DILocation(line: 1942, column: 35, scope: !1489)
!15450 = !DILocation(line: 1942, column: 38, scope: !1489)
!15451 = !DILocation(line: 1942, column: 42, scope: !1489)
!15452 = !DILocation(line: 1944, column: 20, scope: !1489)
!15453 = !DILocation(line: 1944, column: 28, scope: !1489)
!15454 = !DILocation(line: 1944, column: 5, scope: !1489)
!15455 = !DILocation(line: 1945, column: 19, scope: !1489)
!15456 = !DILocation(line: 1945, column: 22, scope: !1489)
!15457 = !DILocation(line: 1945, column: 5, scope: !1489)
!15458 = !DILocation(line: 1945, column: 13, scope: !1489)
!15459 = !DILocation(line: 1945, column: 17, scope: !1489)
!15460 = !DILocation(line: 1946, column: 22, scope: !1489)
!15461 = !DILocation(line: 1946, column: 25, scope: !1489)
!15462 = !DILocation(line: 1946, column: 5, scope: !1489)
!15463 = !DILocation(line: 1946, column: 13, scope: !1489)
!15464 = !DILocation(line: 1946, column: 20, scope: !1489)
!15465 = !DILocation(line: 1947, column: 19, scope: !1489)
!15466 = !DILocation(line: 1947, column: 22, scope: !1489)
!15467 = !DILocation(line: 1947, column: 5, scope: !1489)
!15468 = !DILocation(line: 1947, column: 13, scope: !1489)
!15469 = !DILocation(line: 1947, column: 17, scope: !1489)
!15470 = !DILocation(line: 1948, column: 1, scope: !1489)
!15471 = !DILocation(line: 1948, column: 1, scope: !15472)
!15472 = !DILexicalBlockFile(scope: !1489, file: !4, discriminator: 1)
!15473 = !DILocation(line: 1652, column: 25, scope: !1537)
!15474 = !DILocation(line: 1652, column: 41, scope: !1537)
!15475 = !DILocation(line: 1652, column: 67, scope: !1537)
!15476 = !DILocation(line: 1653, column: 28, scope: !1537)
!15477 = !DILocation(line: 1655, column: 23, scope: !1545)
!15478 = !DILocation(line: 1655, column: 28, scope: !1545)
!15479 = !DILocation(line: 1655, column: 33, scope: !1545)
!15480 = !DILocation(line: 1655, column: 9, scope: !1545)
!15481 = !DILocation(line: 1655, column: 9, scope: !1537)
!15482 = !DILocation(line: 1665, column: 9, scope: !1544)
!15483 = !DILocation(line: 1665, column: 20, scope: !1544)
!15484 = !DILocation(line: 1665, column: 42, scope: !1544)
!15485 = !DILocation(line: 1665, column: 47, scope: !1544)
!15486 = !DILocation(line: 1665, column: 53, scope: !1544)
!15487 = !DILocation(line: 1665, column: 58, scope: !1544)
!15488 = !DILocation(line: 1665, column: 28, scope: !1544)
!15489 = !DILocation(line: 1666, column: 13, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !1544, file: !4, line: 1666, column: 13)
!15491 = !DILocation(line: 1666, column: 13, scope: !1544)
!15492 = !DILocation(line: 1667, column: 37, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15490, file: !4, line: 1666, column: 20)
!15494 = !DILocation(line: 1667, column: 23, scope: !15493)
!15495 = !DILocation(line: 1667, column: 28, scope: !15493)
!15496 = !DILocation(line: 1667, column: 31, scope: !15493)
!15497 = !DILocation(line: 1667, column: 13, scope: !15493)
!15498 = !DILocation(line: 1667, column: 18, scope: !15493)
!15499 = !DILocation(line: 1667, column: 35, scope: !15493)
!15500 = !DILocation(line: 1668, column: 13, scope: !15493)
!15501 = !DILocation(line: 1668, column: 18, scope: !15493)
!15502 = !DILocation(line: 1668, column: 22, scope: !15493)
!15503 = !DILocation(line: 1669, column: 28, scope: !15493)
!15504 = !DILocation(line: 1669, column: 33, scope: !15493)
!15505 = !DILocation(line: 1669, column: 38, scope: !15493)
!15506 = !DILocation(line: 1669, column: 13, scope: !15493)
!15507 = !DILocation(line: 1670, column: 13, scope: !15493)
!15508 = !DILocation(line: 1672, column: 23, scope: !1544)
!15509 = !DILocation(line: 1672, column: 9, scope: !1544)
!15510 = !DILocation(line: 1673, column: 13, scope: !15511)
!15511 = distinct !DILexicalBlock(scope: !1544, file: !4, line: 1673, column: 13)
!15512 = !DILocation(line: 1673, column: 18, scope: !15511)
!15513 = !DILocation(line: 1673, column: 27, scope: !15511)
!15514 = !DILocation(line: 1673, column: 32, scope: !15511)
!15515 = !DILocation(line: 1673, column: 25, scope: !15511)
!15516 = !DILocation(line: 1673, column: 13, scope: !1544)
!15517 = !DILocation(line: 1674, column: 33, scope: !15518)
!15518 = distinct !DILexicalBlock(scope: !15511, file: !4, line: 1673, column: 38)
!15519 = !DILocation(line: 1674, column: 13, scope: !15518)
!15520 = !DILocation(line: 1675, column: 13, scope: !15518)
!15521 = !DILocation(line: 1675, column: 18, scope: !15518)
!15522 = !DILocation(line: 1675, column: 22, scope: !15518)
!15523 = !DILocation(line: 1676, column: 27, scope: !15518)
!15524 = !DILocation(line: 1676, column: 32, scope: !15518)
!15525 = !DILocation(line: 1676, column: 13, scope: !15518)
!15526 = !DILocation(line: 1676, column: 18, scope: !15518)
!15527 = !DILocation(line: 1676, column: 25, scope: !15518)
!15528 = !DILocation(line: 1677, column: 28, scope: !15518)
!15529 = !DILocation(line: 1677, column: 33, scope: !15518)
!15530 = !DILocation(line: 1677, column: 38, scope: !15518)
!15531 = !DILocation(line: 1677, column: 13, scope: !15518)
!15532 = !DILocation(line: 1678, column: 9, scope: !15518)
!15533 = !DILocation(line: 1679, column: 5, scope: !1545)
!15534 = !DILocation(line: 1679, column: 5, scope: !15535)
!15535 = !DILexicalBlockFile(scope: !1545, file: !4, discriminator: 1)
!15536 = !DILocation(line: 1679, column: 5, scope: !1544)
!15537 = !DILocation(line: 1680, column: 1, scope: !1537)
!15538 = !DILocation(line: 1617, column: 28, scope: !1546)
!15539 = !DILocation(line: 1617, column: 44, scope: !1546)
!15540 = !DILocation(line: 1617, column: 70, scope: !1546)
!15541 = !DILocation(line: 1619, column: 5, scope: !1546)
!15542 = !DILocation(line: 1619, column: 9, scope: !1546)
!15543 = !DILocation(line: 1621, column: 13, scope: !1546)
!15544 = !DILocation(line: 1621, column: 18, scope: !1546)
!15545 = !DILocation(line: 1623, column: 9, scope: !15546)
!15546 = distinct !DILexicalBlock(scope: !1546, file: !4, line: 1621, column: 25)
!15547 = !DILocation(line: 1625, column: 17, scope: !15546)
!15548 = !DILocation(line: 1625, column: 21, scope: !15546)
!15549 = !DILocation(line: 1625, column: 9, scope: !15546)
!15550 = !DILocation(line: 1627, column: 17, scope: !15546)
!15551 = !DILocation(line: 1627, column: 21, scope: !15546)
!15552 = !DILocation(line: 1627, column: 26, scope: !15546)
!15553 = !DILocation(line: 1627, column: 31, scope: !15554)
!15554 = !DILexicalBlockFile(scope: !15546, file: !4, discriminator: 2)
!15555 = !DILocation(line: 1627, column: 35, scope: !15546)
!15556 = !DILocation(line: 1627, column: 41, scope: !15546)
!15557 = !DILocation(line: 1627, column: 59, scope: !15558)
!15558 = !DILexicalBlockFile(scope: !15546, file: !4, discriminator: 3)
!15559 = !DILocation(line: 1627, column: 44, scope: !15546)
!15560 = !DILocation(line: 1627, column: 26, scope: !15561)
!15561 = !DILexicalBlockFile(scope: !15546, file: !4, discriminator: 4)
!15562 = !DILocation(line: 1627, column: 26, scope: !15563)
!15563 = !DILexicalBlockFile(scope: !15564, file: !4, discriminator: 5)
!15564 = !DILexicalBlockFile(scope: !15546, file: !4, discriminator: 1)
!15565 = !DILocation(line: 1627, column: 9, scope: !15546)
!15566 = !DILocation(line: 1629, column: 18, scope: !15546)
!15567 = !DILocation(line: 1629, column: 22, scope: !15546)
!15568 = !DILocation(line: 1629, column: 27, scope: !15546)
!15569 = !DILocation(line: 1629, column: 45, scope: !15554)
!15570 = !DILocation(line: 1629, column: 30, scope: !15546)
!15571 = !DILocation(line: 1629, column: 16, scope: !15572)
!15572 = !DILexicalBlockFile(scope: !15564, file: !4, discriminator: 3)
!15573 = !DILocation(line: 1629, column: 9, scope: !15546)
!15574 = !DILocation(line: 1631, column: 18, scope: !15546)
!15575 = !DILocation(line: 1631, column: 22, scope: !15546)
!15576 = !DILocation(line: 1631, column: 27, scope: !15546)
!15577 = !DILocation(line: 1631, column: 45, scope: !15554)
!15578 = !DILocation(line: 1631, column: 30, scope: !15546)
!15579 = !DILocation(line: 1631, column: 16, scope: !15572)
!15580 = !DILocation(line: 1631, column: 9, scope: !15546)
!15581 = !DILocation(line: 1633, column: 17, scope: !15546)
!15582 = !DILocation(line: 1633, column: 21, scope: !15546)
!15583 = !DILocation(line: 1633, column: 9, scope: !15546)
!15584 = !DILocation(line: 1635, column: 18, scope: !15546)
!15585 = !DILocation(line: 1635, column: 22, scope: !15546)
!15586 = !DILocation(line: 1635, column: 16, scope: !15546)
!15587 = !DILocation(line: 1635, column: 9, scope: !15546)
!15588 = !DILocation(line: 1637, column: 27, scope: !15546)
!15589 = !DILocation(line: 1637, column: 32, scope: !15546)
!15590 = !DILocation(line: 1637, column: 19, scope: !15546)
!15591 = !DILocation(line: 1637, column: 14, scope: !15546)
!15592 = !DILocation(line: 1637, column: 12, scope: !15546)
!15593 = !DILocation(line: 1638, column: 19, scope: !15546)
!15594 = !DILocation(line: 1638, column: 23, scope: !15546)
!15595 = !DILocation(line: 1638, column: 29, scope: !15546)
!15596 = !DILocation(line: 1638, column: 33, scope: !15554)
!15597 = !DILocation(line: 1638, column: 36, scope: !15546)
!15598 = !DILocation(line: 1638, column: 41, scope: !15546)
!15599 = !DILocation(line: 1638, column: 44, scope: !15558)
!15600 = !DILocation(line: 1638, column: 47, scope: !15546)
!15601 = !DILocation(line: 1638, column: 29, scope: !15564)
!15602 = !DILocation(line: 1638, column: 9, scope: !15546)
!15603 = !DILocation(line: 1641, column: 9, scope: !15546)
!15604 = !DILocation(line: 1643, column: 1, scope: !1546)
!15605 = !DILocation(line: 2094, column: 35, scope: !1563)
!15606 = !DILocation(line: 2094, column: 51, scope: !1563)
!15607 = !DILocation(line: 2096, column: 5, scope: !1563)
!15608 = !DILocation(line: 2096, column: 17, scope: !1563)
!15609 = !DILocation(line: 2096, column: 24, scope: !1563)
!15610 = !DILocation(line: 2098, column: 9, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !1563, file: !4, line: 2098, column: 9)
!15612 = !DILocation(line: 2098, column: 12, scope: !15611)
!15613 = !DILocation(line: 2098, column: 19, scope: !15611)
!15614 = !DILocation(line: 2098, column: 22, scope: !15611)
!15615 = !DILocation(line: 2098, column: 16, scope: !15611)
!15616 = !DILocation(line: 2098, column: 9, scope: !1563)
!15617 = !DILocation(line: 2101, column: 17, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15611, file: !4, line: 2098, column: 27)
!15619 = !DILocation(line: 2101, column: 20, scope: !15618)
!15620 = !DILocation(line: 2101, column: 26, scope: !15618)
!15621 = !DILocation(line: 2101, column: 29, scope: !15618)
!15622 = !DILocation(line: 2101, column: 24, scope: !15618)
!15623 = !DILocation(line: 2101, column: 15, scope: !15618)
!15624 = !DILocation(line: 2102, column: 13, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15618, file: !4, line: 2102, column: 13)
!15626 = !DILocation(line: 2102, column: 19, scope: !15625)
!15627 = !DILocation(line: 2102, column: 13, scope: !15618)
!15628 = !DILocation(line: 2103, column: 38, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !15625, file: !4, line: 2102, column: 24)
!15630 = !DILocation(line: 2103, column: 41, scope: !15629)
!15631 = !DILocation(line: 2103, column: 47, scope: !15629)
!15632 = !DILocation(line: 2103, column: 50, scope: !15629)
!15633 = !DILocation(line: 2103, column: 56, scope: !15629)
!15634 = !DILocation(line: 2103, column: 59, scope: !15629)
!15635 = !DILocation(line: 2103, column: 64, scope: !15629)
!15636 = !DILocation(line: 2103, column: 67, scope: !15629)
!15637 = !DILocation(line: 2103, column: 72, scope: !15629)
!15638 = !DILocation(line: 2103, column: 25, scope: !15629)
!15639 = !DILocation(line: 2103, column: 23, scope: !15629)
!15640 = !DILocation(line: 2103, column: 13, scope: !15629)
!15641 = !DILocation(line: 2106, column: 33, scope: !15642)
!15642 = distinct !DILexicalBlock(scope: !15625, file: !4, line: 2105, column: 14)
!15643 = !DILocation(line: 2106, column: 36, scope: !15642)
!15644 = !DILocation(line: 2106, column: 42, scope: !15642)
!15645 = !DILocation(line: 2106, column: 45, scope: !15642)
!15646 = !DILocation(line: 2106, column: 51, scope: !15642)
!15647 = !DILocation(line: 2106, column: 54, scope: !15642)
!15648 = !DILocation(line: 2106, column: 59, scope: !15642)
!15649 = !DILocation(line: 2106, column: 62, scope: !15642)
!15650 = !DILocation(line: 2106, column: 68, scope: !15642)
!15651 = !DILocation(line: 2106, column: 67, scope: !15642)
!15652 = !DILocation(line: 2106, column: 20, scope: !15642)
!15653 = !DILocation(line: 2106, column: 13, scope: !15642)
!15654 = !DILocation(line: 2114, column: 14, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !1563, file: !4, line: 2114, column: 5)
!15656 = !DILocation(line: 2114, column: 17, scope: !15655)
!15657 = !DILocation(line: 2114, column: 20, scope: !15655)
!15658 = !DILocation(line: 2114, column: 12, scope: !15655)
!15659 = !DILocation(line: 2114, column: 10, scope: !15655)
!15660 = !DILocation(line: 2114, column: 24, scope: !15661)
!15661 = !DILexicalBlockFile(scope: !15662, file: !4, discriminator: 2)
!15662 = !DILexicalBlockFile(scope: !15663, file: !4, discriminator: 1)
!15663 = distinct !DILexicalBlock(scope: !15655, file: !4, line: 2114, column: 5)
!15664 = !DILocation(line: 2114, column: 26, scope: !15663)
!15665 = !DILocation(line: 2114, column: 5, scope: !15655)
!15666 = !DILocation(line: 2115, column: 21, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15668, file: !4, line: 2115, column: 13)
!15668 = distinct !DILexicalBlock(scope: !15663, file: !4, line: 2114, column: 37)
!15669 = !DILocation(line: 2115, column: 13, scope: !15667)
!15670 = !DILocation(line: 2115, column: 16, scope: !15667)
!15671 = !DILocation(line: 2115, column: 35, scope: !15667)
!15672 = !DILocation(line: 2115, column: 27, scope: !15667)
!15673 = !DILocation(line: 2115, column: 30, scope: !15667)
!15674 = !DILocation(line: 2115, column: 24, scope: !15667)
!15675 = !DILocation(line: 2115, column: 13, scope: !15668)
!15676 = !DILocation(line: 2115, column: 53, scope: !15677)
!15677 = !DILexicalBlockFile(scope: !15678, file: !4, discriminator: 1)
!15678 = distinct !DILexicalBlock(scope: !15679, file: !4, line: 2115, column: 45)
!15679 = distinct !DILexicalBlock(scope: !15667, file: !4, line: 2115, column: 39)
!15680 = !DILocation(line: 2115, column: 45, scope: !15678)
!15681 = !DILocation(line: 2115, column: 48, scope: !15678)
!15682 = !DILocation(line: 2115, column: 66, scope: !15678)
!15683 = !DILocation(line: 2115, column: 58, scope: !15678)
!15684 = !DILocation(line: 2115, column: 61, scope: !15678)
!15685 = !DILocation(line: 2115, column: 56, scope: !15678)
!15686 = !DILocation(line: 2115, column: 45, scope: !15679)
!15687 = !DILocation(line: 2115, column: 72, scope: !15688)
!15688 = !DILexicalBlockFile(scope: !15689, file: !4, discriminator: 2)
!15689 = distinct !DILexicalBlock(scope: !15678, file: !4, line: 2115, column: 70)
!15690 = !DILocation(line: 2115, column: 72, scope: !15689)
!15691 = !DILocation(line: 2115, column: 85, scope: !15692)
!15692 = !DILexicalBlockFile(scope: !15679, file: !4, discriminator: 3)
!15693 = !DILocation(line: 2115, column: 85, scope: !15679)
!15694 = !DILocation(line: 2116, column: 5, scope: !15668)
!15695 = !DILocation(line: 2114, column: 32, scope: !15663)
!15696 = !DILocation(line: 2114, column: 5, scope: !15663)
!15697 = !DILocation(line: 2118, column: 5, scope: !1563)
!15698 = !DILocation(line: 2119, column: 1, scope: !1563)
!15699 = !DILocation(line: 2048, column: 26, scope: !1569)
!15700 = !DILocation(line: 2048, column: 43, scope: !1569)
!15701 = !DILocation(line: 2048, column: 61, scope: !1569)
!15702 = !DILocation(line: 2048, column: 75, scope: !1569)
!15703 = !DILocation(line: 2049, column: 25, scope: !1569)
!15704 = !DILocation(line: 2055, column: 5, scope: !1569)
!15705 = !DILocation(line: 2055, column: 16, scope: !1569)
!15706 = !DILocation(line: 2055, column: 19, scope: !1569)
!15707 = !DILocation(line: 2055, column: 26, scope: !1569)
!15708 = !DILocation(line: 2057, column: 5, scope: !1569)
!15709 = !DILocation(line: 2057, column: 16, scope: !1569)
!15710 = !DILocation(line: 2057, column: 19, scope: !1569)
!15711 = !DILocation(line: 2058, column: 5, scope: !1569)
!15712 = !DILocation(line: 2058, column: 16, scope: !1569)
!15713 = !DILocation(line: 2058, column: 20, scope: !1569)
!15714 = !DILocation(line: 2062, column: 39, scope: !1569)
!15715 = !DILocation(line: 2062, column: 5, scope: !1569)
!15716 = !DILocation(line: 2064, column: 9, scope: !15717)
!15717 = distinct !DILexicalBlock(scope: !1569, file: !4, line: 2064, column: 9)
!15718 = !DILocation(line: 2064, column: 11, scope: !15717)
!15719 = !DILocation(line: 2064, column: 9, scope: !1569)
!15720 = !DILocation(line: 2066, column: 24, scope: !15721)
!15721 = distinct !DILexicalBlock(scope: !15717, file: !4, line: 2064, column: 17)
!15722 = !DILocation(line: 2066, column: 14, scope: !15721)
!15723 = !DILocation(line: 2066, column: 12, scope: !15721)
!15724 = !DILocation(line: 2068, column: 9, scope: !15721)
!15725 = !DILocation(line: 2068, column: 14, scope: !15721)
!15726 = !DILocation(line: 2069, column: 46, scope: !15721)
!15727 = !DILocation(line: 2069, column: 39, scope: !15721)
!15728 = !DILocation(line: 2069, column: 55, scope: !15721)
!15729 = !DILocation(line: 2069, column: 54, scope: !15721)
!15730 = !DILocation(line: 2069, column: 9, scope: !15721)
!15731 = !DILocation(line: 2070, column: 13, scope: !15732)
!15732 = distinct !DILexicalBlock(scope: !15721, file: !4, line: 2070, column: 13)
!15733 = !DILocation(line: 2070, column: 15, scope: !15732)
!15734 = !DILocation(line: 2070, column: 13, scope: !15721)
!15735 = !DILocation(line: 2071, column: 21, scope: !15736)
!15736 = distinct !DILexicalBlock(scope: !15737, file: !4, line: 2071, column: 17)
!15737 = distinct !DILexicalBlock(scope: !15732, file: !4, line: 2070, column: 21)
!15738 = !DILocation(line: 2071, column: 17, scope: !15736)
!15739 = !DILocation(line: 2071, column: 27, scope: !15736)
!15740 = !DILocation(line: 2071, column: 24, scope: !15736)
!15741 = !DILocation(line: 2071, column: 17, scope: !15737)
!15742 = !DILocation(line: 2071, column: 40, scope: !15743)
!15743 = !DILexicalBlockFile(scope: !15744, file: !4, discriminator: 1)
!15744 = distinct !DILexicalBlock(scope: !15745, file: !4, line: 2071, column: 36)
!15745 = distinct !DILexicalBlock(scope: !15736, file: !4, line: 2071, column: 30)
!15746 = !DILocation(line: 2071, column: 36, scope: !15744)
!15747 = !DILocation(line: 2071, column: 45, scope: !15744)
!15748 = !DILocation(line: 2071, column: 43, scope: !15744)
!15749 = !DILocation(line: 2071, column: 36, scope: !15745)
!15750 = !DILocation(line: 2071, column: 50, scope: !15751)
!15751 = !DILexicalBlockFile(scope: !15752, file: !4, discriminator: 2)
!15752 = distinct !DILexicalBlock(scope: !15744, file: !4, line: 2071, column: 48)
!15753 = !DILocation(line: 2071, column: 50, scope: !15752)
!15754 = !DILocation(line: 2071, column: 63, scope: !15755)
!15755 = !DILexicalBlockFile(scope: !15745, file: !4, discriminator: 3)
!15756 = !DILocation(line: 2071, column: 63, scope: !15745)
!15757 = !DILocation(line: 2072, column: 13, scope: !15737)
!15758 = !DILocation(line: 2073, column: 9, scope: !15737)
!15759 = !DILocation(line: 2074, column: 9, scope: !15721)
!15760 = !DILocation(line: 2074, column: 16, scope: !15761)
!15761 = !DILexicalBlockFile(scope: !15762, file: !4, discriminator: 2)
!15762 = !DILexicalBlockFile(scope: !15763, file: !4, discriminator: 1)
!15763 = distinct !DILexicalBlock(scope: !15764, file: !4, line: 2074, column: 9)
!15764 = distinct !DILexicalBlock(scope: !15721, file: !4, line: 2074, column: 9)
!15765 = !DILocation(line: 2074, column: 18, scope: !15763)
!15766 = !DILocation(line: 2074, column: 9, scope: !15764)
!15767 = !DILocation(line: 2075, column: 45, scope: !15768)
!15768 = distinct !DILexicalBlock(scope: !15763, file: !4, line: 2074, column: 56)
!15769 = !DILocation(line: 2075, column: 39, scope: !15768)
!15770 = !DILocation(line: 2075, column: 53, scope: !15768)
!15771 = !DILocation(line: 2075, column: 52, scope: !15768)
!15772 = !DILocation(line: 2075, column: 13, scope: !15768)
!15773 = !DILocation(line: 2076, column: 17, scope: !15768)
!15774 = !DILocation(line: 2076, column: 22, scope: !15768)
!15775 = !DILocation(line: 2076, column: 20, scope: !15768)
!15776 = !DILocation(line: 2076, column: 30, scope: !15768)
!15777 = !DILocation(line: 2076, column: 28, scope: !15768)
!15778 = !DILocation(line: 2076, column: 15, scope: !15768)
!15779 = !DILocation(line: 2077, column: 21, scope: !15780)
!15780 = distinct !DILexicalBlock(scope: !15768, file: !4, line: 2077, column: 17)
!15781 = !DILocation(line: 2077, column: 17, scope: !15780)
!15782 = !DILocation(line: 2077, column: 27, scope: !15780)
!15783 = !DILocation(line: 2077, column: 24, scope: !15780)
!15784 = !DILocation(line: 2077, column: 17, scope: !15768)
!15785 = !DILocation(line: 2077, column: 40, scope: !15786)
!15786 = !DILexicalBlockFile(scope: !15787, file: !4, discriminator: 1)
!15787 = distinct !DILexicalBlock(scope: !15788, file: !4, line: 2077, column: 36)
!15788 = distinct !DILexicalBlock(scope: !15780, file: !4, line: 2077, column: 30)
!15789 = !DILocation(line: 2077, column: 36, scope: !15787)
!15790 = !DILocation(line: 2077, column: 45, scope: !15787)
!15791 = !DILocation(line: 2077, column: 43, scope: !15787)
!15792 = !DILocation(line: 2077, column: 36, scope: !15788)
!15793 = !DILocation(line: 2077, column: 50, scope: !15794)
!15794 = !DILexicalBlockFile(scope: !15795, file: !4, discriminator: 2)
!15795 = distinct !DILexicalBlock(scope: !15787, file: !4, line: 2077, column: 48)
!15796 = !DILocation(line: 2077, column: 50, scope: !15795)
!15797 = !DILocation(line: 2077, column: 63, scope: !15798)
!15798 = !DILexicalBlockFile(scope: !15788, file: !4, discriminator: 3)
!15799 = !DILocation(line: 2077, column: 63, scope: !15788)
!15800 = !DILocation(line: 2078, column: 21, scope: !15768)
!15801 = !DILocation(line: 2078, column: 19, scope: !15768)
!15802 = !DILocation(line: 2079, column: 9, scope: !15768)
!15803 = !DILocation(line: 2074, column: 48, scope: !15763)
!15804 = !DILocation(line: 2074, column: 52, scope: !15763)
!15805 = !DILocation(line: 2074, column: 9, scope: !15763)
!15806 = !DILocation(line: 2080, column: 13, scope: !15721)
!15807 = !DILocation(line: 2080, column: 18, scope: !15721)
!15808 = !DILocation(line: 2080, column: 16, scope: !15721)
!15809 = !DILocation(line: 2080, column: 11, scope: !15721)
!15810 = !DILocation(line: 2081, column: 17, scope: !15811)
!15811 = distinct !DILexicalBlock(scope: !15721, file: !4, line: 2081, column: 13)
!15812 = !DILocation(line: 2081, column: 13, scope: !15811)
!15813 = !DILocation(line: 2081, column: 23, scope: !15811)
!15814 = !DILocation(line: 2081, column: 20, scope: !15811)
!15815 = !DILocation(line: 2081, column: 13, scope: !15721)
!15816 = !DILocation(line: 2081, column: 36, scope: !15817)
!15817 = !DILexicalBlockFile(scope: !15818, file: !4, discriminator: 1)
!15818 = distinct !DILexicalBlock(scope: !15819, file: !4, line: 2081, column: 32)
!15819 = distinct !DILexicalBlock(scope: !15811, file: !4, line: 2081, column: 26)
!15820 = !DILocation(line: 2081, column: 32, scope: !15818)
!15821 = !DILocation(line: 2081, column: 41, scope: !15818)
!15822 = !DILocation(line: 2081, column: 39, scope: !15818)
!15823 = !DILocation(line: 2081, column: 32, scope: !15819)
!15824 = !DILocation(line: 2081, column: 46, scope: !15825)
!15825 = !DILexicalBlockFile(scope: !15826, file: !4, discriminator: 2)
!15826 = distinct !DILexicalBlock(scope: !15818, file: !4, line: 2081, column: 44)
!15827 = !DILocation(line: 2081, column: 46, scope: !15826)
!15828 = !DILocation(line: 2081, column: 59, scope: !15829)
!15829 = !DILexicalBlockFile(scope: !15819, file: !4, discriminator: 3)
!15830 = !DILocation(line: 2081, column: 59, scope: !15819)
!15831 = !DILocation(line: 2082, column: 5, scope: !15721)
!15832 = !DILocation(line: 2084, column: 9, scope: !15833)
!15833 = distinct !DILexicalBlock(scope: !15717, file: !4, line: 2083, column: 10)
!15834 = !DILocation(line: 2084, column: 16, scope: !15835)
!15835 = !DILexicalBlockFile(scope: !15836, file: !4, discriminator: 2)
!15836 = !DILexicalBlockFile(scope: !15833, file: !4, discriminator: 1)
!15837 = !DILocation(line: 2084, column: 20, scope: !15833)
!15838 = !DILocation(line: 2085, column: 21, scope: !15839)
!15839 = distinct !DILexicalBlock(scope: !15840, file: !4, line: 2085, column: 17)
!15840 = distinct !DILexicalBlock(scope: !15833, file: !4, line: 2084, column: 49)
!15841 = !DILocation(line: 2085, column: 23, scope: !15839)
!15842 = !DILocation(line: 2085, column: 22, scope: !15839)
!15843 = !DILocation(line: 2085, column: 17, scope: !15839)
!15844 = !DILocation(line: 2085, column: 35, scope: !15839)
!15845 = !DILocation(line: 2085, column: 29, scope: !15839)
!15846 = !DILocation(line: 2085, column: 26, scope: !15839)
!15847 = !DILocation(line: 2085, column: 17, scope: !15840)
!15848 = !DILocation(line: 2085, column: 49, scope: !15849)
!15849 = !DILexicalBlockFile(scope: !15850, file: !4, discriminator: 1)
!15850 = distinct !DILexicalBlock(scope: !15851, file: !4, line: 2085, column: 45)
!15851 = distinct !DILexicalBlock(scope: !15839, file: !4, line: 2085, column: 39)
!15852 = !DILocation(line: 2085, column: 51, scope: !15850)
!15853 = !DILocation(line: 2085, column: 50, scope: !15850)
!15854 = !DILocation(line: 2085, column: 45, scope: !15850)
!15855 = !DILocation(line: 2085, column: 62, scope: !15850)
!15856 = !DILocation(line: 2085, column: 56, scope: !15850)
!15857 = !DILocation(line: 2085, column: 54, scope: !15850)
!15858 = !DILocation(line: 2085, column: 45, scope: !15851)
!15859 = !DILocation(line: 2085, column: 68, scope: !15860)
!15860 = !DILexicalBlockFile(scope: !15861, file: !4, discriminator: 2)
!15861 = distinct !DILexicalBlock(scope: !15850, file: !4, line: 2085, column: 66)
!15862 = !DILocation(line: 2085, column: 68, scope: !15861)
!15863 = !DILocation(line: 2085, column: 81, scope: !15864)
!15864 = !DILexicalBlockFile(scope: !15851, file: !4, discriminator: 3)
!15865 = !DILocation(line: 2085, column: 81, scope: !15851)
!15866 = !DILocation(line: 2089, column: 28, scope: !1569)
!15867 = !DILocation(line: 2089, column: 33, scope: !1569)
!15868 = !DILocation(line: 2089, column: 13, scope: !1569)
!15869 = !DILocation(line: 2089, column: 12, scope: !1569)
!15870 = !DILocation(line: 2089, column: 5, scope: !1569)
!15871 = !DILocation(line: 2090, column: 1, scope: !1569)
!15872 = !DILocation(line: 256, column: 31, scope: !1585)
!15873 = !DILocation(line: 256, column: 46, scope: !1585)
!15874 = !DILocation(line: 256, column: 60, scope: !1585)
!15875 = !DILocation(line: 256, column: 74, scope: !1585)
!15876 = !DILocation(line: 260, column: 9, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !1585, file: !1431, line: 260, column: 9)
!15878 = !DILocation(line: 260, column: 13, scope: !15877)
!15879 = !DILocation(line: 260, column: 9, scope: !1585)
!15880 = !DILocation(line: 261, column: 13, scope: !15881)
!15881 = distinct !DILexicalBlock(scope: !15882, file: !1431, line: 261, column: 13)
!15882 = distinct !DILexicalBlock(scope: !15877, file: !1431, line: 260, column: 19)
!15883 = !DILocation(line: 261, column: 17, scope: !15881)
!15884 = !DILocation(line: 261, column: 13, scope: !15882)
!15885 = !DILocation(line: 262, column: 21, scope: !15886)
!15886 = distinct !DILexicalBlock(scope: !15881, file: !1431, line: 261, column: 23)
!15887 = !DILocation(line: 263, column: 26, scope: !15888)
!15888 = distinct !DILexicalBlock(scope: !15886, file: !1431, line: 262, column: 26)
!15889 = !DILocation(line: 263, column: 22, scope: !15888)
!15890 = !DILocation(line: 263, column: 24, scope: !15888)
!15891 = !DILocation(line: 263, column: 30, scope: !15888)
!15892 = !DILocation(line: 263, column: 32, scope: !15888)
!15893 = !DILocation(line: 263, column: 37, scope: !15888)
!15894 = !DILocation(line: 264, column: 26, scope: !15888)
!15895 = !DILocation(line: 264, column: 28, scope: !15888)
!15896 = !DILocation(line: 264, column: 22, scope: !15888)
!15897 = !DILocation(line: 264, column: 24, scope: !15888)
!15898 = !DILocation(line: 264, column: 41, scope: !15888)
!15899 = !DILocation(line: 264, column: 46, scope: !15888)
!15900 = !DILocation(line: 264, column: 45, scope: !15888)
!15901 = !DILocation(line: 264, column: 48, scope: !15888)
!15902 = !DILocation(line: 264, column: 43, scope: !15888)
!15903 = !DILocation(line: 264, column: 37, scope: !15888)
!15904 = !DILocation(line: 264, column: 39, scope: !15888)
!15905 = !DILocation(line: 264, column: 56, scope: !15888)
!15906 = !DILocation(line: 265, column: 26, scope: !15888)
!15907 = !DILocation(line: 265, column: 28, scope: !15888)
!15908 = !DILocation(line: 265, column: 22, scope: !15888)
!15909 = !DILocation(line: 265, column: 24, scope: !15888)
!15910 = !DILocation(line: 265, column: 42, scope: !15888)
!15911 = !DILocation(line: 265, column: 47, scope: !15888)
!15912 = !DILocation(line: 265, column: 46, scope: !15888)
!15913 = !DILocation(line: 265, column: 49, scope: !15888)
!15914 = !DILocation(line: 265, column: 44, scope: !15888)
!15915 = !DILocation(line: 265, column: 38, scope: !15888)
!15916 = !DILocation(line: 265, column: 40, scope: !15888)
!15917 = !DILocation(line: 265, column: 58, scope: !15888)
!15918 = !DILocation(line: 266, column: 26, scope: !15888)
!15919 = !DILocation(line: 266, column: 28, scope: !15888)
!15920 = !DILocation(line: 266, column: 22, scope: !15888)
!15921 = !DILocation(line: 266, column: 24, scope: !15888)
!15922 = !DILocation(line: 266, column: 43, scope: !15888)
!15923 = !DILocation(line: 266, column: 48, scope: !15888)
!15924 = !DILocation(line: 266, column: 47, scope: !15888)
!15925 = !DILocation(line: 266, column: 50, scope: !15888)
!15926 = !DILocation(line: 266, column: 45, scope: !15888)
!15927 = !DILocation(line: 266, column: 39, scope: !15888)
!15928 = !DILocation(line: 266, column: 41, scope: !15888)
!15929 = !DILocation(line: 266, column: 60, scope: !15888)
!15930 = !DILocation(line: 267, column: 26, scope: !15888)
!15931 = !DILocation(line: 267, column: 28, scope: !15888)
!15932 = !DILocation(line: 267, column: 22, scope: !15888)
!15933 = !DILocation(line: 267, column: 24, scope: !15888)
!15934 = !DILocation(line: 267, column: 44, scope: !15888)
!15935 = !DILocation(line: 267, column: 49, scope: !15888)
!15936 = !DILocation(line: 267, column: 48, scope: !15888)
!15937 = !DILocation(line: 267, column: 51, scope: !15888)
!15938 = !DILocation(line: 267, column: 46, scope: !15888)
!15939 = !DILocation(line: 267, column: 40, scope: !15888)
!15940 = !DILocation(line: 267, column: 42, scope: !15888)
!15941 = !DILocation(line: 267, column: 62, scope: !15888)
!15942 = !DILocation(line: 269, column: 9, scope: !15886)
!15943 = !DILocation(line: 271, column: 21, scope: !15944)
!15944 = distinct !DILexicalBlock(scope: !15881, file: !1431, line: 270, column: 14)
!15945 = !DILocation(line: 272, column: 26, scope: !15946)
!15946 = distinct !DILexicalBlock(scope: !15944, file: !1431, line: 271, column: 26)
!15947 = !DILocation(line: 272, column: 28, scope: !15946)
!15948 = !DILocation(line: 272, column: 22, scope: !15946)
!15949 = !DILocation(line: 272, column: 24, scope: !15946)
!15950 = !DILocation(line: 272, column: 45, scope: !15946)
!15951 = !DILocation(line: 272, column: 50, scope: !15946)
!15952 = !DILocation(line: 272, column: 49, scope: !15946)
!15953 = !DILocation(line: 272, column: 52, scope: !15946)
!15954 = !DILocation(line: 272, column: 47, scope: !15946)
!15955 = !DILocation(line: 272, column: 41, scope: !15946)
!15956 = !DILocation(line: 272, column: 43, scope: !15946)
!15957 = !DILocation(line: 272, column: 64, scope: !15946)
!15958 = !DILocation(line: 273, column: 26, scope: !15946)
!15959 = !DILocation(line: 273, column: 28, scope: !15946)
!15960 = !DILocation(line: 273, column: 22, scope: !15946)
!15961 = !DILocation(line: 273, column: 24, scope: !15946)
!15962 = !DILocation(line: 273, column: 46, scope: !15946)
!15963 = !DILocation(line: 273, column: 51, scope: !15946)
!15964 = !DILocation(line: 273, column: 50, scope: !15946)
!15965 = !DILocation(line: 273, column: 53, scope: !15946)
!15966 = !DILocation(line: 273, column: 48, scope: !15946)
!15967 = !DILocation(line: 273, column: 42, scope: !15946)
!15968 = !DILocation(line: 273, column: 44, scope: !15946)
!15969 = !DILocation(line: 273, column: 66, scope: !15946)
!15970 = !DILocation(line: 274, column: 26, scope: !15946)
!15971 = !DILocation(line: 274, column: 28, scope: !15946)
!15972 = !DILocation(line: 274, column: 22, scope: !15946)
!15973 = !DILocation(line: 274, column: 24, scope: !15946)
!15974 = !DILocation(line: 274, column: 47, scope: !15946)
!15975 = !DILocation(line: 274, column: 52, scope: !15946)
!15976 = !DILocation(line: 274, column: 51, scope: !15946)
!15977 = !DILocation(line: 274, column: 54, scope: !15946)
!15978 = !DILocation(line: 274, column: 49, scope: !15946)
!15979 = !DILocation(line: 274, column: 43, scope: !15946)
!15980 = !DILocation(line: 274, column: 45, scope: !15946)
!15981 = !DILocation(line: 274, column: 68, scope: !15946)
!15982 = !DILocation(line: 275, column: 26, scope: !15946)
!15983 = !DILocation(line: 275, column: 28, scope: !15946)
!15984 = !DILocation(line: 275, column: 22, scope: !15946)
!15985 = !DILocation(line: 275, column: 24, scope: !15946)
!15986 = !DILocation(line: 275, column: 48, scope: !15946)
!15987 = !DILocation(line: 275, column: 53, scope: !15946)
!15988 = !DILocation(line: 275, column: 52, scope: !15946)
!15989 = !DILocation(line: 275, column: 55, scope: !15946)
!15990 = !DILocation(line: 275, column: 50, scope: !15946)
!15991 = !DILocation(line: 275, column: 44, scope: !15946)
!15992 = !DILocation(line: 275, column: 46, scope: !15946)
!15993 = !DILocation(line: 275, column: 70, scope: !15946)
!15994 = !DILocation(line: 276, column: 26, scope: !15946)
!15995 = !DILocation(line: 276, column: 28, scope: !15946)
!15996 = !DILocation(line: 276, column: 22, scope: !15946)
!15997 = !DILocation(line: 276, column: 24, scope: !15946)
!15998 = !DILocation(line: 276, column: 49, scope: !15946)
!15999 = !DILocation(line: 276, column: 54, scope: !15946)
!16000 = !DILocation(line: 276, column: 53, scope: !15946)
!16001 = !DILocation(line: 276, column: 56, scope: !15946)
!16002 = !DILocation(line: 276, column: 51, scope: !15946)
!16003 = !DILocation(line: 276, column: 45, scope: !15946)
!16004 = !DILocation(line: 276, column: 47, scope: !15946)
!16005 = !DILocation(line: 276, column: 72, scope: !15946)
!16006 = !DILocation(line: 279, column: 5, scope: !15882)
!16007 = !DILocation(line: 281, column: 13, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !16009, file: !1431, line: 281, column: 13)
!16009 = distinct !DILexicalBlock(scope: !15877, file: !1431, line: 280, column: 10)
!16010 = !DILocation(line: 281, column: 17, scope: !16008)
!16011 = !DILocation(line: 281, column: 13, scope: !16009)
!16012 = !DILocation(line: 282, column: 21, scope: !16013)
!16013 = distinct !DILexicalBlock(scope: !16008, file: !1431, line: 281, column: 24)
!16014 = !DILocation(line: 283, column: 27, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !16013, file: !1431, line: 282, column: 26)
!16016 = !DILocation(line: 283, column: 29, scope: !16015)
!16017 = !DILocation(line: 283, column: 23, scope: !16015)
!16018 = !DILocation(line: 283, column: 25, scope: !16015)
!16019 = !DILocation(line: 283, column: 52, scope: !16015)
!16020 = !DILocation(line: 283, column: 57, scope: !16015)
!16021 = !DILocation(line: 283, column: 56, scope: !16015)
!16022 = !DILocation(line: 283, column: 59, scope: !16015)
!16023 = !DILocation(line: 283, column: 54, scope: !16015)
!16024 = !DILocation(line: 283, column: 48, scope: !16015)
!16025 = !DILocation(line: 283, column: 50, scope: !16015)
!16026 = !DILocation(line: 283, column: 77, scope: !16015)
!16027 = !DILocation(line: 284, column: 27, scope: !16015)
!16028 = !DILocation(line: 284, column: 29, scope: !16015)
!16029 = !DILocation(line: 284, column: 23, scope: !16015)
!16030 = !DILocation(line: 284, column: 25, scope: !16015)
!16031 = !DILocation(line: 284, column: 53, scope: !16015)
!16032 = !DILocation(line: 284, column: 58, scope: !16015)
!16033 = !DILocation(line: 284, column: 57, scope: !16015)
!16034 = !DILocation(line: 284, column: 60, scope: !16015)
!16035 = !DILocation(line: 284, column: 55, scope: !16015)
!16036 = !DILocation(line: 284, column: 49, scope: !16015)
!16037 = !DILocation(line: 284, column: 51, scope: !16015)
!16038 = !DILocation(line: 284, column: 79, scope: !16015)
!16039 = !DILocation(line: 285, column: 27, scope: !16015)
!16040 = !DILocation(line: 285, column: 29, scope: !16015)
!16041 = !DILocation(line: 285, column: 23, scope: !16015)
!16042 = !DILocation(line: 285, column: 25, scope: !16015)
!16043 = !DILocation(line: 285, column: 54, scope: !16015)
!16044 = !DILocation(line: 285, column: 59, scope: !16015)
!16045 = !DILocation(line: 285, column: 58, scope: !16015)
!16046 = !DILocation(line: 285, column: 61, scope: !16015)
!16047 = !DILocation(line: 285, column: 56, scope: !16015)
!16048 = !DILocation(line: 285, column: 50, scope: !16015)
!16049 = !DILocation(line: 285, column: 52, scope: !16015)
!16050 = !DILocation(line: 285, column: 81, scope: !16015)
!16051 = !DILocation(line: 286, column: 27, scope: !16015)
!16052 = !DILocation(line: 286, column: 29, scope: !16015)
!16053 = !DILocation(line: 286, column: 23, scope: !16015)
!16054 = !DILocation(line: 286, column: 25, scope: !16015)
!16055 = !DILocation(line: 286, column: 55, scope: !16015)
!16056 = !DILocation(line: 286, column: 60, scope: !16015)
!16057 = !DILocation(line: 286, column: 59, scope: !16015)
!16058 = !DILocation(line: 286, column: 62, scope: !16015)
!16059 = !DILocation(line: 286, column: 57, scope: !16015)
!16060 = !DILocation(line: 286, column: 51, scope: !16015)
!16061 = !DILocation(line: 286, column: 53, scope: !16015)
!16062 = !DILocation(line: 286, column: 83, scope: !16015)
!16063 = !DILocation(line: 287, column: 27, scope: !16015)
!16064 = !DILocation(line: 287, column: 29, scope: !16015)
!16065 = !DILocation(line: 287, column: 23, scope: !16015)
!16066 = !DILocation(line: 287, column: 25, scope: !16015)
!16067 = !DILocation(line: 287, column: 56, scope: !16015)
!16068 = !DILocation(line: 287, column: 61, scope: !16015)
!16069 = !DILocation(line: 287, column: 60, scope: !16015)
!16070 = !DILocation(line: 287, column: 63, scope: !16015)
!16071 = !DILocation(line: 287, column: 58, scope: !16015)
!16072 = !DILocation(line: 287, column: 52, scope: !16015)
!16073 = !DILocation(line: 287, column: 54, scope: !16015)
!16074 = !DILocation(line: 287, column: 85, scope: !16015)
!16075 = !DILocation(line: 289, column: 9, scope: !16013)
!16076 = !DILocation(line: 291, column: 21, scope: !16077)
!16077 = distinct !DILexicalBlock(scope: !16008, file: !1431, line: 290, column: 14)
!16078 = !DILocation(line: 292, column: 27, scope: !16079)
!16079 = distinct !DILexicalBlock(scope: !16077, file: !1431, line: 291, column: 26)
!16080 = !DILocation(line: 292, column: 29, scope: !16079)
!16081 = !DILocation(line: 292, column: 23, scope: !16079)
!16082 = !DILocation(line: 292, column: 25, scope: !16079)
!16083 = !DILocation(line: 292, column: 57, scope: !16079)
!16084 = !DILocation(line: 292, column: 62, scope: !16079)
!16085 = !DILocation(line: 292, column: 61, scope: !16079)
!16086 = !DILocation(line: 292, column: 64, scope: !16079)
!16087 = !DILocation(line: 292, column: 59, scope: !16079)
!16088 = !DILocation(line: 292, column: 53, scope: !16079)
!16089 = !DILocation(line: 292, column: 55, scope: !16079)
!16090 = !DILocation(line: 292, column: 87, scope: !16079)
!16091 = !DILocation(line: 293, column: 27, scope: !16079)
!16092 = !DILocation(line: 293, column: 29, scope: !16079)
!16093 = !DILocation(line: 293, column: 23, scope: !16079)
!16094 = !DILocation(line: 293, column: 25, scope: !16079)
!16095 = !DILocation(line: 293, column: 58, scope: !16079)
!16096 = !DILocation(line: 293, column: 63, scope: !16079)
!16097 = !DILocation(line: 293, column: 62, scope: !16079)
!16098 = !DILocation(line: 293, column: 65, scope: !16079)
!16099 = !DILocation(line: 293, column: 60, scope: !16079)
!16100 = !DILocation(line: 293, column: 54, scope: !16079)
!16101 = !DILocation(line: 293, column: 56, scope: !16079)
!16102 = !DILocation(line: 293, column: 89, scope: !16079)
!16103 = !DILocation(line: 294, column: 27, scope: !16079)
!16104 = !DILocation(line: 294, column: 29, scope: !16079)
!16105 = !DILocation(line: 294, column: 23, scope: !16079)
!16106 = !DILocation(line: 294, column: 25, scope: !16079)
!16107 = !DILocation(line: 294, column: 59, scope: !16079)
!16108 = !DILocation(line: 294, column: 64, scope: !16079)
!16109 = !DILocation(line: 294, column: 63, scope: !16079)
!16110 = !DILocation(line: 294, column: 66, scope: !16079)
!16111 = !DILocation(line: 294, column: 61, scope: !16079)
!16112 = !DILocation(line: 294, column: 55, scope: !16079)
!16113 = !DILocation(line: 294, column: 57, scope: !16079)
!16114 = !DILocation(line: 294, column: 91, scope: !16079)
!16115 = !DILocation(line: 295, column: 27, scope: !16079)
!16116 = !DILocation(line: 295, column: 29, scope: !16079)
!16117 = !DILocation(line: 295, column: 23, scope: !16079)
!16118 = !DILocation(line: 295, column: 25, scope: !16079)
!16119 = !DILocation(line: 295, column: 60, scope: !16079)
!16120 = !DILocation(line: 295, column: 65, scope: !16079)
!16121 = !DILocation(line: 295, column: 64, scope: !16079)
!16122 = !DILocation(line: 295, column: 67, scope: !16079)
!16123 = !DILocation(line: 295, column: 62, scope: !16079)
!16124 = !DILocation(line: 295, column: 56, scope: !16079)
!16125 = !DILocation(line: 295, column: 58, scope: !16079)
!16126 = !DILocation(line: 295, column: 93, scope: !16079)
!16127 = !DILocation(line: 296, column: 27, scope: !16079)
!16128 = !DILocation(line: 296, column: 29, scope: !16079)
!16129 = !DILocation(line: 296, column: 23, scope: !16079)
!16130 = !DILocation(line: 296, column: 25, scope: !16079)
!16131 = !DILocation(line: 296, column: 61, scope: !16079)
!16132 = !DILocation(line: 296, column: 66, scope: !16079)
!16133 = !DILocation(line: 296, column: 65, scope: !16079)
!16134 = !DILocation(line: 296, column: 68, scope: !16079)
!16135 = !DILocation(line: 296, column: 63, scope: !16079)
!16136 = !DILocation(line: 296, column: 57, scope: !16079)
!16137 = !DILocation(line: 296, column: 59, scope: !16079)
!16138 = !DILocation(line: 296, column: 95, scope: !16079)
!16139 = !DILocation(line: 300, column: 1, scope: !1585)
!16140 = !DILocation(line: 194, column: 34, scope: !1591)
!16141 = !DILocation(line: 194, column: 52, scope: !1591)
!16142 = !DILocation(line: 196, column: 5, scope: !1591)
!16143 = !DILocation(line: 196, column: 12, scope: !16144)
!16144 = !DILexicalBlockFile(scope: !16145, file: !1592, discriminator: 2)
!16145 = !DILexicalBlockFile(scope: !1591, file: !1592, discriminator: 1)
!16146 = !DILocation(line: 196, column: 18, scope: !1591)
!16147 = !DILocation(line: 197, column: 18, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16149, file: !1592, line: 197, column: 13)
!16149 = distinct !DILexicalBlock(scope: !1591, file: !1592, line: 196, column: 24)
!16150 = !DILocation(line: 197, column: 13, scope: !16148)
!16151 = !DILocation(line: 197, column: 23, scope: !16148)
!16152 = !DILocation(line: 197, column: 13, scope: !16149)
!16153 = !DILocation(line: 197, column: 29, scope: !16154)
!16154 = !DILexicalBlockFile(scope: !16148, file: !1592, discriminator: 1)
!16155 = !DILocation(line: 199, column: 5, scope: !1591)
!16156 = !DILocation(line: 200, column: 1, scope: !1591)
!16157 = !DILocation(line: 3205, column: 28, scope: !1671)
!16158 = !DILocation(line: 3205, column: 45, scope: !1671)
!16159 = !DILocation(line: 3207, column: 5, scope: !1671)
!16160 = !DILocation(line: 3207, column: 18, scope: !1671)
!16161 = !DILocation(line: 3207, column: 23, scope: !1671)
!16162 = !DILocation(line: 3207, column: 22, scope: !1671)
!16163 = !DILocation(line: 3208, column: 11, scope: !1671)
!16164 = !DILocation(line: 3208, column: 10, scope: !1671)
!16165 = !DILocation(line: 3208, column: 6, scope: !1671)
!16166 = !DILocation(line: 3208, column: 8, scope: !1671)
!16167 = !DILocation(line: 3209, column: 10, scope: !1671)
!16168 = !DILocation(line: 3209, column: 6, scope: !1671)
!16169 = !DILocation(line: 3209, column: 8, scope: !1671)
!16170 = !DILocation(line: 3210, column: 1, scope: !1671)
!16171 = !DILocation(line: 3632, column: 22, scope: !1707)
!16172 = !DILocation(line: 3632, column: 43, scope: !1707)
!16173 = !DILocation(line: 3632, column: 59, scope: !1707)
!16174 = !DILocation(line: 3633, column: 36, scope: !1707)
!16175 = !DILocation(line: 3633, column: 51, scope: !1707)
!16176 = !DILocation(line: 3635, column: 24, scope: !16177)
!16177 = distinct !DILexicalBlock(scope: !1707, file: !4, line: 3635, column: 9)
!16178 = !DILocation(line: 3635, column: 9, scope: !16177)
!16179 = !DILocation(line: 3635, column: 9, scope: !1707)
!16180 = !DILocation(line: 3636, column: 28, scope: !16181)
!16181 = distinct !DILexicalBlock(scope: !16182, file: !4, line: 3636, column: 13)
!16182 = distinct !DILexicalBlock(scope: !16177, file: !4, line: 3635, column: 28)
!16183 = !DILocation(line: 3636, column: 13, scope: !16181)
!16184 = !DILocation(line: 3636, column: 13, scope: !16182)
!16185 = !DILocation(line: 3637, column: 26, scope: !16186)
!16186 = distinct !DILexicalBlock(scope: !16181, file: !4, line: 3636, column: 32)
!16187 = !DILocation(line: 3637, column: 47, scope: !16186)
!16188 = !DILocation(line: 3637, column: 13, scope: !16186)
!16189 = !DILocation(line: 3638, column: 13, scope: !16186)
!16190 = !DILocation(line: 3640, column: 24, scope: !16182)
!16191 = !DILocation(line: 3640, column: 41, scope: !16182)
!16192 = !DILocation(line: 3640, column: 32, scope: !16182)
!16193 = !DILocation(line: 3640, column: 53, scope: !16182)
!16194 = !DILocation(line: 3640, column: 44, scope: !16182)
!16195 = !DILocation(line: 3640, column: 43, scope: !16182)
!16196 = !DILocation(line: 3640, column: 9, scope: !16182)
!16197 = !DILocation(line: 3641, column: 9, scope: !16182)
!16198 = !DILocation(line: 3644, column: 16, scope: !1707)
!16199 = !DILocation(line: 3644, column: 33, scope: !1707)
!16200 = !DILocation(line: 3644, column: 24, scope: !1707)
!16201 = !DILocation(line: 3644, column: 45, scope: !1707)
!16202 = !DILocation(line: 3644, column: 36, scope: !1707)
!16203 = !DILocation(line: 3644, column: 35, scope: !1707)
!16204 = !DILocation(line: 3644, column: 62, scope: !1707)
!16205 = !DILocation(line: 3644, column: 52, scope: !1707)
!16206 = !DILocation(line: 3644, column: 5, scope: !1707)
!16207 = !DILocation(line: 3645, column: 6, scope: !1707)
!16208 = !DILocation(line: 3645, column: 13, scope: !1707)
!16209 = !DILocation(line: 3646, column: 1, scope: !1707)
!16210 = !DILocation(line: 3646, column: 1, scope: !16211)
!16211 = !DILexicalBlockFile(scope: !1707, file: !4, discriminator: 1)
!16212 = !DILocation(line: 7355, column: 26, scope: !1714)
!16213 = !DILocation(line: 7355, column: 36, scope: !1714)
!16214 = !DILocation(line: 7355, column: 52, scope: !1714)
!16215 = !DILocation(line: 7355, column: 68, scope: !1714)
!16216 = !DILocation(line: 7356, column: 29, scope: !1714)
!16217 = !DILocation(line: 7358, column: 5, scope: !1714)
!16218 = !DILocation(line: 7358, column: 19, scope: !1714)
!16219 = !DILocation(line: 7359, column: 5, scope: !1714)
!16220 = !DILocation(line: 7359, column: 12, scope: !1714)
!16221 = !DILocation(line: 7359, column: 17, scope: !1714)
!16222 = !DILocation(line: 7359, column: 21, scope: !1714)
!16223 = !DILocation(line: 7359, column: 26, scope: !1714)
!16224 = !DILocation(line: 7360, column: 5, scope: !1714)
!16225 = !DILocation(line: 7360, column: 11, scope: !1714)
!16226 = !DILocation(line: 7360, column: 15, scope: !1714)
!16227 = !DILocation(line: 7361, column: 5, scope: !1714)
!16228 = !DILocation(line: 7361, column: 9, scope: !1714)
!16229 = !DILocation(line: 7363, column: 27, scope: !1714)
!16230 = !DILocation(line: 7363, column: 5, scope: !1714)
!16231 = !DILocation(line: 7364, column: 27, scope: !1714)
!16232 = !DILocation(line: 7364, column: 5, scope: !1714)
!16233 = !DILocation(line: 7366, column: 5, scope: !1714)
!16234 = !DILocation(line: 7367, column: 5, scope: !1714)
!16235 = !DILocation(line: 7368, column: 8, scope: !1714)
!16236 = !DILocation(line: 7368, column: 12, scope: !1714)
!16237 = !DILocation(line: 7369, column: 8, scope: !1714)
!16238 = !DILocation(line: 7369, column: 12, scope: !1714)
!16239 = !DILocation(line: 7371, column: 9, scope: !16240)
!16240 = distinct !DILexicalBlock(scope: !1714, file: !4, line: 7371, column: 9)
!16241 = !DILocation(line: 7371, column: 14, scope: !16240)
!16242 = !DILocation(line: 7371, column: 11, scope: !16240)
!16243 = !DILocation(line: 7371, column: 16, scope: !16240)
!16244 = !DILocation(line: 7371, column: 19, scope: !16245)
!16245 = !DILexicalBlockFile(scope: !16240, file: !4, discriminator: 1)
!16246 = !DILocation(line: 7371, column: 24, scope: !16240)
!16247 = !DILocation(line: 7371, column: 21, scope: !16240)
!16248 = !DILocation(line: 7371, column: 9, scope: !1714)
!16249 = !DILocation(line: 7372, column: 19, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16251, file: !4, line: 7372, column: 13)
!16251 = distinct !DILexicalBlock(scope: !16240, file: !4, line: 7371, column: 27)
!16252 = !DILocation(line: 7372, column: 17, scope: !16250)
!16253 = !DILocation(line: 7372, column: 31, scope: !16250)
!16254 = !DILocation(line: 7372, column: 13, scope: !16251)
!16255 = !DILocation(line: 7373, column: 14, scope: !16256)
!16256 = distinct !DILexicalBlock(scope: !16250, file: !4, line: 7372, column: 46)
!16257 = !DILocation(line: 7373, column: 21, scope: !16256)
!16258 = !DILocation(line: 7374, column: 13, scope: !16256)
!16259 = !DILocation(line: 7376, column: 5, scope: !16251)
!16260 = !DILocation(line: 7377, column: 9, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !1714, file: !4, line: 7377, column: 9)
!16262 = !DILocation(line: 7377, column: 14, scope: !16261)
!16263 = !DILocation(line: 7377, column: 11, scope: !16261)
!16264 = !DILocation(line: 7377, column: 16, scope: !16261)
!16265 = !DILocation(line: 7377, column: 19, scope: !16266)
!16266 = !DILexicalBlockFile(scope: !16261, file: !4, discriminator: 1)
!16267 = !DILocation(line: 7377, column: 24, scope: !16261)
!16268 = !DILocation(line: 7377, column: 21, scope: !16261)
!16269 = !DILocation(line: 7377, column: 9, scope: !1714)
!16270 = !DILocation(line: 7378, column: 19, scope: !16271)
!16271 = distinct !DILexicalBlock(scope: !16272, file: !4, line: 7378, column: 13)
!16272 = distinct !DILexicalBlock(scope: !16261, file: !4, line: 7377, column: 27)
!16273 = !DILocation(line: 7378, column: 17, scope: !16271)
!16274 = !DILocation(line: 7378, column: 31, scope: !16271)
!16275 = !DILocation(line: 7378, column: 13, scope: !16272)
!16276 = !DILocation(line: 7379, column: 14, scope: !16277)
!16277 = distinct !DILexicalBlock(scope: !16271, file: !4, line: 7378, column: 46)
!16278 = !DILocation(line: 7379, column: 21, scope: !16277)
!16279 = !DILocation(line: 7380, column: 13, scope: !16277)
!16280 = !DILocation(line: 7382, column: 5, scope: !16272)
!16281 = !DILocation(line: 7384, column: 5, scope: !1714)
!16282 = !DILocation(line: 7387, column: 20, scope: !1714)
!16283 = !DILocation(line: 7387, column: 23, scope: !1714)
!16284 = !DILocation(line: 7387, column: 32, scope: !1714)
!16285 = !DILocation(line: 7387, column: 35, scope: !1714)
!16286 = !DILocation(line: 7387, column: 30, scope: !1714)
!16287 = !DILocation(line: 7387, column: 42, scope: !1714)
!16288 = !DILocation(line: 7387, column: 46, scope: !1714)
!16289 = !DILocation(line: 7387, column: 13, scope: !1714)
!16290 = !DILocation(line: 7387, column: 18, scope: !1714)
!16291 = !DILocation(line: 7388, column: 9, scope: !16292)
!16292 = distinct !DILexicalBlock(scope: !1714, file: !4, line: 7388, column: 9)
!16293 = !DILocation(line: 7388, column: 12, scope: !16292)
!16294 = !DILocation(line: 7388, column: 19, scope: !16292)
!16295 = !DILocation(line: 7388, column: 42, scope: !16292)
!16296 = !DILocation(line: 7388, column: 53, scope: !16297)
!16297 = !DILexicalBlockFile(scope: !16292, file: !4, discriminator: 1)
!16298 = !DILocation(line: 7388, column: 58, scope: !16292)
!16299 = !DILocation(line: 7388, column: 9, scope: !1714)
!16300 = !DILocation(line: 7389, column: 10, scope: !16301)
!16301 = distinct !DILexicalBlock(scope: !16292, file: !4, line: 7388, column: 82)
!16302 = !DILocation(line: 7389, column: 17, scope: !16301)
!16303 = !DILocation(line: 7390, column: 9, scope: !16301)
!16304 = !DILocation(line: 7398, column: 22, scope: !1714)
!16305 = !DILocation(line: 7398, column: 50, scope: !1714)
!16306 = !DILocation(line: 7398, column: 5, scope: !1714)
!16307 = !DILocation(line: 7404, column: 15, scope: !1714)
!16308 = !DILocation(line: 7404, column: 24, scope: !1714)
!16309 = !DILocation(line: 7404, column: 47, scope: !1714)
!16310 = !DILocation(line: 7404, column: 5, scope: !1714)
!16311 = !DILocation(line: 7408, column: 16, scope: !1714)
!16312 = !DILocation(line: 7408, column: 20, scope: !1714)
!16313 = !DILocation(line: 7408, column: 43, scope: !1714)
!16314 = !DILocation(line: 7408, column: 5, scope: !1714)
!16315 = !DILocation(line: 7410, column: 23, scope: !1714)
!16316 = !DILocation(line: 7410, column: 30, scope: !1714)
!16317 = !DILocation(line: 7410, column: 13, scope: !1714)
!16318 = !DILocation(line: 7410, column: 18, scope: !1714)
!16319 = !DILocation(line: 7411, column: 13, scope: !1714)
!16320 = !DILocation(line: 7411, column: 18, scope: !1714)
!16321 = !DILocation(line: 7412, column: 13, scope: !1714)
!16322 = !DILocation(line: 7412, column: 18, scope: !1714)
!16323 = !DILocation(line: 7416, column: 15, scope: !1714)
!16324 = !DILocation(line: 7416, column: 24, scope: !1714)
!16325 = !DILocation(line: 7416, column: 47, scope: !1714)
!16326 = !DILocation(line: 7416, column: 5, scope: !1714)
!16327 = !DILocation(line: 7418, column: 21, scope: !1714)
!16328 = !DILocation(line: 7418, column: 30, scope: !1714)
!16329 = !DILocation(line: 7418, column: 53, scope: !1714)
!16330 = !DILocation(line: 7418, column: 5, scope: !1714)
!16331 = !DILocation(line: 7422, column: 12, scope: !16332)
!16332 = distinct !DILexicalBlock(scope: !1714, file: !4, line: 7422, column: 5)
!16333 = !DILocation(line: 7422, column: 10, scope: !16332)
!16334 = !DILocation(line: 7423, column: 27, scope: !16335)
!16335 = distinct !DILexicalBlock(scope: !16336, file: !4, line: 7423, column: 13)
!16336 = distinct !DILexicalBlock(scope: !16337, file: !4, line: 7422, column: 23)
!16337 = distinct !DILexicalBlock(scope: !16332, file: !4, line: 7422, column: 5)
!16338 = !DILocation(line: 7423, column: 13, scope: !16335)
!16339 = !DILocation(line: 7423, column: 31, scope: !16335)
!16340 = !DILocation(line: 7423, column: 48, scope: !16341)
!16341 = !DILexicalBlockFile(scope: !16335, file: !4, discriminator: 1)
!16342 = !DILocation(line: 7423, column: 34, scope: !16335)
!16343 = !DILocation(line: 7423, column: 13, scope: !16336)
!16344 = !DILocation(line: 7424, column: 33, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16335, file: !4, line: 7423, column: 53)
!16346 = !DILocation(line: 7424, column: 39, scope: !16345)
!16347 = !DILocation(line: 7424, column: 14, scope: !16345)
!16348 = !DILocation(line: 7424, column: 21, scope: !16345)
!16349 = !DILocation(line: 7425, column: 13, scope: !16345)
!16350 = !DILocation(line: 7427, column: 13, scope: !16351)
!16351 = distinct !DILexicalBlock(scope: !16336, file: !4, line: 7427, column: 13)
!16352 = !DILocation(line: 7427, column: 15, scope: !16351)
!16353 = !DILocation(line: 7427, column: 13, scope: !16336)
!16354 = !DILocation(line: 7428, column: 13, scope: !16355)
!16355 = distinct !DILexicalBlock(scope: !16351, file: !4, line: 7427, column: 20)
!16356 = !DILocation(line: 7428, column: 25, scope: !16357)
!16357 = !DILexicalBlockFile(scope: !16358, file: !4, discriminator: 1)
!16358 = distinct !DILexicalBlock(scope: !16355, file: !4, line: 7428, column: 16)
!16359 = !DILocation(line: 7428, column: 17, scope: !16358)
!16360 = !DILocation(line: 7428, column: 163, scope: !16358)
!16361 = !DILocation(line: 7428, column: 155, scope: !16358)
!16362 = !DILocation(line: 7428, column: 251, scope: !16358)
!16363 = !DILocation(line: 7428, column: 239, scope: !16358)
!16364 = !DILocation(line: 7428, column: 260, scope: !16358)
!16365 = !DILocation(line: 7428, column: 260, scope: !16366)
!16366 = !DILexicalBlockFile(scope: !16358, file: !4, discriminator: 2)
!16367 = !DILocation(line: 7430, column: 14, scope: !16355)
!16368 = !DILocation(line: 7430, column: 21, scope: !16355)
!16369 = !DILocation(line: 7431, column: 13, scope: !16355)
!16370 = !DILocation(line: 7434, column: 34, scope: !16371)
!16371 = distinct !DILexicalBlock(scope: !16351, file: !4, line: 7434, column: 18)
!16372 = !DILocation(line: 7434, column: 18, scope: !16371)
!16373 = !DILocation(line: 7434, column: 38, scope: !16371)
!16374 = !DILocation(line: 7434, column: 18, scope: !16351)
!16375 = !DILocation(line: 7435, column: 29, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !16371, file: !4, line: 7434, column: 44)
!16377 = !DILocation(line: 7435, column: 33, scope: !16376)
!16378 = !DILocation(line: 7435, column: 61, scope: !16376)
!16379 = !DILocation(line: 7435, column: 13, scope: !16376)
!16380 = !DILocation(line: 7436, column: 29, scope: !16376)
!16381 = !DILocation(line: 7436, column: 33, scope: !16376)
!16382 = !DILocation(line: 7436, column: 68, scope: !16376)
!16383 = !DILocation(line: 7436, column: 13, scope: !16376)
!16384 = !DILocation(line: 7437, column: 9, scope: !16376)
!16385 = !DILocation(line: 7439, column: 27, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16371, file: !4, line: 7439, column: 18)
!16387 = !DILocation(line: 7439, column: 18, scope: !16386)
!16388 = !DILocation(line: 7439, column: 36, scope: !16386)
!16389 = !DILocation(line: 7439, column: 18, scope: !16371)
!16390 = !DILocation(line: 7440, column: 13, scope: !16391)
!16391 = distinct !DILexicalBlock(scope: !16386, file: !4, line: 7439, column: 43)
!16392 = !DILocation(line: 7444, column: 29, scope: !16393)
!16393 = distinct !DILexicalBlock(scope: !16386, file: !4, line: 7443, column: 14)
!16394 = !DILocation(line: 7444, column: 33, scope: !16393)
!16395 = !DILocation(line: 7444, column: 61, scope: !16393)
!16396 = !DILocation(line: 7444, column: 13, scope: !16393)
!16397 = !DILocation(line: 7445, column: 29, scope: !16393)
!16398 = !DILocation(line: 7445, column: 33, scope: !16393)
!16399 = !DILocation(line: 7445, column: 62, scope: !16393)
!16400 = !DILocation(line: 7445, column: 13, scope: !16393)
!16401 = !DILocation(line: 7447, column: 5, scope: !16336)
!16402 = !DILocation(line: 7422, column: 19, scope: !16337)
!16403 = !DILocation(line: 7422, column: 5, scope: !16337)
!16404 = !DILocation(line: 7449, column: 9, scope: !16405)
!16405 = distinct !DILexicalBlock(scope: !1714, file: !4, line: 7449, column: 9)
!16406 = !DILocation(line: 7449, column: 15, scope: !16405)
!16407 = !DILocation(line: 7449, column: 12, scope: !16405)
!16408 = !DILocation(line: 7449, column: 9, scope: !1714)
!16409 = !DILocation(line: 7450, column: 24, scope: !16410)
!16410 = distinct !DILexicalBlock(scope: !16411, file: !4, line: 7450, column: 13)
!16411 = distinct !DILexicalBlock(scope: !16405, file: !4, line: 7449, column: 18)
!16412 = !DILocation(line: 7450, column: 27, scope: !16410)
!16413 = !DILocation(line: 7450, column: 31, scope: !16410)
!16414 = !DILocation(line: 7450, column: 14, scope: !16410)
!16415 = !DILocation(line: 7450, column: 13, scope: !16411)
!16416 = !DILocation(line: 7451, column: 13, scope: !16417)
!16417 = distinct !DILexicalBlock(scope: !16410, file: !4, line: 7450, column: 40)
!16418 = !DILocation(line: 7453, column: 17, scope: !16411)
!16419 = !DILocation(line: 7453, column: 9, scope: !16411)
!16420 = !DILocation(line: 7454, column: 5, scope: !16411)
!16421 = !DILocation(line: 7455, column: 9, scope: !16422)
!16422 = distinct !DILexicalBlock(scope: !1714, file: !4, line: 7455, column: 9)
!16423 = !DILocation(line: 7455, column: 15, scope: !16422)
!16424 = !DILocation(line: 7455, column: 12, scope: !16422)
!16425 = !DILocation(line: 7455, column: 9, scope: !1714)
!16426 = !DILocation(line: 7456, column: 24, scope: !16427)
!16427 = distinct !DILexicalBlock(scope: !16428, file: !4, line: 7456, column: 13)
!16428 = distinct !DILexicalBlock(scope: !16422, file: !4, line: 7455, column: 18)
!16429 = !DILocation(line: 7456, column: 27, scope: !16427)
!16430 = !DILocation(line: 7456, column: 31, scope: !16427)
!16431 = !DILocation(line: 7456, column: 14, scope: !16427)
!16432 = !DILocation(line: 7456, column: 13, scope: !16428)
!16433 = !DILocation(line: 7457, column: 13, scope: !16434)
!16434 = distinct !DILexicalBlock(scope: !16427, file: !4, line: 7456, column: 40)
!16435 = !DILocation(line: 7459, column: 17, scope: !16428)
!16436 = !DILocation(line: 7459, column: 9, scope: !16428)
!16437 = !DILocation(line: 7460, column: 5, scope: !16428)
!16438 = !DILocation(line: 7462, column: 25, scope: !1714)
!16439 = !DILocation(line: 7462, column: 31, scope: !1714)
!16440 = !DILocation(line: 7462, column: 6, scope: !1714)
!16441 = !DILocation(line: 7462, column: 13, scope: !1714)
!16442 = !DILocation(line: 7463, column: 5, scope: !1714)
!16443 = !DILocation(line: 7467, column: 9, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !1714, file: !4, line: 7467, column: 9)
!16445 = !DILocation(line: 7467, column: 12, scope: !16444)
!16446 = !DILocation(line: 7467, column: 15, scope: !16447)
!16447 = !DILexicalBlockFile(scope: !16444, file: !4, discriminator: 1)
!16448 = !DILocation(line: 7467, column: 21, scope: !16444)
!16449 = !DILocation(line: 7467, column: 18, scope: !16444)
!16450 = !DILocation(line: 7467, column: 9, scope: !1714)
!16451 = !DILocation(line: 7467, column: 32, scope: !16452)
!16452 = !DILexicalBlockFile(scope: !16444, file: !4, discriminator: 2)
!16453 = !DILocation(line: 7467, column: 24, scope: !16444)
!16454 = !DILocation(line: 7468, column: 9, scope: !16455)
!16455 = distinct !DILexicalBlock(scope: !1714, file: !4, line: 7468, column: 9)
!16456 = !DILocation(line: 7468, column: 12, scope: !16455)
!16457 = !DILocation(line: 7468, column: 15, scope: !16458)
!16458 = !DILexicalBlockFile(scope: !16455, file: !4, discriminator: 1)
!16459 = !DILocation(line: 7468, column: 21, scope: !16455)
!16460 = !DILocation(line: 7468, column: 18, scope: !16455)
!16461 = !DILocation(line: 7468, column: 9, scope: !1714)
!16462 = !DILocation(line: 7468, column: 32, scope: !16463)
!16463 = !DILexicalBlockFile(scope: !16455, file: !4, discriminator: 2)
!16464 = !DILocation(line: 7468, column: 24, scope: !16455)
!16465 = !DILocation(line: 7469, column: 20, scope: !1714)
!16466 = !DILocation(line: 7469, column: 5, scope: !1714)
!16467 = !DILocation(line: 7470, column: 20, scope: !1714)
!16468 = !DILocation(line: 7470, column: 5, scope: !1714)
!16469 = !DILocation(line: 7471, column: 1, scope: !1714)
!16470 = !DILocation(line: 7471, column: 1, scope: !16471)
!16471 = !DILexicalBlockFile(scope: !1714, file: !4, discriminator: 1)
!16472 = !DILocation(line: 7268, column: 25, scope: !1729)
!16473 = !DILocation(line: 7268, column: 46, scope: !1729)
!16474 = !DILocation(line: 7268, column: 70, scope: !1729)
!16475 = !DILocation(line: 7269, column: 28, scope: !1729)
!16476 = !DILocation(line: 7271, column: 5, scope: !1729)
!16477 = !DILocation(line: 7271, column: 19, scope: !1729)
!16478 = !DILocation(line: 7271, column: 31, scope: !1729)
!16479 = !DILocation(line: 7272, column: 5, scope: !1729)
!16480 = !DILocation(line: 7272, column: 12, scope: !1729)
!16481 = !DILocation(line: 7272, column: 16, scope: !1729)
!16482 = !DILocation(line: 7273, column: 5, scope: !1729)
!16483 = !DILocation(line: 7273, column: 12, scope: !1729)
!16484 = !DILocation(line: 7274, column: 5, scope: !1729)
!16485 = !DILocation(line: 7274, column: 11, scope: !1729)
!16486 = !DILocation(line: 7274, column: 18, scope: !1729)
!16487 = !DILocation(line: 7274, column: 20, scope: !1729)
!16488 = !DILocation(line: 7274, column: 23, scope: !1729)
!16489 = !DILocation(line: 7274, column: 28, scope: !1729)
!16490 = !DILocation(line: 7274, column: 75, scope: !1729)
!16491 = !DILocation(line: 7274, column: 89, scope: !1729)
!16492 = !DILocation(line: 7274, column: 19, scope: !1729)
!16493 = !DILocation(line: 7274, column: 105, scope: !1729)
!16494 = !DILocation(line: 7274, column: 108, scope: !1729)
!16495 = !DILocation(line: 7274, column: 113, scope: !1729)
!16496 = !DILocation(line: 7274, column: 116, scope: !1729)
!16497 = !DILocation(line: 7274, column: 124, scope: !1729)
!16498 = !DILocation(line: 7274, column: 127, scope: !1729)
!16499 = !DILocation(line: 7274, column: 132, scope: !1729)
!16500 = !DILocation(line: 7274, column: 135, scope: !1729)
!16501 = !DILocation(line: 7274, column: 142, scope: !1729)
!16502 = !DILocation(line: 7274, column: 145, scope: !1729)
!16503 = !DILocation(line: 7275, column: 5, scope: !1729)
!16504 = !DILocation(line: 7275, column: 16, scope: !1729)
!16505 = !DILocation(line: 7275, column: 28, scope: !1729)
!16506 = !DILocation(line: 7275, column: 34, scope: !1729)
!16507 = !DILocation(line: 7275, column: 38, scope: !1729)
!16508 = !DILocation(line: 7275, column: 83, scope: !1729)
!16509 = !DILocation(line: 7276, column: 5, scope: !1729)
!16510 = !DILocation(line: 7276, column: 16, scope: !1729)
!16511 = !DILocation(line: 7276, column: 28, scope: !1729)
!16512 = !DILocation(line: 7276, column: 34, scope: !1729)
!16513 = !DILocation(line: 7276, column: 38, scope: !1729)
!16514 = !DILocation(line: 7276, column: 83, scope: !1729)
!16515 = !DILocation(line: 7277, column: 5, scope: !1729)
!16516 = !DILocation(line: 7277, column: 16, scope: !1729)
!16517 = !DILocation(line: 7277, column: 35, scope: !1729)
!16518 = !DILocation(line: 7277, column: 41, scope: !1729)
!16519 = !DILocation(line: 7277, column: 47, scope: !1729)
!16520 = !DILocation(line: 7277, column: 92, scope: !1729)
!16521 = !DILocation(line: 7278, column: 5, scope: !1729)
!16522 = !DILocation(line: 7278, column: 17, scope: !1729)
!16523 = !DILocation(line: 7279, column: 5, scope: !1729)
!16524 = !DILocation(line: 7279, column: 17, scope: !1729)
!16525 = !DILocation(line: 7279, column: 22, scope: !1729)
!16526 = !DILocation(line: 7279, column: 31, scope: !1729)
!16527 = !DILocation(line: 7280, column: 5, scope: !1729)
!16528 = !DILocation(line: 7280, column: 13, scope: !1729)
!16529 = !DILocation(line: 7280, column: 29, scope: !1729)
!16530 = !DILocation(line: 7280, column: 20, scope: !1729)
!16531 = !DILocation(line: 7281, column: 5, scope: !1729)
!16532 = !DILocation(line: 7281, column: 9, scope: !1729)
!16533 = !DILocation(line: 7285, column: 7, scope: !1729)
!16534 = !DILocation(line: 7286, column: 21, scope: !1729)
!16535 = !DILocation(line: 7286, column: 5, scope: !1729)
!16536 = !DILocation(line: 7287, column: 11, scope: !1729)
!16537 = !DILocation(line: 7287, column: 14, scope: !1729)
!16538 = !DILocation(line: 7287, column: 23, scope: !1729)
!16539 = !DILocation(line: 7287, column: 26, scope: !1729)
!16540 = !DILocation(line: 7287, column: 21, scope: !1729)
!16541 = !DILocation(line: 7287, column: 9, scope: !1729)
!16542 = !DILocation(line: 7288, column: 15, scope: !1729)
!16543 = !DILocation(line: 7288, column: 18, scope: !1729)
!16544 = !DILocation(line: 7288, column: 14, scope: !1729)
!16545 = !DILocation(line: 7288, column: 5, scope: !1729)
!16546 = !DILocation(line: 7288, column: 8, scope: !1729)
!16547 = !DILocation(line: 7288, column: 12, scope: !1729)
!16548 = !DILocation(line: 7291, column: 29, scope: !1729)
!16549 = !DILocation(line: 7291, column: 32, scope: !1729)
!16550 = !DILocation(line: 7291, column: 35, scope: !1729)
!16551 = !DILocation(line: 7291, column: 5, scope: !1729)
!16552 = !DILocation(line: 7293, column: 5, scope: !1729)
!16553 = !DILocation(line: 7294, column: 5, scope: !1729)
!16554 = !DILocation(line: 7295, column: 35, scope: !1729)
!16555 = !DILocation(line: 7295, column: 41, scope: !1729)
!16556 = !DILocation(line: 7295, column: 16, scope: !1729)
!16557 = !DILocation(line: 7295, column: 22, scope: !1729)
!16558 = !DILocation(line: 7296, column: 34, scope: !1729)
!16559 = !DILocation(line: 7296, column: 39, scope: !1729)
!16560 = !DILocation(line: 7296, column: 16, scope: !1729)
!16561 = !DILocation(line: 7296, column: 21, scope: !1729)
!16562 = !DILocation(line: 7297, column: 34, scope: !1729)
!16563 = !DILocation(line: 7297, column: 39, scope: !1729)
!16564 = !DILocation(line: 7297, column: 16, scope: !1729)
!16565 = !DILocation(line: 7297, column: 21, scope: !1729)
!16566 = !DILocation(line: 7298, column: 16, scope: !1729)
!16567 = !DILocation(line: 7298, column: 21, scope: !1729)
!16568 = !DILocation(line: 7300, column: 15, scope: !1729)
!16569 = !DILocation(line: 7300, column: 20, scope: !1729)
!16570 = !DILocation(line: 7300, column: 13, scope: !1729)
!16571 = !DILocation(line: 7301, column: 13, scope: !1729)
!16572 = !DILocation(line: 7302, column: 14, scope: !1729)
!16573 = !DILocation(line: 7304, column: 29, scope: !1729)
!16574 = !DILocation(line: 7304, column: 36, scope: !1729)
!16575 = !DILocation(line: 7304, column: 45, scope: !1729)
!16576 = !DILocation(line: 7304, column: 9, scope: !1729)
!16577 = !DILocation(line: 7304, column: 7, scope: !1729)
!16578 = !DILocation(line: 7305, column: 5, scope: !1729)
!16579 = !DILocation(line: 7305, column: 12, scope: !16580)
!16580 = !DILexicalBlockFile(scope: !16581, file: !4, discriminator: 2)
!16581 = !DILexicalBlockFile(scope: !16582, file: !4, discriminator: 1)
!16582 = distinct !DILexicalBlock(scope: !16583, file: !4, line: 7305, column: 5)
!16583 = distinct !DILexicalBlock(scope: !1729, file: !4, line: 7305, column: 5)
!16584 = !DILocation(line: 7305, column: 14, scope: !16582)
!16585 = !DILocation(line: 7305, column: 5, scope: !16583)
!16586 = !DILocation(line: 7308, column: 29, scope: !16587)
!16587 = distinct !DILexicalBlock(scope: !16582, file: !4, line: 7305, column: 25)
!16588 = !DILocation(line: 7308, column: 32, scope: !16587)
!16589 = !DILocation(line: 7308, column: 48, scope: !16587)
!16590 = !DILocation(line: 7308, column: 9, scope: !16587)
!16591 = !DILocation(line: 7309, column: 35, scope: !16587)
!16592 = !DILocation(line: 7309, column: 29, scope: !16587)
!16593 = !DILocation(line: 7309, column: 28, scope: !16587)
!16594 = !DILocation(line: 7309, column: 38, scope: !16587)
!16595 = !DILocation(line: 7309, column: 20, scope: !16587)
!16596 = !DILocation(line: 7309, column: 25, scope: !16587)
!16597 = !DILocation(line: 7310, column: 13, scope: !16598)
!16598 = distinct !DILexicalBlock(scope: !16587, file: !4, line: 7310, column: 13)
!16599 = !DILocation(line: 7310, column: 16, scope: !16598)
!16600 = !DILocation(line: 7310, column: 36, scope: !16598)
!16601 = !DILocation(line: 7310, column: 23, scope: !16598)
!16602 = !DILocation(line: 7310, column: 13, scope: !16587)
!16603 = !DILocation(line: 7312, column: 29, scope: !16604)
!16604 = distinct !DILexicalBlock(scope: !16598, file: !4, line: 7310, column: 42)
!16605 = !DILocation(line: 7312, column: 32, scope: !16604)
!16606 = !DILocation(line: 7312, column: 35, scope: !16604)
!16607 = !DILocation(line: 7312, column: 53, scope: !16604)
!16608 = !DILocation(line: 7312, column: 41, scope: !16604)
!16609 = !DILocation(line: 7312, column: 59, scope: !16604)
!16610 = !DILocation(line: 7312, column: 13, scope: !16604)
!16611 = !DILocation(line: 7313, column: 33, scope: !16604)
!16612 = !DILocation(line: 7313, column: 21, scope: !16604)
!16613 = !DILocation(line: 7313, column: 15, scope: !16604)
!16614 = !DILocation(line: 7313, column: 19, scope: !16604)
!16615 = !DILocation(line: 7315, column: 47, scope: !16604)
!16616 = !DILocation(line: 7315, column: 13, scope: !16604)
!16617 = !DILocation(line: 7316, column: 9, scope: !16604)
!16618 = !DILocation(line: 7319, column: 26, scope: !16619)
!16619 = distinct !DILexicalBlock(scope: !16598, file: !4, line: 7317, column: 14)
!16620 = !DILocation(line: 7319, column: 46, scope: !16619)
!16621 = !DILocation(line: 7319, column: 13, scope: !16619)
!16622 = !DILocation(line: 7322, column: 29, scope: !16587)
!16623 = !DILocation(line: 7322, column: 51, scope: !16587)
!16624 = !DILocation(line: 7322, column: 9, scope: !16587)
!16625 = !DILocation(line: 7326, column: 25, scope: !16587)
!16626 = !DILocation(line: 7326, column: 49, scope: !16587)
!16627 = !DILocation(line: 7326, column: 9, scope: !16587)
!16628 = !DILocation(line: 7327, column: 5, scope: !16587)
!16629 = !DILocation(line: 7305, column: 21, scope: !16582)
!16630 = !DILocation(line: 7305, column: 5, scope: !16582)
!16631 = !DILocation(line: 7329, column: 24, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !1729, file: !4, line: 7329, column: 9)
!16633 = !DILocation(line: 7329, column: 10, scope: !16632)
!16634 = !DILocation(line: 7329, column: 9, scope: !1729)
!16635 = !DILocation(line: 7330, column: 19, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !16632, file: !4, line: 7329, column: 28)
!16637 = !DILocation(line: 7330, column: 9, scope: !16636)
!16638 = !DILocation(line: 7330, column: 12, scope: !16636)
!16639 = !DILocation(line: 7330, column: 16, scope: !16636)
!16640 = !DILocation(line: 7331, column: 23, scope: !16636)
!16641 = !DILocation(line: 7331, column: 26, scope: !16636)
!16642 = !DILocation(line: 7331, column: 9, scope: !16636)
!16643 = !DILocation(line: 7332, column: 5, scope: !16636)
!16644 = !DILocation(line: 7334, column: 5, scope: !1729)
!16645 = !DILocation(line: 7335, column: 5, scope: !1729)
!16646 = !DILocation(line: 7336, column: 19, scope: !1729)
!16647 = !DILocation(line: 7336, column: 22, scope: !1729)
!16648 = !DILocation(line: 7336, column: 27, scope: !1729)
!16649 = !DILocation(line: 7336, column: 5, scope: !1729)
!16650 = !DILocation(line: 7337, column: 1, scope: !1729)
!16651 = !DILocation(line: 3437, column: 24, scope: !1772)
!16652 = !DILocation(line: 3437, column: 45, scope: !1772)
!16653 = !DILocation(line: 3437, column: 61, scope: !1772)
!16654 = !DILocation(line: 3438, column: 38, scope: !1772)
!16655 = !DILocation(line: 3438, column: 53, scope: !1772)
!16656 = !DILocation(line: 3440, column: 5, scope: !1772)
!16657 = !DILocation(line: 3440, column: 14, scope: !1772)
!16658 = !DILocation(line: 3442, column: 14, scope: !1772)
!16659 = !DILocation(line: 3442, column: 22, scope: !1772)
!16660 = !DILocation(line: 3442, column: 25, scope: !1772)
!16661 = !DILocation(line: 3442, column: 28, scope: !1772)
!16662 = !DILocation(line: 3442, column: 5, scope: !1772)
!16663 = !DILocation(line: 3443, column: 16, scope: !1772)
!16664 = !DILocation(line: 3443, column: 6, scope: !1772)
!16665 = !DILocation(line: 3443, column: 13, scope: !1772)
!16666 = !DILocation(line: 3444, column: 9, scope: !16667)
!16667 = distinct !DILexicalBlock(scope: !1772, file: !4, line: 3444, column: 9)
!16668 = !DILocation(line: 3444, column: 20, scope: !16667)
!16669 = !DILocation(line: 3444, column: 9, scope: !1772)
!16670 = !DILocation(line: 3445, column: 22, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16667, file: !4, line: 3444, column: 61)
!16672 = !DILocation(line: 3445, column: 43, scope: !16671)
!16673 = !DILocation(line: 3445, column: 9, scope: !16671)
!16674 = !DILocation(line: 3446, column: 5, scope: !16671)
!16675 = !DILocation(line: 3447, column: 1, scope: !1772)
!16676 = !DILocation(line: 7240, column: 32, scope: !1752)
!16677 = !DILocation(line: 7240, column: 48, scope: !1752)
!16678 = !DILocation(line: 7240, column: 61, scope: !1752)
!16679 = !DILocation(line: 7242, column: 5, scope: !1752)
!16680 = !DILocation(line: 7242, column: 16, scope: !1752)
!16681 = !DILocation(line: 7242, column: 29, scope: !1752)
!16682 = !DILocation(line: 7242, column: 33, scope: !1752)
!16683 = !DILocation(line: 7243, column: 5, scope: !1752)
!16684 = !DILocation(line: 7243, column: 16, scope: !1752)
!16685 = !DILocation(line: 7243, column: 23, scope: !1752)
!16686 = !DILocation(line: 7244, column: 5, scope: !1752)
!16687 = !DILocation(line: 7244, column: 9, scope: !1752)
!16688 = !DILocation(line: 7248, column: 38, scope: !1752)
!16689 = !DILocation(line: 7248, column: 5, scope: !1752)
!16690 = !DILocation(line: 7249, column: 25, scope: !1752)
!16691 = !DILocation(line: 7249, column: 9, scope: !1752)
!16692 = !DILocation(line: 7249, column: 7, scope: !1752)
!16693 = !DILocation(line: 7250, column: 27, scope: !1752)
!16694 = !DILocation(line: 7250, column: 26, scope: !1752)
!16695 = !DILocation(line: 7250, column: 13, scope: !1752)
!16696 = !DILocation(line: 7250, column: 10, scope: !1752)
!16697 = !DILocation(line: 7252, column: 17, scope: !1752)
!16698 = !DILocation(line: 7252, column: 23, scope: !1752)
!16699 = !DILocation(line: 7252, column: 5, scope: !1752)
!16700 = !DILocation(line: 7253, column: 25, scope: !1752)
!16701 = !DILocation(line: 7253, column: 28, scope: !1752)
!16702 = !DILocation(line: 7253, column: 34, scope: !1752)
!16703 = !DILocation(line: 7253, column: 46, scope: !1752)
!16704 = !DILocation(line: 7253, column: 11, scope: !1752)
!16705 = !DILocation(line: 7255, column: 21, scope: !1752)
!16706 = !DILocation(line: 7255, column: 5, scope: !1752)
!16707 = !DILocation(line: 7256, column: 5, scope: !1752)
!16708 = !DILocation(line: 7256, column: 8, scope: !1752)
!16709 = !DILocation(line: 7256, column: 12, scope: !1752)
!16710 = !DILocation(line: 7257, column: 15, scope: !1752)
!16711 = !DILocation(line: 7257, column: 18, scope: !1752)
!16712 = !DILocation(line: 7257, column: 26, scope: !1752)
!16713 = !DILocation(line: 7257, column: 14, scope: !1752)
!16714 = !DILocation(line: 7257, column: 5, scope: !1752)
!16715 = !DILocation(line: 7257, column: 8, scope: !1752)
!16716 = !DILocation(line: 7257, column: 12, scope: !1752)
!16717 = !DILocation(line: 7258, column: 19, scope: !1752)
!16718 = !DILocation(line: 7258, column: 5, scope: !1752)
!16719 = !DILocation(line: 7259, column: 1, scope: !1752)
!16720 = !DILocation(line: 7213, column: 33, scope: !1763)
!16721 = !DILocation(line: 7214, column: 33, scope: !1763)
!16722 = !DILocation(line: 7214, column: 54, scope: !1763)
!16723 = !DILocation(line: 7216, column: 5, scope: !1763)
!16724 = !DILocation(line: 7216, column: 17, scope: !1763)
!16725 = !DILocation(line: 7217, column: 5, scope: !1763)
!16726 = !DILocation(line: 7217, column: 9, scope: !1763)
!16727 = !DILocation(line: 7220, column: 9, scope: !16728)
!16728 = distinct !DILexicalBlock(scope: !1763, file: !4, line: 7220, column: 9)
!16729 = !DILocation(line: 7220, column: 20, scope: !16728)
!16730 = !DILocation(line: 7220, column: 17, scope: !16728)
!16731 = !DILocation(line: 7220, column: 9, scope: !1763)
!16732 = !DILocation(line: 7220, column: 30, scope: !16733)
!16733 = !DILexicalBlockFile(scope: !16728, file: !4, discriminator: 1)
!16734 = !DILocation(line: 7220, column: 30, scope: !16728)
!16735 = !DILocation(line: 7222, column: 7, scope: !1763)
!16736 = !DILocation(line: 7222, column: 16, scope: !1763)
!16737 = !DILocation(line: 7222, column: 14, scope: !1763)
!16738 = !DILocation(line: 7223, column: 5, scope: !1763)
!16739 = !DILocation(line: 7224, column: 14, scope: !16740)
!16740 = distinct !DILexicalBlock(scope: !1763, file: !4, line: 7223, column: 8)
!16741 = !DILocation(line: 7224, column: 15, scope: !16740)
!16742 = !DILocation(line: 7224, column: 19, scope: !16740)
!16743 = !DILocation(line: 7224, column: 11, scope: !16740)
!16744 = !DILocation(line: 7225, column: 22, scope: !16740)
!16745 = !DILocation(line: 7225, column: 16, scope: !16740)
!16746 = !DILocation(line: 7225, column: 9, scope: !16740)
!16747 = !DILocation(line: 7225, column: 20, scope: !16740)
!16748 = !DILocation(line: 7226, column: 5, scope: !16740)
!16749 = !DILocation(line: 7226, column: 14, scope: !16750)
!16750 = !DILexicalBlockFile(scope: !1763, file: !4, discriminator: 1)
!16751 = !DILocation(line: 7226, column: 18, scope: !1763)
!16752 = !DILocation(line: 7226, column: 16, scope: !1763)
!16753 = !DILocation(line: 7228, column: 12, scope: !1763)
!16754 = !DILocation(line: 7228, column: 13, scope: !1763)
!16755 = !DILocation(line: 7228, column: 5, scope: !1763)
!16756 = !DILocation(line: 7229, column: 1, scope: !1763)
!16757 = !DILocation(line: 4122, column: 28, scope: !1817)
!16758 = !DILocation(line: 4122, column: 49, scope: !1817)
!16759 = !DILocation(line: 4122, column: 73, scope: !1817)
!16760 = !DILocation(line: 4123, column: 31, scope: !1817)
!16761 = !DILocation(line: 4125, column: 5, scope: !1817)
!16762 = !DILocation(line: 4125, column: 16, scope: !1817)
!16763 = !DILocation(line: 4125, column: 35, scope: !1817)
!16764 = !DILocation(line: 4125, column: 41, scope: !1817)
!16765 = !DILocation(line: 4125, column: 47, scope: !1817)
!16766 = !DILocation(line: 4125, column: 82, scope: !1817)
!16767 = !DILocation(line: 4125, column: 87, scope: !1817)
!16768 = !DILocation(line: 4125, column: 91, scope: !1817)
!16769 = !DILocation(line: 4125, column: 80, scope: !1817)
!16770 = !DILocation(line: 4125, column: 105, scope: !1817)
!16771 = !DILocation(line: 4126, column: 5, scope: !1817)
!16772 = !DILocation(line: 4126, column: 11, scope: !1817)
!16773 = !DILocation(line: 4126, column: 16, scope: !1817)
!16774 = !DILocation(line: 4126, column: 18, scope: !1817)
!16775 = !DILocation(line: 4126, column: 21, scope: !1817)
!16776 = !DILocation(line: 4126, column: 26, scope: !1817)
!16777 = !DILocation(line: 4126, column: 73, scope: !1817)
!16778 = !DILocation(line: 4126, column: 87, scope: !1817)
!16779 = !DILocation(line: 4126, column: 17, scope: !1817)
!16780 = !DILocation(line: 4126, column: 103, scope: !1817)
!16781 = !DILocation(line: 4126, column: 106, scope: !1817)
!16782 = !DILocation(line: 4126, column: 111, scope: !1817)
!16783 = !DILocation(line: 4126, column: 114, scope: !1817)
!16784 = !DILocation(line: 4126, column: 122, scope: !1817)
!16785 = !DILocation(line: 4126, column: 125, scope: !1817)
!16786 = !DILocation(line: 4126, column: 130, scope: !1817)
!16787 = !DILocation(line: 4126, column: 133, scope: !1817)
!16788 = !DILocation(line: 4126, column: 140, scope: !1817)
!16789 = !DILocation(line: 4126, column: 143, scope: !1817)
!16790 = !DILocation(line: 4128, column: 5, scope: !1817)
!16791 = !DILocation(line: 4131, column: 9, scope: !16792)
!16792 = distinct !DILexicalBlock(scope: !1817, file: !4, line: 4131, column: 9)
!16793 = !DILocation(line: 4131, column: 29, scope: !16792)
!16794 = !DILocation(line: 4131, column: 9, scope: !1817)
!16795 = !DILocation(line: 4132, column: 20, scope: !16796)
!16796 = distinct !DILexicalBlock(scope: !16792, file: !4, line: 4131, column: 35)
!16797 = !DILocation(line: 4132, column: 9, scope: !16796)
!16798 = !DILocation(line: 4133, column: 10, scope: !16796)
!16799 = !DILocation(line: 4133, column: 17, scope: !16796)
!16800 = !DILocation(line: 4134, column: 9, scope: !16796)
!16801 = !DILocation(line: 4137, column: 5, scope: !1817)
!16802 = !DILocation(line: 4138, column: 1, scope: !1817)
!16803 = !DILocation(line: 4144, column: 38, scope: !1826)
!16804 = !DILocation(line: 4144, column: 53, scope: !1826)
!16805 = !DILocation(line: 4146, column: 5, scope: !1826)
!16806 = !DILocation(line: 4146, column: 17, scope: !1826)
!16807 = !DILocation(line: 4147, column: 5, scope: !1826)
!16808 = !DILocation(line: 4147, column: 17, scope: !1826)
!16809 = !DILocation(line: 4154, column: 9, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !1826, file: !4, line: 4154, column: 9)
!16811 = !DILocation(line: 4154, column: 11, scope: !16810)
!16812 = !DILocation(line: 4154, column: 9, scope: !1826)
!16813 = !DILocation(line: 4155, column: 9, scope: !16814)
!16814 = distinct !DILexicalBlock(scope: !16810, file: !4, line: 4154, column: 38)
!16815 = !DILocation(line: 4166, column: 34, scope: !1826)
!16816 = !DILocation(line: 4166, column: 18, scope: !1826)
!16817 = !DILocation(line: 4166, column: 36, scope: !1826)
!16818 = !DILocation(line: 4166, column: 17, scope: !1826)
!16819 = !DILocation(line: 4166, column: 54, scope: !1826)
!16820 = !DILocation(line: 4166, column: 43, scope: !1826)
!16821 = !DILocation(line: 4166, column: 56, scope: !1826)
!16822 = !DILocation(line: 4166, column: 40, scope: !1826)
!16823 = !DILocation(line: 4166, column: 15, scope: !1826)
!16824 = !DILocation(line: 4178, column: 44, scope: !1826)
!16825 = !DILocation(line: 4178, column: 36, scope: !1826)
!16826 = !DILocation(line: 4178, column: 35, scope: !1826)
!16827 = !DILocation(line: 4178, column: 46, scope: !1826)
!16828 = !DILocation(line: 4178, column: 65, scope: !1826)
!16829 = !DILocation(line: 4178, column: 57, scope: !1826)
!16830 = !DILocation(line: 4178, column: 55, scope: !1826)
!16831 = !DILocation(line: 4178, column: 22, scope: !1826)
!16832 = !DILocation(line: 4178, column: 9, scope: !1826)
!16833 = !DILocation(line: 4178, column: 7, scope: !1826)
!16834 = !DILocation(line: 4179, column: 12, scope: !1826)
!16835 = !DILocation(line: 4179, column: 14, scope: !1826)
!16836 = !DILocation(line: 4179, column: 21, scope: !16837)
!16837 = !DILexicalBlockFile(scope: !1826, file: !4, discriminator: 1)
!16838 = !DILocation(line: 4179, column: 12, scope: !16839)
!16839 = !DILexicalBlockFile(scope: !1826, file: !4, discriminator: 2)
!16840 = !DILocation(line: 4179, column: 5, scope: !16841)
!16841 = !DILexicalBlockFile(scope: !16842, file: !4, discriminator: 4)
!16842 = !DILexicalBlockFile(scope: !1826, file: !4, discriminator: 3)
!16843 = !DILocation(line: 4179, column: 5, scope: !1826)
!16844 = !DILocation(line: 4180, column: 1, scope: !1826)
!16845 = !DILocation(line: 6115, column: 23, scope: !1834)
!16846 = !DILocation(line: 6115, column: 44, scope: !1834)
!16847 = !DILocation(line: 6115, column: 61, scope: !1834)
!16848 = !DILocation(line: 6116, column: 24, scope: !1834)
!16849 = !DILocation(line: 6116, column: 57, scope: !1834)
!16850 = !DILocation(line: 6116, column: 72, scope: !1834)
!16851 = !DILocation(line: 6118, column: 5, scope: !1834)
!16852 = !DILocation(line: 6118, column: 14, scope: !1834)
!16853 = !DILocation(line: 6119, column: 5, scope: !1834)
!16854 = !DILocation(line: 6119, column: 16, scope: !1834)
!16855 = !DILocation(line: 6121, column: 9, scope: !16856)
!16856 = distinct !DILexicalBlock(scope: !1834, file: !4, line: 6121, column: 9)
!16857 = !DILocation(line: 6121, column: 13, scope: !16856)
!16858 = !DILocation(line: 6121, column: 9, scope: !1834)
!16859 = !DILocation(line: 6122, column: 20, scope: !16860)
!16860 = distinct !DILexicalBlock(scope: !16856, file: !4, line: 6121, column: 19)
!16861 = !DILocation(line: 6122, column: 28, scope: !16860)
!16862 = !DILocation(line: 6122, column: 9, scope: !16860)
!16863 = !DILocation(line: 6123, column: 9, scope: !16860)
!16864 = !DILocation(line: 6126, column: 20, scope: !16865)
!16865 = distinct !DILexicalBlock(scope: !1834, file: !4, line: 6126, column: 9)
!16866 = !DILocation(line: 6126, column: 28, scope: !16865)
!16867 = !DILocation(line: 6126, column: 34, scope: !16865)
!16868 = !DILocation(line: 6126, column: 10, scope: !16865)
!16869 = !DILocation(line: 6126, column: 9, scope: !1834)
!16870 = !DILocation(line: 6127, column: 9, scope: !16871)
!16871 = distinct !DILexicalBlock(scope: !16865, file: !4, line: 6126, column: 43)
!16872 = !DILocation(line: 6130, column: 26, scope: !1834)
!16873 = !DILocation(line: 6130, column: 18, scope: !1834)
!16874 = !DILocation(line: 6130, column: 9, scope: !1834)
!16875 = !DILocation(line: 6130, column: 7, scope: !1834)
!16876 = !DILocation(line: 6131, column: 5, scope: !1834)
!16877 = !DILocation(line: 6131, column: 14, scope: !16878)
!16878 = !DILexicalBlockFile(scope: !16879, file: !4, discriminator: 2)
!16879 = !DILexicalBlockFile(scope: !1834, file: !4, discriminator: 1)
!16880 = !DILocation(line: 6132, column: 18, scope: !16881)
!16881 = distinct !DILexicalBlock(scope: !1834, file: !4, line: 6131, column: 21)
!16882 = !DILocation(line: 6132, column: 26, scope: !16881)
!16883 = !DILocation(line: 6132, column: 34, scope: !16881)
!16884 = !DILocation(line: 6132, column: 42, scope: !16881)
!16885 = !DILocation(line: 6132, column: 9, scope: !16881)
!16886 = !DILocation(line: 6133, column: 13, scope: !16887)
!16887 = distinct !DILexicalBlock(scope: !16881, file: !4, line: 6133, column: 13)
!16888 = !DILocation(line: 6133, column: 19, scope: !16887)
!16889 = !DILocation(line: 6133, column: 17, scope: !16887)
!16890 = !DILocation(line: 6133, column: 13, scope: !16881)
!16891 = !DILocation(line: 6134, column: 22, scope: !16892)
!16892 = distinct !DILexicalBlock(scope: !16887, file: !4, line: 6133, column: 22)
!16893 = !DILocation(line: 6134, column: 30, scope: !16892)
!16894 = !DILocation(line: 6134, column: 38, scope: !16892)
!16895 = !DILocation(line: 6134, column: 44, scope: !16892)
!16896 = !DILocation(line: 6134, column: 13, scope: !16892)
!16897 = !DILocation(line: 6135, column: 9, scope: !16892)
!16898 = !DILocation(line: 6136, column: 27, scope: !16899)
!16899 = distinct !DILexicalBlock(scope: !16881, file: !4, line: 6136, column: 13)
!16900 = !DILocation(line: 6136, column: 13, scope: !16899)
!16901 = !DILocation(line: 6136, column: 35, scope: !16899)
!16902 = !DILocation(line: 6137, column: 30, scope: !16899)
!16903 = !DILocation(line: 6137, column: 14, scope: !16899)
!16904 = !DILocation(line: 6137, column: 38, scope: !16899)
!16905 = !DILocation(line: 6137, column: 42, scope: !16906)
!16906 = !DILexicalBlockFile(scope: !16899, file: !4, discriminator: 1)
!16907 = !DILocation(line: 6137, column: 53, scope: !16899)
!16908 = !DILocation(line: 6136, column: 13, scope: !16881)
!16909 = !DILocation(line: 6138, column: 13, scope: !16910)
!16910 = distinct !DILexicalBlock(scope: !16899, file: !4, line: 6137, column: 70)
!16911 = !DILocation(line: 6142, column: 16, scope: !1834)
!16912 = !DILocation(line: 6142, column: 6, scope: !1834)
!16913 = !DILocation(line: 6142, column: 13, scope: !1834)
!16914 = !DILocation(line: 6143, column: 18, scope: !1834)
!16915 = !DILocation(line: 6143, column: 26, scope: !1834)
!16916 = !DILocation(line: 6143, column: 5, scope: !1834)
!16917 = !DILocation(line: 6144, column: 1, scope: !1834)
!16918 = !DILocation(line: 6144, column: 1, scope: !16879)
!16919 = !DILocation(line: 107, column: 20, scope: !1846)
!16920 = !DILocation(line: 109, column: 5, scope: !1846)
!16921 = !DILocation(line: 109, column: 16, scope: !1846)
!16922 = !DILocation(line: 118, column: 15, scope: !1846)
!16923 = !DILocation(line: 111, column: 5, scope: !1846)
!16924 = !{i32 150188, i32 150202}
!16925 = !DILocation(line: 122, column: 17, scope: !1846)
!16926 = !DILocation(line: 122, column: 12, scope: !1846)
!16927 = !DILocation(line: 123, column: 1, scope: !1846)
!16928 = !DILocation(line: 122, column: 5, scope: !1846)
!16929 = !DILocation(line: 941, column: 29, scope: !1912)
!16930 = !DILocation(line: 943, column: 5, scope: !1912)
!16931 = !DILocation(line: 943, column: 9, scope: !1912)
!16932 = !DILocation(line: 945, column: 25, scope: !1912)
!16933 = !DILocation(line: 945, column: 9, scope: !1912)
!16934 = !DILocation(line: 945, column: 7, scope: !1912)
!16935 = !DILocation(line: 946, column: 9, scope: !16936)
!16936 = distinct !DILexicalBlock(scope: !1912, file: !4, line: 946, column: 9)
!16937 = !DILocation(line: 946, column: 27, scope: !16936)
!16938 = !DILocation(line: 946, column: 28, scope: !16936)
!16939 = !DILocation(line: 946, column: 17, scope: !16936)
!16940 = !DILocation(line: 946, column: 14, scope: !16936)
!16941 = !DILocation(line: 946, column: 9, scope: !1912)
!16942 = !DILocation(line: 947, column: 9, scope: !16943)
!16943 = distinct !DILexicalBlock(scope: !16936, file: !4, line: 946, column: 33)
!16944 = !DILocation(line: 950, column: 5, scope: !1912)
!16945 = !DILocation(line: 951, column: 1, scope: !1912)
!16946 = !DILocation(line: 5703, column: 22, scope: !1948)
!16947 = !DILocation(line: 5703, column: 43, scope: !1948)
!16948 = !DILocation(line: 5703, column: 59, scope: !1948)
!16949 = !DILocation(line: 5703, column: 72, scope: !1948)
!16950 = !DILocation(line: 5705, column: 24, scope: !16951)
!16951 = distinct !DILexicalBlock(scope: !1948, file: !4, line: 5705, column: 9)
!16952 = !DILocation(line: 5705, column: 9, scope: !16951)
!16953 = !DILocation(line: 5705, column: 9, scope: !1948)
!16954 = !DILocation(line: 5706, column: 24, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16956, file: !4, line: 5706, column: 13)
!16956 = distinct !DILexicalBlock(scope: !16951, file: !4, line: 5705, column: 28)
!16957 = !DILocation(line: 5706, column: 13, scope: !16955)
!16958 = !DILocation(line: 5706, column: 13, scope: !16956)
!16959 = !DILocation(line: 5707, column: 26, scope: !16960)
!16960 = distinct !DILexicalBlock(scope: !16955, file: !4, line: 5706, column: 28)
!16961 = !DILocation(line: 5707, column: 47, scope: !16960)
!16962 = !DILocation(line: 5707, column: 13, scope: !16960)
!16963 = !DILocation(line: 5708, column: 9, scope: !16960)
!16964 = !DILocation(line: 5710, column: 28, scope: !16965)
!16965 = distinct !DILexicalBlock(scope: !16955, file: !4, line: 5709, column: 14)
!16966 = !DILocation(line: 5710, column: 45, scope: !16965)
!16967 = !DILocation(line: 5710, column: 36, scope: !16965)
!16968 = !DILocation(line: 5710, column: 57, scope: !16965)
!16969 = !DILocation(line: 5710, column: 48, scope: !16965)
!16970 = !DILocation(line: 5710, column: 47, scope: !16965)
!16971 = !DILocation(line: 5710, column: 13, scope: !16965)
!16972 = !DILocation(line: 5712, column: 9, scope: !16956)
!16973 = !DILocation(line: 5715, column: 20, scope: !16974)
!16974 = distinct !DILexicalBlock(scope: !1948, file: !4, line: 5715, column: 9)
!16975 = !DILocation(line: 5715, column: 9, scope: !16974)
!16976 = !DILocation(line: 5715, column: 9, scope: !1948)
!16977 = !DILocation(line: 5716, column: 22, scope: !16978)
!16978 = distinct !DILexicalBlock(scope: !16974, file: !4, line: 5715, column: 24)
!16979 = !DILocation(line: 5716, column: 43, scope: !16978)
!16980 = !DILocation(line: 5716, column: 9, scope: !16978)
!16981 = !DILocation(line: 5717, column: 5, scope: !16978)
!16982 = !DILocation(line: 5719, column: 24, scope: !16983)
!16983 = distinct !DILexicalBlock(scope: !16974, file: !4, line: 5718, column: 10)
!16984 = !DILocation(line: 5719, column: 41, scope: !16983)
!16985 = !DILocation(line: 5719, column: 32, scope: !16983)
!16986 = !DILocation(line: 5719, column: 53, scope: !16983)
!16987 = !DILocation(line: 5719, column: 44, scope: !16983)
!16988 = !DILocation(line: 5719, column: 43, scope: !16983)
!16989 = !DILocation(line: 5719, column: 9, scope: !16983)
!16990 = !DILocation(line: 5721, column: 1, scope: !1948)
!16991 = !DILocation(line: 152, column: 27, scope: !1956)
!16992 = !DILocation(line: 152, column: 44, scope: !1956)
!16993 = !DILocation(line: 152, column: 58, scope: !1956)
!16994 = !DILocation(line: 154, column: 5, scope: !1956)
!16995 = !DILocation(line: 154, column: 16, scope: !1956)
!16996 = !DILocation(line: 154, column: 20, scope: !1956)
!16997 = !DILocation(line: 156, column: 30, scope: !1956)
!16998 = !DILocation(line: 156, column: 33, scope: !1956)
!16999 = !DILocation(line: 156, column: 5, scope: !1956)
!17000 = !DILocation(line: 157, column: 23, scope: !1956)
!17001 = !DILocation(line: 157, column: 30, scope: !1956)
!17002 = !DILocation(line: 157, column: 36, scope: !1956)
!17003 = !DILocation(line: 157, column: 40, scope: !1956)
!17004 = !DILocation(line: 157, column: 5, scope: !1956)
!17005 = !DILocation(line: 158, column: 1, scope: !1956)
!17006 = !DILocation(line: 162, column: 27, scope: !1976)
!17007 = !DILocation(line: 162, column: 44, scope: !1976)
!17008 = !DILocation(line: 162, column: 61, scope: !1976)
!17009 = !DILocation(line: 162, column: 79, scope: !1976)
!17010 = !DILocation(line: 164, column: 5, scope: !1976)
!17011 = !DILocation(line: 164, column: 16, scope: !1976)
!17012 = !DILocation(line: 164, column: 20, scope: !1976)
!17013 = !DILocation(line: 166, column: 30, scope: !1976)
!17014 = !DILocation(line: 166, column: 36, scope: !1976)
!17015 = !DILocation(line: 166, column: 5, scope: !1976)
!17016 = !DILocation(line: 167, column: 23, scope: !1976)
!17017 = !DILocation(line: 167, column: 30, scope: !1976)
!17018 = !DILocation(line: 167, column: 36, scope: !1976)
!17019 = !DILocation(line: 167, column: 40, scope: !1976)
!17020 = !DILocation(line: 167, column: 5, scope: !1976)
!17021 = !DILocation(line: 169, column: 30, scope: !1976)
!17022 = !DILocation(line: 169, column: 36, scope: !1976)
!17023 = !DILocation(line: 169, column: 5, scope: !1976)
!17024 = !DILocation(line: 170, column: 10, scope: !1976)
!17025 = !DILocation(line: 170, column: 17, scope: !1976)
!17026 = !DILocation(line: 170, column: 15, scope: !1976)
!17027 = !DILocation(line: 170, column: 8, scope: !1976)
!17028 = !DILocation(line: 171, column: 9, scope: !17029)
!17029 = distinct !DILexicalBlock(scope: !1976, file: !1592, line: 171, column: 9)
!17030 = !DILocation(line: 171, column: 14, scope: !17029)
!17031 = !DILocation(line: 171, column: 12, scope: !17029)
!17032 = !DILocation(line: 171, column: 9, scope: !1976)
!17033 = !DILocation(line: 171, column: 22, scope: !17034)
!17034 = !DILexicalBlockFile(scope: !17029, file: !1592, discriminator: 1)
!17035 = !DILocation(line: 171, column: 20, scope: !17029)
!17036 = !DILocation(line: 172, column: 23, scope: !1976)
!17037 = !DILocation(line: 172, column: 30, scope: !1976)
!17038 = !DILocation(line: 172, column: 36, scope: !1976)
!17039 = !DILocation(line: 172, column: 40, scope: !1976)
!17040 = !DILocation(line: 172, column: 5, scope: !1976)
!17041 = !DILocation(line: 173, column: 9, scope: !17042)
!17042 = distinct !DILexicalBlock(scope: !1976, file: !1592, line: 173, column: 9)
!17043 = !DILocation(line: 173, column: 11, scope: !17042)
!17044 = !DILocation(line: 173, column: 9, scope: !1976)
!17045 = !DILocation(line: 173, column: 17, scope: !17042)
!17046 = !DILocation(line: 175, column: 30, scope: !1976)
!17047 = !DILocation(line: 175, column: 36, scope: !1976)
!17048 = !DILocation(line: 175, column: 5, scope: !1976)
!17049 = !DILocation(line: 176, column: 10, scope: !1976)
!17050 = !DILocation(line: 176, column: 17, scope: !1976)
!17051 = !DILocation(line: 176, column: 15, scope: !1976)
!17052 = !DILocation(line: 176, column: 8, scope: !1976)
!17053 = !DILocation(line: 177, column: 9, scope: !17054)
!17054 = distinct !DILexicalBlock(scope: !1976, file: !1592, line: 177, column: 9)
!17055 = !DILocation(line: 177, column: 14, scope: !17054)
!17056 = !DILocation(line: 177, column: 12, scope: !17054)
!17057 = !DILocation(line: 177, column: 9, scope: !1976)
!17058 = !DILocation(line: 177, column: 22, scope: !17059)
!17059 = !DILexicalBlockFile(scope: !17054, file: !1592, discriminator: 1)
!17060 = !DILocation(line: 177, column: 20, scope: !17054)
!17061 = !DILocation(line: 178, column: 23, scope: !1976)
!17062 = !DILocation(line: 178, column: 30, scope: !1976)
!17063 = !DILocation(line: 178, column: 36, scope: !1976)
!17064 = !DILocation(line: 178, column: 40, scope: !1976)
!17065 = !DILocation(line: 178, column: 5, scope: !1976)
!17066 = !DILocation(line: 180, column: 30, scope: !1976)
!17067 = !DILocation(line: 180, column: 36, scope: !1976)
!17068 = !DILocation(line: 180, column: 5, scope: !1976)
!17069 = !DILocation(line: 181, column: 10, scope: !1976)
!17070 = !DILocation(line: 181, column: 17, scope: !1976)
!17071 = !DILocation(line: 181, column: 15, scope: !1976)
!17072 = !DILocation(line: 181, column: 8, scope: !1976)
!17073 = !DILocation(line: 182, column: 9, scope: !17074)
!17074 = distinct !DILexicalBlock(scope: !1976, file: !1592, line: 182, column: 9)
!17075 = !DILocation(line: 182, column: 14, scope: !17074)
!17076 = !DILocation(line: 182, column: 12, scope: !17074)
!17077 = !DILocation(line: 182, column: 9, scope: !1976)
!17078 = !DILocation(line: 182, column: 22, scope: !17079)
!17079 = !DILexicalBlockFile(scope: !17074, file: !1592, discriminator: 1)
!17080 = !DILocation(line: 182, column: 20, scope: !17074)
!17081 = !DILocation(line: 183, column: 10, scope: !1976)
!17082 = !DILocation(line: 183, column: 17, scope: !1976)
!17083 = !DILocation(line: 183, column: 15, scope: !1976)
!17084 = !DILocation(line: 183, column: 8, scope: !1976)
!17085 = !DILocation(line: 184, column: 9, scope: !17086)
!17086 = distinct !DILexicalBlock(scope: !1976, file: !1592, line: 184, column: 9)
!17087 = !DILocation(line: 184, column: 14, scope: !17086)
!17088 = !DILocation(line: 184, column: 12, scope: !17086)
!17089 = !DILocation(line: 184, column: 9, scope: !1976)
!17090 = !DILocation(line: 184, column: 22, scope: !17091)
!17091 = !DILexicalBlockFile(scope: !17086, file: !1592, discriminator: 1)
!17092 = !DILocation(line: 184, column: 20, scope: !17086)
!17093 = !DILocation(line: 185, column: 23, scope: !1976)
!17094 = !DILocation(line: 185, column: 30, scope: !1976)
!17095 = !DILocation(line: 185, column: 36, scope: !1976)
!17096 = !DILocation(line: 185, column: 40, scope: !1976)
!17097 = !DILocation(line: 185, column: 5, scope: !1976)
!17098 = !DILocation(line: 186, column: 1, scope: !1976)
!17099 = !DILocation(line: 186, column: 1, scope: !17100)
!17100 = !DILexicalBlockFile(scope: !1976, file: !1592, discriminator: 1)
!17101 = !DILocation(line: 5360, column: 29, scope: !1986)
!17102 = !DILocation(line: 5360, column: 50, scope: !1986)
!17103 = !DILocation(line: 5361, column: 22, scope: !1986)
!17104 = !DILocation(line: 5361, column: 39, scope: !1986)
!17105 = !DILocation(line: 5362, column: 23, scope: !1986)
!17106 = !DILocation(line: 5364, column: 5, scope: !1986)
!17107 = !DILocation(line: 5364, column: 17, scope: !1986)
!17108 = !DILocation(line: 5364, column: 39, scope: !1986)
!17109 = !DILocation(line: 5365, column: 5, scope: !1986)
!17110 = !DILocation(line: 5365, column: 16, scope: !1986)
!17111 = !DILocation(line: 5370, column: 31, scope: !1986)
!17112 = !DILocation(line: 5370, column: 37, scope: !1986)
!17113 = !DILocation(line: 5370, column: 14, scope: !1986)
!17114 = !DILocation(line: 5370, column: 6, scope: !1986)
!17115 = !DILocation(line: 5370, column: 12, scope: !1986)
!17116 = !DILocation(line: 5371, column: 31, scope: !17117)
!17117 = distinct !DILexicalBlock(scope: !1986, file: !4, line: 5371, column: 9)
!17118 = !DILocation(line: 5371, column: 30, scope: !17117)
!17119 = !DILocation(line: 5371, column: 19, scope: !17117)
!17120 = !DILocation(line: 5371, column: 17, scope: !17117)
!17121 = !DILocation(line: 5371, column: 55, scope: !17117)
!17122 = !DILocation(line: 5371, column: 9, scope: !1986)
!17123 = !DILocation(line: 5372, column: 9, scope: !17124)
!17124 = distinct !DILexicalBlock(scope: !17117, file: !4, line: 5371, column: 70)
!17125 = !DILocation(line: 5375, column: 24, scope: !1986)
!17126 = !DILocation(line: 5375, column: 9, scope: !1986)
!17127 = !DILocation(line: 5375, column: 7, scope: !1986)
!17128 = !DILocation(line: 5376, column: 9, scope: !17129)
!17129 = distinct !DILexicalBlock(scope: !1986, file: !4, line: 5376, column: 9)
!17130 = !DILocation(line: 5376, column: 11, scope: !17129)
!17131 = !DILocation(line: 5376, column: 31, scope: !17132)
!17132 = !DILexicalBlockFile(scope: !17129, file: !4, discriminator: 1)
!17133 = !DILocation(line: 5376, column: 20, scope: !17129)
!17134 = !DILocation(line: 5376, column: 18, scope: !17129)
!17135 = !DILocation(line: 5376, column: 46, scope: !17129)
!17136 = !DILocation(line: 5376, column: 9, scope: !1986)
!17137 = !DILocation(line: 5377, column: 9, scope: !17138)
!17138 = distinct !DILexicalBlock(scope: !17129, file: !4, line: 5376, column: 62)
!17139 = !DILocation(line: 5377, column: 18, scope: !17138)
!17140 = !DILocation(line: 5378, column: 9, scope: !17138)
!17141 = !DILocation(line: 5381, column: 20, scope: !1986)
!17142 = !DILocation(line: 5381, column: 28, scope: !1986)
!17143 = !DILocation(line: 5381, column: 31, scope: !1986)
!17144 = !DILocation(line: 5381, column: 34, scope: !1986)
!17145 = !DILocation(line: 5381, column: 37, scope: !1986)
!17146 = !DILocation(line: 5381, column: 43, scope: !1986)
!17147 = !DILocation(line: 5381, column: 5, scope: !1986)
!17148 = !DILocation(line: 5384, column: 9, scope: !17149)
!17149 = distinct !DILexicalBlock(scope: !1986, file: !4, line: 5384, column: 9)
!17150 = !DILocation(line: 5384, column: 9, scope: !1986)
!17151 = !DILocation(line: 5384, column: 12, scope: !17152)
!17152 = !DILexicalBlockFile(scope: !17149, file: !4, discriminator: 1)
!17153 = !DILocation(line: 5384, column: 21, scope: !17149)
!17154 = !DILocation(line: 5384, column: 12, scope: !17149)
!17155 = !DILocation(line: 5385, column: 12, scope: !1986)
!17156 = !DILocation(line: 5385, column: 5, scope: !1986)
!17157 = !DILocation(line: 5386, column: 1, scope: !1986)
!17158 = !DILocation(line: 5483, column: 31, scope: !2034)
!17159 = !DILocation(line: 5483, column: 52, scope: !2034)
!17160 = !DILocation(line: 5484, column: 24, scope: !2034)
!17161 = !DILocation(line: 5484, column: 41, scope: !2034)
!17162 = !DILocation(line: 5485, column: 25, scope: !2034)
!17163 = !DILocation(line: 5487, column: 5, scope: !2034)
!17164 = !DILocation(line: 5487, column: 17, scope: !2034)
!17165 = !DILocation(line: 5487, column: 35, scope: !2034)
!17166 = !DILocation(line: 5487, column: 53, scope: !2034)
!17167 = !DILocation(line: 5487, column: 71, scope: !2034)
!17168 = !DILocation(line: 5488, column: 5, scope: !2034)
!17169 = !DILocation(line: 5488, column: 16, scope: !2034)
!17170 = !DILocation(line: 5495, column: 25, scope: !2034)
!17171 = !DILocation(line: 5495, column: 31, scope: !2034)
!17172 = !DILocation(line: 5495, column: 14, scope: !2034)
!17173 = !DILocation(line: 5495, column: 6, scope: !2034)
!17174 = !DILocation(line: 5495, column: 12, scope: !2034)
!17175 = !DILocation(line: 5496, column: 38, scope: !17176)
!17176 = distinct !DILexicalBlock(scope: !2034, file: !4, line: 5496, column: 9)
!17177 = !DILocation(line: 5496, column: 37, scope: !17176)
!17178 = !DILocation(line: 5496, column: 14, scope: !17176)
!17179 = !DILocation(line: 5496, column: 12, scope: !17176)
!17180 = !DILocation(line: 5496, column: 46, scope: !17176)
!17181 = !DILocation(line: 5496, column: 9, scope: !2034)
!17182 = !DILocation(line: 5497, column: 9, scope: !17183)
!17183 = distinct !DILexicalBlock(scope: !17176, file: !4, line: 5496, column: 75)
!17184 = !DILocation(line: 5500, column: 26, scope: !17185)
!17185 = distinct !DILexicalBlock(scope: !2034, file: !4, line: 5500, column: 9)
!17186 = !DILocation(line: 5500, column: 15, scope: !17185)
!17187 = !DILocation(line: 5500, column: 13, scope: !17185)
!17188 = !DILocation(line: 5500, column: 42, scope: !17185)
!17189 = !DILocation(line: 5500, column: 9, scope: !2034)
!17190 = !DILocation(line: 5501, column: 9, scope: !17191)
!17191 = distinct !DILexicalBlock(scope: !17185, file: !4, line: 5500, column: 57)
!17192 = !DILocation(line: 5503, column: 26, scope: !17193)
!17193 = distinct !DILexicalBlock(scope: !2034, file: !4, line: 5503, column: 9)
!17194 = !DILocation(line: 5503, column: 15, scope: !17193)
!17195 = !DILocation(line: 5503, column: 13, scope: !17193)
!17196 = !DILocation(line: 5503, column: 42, scope: !17193)
!17197 = !DILocation(line: 5503, column: 9, scope: !2034)
!17198 = !DILocation(line: 5504, column: 9, scope: !17199)
!17199 = distinct !DILexicalBlock(scope: !17193, file: !4, line: 5503, column: 57)
!17200 = !DILocation(line: 5506, column: 26, scope: !17201)
!17201 = distinct !DILexicalBlock(scope: !2034, file: !4, line: 5506, column: 9)
!17202 = !DILocation(line: 5506, column: 15, scope: !17201)
!17203 = !DILocation(line: 5506, column: 13, scope: !17201)
!17204 = !DILocation(line: 5506, column: 42, scope: !17201)
!17205 = !DILocation(line: 5506, column: 9, scope: !2034)
!17206 = !DILocation(line: 5507, column: 9, scope: !17207)
!17207 = distinct !DILexicalBlock(scope: !17201, file: !4, line: 5506, column: 57)
!17208 = !DILocation(line: 5510, column: 12, scope: !2034)
!17209 = !DILocation(line: 5510, column: 5, scope: !2034)
!17210 = !DILocation(line: 5510, column: 16, scope: !2034)
!17211 = !DILocation(line: 5510, column: 19, scope: !2034)
!17212 = !DILocation(line: 5510, column: 24, scope: !2034)
!17213 = !DILocation(line: 5511, column: 12, scope: !2034)
!17214 = !DILocation(line: 5511, column: 5, scope: !2034)
!17215 = !DILocation(line: 5511, column: 16, scope: !2034)
!17216 = !DILocation(line: 5511, column: 19, scope: !2034)
!17217 = !DILocation(line: 5511, column: 24, scope: !2034)
!17218 = !DILocation(line: 5512, column: 12, scope: !2034)
!17219 = !DILocation(line: 5512, column: 5, scope: !2034)
!17220 = !DILocation(line: 5512, column: 16, scope: !2034)
!17221 = !DILocation(line: 5512, column: 19, scope: !2034)
!17222 = !DILocation(line: 5512, column: 24, scope: !2034)
!17223 = !DILocation(line: 5514, column: 9, scope: !17224)
!17224 = distinct !DILexicalBlock(scope: !2034, file: !4, line: 5514, column: 9)
!17225 = !DILocation(line: 5514, column: 14, scope: !17224)
!17226 = !DILocation(line: 5514, column: 11, scope: !17224)
!17227 = !DILocation(line: 5514, column: 9, scope: !2034)
!17228 = !DILocation(line: 5515, column: 32, scope: !17229)
!17229 = distinct !DILexicalBlock(scope: !17230, file: !4, line: 5515, column: 13)
!17230 = distinct !DILexicalBlock(scope: !17224, file: !4, line: 5514, column: 17)
!17231 = !DILocation(line: 5515, column: 36, scope: !17229)
!17232 = !DILocation(line: 5515, column: 14, scope: !17229)
!17233 = !DILocation(line: 5515, column: 43, scope: !17229)
!17234 = !DILocation(line: 5516, column: 32, scope: !17229)
!17235 = !DILocation(line: 5516, column: 36, scope: !17229)
!17236 = !DILocation(line: 5516, column: 14, scope: !17229)
!17237 = !DILocation(line: 5516, column: 43, scope: !17229)
!17238 = !DILocation(line: 5517, column: 32, scope: !17229)
!17239 = !DILocation(line: 5517, column: 36, scope: !17229)
!17240 = !DILocation(line: 5517, column: 14, scope: !17229)
!17241 = !DILocation(line: 5515, column: 13, scope: !17230)
!17242 = !DILocation(line: 5518, column: 13, scope: !17243)
!17243 = distinct !DILexicalBlock(scope: !17229, file: !4, line: 5517, column: 44)
!17244 = !DILocation(line: 5520, column: 5, scope: !17230)
!17245 = !DILocation(line: 5522, column: 32, scope: !17246)
!17246 = distinct !DILexicalBlock(scope: !17247, file: !4, line: 5522, column: 13)
!17247 = distinct !DILexicalBlock(scope: !17224, file: !4, line: 5521, column: 10)
!17248 = !DILocation(line: 5522, column: 21, scope: !17246)
!17249 = !DILocation(line: 5522, column: 19, scope: !17246)
!17250 = !DILocation(line: 5522, column: 50, scope: !17246)
!17251 = !DILocation(line: 5522, column: 13, scope: !17247)
!17252 = !DILocation(line: 5523, column: 13, scope: !17253)
!17253 = distinct !DILexicalBlock(scope: !17246, file: !4, line: 5522, column: 65)
!17254 = !DILocation(line: 5526, column: 16, scope: !17247)
!17255 = !DILocation(line: 5526, column: 9, scope: !17247)
!17256 = !DILocation(line: 5526, column: 22, scope: !17247)
!17257 = !DILocation(line: 5526, column: 25, scope: !17247)
!17258 = !DILocation(line: 5526, column: 30, scope: !17247)
!17259 = !DILocation(line: 5527, column: 28, scope: !17260)
!17260 = distinct !DILexicalBlock(scope: !17247, file: !4, line: 5527, column: 13)
!17261 = !DILocation(line: 5527, column: 32, scope: !17260)
!17262 = !DILocation(line: 5527, column: 38, scope: !17260)
!17263 = !DILocation(line: 5527, column: 14, scope: !17260)
!17264 = !DILocation(line: 5527, column: 13, scope: !17247)
!17265 = !DILocation(line: 5528, column: 13, scope: !17266)
!17266 = distinct !DILexicalBlock(scope: !17260, file: !4, line: 5527, column: 46)
!17267 = !DILocation(line: 5528, column: 22, scope: !17266)
!17268 = !DILocation(line: 5529, column: 13, scope: !17266)
!17269 = !DILocation(line: 5532, column: 16, scope: !17247)
!17270 = !DILocation(line: 5532, column: 9, scope: !17247)
!17271 = !DILocation(line: 5532, column: 22, scope: !17247)
!17272 = !DILocation(line: 5532, column: 25, scope: !17247)
!17273 = !DILocation(line: 5532, column: 30, scope: !17247)
!17274 = !DILocation(line: 5533, column: 23, scope: !17247)
!17275 = !DILocation(line: 5533, column: 28, scope: !17247)
!17276 = !DILocation(line: 5533, column: 27, scope: !17247)
!17277 = !DILocation(line: 5533, column: 34, scope: !17247)
!17278 = !DILocation(line: 5533, column: 36, scope: !17247)
!17279 = !DILocation(line: 5533, column: 35, scope: !17247)
!17280 = !DILocation(line: 5533, column: 9, scope: !17247)
!17281 = !DILocation(line: 5534, column: 28, scope: !17282)
!17282 = distinct !DILexicalBlock(scope: !17247, file: !4, line: 5534, column: 13)
!17283 = !DILocation(line: 5534, column: 32, scope: !17282)
!17284 = !DILocation(line: 5534, column: 38, scope: !17282)
!17285 = !DILocation(line: 5534, column: 14, scope: !17282)
!17286 = !DILocation(line: 5534, column: 13, scope: !17247)
!17287 = !DILocation(line: 5535, column: 13, scope: !17288)
!17288 = distinct !DILexicalBlock(scope: !17282, file: !4, line: 5534, column: 46)
!17289 = !DILocation(line: 5535, column: 22, scope: !17288)
!17290 = !DILocation(line: 5536, column: 13, scope: !17288)
!17291 = !DILocation(line: 5539, column: 16, scope: !17247)
!17292 = !DILocation(line: 5539, column: 9, scope: !17247)
!17293 = !DILocation(line: 5539, column: 22, scope: !17247)
!17294 = !DILocation(line: 5539, column: 25, scope: !17247)
!17295 = !DILocation(line: 5539, column: 30, scope: !17247)
!17296 = !DILocation(line: 5540, column: 23, scope: !17247)
!17297 = !DILocation(line: 5540, column: 28, scope: !17247)
!17298 = !DILocation(line: 5540, column: 27, scope: !17247)
!17299 = !DILocation(line: 5540, column: 34, scope: !17247)
!17300 = !DILocation(line: 5540, column: 36, scope: !17247)
!17301 = !DILocation(line: 5540, column: 35, scope: !17247)
!17302 = !DILocation(line: 5540, column: 9, scope: !17247)
!17303 = !DILocation(line: 5541, column: 28, scope: !17304)
!17304 = distinct !DILexicalBlock(scope: !17247, file: !4, line: 5541, column: 13)
!17305 = !DILocation(line: 5541, column: 32, scope: !17304)
!17306 = !DILocation(line: 5541, column: 38, scope: !17304)
!17307 = !DILocation(line: 5541, column: 14, scope: !17304)
!17308 = !DILocation(line: 5541, column: 13, scope: !17247)
!17309 = !DILocation(line: 5542, column: 13, scope: !17310)
!17310 = distinct !DILexicalBlock(scope: !17304, file: !4, line: 5541, column: 46)
!17311 = !DILocation(line: 5542, column: 22, scope: !17310)
!17312 = !DILocation(line: 5543, column: 13, scope: !17310)
!17313 = !DILocation(line: 5546, column: 9, scope: !17247)
!17314 = !DILocation(line: 5546, column: 18, scope: !17247)
!17315 = !DILocation(line: 5549, column: 10, scope: !2034)
!17316 = !DILocation(line: 5549, column: 14, scope: !2034)
!17317 = !DILocation(line: 5549, column: 18, scope: !2034)
!17318 = !DILocation(line: 5549, column: 23, scope: !2034)
!17319 = !DILocation(line: 5549, column: 22, scope: !2034)
!17320 = !DILocation(line: 5549, column: 5, scope: !2034)
!17321 = !DILocation(line: 5555, column: 9, scope: !17322)
!17322 = distinct !DILexicalBlock(scope: !2034, file: !4, line: 5555, column: 9)
!17323 = !DILocation(line: 5555, column: 9, scope: !2034)
!17324 = !DILocation(line: 5555, column: 13, scope: !17325)
!17325 = !DILexicalBlockFile(scope: !17322, file: !4, discriminator: 1)
!17326 = !DILocation(line: 5555, column: 22, scope: !17322)
!17327 = !DILocation(line: 5555, column: 13, scope: !17322)
!17328 = !DILocation(line: 5556, column: 9, scope: !17329)
!17329 = distinct !DILexicalBlock(scope: !2034, file: !4, line: 5556, column: 9)
!17330 = !DILocation(line: 5556, column: 9, scope: !2034)
!17331 = !DILocation(line: 5556, column: 13, scope: !17332)
!17332 = !DILexicalBlockFile(scope: !17329, file: !4, discriminator: 1)
!17333 = !DILocation(line: 5556, column: 22, scope: !17329)
!17334 = !DILocation(line: 5556, column: 13, scope: !17329)
!17335 = !DILocation(line: 5557, column: 12, scope: !2034)
!17336 = !DILocation(line: 5563, column: 1, scope: !2034)
!17337 = !DILocation(line: 5557, column: 5, scope: !2034)
!17338 = !DILocation(line: 5560, column: 9, scope: !17339)
!17339 = distinct !DILexicalBlock(scope: !2034, file: !4, line: 5560, column: 9)
!17340 = !DILocation(line: 5560, column: 9, scope: !2034)
!17341 = !DILocation(line: 5560, column: 13, scope: !17342)
!17342 = !DILexicalBlockFile(scope: !17339, file: !4, discriminator: 1)
!17343 = !DILocation(line: 5560, column: 22, scope: !17339)
!17344 = !DILocation(line: 5560, column: 13, scope: !17339)
!17345 = !DILocation(line: 5561, column: 8, scope: !2034)
!17346 = !DILocation(line: 5562, column: 5, scope: !2034)
!17347 = !DILocation(line: 5669, column: 33, scope: !2054)
!17348 = !DILocation(line: 5669, column: 54, scope: !2054)
!17349 = !DILocation(line: 5670, column: 26, scope: !2054)
!17350 = !DILocation(line: 5670, column: 43, scope: !2054)
!17351 = !DILocation(line: 5671, column: 27, scope: !2054)
!17352 = !DILocation(line: 5673, column: 5, scope: !2054)
!17353 = !DILocation(line: 5673, column: 17, scope: !2054)
!17354 = !DILocation(line: 5673, column: 39, scope: !2054)
!17355 = !DILocation(line: 5674, column: 5, scope: !2054)
!17356 = !DILocation(line: 5674, column: 16, scope: !2054)
!17357 = !DILocation(line: 5679, column: 31, scope: !2054)
!17358 = !DILocation(line: 5679, column: 37, scope: !2054)
!17359 = !DILocation(line: 5679, column: 14, scope: !2054)
!17360 = !DILocation(line: 5679, column: 6, scope: !2054)
!17361 = !DILocation(line: 5679, column: 12, scope: !2054)
!17362 = !DILocation(line: 5680, column: 31, scope: !17363)
!17363 = distinct !DILexicalBlock(scope: !2054, file: !4, line: 5680, column: 9)
!17364 = !DILocation(line: 5680, column: 30, scope: !17363)
!17365 = !DILocation(line: 5680, column: 19, scope: !17363)
!17366 = !DILocation(line: 5680, column: 17, scope: !17363)
!17367 = !DILocation(line: 5680, column: 55, scope: !17363)
!17368 = !DILocation(line: 5680, column: 9, scope: !2054)
!17369 = !DILocation(line: 5681, column: 9, scope: !17370)
!17370 = distinct !DILexicalBlock(scope: !17363, file: !4, line: 5680, column: 70)
!17371 = !DILocation(line: 5684, column: 24, scope: !2054)
!17372 = !DILocation(line: 5684, column: 9, scope: !2054)
!17373 = !DILocation(line: 5684, column: 7, scope: !2054)
!17374 = !DILocation(line: 5685, column: 9, scope: !17375)
!17375 = distinct !DILexicalBlock(scope: !2054, file: !4, line: 5685, column: 9)
!17376 = !DILocation(line: 5685, column: 11, scope: !17375)
!17377 = !DILocation(line: 5685, column: 31, scope: !17378)
!17378 = !DILexicalBlockFile(scope: !17375, file: !4, discriminator: 1)
!17379 = !DILocation(line: 5685, column: 20, scope: !17375)
!17380 = !DILocation(line: 5685, column: 18, scope: !17375)
!17381 = !DILocation(line: 5685, column: 46, scope: !17375)
!17382 = !DILocation(line: 5685, column: 9, scope: !2054)
!17383 = !DILocation(line: 5686, column: 9, scope: !17384)
!17384 = distinct !DILexicalBlock(scope: !17375, file: !4, line: 5685, column: 62)
!17385 = !DILocation(line: 5686, column: 18, scope: !17384)
!17386 = !DILocation(line: 5687, column: 9, scope: !17384)
!17387 = !DILocation(line: 5690, column: 29, scope: !17388)
!17388 = distinct !DILexicalBlock(scope: !2054, file: !4, line: 5690, column: 9)
!17389 = !DILocation(line: 5690, column: 37, scope: !17388)
!17390 = !DILocation(line: 5690, column: 40, scope: !17388)
!17391 = !DILocation(line: 5690, column: 43, scope: !17388)
!17392 = !DILocation(line: 5690, column: 46, scope: !17388)
!17393 = !DILocation(line: 5690, column: 52, scope: !17388)
!17394 = !DILocation(line: 5690, column: 10, scope: !17388)
!17395 = !DILocation(line: 5690, column: 9, scope: !2054)
!17396 = !DILocation(line: 5691, column: 9, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17388, file: !4, line: 5690, column: 59)
!17398 = !DILocation(line: 5691, column: 18, scope: !17397)
!17399 = !DILocation(line: 5692, column: 16, scope: !17397)
!17400 = !DILocation(line: 5693, column: 5, scope: !17397)
!17401 = !DILocation(line: 5696, column: 9, scope: !17402)
!17402 = distinct !DILexicalBlock(scope: !2054, file: !4, line: 5696, column: 9)
!17403 = !DILocation(line: 5696, column: 9, scope: !2054)
!17404 = !DILocation(line: 5696, column: 12, scope: !17405)
!17405 = !DILexicalBlockFile(scope: !17402, file: !4, discriminator: 1)
!17406 = !DILocation(line: 5696, column: 21, scope: !17402)
!17407 = !DILocation(line: 5696, column: 12, scope: !17402)
!17408 = !DILocation(line: 5697, column: 12, scope: !2054)
!17409 = !DILocation(line: 5697, column: 5, scope: !2054)
!17410 = !DILocation(line: 5698, column: 1, scope: !2054)
!17411 = !DILocation(line: 99, column: 30, scope: !1965)
!17412 = !DILocation(line: 99, column: 45, scope: !1965)
!17413 = !DILocation(line: 99, column: 59, scope: !1965)
!17414 = !DILocation(line: 99, column: 74, scope: !1965)
!17415 = !DILocation(line: 101, column: 5, scope: !1965)
!17416 = !DILocation(line: 101, column: 16, scope: !1965)
!17417 = !DILocation(line: 101, column: 23, scope: !1965)
!17418 = !DILocation(line: 101, column: 26, scope: !1965)
!17419 = !DILocation(line: 101, column: 29, scope: !1965)
!17420 = !DILocation(line: 102, column: 5, scope: !1965)
!17421 = !DILocation(line: 102, column: 16, scope: !1965)
!17422 = !DILocation(line: 105, column: 15, scope: !1965)
!17423 = !DILocation(line: 105, column: 18, scope: !1965)
!17424 = !DILocation(line: 105, column: 14, scope: !1965)
!17425 = !DILocation(line: 105, column: 12, scope: !1965)
!17426 = !DILocation(line: 107, column: 13, scope: !1965)
!17427 = !DILocation(line: 107, column: 19, scope: !1965)
!17428 = !DILocation(line: 107, column: 26, scope: !1965)
!17429 = !DILocation(line: 107, column: 16, scope: !1965)
!17430 = !DILocation(line: 107, column: 11, scope: !1965)
!17431 = !DILocation(line: 110, column: 28, scope: !1965)
!17432 = !DILocation(line: 110, column: 40, scope: !1965)
!17433 = !DILocation(line: 110, column: 43, scope: !1965)
!17434 = !DILocation(line: 110, column: 42, scope: !1965)
!17435 = !DILocation(line: 110, column: 5, scope: !1965)
!17436 = !DILocation(line: 111, column: 9, scope: !1965)
!17437 = !DILocation(line: 111, column: 13, scope: !1965)
!17438 = !DILocation(line: 111, column: 11, scope: !1965)
!17439 = !DILocation(line: 111, column: 7, scope: !1965)
!17440 = !DILocation(line: 112, column: 9, scope: !17441)
!17441 = distinct !DILexicalBlock(scope: !1965, file: !1592, line: 112, column: 9)
!17442 = !DILocation(line: 112, column: 13, scope: !17441)
!17443 = !DILocation(line: 112, column: 11, scope: !17441)
!17444 = !DILocation(line: 112, column: 9, scope: !1965)
!17445 = !DILocation(line: 112, column: 21, scope: !17446)
!17446 = !DILexicalBlockFile(scope: !17441, file: !1592, discriminator: 1)
!17447 = !DILocation(line: 112, column: 20, scope: !17441)
!17448 = !DILocation(line: 113, column: 9, scope: !1965)
!17449 = !DILocation(line: 113, column: 13, scope: !1965)
!17450 = !DILocation(line: 113, column: 11, scope: !1965)
!17451 = !DILocation(line: 113, column: 7, scope: !1965)
!17452 = !DILocation(line: 119, column: 36, scope: !1965)
!17453 = !DILocation(line: 119, column: 34, scope: !1965)
!17454 = !DILocation(line: 119, column: 7, scope: !1965)
!17455 = !DILocation(line: 122, column: 28, scope: !1965)
!17456 = !DILocation(line: 122, column: 5, scope: !1965)
!17457 = !DILocation(line: 123, column: 9, scope: !1965)
!17458 = !DILocation(line: 123, column: 13, scope: !1965)
!17459 = !DILocation(line: 123, column: 11, scope: !1965)
!17460 = !DILocation(line: 123, column: 7, scope: !1965)
!17461 = !DILocation(line: 124, column: 9, scope: !17462)
!17462 = distinct !DILexicalBlock(scope: !1965, file: !1592, line: 124, column: 9)
!17463 = !DILocation(line: 124, column: 13, scope: !17462)
!17464 = !DILocation(line: 124, column: 11, scope: !17462)
!17465 = !DILocation(line: 124, column: 9, scope: !1965)
!17466 = !DILocation(line: 124, column: 18, scope: !17467)
!17467 = !DILexicalBlockFile(scope: !17462, file: !1592, discriminator: 1)
!17468 = !DILocation(line: 124, column: 17, scope: !17462)
!17469 = !DILocation(line: 125, column: 10, scope: !1965)
!17470 = !DILocation(line: 125, column: 7, scope: !1965)
!17471 = !DILocation(line: 126, column: 7, scope: !1965)
!17472 = !DILocation(line: 138, column: 11, scope: !1965)
!17473 = !DILocation(line: 138, column: 15, scope: !1965)
!17474 = !DILocation(line: 138, column: 13, scope: !1965)
!17475 = !DILocation(line: 138, column: 6, scope: !1965)
!17476 = !DILocation(line: 138, column: 8, scope: !1965)
!17477 = !DILocation(line: 139, column: 10, scope: !1965)
!17478 = !DILocation(line: 139, column: 41, scope: !1965)
!17479 = !DILocation(line: 139, column: 39, scope: !1965)
!17480 = !DILocation(line: 139, column: 12, scope: !1965)
!17481 = !DILocation(line: 139, column: 6, scope: !1965)
!17482 = !DILocation(line: 139, column: 8, scope: !1965)
!17483 = !DILocation(line: 140, column: 1, scope: !1965)
!17484 = !DILocation(line: 5246, column: 29, scope: !1999)
!17485 = !DILocation(line: 5246, column: 44, scope: !1999)
!17486 = !DILocation(line: 5248, column: 5, scope: !1999)
!17487 = !DILocation(line: 5248, column: 16, scope: !1999)
!17488 = !DILocation(line: 5248, column: 19, scope: !1999)
!17489 = !DILocation(line: 5250, column: 20, scope: !1999)
!17490 = !DILocation(line: 5250, column: 24, scope: !1999)
!17491 = !DILocation(line: 5250, column: 9, scope: !1999)
!17492 = !DILocation(line: 5250, column: 7, scope: !1999)
!17493 = !DILocation(line: 5251, column: 20, scope: !1999)
!17494 = !DILocation(line: 5251, column: 9, scope: !1999)
!17495 = !DILocation(line: 5251, column: 7, scope: !1999)
!17496 = !DILocation(line: 5253, column: 10, scope: !1999)
!17497 = !DILocation(line: 5253, column: 12, scope: !1999)
!17498 = !DILocation(line: 5253, column: 15, scope: !1999)
!17499 = !DILocation(line: 5253, column: 18, scope: !1999)
!17500 = !DILocation(line: 5253, column: 7, scope: !1999)
!17501 = !DILocation(line: 5254, column: 20, scope: !1999)
!17502 = !DILocation(line: 5254, column: 9, scope: !1999)
!17503 = !DILocation(line: 5254, column: 7, scope: !1999)
!17504 = !DILocation(line: 5256, column: 13, scope: !1999)
!17505 = !DILocation(line: 5256, column: 17, scope: !1999)
!17506 = !DILocation(line: 5256, column: 15, scope: !1999)
!17507 = !DILocation(line: 5256, column: 12, scope: !1999)
!17508 = !DILocation(line: 5256, column: 22, scope: !17509)
!17509 = !DILexicalBlockFile(scope: !1999, file: !4, discriminator: 1)
!17510 = !DILocation(line: 5256, column: 26, scope: !17511)
!17511 = !DILexicalBlockFile(scope: !1999, file: !4, discriminator: 2)
!17512 = !DILocation(line: 5257, column: 1, scope: !1999)
!17513 = !DILocation(line: 5256, column: 5, scope: !1999)
!17514 = !DILocation(line: 5261, column: 27, scope: !2017)
!17515 = !DILocation(line: 5261, column: 41, scope: !2017)
!17516 = !DILocation(line: 5263, column: 5, scope: !2017)
!17517 = !DILocation(line: 5263, column: 16, scope: !2017)
!17518 = !DILocation(line: 5265, column: 9, scope: !17519)
!17519 = distinct !DILexicalBlock(scope: !2017, file: !4, line: 5265, column: 9)
!17520 = !DILocation(line: 5265, column: 14, scope: !17519)
!17521 = !DILocation(line: 5265, column: 11, scope: !17519)
!17522 = !DILocation(line: 5265, column: 9, scope: !2017)
!17523 = !DILocation(line: 5266, column: 9, scope: !17524)
!17524 = distinct !DILexicalBlock(scope: !17519, file: !4, line: 5265, column: 19)
!17525 = !DILocation(line: 5269, column: 10, scope: !2017)
!17526 = !DILocation(line: 5269, column: 11, scope: !2017)
!17527 = !DILocation(line: 5269, column: 14, scope: !2017)
!17528 = !DILocation(line: 5269, column: 17, scope: !2017)
!17529 = !DILocation(line: 5269, column: 7, scope: !2017)
!17530 = !DILocation(line: 5271, column: 34, scope: !2017)
!17531 = !DILocation(line: 5271, column: 23, scope: !2017)
!17532 = !DILocation(line: 5271, column: 56, scope: !2017)
!17533 = !DILocation(line: 5271, column: 59, scope: !2017)
!17534 = !DILocation(line: 5271, column: 41, scope: !2017)
!17535 = !DILocation(line: 5271, column: 12, scope: !2017)
!17536 = !DILocation(line: 5271, column: 5, scope: !2017)
!17537 = !DILocation(line: 5272, column: 1, scope: !2017)
!17538 = !DILocation(line: 5286, column: 28, scope: !2022)
!17539 = !DILocation(line: 5286, column: 49, scope: !2022)
!17540 = !DILocation(line: 5286, column: 70, scope: !2022)
!17541 = !DILocation(line: 5287, column: 28, scope: !2022)
!17542 = !DILocation(line: 5287, column: 42, scope: !2022)
!17543 = !DILocation(line: 5287, column: 57, scope: !2022)
!17544 = !DILocation(line: 5289, column: 5, scope: !2022)
!17545 = !DILocation(line: 5289, column: 16, scope: !2022)
!17546 = !DILocation(line: 5289, column: 19, scope: !2022)
!17547 = !DILocation(line: 5294, column: 9, scope: !17548)
!17548 = distinct !DILexicalBlock(scope: !2022, file: !4, line: 5294, column: 9)
!17549 = !DILocation(line: 5294, column: 12, scope: !17548)
!17550 = !DILocation(line: 5294, column: 9, scope: !2022)
!17551 = !DILocation(line: 5295, column: 22, scope: !17552)
!17552 = distinct !DILexicalBlock(scope: !17548, file: !4, line: 5294, column: 19)
!17553 = !DILocation(line: 5295, column: 25, scope: !17552)
!17554 = !DILocation(line: 5295, column: 28, scope: !17552)
!17555 = !DILocation(line: 5295, column: 31, scope: !17552)
!17556 = !DILocation(line: 5295, column: 35, scope: !17552)
!17557 = !DILocation(line: 5295, column: 9, scope: !17552)
!17558 = !DILocation(line: 5296, column: 9, scope: !17552)
!17559 = !DILocation(line: 5299, column: 10, scope: !2022)
!17560 = !DILocation(line: 5299, column: 12, scope: !2022)
!17561 = !DILocation(line: 5299, column: 15, scope: !2022)
!17562 = !DILocation(line: 5299, column: 7, scope: !2022)
!17563 = !DILocation(line: 5302, column: 9, scope: !17564)
!17564 = distinct !DILexicalBlock(scope: !2022, file: !4, line: 5302, column: 9)
!17565 = !DILocation(line: 5302, column: 15, scope: !17564)
!17566 = !DILocation(line: 5302, column: 12, scope: !17564)
!17567 = !DILocation(line: 5302, column: 9, scope: !2022)
!17568 = !DILocation(line: 5305, column: 13, scope: !17569)
!17569 = distinct !DILexicalBlock(scope: !17570, file: !4, line: 5305, column: 13)
!17570 = distinct !DILexicalBlock(scope: !17564, file: !4, line: 5302, column: 18)
!17571 = !DILocation(line: 5305, column: 18, scope: !17569)
!17572 = !DILocation(line: 5305, column: 21, scope: !17569)
!17573 = !DILocation(line: 5305, column: 20, scope: !17569)
!17574 = !DILocation(line: 5305, column: 16, scope: !17569)
!17575 = !DILocation(line: 5305, column: 13, scope: !17570)
!17576 = !DILocation(line: 5306, column: 18, scope: !17577)
!17577 = distinct !DILexicalBlock(scope: !17569, file: !4, line: 5305, column: 24)
!17578 = !DILocation(line: 5306, column: 23, scope: !17577)
!17579 = !DILocation(line: 5306, column: 21, scope: !17577)
!17580 = !DILocation(line: 5306, column: 26, scope: !17577)
!17581 = !DILocation(line: 5306, column: 16, scope: !17577)
!17582 = !DILocation(line: 5307, column: 27, scope: !17577)
!17583 = !DILocation(line: 5307, column: 30, scope: !17577)
!17584 = !DILocation(line: 5307, column: 13, scope: !17577)
!17585 = !DILocation(line: 5308, column: 28, scope: !17577)
!17586 = !DILocation(line: 5308, column: 31, scope: !17577)
!17587 = !DILocation(line: 5308, column: 34, scope: !17577)
!17588 = !DILocation(line: 5308, column: 36, scope: !17577)
!17589 = !DILocation(line: 5308, column: 35, scope: !17577)
!17590 = !DILocation(line: 5308, column: 39, scope: !17577)
!17591 = !DILocation(line: 5308, column: 41, scope: !17577)
!17592 = !DILocation(line: 5308, column: 40, scope: !17577)
!17593 = !DILocation(line: 5308, column: 45, scope: !17577)
!17594 = !DILocation(line: 5308, column: 49, scope: !17577)
!17595 = !DILocation(line: 5308, column: 52, scope: !17577)
!17596 = !DILocation(line: 5308, column: 51, scope: !17577)
!17597 = !DILocation(line: 5308, column: 13, scope: !17577)
!17598 = !DILocation(line: 5309, column: 9, scope: !17577)
!17599 = !DILocation(line: 5311, column: 19, scope: !17600)
!17600 = distinct !DILexicalBlock(scope: !17569, file: !4, line: 5310, column: 14)
!17601 = !DILocation(line: 5311, column: 22, scope: !17600)
!17602 = !DILocation(line: 5311, column: 21, scope: !17600)
!17603 = !DILocation(line: 5311, column: 28, scope: !17600)
!17604 = !DILocation(line: 5311, column: 31, scope: !17600)
!17605 = !DILocation(line: 5311, column: 30, scope: !17600)
!17606 = !DILocation(line: 5311, column: 25, scope: !17600)
!17607 = !DILocation(line: 5311, column: 34, scope: !17600)
!17608 = !DILocation(line: 5311, column: 16, scope: !17600)
!17609 = !DILocation(line: 5312, column: 27, scope: !17600)
!17610 = !DILocation(line: 5312, column: 30, scope: !17600)
!17611 = !DILocation(line: 5312, column: 13, scope: !17600)
!17612 = !DILocation(line: 5313, column: 28, scope: !17600)
!17613 = !DILocation(line: 5313, column: 31, scope: !17600)
!17614 = !DILocation(line: 5313, column: 33, scope: !17600)
!17615 = !DILocation(line: 5313, column: 32, scope: !17600)
!17616 = !DILocation(line: 5313, column: 36, scope: !17600)
!17617 = !DILocation(line: 5313, column: 39, scope: !17600)
!17618 = !DILocation(line: 5313, column: 41, scope: !17600)
!17619 = !DILocation(line: 5313, column: 40, scope: !17600)
!17620 = !DILocation(line: 5313, column: 45, scope: !17600)
!17621 = !DILocation(line: 5313, column: 48, scope: !17600)
!17622 = !DILocation(line: 5313, column: 47, scope: !17600)
!17623 = !DILocation(line: 5313, column: 51, scope: !17600)
!17624 = !DILocation(line: 5313, column: 13, scope: !17600)
!17625 = !DILocation(line: 5315, column: 24, scope: !17570)
!17626 = !DILocation(line: 5315, column: 26, scope: !17570)
!17627 = !DILocation(line: 5315, column: 25, scope: !17570)
!17628 = !DILocation(line: 5315, column: 29, scope: !17570)
!17629 = !DILocation(line: 5315, column: 33, scope: !17570)
!17630 = !DILocation(line: 5315, column: 36, scope: !17570)
!17631 = !DILocation(line: 5315, column: 35, scope: !17570)
!17632 = !DILocation(line: 5315, column: 39, scope: !17570)
!17633 = !DILocation(line: 5315, column: 38, scope: !17570)
!17634 = !DILocation(line: 5315, column: 9, scope: !17570)
!17635 = !DILocation(line: 5317, column: 14, scope: !17570)
!17636 = !DILocation(line: 5317, column: 18, scope: !17570)
!17637 = !DILocation(line: 5317, column: 16, scope: !17570)
!17638 = !DILocation(line: 5317, column: 20, scope: !17570)
!17639 = !DILocation(line: 5317, column: 12, scope: !17570)
!17640 = !DILocation(line: 5318, column: 23, scope: !17570)
!17641 = !DILocation(line: 5318, column: 26, scope: !17570)
!17642 = !DILocation(line: 5318, column: 9, scope: !17570)
!17643 = !DILocation(line: 5319, column: 24, scope: !17570)
!17644 = !DILocation(line: 5319, column: 27, scope: !17570)
!17645 = !DILocation(line: 5319, column: 30, scope: !17570)
!17646 = !DILocation(line: 5319, column: 33, scope: !17570)
!17647 = !DILocation(line: 5319, column: 35, scope: !17570)
!17648 = !DILocation(line: 5319, column: 34, scope: !17570)
!17649 = !DILocation(line: 5319, column: 39, scope: !17570)
!17650 = !DILocation(line: 5319, column: 42, scope: !17570)
!17651 = !DILocation(line: 5319, column: 9, scope: !17570)
!17652 = !DILocation(line: 5320, column: 24, scope: !17570)
!17653 = !DILocation(line: 5320, column: 27, scope: !17570)
!17654 = !DILocation(line: 5320, column: 30, scope: !17570)
!17655 = !DILocation(line: 5320, column: 32, scope: !17570)
!17656 = !DILocation(line: 5320, column: 31, scope: !17570)
!17657 = !DILocation(line: 5320, column: 9, scope: !17570)
!17658 = !DILocation(line: 5322, column: 9, scope: !17570)
!17659 = !DILocation(line: 5326, column: 12, scope: !2022)
!17660 = !DILocation(line: 5326, column: 5, scope: !2022)
!17661 = !DILocation(line: 5326, column: 15, scope: !2022)
!17662 = !DILocation(line: 5326, column: 18, scope: !2022)
!17663 = !DILocation(line: 5326, column: 20, scope: !2022)
!17664 = !DILocation(line: 5327, column: 7, scope: !2022)
!17665 = !DILocation(line: 5327, column: 5, scope: !2022)
!17666 = !DILocation(line: 5327, column: 10, scope: !2022)
!17667 = !DILocation(line: 5328, column: 20, scope: !2022)
!17668 = !DILocation(line: 5328, column: 23, scope: !2022)
!17669 = !DILocation(line: 5328, column: 25, scope: !2022)
!17670 = !DILocation(line: 5328, column: 24, scope: !2022)
!17671 = !DILocation(line: 5328, column: 28, scope: !2022)
!17672 = !DILocation(line: 5328, column: 31, scope: !2022)
!17673 = !DILocation(line: 5328, column: 30, scope: !2022)
!17674 = !DILocation(line: 5328, column: 5, scope: !2022)
!17675 = !DILocation(line: 5330, column: 12, scope: !2022)
!17676 = !DILocation(line: 5330, column: 15, scope: !2022)
!17677 = !DILocation(line: 5330, column: 16, scope: !2022)
!17678 = !DILocation(line: 5330, column: 13, scope: !2022)
!17679 = !DILocation(line: 5330, column: 5, scope: !2022)
!17680 = !DILocation(line: 5330, column: 21, scope: !2022)
!17681 = !DILocation(line: 5330, column: 24, scope: !2022)
!17682 = !DILocation(line: 5330, column: 26, scope: !2022)
!17683 = !DILocation(line: 5331, column: 7, scope: !2022)
!17684 = !DILocation(line: 5331, column: 8, scope: !2022)
!17685 = !DILocation(line: 5331, column: 11, scope: !2022)
!17686 = !DILocation(line: 5331, column: 10, scope: !2022)
!17687 = !DILocation(line: 5331, column: 5, scope: !2022)
!17688 = !DILocation(line: 5331, column: 14, scope: !2022)
!17689 = !DILocation(line: 5332, column: 20, scope: !2022)
!17690 = !DILocation(line: 5332, column: 23, scope: !2022)
!17691 = !DILocation(line: 5332, column: 24, scope: !2022)
!17692 = !DILocation(line: 5332, column: 21, scope: !2022)
!17693 = !DILocation(line: 5332, column: 29, scope: !2022)
!17694 = !DILocation(line: 5332, column: 31, scope: !2022)
!17695 = !DILocation(line: 5332, column: 30, scope: !2022)
!17696 = !DILocation(line: 5332, column: 34, scope: !2022)
!17697 = !DILocation(line: 5332, column: 37, scope: !2022)
!17698 = !DILocation(line: 5332, column: 36, scope: !2022)
!17699 = !DILocation(line: 5332, column: 5, scope: !2022)
!17700 = !DILocation(line: 5334, column: 20, scope: !2022)
!17701 = !DILocation(line: 5334, column: 22, scope: !2022)
!17702 = !DILocation(line: 5334, column: 21, scope: !2022)
!17703 = !DILocation(line: 5334, column: 25, scope: !2022)
!17704 = !DILocation(line: 5334, column: 28, scope: !2022)
!17705 = !DILocation(line: 5334, column: 31, scope: !2022)
!17706 = !DILocation(line: 5334, column: 32, scope: !2022)
!17707 = !DILocation(line: 5334, column: 29, scope: !2022)
!17708 = !DILocation(line: 5334, column: 37, scope: !2022)
!17709 = !DILocation(line: 5334, column: 42, scope: !2022)
!17710 = !DILocation(line: 5334, column: 43, scope: !2022)
!17711 = !DILocation(line: 5334, column: 40, scope: !2022)
!17712 = !DILocation(line: 5334, column: 38, scope: !2022)
!17713 = !DILocation(line: 5334, column: 48, scope: !2022)
!17714 = !DILocation(line: 5334, column: 49, scope: !2022)
!17715 = !DILocation(line: 5334, column: 53, scope: !2022)
!17716 = !DILocation(line: 5334, column: 54, scope: !2022)
!17717 = !DILocation(line: 5334, column: 5, scope: !2022)
!17718 = !DILocation(line: 5336, column: 11, scope: !2022)
!17719 = !DILocation(line: 5336, column: 14, scope: !2022)
!17720 = !DILocation(line: 5336, column: 13, scope: !2022)
!17721 = !DILocation(line: 5336, column: 20, scope: !2022)
!17722 = !DILocation(line: 5336, column: 23, scope: !2022)
!17723 = !DILocation(line: 5336, column: 22, scope: !2022)
!17724 = !DILocation(line: 5336, column: 17, scope: !2022)
!17725 = !DILocation(line: 5336, column: 26, scope: !2022)
!17726 = !DILocation(line: 5336, column: 8, scope: !2022)
!17727 = !DILocation(line: 5337, column: 19, scope: !2022)
!17728 = !DILocation(line: 5337, column: 22, scope: !2022)
!17729 = !DILocation(line: 5337, column: 5, scope: !2022)
!17730 = !DILocation(line: 5339, column: 20, scope: !2022)
!17731 = !DILocation(line: 5339, column: 23, scope: !2022)
!17732 = !DILocation(line: 5339, column: 25, scope: !2022)
!17733 = !DILocation(line: 5339, column: 24, scope: !2022)
!17734 = !DILocation(line: 5339, column: 28, scope: !2022)
!17735 = !DILocation(line: 5339, column: 30, scope: !2022)
!17736 = !DILocation(line: 5339, column: 29, scope: !2022)
!17737 = !DILocation(line: 5339, column: 33, scope: !2022)
!17738 = !DILocation(line: 5339, column: 35, scope: !2022)
!17739 = !DILocation(line: 5339, column: 34, scope: !2022)
!17740 = !DILocation(line: 5339, column: 39, scope: !2022)
!17741 = !DILocation(line: 5339, column: 42, scope: !2022)
!17742 = !DILocation(line: 5339, column: 41, scope: !2022)
!17743 = !DILocation(line: 5339, column: 45, scope: !2022)
!17744 = !DILocation(line: 5339, column: 48, scope: !2022)
!17745 = !DILocation(line: 5339, column: 47, scope: !2022)
!17746 = !DILocation(line: 5339, column: 5, scope: !2022)
!17747 = !DILocation(line: 5341, column: 20, scope: !2022)
!17748 = !DILocation(line: 5341, column: 24, scope: !2022)
!17749 = !DILocation(line: 5341, column: 23, scope: !2022)
!17750 = !DILocation(line: 5341, column: 21, scope: !2022)
!17751 = !DILocation(line: 5341, column: 27, scope: !2022)
!17752 = !DILocation(line: 5341, column: 31, scope: !2022)
!17753 = !DILocation(line: 5341, column: 34, scope: !2022)
!17754 = !DILocation(line: 5341, column: 33, scope: !2022)
!17755 = !DILocation(line: 5341, column: 40, scope: !2022)
!17756 = !DILocation(line: 5341, column: 43, scope: !2022)
!17757 = !DILocation(line: 5341, column: 42, scope: !2022)
!17758 = !DILocation(line: 5341, column: 37, scope: !2022)
!17759 = !DILocation(line: 5341, column: 5, scope: !2022)
!17760 = !DILocation(line: 5342, column: 22, scope: !2022)
!17761 = !DILocation(line: 5342, column: 24, scope: !2022)
!17762 = !DILocation(line: 5342, column: 23, scope: !2022)
!17763 = !DILocation(line: 5342, column: 27, scope: !2022)
!17764 = !DILocation(line: 5342, column: 31, scope: !2022)
!17765 = !DILocation(line: 5342, column: 34, scope: !2022)
!17766 = !DILocation(line: 5342, column: 33, scope: !2022)
!17767 = !DILocation(line: 5342, column: 40, scope: !2022)
!17768 = !DILocation(line: 5342, column: 43, scope: !2022)
!17769 = !DILocation(line: 5342, column: 42, scope: !2022)
!17770 = !DILocation(line: 5342, column: 37, scope: !2022)
!17771 = !DILocation(line: 5342, column: 5, scope: !2022)
!17772 = !DILocation(line: 5344, column: 10, scope: !2022)
!17773 = !DILocation(line: 5344, column: 14, scope: !2022)
!17774 = !DILocation(line: 5344, column: 12, scope: !2022)
!17775 = !DILocation(line: 5344, column: 16, scope: !2022)
!17776 = !DILocation(line: 5344, column: 8, scope: !2022)
!17777 = !DILocation(line: 5345, column: 19, scope: !2022)
!17778 = !DILocation(line: 5345, column: 22, scope: !2022)
!17779 = !DILocation(line: 5345, column: 5, scope: !2022)
!17780 = !DILocation(line: 5347, column: 20, scope: !2022)
!17781 = !DILocation(line: 5347, column: 23, scope: !2022)
!17782 = !DILocation(line: 5347, column: 26, scope: !2022)
!17783 = !DILocation(line: 5347, column: 29, scope: !2022)
!17784 = !DILocation(line: 5347, column: 31, scope: !2022)
!17785 = !DILocation(line: 5347, column: 30, scope: !2022)
!17786 = !DILocation(line: 5347, column: 35, scope: !2022)
!17787 = !DILocation(line: 5347, column: 38, scope: !2022)
!17788 = !DILocation(line: 5347, column: 5, scope: !2022)
!17789 = !DILocation(line: 5348, column: 20, scope: !2022)
!17790 = !DILocation(line: 5348, column: 23, scope: !2022)
!17791 = !DILocation(line: 5348, column: 26, scope: !2022)
!17792 = !DILocation(line: 5348, column: 28, scope: !2022)
!17793 = !DILocation(line: 5348, column: 27, scope: !2022)
!17794 = !DILocation(line: 5348, column: 5, scope: !2022)
!17795 = !DILocation(line: 5349, column: 22, scope: !2022)
!17796 = !DILocation(line: 5349, column: 24, scope: !2022)
!17797 = !DILocation(line: 5349, column: 23, scope: !2022)
!17798 = !DILocation(line: 5349, column: 27, scope: !2022)
!17799 = !DILocation(line: 5349, column: 30, scope: !2022)
!17800 = !DILocation(line: 5349, column: 32, scope: !2022)
!17801 = !DILocation(line: 5349, column: 31, scope: !2022)
!17802 = !DILocation(line: 5349, column: 5, scope: !2022)
!17803 = !DILocation(line: 5351, column: 5, scope: !2022)
!17804 = !DILocation(line: 5352, column: 1, scope: !2022)
!17805 = !DILocation(line: 592, column: 23, scope: !2007)
!17806 = !DILocation(line: 592, column: 37, scope: !2007)
!17807 = !DILocation(line: 594, column: 9, scope: !17808)
!17808 = distinct !DILexicalBlock(scope: !2007, file: !1431, line: 594, column: 9)
!17809 = !DILocation(line: 594, column: 40, scope: !17808)
!17810 = !DILocation(line: 594, column: 38, scope: !17808)
!17811 = !DILocation(line: 594, column: 11, scope: !17808)
!17812 = !DILocation(line: 594, column: 9, scope: !2007)
!17813 = !DILocation(line: 595, column: 9, scope: !17814)
!17814 = distinct !DILexicalBlock(scope: !17808, file: !1431, line: 594, column: 43)
!17815 = !DILocation(line: 595, column: 21, scope: !17816)
!17816 = !DILexicalBlockFile(scope: !17817, file: !1431, discriminator: 1)
!17817 = distinct !DILexicalBlock(scope: !17814, file: !1431, line: 595, column: 12)
!17818 = !DILocation(line: 595, column: 13, scope: !17817)
!17819 = !DILocation(line: 595, column: 156, scope: !17817)
!17820 = !DILocation(line: 595, column: 148, scope: !17817)
!17821 = !DILocation(line: 595, column: 222, scope: !17817)
!17822 = !DILocation(line: 595, column: 210, scope: !17817)
!17823 = !DILocation(line: 595, column: 231, scope: !17817)
!17824 = !DILocation(line: 596, column: 5, scope: !17814)
!17825 = !DILocation(line: 597, column: 12, scope: !2007)
!17826 = !DILocation(line: 597, column: 16, scope: !2007)
!17827 = !DILocation(line: 597, column: 14, scope: !2007)
!17828 = !DILocation(line: 597, column: 5, scope: !2007)
!17829 = !DILocation(line: 614, column: 23, scope: !2011)
!17830 = !DILocation(line: 614, column: 37, scope: !2011)
!17831 = !DILocation(line: 616, column: 5, scope: !2011)
!17832 = !DILocation(line: 616, column: 16, scope: !2011)
!17833 = !DILocation(line: 616, column: 20, scope: !2011)
!17834 = !DILocation(line: 618, column: 42, scope: !2011)
!17835 = !DILocation(line: 618, column: 57, scope: !2011)
!17836 = !DILocation(line: 618, column: 5, scope: !2011)
!17837 = !DILocation(line: 619, column: 9, scope: !17838)
!17838 = distinct !DILexicalBlock(scope: !2011, file: !1431, line: 619, column: 9)
!17839 = !DILocation(line: 619, column: 9, scope: !2011)
!17840 = !DILocation(line: 620, column: 9, scope: !17841)
!17841 = distinct !DILexicalBlock(scope: !17838, file: !1431, line: 619, column: 13)
!17842 = !DILocation(line: 620, column: 21, scope: !17843)
!17843 = !DILexicalBlockFile(scope: !17844, file: !1431, discriminator: 1)
!17844 = distinct !DILexicalBlock(scope: !17841, file: !1431, line: 620, column: 12)
!17845 = !DILocation(line: 620, column: 13, scope: !17844)
!17846 = !DILocation(line: 620, column: 156, scope: !17844)
!17847 = !DILocation(line: 620, column: 148, scope: !17844)
!17848 = !DILocation(line: 620, column: 222, scope: !17844)
!17849 = !DILocation(line: 620, column: 210, scope: !17844)
!17850 = !DILocation(line: 620, column: 231, scope: !17844)
!17851 = !DILocation(line: 620, column: 240, scope: !17844)
!17852 = !DILocation(line: 621, column: 5, scope: !17841)
!17853 = !DILocation(line: 622, column: 12, scope: !2011)
!17854 = !DILocation(line: 623, column: 1, scope: !2011)
!17855 = !DILocation(line: 622, column: 5, scope: !2011)
!17856 = !DILocation(line: 5395, column: 35, scope: !2046)
!17857 = !DILocation(line: 5397, column: 5, scope: !2046)
!17858 = !DILocation(line: 5397, column: 16, scope: !2046)
!17859 = !DILocation(line: 5398, column: 5, scope: !2046)
!17860 = !DILocation(line: 5398, column: 16, scope: !2046)
!17861 = !DILocation(line: 5398, column: 19, scope: !2046)
!17862 = !DILocation(line: 5401, column: 25, scope: !2046)
!17863 = !DILocation(line: 5401, column: 17, scope: !2046)
!17864 = !DILocation(line: 5401, column: 15, scope: !2046)
!17865 = !DILocation(line: 5403, column: 9, scope: !17866)
!17866 = distinct !DILexicalBlock(scope: !2046, file: !4, line: 5403, column: 9)
!17867 = !DILocation(line: 5403, column: 15, scope: !17866)
!17868 = !DILocation(line: 5403, column: 9, scope: !2046)
!17869 = !DILocation(line: 5405, column: 30, scope: !17870)
!17870 = distinct !DILexicalBlock(scope: !17866, file: !4, line: 5403, column: 24)
!17871 = !DILocation(line: 5405, column: 28, scope: !17870)
!17872 = !DILocation(line: 5405, column: 11, scope: !17870)
!17873 = !DILocation(line: 5406, column: 17, scope: !17870)
!17874 = !DILocation(line: 5406, column: 26, scope: !17870)
!17875 = !DILocation(line: 5406, column: 23, scope: !17870)
!17876 = !DILocation(line: 5406, column: 16, scope: !17870)
!17877 = !DILocation(line: 5406, column: 31, scope: !17878)
!17878 = !DILexicalBlockFile(scope: !17870, file: !4, discriminator: 1)
!17879 = !DILocation(line: 5406, column: 35, scope: !17880)
!17880 = !DILexicalBlockFile(scope: !17870, file: !4, discriminator: 2)
!17881 = !DILocation(line: 5406, column: 36, scope: !17870)
!17882 = !DILocation(line: 5406, column: 9, scope: !17883)
!17883 = !DILexicalBlockFile(scope: !17884, file: !4, discriminator: 4)
!17884 = !DILexicalBlockFile(scope: !17870, file: !4, discriminator: 3)
!17885 = !DILocation(line: 5406, column: 9, scope: !17870)
!17886 = !DILocation(line: 5408, column: 14, scope: !17887)
!17887 = distinct !DILexicalBlock(scope: !17866, file: !4, line: 5408, column: 14)
!17888 = !DILocation(line: 5408, column: 20, scope: !17887)
!17889 = !DILocation(line: 5408, column: 14, scope: !17866)
!17890 = !DILocation(line: 5409, column: 30, scope: !17891)
!17891 = distinct !DILexicalBlock(scope: !17887, file: !4, line: 5408, column: 38)
!17892 = !DILocation(line: 5409, column: 28, scope: !17891)
!17893 = !DILocation(line: 5409, column: 11, scope: !17891)
!17894 = !DILocation(line: 5410, column: 13, scope: !17895)
!17895 = distinct !DILexicalBlock(scope: !17891, file: !4, line: 5410, column: 13)
!17896 = !DILocation(line: 5410, column: 22, scope: !17895)
!17897 = !DILocation(line: 5410, column: 19, scope: !17895)
!17898 = !DILocation(line: 5410, column: 13, scope: !17891)
!17899 = !DILocation(line: 5410, column: 32, scope: !17900)
!17900 = !DILexicalBlockFile(scope: !17895, file: !4, discriminator: 1)
!17901 = !DILocation(line: 5410, column: 25, scope: !17895)
!17902 = !DILocation(line: 5411, column: 16, scope: !17891)
!17903 = !DILocation(line: 5411, column: 17, scope: !17891)
!17904 = !DILocation(line: 5411, column: 14, scope: !17891)
!17905 = !DILocation(line: 5412, column: 14, scope: !17891)
!17906 = !DILocation(line: 5412, column: 11, scope: !17891)
!17907 = !DILocation(line: 5413, column: 17, scope: !17891)
!17908 = !DILocation(line: 5413, column: 26, scope: !17891)
!17909 = !DILocation(line: 5413, column: 23, scope: !17891)
!17910 = !DILocation(line: 5413, column: 16, scope: !17891)
!17911 = !DILocation(line: 5413, column: 31, scope: !17912)
!17912 = !DILexicalBlockFile(scope: !17891, file: !4, discriminator: 1)
!17913 = !DILocation(line: 5413, column: 35, scope: !17914)
!17914 = !DILexicalBlockFile(scope: !17891, file: !4, discriminator: 2)
!17915 = !DILocation(line: 5413, column: 39, scope: !17891)
!17916 = !DILocation(line: 5413, column: 37, scope: !17891)
!17917 = !DILocation(line: 5413, column: 9, scope: !17918)
!17918 = !DILexicalBlockFile(scope: !17919, file: !4, discriminator: 4)
!17919 = !DILexicalBlockFile(scope: !17891, file: !4, discriminator: 3)
!17920 = !DILocation(line: 5413, column: 9, scope: !17891)
!17921 = !DILocation(line: 5415, column: 14, scope: !17922)
!17922 = distinct !DILexicalBlock(scope: !17887, file: !4, line: 5415, column: 14)
!17923 = !DILocation(line: 5415, column: 20, scope: !17922)
!17924 = !DILocation(line: 5415, column: 14, scope: !17887)
!17925 = !DILocation(line: 5416, column: 9, scope: !17926)
!17926 = distinct !DILexicalBlock(scope: !17922, file: !4, line: 5415, column: 55)
!17927 = !DILocation(line: 5418, column: 14, scope: !17928)
!17928 = distinct !DILexicalBlock(scope: !17922, file: !4, line: 5418, column: 14)
!17929 = !DILocation(line: 5418, column: 20, scope: !17928)
!17930 = !DILocation(line: 5418, column: 14, scope: !17922)
!17931 = !DILocation(line: 5419, column: 9, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !17928, file: !4, line: 5418, column: 40)
!17933 = !DILocation(line: 5422, column: 9, scope: !17934)
!17934 = distinct !DILexicalBlock(scope: !17928, file: !4, line: 5421, column: 10)
!17935 = !DILocation(line: 5424, column: 1, scope: !2046)
!17936 = !DILocation(line: 5570, column: 32, scope: !2064)
!17937 = !DILocation(line: 5570, column: 53, scope: !2064)
!17938 = !DILocation(line: 5570, column: 74, scope: !2064)
!17939 = !DILocation(line: 5571, column: 32, scope: !2064)
!17940 = !DILocation(line: 5571, column: 46, scope: !2064)
!17941 = !DILocation(line: 5571, column: 61, scope: !2064)
!17942 = !DILocation(line: 5573, column: 5, scope: !2064)
!17943 = !DILocation(line: 5573, column: 16, scope: !2064)
!17944 = !DILocation(line: 5573, column: 19, scope: !2064)
!17945 = !DILocation(line: 5578, column: 9, scope: !2080)
!17946 = !DILocation(line: 5578, column: 12, scope: !2080)
!17947 = !DILocation(line: 5578, column: 9, scope: !2064)
!17948 = !DILocation(line: 5580, column: 13, scope: !2078)
!17949 = !DILocation(line: 5580, column: 16, scope: !2078)
!17950 = !DILocation(line: 5580, column: 13, scope: !2079)
!17951 = !DILocation(line: 5581, column: 26, scope: !17952)
!17952 = distinct !DILexicalBlock(scope: !2078, file: !4, line: 5580, column: 24)
!17953 = !DILocation(line: 5581, column: 29, scope: !17952)
!17954 = !DILocation(line: 5581, column: 32, scope: !17952)
!17955 = !DILocation(line: 5581, column: 35, scope: !17952)
!17956 = !DILocation(line: 5581, column: 39, scope: !17952)
!17957 = !DILocation(line: 5581, column: 13, scope: !17952)
!17958 = !DILocation(line: 5582, column: 9, scope: !17952)
!17959 = !DILocation(line: 5584, column: 13, scope: !2077)
!17960 = !DILocation(line: 5584, column: 25, scope: !2077)
!17961 = !DILocation(line: 5585, column: 13, scope: !2077)
!17962 = !DILocation(line: 5585, column: 24, scope: !2077)
!17963 = !DILocation(line: 5587, column: 39, scope: !17964)
!17964 = distinct !DILexicalBlock(scope: !2077, file: !4, line: 5587, column: 17)
!17965 = !DILocation(line: 5587, column: 42, scope: !17964)
!17966 = !DILocation(line: 5587, column: 45, scope: !17964)
!17967 = !DILocation(line: 5587, column: 49, scope: !17964)
!17968 = !DILocation(line: 5587, column: 27, scope: !17964)
!17969 = !DILocation(line: 5587, column: 25, scope: !17964)
!17970 = !DILocation(line: 5587, column: 62, scope: !17964)
!17971 = !DILocation(line: 5587, column: 17, scope: !2077)
!17972 = !DILocation(line: 5588, column: 17, scope: !17973)
!17973 = distinct !DILexicalBlock(scope: !17964, file: !4, line: 5587, column: 77)
!17974 = !DILocation(line: 5590, column: 20, scope: !2077)
!17975 = !DILocation(line: 5590, column: 13, scope: !2077)
!17976 = !DILocation(line: 5590, column: 23, scope: !2077)
!17977 = !DILocation(line: 5590, column: 32, scope: !2077)
!17978 = !DILocation(line: 5590, column: 35, scope: !2077)
!17979 = !DILocation(line: 5590, column: 34, scope: !2077)
!17980 = !DILocation(line: 5590, column: 39, scope: !2077)
!17981 = !DILocation(line: 5591, column: 13, scope: !2077)
!17982 = !DILocation(line: 5591, column: 22, scope: !2077)
!17983 = !DILocation(line: 5592, column: 9, scope: !2078)
!17984 = !DILocation(line: 5592, column: 9, scope: !17985)
!17985 = !DILexicalBlockFile(scope: !2078, file: !4, discriminator: 1)
!17986 = !DILocation(line: 5593, column: 9, scope: !2079)
!17987 = !DILocation(line: 5596, column: 10, scope: !2064)
!17988 = !DILocation(line: 5596, column: 12, scope: !2064)
!17989 = !DILocation(line: 5596, column: 15, scope: !2064)
!17990 = !DILocation(line: 5596, column: 7, scope: !2064)
!17991 = !DILocation(line: 5599, column: 9, scope: !17992)
!17992 = distinct !DILexicalBlock(scope: !2064, file: !4, line: 5599, column: 9)
!17993 = !DILocation(line: 5599, column: 15, scope: !17992)
!17994 = !DILocation(line: 5599, column: 12, scope: !17992)
!17995 = !DILocation(line: 5599, column: 9, scope: !2064)
!17996 = !DILocation(line: 5602, column: 13, scope: !17997)
!17997 = distinct !DILexicalBlock(scope: !17998, file: !4, line: 5602, column: 13)
!17998 = distinct !DILexicalBlock(scope: !17992, file: !4, line: 5599, column: 18)
!17999 = !DILocation(line: 5602, column: 18, scope: !17997)
!18000 = !DILocation(line: 5602, column: 21, scope: !17997)
!18001 = !DILocation(line: 5602, column: 20, scope: !17997)
!18002 = !DILocation(line: 5602, column: 16, scope: !17997)
!18003 = !DILocation(line: 5602, column: 13, scope: !17998)
!18004 = !DILocation(line: 5603, column: 18, scope: !18005)
!18005 = distinct !DILexicalBlock(scope: !17997, file: !4, line: 5602, column: 24)
!18006 = !DILocation(line: 5603, column: 23, scope: !18005)
!18007 = !DILocation(line: 5603, column: 21, scope: !18005)
!18008 = !DILocation(line: 5603, column: 26, scope: !18005)
!18009 = !DILocation(line: 5603, column: 16, scope: !18005)
!18010 = !DILocation(line: 5604, column: 27, scope: !18005)
!18011 = !DILocation(line: 5604, column: 30, scope: !18005)
!18012 = !DILocation(line: 5604, column: 13, scope: !18005)
!18013 = !DILocation(line: 5605, column: 37, scope: !18014)
!18014 = distinct !DILexicalBlock(scope: !18005, file: !4, line: 5605, column: 17)
!18015 = !DILocation(line: 5605, column: 40, scope: !18014)
!18016 = !DILocation(line: 5605, column: 43, scope: !18014)
!18017 = !DILocation(line: 5605, column: 45, scope: !18014)
!18018 = !DILocation(line: 5605, column: 44, scope: !18014)
!18019 = !DILocation(line: 5605, column: 48, scope: !18014)
!18020 = !DILocation(line: 5605, column: 50, scope: !18014)
!18021 = !DILocation(line: 5605, column: 49, scope: !18014)
!18022 = !DILocation(line: 5605, column: 54, scope: !18014)
!18023 = !DILocation(line: 5605, column: 58, scope: !18014)
!18024 = !DILocation(line: 5605, column: 61, scope: !18014)
!18025 = !DILocation(line: 5605, column: 60, scope: !18014)
!18026 = !DILocation(line: 5605, column: 18, scope: !18014)
!18027 = !DILocation(line: 5605, column: 17, scope: !18005)
!18028 = !DILocation(line: 5606, column: 17, scope: !18029)
!18029 = distinct !DILexicalBlock(scope: !18014, file: !4, line: 5605, column: 65)
!18030 = !DILocation(line: 5608, column: 9, scope: !18005)
!18031 = !DILocation(line: 5610, column: 19, scope: !18032)
!18032 = distinct !DILexicalBlock(scope: !17997, file: !4, line: 5609, column: 14)
!18033 = !DILocation(line: 5610, column: 22, scope: !18032)
!18034 = !DILocation(line: 5610, column: 21, scope: !18032)
!18035 = !DILocation(line: 5610, column: 28, scope: !18032)
!18036 = !DILocation(line: 5610, column: 31, scope: !18032)
!18037 = !DILocation(line: 5610, column: 30, scope: !18032)
!18038 = !DILocation(line: 5610, column: 25, scope: !18032)
!18039 = !DILocation(line: 5610, column: 34, scope: !18032)
!18040 = !DILocation(line: 5610, column: 16, scope: !18032)
!18041 = !DILocation(line: 5611, column: 27, scope: !18032)
!18042 = !DILocation(line: 5611, column: 30, scope: !18032)
!18043 = !DILocation(line: 5611, column: 13, scope: !18032)
!18044 = !DILocation(line: 5612, column: 37, scope: !18045)
!18045 = distinct !DILexicalBlock(scope: !18032, file: !4, line: 5612, column: 17)
!18046 = !DILocation(line: 5612, column: 40, scope: !18045)
!18047 = !DILocation(line: 5612, column: 42, scope: !18045)
!18048 = !DILocation(line: 5612, column: 41, scope: !18045)
!18049 = !DILocation(line: 5612, column: 45, scope: !18045)
!18050 = !DILocation(line: 5612, column: 48, scope: !18045)
!18051 = !DILocation(line: 5612, column: 50, scope: !18045)
!18052 = !DILocation(line: 5612, column: 49, scope: !18045)
!18053 = !DILocation(line: 5612, column: 54, scope: !18045)
!18054 = !DILocation(line: 5612, column: 57, scope: !18045)
!18055 = !DILocation(line: 5612, column: 56, scope: !18045)
!18056 = !DILocation(line: 5612, column: 60, scope: !18045)
!18057 = !DILocation(line: 5612, column: 18, scope: !18045)
!18058 = !DILocation(line: 5612, column: 17, scope: !18032)
!18059 = !DILocation(line: 5613, column: 17, scope: !18060)
!18060 = distinct !DILexicalBlock(scope: !18045, file: !4, line: 5612, column: 65)
!18061 = !DILocation(line: 5616, column: 24, scope: !17998)
!18062 = !DILocation(line: 5616, column: 26, scope: !17998)
!18063 = !DILocation(line: 5616, column: 25, scope: !17998)
!18064 = !DILocation(line: 5616, column: 29, scope: !17998)
!18065 = !DILocation(line: 5616, column: 33, scope: !17998)
!18066 = !DILocation(line: 5616, column: 36, scope: !17998)
!18067 = !DILocation(line: 5616, column: 35, scope: !17998)
!18068 = !DILocation(line: 5616, column: 39, scope: !17998)
!18069 = !DILocation(line: 5616, column: 38, scope: !17998)
!18070 = !DILocation(line: 5616, column: 9, scope: !17998)
!18071 = !DILocation(line: 5618, column: 14, scope: !17998)
!18072 = !DILocation(line: 5618, column: 18, scope: !17998)
!18073 = !DILocation(line: 5618, column: 16, scope: !17998)
!18074 = !DILocation(line: 5618, column: 20, scope: !17998)
!18075 = !DILocation(line: 5618, column: 12, scope: !17998)
!18076 = !DILocation(line: 5619, column: 23, scope: !17998)
!18077 = !DILocation(line: 5619, column: 26, scope: !17998)
!18078 = !DILocation(line: 5619, column: 9, scope: !17998)
!18079 = !DILocation(line: 5620, column: 33, scope: !18080)
!18080 = distinct !DILexicalBlock(scope: !17998, file: !4, line: 5620, column: 13)
!18081 = !DILocation(line: 5620, column: 36, scope: !18080)
!18082 = !DILocation(line: 5620, column: 39, scope: !18080)
!18083 = !DILocation(line: 5620, column: 42, scope: !18080)
!18084 = !DILocation(line: 5620, column: 44, scope: !18080)
!18085 = !DILocation(line: 5620, column: 43, scope: !18080)
!18086 = !DILocation(line: 5620, column: 48, scope: !18080)
!18087 = !DILocation(line: 5620, column: 51, scope: !18080)
!18088 = !DILocation(line: 5620, column: 14, scope: !18080)
!18089 = !DILocation(line: 5620, column: 13, scope: !17998)
!18090 = !DILocation(line: 5621, column: 13, scope: !18091)
!18091 = distinct !DILexicalBlock(scope: !18080, file: !4, line: 5620, column: 56)
!18092 = !DILocation(line: 5623, column: 24, scope: !17998)
!18093 = !DILocation(line: 5623, column: 27, scope: !17998)
!18094 = !DILocation(line: 5623, column: 30, scope: !17998)
!18095 = !DILocation(line: 5623, column: 32, scope: !17998)
!18096 = !DILocation(line: 5623, column: 31, scope: !17998)
!18097 = !DILocation(line: 5623, column: 9, scope: !17998)
!18098 = !DILocation(line: 5625, column: 9, scope: !17998)
!18099 = !DILocation(line: 5629, column: 12, scope: !2064)
!18100 = !DILocation(line: 5629, column: 5, scope: !2064)
!18101 = !DILocation(line: 5629, column: 15, scope: !2064)
!18102 = !DILocation(line: 5629, column: 18, scope: !2064)
!18103 = !DILocation(line: 5629, column: 20, scope: !2064)
!18104 = !DILocation(line: 5630, column: 7, scope: !2064)
!18105 = !DILocation(line: 5630, column: 5, scope: !2064)
!18106 = !DILocation(line: 5630, column: 10, scope: !2064)
!18107 = !DILocation(line: 5631, column: 20, scope: !2064)
!18108 = !DILocation(line: 5631, column: 23, scope: !2064)
!18109 = !DILocation(line: 5631, column: 25, scope: !2064)
!18110 = !DILocation(line: 5631, column: 24, scope: !2064)
!18111 = !DILocation(line: 5631, column: 28, scope: !2064)
!18112 = !DILocation(line: 5631, column: 31, scope: !2064)
!18113 = !DILocation(line: 5631, column: 30, scope: !2064)
!18114 = !DILocation(line: 5631, column: 5, scope: !2064)
!18115 = !DILocation(line: 5633, column: 12, scope: !2064)
!18116 = !DILocation(line: 5633, column: 15, scope: !2064)
!18117 = !DILocation(line: 5633, column: 16, scope: !2064)
!18118 = !DILocation(line: 5633, column: 13, scope: !2064)
!18119 = !DILocation(line: 5633, column: 5, scope: !2064)
!18120 = !DILocation(line: 5633, column: 21, scope: !2064)
!18121 = !DILocation(line: 5633, column: 24, scope: !2064)
!18122 = !DILocation(line: 5633, column: 26, scope: !2064)
!18123 = !DILocation(line: 5634, column: 7, scope: !2064)
!18124 = !DILocation(line: 5634, column: 8, scope: !2064)
!18125 = !DILocation(line: 5634, column: 11, scope: !2064)
!18126 = !DILocation(line: 5634, column: 10, scope: !2064)
!18127 = !DILocation(line: 5634, column: 5, scope: !2064)
!18128 = !DILocation(line: 5634, column: 14, scope: !2064)
!18129 = !DILocation(line: 5635, column: 20, scope: !2064)
!18130 = !DILocation(line: 5635, column: 23, scope: !2064)
!18131 = !DILocation(line: 5635, column: 24, scope: !2064)
!18132 = !DILocation(line: 5635, column: 21, scope: !2064)
!18133 = !DILocation(line: 5635, column: 29, scope: !2064)
!18134 = !DILocation(line: 5635, column: 31, scope: !2064)
!18135 = !DILocation(line: 5635, column: 30, scope: !2064)
!18136 = !DILocation(line: 5635, column: 34, scope: !2064)
!18137 = !DILocation(line: 5635, column: 37, scope: !2064)
!18138 = !DILocation(line: 5635, column: 36, scope: !2064)
!18139 = !DILocation(line: 5635, column: 5, scope: !2064)
!18140 = !DILocation(line: 5637, column: 29, scope: !18141)
!18141 = distinct !DILexicalBlock(scope: !2064, file: !4, line: 5637, column: 9)
!18142 = !DILocation(line: 5637, column: 31, scope: !18141)
!18143 = !DILocation(line: 5637, column: 30, scope: !18141)
!18144 = !DILocation(line: 5637, column: 34, scope: !18141)
!18145 = !DILocation(line: 5637, column: 37, scope: !18141)
!18146 = !DILocation(line: 5637, column: 40, scope: !18141)
!18147 = !DILocation(line: 5637, column: 41, scope: !18141)
!18148 = !DILocation(line: 5637, column: 38, scope: !18141)
!18149 = !DILocation(line: 5637, column: 46, scope: !18141)
!18150 = !DILocation(line: 5637, column: 51, scope: !18141)
!18151 = !DILocation(line: 5637, column: 52, scope: !18141)
!18152 = !DILocation(line: 5637, column: 49, scope: !18141)
!18153 = !DILocation(line: 5637, column: 47, scope: !18141)
!18154 = !DILocation(line: 5637, column: 57, scope: !18141)
!18155 = !DILocation(line: 5637, column: 58, scope: !18141)
!18156 = !DILocation(line: 5637, column: 62, scope: !18141)
!18157 = !DILocation(line: 5637, column: 63, scope: !18141)
!18158 = !DILocation(line: 5637, column: 10, scope: !18141)
!18159 = !DILocation(line: 5637, column: 9, scope: !2064)
!18160 = !DILocation(line: 5638, column: 9, scope: !18161)
!18161 = distinct !DILexicalBlock(scope: !18141, file: !4, line: 5637, column: 68)
!18162 = !DILocation(line: 5641, column: 11, scope: !2064)
!18163 = !DILocation(line: 5641, column: 14, scope: !2064)
!18164 = !DILocation(line: 5641, column: 13, scope: !2064)
!18165 = !DILocation(line: 5641, column: 20, scope: !2064)
!18166 = !DILocation(line: 5641, column: 23, scope: !2064)
!18167 = !DILocation(line: 5641, column: 22, scope: !2064)
!18168 = !DILocation(line: 5641, column: 17, scope: !2064)
!18169 = !DILocation(line: 5641, column: 26, scope: !2064)
!18170 = !DILocation(line: 5641, column: 8, scope: !2064)
!18171 = !DILocation(line: 5642, column: 19, scope: !2064)
!18172 = !DILocation(line: 5642, column: 22, scope: !2064)
!18173 = !DILocation(line: 5642, column: 5, scope: !2064)
!18174 = !DILocation(line: 5644, column: 29, scope: !18175)
!18175 = distinct !DILexicalBlock(scope: !2064, file: !4, line: 5644, column: 9)
!18176 = !DILocation(line: 5644, column: 32, scope: !18175)
!18177 = !DILocation(line: 5644, column: 34, scope: !18175)
!18178 = !DILocation(line: 5644, column: 33, scope: !18175)
!18179 = !DILocation(line: 5644, column: 37, scope: !18175)
!18180 = !DILocation(line: 5644, column: 39, scope: !18175)
!18181 = !DILocation(line: 5644, column: 38, scope: !18175)
!18182 = !DILocation(line: 5644, column: 42, scope: !18175)
!18183 = !DILocation(line: 5644, column: 44, scope: !18175)
!18184 = !DILocation(line: 5644, column: 43, scope: !18175)
!18185 = !DILocation(line: 5644, column: 48, scope: !18175)
!18186 = !DILocation(line: 5644, column: 51, scope: !18175)
!18187 = !DILocation(line: 5644, column: 50, scope: !18175)
!18188 = !DILocation(line: 5644, column: 54, scope: !18175)
!18189 = !DILocation(line: 5644, column: 57, scope: !18175)
!18190 = !DILocation(line: 5644, column: 56, scope: !18175)
!18191 = !DILocation(line: 5644, column: 10, scope: !18175)
!18192 = !DILocation(line: 5644, column: 9, scope: !2064)
!18193 = !DILocation(line: 5645, column: 9, scope: !18194)
!18194 = distinct !DILexicalBlock(scope: !18175, file: !4, line: 5644, column: 61)
!18195 = !DILocation(line: 5648, column: 20, scope: !2064)
!18196 = !DILocation(line: 5648, column: 24, scope: !2064)
!18197 = !DILocation(line: 5648, column: 23, scope: !2064)
!18198 = !DILocation(line: 5648, column: 21, scope: !2064)
!18199 = !DILocation(line: 5648, column: 27, scope: !2064)
!18200 = !DILocation(line: 5648, column: 31, scope: !2064)
!18201 = !DILocation(line: 5648, column: 34, scope: !2064)
!18202 = !DILocation(line: 5648, column: 33, scope: !2064)
!18203 = !DILocation(line: 5648, column: 40, scope: !2064)
!18204 = !DILocation(line: 5648, column: 43, scope: !2064)
!18205 = !DILocation(line: 5648, column: 42, scope: !2064)
!18206 = !DILocation(line: 5648, column: 37, scope: !2064)
!18207 = !DILocation(line: 5648, column: 5, scope: !2064)
!18208 = !DILocation(line: 5649, column: 22, scope: !2064)
!18209 = !DILocation(line: 5649, column: 24, scope: !2064)
!18210 = !DILocation(line: 5649, column: 23, scope: !2064)
!18211 = !DILocation(line: 5649, column: 27, scope: !2064)
!18212 = !DILocation(line: 5649, column: 31, scope: !2064)
!18213 = !DILocation(line: 5649, column: 34, scope: !2064)
!18214 = !DILocation(line: 5649, column: 33, scope: !2064)
!18215 = !DILocation(line: 5649, column: 40, scope: !2064)
!18216 = !DILocation(line: 5649, column: 43, scope: !2064)
!18217 = !DILocation(line: 5649, column: 42, scope: !2064)
!18218 = !DILocation(line: 5649, column: 37, scope: !2064)
!18219 = !DILocation(line: 5649, column: 5, scope: !2064)
!18220 = !DILocation(line: 5651, column: 10, scope: !2064)
!18221 = !DILocation(line: 5651, column: 14, scope: !2064)
!18222 = !DILocation(line: 5651, column: 12, scope: !2064)
!18223 = !DILocation(line: 5651, column: 16, scope: !2064)
!18224 = !DILocation(line: 5651, column: 8, scope: !2064)
!18225 = !DILocation(line: 5652, column: 19, scope: !2064)
!18226 = !DILocation(line: 5652, column: 22, scope: !2064)
!18227 = !DILocation(line: 5652, column: 5, scope: !2064)
!18228 = !DILocation(line: 5654, column: 29, scope: !18229)
!18229 = distinct !DILexicalBlock(scope: !2064, file: !4, line: 5654, column: 9)
!18230 = !DILocation(line: 5654, column: 32, scope: !18229)
!18231 = !DILocation(line: 5654, column: 35, scope: !18229)
!18232 = !DILocation(line: 5654, column: 38, scope: !18229)
!18233 = !DILocation(line: 5654, column: 40, scope: !18229)
!18234 = !DILocation(line: 5654, column: 39, scope: !18229)
!18235 = !DILocation(line: 5654, column: 44, scope: !18229)
!18236 = !DILocation(line: 5654, column: 47, scope: !18229)
!18237 = !DILocation(line: 5654, column: 10, scope: !18229)
!18238 = !DILocation(line: 5654, column: 9, scope: !2064)
!18239 = !DILocation(line: 5655, column: 9, scope: !18240)
!18240 = distinct !DILexicalBlock(scope: !18229, file: !4, line: 5654, column: 51)
!18241 = !DILocation(line: 5657, column: 20, scope: !2064)
!18242 = !DILocation(line: 5657, column: 23, scope: !2064)
!18243 = !DILocation(line: 5657, column: 26, scope: !2064)
!18244 = !DILocation(line: 5657, column: 28, scope: !2064)
!18245 = !DILocation(line: 5657, column: 27, scope: !2064)
!18246 = !DILocation(line: 5657, column: 5, scope: !2064)
!18247 = !DILocation(line: 5658, column: 22, scope: !2064)
!18248 = !DILocation(line: 5658, column: 24, scope: !2064)
!18249 = !DILocation(line: 5658, column: 23, scope: !2064)
!18250 = !DILocation(line: 5658, column: 27, scope: !2064)
!18251 = !DILocation(line: 5658, column: 30, scope: !2064)
!18252 = !DILocation(line: 5658, column: 32, scope: !2064)
!18253 = !DILocation(line: 5658, column: 31, scope: !2064)
!18254 = !DILocation(line: 5658, column: 5, scope: !2064)
!18255 = !DILocation(line: 5660, column: 5, scope: !2064)
!18256 = !DILocation(line: 5661, column: 1, scope: !2064)
!18257 = !DILocation(line: 6388, column: 32, scope: !2125)
!18258 = !DILocation(line: 6388, column: 45, scope: !2125)
!18259 = !DILocation(line: 6390, column: 5, scope: !2125)
!18260 = !DILocation(line: 6390, column: 19, scope: !2125)
!18261 = !DILocation(line: 6391, column: 5, scope: !2125)
!18262 = !DILocation(line: 6391, column: 16, scope: !2125)
!18263 = !DILocation(line: 6391, column: 34, scope: !2125)
!18264 = !DILocation(line: 6391, column: 40, scope: !2125)
!18265 = !DILocation(line: 6391, column: 50, scope: !2125)
!18266 = !DILocation(line: 6391, column: 95, scope: !2125)
!18267 = !DILocation(line: 6392, column: 5, scope: !2125)
!18268 = !DILocation(line: 6392, column: 17, scope: !2125)
!18269 = !DILocation(line: 6392, column: 20, scope: !2125)
!18270 = !DILocation(line: 6394, column: 20, scope: !2125)
!18271 = !DILocation(line: 6394, column: 9, scope: !2125)
!18272 = !DILocation(line: 6394, column: 7, scope: !2125)
!18273 = !DILocation(line: 6395, column: 9, scope: !18274)
!18274 = distinct !DILexicalBlock(scope: !2125, file: !4, line: 6395, column: 9)
!18275 = !DILocation(line: 6395, column: 11, scope: !18274)
!18276 = !DILocation(line: 6395, column: 9, scope: !2125)
!18277 = !DILocation(line: 6397, column: 31, scope: !18278)
!18278 = distinct !DILexicalBlock(scope: !18274, file: !4, line: 6395, column: 16)
!18279 = !DILocation(line: 6397, column: 16, scope: !18278)
!18280 = !DILocation(line: 6397, column: 34, scope: !18278)
!18281 = !DILocation(line: 6397, column: 9, scope: !18278)
!18282 = !DILocation(line: 6399, column: 14, scope: !18283)
!18283 = distinct !DILexicalBlock(scope: !18274, file: !4, line: 6399, column: 14)
!18284 = !DILocation(line: 6399, column: 16, scope: !18283)
!18285 = !DILocation(line: 6399, column: 14, scope: !18274)
!18286 = !DILocation(line: 6401, column: 31, scope: !18287)
!18287 = distinct !DILexicalBlock(scope: !18283, file: !4, line: 6399, column: 22)
!18288 = !DILocation(line: 6401, column: 32, scope: !18287)
!18289 = !DILocation(line: 6401, column: 16, scope: !18287)
!18290 = !DILocation(line: 6401, column: 36, scope: !18287)
!18291 = !DILocation(line: 6401, column: 9, scope: !18287)
!18292 = !DILocation(line: 6404, column: 9, scope: !18293)
!18293 = distinct !DILexicalBlock(scope: !18283, file: !4, line: 6403, column: 10)
!18294 = !DILocation(line: 6405, column: 28, scope: !18293)
!18295 = !DILocation(line: 6405, column: 46, scope: !18293)
!18296 = !DILocation(line: 6405, column: 9, scope: !18293)
!18297 = !DILocation(line: 6406, column: 13, scope: !18298)
!18298 = distinct !DILexicalBlock(scope: !18293, file: !4, line: 6406, column: 13)
!18299 = !DILocation(line: 6406, column: 13, scope: !18293)
!18300 = !DILocation(line: 6407, column: 13, scope: !18301)
!18301 = distinct !DILexicalBlock(scope: !18298, file: !4, line: 6406, column: 38)
!18302 = !DILocation(line: 6408, column: 13, scope: !18301)
!18303 = !DILocation(line: 6410, column: 13, scope: !18293)
!18304 = !DILocation(line: 6410, column: 11, scope: !18293)
!18305 = !DILocation(line: 6411, column: 9, scope: !18293)
!18306 = !DILocation(line: 6415, column: 17, scope: !18293)
!18307 = !DILocation(line: 6415, column: 19, scope: !18293)
!18308 = !DILocation(line: 6415, column: 16, scope: !18293)
!18309 = !DILocation(line: 6415, column: 27, scope: !18310)
!18310 = !DILexicalBlockFile(scope: !18293, file: !4, discriminator: 1)
!18311 = !DILocation(line: 6415, column: 28, scope: !18293)
!18312 = !DILocation(line: 6415, column: 33, scope: !18313)
!18313 = !DILexicalBlockFile(scope: !18293, file: !4, discriminator: 2)
!18314 = !DILocation(line: 6415, column: 34, scope: !18293)
!18315 = !DILocation(line: 6415, column: 9, scope: !18316)
!18316 = !DILexicalBlockFile(scope: !18317, file: !4, discriminator: 4)
!18317 = !DILexicalBlockFile(scope: !18293, file: !4, discriminator: 3)
!18318 = !DILocation(line: 6415, column: 9, scope: !18293)
!18319 = !DILocation(line: 6417, column: 1, scope: !2125)
!18320 = !DILocation(line: 6157, column: 22, scope: !2148)
!18321 = !DILocation(line: 6157, column: 37, scope: !2148)
!18322 = !DILocation(line: 6157, column: 51, scope: !2148)
!18323 = !DILocation(line: 6157, column: 65, scope: !2148)
!18324 = !DILocation(line: 6158, column: 36, scope: !2148)
!18325 = !DILocation(line: 6158, column: 51, scope: !2148)
!18326 = !DILocation(line: 6160, column: 5, scope: !2148)
!18327 = !DILocation(line: 6160, column: 14, scope: !2148)
!18328 = !DILocation(line: 6161, column: 5, scope: !2148)
!18329 = !DILocation(line: 6161, column: 19, scope: !2148)
!18330 = !DILocation(line: 6162, column: 5, scope: !2148)
!18331 = !DILocation(line: 6162, column: 16, scope: !2148)
!18332 = !DILocation(line: 6162, column: 35, scope: !2148)
!18333 = !DILocation(line: 6162, column: 41, scope: !2148)
!18334 = !DILocation(line: 6162, column: 47, scope: !2148)
!18335 = !DILocation(line: 6162, column: 92, scope: !2148)
!18336 = !DILocation(line: 6165, column: 5, scope: !2148)
!18337 = !DILocation(line: 6168, column: 15, scope: !2148)
!18338 = !DILocation(line: 6168, column: 29, scope: !2148)
!18339 = !DILocation(line: 6168, column: 5, scope: !2148)
!18340 = !DILocation(line: 6170, column: 5, scope: !2148)
!18341 = !DILocation(line: 6170, column: 24, scope: !18342)
!18342 = !DILexicalBlockFile(scope: !18343, file: !4, discriminator: 2)
!18343 = !DILexicalBlockFile(scope: !2148, file: !4, discriminator: 1)
!18344 = !DILocation(line: 6170, column: 13, scope: !2148)
!18345 = !DILocation(line: 6170, column: 12, scope: !2148)
!18346 = !DILocation(line: 6171, column: 23, scope: !18347)
!18347 = distinct !DILexicalBlock(scope: !18348, file: !4, line: 6171, column: 13)
!18348 = distinct !DILexicalBlock(scope: !2148, file: !4, line: 6170, column: 31)
!18349 = !DILocation(line: 6171, column: 13, scope: !18347)
!18350 = !DILocation(line: 6171, column: 13, scope: !18348)
!18351 = !DILocation(line: 6172, column: 22, scope: !18352)
!18352 = distinct !DILexicalBlock(scope: !18347, file: !4, line: 6171, column: 30)
!18353 = !DILocation(line: 6172, column: 30, scope: !18352)
!18354 = !DILocation(line: 6172, column: 38, scope: !18352)
!18355 = !DILocation(line: 6172, column: 45, scope: !18352)
!18356 = !DILocation(line: 6172, column: 13, scope: !18352)
!18357 = !DILocation(line: 6173, column: 24, scope: !18352)
!18358 = !DILocation(line: 6173, column: 14, scope: !18352)
!18359 = !DILocation(line: 6173, column: 21, scope: !18352)
!18360 = !DILocation(line: 6174, column: 31, scope: !18361)
!18361 = distinct !DILexicalBlock(scope: !18352, file: !4, line: 6174, column: 17)
!18362 = !DILocation(line: 6174, column: 17, scope: !18361)
!18363 = !DILocation(line: 6174, column: 39, scope: !18361)
!18364 = !DILocation(line: 6175, column: 34, scope: !18361)
!18365 = !DILocation(line: 6175, column: 18, scope: !18361)
!18366 = !DILocation(line: 6175, column: 42, scope: !18361)
!18367 = !DILocation(line: 6175, column: 46, scope: !18368)
!18368 = !DILexicalBlockFile(scope: !18361, file: !4, discriminator: 1)
!18369 = !DILocation(line: 6175, column: 57, scope: !18361)
!18370 = !DILocation(line: 6174, column: 17, scope: !18352)
!18371 = !DILocation(line: 6176, column: 17, scope: !18372)
!18372 = distinct !DILexicalBlock(scope: !18361, file: !4, line: 6175, column: 74)
!18373 = !DILocation(line: 6178, column: 9, scope: !18352)
!18374 = !DILocation(line: 6179, column: 18, scope: !18348)
!18375 = !DILocation(line: 6179, column: 25, scope: !18348)
!18376 = !DILocation(line: 6179, column: 32, scope: !18348)
!18377 = !DILocation(line: 6179, column: 39, scope: !18348)
!18378 = !DILocation(line: 6179, column: 9, scope: !18348)
!18379 = !DILocation(line: 6180, column: 21, scope: !18348)
!18380 = !DILocation(line: 6180, column: 27, scope: !18348)
!18381 = !DILocation(line: 6180, column: 9, scope: !18348)
!18382 = !DILocation(line: 6181, column: 23, scope: !18383)
!18383 = distinct !DILexicalBlock(scope: !18348, file: !4, line: 6181, column: 13)
!18384 = !DILocation(line: 6181, column: 13, scope: !18383)
!18385 = !DILocation(line: 6181, column: 30, scope: !18383)
!18386 = !DILocation(line: 6181, column: 43, scope: !18387)
!18387 = !DILexicalBlockFile(scope: !18383, file: !4, discriminator: 1)
!18388 = !DILocation(line: 6181, column: 33, scope: !18383)
!18389 = !DILocation(line: 6181, column: 13, scope: !18348)
!18390 = !DILocation(line: 6182, column: 26, scope: !18391)
!18391 = distinct !DILexicalBlock(scope: !18383, file: !4, line: 6181, column: 50)
!18392 = !DILocation(line: 6182, column: 34, scope: !18391)
!18393 = !DILocation(line: 6182, column: 44, scope: !18391)
!18394 = !DILocation(line: 6182, column: 160, scope: !18391)
!18395 = !DILocation(line: 6182, column: 13, scope: !18391)
!18396 = !DILocation(line: 6183, column: 13, scope: !18391)
!18397 = !DILocation(line: 6186, column: 18, scope: !2148)
!18398 = !DILocation(line: 6186, column: 26, scope: !2148)
!18399 = !DILocation(line: 6186, column: 5, scope: !2148)
!18400 = !DILocation(line: 6187, column: 1, scope: !2148)
!18401 = !DILocation(line: 6187, column: 1, scope: !18343)
!18402 = !DILocation(line: 968, column: 31, scope: !2217)
!18403 = !DILocation(line: 970, column: 5, scope: !2217)
!18404 = !DILocation(line: 970, column: 9, scope: !2217)
!18405 = !DILocation(line: 972, column: 25, scope: !2217)
!18406 = !DILocation(line: 972, column: 9, scope: !2217)
!18407 = !DILocation(line: 972, column: 7, scope: !2217)
!18408 = !DILocation(line: 973, column: 9, scope: !18409)
!18409 = distinct !DILexicalBlock(scope: !2217, file: !4, line: 973, column: 9)
!18410 = !DILocation(line: 973, column: 27, scope: !18409)
!18411 = !DILocation(line: 973, column: 17, scope: !18409)
!18412 = !DILocation(line: 973, column: 29, scope: !18409)
!18413 = !DILocation(line: 973, column: 14, scope: !18409)
!18414 = !DILocation(line: 973, column: 9, scope: !2217)
!18415 = !DILocation(line: 974, column: 9, scope: !18416)
!18416 = distinct !DILexicalBlock(scope: !18409, file: !4, line: 973, column: 33)
!18417 = !DILocation(line: 977, column: 5, scope: !2217)
!18418 = !DILocation(line: 978, column: 1, scope: !2217)
!18419 = !DILocation(line: 207, column: 34, scope: !2221)
!18420 = !DILocation(line: 207, column: 52, scope: !2221)
!18421 = !DILocation(line: 209, column: 5, scope: !2221)
!18422 = !DILocation(line: 209, column: 12, scope: !18423)
!18423 = !DILexicalBlockFile(scope: !18424, file: !1592, discriminator: 2)
!18424 = !DILexicalBlockFile(scope: !2221, file: !1592, discriminator: 1)
!18425 = !DILocation(line: 209, column: 18, scope: !2221)
!18426 = !DILocation(line: 210, column: 18, scope: !18427)
!18427 = distinct !DILexicalBlock(scope: !18428, file: !1592, line: 210, column: 13)
!18428 = distinct !DILexicalBlock(scope: !2221, file: !1592, line: 209, column: 24)
!18429 = !DILocation(line: 210, column: 13, scope: !18427)
!18430 = !DILocation(line: 210, column: 23, scope: !18427)
!18431 = !DILocation(line: 210, column: 13, scope: !18428)
!18432 = !DILocation(line: 210, column: 54, scope: !18433)
!18433 = !DILexicalBlockFile(scope: !18427, file: !1592, discriminator: 1)
!18434 = !DILocation(line: 212, column: 5, scope: !2221)
!18435 = !DILocation(line: 213, column: 1, scope: !2221)
!18436 = !DILocation(line: 7514, column: 29, scope: !2281)
!18437 = !DILocation(line: 7514, column: 43, scope: !2281)
!18438 = !DILocation(line: 7516, column: 5, scope: !2281)
!18439 = !DILocation(line: 7516, column: 16, scope: !2281)
!18440 = !DILocation(line: 7517, column: 5, scope: !2281)
!18441 = !DILocation(line: 7517, column: 16, scope: !2281)
!18442 = !DILocation(line: 7518, column: 5, scope: !2281)
!18443 = !DILocation(line: 7518, column: 16, scope: !2281)
!18444 = !DILocation(line: 7518, column: 19, scope: !2281)
!18445 = !DILocation(line: 7522, column: 5, scope: !2281)
!18446 = !DILocation(line: 7523, column: 14, scope: !18447)
!18447 = distinct !DILexicalBlock(scope: !18448, file: !4, line: 7522, column: 13)
!18448 = distinct !DILexicalBlock(scope: !18449, file: !4, line: 7522, column: 5)
!18449 = distinct !DILexicalBlock(scope: !2281, file: !4, line: 7522, column: 5)
!18450 = !DILocation(line: 7523, column: 19, scope: !18447)
!18451 = !DILocation(line: 7523, column: 17, scope: !18447)
!18452 = !DILocation(line: 7523, column: 23, scope: !18447)
!18453 = !DILocation(line: 7523, column: 11, scope: !18447)
!18454 = !DILocation(line: 7524, column: 14, scope: !18447)
!18455 = !DILocation(line: 7524, column: 18, scope: !18447)
!18456 = !DILocation(line: 7524, column: 16, scope: !18447)
!18457 = !DILocation(line: 7524, column: 12, scope: !18447)
!18458 = !DILocation(line: 7525, column: 13, scope: !18459)
!18459 = distinct !DILexicalBlock(scope: !18447, file: !4, line: 7525, column: 13)
!18460 = !DILocation(line: 7525, column: 21, scope: !18459)
!18461 = !DILocation(line: 7525, column: 18, scope: !18459)
!18462 = !DILocation(line: 7525, column: 13, scope: !18447)
!18463 = !DILocation(line: 7526, column: 17, scope: !18464)
!18464 = distinct !DILexicalBlock(scope: !18465, file: !4, line: 7526, column: 17)
!18465 = distinct !DILexicalBlock(scope: !18459, file: !4, line: 7525, column: 25)
!18466 = !DILocation(line: 7526, column: 24, scope: !18464)
!18467 = !DILocation(line: 7526, column: 31, scope: !18464)
!18468 = !DILocation(line: 7526, column: 30, scope: !18464)
!18469 = !DILocation(line: 7526, column: 27, scope: !18464)
!18470 = !DILocation(line: 7526, column: 33, scope: !18464)
!18471 = !DILocation(line: 7526, column: 22, scope: !18464)
!18472 = !DILocation(line: 7526, column: 17, scope: !18465)
!18473 = !DILocation(line: 7527, column: 17, scope: !18474)
!18474 = distinct !DILexicalBlock(scope: !18464, file: !4, line: 7526, column: 38)
!18475 = !DILocation(line: 7529, column: 18, scope: !18465)
!18476 = !DILocation(line: 7529, column: 20, scope: !18465)
!18477 = !DILocation(line: 7529, column: 16, scope: !18465)
!18478 = !DILocation(line: 7530, column: 9, scope: !18465)
!18479 = !DILocation(line: 7532, column: 18, scope: !18480)
!18480 = distinct !DILexicalBlock(scope: !18459, file: !4, line: 7531, column: 14)
!18481 = !DILocation(line: 7532, column: 20, scope: !18480)
!18482 = !DILocation(line: 7532, column: 16, scope: !18480)
!18483 = !DILocation(line: 7522, column: 5, scope: !18448)
!18484 = !DILocation(line: 7549, column: 18, scope: !2281)
!18485 = !DILocation(line: 7549, column: 5, scope: !2281)
!18486 = !DILocation(line: 7550, column: 21, scope: !2281)
!18487 = !DILocation(line: 7550, column: 5, scope: !2281)
!18488 = !DILocation(line: 7551, column: 33, scope: !2281)
!18489 = !DILocation(line: 7551, column: 31, scope: !2281)
!18490 = !DILocation(line: 7551, column: 5, scope: !2281)
!18491 = !DILocation(line: 7551, column: 8, scope: !2281)
!18492 = !DILocation(line: 7551, column: 16, scope: !2281)
!18493 = !DILocation(line: 7552, column: 5, scope: !2281)
!18494 = !DILocation(line: 7552, column: 8, scope: !2281)
!18495 = !DILocation(line: 7552, column: 12, scope: !2281)
!18496 = !DILocation(line: 7553, column: 5, scope: !2281)
!18497 = !DILocation(line: 7553, column: 8, scope: !2281)
!18498 = !DILocation(line: 7553, column: 12, scope: !2281)
!18499 = !DILocation(line: 7554, column: 19, scope: !2281)
!18500 = !DILocation(line: 7554, column: 5, scope: !2281)
!18501 = !DILocation(line: 7555, column: 1, scope: !2281)
!18502 = !DILocation(line: 7487, column: 35, scope: !2291)
!18503 = !DILocation(line: 7488, column: 35, scope: !2291)
!18504 = !DILocation(line: 7488, column: 56, scope: !2291)
!18505 = !DILocation(line: 7490, column: 5, scope: !2291)
!18506 = !DILocation(line: 7490, column: 17, scope: !2291)
!18507 = !DILocation(line: 7491, column: 5, scope: !2291)
!18508 = !DILocation(line: 7491, column: 9, scope: !2291)
!18509 = !DILocation(line: 7494, column: 9, scope: !18510)
!18510 = distinct !DILexicalBlock(scope: !2291, file: !4, line: 7494, column: 9)
!18511 = !DILocation(line: 7494, column: 20, scope: !18510)
!18512 = !DILocation(line: 7494, column: 17, scope: !18510)
!18513 = !DILocation(line: 7494, column: 9, scope: !2291)
!18514 = !DILocation(line: 7494, column: 30, scope: !18515)
!18515 = !DILexicalBlockFile(scope: !18510, file: !4, discriminator: 1)
!18516 = !DILocation(line: 7494, column: 30, scope: !18510)
!18517 = !DILocation(line: 7496, column: 7, scope: !2291)
!18518 = !DILocation(line: 7496, column: 16, scope: !2291)
!18519 = !DILocation(line: 7496, column: 14, scope: !2291)
!18520 = !DILocation(line: 7497, column: 5, scope: !2291)
!18521 = !DILocation(line: 7498, column: 14, scope: !18522)
!18522 = distinct !DILexicalBlock(scope: !2291, file: !4, line: 7497, column: 8)
!18523 = !DILocation(line: 7498, column: 15, scope: !18522)
!18524 = !DILocation(line: 7498, column: 19, scope: !18522)
!18525 = !DILocation(line: 7498, column: 11, scope: !18522)
!18526 = !DILocation(line: 7499, column: 22, scope: !18522)
!18527 = !DILocation(line: 7499, column: 16, scope: !18522)
!18528 = !DILocation(line: 7499, column: 9, scope: !18522)
!18529 = !DILocation(line: 7499, column: 20, scope: !18522)
!18530 = !DILocation(line: 7500, column: 5, scope: !18522)
!18531 = !DILocation(line: 7500, column: 14, scope: !18532)
!18532 = !DILexicalBlockFile(scope: !2291, file: !4, discriminator: 1)
!18533 = !DILocation(line: 7500, column: 18, scope: !2291)
!18534 = !DILocation(line: 7500, column: 16, scope: !2291)
!18535 = !DILocation(line: 7502, column: 12, scope: !2291)
!18536 = !DILocation(line: 7502, column: 13, scope: !2291)
!18537 = !DILocation(line: 7502, column: 5, scope: !2291)
!18538 = !DILocation(line: 7503, column: 1, scope: !2291)
!18539 = !DILocation(line: 7885, column: 27, scope: !2316)
!18540 = !DILocation(line: 7885, column: 37, scope: !2316)
!18541 = !DILocation(line: 7887, column: 5, scope: !2316)
!18542 = !DILocation(line: 7887, column: 13, scope: !2316)
!18543 = !DILocation(line: 7888, column: 23, scope: !2316)
!18544 = !DILocation(line: 7888, column: 22, scope: !2316)
!18545 = !DILocation(line: 7888, column: 26, scope: !2316)
!18546 = !DILocation(line: 7888, column: 10, scope: !2316)
!18547 = !DILocation(line: 7888, column: 6, scope: !2316)
!18548 = !DILocation(line: 7888, column: 8, scope: !2316)
!18549 = !DILocation(line: 7889, column: 13, scope: !2316)
!18550 = !DILocation(line: 7889, column: 12, scope: !2316)
!18551 = !DILocation(line: 7890, column: 1, scope: !2316)
!18552 = !DILocation(line: 7889, column: 5, scope: !2316)
!18553 = !DILocation(line: 7893, column: 27, scope: !2334)
!18554 = !DILocation(line: 7893, column: 37, scope: !2334)
!18555 = !DILocation(line: 7895, column: 5, scope: !2334)
!18556 = !DILocation(line: 7895, column: 13, scope: !2334)
!18557 = !DILocation(line: 7896, column: 23, scope: !2334)
!18558 = !DILocation(line: 7896, column: 22, scope: !2334)
!18559 = !DILocation(line: 7896, column: 26, scope: !2334)
!18560 = !DILocation(line: 7896, column: 10, scope: !2334)
!18561 = !DILocation(line: 7896, column: 6, scope: !2334)
!18562 = !DILocation(line: 7896, column: 8, scope: !2334)
!18563 = !DILocation(line: 7897, column: 13, scope: !2334)
!18564 = !DILocation(line: 7897, column: 12, scope: !2334)
!18565 = !DILocation(line: 7898, column: 1, scope: !2334)
!18566 = !DILocation(line: 7897, column: 5, scope: !2334)
