; ModuleID = 'irs-onlybc/audioop.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.PyModuleDef = type { %struct.PyModuleDef_Base, i8*, i8*, i64, %struct.PyMethodDef*, i32 (%struct._object*)*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, void (i8*)* }
%struct.PyModuleDef_Base = type { %struct._object, %struct._object* ()*, i64, %struct._object* }
%struct._object = type { i64, %struct._typeobject* }
%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMemberDef = type opaque
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }

@audioopmodule = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, %struct._typeobject* null }, %struct._object* ()* null, i64 0, %struct._object* null }, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i8* null, i64 -1, %struct.PyMethodDef* getelementptr inbounds ([27 x %struct.PyMethodDef], [27 x %struct.PyMethodDef]* @audioop_methods, i32 0, i32 0), i32 (%struct._object*)* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, void (i8*)* null }, align 8
@.str = private unnamed_addr constant [14 x i8] c"audioop.error\00", align 1
@AudioopError = internal global %struct._object* null, align 8
@.str.1 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"audioop\00", align 1
@audioop_methods = internal global [27 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_max to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @audioop_max__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_minmax to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([116 x i8], [116 x i8]* @audioop_minmax__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_avg to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @audioop_avg__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_maxpp to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @audioop_maxpp__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_avgpp to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @audioop_avgpp__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_rms to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @audioop_rms__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_findfit to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @audioop_findfit__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_findmax to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @audioop_findmax__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_findfactor to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @audioop_findfactor__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_cross to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @audioop_cross__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_mul to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @audioop_mul__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_add to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @audioop_add__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_bias to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([126 x i8], [126 x i8]* @audioop_bias__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_ulaw2lin to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @audioop_ulaw2lin__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_lin2ulaw to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @audioop_lin2ulaw__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_alaw2lin to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @audioop_alaw2lin__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_lin2alaw to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @audioop_lin2alaw__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_lin2lin to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @audioop_lin2lin__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_adpcm2lin to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @audioop_adpcm2lin__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_lin2adpcm to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @audioop_lin2adpcm__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_tomono to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @audioop_tomono__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_tostereo to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @audioop_tostereo__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_getsample to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @audioop_getsample__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_reverse to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @audioop_reverse__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_byteswap to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @audioop_byteswap__doc__, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_ratecv to %struct._object* (%struct._object*, %struct._object*)*), i32 1, i8* getelementptr inbounds ([150 x i8], [150 x i8]* @audioop_ratecv__doc__, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@.str.3 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@audioop_max__doc__ = internal global [108 x i8] c"max($module, fragment, width, /)\0A--\0A\0AReturn the maximum of the absolute value of all samples in a fragment.\00", align 16
@.str.4 = private unnamed_addr constant [7 x i8] c"minmax\00", align 1
@audioop_minmax__doc__ = internal global [116 x i8] c"minmax($module, fragment, width, /)\0A--\0A\0AReturn the minimum and maximum values of all samples in the sound fragment.\00", align 16
@.str.5 = private unnamed_addr constant [4 x i8] c"avg\00", align 1
@audioop_avg__doc__ = internal global [90 x i8] c"avg($module, fragment, width, /)\0A--\0A\0AReturn the average over all samples in the fragment.\00", align 16
@.str.6 = private unnamed_addr constant [6 x i8] c"maxpp\00", align 1
@audioop_maxpp__doc__ = internal global [97 x i8] c"maxpp($module, fragment, width, /)\0A--\0A\0AReturn the maximum peak-peak value in the sound fragment.\00", align 16
@.str.7 = private unnamed_addr constant [6 x i8] c"avgpp\00", align 1
@audioop_avgpp__doc__ = internal global [108 x i8] c"avgpp($module, fragment, width, /)\0A--\0A\0AReturn the average peak-peak value over all samples in the fragment.\00", align 16
@.str.8 = private unnamed_addr constant [4 x i8] c"rms\00", align 1
@audioop_rms__doc__ = internal global [107 x i8] c"rms($module, fragment, width, /)\0A--\0A\0AReturn the root-mean-square of the fragment, i.e. sqrt(sum(S_i^2)/n).\00", align 16
@.str.9 = private unnamed_addr constant [8 x i8] c"findfit\00", align 1
@audioop_findfit__doc__ = internal global [114 x i8] c"findfit($module, fragment, reference, /)\0A--\0A\0ATry to match reference as well as possible to a portion of fragment.\00", align 16
@.str.10 = private unnamed_addr constant [8 x i8] c"findmax\00", align 1
@audioop_findmax__doc__ = internal global [122 x i8] c"findmax($module, fragment, length, /)\0A--\0A\0ASearch fragment for a slice of specified number of samples with maximum energy.\00", align 16
@.str.11 = private unnamed_addr constant [11 x i8] c"findfactor\00", align 1
@audioop_findfactor__doc__ = internal global [127 x i8] c"findfactor($module, fragment, reference, /)\0A--\0A\0AReturn a factor F such that rms(add(fragment, mul(reference, -F))) is minimal.\00", align 16
@.str.12 = private unnamed_addr constant [6 x i8] c"cross\00", align 1
@audioop_cross__doc__ = internal global [114 x i8] c"cross($module, fragment, width, /)\0A--\0A\0AReturn the number of zero crossings in the fragment passed as an argument.\00", align 16
@.str.13 = private unnamed_addr constant [4 x i8] c"mul\00", align 1
@audioop_mul__doc__ = internal global [156 x i8] c"mul($module, fragment, width, factor, /)\0A--\0A\0AReturn a fragment that has all samples in the original fragment multiplied by the floating-point value factor.\00", align 16
@.str.14 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@audioop_add__doc__ = internal global [130 x i8] c"add($module, fragment1, fragment2, width, /)\0A--\0A\0AReturn a fragment which is the addition of the two samples passed as parameters.\00", align 16
@.str.15 = private unnamed_addr constant [5 x i8] c"bias\00", align 1
@audioop_bias__doc__ = internal global [126 x i8] c"bias($module, fragment, width, bias, /)\0A--\0A\0AReturn a fragment that is the original fragment with a bias added to each sample.\00", align 16
@.str.16 = private unnamed_addr constant [9 x i8] c"ulaw2lin\00", align 1
@audioop_ulaw2lin__doc__ = internal global [121 x i8] c"ulaw2lin($module, fragment, width, /)\0A--\0A\0AConvert sound fragments in u-LAW encoding to linearly encoded sound fragments.\00", align 16
@.str.17 = private unnamed_addr constant [9 x i8] c"lin2ulaw\00", align 1
@audioop_lin2ulaw__doc__ = internal global [99 x i8] c"lin2ulaw($module, fragment, width, /)\0A--\0A\0AConvert samples in the audio fragment to u-LAW encoding.\00", align 16
@.str.18 = private unnamed_addr constant [9 x i8] c"alaw2lin\00", align 1
@audioop_alaw2lin__doc__ = internal global [121 x i8] c"alaw2lin($module, fragment, width, /)\0A--\0A\0AConvert sound fragments in a-LAW encoding to linearly encoded sound fragments.\00", align 16
@.str.19 = private unnamed_addr constant [9 x i8] c"lin2alaw\00", align 1
@audioop_lin2alaw__doc__ = internal global [99 x i8] c"lin2alaw($module, fragment, width, /)\0A--\0A\0AConvert samples in the audio fragment to a-LAW encoding.\00", align 16
@.str.20 = private unnamed_addr constant [8 x i8] c"lin2lin\00", align 1
@audioop_lin2lin__doc__ = internal global [106 x i8] c"lin2lin($module, fragment, width, newwidth, /)\0A--\0A\0AConvert samples between 1-, 2-, 3- and 4-byte formats.\00", align 16
@.str.21 = private unnamed_addr constant [10 x i8] c"adpcm2lin\00", align 1
@audioop_adpcm2lin__doc__ = internal global [113 x i8] c"adpcm2lin($module, fragment, width, state, /)\0A--\0A\0ADecode an Intel/DVI ADPCM coded fragment to a linear fragment.\00", align 16
@.str.22 = private unnamed_addr constant [10 x i8] c"lin2adpcm\00", align 1
@audioop_lin2adpcm__doc__ = internal global [101 x i8] c"lin2adpcm($module, fragment, width, state, /)\0A--\0A\0AConvert samples to 4 bit Intel/DVI ADPCM encoding.\00", align 16
@.str.23 = private unnamed_addr constant [7 x i8] c"tomono\00", align 1
@audioop_tomono__doc__ = internal global [104 x i8] c"tomono($module, fragment, width, lfactor, rfactor, /)\0A--\0A\0AConvert a stereo fragment to a mono fragment.\00", align 16
@.str.24 = private unnamed_addr constant [9 x i8] c"tostereo\00", align 1
@audioop_tostereo__doc__ = internal global [109 x i8] c"tostereo($module, fragment, width, lfactor, rfactor, /)\0A--\0A\0AGenerate a stereo fragment from a mono fragment.\00", align 16
@.str.25 = private unnamed_addr constant [10 x i8] c"getsample\00", align 1
@audioop_getsample__doc__ = internal global [102 x i8] c"getsample($module, fragment, width, index, /)\0A--\0A\0AReturn the value of sample index from the fragment.\00", align 16
@.str.26 = private unnamed_addr constant [8 x i8] c"reverse\00", align 1
@audioop_reverse__doc__ = internal global [110 x i8] c"reverse($module, fragment, width, /)\0A--\0A\0AReverse the samples in a fragment and returns the modified fragment.\00", align 16
@.str.27 = private unnamed_addr constant [9 x i8] c"byteswap\00", align 1
@audioop_byteswap__doc__ = internal global [102 x i8] c"byteswap($module, fragment, width, /)\0A--\0A\0AConvert big-endian samples to little-endian and vice versa.\00", align 16
@.str.28 = private unnamed_addr constant [7 x i8] c"ratecv\00", align 1
@audioop_ratecv__doc__ = internal global [150 x i8] c"ratecv($module, fragment, width, nchannels, inrate, outrate, state,\0A       weightA=1, weightB=0, /)\0A--\0A\0AConvert the frame rate of the input fragment.\00", align 16
@.str.29 = private unnamed_addr constant [8 x i8] c"y*i:max\00", align 1
@.str.30 = private unnamed_addr constant [29 x i8] c"not a whole number of frames\00", align 1
@.str.31 = private unnamed_addr constant [28 x i8] c"Size should be 1, 2, 3 or 4\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"y*i:minmax\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"(ii)\00", align 1
@.str.34 = private unnamed_addr constant [8 x i8] c"y*i:avg\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"y*i:maxpp\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"y*i:avgpp\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"y*i:rms\00", align 1
@.str.38 = private unnamed_addr constant [13 x i8] c"y*y*:findfit\00", align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"Strings should be even-sized\00", align 1
@.str.40 = private unnamed_addr constant [30 x i8] c"First sample should be longer\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"(nf)\00", align 1
@.str.42 = private unnamed_addr constant [12 x i8] c"y*n:findmax\00", align 1
@.str.43 = private unnamed_addr constant [30 x i8] c"Input sample should be longer\00", align 1
@.str.44 = private unnamed_addr constant [16 x i8] c"y*y*:findfactor\00", align 1
@.str.45 = private unnamed_addr constant [28 x i8] c"Samples should be same size\00", align 1
@.str.46 = private unnamed_addr constant [10 x i8] c"y*i:cross\00", align 1
@.str.47 = private unnamed_addr constant [9 x i8] c"y*id:mul\00", align 1
@maxvals = internal constant [5 x i32] [i32 0, i32 127, i32 32767, i32 8388607, i32 2147483647], align 16
@minvals = internal constant [5 x i32] [i32 0, i32 -128, i32 -32768, i32 -8388608, i32 -2147483648], align 16
@.str.48 = private unnamed_addr constant [10 x i8] c"y*y*i:add\00", align 1
@.str.49 = private unnamed_addr constant [27 x i8] c"Lengths should be the same\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"y*ii:bias\00", align 1
@masks = internal constant [5 x i32] [i32 0, i32 255, i32 65535, i32 16777215, i32 -1], align 16
@.str.51 = private unnamed_addr constant [13 x i8] c"y*i:ulaw2lin\00", align 1
@PyExc_MemoryError = external global %struct._object*, align 8
@.str.52 = private unnamed_addr constant [36 x i8] c"not enough memory for output buffer\00", align 1
@_st_ulaw2linear16 = internal global [256 x i16] [i16 -32124, i16 -31100, i16 -30076, i16 -29052, i16 -28028, i16 -27004, i16 -25980, i16 -24956, i16 -23932, i16 -22908, i16 -21884, i16 -20860, i16 -19836, i16 -18812, i16 -17788, i16 -16764, i16 -15996, i16 -15484, i16 -14972, i16 -14460, i16 -13948, i16 -13436, i16 -12924, i16 -12412, i16 -11900, i16 -11388, i16 -10876, i16 -10364, i16 -9852, i16 -9340, i16 -8828, i16 -8316, i16 -7932, i16 -7676, i16 -7420, i16 -7164, i16 -6908, i16 -6652, i16 -6396, i16 -6140, i16 -5884, i16 -5628, i16 -5372, i16 -5116, i16 -4860, i16 -4604, i16 -4348, i16 -4092, i16 -3900, i16 -3772, i16 -3644, i16 -3516, i16 -3388, i16 -3260, i16 -3132, i16 -3004, i16 -2876, i16 -2748, i16 -2620, i16 -2492, i16 -2364, i16 -2236, i16 -2108, i16 -1980, i16 -1884, i16 -1820, i16 -1756, i16 -1692, i16 -1628, i16 -1564, i16 -1500, i16 -1436, i16 -1372, i16 -1308, i16 -1244, i16 -1180, i16 -1116, i16 -1052, i16 -988, i16 -924, i16 -876, i16 -844, i16 -812, i16 -780, i16 -748, i16 -716, i16 -684, i16 -652, i16 -620, i16 -588, i16 -556, i16 -524, i16 -492, i16 -460, i16 -428, i16 -396, i16 -372, i16 -356, i16 -340, i16 -324, i16 -308, i16 -292, i16 -276, i16 -260, i16 -244, i16 -228, i16 -212, i16 -196, i16 -180, i16 -164, i16 -148, i16 -132, i16 -120, i16 -112, i16 -104, i16 -96, i16 -88, i16 -80, i16 -72, i16 -64, i16 -56, i16 -48, i16 -40, i16 -32, i16 -24, i16 -16, i16 -8, i16 0, i16 32124, i16 31100, i16 30076, i16 29052, i16 28028, i16 27004, i16 25980, i16 24956, i16 23932, i16 22908, i16 21884, i16 20860, i16 19836, i16 18812, i16 17788, i16 16764, i16 15996, i16 15484, i16 14972, i16 14460, i16 13948, i16 13436, i16 12924, i16 12412, i16 11900, i16 11388, i16 10876, i16 10364, i16 9852, i16 9340, i16 8828, i16 8316, i16 7932, i16 7676, i16 7420, i16 7164, i16 6908, i16 6652, i16 6396, i16 6140, i16 5884, i16 5628, i16 5372, i16 5116, i16 4860, i16 4604, i16 4348, i16 4092, i16 3900, i16 3772, i16 3644, i16 3516, i16 3388, i16 3260, i16 3132, i16 3004, i16 2876, i16 2748, i16 2620, i16 2492, i16 2364, i16 2236, i16 2108, i16 1980, i16 1884, i16 1820, i16 1756, i16 1692, i16 1628, i16 1564, i16 1500, i16 1436, i16 1372, i16 1308, i16 1244, i16 1180, i16 1116, i16 1052, i16 988, i16 924, i16 876, i16 844, i16 812, i16 780, i16 748, i16 716, i16 684, i16 652, i16 620, i16 588, i16 556, i16 524, i16 492, i16 460, i16 428, i16 396, i16 372, i16 356, i16 340, i16 324, i16 308, i16 292, i16 276, i16 260, i16 244, i16 228, i16 212, i16 196, i16 180, i16 164, i16 148, i16 132, i16 120, i16 112, i16 104, i16 96, i16 88, i16 80, i16 72, i16 64, i16 56, i16 48, i16 40, i16 32, i16 24, i16 16, i16 8, i16 0], align 16
@.str.53 = private unnamed_addr constant [13 x i8] c"y*i:lin2ulaw\00", align 1
@seg_uend = internal global [8 x i16] [i16 63, i16 127, i16 255, i16 511, i16 1023, i16 2047, i16 4095, i16 8191], align 16
@.str.54 = private unnamed_addr constant [13 x i8] c"y*i:alaw2lin\00", align 1
@_st_alaw2linear16 = internal global [256 x i16] [i16 -5504, i16 -5248, i16 -6016, i16 -5760, i16 -4480, i16 -4224, i16 -4992, i16 -4736, i16 -7552, i16 -7296, i16 -8064, i16 -7808, i16 -6528, i16 -6272, i16 -7040, i16 -6784, i16 -2752, i16 -2624, i16 -3008, i16 -2880, i16 -2240, i16 -2112, i16 -2496, i16 -2368, i16 -3776, i16 -3648, i16 -4032, i16 -3904, i16 -3264, i16 -3136, i16 -3520, i16 -3392, i16 -22016, i16 -20992, i16 -24064, i16 -23040, i16 -17920, i16 -16896, i16 -19968, i16 -18944, i16 -30208, i16 -29184, i16 -32256, i16 -31232, i16 -26112, i16 -25088, i16 -28160, i16 -27136, i16 -11008, i16 -10496, i16 -12032, i16 -11520, i16 -8960, i16 -8448, i16 -9984, i16 -9472, i16 -15104, i16 -14592, i16 -16128, i16 -15616, i16 -13056, i16 -12544, i16 -14080, i16 -13568, i16 -344, i16 -328, i16 -376, i16 -360, i16 -280, i16 -264, i16 -312, i16 -296, i16 -472, i16 -456, i16 -504, i16 -488, i16 -408, i16 -392, i16 -440, i16 -424, i16 -88, i16 -72, i16 -120, i16 -104, i16 -24, i16 -8, i16 -56, i16 -40, i16 -216, i16 -200, i16 -248, i16 -232, i16 -152, i16 -136, i16 -184, i16 -168, i16 -1376, i16 -1312, i16 -1504, i16 -1440, i16 -1120, i16 -1056, i16 -1248, i16 -1184, i16 -1888, i16 -1824, i16 -2016, i16 -1952, i16 -1632, i16 -1568, i16 -1760, i16 -1696, i16 -688, i16 -656, i16 -752, i16 -720, i16 -560, i16 -528, i16 -624, i16 -592, i16 -944, i16 -912, i16 -1008, i16 -976, i16 -816, i16 -784, i16 -880, i16 -848, i16 5504, i16 5248, i16 6016, i16 5760, i16 4480, i16 4224, i16 4992, i16 4736, i16 7552, i16 7296, i16 8064, i16 7808, i16 6528, i16 6272, i16 7040, i16 6784, i16 2752, i16 2624, i16 3008, i16 2880, i16 2240, i16 2112, i16 2496, i16 2368, i16 3776, i16 3648, i16 4032, i16 3904, i16 3264, i16 3136, i16 3520, i16 3392, i16 22016, i16 20992, i16 24064, i16 23040, i16 17920, i16 16896, i16 19968, i16 18944, i16 30208, i16 29184, i16 32256, i16 31232, i16 26112, i16 25088, i16 28160, i16 27136, i16 11008, i16 10496, i16 12032, i16 11520, i16 8960, i16 8448, i16 9984, i16 9472, i16 15104, i16 14592, i16 16128, i16 15616, i16 13056, i16 12544, i16 14080, i16 13568, i16 344, i16 328, i16 376, i16 360, i16 280, i16 264, i16 312, i16 296, i16 472, i16 456, i16 504, i16 488, i16 408, i16 392, i16 440, i16 424, i16 88, i16 72, i16 120, i16 104, i16 24, i16 8, i16 56, i16 40, i16 216, i16 200, i16 248, i16 232, i16 152, i16 136, i16 184, i16 168, i16 1376, i16 1312, i16 1504, i16 1440, i16 1120, i16 1056, i16 1248, i16 1184, i16 1888, i16 1824, i16 2016, i16 1952, i16 1632, i16 1568, i16 1760, i16 1696, i16 688, i16 656, i16 752, i16 720, i16 560, i16 528, i16 624, i16 592, i16 944, i16 912, i16 1008, i16 976, i16 816, i16 784, i16 880, i16 848], align 16
@.str.55 = private unnamed_addr constant [13 x i8] c"y*i:lin2alaw\00", align 1
@seg_aend = internal global [8 x i16] [i16 31, i16 63, i16 127, i16 255, i16 511, i16 1023, i16 2047, i16 4095], align 16
@.str.56 = private unnamed_addr constant [13 x i8] c"y*ii:lin2lin\00", align 1
@.str.57 = private unnamed_addr constant [15 x i8] c"y*iO:adpcm2lin\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@PyExc_TypeError = external global %struct._object*, align 8
@.str.58 = private unnamed_addr constant [30 x i8] c"state must be a tuple or None\00", align 1
@.str.59 = private unnamed_addr constant [3 x i8] c"ii\00", align 1
@stepsizeTable = internal global [89 x i32] [i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 16, i32 17, i32 19, i32 21, i32 23, i32 25, i32 28, i32 31, i32 34, i32 37, i32 41, i32 45, i32 50, i32 55, i32 60, i32 66, i32 73, i32 80, i32 88, i32 97, i32 107, i32 118, i32 130, i32 143, i32 157, i32 173, i32 190, i32 209, i32 230, i32 253, i32 279, i32 307, i32 337, i32 371, i32 408, i32 449, i32 494, i32 544, i32 598, i32 658, i32 724, i32 796, i32 876, i32 963, i32 1060, i32 1166, i32 1282, i32 1411, i32 1552, i32 1707, i32 1878, i32 2066, i32 2272, i32 2499, i32 2749, i32 3024, i32 3327, i32 3660, i32 4026, i32 4428, i32 4871, i32 5358, i32 5894, i32 6484, i32 7132, i32 7845, i32 8630, i32 9493, i32 10442, i32 11487, i32 12635, i32 13899, i32 15289, i32 16818, i32 18500, i32 20350, i32 22385, i32 24623, i32 27086, i32 29794, i32 32767], align 16
@indexTable = internal global [16 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 2, i32 4, i32 6, i32 8, i32 -1, i32 -1, i32 -1, i32 -1, i32 2, i32 4, i32 6, i32 8], align 16
@.str.60 = private unnamed_addr constant [8 x i8] c"(O(ii))\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"y*iO:lin2adpcm\00", align 1
@.str.62 = private unnamed_addr constant [13 x i8] c"y*idd:tomono\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"y*idd:tostereo\00", align 1
@.str.64 = private unnamed_addr constant [15 x i8] c"y*in:getsample\00", align 1
@.str.65 = private unnamed_addr constant [19 x i8] c"Index out of range\00", align 1
@.str.66 = private unnamed_addr constant [12 x i8] c"y*i:reverse\00", align 1
@.str.67 = private unnamed_addr constant [13 x i8] c"y*i:byteswap\00", align 1
@.str.68 = private unnamed_addr constant [18 x i8] c"y*iiiiO|ii:ratecv\00", align 1
@.str.69 = private unnamed_addr constant [29 x i8] c"# of channels should be >= 1\00", align 1
@PyExc_OverflowError = external global %struct._object*, align 8
@.str.70 = private unnamed_addr constant [38 x i8] c"width * nchannels too big for a C int\00", align 1
@.str.71 = private unnamed_addr constant [47 x i8] c"weightA should be >= 1, weightB should be >= 0\00", align 1
@.str.72 = private unnamed_addr constant [22 x i8] c"sampling rate not > 0\00", align 1
@.str.73 = private unnamed_addr constant [43 x i8] c"iO!;audioop.ratecv: illegal state argument\00", align 1
@PyTuple_Type = external global %struct._typeobject, align 8
@.str.74 = private unnamed_addr constant [23 x i8] c"illegal state argument\00", align 1
@.str.75 = private unnamed_addr constant [10 x i8] c"ii:ratecv\00", align 1
@.str.76 = private unnamed_addr constant [8 x i8] c"(O(iO))\00", align 1

; Function Attrs: nounwind uwtable
define %struct._object* @PyInit_audioop() #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %m = alloca %struct._object*, align 8
  %d = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %0 = bitcast %struct._object** %m to i8*, !dbg !1194
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1194
  call void @llvm.dbg.declare(metadata %struct._object** %m, metadata !365, metadata !1195), !dbg !1196
  %1 = bitcast %struct._object** %d to i8*, !dbg !1194
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !1194
  call void @llvm.dbg.declare(metadata %struct._object** %d, metadata !366, metadata !1195), !dbg !1197
  %call = call %struct._object* @PyModule_Create2(%struct.PyModuleDef* @audioopmodule, i32 1013), !dbg !1198
  store %struct._object* %call, %struct._object** %m, align 8, !dbg !1199, !tbaa !1200
  %2 = load %struct._object*, %struct._object** %m, align 8, !dbg !1204, !tbaa !1200
  %cmp = icmp eq %struct._object* %2, null, !dbg !1206
  br i1 %cmp, label %if.then, label %if.end, !dbg !1207

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !1208
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1208

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %m, align 8, !dbg !1209, !tbaa !1200
  %call1 = call %struct._object* @PyModule_GetDict(%struct._object* %3), !dbg !1210
  store %struct._object* %call1, %struct._object** %d, align 8, !dbg !1211, !tbaa !1200
  %4 = load %struct._object*, %struct._object** %d, align 8, !dbg !1212, !tbaa !1200
  %cmp2 = icmp eq %struct._object* %4, null, !dbg !1214
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !1215

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !1216
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1216

if.end.4:                                         ; preds = %if.end
  %call5 = call %struct._object* @PyErr_NewException(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), %struct._object* null, %struct._object* null), !dbg !1217
  store %struct._object* %call5, %struct._object** @AudioopError, align 8, !dbg !1218, !tbaa !1200
  %5 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !1219, !tbaa !1200
  %cmp6 = icmp ne %struct._object* %5, null, !dbg !1221
  br i1 %cmp6, label %if.then.7, label %if.end.9, !dbg !1222

if.then.7:                                        ; preds = %if.end.4
  %6 = load %struct._object*, %struct._object** %d, align 8, !dbg !1223, !tbaa !1200
  %7 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !1224, !tbaa !1200
  %call8 = call i32 @PyDict_SetItemString(%struct._object* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), %struct._object* %7), !dbg !1225
  br label %if.end.9, !dbg !1225

if.end.9:                                         ; preds = %if.then.7, %if.end.4
  %8 = load %struct._object*, %struct._object** %m, align 8, !dbg !1226, !tbaa !1200
  store %struct._object* %8, %struct._object** %retval, !dbg !1227
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1227

cleanup:                                          ; preds = %if.end.9, %if.then.3, %if.then
  %9 = bitcast %struct._object** %d to i8*, !dbg !1228
  call void @llvm.lifetime.end(i64 8, i8* %9) #1, !dbg !1228
  %10 = bitcast %struct._object** %m to i8*, !dbg !1228
  call void @llvm.lifetime.end(i64 8, i8* %10) #1, !dbg !1228
  %11 = load %struct._object*, %struct._object** %retval, !dbg !1228
  ret %struct._object* %11, !dbg !1228
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare %struct._object* @PyModule_Create2(%struct.PyModuleDef*, i32) #3

declare %struct._object* @PyModule_GetDict(%struct._object*) #3

declare %struct._object* @PyErr_NewException(i8*, %struct._object*, %struct._object*) #3

declare i32 @PyDict_SetItemString(%struct._object*, i8*, %struct._object*) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_max(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !396, metadata !1195), !dbg !1229
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !397, metadata !1195), !dbg !1230
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1231
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1231
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !398, metadata !1195), !dbg !1232
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1232, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1233
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1233
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !399, metadata !1195), !dbg !1234
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1234
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1234
  %3 = bitcast i32* %width to i8*, !dbg !1235
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1235
  call void @llvm.dbg.declare(metadata i32* %width, metadata !400, metadata !1195), !dbg !1236
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1237, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width), !dbg !1239
  %tobool = icmp ne i32 %call, 0, !dbg !1239
  br i1 %tobool, label %if.end, label %if.then, !dbg !1240

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1241

if.end:                                           ; preds = %entry
  %5 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1242, !tbaa !1200
  %6 = load i32, i32* %width, align 4, !dbg !1243, !tbaa !1244
  %call1 = call %struct._object* @audioop_max_impl(%struct.PyModuleDef* %5, %struct.bufferinfo* %fragment, i32 %6), !dbg !1246
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1247, !tbaa !1200
  br label %exit, !dbg !1248

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1249
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1249, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1254
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1255

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1256
  br label %if.end.4, !dbg !1256

if.end.4:                                         ; preds = %if.then.3, %exit
  %8 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1257, !tbaa !1200
  %9 = bitcast i32* %width to i8*, !dbg !1258
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !1258
  %10 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1258
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1258
  %11 = bitcast %struct._object** %return_value to i8*, !dbg !1258
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1258
  ret %struct._object* %8, !dbg !1259
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_minmax(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !428, metadata !1195), !dbg !1260
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !429, metadata !1195), !dbg !1261
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1262
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1262
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !430, metadata !1195), !dbg !1263
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1263, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1264
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1264
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !431, metadata !1195), !dbg !1265
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1265
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1265
  %3 = bitcast i32* %width to i8*, !dbg !1266
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1266
  call void @llvm.dbg.declare(metadata i32* %width, metadata !432, metadata !1195), !dbg !1267
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1268, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width), !dbg !1270
  %tobool = icmp ne i32 %call, 0, !dbg !1270
  br i1 %tobool, label %if.end, label %if.then, !dbg !1271

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1272

if.end:                                           ; preds = %entry
  %5 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1273, !tbaa !1200
  %6 = load i32, i32* %width, align 4, !dbg !1274, !tbaa !1244
  %call1 = call %struct._object* @audioop_minmax_impl(%struct.PyModuleDef* %5, %struct.bufferinfo* %fragment, i32 %6), !dbg !1275
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1276, !tbaa !1200
  br label %exit, !dbg !1277

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1278
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1278, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1280
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1281

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1282
  br label %if.end.4, !dbg !1282

if.end.4:                                         ; preds = %if.then.3, %exit
  %8 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1283, !tbaa !1200
  %9 = bitcast i32* %width to i8*, !dbg !1284
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !1284
  %10 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1284
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1284
  %11 = bitcast %struct._object** %return_value to i8*, !dbg !1284
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1284
  ret %struct._object* %8, !dbg !1285
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_avg(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !447, metadata !1195), !dbg !1286
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !448, metadata !1195), !dbg !1287
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1288
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1288
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !449, metadata !1195), !dbg !1289
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1289, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1290
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1290
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !450, metadata !1195), !dbg !1291
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1291
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1291
  %3 = bitcast i32* %width to i8*, !dbg !1292
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1292
  call void @llvm.dbg.declare(metadata i32* %width, metadata !451, metadata !1195), !dbg !1293
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1294, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width), !dbg !1296
  %tobool = icmp ne i32 %call, 0, !dbg !1296
  br i1 %tobool, label %if.end, label %if.then, !dbg !1297

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1298

if.end:                                           ; preds = %entry
  %5 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1299, !tbaa !1200
  %6 = load i32, i32* %width, align 4, !dbg !1300, !tbaa !1244
  %call1 = call %struct._object* @audioop_avg_impl(%struct.PyModuleDef* %5, %struct.bufferinfo* %fragment, i32 %6), !dbg !1301
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1302, !tbaa !1200
  br label %exit, !dbg !1303

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1304
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1304, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1306
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1307

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1308
  br label %if.end.4, !dbg !1308

if.end.4:                                         ; preds = %if.then.3, %exit
  %8 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1309, !tbaa !1200
  %9 = bitcast i32* %width to i8*, !dbg !1310
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !1310
  %10 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1310
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1310
  %11 = bitcast %struct._object** %return_value to i8*, !dbg !1310
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1310
  ret %struct._object* %8, !dbg !1311
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_maxpp(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !462, metadata !1195), !dbg !1312
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !463, metadata !1195), !dbg !1313
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1314
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1314
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !464, metadata !1195), !dbg !1315
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1315, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1316
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1316
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !465, metadata !1195), !dbg !1317
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1317
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1317
  %3 = bitcast i32* %width to i8*, !dbg !1318
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1318
  call void @llvm.dbg.declare(metadata i32* %width, metadata !466, metadata !1195), !dbg !1319
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1320, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width), !dbg !1322
  %tobool = icmp ne i32 %call, 0, !dbg !1322
  br i1 %tobool, label %if.end, label %if.then, !dbg !1323

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1324

if.end:                                           ; preds = %entry
  %5 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1325, !tbaa !1200
  %6 = load i32, i32* %width, align 4, !dbg !1326, !tbaa !1244
  %call1 = call %struct._object* @audioop_maxpp_impl(%struct.PyModuleDef* %5, %struct.bufferinfo* %fragment, i32 %6), !dbg !1327
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1328, !tbaa !1200
  br label %exit, !dbg !1329

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1330
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1330, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1332
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1333

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1334
  br label %if.end.4, !dbg !1334

if.end.4:                                         ; preds = %if.then.3, %exit
  %8 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1335, !tbaa !1200
  %9 = bitcast i32* %width to i8*, !dbg !1336
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !1336
  %10 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1336
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1336
  %11 = bitcast %struct._object** %return_value to i8*, !dbg !1336
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1336
  ret %struct._object* %8, !dbg !1337
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_avgpp(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !486, metadata !1195), !dbg !1338
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !487, metadata !1195), !dbg !1339
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1340
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1340
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !488, metadata !1195), !dbg !1341
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1341, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1342
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1342
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !489, metadata !1195), !dbg !1343
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1343
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1343
  %3 = bitcast i32* %width to i8*, !dbg !1344
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1344
  call void @llvm.dbg.declare(metadata i32* %width, metadata !490, metadata !1195), !dbg !1345
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1346, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width), !dbg !1348
  %tobool = icmp ne i32 %call, 0, !dbg !1348
  br i1 %tobool, label %if.end, label %if.then, !dbg !1349

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1350

if.end:                                           ; preds = %entry
  %5 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1351, !tbaa !1200
  %6 = load i32, i32* %width, align 4, !dbg !1352, !tbaa !1244
  %call1 = call %struct._object* @audioop_avgpp_impl(%struct.PyModuleDef* %5, %struct.bufferinfo* %fragment, i32 %6), !dbg !1353
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1354, !tbaa !1200
  br label %exit, !dbg !1355

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1356
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1356, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1358
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1359

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1360
  br label %if.end.4, !dbg !1360

if.end.4:                                         ; preds = %if.then.3, %exit
  %8 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1361, !tbaa !1200
  %9 = bitcast i32* %width to i8*, !dbg !1362
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !1362
  %10 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1362
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1362
  %11 = bitcast %struct._object** %return_value to i8*, !dbg !1362
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1362
  ret %struct._object* %8, !dbg !1363
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_rms(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !511, metadata !1195), !dbg !1364
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !512, metadata !1195), !dbg !1365
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1366
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1366
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !513, metadata !1195), !dbg !1367
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1367, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1368
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1368
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !514, metadata !1195), !dbg !1369
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1369
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1369
  %3 = bitcast i32* %width to i8*, !dbg !1370
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1370
  call void @llvm.dbg.declare(metadata i32* %width, metadata !515, metadata !1195), !dbg !1371
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1372, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width), !dbg !1374
  %tobool = icmp ne i32 %call, 0, !dbg !1374
  br i1 %tobool, label %if.end, label %if.then, !dbg !1375

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1376

if.end:                                           ; preds = %entry
  %5 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1377, !tbaa !1200
  %6 = load i32, i32* %width, align 4, !dbg !1378, !tbaa !1244
  %call1 = call %struct._object* @audioop_rms_impl(%struct.PyModuleDef* %5, %struct.bufferinfo* %fragment, i32 %6), !dbg !1379
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1380, !tbaa !1200
  br label %exit, !dbg !1381

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1382
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1382, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1384
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1385

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1386
  br label %if.end.4, !dbg !1386

if.end.4:                                         ; preds = %if.then.3, %exit
  %8 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1387, !tbaa !1200
  %9 = bitcast i32* %width to i8*, !dbg !1388
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !1388
  %10 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1388
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1388
  %11 = bitcast %struct._object** %return_value to i8*, !dbg !1388
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1388
  ret %struct._object* %8, !dbg !1389
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_findfit(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %reference = alloca %struct.bufferinfo, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !530, metadata !1195), !dbg !1390
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !531, metadata !1195), !dbg !1391
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1392
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1392
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !532, metadata !1195), !dbg !1393
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1393, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1394
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1394
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !533, metadata !1195), !dbg !1395
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1395
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1395
  %3 = bitcast %struct.bufferinfo* %reference to i8*, !dbg !1396
  call void @llvm.lifetime.start(i64 80, i8* %3) #1, !dbg !1396
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %reference, metadata !534, metadata !1195), !dbg !1397
  %4 = bitcast %struct.bufferinfo* %reference to i8*, !dbg !1397
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 80, i32 8, i1 false), !dbg !1397
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1398, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i32 0, i32 0), %struct.bufferinfo* %fragment, %struct.bufferinfo* %reference), !dbg !1400
  %tobool = icmp ne i32 %call, 0, !dbg !1400
  br i1 %tobool, label %if.end, label %if.then, !dbg !1401

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1402

if.end:                                           ; preds = %entry
  %6 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1403, !tbaa !1200
  %call1 = call %struct._object* @audioop_findfit_impl(%struct.PyModuleDef* %6, %struct.bufferinfo* %fragment, %struct.bufferinfo* %reference), !dbg !1404
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1405, !tbaa !1200
  br label %exit, !dbg !1406

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1407
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1407, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1409
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1410

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1411
  br label %if.end.4, !dbg !1411

if.end.4:                                         ; preds = %if.then.3, %exit
  %obj5 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %reference, i32 0, i32 1, !dbg !1412
  %8 = load %struct._object*, %struct._object** %obj5, align 8, !dbg !1412, !tbaa !1251
  %tobool6 = icmp ne %struct._object* %8, null, !dbg !1414
  br i1 %tobool6, label %if.then.7, label %if.end.8, !dbg !1415

if.then.7:                                        ; preds = %if.end.4
  call void @PyBuffer_Release(%struct.bufferinfo* %reference), !dbg !1416
  br label %if.end.8, !dbg !1416

if.end.8:                                         ; preds = %if.then.7, %if.end.4
  %9 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1417, !tbaa !1200
  %10 = bitcast %struct.bufferinfo* %reference to i8*, !dbg !1418
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1418
  %11 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1418
  call void @llvm.lifetime.end(i64 80, i8* %11) #1, !dbg !1418
  %12 = bitcast %struct._object** %return_value to i8*, !dbg !1418
  call void @llvm.lifetime.end(i64 8, i8* %12) #1, !dbg !1418
  ret %struct._object* %9, !dbg !1419
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_findmax(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %length = alloca i64, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !567, metadata !1195), !dbg !1420
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !568, metadata !1195), !dbg !1421
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1422
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1422
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !569, metadata !1195), !dbg !1423
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1423, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1424
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1424
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !570, metadata !1195), !dbg !1425
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1425
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1425
  %3 = bitcast i64* %length to i8*, !dbg !1426
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !1426
  call void @llvm.dbg.declare(metadata i64* %length, metadata !571, metadata !1195), !dbg !1427
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1428, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i32 0, i32 0), %struct.bufferinfo* %fragment, i64* %length), !dbg !1430
  %tobool = icmp ne i32 %call, 0, !dbg !1430
  br i1 %tobool, label %if.end, label %if.then, !dbg !1431

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1432

if.end:                                           ; preds = %entry
  %5 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1433, !tbaa !1200
  %6 = load i64, i64* %length, align 8, !dbg !1434, !tbaa !1435
  %call1 = call %struct._object* @audioop_findmax_impl(%struct.PyModuleDef* %5, %struct.bufferinfo* %fragment, i64 %6), !dbg !1436
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1437, !tbaa !1200
  br label %exit, !dbg !1438

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1439
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1439, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1441
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1442

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1443
  br label %if.end.4, !dbg !1443

if.end.4:                                         ; preds = %if.then.3, %exit
  %8 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1444, !tbaa !1200
  %9 = bitcast i64* %length to i8*, !dbg !1445
  call void @llvm.lifetime.end(i64 8, i8* %9) #1, !dbg !1445
  %10 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1445
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1445
  %11 = bitcast %struct._object** %return_value to i8*, !dbg !1445
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1445
  ret %struct._object* %8, !dbg !1446
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_findfactor(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %reference = alloca %struct.bufferinfo, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !589, metadata !1195), !dbg !1447
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !590, metadata !1195), !dbg !1448
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1449
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1449
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !591, metadata !1195), !dbg !1450
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1450, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1451
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1451
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !592, metadata !1195), !dbg !1452
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1452
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1452
  %3 = bitcast %struct.bufferinfo* %reference to i8*, !dbg !1453
  call void @llvm.lifetime.start(i64 80, i8* %3) #1, !dbg !1453
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %reference, metadata !593, metadata !1195), !dbg !1454
  %4 = bitcast %struct.bufferinfo* %reference to i8*, !dbg !1454
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 80, i32 8, i1 false), !dbg !1454
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1455, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i32 0, i32 0), %struct.bufferinfo* %fragment, %struct.bufferinfo* %reference), !dbg !1457
  %tobool = icmp ne i32 %call, 0, !dbg !1457
  br i1 %tobool, label %if.end, label %if.then, !dbg !1458

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1459

if.end:                                           ; preds = %entry
  %6 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1460, !tbaa !1200
  %call1 = call %struct._object* @audioop_findfactor_impl(%struct.PyModuleDef* %6, %struct.bufferinfo* %fragment, %struct.bufferinfo* %reference), !dbg !1461
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1462, !tbaa !1200
  br label %exit, !dbg !1463

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1464
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1464, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1466
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1467

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1468
  br label %if.end.4, !dbg !1468

if.end.4:                                         ; preds = %if.then.3, %exit
  %obj5 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %reference, i32 0, i32 1, !dbg !1469
  %8 = load %struct._object*, %struct._object** %obj5, align 8, !dbg !1469, !tbaa !1251
  %tobool6 = icmp ne %struct._object* %8, null, !dbg !1471
  br i1 %tobool6, label %if.then.7, label %if.end.8, !dbg !1472

if.then.7:                                        ; preds = %if.end.4
  call void @PyBuffer_Release(%struct.bufferinfo* %reference), !dbg !1473
  br label %if.end.8, !dbg !1473

if.end.8:                                         ; preds = %if.then.7, %if.end.4
  %9 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1474, !tbaa !1200
  %10 = bitcast %struct.bufferinfo* %reference to i8*, !dbg !1475
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1475
  %11 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1475
  call void @llvm.lifetime.end(i64 80, i8* %11) #1, !dbg !1475
  %12 = bitcast %struct._object** %return_value to i8*, !dbg !1475
  call void @llvm.lifetime.end(i64 8, i8* %12) #1, !dbg !1475
  ret %struct._object* %9, !dbg !1476
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_cross(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !607, metadata !1195), !dbg !1477
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !608, metadata !1195), !dbg !1478
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1479
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1479
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !609, metadata !1195), !dbg !1480
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1480, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1481
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1481
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !610, metadata !1195), !dbg !1482
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1482
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1482
  %3 = bitcast i32* %width to i8*, !dbg !1483
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1483
  call void @llvm.dbg.declare(metadata i32* %width, metadata !611, metadata !1195), !dbg !1484
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1485, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width), !dbg !1487
  %tobool = icmp ne i32 %call, 0, !dbg !1487
  br i1 %tobool, label %if.end, label %if.then, !dbg !1488

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1489

if.end:                                           ; preds = %entry
  %5 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1490, !tbaa !1200
  %6 = load i32, i32* %width, align 4, !dbg !1491, !tbaa !1244
  %call1 = call %struct._object* @audioop_cross_impl(%struct.PyModuleDef* %5, %struct.bufferinfo* %fragment, i32 %6), !dbg !1492
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1493, !tbaa !1200
  br label %exit, !dbg !1494

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1495
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1495, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1497
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1498

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1499
  br label %if.end.4, !dbg !1499

if.end.4:                                         ; preds = %if.then.3, %exit
  %8 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1500, !tbaa !1200
  %9 = bitcast i32* %width to i8*, !dbg !1501
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !1501
  %10 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1501
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1501
  %11 = bitcast %struct._object** %return_value to i8*, !dbg !1501
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1501
  ret %struct._object* %8, !dbg !1502
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_mul(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  %factor = alloca double, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !626, metadata !1195), !dbg !1503
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !627, metadata !1195), !dbg !1504
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1505
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1505
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !628, metadata !1195), !dbg !1506
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1506, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1507
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1507
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !629, metadata !1195), !dbg !1508
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1508
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1508
  %3 = bitcast i32* %width to i8*, !dbg !1509
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1509
  call void @llvm.dbg.declare(metadata i32* %width, metadata !630, metadata !1195), !dbg !1510
  %4 = bitcast double* %factor to i8*, !dbg !1511
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !1511
  call void @llvm.dbg.declare(metadata double* %factor, metadata !631, metadata !1195), !dbg !1512
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1513, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width, double* %factor), !dbg !1515
  %tobool = icmp ne i32 %call, 0, !dbg !1515
  br i1 %tobool, label %if.end, label %if.then, !dbg !1516

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1517

if.end:                                           ; preds = %entry
  %6 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1518, !tbaa !1200
  %7 = load i32, i32* %width, align 4, !dbg !1519, !tbaa !1244
  %8 = load double, double* %factor, align 8, !dbg !1520, !tbaa !1521
  %call1 = call %struct._object* @audioop_mul_impl(%struct.PyModuleDef* %6, %struct.bufferinfo* %fragment, i32 %7, double %8), !dbg !1523
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1524, !tbaa !1200
  br label %exit, !dbg !1525

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1526
  %9 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1526, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %9, null, !dbg !1528
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1529

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1530
  br label %if.end.4, !dbg !1530

if.end.4:                                         ; preds = %if.then.3, %exit
  %10 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1531, !tbaa !1200
  %11 = bitcast double* %factor to i8*, !dbg !1532
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1532
  %12 = bitcast i32* %width to i8*, !dbg !1532
  call void @llvm.lifetime.end(i64 4, i8* %12) #1, !dbg !1532
  %13 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1532
  call void @llvm.lifetime.end(i64 80, i8* %13) #1, !dbg !1532
  %14 = bitcast %struct._object** %return_value to i8*, !dbg !1532
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !1532
  ret %struct._object* %10, !dbg !1533
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_add(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment1 = alloca %struct.bufferinfo, align 8
  %fragment2 = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !658, metadata !1195), !dbg !1534
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !659, metadata !1195), !dbg !1535
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1536
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1536
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !660, metadata !1195), !dbg !1537
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1537, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment1 to i8*, !dbg !1538
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1538
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment1, metadata !661, metadata !1195), !dbg !1539
  %2 = bitcast %struct.bufferinfo* %fragment1 to i8*, !dbg !1539
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1539
  %3 = bitcast %struct.bufferinfo* %fragment2 to i8*, !dbg !1540
  call void @llvm.lifetime.start(i64 80, i8* %3) #1, !dbg !1540
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment2, metadata !662, metadata !1195), !dbg !1541
  %4 = bitcast %struct.bufferinfo* %fragment2 to i8*, !dbg !1541
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 80, i32 8, i1 false), !dbg !1541
  %5 = bitcast i32* %width to i8*, !dbg !1542
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !1542
  call void @llvm.dbg.declare(metadata i32* %width, metadata !663, metadata !1195), !dbg !1543
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1544, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), %struct.bufferinfo* %fragment1, %struct.bufferinfo* %fragment2, i32* %width), !dbg !1546
  %tobool = icmp ne i32 %call, 0, !dbg !1546
  br i1 %tobool, label %if.end, label %if.then, !dbg !1547

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1548

if.end:                                           ; preds = %entry
  %7 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1549, !tbaa !1200
  %8 = load i32, i32* %width, align 4, !dbg !1550, !tbaa !1244
  %call1 = call %struct._object* @audioop_add_impl(%struct.PyModuleDef* %7, %struct.bufferinfo* %fragment1, %struct.bufferinfo* %fragment2, i32 %8), !dbg !1551
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1552, !tbaa !1200
  br label %exit, !dbg !1553

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment1, i32 0, i32 1, !dbg !1554
  %9 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1554, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %9, null, !dbg !1556
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1557

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment1), !dbg !1558
  br label %if.end.4, !dbg !1558

if.end.4:                                         ; preds = %if.then.3, %exit
  %obj5 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment2, i32 0, i32 1, !dbg !1559
  %10 = load %struct._object*, %struct._object** %obj5, align 8, !dbg !1559, !tbaa !1251
  %tobool6 = icmp ne %struct._object* %10, null, !dbg !1561
  br i1 %tobool6, label %if.then.7, label %if.end.8, !dbg !1562

if.then.7:                                        ; preds = %if.end.4
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment2), !dbg !1563
  br label %if.end.8, !dbg !1563

if.end.8:                                         ; preds = %if.then.7, %if.end.4
  %11 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1564, !tbaa !1200
  %12 = bitcast i32* %width to i8*, !dbg !1565
  call void @llvm.lifetime.end(i64 4, i8* %12) #1, !dbg !1565
  %13 = bitcast %struct.bufferinfo* %fragment2 to i8*, !dbg !1565
  call void @llvm.lifetime.end(i64 80, i8* %13) #1, !dbg !1565
  %14 = bitcast %struct.bufferinfo* %fragment1 to i8*, !dbg !1565
  call void @llvm.lifetime.end(i64 80, i8* %14) #1, !dbg !1565
  %15 = bitcast %struct._object** %return_value to i8*, !dbg !1565
  call void @llvm.lifetime.end(i64 8, i8* %15) #1, !dbg !1565
  ret %struct._object* %11, !dbg !1566
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_bias(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  %bias = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !688, metadata !1195), !dbg !1567
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !689, metadata !1195), !dbg !1568
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1569
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1569
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !690, metadata !1195), !dbg !1570
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1570, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1571
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1571
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !691, metadata !1195), !dbg !1572
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1572
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1572
  %3 = bitcast i32* %width to i8*, !dbg !1573
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1573
  call void @llvm.dbg.declare(metadata i32* %width, metadata !692, metadata !1195), !dbg !1574
  %4 = bitcast i32* %bias to i8*, !dbg !1575
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !1575
  call void @llvm.dbg.declare(metadata i32* %bias, metadata !693, metadata !1195), !dbg !1576
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1577, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width, i32* %bias), !dbg !1579
  %tobool = icmp ne i32 %call, 0, !dbg !1579
  br i1 %tobool, label %if.end, label %if.then, !dbg !1580

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1581

if.end:                                           ; preds = %entry
  %6 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1582, !tbaa !1200
  %7 = load i32, i32* %width, align 4, !dbg !1583, !tbaa !1244
  %8 = load i32, i32* %bias, align 4, !dbg !1584, !tbaa !1244
  %call1 = call %struct._object* @audioop_bias_impl(%struct.PyModuleDef* %6, %struct.bufferinfo* %fragment, i32 %7, i32 %8), !dbg !1585
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1586, !tbaa !1200
  br label %exit, !dbg !1587

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1588
  %9 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1588, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %9, null, !dbg !1590
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1591

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1592
  br label %if.end.4, !dbg !1592

if.end.4:                                         ; preds = %if.then.3, %exit
  %10 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1593, !tbaa !1200
  %11 = bitcast i32* %bias to i8*, !dbg !1594
  call void @llvm.lifetime.end(i64 4, i8* %11) #1, !dbg !1594
  %12 = bitcast i32* %width to i8*, !dbg !1594
  call void @llvm.lifetime.end(i64 4, i8* %12) #1, !dbg !1594
  %13 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1594
  call void @llvm.lifetime.end(i64 80, i8* %13) #1, !dbg !1594
  %14 = bitcast %struct._object** %return_value to i8*, !dbg !1594
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !1594
  ret %struct._object* %10, !dbg !1595
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_ulaw2lin(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !709, metadata !1195), !dbg !1596
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !710, metadata !1195), !dbg !1597
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1598
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1598
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !711, metadata !1195), !dbg !1599
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1599, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1600
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1600
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !712, metadata !1195), !dbg !1601
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1601
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1601
  %3 = bitcast i32* %width to i8*, !dbg !1602
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1602
  call void @llvm.dbg.declare(metadata i32* %width, metadata !713, metadata !1195), !dbg !1603
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1604, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width), !dbg !1606
  %tobool = icmp ne i32 %call, 0, !dbg !1606
  br i1 %tobool, label %if.end, label %if.then, !dbg !1607

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1608

if.end:                                           ; preds = %entry
  %5 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1609, !tbaa !1200
  %6 = load i32, i32* %width, align 4, !dbg !1610, !tbaa !1244
  %call1 = call %struct._object* @audioop_ulaw2lin_impl(%struct.PyModuleDef* %5, %struct.bufferinfo* %fragment, i32 %6), !dbg !1611
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1612, !tbaa !1200
  br label %exit, !dbg !1613

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1614
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1614, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1616
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1617

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1618
  br label %if.end.4, !dbg !1618

if.end.4:                                         ; preds = %if.then.3, %exit
  %8 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1619, !tbaa !1200
  %9 = bitcast i32* %width to i8*, !dbg !1620
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !1620
  %10 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1620
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1620
  %11 = bitcast %struct._object** %return_value to i8*, !dbg !1620
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1620
  ret %struct._object* %8, !dbg !1621
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_lin2ulaw(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !729, metadata !1195), !dbg !1622
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !730, metadata !1195), !dbg !1623
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1624
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1624
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !731, metadata !1195), !dbg !1625
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1625, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1626
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1626
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !732, metadata !1195), !dbg !1627
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1627
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1627
  %3 = bitcast i32* %width to i8*, !dbg !1628
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1628
  call void @llvm.dbg.declare(metadata i32* %width, metadata !733, metadata !1195), !dbg !1629
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1630, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width), !dbg !1632
  %tobool = icmp ne i32 %call, 0, !dbg !1632
  br i1 %tobool, label %if.end, label %if.then, !dbg !1633

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1634

if.end:                                           ; preds = %entry
  %5 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1635, !tbaa !1200
  %6 = load i32, i32* %width, align 4, !dbg !1636, !tbaa !1244
  %call1 = call %struct._object* @audioop_lin2ulaw_impl(%struct.PyModuleDef* %5, %struct.bufferinfo* %fragment, i32 %6), !dbg !1637
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1638, !tbaa !1200
  br label %exit, !dbg !1639

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1640
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1640, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1642
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1643

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1644
  br label %if.end.4, !dbg !1644

if.end.4:                                         ; preds = %if.then.3, %exit
  %8 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1645, !tbaa !1200
  %9 = bitcast i32* %width to i8*, !dbg !1646
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !1646
  %10 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1646
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1646
  %11 = bitcast %struct._object** %return_value to i8*, !dbg !1646
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1646
  ret %struct._object* %8, !dbg !1647
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_alaw2lin(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !766, metadata !1195), !dbg !1648
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !767, metadata !1195), !dbg !1649
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1650
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1650
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !768, metadata !1195), !dbg !1651
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1651, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1652
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1652
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !769, metadata !1195), !dbg !1653
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1653
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1653
  %3 = bitcast i32* %width to i8*, !dbg !1654
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1654
  call void @llvm.dbg.declare(metadata i32* %width, metadata !770, metadata !1195), !dbg !1655
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1656, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width), !dbg !1658
  %tobool = icmp ne i32 %call, 0, !dbg !1658
  br i1 %tobool, label %if.end, label %if.then, !dbg !1659

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1660

if.end:                                           ; preds = %entry
  %5 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1661, !tbaa !1200
  %6 = load i32, i32* %width, align 4, !dbg !1662, !tbaa !1244
  %call1 = call %struct._object* @audioop_alaw2lin_impl(%struct.PyModuleDef* %5, %struct.bufferinfo* %fragment, i32 %6), !dbg !1663
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1664, !tbaa !1200
  br label %exit, !dbg !1665

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1666
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1666, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1668
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1669

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1670
  br label %if.end.4, !dbg !1670

if.end.4:                                         ; preds = %if.then.3, %exit
  %8 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1671, !tbaa !1200
  %9 = bitcast i32* %width to i8*, !dbg !1672
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !1672
  %10 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1672
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1672
  %11 = bitcast %struct._object** %return_value to i8*, !dbg !1672
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1672
  ret %struct._object* %8, !dbg !1673
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_lin2alaw(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !783, metadata !1195), !dbg !1674
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !784, metadata !1195), !dbg !1675
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1676
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1676
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !785, metadata !1195), !dbg !1677
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1677, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1678
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1678
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !786, metadata !1195), !dbg !1679
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1679
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1679
  %3 = bitcast i32* %width to i8*, !dbg !1680
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1680
  call void @llvm.dbg.declare(metadata i32* %width, metadata !787, metadata !1195), !dbg !1681
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1682, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width), !dbg !1684
  %tobool = icmp ne i32 %call, 0, !dbg !1684
  br i1 %tobool, label %if.end, label %if.then, !dbg !1685

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1686

if.end:                                           ; preds = %entry
  %5 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1687, !tbaa !1200
  %6 = load i32, i32* %width, align 4, !dbg !1688, !tbaa !1244
  %call1 = call %struct._object* @audioop_lin2alaw_impl(%struct.PyModuleDef* %5, %struct.bufferinfo* %fragment, i32 %6), !dbg !1689
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1690, !tbaa !1200
  br label %exit, !dbg !1691

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1692
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1692, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1694
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1695

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1696
  br label %if.end.4, !dbg !1696

if.end.4:                                         ; preds = %if.then.3, %exit
  %8 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1697, !tbaa !1200
  %9 = bitcast i32* %width to i8*, !dbg !1698
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !1698
  %10 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1698
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1698
  %11 = bitcast %struct._object** %return_value to i8*, !dbg !1698
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1698
  ret %struct._object* %8, !dbg !1699
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_lin2lin(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  %newwidth = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !808, metadata !1195), !dbg !1700
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !809, metadata !1195), !dbg !1701
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1702
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1702
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !810, metadata !1195), !dbg !1703
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1703, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1704
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1704
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !811, metadata !1195), !dbg !1705
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1705
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1705
  %3 = bitcast i32* %width to i8*, !dbg !1706
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1706
  call void @llvm.dbg.declare(metadata i32* %width, metadata !812, metadata !1195), !dbg !1707
  %4 = bitcast i32* %newwidth to i8*, !dbg !1708
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !1708
  call void @llvm.dbg.declare(metadata i32* %newwidth, metadata !813, metadata !1195), !dbg !1709
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1710, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.56, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width, i32* %newwidth), !dbg !1712
  %tobool = icmp ne i32 %call, 0, !dbg !1712
  br i1 %tobool, label %if.end, label %if.then, !dbg !1713

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1714

if.end:                                           ; preds = %entry
  %6 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1715, !tbaa !1200
  %7 = load i32, i32* %width, align 4, !dbg !1716, !tbaa !1244
  %8 = load i32, i32* %newwidth, align 4, !dbg !1717, !tbaa !1244
  %call1 = call %struct._object* @audioop_lin2lin_impl(%struct.PyModuleDef* %6, %struct.bufferinfo* %fragment, i32 %7, i32 %8), !dbg !1718
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1719, !tbaa !1200
  br label %exit, !dbg !1720

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1721
  %9 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1721, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %9, null, !dbg !1723
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1724

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1725
  br label %if.end.4, !dbg !1725

if.end.4:                                         ; preds = %if.then.3, %exit
  %10 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1726, !tbaa !1200
  %11 = bitcast i32* %newwidth to i8*, !dbg !1727
  call void @llvm.lifetime.end(i64 4, i8* %11) #1, !dbg !1727
  %12 = bitcast i32* %width to i8*, !dbg !1727
  call void @llvm.lifetime.end(i64 4, i8* %12) #1, !dbg !1727
  %13 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1727
  call void @llvm.lifetime.end(i64 80, i8* %13) #1, !dbg !1727
  %14 = bitcast %struct._object** %return_value to i8*, !dbg !1727
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !1727
  ret %struct._object* %10, !dbg !1728
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_adpcm2lin(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  %state = alloca %struct._object*, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !830, metadata !1195), !dbg !1729
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !831, metadata !1195), !dbg !1730
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1731
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1731
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !832, metadata !1195), !dbg !1732
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1732, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1733
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1733
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !833, metadata !1195), !dbg !1734
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1734
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1734
  %3 = bitcast i32* %width to i8*, !dbg !1735
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1735
  call void @llvm.dbg.declare(metadata i32* %width, metadata !834, metadata !1195), !dbg !1736
  %4 = bitcast %struct._object** %state to i8*, !dbg !1737
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !1737
  call void @llvm.dbg.declare(metadata %struct._object** %state, metadata !835, metadata !1195), !dbg !1738
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1739, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width, %struct._object** %state), !dbg !1741
  %tobool = icmp ne i32 %call, 0, !dbg !1741
  br i1 %tobool, label %if.end, label %if.then, !dbg !1742

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1743

if.end:                                           ; preds = %entry
  %6 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1744, !tbaa !1200
  %7 = load i32, i32* %width, align 4, !dbg !1745, !tbaa !1244
  %8 = load %struct._object*, %struct._object** %state, align 8, !dbg !1746, !tbaa !1200
  %call1 = call %struct._object* @audioop_adpcm2lin_impl(%struct.PyModuleDef* %6, %struct.bufferinfo* %fragment, i32 %7, %struct._object* %8), !dbg !1747
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1748, !tbaa !1200
  br label %exit, !dbg !1749

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1750
  %9 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1750, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %9, null, !dbg !1752
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1753

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1754
  br label %if.end.4, !dbg !1754

if.end.4:                                         ; preds = %if.then.3, %exit
  %10 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1755, !tbaa !1200
  %11 = bitcast %struct._object** %state to i8*, !dbg !1756
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1756
  %12 = bitcast i32* %width to i8*, !dbg !1756
  call void @llvm.lifetime.end(i64 4, i8* %12) #1, !dbg !1756
  %13 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1756
  call void @llvm.lifetime.end(i64 80, i8* %13) #1, !dbg !1756
  %14 = bitcast %struct._object** %return_value to i8*, !dbg !1756
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !1756
  ret %struct._object* %10, !dbg !1757
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_lin2adpcm(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  %state = alloca %struct._object*, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !862, metadata !1195), !dbg !1758
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !863, metadata !1195), !dbg !1759
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1760
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1760
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !864, metadata !1195), !dbg !1761
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1761, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1762
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1762
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !865, metadata !1195), !dbg !1763
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1763
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1763
  %3 = bitcast i32* %width to i8*, !dbg !1764
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1764
  call void @llvm.dbg.declare(metadata i32* %width, metadata !866, metadata !1195), !dbg !1765
  %4 = bitcast %struct._object** %state to i8*, !dbg !1766
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !1766
  call void @llvm.dbg.declare(metadata %struct._object** %state, metadata !867, metadata !1195), !dbg !1767
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1768, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width, %struct._object** %state), !dbg !1770
  %tobool = icmp ne i32 %call, 0, !dbg !1770
  br i1 %tobool, label %if.end, label %if.then, !dbg !1771

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1772

if.end:                                           ; preds = %entry
  %6 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1773, !tbaa !1200
  %7 = load i32, i32* %width, align 4, !dbg !1774, !tbaa !1244
  %8 = load %struct._object*, %struct._object** %state, align 8, !dbg !1775, !tbaa !1200
  %call1 = call %struct._object* @audioop_lin2adpcm_impl(%struct.PyModuleDef* %6, %struct.bufferinfo* %fragment, i32 %7, %struct._object* %8), !dbg !1776
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1777, !tbaa !1200
  br label %exit, !dbg !1778

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1779
  %9 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1779, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %9, null, !dbg !1781
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1782

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1783
  br label %if.end.4, !dbg !1783

if.end.4:                                         ; preds = %if.then.3, %exit
  %10 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1784, !tbaa !1200
  %11 = bitcast %struct._object** %state to i8*, !dbg !1785
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1785
  %12 = bitcast i32* %width to i8*, !dbg !1785
  call void @llvm.lifetime.end(i64 4, i8* %12) #1, !dbg !1785
  %13 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1785
  call void @llvm.lifetime.end(i64 80, i8* %13) #1, !dbg !1785
  %14 = bitcast %struct._object** %return_value to i8*, !dbg !1785
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !1785
  ret %struct._object* %10, !dbg !1786
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_tomono(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  %lfactor = alloca double, align 8
  %rfactor = alloca double, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !895, metadata !1195), !dbg !1787
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !896, metadata !1195), !dbg !1788
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1789
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1789
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !897, metadata !1195), !dbg !1790
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1790, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1791
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1791
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !898, metadata !1195), !dbg !1792
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1792
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1792
  %3 = bitcast i32* %width to i8*, !dbg !1793
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1793
  call void @llvm.dbg.declare(metadata i32* %width, metadata !899, metadata !1195), !dbg !1794
  %4 = bitcast double* %lfactor to i8*, !dbg !1795
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !1795
  call void @llvm.dbg.declare(metadata double* %lfactor, metadata !900, metadata !1195), !dbg !1796
  %5 = bitcast double* %rfactor to i8*, !dbg !1797
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !1797
  call void @llvm.dbg.declare(metadata double* %rfactor, metadata !901, metadata !1195), !dbg !1798
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1799, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width, double* %lfactor, double* %rfactor), !dbg !1801
  %tobool = icmp ne i32 %call, 0, !dbg !1801
  br i1 %tobool, label %if.end, label %if.then, !dbg !1802

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1803

if.end:                                           ; preds = %entry
  %7 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1804, !tbaa !1200
  %8 = load i32, i32* %width, align 4, !dbg !1805, !tbaa !1244
  %9 = load double, double* %lfactor, align 8, !dbg !1806, !tbaa !1521
  %10 = load double, double* %rfactor, align 8, !dbg !1807, !tbaa !1521
  %call1 = call %struct._object* @audioop_tomono_impl(%struct.PyModuleDef* %7, %struct.bufferinfo* %fragment, i32 %8, double %9, double %10), !dbg !1808
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1809, !tbaa !1200
  br label %exit, !dbg !1810

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1811
  %11 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1811, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %11, null, !dbg !1813
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1814

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1815
  br label %if.end.4, !dbg !1815

if.end.4:                                         ; preds = %if.then.3, %exit
  %12 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1816, !tbaa !1200
  %13 = bitcast double* %rfactor to i8*, !dbg !1817
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !1817
  %14 = bitcast double* %lfactor to i8*, !dbg !1817
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !1817
  %15 = bitcast i32* %width to i8*, !dbg !1817
  call void @llvm.lifetime.end(i64 4, i8* %15) #1, !dbg !1817
  %16 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1817
  call void @llvm.lifetime.end(i64 80, i8* %16) #1, !dbg !1817
  %17 = bitcast %struct._object** %return_value to i8*, !dbg !1817
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !1817
  ret %struct._object* %12, !dbg !1818
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_tostereo(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  %lfactor = alloca double, align 8
  %rfactor = alloca double, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !926, metadata !1195), !dbg !1819
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !927, metadata !1195), !dbg !1820
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1821
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1821
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !928, metadata !1195), !dbg !1822
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1822, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1823
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1823
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !929, metadata !1195), !dbg !1824
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1824
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1824
  %3 = bitcast i32* %width to i8*, !dbg !1825
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1825
  call void @llvm.dbg.declare(metadata i32* %width, metadata !930, metadata !1195), !dbg !1826
  %4 = bitcast double* %lfactor to i8*, !dbg !1827
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !1827
  call void @llvm.dbg.declare(metadata double* %lfactor, metadata !931, metadata !1195), !dbg !1828
  %5 = bitcast double* %rfactor to i8*, !dbg !1829
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !1829
  call void @llvm.dbg.declare(metadata double* %rfactor, metadata !932, metadata !1195), !dbg !1830
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1831, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width, double* %lfactor, double* %rfactor), !dbg !1833
  %tobool = icmp ne i32 %call, 0, !dbg !1833
  br i1 %tobool, label %if.end, label %if.then, !dbg !1834

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1835

if.end:                                           ; preds = %entry
  %7 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1836, !tbaa !1200
  %8 = load i32, i32* %width, align 4, !dbg !1837, !tbaa !1244
  %9 = load double, double* %lfactor, align 8, !dbg !1838, !tbaa !1521
  %10 = load double, double* %rfactor, align 8, !dbg !1839, !tbaa !1521
  %call1 = call %struct._object* @audioop_tostereo_impl(%struct.PyModuleDef* %7, %struct.bufferinfo* %fragment, i32 %8, double %9, double %10), !dbg !1840
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1841, !tbaa !1200
  br label %exit, !dbg !1842

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1843
  %11 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1843, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %11, null, !dbg !1845
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1846

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1847
  br label %if.end.4, !dbg !1847

if.end.4:                                         ; preds = %if.then.3, %exit
  %12 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1848, !tbaa !1200
  %13 = bitcast double* %rfactor to i8*, !dbg !1849
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !1849
  %14 = bitcast double* %lfactor to i8*, !dbg !1849
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !1849
  %15 = bitcast i32* %width to i8*, !dbg !1849
  call void @llvm.lifetime.end(i64 4, i8* %15) #1, !dbg !1849
  %16 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1849
  call void @llvm.lifetime.end(i64 80, i8* %16) #1, !dbg !1849
  %17 = bitcast %struct._object** %return_value to i8*, !dbg !1849
  call void @llvm.lifetime.end(i64 8, i8* %17) #1, !dbg !1849
  ret %struct._object* %12, !dbg !1850
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_getsample(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  %index = alloca i64, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !953, metadata !1195), !dbg !1851
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !954, metadata !1195), !dbg !1852
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1853
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1853
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !955, metadata !1195), !dbg !1854
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1854, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1855
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1855
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !956, metadata !1195), !dbg !1856
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1856
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1856
  %3 = bitcast i32* %width to i8*, !dbg !1857
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1857
  call void @llvm.dbg.declare(metadata i32* %width, metadata !957, metadata !1195), !dbg !1858
  %4 = bitcast i64* %index to i8*, !dbg !1859
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !1859
  call void @llvm.dbg.declare(metadata i64* %index, metadata !958, metadata !1195), !dbg !1860
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1861, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width, i64* %index), !dbg !1863
  %tobool = icmp ne i32 %call, 0, !dbg !1863
  br i1 %tobool, label %if.end, label %if.then, !dbg !1864

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1865

if.end:                                           ; preds = %entry
  %6 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1866, !tbaa !1200
  %7 = load i32, i32* %width, align 4, !dbg !1867, !tbaa !1244
  %8 = load i64, i64* %index, align 8, !dbg !1868, !tbaa !1435
  %call1 = call %struct._object* @audioop_getsample_impl(%struct.PyModuleDef* %6, %struct.bufferinfo* %fragment, i32 %7, i64 %8), !dbg !1869
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1870, !tbaa !1200
  br label %exit, !dbg !1871

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1872
  %9 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1872, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %9, null, !dbg !1874
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1875

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1876
  br label %if.end.4, !dbg !1876

if.end.4:                                         ; preds = %if.then.3, %exit
  %10 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1877, !tbaa !1200
  %11 = bitcast i64* %index to i8*, !dbg !1878
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1878
  %12 = bitcast i32* %width to i8*, !dbg !1878
  call void @llvm.lifetime.end(i64 4, i8* %12) #1, !dbg !1878
  %13 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1878
  call void @llvm.lifetime.end(i64 80, i8* %13) #1, !dbg !1878
  %14 = bitcast %struct._object** %return_value to i8*, !dbg !1878
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !1878
  ret %struct._object* %10, !dbg !1879
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_reverse(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !970, metadata !1195), !dbg !1880
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !971, metadata !1195), !dbg !1881
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1882
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1882
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !972, metadata !1195), !dbg !1883
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1883, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1884
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1884
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !973, metadata !1195), !dbg !1885
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1885
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1885
  %3 = bitcast i32* %width to i8*, !dbg !1886
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1886
  call void @llvm.dbg.declare(metadata i32* %width, metadata !974, metadata !1195), !dbg !1887
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1888, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.66, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width), !dbg !1890
  %tobool = icmp ne i32 %call, 0, !dbg !1890
  br i1 %tobool, label %if.end, label %if.then, !dbg !1891

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1892

if.end:                                           ; preds = %entry
  %5 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1893, !tbaa !1200
  %6 = load i32, i32* %width, align 4, !dbg !1894, !tbaa !1244
  %call1 = call %struct._object* @audioop_reverse_impl(%struct.PyModuleDef* %5, %struct.bufferinfo* %fragment, i32 %6), !dbg !1895
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1896, !tbaa !1200
  br label %exit, !dbg !1897

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1898
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1898, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1900
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1901

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1902
  br label %if.end.4, !dbg !1902

if.end.4:                                         ; preds = %if.then.3, %exit
  %8 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1903, !tbaa !1200
  %9 = bitcast i32* %width to i8*, !dbg !1904
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !1904
  %10 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1904
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1904
  %11 = bitcast %struct._object** %return_value to i8*, !dbg !1904
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1904
  ret %struct._object* %8, !dbg !1905
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_byteswap(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !989, metadata !1195), !dbg !1906
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !990, metadata !1195), !dbg !1907
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1908
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1908
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !991, metadata !1195), !dbg !1909
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1909, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1910
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1910
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !992, metadata !1195), !dbg !1911
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1911
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1911
  %3 = bitcast i32* %width to i8*, !dbg !1912
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1912
  call void @llvm.dbg.declare(metadata i32* %width, metadata !993, metadata !1195), !dbg !1913
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1914, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.67, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width), !dbg !1916
  %tobool = icmp ne i32 %call, 0, !dbg !1916
  br i1 %tobool, label %if.end, label %if.then, !dbg !1917

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1918

if.end:                                           ; preds = %entry
  %5 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1919, !tbaa !1200
  %6 = load i32, i32* %width, align 4, !dbg !1920, !tbaa !1244
  %call1 = call %struct._object* @audioop_byteswap_impl(%struct.PyModuleDef* %5, %struct.bufferinfo* %fragment, i32 %6), !dbg !1921
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1922, !tbaa !1200
  br label %exit, !dbg !1923

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1924
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1924, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !1926
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1927

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1928
  br label %if.end.4, !dbg !1928

if.end.4:                                         ; preds = %if.then.3, %exit
  %8 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1929, !tbaa !1200
  %9 = bitcast i32* %width to i8*, !dbg !1930
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !1930
  %10 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1930
  call void @llvm.lifetime.end(i64 80, i8* %10) #1, !dbg !1930
  %11 = bitcast %struct._object** %return_value to i8*, !dbg !1930
  call void @llvm.lifetime.end(i64 8, i8* %11) #1, !dbg !1930
  ret %struct._object* %8, !dbg !1931
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_ratecv(%struct.PyModuleDef* %module, %struct._object* %args) #0 {
entry:
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %args.addr = alloca %struct._object*, align 8
  %return_value = alloca %struct._object*, align 8
  %fragment = alloca %struct.bufferinfo, align 8
  %width = alloca i32, align 4
  %nchannels = alloca i32, align 4
  %inrate = alloca i32, align 4
  %outrate = alloca i32, align 4
  %state = alloca %struct._object*, align 8
  %weightA = alloca i32, align 4
  %weightB = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !1008, metadata !1195), !dbg !1932
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1009, metadata !1195), !dbg !1933
  %0 = bitcast %struct._object** %return_value to i8*, !dbg !1934
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1934
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !1010, metadata !1195), !dbg !1935
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !1935, !tbaa !1200
  %1 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1936
  call void @llvm.lifetime.start(i64 80, i8* %1) #1, !dbg !1936
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %fragment, metadata !1011, metadata !1195), !dbg !1937
  %2 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1937
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 80, i32 8, i1 false), !dbg !1937
  %3 = bitcast i32* %width to i8*, !dbg !1938
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !1938
  call void @llvm.dbg.declare(metadata i32* %width, metadata !1012, metadata !1195), !dbg !1939
  %4 = bitcast i32* %nchannels to i8*, !dbg !1940
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !1940
  call void @llvm.dbg.declare(metadata i32* %nchannels, metadata !1013, metadata !1195), !dbg !1941
  %5 = bitcast i32* %inrate to i8*, !dbg !1942
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !1942
  call void @llvm.dbg.declare(metadata i32* %inrate, metadata !1014, metadata !1195), !dbg !1943
  %6 = bitcast i32* %outrate to i8*, !dbg !1944
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !1944
  call void @llvm.dbg.declare(metadata i32* %outrate, metadata !1015, metadata !1195), !dbg !1945
  %7 = bitcast %struct._object** %state to i8*, !dbg !1946
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !1946
  call void @llvm.dbg.declare(metadata %struct._object** %state, metadata !1016, metadata !1195), !dbg !1947
  %8 = bitcast i32* %weightA to i8*, !dbg !1948
  call void @llvm.lifetime.start(i64 4, i8* %8) #1, !dbg !1948
  call void @llvm.dbg.declare(metadata i32* %weightA, metadata !1017, metadata !1195), !dbg !1949
  store i32 1, i32* %weightA, align 4, !dbg !1949, !tbaa !1244
  %9 = bitcast i32* %weightB to i8*, !dbg !1950
  call void @llvm.lifetime.start(i64 4, i8* %9) #1, !dbg !1950
  call void @llvm.dbg.declare(metadata i32* %weightB, metadata !1018, metadata !1195), !dbg !1951
  store i32 0, i32* %weightB, align 4, !dbg !1951, !tbaa !1244
  %10 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !1952, !tbaa !1200
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i32 0, i32 0), %struct.bufferinfo* %fragment, i32* %width, i32* %nchannels, i32* %inrate, i32* %outrate, %struct._object** %state, i32* %weightA, i32* %weightB), !dbg !1954
  %tobool = icmp ne i32 %call, 0, !dbg !1954
  br i1 %tobool, label %if.end, label %if.then, !dbg !1955

if.then:                                          ; preds = %entry
  br label %exit, !dbg !1956

if.end:                                           ; preds = %entry
  %11 = load %struct.PyModuleDef*, %struct.PyModuleDef** %module.addr, align 8, !dbg !1957, !tbaa !1200
  %12 = load i32, i32* %width, align 4, !dbg !1958, !tbaa !1244
  %13 = load i32, i32* %nchannels, align 4, !dbg !1959, !tbaa !1244
  %14 = load i32, i32* %inrate, align 4, !dbg !1960, !tbaa !1244
  %15 = load i32, i32* %outrate, align 4, !dbg !1961, !tbaa !1244
  %16 = load %struct._object*, %struct._object** %state, align 8, !dbg !1962, !tbaa !1200
  %17 = load i32, i32* %weightA, align 4, !dbg !1963, !tbaa !1244
  %18 = load i32, i32* %weightB, align 4, !dbg !1964, !tbaa !1244
  %call1 = call %struct._object* @audioop_ratecv_impl(%struct.PyModuleDef* %11, %struct.bufferinfo* %fragment, i32 %12, i32 %13, i32 %14, i32 %15, %struct._object* %16, i32 %17, i32 %18), !dbg !1965
  store %struct._object* %call1, %struct._object** %return_value, align 8, !dbg !1966, !tbaa !1200
  br label %exit, !dbg !1967

exit:                                             ; preds = %if.end, %if.then
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %fragment, i32 0, i32 1, !dbg !1968
  %19 = load %struct._object*, %struct._object** %obj, align 8, !dbg !1968, !tbaa !1251
  %tobool2 = icmp ne %struct._object* %19, null, !dbg !1970
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !1971

if.then.3:                                        ; preds = %exit
  call void @PyBuffer_Release(%struct.bufferinfo* %fragment), !dbg !1972
  br label %if.end.4, !dbg !1972

if.end.4:                                         ; preds = %if.then.3, %exit
  %20 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !1973, !tbaa !1200
  %21 = bitcast i32* %weightB to i8*, !dbg !1974
  call void @llvm.lifetime.end(i64 4, i8* %21) #1, !dbg !1974
  %22 = bitcast i32* %weightA to i8*, !dbg !1974
  call void @llvm.lifetime.end(i64 4, i8* %22) #1, !dbg !1974
  %23 = bitcast %struct._object** %state to i8*, !dbg !1974
  call void @llvm.lifetime.end(i64 8, i8* %23) #1, !dbg !1974
  %24 = bitcast i32* %outrate to i8*, !dbg !1974
  call void @llvm.lifetime.end(i64 4, i8* %24) #1, !dbg !1974
  %25 = bitcast i32* %inrate to i8*, !dbg !1974
  call void @llvm.lifetime.end(i64 4, i8* %25) #1, !dbg !1974
  %26 = bitcast i32* %nchannels to i8*, !dbg !1974
  call void @llvm.lifetime.end(i64 4, i8* %26) #1, !dbg !1974
  %27 = bitcast i32* %width to i8*, !dbg !1974
  call void @llvm.lifetime.end(i64 4, i8* %27) #1, !dbg !1974
  %28 = bitcast %struct.bufferinfo* %fragment to i8*, !dbg !1974
  call void @llvm.lifetime.end(i64 80, i8* %28) #1, !dbg !1974
  %29 = bitcast %struct._object** %return_value to i8*, !dbg !1974
  call void @llvm.lifetime.end(i64 8, i8* %29) #1, !dbg !1974
  ret %struct._object* %20, !dbg !1975
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

declare i32 @_PyArg_ParseTuple_SizeT(%struct._object*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_max_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i64, align 8
  %absval = alloca i32, align 4
  %max = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %val = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !405, metadata !1195), !dbg !1976
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !406, metadata !1195), !dbg !1977
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !407, metadata !1195), !dbg !1978
  %0 = bitcast i64* %i to i8*, !dbg !1979
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !1979
  call void @llvm.dbg.declare(metadata i64* %i, metadata !408, metadata !1195), !dbg !1980
  %1 = bitcast i32* %absval to i8*, !dbg !1981
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !1981
  call void @llvm.dbg.declare(metadata i32* %absval, metadata !409, metadata !1195), !dbg !1982
  %2 = bitcast i32* %max to i8*, !dbg !1981
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !1981
  call void @llvm.dbg.declare(metadata i32* %max, metadata !410, metadata !1195), !dbg !1983
  store i32 0, i32* %max, align 4, !dbg !1983, !tbaa !1244
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !1984, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 2, !dbg !1986
  %4 = load i64, i64* %len, align 8, !dbg !1986, !tbaa !1987
  %5 = load i32, i32* %width.addr, align 4, !dbg !1988, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %4, i32 %5), !dbg !1989
  %tobool = icmp ne i32 %call, 0, !dbg !1989
  br i1 %tobool, label %if.end, label %if.then, !dbg !1990

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !1991
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1991

if.end:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !1992, !tbaa !1435
  br label %for.cond, !dbg !1993

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i64, i64* %i, align 8, !dbg !1994, !tbaa !1435
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !1997, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 2, !dbg !1998
  %8 = load i64, i64* %len1, align 8, !dbg !1998, !tbaa !1987
  %cmp = icmp slt i64 %6, %8, !dbg !1999
  br i1 %cmp, label %for.body, label %for.end, !dbg !2000

for.body:                                         ; preds = %for.cond
  %9 = bitcast i32* %val to i8*, !dbg !2001
  call void @llvm.lifetime.start(i64 4, i8* %9) #1, !dbg !2001
  call void @llvm.dbg.declare(metadata i32* %val, metadata !411, metadata !1195), !dbg !2002
  %10 = load i32, i32* %width.addr, align 4, !dbg !2003, !tbaa !1244
  %cmp2 = icmp eq i32 %10, 1, !dbg !2004
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !2005

cond.true:                                        ; preds = %for.body
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2006, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 0, !dbg !2008
  %12 = load i8*, i8** %buf, align 8, !dbg !2008, !tbaa !2009
  %13 = load i64, i64* %i, align 8, !dbg !2010, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %12, i64 %13, !dbg !2011
  %14 = load i8, i8* %add.ptr, align 1, !dbg !2012, !tbaa !2013
  %conv = sext i8 %14 to i32, !dbg !2014
  br label %cond.end.31, !dbg !2005

cond.false:                                       ; preds = %for.body
  %15 = load i32, i32* %width.addr, align 4, !dbg !2015, !tbaa !1244
  %cmp3 = icmp eq i32 %15, 2, !dbg !2017
  br i1 %cmp3, label %cond.true.5, label %cond.false.9, !dbg !2018

cond.true.5:                                      ; preds = %cond.false
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2019, !tbaa !1200
  %buf6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 0, !dbg !2021
  %17 = load i8*, i8** %buf6, align 8, !dbg !2021, !tbaa !2009
  %18 = load i64, i64* %i, align 8, !dbg !2022, !tbaa !1435
  %add.ptr7 = getelementptr i8, i8* %17, i64 %18, !dbg !2023
  %19 = bitcast i8* %add.ptr7 to i16*, !dbg !2024
  %20 = load i16, i16* %19, align 2, !dbg !2025, !tbaa !2026
  %conv8 = sext i16 %20 to i32, !dbg !2028
  br label %cond.end.29, !dbg !2018

cond.false.9:                                     ; preds = %cond.false
  %21 = load i32, i32* %width.addr, align 4, !dbg !2029, !tbaa !1244
  %cmp10 = icmp eq i32 %21, 3, !dbg !2031
  br i1 %cmp10, label %cond.true.12, label %cond.false.26, !dbg !2032

cond.true.12:                                     ; preds = %cond.false.9
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2033, !tbaa !1200
  %buf13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 0, !dbg !2035
  %23 = load i8*, i8** %buf13, align 8, !dbg !2035, !tbaa !2009
  %24 = load i64, i64* %i, align 8, !dbg !2036, !tbaa !1435
  %add.ptr14 = getelementptr i8, i8* %23, i64 %24, !dbg !2037
  %arrayidx = getelementptr i8, i8* %add.ptr14, i64 0, !dbg !2038
  %25 = load i8, i8* %arrayidx, align 1, !dbg !2038, !tbaa !2013
  %conv15 = zext i8 %25 to i32, !dbg !2038
  %26 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2039, !tbaa !1200
  %buf16 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %26, i32 0, i32 0, !dbg !2040
  %27 = load i8*, i8** %buf16, align 8, !dbg !2040, !tbaa !2009
  %28 = load i64, i64* %i, align 8, !dbg !2041, !tbaa !1435
  %add.ptr17 = getelementptr i8, i8* %27, i64 %28, !dbg !2042
  %arrayidx18 = getelementptr i8, i8* %add.ptr17, i64 1, !dbg !2043
  %29 = load i8, i8* %arrayidx18, align 1, !dbg !2043, !tbaa !2013
  %conv19 = zext i8 %29 to i32, !dbg !2043
  %shl = shl i32 %conv19, 8, !dbg !2044
  %add = add i32 %conv15, %shl, !dbg !2045
  %30 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2046, !tbaa !1200
  %buf20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %30, i32 0, i32 0, !dbg !2047
  %31 = load i8*, i8** %buf20, align 8, !dbg !2047, !tbaa !2009
  %32 = load i64, i64* %i, align 8, !dbg !2048, !tbaa !1435
  %add.ptr21 = getelementptr i8, i8* %31, i64 %32, !dbg !2049
  %arrayidx22 = getelementptr i8, i8* %add.ptr21, i64 2, !dbg !2050
  %33 = load i8, i8* %arrayidx22, align 1, !dbg !2050, !tbaa !2013
  %conv23 = sext i8 %33 to i32, !dbg !2050
  %shl24 = shl i32 %conv23, 16, !dbg !2051
  %add25 = add i32 %add, %shl24, !dbg !2052
  br label %cond.end, !dbg !2032

cond.false.26:                                    ; preds = %cond.false.9
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2053, !tbaa !1200
  %buf27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %34, i32 0, i32 0, !dbg !2055
  %35 = load i8*, i8** %buf27, align 8, !dbg !2055, !tbaa !2009
  %36 = load i64, i64* %i, align 8, !dbg !2056, !tbaa !1435
  %add.ptr28 = getelementptr i8, i8* %35, i64 %36, !dbg !2057
  %37 = bitcast i8* %add.ptr28 to i32*, !dbg !2058
  %38 = load i32, i32* %37, align 4, !dbg !2059, !tbaa !1244
  br label %cond.end, !dbg !2032

cond.end:                                         ; preds = %cond.false.26, %cond.true.12
  %cond = phi i32 [ %add25, %cond.true.12 ], [ %38, %cond.false.26 ], !dbg !2032
  br label %cond.end.29, !dbg !2060

cond.end.29:                                      ; preds = %cond.end, %cond.true.5
  %cond30 = phi i32 [ %conv8, %cond.true.5 ], [ %cond, %cond.end ], !dbg !2018
  br label %cond.end.31, !dbg !2063

cond.end.31:                                      ; preds = %cond.end.29, %cond.true
  %cond32 = phi i32 [ %conv, %cond.true ], [ %cond30, %cond.end.29 ], !dbg !2005
  store i32 %cond32, i32* %val, align 4, !dbg !2066, !tbaa !1244
  %39 = load i32, i32* %val, align 4, !dbg !2069, !tbaa !1244
  %cmp33 = icmp slt i32 %39, 0, !dbg !2071
  br i1 %cmp33, label %if.then.35, label %if.else, !dbg !2072

if.then.35:                                       ; preds = %cond.end.31
  %40 = load i32, i32* %val, align 4, !dbg !2073, !tbaa !1244
  %sub = sub i32 0, %40, !dbg !2075
  store i32 %sub, i32* %absval, align 4, !dbg !2076, !tbaa !1244
  br label %if.end.36, !dbg !2077

if.else:                                          ; preds = %cond.end.31
  %41 = load i32, i32* %val, align 4, !dbg !2078, !tbaa !1244
  store i32 %41, i32* %absval, align 4, !dbg !2079, !tbaa !1244
  br label %if.end.36

if.end.36:                                        ; preds = %if.else, %if.then.35
  %42 = load i32, i32* %absval, align 4, !dbg !2080, !tbaa !1244
  %43 = load i32, i32* %max, align 4, !dbg !2082, !tbaa !1244
  %cmp37 = icmp ugt i32 %42, %43, !dbg !2083
  br i1 %cmp37, label %if.then.39, label %if.end.40, !dbg !2084

if.then.39:                                       ; preds = %if.end.36
  %44 = load i32, i32* %absval, align 4, !dbg !2085, !tbaa !1244
  store i32 %44, i32* %max, align 4, !dbg !2087, !tbaa !1244
  br label %if.end.40, !dbg !2088

if.end.40:                                        ; preds = %if.then.39, %if.end.36
  %45 = bitcast i32* %val to i8*, !dbg !2089
  call void @llvm.lifetime.end(i64 4, i8* %45) #1, !dbg !2089
  br label %for.inc, !dbg !2090

for.inc:                                          ; preds = %if.end.40
  %46 = load i32, i32* %width.addr, align 4, !dbg !2091, !tbaa !1244
  %conv41 = sext i32 %46 to i64, !dbg !2091
  %47 = load i64, i64* %i, align 8, !dbg !2092, !tbaa !1435
  %add42 = add i64 %47, %conv41, !dbg !2092
  store i64 %add42, i64* %i, align 8, !dbg !2092, !tbaa !1435
  br label %for.cond, !dbg !2093

for.end:                                          ; preds = %for.cond
  %48 = load i32, i32* %max, align 4, !dbg !2094, !tbaa !1244
  %conv43 = zext i32 %48 to i64, !dbg !2094
  %call44 = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv43), !dbg !2095
  store %struct._object* %call44, %struct._object** %retval, !dbg !2096
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2096

cleanup:                                          ; preds = %for.end, %if.then
  %49 = bitcast i32* %max to i8*, !dbg !2097
  call void @llvm.lifetime.end(i64 4, i8* %49) #1, !dbg !2097
  %50 = bitcast i32* %absval to i8*, !dbg !2097
  call void @llvm.lifetime.end(i64 4, i8* %50) #1, !dbg !2097
  %51 = bitcast i64* %i to i8*, !dbg !2097
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !2097
  %52 = load %struct._object*, %struct._object** %retval, !dbg !2097
  ret %struct._object* %52, !dbg !2097
}

declare void @PyBuffer_Release(%struct.bufferinfo*) #3

; Function Attrs: nounwind uwtable
define internal i32 @audioop_check_parameters(i64 %len, i32 %size) #0 {
entry:
  %retval = alloca i32, align 4
  %len.addr = alloca i64, align 8
  %size.addr = alloca i32, align 4
  store i64 %len, i64* %len.addr, align 8, !tbaa !1435
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !419, metadata !1195), !dbg !2098
  store i32 %size, i32* %size.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !420, metadata !1195), !dbg !2099
  %0 = load i32, i32* %size.addr, align 4, !dbg !2100, !tbaa !1244
  %call = call i32 @audioop_check_size(i32 %0), !dbg !2102
  %tobool = icmp ne i32 %call, 0, !dbg !2102
  br i1 %tobool, label %if.end, label %if.then, !dbg !2103

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !2104
  br label %return, !dbg !2104

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %len.addr, align 8, !dbg !2105, !tbaa !1435
  %2 = load i32, i32* %size.addr, align 4, !dbg !2107, !tbaa !1244
  %conv = sext i32 %2 to i64, !dbg !2107
  %rem = srem i64 %1, %conv, !dbg !2108
  %cmp = icmp ne i64 %rem, 0, !dbg !2109
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !2110

if.then.2:                                        ; preds = %if.end
  %3 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !2111, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0)), !dbg !2113
  store i32 0, i32* %retval, !dbg !2114
  br label %return, !dbg !2114

if.end.3:                                         ; preds = %if.end
  store i32 1, i32* %retval, !dbg !2115
  br label %return, !dbg !2115

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %4 = load i32, i32* %retval, !dbg !2116
  ret i32 %4, !dbg !2116
}

declare %struct._object* @PyLong_FromUnsignedLong(i64) #3

; Function Attrs: nounwind uwtable
define internal i32 @audioop_check_size(i32 %size) #0 {
entry:
  %retval = alloca i32, align 4
  %size.addr = alloca i32, align 4
  store i32 %size, i32* %size.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !425, metadata !1195), !dbg !2117
  %0 = load i32, i32* %size.addr, align 4, !dbg !2118, !tbaa !1244
  %cmp = icmp slt i32 %0, 1, !dbg !2120
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2121

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %size.addr, align 4, !dbg !2122, !tbaa !1244
  %cmp1 = icmp sgt i32 %1, 4, !dbg !2124
  br i1 %cmp1, label %if.then, label %if.else, !dbg !2125

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !2126, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i32 0, i32 0)), !dbg !2128
  store i32 0, i32* %retval, !dbg !2129
  br label %return, !dbg !2129

if.else:                                          ; preds = %lor.lhs.false
  store i32 1, i32* %retval, !dbg !2130
  br label %return, !dbg !2130

return:                                           ; preds = %if.else, %if.then
  %3 = load i32, i32* %retval, !dbg !2131
  ret i32 %3, !dbg !2131
}

declare void @PyErr_SetString(%struct._object*, i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_minmax_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i64, align 8
  %min = alloca i32, align 4
  %max = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %val = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !435, metadata !1195), !dbg !2132
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !436, metadata !1195), !dbg !2133
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !437, metadata !1195), !dbg !2134
  %0 = bitcast i64* %i to i8*, !dbg !2135
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2135
  call void @llvm.dbg.declare(metadata i64* %i, metadata !438, metadata !1195), !dbg !2136
  %1 = bitcast i32* %min to i8*, !dbg !2137
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !2137
  call void @llvm.dbg.declare(metadata i32* %min, metadata !439, metadata !1195), !dbg !2138
  store i32 2147483647, i32* %min, align 4, !dbg !2138, !tbaa !1244
  %2 = bitcast i32* %max to i8*, !dbg !2137
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !2137
  call void @llvm.dbg.declare(metadata i32* %max, metadata !440, metadata !1195), !dbg !2139
  store i32 -2147483648, i32* %max, align 4, !dbg !2139, !tbaa !1244
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2140, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 2, !dbg !2142
  %4 = load i64, i64* %len, align 8, !dbg !2142, !tbaa !1987
  %5 = load i32, i32* %width.addr, align 4, !dbg !2143, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %4, i32 %5), !dbg !2144
  %tobool = icmp ne i32 %call, 0, !dbg !2144
  br i1 %tobool, label %if.end, label %if.then, !dbg !2145

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2146
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2146

if.end:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !2147, !tbaa !1435
  br label %for.cond, !dbg !2148

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i64, i64* %i, align 8, !dbg !2149, !tbaa !1435
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2152, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 2, !dbg !2153
  %8 = load i64, i64* %len1, align 8, !dbg !2153, !tbaa !1987
  %cmp = icmp slt i64 %6, %8, !dbg !2154
  br i1 %cmp, label %for.body, label %for.end, !dbg !2155

for.body:                                         ; preds = %for.cond
  %9 = bitcast i32* %val to i8*, !dbg !2156
  call void @llvm.lifetime.start(i64 4, i8* %9) #1, !dbg !2156
  call void @llvm.dbg.declare(metadata i32* %val, metadata !441, metadata !1195), !dbg !2157
  %10 = load i32, i32* %width.addr, align 4, !dbg !2158, !tbaa !1244
  %cmp2 = icmp eq i32 %10, 1, !dbg !2159
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !2160

cond.true:                                        ; preds = %for.body
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2161, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 0, !dbg !2163
  %12 = load i8*, i8** %buf, align 8, !dbg !2163, !tbaa !2009
  %13 = load i64, i64* %i, align 8, !dbg !2164, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %12, i64 %13, !dbg !2165
  %14 = load i8, i8* %add.ptr, align 1, !dbg !2166, !tbaa !2013
  %conv = sext i8 %14 to i32, !dbg !2167
  br label %cond.end.31, !dbg !2160

cond.false:                                       ; preds = %for.body
  %15 = load i32, i32* %width.addr, align 4, !dbg !2168, !tbaa !1244
  %cmp3 = icmp eq i32 %15, 2, !dbg !2170
  br i1 %cmp3, label %cond.true.5, label %cond.false.9, !dbg !2171

cond.true.5:                                      ; preds = %cond.false
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2172, !tbaa !1200
  %buf6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 0, !dbg !2174
  %17 = load i8*, i8** %buf6, align 8, !dbg !2174, !tbaa !2009
  %18 = load i64, i64* %i, align 8, !dbg !2175, !tbaa !1435
  %add.ptr7 = getelementptr i8, i8* %17, i64 %18, !dbg !2176
  %19 = bitcast i8* %add.ptr7 to i16*, !dbg !2177
  %20 = load i16, i16* %19, align 2, !dbg !2178, !tbaa !2026
  %conv8 = sext i16 %20 to i32, !dbg !2179
  br label %cond.end.29, !dbg !2171

cond.false.9:                                     ; preds = %cond.false
  %21 = load i32, i32* %width.addr, align 4, !dbg !2180, !tbaa !1244
  %cmp10 = icmp eq i32 %21, 3, !dbg !2182
  br i1 %cmp10, label %cond.true.12, label %cond.false.26, !dbg !2183

cond.true.12:                                     ; preds = %cond.false.9
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2184, !tbaa !1200
  %buf13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 0, !dbg !2186
  %23 = load i8*, i8** %buf13, align 8, !dbg !2186, !tbaa !2009
  %24 = load i64, i64* %i, align 8, !dbg !2187, !tbaa !1435
  %add.ptr14 = getelementptr i8, i8* %23, i64 %24, !dbg !2188
  %arrayidx = getelementptr i8, i8* %add.ptr14, i64 0, !dbg !2189
  %25 = load i8, i8* %arrayidx, align 1, !dbg !2189, !tbaa !2013
  %conv15 = zext i8 %25 to i32, !dbg !2189
  %26 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2190, !tbaa !1200
  %buf16 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %26, i32 0, i32 0, !dbg !2191
  %27 = load i8*, i8** %buf16, align 8, !dbg !2191, !tbaa !2009
  %28 = load i64, i64* %i, align 8, !dbg !2192, !tbaa !1435
  %add.ptr17 = getelementptr i8, i8* %27, i64 %28, !dbg !2193
  %arrayidx18 = getelementptr i8, i8* %add.ptr17, i64 1, !dbg !2194
  %29 = load i8, i8* %arrayidx18, align 1, !dbg !2194, !tbaa !2013
  %conv19 = zext i8 %29 to i32, !dbg !2194
  %shl = shl i32 %conv19, 8, !dbg !2195
  %add = add i32 %conv15, %shl, !dbg !2196
  %30 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2197, !tbaa !1200
  %buf20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %30, i32 0, i32 0, !dbg !2198
  %31 = load i8*, i8** %buf20, align 8, !dbg !2198, !tbaa !2009
  %32 = load i64, i64* %i, align 8, !dbg !2199, !tbaa !1435
  %add.ptr21 = getelementptr i8, i8* %31, i64 %32, !dbg !2200
  %arrayidx22 = getelementptr i8, i8* %add.ptr21, i64 2, !dbg !2201
  %33 = load i8, i8* %arrayidx22, align 1, !dbg !2201, !tbaa !2013
  %conv23 = sext i8 %33 to i32, !dbg !2201
  %shl24 = shl i32 %conv23, 16, !dbg !2202
  %add25 = add i32 %add, %shl24, !dbg !2203
  br label %cond.end, !dbg !2183

cond.false.26:                                    ; preds = %cond.false.9
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2204, !tbaa !1200
  %buf27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %34, i32 0, i32 0, !dbg !2206
  %35 = load i8*, i8** %buf27, align 8, !dbg !2206, !tbaa !2009
  %36 = load i64, i64* %i, align 8, !dbg !2207, !tbaa !1435
  %add.ptr28 = getelementptr i8, i8* %35, i64 %36, !dbg !2208
  %37 = bitcast i8* %add.ptr28 to i32*, !dbg !2209
  %38 = load i32, i32* %37, align 4, !dbg !2210, !tbaa !1244
  br label %cond.end, !dbg !2183

cond.end:                                         ; preds = %cond.false.26, %cond.true.12
  %cond = phi i32 [ %add25, %cond.true.12 ], [ %38, %cond.false.26 ], !dbg !2183
  br label %cond.end.29, !dbg !2211

cond.end.29:                                      ; preds = %cond.end, %cond.true.5
  %cond30 = phi i32 [ %conv8, %cond.true.5 ], [ %cond, %cond.end ], !dbg !2171
  br label %cond.end.31, !dbg !2214

cond.end.31:                                      ; preds = %cond.end.29, %cond.true
  %cond32 = phi i32 [ %conv, %cond.true ], [ %cond30, %cond.end.29 ], !dbg !2160
  store i32 %cond32, i32* %val, align 4, !dbg !2217, !tbaa !1244
  %39 = load i32, i32* %val, align 4, !dbg !2220, !tbaa !1244
  %40 = load i32, i32* %max, align 4, !dbg !2222, !tbaa !1244
  %cmp33 = icmp sgt i32 %39, %40, !dbg !2223
  br i1 %cmp33, label %if.then.35, label %if.end.36, !dbg !2224

if.then.35:                                       ; preds = %cond.end.31
  %41 = load i32, i32* %val, align 4, !dbg !2225, !tbaa !1244
  store i32 %41, i32* %max, align 4, !dbg !2227, !tbaa !1244
  br label %if.end.36, !dbg !2228

if.end.36:                                        ; preds = %if.then.35, %cond.end.31
  %42 = load i32, i32* %val, align 4, !dbg !2229, !tbaa !1244
  %43 = load i32, i32* %min, align 4, !dbg !2231, !tbaa !1244
  %cmp37 = icmp slt i32 %42, %43, !dbg !2232
  br i1 %cmp37, label %if.then.39, label %if.end.40, !dbg !2233

if.then.39:                                       ; preds = %if.end.36
  %44 = load i32, i32* %val, align 4, !dbg !2234, !tbaa !1244
  store i32 %44, i32* %min, align 4, !dbg !2236, !tbaa !1244
  br label %if.end.40, !dbg !2237

if.end.40:                                        ; preds = %if.then.39, %if.end.36
  %45 = bitcast i32* %val to i8*, !dbg !2238
  call void @llvm.lifetime.end(i64 4, i8* %45) #1, !dbg !2238
  br label %for.inc, !dbg !2239

for.inc:                                          ; preds = %if.end.40
  %46 = load i32, i32* %width.addr, align 4, !dbg !2240, !tbaa !1244
  %conv41 = sext i32 %46 to i64, !dbg !2240
  %47 = load i64, i64* %i, align 8, !dbg !2241, !tbaa !1435
  %add42 = add i64 %47, %conv41, !dbg !2241
  store i64 %add42, i64* %i, align 8, !dbg !2241, !tbaa !1435
  br label %for.cond, !dbg !2242

for.end:                                          ; preds = %for.cond
  %48 = load i32, i32* %min, align 4, !dbg !2243, !tbaa !1244
  %49 = load i32, i32* %max, align 4, !dbg !2244, !tbaa !1244
  %call43 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0), i32 %48, i32 %49), !dbg !2245
  store %struct._object* %call43, %struct._object** %retval, !dbg !2246
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2246

cleanup:                                          ; preds = %for.end, %if.then
  %50 = bitcast i32* %max to i8*, !dbg !2247
  call void @llvm.lifetime.end(i64 4, i8* %50) #1, !dbg !2247
  %51 = bitcast i32* %min to i8*, !dbg !2247
  call void @llvm.lifetime.end(i64 4, i8* %51) #1, !dbg !2247
  %52 = bitcast i64* %i to i8*, !dbg !2247
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !2247
  %53 = load %struct._object*, %struct._object** %retval, !dbg !2247
  ret %struct._object* %53, !dbg !2247
}

declare %struct._object* @_Py_BuildValue_SizeT(i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_avg_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i64, align 8
  %avg = alloca i32, align 4
  %sum = alloca double, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !454, metadata !1195), !dbg !2248
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !455, metadata !1195), !dbg !2249
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !456, metadata !1195), !dbg !2250
  %0 = bitcast i64* %i to i8*, !dbg !2251
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2251
  call void @llvm.dbg.declare(metadata i64* %i, metadata !457, metadata !1195), !dbg !2252
  %1 = bitcast i32* %avg to i8*, !dbg !2253
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !2253
  call void @llvm.dbg.declare(metadata i32* %avg, metadata !458, metadata !1195), !dbg !2254
  %2 = bitcast double* %sum to i8*, !dbg !2255
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2255
  call void @llvm.dbg.declare(metadata double* %sum, metadata !459, metadata !1195), !dbg !2256
  store double 0.000000e+00, double* %sum, align 8, !dbg !2256, !tbaa !1521
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2257, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 2, !dbg !2259
  %4 = load i64, i64* %len, align 8, !dbg !2259, !tbaa !1987
  %5 = load i32, i32* %width.addr, align 4, !dbg !2260, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %4, i32 %5), !dbg !2261
  %tobool = icmp ne i32 %call, 0, !dbg !2261
  br i1 %tobool, label %if.end, label %if.then, !dbg !2262

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2263
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2263

if.end:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !2264, !tbaa !1435
  br label %for.cond, !dbg !2266

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i64, i64* %i, align 8, !dbg !2267, !tbaa !1435
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2271, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 2, !dbg !2272
  %8 = load i64, i64* %len1, align 8, !dbg !2272, !tbaa !1987
  %cmp = icmp slt i64 %6, %8, !dbg !2273
  br i1 %cmp, label %for.body, label %for.end, !dbg !2274

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %width.addr, align 4, !dbg !2275, !tbaa !1244
  %cmp2 = icmp eq i32 %9, 1, !dbg !2276
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !2277

cond.true:                                        ; preds = %for.body
  %10 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2278, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %10, i32 0, i32 0, !dbg !2279
  %11 = load i8*, i8** %buf, align 8, !dbg !2279, !tbaa !2009
  %12 = load i64, i64* %i, align 8, !dbg !2280, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %11, i64 %12, !dbg !2281
  %13 = load i8, i8* %add.ptr, align 1, !dbg !2282, !tbaa !2013
  %conv = sext i8 %13 to i32, !dbg !2283
  br label %cond.end.31, !dbg !2277

cond.false:                                       ; preds = %for.body
  %14 = load i32, i32* %width.addr, align 4, !dbg !2284, !tbaa !1244
  %cmp3 = icmp eq i32 %14, 2, !dbg !2286
  br i1 %cmp3, label %cond.true.5, label %cond.false.9, !dbg !2287

cond.true.5:                                      ; preds = %cond.false
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2288, !tbaa !1200
  %buf6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 0, !dbg !2290
  %16 = load i8*, i8** %buf6, align 8, !dbg !2290, !tbaa !2009
  %17 = load i64, i64* %i, align 8, !dbg !2291, !tbaa !1435
  %add.ptr7 = getelementptr i8, i8* %16, i64 %17, !dbg !2292
  %18 = bitcast i8* %add.ptr7 to i16*, !dbg !2293
  %19 = load i16, i16* %18, align 2, !dbg !2294, !tbaa !2026
  %conv8 = sext i16 %19 to i32, !dbg !2295
  br label %cond.end.29, !dbg !2287

cond.false.9:                                     ; preds = %cond.false
  %20 = load i32, i32* %width.addr, align 4, !dbg !2296, !tbaa !1244
  %cmp10 = icmp eq i32 %20, 3, !dbg !2298
  br i1 %cmp10, label %cond.true.12, label %cond.false.26, !dbg !2299

cond.true.12:                                     ; preds = %cond.false.9
  %21 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2300, !tbaa !1200
  %buf13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %21, i32 0, i32 0, !dbg !2302
  %22 = load i8*, i8** %buf13, align 8, !dbg !2302, !tbaa !2009
  %23 = load i64, i64* %i, align 8, !dbg !2303, !tbaa !1435
  %add.ptr14 = getelementptr i8, i8* %22, i64 %23, !dbg !2304
  %arrayidx = getelementptr i8, i8* %add.ptr14, i64 0, !dbg !2305
  %24 = load i8, i8* %arrayidx, align 1, !dbg !2305, !tbaa !2013
  %conv15 = zext i8 %24 to i32, !dbg !2305
  %25 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2306, !tbaa !1200
  %buf16 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %25, i32 0, i32 0, !dbg !2307
  %26 = load i8*, i8** %buf16, align 8, !dbg !2307, !tbaa !2009
  %27 = load i64, i64* %i, align 8, !dbg !2308, !tbaa !1435
  %add.ptr17 = getelementptr i8, i8* %26, i64 %27, !dbg !2309
  %arrayidx18 = getelementptr i8, i8* %add.ptr17, i64 1, !dbg !2310
  %28 = load i8, i8* %arrayidx18, align 1, !dbg !2310, !tbaa !2013
  %conv19 = zext i8 %28 to i32, !dbg !2310
  %shl = shl i32 %conv19, 8, !dbg !2311
  %add = add i32 %conv15, %shl, !dbg !2312
  %29 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2313, !tbaa !1200
  %buf20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %29, i32 0, i32 0, !dbg !2314
  %30 = load i8*, i8** %buf20, align 8, !dbg !2314, !tbaa !2009
  %31 = load i64, i64* %i, align 8, !dbg !2315, !tbaa !1435
  %add.ptr21 = getelementptr i8, i8* %30, i64 %31, !dbg !2316
  %arrayidx22 = getelementptr i8, i8* %add.ptr21, i64 2, !dbg !2317
  %32 = load i8, i8* %arrayidx22, align 1, !dbg !2317, !tbaa !2013
  %conv23 = sext i8 %32 to i32, !dbg !2317
  %shl24 = shl i32 %conv23, 16, !dbg !2318
  %add25 = add i32 %add, %shl24, !dbg !2319
  br label %cond.end, !dbg !2299

cond.false.26:                                    ; preds = %cond.false.9
  %33 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2320, !tbaa !1200
  %buf27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %33, i32 0, i32 0, !dbg !2322
  %34 = load i8*, i8** %buf27, align 8, !dbg !2322, !tbaa !2009
  %35 = load i64, i64* %i, align 8, !dbg !2323, !tbaa !1435
  %add.ptr28 = getelementptr i8, i8* %34, i64 %35, !dbg !2324
  %36 = bitcast i8* %add.ptr28 to i32*, !dbg !2325
  %37 = load i32, i32* %36, align 4, !dbg !2326, !tbaa !1244
  br label %cond.end, !dbg !2299

cond.end:                                         ; preds = %cond.false.26, %cond.true.12
  %cond = phi i32 [ %add25, %cond.true.12 ], [ %37, %cond.false.26 ], !dbg !2299
  br label %cond.end.29, !dbg !2327

cond.end.29:                                      ; preds = %cond.end, %cond.true.5
  %cond30 = phi i32 [ %conv8, %cond.true.5 ], [ %cond, %cond.end ], !dbg !2287
  br label %cond.end.31, !dbg !2330

cond.end.31:                                      ; preds = %cond.end.29, %cond.true
  %cond32 = phi i32 [ %conv, %cond.true ], [ %cond30, %cond.end.29 ], !dbg !2277
  %conv33 = sitofp i32 %cond32 to double, !dbg !2333
  %38 = load double, double* %sum, align 8, !dbg !2336, !tbaa !1521
  %add34 = fadd double %38, %conv33, !dbg !2336
  store double %add34, double* %sum, align 8, !dbg !2336, !tbaa !1521
  br label %for.inc, !dbg !2337

for.inc:                                          ; preds = %cond.end.31
  %39 = load i32, i32* %width.addr, align 4, !dbg !2338, !tbaa !1244
  %conv35 = sext i32 %39 to i64, !dbg !2338
  %40 = load i64, i64* %i, align 8, !dbg !2339, !tbaa !1435
  %add36 = add i64 %40, %conv35, !dbg !2339
  store i64 %add36, i64* %i, align 8, !dbg !2339, !tbaa !1435
  br label %for.cond, !dbg !2340

for.end:                                          ; preds = %for.cond
  %41 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2341, !tbaa !1200
  %len37 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %41, i32 0, i32 2, !dbg !2343
  %42 = load i64, i64* %len37, align 8, !dbg !2343, !tbaa !1987
  %cmp38 = icmp eq i64 %42, 0, !dbg !2344
  br i1 %cmp38, label %if.then.40, label %if.else, !dbg !2345

if.then.40:                                       ; preds = %for.end
  store i32 0, i32* %avg, align 4, !dbg !2346, !tbaa !1244
  br label %if.end.47, !dbg !2347

if.else:                                          ; preds = %for.end
  %43 = load double, double* %sum, align 8, !dbg !2348, !tbaa !1521
  %44 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2349, !tbaa !1200
  %len41 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %44, i32 0, i32 2, !dbg !2350
  %45 = load i64, i64* %len41, align 8, !dbg !2350, !tbaa !1987
  %46 = load i32, i32* %width.addr, align 4, !dbg !2351, !tbaa !1244
  %conv42 = sext i32 %46 to i64, !dbg !2351
  %div = sdiv i64 %45, %conv42, !dbg !2352
  %conv43 = sitofp i64 %div to double, !dbg !2353
  %div44 = fdiv double %43, %conv43, !dbg !2354
  %call45 = call double @floor(double %div44) #2, !dbg !2355
  %conv46 = fptosi double %call45 to i32, !dbg !2356
  store i32 %conv46, i32* %avg, align 4, !dbg !2357, !tbaa !1244
  br label %if.end.47

if.end.47:                                        ; preds = %if.else, %if.then.40
  %47 = load i32, i32* %avg, align 4, !dbg !2358, !tbaa !1244
  %conv48 = sext i32 %47 to i64, !dbg !2358
  %call49 = call %struct._object* @PyLong_FromLong(i64 %conv48), !dbg !2359
  store %struct._object* %call49, %struct._object** %retval, !dbg !2360
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2360

cleanup:                                          ; preds = %if.end.47, %if.then
  %48 = bitcast double* %sum to i8*, !dbg !2361
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !2361
  %49 = bitcast i32* %avg to i8*, !dbg !2361
  call void @llvm.lifetime.end(i64 4, i8* %49) #1, !dbg !2361
  %50 = bitcast i64* %i to i8*, !dbg !2361
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !2361
  %51 = load %struct._object*, %struct._object** %retval, !dbg !2361
  ret %struct._object* %51, !dbg !2361
}

; Function Attrs: nounwind readnone
declare double @floor(double) #4

declare %struct._object* @PyLong_FromLong(i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_maxpp_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i64, align 8
  %prevval = alloca i32, align 4
  %prevextremevalid = alloca i32, align 4
  %prevextreme = alloca i32, align 4
  %max = alloca i32, align 4
  %extremediff = alloca i32, align 4
  %diff = alloca i32, align 4
  %prevdiff = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %val = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !469, metadata !1195), !dbg !2362
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !470, metadata !1195), !dbg !2363
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !471, metadata !1195), !dbg !2364
  %0 = bitcast i64* %i to i8*, !dbg !2365
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2365
  call void @llvm.dbg.declare(metadata i64* %i, metadata !472, metadata !1195), !dbg !2366
  %1 = bitcast i32* %prevval to i8*, !dbg !2367
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !2367
  call void @llvm.dbg.declare(metadata i32* %prevval, metadata !473, metadata !1195), !dbg !2368
  %2 = bitcast i32* %prevextremevalid to i8*, !dbg !2367
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !2367
  call void @llvm.dbg.declare(metadata i32* %prevextremevalid, metadata !474, metadata !1195), !dbg !2369
  store i32 0, i32* %prevextremevalid, align 4, !dbg !2369, !tbaa !1244
  %3 = bitcast i32* %prevextreme to i8*, !dbg !2367
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !2367
  call void @llvm.dbg.declare(metadata i32* %prevextreme, metadata !475, metadata !1195), !dbg !2370
  store i32 0, i32* %prevextreme, align 4, !dbg !2370, !tbaa !1244
  %4 = bitcast i32* %max to i8*, !dbg !2371
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !2371
  call void @llvm.dbg.declare(metadata i32* %max, metadata !476, metadata !1195), !dbg !2372
  store i32 0, i32* %max, align 4, !dbg !2372, !tbaa !1244
  %5 = bitcast i32* %extremediff to i8*, !dbg !2371
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !2371
  call void @llvm.dbg.declare(metadata i32* %extremediff, metadata !477, metadata !1195), !dbg !2373
  %6 = bitcast i32* %diff to i8*, !dbg !2374
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !2374
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !478, metadata !1195), !dbg !2375
  %7 = bitcast i32* %prevdiff to i8*, !dbg !2374
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !2374
  call void @llvm.dbg.declare(metadata i32* %prevdiff, metadata !479, metadata !1195), !dbg !2376
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2377, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 2, !dbg !2379
  %9 = load i64, i64* %len, align 8, !dbg !2379, !tbaa !1987
  %10 = load i32, i32* %width.addr, align 4, !dbg !2380, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %9, i32 %10), !dbg !2381
  %tobool = icmp ne i32 %call, 0, !dbg !2381
  br i1 %tobool, label %if.end, label %if.then, !dbg !2382

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2383
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2383

if.end:                                           ; preds = %entry
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2384, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 2, !dbg !2386
  %12 = load i64, i64* %len1, align 8, !dbg !2386, !tbaa !1987
  %13 = load i32, i32* %width.addr, align 4, !dbg !2387, !tbaa !1244
  %conv = sext i32 %13 to i64, !dbg !2387
  %cmp = icmp sle i64 %12, %conv, !dbg !2388
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !2389

if.then.3:                                        ; preds = %if.end
  %call4 = call %struct._object* @PyLong_FromLong(i64 0), !dbg !2390
  store %struct._object* %call4, %struct._object** %retval, !dbg !2391
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2391

if.end.5:                                         ; preds = %if.end
  %14 = load i32, i32* %width.addr, align 4, !dbg !2392, !tbaa !1244
  %cmp6 = icmp eq i32 %14, 1, !dbg !2393
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !2394

cond.true:                                        ; preds = %if.end.5
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2395, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 0, !dbg !2397
  %16 = load i8*, i8** %buf, align 8, !dbg !2397, !tbaa !2009
  %add.ptr = getelementptr i8, i8* %16, i64 0, !dbg !2398
  %17 = load i8, i8* %add.ptr, align 1, !dbg !2399, !tbaa !2013
  %conv8 = sext i8 %17 to i32, !dbg !2400
  br label %cond.end.37, !dbg !2394

cond.false:                                       ; preds = %if.end.5
  %18 = load i32, i32* %width.addr, align 4, !dbg !2401, !tbaa !1244
  %cmp9 = icmp eq i32 %18, 2, !dbg !2403
  br i1 %cmp9, label %cond.true.11, label %cond.false.15, !dbg !2404

cond.true.11:                                     ; preds = %cond.false
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2405, !tbaa !1200
  %buf12 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 0, !dbg !2407
  %20 = load i8*, i8** %buf12, align 8, !dbg !2407, !tbaa !2009
  %add.ptr13 = getelementptr i8, i8* %20, i64 0, !dbg !2408
  %21 = bitcast i8* %add.ptr13 to i16*, !dbg !2409
  %22 = load i16, i16* %21, align 2, !dbg !2410, !tbaa !2026
  %conv14 = sext i16 %22 to i32, !dbg !2411
  br label %cond.end.35, !dbg !2404

cond.false.15:                                    ; preds = %cond.false
  %23 = load i32, i32* %width.addr, align 4, !dbg !2412, !tbaa !1244
  %cmp16 = icmp eq i32 %23, 3, !dbg !2414
  br i1 %cmp16, label %cond.true.18, label %cond.false.32, !dbg !2415

cond.true.18:                                     ; preds = %cond.false.15
  %24 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2416, !tbaa !1200
  %buf19 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %24, i32 0, i32 0, !dbg !2418
  %25 = load i8*, i8** %buf19, align 8, !dbg !2418, !tbaa !2009
  %add.ptr20 = getelementptr i8, i8* %25, i64 0, !dbg !2419
  %arrayidx = getelementptr i8, i8* %add.ptr20, i64 0, !dbg !2420
  %26 = load i8, i8* %arrayidx, align 1, !dbg !2420, !tbaa !2013
  %conv21 = zext i8 %26 to i32, !dbg !2420
  %27 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2421, !tbaa !1200
  %buf22 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %27, i32 0, i32 0, !dbg !2422
  %28 = load i8*, i8** %buf22, align 8, !dbg !2422, !tbaa !2009
  %add.ptr23 = getelementptr i8, i8* %28, i64 0, !dbg !2423
  %arrayidx24 = getelementptr i8, i8* %add.ptr23, i64 1, !dbg !2424
  %29 = load i8, i8* %arrayidx24, align 1, !dbg !2424, !tbaa !2013
  %conv25 = zext i8 %29 to i32, !dbg !2424
  %shl = shl i32 %conv25, 8, !dbg !2425
  %add = add i32 %conv21, %shl, !dbg !2426
  %30 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2427, !tbaa !1200
  %buf26 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %30, i32 0, i32 0, !dbg !2428
  %31 = load i8*, i8** %buf26, align 8, !dbg !2428, !tbaa !2009
  %add.ptr27 = getelementptr i8, i8* %31, i64 0, !dbg !2429
  %arrayidx28 = getelementptr i8, i8* %add.ptr27, i64 2, !dbg !2430
  %32 = load i8, i8* %arrayidx28, align 1, !dbg !2430, !tbaa !2013
  %conv29 = sext i8 %32 to i32, !dbg !2430
  %shl30 = shl i32 %conv29, 16, !dbg !2431
  %add31 = add i32 %add, %shl30, !dbg !2432
  br label %cond.end, !dbg !2415

cond.false.32:                                    ; preds = %cond.false.15
  %33 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2433, !tbaa !1200
  %buf33 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %33, i32 0, i32 0, !dbg !2435
  %34 = load i8*, i8** %buf33, align 8, !dbg !2435, !tbaa !2009
  %add.ptr34 = getelementptr i8, i8* %34, i64 0, !dbg !2436
  %35 = bitcast i8* %add.ptr34 to i32*, !dbg !2437
  %36 = load i32, i32* %35, align 4, !dbg !2438, !tbaa !1244
  br label %cond.end, !dbg !2415

cond.end:                                         ; preds = %cond.false.32, %cond.true.18
  %cond = phi i32 [ %add31, %cond.true.18 ], [ %36, %cond.false.32 ], !dbg !2415
  br label %cond.end.35, !dbg !2439

cond.end.35:                                      ; preds = %cond.end, %cond.true.11
  %cond36 = phi i32 [ %conv14, %cond.true.11 ], [ %cond, %cond.end ], !dbg !2404
  br label %cond.end.37, !dbg !2442

cond.end.37:                                      ; preds = %cond.end.35, %cond.true
  %cond38 = phi i32 [ %conv8, %cond.true ], [ %cond36, %cond.end.35 ], !dbg !2394
  store i32 %cond38, i32* %prevval, align 4, !dbg !2445, !tbaa !1244
  store i32 17, i32* %prevdiff, align 4, !dbg !2448, !tbaa !1244
  %37 = load i32, i32* %width.addr, align 4, !dbg !2449, !tbaa !1244
  %conv39 = sext i32 %37 to i64, !dbg !2449
  store i64 %conv39, i64* %i, align 8, !dbg !2450, !tbaa !1435
  br label %for.cond, !dbg !2451

for.cond:                                         ; preds = %for.inc, %cond.end.37
  %38 = load i64, i64* %i, align 8, !dbg !2452, !tbaa !1435
  %39 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2455, !tbaa !1200
  %len40 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %39, i32 0, i32 2, !dbg !2456
  %40 = load i64, i64* %len40, align 8, !dbg !2456, !tbaa !1987
  %cmp41 = icmp slt i64 %38, %40, !dbg !2457
  br i1 %cmp41, label %for.body, label %for.end, !dbg !2458

for.body:                                         ; preds = %for.cond
  %41 = bitcast i32* %val to i8*, !dbg !2459
  call void @llvm.lifetime.start(i64 4, i8* %41) #1, !dbg !2459
  call void @llvm.dbg.declare(metadata i32* %val, metadata !480, metadata !1195), !dbg !2460
  %42 = load i32, i32* %width.addr, align 4, !dbg !2461, !tbaa !1244
  %cmp43 = icmp eq i32 %42, 1, !dbg !2462
  br i1 %cmp43, label %cond.true.45, label %cond.false.49, !dbg !2463

cond.true.45:                                     ; preds = %for.body
  %43 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2464, !tbaa !1200
  %buf46 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %43, i32 0, i32 0, !dbg !2466
  %44 = load i8*, i8** %buf46, align 8, !dbg !2466, !tbaa !2009
  %45 = load i64, i64* %i, align 8, !dbg !2467, !tbaa !1435
  %add.ptr47 = getelementptr i8, i8* %44, i64 %45, !dbg !2468
  %46 = load i8, i8* %add.ptr47, align 1, !dbg !2469, !tbaa !2013
  %conv48 = sext i8 %46 to i32, !dbg !2470
  br label %cond.end.83, !dbg !2463

cond.false.49:                                    ; preds = %for.body
  %47 = load i32, i32* %width.addr, align 4, !dbg !2471, !tbaa !1244
  %cmp50 = icmp eq i32 %47, 2, !dbg !2473
  br i1 %cmp50, label %cond.true.52, label %cond.false.56, !dbg !2474

cond.true.52:                                     ; preds = %cond.false.49
  %48 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2475, !tbaa !1200
  %buf53 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %48, i32 0, i32 0, !dbg !2477
  %49 = load i8*, i8** %buf53, align 8, !dbg !2477, !tbaa !2009
  %50 = load i64, i64* %i, align 8, !dbg !2478, !tbaa !1435
  %add.ptr54 = getelementptr i8, i8* %49, i64 %50, !dbg !2479
  %51 = bitcast i8* %add.ptr54 to i16*, !dbg !2480
  %52 = load i16, i16* %51, align 2, !dbg !2481, !tbaa !2026
  %conv55 = sext i16 %52 to i32, !dbg !2482
  br label %cond.end.81, !dbg !2474

cond.false.56:                                    ; preds = %cond.false.49
  %53 = load i32, i32* %width.addr, align 4, !dbg !2483, !tbaa !1244
  %cmp57 = icmp eq i32 %53, 3, !dbg !2485
  br i1 %cmp57, label %cond.true.59, label %cond.false.76, !dbg !2486

cond.true.59:                                     ; preds = %cond.false.56
  %54 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2487, !tbaa !1200
  %buf60 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %54, i32 0, i32 0, !dbg !2489
  %55 = load i8*, i8** %buf60, align 8, !dbg !2489, !tbaa !2009
  %56 = load i64, i64* %i, align 8, !dbg !2490, !tbaa !1435
  %add.ptr61 = getelementptr i8, i8* %55, i64 %56, !dbg !2491
  %arrayidx62 = getelementptr i8, i8* %add.ptr61, i64 0, !dbg !2492
  %57 = load i8, i8* %arrayidx62, align 1, !dbg !2492, !tbaa !2013
  %conv63 = zext i8 %57 to i32, !dbg !2492
  %58 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2493, !tbaa !1200
  %buf64 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %58, i32 0, i32 0, !dbg !2494
  %59 = load i8*, i8** %buf64, align 8, !dbg !2494, !tbaa !2009
  %60 = load i64, i64* %i, align 8, !dbg !2495, !tbaa !1435
  %add.ptr65 = getelementptr i8, i8* %59, i64 %60, !dbg !2496
  %arrayidx66 = getelementptr i8, i8* %add.ptr65, i64 1, !dbg !2497
  %61 = load i8, i8* %arrayidx66, align 1, !dbg !2497, !tbaa !2013
  %conv67 = zext i8 %61 to i32, !dbg !2497
  %shl68 = shl i32 %conv67, 8, !dbg !2498
  %add69 = add i32 %conv63, %shl68, !dbg !2499
  %62 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2500, !tbaa !1200
  %buf70 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %62, i32 0, i32 0, !dbg !2501
  %63 = load i8*, i8** %buf70, align 8, !dbg !2501, !tbaa !2009
  %64 = load i64, i64* %i, align 8, !dbg !2502, !tbaa !1435
  %add.ptr71 = getelementptr i8, i8* %63, i64 %64, !dbg !2503
  %arrayidx72 = getelementptr i8, i8* %add.ptr71, i64 2, !dbg !2504
  %65 = load i8, i8* %arrayidx72, align 1, !dbg !2504, !tbaa !2013
  %conv73 = sext i8 %65 to i32, !dbg !2504
  %shl74 = shl i32 %conv73, 16, !dbg !2505
  %add75 = add i32 %add69, %shl74, !dbg !2506
  br label %cond.end.79, !dbg !2486

cond.false.76:                                    ; preds = %cond.false.56
  %66 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2507, !tbaa !1200
  %buf77 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %66, i32 0, i32 0, !dbg !2509
  %67 = load i8*, i8** %buf77, align 8, !dbg !2509, !tbaa !2009
  %68 = load i64, i64* %i, align 8, !dbg !2510, !tbaa !1435
  %add.ptr78 = getelementptr i8, i8* %67, i64 %68, !dbg !2511
  %69 = bitcast i8* %add.ptr78 to i32*, !dbg !2512
  %70 = load i32, i32* %69, align 4, !dbg !2513, !tbaa !1244
  br label %cond.end.79, !dbg !2486

cond.end.79:                                      ; preds = %cond.false.76, %cond.true.59
  %cond80 = phi i32 [ %add75, %cond.true.59 ], [ %70, %cond.false.76 ], !dbg !2486
  br label %cond.end.81, !dbg !2514

cond.end.81:                                      ; preds = %cond.end.79, %cond.true.52
  %cond82 = phi i32 [ %conv55, %cond.true.52 ], [ %cond80, %cond.end.79 ], !dbg !2474
  br label %cond.end.83, !dbg !2517

cond.end.83:                                      ; preds = %cond.end.81, %cond.true.45
  %cond84 = phi i32 [ %conv48, %cond.true.45 ], [ %cond82, %cond.end.81 ], !dbg !2463
  store i32 %cond84, i32* %val, align 4, !dbg !2520, !tbaa !1244
  %71 = load i32, i32* %val, align 4, !dbg !2523, !tbaa !1244
  %72 = load i32, i32* %prevval, align 4, !dbg !2525, !tbaa !1244
  %cmp85 = icmp ne i32 %71, %72, !dbg !2526
  br i1 %cmp85, label %if.then.87, label %if.end.107, !dbg !2527

if.then.87:                                       ; preds = %cond.end.83
  %73 = load i32, i32* %val, align 4, !dbg !2528, !tbaa !1244
  %74 = load i32, i32* %prevval, align 4, !dbg !2530, !tbaa !1244
  %cmp88 = icmp slt i32 %73, %74, !dbg !2531
  %conv89 = zext i1 %cmp88 to i32, !dbg !2531
  store i32 %conv89, i32* %diff, align 4, !dbg !2532, !tbaa !1244
  %75 = load i32, i32* %prevdiff, align 4, !dbg !2533, !tbaa !1244
  %76 = load i32, i32* %diff, align 4, !dbg !2535, !tbaa !1244
  %tobool90 = icmp ne i32 %76, 0, !dbg !2536
  %lnot = xor i1 %tobool90, true, !dbg !2536
  %lnot.ext = zext i1 %lnot to i32, !dbg !2536
  %cmp91 = icmp eq i32 %75, %lnot.ext, !dbg !2537
  br i1 %cmp91, label %if.then.93, label %if.end.106, !dbg !2538

if.then.93:                                       ; preds = %if.then.87
  %77 = load i32, i32* %prevextremevalid, align 4, !dbg !2539, !tbaa !1244
  %tobool94 = icmp ne i32 %77, 0, !dbg !2539
  br i1 %tobool94, label %if.then.95, label %if.end.105, !dbg !2542

if.then.95:                                       ; preds = %if.then.93
  %78 = load i32, i32* %prevval, align 4, !dbg !2543, !tbaa !1244
  %79 = load i32, i32* %prevextreme, align 4, !dbg !2546, !tbaa !1244
  %cmp96 = icmp slt i32 %78, %79, !dbg !2547
  br i1 %cmp96, label %if.then.98, label %if.else, !dbg !2548

if.then.98:                                       ; preds = %if.then.95
  %80 = load i32, i32* %prevextreme, align 4, !dbg !2549, !tbaa !1244
  %81 = load i32, i32* %prevval, align 4, !dbg !2550, !tbaa !1244
  %sub = sub i32 %80, %81, !dbg !2551
  store i32 %sub, i32* %extremediff, align 4, !dbg !2552, !tbaa !1244
  br label %if.end.100, !dbg !2553

if.else:                                          ; preds = %if.then.95
  %82 = load i32, i32* %prevval, align 4, !dbg !2554, !tbaa !1244
  %83 = load i32, i32* %prevextreme, align 4, !dbg !2555, !tbaa !1244
  %sub99 = sub i32 %82, %83, !dbg !2556
  store i32 %sub99, i32* %extremediff, align 4, !dbg !2557, !tbaa !1244
  br label %if.end.100

if.end.100:                                       ; preds = %if.else, %if.then.98
  %84 = load i32, i32* %extremediff, align 4, !dbg !2558, !tbaa !1244
  %85 = load i32, i32* %max, align 4, !dbg !2560, !tbaa !1244
  %cmp101 = icmp ugt i32 %84, %85, !dbg !2561
  br i1 %cmp101, label %if.then.103, label %if.end.104, !dbg !2562

if.then.103:                                      ; preds = %if.end.100
  %86 = load i32, i32* %extremediff, align 4, !dbg !2563, !tbaa !1244
  store i32 %86, i32* %max, align 4, !dbg !2564, !tbaa !1244
  br label %if.end.104, !dbg !2565

if.end.104:                                       ; preds = %if.then.103, %if.end.100
  br label %if.end.105, !dbg !2566

if.end.105:                                       ; preds = %if.end.104, %if.then.93
  store i32 1, i32* %prevextremevalid, align 4, !dbg !2567, !tbaa !1244
  %87 = load i32, i32* %prevval, align 4, !dbg !2568, !tbaa !1244
  store i32 %87, i32* %prevextreme, align 4, !dbg !2569, !tbaa !1244
  br label %if.end.106, !dbg !2570

if.end.106:                                       ; preds = %if.end.105, %if.then.87
  %88 = load i32, i32* %val, align 4, !dbg !2571, !tbaa !1244
  store i32 %88, i32* %prevval, align 4, !dbg !2572, !tbaa !1244
  %89 = load i32, i32* %diff, align 4, !dbg !2573, !tbaa !1244
  store i32 %89, i32* %prevdiff, align 4, !dbg !2574, !tbaa !1244
  br label %if.end.107, !dbg !2575

if.end.107:                                       ; preds = %if.end.106, %cond.end.83
  %90 = bitcast i32* %val to i8*, !dbg !2576
  call void @llvm.lifetime.end(i64 4, i8* %90) #1, !dbg !2576
  br label %for.inc, !dbg !2577

for.inc:                                          ; preds = %if.end.107
  %91 = load i32, i32* %width.addr, align 4, !dbg !2578, !tbaa !1244
  %conv108 = sext i32 %91 to i64, !dbg !2578
  %92 = load i64, i64* %i, align 8, !dbg !2579, !tbaa !1435
  %add109 = add i64 %92, %conv108, !dbg !2579
  store i64 %add109, i64* %i, align 8, !dbg !2579, !tbaa !1435
  br label %for.cond, !dbg !2580

for.end:                                          ; preds = %for.cond
  %93 = load i32, i32* %max, align 4, !dbg !2581, !tbaa !1244
  %conv110 = zext i32 %93 to i64, !dbg !2581
  %call111 = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv110), !dbg !2582
  store %struct._object* %call111, %struct._object** %retval, !dbg !2583
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2583

cleanup:                                          ; preds = %for.end, %if.then.3, %if.then
  %94 = bitcast i32* %prevdiff to i8*, !dbg !2584
  call void @llvm.lifetime.end(i64 4, i8* %94) #1, !dbg !2584
  %95 = bitcast i32* %diff to i8*, !dbg !2584
  call void @llvm.lifetime.end(i64 4, i8* %95) #1, !dbg !2584
  %96 = bitcast i32* %extremediff to i8*, !dbg !2584
  call void @llvm.lifetime.end(i64 4, i8* %96) #1, !dbg !2584
  %97 = bitcast i32* %max to i8*, !dbg !2584
  call void @llvm.lifetime.end(i64 4, i8* %97) #1, !dbg !2584
  %98 = bitcast i32* %prevextreme to i8*, !dbg !2584
  call void @llvm.lifetime.end(i64 4, i8* %98) #1, !dbg !2584
  %99 = bitcast i32* %prevextremevalid to i8*, !dbg !2584
  call void @llvm.lifetime.end(i64 4, i8* %99) #1, !dbg !2584
  %100 = bitcast i32* %prevval to i8*, !dbg !2584
  call void @llvm.lifetime.end(i64 4, i8* %100) #1, !dbg !2584
  %101 = bitcast i64* %i to i8*, !dbg !2584
  call void @llvm.lifetime.end(i64 8, i8* %101) #1, !dbg !2584
  %102 = load %struct._object*, %struct._object** %retval, !dbg !2584
  ret %struct._object* %102, !dbg !2584
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_avgpp_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i64, align 8
  %prevval = alloca i32, align 4
  %prevextremevalid = alloca i32, align 4
  %prevextreme = alloca i32, align 4
  %sum = alloca double, align 8
  %avg = alloca i32, align 4
  %diff = alloca i32, align 4
  %prevdiff = alloca i32, align 4
  %nextreme = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %val = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !493, metadata !1195), !dbg !2585
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !494, metadata !1195), !dbg !2586
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !495, metadata !1195), !dbg !2587
  %0 = bitcast i64* %i to i8*, !dbg !2588
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2588
  call void @llvm.dbg.declare(metadata i64* %i, metadata !496, metadata !1195), !dbg !2589
  %1 = bitcast i32* %prevval to i8*, !dbg !2590
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !2590
  call void @llvm.dbg.declare(metadata i32* %prevval, metadata !497, metadata !1195), !dbg !2591
  %2 = bitcast i32* %prevextremevalid to i8*, !dbg !2590
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !2590
  call void @llvm.dbg.declare(metadata i32* %prevextremevalid, metadata !498, metadata !1195), !dbg !2592
  store i32 0, i32* %prevextremevalid, align 4, !dbg !2592, !tbaa !1244
  %3 = bitcast i32* %prevextreme to i8*, !dbg !2590
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !2590
  call void @llvm.dbg.declare(metadata i32* %prevextreme, metadata !499, metadata !1195), !dbg !2593
  store i32 0, i32* %prevextreme, align 4, !dbg !2593, !tbaa !1244
  %4 = bitcast double* %sum to i8*, !dbg !2594
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !2594
  call void @llvm.dbg.declare(metadata double* %sum, metadata !500, metadata !1195), !dbg !2595
  store double 0.000000e+00, double* %sum, align 8, !dbg !2595, !tbaa !1521
  %5 = bitcast i32* %avg to i8*, !dbg !2596
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !2596
  call void @llvm.dbg.declare(metadata i32* %avg, metadata !501, metadata !1195), !dbg !2597
  %6 = bitcast i32* %diff to i8*, !dbg !2598
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !2598
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !502, metadata !1195), !dbg !2599
  %7 = bitcast i32* %prevdiff to i8*, !dbg !2598
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !2598
  call void @llvm.dbg.declare(metadata i32* %prevdiff, metadata !503, metadata !1195), !dbg !2600
  %8 = bitcast i32* %nextreme to i8*, !dbg !2598
  call void @llvm.lifetime.start(i64 4, i8* %8) #1, !dbg !2598
  call void @llvm.dbg.declare(metadata i32* %nextreme, metadata !504, metadata !1195), !dbg !2601
  store i32 0, i32* %nextreme, align 4, !dbg !2601, !tbaa !1244
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2602, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 2, !dbg !2604
  %10 = load i64, i64* %len, align 8, !dbg !2604, !tbaa !1987
  %11 = load i32, i32* %width.addr, align 4, !dbg !2605, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %10, i32 %11), !dbg !2606
  %tobool = icmp ne i32 %call, 0, !dbg !2606
  br i1 %tobool, label %if.end, label %if.then, !dbg !2607

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2608
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2608

if.end:                                           ; preds = %entry
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2609, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 2, !dbg !2611
  %13 = load i64, i64* %len1, align 8, !dbg !2611, !tbaa !1987
  %14 = load i32, i32* %width.addr, align 4, !dbg !2612, !tbaa !1244
  %conv = sext i32 %14 to i64, !dbg !2612
  %cmp = icmp sle i64 %13, %conv, !dbg !2613
  br i1 %cmp, label %if.then.3, label %if.end.5, !dbg !2614

if.then.3:                                        ; preds = %if.end
  %call4 = call %struct._object* @PyLong_FromLong(i64 0), !dbg !2615
  store %struct._object* %call4, %struct._object** %retval, !dbg !2616
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2616

if.end.5:                                         ; preds = %if.end
  %15 = load i32, i32* %width.addr, align 4, !dbg !2617, !tbaa !1244
  %cmp6 = icmp eq i32 %15, 1, !dbg !2618
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !2619

cond.true:                                        ; preds = %if.end.5
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2620, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 0, !dbg !2622
  %17 = load i8*, i8** %buf, align 8, !dbg !2622, !tbaa !2009
  %add.ptr = getelementptr i8, i8* %17, i64 0, !dbg !2623
  %18 = load i8, i8* %add.ptr, align 1, !dbg !2624, !tbaa !2013
  %conv8 = sext i8 %18 to i32, !dbg !2625
  br label %cond.end.37, !dbg !2619

cond.false:                                       ; preds = %if.end.5
  %19 = load i32, i32* %width.addr, align 4, !dbg !2626, !tbaa !1244
  %cmp9 = icmp eq i32 %19, 2, !dbg !2628
  br i1 %cmp9, label %cond.true.11, label %cond.false.15, !dbg !2629

cond.true.11:                                     ; preds = %cond.false
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2630, !tbaa !1200
  %buf12 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %20, i32 0, i32 0, !dbg !2632
  %21 = load i8*, i8** %buf12, align 8, !dbg !2632, !tbaa !2009
  %add.ptr13 = getelementptr i8, i8* %21, i64 0, !dbg !2633
  %22 = bitcast i8* %add.ptr13 to i16*, !dbg !2634
  %23 = load i16, i16* %22, align 2, !dbg !2635, !tbaa !2026
  %conv14 = sext i16 %23 to i32, !dbg !2636
  br label %cond.end.35, !dbg !2629

cond.false.15:                                    ; preds = %cond.false
  %24 = load i32, i32* %width.addr, align 4, !dbg !2637, !tbaa !1244
  %cmp16 = icmp eq i32 %24, 3, !dbg !2639
  br i1 %cmp16, label %cond.true.18, label %cond.false.32, !dbg !2640

cond.true.18:                                     ; preds = %cond.false.15
  %25 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2641, !tbaa !1200
  %buf19 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %25, i32 0, i32 0, !dbg !2643
  %26 = load i8*, i8** %buf19, align 8, !dbg !2643, !tbaa !2009
  %add.ptr20 = getelementptr i8, i8* %26, i64 0, !dbg !2644
  %arrayidx = getelementptr i8, i8* %add.ptr20, i64 0, !dbg !2645
  %27 = load i8, i8* %arrayidx, align 1, !dbg !2645, !tbaa !2013
  %conv21 = zext i8 %27 to i32, !dbg !2645
  %28 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2646, !tbaa !1200
  %buf22 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %28, i32 0, i32 0, !dbg !2647
  %29 = load i8*, i8** %buf22, align 8, !dbg !2647, !tbaa !2009
  %add.ptr23 = getelementptr i8, i8* %29, i64 0, !dbg !2648
  %arrayidx24 = getelementptr i8, i8* %add.ptr23, i64 1, !dbg !2649
  %30 = load i8, i8* %arrayidx24, align 1, !dbg !2649, !tbaa !2013
  %conv25 = zext i8 %30 to i32, !dbg !2649
  %shl = shl i32 %conv25, 8, !dbg !2650
  %add = add i32 %conv21, %shl, !dbg !2651
  %31 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2652, !tbaa !1200
  %buf26 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %31, i32 0, i32 0, !dbg !2653
  %32 = load i8*, i8** %buf26, align 8, !dbg !2653, !tbaa !2009
  %add.ptr27 = getelementptr i8, i8* %32, i64 0, !dbg !2654
  %arrayidx28 = getelementptr i8, i8* %add.ptr27, i64 2, !dbg !2655
  %33 = load i8, i8* %arrayidx28, align 1, !dbg !2655, !tbaa !2013
  %conv29 = sext i8 %33 to i32, !dbg !2655
  %shl30 = shl i32 %conv29, 16, !dbg !2656
  %add31 = add i32 %add, %shl30, !dbg !2657
  br label %cond.end, !dbg !2640

cond.false.32:                                    ; preds = %cond.false.15
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2658, !tbaa !1200
  %buf33 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %34, i32 0, i32 0, !dbg !2660
  %35 = load i8*, i8** %buf33, align 8, !dbg !2660, !tbaa !2009
  %add.ptr34 = getelementptr i8, i8* %35, i64 0, !dbg !2661
  %36 = bitcast i8* %add.ptr34 to i32*, !dbg !2662
  %37 = load i32, i32* %36, align 4, !dbg !2663, !tbaa !1244
  br label %cond.end, !dbg !2640

cond.end:                                         ; preds = %cond.false.32, %cond.true.18
  %cond = phi i32 [ %add31, %cond.true.18 ], [ %37, %cond.false.32 ], !dbg !2640
  br label %cond.end.35, !dbg !2664

cond.end.35:                                      ; preds = %cond.end, %cond.true.11
  %cond36 = phi i32 [ %conv14, %cond.true.11 ], [ %cond, %cond.end ], !dbg !2629
  br label %cond.end.37, !dbg !2667

cond.end.37:                                      ; preds = %cond.end.35, %cond.true
  %cond38 = phi i32 [ %conv8, %cond.true ], [ %cond36, %cond.end.35 ], !dbg !2619
  store i32 %cond38, i32* %prevval, align 4, !dbg !2670, !tbaa !1244
  store i32 17, i32* %prevdiff, align 4, !dbg !2673, !tbaa !1244
  %38 = load i32, i32* %width.addr, align 4, !dbg !2674, !tbaa !1244
  %conv39 = sext i32 %38 to i64, !dbg !2674
  store i64 %conv39, i64* %i, align 8, !dbg !2675, !tbaa !1435
  br label %for.cond, !dbg !2676

for.cond:                                         ; preds = %for.inc, %cond.end.37
  %39 = load i64, i64* %i, align 8, !dbg !2677, !tbaa !1435
  %40 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2680, !tbaa !1200
  %len40 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %40, i32 0, i32 2, !dbg !2681
  %41 = load i64, i64* %len40, align 8, !dbg !2681, !tbaa !1987
  %cmp41 = icmp slt i64 %39, %41, !dbg !2682
  br i1 %cmp41, label %for.body, label %for.end, !dbg !2683

for.body:                                         ; preds = %for.cond
  %42 = bitcast i32* %val to i8*, !dbg !2684
  call void @llvm.lifetime.start(i64 4, i8* %42) #1, !dbg !2684
  call void @llvm.dbg.declare(metadata i32* %val, metadata !505, metadata !1195), !dbg !2685
  %43 = load i32, i32* %width.addr, align 4, !dbg !2686, !tbaa !1244
  %cmp43 = icmp eq i32 %43, 1, !dbg !2687
  br i1 %cmp43, label %cond.true.45, label %cond.false.49, !dbg !2688

cond.true.45:                                     ; preds = %for.body
  %44 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2689, !tbaa !1200
  %buf46 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %44, i32 0, i32 0, !dbg !2691
  %45 = load i8*, i8** %buf46, align 8, !dbg !2691, !tbaa !2009
  %46 = load i64, i64* %i, align 8, !dbg !2692, !tbaa !1435
  %add.ptr47 = getelementptr i8, i8* %45, i64 %46, !dbg !2693
  %47 = load i8, i8* %add.ptr47, align 1, !dbg !2694, !tbaa !2013
  %conv48 = sext i8 %47 to i32, !dbg !2695
  br label %cond.end.83, !dbg !2688

cond.false.49:                                    ; preds = %for.body
  %48 = load i32, i32* %width.addr, align 4, !dbg !2696, !tbaa !1244
  %cmp50 = icmp eq i32 %48, 2, !dbg !2698
  br i1 %cmp50, label %cond.true.52, label %cond.false.56, !dbg !2699

cond.true.52:                                     ; preds = %cond.false.49
  %49 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2700, !tbaa !1200
  %buf53 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %49, i32 0, i32 0, !dbg !2702
  %50 = load i8*, i8** %buf53, align 8, !dbg !2702, !tbaa !2009
  %51 = load i64, i64* %i, align 8, !dbg !2703, !tbaa !1435
  %add.ptr54 = getelementptr i8, i8* %50, i64 %51, !dbg !2704
  %52 = bitcast i8* %add.ptr54 to i16*, !dbg !2705
  %53 = load i16, i16* %52, align 2, !dbg !2706, !tbaa !2026
  %conv55 = sext i16 %53 to i32, !dbg !2707
  br label %cond.end.81, !dbg !2699

cond.false.56:                                    ; preds = %cond.false.49
  %54 = load i32, i32* %width.addr, align 4, !dbg !2708, !tbaa !1244
  %cmp57 = icmp eq i32 %54, 3, !dbg !2710
  br i1 %cmp57, label %cond.true.59, label %cond.false.76, !dbg !2711

cond.true.59:                                     ; preds = %cond.false.56
  %55 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2712, !tbaa !1200
  %buf60 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %55, i32 0, i32 0, !dbg !2714
  %56 = load i8*, i8** %buf60, align 8, !dbg !2714, !tbaa !2009
  %57 = load i64, i64* %i, align 8, !dbg !2715, !tbaa !1435
  %add.ptr61 = getelementptr i8, i8* %56, i64 %57, !dbg !2716
  %arrayidx62 = getelementptr i8, i8* %add.ptr61, i64 0, !dbg !2717
  %58 = load i8, i8* %arrayidx62, align 1, !dbg !2717, !tbaa !2013
  %conv63 = zext i8 %58 to i32, !dbg !2717
  %59 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2718, !tbaa !1200
  %buf64 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %59, i32 0, i32 0, !dbg !2719
  %60 = load i8*, i8** %buf64, align 8, !dbg !2719, !tbaa !2009
  %61 = load i64, i64* %i, align 8, !dbg !2720, !tbaa !1435
  %add.ptr65 = getelementptr i8, i8* %60, i64 %61, !dbg !2721
  %arrayidx66 = getelementptr i8, i8* %add.ptr65, i64 1, !dbg !2722
  %62 = load i8, i8* %arrayidx66, align 1, !dbg !2722, !tbaa !2013
  %conv67 = zext i8 %62 to i32, !dbg !2722
  %shl68 = shl i32 %conv67, 8, !dbg !2723
  %add69 = add i32 %conv63, %shl68, !dbg !2724
  %63 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2725, !tbaa !1200
  %buf70 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %63, i32 0, i32 0, !dbg !2726
  %64 = load i8*, i8** %buf70, align 8, !dbg !2726, !tbaa !2009
  %65 = load i64, i64* %i, align 8, !dbg !2727, !tbaa !1435
  %add.ptr71 = getelementptr i8, i8* %64, i64 %65, !dbg !2728
  %arrayidx72 = getelementptr i8, i8* %add.ptr71, i64 2, !dbg !2729
  %66 = load i8, i8* %arrayidx72, align 1, !dbg !2729, !tbaa !2013
  %conv73 = sext i8 %66 to i32, !dbg !2729
  %shl74 = shl i32 %conv73, 16, !dbg !2730
  %add75 = add i32 %add69, %shl74, !dbg !2731
  br label %cond.end.79, !dbg !2711

cond.false.76:                                    ; preds = %cond.false.56
  %67 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2732, !tbaa !1200
  %buf77 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %67, i32 0, i32 0, !dbg !2734
  %68 = load i8*, i8** %buf77, align 8, !dbg !2734, !tbaa !2009
  %69 = load i64, i64* %i, align 8, !dbg !2735, !tbaa !1435
  %add.ptr78 = getelementptr i8, i8* %68, i64 %69, !dbg !2736
  %70 = bitcast i8* %add.ptr78 to i32*, !dbg !2737
  %71 = load i32, i32* %70, align 4, !dbg !2738, !tbaa !1244
  br label %cond.end.79, !dbg !2711

cond.end.79:                                      ; preds = %cond.false.76, %cond.true.59
  %cond80 = phi i32 [ %add75, %cond.true.59 ], [ %71, %cond.false.76 ], !dbg !2711
  br label %cond.end.81, !dbg !2739

cond.end.81:                                      ; preds = %cond.end.79, %cond.true.52
  %cond82 = phi i32 [ %conv55, %cond.true.52 ], [ %cond80, %cond.end.79 ], !dbg !2699
  br label %cond.end.83, !dbg !2742

cond.end.83:                                      ; preds = %cond.end.81, %cond.true.45
  %cond84 = phi i32 [ %conv48, %cond.true.45 ], [ %cond82, %cond.end.81 ], !dbg !2688
  store i32 %cond84, i32* %val, align 4, !dbg !2745, !tbaa !1244
  %72 = load i32, i32* %val, align 4, !dbg !2748, !tbaa !1244
  %73 = load i32, i32* %prevval, align 4, !dbg !2750, !tbaa !1244
  %cmp85 = icmp ne i32 %72, %73, !dbg !2751
  br i1 %cmp85, label %if.then.87, label %if.end.107, !dbg !2752

if.then.87:                                       ; preds = %cond.end.83
  %74 = load i32, i32* %val, align 4, !dbg !2753, !tbaa !1244
  %75 = load i32, i32* %prevval, align 4, !dbg !2755, !tbaa !1244
  %cmp88 = icmp slt i32 %74, %75, !dbg !2756
  %conv89 = zext i1 %cmp88 to i32, !dbg !2756
  store i32 %conv89, i32* %diff, align 4, !dbg !2757, !tbaa !1244
  %76 = load i32, i32* %prevdiff, align 4, !dbg !2758, !tbaa !1244
  %77 = load i32, i32* %diff, align 4, !dbg !2760, !tbaa !1244
  %tobool90 = icmp ne i32 %77, 0, !dbg !2761
  %lnot = xor i1 %tobool90, true, !dbg !2761
  %lnot.ext = zext i1 %lnot to i32, !dbg !2761
  %cmp91 = icmp eq i32 %76, %lnot.ext, !dbg !2762
  br i1 %cmp91, label %if.then.93, label %if.end.106, !dbg !2763

if.then.93:                                       ; preds = %if.then.87
  %78 = load i32, i32* %prevextremevalid, align 4, !dbg !2764, !tbaa !1244
  %tobool94 = icmp ne i32 %78, 0, !dbg !2764
  br i1 %tobool94, label %if.then.95, label %if.end.105, !dbg !2767

if.then.95:                                       ; preds = %if.then.93
  %79 = load i32, i32* %prevval, align 4, !dbg !2768, !tbaa !1244
  %80 = load i32, i32* %prevextreme, align 4, !dbg !2771, !tbaa !1244
  %cmp96 = icmp slt i32 %79, %80, !dbg !2772
  br i1 %cmp96, label %if.then.98, label %if.else, !dbg !2773

if.then.98:                                       ; preds = %if.then.95
  %81 = load i32, i32* %prevextreme, align 4, !dbg !2774, !tbaa !1244
  %82 = load i32, i32* %prevval, align 4, !dbg !2775, !tbaa !1244
  %sub = sub i32 %81, %82, !dbg !2776
  %conv99 = uitofp i32 %sub to double, !dbg !2777
  %83 = load double, double* %sum, align 8, !dbg !2778, !tbaa !1521
  %add100 = fadd double %83, %conv99, !dbg !2778
  store double %add100, double* %sum, align 8, !dbg !2778, !tbaa !1521
  br label %if.end.104, !dbg !2779

if.else:                                          ; preds = %if.then.95
  %84 = load i32, i32* %prevval, align 4, !dbg !2780, !tbaa !1244
  %85 = load i32, i32* %prevextreme, align 4, !dbg !2781, !tbaa !1244
  %sub101 = sub i32 %84, %85, !dbg !2782
  %conv102 = uitofp i32 %sub101 to double, !dbg !2783
  %86 = load double, double* %sum, align 8, !dbg !2784, !tbaa !1521
  %add103 = fadd double %86, %conv102, !dbg !2784
  store double %add103, double* %sum, align 8, !dbg !2784, !tbaa !1521
  br label %if.end.104

if.end.104:                                       ; preds = %if.else, %if.then.98
  %87 = load i32, i32* %nextreme, align 4, !dbg !2785, !tbaa !1244
  %inc = add i32 %87, 1, !dbg !2785
  store i32 %inc, i32* %nextreme, align 4, !dbg !2785, !tbaa !1244
  br label %if.end.105, !dbg !2786

if.end.105:                                       ; preds = %if.end.104, %if.then.93
  store i32 1, i32* %prevextremevalid, align 4, !dbg !2787, !tbaa !1244
  %88 = load i32, i32* %prevval, align 4, !dbg !2788, !tbaa !1244
  store i32 %88, i32* %prevextreme, align 4, !dbg !2789, !tbaa !1244
  br label %if.end.106, !dbg !2790

if.end.106:                                       ; preds = %if.end.105, %if.then.87
  %89 = load i32, i32* %val, align 4, !dbg !2791, !tbaa !1244
  store i32 %89, i32* %prevval, align 4, !dbg !2792, !tbaa !1244
  %90 = load i32, i32* %diff, align 4, !dbg !2793, !tbaa !1244
  store i32 %90, i32* %prevdiff, align 4, !dbg !2794, !tbaa !1244
  br label %if.end.107, !dbg !2795

if.end.107:                                       ; preds = %if.end.106, %cond.end.83
  %91 = bitcast i32* %val to i8*, !dbg !2796
  call void @llvm.lifetime.end(i64 4, i8* %91) #1, !dbg !2796
  br label %for.inc, !dbg !2797

for.inc:                                          ; preds = %if.end.107
  %92 = load i32, i32* %width.addr, align 4, !dbg !2798, !tbaa !1244
  %conv108 = sext i32 %92 to i64, !dbg !2798
  %93 = load i64, i64* %i, align 8, !dbg !2799, !tbaa !1435
  %add109 = add i64 %93, %conv108, !dbg !2799
  store i64 %add109, i64* %i, align 8, !dbg !2799, !tbaa !1435
  br label %for.cond, !dbg !2800

for.end:                                          ; preds = %for.cond
  %94 = load i32, i32* %nextreme, align 4, !dbg !2801, !tbaa !1244
  %cmp110 = icmp eq i32 %94, 0, !dbg !2803
  br i1 %cmp110, label %if.then.112, label %if.else.113, !dbg !2804

if.then.112:                                      ; preds = %for.end
  store i32 0, i32* %avg, align 4, !dbg !2805, !tbaa !1244
  br label %if.end.116, !dbg !2806

if.else.113:                                      ; preds = %for.end
  %95 = load double, double* %sum, align 8, !dbg !2807, !tbaa !1521
  %96 = load i32, i32* %nextreme, align 4, !dbg !2808, !tbaa !1244
  %conv114 = sitofp i32 %96 to double, !dbg !2809
  %div = fdiv double %95, %conv114, !dbg !2810
  %conv115 = fptoui double %div to i32, !dbg !2811
  store i32 %conv115, i32* %avg, align 4, !dbg !2812, !tbaa !1244
  br label %if.end.116

if.end.116:                                       ; preds = %if.else.113, %if.then.112
  %97 = load i32, i32* %avg, align 4, !dbg !2813, !tbaa !1244
  %conv117 = zext i32 %97 to i64, !dbg !2813
  %call118 = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv117), !dbg !2814
  store %struct._object* %call118, %struct._object** %retval, !dbg !2815
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2815

cleanup:                                          ; preds = %if.end.116, %if.then.3, %if.then
  %98 = bitcast i32* %nextreme to i8*, !dbg !2816
  call void @llvm.lifetime.end(i64 4, i8* %98) #1, !dbg !2816
  %99 = bitcast i32* %prevdiff to i8*, !dbg !2816
  call void @llvm.lifetime.end(i64 4, i8* %99) #1, !dbg !2816
  %100 = bitcast i32* %diff to i8*, !dbg !2816
  call void @llvm.lifetime.end(i64 4, i8* %100) #1, !dbg !2816
  %101 = bitcast i32* %avg to i8*, !dbg !2816
  call void @llvm.lifetime.end(i64 4, i8* %101) #1, !dbg !2816
  %102 = bitcast double* %sum to i8*, !dbg !2816
  call void @llvm.lifetime.end(i64 8, i8* %102) #1, !dbg !2816
  %103 = bitcast i32* %prevextreme to i8*, !dbg !2816
  call void @llvm.lifetime.end(i64 4, i8* %103) #1, !dbg !2816
  %104 = bitcast i32* %prevextremevalid to i8*, !dbg !2816
  call void @llvm.lifetime.end(i64 4, i8* %104) #1, !dbg !2816
  %105 = bitcast i32* %prevval to i8*, !dbg !2816
  call void @llvm.lifetime.end(i64 4, i8* %105) #1, !dbg !2816
  %106 = bitcast i64* %i to i8*, !dbg !2816
  call void @llvm.lifetime.end(i64 8, i8* %106) #1, !dbg !2816
  %107 = load %struct._object*, %struct._object** %retval, !dbg !2816
  ret %struct._object* %107, !dbg !2816
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_rms_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i64, align 8
  %res = alloca i32, align 4
  %sum_squares = alloca double, align 8
  %cleanup.dest.slot = alloca i32
  %val = alloca double, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !518, metadata !1195), !dbg !2817
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !519, metadata !1195), !dbg !2818
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !520, metadata !1195), !dbg !2819
  %0 = bitcast i64* %i to i8*, !dbg !2820
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2820
  call void @llvm.dbg.declare(metadata i64* %i, metadata !521, metadata !1195), !dbg !2821
  %1 = bitcast i32* %res to i8*, !dbg !2822
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !2822
  call void @llvm.dbg.declare(metadata i32* %res, metadata !522, metadata !1195), !dbg !2823
  %2 = bitcast double* %sum_squares to i8*, !dbg !2824
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2824
  call void @llvm.dbg.declare(metadata double* %sum_squares, metadata !523, metadata !1195), !dbg !2825
  store double 0.000000e+00, double* %sum_squares, align 8, !dbg !2825, !tbaa !1521
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2826, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 2, !dbg !2828
  %4 = load i64, i64* %len, align 8, !dbg !2828, !tbaa !1987
  %5 = load i32, i32* %width.addr, align 4, !dbg !2829, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %4, i32 %5), !dbg !2830
  %tobool = icmp ne i32 %call, 0, !dbg !2830
  br i1 %tobool, label %if.end, label %if.then, !dbg !2831

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2832
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2832

if.end:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !2833, !tbaa !1435
  br label %for.cond, !dbg !2834

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i64, i64* %i, align 8, !dbg !2835, !tbaa !1435
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2838, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 2, !dbg !2839
  %8 = load i64, i64* %len1, align 8, !dbg !2839, !tbaa !1987
  %cmp = icmp slt i64 %6, %8, !dbg !2840
  br i1 %cmp, label %for.body, label %for.end, !dbg !2841

for.body:                                         ; preds = %for.cond
  %9 = bitcast double* %val to i8*, !dbg !2842
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !2842
  call void @llvm.dbg.declare(metadata double* %val, metadata !524, metadata !1195), !dbg !2843
  %10 = load i32, i32* %width.addr, align 4, !dbg !2844, !tbaa !1244
  %cmp2 = icmp eq i32 %10, 1, !dbg !2845
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !2846

cond.true:                                        ; preds = %for.body
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2847, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 0, !dbg !2849
  %12 = load i8*, i8** %buf, align 8, !dbg !2849, !tbaa !2009
  %13 = load i64, i64* %i, align 8, !dbg !2850, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %12, i64 %13, !dbg !2851
  %14 = load i8, i8* %add.ptr, align 1, !dbg !2852, !tbaa !2013
  %conv = sext i8 %14 to i32, !dbg !2853
  br label %cond.end.31, !dbg !2846

cond.false:                                       ; preds = %for.body
  %15 = load i32, i32* %width.addr, align 4, !dbg !2854, !tbaa !1244
  %cmp3 = icmp eq i32 %15, 2, !dbg !2856
  br i1 %cmp3, label %cond.true.5, label %cond.false.9, !dbg !2857

cond.true.5:                                      ; preds = %cond.false
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2858, !tbaa !1200
  %buf6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 0, !dbg !2860
  %17 = load i8*, i8** %buf6, align 8, !dbg !2860, !tbaa !2009
  %18 = load i64, i64* %i, align 8, !dbg !2861, !tbaa !1435
  %add.ptr7 = getelementptr i8, i8* %17, i64 %18, !dbg !2862
  %19 = bitcast i8* %add.ptr7 to i16*, !dbg !2863
  %20 = load i16, i16* %19, align 2, !dbg !2864, !tbaa !2026
  %conv8 = sext i16 %20 to i32, !dbg !2865
  br label %cond.end.29, !dbg !2857

cond.false.9:                                     ; preds = %cond.false
  %21 = load i32, i32* %width.addr, align 4, !dbg !2866, !tbaa !1244
  %cmp10 = icmp eq i32 %21, 3, !dbg !2868
  br i1 %cmp10, label %cond.true.12, label %cond.false.26, !dbg !2869

cond.true.12:                                     ; preds = %cond.false.9
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2870, !tbaa !1200
  %buf13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 0, !dbg !2872
  %23 = load i8*, i8** %buf13, align 8, !dbg !2872, !tbaa !2009
  %24 = load i64, i64* %i, align 8, !dbg !2873, !tbaa !1435
  %add.ptr14 = getelementptr i8, i8* %23, i64 %24, !dbg !2874
  %arrayidx = getelementptr i8, i8* %add.ptr14, i64 0, !dbg !2875
  %25 = load i8, i8* %arrayidx, align 1, !dbg !2875, !tbaa !2013
  %conv15 = zext i8 %25 to i32, !dbg !2875
  %26 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2876, !tbaa !1200
  %buf16 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %26, i32 0, i32 0, !dbg !2877
  %27 = load i8*, i8** %buf16, align 8, !dbg !2877, !tbaa !2009
  %28 = load i64, i64* %i, align 8, !dbg !2878, !tbaa !1435
  %add.ptr17 = getelementptr i8, i8* %27, i64 %28, !dbg !2879
  %arrayidx18 = getelementptr i8, i8* %add.ptr17, i64 1, !dbg !2880
  %29 = load i8, i8* %arrayidx18, align 1, !dbg !2880, !tbaa !2013
  %conv19 = zext i8 %29 to i32, !dbg !2880
  %shl = shl i32 %conv19, 8, !dbg !2881
  %add = add i32 %conv15, %shl, !dbg !2882
  %30 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2883, !tbaa !1200
  %buf20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %30, i32 0, i32 0, !dbg !2884
  %31 = load i8*, i8** %buf20, align 8, !dbg !2884, !tbaa !2009
  %32 = load i64, i64* %i, align 8, !dbg !2885, !tbaa !1435
  %add.ptr21 = getelementptr i8, i8* %31, i64 %32, !dbg !2886
  %arrayidx22 = getelementptr i8, i8* %add.ptr21, i64 2, !dbg !2887
  %33 = load i8, i8* %arrayidx22, align 1, !dbg !2887, !tbaa !2013
  %conv23 = sext i8 %33 to i32, !dbg !2887
  %shl24 = shl i32 %conv23, 16, !dbg !2888
  %add25 = add i32 %add, %shl24, !dbg !2889
  br label %cond.end, !dbg !2869

cond.false.26:                                    ; preds = %cond.false.9
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2890, !tbaa !1200
  %buf27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %34, i32 0, i32 0, !dbg !2892
  %35 = load i8*, i8** %buf27, align 8, !dbg !2892, !tbaa !2009
  %36 = load i64, i64* %i, align 8, !dbg !2893, !tbaa !1435
  %add.ptr28 = getelementptr i8, i8* %35, i64 %36, !dbg !2894
  %37 = bitcast i8* %add.ptr28 to i32*, !dbg !2895
  %38 = load i32, i32* %37, align 4, !dbg !2896, !tbaa !1244
  br label %cond.end, !dbg !2869

cond.end:                                         ; preds = %cond.false.26, %cond.true.12
  %cond = phi i32 [ %add25, %cond.true.12 ], [ %38, %cond.false.26 ], !dbg !2869
  br label %cond.end.29, !dbg !2897

cond.end.29:                                      ; preds = %cond.end, %cond.true.5
  %cond30 = phi i32 [ %conv8, %cond.true.5 ], [ %cond, %cond.end ], !dbg !2857
  br label %cond.end.31, !dbg !2900

cond.end.31:                                      ; preds = %cond.end.29, %cond.true
  %cond32 = phi i32 [ %conv, %cond.true ], [ %cond30, %cond.end.29 ], !dbg !2846
  %conv33 = sitofp i32 %cond32 to double, !dbg !2903
  store double %conv33, double* %val, align 8, !dbg !2843, !tbaa !1521
  %39 = load double, double* %val, align 8, !dbg !2906, !tbaa !1521
  %40 = load double, double* %val, align 8, !dbg !2907, !tbaa !1521
  %mul = fmul double %39, %40, !dbg !2908
  %41 = load double, double* %sum_squares, align 8, !dbg !2909, !tbaa !1521
  %add34 = fadd double %41, %mul, !dbg !2909
  store double %add34, double* %sum_squares, align 8, !dbg !2909, !tbaa !1521
  %42 = bitcast double* %val to i8*, !dbg !2910
  call void @llvm.lifetime.end(i64 8, i8* %42) #1, !dbg !2910
  br label %for.inc, !dbg !2911

for.inc:                                          ; preds = %cond.end.31
  %43 = load i32, i32* %width.addr, align 4, !dbg !2912, !tbaa !1244
  %conv35 = sext i32 %43 to i64, !dbg !2912
  %44 = load i64, i64* %i, align 8, !dbg !2913, !tbaa !1435
  %add36 = add i64 %44, %conv35, !dbg !2913
  store i64 %add36, i64* %i, align 8, !dbg !2913, !tbaa !1435
  br label %for.cond, !dbg !2914

for.end:                                          ; preds = %for.cond
  %45 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2915, !tbaa !1200
  %len37 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %45, i32 0, i32 2, !dbg !2917
  %46 = load i64, i64* %len37, align 8, !dbg !2917, !tbaa !1987
  %cmp38 = icmp eq i64 %46, 0, !dbg !2918
  br i1 %cmp38, label %if.then.40, label %if.else, !dbg !2919

if.then.40:                                       ; preds = %for.end
  store i32 0, i32* %res, align 4, !dbg !2920, !tbaa !1244
  br label %if.end.47, !dbg !2921

if.else:                                          ; preds = %for.end
  %47 = load double, double* %sum_squares, align 8, !dbg !2922, !tbaa !1521
  %48 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2923, !tbaa !1200
  %len41 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %48, i32 0, i32 2, !dbg !2924
  %49 = load i64, i64* %len41, align 8, !dbg !2924, !tbaa !1987
  %50 = load i32, i32* %width.addr, align 4, !dbg !2925, !tbaa !1244
  %conv42 = sext i32 %50 to i64, !dbg !2925
  %div = sdiv i64 %49, %conv42, !dbg !2926
  %conv43 = sitofp i64 %div to double, !dbg !2927
  %div44 = fdiv double %47, %conv43, !dbg !2928
  %call45 = call double @sqrt(double %div44) #1, !dbg !2929
  %conv46 = fptoui double %call45 to i32, !dbg !2930
  store i32 %conv46, i32* %res, align 4, !dbg !2931, !tbaa !1244
  br label %if.end.47

if.end.47:                                        ; preds = %if.else, %if.then.40
  %51 = load i32, i32* %res, align 4, !dbg !2932, !tbaa !1244
  %conv48 = zext i32 %51 to i64, !dbg !2932
  %call49 = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv48), !dbg !2933
  store %struct._object* %call49, %struct._object** %retval, !dbg !2934
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2934

cleanup:                                          ; preds = %if.end.47, %if.then
  %52 = bitcast double* %sum_squares to i8*, !dbg !2935
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !2935
  %53 = bitcast i32* %res to i8*, !dbg !2935
  call void @llvm.lifetime.end(i64 4, i8* %53) #1, !dbg !2935
  %54 = bitcast i64* %i to i8*, !dbg !2935
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !2935
  %55 = load %struct._object*, %struct._object** %retval, !dbg !2935
  ret %struct._object* %55, !dbg !2935
}

; Function Attrs: nounwind
declare double @sqrt(double) #5

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_findfit_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, %struct.bufferinfo* %reference) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %reference.addr = alloca %struct.bufferinfo*, align 8
  %cp1 = alloca i16*, align 8
  %cp2 = alloca i16*, align 8
  %len1 = alloca i64, align 8
  %len2 = alloca i64, align 8
  %j = alloca i64, align 8
  %best_j = alloca i64, align 8
  %aj_m1 = alloca double, align 8
  %aj_lm1 = alloca double, align 8
  %sum_ri_2 = alloca double, align 8
  %sum_aij_2 = alloca double, align 8
  %sum_aij_ri = alloca double, align 8
  %result = alloca double, align 8
  %best_result = alloca double, align 8
  %factor = alloca double, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !539, metadata !1195), !dbg !2936
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !540, metadata !1195), !dbg !2937
  store %struct.bufferinfo* %reference, %struct.bufferinfo** %reference.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %reference.addr, metadata !541, metadata !1195), !dbg !2938
  %0 = bitcast i16** %cp1 to i8*, !dbg !2939
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !2939
  call void @llvm.dbg.declare(metadata i16** %cp1, metadata !542, metadata !1195), !dbg !2940
  %1 = bitcast i16** %cp2 to i8*, !dbg !2939
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !2939
  call void @llvm.dbg.declare(metadata i16** %cp2, metadata !543, metadata !1195), !dbg !2941
  %2 = bitcast i64* %len1 to i8*, !dbg !2942
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !2942
  call void @llvm.dbg.declare(metadata i64* %len1, metadata !544, metadata !1195), !dbg !2943
  %3 = bitcast i64* %len2 to i8*, !dbg !2942
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !2942
  call void @llvm.dbg.declare(metadata i64* %len2, metadata !545, metadata !1195), !dbg !2944
  %4 = bitcast i64* %j to i8*, !dbg !2945
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !2945
  call void @llvm.dbg.declare(metadata i64* %j, metadata !546, metadata !1195), !dbg !2946
  %5 = bitcast i64* %best_j to i8*, !dbg !2945
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !2945
  call void @llvm.dbg.declare(metadata i64* %best_j, metadata !547, metadata !1195), !dbg !2947
  %6 = bitcast double* %aj_m1 to i8*, !dbg !2948
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !2948
  call void @llvm.dbg.declare(metadata double* %aj_m1, metadata !548, metadata !1195), !dbg !2949
  %7 = bitcast double* %aj_lm1 to i8*, !dbg !2948
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !2948
  call void @llvm.dbg.declare(metadata double* %aj_lm1, metadata !549, metadata !1195), !dbg !2950
  %8 = bitcast double* %sum_ri_2 to i8*, !dbg !2951
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !2951
  call void @llvm.dbg.declare(metadata double* %sum_ri_2, metadata !550, metadata !1195), !dbg !2952
  %9 = bitcast double* %sum_aij_2 to i8*, !dbg !2951
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !2951
  call void @llvm.dbg.declare(metadata double* %sum_aij_2, metadata !551, metadata !1195), !dbg !2953
  %10 = bitcast double* %sum_aij_ri to i8*, !dbg !2951
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !2951
  call void @llvm.dbg.declare(metadata double* %sum_aij_ri, metadata !552, metadata !1195), !dbg !2954
  %11 = bitcast double* %result to i8*, !dbg !2951
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !2951
  call void @llvm.dbg.declare(metadata double* %result, metadata !553, metadata !1195), !dbg !2955
  %12 = bitcast double* %best_result to i8*, !dbg !2951
  call void @llvm.lifetime.start(i64 8, i8* %12) #1, !dbg !2951
  call void @llvm.dbg.declare(metadata double* %best_result, metadata !554, metadata !1195), !dbg !2956
  %13 = bitcast double* %factor to i8*, !dbg !2951
  call void @llvm.lifetime.start(i64 8, i8* %13) #1, !dbg !2951
  call void @llvm.dbg.declare(metadata double* %factor, metadata !555, metadata !1195), !dbg !2957
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2958, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %14, i32 0, i32 2, !dbg !2960
  %15 = load i64, i64* %len, align 8, !dbg !2960, !tbaa !1987
  %and = and i64 %15, 1, !dbg !2961
  %tobool = icmp ne i64 %and, 0, !dbg !2961
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !2962

lor.lhs.false:                                    ; preds = %entry
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %reference.addr, align 8, !dbg !2963, !tbaa !1200
  %len3 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 2, !dbg !2965
  %17 = load i64, i64* %len3, align 8, !dbg !2965, !tbaa !1987
  %and4 = and i64 %17, 1, !dbg !2966
  %tobool5 = icmp ne i64 %and4, 0, !dbg !2966
  br i1 %tobool5, label %if.then, label %if.end, !dbg !2967

if.then:                                          ; preds = %lor.lhs.false, %entry
  %18 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !2968, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %18, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0)), !dbg !2970
  store %struct._object* null, %struct._object** %retval, !dbg !2971
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2971

if.end:                                           ; preds = %lor.lhs.false
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2972, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 0, !dbg !2973
  %20 = load i8*, i8** %buf, align 8, !dbg !2973, !tbaa !2009
  %21 = bitcast i8* %20 to i16*, !dbg !2974
  store i16* %21, i16** %cp1, align 8, !dbg !2975, !tbaa !1200
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !2976, !tbaa !1200
  %len6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 2, !dbg !2977
  %23 = load i64, i64* %len6, align 8, !dbg !2977, !tbaa !1987
  %shr = ashr i64 %23, 1, !dbg !2978
  store i64 %shr, i64* %len1, align 8, !dbg !2979, !tbaa !1435
  %24 = load %struct.bufferinfo*, %struct.bufferinfo** %reference.addr, align 8, !dbg !2980, !tbaa !1200
  %buf7 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %24, i32 0, i32 0, !dbg !2981
  %25 = load i8*, i8** %buf7, align 8, !dbg !2981, !tbaa !2009
  %26 = bitcast i8* %25 to i16*, !dbg !2982
  store i16* %26, i16** %cp2, align 8, !dbg !2983, !tbaa !1200
  %27 = load %struct.bufferinfo*, %struct.bufferinfo** %reference.addr, align 8, !dbg !2984, !tbaa !1200
  %len8 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %27, i32 0, i32 2, !dbg !2985
  %28 = load i64, i64* %len8, align 8, !dbg !2985, !tbaa !1987
  %shr9 = ashr i64 %28, 1, !dbg !2986
  store i64 %shr9, i64* %len2, align 8, !dbg !2987, !tbaa !1435
  %29 = load i64, i64* %len1, align 8, !dbg !2988, !tbaa !1435
  %30 = load i64, i64* %len2, align 8, !dbg !2990, !tbaa !1435
  %cmp = icmp slt i64 %29, %30, !dbg !2991
  br i1 %cmp, label %if.then.10, label %if.end.11, !dbg !2992

if.then.10:                                       ; preds = %if.end
  %31 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !2993, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %31, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.40, i32 0, i32 0)), !dbg !2995
  store %struct._object* null, %struct._object** %retval, !dbg !2996
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2996

if.end.11:                                        ; preds = %if.end
  %32 = load i16*, i16** %cp2, align 8, !dbg !2997, !tbaa !1200
  %33 = load i16*, i16** %cp2, align 8, !dbg !2998, !tbaa !1200
  %34 = load i64, i64* %len2, align 8, !dbg !2999, !tbaa !1435
  %call = call double @_sum2(i16* %32, i16* %33, i64 %34), !dbg !3000
  store double %call, double* %sum_ri_2, align 8, !dbg !3001, !tbaa !1521
  %35 = load i16*, i16** %cp1, align 8, !dbg !3002, !tbaa !1200
  %36 = load i16*, i16** %cp1, align 8, !dbg !3003, !tbaa !1200
  %37 = load i64, i64* %len2, align 8, !dbg !3004, !tbaa !1435
  %call12 = call double @_sum2(i16* %35, i16* %36, i64 %37), !dbg !3005
  store double %call12, double* %sum_aij_2, align 8, !dbg !3006, !tbaa !1521
  %38 = load i16*, i16** %cp1, align 8, !dbg !3007, !tbaa !1200
  %39 = load i16*, i16** %cp2, align 8, !dbg !3008, !tbaa !1200
  %40 = load i64, i64* %len2, align 8, !dbg !3009, !tbaa !1435
  %call13 = call double @_sum2(i16* %38, i16* %39, i64 %40), !dbg !3010
  store double %call13, double* %sum_aij_ri, align 8, !dbg !3011, !tbaa !1521
  %41 = load double, double* %sum_ri_2, align 8, !dbg !3012, !tbaa !1521
  %42 = load double, double* %sum_aij_2, align 8, !dbg !3013, !tbaa !1521
  %mul = fmul double %41, %42, !dbg !3014
  %43 = load double, double* %sum_aij_ri, align 8, !dbg !3015, !tbaa !1521
  %44 = load double, double* %sum_aij_ri, align 8, !dbg !3016, !tbaa !1521
  %mul14 = fmul double %43, %44, !dbg !3017
  %sub = fsub double %mul, %mul14, !dbg !3018
  %45 = load double, double* %sum_aij_2, align 8, !dbg !3019, !tbaa !1521
  %div = fdiv double %sub, %45, !dbg !3020
  store double %div, double* %result, align 8, !dbg !3021, !tbaa !1521
  %46 = load double, double* %result, align 8, !dbg !3022, !tbaa !1521
  store double %46, double* %best_result, align 8, !dbg !3023, !tbaa !1521
  store i64 0, i64* %best_j, align 8, !dbg !3024, !tbaa !1435
  store i64 1, i64* %j, align 8, !dbg !3025, !tbaa !1435
  br label %for.cond, !dbg !3027

for.cond:                                         ; preds = %for.inc, %if.end.11
  %47 = load i64, i64* %j, align 8, !dbg !3028, !tbaa !1435
  %48 = load i64, i64* %len1, align 8, !dbg !3032, !tbaa !1435
  %49 = load i64, i64* %len2, align 8, !dbg !3033, !tbaa !1435
  %sub15 = sub i64 %48, %49, !dbg !3034
  %cmp16 = icmp sle i64 %47, %sub15, !dbg !3035
  br i1 %cmp16, label %for.body, label %for.end, !dbg !3036

for.body:                                         ; preds = %for.cond
  %50 = load i64, i64* %j, align 8, !dbg !3037, !tbaa !1435
  %sub17 = sub i64 %50, 1, !dbg !3039
  %51 = load i16*, i16** %cp1, align 8, !dbg !3040, !tbaa !1200
  %arrayidx = getelementptr i16, i16* %51, i64 %sub17, !dbg !3040
  %52 = load i16, i16* %arrayidx, align 2, !dbg !3040, !tbaa !2026
  %conv = sitofp i16 %52 to double, !dbg !3041
  store double %conv, double* %aj_m1, align 8, !dbg !3042, !tbaa !1521
  %53 = load i64, i64* %j, align 8, !dbg !3043, !tbaa !1435
  %54 = load i64, i64* %len2, align 8, !dbg !3044, !tbaa !1435
  %add = add i64 %53, %54, !dbg !3045
  %sub18 = sub i64 %add, 1, !dbg !3046
  %55 = load i16*, i16** %cp1, align 8, !dbg !3047, !tbaa !1200
  %arrayidx19 = getelementptr i16, i16* %55, i64 %sub18, !dbg !3047
  %56 = load i16, i16* %arrayidx19, align 2, !dbg !3047, !tbaa !2026
  %conv20 = sitofp i16 %56 to double, !dbg !3048
  store double %conv20, double* %aj_lm1, align 8, !dbg !3049, !tbaa !1521
  %57 = load double, double* %sum_aij_2, align 8, !dbg !3050, !tbaa !1521
  %58 = load double, double* %aj_lm1, align 8, !dbg !3051, !tbaa !1521
  %59 = load double, double* %aj_lm1, align 8, !dbg !3052, !tbaa !1521
  %mul21 = fmul double %58, %59, !dbg !3053
  %add22 = fadd double %57, %mul21, !dbg !3054
  %60 = load double, double* %aj_m1, align 8, !dbg !3055, !tbaa !1521
  %61 = load double, double* %aj_m1, align 8, !dbg !3056, !tbaa !1521
  %mul23 = fmul double %60, %61, !dbg !3057
  %sub24 = fsub double %add22, %mul23, !dbg !3058
  store double %sub24, double* %sum_aij_2, align 8, !dbg !3059, !tbaa !1521
  %62 = load i16*, i16** %cp1, align 8, !dbg !3060, !tbaa !1200
  %63 = load i64, i64* %j, align 8, !dbg !3061, !tbaa !1435
  %add.ptr = getelementptr i16, i16* %62, i64 %63, !dbg !3062
  %64 = load i16*, i16** %cp2, align 8, !dbg !3063, !tbaa !1200
  %65 = load i64, i64* %len2, align 8, !dbg !3064, !tbaa !1435
  %call25 = call double @_sum2(i16* %add.ptr, i16* %64, i64 %65), !dbg !3065
  store double %call25, double* %sum_aij_ri, align 8, !dbg !3066, !tbaa !1521
  %66 = load double, double* %sum_ri_2, align 8, !dbg !3067, !tbaa !1521
  %67 = load double, double* %sum_aij_2, align 8, !dbg !3068, !tbaa !1521
  %mul26 = fmul double %66, %67, !dbg !3069
  %68 = load double, double* %sum_aij_ri, align 8, !dbg !3070, !tbaa !1521
  %69 = load double, double* %sum_aij_ri, align 8, !dbg !3071, !tbaa !1521
  %mul27 = fmul double %68, %69, !dbg !3072
  %sub28 = fsub double %mul26, %mul27, !dbg !3073
  %70 = load double, double* %sum_aij_2, align 8, !dbg !3074, !tbaa !1521
  %div29 = fdiv double %sub28, %70, !dbg !3075
  store double %div29, double* %result, align 8, !dbg !3076, !tbaa !1521
  %71 = load double, double* %result, align 8, !dbg !3077, !tbaa !1521
  %72 = load double, double* %best_result, align 8, !dbg !3079, !tbaa !1521
  %cmp30 = fcmp olt double %71, %72, !dbg !3080
  br i1 %cmp30, label %if.then.32, label %if.end.33, !dbg !3081

if.then.32:                                       ; preds = %for.body
  %73 = load double, double* %result, align 8, !dbg !3082, !tbaa !1521
  store double %73, double* %best_result, align 8, !dbg !3084, !tbaa !1521
  %74 = load i64, i64* %j, align 8, !dbg !3085, !tbaa !1435
  store i64 %74, i64* %best_j, align 8, !dbg !3086, !tbaa !1435
  br label %if.end.33, !dbg !3087

if.end.33:                                        ; preds = %if.then.32, %for.body
  br label %for.inc, !dbg !3088

for.inc:                                          ; preds = %if.end.33
  %75 = load i64, i64* %j, align 8, !dbg !3089, !tbaa !1435
  %inc = add i64 %75, 1, !dbg !3089
  store i64 %inc, i64* %j, align 8, !dbg !3089, !tbaa !1435
  br label %for.cond, !dbg !3090

for.end:                                          ; preds = %for.cond
  %76 = load i16*, i16** %cp1, align 8, !dbg !3091, !tbaa !1200
  %77 = load i64, i64* %best_j, align 8, !dbg !3092, !tbaa !1435
  %add.ptr34 = getelementptr i16, i16* %76, i64 %77, !dbg !3093
  %78 = load i16*, i16** %cp2, align 8, !dbg !3094, !tbaa !1200
  %79 = load i64, i64* %len2, align 8, !dbg !3095, !tbaa !1435
  %call35 = call double @_sum2(i16* %add.ptr34, i16* %78, i64 %79), !dbg !3096
  %80 = load double, double* %sum_ri_2, align 8, !dbg !3097, !tbaa !1521
  %div36 = fdiv double %call35, %80, !dbg !3098
  store double %div36, double* %factor, align 8, !dbg !3099, !tbaa !1521
  %81 = load i64, i64* %best_j, align 8, !dbg !3100, !tbaa !1435
  %82 = load double, double* %factor, align 8, !dbg !3101, !tbaa !1521
  %call37 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), i64 %81, double %82), !dbg !3102
  store %struct._object* %call37, %struct._object** %retval, !dbg !3103
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3103

cleanup:                                          ; preds = %for.end, %if.then.10, %if.then
  %83 = bitcast double* %factor to i8*, !dbg !3104
  call void @llvm.lifetime.end(i64 8, i8* %83) #1, !dbg !3104
  %84 = bitcast double* %best_result to i8*, !dbg !3104
  call void @llvm.lifetime.end(i64 8, i8* %84) #1, !dbg !3104
  %85 = bitcast double* %result to i8*, !dbg !3104
  call void @llvm.lifetime.end(i64 8, i8* %85) #1, !dbg !3104
  %86 = bitcast double* %sum_aij_ri to i8*, !dbg !3104
  call void @llvm.lifetime.end(i64 8, i8* %86) #1, !dbg !3104
  %87 = bitcast double* %sum_aij_2 to i8*, !dbg !3104
  call void @llvm.lifetime.end(i64 8, i8* %87) #1, !dbg !3104
  %88 = bitcast double* %sum_ri_2 to i8*, !dbg !3104
  call void @llvm.lifetime.end(i64 8, i8* %88) #1, !dbg !3104
  %89 = bitcast double* %aj_lm1 to i8*, !dbg !3104
  call void @llvm.lifetime.end(i64 8, i8* %89) #1, !dbg !3104
  %90 = bitcast double* %aj_m1 to i8*, !dbg !3104
  call void @llvm.lifetime.end(i64 8, i8* %90) #1, !dbg !3104
  %91 = bitcast i64* %best_j to i8*, !dbg !3104
  call void @llvm.lifetime.end(i64 8, i8* %91) #1, !dbg !3104
  %92 = bitcast i64* %j to i8*, !dbg !3104
  call void @llvm.lifetime.end(i64 8, i8* %92) #1, !dbg !3104
  %93 = bitcast i64* %len2 to i8*, !dbg !3104
  call void @llvm.lifetime.end(i64 8, i8* %93) #1, !dbg !3104
  %94 = bitcast i64* %len1 to i8*, !dbg !3104
  call void @llvm.lifetime.end(i64 8, i8* %94) #1, !dbg !3104
  %95 = bitcast i16** %cp2 to i8*, !dbg !3104
  call void @llvm.lifetime.end(i64 8, i8* %95) #1, !dbg !3104
  %96 = bitcast i16** %cp1 to i8*, !dbg !3104
  call void @llvm.lifetime.end(i64 8, i8* %96) #1, !dbg !3104
  %97 = load %struct._object*, %struct._object** %retval, !dbg !3104
  ret %struct._object* %97, !dbg !3104
}

; Function Attrs: nounwind uwtable
define internal double @_sum2(i16* %a, i16* %b, i64 %len) #0 {
entry:
  %a.addr = alloca i16*, align 8
  %b.addr = alloca i16*, align 8
  %len.addr = alloca i64, align 8
  %i = alloca i64, align 8
  %sum = alloca double, align 8
  store i16* %a, i16** %a.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata i16** %a.addr, metadata !560, metadata !1195), !dbg !3105
  store i16* %b, i16** %b.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata i16** %b.addr, metadata !561, metadata !1195), !dbg !3106
  store i64 %len, i64* %len.addr, align 8, !tbaa !1435
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !562, metadata !1195), !dbg !3107
  %0 = bitcast i64* %i to i8*, !dbg !3108
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3108
  call void @llvm.dbg.declare(metadata i64* %i, metadata !563, metadata !1195), !dbg !3109
  %1 = bitcast double* %sum to i8*, !dbg !3110
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3110
  call void @llvm.dbg.declare(metadata double* %sum, metadata !564, metadata !1195), !dbg !3111
  store double 0.000000e+00, double* %sum, align 8, !dbg !3111, !tbaa !1521
  store i64 0, i64* %i, align 8, !dbg !3112, !tbaa !1435
  br label %for.cond, !dbg !3114

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, i64* %i, align 8, !dbg !3115, !tbaa !1435
  %3 = load i64, i64* %len.addr, align 8, !dbg !3119, !tbaa !1435
  %cmp = icmp slt i64 %2, %3, !dbg !3120
  br i1 %cmp, label %for.body, label %for.end, !dbg !3121

for.body:                                         ; preds = %for.cond
  %4 = load double, double* %sum, align 8, !dbg !3122, !tbaa !1521
  %5 = load i64, i64* %i, align 8, !dbg !3124, !tbaa !1435
  %6 = load i16*, i16** %a.addr, align 8, !dbg !3125, !tbaa !1200
  %arrayidx = getelementptr i16, i16* %6, i64 %5, !dbg !3125
  %7 = load i16, i16* %arrayidx, align 2, !dbg !3125, !tbaa !2026
  %conv = sitofp i16 %7 to double, !dbg !3126
  %8 = load i64, i64* %i, align 8, !dbg !3127, !tbaa !1435
  %9 = load i16*, i16** %b.addr, align 8, !dbg !3128, !tbaa !1200
  %arrayidx1 = getelementptr i16, i16* %9, i64 %8, !dbg !3128
  %10 = load i16, i16* %arrayidx1, align 2, !dbg !3128, !tbaa !2026
  %conv2 = sitofp i16 %10 to double, !dbg !3129
  %mul = fmul double %conv, %conv2, !dbg !3130
  %add = fadd double %4, %mul, !dbg !3131
  store double %add, double* %sum, align 8, !dbg !3132, !tbaa !1521
  br label %for.inc, !dbg !3133

for.inc:                                          ; preds = %for.body
  %11 = load i64, i64* %i, align 8, !dbg !3134, !tbaa !1435
  %inc = add i64 %11, 1, !dbg !3134
  store i64 %inc, i64* %i, align 8, !dbg !3134, !tbaa !1435
  br label %for.cond, !dbg !3135

for.end:                                          ; preds = %for.cond
  %12 = load double, double* %sum, align 8, !dbg !3136, !tbaa !1521
  %13 = bitcast double* %sum to i8*, !dbg !3137
  call void @llvm.lifetime.end(i64 8, i8* %13) #1, !dbg !3137
  %14 = bitcast i64* %i to i8*, !dbg !3137
  call void @llvm.lifetime.end(i64 8, i8* %14) #1, !dbg !3137
  ret double %12, !dbg !3138
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_findmax_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i64 %length) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %length.addr = alloca i64, align 8
  %cp1 = alloca i16*, align 8
  %len1 = alloca i64, align 8
  %j = alloca i64, align 8
  %best_j = alloca i64, align 8
  %aj_m1 = alloca double, align 8
  %aj_lm1 = alloca double, align 8
  %result = alloca double, align 8
  %best_result = alloca double, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !576, metadata !1195), !dbg !3139
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !577, metadata !1195), !dbg !3140
  store i64 %length, i64* %length.addr, align 8, !tbaa !1435
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !578, metadata !1195), !dbg !3141
  %0 = bitcast i16** %cp1 to i8*, !dbg !3142
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3142
  call void @llvm.dbg.declare(metadata i16** %cp1, metadata !579, metadata !1195), !dbg !3143
  %1 = bitcast i64* %len1 to i8*, !dbg !3144
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3144
  call void @llvm.dbg.declare(metadata i64* %len1, metadata !580, metadata !1195), !dbg !3145
  %2 = bitcast i64* %j to i8*, !dbg !3146
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3146
  call void @llvm.dbg.declare(metadata i64* %j, metadata !581, metadata !1195), !dbg !3147
  %3 = bitcast i64* %best_j to i8*, !dbg !3146
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !3146
  call void @llvm.dbg.declare(metadata i64* %best_j, metadata !582, metadata !1195), !dbg !3148
  %4 = bitcast double* %aj_m1 to i8*, !dbg !3149
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !3149
  call void @llvm.dbg.declare(metadata double* %aj_m1, metadata !583, metadata !1195), !dbg !3150
  %5 = bitcast double* %aj_lm1 to i8*, !dbg !3149
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !3149
  call void @llvm.dbg.declare(metadata double* %aj_lm1, metadata !584, metadata !1195), !dbg !3151
  %6 = bitcast double* %result to i8*, !dbg !3152
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !3152
  call void @llvm.dbg.declare(metadata double* %result, metadata !585, metadata !1195), !dbg !3153
  %7 = bitcast double* %best_result to i8*, !dbg !3152
  call void @llvm.lifetime.start(i64 8, i8* %7) #1, !dbg !3152
  call void @llvm.dbg.declare(metadata double* %best_result, metadata !586, metadata !1195), !dbg !3154
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3155, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 2, !dbg !3157
  %9 = load i64, i64* %len, align 8, !dbg !3157, !tbaa !1987
  %and = and i64 %9, 1, !dbg !3158
  %tobool = icmp ne i64 %and, 0, !dbg !3158
  br i1 %tobool, label %if.then, label %if.end, !dbg !3159

if.then:                                          ; preds = %entry
  %10 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !3160, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0)), !dbg !3162
  store %struct._object* null, %struct._object** %retval, !dbg !3163
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3163

if.end:                                           ; preds = %entry
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3164, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 0, !dbg !3165
  %12 = load i8*, i8** %buf, align 8, !dbg !3165, !tbaa !2009
  %13 = bitcast i8* %12 to i16*, !dbg !3166
  store i16* %13, i16** %cp1, align 8, !dbg !3167, !tbaa !1200
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3168, !tbaa !1200
  %len2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %14, i32 0, i32 2, !dbg !3169
  %15 = load i64, i64* %len2, align 8, !dbg !3169, !tbaa !1987
  %shr = ashr i64 %15, 1, !dbg !3170
  store i64 %shr, i64* %len1, align 8, !dbg !3171, !tbaa !1435
  %16 = load i64, i64* %length.addr, align 8, !dbg !3172, !tbaa !1435
  %cmp = icmp slt i64 %16, 0, !dbg !3174
  br i1 %cmp, label %if.then.4, label %lor.lhs.false, !dbg !3175

lor.lhs.false:                                    ; preds = %if.end
  %17 = load i64, i64* %len1, align 8, !dbg !3176, !tbaa !1435
  %18 = load i64, i64* %length.addr, align 8, !dbg !3178, !tbaa !1435
  %cmp3 = icmp slt i64 %17, %18, !dbg !3179
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !3180

if.then.4:                                        ; preds = %lor.lhs.false, %if.end
  %19 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !3181, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %19, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43, i32 0, i32 0)), !dbg !3183
  store %struct._object* null, %struct._object** %retval, !dbg !3184
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3184

if.end.5:                                         ; preds = %lor.lhs.false
  %20 = load i16*, i16** %cp1, align 8, !dbg !3185, !tbaa !1200
  %21 = load i16*, i16** %cp1, align 8, !dbg !3186, !tbaa !1200
  %22 = load i64, i64* %length.addr, align 8, !dbg !3187, !tbaa !1435
  %call = call double @_sum2(i16* %20, i16* %21, i64 %22), !dbg !3188
  store double %call, double* %result, align 8, !dbg !3189, !tbaa !1521
  %23 = load double, double* %result, align 8, !dbg !3190, !tbaa !1521
  store double %23, double* %best_result, align 8, !dbg !3191, !tbaa !1521
  store i64 0, i64* %best_j, align 8, !dbg !3192, !tbaa !1435
  store i64 1, i64* %j, align 8, !dbg !3193, !tbaa !1435
  br label %for.cond, !dbg !3195

for.cond:                                         ; preds = %for.inc, %if.end.5
  %24 = load i64, i64* %j, align 8, !dbg !3196, !tbaa !1435
  %25 = load i64, i64* %len1, align 8, !dbg !3200, !tbaa !1435
  %26 = load i64, i64* %length.addr, align 8, !dbg !3201, !tbaa !1435
  %sub = sub i64 %25, %26, !dbg !3202
  %cmp6 = icmp sle i64 %24, %sub, !dbg !3203
  br i1 %cmp6, label %for.body, label %for.end, !dbg !3204

for.body:                                         ; preds = %for.cond
  %27 = load i64, i64* %j, align 8, !dbg !3205, !tbaa !1435
  %sub7 = sub i64 %27, 1, !dbg !3207
  %28 = load i16*, i16** %cp1, align 8, !dbg !3208, !tbaa !1200
  %arrayidx = getelementptr i16, i16* %28, i64 %sub7, !dbg !3208
  %29 = load i16, i16* %arrayidx, align 2, !dbg !3208, !tbaa !2026
  %conv = sitofp i16 %29 to double, !dbg !3209
  store double %conv, double* %aj_m1, align 8, !dbg !3210, !tbaa !1521
  %30 = load i64, i64* %j, align 8, !dbg !3211, !tbaa !1435
  %31 = load i64, i64* %length.addr, align 8, !dbg !3212, !tbaa !1435
  %add = add i64 %30, %31, !dbg !3213
  %sub8 = sub i64 %add, 1, !dbg !3214
  %32 = load i16*, i16** %cp1, align 8, !dbg !3215, !tbaa !1200
  %arrayidx9 = getelementptr i16, i16* %32, i64 %sub8, !dbg !3215
  %33 = load i16, i16* %arrayidx9, align 2, !dbg !3215, !tbaa !2026
  %conv10 = sitofp i16 %33 to double, !dbg !3216
  store double %conv10, double* %aj_lm1, align 8, !dbg !3217, !tbaa !1521
  %34 = load double, double* %result, align 8, !dbg !3218, !tbaa !1521
  %35 = load double, double* %aj_lm1, align 8, !dbg !3219, !tbaa !1521
  %36 = load double, double* %aj_lm1, align 8, !dbg !3220, !tbaa !1521
  %mul = fmul double %35, %36, !dbg !3221
  %add11 = fadd double %34, %mul, !dbg !3222
  %37 = load double, double* %aj_m1, align 8, !dbg !3223, !tbaa !1521
  %38 = load double, double* %aj_m1, align 8, !dbg !3224, !tbaa !1521
  %mul12 = fmul double %37, %38, !dbg !3225
  %sub13 = fsub double %add11, %mul12, !dbg !3226
  store double %sub13, double* %result, align 8, !dbg !3227, !tbaa !1521
  %39 = load double, double* %result, align 8, !dbg !3228, !tbaa !1521
  %40 = load double, double* %best_result, align 8, !dbg !3230, !tbaa !1521
  %cmp14 = fcmp ogt double %39, %40, !dbg !3231
  br i1 %cmp14, label %if.then.16, label %if.end.17, !dbg !3232

if.then.16:                                       ; preds = %for.body
  %41 = load double, double* %result, align 8, !dbg !3233, !tbaa !1521
  store double %41, double* %best_result, align 8, !dbg !3235, !tbaa !1521
  %42 = load i64, i64* %j, align 8, !dbg !3236, !tbaa !1435
  store i64 %42, i64* %best_j, align 8, !dbg !3237, !tbaa !1435
  br label %if.end.17, !dbg !3238

if.end.17:                                        ; preds = %if.then.16, %for.body
  br label %for.inc, !dbg !3239

for.inc:                                          ; preds = %if.end.17
  %43 = load i64, i64* %j, align 8, !dbg !3240, !tbaa !1435
  %inc = add i64 %43, 1, !dbg !3240
  store i64 %inc, i64* %j, align 8, !dbg !3240, !tbaa !1435
  br label %for.cond, !dbg !3241

for.end:                                          ; preds = %for.cond
  %44 = load i64, i64* %best_j, align 8, !dbg !3242, !tbaa !1435
  %call18 = call %struct._object* @PyLong_FromSsize_t(i64 %44), !dbg !3243
  store %struct._object* %call18, %struct._object** %retval, !dbg !3244
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3244

cleanup:                                          ; preds = %for.end, %if.then.4, %if.then
  %45 = bitcast double* %best_result to i8*, !dbg !3245
  call void @llvm.lifetime.end(i64 8, i8* %45) #1, !dbg !3245
  %46 = bitcast double* %result to i8*, !dbg !3245
  call void @llvm.lifetime.end(i64 8, i8* %46) #1, !dbg !3245
  %47 = bitcast double* %aj_lm1 to i8*, !dbg !3245
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !3245
  %48 = bitcast double* %aj_m1 to i8*, !dbg !3245
  call void @llvm.lifetime.end(i64 8, i8* %48) #1, !dbg !3245
  %49 = bitcast i64* %best_j to i8*, !dbg !3245
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !3245
  %50 = bitcast i64* %j to i8*, !dbg !3245
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !3245
  %51 = bitcast i64* %len1 to i8*, !dbg !3245
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !3245
  %52 = bitcast i16** %cp1 to i8*, !dbg !3245
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !3245
  %53 = load %struct._object*, %struct._object** %retval, !dbg !3245
  ret %struct._object* %53, !dbg !3245
}

declare %struct._object* @PyLong_FromSsize_t(i64) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_findfactor_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, %struct.bufferinfo* %reference) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %reference.addr = alloca %struct.bufferinfo*, align 8
  %cp1 = alloca i16*, align 8
  %cp2 = alloca i16*, align 8
  %len = alloca i64, align 8
  %sum_ri_2 = alloca double, align 8
  %sum_aij_ri = alloca double, align 8
  %result = alloca double, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !596, metadata !1195), !dbg !3246
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !597, metadata !1195), !dbg !3247
  store %struct.bufferinfo* %reference, %struct.bufferinfo** %reference.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %reference.addr, metadata !598, metadata !1195), !dbg !3248
  %0 = bitcast i16** %cp1 to i8*, !dbg !3249
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3249
  call void @llvm.dbg.declare(metadata i16** %cp1, metadata !599, metadata !1195), !dbg !3250
  %1 = bitcast i16** %cp2 to i8*, !dbg !3249
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3249
  call void @llvm.dbg.declare(metadata i16** %cp2, metadata !600, metadata !1195), !dbg !3251
  %2 = bitcast i64* %len to i8*, !dbg !3252
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3252
  call void @llvm.dbg.declare(metadata i64* %len, metadata !601, metadata !1195), !dbg !3253
  %3 = bitcast double* %sum_ri_2 to i8*, !dbg !3254
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !3254
  call void @llvm.dbg.declare(metadata double* %sum_ri_2, metadata !602, metadata !1195), !dbg !3255
  %4 = bitcast double* %sum_aij_ri to i8*, !dbg !3254
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !3254
  call void @llvm.dbg.declare(metadata double* %sum_aij_ri, metadata !603, metadata !1195), !dbg !3256
  %5 = bitcast double* %result to i8*, !dbg !3254
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !3254
  call void @llvm.dbg.declare(metadata double* %result, metadata !604, metadata !1195), !dbg !3257
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3258, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 2, !dbg !3260
  %7 = load i64, i64* %len1, align 8, !dbg !3260, !tbaa !1987
  %and = and i64 %7, 1, !dbg !3261
  %tobool = icmp ne i64 %and, 0, !dbg !3261
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !3262

lor.lhs.false:                                    ; preds = %entry
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %reference.addr, align 8, !dbg !3263, !tbaa !1200
  %len2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 2, !dbg !3265
  %9 = load i64, i64* %len2, align 8, !dbg !3265, !tbaa !1987
  %and3 = and i64 %9, 1, !dbg !3266
  %tobool4 = icmp ne i64 %and3, 0, !dbg !3266
  br i1 %tobool4, label %if.then, label %if.end, !dbg !3267

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !3268, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0)), !dbg !3270
  store %struct._object* null, %struct._object** %retval, !dbg !3271
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3271

if.end:                                           ; preds = %lor.lhs.false
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3272, !tbaa !1200
  %len5 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 2, !dbg !3274
  %12 = load i64, i64* %len5, align 8, !dbg !3274, !tbaa !1987
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %reference.addr, align 8, !dbg !3275, !tbaa !1200
  %len6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 2, !dbg !3276
  %14 = load i64, i64* %len6, align 8, !dbg !3276, !tbaa !1987
  %cmp = icmp ne i64 %12, %14, !dbg !3277
  br i1 %cmp, label %if.then.7, label %if.end.8, !dbg !3278

if.then.7:                                        ; preds = %if.end
  %15 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !3279, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.45, i32 0, i32 0)), !dbg !3281
  store %struct._object* null, %struct._object** %retval, !dbg !3282
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3282

if.end.8:                                         ; preds = %if.end
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3283, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 0, !dbg !3284
  %17 = load i8*, i8** %buf, align 8, !dbg !3284, !tbaa !2009
  %18 = bitcast i8* %17 to i16*, !dbg !3285
  store i16* %18, i16** %cp1, align 8, !dbg !3286, !tbaa !1200
  %19 = load %struct.bufferinfo*, %struct.bufferinfo** %reference.addr, align 8, !dbg !3287, !tbaa !1200
  %buf9 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %19, i32 0, i32 0, !dbg !3288
  %20 = load i8*, i8** %buf9, align 8, !dbg !3288, !tbaa !2009
  %21 = bitcast i8* %20 to i16*, !dbg !3289
  store i16* %21, i16** %cp2, align 8, !dbg !3290, !tbaa !1200
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3291, !tbaa !1200
  %len10 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 2, !dbg !3292
  %23 = load i64, i64* %len10, align 8, !dbg !3292, !tbaa !1987
  %shr = ashr i64 %23, 1, !dbg !3293
  store i64 %shr, i64* %len, align 8, !dbg !3294, !tbaa !1435
  %24 = load i16*, i16** %cp2, align 8, !dbg !3295, !tbaa !1200
  %25 = load i16*, i16** %cp2, align 8, !dbg !3296, !tbaa !1200
  %26 = load i64, i64* %len, align 8, !dbg !3297, !tbaa !1435
  %call = call double @_sum2(i16* %24, i16* %25, i64 %26), !dbg !3298
  store double %call, double* %sum_ri_2, align 8, !dbg !3299, !tbaa !1521
  %27 = load i16*, i16** %cp1, align 8, !dbg !3300, !tbaa !1200
  %28 = load i16*, i16** %cp2, align 8, !dbg !3301, !tbaa !1200
  %29 = load i64, i64* %len, align 8, !dbg !3302, !tbaa !1435
  %call11 = call double @_sum2(i16* %27, i16* %28, i64 %29), !dbg !3303
  store double %call11, double* %sum_aij_ri, align 8, !dbg !3304, !tbaa !1521
  %30 = load double, double* %sum_aij_ri, align 8, !dbg !3305, !tbaa !1521
  %31 = load double, double* %sum_ri_2, align 8, !dbg !3306, !tbaa !1521
  %div = fdiv double %30, %31, !dbg !3307
  store double %div, double* %result, align 8, !dbg !3308, !tbaa !1521
  %32 = load double, double* %result, align 8, !dbg !3309, !tbaa !1521
  %call12 = call %struct._object* @PyFloat_FromDouble(double %32), !dbg !3310
  store %struct._object* %call12, %struct._object** %retval, !dbg !3311
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3311

cleanup:                                          ; preds = %if.end.8, %if.then.7, %if.then
  %33 = bitcast double* %result to i8*, !dbg !3312
  call void @llvm.lifetime.end(i64 8, i8* %33) #1, !dbg !3312
  %34 = bitcast double* %sum_aij_ri to i8*, !dbg !3312
  call void @llvm.lifetime.end(i64 8, i8* %34) #1, !dbg !3312
  %35 = bitcast double* %sum_ri_2 to i8*, !dbg !3312
  call void @llvm.lifetime.end(i64 8, i8* %35) #1, !dbg !3312
  %36 = bitcast i64* %len to i8*, !dbg !3312
  call void @llvm.lifetime.end(i64 8, i8* %36) #1, !dbg !3312
  %37 = bitcast i16** %cp2 to i8*, !dbg !3312
  call void @llvm.lifetime.end(i64 8, i8* %37) #1, !dbg !3312
  %38 = bitcast i16** %cp1 to i8*, !dbg !3312
  call void @llvm.lifetime.end(i64 8, i8* %38) #1, !dbg !3312
  %39 = load %struct._object*, %struct._object** %retval, !dbg !3312
  ret %struct._object* %39, !dbg !3312
}

declare %struct._object* @PyFloat_FromDouble(double) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_cross_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %i = alloca i64, align 8
  %prevval = alloca i32, align 4
  %ncross = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %val = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !614, metadata !1195), !dbg !3313
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !615, metadata !1195), !dbg !3314
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !616, metadata !1195), !dbg !3315
  %0 = bitcast i64* %i to i8*, !dbg !3316
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3316
  call void @llvm.dbg.declare(metadata i64* %i, metadata !617, metadata !1195), !dbg !3317
  %1 = bitcast i32* %prevval to i8*, !dbg !3318
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !3318
  call void @llvm.dbg.declare(metadata i32* %prevval, metadata !618, metadata !1195), !dbg !3319
  %2 = bitcast i64* %ncross to i8*, !dbg !3320
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3320
  call void @llvm.dbg.declare(metadata i64* %ncross, metadata !619, metadata !1195), !dbg !3321
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3322, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 2, !dbg !3324
  %4 = load i64, i64* %len, align 8, !dbg !3324, !tbaa !1987
  %5 = load i32, i32* %width.addr, align 4, !dbg !3325, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %4, i32 %5), !dbg !3326
  %tobool = icmp ne i32 %call, 0, !dbg !3326
  br i1 %tobool, label %if.end, label %if.then, !dbg !3327

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3328
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3328

if.end:                                           ; preds = %entry
  store i64 -1, i64* %ncross, align 8, !dbg !3329, !tbaa !1435
  store i32 17, i32* %prevval, align 4, !dbg !3330, !tbaa !1244
  store i64 0, i64* %i, align 8, !dbg !3331, !tbaa !1435
  br label %for.cond, !dbg !3332

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i64, i64* %i, align 8, !dbg !3333, !tbaa !1435
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3336, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 2, !dbg !3337
  %8 = load i64, i64* %len1, align 8, !dbg !3337, !tbaa !1987
  %cmp = icmp slt i64 %6, %8, !dbg !3338
  br i1 %cmp, label %for.body, label %for.end, !dbg !3339

for.body:                                         ; preds = %for.cond
  %9 = bitcast i32* %val to i8*, !dbg !3340
  call void @llvm.lifetime.start(i64 4, i8* %9) #1, !dbg !3340
  call void @llvm.dbg.declare(metadata i32* %val, metadata !620, metadata !1195), !dbg !3341
  %10 = load i32, i32* %width.addr, align 4, !dbg !3342, !tbaa !1244
  %cmp2 = icmp eq i32 %10, 1, !dbg !3343
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !3344

cond.true:                                        ; preds = %for.body
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3345, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 0, !dbg !3347
  %12 = load i8*, i8** %buf, align 8, !dbg !3347, !tbaa !2009
  %13 = load i64, i64* %i, align 8, !dbg !3348, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %12, i64 %13, !dbg !3349
  %14 = load i8, i8* %add.ptr, align 1, !dbg !3350, !tbaa !2013
  %conv = sext i8 %14 to i32, !dbg !3351
  br label %cond.end.31, !dbg !3344

cond.false:                                       ; preds = %for.body
  %15 = load i32, i32* %width.addr, align 4, !dbg !3352, !tbaa !1244
  %cmp3 = icmp eq i32 %15, 2, !dbg !3354
  br i1 %cmp3, label %cond.true.5, label %cond.false.9, !dbg !3355

cond.true.5:                                      ; preds = %cond.false
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3356, !tbaa !1200
  %buf6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 0, !dbg !3358
  %17 = load i8*, i8** %buf6, align 8, !dbg !3358, !tbaa !2009
  %18 = load i64, i64* %i, align 8, !dbg !3359, !tbaa !1435
  %add.ptr7 = getelementptr i8, i8* %17, i64 %18, !dbg !3360
  %19 = bitcast i8* %add.ptr7 to i16*, !dbg !3361
  %20 = load i16, i16* %19, align 2, !dbg !3362, !tbaa !2026
  %conv8 = sext i16 %20 to i32, !dbg !3363
  br label %cond.end.29, !dbg !3355

cond.false.9:                                     ; preds = %cond.false
  %21 = load i32, i32* %width.addr, align 4, !dbg !3364, !tbaa !1244
  %cmp10 = icmp eq i32 %21, 3, !dbg !3366
  br i1 %cmp10, label %cond.true.12, label %cond.false.26, !dbg !3367

cond.true.12:                                     ; preds = %cond.false.9
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3368, !tbaa !1200
  %buf13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 0, !dbg !3370
  %23 = load i8*, i8** %buf13, align 8, !dbg !3370, !tbaa !2009
  %24 = load i64, i64* %i, align 8, !dbg !3371, !tbaa !1435
  %add.ptr14 = getelementptr i8, i8* %23, i64 %24, !dbg !3372
  %arrayidx = getelementptr i8, i8* %add.ptr14, i64 0, !dbg !3373
  %25 = load i8, i8* %arrayidx, align 1, !dbg !3373, !tbaa !2013
  %conv15 = zext i8 %25 to i32, !dbg !3373
  %26 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3374, !tbaa !1200
  %buf16 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %26, i32 0, i32 0, !dbg !3375
  %27 = load i8*, i8** %buf16, align 8, !dbg !3375, !tbaa !2009
  %28 = load i64, i64* %i, align 8, !dbg !3376, !tbaa !1435
  %add.ptr17 = getelementptr i8, i8* %27, i64 %28, !dbg !3377
  %arrayidx18 = getelementptr i8, i8* %add.ptr17, i64 1, !dbg !3378
  %29 = load i8, i8* %arrayidx18, align 1, !dbg !3378, !tbaa !2013
  %conv19 = zext i8 %29 to i32, !dbg !3378
  %shl = shl i32 %conv19, 8, !dbg !3379
  %add = add i32 %conv15, %shl, !dbg !3380
  %30 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3381, !tbaa !1200
  %buf20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %30, i32 0, i32 0, !dbg !3382
  %31 = load i8*, i8** %buf20, align 8, !dbg !3382, !tbaa !2009
  %32 = load i64, i64* %i, align 8, !dbg !3383, !tbaa !1435
  %add.ptr21 = getelementptr i8, i8* %31, i64 %32, !dbg !3384
  %arrayidx22 = getelementptr i8, i8* %add.ptr21, i64 2, !dbg !3385
  %33 = load i8, i8* %arrayidx22, align 1, !dbg !3385, !tbaa !2013
  %conv23 = sext i8 %33 to i32, !dbg !3385
  %shl24 = shl i32 %conv23, 16, !dbg !3386
  %add25 = add i32 %add, %shl24, !dbg !3387
  br label %cond.end, !dbg !3367

cond.false.26:                                    ; preds = %cond.false.9
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3388, !tbaa !1200
  %buf27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %34, i32 0, i32 0, !dbg !3390
  %35 = load i8*, i8** %buf27, align 8, !dbg !3390, !tbaa !2009
  %36 = load i64, i64* %i, align 8, !dbg !3391, !tbaa !1435
  %add.ptr28 = getelementptr i8, i8* %35, i64 %36, !dbg !3392
  %37 = bitcast i8* %add.ptr28 to i32*, !dbg !3393
  %38 = load i32, i32* %37, align 4, !dbg !3394, !tbaa !1244
  br label %cond.end, !dbg !3367

cond.end:                                         ; preds = %cond.false.26, %cond.true.12
  %cond = phi i32 [ %add25, %cond.true.12 ], [ %38, %cond.false.26 ], !dbg !3367
  br label %cond.end.29, !dbg !3395

cond.end.29:                                      ; preds = %cond.end, %cond.true.5
  %cond30 = phi i32 [ %conv8, %cond.true.5 ], [ %cond, %cond.end ], !dbg !3355
  br label %cond.end.31, !dbg !3398

cond.end.31:                                      ; preds = %cond.end.29, %cond.true
  %cond32 = phi i32 [ %conv, %cond.true ], [ %cond30, %cond.end.29 ], !dbg !3344
  %cmp33 = icmp slt i32 %cond32, 0, !dbg !3401
  %conv34 = zext i1 %cmp33 to i32, !dbg !3401
  store i32 %conv34, i32* %val, align 4, !dbg !3341, !tbaa !1244
  %39 = load i32, i32* %val, align 4, !dbg !3404, !tbaa !1244
  %40 = load i32, i32* %prevval, align 4, !dbg !3406, !tbaa !1244
  %cmp35 = icmp ne i32 %39, %40, !dbg !3407
  br i1 %cmp35, label %if.then.37, label %if.end.38, !dbg !3408

if.then.37:                                       ; preds = %cond.end.31
  %41 = load i64, i64* %ncross, align 8, !dbg !3409, !tbaa !1435
  %inc = add i64 %41, 1, !dbg !3409
  store i64 %inc, i64* %ncross, align 8, !dbg !3409, !tbaa !1435
  br label %if.end.38, !dbg !3411

if.end.38:                                        ; preds = %if.then.37, %cond.end.31
  %42 = load i32, i32* %val, align 4, !dbg !3412, !tbaa !1244
  store i32 %42, i32* %prevval, align 4, !dbg !3413, !tbaa !1244
  %43 = bitcast i32* %val to i8*, !dbg !3414
  call void @llvm.lifetime.end(i64 4, i8* %43) #1, !dbg !3414
  br label %for.inc, !dbg !3415

for.inc:                                          ; preds = %if.end.38
  %44 = load i32, i32* %width.addr, align 4, !dbg !3416, !tbaa !1244
  %conv39 = sext i32 %44 to i64, !dbg !3416
  %45 = load i64, i64* %i, align 8, !dbg !3417, !tbaa !1435
  %add40 = add i64 %45, %conv39, !dbg !3417
  store i64 %add40, i64* %i, align 8, !dbg !3417, !tbaa !1435
  br label %for.cond, !dbg !3418

for.end:                                          ; preds = %for.cond
  %46 = load i64, i64* %ncross, align 8, !dbg !3419, !tbaa !1435
  %call41 = call %struct._object* @PyLong_FromSsize_t(i64 %46), !dbg !3420
  store %struct._object* %call41, %struct._object** %retval, !dbg !3421
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3421

cleanup:                                          ; preds = %for.end, %if.then
  %47 = bitcast i64* %ncross to i8*, !dbg !3422
  call void @llvm.lifetime.end(i64 8, i8* %47) #1, !dbg !3422
  %48 = bitcast i32* %prevval to i8*, !dbg !3422
  call void @llvm.lifetime.end(i64 4, i8* %48) #1, !dbg !3422
  %49 = bitcast i64* %i to i8*, !dbg !3422
  call void @llvm.lifetime.end(i64 8, i8* %49) #1, !dbg !3422
  %50 = load %struct._object*, %struct._object** %retval, !dbg !3422
  ret %struct._object* %50, !dbg !3422
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_mul_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width, double %factor) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %factor.addr = alloca double, align 8
  %ncp = alloca i8*, align 8
  %i = alloca i64, align 8
  %maxval = alloca double, align 8
  %minval = alloca double, align 8
  %rv = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %val = alloca double, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !636, metadata !1195), !dbg !3423
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !637, metadata !1195), !dbg !3424
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !638, metadata !1195), !dbg !3425
  store double %factor, double* %factor.addr, align 8, !tbaa !1521
  call void @llvm.dbg.declare(metadata double* %factor.addr, metadata !639, metadata !1195), !dbg !3426
  %0 = bitcast i8** %ncp to i8*, !dbg !3427
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3427
  call void @llvm.dbg.declare(metadata i8** %ncp, metadata !640, metadata !1195), !dbg !3428
  %1 = bitcast i64* %i to i8*, !dbg !3429
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3429
  call void @llvm.dbg.declare(metadata i64* %i, metadata !641, metadata !1195), !dbg !3430
  %2 = bitcast double* %maxval to i8*, !dbg !3431
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !3431
  call void @llvm.dbg.declare(metadata double* %maxval, metadata !642, metadata !1195), !dbg !3432
  %3 = bitcast double* %minval to i8*, !dbg !3431
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !3431
  call void @llvm.dbg.declare(metadata double* %minval, metadata !643, metadata !1195), !dbg !3433
  %4 = bitcast %struct._object** %rv to i8*, !dbg !3434
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !3434
  call void @llvm.dbg.declare(metadata %struct._object** %rv, metadata !644, metadata !1195), !dbg !3435
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3436, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 2, !dbg !3438
  %6 = load i64, i64* %len, align 8, !dbg !3438, !tbaa !1987
  %7 = load i32, i32* %width.addr, align 4, !dbg !3439, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %6, i32 %7), !dbg !3440
  %tobool = icmp ne i32 %call, 0, !dbg !3440
  br i1 %tobool, label %if.end, label %if.then, !dbg !3441

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3442
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3442

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %width.addr, align 4, !dbg !3443, !tbaa !1244
  %idxprom = sext i32 %8 to i64, !dbg !3444
  %arrayidx = getelementptr [5 x i32], [5 x i32]* @maxvals, i32 0, i64 %idxprom, !dbg !3444
  %9 = load i32, i32* %arrayidx, align 4, !dbg !3444, !tbaa !1244
  %conv = sitofp i32 %9 to double, !dbg !3445
  store double %conv, double* %maxval, align 8, !dbg !3446, !tbaa !1521
  %10 = load i32, i32* %width.addr, align 4, !dbg !3447, !tbaa !1244
  %idxprom1 = sext i32 %10 to i64, !dbg !3448
  %arrayidx2 = getelementptr [5 x i32], [5 x i32]* @minvals, i32 0, i64 %idxprom1, !dbg !3448
  %11 = load i32, i32* %arrayidx2, align 4, !dbg !3448, !tbaa !1244
  %conv3 = sitofp i32 %11 to double, !dbg !3449
  store double %conv3, double* %minval, align 8, !dbg !3450, !tbaa !1521
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3451, !tbaa !1200
  %len4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 2, !dbg !3452
  %13 = load i64, i64* %len4, align 8, !dbg !3452, !tbaa !1987
  %call5 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %13), !dbg !3453
  store %struct._object* %call5, %struct._object** %rv, align 8, !dbg !3454, !tbaa !1200
  %14 = load %struct._object*, %struct._object** %rv, align 8, !dbg !3455, !tbaa !1200
  %cmp = icmp eq %struct._object* %14, null, !dbg !3457
  br i1 %cmp, label %if.then.7, label %if.end.8, !dbg !3458

if.then.7:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !3459
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3459

if.end.8:                                         ; preds = %if.end
  %15 = load %struct._object*, %struct._object** %rv, align 8, !dbg !3460, !tbaa !1200
  %call9 = call i8* @PyBytes_AsString(%struct._object* %15), !dbg !3461
  store i8* %call9, i8** %ncp, align 8, !dbg !3462, !tbaa !1200
  store i64 0, i64* %i, align 8, !dbg !3463, !tbaa !1435
  br label %for.cond, !dbg !3464

for.cond:                                         ; preds = %for.inc, %if.end.8
  %16 = load i64, i64* %i, align 8, !dbg !3465, !tbaa !1435
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3468, !tbaa !1200
  %len10 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 2, !dbg !3469
  %18 = load i64, i64* %len10, align 8, !dbg !3469, !tbaa !1987
  %cmp11 = icmp slt i64 %16, %18, !dbg !3470
  br i1 %cmp11, label %for.body, label %for.end, !dbg !3471

for.body:                                         ; preds = %for.cond
  %19 = bitcast double* %val to i8*, !dbg !3472
  call void @llvm.lifetime.start(i64 8, i8* %19) #1, !dbg !3472
  call void @llvm.dbg.declare(metadata double* %val, metadata !645, metadata !1195), !dbg !3473
  %20 = load i32, i32* %width.addr, align 4, !dbg !3474, !tbaa !1244
  %cmp13 = icmp eq i32 %20, 1, !dbg !3475
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !3476

cond.true:                                        ; preds = %for.body
  %21 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3477, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %21, i32 0, i32 0, !dbg !3479
  %22 = load i8*, i8** %buf, align 8, !dbg !3479, !tbaa !2009
  %23 = load i64, i64* %i, align 8, !dbg !3480, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %22, i64 %23, !dbg !3481
  %24 = load i8, i8* %add.ptr, align 1, !dbg !3482, !tbaa !2013
  %conv15 = sext i8 %24 to i32, !dbg !3483
  br label %cond.end.45, !dbg !3476

cond.false:                                       ; preds = %for.body
  %25 = load i32, i32* %width.addr, align 4, !dbg !3484, !tbaa !1244
  %cmp16 = icmp eq i32 %25, 2, !dbg !3486
  br i1 %cmp16, label %cond.true.18, label %cond.false.22, !dbg !3487

cond.true.18:                                     ; preds = %cond.false
  %26 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3488, !tbaa !1200
  %buf19 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %26, i32 0, i32 0, !dbg !3490
  %27 = load i8*, i8** %buf19, align 8, !dbg !3490, !tbaa !2009
  %28 = load i64, i64* %i, align 8, !dbg !3491, !tbaa !1435
  %add.ptr20 = getelementptr i8, i8* %27, i64 %28, !dbg !3492
  %29 = bitcast i8* %add.ptr20 to i16*, !dbg !3493
  %30 = load i16, i16* %29, align 2, !dbg !3494, !tbaa !2026
  %conv21 = sext i16 %30 to i32, !dbg !3495
  br label %cond.end.43, !dbg !3487

cond.false.22:                                    ; preds = %cond.false
  %31 = load i32, i32* %width.addr, align 4, !dbg !3496, !tbaa !1244
  %cmp23 = icmp eq i32 %31, 3, !dbg !3498
  br i1 %cmp23, label %cond.true.25, label %cond.false.40, !dbg !3499

cond.true.25:                                     ; preds = %cond.false.22
  %32 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3500, !tbaa !1200
  %buf26 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %32, i32 0, i32 0, !dbg !3502
  %33 = load i8*, i8** %buf26, align 8, !dbg !3502, !tbaa !2009
  %34 = load i64, i64* %i, align 8, !dbg !3503, !tbaa !1435
  %add.ptr27 = getelementptr i8, i8* %33, i64 %34, !dbg !3504
  %arrayidx28 = getelementptr i8, i8* %add.ptr27, i64 0, !dbg !3505
  %35 = load i8, i8* %arrayidx28, align 1, !dbg !3505, !tbaa !2013
  %conv29 = zext i8 %35 to i32, !dbg !3505
  %36 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3506, !tbaa !1200
  %buf30 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %36, i32 0, i32 0, !dbg !3507
  %37 = load i8*, i8** %buf30, align 8, !dbg !3507, !tbaa !2009
  %38 = load i64, i64* %i, align 8, !dbg !3508, !tbaa !1435
  %add.ptr31 = getelementptr i8, i8* %37, i64 %38, !dbg !3509
  %arrayidx32 = getelementptr i8, i8* %add.ptr31, i64 1, !dbg !3510
  %39 = load i8, i8* %arrayidx32, align 1, !dbg !3510, !tbaa !2013
  %conv33 = zext i8 %39 to i32, !dbg !3510
  %shl = shl i32 %conv33, 8, !dbg !3511
  %add = add i32 %conv29, %shl, !dbg !3512
  %40 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3513, !tbaa !1200
  %buf34 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %40, i32 0, i32 0, !dbg !3514
  %41 = load i8*, i8** %buf34, align 8, !dbg !3514, !tbaa !2009
  %42 = load i64, i64* %i, align 8, !dbg !3515, !tbaa !1435
  %add.ptr35 = getelementptr i8, i8* %41, i64 %42, !dbg !3516
  %arrayidx36 = getelementptr i8, i8* %add.ptr35, i64 2, !dbg !3517
  %43 = load i8, i8* %arrayidx36, align 1, !dbg !3517, !tbaa !2013
  %conv37 = sext i8 %43 to i32, !dbg !3517
  %shl38 = shl i32 %conv37, 16, !dbg !3518
  %add39 = add i32 %add, %shl38, !dbg !3519
  br label %cond.end, !dbg !3499

cond.false.40:                                    ; preds = %cond.false.22
  %44 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !3520, !tbaa !1200
  %buf41 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %44, i32 0, i32 0, !dbg !3522
  %45 = load i8*, i8** %buf41, align 8, !dbg !3522, !tbaa !2009
  %46 = load i64, i64* %i, align 8, !dbg !3523, !tbaa !1435
  %add.ptr42 = getelementptr i8, i8* %45, i64 %46, !dbg !3524
  %47 = bitcast i8* %add.ptr42 to i32*, !dbg !3525
  %48 = load i32, i32* %47, align 4, !dbg !3526, !tbaa !1244
  br label %cond.end, !dbg !3499

cond.end:                                         ; preds = %cond.false.40, %cond.true.25
  %cond = phi i32 [ %add39, %cond.true.25 ], [ %48, %cond.false.40 ], !dbg !3499
  br label %cond.end.43, !dbg !3527

cond.end.43:                                      ; preds = %cond.end, %cond.true.18
  %cond44 = phi i32 [ %conv21, %cond.true.18 ], [ %cond, %cond.end ], !dbg !3487
  br label %cond.end.45, !dbg !3530

cond.end.45:                                      ; preds = %cond.end.43, %cond.true
  %cond46 = phi i32 [ %conv15, %cond.true ], [ %cond44, %cond.end.43 ], !dbg !3476
  %conv47 = sitofp i32 %cond46 to double, !dbg !3533
  store double %conv47, double* %val, align 8, !dbg !3473, !tbaa !1521
  %49 = load double, double* %factor.addr, align 8, !dbg !3536, !tbaa !1521
  %50 = load double, double* %val, align 8, !dbg !3537, !tbaa !1521
  %mul = fmul double %50, %49, !dbg !3537
  store double %mul, double* %val, align 8, !dbg !3537, !tbaa !1521
  %51 = load double, double* %val, align 8, !dbg !3538, !tbaa !1521
  %52 = load double, double* %minval, align 8, !dbg !3539, !tbaa !1521
  %53 = load double, double* %maxval, align 8, !dbg !3540, !tbaa !1521
  %call48 = call i32 @fbound(double %51, double %52, double %53), !dbg !3541
  %conv49 = sitofp i32 %call48 to double, !dbg !3541
  %call50 = call double @floor(double %conv49) #2, !dbg !3542
  store double %call50, double* %val, align 8, !dbg !3543, !tbaa !1521
  br label %do.body, !dbg !3544

do.body:                                          ; preds = %cond.end.45
  %54 = load i32, i32* %width.addr, align 4, !dbg !3545, !tbaa !1244
  %cmp51 = icmp eq i32 %54, 1, !dbg !3549
  br i1 %cmp51, label %if.then.53, label %if.else, !dbg !3550

if.then.53:                                       ; preds = %do.body
  br label %do.body.54, !dbg !3551

do.body.54:                                       ; preds = %if.then.53
  %55 = load double, double* %val, align 8, !dbg !3553, !tbaa !1521
  %conv55 = fptosi double %55 to i32, !dbg !3556
  %conv56 = trunc i32 %conv55 to i8, !dbg !3557
  %56 = load i8*, i8** %ncp, align 8, !dbg !3558, !tbaa !1200
  %57 = load i64, i64* %i, align 8, !dbg !3559, !tbaa !1435
  %add.ptr57 = getelementptr i8, i8* %56, i64 %57, !dbg !3560
  store i8 %conv56, i8* %add.ptr57, align 1, !dbg !3561, !tbaa !2013
  br label %do.cond, !dbg !3562

do.cond:                                          ; preds = %do.body.54
  br label %do.end, !dbg !3563

do.end:                                           ; preds = %do.cond
  br label %if.end.95, !dbg !3565

if.else:                                          ; preds = %do.body
  %58 = load i32, i32* %width.addr, align 4, !dbg !3567, !tbaa !1244
  %cmp58 = icmp eq i32 %58, 2, !dbg !3570
  br i1 %cmp58, label %if.then.60, label %if.else.67, !dbg !3571

if.then.60:                                       ; preds = %if.else
  br label %do.body.61, !dbg !3572

do.body.61:                                       ; preds = %if.then.60
  %59 = load double, double* %val, align 8, !dbg !3574, !tbaa !1521
  %conv62 = fptosi double %59 to i32, !dbg !3577
  %conv63 = trunc i32 %conv62 to i16, !dbg !3578
  %60 = load i8*, i8** %ncp, align 8, !dbg !3579, !tbaa !1200
  %61 = load i64, i64* %i, align 8, !dbg !3580, !tbaa !1435
  %add.ptr64 = getelementptr i8, i8* %60, i64 %61, !dbg !3581
  %62 = bitcast i8* %add.ptr64 to i16*, !dbg !3582
  store i16 %conv63, i16* %62, align 2, !dbg !3583, !tbaa !2026
  br label %do.cond.65, !dbg !3584

do.cond.65:                                       ; preds = %do.body.61
  br label %do.end.66, !dbg !3585

do.end.66:                                        ; preds = %do.cond.65
  br label %if.end.94, !dbg !3587

if.else.67:                                       ; preds = %if.else
  %63 = load i32, i32* %width.addr, align 4, !dbg !3589, !tbaa !1244
  %cmp68 = icmp eq i32 %63, 3, !dbg !3592
  br i1 %cmp68, label %if.then.70, label %if.else.87, !dbg !3593

if.then.70:                                       ; preds = %if.else.67
  br label %do.body.71, !dbg !3594

do.body.71:                                       ; preds = %if.then.70
  %64 = load double, double* %val, align 8, !dbg !3596, !tbaa !1521
  %conv72 = fptosi double %64 to i32, !dbg !3599
  %conv73 = trunc i32 %conv72 to i8, !dbg !3600
  %65 = load i8*, i8** %ncp, align 8, !dbg !3601, !tbaa !1200
  %66 = load i64, i64* %i, align 8, !dbg !3602, !tbaa !1435
  %add.ptr74 = getelementptr i8, i8* %65, i64 %66, !dbg !3603
  %arrayidx75 = getelementptr i8, i8* %add.ptr74, i64 0, !dbg !3604
  store i8 %conv73, i8* %arrayidx75, align 1, !dbg !3605, !tbaa !2013
  %67 = load double, double* %val, align 8, !dbg !3606, !tbaa !1521
  %conv76 = fptosi double %67 to i32, !dbg !3607
  %shr = ashr i32 %conv76, 8, !dbg !3608
  %conv77 = trunc i32 %shr to i8, !dbg !3609
  %68 = load i8*, i8** %ncp, align 8, !dbg !3610, !tbaa !1200
  %69 = load i64, i64* %i, align 8, !dbg !3611, !tbaa !1435
  %add.ptr78 = getelementptr i8, i8* %68, i64 %69, !dbg !3612
  %arrayidx79 = getelementptr i8, i8* %add.ptr78, i64 1, !dbg !3613
  store i8 %conv77, i8* %arrayidx79, align 1, !dbg !3614, !tbaa !2013
  %70 = load double, double* %val, align 8, !dbg !3615, !tbaa !1521
  %conv80 = fptosi double %70 to i32, !dbg !3616
  %shr81 = ashr i32 %conv80, 16, !dbg !3617
  %conv82 = trunc i32 %shr81 to i8, !dbg !3618
  %71 = load i8*, i8** %ncp, align 8, !dbg !3619, !tbaa !1200
  %72 = load i64, i64* %i, align 8, !dbg !3620, !tbaa !1435
  %add.ptr83 = getelementptr i8, i8* %71, i64 %72, !dbg !3621
  %arrayidx84 = getelementptr i8, i8* %add.ptr83, i64 2, !dbg !3622
  store i8 %conv82, i8* %arrayidx84, align 1, !dbg !3623, !tbaa !2013
  br label %do.cond.85, !dbg !3624

do.cond.85:                                       ; preds = %do.body.71
  br label %do.end.86, !dbg !3625

do.end.86:                                        ; preds = %do.cond.85
  br label %if.end.93, !dbg !3627

if.else.87:                                       ; preds = %if.else.67
  br label %do.body.88, !dbg !3629

do.body.88:                                       ; preds = %if.else.87
  %73 = load double, double* %val, align 8, !dbg !3631, !tbaa !1521
  %conv89 = fptosi double %73 to i32, !dbg !3634
  %74 = load i8*, i8** %ncp, align 8, !dbg !3635, !tbaa !1200
  %75 = load i64, i64* %i, align 8, !dbg !3636, !tbaa !1435
  %add.ptr90 = getelementptr i8, i8* %74, i64 %75, !dbg !3637
  %76 = bitcast i8* %add.ptr90 to i32*, !dbg !3638
  store i32 %conv89, i32* %76, align 4, !dbg !3639, !tbaa !1244
  br label %do.cond.91, !dbg !3640

do.cond.91:                                       ; preds = %do.body.88
  br label %do.end.92, !dbg !3641

do.end.92:                                        ; preds = %do.cond.91
  br label %if.end.93

if.end.93:                                        ; preds = %do.end.92, %do.end.86
  br label %if.end.94

if.end.94:                                        ; preds = %if.end.93, %do.end.66
  br label %if.end.95

if.end.95:                                        ; preds = %if.end.94, %do.end
  br label %do.cond.96, !dbg !3643

do.cond.96:                                       ; preds = %if.end.95
  br label %do.end.97, !dbg !3645

do.end.97:                                        ; preds = %do.cond.96
  %77 = bitcast double* %val to i8*, !dbg !3647
  call void @llvm.lifetime.end(i64 8, i8* %77) #1, !dbg !3647
  br label %for.inc, !dbg !3648

for.inc:                                          ; preds = %do.end.97
  %78 = load i32, i32* %width.addr, align 4, !dbg !3649, !tbaa !1244
  %conv98 = sext i32 %78 to i64, !dbg !3649
  %79 = load i64, i64* %i, align 8, !dbg !3650, !tbaa !1435
  %add99 = add i64 %79, %conv98, !dbg !3650
  store i64 %add99, i64* %i, align 8, !dbg !3650, !tbaa !1435
  br label %for.cond, !dbg !3651

for.end:                                          ; preds = %for.cond
  %80 = load %struct._object*, %struct._object** %rv, align 8, !dbg !3652, !tbaa !1200
  store %struct._object* %80, %struct._object** %retval, !dbg !3653
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3653

cleanup:                                          ; preds = %for.end, %if.then.7, %if.then
  %81 = bitcast %struct._object** %rv to i8*, !dbg !3654
  call void @llvm.lifetime.end(i64 8, i8* %81) #1, !dbg !3654
  %82 = bitcast double* %minval to i8*, !dbg !3654
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !3654
  %83 = bitcast double* %maxval to i8*, !dbg !3654
  call void @llvm.lifetime.end(i64 8, i8* %83) #1, !dbg !3654
  %84 = bitcast i64* %i to i8*, !dbg !3654
  call void @llvm.lifetime.end(i64 8, i8* %84) #1, !dbg !3654
  %85 = bitcast i8** %ncp to i8*, !dbg !3654
  call void @llvm.lifetime.end(i64 8, i8* %85) #1, !dbg !3654
  %86 = load %struct._object*, %struct._object** %retval, !dbg !3654
  ret %struct._object* %86, !dbg !3654
}

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #3

declare i8* @PyBytes_AsString(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @fbound(double %val, double %minval, double %maxval) #0 {
entry:
  %val.addr = alloca double, align 8
  %minval.addr = alloca double, align 8
  %maxval.addr = alloca double, align 8
  store double %val, double* %val.addr, align 8, !tbaa !1521
  call void @llvm.dbg.declare(metadata double* %val.addr, metadata !653, metadata !1195), !dbg !3655
  store double %minval, double* %minval.addr, align 8, !tbaa !1521
  call void @llvm.dbg.declare(metadata double* %minval.addr, metadata !654, metadata !1195), !dbg !3656
  store double %maxval, double* %maxval.addr, align 8, !tbaa !1521
  call void @llvm.dbg.declare(metadata double* %maxval.addr, metadata !655, metadata !1195), !dbg !3657
  %0 = load double, double* %val.addr, align 8, !dbg !3658, !tbaa !1521
  %1 = load double, double* %maxval.addr, align 8, !dbg !3660, !tbaa !1521
  %cmp = fcmp ogt double %0, %1, !dbg !3661
  br i1 %cmp, label %if.then, label %if.else, !dbg !3662

if.then:                                          ; preds = %entry
  %2 = load double, double* %maxval.addr, align 8, !dbg !3663, !tbaa !1521
  store double %2, double* %val.addr, align 8, !dbg !3664, !tbaa !1521
  br label %if.end.3, !dbg !3665

if.else:                                          ; preds = %entry
  %3 = load double, double* %val.addr, align 8, !dbg !3666, !tbaa !1521
  %4 = load double, double* %minval.addr, align 8, !dbg !3668, !tbaa !1521
  %add = fadd double %4, 1.000000e+00, !dbg !3669
  %cmp1 = fcmp olt double %3, %add, !dbg !3670
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !3671

if.then.2:                                        ; preds = %if.else
  %5 = load double, double* %minval.addr, align 8, !dbg !3672, !tbaa !1521
  store double %5, double* %val.addr, align 8, !dbg !3673, !tbaa !1521
  br label %if.end, !dbg !3674

if.end:                                           ; preds = %if.then.2, %if.else
  br label %if.end.3

if.end.3:                                         ; preds = %if.end, %if.then
  %6 = load double, double* %val.addr, align 8, !dbg !3675, !tbaa !1521
  %conv = fptosi double %6 to i32, !dbg !3676
  ret i32 %conv, !dbg !3677
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_add_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment1, %struct.bufferinfo* %fragment2, i32 %width) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment1.addr = alloca %struct.bufferinfo*, align 8
  %fragment2.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %ncp = alloca i8*, align 8
  %i = alloca i64, align 8
  %minval = alloca i32, align 4
  %maxval = alloca i32, align 4
  %newval = alloca i32, align 4
  %rv = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %val1 = alloca i32, align 4
  %val2 = alloca i32, align 4
  %fval = alloca double, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !668, metadata !1195), !dbg !3678
  store %struct.bufferinfo* %fragment1, %struct.bufferinfo** %fragment1.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment1.addr, metadata !669, metadata !1195), !dbg !3679
  store %struct.bufferinfo* %fragment2, %struct.bufferinfo** %fragment2.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment2.addr, metadata !670, metadata !1195), !dbg !3680
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !671, metadata !1195), !dbg !3681
  %0 = bitcast i8** %ncp to i8*, !dbg !3682
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !3682
  call void @llvm.dbg.declare(metadata i8** %ncp, metadata !672, metadata !1195), !dbg !3683
  %1 = bitcast i64* %i to i8*, !dbg !3684
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !3684
  call void @llvm.dbg.declare(metadata i64* %i, metadata !673, metadata !1195), !dbg !3685
  %2 = bitcast i32* %minval to i8*, !dbg !3686
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !3686
  call void @llvm.dbg.declare(metadata i32* %minval, metadata !674, metadata !1195), !dbg !3687
  %3 = bitcast i32* %maxval to i8*, !dbg !3686
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !3686
  call void @llvm.dbg.declare(metadata i32* %maxval, metadata !675, metadata !1195), !dbg !3688
  %4 = bitcast i32* %newval to i8*, !dbg !3686
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !3686
  call void @llvm.dbg.declare(metadata i32* %newval, metadata !676, metadata !1195), !dbg !3689
  %5 = bitcast %struct._object** %rv to i8*, !dbg !3690
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !3690
  call void @llvm.dbg.declare(metadata %struct._object** %rv, metadata !677, metadata !1195), !dbg !3691
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment1.addr, align 8, !dbg !3692, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 2, !dbg !3694
  %7 = load i64, i64* %len, align 8, !dbg !3694, !tbaa !1987
  %8 = load i32, i32* %width.addr, align 4, !dbg !3695, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %7, i32 %8), !dbg !3696
  %tobool = icmp ne i32 %call, 0, !dbg !3696
  br i1 %tobool, label %if.end, label %if.then, !dbg !3697

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3698
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3698

if.end:                                           ; preds = %entry
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment1.addr, align 8, !dbg !3699, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 2, !dbg !3701
  %10 = load i64, i64* %len1, align 8, !dbg !3701, !tbaa !1987
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment2.addr, align 8, !dbg !3702, !tbaa !1200
  %len2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 2, !dbg !3703
  %12 = load i64, i64* %len2, align 8, !dbg !3703, !tbaa !1987
  %cmp = icmp ne i64 %10, %12, !dbg !3704
  br i1 %cmp, label %if.then.3, label %if.end.4, !dbg !3705

if.then.3:                                        ; preds = %if.end
  %13 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !3706, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %13, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.49, i32 0, i32 0)), !dbg !3708
  store %struct._object* null, %struct._object** %retval, !dbg !3709
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3709

if.end.4:                                         ; preds = %if.end
  %14 = load i32, i32* %width.addr, align 4, !dbg !3710, !tbaa !1244
  %idxprom = sext i32 %14 to i64, !dbg !3711
  %arrayidx = getelementptr [5 x i32], [5 x i32]* @maxvals, i32 0, i64 %idxprom, !dbg !3711
  %15 = load i32, i32* %arrayidx, align 4, !dbg !3711, !tbaa !1244
  store i32 %15, i32* %maxval, align 4, !dbg !3712, !tbaa !1244
  %16 = load i32, i32* %width.addr, align 4, !dbg !3713, !tbaa !1244
  %idxprom5 = sext i32 %16 to i64, !dbg !3714
  %arrayidx6 = getelementptr [5 x i32], [5 x i32]* @minvals, i32 0, i64 %idxprom5, !dbg !3714
  %17 = load i32, i32* %arrayidx6, align 4, !dbg !3714, !tbaa !1244
  store i32 %17, i32* %minval, align 4, !dbg !3715, !tbaa !1244
  %18 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment1.addr, align 8, !dbg !3716, !tbaa !1200
  %len7 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %18, i32 0, i32 2, !dbg !3717
  %19 = load i64, i64* %len7, align 8, !dbg !3717, !tbaa !1987
  %call8 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %19), !dbg !3718
  store %struct._object* %call8, %struct._object** %rv, align 8, !dbg !3719, !tbaa !1200
  %20 = load %struct._object*, %struct._object** %rv, align 8, !dbg !3720, !tbaa !1200
  %cmp9 = icmp eq %struct._object* %20, null, !dbg !3722
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !3723

if.then.10:                                       ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval, !dbg !3724
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3724

if.end.11:                                        ; preds = %if.end.4
  %21 = load %struct._object*, %struct._object** %rv, align 8, !dbg !3725, !tbaa !1200
  %call12 = call i8* @PyBytes_AsString(%struct._object* %21), !dbg !3726
  store i8* %call12, i8** %ncp, align 8, !dbg !3727, !tbaa !1200
  store i64 0, i64* %i, align 8, !dbg !3728, !tbaa !1435
  br label %for.cond, !dbg !3729

for.cond:                                         ; preds = %for.inc, %if.end.11
  %22 = load i64, i64* %i, align 8, !dbg !3730, !tbaa !1435
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment1.addr, align 8, !dbg !3733, !tbaa !1200
  %len13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 2, !dbg !3734
  %24 = load i64, i64* %len13, align 8, !dbg !3734, !tbaa !1987
  %cmp14 = icmp slt i64 %22, %24, !dbg !3735
  br i1 %cmp14, label %for.body, label %for.end, !dbg !3736

for.body:                                         ; preds = %for.cond
  %25 = bitcast i32* %val1 to i8*, !dbg !3737
  call void @llvm.lifetime.start(i64 4, i8* %25) #1, !dbg !3737
  call void @llvm.dbg.declare(metadata i32* %val1, metadata !678, metadata !1195), !dbg !3738
  %26 = load i32, i32* %width.addr, align 4, !dbg !3739, !tbaa !1244
  %cmp15 = icmp eq i32 %26, 1, !dbg !3740
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !3741

cond.true:                                        ; preds = %for.body
  %27 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment1.addr, align 8, !dbg !3742, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %27, i32 0, i32 0, !dbg !3744
  %28 = load i8*, i8** %buf, align 8, !dbg !3744, !tbaa !2009
  %29 = load i64, i64* %i, align 8, !dbg !3745, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %28, i64 %29, !dbg !3746
  %30 = load i8, i8* %add.ptr, align 1, !dbg !3747, !tbaa !2013
  %conv = sext i8 %30 to i32, !dbg !3748
  br label %cond.end.45, !dbg !3741

cond.false:                                       ; preds = %for.body
  %31 = load i32, i32* %width.addr, align 4, !dbg !3749, !tbaa !1244
  %cmp16 = icmp eq i32 %31, 2, !dbg !3751
  br i1 %cmp16, label %cond.true.18, label %cond.false.22, !dbg !3752

cond.true.18:                                     ; preds = %cond.false
  %32 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment1.addr, align 8, !dbg !3753, !tbaa !1200
  %buf19 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %32, i32 0, i32 0, !dbg !3755
  %33 = load i8*, i8** %buf19, align 8, !dbg !3755, !tbaa !2009
  %34 = load i64, i64* %i, align 8, !dbg !3756, !tbaa !1435
  %add.ptr20 = getelementptr i8, i8* %33, i64 %34, !dbg !3757
  %35 = bitcast i8* %add.ptr20 to i16*, !dbg !3758
  %36 = load i16, i16* %35, align 2, !dbg !3759, !tbaa !2026
  %conv21 = sext i16 %36 to i32, !dbg !3760
  br label %cond.end.43, !dbg !3752

cond.false.22:                                    ; preds = %cond.false
  %37 = load i32, i32* %width.addr, align 4, !dbg !3761, !tbaa !1244
  %cmp23 = icmp eq i32 %37, 3, !dbg !3763
  br i1 %cmp23, label %cond.true.25, label %cond.false.40, !dbg !3764

cond.true.25:                                     ; preds = %cond.false.22
  %38 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment1.addr, align 8, !dbg !3765, !tbaa !1200
  %buf26 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %38, i32 0, i32 0, !dbg !3767
  %39 = load i8*, i8** %buf26, align 8, !dbg !3767, !tbaa !2009
  %40 = load i64, i64* %i, align 8, !dbg !3768, !tbaa !1435
  %add.ptr27 = getelementptr i8, i8* %39, i64 %40, !dbg !3769
  %arrayidx28 = getelementptr i8, i8* %add.ptr27, i64 0, !dbg !3770
  %41 = load i8, i8* %arrayidx28, align 1, !dbg !3770, !tbaa !2013
  %conv29 = zext i8 %41 to i32, !dbg !3770
  %42 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment1.addr, align 8, !dbg !3771, !tbaa !1200
  %buf30 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %42, i32 0, i32 0, !dbg !3772
  %43 = load i8*, i8** %buf30, align 8, !dbg !3772, !tbaa !2009
  %44 = load i64, i64* %i, align 8, !dbg !3773, !tbaa !1435
  %add.ptr31 = getelementptr i8, i8* %43, i64 %44, !dbg !3774
  %arrayidx32 = getelementptr i8, i8* %add.ptr31, i64 1, !dbg !3775
  %45 = load i8, i8* %arrayidx32, align 1, !dbg !3775, !tbaa !2013
  %conv33 = zext i8 %45 to i32, !dbg !3775
  %shl = shl i32 %conv33, 8, !dbg !3776
  %add = add i32 %conv29, %shl, !dbg !3777
  %46 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment1.addr, align 8, !dbg !3778, !tbaa !1200
  %buf34 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %46, i32 0, i32 0, !dbg !3779
  %47 = load i8*, i8** %buf34, align 8, !dbg !3779, !tbaa !2009
  %48 = load i64, i64* %i, align 8, !dbg !3780, !tbaa !1435
  %add.ptr35 = getelementptr i8, i8* %47, i64 %48, !dbg !3781
  %arrayidx36 = getelementptr i8, i8* %add.ptr35, i64 2, !dbg !3782
  %49 = load i8, i8* %arrayidx36, align 1, !dbg !3782, !tbaa !2013
  %conv37 = sext i8 %49 to i32, !dbg !3782
  %shl38 = shl i32 %conv37, 16, !dbg !3783
  %add39 = add i32 %add, %shl38, !dbg !3784
  br label %cond.end, !dbg !3764

cond.false.40:                                    ; preds = %cond.false.22
  %50 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment1.addr, align 8, !dbg !3785, !tbaa !1200
  %buf41 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %50, i32 0, i32 0, !dbg !3787
  %51 = load i8*, i8** %buf41, align 8, !dbg !3787, !tbaa !2009
  %52 = load i64, i64* %i, align 8, !dbg !3788, !tbaa !1435
  %add.ptr42 = getelementptr i8, i8* %51, i64 %52, !dbg !3789
  %53 = bitcast i8* %add.ptr42 to i32*, !dbg !3790
  %54 = load i32, i32* %53, align 4, !dbg !3791, !tbaa !1244
  br label %cond.end, !dbg !3764

cond.end:                                         ; preds = %cond.false.40, %cond.true.25
  %cond = phi i32 [ %add39, %cond.true.25 ], [ %54, %cond.false.40 ], !dbg !3764
  br label %cond.end.43, !dbg !3792

cond.end.43:                                      ; preds = %cond.end, %cond.true.18
  %cond44 = phi i32 [ %conv21, %cond.true.18 ], [ %cond, %cond.end ], !dbg !3752
  br label %cond.end.45, !dbg !3795

cond.end.45:                                      ; preds = %cond.end.43, %cond.true
  %cond46 = phi i32 [ %conv, %cond.true ], [ %cond44, %cond.end.43 ], !dbg !3741
  store i32 %cond46, i32* %val1, align 4, !dbg !3798, !tbaa !1244
  %55 = bitcast i32* %val2 to i8*, !dbg !3801
  call void @llvm.lifetime.start(i64 4, i8* %55) #1, !dbg !3801
  call void @llvm.dbg.declare(metadata i32* %val2, metadata !682, metadata !1195), !dbg !3802
  %56 = load i32, i32* %width.addr, align 4, !dbg !3803, !tbaa !1244
  %cmp47 = icmp eq i32 %56, 1, !dbg !3804
  br i1 %cmp47, label %cond.true.49, label %cond.false.53, !dbg !3805

cond.true.49:                                     ; preds = %cond.end.45
  %57 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment2.addr, align 8, !dbg !3806, !tbaa !1200
  %buf50 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %57, i32 0, i32 0, !dbg !3807
  %58 = load i8*, i8** %buf50, align 8, !dbg !3807, !tbaa !2009
  %59 = load i64, i64* %i, align 8, !dbg !3808, !tbaa !1435
  %add.ptr51 = getelementptr i8, i8* %58, i64 %59, !dbg !3809
  %60 = load i8, i8* %add.ptr51, align 1, !dbg !3810, !tbaa !2013
  %conv52 = sext i8 %60 to i32, !dbg !3811
  br label %cond.end.87, !dbg !3805

cond.false.53:                                    ; preds = %cond.end.45
  %61 = load i32, i32* %width.addr, align 4, !dbg !3812, !tbaa !1244
  %cmp54 = icmp eq i32 %61, 2, !dbg !3813
  br i1 %cmp54, label %cond.true.56, label %cond.false.60, !dbg !3814

cond.true.56:                                     ; preds = %cond.false.53
  %62 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment2.addr, align 8, !dbg !3815, !tbaa !1200
  %buf57 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %62, i32 0, i32 0, !dbg !3816
  %63 = load i8*, i8** %buf57, align 8, !dbg !3816, !tbaa !2009
  %64 = load i64, i64* %i, align 8, !dbg !3817, !tbaa !1435
  %add.ptr58 = getelementptr i8, i8* %63, i64 %64, !dbg !3818
  %65 = bitcast i8* %add.ptr58 to i16*, !dbg !3819
  %66 = load i16, i16* %65, align 2, !dbg !3820, !tbaa !2026
  %conv59 = sext i16 %66 to i32, !dbg !3821
  br label %cond.end.85, !dbg !3814

cond.false.60:                                    ; preds = %cond.false.53
  %67 = load i32, i32* %width.addr, align 4, !dbg !3822, !tbaa !1244
  %cmp61 = icmp eq i32 %67, 3, !dbg !3823
  br i1 %cmp61, label %cond.true.63, label %cond.false.80, !dbg !3824

cond.true.63:                                     ; preds = %cond.false.60
  %68 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment2.addr, align 8, !dbg !3825, !tbaa !1200
  %buf64 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %68, i32 0, i32 0, !dbg !3826
  %69 = load i8*, i8** %buf64, align 8, !dbg !3826, !tbaa !2009
  %70 = load i64, i64* %i, align 8, !dbg !3827, !tbaa !1435
  %add.ptr65 = getelementptr i8, i8* %69, i64 %70, !dbg !3828
  %arrayidx66 = getelementptr i8, i8* %add.ptr65, i64 0, !dbg !3829
  %71 = load i8, i8* %arrayidx66, align 1, !dbg !3829, !tbaa !2013
  %conv67 = zext i8 %71 to i32, !dbg !3829
  %72 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment2.addr, align 8, !dbg !3830, !tbaa !1200
  %buf68 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %72, i32 0, i32 0, !dbg !3831
  %73 = load i8*, i8** %buf68, align 8, !dbg !3831, !tbaa !2009
  %74 = load i64, i64* %i, align 8, !dbg !3832, !tbaa !1435
  %add.ptr69 = getelementptr i8, i8* %73, i64 %74, !dbg !3833
  %arrayidx70 = getelementptr i8, i8* %add.ptr69, i64 1, !dbg !3834
  %75 = load i8, i8* %arrayidx70, align 1, !dbg !3834, !tbaa !2013
  %conv71 = zext i8 %75 to i32, !dbg !3834
  %shl72 = shl i32 %conv71, 8, !dbg !3835
  %add73 = add i32 %conv67, %shl72, !dbg !3836
  %76 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment2.addr, align 8, !dbg !3837, !tbaa !1200
  %buf74 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %76, i32 0, i32 0, !dbg !3838
  %77 = load i8*, i8** %buf74, align 8, !dbg !3838, !tbaa !2009
  %78 = load i64, i64* %i, align 8, !dbg !3839, !tbaa !1435
  %add.ptr75 = getelementptr i8, i8* %77, i64 %78, !dbg !3840
  %arrayidx76 = getelementptr i8, i8* %add.ptr75, i64 2, !dbg !3841
  %79 = load i8, i8* %arrayidx76, align 1, !dbg !3841, !tbaa !2013
  %conv77 = sext i8 %79 to i32, !dbg !3841
  %shl78 = shl i32 %conv77, 16, !dbg !3842
  %add79 = add i32 %add73, %shl78, !dbg !3843
  br label %cond.end.83, !dbg !3824

cond.false.80:                                    ; preds = %cond.false.60
  %80 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment2.addr, align 8, !dbg !3844, !tbaa !1200
  %buf81 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %80, i32 0, i32 0, !dbg !3845
  %81 = load i8*, i8** %buf81, align 8, !dbg !3845, !tbaa !2009
  %82 = load i64, i64* %i, align 8, !dbg !3846, !tbaa !1435
  %add.ptr82 = getelementptr i8, i8* %81, i64 %82, !dbg !3847
  %83 = bitcast i8* %add.ptr82 to i32*, !dbg !3848
  %84 = load i32, i32* %83, align 4, !dbg !3849, !tbaa !1244
  br label %cond.end.83, !dbg !3824

cond.end.83:                                      ; preds = %cond.false.80, %cond.true.63
  %cond84 = phi i32 [ %add79, %cond.true.63 ], [ %84, %cond.false.80 ], !dbg !3824
  br label %cond.end.85, !dbg !3850

cond.end.85:                                      ; preds = %cond.end.83, %cond.true.56
  %cond86 = phi i32 [ %conv59, %cond.true.56 ], [ %cond84, %cond.end.83 ], !dbg !3814
  br label %cond.end.87, !dbg !3851

cond.end.87:                                      ; preds = %cond.end.85, %cond.true.49
  %cond88 = phi i32 [ %conv52, %cond.true.49 ], [ %cond86, %cond.end.85 ], !dbg !3805
  store i32 %cond88, i32* %val2, align 4, !dbg !3852, !tbaa !1244
  %85 = load i32, i32* %width.addr, align 4, !dbg !3853, !tbaa !1244
  %cmp89 = icmp slt i32 %85, 4, !dbg !3854
  br i1 %cmp89, label %if.then.91, label %if.else.101, !dbg !3855

if.then.91:                                       ; preds = %cond.end.87
  %86 = load i32, i32* %val1, align 4, !dbg !3856, !tbaa !1244
  %87 = load i32, i32* %val2, align 4, !dbg !3858, !tbaa !1244
  %add92 = add i32 %86, %87, !dbg !3859
  store i32 %add92, i32* %newval, align 4, !dbg !3860, !tbaa !1244
  %88 = load i32, i32* %newval, align 4, !dbg !3861, !tbaa !1244
  %89 = load i32, i32* %maxval, align 4, !dbg !3863, !tbaa !1244
  %cmp93 = icmp sgt i32 %88, %89, !dbg !3864
  br i1 %cmp93, label %if.then.95, label %if.else, !dbg !3865

if.then.95:                                       ; preds = %if.then.91
  %90 = load i32, i32* %maxval, align 4, !dbg !3866, !tbaa !1244
  store i32 %90, i32* %newval, align 4, !dbg !3867, !tbaa !1244
  br label %if.end.100, !dbg !3868

if.else:                                          ; preds = %if.then.91
  %91 = load i32, i32* %newval, align 4, !dbg !3869, !tbaa !1244
  %92 = load i32, i32* %minval, align 4, !dbg !3871, !tbaa !1244
  %cmp96 = icmp slt i32 %91, %92, !dbg !3872
  br i1 %cmp96, label %if.then.98, label %if.end.99, !dbg !3873

if.then.98:                                       ; preds = %if.else
  %93 = load i32, i32* %minval, align 4, !dbg !3874, !tbaa !1244
  store i32 %93, i32* %newval, align 4, !dbg !3875, !tbaa !1244
  br label %if.end.99, !dbg !3876

if.end.99:                                        ; preds = %if.then.98, %if.else
  br label %if.end.100

if.end.100:                                       ; preds = %if.end.99, %if.then.95
  br label %if.end.111, !dbg !3877

if.else.101:                                      ; preds = %cond.end.87
  %94 = bitcast double* %fval to i8*, !dbg !3878
  call void @llvm.lifetime.start(i64 8, i8* %94) #1, !dbg !3878
  call void @llvm.dbg.declare(metadata double* %fval, metadata !683, metadata !1195), !dbg !3879
  %95 = load i32, i32* %val1, align 4, !dbg !3880, !tbaa !1244
  %conv102 = sitofp i32 %95 to double, !dbg !3881
  %96 = load i32, i32* %val2, align 4, !dbg !3882, !tbaa !1244
  %conv103 = sitofp i32 %96 to double, !dbg !3883
  %add104 = fadd double %conv102, %conv103, !dbg !3884
  store double %add104, double* %fval, align 8, !dbg !3879, !tbaa !1521
  %97 = load double, double* %fval, align 8, !dbg !3885, !tbaa !1521
  %98 = load i32, i32* %minval, align 4, !dbg !3886, !tbaa !1244
  %conv105 = sitofp i32 %98 to double, !dbg !3886
  %99 = load i32, i32* %maxval, align 4, !dbg !3887, !tbaa !1244
  %conv106 = sitofp i32 %99 to double, !dbg !3887
  %call107 = call i32 @fbound(double %97, double %conv105, double %conv106), !dbg !3888
  %conv108 = sitofp i32 %call107 to double, !dbg !3888
  %call109 = call double @floor(double %conv108) #2, !dbg !3889
  %conv110 = fptosi double %call109 to i32, !dbg !3890
  store i32 %conv110, i32* %newval, align 4, !dbg !3891, !tbaa !1244
  %100 = bitcast double* %fval to i8*, !dbg !3892
  call void @llvm.lifetime.end(i64 8, i8* %100) #1, !dbg !3892
  br label %if.end.111

if.end.111:                                       ; preds = %if.else.101, %if.end.100
  br label %do.body, !dbg !3893

do.body:                                          ; preds = %if.end.111
  %101 = load i32, i32* %width.addr, align 4, !dbg !3894, !tbaa !1244
  %cmp112 = icmp eq i32 %101, 1, !dbg !3898
  br i1 %cmp112, label %if.then.114, label %if.else.118, !dbg !3899

if.then.114:                                      ; preds = %do.body
  br label %do.body.115, !dbg !3900

do.body.115:                                      ; preds = %if.then.114
  %102 = load i32, i32* %newval, align 4, !dbg !3902, !tbaa !1244
  %conv116 = trunc i32 %102 to i8, !dbg !3905
  %103 = load i8*, i8** %ncp, align 8, !dbg !3906, !tbaa !1200
  %104 = load i64, i64* %i, align 8, !dbg !3907, !tbaa !1435
  %add.ptr117 = getelementptr i8, i8* %103, i64 %104, !dbg !3908
  store i8 %conv116, i8* %add.ptr117, align 1, !dbg !3909, !tbaa !2013
  br label %do.cond, !dbg !3910

do.cond:                                          ; preds = %do.body.115
  br label %do.end, !dbg !3911

do.end:                                           ; preds = %do.cond
  br label %if.end.151, !dbg !3913

if.else.118:                                      ; preds = %do.body
  %105 = load i32, i32* %width.addr, align 4, !dbg !3915, !tbaa !1244
  %cmp119 = icmp eq i32 %105, 2, !dbg !3918
  br i1 %cmp119, label %if.then.121, label %if.else.127, !dbg !3919

if.then.121:                                      ; preds = %if.else.118
  br label %do.body.122, !dbg !3920

do.body.122:                                      ; preds = %if.then.121
  %106 = load i32, i32* %newval, align 4, !dbg !3922, !tbaa !1244
  %conv123 = trunc i32 %106 to i16, !dbg !3925
  %107 = load i8*, i8** %ncp, align 8, !dbg !3926, !tbaa !1200
  %108 = load i64, i64* %i, align 8, !dbg !3927, !tbaa !1435
  %add.ptr124 = getelementptr i8, i8* %107, i64 %108, !dbg !3928
  %109 = bitcast i8* %add.ptr124 to i16*, !dbg !3929
  store i16 %conv123, i16* %109, align 2, !dbg !3930, !tbaa !2026
  br label %do.cond.125, !dbg !3931

do.cond.125:                                      ; preds = %do.body.122
  br label %do.end.126, !dbg !3932

do.end.126:                                       ; preds = %do.cond.125
  br label %if.end.150, !dbg !3934

if.else.127:                                      ; preds = %if.else.118
  %110 = load i32, i32* %width.addr, align 4, !dbg !3936, !tbaa !1244
  %cmp128 = icmp eq i32 %110, 3, !dbg !3939
  br i1 %cmp128, label %if.then.130, label %if.else.144, !dbg !3940

if.then.130:                                      ; preds = %if.else.127
  br label %do.body.131, !dbg !3941

do.body.131:                                      ; preds = %if.then.130
  %111 = load i32, i32* %newval, align 4, !dbg !3943, !tbaa !1244
  %conv132 = trunc i32 %111 to i8, !dbg !3946
  %112 = load i8*, i8** %ncp, align 8, !dbg !3947, !tbaa !1200
  %113 = load i64, i64* %i, align 8, !dbg !3948, !tbaa !1435
  %add.ptr133 = getelementptr i8, i8* %112, i64 %113, !dbg !3949
  %arrayidx134 = getelementptr i8, i8* %add.ptr133, i64 0, !dbg !3950
  store i8 %conv132, i8* %arrayidx134, align 1, !dbg !3951, !tbaa !2013
  %114 = load i32, i32* %newval, align 4, !dbg !3952, !tbaa !1244
  %shr = ashr i32 %114, 8, !dbg !3953
  %conv135 = trunc i32 %shr to i8, !dbg !3954
  %115 = load i8*, i8** %ncp, align 8, !dbg !3955, !tbaa !1200
  %116 = load i64, i64* %i, align 8, !dbg !3956, !tbaa !1435
  %add.ptr136 = getelementptr i8, i8* %115, i64 %116, !dbg !3957
  %arrayidx137 = getelementptr i8, i8* %add.ptr136, i64 1, !dbg !3958
  store i8 %conv135, i8* %arrayidx137, align 1, !dbg !3959, !tbaa !2013
  %117 = load i32, i32* %newval, align 4, !dbg !3960, !tbaa !1244
  %shr138 = ashr i32 %117, 16, !dbg !3961
  %conv139 = trunc i32 %shr138 to i8, !dbg !3962
  %118 = load i8*, i8** %ncp, align 8, !dbg !3963, !tbaa !1200
  %119 = load i64, i64* %i, align 8, !dbg !3964, !tbaa !1435
  %add.ptr140 = getelementptr i8, i8* %118, i64 %119, !dbg !3965
  %arrayidx141 = getelementptr i8, i8* %add.ptr140, i64 2, !dbg !3966
  store i8 %conv139, i8* %arrayidx141, align 1, !dbg !3967, !tbaa !2013
  br label %do.cond.142, !dbg !3968

do.cond.142:                                      ; preds = %do.body.131
  br label %do.end.143, !dbg !3969

do.end.143:                                       ; preds = %do.cond.142
  br label %if.end.149, !dbg !3971

if.else.144:                                      ; preds = %if.else.127
  br label %do.body.145, !dbg !3973

do.body.145:                                      ; preds = %if.else.144
  %120 = load i32, i32* %newval, align 4, !dbg !3975, !tbaa !1244
  %121 = load i8*, i8** %ncp, align 8, !dbg !3978, !tbaa !1200
  %122 = load i64, i64* %i, align 8, !dbg !3979, !tbaa !1435
  %add.ptr146 = getelementptr i8, i8* %121, i64 %122, !dbg !3980
  %123 = bitcast i8* %add.ptr146 to i32*, !dbg !3981
  store i32 %120, i32* %123, align 4, !dbg !3982, !tbaa !1244
  br label %do.cond.147, !dbg !3983

do.cond.147:                                      ; preds = %do.body.145
  br label %do.end.148, !dbg !3984

do.end.148:                                       ; preds = %do.cond.147
  br label %if.end.149

if.end.149:                                       ; preds = %do.end.148, %do.end.143
  br label %if.end.150

if.end.150:                                       ; preds = %if.end.149, %do.end.126
  br label %if.end.151

if.end.151:                                       ; preds = %if.end.150, %do.end
  br label %do.cond.152, !dbg !3986

do.cond.152:                                      ; preds = %if.end.151
  br label %do.end.153, !dbg !3988

do.end.153:                                       ; preds = %do.cond.152
  %124 = bitcast i32* %val2 to i8*, !dbg !3990
  call void @llvm.lifetime.end(i64 4, i8* %124) #1, !dbg !3990
  %125 = bitcast i32* %val1 to i8*, !dbg !3990
  call void @llvm.lifetime.end(i64 4, i8* %125) #1, !dbg !3990
  br label %for.inc, !dbg !3991

for.inc:                                          ; preds = %do.end.153
  %126 = load i32, i32* %width.addr, align 4, !dbg !3992, !tbaa !1244
  %conv154 = sext i32 %126 to i64, !dbg !3992
  %127 = load i64, i64* %i, align 8, !dbg !3993, !tbaa !1435
  %add155 = add i64 %127, %conv154, !dbg !3993
  store i64 %add155, i64* %i, align 8, !dbg !3993, !tbaa !1435
  br label %for.cond, !dbg !3994

for.end:                                          ; preds = %for.cond
  %128 = load %struct._object*, %struct._object** %rv, align 8, !dbg !3995, !tbaa !1200
  store %struct._object* %128, %struct._object** %retval, !dbg !3996
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3996

cleanup:                                          ; preds = %for.end, %if.then.10, %if.then.3, %if.then
  %129 = bitcast %struct._object** %rv to i8*, !dbg !3997
  call void @llvm.lifetime.end(i64 8, i8* %129) #1, !dbg !3997
  %130 = bitcast i32* %newval to i8*, !dbg !3997
  call void @llvm.lifetime.end(i64 4, i8* %130) #1, !dbg !3997
  %131 = bitcast i32* %maxval to i8*, !dbg !3997
  call void @llvm.lifetime.end(i64 4, i8* %131) #1, !dbg !3997
  %132 = bitcast i32* %minval to i8*, !dbg !3997
  call void @llvm.lifetime.end(i64 4, i8* %132) #1, !dbg !3997
  %133 = bitcast i64* %i to i8*, !dbg !3997
  call void @llvm.lifetime.end(i64 8, i8* %133) #1, !dbg !3997
  %134 = bitcast i8** %ncp to i8*, !dbg !3997
  call void @llvm.lifetime.end(i64 8, i8* %134) #1, !dbg !3997
  %135 = load %struct._object*, %struct._object** %retval, !dbg !3997
  ret %struct._object* %135, !dbg !3997
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_bias_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width, i32 %bias) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %bias.addr = alloca i32, align 4
  %ncp = alloca i8*, align 8
  %i = alloca i64, align 8
  %val = alloca i32, align 4
  %mask = alloca i32, align 4
  %rv = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !698, metadata !1195), !dbg !3998
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !699, metadata !1195), !dbg !3999
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !700, metadata !1195), !dbg !4000
  store i32 %bias, i32* %bias.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %bias.addr, metadata !701, metadata !1195), !dbg !4001
  %0 = bitcast i8** %ncp to i8*, !dbg !4002
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4002
  call void @llvm.dbg.declare(metadata i8** %ncp, metadata !702, metadata !1195), !dbg !4003
  %1 = bitcast i64* %i to i8*, !dbg !4004
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4004
  call void @llvm.dbg.declare(metadata i64* %i, metadata !703, metadata !1195), !dbg !4005
  %2 = bitcast i32* %val to i8*, !dbg !4006
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !4006
  call void @llvm.dbg.declare(metadata i32* %val, metadata !704, metadata !1195), !dbg !4007
  store i32 0, i32* %val, align 4, !dbg !4007, !tbaa !1244
  %3 = bitcast i32* %mask to i8*, !dbg !4006
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !4006
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !705, metadata !1195), !dbg !4008
  %4 = bitcast %struct._object** %rv to i8*, !dbg !4009
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !4009
  call void @llvm.dbg.declare(metadata %struct._object** %rv, metadata !706, metadata !1195), !dbg !4010
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4011, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 2, !dbg !4013
  %6 = load i64, i64* %len, align 8, !dbg !4013, !tbaa !1987
  %7 = load i32, i32* %width.addr, align 4, !dbg !4014, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %6, i32 %7), !dbg !4015
  %tobool = icmp ne i32 %call, 0, !dbg !4015
  br i1 %tobool, label %if.end, label %if.then, !dbg !4016

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4017
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4017

if.end:                                           ; preds = %entry
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4018, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 2, !dbg !4019
  %9 = load i64, i64* %len1, align 8, !dbg !4019, !tbaa !1987
  %call2 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %9), !dbg !4020
  store %struct._object* %call2, %struct._object** %rv, align 8, !dbg !4021, !tbaa !1200
  %10 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4022, !tbaa !1200
  %cmp = icmp eq %struct._object* %10, null, !dbg !4024
  br i1 %cmp, label %if.then.3, label %if.end.4, !dbg !4025

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !4026
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4026

if.end.4:                                         ; preds = %if.end
  %11 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4027, !tbaa !1200
  %call5 = call i8* @PyBytes_AsString(%struct._object* %11), !dbg !4028
  store i8* %call5, i8** %ncp, align 8, !dbg !4029, !tbaa !1200
  %12 = load i32, i32* %width.addr, align 4, !dbg !4030, !tbaa !1244
  %idxprom = sext i32 %12 to i64, !dbg !4031
  %arrayidx = getelementptr [5 x i32], [5 x i32]* @masks, i32 0, i64 %idxprom, !dbg !4031
  %13 = load i32, i32* %arrayidx, align 4, !dbg !4031, !tbaa !1244
  store i32 %13, i32* %mask, align 4, !dbg !4032, !tbaa !1244
  store i64 0, i64* %i, align 8, !dbg !4033, !tbaa !1435
  br label %for.cond, !dbg !4035

for.cond:                                         ; preds = %for.inc, %if.end.4
  %14 = load i64, i64* %i, align 8, !dbg !4036, !tbaa !1435
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4040, !tbaa !1200
  %len6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 2, !dbg !4041
  %16 = load i64, i64* %len6, align 8, !dbg !4041, !tbaa !1987
  %cmp7 = icmp slt i64 %14, %16, !dbg !4042
  br i1 %cmp7, label %for.body, label %for.end, !dbg !4043

for.body:                                         ; preds = %for.cond
  %17 = load i32, i32* %width.addr, align 4, !dbg !4044, !tbaa !1244
  %cmp8 = icmp eq i32 %17, 1, !dbg !4047
  br i1 %cmp8, label %if.then.9, label %if.else, !dbg !4048

if.then.9:                                        ; preds = %for.body
  %18 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4049, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %18, i32 0, i32 0, !dbg !4050
  %19 = load i8*, i8** %buf, align 8, !dbg !4050, !tbaa !2009
  %20 = load i64, i64* %i, align 8, !dbg !4051, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %19, i64 %20, !dbg !4052
  %21 = load i8, i8* %add.ptr, align 1, !dbg !4053, !tbaa !2013
  %conv = zext i8 %21 to i32, !dbg !4054
  store i32 %conv, i32* %val, align 4, !dbg !4055, !tbaa !1244
  br label %if.end.39, !dbg !4056

if.else:                                          ; preds = %for.body
  %22 = load i32, i32* %width.addr, align 4, !dbg !4057, !tbaa !1244
  %cmp10 = icmp eq i32 %22, 2, !dbg !4059
  br i1 %cmp10, label %if.then.12, label %if.else.16, !dbg !4060

if.then.12:                                       ; preds = %if.else
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4061, !tbaa !1200
  %buf13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 0, !dbg !4062
  %24 = load i8*, i8** %buf13, align 8, !dbg !4062, !tbaa !2009
  %25 = load i64, i64* %i, align 8, !dbg !4063, !tbaa !1435
  %add.ptr14 = getelementptr i8, i8* %24, i64 %25, !dbg !4064
  %26 = bitcast i8* %add.ptr14 to i16*, !dbg !4065
  %27 = load i16, i16* %26, align 2, !dbg !4066, !tbaa !2026
  %conv15 = zext i16 %27 to i32, !dbg !4067
  store i32 %conv15, i32* %val, align 4, !dbg !4068, !tbaa !1244
  br label %if.end.38, !dbg !4069

if.else.16:                                       ; preds = %if.else
  %28 = load i32, i32* %width.addr, align 4, !dbg !4070, !tbaa !1244
  %cmp17 = icmp eq i32 %28, 3, !dbg !4072
  br i1 %cmp17, label %if.then.19, label %if.else.34, !dbg !4073

if.then.19:                                       ; preds = %if.else.16
  %29 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4074, !tbaa !1200
  %buf20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %29, i32 0, i32 0, !dbg !4075
  %30 = load i8*, i8** %buf20, align 8, !dbg !4075, !tbaa !2009
  %31 = load i64, i64* %i, align 8, !dbg !4076, !tbaa !1435
  %add.ptr21 = getelementptr i8, i8* %30, i64 %31, !dbg !4077
  %arrayidx22 = getelementptr i8, i8* %add.ptr21, i64 0, !dbg !4078
  %32 = load i8, i8* %arrayidx22, align 1, !dbg !4078, !tbaa !2013
  %conv23 = zext i8 %32 to i32, !dbg !4078
  %33 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4079, !tbaa !1200
  %buf24 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %33, i32 0, i32 0, !dbg !4080
  %34 = load i8*, i8** %buf24, align 8, !dbg !4080, !tbaa !2009
  %35 = load i64, i64* %i, align 8, !dbg !4081, !tbaa !1435
  %add.ptr25 = getelementptr i8, i8* %34, i64 %35, !dbg !4082
  %arrayidx26 = getelementptr i8, i8* %add.ptr25, i64 1, !dbg !4083
  %36 = load i8, i8* %arrayidx26, align 1, !dbg !4083, !tbaa !2013
  %conv27 = zext i8 %36 to i32, !dbg !4083
  %shl = shl i32 %conv27, 8, !dbg !4084
  %add = add i32 %conv23, %shl, !dbg !4085
  %37 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4086, !tbaa !1200
  %buf28 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %37, i32 0, i32 0, !dbg !4087
  %38 = load i8*, i8** %buf28, align 8, !dbg !4087, !tbaa !2009
  %39 = load i64, i64* %i, align 8, !dbg !4088, !tbaa !1435
  %add.ptr29 = getelementptr i8, i8* %38, i64 %39, !dbg !4089
  %arrayidx30 = getelementptr i8, i8* %add.ptr29, i64 2, !dbg !4090
  %40 = load i8, i8* %arrayidx30, align 1, !dbg !4090, !tbaa !2013
  %conv31 = sext i8 %40 to i32, !dbg !4090
  %shl32 = shl i32 %conv31, 16, !dbg !4091
  %add33 = add i32 %add, %shl32, !dbg !4092
  %and = and i32 %add33, 16777215, !dbg !4093
  store i32 %and, i32* %val, align 4, !dbg !4094, !tbaa !1244
  br label %if.end.37, !dbg !4095

if.else.34:                                       ; preds = %if.else.16
  %41 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4096, !tbaa !1200
  %buf35 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %41, i32 0, i32 0, !dbg !4098
  %42 = load i8*, i8** %buf35, align 8, !dbg !4098, !tbaa !2009
  %43 = load i64, i64* %i, align 8, !dbg !4099, !tbaa !1435
  %add.ptr36 = getelementptr i8, i8* %42, i64 %43, !dbg !4100
  %44 = bitcast i8* %add.ptr36 to i32*, !dbg !4101
  %45 = load i32, i32* %44, align 4, !dbg !4102, !tbaa !1244
  store i32 %45, i32* %val, align 4, !dbg !4103, !tbaa !1244
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.34, %if.then.19
  br label %if.end.38

if.end.38:                                        ; preds = %if.end.37, %if.then.12
  br label %if.end.39

if.end.39:                                        ; preds = %if.end.38, %if.then.9
  %46 = load i32, i32* %bias.addr, align 4, !dbg !4104, !tbaa !1244
  %47 = load i32, i32* %val, align 4, !dbg !4105, !tbaa !1244
  %add40 = add i32 %47, %46, !dbg !4105
  store i32 %add40, i32* %val, align 4, !dbg !4105, !tbaa !1244
  %48 = load i32, i32* %mask, align 4, !dbg !4106, !tbaa !1244
  %49 = load i32, i32* %val, align 4, !dbg !4107, !tbaa !1244
  %and41 = and i32 %49, %48, !dbg !4107
  store i32 %and41, i32* %val, align 4, !dbg !4107, !tbaa !1244
  %50 = load i32, i32* %width.addr, align 4, !dbg !4108, !tbaa !1244
  %cmp42 = icmp eq i32 %50, 1, !dbg !4110
  br i1 %cmp42, label %if.then.44, label %if.else.47, !dbg !4111

if.then.44:                                       ; preds = %if.end.39
  br label %do.body, !dbg !4112

do.body:                                          ; preds = %if.then.44
  %51 = load i32, i32* %val, align 4, !dbg !4113, !tbaa !1244
  %conv45 = trunc i32 %51 to i8, !dbg !4116
  %52 = load i8*, i8** %ncp, align 8, !dbg !4117, !tbaa !1200
  %53 = load i64, i64* %i, align 8, !dbg !4118, !tbaa !1435
  %add.ptr46 = getelementptr i8, i8* %52, i64 %53, !dbg !4119
  store i8 %conv45, i8* %add.ptr46, align 1, !dbg !4120, !tbaa !2013
  br label %do.cond, !dbg !4121

do.cond:                                          ; preds = %do.body
  br label %do.end, !dbg !4122

do.end:                                           ; preds = %do.cond
  br label %if.end.80, !dbg !4124

if.else.47:                                       ; preds = %if.end.39
  %54 = load i32, i32* %width.addr, align 4, !dbg !4126, !tbaa !1244
  %cmp48 = icmp eq i32 %54, 2, !dbg !4128
  br i1 %cmp48, label %if.then.50, label %if.else.56, !dbg !4129

if.then.50:                                       ; preds = %if.else.47
  br label %do.body.51, !dbg !4130

do.body.51:                                       ; preds = %if.then.50
  %55 = load i32, i32* %val, align 4, !dbg !4131, !tbaa !1244
  %conv52 = trunc i32 %55 to i16, !dbg !4134
  %56 = load i8*, i8** %ncp, align 8, !dbg !4135, !tbaa !1200
  %57 = load i64, i64* %i, align 8, !dbg !4136, !tbaa !1435
  %add.ptr53 = getelementptr i8, i8* %56, i64 %57, !dbg !4137
  %58 = bitcast i8* %add.ptr53 to i16*, !dbg !4138
  store i16 %conv52, i16* %58, align 2, !dbg !4139, !tbaa !2026
  br label %do.cond.54, !dbg !4140

do.cond.54:                                       ; preds = %do.body.51
  br label %do.end.55, !dbg !4141

do.end.55:                                        ; preds = %do.cond.54
  br label %if.end.79, !dbg !4143

if.else.56:                                       ; preds = %if.else.47
  %59 = load i32, i32* %width.addr, align 4, !dbg !4145, !tbaa !1244
  %cmp57 = icmp eq i32 %59, 3, !dbg !4147
  br i1 %cmp57, label %if.then.59, label %if.else.73, !dbg !4148

if.then.59:                                       ; preds = %if.else.56
  br label %do.body.60, !dbg !4149

do.body.60:                                       ; preds = %if.then.59
  %60 = load i32, i32* %val, align 4, !dbg !4150, !tbaa !1244
  %conv61 = trunc i32 %60 to i8, !dbg !4153
  %61 = load i8*, i8** %ncp, align 8, !dbg !4154, !tbaa !1200
  %62 = load i64, i64* %i, align 8, !dbg !4155, !tbaa !1435
  %add.ptr62 = getelementptr i8, i8* %61, i64 %62, !dbg !4156
  %arrayidx63 = getelementptr i8, i8* %add.ptr62, i64 0, !dbg !4157
  store i8 %conv61, i8* %arrayidx63, align 1, !dbg !4158, !tbaa !2013
  %63 = load i32, i32* %val, align 4, !dbg !4159, !tbaa !1244
  %shr = ashr i32 %63, 8, !dbg !4160
  %conv64 = trunc i32 %shr to i8, !dbg !4161
  %64 = load i8*, i8** %ncp, align 8, !dbg !4162, !tbaa !1200
  %65 = load i64, i64* %i, align 8, !dbg !4163, !tbaa !1435
  %add.ptr65 = getelementptr i8, i8* %64, i64 %65, !dbg !4164
  %arrayidx66 = getelementptr i8, i8* %add.ptr65, i64 1, !dbg !4165
  store i8 %conv64, i8* %arrayidx66, align 1, !dbg !4166, !tbaa !2013
  %66 = load i32, i32* %val, align 4, !dbg !4167, !tbaa !1244
  %shr67 = ashr i32 %66, 16, !dbg !4168
  %conv68 = trunc i32 %shr67 to i8, !dbg !4169
  %67 = load i8*, i8** %ncp, align 8, !dbg !4170, !tbaa !1200
  %68 = load i64, i64* %i, align 8, !dbg !4171, !tbaa !1435
  %add.ptr69 = getelementptr i8, i8* %67, i64 %68, !dbg !4172
  %arrayidx70 = getelementptr i8, i8* %add.ptr69, i64 2, !dbg !4173
  store i8 %conv68, i8* %arrayidx70, align 1, !dbg !4174, !tbaa !2013
  br label %do.cond.71, !dbg !4175

do.cond.71:                                       ; preds = %do.body.60
  br label %do.end.72, !dbg !4176

do.end.72:                                        ; preds = %do.cond.71
  br label %if.end.78, !dbg !4178

if.else.73:                                       ; preds = %if.else.56
  br label %do.body.74, !dbg !4180

do.body.74:                                       ; preds = %if.else.73
  %69 = load i32, i32* %val, align 4, !dbg !4182, !tbaa !1244
  %70 = load i8*, i8** %ncp, align 8, !dbg !4185, !tbaa !1200
  %71 = load i64, i64* %i, align 8, !dbg !4186, !tbaa !1435
  %add.ptr75 = getelementptr i8, i8* %70, i64 %71, !dbg !4187
  %72 = bitcast i8* %add.ptr75 to i32*, !dbg !4188
  store i32 %69, i32* %72, align 4, !dbg !4189, !tbaa !1244
  br label %do.cond.76, !dbg !4190

do.cond.76:                                       ; preds = %do.body.74
  br label %do.end.77, !dbg !4191

do.end.77:                                        ; preds = %do.cond.76
  br label %if.end.78

if.end.78:                                        ; preds = %do.end.77, %do.end.72
  br label %if.end.79

if.end.79:                                        ; preds = %if.end.78, %do.end.55
  br label %if.end.80

if.end.80:                                        ; preds = %if.end.79, %do.end
  br label %for.inc, !dbg !4193

for.inc:                                          ; preds = %if.end.80
  %73 = load i32, i32* %width.addr, align 4, !dbg !4194, !tbaa !1244
  %conv81 = sext i32 %73 to i64, !dbg !4194
  %74 = load i64, i64* %i, align 8, !dbg !4195, !tbaa !1435
  %add82 = add i64 %74, %conv81, !dbg !4195
  store i64 %add82, i64* %i, align 8, !dbg !4195, !tbaa !1435
  br label %for.cond, !dbg !4196

for.end:                                          ; preds = %for.cond
  %75 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4197, !tbaa !1200
  store %struct._object* %75, %struct._object** %retval, !dbg !4198
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4198

cleanup:                                          ; preds = %for.end, %if.then.3, %if.then
  %76 = bitcast %struct._object** %rv to i8*, !dbg !4199
  call void @llvm.lifetime.end(i64 8, i8* %76) #1, !dbg !4199
  %77 = bitcast i32* %mask to i8*, !dbg !4199
  call void @llvm.lifetime.end(i64 4, i8* %77) #1, !dbg !4199
  %78 = bitcast i32* %val to i8*, !dbg !4199
  call void @llvm.lifetime.end(i64 4, i8* %78) #1, !dbg !4199
  %79 = bitcast i64* %i to i8*, !dbg !4199
  call void @llvm.lifetime.end(i64 8, i8* %79) #1, !dbg !4199
  %80 = bitcast i8** %ncp to i8*, !dbg !4199
  call void @llvm.lifetime.end(i64 8, i8* %80) #1, !dbg !4199
  %81 = load %struct._object*, %struct._object** %retval, !dbg !4199
  ret %struct._object* %81, !dbg !4199
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_ulaw2lin_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %cp = alloca i8*, align 8
  %ncp = alloca i8*, align 8
  %i = alloca i64, align 8
  %rv = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %val = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !716, metadata !1195), !dbg !4200
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !717, metadata !1195), !dbg !4201
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !718, metadata !1195), !dbg !4202
  %0 = bitcast i8** %cp to i8*, !dbg !4203
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4203
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !719, metadata !1195), !dbg !4204
  %1 = bitcast i8** %ncp to i8*, !dbg !4205
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4205
  call void @llvm.dbg.declare(metadata i8** %ncp, metadata !720, metadata !1195), !dbg !4206
  %2 = bitcast i64* %i to i8*, !dbg !4207
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4207
  call void @llvm.dbg.declare(metadata i64* %i, metadata !721, metadata !1195), !dbg !4208
  %3 = bitcast %struct._object** %rv to i8*, !dbg !4209
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !4209
  call void @llvm.dbg.declare(metadata %struct._object** %rv, metadata !722, metadata !1195), !dbg !4210
  %4 = load i32, i32* %width.addr, align 4, !dbg !4211, !tbaa !1244
  %call = call i32 @audioop_check_size(i32 %4), !dbg !4213
  %tobool = icmp ne i32 %call, 0, !dbg !4213
  br i1 %tobool, label %if.end, label %if.then, !dbg !4214

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4215
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4215

if.end:                                           ; preds = %entry
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4216, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 2, !dbg !4218
  %6 = load i64, i64* %len, align 8, !dbg !4218, !tbaa !1987
  %7 = load i32, i32* %width.addr, align 4, !dbg !4219, !tbaa !1244
  %conv = sext i32 %7 to i64, !dbg !4219
  %div = sdiv i64 9223372036854775807, %conv, !dbg !4220
  %cmp = icmp sgt i64 %6, %div, !dbg !4221
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !4222

if.then.2:                                        ; preds = %if.end
  %8 = load %struct._object*, %struct._object** @PyExc_MemoryError, align 8, !dbg !4223, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.52, i32 0, i32 0)), !dbg !4225
  store %struct._object* null, %struct._object** %retval, !dbg !4226
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4226

if.end.3:                                         ; preds = %if.end
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4227, !tbaa !1200
  %len4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 2, !dbg !4228
  %10 = load i64, i64* %len4, align 8, !dbg !4228, !tbaa !1987
  %11 = load i32, i32* %width.addr, align 4, !dbg !4229, !tbaa !1244
  %conv5 = sext i32 %11 to i64, !dbg !4229
  %mul = mul i64 %10, %conv5, !dbg !4230
  %call6 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %mul), !dbg !4231
  store %struct._object* %call6, %struct._object** %rv, align 8, !dbg !4232, !tbaa !1200
  %12 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4233, !tbaa !1200
  %cmp7 = icmp eq %struct._object* %12, null, !dbg !4235
  br i1 %cmp7, label %if.then.9, label %if.end.10, !dbg !4236

if.then.9:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %retval, !dbg !4237
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4237

if.end.10:                                        ; preds = %if.end.3
  %13 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4238, !tbaa !1200
  %call11 = call i8* @PyBytes_AsString(%struct._object* %13), !dbg !4239
  store i8* %call11, i8** %ncp, align 8, !dbg !4240, !tbaa !1200
  %14 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4241, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %14, i32 0, i32 0, !dbg !4242
  %15 = load i8*, i8** %buf, align 8, !dbg !4242, !tbaa !2009
  store i8* %15, i8** %cp, align 8, !dbg !4243, !tbaa !1200
  store i64 0, i64* %i, align 8, !dbg !4244, !tbaa !1435
  br label %for.cond, !dbg !4245

for.cond:                                         ; preds = %for.inc, %if.end.10
  %16 = load i64, i64* %i, align 8, !dbg !4246, !tbaa !1435
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4249, !tbaa !1200
  %len12 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 2, !dbg !4250
  %18 = load i64, i64* %len12, align 8, !dbg !4250, !tbaa !1987
  %19 = load i32, i32* %width.addr, align 4, !dbg !4251, !tbaa !1244
  %conv13 = sext i32 %19 to i64, !dbg !4251
  %mul14 = mul i64 %18, %conv13, !dbg !4252
  %cmp15 = icmp slt i64 %16, %mul14, !dbg !4253
  br i1 %cmp15, label %for.body, label %for.end, !dbg !4254

for.body:                                         ; preds = %for.cond
  %20 = bitcast i32* %val to i8*, !dbg !4255
  call void @llvm.lifetime.start(i64 4, i8* %20) #1, !dbg !4255
  call void @llvm.dbg.declare(metadata i32* %val, metadata !723, metadata !1195), !dbg !4256
  %21 = load i8*, i8** %cp, align 8, !dbg !4257, !tbaa !1200
  %incdec.ptr = getelementptr i8, i8* %21, i32 1, !dbg !4257
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !4257, !tbaa !1200
  %22 = load i8, i8* %21, align 1, !dbg !4258, !tbaa !2013
  %idxprom = zext i8 %22 to i64, !dbg !4259
  %arrayidx = getelementptr [256 x i16], [256 x i16]* @_st_ulaw2linear16, i32 0, i64 %idxprom, !dbg !4259
  %23 = load i16, i16* %arrayidx, align 2, !dbg !4259, !tbaa !2026
  %conv17 = sext i16 %23 to i32, !dbg !4260
  %shl = shl i32 %conv17, 16, !dbg !4261
  store i32 %shl, i32* %val, align 4, !dbg !4256, !tbaa !1244
  br label %do.body, !dbg !4262

do.body:                                          ; preds = %for.body
  %24 = load i32, i32* %width.addr, align 4, !dbg !4263, !tbaa !1244
  %cmp18 = icmp eq i32 %24, 1, !dbg !4267
  br i1 %cmp18, label %if.then.20, label %if.else, !dbg !4268

if.then.20:                                       ; preds = %do.body
  br label %do.body.21, !dbg !4269

do.body.21:                                       ; preds = %if.then.20
  %25 = load i32, i32* %val, align 4, !dbg !4271, !tbaa !1244
  %shr = ashr i32 %25, 24, !dbg !4274
  %conv22 = trunc i32 %shr to i8, !dbg !4275
  %26 = load i8*, i8** %ncp, align 8, !dbg !4276, !tbaa !1200
  %27 = load i64, i64* %i, align 8, !dbg !4277, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %26, i64 %27, !dbg !4278
  store i8 %conv22, i8* %add.ptr, align 1, !dbg !4279, !tbaa !2013
  br label %do.cond, !dbg !4280

do.cond:                                          ; preds = %do.body.21
  br label %do.end, !dbg !4281

do.end:                                           ; preds = %do.cond
  br label %if.end.60, !dbg !4283

if.else:                                          ; preds = %do.body
  %28 = load i32, i32* %width.addr, align 4, !dbg !4285, !tbaa !1244
  %cmp23 = icmp eq i32 %28, 2, !dbg !4288
  br i1 %cmp23, label %if.then.25, label %if.else.32, !dbg !4289

if.then.25:                                       ; preds = %if.else
  br label %do.body.26, !dbg !4290

do.body.26:                                       ; preds = %if.then.25
  %29 = load i32, i32* %val, align 4, !dbg !4292, !tbaa !1244
  %shr27 = ashr i32 %29, 16, !dbg !4295
  %conv28 = trunc i32 %shr27 to i16, !dbg !4296
  %30 = load i8*, i8** %ncp, align 8, !dbg !4297, !tbaa !1200
  %31 = load i64, i64* %i, align 8, !dbg !4298, !tbaa !1435
  %add.ptr29 = getelementptr i8, i8* %30, i64 %31, !dbg !4299
  %32 = bitcast i8* %add.ptr29 to i16*, !dbg !4300
  store i16 %conv28, i16* %32, align 2, !dbg !4301, !tbaa !2026
  br label %do.cond.30, !dbg !4302

do.cond.30:                                       ; preds = %do.body.26
  br label %do.end.31, !dbg !4303

do.end.31:                                        ; preds = %do.cond.30
  br label %if.end.59, !dbg !4305

if.else.32:                                       ; preds = %if.else
  %33 = load i32, i32* %width.addr, align 4, !dbg !4307, !tbaa !1244
  %cmp33 = icmp eq i32 %33, 3, !dbg !4310
  br i1 %cmp33, label %if.then.35, label %if.else.53, !dbg !4311

if.then.35:                                       ; preds = %if.else.32
  br label %do.body.36, !dbg !4312

do.body.36:                                       ; preds = %if.then.35
  %34 = load i32, i32* %val, align 4, !dbg !4314, !tbaa !1244
  %shr37 = ashr i32 %34, 8, !dbg !4317
  %conv38 = trunc i32 %shr37 to i8, !dbg !4318
  %35 = load i8*, i8** %ncp, align 8, !dbg !4319, !tbaa !1200
  %36 = load i64, i64* %i, align 8, !dbg !4320, !tbaa !1435
  %add.ptr39 = getelementptr i8, i8* %35, i64 %36, !dbg !4321
  %arrayidx40 = getelementptr i8, i8* %add.ptr39, i64 0, !dbg !4322
  store i8 %conv38, i8* %arrayidx40, align 1, !dbg !4323, !tbaa !2013
  %37 = load i32, i32* %val, align 4, !dbg !4324, !tbaa !1244
  %shr41 = ashr i32 %37, 8, !dbg !4325
  %shr42 = ashr i32 %shr41, 8, !dbg !4326
  %conv43 = trunc i32 %shr42 to i8, !dbg !4327
  %38 = load i8*, i8** %ncp, align 8, !dbg !4328, !tbaa !1200
  %39 = load i64, i64* %i, align 8, !dbg !4329, !tbaa !1435
  %add.ptr44 = getelementptr i8, i8* %38, i64 %39, !dbg !4330
  %arrayidx45 = getelementptr i8, i8* %add.ptr44, i64 1, !dbg !4331
  store i8 %conv43, i8* %arrayidx45, align 1, !dbg !4332, !tbaa !2013
  %40 = load i32, i32* %val, align 4, !dbg !4333, !tbaa !1244
  %shr46 = ashr i32 %40, 8, !dbg !4334
  %shr47 = ashr i32 %shr46, 16, !dbg !4335
  %conv48 = trunc i32 %shr47 to i8, !dbg !4336
  %41 = load i8*, i8** %ncp, align 8, !dbg !4337, !tbaa !1200
  %42 = load i64, i64* %i, align 8, !dbg !4338, !tbaa !1435
  %add.ptr49 = getelementptr i8, i8* %41, i64 %42, !dbg !4339
  %arrayidx50 = getelementptr i8, i8* %add.ptr49, i64 2, !dbg !4340
  store i8 %conv48, i8* %arrayidx50, align 1, !dbg !4341, !tbaa !2013
  br label %do.cond.51, !dbg !4342

do.cond.51:                                       ; preds = %do.body.36
  br label %do.end.52, !dbg !4343

do.end.52:                                        ; preds = %do.cond.51
  br label %if.end.58, !dbg !4345

if.else.53:                                       ; preds = %if.else.32
  br label %do.body.54, !dbg !4347

do.body.54:                                       ; preds = %if.else.53
  %43 = load i32, i32* %val, align 4, !dbg !4349, !tbaa !1244
  %44 = load i8*, i8** %ncp, align 8, !dbg !4352, !tbaa !1200
  %45 = load i64, i64* %i, align 8, !dbg !4353, !tbaa !1435
  %add.ptr55 = getelementptr i8, i8* %44, i64 %45, !dbg !4354
  %46 = bitcast i8* %add.ptr55 to i32*, !dbg !4355
  store i32 %43, i32* %46, align 4, !dbg !4356, !tbaa !1244
  br label %do.cond.56, !dbg !4357

do.cond.56:                                       ; preds = %do.body.54
  br label %do.end.57, !dbg !4358

do.end.57:                                        ; preds = %do.cond.56
  br label %if.end.58

if.end.58:                                        ; preds = %do.end.57, %do.end.52
  br label %if.end.59

if.end.59:                                        ; preds = %if.end.58, %do.end.31
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %do.end
  br label %do.cond.61, !dbg !4360

do.cond.61:                                       ; preds = %if.end.60
  br label %do.end.62, !dbg !4362

do.end.62:                                        ; preds = %do.cond.61
  %47 = bitcast i32* %val to i8*, !dbg !4364
  call void @llvm.lifetime.end(i64 4, i8* %47) #1, !dbg !4364
  br label %for.inc, !dbg !4365

for.inc:                                          ; preds = %do.end.62
  %48 = load i32, i32* %width.addr, align 4, !dbg !4366, !tbaa !1244
  %conv63 = sext i32 %48 to i64, !dbg !4366
  %49 = load i64, i64* %i, align 8, !dbg !4367, !tbaa !1435
  %add = add i64 %49, %conv63, !dbg !4367
  store i64 %add, i64* %i, align 8, !dbg !4367, !tbaa !1435
  br label %for.cond, !dbg !4368

for.end:                                          ; preds = %for.cond
  %50 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4369, !tbaa !1200
  store %struct._object* %50, %struct._object** %retval, !dbg !4370
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4370

cleanup:                                          ; preds = %for.end, %if.then.9, %if.then.2, %if.then
  %51 = bitcast %struct._object** %rv to i8*, !dbg !4371
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !4371
  %52 = bitcast i64* %i to i8*, !dbg !4371
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !4371
  %53 = bitcast i8** %ncp to i8*, !dbg !4371
  call void @llvm.lifetime.end(i64 8, i8* %53) #1, !dbg !4371
  %54 = bitcast i8** %cp to i8*, !dbg !4371
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !4371
  %55 = load %struct._object*, %struct._object** %retval, !dbg !4371
  ret %struct._object* %55, !dbg !4371
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_lin2ulaw_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %ncp = alloca i8*, align 8
  %i = alloca i64, align 8
  %rv = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %val = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !736, metadata !1195), !dbg !4372
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !737, metadata !1195), !dbg !4373
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !738, metadata !1195), !dbg !4374
  %0 = bitcast i8** %ncp to i8*, !dbg !4375
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4375
  call void @llvm.dbg.declare(metadata i8** %ncp, metadata !739, metadata !1195), !dbg !4376
  %1 = bitcast i64* %i to i8*, !dbg !4377
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4377
  call void @llvm.dbg.declare(metadata i64* %i, metadata !740, metadata !1195), !dbg !4378
  %2 = bitcast %struct._object** %rv to i8*, !dbg !4379
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4379
  call void @llvm.dbg.declare(metadata %struct._object** %rv, metadata !741, metadata !1195), !dbg !4380
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4381, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 2, !dbg !4383
  %4 = load i64, i64* %len, align 8, !dbg !4383, !tbaa !1987
  %5 = load i32, i32* %width.addr, align 4, !dbg !4384, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %4, i32 %5), !dbg !4385
  %tobool = icmp ne i32 %call, 0, !dbg !4385
  br i1 %tobool, label %if.end, label %if.then, !dbg !4386

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4387
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4387

if.end:                                           ; preds = %entry
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4388, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 2, !dbg !4389
  %7 = load i64, i64* %len1, align 8, !dbg !4389, !tbaa !1987
  %8 = load i32, i32* %width.addr, align 4, !dbg !4390, !tbaa !1244
  %conv = sext i32 %8 to i64, !dbg !4390
  %div = sdiv i64 %7, %conv, !dbg !4391
  %call2 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %div), !dbg !4392
  store %struct._object* %call2, %struct._object** %rv, align 8, !dbg !4393, !tbaa !1200
  %9 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4394, !tbaa !1200
  %cmp = icmp eq %struct._object* %9, null, !dbg !4396
  br i1 %cmp, label %if.then.4, label %if.end.5, !dbg !4397

if.then.4:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !4398
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4398

if.end.5:                                         ; preds = %if.end
  %10 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4399, !tbaa !1200
  %call6 = call i8* @PyBytes_AsString(%struct._object* %10), !dbg !4400
  store i8* %call6, i8** %ncp, align 8, !dbg !4401, !tbaa !1200
  store i64 0, i64* %i, align 8, !dbg !4402, !tbaa !1435
  br label %for.cond, !dbg !4403

for.cond:                                         ; preds = %for.inc, %if.end.5
  %11 = load i64, i64* %i, align 8, !dbg !4404, !tbaa !1435
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4407, !tbaa !1200
  %len7 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 2, !dbg !4408
  %13 = load i64, i64* %len7, align 8, !dbg !4408, !tbaa !1987
  %cmp8 = icmp slt i64 %11, %13, !dbg !4409
  br i1 %cmp8, label %for.body, label %for.end, !dbg !4410

for.body:                                         ; preds = %for.cond
  %14 = bitcast i32* %val to i8*, !dbg !4411
  call void @llvm.lifetime.start(i64 4, i8* %14) #1, !dbg !4411
  call void @llvm.dbg.declare(metadata i32* %val, metadata !742, metadata !1195), !dbg !4412
  %15 = load i32, i32* %width.addr, align 4, !dbg !4413, !tbaa !1244
  %cmp10 = icmp eq i32 %15, 1, !dbg !4414
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !4415

cond.true:                                        ; preds = %for.body
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4416, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 0, !dbg !4418
  %17 = load i8*, i8** %buf, align 8, !dbg !4418, !tbaa !2009
  %18 = load i64, i64* %i, align 8, !dbg !4419, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %17, i64 %18, !dbg !4420
  %19 = load i8, i8* %add.ptr, align 1, !dbg !4421, !tbaa !2013
  %conv12 = sext i8 %19 to i32, !dbg !4422
  %shl = shl i32 %conv12, 24, !dbg !4423
  br label %cond.end.44, !dbg !4415

cond.false:                                       ; preds = %for.body
  %20 = load i32, i32* %width.addr, align 4, !dbg !4424, !tbaa !1244
  %cmp13 = icmp eq i32 %20, 2, !dbg !4426
  br i1 %cmp13, label %cond.true.15, label %cond.false.20, !dbg !4427

cond.true.15:                                     ; preds = %cond.false
  %21 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4428, !tbaa !1200
  %buf16 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %21, i32 0, i32 0, !dbg !4430
  %22 = load i8*, i8** %buf16, align 8, !dbg !4430, !tbaa !2009
  %23 = load i64, i64* %i, align 8, !dbg !4431, !tbaa !1435
  %add.ptr17 = getelementptr i8, i8* %22, i64 %23, !dbg !4432
  %24 = bitcast i8* %add.ptr17 to i16*, !dbg !4433
  %25 = load i16, i16* %24, align 2, !dbg !4434, !tbaa !2026
  %conv18 = sext i16 %25 to i32, !dbg !4435
  %shl19 = shl i32 %conv18, 16, !dbg !4436
  br label %cond.end.42, !dbg !4427

cond.false.20:                                    ; preds = %cond.false
  %26 = load i32, i32* %width.addr, align 4, !dbg !4437, !tbaa !1244
  %cmp21 = icmp eq i32 %26, 3, !dbg !4439
  br i1 %cmp21, label %cond.true.23, label %cond.false.39, !dbg !4440

cond.true.23:                                     ; preds = %cond.false.20
  %27 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4441, !tbaa !1200
  %buf24 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %27, i32 0, i32 0, !dbg !4443
  %28 = load i8*, i8** %buf24, align 8, !dbg !4443, !tbaa !2009
  %29 = load i64, i64* %i, align 8, !dbg !4444, !tbaa !1435
  %add.ptr25 = getelementptr i8, i8* %28, i64 %29, !dbg !4445
  %arrayidx = getelementptr i8, i8* %add.ptr25, i64 0, !dbg !4446
  %30 = load i8, i8* %arrayidx, align 1, !dbg !4446, !tbaa !2013
  %conv26 = zext i8 %30 to i32, !dbg !4446
  %31 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4447, !tbaa !1200
  %buf27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %31, i32 0, i32 0, !dbg !4448
  %32 = load i8*, i8** %buf27, align 8, !dbg !4448, !tbaa !2009
  %33 = load i64, i64* %i, align 8, !dbg !4449, !tbaa !1435
  %add.ptr28 = getelementptr i8, i8* %32, i64 %33, !dbg !4450
  %arrayidx29 = getelementptr i8, i8* %add.ptr28, i64 1, !dbg !4451
  %34 = load i8, i8* %arrayidx29, align 1, !dbg !4451, !tbaa !2013
  %conv30 = zext i8 %34 to i32, !dbg !4451
  %shl31 = shl i32 %conv30, 8, !dbg !4452
  %add = add i32 %conv26, %shl31, !dbg !4453
  %35 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4454, !tbaa !1200
  %buf32 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %35, i32 0, i32 0, !dbg !4455
  %36 = load i8*, i8** %buf32, align 8, !dbg !4455, !tbaa !2009
  %37 = load i64, i64* %i, align 8, !dbg !4456, !tbaa !1435
  %add.ptr33 = getelementptr i8, i8* %36, i64 %37, !dbg !4457
  %arrayidx34 = getelementptr i8, i8* %add.ptr33, i64 2, !dbg !4458
  %38 = load i8, i8* %arrayidx34, align 1, !dbg !4458, !tbaa !2013
  %conv35 = sext i8 %38 to i32, !dbg !4458
  %shl36 = shl i32 %conv35, 16, !dbg !4459
  %add37 = add i32 %add, %shl36, !dbg !4460
  %shl38 = shl i32 %add37, 8, !dbg !4461
  br label %cond.end, !dbg !4440

cond.false.39:                                    ; preds = %cond.false.20
  %39 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4462, !tbaa !1200
  %buf40 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %39, i32 0, i32 0, !dbg !4464
  %40 = load i8*, i8** %buf40, align 8, !dbg !4464, !tbaa !2009
  %41 = load i64, i64* %i, align 8, !dbg !4465, !tbaa !1435
  %add.ptr41 = getelementptr i8, i8* %40, i64 %41, !dbg !4466
  %42 = bitcast i8* %add.ptr41 to i32*, !dbg !4467
  %43 = load i32, i32* %42, align 4, !dbg !4468, !tbaa !1244
  br label %cond.end, !dbg !4440

cond.end:                                         ; preds = %cond.false.39, %cond.true.23
  %cond = phi i32 [ %shl38, %cond.true.23 ], [ %43, %cond.false.39 ], !dbg !4440
  br label %cond.end.42, !dbg !4469

cond.end.42:                                      ; preds = %cond.end, %cond.true.15
  %cond43 = phi i32 [ %shl19, %cond.true.15 ], [ %cond, %cond.end ], !dbg !4427
  br label %cond.end.44, !dbg !4472

cond.end.44:                                      ; preds = %cond.end.42, %cond.true
  %cond45 = phi i32 [ %shl, %cond.true ], [ %cond43, %cond.end.42 ], !dbg !4415
  store i32 %cond45, i32* %val, align 4, !dbg !4475, !tbaa !1244
  %44 = load i32, i32* %val, align 4, !dbg !4478, !tbaa !1244
  %shr = ashr i32 %44, 18, !dbg !4479
  %conv46 = trunc i32 %shr to i16, !dbg !4478
  %call47 = call zeroext i8 @st_14linear2ulaw(i16 signext %conv46), !dbg !4480
  %45 = load i8*, i8** %ncp, align 8, !dbg !4481, !tbaa !1200
  %incdec.ptr = getelementptr i8, i8* %45, i32 1, !dbg !4481
  store i8* %incdec.ptr, i8** %ncp, align 8, !dbg !4481, !tbaa !1200
  store i8 %call47, i8* %45, align 1, !dbg !4482, !tbaa !2013
  %46 = bitcast i32* %val to i8*, !dbg !4483
  call void @llvm.lifetime.end(i64 4, i8* %46) #1, !dbg !4483
  br label %for.inc, !dbg !4484

for.inc:                                          ; preds = %cond.end.44
  %47 = load i32, i32* %width.addr, align 4, !dbg !4485, !tbaa !1244
  %conv48 = sext i32 %47 to i64, !dbg !4485
  %48 = load i64, i64* %i, align 8, !dbg !4486, !tbaa !1435
  %add49 = add i64 %48, %conv48, !dbg !4486
  store i64 %add49, i64* %i, align 8, !dbg !4486, !tbaa !1435
  br label %for.cond, !dbg !4487

for.end:                                          ; preds = %for.cond
  %49 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4488, !tbaa !1200
  store %struct._object* %49, %struct._object** %retval, !dbg !4489
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4489

cleanup:                                          ; preds = %for.end, %if.then.4, %if.then
  %50 = bitcast %struct._object** %rv to i8*, !dbg !4490
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !4490
  %51 = bitcast i64* %i to i8*, !dbg !4490
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !4490
  %52 = bitcast i8** %ncp to i8*, !dbg !4490
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !4490
  %53 = load %struct._object*, %struct._object** %retval, !dbg !4490
  ret %struct._object* %53, !dbg !4490
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @st_14linear2ulaw(i16 signext %pcm_val) #0 {
entry:
  %retval = alloca i8, align 1
  %pcm_val.addr = alloca i16, align 2
  %mask = alloca i16, align 2
  %seg = alloca i16, align 2
  %uval = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store i16 %pcm_val, i16* %pcm_val.addr, align 2, !tbaa !2026
  call void @llvm.dbg.declare(metadata i16* %pcm_val.addr, metadata !751, metadata !1195), !dbg !4491
  %0 = bitcast i16* %mask to i8*, !dbg !4492
  call void @llvm.lifetime.start(i64 2, i8* %0) #1, !dbg !4492
  call void @llvm.dbg.declare(metadata i16* %mask, metadata !752, metadata !1195), !dbg !4493
  %1 = bitcast i16* %seg to i8*, !dbg !4494
  call void @llvm.lifetime.start(i64 2, i8* %1) #1, !dbg !4494
  call void @llvm.dbg.declare(metadata i16* %seg, metadata !753, metadata !1195), !dbg !4495
  call void @llvm.lifetime.start(i64 1, i8* %uval) #1, !dbg !4496
  call void @llvm.dbg.declare(metadata i8* %uval, metadata !754, metadata !1195), !dbg !4497
  %2 = load i16, i16* %pcm_val.addr, align 2, !dbg !4498, !tbaa !2026
  %conv = sext i16 %2 to i32, !dbg !4498
  %cmp = icmp slt i32 %conv, 0, !dbg !4500
  br i1 %cmp, label %if.then, label %if.else, !dbg !4501

if.then:                                          ; preds = %entry
  %3 = load i16, i16* %pcm_val.addr, align 2, !dbg !4502, !tbaa !2026
  %conv2 = sext i16 %3 to i32, !dbg !4502
  %sub = sub i32 0, %conv2, !dbg !4504
  %conv3 = trunc i32 %sub to i16, !dbg !4504
  store i16 %conv3, i16* %pcm_val.addr, align 2, !dbg !4505, !tbaa !2026
  store i16 127, i16* %mask, align 2, !dbg !4506, !tbaa !2026
  br label %if.end, !dbg !4507

if.else:                                          ; preds = %entry
  store i16 255, i16* %mask, align 2, !dbg !4508, !tbaa !2026
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i16, i16* %pcm_val.addr, align 2, !dbg !4510, !tbaa !2026
  %conv4 = sext i16 %4 to i32, !dbg !4510
  %cmp5 = icmp sgt i32 %conv4, 32635, !dbg !4512
  br i1 %cmp5, label %if.then.7, label %if.end.8, !dbg !4513

if.then.7:                                        ; preds = %if.end
  store i16 32635, i16* %pcm_val.addr, align 2, !dbg !4514, !tbaa !2026
  br label %if.end.8, !dbg !4516

if.end.8:                                         ; preds = %if.then.7, %if.end
  %5 = load i16, i16* %pcm_val.addr, align 2, !dbg !4517, !tbaa !2026
  %conv9 = sext i16 %5 to i32, !dbg !4517
  %add = add i32 %conv9, 33, !dbg !4517
  %conv10 = trunc i32 %add to i16, !dbg !4517
  store i16 %conv10, i16* %pcm_val.addr, align 2, !dbg !4517, !tbaa !2026
  %6 = load i16, i16* %pcm_val.addr, align 2, !dbg !4518, !tbaa !2026
  %call = call signext i16 @search(i16 signext %6, i16* getelementptr inbounds ([8 x i16], [8 x i16]* @seg_uend, i32 0, i32 0), i32 8), !dbg !4519
  store i16 %call, i16* %seg, align 2, !dbg !4520, !tbaa !2026
  %7 = load i16, i16* %seg, align 2, !dbg !4521, !tbaa !2026
  %conv11 = sext i16 %7 to i32, !dbg !4521
  %cmp12 = icmp sge i32 %conv11, 8, !dbg !4523
  br i1 %cmp12, label %if.then.14, label %if.else.17, !dbg !4524

if.then.14:                                       ; preds = %if.end.8
  %8 = load i16, i16* %mask, align 2, !dbg !4525, !tbaa !2026
  %conv15 = sext i16 %8 to i32, !dbg !4525
  %xor = xor i32 127, %conv15, !dbg !4526
  %conv16 = trunc i32 %xor to i8, !dbg !4527
  store i8 %conv16, i8* %retval, !dbg !4528
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4528

if.else.17:                                       ; preds = %if.end.8
  %9 = load i16, i16* %seg, align 2, !dbg !4529, !tbaa !2026
  %conv18 = sext i16 %9 to i32, !dbg !4529
  %shl = shl i32 %conv18, 4, !dbg !4531
  %conv19 = trunc i32 %shl to i8, !dbg !4532
  %conv20 = zext i8 %conv19 to i32, !dbg !4532
  %10 = load i16, i16* %pcm_val.addr, align 2, !dbg !4533, !tbaa !2026
  %conv21 = sext i16 %10 to i32, !dbg !4533
  %11 = load i16, i16* %seg, align 2, !dbg !4534, !tbaa !2026
  %conv22 = sext i16 %11 to i32, !dbg !4534
  %add23 = add i32 %conv22, 1, !dbg !4535
  %shr = ashr i32 %conv21, %add23, !dbg !4536
  %and = and i32 %shr, 15, !dbg !4537
  %or = or i32 %conv20, %and, !dbg !4538
  %conv24 = trunc i32 %or to i8, !dbg !4532
  store i8 %conv24, i8* %uval, align 1, !dbg !4539, !tbaa !2013
  %12 = load i8, i8* %uval, align 1, !dbg !4540, !tbaa !2013
  %conv25 = zext i8 %12 to i32, !dbg !4540
  %13 = load i16, i16* %mask, align 2, !dbg !4541, !tbaa !2026
  %conv26 = sext i16 %13 to i32, !dbg !4541
  %xor27 = xor i32 %conv25, %conv26, !dbg !4542
  %conv28 = trunc i32 %xor27 to i8, !dbg !4543
  store i8 %conv28, i8* %retval, !dbg !4544
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4544

cleanup:                                          ; preds = %if.else.17, %if.then.14
  call void @llvm.lifetime.end(i64 1, i8* %uval) #1, !dbg !4545
  %14 = bitcast i16* %seg to i8*, !dbg !4545
  call void @llvm.lifetime.end(i64 2, i8* %14) #1, !dbg !4545
  %15 = bitcast i16* %mask to i8*, !dbg !4545
  call void @llvm.lifetime.end(i64 2, i8* %15) #1, !dbg !4545
  %16 = load i8, i8* %retval, !dbg !4545
  ret i8 %16, !dbg !4545
}

; Function Attrs: nounwind uwtable
define internal signext i16 @search(i16 signext %val, i16* %table, i32 %size) #0 {
entry:
  %retval = alloca i16, align 2
  %val.addr = alloca i16, align 2
  %table.addr = alloca i16*, align 8
  %size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store i16 %val, i16* %val.addr, align 2, !tbaa !2026
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !760, metadata !1195), !dbg !4546
  store i16* %table, i16** %table.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata i16** %table.addr, metadata !761, metadata !1195), !dbg !4547
  store i32 %size, i32* %size.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !762, metadata !1195), !dbg !4548
  %0 = bitcast i32* %i to i8*, !dbg !4549
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !4549
  call void @llvm.dbg.declare(metadata i32* %i, metadata !763, metadata !1195), !dbg !4550
  store i32 0, i32* %i, align 4, !dbg !4551, !tbaa !1244
  br label %for.cond, !dbg !4553

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !4554, !tbaa !1244
  %2 = load i32, i32* %size.addr, align 4, !dbg !4558, !tbaa !1244
  %cmp = icmp slt i32 %1, %2, !dbg !4559
  br i1 %cmp, label %for.body, label %for.end, !dbg !4560

for.body:                                         ; preds = %for.cond
  %3 = load i16, i16* %val.addr, align 2, !dbg !4561, !tbaa !2026
  %conv = sext i16 %3 to i32, !dbg !4561
  %4 = load i16*, i16** %table.addr, align 8, !dbg !4564, !tbaa !1200
  %incdec.ptr = getelementptr i16, i16* %4, i32 1, !dbg !4564
  store i16* %incdec.ptr, i16** %table.addr, align 8, !dbg !4564, !tbaa !1200
  %5 = load i16, i16* %4, align 2, !dbg !4565, !tbaa !2026
  %conv1 = sext i16 %5 to i32, !dbg !4565
  %cmp2 = icmp sle i32 %conv, %conv1, !dbg !4566
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4567

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !4568, !tbaa !1244
  %conv4 = trunc i32 %6 to i16, !dbg !4569
  store i16 %conv4, i16* %retval, !dbg !4570
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4570

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4571

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !4572, !tbaa !1244
  %inc = add i32 %7, 1, !dbg !4572
  store i32 %inc, i32* %i, align 4, !dbg !4572, !tbaa !1244
  br label %for.cond, !dbg !4573

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* %size.addr, align 4, !dbg !4574, !tbaa !1244
  %conv5 = trunc i32 %8 to i16, !dbg !4575
  store i16 %conv5, i16* %retval, !dbg !4576
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4576

cleanup:                                          ; preds = %for.end, %if.then
  %9 = bitcast i32* %i to i8*, !dbg !4577
  call void @llvm.lifetime.end(i64 4, i8* %9) #1, !dbg !4577
  %10 = load i16, i16* %retval, !dbg !4577
  ret i16 %10, !dbg !4577
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_alaw2lin_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %cp = alloca i8*, align 8
  %ncp = alloca i8*, align 8
  %i = alloca i64, align 8
  %val = alloca i32, align 4
  %rv = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !773, metadata !1195), !dbg !4578
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !774, metadata !1195), !dbg !4579
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !775, metadata !1195), !dbg !4580
  %0 = bitcast i8** %cp to i8*, !dbg !4581
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4581
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !776, metadata !1195), !dbg !4582
  %1 = bitcast i8** %ncp to i8*, !dbg !4583
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4583
  call void @llvm.dbg.declare(metadata i8** %ncp, metadata !777, metadata !1195), !dbg !4584
  %2 = bitcast i64* %i to i8*, !dbg !4585
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4585
  call void @llvm.dbg.declare(metadata i64* %i, metadata !778, metadata !1195), !dbg !4586
  %3 = bitcast i32* %val to i8*, !dbg !4587
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !4587
  call void @llvm.dbg.declare(metadata i32* %val, metadata !779, metadata !1195), !dbg !4588
  %4 = bitcast %struct._object** %rv to i8*, !dbg !4589
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !4589
  call void @llvm.dbg.declare(metadata %struct._object** %rv, metadata !780, metadata !1195), !dbg !4590
  %5 = load i32, i32* %width.addr, align 4, !dbg !4591, !tbaa !1244
  %call = call i32 @audioop_check_size(i32 %5), !dbg !4593
  %tobool = icmp ne i32 %call, 0, !dbg !4593
  br i1 %tobool, label %if.end, label %if.then, !dbg !4594

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4595
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4595

if.end:                                           ; preds = %entry
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4596, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 2, !dbg !4598
  %7 = load i64, i64* %len, align 8, !dbg !4598, !tbaa !1987
  %8 = load i32, i32* %width.addr, align 4, !dbg !4599, !tbaa !1244
  %conv = sext i32 %8 to i64, !dbg !4599
  %div = sdiv i64 9223372036854775807, %conv, !dbg !4600
  %cmp = icmp sgt i64 %7, %div, !dbg !4601
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !4602

if.then.2:                                        ; preds = %if.end
  %9 = load %struct._object*, %struct._object** @PyExc_MemoryError, align 8, !dbg !4603, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.52, i32 0, i32 0)), !dbg !4605
  store %struct._object* null, %struct._object** %retval, !dbg !4606
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4606

if.end.3:                                         ; preds = %if.end
  %10 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4607, !tbaa !1200
  %len4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %10, i32 0, i32 2, !dbg !4608
  %11 = load i64, i64* %len4, align 8, !dbg !4608, !tbaa !1987
  %12 = load i32, i32* %width.addr, align 4, !dbg !4609, !tbaa !1244
  %conv5 = sext i32 %12 to i64, !dbg !4609
  %mul = mul i64 %11, %conv5, !dbg !4610
  %call6 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %mul), !dbg !4611
  store %struct._object* %call6, %struct._object** %rv, align 8, !dbg !4612, !tbaa !1200
  %13 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4613, !tbaa !1200
  %cmp7 = icmp eq %struct._object* %13, null, !dbg !4615
  br i1 %cmp7, label %if.then.9, label %if.end.10, !dbg !4616

if.then.9:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %retval, !dbg !4617
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4617

if.end.10:                                        ; preds = %if.end.3
  %14 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4618, !tbaa !1200
  %call11 = call i8* @PyBytes_AsString(%struct._object* %14), !dbg !4619
  store i8* %call11, i8** %ncp, align 8, !dbg !4620, !tbaa !1200
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4621, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 0, !dbg !4622
  %16 = load i8*, i8** %buf, align 8, !dbg !4622, !tbaa !2009
  store i8* %16, i8** %cp, align 8, !dbg !4623, !tbaa !1200
  store i64 0, i64* %i, align 8, !dbg !4624, !tbaa !1435
  br label %for.cond, !dbg !4626

for.cond:                                         ; preds = %for.inc, %if.end.10
  %17 = load i64, i64* %i, align 8, !dbg !4627, !tbaa !1435
  %18 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4631, !tbaa !1200
  %len12 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %18, i32 0, i32 2, !dbg !4632
  %19 = load i64, i64* %len12, align 8, !dbg !4632, !tbaa !1987
  %20 = load i32, i32* %width.addr, align 4, !dbg !4633, !tbaa !1244
  %conv13 = sext i32 %20 to i64, !dbg !4633
  %mul14 = mul i64 %19, %conv13, !dbg !4634
  %cmp15 = icmp slt i64 %17, %mul14, !dbg !4635
  br i1 %cmp15, label %for.body, label %for.end, !dbg !4636

for.body:                                         ; preds = %for.cond
  %21 = load i8*, i8** %cp, align 8, !dbg !4637, !tbaa !1200
  %incdec.ptr = getelementptr i8, i8* %21, i32 1, !dbg !4637
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !4637, !tbaa !1200
  %22 = load i8, i8* %21, align 1, !dbg !4639, !tbaa !2013
  %idxprom = zext i8 %22 to i64, !dbg !4640
  %arrayidx = getelementptr [256 x i16], [256 x i16]* @_st_alaw2linear16, i32 0, i64 %idxprom, !dbg !4640
  %23 = load i16, i16* %arrayidx, align 2, !dbg !4640, !tbaa !2026
  %conv17 = sext i16 %23 to i32, !dbg !4641
  %shl = shl i32 %conv17, 16, !dbg !4642
  store i32 %shl, i32* %val, align 4, !dbg !4643, !tbaa !1244
  br label %do.body, !dbg !4644

do.body:                                          ; preds = %for.body
  %24 = load i32, i32* %width.addr, align 4, !dbg !4645, !tbaa !1244
  %cmp18 = icmp eq i32 %24, 1, !dbg !4649
  br i1 %cmp18, label %if.then.20, label %if.else, !dbg !4650

if.then.20:                                       ; preds = %do.body
  br label %do.body.21, !dbg !4651

do.body.21:                                       ; preds = %if.then.20
  %25 = load i32, i32* %val, align 4, !dbg !4653, !tbaa !1244
  %shr = ashr i32 %25, 24, !dbg !4656
  %conv22 = trunc i32 %shr to i8, !dbg !4657
  %26 = load i8*, i8** %ncp, align 8, !dbg !4658, !tbaa !1200
  %27 = load i64, i64* %i, align 8, !dbg !4659, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %26, i64 %27, !dbg !4660
  store i8 %conv22, i8* %add.ptr, align 1, !dbg !4661, !tbaa !2013
  br label %do.cond, !dbg !4662

do.cond:                                          ; preds = %do.body.21
  br label %do.end, !dbg !4663

do.end:                                           ; preds = %do.cond
  br label %if.end.60, !dbg !4665

if.else:                                          ; preds = %do.body
  %28 = load i32, i32* %width.addr, align 4, !dbg !4667, !tbaa !1244
  %cmp23 = icmp eq i32 %28, 2, !dbg !4670
  br i1 %cmp23, label %if.then.25, label %if.else.32, !dbg !4671

if.then.25:                                       ; preds = %if.else
  br label %do.body.26, !dbg !4672

do.body.26:                                       ; preds = %if.then.25
  %29 = load i32, i32* %val, align 4, !dbg !4674, !tbaa !1244
  %shr27 = ashr i32 %29, 16, !dbg !4677
  %conv28 = trunc i32 %shr27 to i16, !dbg !4678
  %30 = load i8*, i8** %ncp, align 8, !dbg !4679, !tbaa !1200
  %31 = load i64, i64* %i, align 8, !dbg !4680, !tbaa !1435
  %add.ptr29 = getelementptr i8, i8* %30, i64 %31, !dbg !4681
  %32 = bitcast i8* %add.ptr29 to i16*, !dbg !4682
  store i16 %conv28, i16* %32, align 2, !dbg !4683, !tbaa !2026
  br label %do.cond.30, !dbg !4684

do.cond.30:                                       ; preds = %do.body.26
  br label %do.end.31, !dbg !4685

do.end.31:                                        ; preds = %do.cond.30
  br label %if.end.59, !dbg !4687

if.else.32:                                       ; preds = %if.else
  %33 = load i32, i32* %width.addr, align 4, !dbg !4689, !tbaa !1244
  %cmp33 = icmp eq i32 %33, 3, !dbg !4692
  br i1 %cmp33, label %if.then.35, label %if.else.53, !dbg !4693

if.then.35:                                       ; preds = %if.else.32
  br label %do.body.36, !dbg !4694

do.body.36:                                       ; preds = %if.then.35
  %34 = load i32, i32* %val, align 4, !dbg !4696, !tbaa !1244
  %shr37 = ashr i32 %34, 8, !dbg !4699
  %conv38 = trunc i32 %shr37 to i8, !dbg !4700
  %35 = load i8*, i8** %ncp, align 8, !dbg !4701, !tbaa !1200
  %36 = load i64, i64* %i, align 8, !dbg !4702, !tbaa !1435
  %add.ptr39 = getelementptr i8, i8* %35, i64 %36, !dbg !4703
  %arrayidx40 = getelementptr i8, i8* %add.ptr39, i64 0, !dbg !4704
  store i8 %conv38, i8* %arrayidx40, align 1, !dbg !4705, !tbaa !2013
  %37 = load i32, i32* %val, align 4, !dbg !4706, !tbaa !1244
  %shr41 = ashr i32 %37, 8, !dbg !4707
  %shr42 = ashr i32 %shr41, 8, !dbg !4708
  %conv43 = trunc i32 %shr42 to i8, !dbg !4709
  %38 = load i8*, i8** %ncp, align 8, !dbg !4710, !tbaa !1200
  %39 = load i64, i64* %i, align 8, !dbg !4711, !tbaa !1435
  %add.ptr44 = getelementptr i8, i8* %38, i64 %39, !dbg !4712
  %arrayidx45 = getelementptr i8, i8* %add.ptr44, i64 1, !dbg !4713
  store i8 %conv43, i8* %arrayidx45, align 1, !dbg !4714, !tbaa !2013
  %40 = load i32, i32* %val, align 4, !dbg !4715, !tbaa !1244
  %shr46 = ashr i32 %40, 8, !dbg !4716
  %shr47 = ashr i32 %shr46, 16, !dbg !4717
  %conv48 = trunc i32 %shr47 to i8, !dbg !4718
  %41 = load i8*, i8** %ncp, align 8, !dbg !4719, !tbaa !1200
  %42 = load i64, i64* %i, align 8, !dbg !4720, !tbaa !1435
  %add.ptr49 = getelementptr i8, i8* %41, i64 %42, !dbg !4721
  %arrayidx50 = getelementptr i8, i8* %add.ptr49, i64 2, !dbg !4722
  store i8 %conv48, i8* %arrayidx50, align 1, !dbg !4723, !tbaa !2013
  br label %do.cond.51, !dbg !4724

do.cond.51:                                       ; preds = %do.body.36
  br label %do.end.52, !dbg !4725

do.end.52:                                        ; preds = %do.cond.51
  br label %if.end.58, !dbg !4727

if.else.53:                                       ; preds = %if.else.32
  br label %do.body.54, !dbg !4729

do.body.54:                                       ; preds = %if.else.53
  %43 = load i32, i32* %val, align 4, !dbg !4731, !tbaa !1244
  %44 = load i8*, i8** %ncp, align 8, !dbg !4734, !tbaa !1200
  %45 = load i64, i64* %i, align 8, !dbg !4735, !tbaa !1435
  %add.ptr55 = getelementptr i8, i8* %44, i64 %45, !dbg !4736
  %46 = bitcast i8* %add.ptr55 to i32*, !dbg !4737
  store i32 %43, i32* %46, align 4, !dbg !4738, !tbaa !1244
  br label %do.cond.56, !dbg !4739

do.cond.56:                                       ; preds = %do.body.54
  br label %do.end.57, !dbg !4740

do.end.57:                                        ; preds = %do.cond.56
  br label %if.end.58

if.end.58:                                        ; preds = %do.end.57, %do.end.52
  br label %if.end.59

if.end.59:                                        ; preds = %if.end.58, %do.end.31
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %do.end
  br label %do.cond.61, !dbg !4742

do.cond.61:                                       ; preds = %if.end.60
  br label %do.end.62, !dbg !4744

do.end.62:                                        ; preds = %do.cond.61
  br label %for.inc, !dbg !4746

for.inc:                                          ; preds = %do.end.62
  %47 = load i32, i32* %width.addr, align 4, !dbg !4747, !tbaa !1244
  %conv63 = sext i32 %47 to i64, !dbg !4747
  %48 = load i64, i64* %i, align 8, !dbg !4748, !tbaa !1435
  %add = add i64 %48, %conv63, !dbg !4748
  store i64 %add, i64* %i, align 8, !dbg !4748, !tbaa !1435
  br label %for.cond, !dbg !4749

for.end:                                          ; preds = %for.cond
  %49 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4750, !tbaa !1200
  store %struct._object* %49, %struct._object** %retval, !dbg !4751
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4751

cleanup:                                          ; preds = %for.end, %if.then.9, %if.then.2, %if.then
  %50 = bitcast %struct._object** %rv to i8*, !dbg !4752
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !4752
  %51 = bitcast i32* %val to i8*, !dbg !4752
  call void @llvm.lifetime.end(i64 4, i8* %51) #1, !dbg !4752
  %52 = bitcast i64* %i to i8*, !dbg !4752
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !4752
  %53 = bitcast i8** %ncp to i8*, !dbg !4752
  call void @llvm.lifetime.end(i64 8, i8* %53) #1, !dbg !4752
  %54 = bitcast i8** %cp to i8*, !dbg !4752
  call void @llvm.lifetime.end(i64 8, i8* %54) #1, !dbg !4752
  %55 = load %struct._object*, %struct._object** %retval, !dbg !4752
  ret %struct._object* %55, !dbg !4752
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_lin2alaw_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %ncp = alloca i8*, align 8
  %i = alloca i64, align 8
  %rv = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %val = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !790, metadata !1195), !dbg !4753
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !791, metadata !1195), !dbg !4754
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !792, metadata !1195), !dbg !4755
  %0 = bitcast i8** %ncp to i8*, !dbg !4756
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4756
  call void @llvm.dbg.declare(metadata i8** %ncp, metadata !793, metadata !1195), !dbg !4757
  %1 = bitcast i64* %i to i8*, !dbg !4758
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4758
  call void @llvm.dbg.declare(metadata i64* %i, metadata !794, metadata !1195), !dbg !4759
  %2 = bitcast %struct._object** %rv to i8*, !dbg !4760
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4760
  call void @llvm.dbg.declare(metadata %struct._object** %rv, metadata !795, metadata !1195), !dbg !4761
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4762, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 2, !dbg !4764
  %4 = load i64, i64* %len, align 8, !dbg !4764, !tbaa !1987
  %5 = load i32, i32* %width.addr, align 4, !dbg !4765, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %4, i32 %5), !dbg !4766
  %tobool = icmp ne i32 %call, 0, !dbg !4766
  br i1 %tobool, label %if.end, label %if.then, !dbg !4767

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4768
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4768

if.end:                                           ; preds = %entry
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4769, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 2, !dbg !4770
  %7 = load i64, i64* %len1, align 8, !dbg !4770, !tbaa !1987
  %8 = load i32, i32* %width.addr, align 4, !dbg !4771, !tbaa !1244
  %conv = sext i32 %8 to i64, !dbg !4771
  %div = sdiv i64 %7, %conv, !dbg !4772
  %call2 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %div), !dbg !4773
  store %struct._object* %call2, %struct._object** %rv, align 8, !dbg !4774, !tbaa !1200
  %9 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4775, !tbaa !1200
  %cmp = icmp eq %struct._object* %9, null, !dbg !4777
  br i1 %cmp, label %if.then.4, label %if.end.5, !dbg !4778

if.then.4:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !4779
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4779

if.end.5:                                         ; preds = %if.end
  %10 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4780, !tbaa !1200
  %call6 = call i8* @PyBytes_AsString(%struct._object* %10), !dbg !4781
  store i8* %call6, i8** %ncp, align 8, !dbg !4782, !tbaa !1200
  store i64 0, i64* %i, align 8, !dbg !4783, !tbaa !1435
  br label %for.cond, !dbg !4784

for.cond:                                         ; preds = %for.inc, %if.end.5
  %11 = load i64, i64* %i, align 8, !dbg !4785, !tbaa !1435
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4788, !tbaa !1200
  %len7 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 2, !dbg !4789
  %13 = load i64, i64* %len7, align 8, !dbg !4789, !tbaa !1987
  %cmp8 = icmp slt i64 %11, %13, !dbg !4790
  br i1 %cmp8, label %for.body, label %for.end, !dbg !4791

for.body:                                         ; preds = %for.cond
  %14 = bitcast i32* %val to i8*, !dbg !4792
  call void @llvm.lifetime.start(i64 4, i8* %14) #1, !dbg !4792
  call void @llvm.dbg.declare(metadata i32* %val, metadata !796, metadata !1195), !dbg !4793
  %15 = load i32, i32* %width.addr, align 4, !dbg !4794, !tbaa !1244
  %cmp10 = icmp eq i32 %15, 1, !dbg !4795
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !4796

cond.true:                                        ; preds = %for.body
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4797, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 0, !dbg !4799
  %17 = load i8*, i8** %buf, align 8, !dbg !4799, !tbaa !2009
  %18 = load i64, i64* %i, align 8, !dbg !4800, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %17, i64 %18, !dbg !4801
  %19 = load i8, i8* %add.ptr, align 1, !dbg !4802, !tbaa !2013
  %conv12 = sext i8 %19 to i32, !dbg !4803
  %shl = shl i32 %conv12, 24, !dbg !4804
  br label %cond.end.44, !dbg !4796

cond.false:                                       ; preds = %for.body
  %20 = load i32, i32* %width.addr, align 4, !dbg !4805, !tbaa !1244
  %cmp13 = icmp eq i32 %20, 2, !dbg !4807
  br i1 %cmp13, label %cond.true.15, label %cond.false.20, !dbg !4808

cond.true.15:                                     ; preds = %cond.false
  %21 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4809, !tbaa !1200
  %buf16 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %21, i32 0, i32 0, !dbg !4811
  %22 = load i8*, i8** %buf16, align 8, !dbg !4811, !tbaa !2009
  %23 = load i64, i64* %i, align 8, !dbg !4812, !tbaa !1435
  %add.ptr17 = getelementptr i8, i8* %22, i64 %23, !dbg !4813
  %24 = bitcast i8* %add.ptr17 to i16*, !dbg !4814
  %25 = load i16, i16* %24, align 2, !dbg !4815, !tbaa !2026
  %conv18 = sext i16 %25 to i32, !dbg !4816
  %shl19 = shl i32 %conv18, 16, !dbg !4817
  br label %cond.end.42, !dbg !4808

cond.false.20:                                    ; preds = %cond.false
  %26 = load i32, i32* %width.addr, align 4, !dbg !4818, !tbaa !1244
  %cmp21 = icmp eq i32 %26, 3, !dbg !4820
  br i1 %cmp21, label %cond.true.23, label %cond.false.39, !dbg !4821

cond.true.23:                                     ; preds = %cond.false.20
  %27 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4822, !tbaa !1200
  %buf24 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %27, i32 0, i32 0, !dbg !4824
  %28 = load i8*, i8** %buf24, align 8, !dbg !4824, !tbaa !2009
  %29 = load i64, i64* %i, align 8, !dbg !4825, !tbaa !1435
  %add.ptr25 = getelementptr i8, i8* %28, i64 %29, !dbg !4826
  %arrayidx = getelementptr i8, i8* %add.ptr25, i64 0, !dbg !4827
  %30 = load i8, i8* %arrayidx, align 1, !dbg !4827, !tbaa !2013
  %conv26 = zext i8 %30 to i32, !dbg !4827
  %31 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4828, !tbaa !1200
  %buf27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %31, i32 0, i32 0, !dbg !4829
  %32 = load i8*, i8** %buf27, align 8, !dbg !4829, !tbaa !2009
  %33 = load i64, i64* %i, align 8, !dbg !4830, !tbaa !1435
  %add.ptr28 = getelementptr i8, i8* %32, i64 %33, !dbg !4831
  %arrayidx29 = getelementptr i8, i8* %add.ptr28, i64 1, !dbg !4832
  %34 = load i8, i8* %arrayidx29, align 1, !dbg !4832, !tbaa !2013
  %conv30 = zext i8 %34 to i32, !dbg !4832
  %shl31 = shl i32 %conv30, 8, !dbg !4833
  %add = add i32 %conv26, %shl31, !dbg !4834
  %35 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4835, !tbaa !1200
  %buf32 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %35, i32 0, i32 0, !dbg !4836
  %36 = load i8*, i8** %buf32, align 8, !dbg !4836, !tbaa !2009
  %37 = load i64, i64* %i, align 8, !dbg !4837, !tbaa !1435
  %add.ptr33 = getelementptr i8, i8* %36, i64 %37, !dbg !4838
  %arrayidx34 = getelementptr i8, i8* %add.ptr33, i64 2, !dbg !4839
  %38 = load i8, i8* %arrayidx34, align 1, !dbg !4839, !tbaa !2013
  %conv35 = sext i8 %38 to i32, !dbg !4839
  %shl36 = shl i32 %conv35, 16, !dbg !4840
  %add37 = add i32 %add, %shl36, !dbg !4841
  %shl38 = shl i32 %add37, 8, !dbg !4842
  br label %cond.end, !dbg !4821

cond.false.39:                                    ; preds = %cond.false.20
  %39 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4843, !tbaa !1200
  %buf40 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %39, i32 0, i32 0, !dbg !4845
  %40 = load i8*, i8** %buf40, align 8, !dbg !4845, !tbaa !2009
  %41 = load i64, i64* %i, align 8, !dbg !4846, !tbaa !1435
  %add.ptr41 = getelementptr i8, i8* %40, i64 %41, !dbg !4847
  %42 = bitcast i8* %add.ptr41 to i32*, !dbg !4848
  %43 = load i32, i32* %42, align 4, !dbg !4849, !tbaa !1244
  br label %cond.end, !dbg !4821

cond.end:                                         ; preds = %cond.false.39, %cond.true.23
  %cond = phi i32 [ %shl38, %cond.true.23 ], [ %43, %cond.false.39 ], !dbg !4821
  br label %cond.end.42, !dbg !4850

cond.end.42:                                      ; preds = %cond.end, %cond.true.15
  %cond43 = phi i32 [ %shl19, %cond.true.15 ], [ %cond, %cond.end ], !dbg !4808
  br label %cond.end.44, !dbg !4853

cond.end.44:                                      ; preds = %cond.end.42, %cond.true
  %cond45 = phi i32 [ %shl, %cond.true ], [ %cond43, %cond.end.42 ], !dbg !4796
  store i32 %cond45, i32* %val, align 4, !dbg !4856, !tbaa !1244
  %44 = load i32, i32* %val, align 4, !dbg !4859, !tbaa !1244
  %shr = ashr i32 %44, 19, !dbg !4860
  %conv46 = trunc i32 %shr to i16, !dbg !4859
  %call47 = call zeroext i8 @st_linear2alaw(i16 signext %conv46), !dbg !4861
  %45 = load i8*, i8** %ncp, align 8, !dbg !4862, !tbaa !1200
  %incdec.ptr = getelementptr i8, i8* %45, i32 1, !dbg !4862
  store i8* %incdec.ptr, i8** %ncp, align 8, !dbg !4862, !tbaa !1200
  store i8 %call47, i8* %45, align 1, !dbg !4863, !tbaa !2013
  %46 = bitcast i32* %val to i8*, !dbg !4864
  call void @llvm.lifetime.end(i64 4, i8* %46) #1, !dbg !4864
  br label %for.inc, !dbg !4865

for.inc:                                          ; preds = %cond.end.44
  %47 = load i32, i32* %width.addr, align 4, !dbg !4866, !tbaa !1244
  %conv48 = sext i32 %47 to i64, !dbg !4866
  %48 = load i64, i64* %i, align 8, !dbg !4867, !tbaa !1435
  %add49 = add i64 %48, %conv48, !dbg !4867
  store i64 %add49, i64* %i, align 8, !dbg !4867, !tbaa !1435
  br label %for.cond, !dbg !4868

for.end:                                          ; preds = %for.cond
  %49 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4869, !tbaa !1200
  store %struct._object* %49, %struct._object** %retval, !dbg !4870
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4870

cleanup:                                          ; preds = %for.end, %if.then.4, %if.then
  %50 = bitcast %struct._object** %rv to i8*, !dbg !4871
  call void @llvm.lifetime.end(i64 8, i8* %50) #1, !dbg !4871
  %51 = bitcast i64* %i to i8*, !dbg !4871
  call void @llvm.lifetime.end(i64 8, i8* %51) #1, !dbg !4871
  %52 = bitcast i8** %ncp to i8*, !dbg !4871
  call void @llvm.lifetime.end(i64 8, i8* %52) #1, !dbg !4871
  %53 = load %struct._object*, %struct._object** %retval, !dbg !4871
  ret %struct._object* %53, !dbg !4871
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @st_linear2alaw(i16 signext %pcm_val) #0 {
entry:
  %retval = alloca i8, align 1
  %pcm_val.addr = alloca i16, align 2
  %mask = alloca i16, align 2
  %seg = alloca i16, align 2
  %aval = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store i16 %pcm_val, i16* %pcm_val.addr, align 2, !tbaa !2026
  call void @llvm.dbg.declare(metadata i16* %pcm_val.addr, metadata !802, metadata !1195), !dbg !4872
  %0 = bitcast i16* %mask to i8*, !dbg !4873
  call void @llvm.lifetime.start(i64 2, i8* %0) #1, !dbg !4873
  call void @llvm.dbg.declare(metadata i16* %mask, metadata !803, metadata !1195), !dbg !4874
  %1 = bitcast i16* %seg to i8*, !dbg !4875
  call void @llvm.lifetime.start(i64 2, i8* %1) #1, !dbg !4875
  call void @llvm.dbg.declare(metadata i16* %seg, metadata !804, metadata !1195), !dbg !4876
  call void @llvm.lifetime.start(i64 1, i8* %aval) #1, !dbg !4877
  call void @llvm.dbg.declare(metadata i8* %aval, metadata !805, metadata !1195), !dbg !4878
  %2 = load i16, i16* %pcm_val.addr, align 2, !dbg !4879, !tbaa !2026
  %conv = sext i16 %2 to i32, !dbg !4879
  %cmp = icmp sge i32 %conv, 0, !dbg !4881
  br i1 %cmp, label %if.then, label %if.else, !dbg !4882

if.then:                                          ; preds = %entry
  store i16 213, i16* %mask, align 2, !dbg !4883, !tbaa !2026
  br label %if.end, !dbg !4885

if.else:                                          ; preds = %entry
  store i16 85, i16* %mask, align 2, !dbg !4886, !tbaa !2026
  %3 = load i16, i16* %pcm_val.addr, align 2, !dbg !4888, !tbaa !2026
  %conv2 = sext i16 %3 to i32, !dbg !4888
  %sub = sub i32 0, %conv2, !dbg !4889
  %sub3 = sub i32 %sub, 1, !dbg !4890
  %conv4 = trunc i32 %sub3 to i16, !dbg !4889
  store i16 %conv4, i16* %pcm_val.addr, align 2, !dbg !4891, !tbaa !2026
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i16, i16* %pcm_val.addr, align 2, !dbg !4892, !tbaa !2026
  %call = call signext i16 @search(i16 signext %4, i16* getelementptr inbounds ([8 x i16], [8 x i16]* @seg_aend, i32 0, i32 0), i32 8), !dbg !4893
  store i16 %call, i16* %seg, align 2, !dbg !4894, !tbaa !2026
  %5 = load i16, i16* %seg, align 2, !dbg !4895, !tbaa !2026
  %conv5 = sext i16 %5 to i32, !dbg !4895
  %cmp6 = icmp sge i32 %conv5, 8, !dbg !4897
  br i1 %cmp6, label %if.then.8, label %if.else.11, !dbg !4898

if.then.8:                                        ; preds = %if.end
  %6 = load i16, i16* %mask, align 2, !dbg !4899, !tbaa !2026
  %conv9 = sext i16 %6 to i32, !dbg !4899
  %xor = xor i32 127, %conv9, !dbg !4900
  %conv10 = trunc i32 %xor to i8, !dbg !4901
  store i8 %conv10, i8* %retval, !dbg !4902
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4902

if.else.11:                                       ; preds = %if.end
  %7 = load i16, i16* %seg, align 2, !dbg !4903, !tbaa !2026
  %conv12 = trunc i16 %7 to i8, !dbg !4905
  %conv13 = zext i8 %conv12 to i32, !dbg !4905
  %shl = shl i32 %conv13, 4, !dbg !4906
  %conv14 = trunc i32 %shl to i8, !dbg !4905
  store i8 %conv14, i8* %aval, align 1, !dbg !4907, !tbaa !2013
  %8 = load i16, i16* %seg, align 2, !dbg !4908, !tbaa !2026
  %conv15 = sext i16 %8 to i32, !dbg !4908
  %cmp16 = icmp slt i32 %conv15, 2, !dbg !4910
  br i1 %cmp16, label %if.then.18, label %if.else.22, !dbg !4911

if.then.18:                                       ; preds = %if.else.11
  %9 = load i16, i16* %pcm_val.addr, align 2, !dbg !4912, !tbaa !2026
  %conv19 = sext i16 %9 to i32, !dbg !4912
  %shr = ashr i32 %conv19, 1, !dbg !4913
  %and = and i32 %shr, 15, !dbg !4914
  %10 = load i8, i8* %aval, align 1, !dbg !4915, !tbaa !2013
  %conv20 = zext i8 %10 to i32, !dbg !4915
  %or = or i32 %conv20, %and, !dbg !4915
  %conv21 = trunc i32 %or to i8, !dbg !4915
  store i8 %conv21, i8* %aval, align 1, !dbg !4915, !tbaa !2013
  br label %if.end.30, !dbg !4916

if.else.22:                                       ; preds = %if.else.11
  %11 = load i16, i16* %pcm_val.addr, align 2, !dbg !4917, !tbaa !2026
  %conv23 = sext i16 %11 to i32, !dbg !4917
  %12 = load i16, i16* %seg, align 2, !dbg !4918, !tbaa !2026
  %conv24 = sext i16 %12 to i32, !dbg !4918
  %shr25 = ashr i32 %conv23, %conv24, !dbg !4919
  %and26 = and i32 %shr25, 15, !dbg !4920
  %13 = load i8, i8* %aval, align 1, !dbg !4921, !tbaa !2013
  %conv27 = zext i8 %13 to i32, !dbg !4921
  %or28 = or i32 %conv27, %and26, !dbg !4921
  %conv29 = trunc i32 %or28 to i8, !dbg !4921
  store i8 %conv29, i8* %aval, align 1, !dbg !4921, !tbaa !2013
  br label %if.end.30

if.end.30:                                        ; preds = %if.else.22, %if.then.18
  %14 = load i8, i8* %aval, align 1, !dbg !4922, !tbaa !2013
  %conv31 = zext i8 %14 to i32, !dbg !4922
  %15 = load i16, i16* %mask, align 2, !dbg !4923, !tbaa !2026
  %conv32 = sext i16 %15 to i32, !dbg !4923
  %xor33 = xor i32 %conv31, %conv32, !dbg !4924
  %conv34 = trunc i32 %xor33 to i8, !dbg !4925
  store i8 %conv34, i8* %retval, !dbg !4926
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4926

cleanup:                                          ; preds = %if.end.30, %if.then.8
  call void @llvm.lifetime.end(i64 1, i8* %aval) #1, !dbg !4927
  %16 = bitcast i16* %seg to i8*, !dbg !4927
  call void @llvm.lifetime.end(i64 2, i8* %16) #1, !dbg !4927
  %17 = bitcast i16* %mask to i8*, !dbg !4927
  call void @llvm.lifetime.end(i64 2, i8* %17) #1, !dbg !4927
  %18 = load i8, i8* %retval, !dbg !4927
  ret i8 %18, !dbg !4927
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_lin2lin_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width, i32 %newwidth) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %newwidth.addr = alloca i32, align 4
  %ncp = alloca i8*, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %rv = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %val = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !816, metadata !1195), !dbg !4928
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !817, metadata !1195), !dbg !4929
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !818, metadata !1195), !dbg !4930
  store i32 %newwidth, i32* %newwidth.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %newwidth.addr, metadata !819, metadata !1195), !dbg !4931
  %0 = bitcast i8** %ncp to i8*, !dbg !4932
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !4932
  call void @llvm.dbg.declare(metadata i8** %ncp, metadata !820, metadata !1195), !dbg !4933
  %1 = bitcast i64* %i to i8*, !dbg !4934
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !4934
  call void @llvm.dbg.declare(metadata i64* %i, metadata !821, metadata !1195), !dbg !4935
  %2 = bitcast i64* %j to i8*, !dbg !4934
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !4934
  call void @llvm.dbg.declare(metadata i64* %j, metadata !822, metadata !1195), !dbg !4936
  %3 = bitcast %struct._object** %rv to i8*, !dbg !4937
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !4937
  call void @llvm.dbg.declare(metadata %struct._object** %rv, metadata !823, metadata !1195), !dbg !4938
  %4 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4939, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %4, i32 0, i32 2, !dbg !4941
  %5 = load i64, i64* %len, align 8, !dbg !4941, !tbaa !1987
  %6 = load i32, i32* %width.addr, align 4, !dbg !4942, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %5, i32 %6), !dbg !4943
  %tobool = icmp ne i32 %call, 0, !dbg !4943
  br i1 %tobool, label %if.end, label %if.then, !dbg !4944

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4945
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4945

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %newwidth.addr, align 4, !dbg !4946, !tbaa !1244
  %call1 = call i32 @audioop_check_size(i32 %7), !dbg !4948
  %tobool2 = icmp ne i32 %call1, 0, !dbg !4948
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !4949

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !4950
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4950

if.end.4:                                         ; preds = %if.end
  %8 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4951, !tbaa !1200
  %len5 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %8, i32 0, i32 2, !dbg !4953
  %9 = load i64, i64* %len5, align 8, !dbg !4953, !tbaa !1987
  %10 = load i32, i32* %width.addr, align 4, !dbg !4954, !tbaa !1244
  %conv = sext i32 %10 to i64, !dbg !4954
  %div = sdiv i64 %9, %conv, !dbg !4955
  %11 = load i32, i32* %newwidth.addr, align 4, !dbg !4956, !tbaa !1244
  %conv6 = sext i32 %11 to i64, !dbg !4956
  %div7 = sdiv i64 9223372036854775807, %conv6, !dbg !4957
  %cmp = icmp sgt i64 %div, %div7, !dbg !4958
  br i1 %cmp, label %if.then.9, label %if.end.10, !dbg !4959

if.then.9:                                        ; preds = %if.end.4
  %12 = load %struct._object*, %struct._object** @PyExc_MemoryError, align 8, !dbg !4960, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %12, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.52, i32 0, i32 0)), !dbg !4962
  store %struct._object* null, %struct._object** %retval, !dbg !4963
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4963

if.end.10:                                        ; preds = %if.end.4
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4964, !tbaa !1200
  %len11 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 2, !dbg !4965
  %14 = load i64, i64* %len11, align 8, !dbg !4965, !tbaa !1987
  %15 = load i32, i32* %width.addr, align 4, !dbg !4966, !tbaa !1244
  %conv12 = sext i32 %15 to i64, !dbg !4966
  %div13 = sdiv i64 %14, %conv12, !dbg !4967
  %16 = load i32, i32* %newwidth.addr, align 4, !dbg !4968, !tbaa !1244
  %conv14 = sext i32 %16 to i64, !dbg !4968
  %mul = mul i64 %div13, %conv14, !dbg !4969
  %call15 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %mul), !dbg !4970
  store %struct._object* %call15, %struct._object** %rv, align 8, !dbg !4971, !tbaa !1200
  %17 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4972, !tbaa !1200
  %cmp16 = icmp eq %struct._object* %17, null, !dbg !4974
  br i1 %cmp16, label %if.then.18, label %if.end.19, !dbg !4975

if.then.18:                                       ; preds = %if.end.10
  store %struct._object* null, %struct._object** %retval, !dbg !4976
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4976

if.end.19:                                        ; preds = %if.end.10
  %18 = load %struct._object*, %struct._object** %rv, align 8, !dbg !4977, !tbaa !1200
  %call20 = call i8* @PyBytes_AsString(%struct._object* %18), !dbg !4978
  store i8* %call20, i8** %ncp, align 8, !dbg !4979, !tbaa !1200
  store i64 0, i64* %j, align 8, !dbg !4980, !tbaa !1435
  store i64 0, i64* %i, align 8, !dbg !4981, !tbaa !1435
  br label %for.cond, !dbg !4982

for.cond:                                         ; preds = %for.inc, %if.end.19
  %19 = load i64, i64* %i, align 8, !dbg !4983, !tbaa !1435
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4986, !tbaa !1200
  %len21 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %20, i32 0, i32 2, !dbg !4987
  %21 = load i64, i64* %len21, align 8, !dbg !4987, !tbaa !1987
  %cmp22 = icmp slt i64 %19, %21, !dbg !4988
  br i1 %cmp22, label %for.body, label %for.end, !dbg !4989

for.body:                                         ; preds = %for.cond
  %22 = bitcast i32* %val to i8*, !dbg !4990
  call void @llvm.lifetime.start(i64 4, i8* %22) #1, !dbg !4990
  call void @llvm.dbg.declare(metadata i32* %val, metadata !824, metadata !1195), !dbg !4991
  %23 = load i32, i32* %width.addr, align 4, !dbg !4992, !tbaa !1244
  %cmp24 = icmp eq i32 %23, 1, !dbg !4993
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !4994

cond.true:                                        ; preds = %for.body
  %24 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !4995, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %24, i32 0, i32 0, !dbg !4997
  %25 = load i8*, i8** %buf, align 8, !dbg !4997, !tbaa !2009
  %26 = load i64, i64* %i, align 8, !dbg !4998, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %25, i64 %26, !dbg !4999
  %27 = load i8, i8* %add.ptr, align 1, !dbg !5000, !tbaa !2013
  %conv26 = sext i8 %27 to i32, !dbg !5001
  %shl = shl i32 %conv26, 24, !dbg !5002
  br label %cond.end.58, !dbg !4994

cond.false:                                       ; preds = %for.body
  %28 = load i32, i32* %width.addr, align 4, !dbg !5003, !tbaa !1244
  %cmp27 = icmp eq i32 %28, 2, !dbg !5005
  br i1 %cmp27, label %cond.true.29, label %cond.false.34, !dbg !5006

cond.true.29:                                     ; preds = %cond.false
  %29 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5007, !tbaa !1200
  %buf30 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %29, i32 0, i32 0, !dbg !5009
  %30 = load i8*, i8** %buf30, align 8, !dbg !5009, !tbaa !2009
  %31 = load i64, i64* %i, align 8, !dbg !5010, !tbaa !1435
  %add.ptr31 = getelementptr i8, i8* %30, i64 %31, !dbg !5011
  %32 = bitcast i8* %add.ptr31 to i16*, !dbg !5012
  %33 = load i16, i16* %32, align 2, !dbg !5013, !tbaa !2026
  %conv32 = sext i16 %33 to i32, !dbg !5014
  %shl33 = shl i32 %conv32, 16, !dbg !5015
  br label %cond.end.56, !dbg !5006

cond.false.34:                                    ; preds = %cond.false
  %34 = load i32, i32* %width.addr, align 4, !dbg !5016, !tbaa !1244
  %cmp35 = icmp eq i32 %34, 3, !dbg !5018
  br i1 %cmp35, label %cond.true.37, label %cond.false.53, !dbg !5019

cond.true.37:                                     ; preds = %cond.false.34
  %35 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5020, !tbaa !1200
  %buf38 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %35, i32 0, i32 0, !dbg !5022
  %36 = load i8*, i8** %buf38, align 8, !dbg !5022, !tbaa !2009
  %37 = load i64, i64* %i, align 8, !dbg !5023, !tbaa !1435
  %add.ptr39 = getelementptr i8, i8* %36, i64 %37, !dbg !5024
  %arrayidx = getelementptr i8, i8* %add.ptr39, i64 0, !dbg !5025
  %38 = load i8, i8* %arrayidx, align 1, !dbg !5025, !tbaa !2013
  %conv40 = zext i8 %38 to i32, !dbg !5025
  %39 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5026, !tbaa !1200
  %buf41 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %39, i32 0, i32 0, !dbg !5027
  %40 = load i8*, i8** %buf41, align 8, !dbg !5027, !tbaa !2009
  %41 = load i64, i64* %i, align 8, !dbg !5028, !tbaa !1435
  %add.ptr42 = getelementptr i8, i8* %40, i64 %41, !dbg !5029
  %arrayidx43 = getelementptr i8, i8* %add.ptr42, i64 1, !dbg !5030
  %42 = load i8, i8* %arrayidx43, align 1, !dbg !5030, !tbaa !2013
  %conv44 = zext i8 %42 to i32, !dbg !5030
  %shl45 = shl i32 %conv44, 8, !dbg !5031
  %add = add i32 %conv40, %shl45, !dbg !5032
  %43 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5033, !tbaa !1200
  %buf46 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %43, i32 0, i32 0, !dbg !5034
  %44 = load i8*, i8** %buf46, align 8, !dbg !5034, !tbaa !2009
  %45 = load i64, i64* %i, align 8, !dbg !5035, !tbaa !1435
  %add.ptr47 = getelementptr i8, i8* %44, i64 %45, !dbg !5036
  %arrayidx48 = getelementptr i8, i8* %add.ptr47, i64 2, !dbg !5037
  %46 = load i8, i8* %arrayidx48, align 1, !dbg !5037, !tbaa !2013
  %conv49 = sext i8 %46 to i32, !dbg !5037
  %shl50 = shl i32 %conv49, 16, !dbg !5038
  %add51 = add i32 %add, %shl50, !dbg !5039
  %shl52 = shl i32 %add51, 8, !dbg !5040
  br label %cond.end, !dbg !5019

cond.false.53:                                    ; preds = %cond.false.34
  %47 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5041, !tbaa !1200
  %buf54 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %47, i32 0, i32 0, !dbg !5043
  %48 = load i8*, i8** %buf54, align 8, !dbg !5043, !tbaa !2009
  %49 = load i64, i64* %i, align 8, !dbg !5044, !tbaa !1435
  %add.ptr55 = getelementptr i8, i8* %48, i64 %49, !dbg !5045
  %50 = bitcast i8* %add.ptr55 to i32*, !dbg !5046
  %51 = load i32, i32* %50, align 4, !dbg !5047, !tbaa !1244
  br label %cond.end, !dbg !5019

cond.end:                                         ; preds = %cond.false.53, %cond.true.37
  %cond = phi i32 [ %shl52, %cond.true.37 ], [ %51, %cond.false.53 ], !dbg !5019
  br label %cond.end.56, !dbg !5048

cond.end.56:                                      ; preds = %cond.end, %cond.true.29
  %cond57 = phi i32 [ %shl33, %cond.true.29 ], [ %cond, %cond.end ], !dbg !5006
  br label %cond.end.58, !dbg !5051

cond.end.58:                                      ; preds = %cond.end.56, %cond.true
  %cond59 = phi i32 [ %shl, %cond.true ], [ %cond57, %cond.end.56 ], !dbg !4994
  store i32 %cond59, i32* %val, align 4, !dbg !5054, !tbaa !1244
  br label %do.body, !dbg !5057

do.body:                                          ; preds = %cond.end.58
  %52 = load i32, i32* %newwidth.addr, align 4, !dbg !5058, !tbaa !1244
  %cmp60 = icmp eq i32 %52, 1, !dbg !5062
  br i1 %cmp60, label %if.then.62, label %if.else, !dbg !5063

if.then.62:                                       ; preds = %do.body
  br label %do.body.63, !dbg !5064

do.body.63:                                       ; preds = %if.then.62
  %53 = load i32, i32* %val, align 4, !dbg !5066, !tbaa !1244
  %shr = ashr i32 %53, 24, !dbg !5069
  %conv64 = trunc i32 %shr to i8, !dbg !5070
  %54 = load i8*, i8** %ncp, align 8, !dbg !5071, !tbaa !1200
  %55 = load i64, i64* %j, align 8, !dbg !5072, !tbaa !1435
  %add.ptr65 = getelementptr i8, i8* %54, i64 %55, !dbg !5073
  store i8 %conv64, i8* %add.ptr65, align 1, !dbg !5074, !tbaa !2013
  br label %do.cond, !dbg !5075

do.cond:                                          ; preds = %do.body.63
  br label %do.end, !dbg !5076

do.end:                                           ; preds = %do.cond
  br label %if.end.103, !dbg !5078

if.else:                                          ; preds = %do.body
  %56 = load i32, i32* %newwidth.addr, align 4, !dbg !5080, !tbaa !1244
  %cmp66 = icmp eq i32 %56, 2, !dbg !5083
  br i1 %cmp66, label %if.then.68, label %if.else.75, !dbg !5084

if.then.68:                                       ; preds = %if.else
  br label %do.body.69, !dbg !5085

do.body.69:                                       ; preds = %if.then.68
  %57 = load i32, i32* %val, align 4, !dbg !5087, !tbaa !1244
  %shr70 = ashr i32 %57, 16, !dbg !5090
  %conv71 = trunc i32 %shr70 to i16, !dbg !5091
  %58 = load i8*, i8** %ncp, align 8, !dbg !5092, !tbaa !1200
  %59 = load i64, i64* %j, align 8, !dbg !5093, !tbaa !1435
  %add.ptr72 = getelementptr i8, i8* %58, i64 %59, !dbg !5094
  %60 = bitcast i8* %add.ptr72 to i16*, !dbg !5095
  store i16 %conv71, i16* %60, align 2, !dbg !5096, !tbaa !2026
  br label %do.cond.73, !dbg !5097

do.cond.73:                                       ; preds = %do.body.69
  br label %do.end.74, !dbg !5098

do.end.74:                                        ; preds = %do.cond.73
  br label %if.end.102, !dbg !5100

if.else.75:                                       ; preds = %if.else
  %61 = load i32, i32* %newwidth.addr, align 4, !dbg !5102, !tbaa !1244
  %cmp76 = icmp eq i32 %61, 3, !dbg !5105
  br i1 %cmp76, label %if.then.78, label %if.else.96, !dbg !5106

if.then.78:                                       ; preds = %if.else.75
  br label %do.body.79, !dbg !5107

do.body.79:                                       ; preds = %if.then.78
  %62 = load i32, i32* %val, align 4, !dbg !5109, !tbaa !1244
  %shr80 = ashr i32 %62, 8, !dbg !5112
  %conv81 = trunc i32 %shr80 to i8, !dbg !5113
  %63 = load i8*, i8** %ncp, align 8, !dbg !5114, !tbaa !1200
  %64 = load i64, i64* %j, align 8, !dbg !5115, !tbaa !1435
  %add.ptr82 = getelementptr i8, i8* %63, i64 %64, !dbg !5116
  %arrayidx83 = getelementptr i8, i8* %add.ptr82, i64 0, !dbg !5117
  store i8 %conv81, i8* %arrayidx83, align 1, !dbg !5118, !tbaa !2013
  %65 = load i32, i32* %val, align 4, !dbg !5119, !tbaa !1244
  %shr84 = ashr i32 %65, 8, !dbg !5120
  %shr85 = ashr i32 %shr84, 8, !dbg !5121
  %conv86 = trunc i32 %shr85 to i8, !dbg !5122
  %66 = load i8*, i8** %ncp, align 8, !dbg !5123, !tbaa !1200
  %67 = load i64, i64* %j, align 8, !dbg !5124, !tbaa !1435
  %add.ptr87 = getelementptr i8, i8* %66, i64 %67, !dbg !5125
  %arrayidx88 = getelementptr i8, i8* %add.ptr87, i64 1, !dbg !5126
  store i8 %conv86, i8* %arrayidx88, align 1, !dbg !5127, !tbaa !2013
  %68 = load i32, i32* %val, align 4, !dbg !5128, !tbaa !1244
  %shr89 = ashr i32 %68, 8, !dbg !5129
  %shr90 = ashr i32 %shr89, 16, !dbg !5130
  %conv91 = trunc i32 %shr90 to i8, !dbg !5131
  %69 = load i8*, i8** %ncp, align 8, !dbg !5132, !tbaa !1200
  %70 = load i64, i64* %j, align 8, !dbg !5133, !tbaa !1435
  %add.ptr92 = getelementptr i8, i8* %69, i64 %70, !dbg !5134
  %arrayidx93 = getelementptr i8, i8* %add.ptr92, i64 2, !dbg !5135
  store i8 %conv91, i8* %arrayidx93, align 1, !dbg !5136, !tbaa !2013
  br label %do.cond.94, !dbg !5137

do.cond.94:                                       ; preds = %do.body.79
  br label %do.end.95, !dbg !5138

do.end.95:                                        ; preds = %do.cond.94
  br label %if.end.101, !dbg !5140

if.else.96:                                       ; preds = %if.else.75
  br label %do.body.97, !dbg !5142

do.body.97:                                       ; preds = %if.else.96
  %71 = load i32, i32* %val, align 4, !dbg !5144, !tbaa !1244
  %72 = load i8*, i8** %ncp, align 8, !dbg !5147, !tbaa !1200
  %73 = load i64, i64* %j, align 8, !dbg !5148, !tbaa !1435
  %add.ptr98 = getelementptr i8, i8* %72, i64 %73, !dbg !5149
  %74 = bitcast i8* %add.ptr98 to i32*, !dbg !5150
  store i32 %71, i32* %74, align 4, !dbg !5151, !tbaa !1244
  br label %do.cond.99, !dbg !5152

do.cond.99:                                       ; preds = %do.body.97
  br label %do.end.100, !dbg !5153

do.end.100:                                       ; preds = %do.cond.99
  br label %if.end.101

if.end.101:                                       ; preds = %do.end.100, %do.end.95
  br label %if.end.102

if.end.102:                                       ; preds = %if.end.101, %do.end.74
  br label %if.end.103

if.end.103:                                       ; preds = %if.end.102, %do.end
  br label %do.cond.104, !dbg !5155

do.cond.104:                                      ; preds = %if.end.103
  br label %do.end.105, !dbg !5157

do.end.105:                                       ; preds = %do.cond.104
  %75 = bitcast i32* %val to i8*, !dbg !5159
  call void @llvm.lifetime.end(i64 4, i8* %75) #1, !dbg !5159
  br label %for.inc, !dbg !5160

for.inc:                                          ; preds = %do.end.105
  %76 = load i32, i32* %width.addr, align 4, !dbg !5161, !tbaa !1244
  %conv106 = sext i32 %76 to i64, !dbg !5161
  %77 = load i64, i64* %i, align 8, !dbg !5162, !tbaa !1435
  %add107 = add i64 %77, %conv106, !dbg !5162
  store i64 %add107, i64* %i, align 8, !dbg !5162, !tbaa !1435
  %78 = load i32, i32* %newwidth.addr, align 4, !dbg !5163, !tbaa !1244
  %conv108 = sext i32 %78 to i64, !dbg !5163
  %79 = load i64, i64* %j, align 8, !dbg !5164, !tbaa !1435
  %add109 = add i64 %79, %conv108, !dbg !5164
  store i64 %add109, i64* %j, align 8, !dbg !5164, !tbaa !1435
  br label %for.cond, !dbg !5165

for.end:                                          ; preds = %for.cond
  %80 = load %struct._object*, %struct._object** %rv, align 8, !dbg !5166, !tbaa !1200
  store %struct._object* %80, %struct._object** %retval, !dbg !5167
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5167

cleanup:                                          ; preds = %for.end, %if.then.18, %if.then.9, %if.then.3, %if.then
  %81 = bitcast %struct._object** %rv to i8*, !dbg !5168
  call void @llvm.lifetime.end(i64 8, i8* %81) #1, !dbg !5168
  %82 = bitcast i64* %j to i8*, !dbg !5168
  call void @llvm.lifetime.end(i64 8, i8* %82) #1, !dbg !5168
  %83 = bitcast i64* %i to i8*, !dbg !5168
  call void @llvm.lifetime.end(i64 8, i8* %83) #1, !dbg !5168
  %84 = bitcast i8** %ncp to i8*, !dbg !5168
  call void @llvm.lifetime.end(i64 8, i8* %84) #1, !dbg !5168
  %85 = load %struct._object*, %struct._object** %retval, !dbg !5168
  ret %struct._object* %85, !dbg !5168
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_adpcm2lin_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %state.addr = alloca %struct._object*, align 8
  %cp = alloca i8*, align 8
  %ncp = alloca i8*, align 8
  %i = alloca i64, align 8
  %outlen = alloca i64, align 8
  %valpred = alloca i32, align 4
  %step = alloca i32, align 4
  %delta = alloca i32, align 4
  %index = alloca i32, align 4
  %sign = alloca i32, align 4
  %vpdiff = alloca i32, align 4
  %rv = alloca %struct._object*, align 8
  %str = alloca %struct._object*, align 8
  %inputbuffer = alloca i32, align 4
  %bufferstep = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !840, metadata !1195), !dbg !5169
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !841, metadata !1195), !dbg !5170
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !842, metadata !1195), !dbg !5171
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !843, metadata !1195), !dbg !5172
  %0 = bitcast i8** %cp to i8*, !dbg !5173
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5173
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !844, metadata !1195), !dbg !5174
  %1 = bitcast i8** %ncp to i8*, !dbg !5175
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5175
  call void @llvm.dbg.declare(metadata i8** %ncp, metadata !845, metadata !1195), !dbg !5176
  %2 = bitcast i64* %i to i8*, !dbg !5177
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5177
  call void @llvm.dbg.declare(metadata i64* %i, metadata !846, metadata !1195), !dbg !5178
  %3 = bitcast i64* %outlen to i8*, !dbg !5177
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5177
  call void @llvm.dbg.declare(metadata i64* %outlen, metadata !847, metadata !1195), !dbg !5179
  %4 = bitcast i32* %valpred to i8*, !dbg !5180
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !5180
  call void @llvm.dbg.declare(metadata i32* %valpred, metadata !848, metadata !1195), !dbg !5181
  %5 = bitcast i32* %step to i8*, !dbg !5180
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !5180
  call void @llvm.dbg.declare(metadata i32* %step, metadata !849, metadata !1195), !dbg !5182
  %6 = bitcast i32* %delta to i8*, !dbg !5180
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !5180
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !850, metadata !1195), !dbg !5183
  %7 = bitcast i32* %index to i8*, !dbg !5180
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !5180
  call void @llvm.dbg.declare(metadata i32* %index, metadata !851, metadata !1195), !dbg !5184
  %8 = bitcast i32* %sign to i8*, !dbg !5180
  call void @llvm.lifetime.start(i64 4, i8* %8) #1, !dbg !5180
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !852, metadata !1195), !dbg !5185
  %9 = bitcast i32* %vpdiff to i8*, !dbg !5180
  call void @llvm.lifetime.start(i64 4, i8* %9) #1, !dbg !5180
  call void @llvm.dbg.declare(metadata i32* %vpdiff, metadata !853, metadata !1195), !dbg !5186
  %10 = bitcast %struct._object** %rv to i8*, !dbg !5187
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !5187
  call void @llvm.dbg.declare(metadata %struct._object** %rv, metadata !854, metadata !1195), !dbg !5188
  %11 = bitcast %struct._object** %str to i8*, !dbg !5187
  call void @llvm.lifetime.start(i64 8, i8* %11) #1, !dbg !5187
  call void @llvm.dbg.declare(metadata %struct._object** %str, metadata !855, metadata !1195), !dbg !5189
  %12 = bitcast i32* %inputbuffer to i8*, !dbg !5190
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !5190
  call void @llvm.dbg.declare(metadata i32* %inputbuffer, metadata !856, metadata !1195), !dbg !5191
  store i32 0, i32* %inputbuffer, align 4, !dbg !5191, !tbaa !1244
  %13 = bitcast i32* %bufferstep to i8*, !dbg !5190
  call void @llvm.lifetime.start(i64 4, i8* %13) #1, !dbg !5190
  call void @llvm.dbg.declare(metadata i32* %bufferstep, metadata !857, metadata !1195), !dbg !5192
  %14 = load i32, i32* %width.addr, align 4, !dbg !5193, !tbaa !1244
  %call = call i32 @audioop_check_size(i32 %14), !dbg !5195
  %tobool = icmp ne i32 %call, 0, !dbg !5195
  br i1 %tobool, label %if.end, label %if.then, !dbg !5196

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5197
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5197

if.end:                                           ; preds = %entry
  %15 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !5198, !tbaa !1200
  %cmp = icmp eq %struct._object* %15, @_Py_NoneStruct, !dbg !5200
  br i1 %cmp, label %if.then.1, label %if.else, !dbg !5201

if.then.1:                                        ; preds = %if.end
  store i32 0, i32* %valpred, align 4, !dbg !5202, !tbaa !1244
  store i32 0, i32* %index, align 4, !dbg !5204, !tbaa !1244
  br label %if.end.10, !dbg !5205

if.else:                                          ; preds = %if.end
  %16 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !5206, !tbaa !1200
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !5208
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5208, !tbaa !5209
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 19, !dbg !5211
  %18 = load i64, i64* %tp_flags, align 8, !dbg !5211, !tbaa !5212
  %and = and i64 %18, 67108864, !dbg !5215
  %cmp2 = icmp ne i64 %and, 0, !dbg !5216
  br i1 %cmp2, label %if.else.4, label %if.then.3, !dbg !5217

if.then.3:                                        ; preds = %if.else
  %19 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5218, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %19, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.58, i32 0, i32 0)), !dbg !5220
  store %struct._object* null, %struct._object** %retval, !dbg !5221
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5221

if.else.4:                                        ; preds = %if.else
  %20 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !5222, !tbaa !1200
  %call5 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i32* %valpred, i32* %index), !dbg !5224
  %tobool6 = icmp ne i32 %call5, 0, !dbg !5224
  br i1 %tobool6, label %if.end.8, label %if.then.7, !dbg !5225

if.then.7:                                        ; preds = %if.else.4
  store %struct._object* null, %struct._object** %retval, !dbg !5226
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5226

if.end.8:                                         ; preds = %if.else.4
  br label %if.end.9

if.end.9:                                         ; preds = %if.end.8
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.then.1
  %21 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5227, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %21, i32 0, i32 2, !dbg !5229
  %22 = load i64, i64* %len, align 8, !dbg !5229, !tbaa !1987
  %23 = load i32, i32* %width.addr, align 4, !dbg !5230, !tbaa !1244
  %conv = sext i32 %23 to i64, !dbg !5230
  %div = sdiv i64 4611686018427387903, %conv, !dbg !5231
  %cmp11 = icmp sgt i64 %22, %div, !dbg !5232
  br i1 %cmp11, label %if.then.13, label %if.end.14, !dbg !5233

if.then.13:                                       ; preds = %if.end.10
  %24 = load %struct._object*, %struct._object** @PyExc_MemoryError, align 8, !dbg !5234, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %24, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.52, i32 0, i32 0)), !dbg !5236
  store %struct._object* null, %struct._object** %retval, !dbg !5237
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5237

if.end.14:                                        ; preds = %if.end.10
  %25 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5238, !tbaa !1200
  %len15 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %25, i32 0, i32 2, !dbg !5239
  %26 = load i64, i64* %len15, align 8, !dbg !5239, !tbaa !1987
  %27 = load i32, i32* %width.addr, align 4, !dbg !5240, !tbaa !1244
  %conv16 = sext i32 %27 to i64, !dbg !5240
  %mul = mul i64 %26, %conv16, !dbg !5241
  %mul17 = mul i64 %mul, 2, !dbg !5242
  store i64 %mul17, i64* %outlen, align 8, !dbg !5243, !tbaa !1435
  %28 = load i64, i64* %outlen, align 8, !dbg !5244, !tbaa !1435
  %call18 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %28), !dbg !5245
  store %struct._object* %call18, %struct._object** %str, align 8, !dbg !5246, !tbaa !1200
  %29 = load %struct._object*, %struct._object** %str, align 8, !dbg !5247, !tbaa !1200
  %cmp19 = icmp eq %struct._object* %29, null, !dbg !5249
  br i1 %cmp19, label %if.then.21, label %if.end.22, !dbg !5250

if.then.21:                                       ; preds = %if.end.14
  store %struct._object* null, %struct._object** %retval, !dbg !5251
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5251

if.end.22:                                        ; preds = %if.end.14
  %30 = load %struct._object*, %struct._object** %str, align 8, !dbg !5252, !tbaa !1200
  %call23 = call i8* @PyBytes_AsString(%struct._object* %30), !dbg !5253
  store i8* %call23, i8** %ncp, align 8, !dbg !5254, !tbaa !1200
  %31 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5255, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %31, i32 0, i32 0, !dbg !5256
  %32 = load i8*, i8** %buf, align 8, !dbg !5256, !tbaa !2009
  store i8* %32, i8** %cp, align 8, !dbg !5257, !tbaa !1200
  %33 = load i32, i32* %index, align 4, !dbg !5258, !tbaa !1244
  %idxprom = sext i32 %33 to i64, !dbg !5259
  %arrayidx = getelementptr [89 x i32], [89 x i32]* @stepsizeTable, i32 0, i64 %idxprom, !dbg !5259
  %34 = load i32, i32* %arrayidx, align 4, !dbg !5259, !tbaa !1244
  store i32 %34, i32* %step, align 4, !dbg !5260, !tbaa !1244
  store i32 0, i32* %bufferstep, align 4, !dbg !5261, !tbaa !1244
  store i64 0, i64* %i, align 8, !dbg !5262, !tbaa !1435
  br label %for.cond, !dbg !5264

for.cond:                                         ; preds = %for.inc, %if.end.22
  %35 = load i64, i64* %i, align 8, !dbg !5265, !tbaa !1435
  %36 = load i64, i64* %outlen, align 8, !dbg !5269, !tbaa !1435
  %cmp24 = icmp slt i64 %35, %36, !dbg !5270
  br i1 %cmp24, label %for.body, label %for.end, !dbg !5271

for.body:                                         ; preds = %for.cond
  %37 = load i32, i32* %bufferstep, align 4, !dbg !5272, !tbaa !1244
  %tobool26 = icmp ne i32 %37, 0, !dbg !5272
  br i1 %tobool26, label %if.then.27, label %if.else.29, !dbg !5275

if.then.27:                                       ; preds = %for.body
  %38 = load i32, i32* %inputbuffer, align 4, !dbg !5276, !tbaa !1244
  %and28 = and i32 %38, 15, !dbg !5278
  store i32 %and28, i32* %delta, align 4, !dbg !5279, !tbaa !1244
  br label %if.end.32, !dbg !5280

if.else.29:                                       ; preds = %for.body
  %39 = load i8*, i8** %cp, align 8, !dbg !5281, !tbaa !1200
  %incdec.ptr = getelementptr i8, i8* %39, i32 1, !dbg !5281
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !5281, !tbaa !1200
  %40 = load i8, i8* %39, align 1, !dbg !5283, !tbaa !2013
  %conv30 = sext i8 %40 to i32, !dbg !5283
  store i32 %conv30, i32* %inputbuffer, align 4, !dbg !5284, !tbaa !1244
  %41 = load i32, i32* %inputbuffer, align 4, !dbg !5285, !tbaa !1244
  %shr = ashr i32 %41, 4, !dbg !5286
  %and31 = and i32 %shr, 15, !dbg !5287
  store i32 %and31, i32* %delta, align 4, !dbg !5288, !tbaa !1244
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.29, %if.then.27
  %42 = load i32, i32* %bufferstep, align 4, !dbg !5289, !tbaa !1244
  %tobool33 = icmp ne i32 %42, 0, !dbg !5290
  %lnot = xor i1 %tobool33, true, !dbg !5290
  %lnot.ext = zext i1 %lnot to i32, !dbg !5290
  store i32 %lnot.ext, i32* %bufferstep, align 4, !dbg !5291, !tbaa !1244
  %43 = load i32, i32* %delta, align 4, !dbg !5292, !tbaa !1244
  %idxprom34 = sext i32 %43 to i64, !dbg !5293
  %arrayidx35 = getelementptr [16 x i32], [16 x i32]* @indexTable, i32 0, i64 %idxprom34, !dbg !5293
  %44 = load i32, i32* %arrayidx35, align 4, !dbg !5293, !tbaa !1244
  %45 = load i32, i32* %index, align 4, !dbg !5294, !tbaa !1244
  %add = add i32 %45, %44, !dbg !5294
  store i32 %add, i32* %index, align 4, !dbg !5294, !tbaa !1244
  %46 = load i32, i32* %index, align 4, !dbg !5295, !tbaa !1244
  %cmp36 = icmp slt i32 %46, 0, !dbg !5297
  br i1 %cmp36, label %if.then.38, label %if.end.39, !dbg !5298

if.then.38:                                       ; preds = %if.end.32
  store i32 0, i32* %index, align 4, !dbg !5299, !tbaa !1244
  br label %if.end.39, !dbg !5301

if.end.39:                                        ; preds = %if.then.38, %if.end.32
  %47 = load i32, i32* %index, align 4, !dbg !5302, !tbaa !1244
  %cmp40 = icmp sgt i32 %47, 88, !dbg !5304
  br i1 %cmp40, label %if.then.42, label %if.end.43, !dbg !5305

if.then.42:                                       ; preds = %if.end.39
  store i32 88, i32* %index, align 4, !dbg !5306, !tbaa !1244
  br label %if.end.43, !dbg !5308

if.end.43:                                        ; preds = %if.then.42, %if.end.39
  %48 = load i32, i32* %delta, align 4, !dbg !5309, !tbaa !1244
  %and44 = and i32 %48, 8, !dbg !5310
  store i32 %and44, i32* %sign, align 4, !dbg !5311, !tbaa !1244
  %49 = load i32, i32* %delta, align 4, !dbg !5312, !tbaa !1244
  %and45 = and i32 %49, 7, !dbg !5313
  store i32 %and45, i32* %delta, align 4, !dbg !5314, !tbaa !1244
  %50 = load i32, i32* %step, align 4, !dbg !5315, !tbaa !1244
  %shr46 = ashr i32 %50, 3, !dbg !5316
  store i32 %shr46, i32* %vpdiff, align 4, !dbg !5317, !tbaa !1244
  %51 = load i32, i32* %delta, align 4, !dbg !5318, !tbaa !1244
  %and47 = and i32 %51, 4, !dbg !5320
  %tobool48 = icmp ne i32 %and47, 0, !dbg !5320
  br i1 %tobool48, label %if.then.49, label %if.end.51, !dbg !5321

if.then.49:                                       ; preds = %if.end.43
  %52 = load i32, i32* %step, align 4, !dbg !5322, !tbaa !1244
  %53 = load i32, i32* %vpdiff, align 4, !dbg !5324, !tbaa !1244
  %add50 = add i32 %53, %52, !dbg !5324
  store i32 %add50, i32* %vpdiff, align 4, !dbg !5324, !tbaa !1244
  br label %if.end.51, !dbg !5325

if.end.51:                                        ; preds = %if.then.49, %if.end.43
  %54 = load i32, i32* %delta, align 4, !dbg !5326, !tbaa !1244
  %and52 = and i32 %54, 2, !dbg !5328
  %tobool53 = icmp ne i32 %and52, 0, !dbg !5328
  br i1 %tobool53, label %if.then.54, label %if.end.57, !dbg !5329

if.then.54:                                       ; preds = %if.end.51
  %55 = load i32, i32* %step, align 4, !dbg !5330, !tbaa !1244
  %shr55 = ashr i32 %55, 1, !dbg !5332
  %56 = load i32, i32* %vpdiff, align 4, !dbg !5333, !tbaa !1244
  %add56 = add i32 %56, %shr55, !dbg !5333
  store i32 %add56, i32* %vpdiff, align 4, !dbg !5333, !tbaa !1244
  br label %if.end.57, !dbg !5334

if.end.57:                                        ; preds = %if.then.54, %if.end.51
  %57 = load i32, i32* %delta, align 4, !dbg !5335, !tbaa !1244
  %and58 = and i32 %57, 1, !dbg !5337
  %tobool59 = icmp ne i32 %and58, 0, !dbg !5337
  br i1 %tobool59, label %if.then.60, label %if.end.63, !dbg !5338

if.then.60:                                       ; preds = %if.end.57
  %58 = load i32, i32* %step, align 4, !dbg !5339, !tbaa !1244
  %shr61 = ashr i32 %58, 2, !dbg !5341
  %59 = load i32, i32* %vpdiff, align 4, !dbg !5342, !tbaa !1244
  %add62 = add i32 %59, %shr61, !dbg !5342
  store i32 %add62, i32* %vpdiff, align 4, !dbg !5342, !tbaa !1244
  br label %if.end.63, !dbg !5343

if.end.63:                                        ; preds = %if.then.60, %if.end.57
  %60 = load i32, i32* %sign, align 4, !dbg !5344, !tbaa !1244
  %tobool64 = icmp ne i32 %60, 0, !dbg !5344
  br i1 %tobool64, label %if.then.65, label %if.else.66, !dbg !5346

if.then.65:                                       ; preds = %if.end.63
  %61 = load i32, i32* %vpdiff, align 4, !dbg !5347, !tbaa !1244
  %62 = load i32, i32* %valpred, align 4, !dbg !5348, !tbaa !1244
  %sub = sub i32 %62, %61, !dbg !5348
  store i32 %sub, i32* %valpred, align 4, !dbg !5348, !tbaa !1244
  br label %if.end.68, !dbg !5349

if.else.66:                                       ; preds = %if.end.63
  %63 = load i32, i32* %vpdiff, align 4, !dbg !5350, !tbaa !1244
  %64 = load i32, i32* %valpred, align 4, !dbg !5351, !tbaa !1244
  %add67 = add i32 %64, %63, !dbg !5351
  store i32 %add67, i32* %valpred, align 4, !dbg !5351, !tbaa !1244
  br label %if.end.68

if.end.68:                                        ; preds = %if.else.66, %if.then.65
  %65 = load i32, i32* %valpred, align 4, !dbg !5352, !tbaa !1244
  %cmp69 = icmp sgt i32 %65, 32767, !dbg !5354
  br i1 %cmp69, label %if.then.71, label %if.else.72, !dbg !5355

if.then.71:                                       ; preds = %if.end.68
  store i32 32767, i32* %valpred, align 4, !dbg !5356, !tbaa !1244
  br label %if.end.77, !dbg !5357

if.else.72:                                       ; preds = %if.end.68
  %66 = load i32, i32* %valpred, align 4, !dbg !5358, !tbaa !1244
  %cmp73 = icmp slt i32 %66, -32768, !dbg !5360
  br i1 %cmp73, label %if.then.75, label %if.end.76, !dbg !5361

if.then.75:                                       ; preds = %if.else.72
  store i32 -32768, i32* %valpred, align 4, !dbg !5362, !tbaa !1244
  br label %if.end.76, !dbg !5363

if.end.76:                                        ; preds = %if.then.75, %if.else.72
  br label %if.end.77

if.end.77:                                        ; preds = %if.end.76, %if.then.71
  %67 = load i32, i32* %index, align 4, !dbg !5364, !tbaa !1244
  %idxprom78 = sext i32 %67 to i64, !dbg !5365
  %arrayidx79 = getelementptr [89 x i32], [89 x i32]* @stepsizeTable, i32 0, i64 %idxprom78, !dbg !5365
  %68 = load i32, i32* %arrayidx79, align 4, !dbg !5365, !tbaa !1244
  store i32 %68, i32* %step, align 4, !dbg !5366, !tbaa !1244
  br label %do.body, !dbg !5367

do.body:                                          ; preds = %if.end.77
  %69 = load i32, i32* %width.addr, align 4, !dbg !5368, !tbaa !1244
  %cmp80 = icmp eq i32 %69, 1, !dbg !5372
  br i1 %cmp80, label %if.then.82, label %if.else.86, !dbg !5373

if.then.82:                                       ; preds = %do.body
  br label %do.body.83, !dbg !5374

do.body.83:                                       ; preds = %if.then.82
  %70 = load i32, i32* %valpred, align 4, !dbg !5376, !tbaa !1244
  %shl = shl i32 %70, 16, !dbg !5379
  %shr84 = ashr i32 %shl, 24, !dbg !5380
  %conv85 = trunc i32 %shr84 to i8, !dbg !5381
  %71 = load i8*, i8** %ncp, align 8, !dbg !5382, !tbaa !1200
  %72 = load i64, i64* %i, align 8, !dbg !5383, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %71, i64 %72, !dbg !5384
  store i8 %conv85, i8* %add.ptr, align 1, !dbg !5385, !tbaa !2013
  br label %do.cond, !dbg !5386

do.cond:                                          ; preds = %do.body.83
  br label %do.end, !dbg !5387

do.end:                                           ; preds = %do.cond
  br label %if.end.129, !dbg !5389

if.else.86:                                       ; preds = %do.body
  %73 = load i32, i32* %width.addr, align 4, !dbg !5391, !tbaa !1244
  %cmp87 = icmp eq i32 %73, 2, !dbg !5394
  br i1 %cmp87, label %if.then.89, label %if.else.97, !dbg !5395

if.then.89:                                       ; preds = %if.else.86
  br label %do.body.90, !dbg !5396

do.body.90:                                       ; preds = %if.then.89
  %74 = load i32, i32* %valpred, align 4, !dbg !5398, !tbaa !1244
  %shl91 = shl i32 %74, 16, !dbg !5401
  %shr92 = ashr i32 %shl91, 16, !dbg !5402
  %conv93 = trunc i32 %shr92 to i16, !dbg !5403
  %75 = load i8*, i8** %ncp, align 8, !dbg !5404, !tbaa !1200
  %76 = load i64, i64* %i, align 8, !dbg !5405, !tbaa !1435
  %add.ptr94 = getelementptr i8, i8* %75, i64 %76, !dbg !5406
  %77 = bitcast i8* %add.ptr94 to i16*, !dbg !5407
  store i16 %conv93, i16* %77, align 2, !dbg !5408, !tbaa !2026
  br label %do.cond.95, !dbg !5409

do.cond.95:                                       ; preds = %do.body.90
  br label %do.end.96, !dbg !5410

do.end.96:                                        ; preds = %do.cond.95
  br label %if.end.128, !dbg !5412

if.else.97:                                       ; preds = %if.else.86
  %78 = load i32, i32* %width.addr, align 4, !dbg !5414, !tbaa !1244
  %cmp98 = icmp eq i32 %78, 3, !dbg !5417
  br i1 %cmp98, label %if.then.100, label %if.else.121, !dbg !5418

if.then.100:                                      ; preds = %if.else.97
  br label %do.body.101, !dbg !5419

do.body.101:                                      ; preds = %if.then.100
  %79 = load i32, i32* %valpred, align 4, !dbg !5421, !tbaa !1244
  %shl102 = shl i32 %79, 16, !dbg !5424
  %shr103 = ashr i32 %shl102, 8, !dbg !5425
  %conv104 = trunc i32 %shr103 to i8, !dbg !5426
  %80 = load i8*, i8** %ncp, align 8, !dbg !5427, !tbaa !1200
  %81 = load i64, i64* %i, align 8, !dbg !5428, !tbaa !1435
  %add.ptr105 = getelementptr i8, i8* %80, i64 %81, !dbg !5429
  %arrayidx106 = getelementptr i8, i8* %add.ptr105, i64 0, !dbg !5430
  store i8 %conv104, i8* %arrayidx106, align 1, !dbg !5431, !tbaa !2013
  %82 = load i32, i32* %valpred, align 4, !dbg !5432, !tbaa !1244
  %shl107 = shl i32 %82, 16, !dbg !5433
  %shr108 = ashr i32 %shl107, 8, !dbg !5434
  %shr109 = ashr i32 %shr108, 8, !dbg !5435
  %conv110 = trunc i32 %shr109 to i8, !dbg !5436
  %83 = load i8*, i8** %ncp, align 8, !dbg !5437, !tbaa !1200
  %84 = load i64, i64* %i, align 8, !dbg !5438, !tbaa !1435
  %add.ptr111 = getelementptr i8, i8* %83, i64 %84, !dbg !5439
  %arrayidx112 = getelementptr i8, i8* %add.ptr111, i64 1, !dbg !5440
  store i8 %conv110, i8* %arrayidx112, align 1, !dbg !5441, !tbaa !2013
  %85 = load i32, i32* %valpred, align 4, !dbg !5442, !tbaa !1244
  %shl113 = shl i32 %85, 16, !dbg !5443
  %shr114 = ashr i32 %shl113, 8, !dbg !5444
  %shr115 = ashr i32 %shr114, 16, !dbg !5445
  %conv116 = trunc i32 %shr115 to i8, !dbg !5446
  %86 = load i8*, i8** %ncp, align 8, !dbg !5447, !tbaa !1200
  %87 = load i64, i64* %i, align 8, !dbg !5448, !tbaa !1435
  %add.ptr117 = getelementptr i8, i8* %86, i64 %87, !dbg !5449
  %arrayidx118 = getelementptr i8, i8* %add.ptr117, i64 2, !dbg !5450
  store i8 %conv116, i8* %arrayidx118, align 1, !dbg !5451, !tbaa !2013
  br label %do.cond.119, !dbg !5452

do.cond.119:                                      ; preds = %do.body.101
  br label %do.end.120, !dbg !5453

do.end.120:                                       ; preds = %do.cond.119
  br label %if.end.127, !dbg !5455

if.else.121:                                      ; preds = %if.else.97
  br label %do.body.122, !dbg !5457

do.body.122:                                      ; preds = %if.else.121
  %88 = load i32, i32* %valpred, align 4, !dbg !5459, !tbaa !1244
  %shl123 = shl i32 %88, 16, !dbg !5462
  %89 = load i8*, i8** %ncp, align 8, !dbg !5463, !tbaa !1200
  %90 = load i64, i64* %i, align 8, !dbg !5464, !tbaa !1435
  %add.ptr124 = getelementptr i8, i8* %89, i64 %90, !dbg !5465
  %91 = bitcast i8* %add.ptr124 to i32*, !dbg !5466
  store i32 %shl123, i32* %91, align 4, !dbg !5467, !tbaa !1244
  br label %do.cond.125, !dbg !5468

do.cond.125:                                      ; preds = %do.body.122
  br label %do.end.126, !dbg !5469

do.end.126:                                       ; preds = %do.cond.125
  br label %if.end.127

if.end.127:                                       ; preds = %do.end.126, %do.end.120
  br label %if.end.128

if.end.128:                                       ; preds = %if.end.127, %do.end.96
  br label %if.end.129

if.end.129:                                       ; preds = %if.end.128, %do.end
  br label %do.cond.130, !dbg !5471

do.cond.130:                                      ; preds = %if.end.129
  br label %do.end.131, !dbg !5473

do.end.131:                                       ; preds = %do.cond.130
  br label %for.inc, !dbg !5475

for.inc:                                          ; preds = %do.end.131
  %92 = load i32, i32* %width.addr, align 4, !dbg !5476, !tbaa !1244
  %conv132 = sext i32 %92 to i64, !dbg !5476
  %93 = load i64, i64* %i, align 8, !dbg !5477, !tbaa !1435
  %add133 = add i64 %93, %conv132, !dbg !5477
  store i64 %add133, i64* %i, align 8, !dbg !5477, !tbaa !1435
  br label %for.cond, !dbg !5478

for.end:                                          ; preds = %for.cond
  %94 = load %struct._object*, %struct._object** %str, align 8, !dbg !5479, !tbaa !1200
  %95 = load i32, i32* %valpred, align 4, !dbg !5480, !tbaa !1244
  %96 = load i32, i32* %index, align 4, !dbg !5481, !tbaa !1244
  %call134 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.60, i32 0, i32 0), %struct._object* %94, i32 %95, i32 %96), !dbg !5482
  store %struct._object* %call134, %struct._object** %rv, align 8, !dbg !5483, !tbaa !1200
  br label %do.body.135, !dbg !5484

do.body.135:                                      ; preds = %for.end
  %97 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5485
  call void @llvm.lifetime.start(i64 8, i8* %97) #1, !dbg !5485
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !858, metadata !1195), !dbg !5487
  %98 = load %struct._object*, %struct._object** %str, align 8, !dbg !5488, !tbaa !1200
  store %struct._object* %98, %struct._object** %_py_decref_tmp, align 8, !dbg !5487, !tbaa !1200
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5489, !tbaa !1200
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %99, i32 0, i32 0, !dbg !5491
  %100 = load i64, i64* %ob_refcnt, align 8, !dbg !5492, !tbaa !5493
  %dec = add i64 %100, -1, !dbg !5492
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5492, !tbaa !5493
  %cmp136 = icmp ne i64 %dec, 0, !dbg !5494
  br i1 %cmp136, label %if.then.138, label %if.else.139, !dbg !5495

if.then.138:                                      ; preds = %do.body.135
  br label %if.end.141, !dbg !5496

if.else.139:                                      ; preds = %do.body.135
  %101 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5498, !tbaa !1200
  %ob_type140 = getelementptr inbounds %struct._object, %struct._object* %101, i32 0, i32 1, !dbg !5500
  %102 = load %struct._typeobject*, %struct._typeobject** %ob_type140, align 8, !dbg !5500, !tbaa !5209
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %102, i32 0, i32 4, !dbg !5501
  %103 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5501, !tbaa !5502
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5503, !tbaa !1200
  call void %103(%struct._object* %104), !dbg !5504
  br label %if.end.141

if.end.141:                                       ; preds = %if.else.139, %if.then.138
  %105 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5505
  call void @llvm.lifetime.end(i64 8, i8* %105) #1, !dbg !5505
  br label %do.cond.142, !dbg !5507

do.cond.142:                                      ; preds = %if.end.141
  br label %do.end.143, !dbg !5508

do.end.143:                                       ; preds = %do.cond.142
  %106 = load %struct._object*, %struct._object** %rv, align 8, !dbg !5510, !tbaa !1200
  store %struct._object* %106, %struct._object** %retval, !dbg !5511
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5511

cleanup:                                          ; preds = %do.end.143, %if.then.21, %if.then.13, %if.then.7, %if.then.3, %if.then
  %107 = bitcast i32* %bufferstep to i8*, !dbg !5512
  call void @llvm.lifetime.end(i64 4, i8* %107) #1, !dbg !5512
  %108 = bitcast i32* %inputbuffer to i8*, !dbg !5512
  call void @llvm.lifetime.end(i64 4, i8* %108) #1, !dbg !5512
  %109 = bitcast %struct._object** %str to i8*, !dbg !5512
  call void @llvm.lifetime.end(i64 8, i8* %109) #1, !dbg !5512
  %110 = bitcast %struct._object** %rv to i8*, !dbg !5512
  call void @llvm.lifetime.end(i64 8, i8* %110) #1, !dbg !5512
  %111 = bitcast i32* %vpdiff to i8*, !dbg !5512
  call void @llvm.lifetime.end(i64 4, i8* %111) #1, !dbg !5512
  %112 = bitcast i32* %sign to i8*, !dbg !5512
  call void @llvm.lifetime.end(i64 4, i8* %112) #1, !dbg !5512
  %113 = bitcast i32* %index to i8*, !dbg !5512
  call void @llvm.lifetime.end(i64 4, i8* %113) #1, !dbg !5512
  %114 = bitcast i32* %delta to i8*, !dbg !5512
  call void @llvm.lifetime.end(i64 4, i8* %114) #1, !dbg !5512
  %115 = bitcast i32* %step to i8*, !dbg !5512
  call void @llvm.lifetime.end(i64 4, i8* %115) #1, !dbg !5512
  %116 = bitcast i32* %valpred to i8*, !dbg !5512
  call void @llvm.lifetime.end(i64 4, i8* %116) #1, !dbg !5512
  %117 = bitcast i64* %outlen to i8*, !dbg !5512
  call void @llvm.lifetime.end(i64 8, i8* %117) #1, !dbg !5512
  %118 = bitcast i64* %i to i8*, !dbg !5512
  call void @llvm.lifetime.end(i64 8, i8* %118) #1, !dbg !5512
  %119 = bitcast i8** %ncp to i8*, !dbg !5512
  call void @llvm.lifetime.end(i64 8, i8* %119) #1, !dbg !5512
  %120 = bitcast i8** %cp to i8*, !dbg !5512
  call void @llvm.lifetime.end(i64 8, i8* %120) #1, !dbg !5512
  %121 = load %struct._object*, %struct._object** %retval, !dbg !5512
  ret %struct._object* %121, !dbg !5512
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_lin2adpcm_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width, %struct._object* %state) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %state.addr = alloca %struct._object*, align 8
  %ncp = alloca i8*, align 8
  %i = alloca i64, align 8
  %step = alloca i32, align 4
  %valpred = alloca i32, align 4
  %delta = alloca i32, align 4
  %index = alloca i32, align 4
  %sign = alloca i32, align 4
  %vpdiff = alloca i32, align 4
  %diff = alloca i32, align 4
  %rv = alloca %struct._object*, align 8
  %str = alloca %struct._object*, align 8
  %outputbuffer = alloca i32, align 4
  %bufferstep = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %val = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !870, metadata !1195), !dbg !5513
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !871, metadata !1195), !dbg !5514
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !872, metadata !1195), !dbg !5515
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !873, metadata !1195), !dbg !5516
  %0 = bitcast i8** %ncp to i8*, !dbg !5517
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5517
  call void @llvm.dbg.declare(metadata i8** %ncp, metadata !874, metadata !1195), !dbg !5518
  %1 = bitcast i64* %i to i8*, !dbg !5519
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5519
  call void @llvm.dbg.declare(metadata i64* %i, metadata !875, metadata !1195), !dbg !5520
  %2 = bitcast i32* %step to i8*, !dbg !5521
  call void @llvm.lifetime.start(i64 4, i8* %2) #1, !dbg !5521
  call void @llvm.dbg.declare(metadata i32* %step, metadata !876, metadata !1195), !dbg !5522
  %3 = bitcast i32* %valpred to i8*, !dbg !5521
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !5521
  call void @llvm.dbg.declare(metadata i32* %valpred, metadata !877, metadata !1195), !dbg !5523
  %4 = bitcast i32* %delta to i8*, !dbg !5521
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !5521
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !878, metadata !1195), !dbg !5524
  %5 = bitcast i32* %index to i8*, !dbg !5521
  call void @llvm.lifetime.start(i64 4, i8* %5) #1, !dbg !5521
  call void @llvm.dbg.declare(metadata i32* %index, metadata !879, metadata !1195), !dbg !5525
  %6 = bitcast i32* %sign to i8*, !dbg !5521
  call void @llvm.lifetime.start(i64 4, i8* %6) #1, !dbg !5521
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !880, metadata !1195), !dbg !5526
  %7 = bitcast i32* %vpdiff to i8*, !dbg !5521
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !5521
  call void @llvm.dbg.declare(metadata i32* %vpdiff, metadata !881, metadata !1195), !dbg !5527
  %8 = bitcast i32* %diff to i8*, !dbg !5521
  call void @llvm.lifetime.start(i64 4, i8* %8) #1, !dbg !5521
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !882, metadata !1195), !dbg !5528
  %9 = bitcast %struct._object** %rv to i8*, !dbg !5529
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !5529
  call void @llvm.dbg.declare(metadata %struct._object** %rv, metadata !883, metadata !1195), !dbg !5530
  store %struct._object* null, %struct._object** %rv, align 8, !dbg !5530, !tbaa !1200
  %10 = bitcast %struct._object** %str to i8*, !dbg !5529
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !5529
  call void @llvm.dbg.declare(metadata %struct._object** %str, metadata !884, metadata !1195), !dbg !5531
  %11 = bitcast i32* %outputbuffer to i8*, !dbg !5532
  call void @llvm.lifetime.start(i64 4, i8* %11) #1, !dbg !5532
  call void @llvm.dbg.declare(metadata i32* %outputbuffer, metadata !885, metadata !1195), !dbg !5533
  store i32 0, i32* %outputbuffer, align 4, !dbg !5533, !tbaa !1244
  %12 = bitcast i32* %bufferstep to i8*, !dbg !5532
  call void @llvm.lifetime.start(i64 4, i8* %12) #1, !dbg !5532
  call void @llvm.dbg.declare(metadata i32* %bufferstep, metadata !886, metadata !1195), !dbg !5534
  %13 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5535, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %13, i32 0, i32 2, !dbg !5537
  %14 = load i64, i64* %len, align 8, !dbg !5537, !tbaa !1987
  %15 = load i32, i32* %width.addr, align 4, !dbg !5538, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %14, i32 %15), !dbg !5539
  %tobool = icmp ne i32 %call, 0, !dbg !5539
  br i1 %tobool, label %if.end, label %if.then, !dbg !5540

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5541
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5541

if.end:                                           ; preds = %entry
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5542, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 2, !dbg !5543
  %17 = load i64, i64* %len1, align 8, !dbg !5543, !tbaa !1987
  %18 = load i32, i32* %width.addr, align 4, !dbg !5544, !tbaa !1244
  %mul = mul i32 %18, 2, !dbg !5545
  %conv = sext i32 %mul to i64, !dbg !5546
  %div = sdiv i64 %17, %conv, !dbg !5547
  %call2 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %div), !dbg !5548
  store %struct._object* %call2, %struct._object** %str, align 8, !dbg !5549, !tbaa !1200
  %19 = load %struct._object*, %struct._object** %str, align 8, !dbg !5550, !tbaa !1200
  %cmp = icmp eq %struct._object* %19, null, !dbg !5552
  br i1 %cmp, label %if.then.4, label %if.end.5, !dbg !5553

if.then.4:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !5554
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5554

if.end.5:                                         ; preds = %if.end
  %20 = load %struct._object*, %struct._object** %str, align 8, !dbg !5555, !tbaa !1200
  %call6 = call i8* @PyBytes_AsString(%struct._object* %20), !dbg !5556
  store i8* %call6, i8** %ncp, align 8, !dbg !5557, !tbaa !1200
  %21 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !5558, !tbaa !1200
  %cmp7 = icmp eq %struct._object* %21, @_Py_NoneStruct, !dbg !5560
  br i1 %cmp7, label %if.then.9, label %if.else, !dbg !5561

if.then.9:                                        ; preds = %if.end.5
  store i32 0, i32* %valpred, align 4, !dbg !5562, !tbaa !1244
  store i32 0, i32* %index, align 4, !dbg !5564, !tbaa !1244
  br label %if.end.19, !dbg !5565

if.else:                                          ; preds = %if.end.5
  %22 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !5566, !tbaa !1200
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !5568
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5568, !tbaa !5209
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 19, !dbg !5569
  %24 = load i64, i64* %tp_flags, align 8, !dbg !5569, !tbaa !5212
  %and = and i64 %24, 67108864, !dbg !5570
  %cmp10 = icmp ne i64 %and, 0, !dbg !5571
  br i1 %cmp10, label %if.else.13, label %if.then.12, !dbg !5572

if.then.12:                                       ; preds = %if.else
  %25 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5573, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %25, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.58, i32 0, i32 0)), !dbg !5575
  br label %exit, !dbg !5576

if.else.13:                                       ; preds = %if.else
  %26 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !5577, !tbaa !1200
  %call14 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %26, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i32* %valpred, i32* %index), !dbg !5579
  %tobool15 = icmp ne i32 %call14, 0, !dbg !5579
  br i1 %tobool15, label %if.end.17, label %if.then.16, !dbg !5580

if.then.16:                                       ; preds = %if.else.13
  br label %exit, !dbg !5581

if.end.17:                                        ; preds = %if.else.13
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.17
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %if.then.9
  %27 = load i32, i32* %index, align 4, !dbg !5583, !tbaa !1244
  %idxprom = sext i32 %27 to i64, !dbg !5584
  %arrayidx = getelementptr [89 x i32], [89 x i32]* @stepsizeTable, i32 0, i64 %idxprom, !dbg !5584
  %28 = load i32, i32* %arrayidx, align 4, !dbg !5584, !tbaa !1244
  store i32 %28, i32* %step, align 4, !dbg !5585, !tbaa !1244
  store i32 1, i32* %bufferstep, align 4, !dbg !5586, !tbaa !1244
  store i64 0, i64* %i, align 8, !dbg !5587, !tbaa !1435
  br label %for.cond, !dbg !5588

for.cond:                                         ; preds = %for.inc, %if.end.19
  %29 = load i64, i64* %i, align 8, !dbg !5589, !tbaa !1435
  %30 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5592, !tbaa !1200
  %len20 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %30, i32 0, i32 2, !dbg !5593
  %31 = load i64, i64* %len20, align 8, !dbg !5593, !tbaa !1987
  %cmp21 = icmp slt i64 %29, %31, !dbg !5594
  br i1 %cmp21, label %for.body, label %for.end, !dbg !5595

for.body:                                         ; preds = %for.cond
  %32 = bitcast i32* %val to i8*, !dbg !5596
  call void @llvm.lifetime.start(i64 4, i8* %32) #1, !dbg !5596
  call void @llvm.dbg.declare(metadata i32* %val, metadata !887, metadata !1195), !dbg !5597
  %33 = load i32, i32* %width.addr, align 4, !dbg !5598, !tbaa !1244
  %cmp23 = icmp eq i32 %33, 1, !dbg !5599
  br i1 %cmp23, label %cond.true, label %cond.false, !dbg !5600

cond.true:                                        ; preds = %for.body
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5601, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %34, i32 0, i32 0, !dbg !5603
  %35 = load i8*, i8** %buf, align 8, !dbg !5603, !tbaa !2009
  %36 = load i64, i64* %i, align 8, !dbg !5604, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %35, i64 %36, !dbg !5605
  %37 = load i8, i8* %add.ptr, align 1, !dbg !5606, !tbaa !2013
  %conv25 = sext i8 %37 to i32, !dbg !5607
  %shl = shl i32 %conv25, 24, !dbg !5608
  br label %cond.end.58, !dbg !5600

cond.false:                                       ; preds = %for.body
  %38 = load i32, i32* %width.addr, align 4, !dbg !5609, !tbaa !1244
  %cmp26 = icmp eq i32 %38, 2, !dbg !5611
  br i1 %cmp26, label %cond.true.28, label %cond.false.33, !dbg !5612

cond.true.28:                                     ; preds = %cond.false
  %39 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5613, !tbaa !1200
  %buf29 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %39, i32 0, i32 0, !dbg !5615
  %40 = load i8*, i8** %buf29, align 8, !dbg !5615, !tbaa !2009
  %41 = load i64, i64* %i, align 8, !dbg !5616, !tbaa !1435
  %add.ptr30 = getelementptr i8, i8* %40, i64 %41, !dbg !5617
  %42 = bitcast i8* %add.ptr30 to i16*, !dbg !5618
  %43 = load i16, i16* %42, align 2, !dbg !5619, !tbaa !2026
  %conv31 = sext i16 %43 to i32, !dbg !5620
  %shl32 = shl i32 %conv31, 16, !dbg !5621
  br label %cond.end.56, !dbg !5612

cond.false.33:                                    ; preds = %cond.false
  %44 = load i32, i32* %width.addr, align 4, !dbg !5622, !tbaa !1244
  %cmp34 = icmp eq i32 %44, 3, !dbg !5624
  br i1 %cmp34, label %cond.true.36, label %cond.false.53, !dbg !5625

cond.true.36:                                     ; preds = %cond.false.33
  %45 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5626, !tbaa !1200
  %buf37 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %45, i32 0, i32 0, !dbg !5628
  %46 = load i8*, i8** %buf37, align 8, !dbg !5628, !tbaa !2009
  %47 = load i64, i64* %i, align 8, !dbg !5629, !tbaa !1435
  %add.ptr38 = getelementptr i8, i8* %46, i64 %47, !dbg !5630
  %arrayidx39 = getelementptr i8, i8* %add.ptr38, i64 0, !dbg !5631
  %48 = load i8, i8* %arrayidx39, align 1, !dbg !5631, !tbaa !2013
  %conv40 = zext i8 %48 to i32, !dbg !5631
  %49 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5632, !tbaa !1200
  %buf41 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %49, i32 0, i32 0, !dbg !5633
  %50 = load i8*, i8** %buf41, align 8, !dbg !5633, !tbaa !2009
  %51 = load i64, i64* %i, align 8, !dbg !5634, !tbaa !1435
  %add.ptr42 = getelementptr i8, i8* %50, i64 %51, !dbg !5635
  %arrayidx43 = getelementptr i8, i8* %add.ptr42, i64 1, !dbg !5636
  %52 = load i8, i8* %arrayidx43, align 1, !dbg !5636, !tbaa !2013
  %conv44 = zext i8 %52 to i32, !dbg !5636
  %shl45 = shl i32 %conv44, 8, !dbg !5637
  %add = add i32 %conv40, %shl45, !dbg !5638
  %53 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5639, !tbaa !1200
  %buf46 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %53, i32 0, i32 0, !dbg !5640
  %54 = load i8*, i8** %buf46, align 8, !dbg !5640, !tbaa !2009
  %55 = load i64, i64* %i, align 8, !dbg !5641, !tbaa !1435
  %add.ptr47 = getelementptr i8, i8* %54, i64 %55, !dbg !5642
  %arrayidx48 = getelementptr i8, i8* %add.ptr47, i64 2, !dbg !5643
  %56 = load i8, i8* %arrayidx48, align 1, !dbg !5643, !tbaa !2013
  %conv49 = sext i8 %56 to i32, !dbg !5643
  %shl50 = shl i32 %conv49, 16, !dbg !5644
  %add51 = add i32 %add, %shl50, !dbg !5645
  %shl52 = shl i32 %add51, 8, !dbg !5646
  br label %cond.end, !dbg !5625

cond.false.53:                                    ; preds = %cond.false.33
  %57 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5647, !tbaa !1200
  %buf54 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %57, i32 0, i32 0, !dbg !5649
  %58 = load i8*, i8** %buf54, align 8, !dbg !5649, !tbaa !2009
  %59 = load i64, i64* %i, align 8, !dbg !5650, !tbaa !1435
  %add.ptr55 = getelementptr i8, i8* %58, i64 %59, !dbg !5651
  %60 = bitcast i8* %add.ptr55 to i32*, !dbg !5652
  %61 = load i32, i32* %60, align 4, !dbg !5653, !tbaa !1244
  br label %cond.end, !dbg !5625

cond.end:                                         ; preds = %cond.false.53, %cond.true.36
  %cond = phi i32 [ %shl52, %cond.true.36 ], [ %61, %cond.false.53 ], !dbg !5625
  br label %cond.end.56, !dbg !5654

cond.end.56:                                      ; preds = %cond.end, %cond.true.28
  %cond57 = phi i32 [ %shl32, %cond.true.28 ], [ %cond, %cond.end ], !dbg !5612
  br label %cond.end.58, !dbg !5657

cond.end.58:                                      ; preds = %cond.end.56, %cond.true
  %cond59 = phi i32 [ %shl, %cond.true ], [ %cond57, %cond.end.56 ], !dbg !5600
  %shr = ashr i32 %cond59, 16, !dbg !5660
  store i32 %shr, i32* %val, align 4, !dbg !5597, !tbaa !1244
  %62 = load i32, i32* %val, align 4, !dbg !5663, !tbaa !1244
  %63 = load i32, i32* %valpred, align 4, !dbg !5665, !tbaa !1244
  %cmp60 = icmp slt i32 %62, %63, !dbg !5666
  br i1 %cmp60, label %if.then.62, label %if.else.63, !dbg !5667

if.then.62:                                       ; preds = %cond.end.58
  %64 = load i32, i32* %valpred, align 4, !dbg !5668, !tbaa !1244
  %65 = load i32, i32* %val, align 4, !dbg !5670, !tbaa !1244
  %sub = sub i32 %64, %65, !dbg !5671
  store i32 %sub, i32* %diff, align 4, !dbg !5672, !tbaa !1244
  store i32 8, i32* %sign, align 4, !dbg !5673, !tbaa !1244
  br label %if.end.65, !dbg !5674

if.else.63:                                       ; preds = %cond.end.58
  %66 = load i32, i32* %val, align 4, !dbg !5675, !tbaa !1244
  %67 = load i32, i32* %valpred, align 4, !dbg !5677, !tbaa !1244
  %sub64 = sub i32 %66, %67, !dbg !5678
  store i32 %sub64, i32* %diff, align 4, !dbg !5679, !tbaa !1244
  store i32 0, i32* %sign, align 4, !dbg !5680, !tbaa !1244
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.63, %if.then.62
  store i32 0, i32* %delta, align 4, !dbg !5681, !tbaa !1244
  %68 = load i32, i32* %step, align 4, !dbg !5682, !tbaa !1244
  %shr66 = ashr i32 %68, 3, !dbg !5683
  store i32 %shr66, i32* %vpdiff, align 4, !dbg !5684, !tbaa !1244
  %69 = load i32, i32* %diff, align 4, !dbg !5685, !tbaa !1244
  %70 = load i32, i32* %step, align 4, !dbg !5687, !tbaa !1244
  %cmp67 = icmp sge i32 %69, %70, !dbg !5688
  br i1 %cmp67, label %if.then.69, label %if.end.72, !dbg !5689

if.then.69:                                       ; preds = %if.end.65
  store i32 4, i32* %delta, align 4, !dbg !5690, !tbaa !1244
  %71 = load i32, i32* %step, align 4, !dbg !5692, !tbaa !1244
  %72 = load i32, i32* %diff, align 4, !dbg !5693, !tbaa !1244
  %sub70 = sub i32 %72, %71, !dbg !5693
  store i32 %sub70, i32* %diff, align 4, !dbg !5693, !tbaa !1244
  %73 = load i32, i32* %step, align 4, !dbg !5694, !tbaa !1244
  %74 = load i32, i32* %vpdiff, align 4, !dbg !5695, !tbaa !1244
  %add71 = add i32 %74, %73, !dbg !5695
  store i32 %add71, i32* %vpdiff, align 4, !dbg !5695, !tbaa !1244
  br label %if.end.72, !dbg !5696

if.end.72:                                        ; preds = %if.then.69, %if.end.65
  %75 = load i32, i32* %step, align 4, !dbg !5697, !tbaa !1244
  %shr73 = ashr i32 %75, 1, !dbg !5697
  store i32 %shr73, i32* %step, align 4, !dbg !5697, !tbaa !1244
  %76 = load i32, i32* %diff, align 4, !dbg !5698, !tbaa !1244
  %77 = load i32, i32* %step, align 4, !dbg !5700, !tbaa !1244
  %cmp74 = icmp sge i32 %76, %77, !dbg !5701
  br i1 %cmp74, label %if.then.76, label %if.end.79, !dbg !5702

if.then.76:                                       ; preds = %if.end.72
  %78 = load i32, i32* %delta, align 4, !dbg !5703, !tbaa !1244
  %or = or i32 %78, 2, !dbg !5703
  store i32 %or, i32* %delta, align 4, !dbg !5703, !tbaa !1244
  %79 = load i32, i32* %step, align 4, !dbg !5705, !tbaa !1244
  %80 = load i32, i32* %diff, align 4, !dbg !5706, !tbaa !1244
  %sub77 = sub i32 %80, %79, !dbg !5706
  store i32 %sub77, i32* %diff, align 4, !dbg !5706, !tbaa !1244
  %81 = load i32, i32* %step, align 4, !dbg !5707, !tbaa !1244
  %82 = load i32, i32* %vpdiff, align 4, !dbg !5708, !tbaa !1244
  %add78 = add i32 %82, %81, !dbg !5708
  store i32 %add78, i32* %vpdiff, align 4, !dbg !5708, !tbaa !1244
  br label %if.end.79, !dbg !5709

if.end.79:                                        ; preds = %if.then.76, %if.end.72
  %83 = load i32, i32* %step, align 4, !dbg !5710, !tbaa !1244
  %shr80 = ashr i32 %83, 1, !dbg !5710
  store i32 %shr80, i32* %step, align 4, !dbg !5710, !tbaa !1244
  %84 = load i32, i32* %diff, align 4, !dbg !5711, !tbaa !1244
  %85 = load i32, i32* %step, align 4, !dbg !5713, !tbaa !1244
  %cmp81 = icmp sge i32 %84, %85, !dbg !5714
  br i1 %cmp81, label %if.then.83, label %if.end.86, !dbg !5715

if.then.83:                                       ; preds = %if.end.79
  %86 = load i32, i32* %delta, align 4, !dbg !5716, !tbaa !1244
  %or84 = or i32 %86, 1, !dbg !5716
  store i32 %or84, i32* %delta, align 4, !dbg !5716, !tbaa !1244
  %87 = load i32, i32* %step, align 4, !dbg !5718, !tbaa !1244
  %88 = load i32, i32* %vpdiff, align 4, !dbg !5719, !tbaa !1244
  %add85 = add i32 %88, %87, !dbg !5719
  store i32 %add85, i32* %vpdiff, align 4, !dbg !5719, !tbaa !1244
  br label %if.end.86, !dbg !5720

if.end.86:                                        ; preds = %if.then.83, %if.end.79
  %89 = load i32, i32* %sign, align 4, !dbg !5721, !tbaa !1244
  %tobool87 = icmp ne i32 %89, 0, !dbg !5721
  br i1 %tobool87, label %if.then.88, label %if.else.90, !dbg !5723

if.then.88:                                       ; preds = %if.end.86
  %90 = load i32, i32* %vpdiff, align 4, !dbg !5724, !tbaa !1244
  %91 = load i32, i32* %valpred, align 4, !dbg !5725, !tbaa !1244
  %sub89 = sub i32 %91, %90, !dbg !5725
  store i32 %sub89, i32* %valpred, align 4, !dbg !5725, !tbaa !1244
  br label %if.end.92, !dbg !5726

if.else.90:                                       ; preds = %if.end.86
  %92 = load i32, i32* %vpdiff, align 4, !dbg !5727, !tbaa !1244
  %93 = load i32, i32* %valpred, align 4, !dbg !5728, !tbaa !1244
  %add91 = add i32 %93, %92, !dbg !5728
  store i32 %add91, i32* %valpred, align 4, !dbg !5728, !tbaa !1244
  br label %if.end.92

if.end.92:                                        ; preds = %if.else.90, %if.then.88
  %94 = load i32, i32* %valpred, align 4, !dbg !5729, !tbaa !1244
  %cmp93 = icmp sgt i32 %94, 32767, !dbg !5731
  br i1 %cmp93, label %if.then.95, label %if.else.96, !dbg !5732

if.then.95:                                       ; preds = %if.end.92
  store i32 32767, i32* %valpred, align 4, !dbg !5733, !tbaa !1244
  br label %if.end.101, !dbg !5734

if.else.96:                                       ; preds = %if.end.92
  %95 = load i32, i32* %valpred, align 4, !dbg !5735, !tbaa !1244
  %cmp97 = icmp slt i32 %95, -32768, !dbg !5737
  br i1 %cmp97, label %if.then.99, label %if.end.100, !dbg !5738

if.then.99:                                       ; preds = %if.else.96
  store i32 -32768, i32* %valpred, align 4, !dbg !5739, !tbaa !1244
  br label %if.end.100, !dbg !5740

if.end.100:                                       ; preds = %if.then.99, %if.else.96
  br label %if.end.101

if.end.101:                                       ; preds = %if.end.100, %if.then.95
  %96 = load i32, i32* %sign, align 4, !dbg !5741, !tbaa !1244
  %97 = load i32, i32* %delta, align 4, !dbg !5742, !tbaa !1244
  %or102 = or i32 %97, %96, !dbg !5742
  store i32 %or102, i32* %delta, align 4, !dbg !5742, !tbaa !1244
  %98 = load i32, i32* %delta, align 4, !dbg !5743, !tbaa !1244
  %idxprom103 = sext i32 %98 to i64, !dbg !5744
  %arrayidx104 = getelementptr [16 x i32], [16 x i32]* @indexTable, i32 0, i64 %idxprom103, !dbg !5744
  %99 = load i32, i32* %arrayidx104, align 4, !dbg !5744, !tbaa !1244
  %100 = load i32, i32* %index, align 4, !dbg !5745, !tbaa !1244
  %add105 = add i32 %100, %99, !dbg !5745
  store i32 %add105, i32* %index, align 4, !dbg !5745, !tbaa !1244
  %101 = load i32, i32* %index, align 4, !dbg !5746, !tbaa !1244
  %cmp106 = icmp slt i32 %101, 0, !dbg !5748
  br i1 %cmp106, label %if.then.108, label %if.end.109, !dbg !5749

if.then.108:                                      ; preds = %if.end.101
  store i32 0, i32* %index, align 4, !dbg !5750, !tbaa !1244
  br label %if.end.109, !dbg !5752

if.end.109:                                       ; preds = %if.then.108, %if.end.101
  %102 = load i32, i32* %index, align 4, !dbg !5753, !tbaa !1244
  %cmp110 = icmp sgt i32 %102, 88, !dbg !5755
  br i1 %cmp110, label %if.then.112, label %if.end.113, !dbg !5756

if.then.112:                                      ; preds = %if.end.109
  store i32 88, i32* %index, align 4, !dbg !5757, !tbaa !1244
  br label %if.end.113, !dbg !5759

if.end.113:                                       ; preds = %if.then.112, %if.end.109
  %103 = load i32, i32* %index, align 4, !dbg !5760, !tbaa !1244
  %idxprom114 = sext i32 %103 to i64, !dbg !5761
  %arrayidx115 = getelementptr [89 x i32], [89 x i32]* @stepsizeTable, i32 0, i64 %idxprom114, !dbg !5761
  %104 = load i32, i32* %arrayidx115, align 4, !dbg !5761, !tbaa !1244
  store i32 %104, i32* %step, align 4, !dbg !5762, !tbaa !1244
  %105 = load i32, i32* %bufferstep, align 4, !dbg !5763, !tbaa !1244
  %tobool116 = icmp ne i32 %105, 0, !dbg !5763
  br i1 %tobool116, label %if.then.117, label %if.else.120, !dbg !5765

if.then.117:                                      ; preds = %if.end.113
  %106 = load i32, i32* %delta, align 4, !dbg !5766, !tbaa !1244
  %shl118 = shl i32 %106, 4, !dbg !5768
  %and119 = and i32 %shl118, 240, !dbg !5769
  store i32 %and119, i32* %outputbuffer, align 4, !dbg !5770, !tbaa !1244
  br label %if.end.124, !dbg !5771

if.else.120:                                      ; preds = %if.end.113
  %107 = load i32, i32* %delta, align 4, !dbg !5772, !tbaa !1244
  %and121 = and i32 %107, 15, !dbg !5774
  %108 = load i32, i32* %outputbuffer, align 4, !dbg !5775, !tbaa !1244
  %or122 = or i32 %and121, %108, !dbg !5776
  %conv123 = trunc i32 %or122 to i8, !dbg !5777
  %109 = load i8*, i8** %ncp, align 8, !dbg !5778, !tbaa !1200
  %incdec.ptr = getelementptr i8, i8* %109, i32 1, !dbg !5778
  store i8* %incdec.ptr, i8** %ncp, align 8, !dbg !5778, !tbaa !1200
  store i8 %conv123, i8* %109, align 1, !dbg !5779, !tbaa !2013
  br label %if.end.124

if.end.124:                                       ; preds = %if.else.120, %if.then.117
  %110 = load i32, i32* %bufferstep, align 4, !dbg !5780, !tbaa !1244
  %tobool125 = icmp ne i32 %110, 0, !dbg !5781
  %lnot = xor i1 %tobool125, true, !dbg !5781
  %lnot.ext = zext i1 %lnot to i32, !dbg !5781
  store i32 %lnot.ext, i32* %bufferstep, align 4, !dbg !5782, !tbaa !1244
  %111 = bitcast i32* %val to i8*, !dbg !5783
  call void @llvm.lifetime.end(i64 4, i8* %111) #1, !dbg !5783
  br label %for.inc, !dbg !5784

for.inc:                                          ; preds = %if.end.124
  %112 = load i32, i32* %width.addr, align 4, !dbg !5785, !tbaa !1244
  %conv126 = sext i32 %112 to i64, !dbg !5785
  %113 = load i64, i64* %i, align 8, !dbg !5786, !tbaa !1435
  %add127 = add i64 %113, %conv126, !dbg !5786
  store i64 %add127, i64* %i, align 8, !dbg !5786, !tbaa !1435
  br label %for.cond, !dbg !5787

for.end:                                          ; preds = %for.cond
  %114 = load %struct._object*, %struct._object** %str, align 8, !dbg !5788, !tbaa !1200
  %115 = load i32, i32* %valpred, align 4, !dbg !5789, !tbaa !1244
  %116 = load i32, i32* %index, align 4, !dbg !5790, !tbaa !1244
  %call128 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.60, i32 0, i32 0), %struct._object* %114, i32 %115, i32 %116), !dbg !5791
  store %struct._object* %call128, %struct._object** %rv, align 8, !dbg !5792, !tbaa !1200
  br label %exit, !dbg !5793

exit:                                             ; preds = %for.end, %if.then.16, %if.then.12
  br label %do.body, !dbg !5794

do.body:                                          ; preds = %exit
  %117 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5795
  call void @llvm.lifetime.start(i64 8, i8* %117) #1, !dbg !5795
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !891, metadata !1195), !dbg !5797
  %118 = load %struct._object*, %struct._object** %str, align 8, !dbg !5798, !tbaa !1200
  store %struct._object* %118, %struct._object** %_py_decref_tmp, align 8, !dbg !5797, !tbaa !1200
  %119 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5799, !tbaa !1200
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %119, i32 0, i32 0, !dbg !5801
  %120 = load i64, i64* %ob_refcnt, align 8, !dbg !5802, !tbaa !5493
  %dec = add i64 %120, -1, !dbg !5802
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5802, !tbaa !5493
  %cmp129 = icmp ne i64 %dec, 0, !dbg !5803
  br i1 %cmp129, label %if.then.131, label %if.else.132, !dbg !5804

if.then.131:                                      ; preds = %do.body
  br label %if.end.134, !dbg !5805

if.else.132:                                      ; preds = %do.body
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5807, !tbaa !1200
  %ob_type133 = getelementptr inbounds %struct._object, %struct._object* %121, i32 0, i32 1, !dbg !5809
  %122 = load %struct._typeobject*, %struct._typeobject** %ob_type133, align 8, !dbg !5809, !tbaa !5209
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %122, i32 0, i32 4, !dbg !5810
  %123 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5810, !tbaa !5502
  %124 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5811, !tbaa !1200
  call void %123(%struct._object* %124), !dbg !5812
  br label %if.end.134

if.end.134:                                       ; preds = %if.else.132, %if.then.131
  %125 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5813
  call void @llvm.lifetime.end(i64 8, i8* %125) #1, !dbg !5813
  br label %do.cond, !dbg !5815

do.cond:                                          ; preds = %if.end.134
  br label %do.end, !dbg !5816

do.end:                                           ; preds = %do.cond
  %126 = load %struct._object*, %struct._object** %rv, align 8, !dbg !5818, !tbaa !1200
  store %struct._object* %126, %struct._object** %retval, !dbg !5819
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5819

cleanup:                                          ; preds = %do.end, %if.then.4, %if.then
  %127 = bitcast i32* %bufferstep to i8*, !dbg !5820
  call void @llvm.lifetime.end(i64 4, i8* %127) #1, !dbg !5820
  %128 = bitcast i32* %outputbuffer to i8*, !dbg !5820
  call void @llvm.lifetime.end(i64 4, i8* %128) #1, !dbg !5820
  %129 = bitcast %struct._object** %str to i8*, !dbg !5820
  call void @llvm.lifetime.end(i64 8, i8* %129) #1, !dbg !5820
  %130 = bitcast %struct._object** %rv to i8*, !dbg !5820
  call void @llvm.lifetime.end(i64 8, i8* %130) #1, !dbg !5820
  %131 = bitcast i32* %diff to i8*, !dbg !5820
  call void @llvm.lifetime.end(i64 4, i8* %131) #1, !dbg !5820
  %132 = bitcast i32* %vpdiff to i8*, !dbg !5820
  call void @llvm.lifetime.end(i64 4, i8* %132) #1, !dbg !5820
  %133 = bitcast i32* %sign to i8*, !dbg !5820
  call void @llvm.lifetime.end(i64 4, i8* %133) #1, !dbg !5820
  %134 = bitcast i32* %index to i8*, !dbg !5820
  call void @llvm.lifetime.end(i64 4, i8* %134) #1, !dbg !5820
  %135 = bitcast i32* %delta to i8*, !dbg !5820
  call void @llvm.lifetime.end(i64 4, i8* %135) #1, !dbg !5820
  %136 = bitcast i32* %valpred to i8*, !dbg !5820
  call void @llvm.lifetime.end(i64 4, i8* %136) #1, !dbg !5820
  %137 = bitcast i32* %step to i8*, !dbg !5820
  call void @llvm.lifetime.end(i64 4, i8* %137) #1, !dbg !5820
  %138 = bitcast i64* %i to i8*, !dbg !5820
  call void @llvm.lifetime.end(i64 8, i8* %138) #1, !dbg !5820
  %139 = bitcast i8** %ncp to i8*, !dbg !5820
  call void @llvm.lifetime.end(i64 8, i8* %139) #1, !dbg !5820
  %140 = load %struct._object*, %struct._object** %retval, !dbg !5820
  ret %struct._object* %140, !dbg !5820
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_tomono_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width, double %lfactor, double %rfactor) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %lfactor.addr = alloca double, align 8
  %rfactor.addr = alloca double, align 8
  %cp = alloca i8*, align 8
  %ncp = alloca i8*, align 8
  %len = alloca i64, align 8
  %i = alloca i64, align 8
  %maxval = alloca double, align 8
  %minval = alloca double, align 8
  %rv = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %val1 = alloca double, align 8
  %val2 = alloca double, align 8
  %val = alloca double, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !906, metadata !1195), !dbg !5821
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !907, metadata !1195), !dbg !5822
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !908, metadata !1195), !dbg !5823
  store double %lfactor, double* %lfactor.addr, align 8, !tbaa !1521
  call void @llvm.dbg.declare(metadata double* %lfactor.addr, metadata !909, metadata !1195), !dbg !5824
  store double %rfactor, double* %rfactor.addr, align 8, !tbaa !1521
  call void @llvm.dbg.declare(metadata double* %rfactor.addr, metadata !910, metadata !1195), !dbg !5825
  %0 = bitcast i8** %cp to i8*, !dbg !5826
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !5826
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !911, metadata !1195), !dbg !5827
  %1 = bitcast i8** %ncp to i8*, !dbg !5826
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !5826
  call void @llvm.dbg.declare(metadata i8** %ncp, metadata !912, metadata !1195), !dbg !5828
  %2 = bitcast i64* %len to i8*, !dbg !5829
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !5829
  call void @llvm.dbg.declare(metadata i64* %len, metadata !913, metadata !1195), !dbg !5830
  %3 = bitcast i64* %i to i8*, !dbg !5829
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !5829
  call void @llvm.dbg.declare(metadata i64* %i, metadata !914, metadata !1195), !dbg !5831
  %4 = bitcast double* %maxval to i8*, !dbg !5832
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !5832
  call void @llvm.dbg.declare(metadata double* %maxval, metadata !915, metadata !1195), !dbg !5833
  %5 = bitcast double* %minval to i8*, !dbg !5832
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !5832
  call void @llvm.dbg.declare(metadata double* %minval, metadata !916, metadata !1195), !dbg !5834
  %6 = bitcast %struct._object** %rv to i8*, !dbg !5835
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !5835
  call void @llvm.dbg.declare(metadata %struct._object** %rv, metadata !917, metadata !1195), !dbg !5836
  %7 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5837, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %7, i32 0, i32 0, !dbg !5838
  %8 = load i8*, i8** %buf, align 8, !dbg !5838, !tbaa !2009
  store i8* %8, i8** %cp, align 8, !dbg !5839, !tbaa !1200
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !5840, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 2, !dbg !5841
  %10 = load i64, i64* %len1, align 8, !dbg !5841, !tbaa !1987
  store i64 %10, i64* %len, align 8, !dbg !5842, !tbaa !1435
  %11 = load i64, i64* %len, align 8, !dbg !5843, !tbaa !1435
  %12 = load i32, i32* %width.addr, align 4, !dbg !5845, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %11, i32 %12), !dbg !5846
  %tobool = icmp ne i32 %call, 0, !dbg !5846
  br i1 %tobool, label %if.end, label %if.then, !dbg !5847

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5848
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5848

if.end:                                           ; preds = %entry
  %13 = load i64, i64* %len, align 8, !dbg !5849, !tbaa !1435
  %14 = load i32, i32* %width.addr, align 4, !dbg !5851, !tbaa !1244
  %conv = sext i32 %14 to i64, !dbg !5851
  %div = sdiv i64 %13, %conv, !dbg !5852
  %and = and i64 %div, 1, !dbg !5853
  %cmp = icmp ne i64 %and, 0, !dbg !5854
  br i1 %cmp, label %if.then.3, label %if.end.4, !dbg !5855

if.then.3:                                        ; preds = %if.end
  %15 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !5856, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0)), !dbg !5858
  store %struct._object* null, %struct._object** %retval, !dbg !5859
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5859

if.end.4:                                         ; preds = %if.end
  %16 = load i32, i32* %width.addr, align 4, !dbg !5860, !tbaa !1244
  %idxprom = sext i32 %16 to i64, !dbg !5861
  %arrayidx = getelementptr [5 x i32], [5 x i32]* @maxvals, i32 0, i64 %idxprom, !dbg !5861
  %17 = load i32, i32* %arrayidx, align 4, !dbg !5861, !tbaa !1244
  %conv5 = sitofp i32 %17 to double, !dbg !5862
  store double %conv5, double* %maxval, align 8, !dbg !5863, !tbaa !1521
  %18 = load i32, i32* %width.addr, align 4, !dbg !5864, !tbaa !1244
  %idxprom6 = sext i32 %18 to i64, !dbg !5865
  %arrayidx7 = getelementptr [5 x i32], [5 x i32]* @minvals, i32 0, i64 %idxprom6, !dbg !5865
  %19 = load i32, i32* %arrayidx7, align 4, !dbg !5865, !tbaa !1244
  %conv8 = sitofp i32 %19 to double, !dbg !5866
  store double %conv8, double* %minval, align 8, !dbg !5867, !tbaa !1521
  %20 = load i64, i64* %len, align 8, !dbg !5868, !tbaa !1435
  %div9 = sdiv i64 %20, 2, !dbg !5869
  %call10 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %div9), !dbg !5870
  store %struct._object* %call10, %struct._object** %rv, align 8, !dbg !5871, !tbaa !1200
  %21 = load %struct._object*, %struct._object** %rv, align 8, !dbg !5872, !tbaa !1200
  %cmp11 = icmp eq %struct._object* %21, null, !dbg !5874
  br i1 %cmp11, label %if.then.13, label %if.end.14, !dbg !5875

if.then.13:                                       ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval, !dbg !5876
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5876

if.end.14:                                        ; preds = %if.end.4
  %22 = load %struct._object*, %struct._object** %rv, align 8, !dbg !5877, !tbaa !1200
  %call15 = call i8* @PyBytes_AsString(%struct._object* %22), !dbg !5878
  store i8* %call15, i8** %ncp, align 8, !dbg !5879, !tbaa !1200
  store i64 0, i64* %i, align 8, !dbg !5880, !tbaa !1435
  br label %for.cond, !dbg !5881

for.cond:                                         ; preds = %for.inc, %if.end.14
  %23 = load i64, i64* %i, align 8, !dbg !5882, !tbaa !1435
  %24 = load i64, i64* %len, align 8, !dbg !5885, !tbaa !1435
  %cmp16 = icmp slt i64 %23, %24, !dbg !5886
  br i1 %cmp16, label %for.body, label %for.end, !dbg !5887

for.body:                                         ; preds = %for.cond
  %25 = bitcast double* %val1 to i8*, !dbg !5888
  call void @llvm.lifetime.start(i64 8, i8* %25) #1, !dbg !5888
  call void @llvm.dbg.declare(metadata double* %val1, metadata !918, metadata !1195), !dbg !5889
  %26 = load i32, i32* %width.addr, align 4, !dbg !5890, !tbaa !1244
  %cmp18 = icmp eq i32 %26, 1, !dbg !5891
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !5892

cond.true:                                        ; preds = %for.body
  %27 = load i8*, i8** %cp, align 8, !dbg !5893, !tbaa !1200
  %28 = load i64, i64* %i, align 8, !dbg !5895, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %27, i64 %28, !dbg !5896
  %29 = load i8, i8* %add.ptr, align 1, !dbg !5897, !tbaa !2013
  %conv20 = sext i8 %29 to i32, !dbg !5898
  br label %cond.end.45, !dbg !5892

cond.false:                                       ; preds = %for.body
  %30 = load i32, i32* %width.addr, align 4, !dbg !5899, !tbaa !1244
  %cmp21 = icmp eq i32 %30, 2, !dbg !5901
  br i1 %cmp21, label %cond.true.23, label %cond.false.26, !dbg !5902

cond.true.23:                                     ; preds = %cond.false
  %31 = load i8*, i8** %cp, align 8, !dbg !5903, !tbaa !1200
  %32 = load i64, i64* %i, align 8, !dbg !5905, !tbaa !1435
  %add.ptr24 = getelementptr i8, i8* %31, i64 %32, !dbg !5906
  %33 = bitcast i8* %add.ptr24 to i16*, !dbg !5907
  %34 = load i16, i16* %33, align 2, !dbg !5908, !tbaa !2026
  %conv25 = sext i16 %34 to i32, !dbg !5909
  br label %cond.end.43, !dbg !5902

cond.false.26:                                    ; preds = %cond.false
  %35 = load i32, i32* %width.addr, align 4, !dbg !5910, !tbaa !1244
  %cmp27 = icmp eq i32 %35, 3, !dbg !5912
  br i1 %cmp27, label %cond.true.29, label %cond.false.41, !dbg !5913

cond.true.29:                                     ; preds = %cond.false.26
  %36 = load i8*, i8** %cp, align 8, !dbg !5914, !tbaa !1200
  %37 = load i64, i64* %i, align 8, !dbg !5916, !tbaa !1435
  %add.ptr30 = getelementptr i8, i8* %36, i64 %37, !dbg !5917
  %arrayidx31 = getelementptr i8, i8* %add.ptr30, i64 0, !dbg !5918
  %38 = load i8, i8* %arrayidx31, align 1, !dbg !5918, !tbaa !2013
  %conv32 = zext i8 %38 to i32, !dbg !5918
  %39 = load i8*, i8** %cp, align 8, !dbg !5919, !tbaa !1200
  %40 = load i64, i64* %i, align 8, !dbg !5920, !tbaa !1435
  %add.ptr33 = getelementptr i8, i8* %39, i64 %40, !dbg !5921
  %arrayidx34 = getelementptr i8, i8* %add.ptr33, i64 1, !dbg !5922
  %41 = load i8, i8* %arrayidx34, align 1, !dbg !5922, !tbaa !2013
  %conv35 = zext i8 %41 to i32, !dbg !5922
  %shl = shl i32 %conv35, 8, !dbg !5923
  %add = add i32 %conv32, %shl, !dbg !5924
  %42 = load i8*, i8** %cp, align 8, !dbg !5925, !tbaa !1200
  %43 = load i64, i64* %i, align 8, !dbg !5926, !tbaa !1435
  %add.ptr36 = getelementptr i8, i8* %42, i64 %43, !dbg !5927
  %arrayidx37 = getelementptr i8, i8* %add.ptr36, i64 2, !dbg !5928
  %44 = load i8, i8* %arrayidx37, align 1, !dbg !5928, !tbaa !2013
  %conv38 = sext i8 %44 to i32, !dbg !5928
  %shl39 = shl i32 %conv38, 16, !dbg !5929
  %add40 = add i32 %add, %shl39, !dbg !5930
  br label %cond.end, !dbg !5913

cond.false.41:                                    ; preds = %cond.false.26
  %45 = load i8*, i8** %cp, align 8, !dbg !5931, !tbaa !1200
  %46 = load i64, i64* %i, align 8, !dbg !5933, !tbaa !1435
  %add.ptr42 = getelementptr i8, i8* %45, i64 %46, !dbg !5934
  %47 = bitcast i8* %add.ptr42 to i32*, !dbg !5935
  %48 = load i32, i32* %47, align 4, !dbg !5936, !tbaa !1244
  br label %cond.end, !dbg !5913

cond.end:                                         ; preds = %cond.false.41, %cond.true.29
  %cond = phi i32 [ %add40, %cond.true.29 ], [ %48, %cond.false.41 ], !dbg !5913
  br label %cond.end.43, !dbg !5937

cond.end.43:                                      ; preds = %cond.end, %cond.true.23
  %cond44 = phi i32 [ %conv25, %cond.true.23 ], [ %cond, %cond.end ], !dbg !5902
  br label %cond.end.45, !dbg !5940

cond.end.45:                                      ; preds = %cond.end.43, %cond.true
  %cond46 = phi i32 [ %conv20, %cond.true ], [ %cond44, %cond.end.43 ], !dbg !5892
  %conv47 = sitofp i32 %cond46 to double, !dbg !5943
  store double %conv47, double* %val1, align 8, !dbg !5889, !tbaa !1521
  %49 = bitcast double* %val2 to i8*, !dbg !5946
  call void @llvm.lifetime.start(i64 8, i8* %49) #1, !dbg !5946
  call void @llvm.dbg.declare(metadata double* %val2, metadata !922, metadata !1195), !dbg !5947
  %50 = load i32, i32* %width.addr, align 4, !dbg !5948, !tbaa !1244
  %cmp48 = icmp eq i32 %50, 1, !dbg !5949
  br i1 %cmp48, label %cond.true.50, label %cond.false.55, !dbg !5950

cond.true.50:                                     ; preds = %cond.end.45
  %51 = load i8*, i8** %cp, align 8, !dbg !5951, !tbaa !1200
  %52 = load i64, i64* %i, align 8, !dbg !5952, !tbaa !1435
  %53 = load i32, i32* %width.addr, align 4, !dbg !5953, !tbaa !1244
  %conv51 = sext i32 %53 to i64, !dbg !5953
  %add52 = add i64 %52, %conv51, !dbg !5954
  %add.ptr53 = getelementptr i8, i8* %51, i64 %add52, !dbg !5955
  %54 = load i8, i8* %add.ptr53, align 1, !dbg !5956, !tbaa !2013
  %conv54 = sext i8 %54 to i32, !dbg !5957
  br label %cond.end.94, !dbg !5950

cond.false.55:                                    ; preds = %cond.end.45
  %55 = load i32, i32* %width.addr, align 4, !dbg !5958, !tbaa !1244
  %cmp56 = icmp eq i32 %55, 2, !dbg !5959
  br i1 %cmp56, label %cond.true.58, label %cond.false.63, !dbg !5960

cond.true.58:                                     ; preds = %cond.false.55
  %56 = load i8*, i8** %cp, align 8, !dbg !5961, !tbaa !1200
  %57 = load i64, i64* %i, align 8, !dbg !5962, !tbaa !1435
  %58 = load i32, i32* %width.addr, align 4, !dbg !5963, !tbaa !1244
  %conv59 = sext i32 %58 to i64, !dbg !5963
  %add60 = add i64 %57, %conv59, !dbg !5964
  %add.ptr61 = getelementptr i8, i8* %56, i64 %add60, !dbg !5965
  %59 = bitcast i8* %add.ptr61 to i16*, !dbg !5966
  %60 = load i16, i16* %59, align 2, !dbg !5967, !tbaa !2026
  %conv62 = sext i16 %60 to i32, !dbg !5968
  br label %cond.end.92, !dbg !5960

cond.false.63:                                    ; preds = %cond.false.55
  %61 = load i32, i32* %width.addr, align 4, !dbg !5969, !tbaa !1244
  %cmp64 = icmp eq i32 %61, 3, !dbg !5970
  br i1 %cmp64, label %cond.true.66, label %cond.false.86, !dbg !5971

cond.true.66:                                     ; preds = %cond.false.63
  %62 = load i8*, i8** %cp, align 8, !dbg !5972, !tbaa !1200
  %63 = load i64, i64* %i, align 8, !dbg !5973, !tbaa !1435
  %64 = load i32, i32* %width.addr, align 4, !dbg !5974, !tbaa !1244
  %conv67 = sext i32 %64 to i64, !dbg !5974
  %add68 = add i64 %63, %conv67, !dbg !5975
  %add.ptr69 = getelementptr i8, i8* %62, i64 %add68, !dbg !5976
  %arrayidx70 = getelementptr i8, i8* %add.ptr69, i64 0, !dbg !5977
  %65 = load i8, i8* %arrayidx70, align 1, !dbg !5977, !tbaa !2013
  %conv71 = zext i8 %65 to i32, !dbg !5977
  %66 = load i8*, i8** %cp, align 8, !dbg !5978, !tbaa !1200
  %67 = load i64, i64* %i, align 8, !dbg !5979, !tbaa !1435
  %68 = load i32, i32* %width.addr, align 4, !dbg !5980, !tbaa !1244
  %conv72 = sext i32 %68 to i64, !dbg !5980
  %add73 = add i64 %67, %conv72, !dbg !5981
  %add.ptr74 = getelementptr i8, i8* %66, i64 %add73, !dbg !5982
  %arrayidx75 = getelementptr i8, i8* %add.ptr74, i64 1, !dbg !5983
  %69 = load i8, i8* %arrayidx75, align 1, !dbg !5983, !tbaa !2013
  %conv76 = zext i8 %69 to i32, !dbg !5983
  %shl77 = shl i32 %conv76, 8, !dbg !5984
  %add78 = add i32 %conv71, %shl77, !dbg !5985
  %70 = load i8*, i8** %cp, align 8, !dbg !5986, !tbaa !1200
  %71 = load i64, i64* %i, align 8, !dbg !5987, !tbaa !1435
  %72 = load i32, i32* %width.addr, align 4, !dbg !5988, !tbaa !1244
  %conv79 = sext i32 %72 to i64, !dbg !5988
  %add80 = add i64 %71, %conv79, !dbg !5989
  %add.ptr81 = getelementptr i8, i8* %70, i64 %add80, !dbg !5990
  %arrayidx82 = getelementptr i8, i8* %add.ptr81, i64 2, !dbg !5991
  %73 = load i8, i8* %arrayidx82, align 1, !dbg !5991, !tbaa !2013
  %conv83 = sext i8 %73 to i32, !dbg !5991
  %shl84 = shl i32 %conv83, 16, !dbg !5992
  %add85 = add i32 %add78, %shl84, !dbg !5993
  br label %cond.end.90, !dbg !5971

cond.false.86:                                    ; preds = %cond.false.63
  %74 = load i8*, i8** %cp, align 8, !dbg !5994, !tbaa !1200
  %75 = load i64, i64* %i, align 8, !dbg !5995, !tbaa !1435
  %76 = load i32, i32* %width.addr, align 4, !dbg !5996, !tbaa !1244
  %conv87 = sext i32 %76 to i64, !dbg !5996
  %add88 = add i64 %75, %conv87, !dbg !5997
  %add.ptr89 = getelementptr i8, i8* %74, i64 %add88, !dbg !5998
  %77 = bitcast i8* %add.ptr89 to i32*, !dbg !5999
  %78 = load i32, i32* %77, align 4, !dbg !6000, !tbaa !1244
  br label %cond.end.90, !dbg !5971

cond.end.90:                                      ; preds = %cond.false.86, %cond.true.66
  %cond91 = phi i32 [ %add85, %cond.true.66 ], [ %78, %cond.false.86 ], !dbg !5971
  br label %cond.end.92, !dbg !6001

cond.end.92:                                      ; preds = %cond.end.90, %cond.true.58
  %cond93 = phi i32 [ %conv62, %cond.true.58 ], [ %cond91, %cond.end.90 ], !dbg !5960
  br label %cond.end.94, !dbg !6002

cond.end.94:                                      ; preds = %cond.end.92, %cond.true.50
  %cond95 = phi i32 [ %conv54, %cond.true.50 ], [ %cond93, %cond.end.92 ], !dbg !5950
  %conv96 = sitofp i32 %cond95 to double, !dbg !6003
  store double %conv96, double* %val2, align 8, !dbg !5947, !tbaa !1521
  %79 = bitcast double* %val to i8*, !dbg !6004
  call void @llvm.lifetime.start(i64 8, i8* %79) #1, !dbg !6004
  call void @llvm.dbg.declare(metadata double* %val, metadata !923, metadata !1195), !dbg !6005
  %80 = load double, double* %val1, align 8, !dbg !6006, !tbaa !1521
  %81 = load double, double* %lfactor.addr, align 8, !dbg !6007, !tbaa !1521
  %mul = fmul double %80, %81, !dbg !6008
  %82 = load double, double* %val2, align 8, !dbg !6009, !tbaa !1521
  %83 = load double, double* %rfactor.addr, align 8, !dbg !6010, !tbaa !1521
  %mul97 = fmul double %82, %83, !dbg !6011
  %add98 = fadd double %mul, %mul97, !dbg !6012
  store double %add98, double* %val, align 8, !dbg !6005, !tbaa !1521
  %84 = load double, double* %val, align 8, !dbg !6013, !tbaa !1521
  %85 = load double, double* %minval, align 8, !dbg !6014, !tbaa !1521
  %86 = load double, double* %maxval, align 8, !dbg !6015, !tbaa !1521
  %call99 = call i32 @fbound(double %84, double %85, double %86), !dbg !6016
  %conv100 = sitofp i32 %call99 to double, !dbg !6016
  %call101 = call double @floor(double %conv100) #2, !dbg !6017
  store double %call101, double* %val, align 8, !dbg !6018, !tbaa !1521
  br label %do.body, !dbg !6019

do.body:                                          ; preds = %cond.end.94
  %87 = load i32, i32* %width.addr, align 4, !dbg !6020, !tbaa !1244
  %cmp102 = icmp eq i32 %87, 1, !dbg !6024
  br i1 %cmp102, label %if.then.104, label %if.else, !dbg !6025

if.then.104:                                      ; preds = %do.body
  br label %do.body.105, !dbg !6026

do.body.105:                                      ; preds = %if.then.104
  %88 = load double, double* %val, align 8, !dbg !6028, !tbaa !1521
  %conv106 = fptosi double %88 to i8, !dbg !6031
  %89 = load i8*, i8** %ncp, align 8, !dbg !6032, !tbaa !1200
  %90 = load i64, i64* %i, align 8, !dbg !6033, !tbaa !1435
  %div107 = sdiv i64 %90, 2, !dbg !6034
  %add.ptr108 = getelementptr i8, i8* %89, i64 %div107, !dbg !6035
  store i8 %conv106, i8* %add.ptr108, align 1, !dbg !6036, !tbaa !2013
  br label %do.cond, !dbg !6037

do.cond:                                          ; preds = %do.body.105
  br label %do.end, !dbg !6038

do.end:                                           ; preds = %do.cond
  br label %if.end.150, !dbg !6040

if.else:                                          ; preds = %do.body
  %91 = load i32, i32* %width.addr, align 4, !dbg !6042, !tbaa !1244
  %cmp109 = icmp eq i32 %91, 2, !dbg !6045
  br i1 %cmp109, label %if.then.111, label %if.else.118, !dbg !6046

if.then.111:                                      ; preds = %if.else
  br label %do.body.112, !dbg !6047

do.body.112:                                      ; preds = %if.then.111
  %92 = load double, double* %val, align 8, !dbg !6049, !tbaa !1521
  %conv113 = fptosi double %92 to i16, !dbg !6052
  %93 = load i8*, i8** %ncp, align 8, !dbg !6053, !tbaa !1200
  %94 = load i64, i64* %i, align 8, !dbg !6054, !tbaa !1435
  %div114 = sdiv i64 %94, 2, !dbg !6055
  %add.ptr115 = getelementptr i8, i8* %93, i64 %div114, !dbg !6056
  %95 = bitcast i8* %add.ptr115 to i16*, !dbg !6057
  store i16 %conv113, i16* %95, align 2, !dbg !6058, !tbaa !2026
  br label %do.cond.116, !dbg !6059

do.cond.116:                                      ; preds = %do.body.112
  br label %do.end.117, !dbg !6060

do.end.117:                                       ; preds = %do.cond.116
  br label %if.end.149, !dbg !6062

if.else.118:                                      ; preds = %if.else
  %96 = load i32, i32* %width.addr, align 4, !dbg !6064, !tbaa !1244
  %cmp119 = icmp eq i32 %96, 3, !dbg !6067
  br i1 %cmp119, label %if.then.121, label %if.else.141, !dbg !6068

if.then.121:                                      ; preds = %if.else.118
  br label %do.body.122, !dbg !6069

do.body.122:                                      ; preds = %if.then.121
  %97 = load double, double* %val, align 8, !dbg !6071, !tbaa !1521
  %conv123 = fptosi double %97 to i32, !dbg !6074
  %conv124 = trunc i32 %conv123 to i8, !dbg !6074
  %98 = load i8*, i8** %ncp, align 8, !dbg !6075, !tbaa !1200
  %99 = load i64, i64* %i, align 8, !dbg !6076, !tbaa !1435
  %div125 = sdiv i64 %99, 2, !dbg !6077
  %add.ptr126 = getelementptr i8, i8* %98, i64 %div125, !dbg !6078
  %arrayidx127 = getelementptr i8, i8* %add.ptr126, i64 0, !dbg !6079
  store i8 %conv124, i8* %arrayidx127, align 1, !dbg !6080, !tbaa !2013
  %100 = load double, double* %val, align 8, !dbg !6081, !tbaa !1521
  %conv128 = fptosi double %100 to i32, !dbg !6082
  %shr = ashr i32 %conv128, 8, !dbg !6083
  %conv129 = trunc i32 %shr to i8, !dbg !6082
  %101 = load i8*, i8** %ncp, align 8, !dbg !6084, !tbaa !1200
  %102 = load i64, i64* %i, align 8, !dbg !6085, !tbaa !1435
  %div130 = sdiv i64 %102, 2, !dbg !6086
  %add.ptr131 = getelementptr i8, i8* %101, i64 %div130, !dbg !6087
  %arrayidx132 = getelementptr i8, i8* %add.ptr131, i64 1, !dbg !6088
  store i8 %conv129, i8* %arrayidx132, align 1, !dbg !6089, !tbaa !2013
  %103 = load double, double* %val, align 8, !dbg !6090, !tbaa !1521
  %conv133 = fptosi double %103 to i32, !dbg !6091
  %shr134 = ashr i32 %conv133, 16, !dbg !6092
  %conv135 = trunc i32 %shr134 to i8, !dbg !6091
  %104 = load i8*, i8** %ncp, align 8, !dbg !6093, !tbaa !1200
  %105 = load i64, i64* %i, align 8, !dbg !6094, !tbaa !1435
  %div136 = sdiv i64 %105, 2, !dbg !6095
  %add.ptr137 = getelementptr i8, i8* %104, i64 %div136, !dbg !6096
  %arrayidx138 = getelementptr i8, i8* %add.ptr137, i64 2, !dbg !6097
  store i8 %conv135, i8* %arrayidx138, align 1, !dbg !6098, !tbaa !2013
  br label %do.cond.139, !dbg !6099

do.cond.139:                                      ; preds = %do.body.122
  br label %do.end.140, !dbg !6100

do.end.140:                                       ; preds = %do.cond.139
  br label %if.end.148, !dbg !6102

if.else.141:                                      ; preds = %if.else.118
  br label %do.body.142, !dbg !6104

do.body.142:                                      ; preds = %if.else.141
  %106 = load double, double* %val, align 8, !dbg !6106, !tbaa !1521
  %conv143 = fptosi double %106 to i32, !dbg !6109
  %107 = load i8*, i8** %ncp, align 8, !dbg !6110, !tbaa !1200
  %108 = load i64, i64* %i, align 8, !dbg !6111, !tbaa !1435
  %div144 = sdiv i64 %108, 2, !dbg !6112
  %add.ptr145 = getelementptr i8, i8* %107, i64 %div144, !dbg !6113
  %109 = bitcast i8* %add.ptr145 to i32*, !dbg !6114
  store i32 %conv143, i32* %109, align 4, !dbg !6115, !tbaa !1244
  br label %do.cond.146, !dbg !6116

do.cond.146:                                      ; preds = %do.body.142
  br label %do.end.147, !dbg !6117

do.end.147:                                       ; preds = %do.cond.146
  br label %if.end.148

if.end.148:                                       ; preds = %do.end.147, %do.end.140
  br label %if.end.149

if.end.149:                                       ; preds = %if.end.148, %do.end.117
  br label %if.end.150

if.end.150:                                       ; preds = %if.end.149, %do.end
  br label %do.cond.151, !dbg !6119

do.cond.151:                                      ; preds = %if.end.150
  br label %do.end.152, !dbg !6121

do.end.152:                                       ; preds = %do.cond.151
  %110 = bitcast double* %val to i8*, !dbg !6123
  call void @llvm.lifetime.end(i64 8, i8* %110) #1, !dbg !6123
  %111 = bitcast double* %val2 to i8*, !dbg !6123
  call void @llvm.lifetime.end(i64 8, i8* %111) #1, !dbg !6123
  %112 = bitcast double* %val1 to i8*, !dbg !6123
  call void @llvm.lifetime.end(i64 8, i8* %112) #1, !dbg !6123
  br label %for.inc, !dbg !6124

for.inc:                                          ; preds = %do.end.152
  %113 = load i32, i32* %width.addr, align 4, !dbg !6125, !tbaa !1244
  %mul153 = mul i32 %113, 2, !dbg !6126
  %conv154 = sext i32 %mul153 to i64, !dbg !6125
  %114 = load i64, i64* %i, align 8, !dbg !6127, !tbaa !1435
  %add155 = add i64 %114, %conv154, !dbg !6127
  store i64 %add155, i64* %i, align 8, !dbg !6127, !tbaa !1435
  br label %for.cond, !dbg !6128

for.end:                                          ; preds = %for.cond
  %115 = load %struct._object*, %struct._object** %rv, align 8, !dbg !6129, !tbaa !1200
  store %struct._object* %115, %struct._object** %retval, !dbg !6130
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6130

cleanup:                                          ; preds = %for.end, %if.then.13, %if.then.3, %if.then
  %116 = bitcast %struct._object** %rv to i8*, !dbg !6131
  call void @llvm.lifetime.end(i64 8, i8* %116) #1, !dbg !6131
  %117 = bitcast double* %minval to i8*, !dbg !6131
  call void @llvm.lifetime.end(i64 8, i8* %117) #1, !dbg !6131
  %118 = bitcast double* %maxval to i8*, !dbg !6131
  call void @llvm.lifetime.end(i64 8, i8* %118) #1, !dbg !6131
  %119 = bitcast i64* %i to i8*, !dbg !6131
  call void @llvm.lifetime.end(i64 8, i8* %119) #1, !dbg !6131
  %120 = bitcast i64* %len to i8*, !dbg !6131
  call void @llvm.lifetime.end(i64 8, i8* %120) #1, !dbg !6131
  %121 = bitcast i8** %ncp to i8*, !dbg !6131
  call void @llvm.lifetime.end(i64 8, i8* %121) #1, !dbg !6131
  %122 = bitcast i8** %cp to i8*, !dbg !6131
  call void @llvm.lifetime.end(i64 8, i8* %122) #1, !dbg !6131
  %123 = load %struct._object*, %struct._object** %retval, !dbg !6131
  ret %struct._object* %123, !dbg !6131
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_tostereo_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width, double %lfactor, double %rfactor) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %lfactor.addr = alloca double, align 8
  %rfactor.addr = alloca double, align 8
  %ncp = alloca i8*, align 8
  %i = alloca i64, align 8
  %maxval = alloca double, align 8
  %minval = alloca double, align 8
  %rv = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %val = alloca double, align 8
  %val1 = alloca i32, align 4
  %val2 = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !935, metadata !1195), !dbg !6132
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !936, metadata !1195), !dbg !6133
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !937, metadata !1195), !dbg !6134
  store double %lfactor, double* %lfactor.addr, align 8, !tbaa !1521
  call void @llvm.dbg.declare(metadata double* %lfactor.addr, metadata !938, metadata !1195), !dbg !6135
  store double %rfactor, double* %rfactor.addr, align 8, !tbaa !1521
  call void @llvm.dbg.declare(metadata double* %rfactor.addr, metadata !939, metadata !1195), !dbg !6136
  %0 = bitcast i8** %ncp to i8*, !dbg !6137
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6137
  call void @llvm.dbg.declare(metadata i8** %ncp, metadata !940, metadata !1195), !dbg !6138
  %1 = bitcast i64* %i to i8*, !dbg !6139
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6139
  call void @llvm.dbg.declare(metadata i64* %i, metadata !941, metadata !1195), !dbg !6140
  %2 = bitcast double* %maxval to i8*, !dbg !6141
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6141
  call void @llvm.dbg.declare(metadata double* %maxval, metadata !942, metadata !1195), !dbg !6142
  %3 = bitcast double* %minval to i8*, !dbg !6141
  call void @llvm.lifetime.start(i64 8, i8* %3) #1, !dbg !6141
  call void @llvm.dbg.declare(metadata double* %minval, metadata !943, metadata !1195), !dbg !6143
  %4 = bitcast %struct._object** %rv to i8*, !dbg !6144
  call void @llvm.lifetime.start(i64 8, i8* %4) #1, !dbg !6144
  call void @llvm.dbg.declare(metadata %struct._object** %rv, metadata !944, metadata !1195), !dbg !6145
  %5 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6146, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %5, i32 0, i32 2, !dbg !6148
  %6 = load i64, i64* %len, align 8, !dbg !6148, !tbaa !1987
  %7 = load i32, i32* %width.addr, align 4, !dbg !6149, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %6, i32 %7), !dbg !6150
  %tobool = icmp ne i32 %call, 0, !dbg !6150
  br i1 %tobool, label %if.end, label %if.then, !dbg !6151

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6152
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6152

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %width.addr, align 4, !dbg !6153, !tbaa !1244
  %idxprom = sext i32 %8 to i64, !dbg !6154
  %arrayidx = getelementptr [5 x i32], [5 x i32]* @maxvals, i32 0, i64 %idxprom, !dbg !6154
  %9 = load i32, i32* %arrayidx, align 4, !dbg !6154, !tbaa !1244
  %conv = sitofp i32 %9 to double, !dbg !6155
  store double %conv, double* %maxval, align 8, !dbg !6156, !tbaa !1521
  %10 = load i32, i32* %width.addr, align 4, !dbg !6157, !tbaa !1244
  %idxprom1 = sext i32 %10 to i64, !dbg !6158
  %arrayidx2 = getelementptr [5 x i32], [5 x i32]* @minvals, i32 0, i64 %idxprom1, !dbg !6158
  %11 = load i32, i32* %arrayidx2, align 4, !dbg !6158, !tbaa !1244
  %conv3 = sitofp i32 %11 to double, !dbg !6159
  store double %conv3, double* %minval, align 8, !dbg !6160, !tbaa !1521
  %12 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6161, !tbaa !1200
  %len4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %12, i32 0, i32 2, !dbg !6163
  %13 = load i64, i64* %len4, align 8, !dbg !6163, !tbaa !1987
  %cmp = icmp sgt i64 %13, 4611686018427387903, !dbg !6164
  br i1 %cmp, label %if.then.6, label %if.end.7, !dbg !6165

if.then.6:                                        ; preds = %if.end
  %14 = load %struct._object*, %struct._object** @PyExc_MemoryError, align 8, !dbg !6166, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.52, i32 0, i32 0)), !dbg !6168
  store %struct._object* null, %struct._object** %retval, !dbg !6169
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6169

if.end.7:                                         ; preds = %if.end
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6170, !tbaa !1200
  %len8 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 2, !dbg !6171
  %16 = load i64, i64* %len8, align 8, !dbg !6171, !tbaa !1987
  %mul = mul i64 %16, 2, !dbg !6172
  %call9 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %mul), !dbg !6173
  store %struct._object* %call9, %struct._object** %rv, align 8, !dbg !6174, !tbaa !1200
  %17 = load %struct._object*, %struct._object** %rv, align 8, !dbg !6175, !tbaa !1200
  %cmp10 = icmp eq %struct._object* %17, null, !dbg !6177
  br i1 %cmp10, label %if.then.12, label %if.end.13, !dbg !6178

if.then.12:                                       ; preds = %if.end.7
  store %struct._object* null, %struct._object** %retval, !dbg !6179
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6179

if.end.13:                                        ; preds = %if.end.7
  %18 = load %struct._object*, %struct._object** %rv, align 8, !dbg !6180, !tbaa !1200
  %call14 = call i8* @PyBytes_AsString(%struct._object* %18), !dbg !6181
  store i8* %call14, i8** %ncp, align 8, !dbg !6182, !tbaa !1200
  store i64 0, i64* %i, align 8, !dbg !6183, !tbaa !1435
  br label %for.cond, !dbg !6184

for.cond:                                         ; preds = %for.inc, %if.end.13
  %19 = load i64, i64* %i, align 8, !dbg !6185, !tbaa !1435
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6188, !tbaa !1200
  %len15 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %20, i32 0, i32 2, !dbg !6189
  %21 = load i64, i64* %len15, align 8, !dbg !6189, !tbaa !1987
  %cmp16 = icmp slt i64 %19, %21, !dbg !6190
  br i1 %cmp16, label %for.body, label %for.end, !dbg !6191

for.body:                                         ; preds = %for.cond
  %22 = bitcast double* %val to i8*, !dbg !6192
  call void @llvm.lifetime.start(i64 8, i8* %22) #1, !dbg !6192
  call void @llvm.dbg.declare(metadata double* %val, metadata !945, metadata !1195), !dbg !6193
  %23 = load i32, i32* %width.addr, align 4, !dbg !6194, !tbaa !1244
  %cmp18 = icmp eq i32 %23, 1, !dbg !6195
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !6196

cond.true:                                        ; preds = %for.body
  %24 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6197, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %24, i32 0, i32 0, !dbg !6199
  %25 = load i8*, i8** %buf, align 8, !dbg !6199, !tbaa !2009
  %26 = load i64, i64* %i, align 8, !dbg !6200, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %25, i64 %26, !dbg !6201
  %27 = load i8, i8* %add.ptr, align 1, !dbg !6202, !tbaa !2013
  %conv20 = sext i8 %27 to i32, !dbg !6203
  br label %cond.end.50, !dbg !6196

cond.false:                                       ; preds = %for.body
  %28 = load i32, i32* %width.addr, align 4, !dbg !6204, !tbaa !1244
  %cmp21 = icmp eq i32 %28, 2, !dbg !6206
  br i1 %cmp21, label %cond.true.23, label %cond.false.27, !dbg !6207

cond.true.23:                                     ; preds = %cond.false
  %29 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6208, !tbaa !1200
  %buf24 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %29, i32 0, i32 0, !dbg !6210
  %30 = load i8*, i8** %buf24, align 8, !dbg !6210, !tbaa !2009
  %31 = load i64, i64* %i, align 8, !dbg !6211, !tbaa !1435
  %add.ptr25 = getelementptr i8, i8* %30, i64 %31, !dbg !6212
  %32 = bitcast i8* %add.ptr25 to i16*, !dbg !6213
  %33 = load i16, i16* %32, align 2, !dbg !6214, !tbaa !2026
  %conv26 = sext i16 %33 to i32, !dbg !6215
  br label %cond.end.48, !dbg !6207

cond.false.27:                                    ; preds = %cond.false
  %34 = load i32, i32* %width.addr, align 4, !dbg !6216, !tbaa !1244
  %cmp28 = icmp eq i32 %34, 3, !dbg !6218
  br i1 %cmp28, label %cond.true.30, label %cond.false.45, !dbg !6219

cond.true.30:                                     ; preds = %cond.false.27
  %35 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6220, !tbaa !1200
  %buf31 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %35, i32 0, i32 0, !dbg !6222
  %36 = load i8*, i8** %buf31, align 8, !dbg !6222, !tbaa !2009
  %37 = load i64, i64* %i, align 8, !dbg !6223, !tbaa !1435
  %add.ptr32 = getelementptr i8, i8* %36, i64 %37, !dbg !6224
  %arrayidx33 = getelementptr i8, i8* %add.ptr32, i64 0, !dbg !6225
  %38 = load i8, i8* %arrayidx33, align 1, !dbg !6225, !tbaa !2013
  %conv34 = zext i8 %38 to i32, !dbg !6225
  %39 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6226, !tbaa !1200
  %buf35 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %39, i32 0, i32 0, !dbg !6227
  %40 = load i8*, i8** %buf35, align 8, !dbg !6227, !tbaa !2009
  %41 = load i64, i64* %i, align 8, !dbg !6228, !tbaa !1435
  %add.ptr36 = getelementptr i8, i8* %40, i64 %41, !dbg !6229
  %arrayidx37 = getelementptr i8, i8* %add.ptr36, i64 1, !dbg !6230
  %42 = load i8, i8* %arrayidx37, align 1, !dbg !6230, !tbaa !2013
  %conv38 = zext i8 %42 to i32, !dbg !6230
  %shl = shl i32 %conv38, 8, !dbg !6231
  %add = add i32 %conv34, %shl, !dbg !6232
  %43 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6233, !tbaa !1200
  %buf39 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %43, i32 0, i32 0, !dbg !6234
  %44 = load i8*, i8** %buf39, align 8, !dbg !6234, !tbaa !2009
  %45 = load i64, i64* %i, align 8, !dbg !6235, !tbaa !1435
  %add.ptr40 = getelementptr i8, i8* %44, i64 %45, !dbg !6236
  %arrayidx41 = getelementptr i8, i8* %add.ptr40, i64 2, !dbg !6237
  %46 = load i8, i8* %arrayidx41, align 1, !dbg !6237, !tbaa !2013
  %conv42 = sext i8 %46 to i32, !dbg !6237
  %shl43 = shl i32 %conv42, 16, !dbg !6238
  %add44 = add i32 %add, %shl43, !dbg !6239
  br label %cond.end, !dbg !6219

cond.false.45:                                    ; preds = %cond.false.27
  %47 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6240, !tbaa !1200
  %buf46 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %47, i32 0, i32 0, !dbg !6242
  %48 = load i8*, i8** %buf46, align 8, !dbg !6242, !tbaa !2009
  %49 = load i64, i64* %i, align 8, !dbg !6243, !tbaa !1435
  %add.ptr47 = getelementptr i8, i8* %48, i64 %49, !dbg !6244
  %50 = bitcast i8* %add.ptr47 to i32*, !dbg !6245
  %51 = load i32, i32* %50, align 4, !dbg !6246, !tbaa !1244
  br label %cond.end, !dbg !6219

cond.end:                                         ; preds = %cond.false.45, %cond.true.30
  %cond = phi i32 [ %add44, %cond.true.30 ], [ %51, %cond.false.45 ], !dbg !6219
  br label %cond.end.48, !dbg !6247

cond.end.48:                                      ; preds = %cond.end, %cond.true.23
  %cond49 = phi i32 [ %conv26, %cond.true.23 ], [ %cond, %cond.end ], !dbg !6207
  br label %cond.end.50, !dbg !6250

cond.end.50:                                      ; preds = %cond.end.48, %cond.true
  %cond51 = phi i32 [ %conv20, %cond.true ], [ %cond49, %cond.end.48 ], !dbg !6196
  %conv52 = sitofp i32 %cond51 to double, !dbg !6253
  store double %conv52, double* %val, align 8, !dbg !6193, !tbaa !1521
  %52 = bitcast i32* %val1 to i8*, !dbg !6256
  call void @llvm.lifetime.start(i64 4, i8* %52) #1, !dbg !6256
  call void @llvm.dbg.declare(metadata i32* %val1, metadata !949, metadata !1195), !dbg !6257
  %53 = load double, double* %val, align 8, !dbg !6258, !tbaa !1521
  %54 = load double, double* %lfactor.addr, align 8, !dbg !6259, !tbaa !1521
  %mul53 = fmul double %53, %54, !dbg !6260
  %55 = load double, double* %minval, align 8, !dbg !6261, !tbaa !1521
  %56 = load double, double* %maxval, align 8, !dbg !6262, !tbaa !1521
  %call54 = call i32 @fbound(double %mul53, double %55, double %56), !dbg !6263
  %conv55 = sitofp i32 %call54 to double, !dbg !6263
  %call56 = call double @floor(double %conv55) #2, !dbg !6264
  %conv57 = fptosi double %call56 to i32, !dbg !6265
  store i32 %conv57, i32* %val1, align 4, !dbg !6257, !tbaa !1244
  %57 = bitcast i32* %val2 to i8*, !dbg !6266
  call void @llvm.lifetime.start(i64 4, i8* %57) #1, !dbg !6266
  call void @llvm.dbg.declare(metadata i32* %val2, metadata !950, metadata !1195), !dbg !6267
  %58 = load double, double* %val, align 8, !dbg !6268, !tbaa !1521
  %59 = load double, double* %rfactor.addr, align 8, !dbg !6269, !tbaa !1521
  %mul58 = fmul double %58, %59, !dbg !6270
  %60 = load double, double* %minval, align 8, !dbg !6271, !tbaa !1521
  %61 = load double, double* %maxval, align 8, !dbg !6272, !tbaa !1521
  %call59 = call i32 @fbound(double %mul58, double %60, double %61), !dbg !6273
  %conv60 = sitofp i32 %call59 to double, !dbg !6273
  %call61 = call double @floor(double %conv60) #2, !dbg !6274
  %conv62 = fptosi double %call61 to i32, !dbg !6275
  store i32 %conv62, i32* %val2, align 4, !dbg !6267, !tbaa !1244
  br label %do.body, !dbg !6276

do.body:                                          ; preds = %cond.end.50
  %62 = load i32, i32* %width.addr, align 4, !dbg !6277, !tbaa !1244
  %cmp63 = icmp eq i32 %62, 1, !dbg !6281
  br i1 %cmp63, label %if.then.65, label %if.else, !dbg !6282

if.then.65:                                       ; preds = %do.body
  br label %do.body.66, !dbg !6283

do.body.66:                                       ; preds = %if.then.65
  %63 = load i32, i32* %val1, align 4, !dbg !6285, !tbaa !1244
  %conv67 = trunc i32 %63 to i8, !dbg !6288
  %64 = load i8*, i8** %ncp, align 8, !dbg !6289, !tbaa !1200
  %65 = load i64, i64* %i, align 8, !dbg !6290, !tbaa !1435
  %mul68 = mul i64 %65, 2, !dbg !6291
  %add.ptr69 = getelementptr i8, i8* %64, i64 %mul68, !dbg !6292
  store i8 %conv67, i8* %add.ptr69, align 1, !dbg !6293, !tbaa !2013
  br label %do.cond, !dbg !6294

do.cond:                                          ; preds = %do.body.66
  br label %do.end, !dbg !6295

do.end:                                           ; preds = %do.cond
  br label %if.end.107, !dbg !6297

if.else:                                          ; preds = %do.body
  %66 = load i32, i32* %width.addr, align 4, !dbg !6299, !tbaa !1244
  %cmp70 = icmp eq i32 %66, 2, !dbg !6302
  br i1 %cmp70, label %if.then.72, label %if.else.79, !dbg !6303

if.then.72:                                       ; preds = %if.else
  br label %do.body.73, !dbg !6304

do.body.73:                                       ; preds = %if.then.72
  %67 = load i32, i32* %val1, align 4, !dbg !6306, !tbaa !1244
  %conv74 = trunc i32 %67 to i16, !dbg !6309
  %68 = load i8*, i8** %ncp, align 8, !dbg !6310, !tbaa !1200
  %69 = load i64, i64* %i, align 8, !dbg !6311, !tbaa !1435
  %mul75 = mul i64 %69, 2, !dbg !6312
  %add.ptr76 = getelementptr i8, i8* %68, i64 %mul75, !dbg !6313
  %70 = bitcast i8* %add.ptr76 to i16*, !dbg !6314
  store i16 %conv74, i16* %70, align 2, !dbg !6315, !tbaa !2026
  br label %do.cond.77, !dbg !6316

do.cond.77:                                       ; preds = %do.body.73
  br label %do.end.78, !dbg !6317

do.end.78:                                        ; preds = %do.cond.77
  br label %if.end.106, !dbg !6319

if.else.79:                                       ; preds = %if.else
  %71 = load i32, i32* %width.addr, align 4, !dbg !6321, !tbaa !1244
  %cmp80 = icmp eq i32 %71, 3, !dbg !6324
  br i1 %cmp80, label %if.then.82, label %if.else.99, !dbg !6325

if.then.82:                                       ; preds = %if.else.79
  br label %do.body.83, !dbg !6326

do.body.83:                                       ; preds = %if.then.82
  %72 = load i32, i32* %val1, align 4, !dbg !6328, !tbaa !1244
  %conv84 = trunc i32 %72 to i8, !dbg !6331
  %73 = load i8*, i8** %ncp, align 8, !dbg !6332, !tbaa !1200
  %74 = load i64, i64* %i, align 8, !dbg !6333, !tbaa !1435
  %mul85 = mul i64 %74, 2, !dbg !6334
  %add.ptr86 = getelementptr i8, i8* %73, i64 %mul85, !dbg !6335
  %arrayidx87 = getelementptr i8, i8* %add.ptr86, i64 0, !dbg !6336
  store i8 %conv84, i8* %arrayidx87, align 1, !dbg !6337, !tbaa !2013
  %75 = load i32, i32* %val1, align 4, !dbg !6338, !tbaa !1244
  %shr = ashr i32 %75, 8, !dbg !6339
  %conv88 = trunc i32 %shr to i8, !dbg !6340
  %76 = load i8*, i8** %ncp, align 8, !dbg !6341, !tbaa !1200
  %77 = load i64, i64* %i, align 8, !dbg !6342, !tbaa !1435
  %mul89 = mul i64 %77, 2, !dbg !6343
  %add.ptr90 = getelementptr i8, i8* %76, i64 %mul89, !dbg !6344
  %arrayidx91 = getelementptr i8, i8* %add.ptr90, i64 1, !dbg !6345
  store i8 %conv88, i8* %arrayidx91, align 1, !dbg !6346, !tbaa !2013
  %78 = load i32, i32* %val1, align 4, !dbg !6347, !tbaa !1244
  %shr92 = ashr i32 %78, 16, !dbg !6348
  %conv93 = trunc i32 %shr92 to i8, !dbg !6349
  %79 = load i8*, i8** %ncp, align 8, !dbg !6350, !tbaa !1200
  %80 = load i64, i64* %i, align 8, !dbg !6351, !tbaa !1435
  %mul94 = mul i64 %80, 2, !dbg !6352
  %add.ptr95 = getelementptr i8, i8* %79, i64 %mul94, !dbg !6353
  %arrayidx96 = getelementptr i8, i8* %add.ptr95, i64 2, !dbg !6354
  store i8 %conv93, i8* %arrayidx96, align 1, !dbg !6355, !tbaa !2013
  br label %do.cond.97, !dbg !6356

do.cond.97:                                       ; preds = %do.body.83
  br label %do.end.98, !dbg !6357

do.end.98:                                        ; preds = %do.cond.97
  br label %if.end.105, !dbg !6359

if.else.99:                                       ; preds = %if.else.79
  br label %do.body.100, !dbg !6361

do.body.100:                                      ; preds = %if.else.99
  %81 = load i32, i32* %val1, align 4, !dbg !6363, !tbaa !1244
  %82 = load i8*, i8** %ncp, align 8, !dbg !6366, !tbaa !1200
  %83 = load i64, i64* %i, align 8, !dbg !6367, !tbaa !1435
  %mul101 = mul i64 %83, 2, !dbg !6368
  %add.ptr102 = getelementptr i8, i8* %82, i64 %mul101, !dbg !6369
  %84 = bitcast i8* %add.ptr102 to i32*, !dbg !6370
  store i32 %81, i32* %84, align 4, !dbg !6371, !tbaa !1244
  br label %do.cond.103, !dbg !6372

do.cond.103:                                      ; preds = %do.body.100
  br label %do.end.104, !dbg !6373

do.end.104:                                       ; preds = %do.cond.103
  br label %if.end.105

if.end.105:                                       ; preds = %do.end.104, %do.end.98
  br label %if.end.106

if.end.106:                                       ; preds = %if.end.105, %do.end.78
  br label %if.end.107

if.end.107:                                       ; preds = %if.end.106, %do.end
  br label %do.cond.108, !dbg !6375

do.cond.108:                                      ; preds = %if.end.107
  br label %do.end.109, !dbg !6377

do.end.109:                                       ; preds = %do.cond.108
  br label %do.body.110, !dbg !6379

do.body.110:                                      ; preds = %do.end.109
  %85 = load i32, i32* %width.addr, align 4, !dbg !6380, !tbaa !1244
  %cmp111 = icmp eq i32 %85, 1, !dbg !6384
  br i1 %cmp111, label %if.then.113, label %if.else.122, !dbg !6385

if.then.113:                                      ; preds = %do.body.110
  br label %do.body.114, !dbg !6386

do.body.114:                                      ; preds = %if.then.113
  %86 = load i32, i32* %val2, align 4, !dbg !6388, !tbaa !1244
  %conv115 = trunc i32 %86 to i8, !dbg !6391
  %87 = load i8*, i8** %ncp, align 8, !dbg !6392, !tbaa !1200
  %88 = load i64, i64* %i, align 8, !dbg !6393, !tbaa !1435
  %mul116 = mul i64 %88, 2, !dbg !6394
  %89 = load i32, i32* %width.addr, align 4, !dbg !6395, !tbaa !1244
  %conv117 = sext i32 %89 to i64, !dbg !6395
  %add118 = add i64 %mul116, %conv117, !dbg !6396
  %add.ptr119 = getelementptr i8, i8* %87, i64 %add118, !dbg !6397
  store i8 %conv115, i8* %add.ptr119, align 1, !dbg !6398, !tbaa !2013
  br label %do.cond.120, !dbg !6399

do.cond.120:                                      ; preds = %do.body.114
  br label %do.end.121, !dbg !6400

do.end.121:                                       ; preds = %do.cond.120
  br label %if.end.171, !dbg !6402

if.else.122:                                      ; preds = %do.body.110
  %90 = load i32, i32* %width.addr, align 4, !dbg !6404, !tbaa !1244
  %cmp123 = icmp eq i32 %90, 2, !dbg !6407
  br i1 %cmp123, label %if.then.125, label %if.else.134, !dbg !6408

if.then.125:                                      ; preds = %if.else.122
  br label %do.body.126, !dbg !6409

do.body.126:                                      ; preds = %if.then.125
  %91 = load i32, i32* %val2, align 4, !dbg !6411, !tbaa !1244
  %conv127 = trunc i32 %91 to i16, !dbg !6414
  %92 = load i8*, i8** %ncp, align 8, !dbg !6415, !tbaa !1200
  %93 = load i64, i64* %i, align 8, !dbg !6416, !tbaa !1435
  %mul128 = mul i64 %93, 2, !dbg !6417
  %94 = load i32, i32* %width.addr, align 4, !dbg !6418, !tbaa !1244
  %conv129 = sext i32 %94 to i64, !dbg !6418
  %add130 = add i64 %mul128, %conv129, !dbg !6419
  %add.ptr131 = getelementptr i8, i8* %92, i64 %add130, !dbg !6420
  %95 = bitcast i8* %add.ptr131 to i16*, !dbg !6421
  store i16 %conv127, i16* %95, align 2, !dbg !6422, !tbaa !2026
  br label %do.cond.132, !dbg !6423

do.cond.132:                                      ; preds = %do.body.126
  br label %do.end.133, !dbg !6424

do.end.133:                                       ; preds = %do.cond.132
  br label %if.end.170, !dbg !6426

if.else.134:                                      ; preds = %if.else.122
  %96 = load i32, i32* %width.addr, align 4, !dbg !6428, !tbaa !1244
  %cmp135 = icmp eq i32 %96, 3, !dbg !6431
  br i1 %cmp135, label %if.then.137, label %if.else.161, !dbg !6432

if.then.137:                                      ; preds = %if.else.134
  br label %do.body.138, !dbg !6433

do.body.138:                                      ; preds = %if.then.137
  %97 = load i32, i32* %val2, align 4, !dbg !6435, !tbaa !1244
  %conv139 = trunc i32 %97 to i8, !dbg !6438
  %98 = load i8*, i8** %ncp, align 8, !dbg !6439, !tbaa !1200
  %99 = load i64, i64* %i, align 8, !dbg !6440, !tbaa !1435
  %mul140 = mul i64 %99, 2, !dbg !6441
  %100 = load i32, i32* %width.addr, align 4, !dbg !6442, !tbaa !1244
  %conv141 = sext i32 %100 to i64, !dbg !6442
  %add142 = add i64 %mul140, %conv141, !dbg !6443
  %add.ptr143 = getelementptr i8, i8* %98, i64 %add142, !dbg !6444
  %arrayidx144 = getelementptr i8, i8* %add.ptr143, i64 0, !dbg !6445
  store i8 %conv139, i8* %arrayidx144, align 1, !dbg !6446, !tbaa !2013
  %101 = load i32, i32* %val2, align 4, !dbg !6447, !tbaa !1244
  %shr145 = ashr i32 %101, 8, !dbg !6448
  %conv146 = trunc i32 %shr145 to i8, !dbg !6449
  %102 = load i8*, i8** %ncp, align 8, !dbg !6450, !tbaa !1200
  %103 = load i64, i64* %i, align 8, !dbg !6451, !tbaa !1435
  %mul147 = mul i64 %103, 2, !dbg !6452
  %104 = load i32, i32* %width.addr, align 4, !dbg !6453, !tbaa !1244
  %conv148 = sext i32 %104 to i64, !dbg !6453
  %add149 = add i64 %mul147, %conv148, !dbg !6454
  %add.ptr150 = getelementptr i8, i8* %102, i64 %add149, !dbg !6455
  %arrayidx151 = getelementptr i8, i8* %add.ptr150, i64 1, !dbg !6456
  store i8 %conv146, i8* %arrayidx151, align 1, !dbg !6457, !tbaa !2013
  %105 = load i32, i32* %val2, align 4, !dbg !6458, !tbaa !1244
  %shr152 = ashr i32 %105, 16, !dbg !6459
  %conv153 = trunc i32 %shr152 to i8, !dbg !6460
  %106 = load i8*, i8** %ncp, align 8, !dbg !6461, !tbaa !1200
  %107 = load i64, i64* %i, align 8, !dbg !6462, !tbaa !1435
  %mul154 = mul i64 %107, 2, !dbg !6463
  %108 = load i32, i32* %width.addr, align 4, !dbg !6464, !tbaa !1244
  %conv155 = sext i32 %108 to i64, !dbg !6464
  %add156 = add i64 %mul154, %conv155, !dbg !6465
  %add.ptr157 = getelementptr i8, i8* %106, i64 %add156, !dbg !6466
  %arrayidx158 = getelementptr i8, i8* %add.ptr157, i64 2, !dbg !6467
  store i8 %conv153, i8* %arrayidx158, align 1, !dbg !6468, !tbaa !2013
  br label %do.cond.159, !dbg !6469

do.cond.159:                                      ; preds = %do.body.138
  br label %do.end.160, !dbg !6470

do.end.160:                                       ; preds = %do.cond.159
  br label %if.end.169, !dbg !6472

if.else.161:                                      ; preds = %if.else.134
  br label %do.body.162, !dbg !6474

do.body.162:                                      ; preds = %if.else.161
  %109 = load i32, i32* %val2, align 4, !dbg !6476, !tbaa !1244
  %110 = load i8*, i8** %ncp, align 8, !dbg !6479, !tbaa !1200
  %111 = load i64, i64* %i, align 8, !dbg !6480, !tbaa !1435
  %mul163 = mul i64 %111, 2, !dbg !6481
  %112 = load i32, i32* %width.addr, align 4, !dbg !6482, !tbaa !1244
  %conv164 = sext i32 %112 to i64, !dbg !6482
  %add165 = add i64 %mul163, %conv164, !dbg !6483
  %add.ptr166 = getelementptr i8, i8* %110, i64 %add165, !dbg !6484
  %113 = bitcast i8* %add.ptr166 to i32*, !dbg !6485
  store i32 %109, i32* %113, align 4, !dbg !6486, !tbaa !1244
  br label %do.cond.167, !dbg !6487

do.cond.167:                                      ; preds = %do.body.162
  br label %do.end.168, !dbg !6488

do.end.168:                                       ; preds = %do.cond.167
  br label %if.end.169

if.end.169:                                       ; preds = %do.end.168, %do.end.160
  br label %if.end.170

if.end.170:                                       ; preds = %if.end.169, %do.end.133
  br label %if.end.171

if.end.171:                                       ; preds = %if.end.170, %do.end.121
  br label %do.cond.172, !dbg !6490

do.cond.172:                                      ; preds = %if.end.171
  br label %do.end.173, !dbg !6492

do.end.173:                                       ; preds = %do.cond.172
  %114 = bitcast i32* %val2 to i8*, !dbg !6494
  call void @llvm.lifetime.end(i64 4, i8* %114) #1, !dbg !6494
  %115 = bitcast i32* %val1 to i8*, !dbg !6494
  call void @llvm.lifetime.end(i64 4, i8* %115) #1, !dbg !6494
  %116 = bitcast double* %val to i8*, !dbg !6494
  call void @llvm.lifetime.end(i64 8, i8* %116) #1, !dbg !6494
  br label %for.inc, !dbg !6495

for.inc:                                          ; preds = %do.end.173
  %117 = load i32, i32* %width.addr, align 4, !dbg !6496, !tbaa !1244
  %conv174 = sext i32 %117 to i64, !dbg !6496
  %118 = load i64, i64* %i, align 8, !dbg !6497, !tbaa !1435
  %add175 = add i64 %118, %conv174, !dbg !6497
  store i64 %add175, i64* %i, align 8, !dbg !6497, !tbaa !1435
  br label %for.cond, !dbg !6498

for.end:                                          ; preds = %for.cond
  %119 = load %struct._object*, %struct._object** %rv, align 8, !dbg !6499, !tbaa !1200
  store %struct._object* %119, %struct._object** %retval, !dbg !6500
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6500

cleanup:                                          ; preds = %for.end, %if.then.12, %if.then.6, %if.then
  %120 = bitcast %struct._object** %rv to i8*, !dbg !6501
  call void @llvm.lifetime.end(i64 8, i8* %120) #1, !dbg !6501
  %121 = bitcast double* %minval to i8*, !dbg !6501
  call void @llvm.lifetime.end(i64 8, i8* %121) #1, !dbg !6501
  %122 = bitcast double* %maxval to i8*, !dbg !6501
  call void @llvm.lifetime.end(i64 8, i8* %122) #1, !dbg !6501
  %123 = bitcast i64* %i to i8*, !dbg !6501
  call void @llvm.lifetime.end(i64 8, i8* %123) #1, !dbg !6501
  %124 = bitcast i8** %ncp to i8*, !dbg !6501
  call void @llvm.lifetime.end(i64 8, i8* %124) #1, !dbg !6501
  %125 = load %struct._object*, %struct._object** %retval, !dbg !6501
  ret %struct._object* %125, !dbg !6501
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_getsample_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width, i64 %index) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %index.addr = alloca i64, align 8
  %val = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !963, metadata !1195), !dbg !6502
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !964, metadata !1195), !dbg !6503
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !965, metadata !1195), !dbg !6504
  store i64 %index, i64* %index.addr, align 8, !tbaa !1435
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !966, metadata !1195), !dbg !6505
  %0 = bitcast i32* %val to i8*, !dbg !6506
  call void @llvm.lifetime.start(i64 4, i8* %0) #1, !dbg !6506
  call void @llvm.dbg.declare(metadata i32* %val, metadata !967, metadata !1195), !dbg !6507
  %1 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6508, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %1, i32 0, i32 2, !dbg !6510
  %2 = load i64, i64* %len, align 8, !dbg !6510, !tbaa !1987
  %3 = load i32, i32* %width.addr, align 4, !dbg !6511, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %2, i32 %3), !dbg !6512
  %tobool = icmp ne i32 %call, 0, !dbg !6512
  br i1 %tobool, label %if.end, label %if.then, !dbg !6513

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6514
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6514

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %index.addr, align 8, !dbg !6515, !tbaa !1435
  %cmp = icmp slt i64 %4, 0, !dbg !6517
  br i1 %cmp, label %if.then.4, label %lor.lhs.false, !dbg !6518

lor.lhs.false:                                    ; preds = %if.end
  %5 = load i64, i64* %index.addr, align 8, !dbg !6519, !tbaa !1435
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6521, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 2, !dbg !6522
  %7 = load i64, i64* %len1, align 8, !dbg !6522, !tbaa !1987
  %8 = load i32, i32* %width.addr, align 4, !dbg !6523, !tbaa !1244
  %conv = sext i32 %8 to i64, !dbg !6523
  %div = sdiv i64 %7, %conv, !dbg !6524
  %cmp2 = icmp sge i64 %5, %div, !dbg !6525
  br i1 %cmp2, label %if.then.4, label %if.end.5, !dbg !6526

if.then.4:                                        ; preds = %lor.lhs.false, %if.end
  %9 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !6527, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.65, i32 0, i32 0)), !dbg !6529
  store %struct._object* null, %struct._object** %retval, !dbg !6530
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6530

if.end.5:                                         ; preds = %lor.lhs.false
  %10 = load i32, i32* %width.addr, align 4, !dbg !6531, !tbaa !1244
  %cmp6 = icmp eq i32 %10, 1, !dbg !6532
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !6533

cond.true:                                        ; preds = %if.end.5
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6534, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 0, !dbg !6536
  %12 = load i8*, i8** %buf, align 8, !dbg !6536, !tbaa !2009
  %13 = load i64, i64* %index.addr, align 8, !dbg !6537, !tbaa !1435
  %14 = load i32, i32* %width.addr, align 4, !dbg !6538, !tbaa !1244
  %conv8 = sext i32 %14 to i64, !dbg !6538
  %mul = mul i64 %13, %conv8, !dbg !6539
  %add.ptr = getelementptr i8, i8* %12, i64 %mul, !dbg !6540
  %15 = load i8, i8* %add.ptr, align 1, !dbg !6541, !tbaa !2013
  %conv9 = sext i8 %15 to i32, !dbg !6542
  br label %cond.end.48, !dbg !6533

cond.false:                                       ; preds = %if.end.5
  %16 = load i32, i32* %width.addr, align 4, !dbg !6543, !tbaa !1244
  %cmp10 = icmp eq i32 %16, 2, !dbg !6545
  br i1 %cmp10, label %cond.true.12, label %cond.false.18, !dbg !6546

cond.true.12:                                     ; preds = %cond.false
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6547, !tbaa !1200
  %buf13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 0, !dbg !6549
  %18 = load i8*, i8** %buf13, align 8, !dbg !6549, !tbaa !2009
  %19 = load i64, i64* %index.addr, align 8, !dbg !6550, !tbaa !1435
  %20 = load i32, i32* %width.addr, align 4, !dbg !6551, !tbaa !1244
  %conv14 = sext i32 %20 to i64, !dbg !6551
  %mul15 = mul i64 %19, %conv14, !dbg !6552
  %add.ptr16 = getelementptr i8, i8* %18, i64 %mul15, !dbg !6553
  %21 = bitcast i8* %add.ptr16 to i16*, !dbg !6554
  %22 = load i16, i16* %21, align 2, !dbg !6555, !tbaa !2026
  %conv17 = sext i16 %22 to i32, !dbg !6556
  br label %cond.end.46, !dbg !6546

cond.false.18:                                    ; preds = %cond.false
  %23 = load i32, i32* %width.addr, align 4, !dbg !6557, !tbaa !1244
  %cmp19 = icmp eq i32 %23, 3, !dbg !6559
  br i1 %cmp19, label %cond.true.21, label %cond.false.41, !dbg !6560

cond.true.21:                                     ; preds = %cond.false.18
  %24 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6561, !tbaa !1200
  %buf22 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %24, i32 0, i32 0, !dbg !6563
  %25 = load i8*, i8** %buf22, align 8, !dbg !6563, !tbaa !2009
  %26 = load i64, i64* %index.addr, align 8, !dbg !6564, !tbaa !1435
  %27 = load i32, i32* %width.addr, align 4, !dbg !6565, !tbaa !1244
  %conv23 = sext i32 %27 to i64, !dbg !6565
  %mul24 = mul i64 %26, %conv23, !dbg !6566
  %add.ptr25 = getelementptr i8, i8* %25, i64 %mul24, !dbg !6567
  %arrayidx = getelementptr i8, i8* %add.ptr25, i64 0, !dbg !6568
  %28 = load i8, i8* %arrayidx, align 1, !dbg !6568, !tbaa !2013
  %conv26 = zext i8 %28 to i32, !dbg !6568
  %29 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6569, !tbaa !1200
  %buf27 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %29, i32 0, i32 0, !dbg !6570
  %30 = load i8*, i8** %buf27, align 8, !dbg !6570, !tbaa !2009
  %31 = load i64, i64* %index.addr, align 8, !dbg !6571, !tbaa !1435
  %32 = load i32, i32* %width.addr, align 4, !dbg !6572, !tbaa !1244
  %conv28 = sext i32 %32 to i64, !dbg !6572
  %mul29 = mul i64 %31, %conv28, !dbg !6573
  %add.ptr30 = getelementptr i8, i8* %30, i64 %mul29, !dbg !6574
  %arrayidx31 = getelementptr i8, i8* %add.ptr30, i64 1, !dbg !6575
  %33 = load i8, i8* %arrayidx31, align 1, !dbg !6575, !tbaa !2013
  %conv32 = zext i8 %33 to i32, !dbg !6575
  %shl = shl i32 %conv32, 8, !dbg !6576
  %add = add i32 %conv26, %shl, !dbg !6577
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6578, !tbaa !1200
  %buf33 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %34, i32 0, i32 0, !dbg !6579
  %35 = load i8*, i8** %buf33, align 8, !dbg !6579, !tbaa !2009
  %36 = load i64, i64* %index.addr, align 8, !dbg !6580, !tbaa !1435
  %37 = load i32, i32* %width.addr, align 4, !dbg !6581, !tbaa !1244
  %conv34 = sext i32 %37 to i64, !dbg !6581
  %mul35 = mul i64 %36, %conv34, !dbg !6582
  %add.ptr36 = getelementptr i8, i8* %35, i64 %mul35, !dbg !6583
  %arrayidx37 = getelementptr i8, i8* %add.ptr36, i64 2, !dbg !6584
  %38 = load i8, i8* %arrayidx37, align 1, !dbg !6584, !tbaa !2013
  %conv38 = sext i8 %38 to i32, !dbg !6584
  %shl39 = shl i32 %conv38, 16, !dbg !6585
  %add40 = add i32 %add, %shl39, !dbg !6586
  br label %cond.end, !dbg !6560

cond.false.41:                                    ; preds = %cond.false.18
  %39 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6587, !tbaa !1200
  %buf42 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %39, i32 0, i32 0, !dbg !6589
  %40 = load i8*, i8** %buf42, align 8, !dbg !6589, !tbaa !2009
  %41 = load i64, i64* %index.addr, align 8, !dbg !6590, !tbaa !1435
  %42 = load i32, i32* %width.addr, align 4, !dbg !6591, !tbaa !1244
  %conv43 = sext i32 %42 to i64, !dbg !6591
  %mul44 = mul i64 %41, %conv43, !dbg !6592
  %add.ptr45 = getelementptr i8, i8* %40, i64 %mul44, !dbg !6593
  %43 = bitcast i8* %add.ptr45 to i32*, !dbg !6594
  %44 = load i32, i32* %43, align 4, !dbg !6595, !tbaa !1244
  br label %cond.end, !dbg !6560

cond.end:                                         ; preds = %cond.false.41, %cond.true.21
  %cond = phi i32 [ %add40, %cond.true.21 ], [ %44, %cond.false.41 ], !dbg !6560
  br label %cond.end.46, !dbg !6596

cond.end.46:                                      ; preds = %cond.end, %cond.true.12
  %cond47 = phi i32 [ %conv17, %cond.true.12 ], [ %cond, %cond.end ], !dbg !6546
  br label %cond.end.48, !dbg !6599

cond.end.48:                                      ; preds = %cond.end.46, %cond.true
  %cond49 = phi i32 [ %conv9, %cond.true ], [ %cond47, %cond.end.46 ], !dbg !6533
  store i32 %cond49, i32* %val, align 4, !dbg !6602, !tbaa !1244
  %45 = load i32, i32* %val, align 4, !dbg !6605, !tbaa !1244
  %conv50 = sext i32 %45 to i64, !dbg !6605
  %call51 = call %struct._object* @PyLong_FromLong(i64 %conv50), !dbg !6606
  store %struct._object* %call51, %struct._object** %retval, !dbg !6607
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6607

cleanup:                                          ; preds = %cond.end.48, %if.then.4, %if.then
  %46 = bitcast i32* %val to i8*, !dbg !6608
  call void @llvm.lifetime.end(i64 4, i8* %46) #1, !dbg !6608
  %47 = load %struct._object*, %struct._object** %retval, !dbg !6608
  ret %struct._object* %47, !dbg !6608
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_reverse_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %ncp = alloca i8*, align 8
  %i = alloca i64, align 8
  %rv = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %val = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !977, metadata !1195), !dbg !6609
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !978, metadata !1195), !dbg !6610
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !979, metadata !1195), !dbg !6611
  %0 = bitcast i8** %ncp to i8*, !dbg !6612
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6612
  call void @llvm.dbg.declare(metadata i8** %ncp, metadata !980, metadata !1195), !dbg !6613
  %1 = bitcast i64* %i to i8*, !dbg !6614
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6614
  call void @llvm.dbg.declare(metadata i64* %i, metadata !981, metadata !1195), !dbg !6615
  %2 = bitcast %struct._object** %rv to i8*, !dbg !6616
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6616
  call void @llvm.dbg.declare(metadata %struct._object** %rv, metadata !982, metadata !1195), !dbg !6617
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6618, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 2, !dbg !6620
  %4 = load i64, i64* %len, align 8, !dbg !6620, !tbaa !1987
  %5 = load i32, i32* %width.addr, align 4, !dbg !6621, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %4, i32 %5), !dbg !6622
  %tobool = icmp ne i32 %call, 0, !dbg !6622
  br i1 %tobool, label %if.end, label %if.then, !dbg !6623

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6624
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6624

if.end:                                           ; preds = %entry
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6625, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 2, !dbg !6626
  %7 = load i64, i64* %len1, align 8, !dbg !6626, !tbaa !1987
  %call2 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %7), !dbg !6627
  store %struct._object* %call2, %struct._object** %rv, align 8, !dbg !6628, !tbaa !1200
  %8 = load %struct._object*, %struct._object** %rv, align 8, !dbg !6629, !tbaa !1200
  %cmp = icmp eq %struct._object* %8, null, !dbg !6631
  br i1 %cmp, label %if.then.3, label %if.end.4, !dbg !6632

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !6633
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6633

if.end.4:                                         ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %rv, align 8, !dbg !6634, !tbaa !1200
  %call5 = call i8* @PyBytes_AsString(%struct._object* %9), !dbg !6635
  store i8* %call5, i8** %ncp, align 8, !dbg !6636, !tbaa !1200
  store i64 0, i64* %i, align 8, !dbg !6637, !tbaa !1435
  br label %for.cond, !dbg !6638

for.cond:                                         ; preds = %for.inc, %if.end.4
  %10 = load i64, i64* %i, align 8, !dbg !6639, !tbaa !1435
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6642, !tbaa !1200
  %len6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 2, !dbg !6643
  %12 = load i64, i64* %len6, align 8, !dbg !6643, !tbaa !1987
  %cmp7 = icmp slt i64 %10, %12, !dbg !6644
  br i1 %cmp7, label %for.body, label %for.end, !dbg !6645

for.body:                                         ; preds = %for.cond
  %13 = bitcast i32* %val to i8*, !dbg !6646
  call void @llvm.lifetime.start(i64 4, i8* %13) #1, !dbg !6646
  call void @llvm.dbg.declare(metadata i32* %val, metadata !983, metadata !1195), !dbg !6647
  %14 = load i32, i32* %width.addr, align 4, !dbg !6648, !tbaa !1244
  %cmp8 = icmp eq i32 %14, 1, !dbg !6649
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !6650

cond.true:                                        ; preds = %for.body
  %15 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6651, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %15, i32 0, i32 0, !dbg !6653
  %16 = load i8*, i8** %buf, align 8, !dbg !6653, !tbaa !2009
  %17 = load i64, i64* %i, align 8, !dbg !6654, !tbaa !1435
  %add.ptr = getelementptr i8, i8* %16, i64 %17, !dbg !6655
  %18 = load i8, i8* %add.ptr, align 1, !dbg !6656, !tbaa !2013
  %conv = sext i8 %18 to i32, !dbg !6657
  br label %cond.end.37, !dbg !6650

cond.false:                                       ; preds = %for.body
  %19 = load i32, i32* %width.addr, align 4, !dbg !6658, !tbaa !1244
  %cmp9 = icmp eq i32 %19, 2, !dbg !6660
  br i1 %cmp9, label %cond.true.11, label %cond.false.15, !dbg !6661

cond.true.11:                                     ; preds = %cond.false
  %20 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6662, !tbaa !1200
  %buf12 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %20, i32 0, i32 0, !dbg !6664
  %21 = load i8*, i8** %buf12, align 8, !dbg !6664, !tbaa !2009
  %22 = load i64, i64* %i, align 8, !dbg !6665, !tbaa !1435
  %add.ptr13 = getelementptr i8, i8* %21, i64 %22, !dbg !6666
  %23 = bitcast i8* %add.ptr13 to i16*, !dbg !6667
  %24 = load i16, i16* %23, align 2, !dbg !6668, !tbaa !2026
  %conv14 = sext i16 %24 to i32, !dbg !6669
  br label %cond.end.35, !dbg !6661

cond.false.15:                                    ; preds = %cond.false
  %25 = load i32, i32* %width.addr, align 4, !dbg !6670, !tbaa !1244
  %cmp16 = icmp eq i32 %25, 3, !dbg !6672
  br i1 %cmp16, label %cond.true.18, label %cond.false.32, !dbg !6673

cond.true.18:                                     ; preds = %cond.false.15
  %26 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6674, !tbaa !1200
  %buf19 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %26, i32 0, i32 0, !dbg !6676
  %27 = load i8*, i8** %buf19, align 8, !dbg !6676, !tbaa !2009
  %28 = load i64, i64* %i, align 8, !dbg !6677, !tbaa !1435
  %add.ptr20 = getelementptr i8, i8* %27, i64 %28, !dbg !6678
  %arrayidx = getelementptr i8, i8* %add.ptr20, i64 0, !dbg !6679
  %29 = load i8, i8* %arrayidx, align 1, !dbg !6679, !tbaa !2013
  %conv21 = zext i8 %29 to i32, !dbg !6679
  %30 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6680, !tbaa !1200
  %buf22 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %30, i32 0, i32 0, !dbg !6681
  %31 = load i8*, i8** %buf22, align 8, !dbg !6681, !tbaa !2009
  %32 = load i64, i64* %i, align 8, !dbg !6682, !tbaa !1435
  %add.ptr23 = getelementptr i8, i8* %31, i64 %32, !dbg !6683
  %arrayidx24 = getelementptr i8, i8* %add.ptr23, i64 1, !dbg !6684
  %33 = load i8, i8* %arrayidx24, align 1, !dbg !6684, !tbaa !2013
  %conv25 = zext i8 %33 to i32, !dbg !6684
  %shl = shl i32 %conv25, 8, !dbg !6685
  %add = add i32 %conv21, %shl, !dbg !6686
  %34 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6687, !tbaa !1200
  %buf26 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %34, i32 0, i32 0, !dbg !6688
  %35 = load i8*, i8** %buf26, align 8, !dbg !6688, !tbaa !2009
  %36 = load i64, i64* %i, align 8, !dbg !6689, !tbaa !1435
  %add.ptr27 = getelementptr i8, i8* %35, i64 %36, !dbg !6690
  %arrayidx28 = getelementptr i8, i8* %add.ptr27, i64 2, !dbg !6691
  %37 = load i8, i8* %arrayidx28, align 1, !dbg !6691, !tbaa !2013
  %conv29 = sext i8 %37 to i32, !dbg !6691
  %shl30 = shl i32 %conv29, 16, !dbg !6692
  %add31 = add i32 %add, %shl30, !dbg !6693
  br label %cond.end, !dbg !6673

cond.false.32:                                    ; preds = %cond.false.15
  %38 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6694, !tbaa !1200
  %buf33 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %38, i32 0, i32 0, !dbg !6696
  %39 = load i8*, i8** %buf33, align 8, !dbg !6696, !tbaa !2009
  %40 = load i64, i64* %i, align 8, !dbg !6697, !tbaa !1435
  %add.ptr34 = getelementptr i8, i8* %39, i64 %40, !dbg !6698
  %41 = bitcast i8* %add.ptr34 to i32*, !dbg !6699
  %42 = load i32, i32* %41, align 4, !dbg !6700, !tbaa !1244
  br label %cond.end, !dbg !6673

cond.end:                                         ; preds = %cond.false.32, %cond.true.18
  %cond = phi i32 [ %add31, %cond.true.18 ], [ %42, %cond.false.32 ], !dbg !6673
  br label %cond.end.35, !dbg !6701

cond.end.35:                                      ; preds = %cond.end, %cond.true.11
  %cond36 = phi i32 [ %conv14, %cond.true.11 ], [ %cond, %cond.end ], !dbg !6661
  br label %cond.end.37, !dbg !6704

cond.end.37:                                      ; preds = %cond.end.35, %cond.true
  %cond38 = phi i32 [ %conv, %cond.true ], [ %cond36, %cond.end.35 ], !dbg !6650
  store i32 %cond38, i32* %val, align 4, !dbg !6707, !tbaa !1244
  br label %do.body, !dbg !6710

do.body:                                          ; preds = %cond.end.37
  %43 = load i32, i32* %width.addr, align 4, !dbg !6711, !tbaa !1244
  %cmp39 = icmp eq i32 %43, 1, !dbg !6715
  br i1 %cmp39, label %if.then.41, label %if.else, !dbg !6716

if.then.41:                                       ; preds = %do.body
  br label %do.body.42, !dbg !6717

do.body.42:                                       ; preds = %if.then.41
  %44 = load i32, i32* %val, align 4, !dbg !6719, !tbaa !1244
  %conv43 = trunc i32 %44 to i8, !dbg !6722
  %45 = load i8*, i8** %ncp, align 8, !dbg !6723, !tbaa !1200
  %46 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6724, !tbaa !1200
  %len44 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %46, i32 0, i32 2, !dbg !6725
  %47 = load i64, i64* %len44, align 8, !dbg !6725, !tbaa !1987
  %48 = load i64, i64* %i, align 8, !dbg !6726, !tbaa !1435
  %sub = sub i64 %47, %48, !dbg !6727
  %49 = load i32, i32* %width.addr, align 4, !dbg !6728, !tbaa !1244
  %conv45 = sext i32 %49 to i64, !dbg !6728
  %sub46 = sub i64 %sub, %conv45, !dbg !6729
  %add.ptr47 = getelementptr i8, i8* %45, i64 %sub46, !dbg !6730
  store i8 %conv43, i8* %add.ptr47, align 1, !dbg !6731, !tbaa !2013
  br label %do.cond, !dbg !6732

do.cond:                                          ; preds = %do.body.42
  br label %do.end, !dbg !6733

do.end:                                           ; preds = %do.cond
  br label %if.end.100, !dbg !6735

if.else:                                          ; preds = %do.body
  %50 = load i32, i32* %width.addr, align 4, !dbg !6737, !tbaa !1244
  %cmp48 = icmp eq i32 %50, 2, !dbg !6740
  br i1 %cmp48, label %if.then.50, label %if.else.60, !dbg !6741

if.then.50:                                       ; preds = %if.else
  br label %do.body.51, !dbg !6742

do.body.51:                                       ; preds = %if.then.50
  %51 = load i32, i32* %val, align 4, !dbg !6744, !tbaa !1244
  %conv52 = trunc i32 %51 to i16, !dbg !6747
  %52 = load i8*, i8** %ncp, align 8, !dbg !6748, !tbaa !1200
  %53 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6749, !tbaa !1200
  %len53 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %53, i32 0, i32 2, !dbg !6750
  %54 = load i64, i64* %len53, align 8, !dbg !6750, !tbaa !1987
  %55 = load i64, i64* %i, align 8, !dbg !6751, !tbaa !1435
  %sub54 = sub i64 %54, %55, !dbg !6752
  %56 = load i32, i32* %width.addr, align 4, !dbg !6753, !tbaa !1244
  %conv55 = sext i32 %56 to i64, !dbg !6753
  %sub56 = sub i64 %sub54, %conv55, !dbg !6754
  %add.ptr57 = getelementptr i8, i8* %52, i64 %sub56, !dbg !6755
  %57 = bitcast i8* %add.ptr57 to i16*, !dbg !6756
  store i16 %conv52, i16* %57, align 2, !dbg !6757, !tbaa !2026
  br label %do.cond.58, !dbg !6758

do.cond.58:                                       ; preds = %do.body.51
  br label %do.end.59, !dbg !6759

do.end.59:                                        ; preds = %do.cond.58
  br label %if.end.99, !dbg !6761

if.else.60:                                       ; preds = %if.else
  %58 = load i32, i32* %width.addr, align 4, !dbg !6763, !tbaa !1244
  %cmp61 = icmp eq i32 %58, 3, !dbg !6766
  br i1 %cmp61, label %if.then.63, label %if.else.89, !dbg !6767

if.then.63:                                       ; preds = %if.else.60
  br label %do.body.64, !dbg !6768

do.body.64:                                       ; preds = %if.then.63
  %59 = load i32, i32* %val, align 4, !dbg !6770, !tbaa !1244
  %conv65 = trunc i32 %59 to i8, !dbg !6773
  %60 = load i8*, i8** %ncp, align 8, !dbg !6774, !tbaa !1200
  %61 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6775, !tbaa !1200
  %len66 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %61, i32 0, i32 2, !dbg !6776
  %62 = load i64, i64* %len66, align 8, !dbg !6776, !tbaa !1987
  %63 = load i64, i64* %i, align 8, !dbg !6777, !tbaa !1435
  %sub67 = sub i64 %62, %63, !dbg !6778
  %64 = load i32, i32* %width.addr, align 4, !dbg !6779, !tbaa !1244
  %conv68 = sext i32 %64 to i64, !dbg !6779
  %sub69 = sub i64 %sub67, %conv68, !dbg !6780
  %add.ptr70 = getelementptr i8, i8* %60, i64 %sub69, !dbg !6781
  %arrayidx71 = getelementptr i8, i8* %add.ptr70, i64 0, !dbg !6782
  store i8 %conv65, i8* %arrayidx71, align 1, !dbg !6783, !tbaa !2013
  %65 = load i32, i32* %val, align 4, !dbg !6784, !tbaa !1244
  %shr = ashr i32 %65, 8, !dbg !6785
  %conv72 = trunc i32 %shr to i8, !dbg !6786
  %66 = load i8*, i8** %ncp, align 8, !dbg !6787, !tbaa !1200
  %67 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6788, !tbaa !1200
  %len73 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %67, i32 0, i32 2, !dbg !6789
  %68 = load i64, i64* %len73, align 8, !dbg !6789, !tbaa !1987
  %69 = load i64, i64* %i, align 8, !dbg !6790, !tbaa !1435
  %sub74 = sub i64 %68, %69, !dbg !6791
  %70 = load i32, i32* %width.addr, align 4, !dbg !6792, !tbaa !1244
  %conv75 = sext i32 %70 to i64, !dbg !6792
  %sub76 = sub i64 %sub74, %conv75, !dbg !6793
  %add.ptr77 = getelementptr i8, i8* %66, i64 %sub76, !dbg !6794
  %arrayidx78 = getelementptr i8, i8* %add.ptr77, i64 1, !dbg !6795
  store i8 %conv72, i8* %arrayidx78, align 1, !dbg !6796, !tbaa !2013
  %71 = load i32, i32* %val, align 4, !dbg !6797, !tbaa !1244
  %shr79 = ashr i32 %71, 16, !dbg !6798
  %conv80 = trunc i32 %shr79 to i8, !dbg !6799
  %72 = load i8*, i8** %ncp, align 8, !dbg !6800, !tbaa !1200
  %73 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6801, !tbaa !1200
  %len81 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %73, i32 0, i32 2, !dbg !6802
  %74 = load i64, i64* %len81, align 8, !dbg !6802, !tbaa !1987
  %75 = load i64, i64* %i, align 8, !dbg !6803, !tbaa !1435
  %sub82 = sub i64 %74, %75, !dbg !6804
  %76 = load i32, i32* %width.addr, align 4, !dbg !6805, !tbaa !1244
  %conv83 = sext i32 %76 to i64, !dbg !6805
  %sub84 = sub i64 %sub82, %conv83, !dbg !6806
  %add.ptr85 = getelementptr i8, i8* %72, i64 %sub84, !dbg !6807
  %arrayidx86 = getelementptr i8, i8* %add.ptr85, i64 2, !dbg !6808
  store i8 %conv80, i8* %arrayidx86, align 1, !dbg !6809, !tbaa !2013
  br label %do.cond.87, !dbg !6810

do.cond.87:                                       ; preds = %do.body.64
  br label %do.end.88, !dbg !6811

do.end.88:                                        ; preds = %do.cond.87
  br label %if.end.98, !dbg !6813

if.else.89:                                       ; preds = %if.else.60
  br label %do.body.90, !dbg !6815

do.body.90:                                       ; preds = %if.else.89
  %77 = load i32, i32* %val, align 4, !dbg !6817, !tbaa !1244
  %78 = load i8*, i8** %ncp, align 8, !dbg !6820, !tbaa !1200
  %79 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6821, !tbaa !1200
  %len91 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %79, i32 0, i32 2, !dbg !6822
  %80 = load i64, i64* %len91, align 8, !dbg !6822, !tbaa !1987
  %81 = load i64, i64* %i, align 8, !dbg !6823, !tbaa !1435
  %sub92 = sub i64 %80, %81, !dbg !6824
  %82 = load i32, i32* %width.addr, align 4, !dbg !6825, !tbaa !1244
  %conv93 = sext i32 %82 to i64, !dbg !6825
  %sub94 = sub i64 %sub92, %conv93, !dbg !6826
  %add.ptr95 = getelementptr i8, i8* %78, i64 %sub94, !dbg !6827
  %83 = bitcast i8* %add.ptr95 to i32*, !dbg !6828
  store i32 %77, i32* %83, align 4, !dbg !6829, !tbaa !1244
  br label %do.cond.96, !dbg !6830

do.cond.96:                                       ; preds = %do.body.90
  br label %do.end.97, !dbg !6831

do.end.97:                                        ; preds = %do.cond.96
  br label %if.end.98

if.end.98:                                        ; preds = %do.end.97, %do.end.88
  br label %if.end.99

if.end.99:                                        ; preds = %if.end.98, %do.end.59
  br label %if.end.100

if.end.100:                                       ; preds = %if.end.99, %do.end
  br label %do.cond.101, !dbg !6833

do.cond.101:                                      ; preds = %if.end.100
  br label %do.end.102, !dbg !6835

do.end.102:                                       ; preds = %do.cond.101
  %84 = bitcast i32* %val to i8*, !dbg !6837
  call void @llvm.lifetime.end(i64 4, i8* %84) #1, !dbg !6837
  br label %for.inc, !dbg !6838

for.inc:                                          ; preds = %do.end.102
  %85 = load i32, i32* %width.addr, align 4, !dbg !6839, !tbaa !1244
  %conv103 = sext i32 %85 to i64, !dbg !6839
  %86 = load i64, i64* %i, align 8, !dbg !6840, !tbaa !1435
  %add104 = add i64 %86, %conv103, !dbg !6840
  store i64 %add104, i64* %i, align 8, !dbg !6840, !tbaa !1435
  br label %for.cond, !dbg !6841

for.end:                                          ; preds = %for.cond
  %87 = load %struct._object*, %struct._object** %rv, align 8, !dbg !6842, !tbaa !1200
  store %struct._object* %87, %struct._object** %retval, !dbg !6843
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6843

cleanup:                                          ; preds = %for.end, %if.then.3, %if.then
  %88 = bitcast %struct._object** %rv to i8*, !dbg !6844
  call void @llvm.lifetime.end(i64 8, i8* %88) #1, !dbg !6844
  %89 = bitcast i64* %i to i8*, !dbg !6844
  call void @llvm.lifetime.end(i64 8, i8* %89) #1, !dbg !6844
  %90 = bitcast i8** %ncp to i8*, !dbg !6844
  call void @llvm.lifetime.end(i64 8, i8* %90) #1, !dbg !6844
  %91 = load %struct._object*, %struct._object** %retval, !dbg !6844
  ret %struct._object* %91, !dbg !6844
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_byteswap_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %ncp = alloca i8*, align 8
  %i = alloca i64, align 8
  %rv = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %j = alloca i32, align 4
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !996, metadata !1195), !dbg !6845
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !997, metadata !1195), !dbg !6846
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !998, metadata !1195), !dbg !6847
  %0 = bitcast i8** %ncp to i8*, !dbg !6848
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6848
  call void @llvm.dbg.declare(metadata i8** %ncp, metadata !999, metadata !1195), !dbg !6849
  %1 = bitcast i64* %i to i8*, !dbg !6850
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6850
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1000, metadata !1195), !dbg !6851
  %2 = bitcast %struct._object** %rv to i8*, !dbg !6852
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6852
  call void @llvm.dbg.declare(metadata %struct._object** %rv, metadata !1001, metadata !1195), !dbg !6853
  %3 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6854, !tbaa !1200
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %3, i32 0, i32 2, !dbg !6856
  %4 = load i64, i64* %len, align 8, !dbg !6856, !tbaa !1987
  %5 = load i32, i32* %width.addr, align 4, !dbg !6857, !tbaa !1244
  %call = call i32 @audioop_check_parameters(i64 %4, i32 %5), !dbg !6858
  %tobool = icmp ne i32 %call, 0, !dbg !6858
  br i1 %tobool, label %if.end, label %if.then, !dbg !6859

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6860
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6860

if.end:                                           ; preds = %entry
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6861, !tbaa !1200
  %len1 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %6, i32 0, i32 2, !dbg !6862
  %7 = load i64, i64* %len1, align 8, !dbg !6862, !tbaa !1987
  %call2 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %7), !dbg !6863
  store %struct._object* %call2, %struct._object** %rv, align 8, !dbg !6864, !tbaa !1200
  %8 = load %struct._object*, %struct._object** %rv, align 8, !dbg !6865, !tbaa !1200
  %cmp = icmp eq %struct._object* %8, null, !dbg !6867
  br i1 %cmp, label %if.then.3, label %if.end.4, !dbg !6868

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !6869
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6869

if.end.4:                                         ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %rv, align 8, !dbg !6870, !tbaa !1200
  %call5 = call i8* @PyBytes_AsString(%struct._object* %9), !dbg !6871
  store i8* %call5, i8** %ncp, align 8, !dbg !6872, !tbaa !1200
  store i64 0, i64* %i, align 8, !dbg !6873, !tbaa !1435
  br label %for.cond, !dbg !6874

for.cond:                                         ; preds = %for.inc.16, %if.end.4
  %10 = load i64, i64* %i, align 8, !dbg !6875, !tbaa !1435
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6878, !tbaa !1200
  %len6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 2, !dbg !6879
  %12 = load i64, i64* %len6, align 8, !dbg !6879, !tbaa !1987
  %cmp7 = icmp slt i64 %10, %12, !dbg !6880
  br i1 %cmp7, label %for.body, label %for.end.19, !dbg !6881

for.body:                                         ; preds = %for.cond
  %13 = bitcast i32* %j to i8*, !dbg !6882
  call void @llvm.lifetime.start(i64 4, i8* %13) #1, !dbg !6882
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1002, metadata !1195), !dbg !6883
  store i32 0, i32* %j, align 4, !dbg !6884, !tbaa !1244
  br label %for.cond.8, !dbg !6886

for.cond.8:                                       ; preds = %for.inc, %for.body
  %14 = load i32, i32* %j, align 4, !dbg !6887, !tbaa !1244
  %15 = load i32, i32* %width.addr, align 4, !dbg !6891, !tbaa !1244
  %cmp9 = icmp slt i32 %14, %15, !dbg !6892
  br i1 %cmp9, label %for.body.10, label %for.end, !dbg !6893

for.body.10:                                      ; preds = %for.cond.8
  %16 = load i64, i64* %i, align 8, !dbg !6894, !tbaa !1435
  %17 = load i32, i32* %j, align 4, !dbg !6895, !tbaa !1244
  %conv = sext i32 %17 to i64, !dbg !6895
  %add = add i64 %16, %conv, !dbg !6896
  %18 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6897, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %18, i32 0, i32 0, !dbg !6898
  %19 = load i8*, i8** %buf, align 8, !dbg !6898, !tbaa !2009
  %arrayidx = getelementptr i8, i8* %19, i64 %add, !dbg !6899
  %20 = load i8, i8* %arrayidx, align 1, !dbg !6899, !tbaa !2013
  %21 = load i64, i64* %i, align 8, !dbg !6900, !tbaa !1435
  %22 = load i32, i32* %width.addr, align 4, !dbg !6901, !tbaa !1244
  %conv11 = sext i32 %22 to i64, !dbg !6901
  %add12 = add i64 %21, %conv11, !dbg !6902
  %sub = sub i64 %add12, 1, !dbg !6903
  %23 = load i32, i32* %j, align 4, !dbg !6904, !tbaa !1244
  %conv13 = sext i32 %23 to i64, !dbg !6904
  %sub14 = sub i64 %sub, %conv13, !dbg !6905
  %24 = load i8*, i8** %ncp, align 8, !dbg !6906, !tbaa !1200
  %arrayidx15 = getelementptr i8, i8* %24, i64 %sub14, !dbg !6906
  store i8 %20, i8* %arrayidx15, align 1, !dbg !6907, !tbaa !2013
  br label %for.inc, !dbg !6906

for.inc:                                          ; preds = %for.body.10
  %25 = load i32, i32* %j, align 4, !dbg !6908, !tbaa !1244
  %inc = add i32 %25, 1, !dbg !6908
  store i32 %inc, i32* %j, align 4, !dbg !6908, !tbaa !1244
  br label %for.cond.8, !dbg !6909

for.end:                                          ; preds = %for.cond.8
  %26 = bitcast i32* %j to i8*, !dbg !6910
  call void @llvm.lifetime.end(i64 4, i8* %26) #1, !dbg !6910
  br label %for.inc.16, !dbg !6911

for.inc.16:                                       ; preds = %for.end
  %27 = load i32, i32* %width.addr, align 4, !dbg !6912, !tbaa !1244
  %conv17 = sext i32 %27 to i64, !dbg !6912
  %28 = load i64, i64* %i, align 8, !dbg !6913, !tbaa !1435
  %add18 = add i64 %28, %conv17, !dbg !6913
  store i64 %add18, i64* %i, align 8, !dbg !6913, !tbaa !1435
  br label %for.cond, !dbg !6914

for.end.19:                                       ; preds = %for.cond
  %29 = load %struct._object*, %struct._object** %rv, align 8, !dbg !6915, !tbaa !1200
  store %struct._object* %29, %struct._object** %retval, !dbg !6916
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6916

cleanup:                                          ; preds = %for.end.19, %if.then.3, %if.then
  %30 = bitcast %struct._object** %rv to i8*, !dbg !6917
  call void @llvm.lifetime.end(i64 8, i8* %30) #1, !dbg !6917
  %31 = bitcast i64* %i to i8*, !dbg !6917
  call void @llvm.lifetime.end(i64 8, i8* %31) #1, !dbg !6917
  %32 = bitcast i8** %ncp to i8*, !dbg !6917
  call void @llvm.lifetime.end(i64 8, i8* %32) #1, !dbg !6917
  %33 = load %struct._object*, %struct._object** %retval, !dbg !6917
  ret %struct._object* %33, !dbg !6917
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @audioop_ratecv_impl(%struct.PyModuleDef* %module, %struct.bufferinfo* %fragment, i32 %width, i32 %nchannels, i32 %inrate, i32 %outrate, %struct._object* %state, i32 %weightA, i32 %weightB) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %module.addr = alloca %struct.PyModuleDef*, align 8
  %fragment.addr = alloca %struct.bufferinfo*, align 8
  %width.addr = alloca i32, align 4
  %nchannels.addr = alloca i32, align 4
  %inrate.addr = alloca i32, align 4
  %outrate.addr = alloca i32, align 4
  %state.addr = alloca %struct._object*, align 8
  %weightA.addr = alloca i32, align 4
  %weightB.addr = alloca i32, align 4
  %cp = alloca i8*, align 8
  %ncp = alloca i8*, align 8
  %len = alloca i64, align 8
  %chan = alloca i32, align 4
  %d = alloca i32, align 4
  %prev_i = alloca i32*, align 8
  %cur_i = alloca i32*, align 8
  %cur_o = alloca i32, align 4
  %samps = alloca %struct._object*, align 8
  %str = alloca %struct._object*, align 8
  %rv = alloca %struct._object*, align 8
  %bytes_per_frame = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %q = alloca i64, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp157 = alloca %struct._object*, align 8
  %_py_decref_tmp170 = alloca %struct._object*, align 8
  store %struct.PyModuleDef* %module, %struct.PyModuleDef** %module.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.PyModuleDef** %module.addr, metadata !1023, metadata !1195), !dbg !6918
  store %struct.bufferinfo* %fragment, %struct.bufferinfo** %fragment.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %fragment.addr, metadata !1024, metadata !1195), !dbg !6919
  store i32 %width, i32* %width.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !1025, metadata !1195), !dbg !6920
  store i32 %nchannels, i32* %nchannels.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %nchannels.addr, metadata !1026, metadata !1195), !dbg !6921
  store i32 %inrate, i32* %inrate.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %inrate.addr, metadata !1027, metadata !1195), !dbg !6922
  store i32 %outrate, i32* %outrate.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %outrate.addr, metadata !1028, metadata !1195), !dbg !6923
  store %struct._object* %state, %struct._object** %state.addr, align 8, !tbaa !1200
  call void @llvm.dbg.declare(metadata %struct._object** %state.addr, metadata !1029, metadata !1195), !dbg !6924
  store i32 %weightA, i32* %weightA.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %weightA.addr, metadata !1030, metadata !1195), !dbg !6925
  store i32 %weightB, i32* %weightB.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %weightB.addr, metadata !1031, metadata !1195), !dbg !6926
  %0 = bitcast i8** %cp to i8*, !dbg !6927
  call void @llvm.lifetime.start(i64 8, i8* %0) #1, !dbg !6927
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !1032, metadata !1195), !dbg !6928
  %1 = bitcast i8** %ncp to i8*, !dbg !6927
  call void @llvm.lifetime.start(i64 8, i8* %1) #1, !dbg !6927
  call void @llvm.dbg.declare(metadata i8** %ncp, metadata !1033, metadata !1195), !dbg !6929
  %2 = bitcast i64* %len to i8*, !dbg !6930
  call void @llvm.lifetime.start(i64 8, i8* %2) #1, !dbg !6930
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1034, metadata !1195), !dbg !6931
  %3 = bitcast i32* %chan to i8*, !dbg !6932
  call void @llvm.lifetime.start(i64 4, i8* %3) #1, !dbg !6932
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !1035, metadata !1195), !dbg !6933
  %4 = bitcast i32* %d to i8*, !dbg !6932
  call void @llvm.lifetime.start(i64 4, i8* %4) #1, !dbg !6932
  call void @llvm.dbg.declare(metadata i32* %d, metadata !1036, metadata !1195), !dbg !6934
  %5 = bitcast i32** %prev_i to i8*, !dbg !6932
  call void @llvm.lifetime.start(i64 8, i8* %5) #1, !dbg !6932
  call void @llvm.dbg.declare(metadata i32** %prev_i, metadata !1037, metadata !1195), !dbg !6935
  %6 = bitcast i32** %cur_i to i8*, !dbg !6932
  call void @llvm.lifetime.start(i64 8, i8* %6) #1, !dbg !6932
  call void @llvm.dbg.declare(metadata i32** %cur_i, metadata !1038, metadata !1195), !dbg !6936
  %7 = bitcast i32* %cur_o to i8*, !dbg !6932
  call void @llvm.lifetime.start(i64 4, i8* %7) #1, !dbg !6932
  call void @llvm.dbg.declare(metadata i32* %cur_o, metadata !1039, metadata !1195), !dbg !6937
  %8 = bitcast %struct._object** %samps to i8*, !dbg !6938
  call void @llvm.lifetime.start(i64 8, i8* %8) #1, !dbg !6938
  call void @llvm.dbg.declare(metadata %struct._object** %samps, metadata !1040, metadata !1195), !dbg !6939
  %9 = bitcast %struct._object** %str to i8*, !dbg !6938
  call void @llvm.lifetime.start(i64 8, i8* %9) #1, !dbg !6938
  call void @llvm.dbg.declare(metadata %struct._object** %str, metadata !1041, metadata !1195), !dbg !6940
  %10 = bitcast %struct._object** %rv to i8*, !dbg !6938
  call void @llvm.lifetime.start(i64 8, i8* %10) #1, !dbg !6938
  call void @llvm.dbg.declare(metadata %struct._object** %rv, metadata !1042, metadata !1195), !dbg !6941
  store %struct._object* null, %struct._object** %rv, align 8, !dbg !6941, !tbaa !1200
  %11 = bitcast i32* %bytes_per_frame to i8*, !dbg !6942
  call void @llvm.lifetime.start(i64 4, i8* %11) #1, !dbg !6942
  call void @llvm.dbg.declare(metadata i32* %bytes_per_frame, metadata !1043, metadata !1195), !dbg !6943
  %12 = load i32, i32* %width.addr, align 4, !dbg !6944, !tbaa !1244
  %call = call i32 @audioop_check_size(i32 %12), !dbg !6946
  %tobool = icmp ne i32 %call, 0, !dbg !6946
  br i1 %tobool, label %if.end, label %if.then, !dbg !6947

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6948
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6948

if.end:                                           ; preds = %entry
  %13 = load i32, i32* %nchannels.addr, align 4, !dbg !6949, !tbaa !1244
  %cmp = icmp slt i32 %13, 1, !dbg !6951
  br i1 %cmp, label %if.then.1, label %if.end.2, !dbg !6952

if.then.1:                                        ; preds = %if.end
  %14 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !6953, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.69, i32 0, i32 0)), !dbg !6955
  store %struct._object* null, %struct._object** %retval, !dbg !6956
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6956

if.end.2:                                         ; preds = %if.end
  %15 = load i32, i32* %width.addr, align 4, !dbg !6957, !tbaa !1244
  %16 = load i32, i32* %nchannels.addr, align 4, !dbg !6959, !tbaa !1244
  %div = sdiv i32 2147483647, %16, !dbg !6960
  %cmp3 = icmp sgt i32 %15, %div, !dbg !6961
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !6962

if.then.4:                                        ; preds = %if.end.2
  %17 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !6963, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %17, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.70, i32 0, i32 0)), !dbg !6965
  store %struct._object* null, %struct._object** %retval, !dbg !6966
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6966

if.end.5:                                         ; preds = %if.end.2
  %18 = load i32, i32* %width.addr, align 4, !dbg !6967, !tbaa !1244
  %19 = load i32, i32* %nchannels.addr, align 4, !dbg !6968, !tbaa !1244
  %mul = mul i32 %18, %19, !dbg !6969
  store i32 %mul, i32* %bytes_per_frame, align 4, !dbg !6970, !tbaa !1244
  %20 = load i32, i32* %weightA.addr, align 4, !dbg !6971, !tbaa !1244
  %cmp6 = icmp slt i32 %20, 1, !dbg !6973
  br i1 %cmp6, label %if.then.8, label %lor.lhs.false, !dbg !6974

lor.lhs.false:                                    ; preds = %if.end.5
  %21 = load i32, i32* %weightB.addr, align 4, !dbg !6975, !tbaa !1244
  %cmp7 = icmp slt i32 %21, 0, !dbg !6977
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !6978

if.then.8:                                        ; preds = %lor.lhs.false, %if.end.5
  %22 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !6979, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %22, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.71, i32 0, i32 0)), !dbg !6981
  store %struct._object* null, %struct._object** %retval, !dbg !6982
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6982

if.end.9:                                         ; preds = %lor.lhs.false
  %23 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !6983, !tbaa !1200
  %len10 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %23, i32 0, i32 2, !dbg !6985
  %24 = load i64, i64* %len10, align 8, !dbg !6985, !tbaa !1987
  %25 = load i32, i32* %bytes_per_frame, align 4, !dbg !6986, !tbaa !1244
  %conv = sext i32 %25 to i64, !dbg !6986
  %rem = srem i64 %24, %conv, !dbg !6987
  %cmp11 = icmp ne i64 %rem, 0, !dbg !6988
  br i1 %cmp11, label %if.then.13, label %if.end.14, !dbg !6989

if.then.13:                                       ; preds = %if.end.9
  %26 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !6990, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %26, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30, i32 0, i32 0)), !dbg !6992
  store %struct._object* null, %struct._object** %retval, !dbg !6993
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6993

if.end.14:                                        ; preds = %if.end.9
  %27 = load i32, i32* %inrate.addr, align 4, !dbg !6994, !tbaa !1244
  %cmp15 = icmp sle i32 %27, 0, !dbg !6996
  br i1 %cmp15, label %if.then.20, label %lor.lhs.false.17, !dbg !6997

lor.lhs.false.17:                                 ; preds = %if.end.14
  %28 = load i32, i32* %outrate.addr, align 4, !dbg !6998, !tbaa !1244
  %cmp18 = icmp sle i32 %28, 0, !dbg !7000
  br i1 %cmp18, label %if.then.20, label %if.end.21, !dbg !7001

if.then.20:                                       ; preds = %lor.lhs.false.17, %if.end.14
  %29 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !7002, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %29, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.72, i32 0, i32 0)), !dbg !7004
  store %struct._object* null, %struct._object** %retval, !dbg !7005
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7005

if.end.21:                                        ; preds = %lor.lhs.false.17
  %30 = load i32, i32* %inrate.addr, align 4, !dbg !7006, !tbaa !1244
  %31 = load i32, i32* %outrate.addr, align 4, !dbg !7007, !tbaa !1244
  %call22 = call i32 @gcd(i32 %30, i32 %31), !dbg !7008
  store i32 %call22, i32* %d, align 4, !dbg !7009, !tbaa !1244
  %32 = load i32, i32* %d, align 4, !dbg !7010, !tbaa !1244
  %33 = load i32, i32* %inrate.addr, align 4, !dbg !7011, !tbaa !1244
  %div23 = sdiv i32 %33, %32, !dbg !7011
  store i32 %div23, i32* %inrate.addr, align 4, !dbg !7011, !tbaa !1244
  %34 = load i32, i32* %d, align 4, !dbg !7012, !tbaa !1244
  %35 = load i32, i32* %outrate.addr, align 4, !dbg !7013, !tbaa !1244
  %div24 = sdiv i32 %35, %34, !dbg !7013
  store i32 %div24, i32* %outrate.addr, align 4, !dbg !7013, !tbaa !1244
  %36 = load i32, i32* %weightA.addr, align 4, !dbg !7014, !tbaa !1244
  %37 = load i32, i32* %weightB.addr, align 4, !dbg !7015, !tbaa !1244
  %call25 = call i32 @gcd(i32 %36, i32 %37), !dbg !7016
  store i32 %call25, i32* %d, align 4, !dbg !7017, !tbaa !1244
  %38 = load i32, i32* %d, align 4, !dbg !7018, !tbaa !1244
  %39 = load i32, i32* %weightA.addr, align 4, !dbg !7019, !tbaa !1244
  %div26 = sdiv i32 %39, %38, !dbg !7019
  store i32 %div26, i32* %weightA.addr, align 4, !dbg !7019, !tbaa !1244
  %40 = load i32, i32* %d, align 4, !dbg !7020, !tbaa !1244
  %41 = load i32, i32* %weightA.addr, align 4, !dbg !7021, !tbaa !1244
  %div27 = sdiv i32 %41, %40, !dbg !7021
  store i32 %div27, i32* %weightA.addr, align 4, !dbg !7021, !tbaa !1244
  %42 = load i32, i32* %nchannels.addr, align 4, !dbg !7022, !tbaa !1244
  %conv28 = sext i32 %42 to i64, !dbg !7024
  %cmp29 = icmp ugt i64 %conv28, 4611686018427387903, !dbg !7025
  br i1 %cmp29, label %if.then.31, label %if.end.32, !dbg !7026

if.then.31:                                       ; preds = %if.end.21
  %43 = load %struct._object*, %struct._object** @PyExc_MemoryError, align 8, !dbg !7027, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %43, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.52, i32 0, i32 0)), !dbg !7029
  store %struct._object* null, %struct._object** %retval, !dbg !7030
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7030

if.end.32:                                        ; preds = %if.end.21
  %44 = load i32, i32* %nchannels.addr, align 4, !dbg !7031, !tbaa !1244
  %conv33 = sext i32 %44 to i64, !dbg !7031
  %mul34 = mul i64 %conv33, 4, !dbg !7032
  %call35 = call i8* @PyMem_Malloc(i64 %mul34), !dbg !7033
  %45 = bitcast i8* %call35 to i32*, !dbg !7034
  store i32* %45, i32** %prev_i, align 8, !dbg !7035, !tbaa !1200
  %46 = load i32, i32* %nchannels.addr, align 4, !dbg !7036, !tbaa !1244
  %conv36 = sext i32 %46 to i64, !dbg !7036
  %mul37 = mul i64 %conv36, 4, !dbg !7037
  %call38 = call i8* @PyMem_Malloc(i64 %mul37), !dbg !7038
  %47 = bitcast i8* %call38 to i32*, !dbg !7039
  store i32* %47, i32** %cur_i, align 8, !dbg !7040, !tbaa !1200
  %48 = load i32*, i32** %prev_i, align 8, !dbg !7041, !tbaa !1200
  %cmp39 = icmp eq i32* %48, null, !dbg !7043
  br i1 %cmp39, label %if.then.44, label %lor.lhs.false.41, !dbg !7044

lor.lhs.false.41:                                 ; preds = %if.end.32
  %49 = load i32*, i32** %cur_i, align 8, !dbg !7045, !tbaa !1200
  %cmp42 = icmp eq i32* %49, null, !dbg !7047
  br i1 %cmp42, label %if.then.44, label %if.end.46, !dbg !7048

if.then.44:                                       ; preds = %lor.lhs.false.41, %if.end.32
  %call45 = call %struct._object* @PyErr_NoMemory(), !dbg !7049
  br label %exit, !dbg !7051

if.end.46:                                        ; preds = %lor.lhs.false.41
  %50 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !7052, !tbaa !1200
  %len47 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %50, i32 0, i32 2, !dbg !7053
  %51 = load i64, i64* %len47, align 8, !dbg !7053, !tbaa !1987
  %52 = load i32, i32* %bytes_per_frame, align 4, !dbg !7054, !tbaa !1244
  %conv48 = sext i32 %52 to i64, !dbg !7054
  %div49 = sdiv i64 %51, %conv48, !dbg !7055
  store i64 %div49, i64* %len, align 8, !dbg !7056, !tbaa !1435
  %53 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !7057, !tbaa !1200
  %cmp50 = icmp eq %struct._object* %53, @_Py_NoneStruct, !dbg !7059
  br i1 %cmp50, label %if.then.52, label %if.else, !dbg !7060

if.then.52:                                       ; preds = %if.end.46
  %54 = load i32, i32* %outrate.addr, align 4, !dbg !7061, !tbaa !1244
  %sub = sub i32 0, %54, !dbg !7063
  store i32 %sub, i32* %d, align 4, !dbg !7064, !tbaa !1244
  store i32 0, i32* %chan, align 4, !dbg !7065, !tbaa !1244
  br label %for.cond, !dbg !7067

for.cond:                                         ; preds = %for.inc, %if.then.52
  %55 = load i32, i32* %chan, align 4, !dbg !7068, !tbaa !1244
  %56 = load i32, i32* %nchannels.addr, align 4, !dbg !7072, !tbaa !1244
  %cmp53 = icmp slt i32 %55, %56, !dbg !7073
  br i1 %cmp53, label %for.body, label %for.end, !dbg !7074

for.body:                                         ; preds = %for.cond
  %57 = load i32, i32* %chan, align 4, !dbg !7075, !tbaa !1244
  %idxprom = sext i32 %57 to i64, !dbg !7076
  %58 = load i32*, i32** %cur_i, align 8, !dbg !7076, !tbaa !1200
  %arrayidx = getelementptr i32, i32* %58, i64 %idxprom, !dbg !7076
  store i32 0, i32* %arrayidx, align 4, !dbg !7077, !tbaa !1244
  %59 = load i32, i32* %chan, align 4, !dbg !7078, !tbaa !1244
  %idxprom55 = sext i32 %59 to i64, !dbg !7079
  %60 = load i32*, i32** %prev_i, align 8, !dbg !7079, !tbaa !1200
  %arrayidx56 = getelementptr i32, i32* %60, i64 %idxprom55, !dbg !7079
  store i32 0, i32* %arrayidx56, align 4, !dbg !7080, !tbaa !1244
  br label %for.inc, !dbg !7079

for.inc:                                          ; preds = %for.body
  %61 = load i32, i32* %chan, align 4, !dbg !7081, !tbaa !1244
  %inc = add i32 %61, 1, !dbg !7081
  store i32 %inc, i32* %chan, align 4, !dbg !7081, !tbaa !1244
  br label %for.cond, !dbg !7082

for.end:                                          ; preds = %for.cond
  br label %if.end.84, !dbg !7083

if.else:                                          ; preds = %if.end.46
  %62 = load %struct._object*, %struct._object** %state.addr, align 8, !dbg !7084, !tbaa !1200
  %call57 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %62, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.73, i32 0, i32 0), i32* %d, %struct._typeobject* @PyTuple_Type, %struct._object** %samps), !dbg !7087
  %tobool58 = icmp ne i32 %call57, 0, !dbg !7087
  br i1 %tobool58, label %if.end.60, label %if.then.59, !dbg !7088

if.then.59:                                       ; preds = %if.else
  br label %exit, !dbg !7089

if.end.60:                                        ; preds = %if.else
  %63 = load %struct._object*, %struct._object** %samps, align 8, !dbg !7090, !tbaa !1200
  %call61 = call i64 @PyTuple_Size(%struct._object* %63), !dbg !7092
  %64 = load i32, i32* %nchannels.addr, align 4, !dbg !7093, !tbaa !1244
  %conv62 = sext i32 %64 to i64, !dbg !7093
  %cmp63 = icmp ne i64 %call61, %conv62, !dbg !7094
  br i1 %cmp63, label %if.then.65, label %if.end.66, !dbg !7095

if.then.65:                                       ; preds = %if.end.60
  %65 = load %struct._object*, %struct._object** @AudioopError, align 8, !dbg !7096, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %65, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.74, i32 0, i32 0)), !dbg !7098
  br label %exit, !dbg !7099

if.end.66:                                        ; preds = %if.end.60
  store i32 0, i32* %chan, align 4, !dbg !7100, !tbaa !1244
  br label %for.cond.67, !dbg !7102

for.cond.67:                                      ; preds = %for.inc.81, %if.end.66
  %66 = load i32, i32* %chan, align 4, !dbg !7103, !tbaa !1244
  %67 = load i32, i32* %nchannels.addr, align 4, !dbg !7107, !tbaa !1244
  %cmp68 = icmp slt i32 %66, %67, !dbg !7108
  br i1 %cmp68, label %for.body.70, label %for.end.83, !dbg !7109

for.body.70:                                      ; preds = %for.cond.67
  %68 = load %struct._object*, %struct._object** %samps, align 8, !dbg !7110, !tbaa !1200
  %69 = load i32, i32* %chan, align 4, !dbg !7113, !tbaa !1244
  %conv71 = sext i32 %69 to i64, !dbg !7113
  %call72 = call %struct._object* @PyTuple_GetItem(%struct._object* %68, i64 %conv71), !dbg !7114
  %70 = load i32, i32* %chan, align 4, !dbg !7115, !tbaa !1244
  %idxprom73 = sext i32 %70 to i64, !dbg !7116
  %71 = load i32*, i32** %prev_i, align 8, !dbg !7116, !tbaa !1200
  %arrayidx74 = getelementptr i32, i32* %71, i64 %idxprom73, !dbg !7116
  %72 = load i32, i32* %chan, align 4, !dbg !7117, !tbaa !1244
  %idxprom75 = sext i32 %72 to i64, !dbg !7118
  %73 = load i32*, i32** %cur_i, align 8, !dbg !7118, !tbaa !1200
  %arrayidx76 = getelementptr i32, i32* %73, i64 %idxprom75, !dbg !7118
  %call77 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %call72, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.75, i32 0, i32 0), i32* %arrayidx74, i32* %arrayidx76), !dbg !7119
  %tobool78 = icmp ne i32 %call77, 0, !dbg !7119
  br i1 %tobool78, label %if.end.80, label %if.then.79, !dbg !7120

if.then.79:                                       ; preds = %for.body.70
  br label %exit, !dbg !7121

if.end.80:                                        ; preds = %for.body.70
  br label %for.inc.81, !dbg !7122

for.inc.81:                                       ; preds = %if.end.80
  %74 = load i32, i32* %chan, align 4, !dbg !7123, !tbaa !1244
  %inc82 = add i32 %74, 1, !dbg !7123
  store i32 %inc82, i32* %chan, align 4, !dbg !7123, !tbaa !1244
  br label %for.cond.67, !dbg !7124

for.end.83:                                       ; preds = %for.cond.67
  br label %if.end.84

if.end.84:                                        ; preds = %for.end.83, %for.end
  %75 = load i64, i64* %len, align 8, !dbg !7125, !tbaa !1435
  %cmp85 = icmp eq i64 %75, 0, !dbg !7126
  br i1 %cmp85, label %if.then.87, label %if.else.89, !dbg !7127

if.then.87:                                       ; preds = %if.end.84
  %call88 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 0), !dbg !7128
  store %struct._object* %call88, %struct._object** %str, align 8, !dbg !7129, !tbaa !1200
  br label %if.end.107, !dbg !7130

if.else.89:                                       ; preds = %if.end.84
  %76 = bitcast i64* %q to i8*, !dbg !7131
  call void @llvm.lifetime.start(i64 8, i8* %76) #1, !dbg !7131
  call void @llvm.dbg.declare(metadata i64* %q, metadata !1044, metadata !1195), !dbg !7132
  %77 = load i64, i64* %len, align 8, !dbg !7133, !tbaa !1435
  %sub90 = sub i64 %77, 1, !dbg !7134
  %78 = load i32, i32* %inrate.addr, align 4, !dbg !7135, !tbaa !1244
  %conv91 = sext i32 %78 to i64, !dbg !7135
  %div92 = sdiv i64 %sub90, %conv91, !dbg !7136
  %add = add i64 1, %div92, !dbg !7137
  store i64 %add, i64* %q, align 8, !dbg !7132, !tbaa !1435
  %79 = load i32, i32* %outrate.addr, align 4, !dbg !7138, !tbaa !1244
  %conv93 = sext i32 %79 to i64, !dbg !7138
  %80 = load i64, i64* %q, align 8, !dbg !7140, !tbaa !1435
  %div94 = sdiv i64 9223372036854775807, %80, !dbg !7141
  %81 = load i32, i32* %bytes_per_frame, align 4, !dbg !7142, !tbaa !1244
  %conv95 = sext i32 %81 to i64, !dbg !7142
  %div96 = sdiv i64 %div94, %conv95, !dbg !7143
  %cmp97 = icmp sgt i64 %conv93, %div96, !dbg !7144
  br i1 %cmp97, label %if.then.99, label %if.else.100, !dbg !7145

if.then.99:                                       ; preds = %if.else.89
  store %struct._object* null, %struct._object** %str, align 8, !dbg !7146, !tbaa !1200
  br label %if.end.106, !dbg !7147

if.else.100:                                      ; preds = %if.else.89
  %82 = load i64, i64* %q, align 8, !dbg !7148, !tbaa !1435
  %83 = load i32, i32* %outrate.addr, align 4, !dbg !7149, !tbaa !1244
  %conv101 = sext i32 %83 to i64, !dbg !7149
  %mul102 = mul i64 %82, %conv101, !dbg !7150
  %84 = load i32, i32* %bytes_per_frame, align 4, !dbg !7151, !tbaa !1244
  %conv103 = sext i32 %84 to i64, !dbg !7151
  %mul104 = mul i64 %mul102, %conv103, !dbg !7152
  %call105 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %mul104), !dbg !7153
  store %struct._object* %call105, %struct._object** %str, align 8, !dbg !7154, !tbaa !1200
  br label %if.end.106

if.end.106:                                       ; preds = %if.else.100, %if.then.99
  %85 = bitcast i64* %q to i8*, !dbg !7155
  call void @llvm.lifetime.end(i64 8, i8* %85) #1, !dbg !7155
  br label %if.end.107

if.end.107:                                       ; preds = %if.end.106, %if.then.87
  %86 = load %struct._object*, %struct._object** %str, align 8, !dbg !7156, !tbaa !1200
  %cmp108 = icmp eq %struct._object* %86, null, !dbg !7158
  br i1 %cmp108, label %if.then.110, label %if.end.111, !dbg !7159

if.then.110:                                      ; preds = %if.end.107
  %87 = load %struct._object*, %struct._object** @PyExc_MemoryError, align 8, !dbg !7160, !tbaa !1200
  call void @PyErr_SetString(%struct._object* %87, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.52, i32 0, i32 0)), !dbg !7162
  br label %exit, !dbg !7163

if.end.111:                                       ; preds = %if.end.107
  %88 = load %struct._object*, %struct._object** %str, align 8, !dbg !7164, !tbaa !1200
  %call112 = call i8* @PyBytes_AsString(%struct._object* %88), !dbg !7165
  store i8* %call112, i8** %ncp, align 8, !dbg !7166, !tbaa !1200
  %89 = load %struct.bufferinfo*, %struct.bufferinfo** %fragment.addr, align 8, !dbg !7167, !tbaa !1200
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %89, i32 0, i32 0, !dbg !7168
  %90 = load i8*, i8** %buf, align 8, !dbg !7168, !tbaa !2009
  store i8* %90, i8** %cp, align 8, !dbg !7169, !tbaa !1200
  br label %for.cond.113, !dbg !7170

for.cond.113:                                     ; preds = %while.end.329, %if.end.111
  br label %while.cond, !dbg !7171

while.cond:                                       ; preds = %for.end.247, %for.cond.113
  %91 = load i32, i32* %d, align 4, !dbg !7172, !tbaa !1244
  %cmp114 = icmp slt i32 %91, 0, !dbg !7175
  br i1 %cmp114, label %while.body, label %while.end, !dbg !7171

while.body:                                       ; preds = %while.cond
  %92 = load i64, i64* %len, align 8, !dbg !7176, !tbaa !1435
  %cmp116 = icmp eq i64 %92, 0, !dbg !7177
  br i1 %cmp116, label %if.then.118, label %if.end.182, !dbg !7178

if.then.118:                                      ; preds = %while.body
  %93 = load i32, i32* %nchannels.addr, align 4, !dbg !7179, !tbaa !1244
  %conv119 = sext i32 %93 to i64, !dbg !7179
  %call120 = call %struct._object* @PyTuple_New(i64 %conv119), !dbg !7180
  store %struct._object* %call120, %struct._object** %samps, align 8, !dbg !7181, !tbaa !1200
  %94 = load %struct._object*, %struct._object** %samps, align 8, !dbg !7182, !tbaa !1200
  %cmp121 = icmp eq %struct._object* %94, null, !dbg !7184
  br i1 %cmp121, label %if.then.123, label %if.end.124, !dbg !7185

if.then.123:                                      ; preds = %if.then.118
  br label %exit, !dbg !7186

if.end.124:                                       ; preds = %if.then.118
  store i32 0, i32* %chan, align 4, !dbg !7187, !tbaa !1244
  br label %for.cond.125, !dbg !7189

for.cond.125:                                     ; preds = %for.inc.136, %if.end.124
  %95 = load i32, i32* %chan, align 4, !dbg !7190, !tbaa !1244
  %96 = load i32, i32* %nchannels.addr, align 4, !dbg !7194, !tbaa !1244
  %cmp126 = icmp slt i32 %95, %96, !dbg !7195
  br i1 %cmp126, label %for.body.128, label %for.end.138, !dbg !7196

for.body.128:                                     ; preds = %for.cond.125
  %97 = load %struct._object*, %struct._object** %samps, align 8, !dbg !7197, !tbaa !1200
  %98 = load i32, i32* %chan, align 4, !dbg !7198, !tbaa !1244
  %conv129 = sext i32 %98 to i64, !dbg !7198
  %99 = load i32, i32* %chan, align 4, !dbg !7199, !tbaa !1244
  %idxprom130 = sext i32 %99 to i64, !dbg !7200
  %100 = load i32*, i32** %prev_i, align 8, !dbg !7200, !tbaa !1200
  %arrayidx131 = getelementptr i32, i32* %100, i64 %idxprom130, !dbg !7200
  %101 = load i32, i32* %arrayidx131, align 4, !dbg !7200, !tbaa !1244
  %102 = load i32, i32* %chan, align 4, !dbg !7201, !tbaa !1244
  %idxprom132 = sext i32 %102 to i64, !dbg !7202
  %103 = load i32*, i32** %cur_i, align 8, !dbg !7202, !tbaa !1200
  %arrayidx133 = getelementptr i32, i32* %103, i64 %idxprom132, !dbg !7202
  %104 = load i32, i32* %arrayidx133, align 4, !dbg !7202, !tbaa !1244
  %call134 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0), i32 %101, i32 %104), !dbg !7203
  %call135 = call i32 @PyTuple_SetItem(%struct._object* %97, i64 %conv129, %struct._object* %call134), !dbg !7204
  br label %for.inc.136, !dbg !7204

for.inc.136:                                      ; preds = %for.body.128
  %105 = load i32, i32* %chan, align 4, !dbg !7205, !tbaa !1244
  %inc137 = add i32 %105, 1, !dbg !7205
  store i32 %inc137, i32* %chan, align 4, !dbg !7205, !tbaa !1244
  br label %for.cond.125, !dbg !7206

for.end.138:                                      ; preds = %for.cond.125
  %call139 = call %struct._object* @PyErr_Occurred(), !dbg !7207
  %tobool140 = icmp ne %struct._object* %call139, null, !dbg !7207
  br i1 %tobool140, label %if.then.141, label %if.end.142, !dbg !7209

if.then.141:                                      ; preds = %for.end.138
  br label %exit, !dbg !7210

if.end.142:                                       ; preds = %for.end.138
  %106 = load i8*, i8** %ncp, align 8, !dbg !7211, !tbaa !1200
  %107 = load %struct._object*, %struct._object** %str, align 8, !dbg !7212, !tbaa !1200
  %call143 = call i8* @PyBytes_AsString(%struct._object* %107), !dbg !7213
  %sub.ptr.lhs.cast = ptrtoint i8* %106 to i64, !dbg !7214
  %sub.ptr.rhs.cast = ptrtoint i8* %call143 to i64, !dbg !7214
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7214
  store i64 %sub.ptr.sub, i64* %len, align 8, !dbg !7215, !tbaa !1435
  %108 = load %struct._object*, %struct._object** %str, align 8, !dbg !7216, !tbaa !1200
  %call144 = call i8* @PyBytes_AsString(%struct._object* %108), !dbg !7217
  %109 = load i64, i64* %len, align 8, !dbg !7218, !tbaa !1435
  %call145 = call %struct._object* @PyBytes_FromStringAndSize(i8* %call144, i64 %109), !dbg !7219
  store %struct._object* %call145, %struct._object** %rv, align 8, !dbg !7220, !tbaa !1200
  br label %do.body, !dbg !7221

do.body:                                          ; preds = %if.end.142
  %110 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7222
  call void @llvm.lifetime.start(i64 8, i8* %110) #1, !dbg !7222
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1047, metadata !1195), !dbg !7224
  %111 = load %struct._object*, %struct._object** %str, align 8, !dbg !7225, !tbaa !1200
  store %struct._object* %111, %struct._object** %_py_decref_tmp, align 8, !dbg !7224, !tbaa !1200
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7226, !tbaa !1200
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 0, !dbg !7228
  %113 = load i64, i64* %ob_refcnt, align 8, !dbg !7229, !tbaa !5493
  %dec = add i64 %113, -1, !dbg !7229
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7229, !tbaa !5493
  %cmp146 = icmp ne i64 %dec, 0, !dbg !7230
  br i1 %cmp146, label %if.then.148, label %if.else.149, !dbg !7231

if.then.148:                                      ; preds = %do.body
  br label %if.end.150, !dbg !7232

if.else.149:                                      ; preds = %do.body
  %114 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7234, !tbaa !1200
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %114, i32 0, i32 1, !dbg !7236
  %115 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7236, !tbaa !5209
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %115, i32 0, i32 4, !dbg !7237
  %116 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7237, !tbaa !5502
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7238, !tbaa !1200
  call void %116(%struct._object* %117), !dbg !7239
  br label %if.end.150

if.end.150:                                       ; preds = %if.else.149, %if.then.148
  %118 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7240
  call void @llvm.lifetime.end(i64 8, i8* %118) #1, !dbg !7240
  br label %do.cond, !dbg !7242

do.cond:                                          ; preds = %if.end.150
  br label %do.end, !dbg !7243

do.end:                                           ; preds = %do.cond
  %119 = load %struct._object*, %struct._object** %rv, align 8, !dbg !7245, !tbaa !1200
  store %struct._object* %119, %struct._object** %str, align 8, !dbg !7246, !tbaa !1200
  %120 = load %struct._object*, %struct._object** %str, align 8, !dbg !7247, !tbaa !1200
  %cmp151 = icmp eq %struct._object* %120, null, !dbg !7249
  br i1 %cmp151, label %if.then.153, label %if.end.154, !dbg !7250

if.then.153:                                      ; preds = %do.end
  br label %exit, !dbg !7251

if.end.154:                                       ; preds = %do.end
  %121 = load %struct._object*, %struct._object** %str, align 8, !dbg !7252, !tbaa !1200
  %122 = load i32, i32* %d, align 4, !dbg !7253, !tbaa !1244
  %123 = load %struct._object*, %struct._object** %samps, align 8, !dbg !7254, !tbaa !1200
  %call155 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.76, i32 0, i32 0), %struct._object* %121, i32 %122, %struct._object* %123), !dbg !7255
  store %struct._object* %call155, %struct._object** %rv, align 8, !dbg !7256, !tbaa !1200
  br label %do.body.156, !dbg !7257

do.body.156:                                      ; preds = %if.end.154
  %124 = bitcast %struct._object** %_py_decref_tmp157 to i8*, !dbg !7258
  call void @llvm.lifetime.start(i64 8, i8* %124) #1, !dbg !7258
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp157, metadata !1055, metadata !1195), !dbg !7260
  %125 = load %struct._object*, %struct._object** %samps, align 8, !dbg !7261, !tbaa !1200
  store %struct._object* %125, %struct._object** %_py_decref_tmp157, align 8, !dbg !7260, !tbaa !1200
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8, !dbg !7262, !tbaa !1200
  %ob_refcnt158 = getelementptr inbounds %struct._object, %struct._object* %126, i32 0, i32 0, !dbg !7264
  %127 = load i64, i64* %ob_refcnt158, align 8, !dbg !7265, !tbaa !5493
  %dec159 = add i64 %127, -1, !dbg !7265
  store i64 %dec159, i64* %ob_refcnt158, align 8, !dbg !7265, !tbaa !5493
  %cmp160 = icmp ne i64 %dec159, 0, !dbg !7266
  br i1 %cmp160, label %if.then.162, label %if.else.163, !dbg !7267

if.then.162:                                      ; preds = %do.body.156
  br label %if.end.166, !dbg !7268

if.else.163:                                      ; preds = %do.body.156
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8, !dbg !7270, !tbaa !1200
  %ob_type164 = getelementptr inbounds %struct._object, %struct._object* %128, i32 0, i32 1, !dbg !7272
  %129 = load %struct._typeobject*, %struct._typeobject** %ob_type164, align 8, !dbg !7272, !tbaa !5209
  %tp_dealloc165 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %129, i32 0, i32 4, !dbg !7273
  %130 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc165, align 8, !dbg !7273, !tbaa !5502
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8, !dbg !7274, !tbaa !1200
  call void %130(%struct._object* %131), !dbg !7275
  br label %if.end.166

if.end.166:                                       ; preds = %if.else.163, %if.then.162
  %132 = bitcast %struct._object** %_py_decref_tmp157 to i8*, !dbg !7276
  call void @llvm.lifetime.end(i64 8, i8* %132) #1, !dbg !7276
  br label %do.cond.167, !dbg !7277

do.cond.167:                                      ; preds = %if.end.166
  br label %do.end.168, !dbg !7278

do.end.168:                                       ; preds = %do.cond.167
  br label %do.body.169, !dbg !7280

do.body.169:                                      ; preds = %do.end.168
  %133 = bitcast %struct._object** %_py_decref_tmp170 to i8*, !dbg !7281
  call void @llvm.lifetime.start(i64 8, i8* %133) #1, !dbg !7281
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp170, metadata !1057, metadata !1195), !dbg !7283
  %134 = load %struct._object*, %struct._object** %str, align 8, !dbg !7284, !tbaa !1200
  store %struct._object* %134, %struct._object** %_py_decref_tmp170, align 8, !dbg !7283, !tbaa !1200
  %135 = load %struct._object*, %struct._object** %_py_decref_tmp170, align 8, !dbg !7285, !tbaa !1200
  %ob_refcnt171 = getelementptr inbounds %struct._object, %struct._object* %135, i32 0, i32 0, !dbg !7287
  %136 = load i64, i64* %ob_refcnt171, align 8, !dbg !7288, !tbaa !5493
  %dec172 = add i64 %136, -1, !dbg !7288
  store i64 %dec172, i64* %ob_refcnt171, align 8, !dbg !7288, !tbaa !5493
  %cmp173 = icmp ne i64 %dec172, 0, !dbg !7289
  br i1 %cmp173, label %if.then.175, label %if.else.176, !dbg !7290

if.then.175:                                      ; preds = %do.body.169
  br label %if.end.179, !dbg !7291

if.else.176:                                      ; preds = %do.body.169
  %137 = load %struct._object*, %struct._object** %_py_decref_tmp170, align 8, !dbg !7293, !tbaa !1200
  %ob_type177 = getelementptr inbounds %struct._object, %struct._object* %137, i32 0, i32 1, !dbg !7295
  %138 = load %struct._typeobject*, %struct._typeobject** %ob_type177, align 8, !dbg !7295, !tbaa !5209
  %tp_dealloc178 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %138, i32 0, i32 4, !dbg !7296
  %139 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc178, align 8, !dbg !7296, !tbaa !5502
  %140 = load %struct._object*, %struct._object** %_py_decref_tmp170, align 8, !dbg !7297, !tbaa !1200
  call void %139(%struct._object* %140), !dbg !7298
  br label %if.end.179

if.end.179:                                       ; preds = %if.else.176, %if.then.175
  %141 = bitcast %struct._object** %_py_decref_tmp170 to i8*, !dbg !7299
  call void @llvm.lifetime.end(i64 8, i8* %141) #1, !dbg !7299
  br label %do.cond.180, !dbg !7300

do.cond.180:                                      ; preds = %if.end.179
  br label %do.end.181, !dbg !7301

do.end.181:                                       ; preds = %do.cond.180
  br label %exit, !dbg !7303

if.end.182:                                       ; preds = %while.body
  store i32 0, i32* %chan, align 4, !dbg !7304, !tbaa !1244
  br label %for.cond.183, !dbg !7306

for.cond.183:                                     ; preds = %for.inc.245, %if.end.182
  %142 = load i32, i32* %chan, align 4, !dbg !7307, !tbaa !1244
  %143 = load i32, i32* %nchannels.addr, align 4, !dbg !7311, !tbaa !1244
  %cmp184 = icmp slt i32 %142, %143, !dbg !7312
  br i1 %cmp184, label %for.body.186, label %for.end.247, !dbg !7313

for.body.186:                                     ; preds = %for.cond.183
  %144 = load i32, i32* %chan, align 4, !dbg !7314, !tbaa !1244
  %idxprom187 = sext i32 %144 to i64, !dbg !7316
  %145 = load i32*, i32** %cur_i, align 8, !dbg !7316, !tbaa !1200
  %arrayidx188 = getelementptr i32, i32* %145, i64 %idxprom187, !dbg !7316
  %146 = load i32, i32* %arrayidx188, align 4, !dbg !7316, !tbaa !1244
  %147 = load i32, i32* %chan, align 4, !dbg !7317, !tbaa !1244
  %idxprom189 = sext i32 %147 to i64, !dbg !7318
  %148 = load i32*, i32** %prev_i, align 8, !dbg !7318, !tbaa !1200
  %arrayidx190 = getelementptr i32, i32* %148, i64 %idxprom189, !dbg !7318
  store i32 %146, i32* %arrayidx190, align 4, !dbg !7319, !tbaa !1244
  %149 = load i32, i32* %width.addr, align 4, !dbg !7320, !tbaa !1244
  %cmp191 = icmp eq i32 %149, 1, !dbg !7321
  br i1 %cmp191, label %cond.true, label %cond.false, !dbg !7322

cond.true:                                        ; preds = %for.body.186
  %150 = load i8*, i8** %cp, align 8, !dbg !7323, !tbaa !1200
  %add.ptr = getelementptr i8, i8* %150, i64 0, !dbg !7325
  %151 = load i8, i8* %add.ptr, align 1, !dbg !7326, !tbaa !2013
  %conv193 = sext i8 %151 to i32, !dbg !7327
  %shl = shl i32 %conv193, 24, !dbg !7328
  br label %cond.end.222, !dbg !7322

cond.false:                                       ; preds = %for.body.186
  %152 = load i32, i32* %width.addr, align 4, !dbg !7329, !tbaa !1244
  %cmp194 = icmp eq i32 %152, 2, !dbg !7331
  br i1 %cmp194, label %cond.true.196, label %cond.false.200, !dbg !7332

cond.true.196:                                    ; preds = %cond.false
  %153 = load i8*, i8** %cp, align 8, !dbg !7333, !tbaa !1200
  %add.ptr197 = getelementptr i8, i8* %153, i64 0, !dbg !7335
  %154 = bitcast i8* %add.ptr197 to i16*, !dbg !7336
  %155 = load i16, i16* %154, align 2, !dbg !7337, !tbaa !2026
  %conv198 = sext i16 %155 to i32, !dbg !7338
  %shl199 = shl i32 %conv198, 16, !dbg !7339
  br label %cond.end.220, !dbg !7332

cond.false.200:                                   ; preds = %cond.false
  %156 = load i32, i32* %width.addr, align 4, !dbg !7340, !tbaa !1244
  %cmp201 = icmp eq i32 %156, 3, !dbg !7342
  br i1 %cmp201, label %cond.true.203, label %cond.false.218, !dbg !7343

cond.true.203:                                    ; preds = %cond.false.200
  %157 = load i8*, i8** %cp, align 8, !dbg !7344, !tbaa !1200
  %add.ptr204 = getelementptr i8, i8* %157, i64 0, !dbg !7346
  %arrayidx205 = getelementptr i8, i8* %add.ptr204, i64 0, !dbg !7347
  %158 = load i8, i8* %arrayidx205, align 1, !dbg !7347, !tbaa !2013
  %conv206 = zext i8 %158 to i32, !dbg !7347
  %159 = load i8*, i8** %cp, align 8, !dbg !7348, !tbaa !1200
  %add.ptr207 = getelementptr i8, i8* %159, i64 0, !dbg !7349
  %arrayidx208 = getelementptr i8, i8* %add.ptr207, i64 1, !dbg !7350
  %160 = load i8, i8* %arrayidx208, align 1, !dbg !7350, !tbaa !2013
  %conv209 = zext i8 %160 to i32, !dbg !7350
  %shl210 = shl i32 %conv209, 8, !dbg !7351
  %add211 = add i32 %conv206, %shl210, !dbg !7352
  %161 = load i8*, i8** %cp, align 8, !dbg !7353, !tbaa !1200
  %add.ptr212 = getelementptr i8, i8* %161, i64 0, !dbg !7354
  %arrayidx213 = getelementptr i8, i8* %add.ptr212, i64 2, !dbg !7355
  %162 = load i8, i8* %arrayidx213, align 1, !dbg !7355, !tbaa !2013
  %conv214 = sext i8 %162 to i32, !dbg !7355
  %shl215 = shl i32 %conv214, 16, !dbg !7356
  %add216 = add i32 %add211, %shl215, !dbg !7357
  %shl217 = shl i32 %add216, 8, !dbg !7358
  br label %cond.end, !dbg !7343

cond.false.218:                                   ; preds = %cond.false.200
  %163 = load i8*, i8** %cp, align 8, !dbg !7359, !tbaa !1200
  %add.ptr219 = getelementptr i8, i8* %163, i64 0, !dbg !7361
  %164 = bitcast i8* %add.ptr219 to i32*, !dbg !7362
  %165 = load i32, i32* %164, align 4, !dbg !7363, !tbaa !1244
  br label %cond.end, !dbg !7343

cond.end:                                         ; preds = %cond.false.218, %cond.true.203
  %cond = phi i32 [ %shl217, %cond.true.203 ], [ %165, %cond.false.218 ], !dbg !7343
  br label %cond.end.220, !dbg !7364

cond.end.220:                                     ; preds = %cond.end, %cond.true.196
  %cond221 = phi i32 [ %shl199, %cond.true.196 ], [ %cond, %cond.end ], !dbg !7332
  br label %cond.end.222, !dbg !7367

cond.end.222:                                     ; preds = %cond.end.220, %cond.true
  %cond223 = phi i32 [ %shl, %cond.true ], [ %cond221, %cond.end.220 ], !dbg !7322
  %166 = load i32, i32* %chan, align 4, !dbg !7370, !tbaa !1244
  %idxprom224 = sext i32 %166 to i64, !dbg !7373
  %167 = load i32*, i32** %cur_i, align 8, !dbg !7373, !tbaa !1200
  %arrayidx225 = getelementptr i32, i32* %167, i64 %idxprom224, !dbg !7373
  store i32 %cond223, i32* %arrayidx225, align 4, !dbg !7374, !tbaa !1244
  %168 = load i32, i32* %width.addr, align 4, !dbg !7375, !tbaa !1244
  %169 = load i8*, i8** %cp, align 8, !dbg !7376, !tbaa !1200
  %idx.ext = sext i32 %168 to i64, !dbg !7376
  %add.ptr226 = getelementptr i8, i8* %169, i64 %idx.ext, !dbg !7376
  store i8* %add.ptr226, i8** %cp, align 8, !dbg !7376, !tbaa !1200
  %170 = load i32, i32* %weightA.addr, align 4, !dbg !7377, !tbaa !1244
  %conv227 = sitofp i32 %170 to double, !dbg !7378
  %171 = load i32, i32* %chan, align 4, !dbg !7379, !tbaa !1244
  %idxprom228 = sext i32 %171 to i64, !dbg !7380
  %172 = load i32*, i32** %cur_i, align 8, !dbg !7380, !tbaa !1200
  %arrayidx229 = getelementptr i32, i32* %172, i64 %idxprom228, !dbg !7380
  %173 = load i32, i32* %arrayidx229, align 4, !dbg !7380, !tbaa !1244
  %conv230 = sitofp i32 %173 to double, !dbg !7381
  %mul231 = fmul double %conv227, %conv230, !dbg !7382
  %174 = load i32, i32* %weightB.addr, align 4, !dbg !7383, !tbaa !1244
  %conv232 = sitofp i32 %174 to double, !dbg !7384
  %175 = load i32, i32* %chan, align 4, !dbg !7385, !tbaa !1244
  %idxprom233 = sext i32 %175 to i64, !dbg !7386
  %176 = load i32*, i32** %prev_i, align 8, !dbg !7386, !tbaa !1200
  %arrayidx234 = getelementptr i32, i32* %176, i64 %idxprom233, !dbg !7386
  %177 = load i32, i32* %arrayidx234, align 4, !dbg !7386, !tbaa !1244
  %conv235 = sitofp i32 %177 to double, !dbg !7387
  %mul236 = fmul double %conv232, %conv235, !dbg !7388
  %add237 = fadd double %mul231, %mul236, !dbg !7389
  %178 = load i32, i32* %weightA.addr, align 4, !dbg !7390, !tbaa !1244
  %conv238 = sitofp i32 %178 to double, !dbg !7391
  %179 = load i32, i32* %weightB.addr, align 4, !dbg !7392, !tbaa !1244
  %conv239 = sitofp i32 %179 to double, !dbg !7393
  %add240 = fadd double %conv238, %conv239, !dbg !7394
  %div241 = fdiv double %add237, %add240, !dbg !7395
  %conv242 = fptosi double %div241 to i32, !dbg !7396
  %180 = load i32, i32* %chan, align 4, !dbg !7397, !tbaa !1244
  %idxprom243 = sext i32 %180 to i64, !dbg !7398
  %181 = load i32*, i32** %cur_i, align 8, !dbg !7398, !tbaa !1200
  %arrayidx244 = getelementptr i32, i32* %181, i64 %idxprom243, !dbg !7398
  store i32 %conv242, i32* %arrayidx244, align 4, !dbg !7399, !tbaa !1244
  br label %for.inc.245, !dbg !7400

for.inc.245:                                      ; preds = %cond.end.222
  %182 = load i32, i32* %chan, align 4, !dbg !7401, !tbaa !1244
  %inc246 = add i32 %182, 1, !dbg !7401
  store i32 %inc246, i32* %chan, align 4, !dbg !7401, !tbaa !1244
  br label %for.cond.183, !dbg !7402

for.end.247:                                      ; preds = %for.cond.183
  %183 = load i64, i64* %len, align 8, !dbg !7403, !tbaa !1435
  %dec248 = add i64 %183, -1, !dbg !7403
  store i64 %dec248, i64* %len, align 8, !dbg !7403, !tbaa !1435
  %184 = load i32, i32* %outrate.addr, align 4, !dbg !7404, !tbaa !1244
  %185 = load i32, i32* %d, align 4, !dbg !7405, !tbaa !1244
  %add249 = add i32 %185, %184, !dbg !7405
  store i32 %add249, i32* %d, align 4, !dbg !7405, !tbaa !1244
  br label %while.cond, !dbg !7171

while.end:                                        ; preds = %while.cond
  br label %while.cond.250, !dbg !7406

while.cond.250:                                   ; preds = %for.end.327, %while.end
  %186 = load i32, i32* %d, align 4, !dbg !7407, !tbaa !1244
  %cmp251 = icmp sge i32 %186, 0, !dbg !7408
  br i1 %cmp251, label %while.body.253, label %while.end.329, !dbg !7406

while.body.253:                                   ; preds = %while.cond.250
  store i32 0, i32* %chan, align 4, !dbg !7409, !tbaa !1244
  br label %for.cond.254, !dbg !7412

for.cond.254:                                     ; preds = %for.inc.325, %while.body.253
  %187 = load i32, i32* %chan, align 4, !dbg !7413, !tbaa !1244
  %188 = load i32, i32* %nchannels.addr, align 4, !dbg !7417, !tbaa !1244
  %cmp255 = icmp slt i32 %187, %188, !dbg !7418
  br i1 %cmp255, label %for.body.257, label %for.end.327, !dbg !7419

for.body.257:                                     ; preds = %for.cond.254
  %189 = load i32, i32* %chan, align 4, !dbg !7420, !tbaa !1244
  %idxprom258 = sext i32 %189 to i64, !dbg !7422
  %190 = load i32*, i32** %prev_i, align 8, !dbg !7422, !tbaa !1200
  %arrayidx259 = getelementptr i32, i32* %190, i64 %idxprom258, !dbg !7422
  %191 = load i32, i32* %arrayidx259, align 4, !dbg !7422, !tbaa !1244
  %conv260 = sitofp i32 %191 to double, !dbg !7423
  %192 = load i32, i32* %d, align 4, !dbg !7424, !tbaa !1244
  %conv261 = sitofp i32 %192 to double, !dbg !7425
  %mul262 = fmul double %conv260, %conv261, !dbg !7426
  %193 = load i32, i32* %chan, align 4, !dbg !7427, !tbaa !1244
  %idxprom263 = sext i32 %193 to i64, !dbg !7428
  %194 = load i32*, i32** %cur_i, align 8, !dbg !7428, !tbaa !1200
  %arrayidx264 = getelementptr i32, i32* %194, i64 %idxprom263, !dbg !7428
  %195 = load i32, i32* %arrayidx264, align 4, !dbg !7428, !tbaa !1244
  %conv265 = sitofp i32 %195 to double, !dbg !7429
  %196 = load i32, i32* %outrate.addr, align 4, !dbg !7430, !tbaa !1244
  %197 = load i32, i32* %d, align 4, !dbg !7431, !tbaa !1244
  %sub266 = sub i32 %196, %197, !dbg !7432
  %conv267 = sitofp i32 %sub266 to double, !dbg !7433
  %mul268 = fmul double %conv265, %conv267, !dbg !7434
  %add269 = fadd double %mul262, %mul268, !dbg !7435
  %198 = load i32, i32* %outrate.addr, align 4, !dbg !7436, !tbaa !1244
  %conv270 = sitofp i32 %198 to double, !dbg !7437
  %div271 = fdiv double %add269, %conv270, !dbg !7438
  %conv272 = fptosi double %div271 to i32, !dbg !7439
  store i32 %conv272, i32* %cur_o, align 4, !dbg !7440, !tbaa !1244
  br label %do.body.273, !dbg !7441

do.body.273:                                      ; preds = %for.body.257
  %199 = load i32, i32* %width.addr, align 4, !dbg !7442, !tbaa !1244
  %cmp274 = icmp eq i32 %199, 1, !dbg !7446
  br i1 %cmp274, label %if.then.276, label %if.else.282, !dbg !7447

if.then.276:                                      ; preds = %do.body.273
  br label %do.body.277, !dbg !7448

do.body.277:                                      ; preds = %if.then.276
  %200 = load i32, i32* %cur_o, align 4, !dbg !7450, !tbaa !1244
  %shr = ashr i32 %200, 24, !dbg !7453
  %conv278 = trunc i32 %shr to i8, !dbg !7454
  %201 = load i8*, i8** %ncp, align 8, !dbg !7455, !tbaa !1200
  %add.ptr279 = getelementptr i8, i8* %201, i64 0, !dbg !7456
  store i8 %conv278, i8* %add.ptr279, align 1, !dbg !7457, !tbaa !2013
  br label %do.cond.280, !dbg !7458

do.cond.280:                                      ; preds = %do.body.277
  br label %do.end.281, !dbg !7459

do.end.281:                                       ; preds = %do.cond.280
  br label %if.end.320, !dbg !7461

if.else.282:                                      ; preds = %do.body.273
  %202 = load i32, i32* %width.addr, align 4, !dbg !7463, !tbaa !1244
  %cmp283 = icmp eq i32 %202, 2, !dbg !7466
  br i1 %cmp283, label %if.then.285, label %if.else.292, !dbg !7467

if.then.285:                                      ; preds = %if.else.282
  br label %do.body.286, !dbg !7468

do.body.286:                                      ; preds = %if.then.285
  %203 = load i32, i32* %cur_o, align 4, !dbg !7470, !tbaa !1244
  %shr287 = ashr i32 %203, 16, !dbg !7473
  %conv288 = trunc i32 %shr287 to i16, !dbg !7474
  %204 = load i8*, i8** %ncp, align 8, !dbg !7475, !tbaa !1200
  %add.ptr289 = getelementptr i8, i8* %204, i64 0, !dbg !7476
  %205 = bitcast i8* %add.ptr289 to i16*, !dbg !7477
  store i16 %conv288, i16* %205, align 2, !dbg !7478, !tbaa !2026
  br label %do.cond.290, !dbg !7479

do.cond.290:                                      ; preds = %do.body.286
  br label %do.end.291, !dbg !7480

do.end.291:                                       ; preds = %do.cond.290
  br label %if.end.319, !dbg !7482

if.else.292:                                      ; preds = %if.else.282
  %206 = load i32, i32* %width.addr, align 4, !dbg !7484, !tbaa !1244
  %cmp293 = icmp eq i32 %206, 3, !dbg !7487
  br i1 %cmp293, label %if.then.295, label %if.else.313, !dbg !7488

if.then.295:                                      ; preds = %if.else.292
  br label %do.body.296, !dbg !7489

do.body.296:                                      ; preds = %if.then.295
  %207 = load i32, i32* %cur_o, align 4, !dbg !7491, !tbaa !1244
  %shr297 = ashr i32 %207, 8, !dbg !7494
  %conv298 = trunc i32 %shr297 to i8, !dbg !7495
  %208 = load i8*, i8** %ncp, align 8, !dbg !7496, !tbaa !1200
  %add.ptr299 = getelementptr i8, i8* %208, i64 0, !dbg !7497
  %arrayidx300 = getelementptr i8, i8* %add.ptr299, i64 0, !dbg !7498
  store i8 %conv298, i8* %arrayidx300, align 1, !dbg !7499, !tbaa !2013
  %209 = load i32, i32* %cur_o, align 4, !dbg !7500, !tbaa !1244
  %shr301 = ashr i32 %209, 8, !dbg !7501
  %shr302 = ashr i32 %shr301, 8, !dbg !7502
  %conv303 = trunc i32 %shr302 to i8, !dbg !7503
  %210 = load i8*, i8** %ncp, align 8, !dbg !7504, !tbaa !1200
  %add.ptr304 = getelementptr i8, i8* %210, i64 0, !dbg !7505
  %arrayidx305 = getelementptr i8, i8* %add.ptr304, i64 1, !dbg !7506
  store i8 %conv303, i8* %arrayidx305, align 1, !dbg !7507, !tbaa !2013
  %211 = load i32, i32* %cur_o, align 4, !dbg !7508, !tbaa !1244
  %shr306 = ashr i32 %211, 8, !dbg !7509
  %shr307 = ashr i32 %shr306, 16, !dbg !7510
  %conv308 = trunc i32 %shr307 to i8, !dbg !7511
  %212 = load i8*, i8** %ncp, align 8, !dbg !7512, !tbaa !1200
  %add.ptr309 = getelementptr i8, i8* %212, i64 0, !dbg !7513
  %arrayidx310 = getelementptr i8, i8* %add.ptr309, i64 2, !dbg !7514
  store i8 %conv308, i8* %arrayidx310, align 1, !dbg !7515, !tbaa !2013
  br label %do.cond.311, !dbg !7516

do.cond.311:                                      ; preds = %do.body.296
  br label %do.end.312, !dbg !7517

do.end.312:                                       ; preds = %do.cond.311
  br label %if.end.318, !dbg !7519

if.else.313:                                      ; preds = %if.else.292
  br label %do.body.314, !dbg !7521

do.body.314:                                      ; preds = %if.else.313
  %213 = load i32, i32* %cur_o, align 4, !dbg !7523, !tbaa !1244
  %214 = load i8*, i8** %ncp, align 8, !dbg !7526, !tbaa !1200
  %add.ptr315 = getelementptr i8, i8* %214, i64 0, !dbg !7527
  %215 = bitcast i8* %add.ptr315 to i32*, !dbg !7528
  store i32 %213, i32* %215, align 4, !dbg !7529, !tbaa !1244
  br label %do.cond.316, !dbg !7530

do.cond.316:                                      ; preds = %do.body.314
  br label %do.end.317, !dbg !7531

do.end.317:                                       ; preds = %do.cond.316
  br label %if.end.318

if.end.318:                                       ; preds = %do.end.317, %do.end.312
  br label %if.end.319

if.end.319:                                       ; preds = %if.end.318, %do.end.291
  br label %if.end.320

if.end.320:                                       ; preds = %if.end.319, %do.end.281
  br label %do.cond.321, !dbg !7533

do.cond.321:                                      ; preds = %if.end.320
  br label %do.end.322, !dbg !7535

do.end.322:                                       ; preds = %do.cond.321
  %216 = load i32, i32* %width.addr, align 4, !dbg !7537, !tbaa !1244
  %217 = load i8*, i8** %ncp, align 8, !dbg !7538, !tbaa !1200
  %idx.ext323 = sext i32 %216 to i64, !dbg !7538
  %add.ptr324 = getelementptr i8, i8* %217, i64 %idx.ext323, !dbg !7538
  store i8* %add.ptr324, i8** %ncp, align 8, !dbg !7538, !tbaa !1200
  br label %for.inc.325, !dbg !7539

for.inc.325:                                      ; preds = %do.end.322
  %218 = load i32, i32* %chan, align 4, !dbg !7540, !tbaa !1244
  %inc326 = add i32 %218, 1, !dbg !7540
  store i32 %inc326, i32* %chan, align 4, !dbg !7540, !tbaa !1244
  br label %for.cond.254, !dbg !7541

for.end.327:                                      ; preds = %for.cond.254
  %219 = load i32, i32* %inrate.addr, align 4, !dbg !7542, !tbaa !1244
  %220 = load i32, i32* %d, align 4, !dbg !7543, !tbaa !1244
  %sub328 = sub i32 %220, %219, !dbg !7543
  store i32 %sub328, i32* %d, align 4, !dbg !7543, !tbaa !1244
  br label %while.cond.250, !dbg !7406

while.end.329:                                    ; preds = %while.cond.250
  br label %for.cond.113, !dbg !7544

exit:                                             ; preds = %do.end.181, %if.then.153, %if.then.141, %if.then.123, %if.then.110, %if.then.79, %if.then.65, %if.then.59, %if.then.44
  %221 = load i32*, i32** %prev_i, align 8, !dbg !7545, !tbaa !1200
  %222 = bitcast i32* %221 to i8*, !dbg !7545
  call void @PyMem_Free(i8* %222), !dbg !7546
  %223 = load i32*, i32** %cur_i, align 8, !dbg !7547, !tbaa !1200
  %224 = bitcast i32* %223 to i8*, !dbg !7547
  call void @PyMem_Free(i8* %224), !dbg !7548
  %225 = load %struct._object*, %struct._object** %rv, align 8, !dbg !7549, !tbaa !1200
  store %struct._object* %225, %struct._object** %retval, !dbg !7550
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7550

cleanup:                                          ; preds = %exit, %if.then.31, %if.then.20, %if.then.13, %if.then.8, %if.then.4, %if.then.1, %if.then
  %226 = bitcast i32* %bytes_per_frame to i8*, !dbg !7551
  call void @llvm.lifetime.end(i64 4, i8* %226) #1, !dbg !7551
  %227 = bitcast %struct._object** %rv to i8*, !dbg !7551
  call void @llvm.lifetime.end(i64 8, i8* %227) #1, !dbg !7551
  %228 = bitcast %struct._object** %str to i8*, !dbg !7551
  call void @llvm.lifetime.end(i64 8, i8* %228) #1, !dbg !7551
  %229 = bitcast %struct._object** %samps to i8*, !dbg !7551
  call void @llvm.lifetime.end(i64 8, i8* %229) #1, !dbg !7551
  %230 = bitcast i32* %cur_o to i8*, !dbg !7551
  call void @llvm.lifetime.end(i64 4, i8* %230) #1, !dbg !7551
  %231 = bitcast i32** %cur_i to i8*, !dbg !7551
  call void @llvm.lifetime.end(i64 8, i8* %231) #1, !dbg !7551
  %232 = bitcast i32** %prev_i to i8*, !dbg !7551
  call void @llvm.lifetime.end(i64 8, i8* %232) #1, !dbg !7551
  %233 = bitcast i32* %d to i8*, !dbg !7551
  call void @llvm.lifetime.end(i64 4, i8* %233) #1, !dbg !7551
  %234 = bitcast i32* %chan to i8*, !dbg !7551
  call void @llvm.lifetime.end(i64 4, i8* %234) #1, !dbg !7551
  %235 = bitcast i64* %len to i8*, !dbg !7551
  call void @llvm.lifetime.end(i64 8, i8* %235) #1, !dbg !7551
  %236 = bitcast i8** %ncp to i8*, !dbg !7551
  call void @llvm.lifetime.end(i64 8, i8* %236) #1, !dbg !7551
  %237 = bitcast i8** %cp to i8*, !dbg !7551
  call void @llvm.lifetime.end(i64 8, i8* %237) #1, !dbg !7551
  %238 = load %struct._object*, %struct._object** %retval, !dbg !7551
  ret %struct._object* %238, !dbg !7551
}

; Function Attrs: nounwind uwtable
define internal i32 @gcd(i32 %a, i32 %b) #0 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !1063, metadata !1195), !dbg !7552
  store i32 %b, i32* %b.addr, align 4, !tbaa !1244
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !1064, metadata !1195), !dbg !7553
  br label %while.cond, !dbg !7554

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %b.addr, align 4, !dbg !7555, !tbaa !1244
  %cmp = icmp sgt i32 %0, 0, !dbg !7558
  br i1 %cmp, label %while.body, label %while.end, !dbg !7554

while.body:                                       ; preds = %while.cond
  %1 = bitcast i32* %tmp to i8*, !dbg !7559
  call void @llvm.lifetime.start(i64 4, i8* %1) #1, !dbg !7559
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !1065, metadata !1195), !dbg !7560
  %2 = load i32, i32* %a.addr, align 4, !dbg !7561, !tbaa !1244
  %3 = load i32, i32* %b.addr, align 4, !dbg !7562, !tbaa !1244
  %rem = srem i32 %2, %3, !dbg !7563
  store i32 %rem, i32* %tmp, align 4, !dbg !7560, !tbaa !1244
  %4 = load i32, i32* %b.addr, align 4, !dbg !7564, !tbaa !1244
  store i32 %4, i32* %a.addr, align 4, !dbg !7565, !tbaa !1244
  %5 = load i32, i32* %tmp, align 4, !dbg !7566, !tbaa !1244
  store i32 %5, i32* %b.addr, align 4, !dbg !7567, !tbaa !1244
  %6 = bitcast i32* %tmp to i8*, !dbg !7568
  call void @llvm.lifetime.end(i64 4, i8* %6) #1, !dbg !7568
  br label %while.cond, !dbg !7554

while.end:                                        ; preds = %while.cond
  %7 = load i32, i32* %a.addr, align 4, !dbg !7569, !tbaa !1244
  ret i32 %7, !dbg !7570
}

declare i8* @PyMem_Malloc(i64) #3

declare %struct._object* @PyErr_NoMemory() #3

declare i64 @PyTuple_Size(%struct._object*) #3

declare %struct._object* @PyTuple_GetItem(%struct._object*, i64) #3

declare %struct._object* @PyTuple_New(i64) #3

declare i32 @PyTuple_SetItem(%struct._object*, i64, %struct._object*) #3

declare %struct._object* @PyErr_Occurred() #3

declare void @PyMem_Free(i8*) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1190, !1191, !1192}
!llvm.ident = !{!1193}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !359, globals: !1067)
!1 = !DIFile(filename: "audioop.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{}
!3 = !{!4, !5, !6, !8, !10, !12, !15, !16, !17, !7, !11, !13, !19, !21, !9, !20, !22, !24, !31, !34, !358}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!5 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64, align: 64)
!7 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64, align: 64)
!9 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!11 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64)
!13 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !14, line: 196, baseType: !5)
!14 = !DIFile(filename: "/usr/include/sys/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!15 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!16 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 64, align: 64)
!18 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64, align: 64)
!20 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64, align: 64)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 51, baseType: !16)
!23 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !25, line: 177, baseType: !26)
!25 = !DIFile(filename: "./Include/pyport.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !27, line: 102, baseType: !28)
!27 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !29, line: 181, baseType: !30)
!29 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!30 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !32, line: 62, baseType: !33)
!32 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!33 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64, align: 64)
!35 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !36, line: 109, baseType: !37)
!36 = !DIFile(filename: "./Include/object.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!37 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !36, line: 105, size: 128, align: 64, elements: !38)
!38 = !{!39, !40}
!39 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !37, file: !36, line: 107, baseType: !24, size: 64, align: 64)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !37, file: !36, line: 108, baseType: !41, size: 64, align: 64, offset: 64)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64, align: 64)
!42 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !36, line: 334, size: 3200, align: 64, elements: !43)
!43 = !{!44, !50, !54, !55, !56, !61, !118, !123, !128, !129, !134, !186, !217, !229, !235, !236, !237, !239, !241, !272, !273, !274, !283, !284, !289, !290, !292, !294, !304, !307, !325, !326, !327, !329, !331, !332, !334, !339, !344, !349, !350, !351, !352, !353, !354, !355, !356, !357}
!44 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !42, file: !36, line: 335, baseType: !45, size: 192, align: 64)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !36, line: 114, baseType: !46)
!46 = !DICompositeType(tag: DW_TAG_structure_type, file: !36, line: 111, size: 192, align: 64, elements: !47)
!47 = !{!48, !49}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !46, file: !36, line: 112, baseType: !35, size: 128, align: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !46, file: !36, line: 113, baseType: !24, size: 64, align: 64, offset: 128)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !42, file: !36, line: 336, baseType: !51, size: 64, align: 64, offset: 192)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64, align: 64)
!52 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !53)
!53 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !42, file: !36, line: 337, baseType: !24, size: 64, align: 64, offset: 256)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !42, file: !36, line: 337, baseType: !24, size: 64, align: 64, offset: 320)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !42, file: !36, line: 341, baseType: !57, size: 64, align: 64, offset: 384)
!57 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !36, line: 308, baseType: !58)
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64, align: 64)
!59 = !DISubroutineType(types: !60)
!60 = !{null, !34}
!61 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !42, file: !36, line: 342, baseType: !62, size: 64, align: 64, offset: 448)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !36, line: 314, baseType: !63)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !64, size: 64, align: 64)
!64 = !DISubroutineType(types: !65)
!65 = !{!5, !34, !66, !5}
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64, align: 64)
!67 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !27, line: 48, baseType: !68)
!68 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !69, line: 246, size: 1728, align: 64, elements: !70)
!69 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!70 = !{!71, !72, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !92, !93, !94, !95, !97, !98, !99, !103, !106, !108, !109, !110, !111, !112, !113, !114}
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !68, file: !69, line: 247, baseType: !5, size: 32, align: 32)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !68, file: !69, line: 252, baseType: !73, size: 64, align: 64, offset: 64)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64, align: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !68, file: !69, line: 253, baseType: !73, size: 64, align: 64, offset: 128)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !68, file: !69, line: 254, baseType: !73, size: 64, align: 64, offset: 192)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !68, file: !69, line: 255, baseType: !73, size: 64, align: 64, offset: 256)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !68, file: !69, line: 256, baseType: !73, size: 64, align: 64, offset: 320)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !68, file: !69, line: 257, baseType: !73, size: 64, align: 64, offset: 384)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !68, file: !69, line: 258, baseType: !73, size: 64, align: 64, offset: 448)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !68, file: !69, line: 259, baseType: !73, size: 64, align: 64, offset: 512)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !68, file: !69, line: 261, baseType: !73, size: 64, align: 64, offset: 576)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !68, file: !69, line: 262, baseType: !73, size: 64, align: 64, offset: 640)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !68, file: !69, line: 263, baseType: !73, size: 64, align: 64, offset: 704)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !68, file: !69, line: 265, baseType: !85, size: 64, align: 64, offset: 768)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64, align: 64)
!86 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !69, line: 161, size: 192, align: 64, elements: !87)
!87 = !{!88, !89, !91}
!88 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !86, file: !69, line: 162, baseType: !85, size: 64, align: 64)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !86, file: !69, line: 163, baseType: !90, size: 64, align: 64, offset: 64)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64, align: 64)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !86, file: !69, line: 167, baseType: !5, size: 32, align: 32, offset: 128)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !68, file: !69, line: 267, baseType: !90, size: 64, align: 64, offset: 832)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !68, file: !69, line: 269, baseType: !5, size: 32, align: 32, offset: 896)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !68, file: !69, line: 273, baseType: !5, size: 32, align: 32, offset: 928)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !68, file: !69, line: 275, baseType: !96, size: 64, align: 64, offset: 960)
!96 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !29, line: 140, baseType: !30)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !68, file: !69, line: 279, baseType: !20, size: 16, align: 16, offset: 1024)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !68, file: !69, line: 280, baseType: !7, size: 8, align: 8, offset: 1040)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !68, file: !69, line: 281, baseType: !100, size: 8, align: 8, offset: 1048)
!100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 8, align: 8, elements: !101)
!101 = !{!102}
!102 = !DISubrange(count: 1)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !68, file: !69, line: 285, baseType: !104, size: 64, align: 64, offset: 1088)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64, align: 64)
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !69, line: 155, baseType: null)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !68, file: !69, line: 294, baseType: !107, size: 64, align: 64, offset: 1152)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !29, line: 141, baseType: !30)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !68, file: !69, line: 303, baseType: !4, size: 64, align: 64, offset: 1216)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !68, file: !69, line: 304, baseType: !4, size: 64, align: 64, offset: 1280)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !68, file: !69, line: 305, baseType: !4, size: 64, align: 64, offset: 1344)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !68, file: !69, line: 306, baseType: !4, size: 64, align: 64, offset: 1408)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !68, file: !69, line: 307, baseType: !31, size: 64, align: 64, offset: 1472)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !68, file: !69, line: 309, baseType: !5, size: 32, align: 32, offset: 1536)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !68, file: !69, line: 311, baseType: !115, size: 160, align: 8, offset: 1568)
!115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 160, align: 8, elements: !116)
!116 = !{!117}
!117 = !DISubrange(count: 20)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !42, file: !36, line: 343, baseType: !119, size: 64, align: 64, offset: 512)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !36, line: 316, baseType: !120)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64, align: 64)
!121 = !DISubroutineType(types: !122)
!122 = !{!34, !34, !73}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !42, file: !36, line: 344, baseType: !124, size: 64, align: 64, offset: 576)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !36, line: 318, baseType: !125)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64, align: 64)
!126 = !DISubroutineType(types: !127)
!127 = !{!5, !34, !73, !34}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !42, file: !36, line: 345, baseType: !4, size: 64, align: 64, offset: 640)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !42, file: !36, line: 346, baseType: !130, size: 64, align: 64, offset: 704)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !36, line: 320, baseType: !131)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64, align: 64)
!132 = !DISubroutineType(types: !133)
!133 = !{!34, !34}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !42, file: !36, line: 350, baseType: !135, size: 64, align: 64, offset: 768)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64, align: 64)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !36, line: 278, baseType: !137)
!137 = !DICompositeType(tag: DW_TAG_structure_type, file: !36, line: 236, size: 2176, align: 64, elements: !138)
!138 = !{!139, !144, !145, !146, !147, !148, !153, !155, !156, !157, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !137, file: !36, line: 241, baseType: !140, size: 64, align: 64)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !36, line: 166, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64, align: 64)
!142 = !DISubroutineType(types: !143)
!143 = !{!34, !34, !34}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !137, file: !36, line: 242, baseType: !140, size: 64, align: 64, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !137, file: !36, line: 243, baseType: !140, size: 64, align: 64, offset: 128)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !137, file: !36, line: 244, baseType: !140, size: 64, align: 64, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !137, file: !36, line: 245, baseType: !140, size: 64, align: 64, offset: 256)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !137, file: !36, line: 246, baseType: !149, size: 64, align: 64, offset: 320)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !36, line: 167, baseType: !150)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64, align: 64)
!151 = !DISubroutineType(types: !152)
!152 = !{!34, !34, !34, !34}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !137, file: !36, line: 247, baseType: !154, size: 64, align: 64, offset: 384)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !36, line: 165, baseType: !131)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !137, file: !36, line: 248, baseType: !154, size: 64, align: 64, offset: 448)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !137, file: !36, line: 249, baseType: !154, size: 64, align: 64, offset: 512)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !137, file: !36, line: 250, baseType: !158, size: 64, align: 64, offset: 576)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !36, line: 168, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64, align: 64)
!160 = !DISubroutineType(types: !161)
!161 = !{!5, !34}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !137, file: !36, line: 251, baseType: !154, size: 64, align: 64, offset: 640)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !137, file: !36, line: 252, baseType: !140, size: 64, align: 64, offset: 704)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !137, file: !36, line: 253, baseType: !140, size: 64, align: 64, offset: 768)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !137, file: !36, line: 254, baseType: !140, size: 64, align: 64, offset: 832)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !137, file: !36, line: 255, baseType: !140, size: 64, align: 64, offset: 896)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !137, file: !36, line: 256, baseType: !140, size: 64, align: 64, offset: 960)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !137, file: !36, line: 257, baseType: !154, size: 64, align: 64, offset: 1024)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !137, file: !36, line: 258, baseType: !4, size: 64, align: 64, offset: 1088)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !137, file: !36, line: 259, baseType: !154, size: 64, align: 64, offset: 1152)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !137, file: !36, line: 261, baseType: !140, size: 64, align: 64, offset: 1216)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !137, file: !36, line: 262, baseType: !140, size: 64, align: 64, offset: 1280)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !137, file: !36, line: 263, baseType: !140, size: 64, align: 64, offset: 1344)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !137, file: !36, line: 264, baseType: !140, size: 64, align: 64, offset: 1408)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !137, file: !36, line: 265, baseType: !149, size: 64, align: 64, offset: 1472)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !137, file: !36, line: 266, baseType: !140, size: 64, align: 64, offset: 1536)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !137, file: !36, line: 267, baseType: !140, size: 64, align: 64, offset: 1600)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !137, file: !36, line: 268, baseType: !140, size: 64, align: 64, offset: 1664)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !137, file: !36, line: 269, baseType: !140, size: 64, align: 64, offset: 1728)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !137, file: !36, line: 270, baseType: !140, size: 64, align: 64, offset: 1792)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !137, file: !36, line: 272, baseType: !140, size: 64, align: 64, offset: 1856)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !137, file: !36, line: 273, baseType: !140, size: 64, align: 64, offset: 1920)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !137, file: !36, line: 274, baseType: !140, size: 64, align: 64, offset: 1984)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !137, file: !36, line: 275, baseType: !140, size: 64, align: 64, offset: 2048)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !137, file: !36, line: 277, baseType: !154, size: 64, align: 64, offset: 2112)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !42, file: !36, line: 351, baseType: !187, size: 64, align: 64, offset: 832)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64, align: 64)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !36, line: 292, baseType: !189)
!189 = !DICompositeType(tag: DW_TAG_structure_type, file: !36, line: 280, size: 640, align: 64, elements: !190)
!190 = !{!191, !196, !197, !202, !203, !204, !209, !210, !215, !216}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !189, file: !36, line: 281, baseType: !192, size: 64, align: 64)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !36, line: 169, baseType: !193)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64, align: 64)
!194 = !DISubroutineType(types: !195)
!195 = !{!24, !34}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !189, file: !36, line: 282, baseType: !140, size: 64, align: 64, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !189, file: !36, line: 283, baseType: !198, size: 64, align: 64, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !36, line: 170, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64, align: 64)
!200 = !DISubroutineType(types: !201)
!201 = !{!34, !34, !24}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !189, file: !36, line: 284, baseType: !198, size: 64, align: 64, offset: 192)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !189, file: !36, line: 285, baseType: !4, size: 64, align: 64, offset: 256)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !189, file: !36, line: 286, baseType: !205, size: 64, align: 64, offset: 320)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !36, line: 172, baseType: !206)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64, align: 64)
!207 = !DISubroutineType(types: !208)
!208 = !{!5, !34, !24, !34}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !189, file: !36, line: 287, baseType: !4, size: 64, align: 64, offset: 384)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !189, file: !36, line: 288, baseType: !211, size: 64, align: 64, offset: 448)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !36, line: 231, baseType: !212)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64, align: 64)
!213 = !DISubroutineType(types: !214)
!214 = !{!5, !34, !34}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !189, file: !36, line: 290, baseType: !140, size: 64, align: 64, offset: 512)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !189, file: !36, line: 291, baseType: !198, size: 64, align: 64, offset: 576)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !42, file: !36, line: 352, baseType: !218, size: 64, align: 64, offset: 896)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64, align: 64)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !36, line: 298, baseType: !220)
!220 = !DICompositeType(tag: DW_TAG_structure_type, file: !36, line: 294, size: 192, align: 64, elements: !221)
!221 = !{!222, !223, !224}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !220, file: !36, line: 295, baseType: !192, size: 64, align: 64)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !220, file: !36, line: 296, baseType: !140, size: 64, align: 64, offset: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !220, file: !36, line: 297, baseType: !225, size: 64, align: 64, offset: 128)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !36, line: 174, baseType: !226)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64, align: 64)
!227 = !DISubroutineType(types: !228)
!228 = !{!5, !34, !34, !34}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !42, file: !36, line: 356, baseType: !230, size: 64, align: 64, offset: 960)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !36, line: 321, baseType: !231)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64, align: 64)
!232 = !DISubroutineType(types: !233)
!233 = !{!234, !34}
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !25, line: 186, baseType: !24)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !42, file: !36, line: 357, baseType: !149, size: 64, align: 64, offset: 1024)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !42, file: !36, line: 358, baseType: !130, size: 64, align: 64, offset: 1088)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !42, file: !36, line: 359, baseType: !238, size: 64, align: 64, offset: 1152)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !36, line: 317, baseType: !141)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !42, file: !36, line: 360, baseType: !240, size: 64, align: 64, offset: 1216)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !36, line: 319, baseType: !226)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !42, file: !36, line: 363, baseType: !242, size: 64, align: 64, offset: 1280)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64, align: 64)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !36, line: 304, baseType: !244)
!244 = !DICompositeType(tag: DW_TAG_structure_type, file: !36, line: 301, size: 128, align: 64, elements: !245)
!245 = !{!246, !267}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !244, file: !36, line: 302, baseType: !247, size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !36, line: 193, baseType: !248)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64, align: 64)
!249 = !DISubroutineType(types: !250)
!250 = !{!5, !34, !251, !5}
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64, align: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !36, line: 191, baseType: !253)
!253 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !36, line: 178, size: 640, align: 64, elements: !254)
!254 = !{!255, !256, !257, !258, !259, !260, !261, !262, !264, !265, !266}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !253, file: !36, line: 179, baseType: !4, size: 64, align: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !253, file: !36, line: 180, baseType: !34, size: 64, align: 64, offset: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !253, file: !36, line: 181, baseType: !24, size: 64, align: 64, offset: 128)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !253, file: !36, line: 182, baseType: !24, size: 64, align: 64, offset: 192)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !253, file: !36, line: 184, baseType: !5, size: 32, align: 32, offset: 256)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !253, file: !36, line: 185, baseType: !5, size: 32, align: 32, offset: 288)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !253, file: !36, line: 186, baseType: !73, size: 64, align: 64, offset: 320)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !253, file: !36, line: 187, baseType: !263, size: 64, align: 64, offset: 384)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64, align: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !253, file: !36, line: 188, baseType: !263, size: 64, align: 64, offset: 448)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !253, file: !36, line: 189, baseType: !263, size: 64, align: 64, offset: 512)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !253, file: !36, line: 190, baseType: !4, size: 64, align: 64, offset: 576)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !244, file: !36, line: 303, baseType: !268, size: 64, align: 64, offset: 64)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !36, line: 194, baseType: !269)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64, align: 64)
!270 = !DISubroutineType(types: !271)
!271 = !{null, !34, !251}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !42, file: !36, line: 366, baseType: !33, size: 64, align: 64, offset: 1344)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !42, file: !36, line: 368, baseType: !51, size: 64, align: 64, offset: 1408)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !42, file: !36, line: 372, baseType: !275, size: 64, align: 64, offset: 1472)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !36, line: 233, baseType: !276)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64, align: 64)
!277 = !DISubroutineType(types: !278)
!278 = !{!5, !34, !279, !4}
!279 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !36, line: 232, baseType: !280)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64, align: 64)
!281 = !DISubroutineType(types: !282)
!282 = !{!5, !34, !4}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !42, file: !36, line: 375, baseType: !158, size: 64, align: 64, offset: 1536)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !42, file: !36, line: 379, baseType: !285, size: 64, align: 64, offset: 1600)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !36, line: 322, baseType: !286)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64, align: 64)
!287 = !DISubroutineType(types: !288)
!288 = !{!34, !34, !34, !5}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !42, file: !36, line: 382, baseType: !24, size: 64, align: 64, offset: 1664)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !42, file: !36, line: 385, baseType: !291, size: 64, align: 64, offset: 1728)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !36, line: 323, baseType: !131)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !42, file: !36, line: 386, baseType: !293, size: 64, align: 64, offset: 1792)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !36, line: 324, baseType: !131)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !42, file: !36, line: 389, baseType: !295, size: 64, align: 64, offset: 1856)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64, align: 64)
!296 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !297, line: 40, size: 256, align: 64, elements: !298)
!297 = !DIFile(filename: "./Include/methodobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!298 = !{!299, !300, !302, !303}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !296, file: !297, line: 41, baseType: !51, size: 64, align: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !296, file: !297, line: 42, baseType: !301, size: 64, align: 64, offset: 64)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !297, line: 18, baseType: !141)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !296, file: !297, line: 43, baseType: !5, size: 32, align: 32, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !296, file: !297, line: 45, baseType: !51, size: 64, align: 64, offset: 192)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !42, file: !36, line: 390, baseType: !305, size: 64, align: 64, offset: 1920)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64, align: 64)
!306 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !36, line: 390, flags: DIFlagFwdDecl)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !42, file: !36, line: 391, baseType: !308, size: 64, align: 64, offset: 1984)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64, align: 64)
!309 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !310, line: 11, size: 320, align: 64, elements: !311)
!310 = !DIFile(filename: "./Include/descrobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!311 = !{!312, !313, !318, !323, !324}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !309, file: !310, line: 12, baseType: !73, size: 64, align: 64)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !309, file: !310, line: 13, baseType: !314, size: 64, align: 64, offset: 64)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !310, line: 8, baseType: !315)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64, align: 64)
!316 = !DISubroutineType(types: !317)
!317 = !{!34, !34, !4}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !309, file: !310, line: 14, baseType: !319, size: 64, align: 64, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !310, line: 9, baseType: !320)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64, align: 64)
!321 = !DISubroutineType(types: !322)
!322 = !{!5, !34, !34, !4}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !309, file: !310, line: 15, baseType: !73, size: 64, align: 64, offset: 192)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !309, file: !310, line: 16, baseType: !4, size: 64, align: 64, offset: 256)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !42, file: !36, line: 392, baseType: !41, size: 64, align: 64, offset: 2048)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !42, file: !36, line: 393, baseType: !34, size: 64, align: 64, offset: 2112)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !42, file: !36, line: 394, baseType: !328, size: 64, align: 64, offset: 2176)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !36, line: 325, baseType: !150)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !42, file: !36, line: 395, baseType: !330, size: 64, align: 64, offset: 2240)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !36, line: 326, baseType: !226)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !42, file: !36, line: 396, baseType: !24, size: 64, align: 64, offset: 2304)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !42, file: !36, line: 397, baseType: !333, size: 64, align: 64, offset: 2368)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !36, line: 327, baseType: !226)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !42, file: !36, line: 398, baseType: !335, size: 64, align: 64, offset: 2432)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !36, line: 329, baseType: !336)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64, align: 64)
!337 = !DISubroutineType(types: !338)
!338 = !{!34, !41, !24}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !42, file: !36, line: 399, baseType: !340, size: 64, align: 64, offset: 2496)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !36, line: 328, baseType: !341)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64, align: 64)
!342 = !DISubroutineType(types: !343)
!343 = !{!34, !41, !34, !34}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !42, file: !36, line: 400, baseType: !345, size: 64, align: 64, offset: 2560)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !36, line: 307, baseType: !346)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64, align: 64)
!347 = !DISubroutineType(types: !348)
!348 = !{null, !4}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !42, file: !36, line: 401, baseType: !158, size: 64, align: 64, offset: 2624)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !42, file: !36, line: 402, baseType: !34, size: 64, align: 64, offset: 2688)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !42, file: !36, line: 403, baseType: !34, size: 64, align: 64, offset: 2752)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !42, file: !36, line: 404, baseType: !34, size: 64, align: 64, offset: 2816)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !42, file: !36, line: 405, baseType: !34, size: 64, align: 64, offset: 2880)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !42, file: !36, line: 406, baseType: !34, size: 64, align: 64, offset: 2944)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !42, file: !36, line: 407, baseType: !57, size: 64, align: 64, offset: 3008)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !42, file: !36, line: 410, baseType: !16, size: 32, align: 32, offset: 3072)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !42, file: !36, line: 412, baseType: !57, size: 64, align: 64, offset: 3136)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!359 = !{!360, !367, !401, !415, !421, !426, !433, !445, !452, !460, !467, !484, !491, !509, !516, !528, !535, !556, !565, !572, !587, !594, !605, !612, !624, !632, !649, !656, !664, !686, !694, !707, !714, !727, !734, !746, !755, !764, !771, !781, !788, !800, !806, !814, !828, !836, !860, !868, !893, !902, !924, !933, !951, !959, !968, !975, !987, !994, !1006, !1019, !1059}
!360 = !DISubprogram(name: "PyInit_audioop", scope: !361, file: !361, line: 1865, type: !362, isLocal: false, isDefinition: true, scopeLine: 1866, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* ()* @PyInit_audioop, variables: !364)
!361 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/audioop.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!362 = !DISubroutineType(types: !363)
!363 = !{!34}
!364 = !{!365, !366}
!365 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !360, file: !361, line: 1867, type: !34)
!366 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d", scope: !360, file: !361, line: 1867, type: !34)
!367 = !DISubprogram(name: "audioop_max", scope: !368, file: !368, line: 52, type: !369, isLocal: true, isDefinition: true, scopeLine: 53, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_max, variables: !395)
!368 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/clinic/audioop.c.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!369 = !DISubroutineType(types: !370)
!370 = !{!34, !371, !34}
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64, align: 64)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef", file: !373, line: 57, baseType: !374)
!373 = !DIFile(filename: "./Include/moduleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!374 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef", file: !373, line: 47, size: 832, align: 64, elements: !375)
!375 = !{!376, !385, !386, !387, !388, !391, !392, !393, !394}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "m_base", scope: !374, file: !373, line: 48, baseType: !377, size: 320, align: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Base", file: !373, line: 38, baseType: !378)
!378 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Base", file: !373, line: 33, size: 320, align: 64, elements: !379)
!379 = !{!380, !381, !383, !384}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !378, file: !373, line: 34, baseType: !35, size: 128, align: 64)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "m_init", scope: !378, file: !373, line: 35, baseType: !382, size: 64, align: 64, offset: 128)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64, align: 64)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "m_index", scope: !378, file: !373, line: 36, baseType: !24, size: 64, align: 64, offset: 192)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "m_copy", scope: !378, file: !373, line: 37, baseType: !34, size: 64, align: 64, offset: 256)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "m_name", scope: !374, file: !373, line: 49, baseType: !51, size: 64, align: 64, offset: 320)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "m_doc", scope: !374, file: !373, line: 50, baseType: !51, size: 64, align: 64, offset: 384)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !374, file: !373, line: 51, baseType: !24, size: 64, align: 64, offset: 448)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "m_methods", scope: !374, file: !373, line: 52, baseType: !389, size: 64, align: 64, offset: 512)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64, align: 64)
!390 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !297, line: 47, baseType: !296)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "m_reload", scope: !374, file: !373, line: 53, baseType: !158, size: 64, align: 64, offset: 576)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "m_traverse", scope: !374, file: !373, line: 54, baseType: !275, size: 64, align: 64, offset: 640)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "m_clear", scope: !374, file: !373, line: 55, baseType: !158, size: 64, align: 64, offset: 704)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "m_free", scope: !374, file: !373, line: 56, baseType: !345, size: 64, align: 64, offset: 768)
!395 = !{!396, !397, !398, !399, !400}
!396 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !367, file: !368, line: 52, type: !371)
!397 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !367, file: !368, line: 52, type: !34)
!398 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !367, file: !368, line: 54, type: !34)
!399 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !367, file: !368, line: 55, type: !252)
!400 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !367, file: !368, line: 56, type: !5)
!401 = !DISubprogram(name: "audioop_max_impl", scope: !361, file: !361, line: 437, type: !402, isLocal: true, isDefinition: true, scopeLine: 439, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32)* @audioop_max_impl, variables: !404)
!402 = !DISubroutineType(types: !403)
!403 = !{!34, !371, !251, !5}
!404 = !{!405, !406, !407, !408, !409, !410, !411}
!405 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !401, file: !361, line: 437, type: !371)
!406 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !401, file: !361, line: 437, type: !251)
!407 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !401, file: !361, line: 437, type: !5)
!408 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !401, file: !361, line: 440, type: !24)
!409 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "absval", scope: !401, file: !361, line: 441, type: !16)
!410 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "max", scope: !401, file: !361, line: 441, type: !16)
!411 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !412, file: !361, line: 446, type: !5)
!412 = distinct !DILexicalBlock(scope: !413, file: !361, line: 445, column: 48)
!413 = distinct !DILexicalBlock(scope: !414, file: !361, line: 445, column: 5)
!414 = distinct !DILexicalBlock(scope: !401, file: !361, line: 445, column: 5)
!415 = !DISubprogram(name: "audioop_check_parameters", scope: !361, file: !361, line: 382, type: !416, isLocal: true, isDefinition: true, scopeLine: 383, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i64, i32)* @audioop_check_parameters, variables: !418)
!416 = !DISubroutineType(types: !417)
!417 = !{!5, !24, !5}
!418 = !{!419, !420}
!419 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 1, scope: !415, file: !361, line: 382, type: !24)
!420 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 2, scope: !415, file: !361, line: 382, type: !5)
!421 = !DISubprogram(name: "audioop_check_size", scope: !361, file: !361, line: 371, type: !422, isLocal: true, isDefinition: true, scopeLine: 372, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32)* @audioop_check_size, variables: !424)
!422 = !DISubroutineType(types: !423)
!423 = !{!5, !5}
!424 = !{!425}
!425 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 1, scope: !421, file: !361, line: 371, type: !5)
!426 = !DISubprogram(name: "audioop_minmax", scope: !368, file: !368, line: 85, type: !369, isLocal: true, isDefinition: true, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_minmax, variables: !427)
!427 = !{!428, !429, !430, !431, !432}
!428 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !426, file: !368, line: 85, type: !371)
!429 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !426, file: !368, line: 85, type: !34)
!430 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !426, file: !368, line: 87, type: !34)
!431 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !426, file: !368, line: 88, type: !252)
!432 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !426, file: !368, line: 89, type: !5)
!433 = !DISubprogram(name: "audioop_minmax_impl", scope: !361, file: !361, line: 465, type: !402, isLocal: true, isDefinition: true, scopeLine: 467, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32)* @audioop_minmax_impl, variables: !434)
!434 = !{!435, !436, !437, !438, !439, !440, !441}
!435 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !433, file: !361, line: 465, type: !371)
!436 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !433, file: !361, line: 465, type: !251)
!437 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !433, file: !361, line: 465, type: !5)
!438 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !433, file: !361, line: 468, type: !24)
!439 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "min", scope: !433, file: !361, line: 471, type: !5)
!440 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "max", scope: !433, file: !361, line: 471, type: !5)
!441 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !442, file: !361, line: 476, type: !5)
!442 = distinct !DILexicalBlock(scope: !443, file: !361, line: 475, column: 48)
!443 = distinct !DILexicalBlock(scope: !444, file: !361, line: 475, column: 5)
!444 = distinct !DILexicalBlock(scope: !433, file: !361, line: 475, column: 5)
!445 = !DISubprogram(name: "audioop_avg", scope: !368, file: !368, line: 118, type: !369, isLocal: true, isDefinition: true, scopeLine: 119, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_avg, variables: !446)
!446 = !{!447, !448, !449, !450, !451}
!447 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !445, file: !368, line: 118, type: !371)
!448 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !445, file: !368, line: 118, type: !34)
!449 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !445, file: !368, line: 120, type: !34)
!450 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !445, file: !368, line: 121, type: !252)
!451 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !445, file: !368, line: 122, type: !5)
!452 = !DISubprogram(name: "audioop_avg_impl", scope: !361, file: !361, line: 494, type: !402, isLocal: true, isDefinition: true, scopeLine: 496, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32)* @audioop_avg_impl, variables: !453)
!453 = !{!454, !455, !456, !457, !458, !459}
!454 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !452, file: !361, line: 494, type: !371)
!455 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !452, file: !361, line: 494, type: !251)
!456 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !452, file: !361, line: 494, type: !5)
!457 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !452, file: !361, line: 497, type: !24)
!458 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "avg", scope: !452, file: !361, line: 498, type: !5)
!459 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum", scope: !452, file: !361, line: 499, type: !15)
!460 = !DISubprogram(name: "audioop_maxpp", scope: !368, file: !368, line: 322, type: !369, isLocal: true, isDefinition: true, scopeLine: 323, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_maxpp, variables: !461)
!461 = !{!462, !463, !464, !465, !466}
!462 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !460, file: !368, line: 322, type: !371)
!463 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !460, file: !368, line: 322, type: !34)
!464 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !460, file: !368, line: 324, type: !34)
!465 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !460, file: !368, line: 325, type: !252)
!466 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !460, file: !368, line: 326, type: !5)
!467 = !DISubprogram(name: "audioop_maxpp_impl", scope: !361, file: !361, line: 816, type: !402, isLocal: true, isDefinition: true, scopeLine: 818, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32)* @audioop_maxpp_impl, variables: !468)
!468 = !{!469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480}
!469 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !467, file: !361, line: 816, type: !371)
!470 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !467, file: !361, line: 816, type: !251)
!471 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !467, file: !361, line: 816, type: !5)
!472 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !467, file: !361, line: 819, type: !24)
!473 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prevval", scope: !467, file: !361, line: 820, type: !5)
!474 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prevextremevalid", scope: !467, file: !361, line: 820, type: !5)
!475 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prevextreme", scope: !467, file: !361, line: 820, type: !5)
!476 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "max", scope: !467, file: !361, line: 821, type: !16)
!477 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "extremediff", scope: !467, file: !361, line: 821, type: !16)
!478 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "diff", scope: !467, file: !361, line: 822, type: !5)
!479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prevdiff", scope: !467, file: !361, line: 822, type: !5)
!480 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !481, file: !361, line: 831, type: !5)
!481 = distinct !DILexicalBlock(scope: !482, file: !361, line: 830, column: 52)
!482 = distinct !DILexicalBlock(scope: !483, file: !361, line: 830, column: 5)
!483 = distinct !DILexicalBlock(scope: !467, file: !361, line: 830, column: 5)
!484 = !DISubprogram(name: "audioop_avgpp", scope: !368, file: !368, line: 289, type: !369, isLocal: true, isDefinition: true, scopeLine: 290, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_avgpp, variables: !485)
!485 = !{!486, !487, !488, !489, !490}
!486 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !484, file: !368, line: 289, type: !371)
!487 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !484, file: !368, line: 289, type: !34)
!488 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !484, file: !368, line: 291, type: !34)
!489 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !484, file: !368, line: 292, type: !252)
!490 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !484, file: !368, line: 293, type: !5)
!491 = !DISubprogram(name: "audioop_avgpp_impl", scope: !361, file: !361, line: 759, type: !402, isLocal: true, isDefinition: true, scopeLine: 761, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32)* @audioop_avgpp_impl, variables: !492)
!492 = !{!493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505}
!493 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !491, file: !361, line: 759, type: !371)
!494 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !491, file: !361, line: 759, type: !251)
!495 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !491, file: !361, line: 759, type: !5)
!496 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !491, file: !361, line: 762, type: !24)
!497 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prevval", scope: !491, file: !361, line: 763, type: !5)
!498 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prevextremevalid", scope: !491, file: !361, line: 763, type: !5)
!499 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prevextreme", scope: !491, file: !361, line: 763, type: !5)
!500 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum", scope: !491, file: !361, line: 764, type: !15)
!501 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "avg", scope: !491, file: !361, line: 765, type: !16)
!502 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "diff", scope: !491, file: !361, line: 766, type: !5)
!503 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prevdiff", scope: !491, file: !361, line: 766, type: !5)
!504 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nextreme", scope: !491, file: !361, line: 766, type: !5)
!505 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !506, file: !361, line: 775, type: !5)
!506 = distinct !DILexicalBlock(scope: !507, file: !361, line: 774, column: 52)
!507 = distinct !DILexicalBlock(scope: !508, file: !361, line: 774, column: 5)
!508 = distinct !DILexicalBlock(scope: !491, file: !361, line: 774, column: 5)
!509 = !DISubprogram(name: "audioop_rms", scope: !368, file: !368, line: 151, type: !369, isLocal: true, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_rms, variables: !510)
!510 = !{!511, !512, !513, !514, !515}
!511 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !509, file: !368, line: 151, type: !371)
!512 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !509, file: !368, line: 151, type: !34)
!513 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !509, file: !368, line: 153, type: !34)
!514 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !509, file: !368, line: 154, type: !252)
!515 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !509, file: !368, line: 155, type: !5)
!516 = !DISubprogram(name: "audioop_rms_impl", scope: !361, file: !361, line: 523, type: !402, isLocal: true, isDefinition: true, scopeLine: 525, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32)* @audioop_rms_impl, variables: !517)
!517 = !{!518, !519, !520, !521, !522, !523, !524}
!518 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !516, file: !361, line: 523, type: !371)
!519 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !516, file: !361, line: 523, type: !251)
!520 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !516, file: !361, line: 523, type: !5)
!521 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !516, file: !361, line: 526, type: !24)
!522 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !516, file: !361, line: 527, type: !16)
!523 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum_squares", scope: !516, file: !361, line: 528, type: !15)
!524 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !525, file: !361, line: 533, type: !15)
!525 = distinct !DILexicalBlock(scope: !526, file: !361, line: 532, column: 48)
!526 = distinct !DILexicalBlock(scope: !527, file: !361, line: 532, column: 5)
!527 = distinct !DILexicalBlock(scope: !516, file: !361, line: 532, column: 5)
!528 = !DISubprogram(name: "audioop_findfit", scope: !368, file: !368, line: 184, type: !369, isLocal: true, isDefinition: true, scopeLine: 185, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_findfit, variables: !529)
!529 = !{!530, !531, !532, !533, !534}
!530 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !528, file: !368, line: 184, type: !371)
!531 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !528, file: !368, line: 184, type: !34)
!532 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !528, file: !368, line: 186, type: !34)
!533 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !528, file: !368, line: 187, type: !252)
!534 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "reference", scope: !528, file: !368, line: 188, type: !252)
!535 = !DISubprogram(name: "audioop_findfit_impl", scope: !361, file: !361, line: 597, type: !536, isLocal: true, isDefinition: true, scopeLine: 599, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, %struct.bufferinfo*)* @audioop_findfit_impl, variables: !538)
!536 = !DISubroutineType(types: !537)
!537 = !{!34, !371, !251, !251}
!538 = !{!539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555}
!539 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !535, file: !361, line: 597, type: !371)
!540 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !535, file: !361, line: 597, type: !251)
!541 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reference", arg: 3, scope: !535, file: !361, line: 597, type: !251)
!542 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cp1", scope: !535, file: !361, line: 600, type: !17)
!543 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cp2", scope: !535, file: !361, line: 600, type: !17)
!544 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len1", scope: !535, file: !361, line: 601, type: !24)
!545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len2", scope: !535, file: !361, line: 601, type: !24)
!546 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !535, file: !361, line: 602, type: !24)
!547 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "best_j", scope: !535, file: !361, line: 602, type: !24)
!548 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aj_m1", scope: !535, file: !361, line: 603, type: !15)
!549 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aj_lm1", scope: !535, file: !361, line: 603, type: !15)
!550 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum_ri_2", scope: !535, file: !361, line: 604, type: !15)
!551 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum_aij_2", scope: !535, file: !361, line: 604, type: !15)
!552 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum_aij_ri", scope: !535, file: !361, line: 604, type: !15)
!553 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !535, file: !361, line: 604, type: !15)
!554 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "best_result", scope: !535, file: !361, line: 604, type: !15)
!555 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "factor", scope: !535, file: !361, line: 604, type: !15)
!556 = !DISubprogram(name: "_sum2", scope: !361, file: !361, line: 543, type: !557, isLocal: true, isDefinition: true, scopeLine: 544, flags: DIFlagPrototyped, isOptimized: true, function: double (i16*, i16*, i64)* @_sum2, variables: !559)
!557 = !DISubroutineType(types: !558)
!558 = !{!15, !17, !17, !24}
!559 = !{!560, !561, !562, !563, !564}
!560 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !556, file: !361, line: 543, type: !17)
!561 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !556, file: !361, line: 543, type: !17)
!562 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 3, scope: !556, file: !361, line: 543, type: !24)
!563 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !556, file: !361, line: 545, type: !24)
!564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum", scope: !556, file: !361, line: 546, type: !15)
!565 = !DISubprogram(name: "audioop_findmax", scope: !368, file: !368, line: 256, type: !369, isLocal: true, isDefinition: true, scopeLine: 257, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_findmax, variables: !566)
!566 = !{!567, !568, !569, !570, !571}
!567 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !565, file: !368, line: 256, type: !371)
!568 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !565, file: !368, line: 256, type: !34)
!569 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !565, file: !368, line: 258, type: !34)
!570 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !565, file: !368, line: 259, type: !252)
!571 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "length", scope: !565, file: !368, line: 260, type: !24)
!572 = !DISubprogram(name: "audioop_findmax_impl", scope: !361, file: !361, line: 706, type: !573, isLocal: true, isDefinition: true, scopeLine: 708, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i64)* @audioop_findmax_impl, variables: !575)
!573 = !DISubroutineType(types: !574)
!574 = !{!34, !371, !251, !24}
!575 = !{!576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586}
!576 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !572, file: !361, line: 706, type: !371)
!577 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !572, file: !361, line: 706, type: !251)
!578 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "length", arg: 3, scope: !572, file: !361, line: 706, type: !24)
!579 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cp1", scope: !572, file: !361, line: 709, type: !17)
!580 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len1", scope: !572, file: !361, line: 710, type: !24)
!581 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !572, file: !361, line: 711, type: !24)
!582 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "best_j", scope: !572, file: !361, line: 711, type: !24)
!583 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aj_m1", scope: !572, file: !361, line: 712, type: !15)
!584 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aj_lm1", scope: !572, file: !361, line: 712, type: !15)
!585 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !572, file: !361, line: 713, type: !15)
!586 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "best_result", scope: !572, file: !361, line: 713, type: !15)
!587 = !DISubprogram(name: "audioop_findfactor", scope: !368, file: !368, line: 220, type: !369, isLocal: true, isDefinition: true, scopeLine: 221, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_findfactor, variables: !588)
!588 = !{!589, !590, !591, !592, !593}
!589 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !587, file: !368, line: 220, type: !371)
!590 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !587, file: !368, line: 220, type: !34)
!591 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !587, file: !368, line: 222, type: !34)
!592 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !587, file: !368, line: 223, type: !252)
!593 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "reference", scope: !587, file: !368, line: 224, type: !252)
!594 = !DISubprogram(name: "audioop_findfactor_impl", scope: !361, file: !361, line: 665, type: !536, isLocal: true, isDefinition: true, scopeLine: 667, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, %struct.bufferinfo*)* @audioop_findfactor_impl, variables: !595)
!595 = !{!596, !597, !598, !599, !600, !601, !602, !603, !604}
!596 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !594, file: !361, line: 665, type: !371)
!597 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !594, file: !361, line: 665, type: !251)
!598 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "reference", arg: 3, scope: !594, file: !361, line: 665, type: !251)
!599 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cp1", scope: !594, file: !361, line: 668, type: !17)
!600 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cp2", scope: !594, file: !361, line: 668, type: !17)
!601 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !594, file: !361, line: 669, type: !24)
!602 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum_ri_2", scope: !594, file: !361, line: 670, type: !15)
!603 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum_aij_ri", scope: !594, file: !361, line: 670, type: !15)
!604 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !594, file: !361, line: 670, type: !15)
!605 = !DISubprogram(name: "audioop_cross", scope: !368, file: !368, line: 355, type: !369, isLocal: true, isDefinition: true, scopeLine: 356, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_cross, variables: !606)
!606 = !{!607, !608, !609, !610, !611}
!607 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !605, file: !368, line: 355, type: !371)
!608 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !605, file: !368, line: 355, type: !34)
!609 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !605, file: !368, line: 357, type: !34)
!610 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !605, file: !368, line: 358, type: !252)
!611 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !605, file: !368, line: 359, type: !5)
!612 = !DISubprogram(name: "audioop_cross_impl", scope: !361, file: !361, line: 869, type: !402, isLocal: true, isDefinition: true, scopeLine: 871, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32)* @audioop_cross_impl, variables: !613)
!613 = !{!614, !615, !616, !617, !618, !619, !620}
!614 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !612, file: !361, line: 869, type: !371)
!615 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !612, file: !361, line: 869, type: !251)
!616 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !612, file: !361, line: 869, type: !5)
!617 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !612, file: !361, line: 872, type: !24)
!618 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prevval", scope: !612, file: !361, line: 873, type: !5)
!619 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncross", scope: !612, file: !361, line: 874, type: !24)
!620 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !621, file: !361, line: 881, type: !5)
!621 = distinct !DILexicalBlock(scope: !622, file: !361, line: 880, column: 48)
!622 = distinct !DILexicalBlock(scope: !623, file: !361, line: 880, column: 5)
!623 = distinct !DILexicalBlock(scope: !612, file: !361, line: 880, column: 5)
!624 = !DISubprogram(name: "audioop_mul", scope: !368, file: !368, line: 388, type: !369, isLocal: true, isDefinition: true, scopeLine: 389, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_mul, variables: !625)
!625 = !{!626, !627, !628, !629, !630, !631}
!626 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !624, file: !368, line: 388, type: !371)
!627 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !624, file: !368, line: 388, type: !34)
!628 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !624, file: !368, line: 390, type: !34)
!629 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !624, file: !368, line: 391, type: !252)
!630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !624, file: !368, line: 392, type: !5)
!631 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "factor", scope: !624, file: !368, line: 393, type: !15)
!632 = !DISubprogram(name: "audioop_mul_impl", scope: !361, file: !361, line: 900, type: !633, isLocal: true, isDefinition: true, scopeLine: 902, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32, double)* @audioop_mul_impl, variables: !635)
!633 = !DISubroutineType(types: !634)
!634 = !{!34, !371, !251, !5, !15}
!635 = !{!636, !637, !638, !639, !640, !641, !642, !643, !644, !645}
!636 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !632, file: !361, line: 900, type: !371)
!637 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !632, file: !361, line: 900, type: !251)
!638 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !632, file: !361, line: 900, type: !5)
!639 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "factor", arg: 4, scope: !632, file: !361, line: 900, type: !15)
!640 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncp", scope: !632, file: !361, line: 903, type: !6)
!641 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !632, file: !361, line: 904, type: !24)
!642 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxval", scope: !632, file: !361, line: 905, type: !15)
!643 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minval", scope: !632, file: !361, line: 905, type: !15)
!644 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rv", scope: !632, file: !361, line: 906, type: !34)
!645 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !646, file: !361, line: 920, type: !15)
!646 = distinct !DILexicalBlock(scope: !647, file: !361, line: 919, column: 48)
!647 = distinct !DILexicalBlock(scope: !648, file: !361, line: 919, column: 5)
!648 = distinct !DILexicalBlock(scope: !632, file: !361, line: 919, column: 5)
!649 = !DISubprogram(name: "fbound", scope: !361, file: !361, line: 23, type: !650, isLocal: true, isDefinition: true, scopeLine: 24, flags: DIFlagPrototyped, isOptimized: true, function: i32 (double, double, double)* @fbound, variables: !652)
!650 = !DISubroutineType(types: !651)
!651 = !{!5, !15, !15, !15}
!652 = !{!653, !654, !655}
!653 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 1, scope: !649, file: !361, line: 23, type: !15)
!654 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "minval", arg: 2, scope: !649, file: !361, line: 23, type: !15)
!655 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "maxval", arg: 3, scope: !649, file: !361, line: 23, type: !15)
!656 = !DISubprogram(name: "audioop_add", scope: !368, file: !368, line: 492, type: !369, isLocal: true, isDefinition: true, scopeLine: 493, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_add, variables: !657)
!657 = !{!658, !659, !660, !661, !662, !663}
!658 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !656, file: !368, line: 492, type: !371)
!659 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !656, file: !368, line: 492, type: !34)
!660 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !656, file: !368, line: 494, type: !34)
!661 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment1", scope: !656, file: !368, line: 495, type: !252)
!662 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment2", scope: !656, file: !368, line: 496, type: !252)
!663 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !656, file: !368, line: 497, type: !5)
!664 = !DISubprogram(name: "audioop_add_impl", scope: !361, file: !361, line: 1036, type: !665, isLocal: true, isDefinition: true, scopeLine: 1038, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, %struct.bufferinfo*, i32)* @audioop_add_impl, variables: !667)
!665 = !DISubroutineType(types: !666)
!666 = !{!34, !371, !251, !251, !5}
!667 = !{!668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !682, !683}
!668 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !664, file: !361, line: 1036, type: !371)
!669 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment1", arg: 2, scope: !664, file: !361, line: 1036, type: !251)
!670 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment2", arg: 3, scope: !664, file: !361, line: 1036, type: !251)
!671 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 4, scope: !664, file: !361, line: 1036, type: !5)
!672 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncp", scope: !664, file: !361, line: 1039, type: !6)
!673 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !664, file: !361, line: 1040, type: !24)
!674 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minval", scope: !664, file: !361, line: 1041, type: !5)
!675 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxval", scope: !664, file: !361, line: 1041, type: !5)
!676 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newval", scope: !664, file: !361, line: 1041, type: !5)
!677 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rv", scope: !664, file: !361, line: 1042, type: !34)
!678 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val1", scope: !679, file: !361, line: 1060, type: !5)
!679 = distinct !DILexicalBlock(scope: !680, file: !361, line: 1059, column: 49)
!680 = distinct !DILexicalBlock(scope: !681, file: !361, line: 1059, column: 5)
!681 = distinct !DILexicalBlock(scope: !664, file: !361, line: 1059, column: 5)
!682 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val2", scope: !679, file: !361, line: 1061, type: !5)
!683 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fval", scope: !684, file: !361, line: 1072, type: !15)
!684 = distinct !DILexicalBlock(scope: !685, file: !361, line: 1071, column: 14)
!685 = distinct !DILexicalBlock(scope: !679, file: !361, line: 1063, column: 13)
!686 = !DISubprogram(name: "audioop_bias", scope: !368, file: !368, line: 529, type: !369, isLocal: true, isDefinition: true, scopeLine: 530, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_bias, variables: !687)
!687 = !{!688, !689, !690, !691, !692, !693}
!688 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !686, file: !368, line: 529, type: !371)
!689 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !686, file: !368, line: 529, type: !34)
!690 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !686, file: !368, line: 531, type: !34)
!691 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !686, file: !368, line: 532, type: !252)
!692 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !686, file: !368, line: 533, type: !5)
!693 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bias", scope: !686, file: !368, line: 534, type: !5)
!694 = !DISubprogram(name: "audioop_bias_impl", scope: !361, file: !361, line: 1094, type: !695, isLocal: true, isDefinition: true, scopeLine: 1096, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32, i32)* @audioop_bias_impl, variables: !697)
!695 = !DISubroutineType(types: !696)
!696 = !{!34, !371, !251, !5, !5}
!697 = !{!698, !699, !700, !701, !702, !703, !704, !705, !706}
!698 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !694, file: !361, line: 1094, type: !371)
!699 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !694, file: !361, line: 1094, type: !251)
!700 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !694, file: !361, line: 1094, type: !5)
!701 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "bias", arg: 4, scope: !694, file: !361, line: 1094, type: !5)
!702 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncp", scope: !694, file: !361, line: 1097, type: !6)
!703 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !694, file: !361, line: 1098, type: !24)
!704 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !694, file: !361, line: 1099, type: !16)
!705 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mask", scope: !694, file: !361, line: 1099, type: !16)
!706 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rv", scope: !694, file: !361, line: 1100, type: !34)
!707 = !DISubprogram(name: "audioop_ulaw2lin", scope: !368, file: !368, line: 736, type: !369, isLocal: true, isDefinition: true, scopeLine: 737, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_ulaw2lin, variables: !708)
!708 = !{!709, !710, !711, !712, !713}
!709 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !707, file: !368, line: 736, type: !371)
!710 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !707, file: !368, line: 736, type: !34)
!711 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !707, file: !368, line: 738, type: !34)
!712 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !707, file: !368, line: 739, type: !252)
!713 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !707, file: !368, line: 740, type: !5)
!714 = !DISubprogram(name: "audioop_ulaw2lin_impl", scope: !361, file: !361, line: 1490, type: !402, isLocal: true, isDefinition: true, scopeLine: 1492, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32)* @audioop_ulaw2lin_impl, variables: !715)
!715 = !{!716, !717, !718, !719, !720, !721, !722, !723}
!716 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !714, file: !361, line: 1490, type: !371)
!717 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !714, file: !361, line: 1490, type: !251)
!718 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !714, file: !361, line: 1490, type: !5)
!719 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cp", scope: !714, file: !361, line: 1493, type: !8)
!720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncp", scope: !714, file: !361, line: 1494, type: !6)
!721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !714, file: !361, line: 1495, type: !24)
!722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rv", scope: !714, file: !361, line: 1496, type: !34)
!723 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !724, file: !361, line: 1513, type: !5)
!724 = distinct !DILexicalBlock(scope: !725, file: !361, line: 1512, column: 54)
!725 = distinct !DILexicalBlock(scope: !726, file: !361, line: 1512, column: 5)
!726 = distinct !DILexicalBlock(scope: !714, file: !361, line: 1512, column: 5)
!727 = !DISubprogram(name: "audioop_lin2ulaw", scope: !368, file: !368, line: 703, type: !369, isLocal: true, isDefinition: true, scopeLine: 704, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_lin2ulaw, variables: !728)
!728 = !{!729, !730, !731, !732, !733}
!729 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !727, file: !368, line: 703, type: !371)
!730 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !727, file: !368, line: 703, type: !34)
!731 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !727, file: !368, line: 705, type: !34)
!732 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !727, file: !368, line: 706, type: !252)
!733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !727, file: !368, line: 707, type: !5)
!734 = !DISubprogram(name: "audioop_lin2ulaw_impl", scope: !361, file: !361, line: 1457, type: !402, isLocal: true, isDefinition: true, scopeLine: 1459, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32)* @audioop_lin2ulaw_impl, variables: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742}
!736 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !734, file: !361, line: 1457, type: !371)
!737 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !734, file: !361, line: 1457, type: !251)
!738 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !734, file: !361, line: 1457, type: !5)
!739 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncp", scope: !734, file: !361, line: 1460, type: !8)
!740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !734, file: !361, line: 1461, type: !24)
!741 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rv", scope: !734, file: !361, line: 1462, type: !34)
!742 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !743, file: !361, line: 1473, type: !5)
!743 = distinct !DILexicalBlock(scope: !744, file: !361, line: 1472, column: 48)
!744 = distinct !DILexicalBlock(scope: !745, file: !361, line: 1472, column: 5)
!745 = distinct !DILexicalBlock(scope: !734, file: !361, line: 1472, column: 5)
!746 = !DISubprogram(name: "st_14linear2ulaw", scope: !361, file: !361, line: 146, type: !747, isLocal: true, isDefinition: true, scopeLine: 147, flags: DIFlagPrototyped, isOptimized: true, function: i8 (i16)* @st_14linear2ulaw, variables: !750)
!747 = !DISubroutineType(types: !748)
!748 = !{!9, !749}
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyInt16", file: !361, line: 8, baseType: !11)
!750 = !{!751, !752, !753, !754}
!751 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pcm_val", arg: 1, scope: !746, file: !361, line: 146, type: !749)
!752 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mask", scope: !746, file: !361, line: 148, type: !749)
!753 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seg", scope: !746, file: !361, line: 149, type: !749)
!754 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uval", scope: !746, file: !361, line: 150, type: !9)
!755 = !DISubprogram(name: "search", scope: !361, file: !361, line: 60, type: !756, isLocal: true, isDefinition: true, scopeLine: 61, flags: DIFlagPrototyped, isOptimized: true, function: i16 (i16, i16*, i32)* @search, variables: !759)
!756 = !DISubroutineType(types: !757)
!757 = !{!749, !749, !758, !5}
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64, align: 64)
!759 = !{!760, !761, !762, !763}
!760 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 1, scope: !755, file: !361, line: 60, type: !749)
!761 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "table", arg: 2, scope: !755, file: !361, line: 60, type: !758)
!762 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 3, scope: !755, file: !361, line: 60, type: !5)
!763 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !755, file: !361, line: 62, type: !5)
!764 = !DISubprogram(name: "audioop_alaw2lin", scope: !368, file: !368, line: 802, type: !369, isLocal: true, isDefinition: true, scopeLine: 803, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_alaw2lin, variables: !765)
!765 = !{!766, !767, !768, !769, !770}
!766 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !764, file: !368, line: 802, type: !371)
!767 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !764, file: !368, line: 802, type: !34)
!768 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !764, file: !368, line: 804, type: !34)
!769 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !764, file: !368, line: 805, type: !252)
!770 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !764, file: !368, line: 806, type: !5)
!771 = !DISubprogram(name: "audioop_alaw2lin_impl", scope: !361, file: !361, line: 1563, type: !402, isLocal: true, isDefinition: true, scopeLine: 1565, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32)* @audioop_alaw2lin_impl, variables: !772)
!772 = !{!773, !774, !775, !776, !777, !778, !779, !780}
!773 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !771, file: !361, line: 1563, type: !371)
!774 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !771, file: !361, line: 1563, type: !251)
!775 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !771, file: !361, line: 1563, type: !5)
!776 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cp", scope: !771, file: !361, line: 1566, type: !8)
!777 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncp", scope: !771, file: !361, line: 1567, type: !6)
!778 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !771, file: !361, line: 1568, type: !24)
!779 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !771, file: !361, line: 1569, type: !5)
!780 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rv", scope: !771, file: !361, line: 1570, type: !34)
!781 = !DISubprogram(name: "audioop_lin2alaw", scope: !368, file: !368, line: 769, type: !369, isLocal: true, isDefinition: true, scopeLine: 770, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_lin2alaw, variables: !782)
!782 = !{!783, !784, !785, !786, !787}
!783 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !781, file: !368, line: 769, type: !371)
!784 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !781, file: !368, line: 769, type: !34)
!785 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !781, file: !368, line: 771, type: !34)
!786 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !781, file: !368, line: 772, type: !252)
!787 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !781, file: !368, line: 773, type: !5)
!788 = !DISubprogram(name: "audioop_lin2alaw_impl", scope: !361, file: !361, line: 1530, type: !402, isLocal: true, isDefinition: true, scopeLine: 1532, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32)* @audioop_lin2alaw_impl, variables: !789)
!789 = !{!790, !791, !792, !793, !794, !795, !796}
!790 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !788, file: !361, line: 1530, type: !371)
!791 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !788, file: !361, line: 1530, type: !251)
!792 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !788, file: !361, line: 1530, type: !5)
!793 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncp", scope: !788, file: !361, line: 1533, type: !8)
!794 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !788, file: !361, line: 1534, type: !24)
!795 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rv", scope: !788, file: !361, line: 1535, type: !34)
!796 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !797, file: !361, line: 1546, type: !5)
!797 = distinct !DILexicalBlock(scope: !798, file: !361, line: 1545, column: 48)
!798 = distinct !DILexicalBlock(scope: !799, file: !361, line: 1545, column: 5)
!799 = distinct !DILexicalBlock(scope: !788, file: !361, line: 1545, column: 5)
!800 = !DISubprogram(name: "st_linear2alaw", scope: !361, file: !361, line: 240, type: !747, isLocal: true, isDefinition: true, scopeLine: 241, flags: DIFlagPrototyped, isOptimized: true, function: i8 (i16)* @st_linear2alaw, variables: !801)
!801 = !{!802, !803, !804, !805}
!802 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pcm_val", arg: 1, scope: !800, file: !361, line: 240, type: !749)
!803 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mask", scope: !800, file: !361, line: 242, type: !749)
!804 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seg", scope: !800, file: !361, line: 243, type: !11)
!805 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aval", scope: !800, file: !361, line: 244, type: !9)
!806 = !DISubprogram(name: "audioop_lin2lin", scope: !368, file: !368, line: 629, type: !369, isLocal: true, isDefinition: true, scopeLine: 630, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_lin2lin, variables: !807)
!807 = !{!808, !809, !810, !811, !812, !813}
!808 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !806, file: !368, line: 629, type: !371)
!809 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !806, file: !368, line: 629, type: !34)
!810 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !806, file: !368, line: 631, type: !34)
!811 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !806, file: !368, line: 632, type: !252)
!812 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !806, file: !368, line: 633, type: !5)
!813 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newwidth", scope: !806, file: !368, line: 634, type: !5)
!814 = !DISubprogram(name: "audioop_lin2lin_impl", scope: !361, file: !361, line: 1221, type: !695, isLocal: true, isDefinition: true, scopeLine: 1223, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32, i32)* @audioop_lin2lin_impl, variables: !815)
!815 = !{!816, !817, !818, !819, !820, !821, !822, !823, !824}
!816 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !814, file: !361, line: 1221, type: !371)
!817 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !814, file: !361, line: 1221, type: !251)
!818 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !814, file: !361, line: 1221, type: !5)
!819 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "newwidth", arg: 4, scope: !814, file: !361, line: 1221, type: !5)
!820 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncp", scope: !814, file: !361, line: 1224, type: !8)
!821 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !814, file: !361, line: 1225, type: !24)
!822 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !814, file: !361, line: 1225, type: !24)
!823 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rv", scope: !814, file: !361, line: 1226, type: !34)
!824 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !825, file: !361, line: 1244, type: !5)
!825 = distinct !DILexicalBlock(scope: !826, file: !361, line: 1243, column: 67)
!826 = distinct !DILexicalBlock(scope: !827, file: !361, line: 1243, column: 5)
!827 = distinct !DILexicalBlock(scope: !814, file: !361, line: 1243, column: 5)
!828 = !DISubprogram(name: "audioop_adpcm2lin", scope: !368, file: !368, line: 869, type: !369, isLocal: true, isDefinition: true, scopeLine: 870, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_adpcm2lin, variables: !829)
!829 = !{!830, !831, !832, !833, !834, !835}
!830 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !828, file: !368, line: 869, type: !371)
!831 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !828, file: !368, line: 869, type: !34)
!832 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !828, file: !368, line: 871, type: !34)
!833 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !828, file: !368, line: 872, type: !252)
!834 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !828, file: !368, line: 873, type: !5)
!835 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !828, file: !368, line: 874, type: !34)
!836 = !DISubprogram(name: "audioop_adpcm2lin_impl", scope: !361, file: !361, line: 1727, type: !837, isLocal: true, isDefinition: true, scopeLine: 1729, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32, %struct._object*)* @audioop_adpcm2lin_impl, variables: !839)
!837 = !DISubroutineType(types: !838)
!838 = !{!34, !371, !251, !5, !34}
!839 = !{!840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858}
!840 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !836, file: !361, line: 1727, type: !371)
!841 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !836, file: !361, line: 1727, type: !251)
!842 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !836, file: !361, line: 1727, type: !5)
!843 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 4, scope: !836, file: !361, line: 1727, type: !34)
!844 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cp", scope: !836, file: !361, line: 1730, type: !6)
!845 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncp", scope: !836, file: !361, line: 1731, type: !6)
!846 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !836, file: !361, line: 1732, type: !24)
!847 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "outlen", scope: !836, file: !361, line: 1732, type: !24)
!848 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "valpred", scope: !836, file: !361, line: 1733, type: !5)
!849 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !836, file: !361, line: 1733, type: !5)
!850 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "delta", scope: !836, file: !361, line: 1733, type: !5)
!851 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !836, file: !361, line: 1733, type: !5)
!852 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign", scope: !836, file: !361, line: 1733, type: !5)
!853 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vpdiff", scope: !836, file: !361, line: 1733, type: !5)
!854 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rv", scope: !836, file: !361, line: 1734, type: !34)
!855 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !836, file: !361, line: 1734, type: !34)
!856 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inputbuffer", scope: !836, file: !361, line: 1735, type: !5)
!857 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bufferstep", scope: !836, file: !361, line: 1735, type: !5)
!858 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !859, file: !361, line: 1815, type: !34)
!859 = distinct !DILexicalBlock(scope: !836, file: !361, line: 1815, column: 8)
!860 = !DISubprogram(name: "audioop_lin2adpcm", scope: !368, file: !368, line: 835, type: !369, isLocal: true, isDefinition: true, scopeLine: 836, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_lin2adpcm, variables: !861)
!861 = !{!862, !863, !864, !865, !866, !867}
!862 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !860, file: !368, line: 835, type: !371)
!863 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !860, file: !368, line: 835, type: !34)
!864 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !860, file: !368, line: 837, type: !34)
!865 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !860, file: !368, line: 838, type: !252)
!866 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !860, file: !368, line: 839, type: !5)
!867 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !860, file: !368, line: 840, type: !34)
!868 = !DISubprogram(name: "audioop_lin2adpcm_impl", scope: !361, file: !361, line: 1605, type: !837, isLocal: true, isDefinition: true, scopeLine: 1607, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32, %struct._object*)* @audioop_lin2adpcm_impl, variables: !869)
!869 = !{!870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !891}
!870 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !868, file: !361, line: 1605, type: !371)
!871 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !868, file: !361, line: 1605, type: !251)
!872 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !868, file: !361, line: 1605, type: !5)
!873 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 4, scope: !868, file: !361, line: 1605, type: !34)
!874 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncp", scope: !868, file: !361, line: 1608, type: !6)
!875 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !868, file: !361, line: 1609, type: !24)
!876 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !868, file: !361, line: 1610, type: !5)
!877 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "valpred", scope: !868, file: !361, line: 1610, type: !5)
!878 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "delta", scope: !868, file: !361, line: 1610, type: !5)
!879 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !868, file: !361, line: 1611, type: !5)
!880 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign", scope: !868, file: !361, line: 1611, type: !5)
!881 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vpdiff", scope: !868, file: !361, line: 1611, type: !5)
!882 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "diff", scope: !868, file: !361, line: 1611, type: !5)
!883 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rv", scope: !868, file: !361, line: 1612, type: !34)
!884 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !868, file: !361, line: 1612, type: !34)
!885 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "outputbuffer", scope: !868, file: !361, line: 1613, type: !5)
!886 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bufferstep", scope: !868, file: !361, line: 1613, type: !5)
!887 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !888, file: !361, line: 1639, type: !5)
!888 = distinct !DILexicalBlock(scope: !889, file: !361, line: 1638, column: 48)
!889 = distinct !DILexicalBlock(scope: !890, file: !361, line: 1638, column: 5)
!890 = distinct !DILexicalBlock(scope: !868, file: !361, line: 1638, column: 5)
!891 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !892, file: !361, line: 1711, type: !34)
!892 = distinct !DILexicalBlock(scope: !868, file: !361, line: 1711, column: 8)
!893 = !DISubprogram(name: "audioop_tomono", scope: !368, file: !368, line: 422, type: !369, isLocal: true, isDefinition: true, scopeLine: 423, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_tomono, variables: !894)
!894 = !{!895, !896, !897, !898, !899, !900, !901}
!895 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !893, file: !368, line: 422, type: !371)
!896 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !893, file: !368, line: 422, type: !34)
!897 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !893, file: !368, line: 424, type: !34)
!898 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !893, file: !368, line: 425, type: !252)
!899 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !893, file: !368, line: 426, type: !5)
!900 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lfactor", scope: !893, file: !368, line: 427, type: !15)
!901 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rfactor", scope: !893, file: !368, line: 428, type: !15)
!902 = !DISubprogram(name: "audioop_tomono_impl", scope: !361, file: !361, line: 941, type: !903, isLocal: true, isDefinition: true, scopeLine: 943, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32, double, double)* @audioop_tomono_impl, variables: !905)
!903 = !DISubroutineType(types: !904)
!904 = !{!34, !371, !251, !5, !15, !15}
!905 = !{!906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !922, !923}
!906 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !902, file: !361, line: 941, type: !371)
!907 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !902, file: !361, line: 941, type: !251)
!908 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !902, file: !361, line: 941, type: !5)
!909 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lfactor", arg: 4, scope: !902, file: !361, line: 941, type: !15)
!910 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rfactor", arg: 5, scope: !902, file: !361, line: 941, type: !15)
!911 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cp", scope: !902, file: !361, line: 944, type: !6)
!912 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncp", scope: !902, file: !361, line: 944, type: !6)
!913 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !902, file: !361, line: 945, type: !24)
!914 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !902, file: !361, line: 945, type: !24)
!915 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxval", scope: !902, file: !361, line: 946, type: !15)
!916 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minval", scope: !902, file: !361, line: 946, type: !15)
!917 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rv", scope: !902, file: !361, line: 947, type: !34)
!918 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val1", scope: !919, file: !361, line: 967, type: !15)
!919 = distinct !DILexicalBlock(scope: !920, file: !361, line: 966, column: 40)
!920 = distinct !DILexicalBlock(scope: !921, file: !361, line: 966, column: 5)
!921 = distinct !DILexicalBlock(scope: !902, file: !361, line: 966, column: 5)
!922 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val2", scope: !919, file: !361, line: 968, type: !15)
!923 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !919, file: !361, line: 969, type: !15)
!924 = !DISubprogram(name: "audioop_tostereo", scope: !368, file: !368, line: 457, type: !369, isLocal: true, isDefinition: true, scopeLine: 458, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_tostereo, variables: !925)
!925 = !{!926, !927, !928, !929, !930, !931, !932}
!926 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !924, file: !368, line: 457, type: !371)
!927 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !924, file: !368, line: 457, type: !34)
!928 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !924, file: !368, line: 459, type: !34)
!929 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !924, file: !368, line: 460, type: !252)
!930 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !924, file: !368, line: 461, type: !5)
!931 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "lfactor", scope: !924, file: !368, line: 462, type: !15)
!932 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rfactor", scope: !924, file: !368, line: 463, type: !15)
!933 = !DISubprogram(name: "audioop_tostereo_impl", scope: !361, file: !361, line: 989, type: !903, isLocal: true, isDefinition: true, scopeLine: 991, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32, double, double)* @audioop_tostereo_impl, variables: !934)
!934 = !{!935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !949, !950}
!935 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !933, file: !361, line: 989, type: !371)
!936 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !933, file: !361, line: 989, type: !251)
!937 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !933, file: !361, line: 989, type: !5)
!938 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lfactor", arg: 4, scope: !933, file: !361, line: 989, type: !15)
!939 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rfactor", arg: 5, scope: !933, file: !361, line: 989, type: !15)
!940 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncp", scope: !933, file: !361, line: 992, type: !6)
!941 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !933, file: !361, line: 993, type: !24)
!942 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxval", scope: !933, file: !361, line: 994, type: !15)
!943 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minval", scope: !933, file: !361, line: 994, type: !15)
!944 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rv", scope: !933, file: !361, line: 995, type: !34)
!945 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !946, file: !361, line: 1015, type: !15)
!946 = distinct !DILexicalBlock(scope: !947, file: !361, line: 1014, column: 48)
!947 = distinct !DILexicalBlock(scope: !948, file: !361, line: 1014, column: 5)
!948 = distinct !DILexicalBlock(scope: !933, file: !361, line: 1014, column: 5)
!949 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val1", scope: !946, file: !361, line: 1016, type: !5)
!950 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val2", scope: !946, file: !361, line: 1017, type: !5)
!951 = !DISubprogram(name: "audioop_getsample", scope: !368, file: !368, line: 18, type: !369, isLocal: true, isDefinition: true, scopeLine: 19, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_getsample, variables: !952)
!952 = !{!953, !954, !955, !956, !957, !958}
!953 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !951, file: !368, line: 18, type: !371)
!954 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !951, file: !368, line: 18, type: !34)
!955 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !951, file: !368, line: 20, type: !34)
!956 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !951, file: !368, line: 21, type: !252)
!957 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !951, file: !368, line: 22, type: !5)
!958 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !951, file: !368, line: 23, type: !24)
!959 = !DISubprogram(name: "audioop_getsample_impl", scope: !361, file: !361, line: 411, type: !960, isLocal: true, isDefinition: true, scopeLine: 413, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32, i64)* @audioop_getsample_impl, variables: !962)
!960 = !DISubroutineType(types: !961)
!961 = !{!34, !371, !251, !5, !24}
!962 = !{!963, !964, !965, !966, !967}
!963 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !959, file: !361, line: 411, type: !371)
!964 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !959, file: !361, line: 411, type: !251)
!965 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !959, file: !361, line: 411, type: !5)
!966 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 4, scope: !959, file: !361, line: 411, type: !24)
!967 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !959, file: !361, line: 414, type: !5)
!968 = !DISubprogram(name: "audioop_reverse", scope: !368, file: !368, line: 563, type: !369, isLocal: true, isDefinition: true, scopeLine: 564, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_reverse, variables: !969)
!969 = !{!970, !971, !972, !973, !974}
!970 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !968, file: !368, line: 563, type: !371)
!971 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !968, file: !368, line: 563, type: !34)
!972 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !968, file: !368, line: 565, type: !34)
!973 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !968, file: !368, line: 566, type: !252)
!974 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !968, file: !368, line: 567, type: !5)
!975 = !DISubprogram(name: "audioop_reverse_impl", scope: !361, file: !361, line: 1153, type: !402, isLocal: true, isDefinition: true, scopeLine: 1155, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32)* @audioop_reverse_impl, variables: !976)
!976 = !{!977, !978, !979, !980, !981, !982, !983}
!977 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !975, file: !361, line: 1153, type: !371)
!978 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !975, file: !361, line: 1153, type: !251)
!979 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !975, file: !361, line: 1153, type: !5)
!980 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncp", scope: !975, file: !361, line: 1156, type: !8)
!981 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !975, file: !361, line: 1157, type: !24)
!982 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rv", scope: !975, file: !361, line: 1158, type: !34)
!983 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !984, file: !361, line: 1169, type: !5)
!984 = distinct !DILexicalBlock(scope: !985, file: !361, line: 1168, column: 48)
!985 = distinct !DILexicalBlock(scope: !986, file: !361, line: 1168, column: 5)
!986 = distinct !DILexicalBlock(scope: !975, file: !361, line: 1168, column: 5)
!987 = !DISubprogram(name: "audioop_byteswap", scope: !368, file: !368, line: 596, type: !369, isLocal: true, isDefinition: true, scopeLine: 597, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_byteswap, variables: !988)
!988 = !{!989, !990, !991, !992, !993}
!989 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !987, file: !368, line: 596, type: !371)
!990 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !987, file: !368, line: 596, type: !34)
!991 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !987, file: !368, line: 598, type: !34)
!992 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !987, file: !368, line: 599, type: !252)
!993 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !987, file: !368, line: 600, type: !5)
!994 = !DISubprogram(name: "audioop_byteswap_impl", scope: !361, file: !361, line: 1186, type: !402, isLocal: true, isDefinition: true, scopeLine: 1188, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32)* @audioop_byteswap_impl, variables: !995)
!995 = !{!996, !997, !998, !999, !1000, !1001, !1002}
!996 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !994, file: !361, line: 1186, type: !371)
!997 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !994, file: !361, line: 1186, type: !251)
!998 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !994, file: !361, line: 1186, type: !5)
!999 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncp", scope: !994, file: !361, line: 1189, type: !8)
!1000 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !994, file: !361, line: 1190, type: !24)
!1001 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rv", scope: !994, file: !361, line: 1191, type: !34)
!1002 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !1003, file: !361, line: 1202, type: !5)
!1003 = distinct !DILexicalBlock(scope: !1004, file: !361, line: 1201, column: 48)
!1004 = distinct !DILexicalBlock(scope: !1005, file: !361, line: 1201, column: 5)
!1005 = distinct !DILexicalBlock(scope: !994, file: !361, line: 1201, column: 5)
!1006 = !DISubprogram(name: "audioop_ratecv", scope: !368, file: !368, line: 664, type: !369, isLocal: true, isDefinition: true, scopeLine: 665, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct._object*)* @audioop_ratecv, variables: !1007)
!1007 = !{!1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018}
!1008 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !1006, file: !368, line: 664, type: !371)
!1009 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1006, file: !368, line: 664, type: !34)
!1010 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !1006, file: !368, line: 666, type: !34)
!1011 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fragment", scope: !1006, file: !368, line: 667, type: !252)
!1012 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "width", scope: !1006, file: !368, line: 668, type: !5)
!1013 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nchannels", scope: !1006, file: !368, line: 669, type: !5)
!1014 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inrate", scope: !1006, file: !368, line: 670, type: !5)
!1015 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "outrate", scope: !1006, file: !368, line: 671, type: !5)
!1016 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !1006, file: !368, line: 672, type: !34)
!1017 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "weightA", scope: !1006, file: !368, line: 673, type: !5)
!1018 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "weightB", scope: !1006, file: !368, line: 674, type: !5)
!1019 = !DISubprogram(name: "audioop_ratecv_impl", scope: !361, file: !361, line: 1278, type: !1020, isLocal: true, isDefinition: true, scopeLine: 1280, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyModuleDef*, %struct.bufferinfo*, i32, i32, i32, i32, %struct._object*, i32, i32)* @audioop_ratecv_impl, variables: !1022)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!34, !371, !251, !5, !5, !5, !5, !34, !5, !5}
!1022 = !{!1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1047, !1055, !1057}
!1023 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "module", arg: 1, scope: !1019, file: !361, line: 1278, type: !371)
!1024 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fragment", arg: 2, scope: !1019, file: !361, line: 1278, type: !251)
!1025 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "width", arg: 3, scope: !1019, file: !361, line: 1278, type: !5)
!1026 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nchannels", arg: 4, scope: !1019, file: !361, line: 1278, type: !5)
!1027 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "inrate", arg: 5, scope: !1019, file: !361, line: 1278, type: !5)
!1028 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "outrate", arg: 6, scope: !1019, file: !361, line: 1278, type: !5)
!1029 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 7, scope: !1019, file: !361, line: 1278, type: !34)
!1030 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "weightA", arg: 8, scope: !1019, file: !361, line: 1278, type: !5)
!1031 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "weightB", arg: 9, scope: !1019, file: !361, line: 1278, type: !5)
!1032 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cp", scope: !1019, file: !361, line: 1281, type: !73)
!1033 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ncp", scope: !1019, file: !361, line: 1281, type: !73)
!1034 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1019, file: !361, line: 1282, type: !24)
!1035 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chan", scope: !1019, file: !361, line: 1283, type: !5)
!1036 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d", scope: !1019, file: !361, line: 1283, type: !5)
!1037 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prev_i", scope: !1019, file: !361, line: 1283, type: !358)
!1038 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cur_i", scope: !1019, file: !361, line: 1283, type: !358)
!1039 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cur_o", scope: !1019, file: !361, line: 1283, type: !5)
!1040 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "samps", scope: !1019, file: !361, line: 1284, type: !34)
!1041 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !1019, file: !361, line: 1284, type: !34)
!1042 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rv", scope: !1019, file: !361, line: 1284, type: !34)
!1043 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes_per_frame", scope: !1019, file: !361, line: 1285, type: !5)
!1044 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q", scope: !1045, file: !361, line: 1374, type: !24)
!1045 = distinct !DILexicalBlock(scope: !1046, file: !361, line: 1365, column: 10)
!1046 = distinct !DILexicalBlock(scope: !1019, file: !361, line: 1363, column: 9)
!1047 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1048, file: !361, line: 1407, type: !34)
!1048 = distinct !DILexicalBlock(scope: !1049, file: !361, line: 1407, column: 20)
!1049 = distinct !DILexicalBlock(scope: !1050, file: !361, line: 1391, column: 27)
!1050 = distinct !DILexicalBlock(scope: !1051, file: !361, line: 1391, column: 17)
!1051 = distinct !DILexicalBlock(scope: !1052, file: !361, line: 1390, column: 23)
!1052 = distinct !DILexicalBlock(scope: !1053, file: !361, line: 1389, column: 14)
!1053 = distinct !DILexicalBlock(scope: !1054, file: !361, line: 1389, column: 5)
!1054 = distinct !DILexicalBlock(scope: !1019, file: !361, line: 1389, column: 5)
!1055 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1056, file: !361, line: 1412, type: !34)
!1056 = distinct !DILexicalBlock(scope: !1049, file: !361, line: 1412, column: 20)
!1057 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1058, file: !361, line: 1413, type: !34)
!1058 = distinct !DILexicalBlock(scope: !1049, file: !361, line: 1413, column: 20)
!1059 = !DISubprogram(name: "gcd", scope: !361, file: !361, line: 1251, type: !1060, isLocal: true, isDefinition: true, scopeLine: 1252, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32, i32)* @gcd, variables: !1062)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!5, !5, !5}
!1062 = !{!1063, !1064, !1065}
!1063 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !1059, file: !361, line: 1251, type: !5)
!1064 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !1059, file: !361, line: 1251, type: !5)
!1065 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !1066, file: !361, line: 1254, type: !5)
!1066 = distinct !DILexicalBlock(scope: !1059, file: !361, line: 1253, column: 19)
!1067 = !{!1068, !1069, !1070, !1074, !1078, !1082, !1086, !1090, !1091, !1095, !1099, !1103, !1107, !1108, !1113, !1114, !1118, !1122, !1125, !1129, !1133, !1137, !1141, !1145, !1146, !1147, !1148, !1149, !1153, !1157, !1161, !1165, !1169, !1173, !1177, !1181, !1185, !1186}
!1068 = !DIGlobalVariable(name: "AudioopError", scope: !0, file: !361, line: 368, type: !34, isLocal: true, isDefinition: true, variable: %struct._object** @AudioopError)
!1069 = !DIGlobalVariable(name: "audioopmodule", scope: !0, file: !361, line: 1852, type: !374, isLocal: true, isDefinition: true, variable: %struct.PyModuleDef* @audioopmodule)
!1070 = !DIGlobalVariable(name: "audioop_methods", scope: !0, file: !361, line: 1821, type: !1071, isLocal: true, isDefinition: true, variable: [27 x %struct.PyMethodDef]* @audioop_methods)
!1071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !390, size: 6912, align: 64, elements: !1072)
!1072 = !{!1073}
!1073 = !DISubrange(count: 27)
!1074 = !DIGlobalVariable(name: "audioop_max__doc__", scope: !0, file: !368, line: 39, type: !1075, isLocal: true, isDefinition: true, variable: [108 x i8]* @audioop_max__doc__)
!1075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 864, align: 8, elements: !1076)
!1076 = !{!1077}
!1077 = !DISubrange(count: 108)
!1078 = !DIGlobalVariable(name: "audioop_minmax__doc__", scope: !0, file: !368, line: 72, type: !1079, isLocal: true, isDefinition: true, variable: [116 x i8]* @audioop_minmax__doc__)
!1079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 928, align: 8, elements: !1080)
!1080 = !{!1081}
!1081 = !DISubrange(count: 116)
!1082 = !DIGlobalVariable(name: "audioop_avg__doc__", scope: !0, file: !368, line: 105, type: !1083, isLocal: true, isDefinition: true, variable: [90 x i8]* @audioop_avg__doc__)
!1083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 720, align: 8, elements: !1084)
!1084 = !{!1085}
!1085 = !DISubrange(count: 90)
!1086 = !DIGlobalVariable(name: "audioop_maxpp__doc__", scope: !0, file: !368, line: 309, type: !1087, isLocal: true, isDefinition: true, variable: [97 x i8]* @audioop_maxpp__doc__)
!1087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 776, align: 8, elements: !1088)
!1088 = !{!1089}
!1089 = !DISubrange(count: 97)
!1090 = !DIGlobalVariable(name: "audioop_avgpp__doc__", scope: !0, file: !368, line: 276, type: !1075, isLocal: true, isDefinition: true, variable: [108 x i8]* @audioop_avgpp__doc__)
!1091 = !DIGlobalVariable(name: "audioop_rms__doc__", scope: !0, file: !368, line: 138, type: !1092, isLocal: true, isDefinition: true, variable: [107 x i8]* @audioop_rms__doc__)
!1092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 856, align: 8, elements: !1093)
!1093 = !{!1094}
!1094 = !DISubrange(count: 107)
!1095 = !DIGlobalVariable(name: "audioop_findfit__doc__", scope: !0, file: !368, line: 171, type: !1096, isLocal: true, isDefinition: true, variable: [114 x i8]* @audioop_findfit__doc__)
!1096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 912, align: 8, elements: !1097)
!1097 = !{!1098}
!1098 = !DISubrange(count: 114)
!1099 = !DIGlobalVariable(name: "audioop_findmax__doc__", scope: !0, file: !368, line: 243, type: !1100, isLocal: true, isDefinition: true, variable: [122 x i8]* @audioop_findmax__doc__)
!1100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 976, align: 8, elements: !1101)
!1101 = !{!1102}
!1102 = !DISubrange(count: 122)
!1103 = !DIGlobalVariable(name: "audioop_findfactor__doc__", scope: !0, file: !368, line: 207, type: !1104, isLocal: true, isDefinition: true, variable: [127 x i8]* @audioop_findfactor__doc__)
!1104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 1016, align: 8, elements: !1105)
!1105 = !{!1106}
!1106 = !DISubrange(count: 127)
!1107 = !DIGlobalVariable(name: "audioop_cross__doc__", scope: !0, file: !368, line: 342, type: !1096, isLocal: true, isDefinition: true, variable: [114 x i8]* @audioop_cross__doc__)
!1108 = !DIGlobalVariable(name: "maxvals", scope: !0, file: !361, line: 17, type: !1109, isLocal: true, isDefinition: true, variable: [5 x i32]* @maxvals)
!1109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1110, size: 160, align: 32, elements: !1111)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!1111 = !{!1112}
!1112 = !DISubrange(count: 5)
!1113 = !DIGlobalVariable(name: "minvals", scope: !0, file: !361, line: 19, type: !1109, isLocal: true, isDefinition: true, variable: [5 x i32]* @minvals)
!1114 = !DIGlobalVariable(name: "audioop_mul__doc__", scope: !0, file: !368, line: 375, type: !1115, isLocal: true, isDefinition: true, variable: [156 x i8]* @audioop_mul__doc__)
!1115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 1248, align: 8, elements: !1116)
!1116 = !{!1117}
!1117 = !DISubrange(count: 156)
!1118 = !DIGlobalVariable(name: "audioop_add__doc__", scope: !0, file: !368, line: 479, type: !1119, isLocal: true, isDefinition: true, variable: [130 x i8]* @audioop_add__doc__)
!1119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 1040, align: 8, elements: !1120)
!1120 = !{!1121}
!1121 = !DISubrange(count: 130)
!1122 = !DIGlobalVariable(name: "masks", scope: !0, file: !361, line: 20, type: !1123, isLocal: true, isDefinition: true, variable: [5 x i32]* @masks)
!1123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1124, size: 160, align: 32, elements: !1111)
!1124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16)
!1125 = !DIGlobalVariable(name: "audioop_bias__doc__", scope: !0, file: !368, line: 516, type: !1126, isLocal: true, isDefinition: true, variable: [126 x i8]* @audioop_bias__doc__)
!1126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 1008, align: 8, elements: !1127)
!1127 = !{!1128}
!1128 = !DISubrange(count: 126)
!1129 = !DIGlobalVariable(name: "_st_ulaw2linear16", scope: !0, file: !361, line: 73, type: !1130, isLocal: true, isDefinition: true, variable: [256 x i16]* @_st_ulaw2linear16)
!1130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !749, size: 4096, align: 16, elements: !1131)
!1131 = !{!1132}
!1132 = !DISubrange(count: 256)
!1133 = !DIGlobalVariable(name: "audioop_ulaw2lin__doc__", scope: !0, file: !368, line: 723, type: !1134, isLocal: true, isDefinition: true, variable: [121 x i8]* @audioop_ulaw2lin__doc__)
!1134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 968, align: 8, elements: !1135)
!1135 = !{!1136}
!1136 = !DISubrange(count: 121)
!1137 = !DIGlobalVariable(name: "seg_uend", scope: !0, file: !361, line: 56, type: !1138, isLocal: true, isDefinition: true, variable: [8 x i16]* @seg_uend)
!1138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !749, size: 128, align: 16, elements: !1139)
!1139 = !{!1140}
!1140 = !DISubrange(count: 8)
!1141 = !DIGlobalVariable(name: "audioop_lin2ulaw__doc__", scope: !0, file: !368, line: 690, type: !1142, isLocal: true, isDefinition: true, variable: [99 x i8]* @audioop_lin2ulaw__doc__)
!1142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 792, align: 8, elements: !1143)
!1143 = !{!1144}
!1144 = !DISubrange(count: 99)
!1145 = !DIGlobalVariable(name: "_st_alaw2linear16", scope: !0, file: !361, line: 179, type: !1130, isLocal: true, isDefinition: true, variable: [256 x i16]* @_st_alaw2linear16)
!1146 = !DIGlobalVariable(name: "audioop_alaw2lin__doc__", scope: !0, file: !368, line: 789, type: !1134, isLocal: true, isDefinition: true, variable: [121 x i8]* @audioop_alaw2lin__doc__)
!1147 = !DIGlobalVariable(name: "seg_aend", scope: !0, file: !361, line: 54, type: !1138, isLocal: true, isDefinition: true, variable: [8 x i16]* @seg_aend)
!1148 = !DIGlobalVariable(name: "audioop_lin2alaw__doc__", scope: !0, file: !368, line: 756, type: !1142, isLocal: true, isDefinition: true, variable: [99 x i8]* @audioop_lin2alaw__doc__)
!1149 = !DIGlobalVariable(name: "audioop_lin2lin__doc__", scope: !0, file: !368, line: 616, type: !1150, isLocal: true, isDefinition: true, variable: [106 x i8]* @audioop_lin2lin__doc__)
!1150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 848, align: 8, elements: !1151)
!1151 = !{!1152}
!1152 = !DISubrange(count: 106)
!1153 = !DIGlobalVariable(name: "stepsizeTable", scope: !0, file: !361, line: 278, type: !1154, isLocal: true, isDefinition: true, variable: [89 x i32]* @stepsizeTable)
!1154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 2848, align: 32, elements: !1155)
!1155 = !{!1156}
!1156 = !DISubrange(count: 89)
!1157 = !DIGlobalVariable(name: "indexTable", scope: !0, file: !361, line: 273, type: !1158, isLocal: true, isDefinition: true, variable: [16 x i32]* @indexTable)
!1158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 512, align: 32, elements: !1159)
!1159 = !{!1160}
!1160 = !DISubrange(count: 16)
!1161 = !DIGlobalVariable(name: "audioop_adpcm2lin__doc__", scope: !0, file: !368, line: 856, type: !1162, isLocal: true, isDefinition: true, variable: [113 x i8]* @audioop_adpcm2lin__doc__)
!1162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 904, align: 8, elements: !1163)
!1163 = !{!1164}
!1164 = !DISubrange(count: 113)
!1165 = !DIGlobalVariable(name: "audioop_lin2adpcm__doc__", scope: !0, file: !368, line: 822, type: !1166, isLocal: true, isDefinition: true, variable: [101 x i8]* @audioop_lin2adpcm__doc__)
!1166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 808, align: 8, elements: !1167)
!1167 = !{!1168}
!1168 = !DISubrange(count: 101)
!1169 = !DIGlobalVariable(name: "audioop_tomono__doc__", scope: !0, file: !368, line: 409, type: !1170, isLocal: true, isDefinition: true, variable: [104 x i8]* @audioop_tomono__doc__)
!1170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 832, align: 8, elements: !1171)
!1171 = !{!1172}
!1172 = !DISubrange(count: 104)
!1173 = !DIGlobalVariable(name: "audioop_tostereo__doc__", scope: !0, file: !368, line: 444, type: !1174, isLocal: true, isDefinition: true, variable: [109 x i8]* @audioop_tostereo__doc__)
!1174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 872, align: 8, elements: !1175)
!1175 = !{!1176}
!1176 = !DISubrange(count: 109)
!1177 = !DIGlobalVariable(name: "audioop_getsample__doc__", scope: !0, file: !368, line: 5, type: !1178, isLocal: true, isDefinition: true, variable: [102 x i8]* @audioop_getsample__doc__)
!1178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 816, align: 8, elements: !1179)
!1179 = !{!1180}
!1180 = !DISubrange(count: 102)
!1181 = !DIGlobalVariable(name: "audioop_reverse__doc__", scope: !0, file: !368, line: 550, type: !1182, isLocal: true, isDefinition: true, variable: [110 x i8]* @audioop_reverse__doc__)
!1182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 880, align: 8, elements: !1183)
!1183 = !{!1184}
!1184 = !DISubrange(count: 110)
!1185 = !DIGlobalVariable(name: "audioop_byteswap__doc__", scope: !0, file: !368, line: 583, type: !1178, isLocal: true, isDefinition: true, variable: [102 x i8]* @audioop_byteswap__doc__)
!1186 = !DIGlobalVariable(name: "audioop_ratecv__doc__", scope: !0, file: !368, line: 650, type: !1187, isLocal: true, isDefinition: true, variable: [150 x i8]* @audioop_ratecv__doc__)
!1187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 1200, align: 8, elements: !1188)
!1188 = !{!1189}
!1189 = !DISubrange(count: 150)
!1190 = !{i32 2, !"Dwarf Version", i32 4}
!1191 = !{i32 2, !"Debug Info Version", i32 3}
!1192 = !{i32 1, !"PIC Level", i32 2}
!1193 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!1194 = !DILocation(line: 1867, column: 5, scope: !360)
!1195 = !DIExpression()
!1196 = !DILocation(line: 1867, column: 15, scope: !360)
!1197 = !DILocation(line: 1867, column: 19, scope: !360)
!1198 = !DILocation(line: 1868, column: 9, scope: !360)
!1199 = !DILocation(line: 1868, column: 7, scope: !360)
!1200 = !{!1201, !1201, i64 0}
!1201 = !{!"any pointer", !1202, i64 0}
!1202 = !{!"omnipotent char", !1203, i64 0}
!1203 = !{!"Simple C/C++ TBAA"}
!1204 = !DILocation(line: 1869, column: 9, scope: !1205)
!1205 = distinct !DILexicalBlock(scope: !360, file: !361, line: 1869, column: 9)
!1206 = !DILocation(line: 1869, column: 11, scope: !1205)
!1207 = !DILocation(line: 1869, column: 9, scope: !360)
!1208 = !DILocation(line: 1870, column: 9, scope: !1205)
!1209 = !DILocation(line: 1871, column: 26, scope: !360)
!1210 = !DILocation(line: 1871, column: 9, scope: !360)
!1211 = !DILocation(line: 1871, column: 7, scope: !360)
!1212 = !DILocation(line: 1872, column: 9, scope: !1213)
!1213 = distinct !DILexicalBlock(scope: !360, file: !361, line: 1872, column: 9)
!1214 = !DILocation(line: 1872, column: 11, scope: !1213)
!1215 = !DILocation(line: 1872, column: 9, scope: !360)
!1216 = !DILocation(line: 1873, column: 9, scope: !1213)
!1217 = !DILocation(line: 1874, column: 20, scope: !360)
!1218 = !DILocation(line: 1874, column: 18, scope: !360)
!1219 = !DILocation(line: 1875, column: 9, scope: !1220)
!1220 = distinct !DILexicalBlock(scope: !360, file: !361, line: 1875, column: 9)
!1221 = !DILocation(line: 1875, column: 22, scope: !1220)
!1222 = !DILocation(line: 1875, column: 9, scope: !360)
!1223 = !DILocation(line: 1876, column: 31, scope: !1220)
!1224 = !DILocation(line: 1876, column: 41, scope: !1220)
!1225 = !DILocation(line: 1876, column: 10, scope: !1220)
!1226 = !DILocation(line: 1877, column: 12, scope: !360)
!1227 = !DILocation(line: 1877, column: 5, scope: !360)
!1228 = !DILocation(line: 1878, column: 1, scope: !360)
!1229 = !DILocation(line: 52, column: 26, scope: !367)
!1230 = !DILocation(line: 52, column: 44, scope: !367)
!1231 = !DILocation(line: 54, column: 5, scope: !367)
!1232 = !DILocation(line: 54, column: 15, scope: !367)
!1233 = !DILocation(line: 55, column: 5, scope: !367)
!1234 = !DILocation(line: 55, column: 15, scope: !367)
!1235 = !DILocation(line: 56, column: 5, scope: !367)
!1236 = !DILocation(line: 56, column: 9, scope: !367)
!1237 = !DILocation(line: 58, column: 34, scope: !1238)
!1238 = distinct !DILexicalBlock(scope: !367, file: !368, line: 58, column: 9)
!1239 = !DILocation(line: 58, column: 10, scope: !1238)
!1240 = !DILocation(line: 58, column: 9, scope: !367)
!1241 = !DILocation(line: 61, column: 9, scope: !1238)
!1242 = !DILocation(line: 62, column: 37, scope: !367)
!1243 = !DILocation(line: 62, column: 56, scope: !367)
!1244 = !{!1245, !1245, i64 0}
!1245 = !{!"int", !1202, i64 0}
!1246 = !DILocation(line: 62, column: 20, scope: !367)
!1247 = !DILocation(line: 62, column: 18, scope: !367)
!1248 = !DILocation(line: 62, column: 5, scope: !367)
!1249 = !DILocation(line: 66, column: 18, scope: !1250)
!1250 = distinct !DILexicalBlock(scope: !367, file: !368, line: 66, column: 9)
!1251 = !{!1252, !1201, i64 8}
!1252 = !{!"bufferinfo", !1201, i64 0, !1201, i64 8, !1253, i64 16, !1253, i64 24, !1245, i64 32, !1245, i64 36, !1201, i64 40, !1201, i64 48, !1201, i64 56, !1201, i64 64, !1201, i64 72}
!1253 = !{!"long", !1202, i64 0}
!1254 = !DILocation(line: 66, column: 9, scope: !1250)
!1255 = !DILocation(line: 66, column: 9, scope: !367)
!1256 = !DILocation(line: 67, column: 8, scope: !1250)
!1257 = !DILocation(line: 69, column: 12, scope: !367)
!1258 = !DILocation(line: 70, column: 1, scope: !367)
!1259 = !DILocation(line: 69, column: 5, scope: !367)
!1260 = !DILocation(line: 85, column: 29, scope: !426)
!1261 = !DILocation(line: 85, column: 47, scope: !426)
!1262 = !DILocation(line: 87, column: 5, scope: !426)
!1263 = !DILocation(line: 87, column: 15, scope: !426)
!1264 = !DILocation(line: 88, column: 5, scope: !426)
!1265 = !DILocation(line: 88, column: 15, scope: !426)
!1266 = !DILocation(line: 89, column: 5, scope: !426)
!1267 = !DILocation(line: 89, column: 9, scope: !426)
!1268 = !DILocation(line: 91, column: 34, scope: !1269)
!1269 = distinct !DILexicalBlock(scope: !426, file: !368, line: 91, column: 9)
!1270 = !DILocation(line: 91, column: 10, scope: !1269)
!1271 = !DILocation(line: 91, column: 9, scope: !426)
!1272 = !DILocation(line: 94, column: 9, scope: !1269)
!1273 = !DILocation(line: 95, column: 40, scope: !426)
!1274 = !DILocation(line: 95, column: 59, scope: !426)
!1275 = !DILocation(line: 95, column: 20, scope: !426)
!1276 = !DILocation(line: 95, column: 18, scope: !426)
!1277 = !DILocation(line: 95, column: 5, scope: !426)
!1278 = !DILocation(line: 99, column: 18, scope: !1279)
!1279 = distinct !DILexicalBlock(scope: !426, file: !368, line: 99, column: 9)
!1280 = !DILocation(line: 99, column: 9, scope: !1279)
!1281 = !DILocation(line: 99, column: 9, scope: !426)
!1282 = !DILocation(line: 100, column: 8, scope: !1279)
!1283 = !DILocation(line: 102, column: 12, scope: !426)
!1284 = !DILocation(line: 103, column: 1, scope: !426)
!1285 = !DILocation(line: 102, column: 5, scope: !426)
!1286 = !DILocation(line: 118, column: 26, scope: !445)
!1287 = !DILocation(line: 118, column: 44, scope: !445)
!1288 = !DILocation(line: 120, column: 5, scope: !445)
!1289 = !DILocation(line: 120, column: 15, scope: !445)
!1290 = !DILocation(line: 121, column: 5, scope: !445)
!1291 = !DILocation(line: 121, column: 15, scope: !445)
!1292 = !DILocation(line: 122, column: 5, scope: !445)
!1293 = !DILocation(line: 122, column: 9, scope: !445)
!1294 = !DILocation(line: 124, column: 34, scope: !1295)
!1295 = distinct !DILexicalBlock(scope: !445, file: !368, line: 124, column: 9)
!1296 = !DILocation(line: 124, column: 10, scope: !1295)
!1297 = !DILocation(line: 124, column: 9, scope: !445)
!1298 = !DILocation(line: 127, column: 9, scope: !1295)
!1299 = !DILocation(line: 128, column: 37, scope: !445)
!1300 = !DILocation(line: 128, column: 56, scope: !445)
!1301 = !DILocation(line: 128, column: 20, scope: !445)
!1302 = !DILocation(line: 128, column: 18, scope: !445)
!1303 = !DILocation(line: 128, column: 5, scope: !445)
!1304 = !DILocation(line: 132, column: 18, scope: !1305)
!1305 = distinct !DILexicalBlock(scope: !445, file: !368, line: 132, column: 9)
!1306 = !DILocation(line: 132, column: 9, scope: !1305)
!1307 = !DILocation(line: 132, column: 9, scope: !445)
!1308 = !DILocation(line: 133, column: 8, scope: !1305)
!1309 = !DILocation(line: 135, column: 12, scope: !445)
!1310 = !DILocation(line: 136, column: 1, scope: !445)
!1311 = !DILocation(line: 135, column: 5, scope: !445)
!1312 = !DILocation(line: 322, column: 28, scope: !460)
!1313 = !DILocation(line: 322, column: 46, scope: !460)
!1314 = !DILocation(line: 324, column: 5, scope: !460)
!1315 = !DILocation(line: 324, column: 15, scope: !460)
!1316 = !DILocation(line: 325, column: 5, scope: !460)
!1317 = !DILocation(line: 325, column: 15, scope: !460)
!1318 = !DILocation(line: 326, column: 5, scope: !460)
!1319 = !DILocation(line: 326, column: 9, scope: !460)
!1320 = !DILocation(line: 328, column: 34, scope: !1321)
!1321 = distinct !DILexicalBlock(scope: !460, file: !368, line: 328, column: 9)
!1322 = !DILocation(line: 328, column: 10, scope: !1321)
!1323 = !DILocation(line: 328, column: 9, scope: !460)
!1324 = !DILocation(line: 331, column: 9, scope: !1321)
!1325 = !DILocation(line: 332, column: 39, scope: !460)
!1326 = !DILocation(line: 332, column: 58, scope: !460)
!1327 = !DILocation(line: 332, column: 20, scope: !460)
!1328 = !DILocation(line: 332, column: 18, scope: !460)
!1329 = !DILocation(line: 332, column: 5, scope: !460)
!1330 = !DILocation(line: 336, column: 18, scope: !1331)
!1331 = distinct !DILexicalBlock(scope: !460, file: !368, line: 336, column: 9)
!1332 = !DILocation(line: 336, column: 9, scope: !1331)
!1333 = !DILocation(line: 336, column: 9, scope: !460)
!1334 = !DILocation(line: 337, column: 8, scope: !1331)
!1335 = !DILocation(line: 339, column: 12, scope: !460)
!1336 = !DILocation(line: 340, column: 1, scope: !460)
!1337 = !DILocation(line: 339, column: 5, scope: !460)
!1338 = !DILocation(line: 289, column: 28, scope: !484)
!1339 = !DILocation(line: 289, column: 46, scope: !484)
!1340 = !DILocation(line: 291, column: 5, scope: !484)
!1341 = !DILocation(line: 291, column: 15, scope: !484)
!1342 = !DILocation(line: 292, column: 5, scope: !484)
!1343 = !DILocation(line: 292, column: 15, scope: !484)
!1344 = !DILocation(line: 293, column: 5, scope: !484)
!1345 = !DILocation(line: 293, column: 9, scope: !484)
!1346 = !DILocation(line: 295, column: 34, scope: !1347)
!1347 = distinct !DILexicalBlock(scope: !484, file: !368, line: 295, column: 9)
!1348 = !DILocation(line: 295, column: 10, scope: !1347)
!1349 = !DILocation(line: 295, column: 9, scope: !484)
!1350 = !DILocation(line: 298, column: 9, scope: !1347)
!1351 = !DILocation(line: 299, column: 39, scope: !484)
!1352 = !DILocation(line: 299, column: 58, scope: !484)
!1353 = !DILocation(line: 299, column: 20, scope: !484)
!1354 = !DILocation(line: 299, column: 18, scope: !484)
!1355 = !DILocation(line: 299, column: 5, scope: !484)
!1356 = !DILocation(line: 303, column: 18, scope: !1357)
!1357 = distinct !DILexicalBlock(scope: !484, file: !368, line: 303, column: 9)
!1358 = !DILocation(line: 303, column: 9, scope: !1357)
!1359 = !DILocation(line: 303, column: 9, scope: !484)
!1360 = !DILocation(line: 304, column: 8, scope: !1357)
!1361 = !DILocation(line: 306, column: 12, scope: !484)
!1362 = !DILocation(line: 307, column: 1, scope: !484)
!1363 = !DILocation(line: 306, column: 5, scope: !484)
!1364 = !DILocation(line: 151, column: 26, scope: !509)
!1365 = !DILocation(line: 151, column: 44, scope: !509)
!1366 = !DILocation(line: 153, column: 5, scope: !509)
!1367 = !DILocation(line: 153, column: 15, scope: !509)
!1368 = !DILocation(line: 154, column: 5, scope: !509)
!1369 = !DILocation(line: 154, column: 15, scope: !509)
!1370 = !DILocation(line: 155, column: 5, scope: !509)
!1371 = !DILocation(line: 155, column: 9, scope: !509)
!1372 = !DILocation(line: 157, column: 34, scope: !1373)
!1373 = distinct !DILexicalBlock(scope: !509, file: !368, line: 157, column: 9)
!1374 = !DILocation(line: 157, column: 10, scope: !1373)
!1375 = !DILocation(line: 157, column: 9, scope: !509)
!1376 = !DILocation(line: 160, column: 9, scope: !1373)
!1377 = !DILocation(line: 161, column: 37, scope: !509)
!1378 = !DILocation(line: 161, column: 56, scope: !509)
!1379 = !DILocation(line: 161, column: 20, scope: !509)
!1380 = !DILocation(line: 161, column: 18, scope: !509)
!1381 = !DILocation(line: 161, column: 5, scope: !509)
!1382 = !DILocation(line: 165, column: 18, scope: !1383)
!1383 = distinct !DILexicalBlock(scope: !509, file: !368, line: 165, column: 9)
!1384 = !DILocation(line: 165, column: 9, scope: !1383)
!1385 = !DILocation(line: 165, column: 9, scope: !509)
!1386 = !DILocation(line: 166, column: 8, scope: !1383)
!1387 = !DILocation(line: 168, column: 12, scope: !509)
!1388 = !DILocation(line: 169, column: 1, scope: !509)
!1389 = !DILocation(line: 168, column: 5, scope: !509)
!1390 = !DILocation(line: 184, column: 30, scope: !528)
!1391 = !DILocation(line: 184, column: 48, scope: !528)
!1392 = !DILocation(line: 186, column: 5, scope: !528)
!1393 = !DILocation(line: 186, column: 15, scope: !528)
!1394 = !DILocation(line: 187, column: 5, scope: !528)
!1395 = !DILocation(line: 187, column: 15, scope: !528)
!1396 = !DILocation(line: 188, column: 5, scope: !528)
!1397 = !DILocation(line: 188, column: 15, scope: !528)
!1398 = !DILocation(line: 190, column: 34, scope: !1399)
!1399 = distinct !DILexicalBlock(scope: !528, file: !368, line: 190, column: 9)
!1400 = !DILocation(line: 190, column: 10, scope: !1399)
!1401 = !DILocation(line: 190, column: 9, scope: !528)
!1402 = !DILocation(line: 193, column: 9, scope: !1399)
!1403 = !DILocation(line: 194, column: 41, scope: !528)
!1404 = !DILocation(line: 194, column: 20, scope: !528)
!1405 = !DILocation(line: 194, column: 18, scope: !528)
!1406 = !DILocation(line: 194, column: 5, scope: !528)
!1407 = !DILocation(line: 198, column: 18, scope: !1408)
!1408 = distinct !DILexicalBlock(scope: !528, file: !368, line: 198, column: 9)
!1409 = !DILocation(line: 198, column: 9, scope: !1408)
!1410 = !DILocation(line: 198, column: 9, scope: !528)
!1411 = !DILocation(line: 199, column: 8, scope: !1408)
!1412 = !DILocation(line: 201, column: 19, scope: !1413)
!1413 = distinct !DILexicalBlock(scope: !528, file: !368, line: 201, column: 9)
!1414 = !DILocation(line: 201, column: 9, scope: !1413)
!1415 = !DILocation(line: 201, column: 9, scope: !528)
!1416 = !DILocation(line: 202, column: 8, scope: !1413)
!1417 = !DILocation(line: 204, column: 12, scope: !528)
!1418 = !DILocation(line: 205, column: 1, scope: !528)
!1419 = !DILocation(line: 204, column: 5, scope: !528)
!1420 = !DILocation(line: 256, column: 30, scope: !565)
!1421 = !DILocation(line: 256, column: 48, scope: !565)
!1422 = !DILocation(line: 258, column: 5, scope: !565)
!1423 = !DILocation(line: 258, column: 15, scope: !565)
!1424 = !DILocation(line: 259, column: 5, scope: !565)
!1425 = !DILocation(line: 259, column: 15, scope: !565)
!1426 = !DILocation(line: 260, column: 5, scope: !565)
!1427 = !DILocation(line: 260, column: 16, scope: !565)
!1428 = !DILocation(line: 262, column: 34, scope: !1429)
!1429 = distinct !DILexicalBlock(scope: !565, file: !368, line: 262, column: 9)
!1430 = !DILocation(line: 262, column: 10, scope: !1429)
!1431 = !DILocation(line: 262, column: 9, scope: !565)
!1432 = !DILocation(line: 265, column: 9, scope: !1429)
!1433 = !DILocation(line: 266, column: 41, scope: !565)
!1434 = !DILocation(line: 266, column: 60, scope: !565)
!1435 = !{!1253, !1253, i64 0}
!1436 = !DILocation(line: 266, column: 20, scope: !565)
!1437 = !DILocation(line: 266, column: 18, scope: !565)
!1438 = !DILocation(line: 266, column: 5, scope: !565)
!1439 = !DILocation(line: 270, column: 18, scope: !1440)
!1440 = distinct !DILexicalBlock(scope: !565, file: !368, line: 270, column: 9)
!1441 = !DILocation(line: 270, column: 9, scope: !1440)
!1442 = !DILocation(line: 270, column: 9, scope: !565)
!1443 = !DILocation(line: 271, column: 8, scope: !1440)
!1444 = !DILocation(line: 273, column: 12, scope: !565)
!1445 = !DILocation(line: 274, column: 1, scope: !565)
!1446 = !DILocation(line: 273, column: 5, scope: !565)
!1447 = !DILocation(line: 220, column: 33, scope: !587)
!1448 = !DILocation(line: 220, column: 51, scope: !587)
!1449 = !DILocation(line: 222, column: 5, scope: !587)
!1450 = !DILocation(line: 222, column: 15, scope: !587)
!1451 = !DILocation(line: 223, column: 5, scope: !587)
!1452 = !DILocation(line: 223, column: 15, scope: !587)
!1453 = !DILocation(line: 224, column: 5, scope: !587)
!1454 = !DILocation(line: 224, column: 15, scope: !587)
!1455 = !DILocation(line: 226, column: 34, scope: !1456)
!1456 = distinct !DILexicalBlock(scope: !587, file: !368, line: 226, column: 9)
!1457 = !DILocation(line: 226, column: 10, scope: !1456)
!1458 = !DILocation(line: 226, column: 9, scope: !587)
!1459 = !DILocation(line: 229, column: 9, scope: !1456)
!1460 = !DILocation(line: 230, column: 44, scope: !587)
!1461 = !DILocation(line: 230, column: 20, scope: !587)
!1462 = !DILocation(line: 230, column: 18, scope: !587)
!1463 = !DILocation(line: 230, column: 5, scope: !587)
!1464 = !DILocation(line: 234, column: 18, scope: !1465)
!1465 = distinct !DILexicalBlock(scope: !587, file: !368, line: 234, column: 9)
!1466 = !DILocation(line: 234, column: 9, scope: !1465)
!1467 = !DILocation(line: 234, column: 9, scope: !587)
!1468 = !DILocation(line: 235, column: 8, scope: !1465)
!1469 = !DILocation(line: 237, column: 19, scope: !1470)
!1470 = distinct !DILexicalBlock(scope: !587, file: !368, line: 237, column: 9)
!1471 = !DILocation(line: 237, column: 9, scope: !1470)
!1472 = !DILocation(line: 237, column: 9, scope: !587)
!1473 = !DILocation(line: 238, column: 8, scope: !1470)
!1474 = !DILocation(line: 240, column: 12, scope: !587)
!1475 = !DILocation(line: 241, column: 1, scope: !587)
!1476 = !DILocation(line: 240, column: 5, scope: !587)
!1477 = !DILocation(line: 355, column: 28, scope: !605)
!1478 = !DILocation(line: 355, column: 46, scope: !605)
!1479 = !DILocation(line: 357, column: 5, scope: !605)
!1480 = !DILocation(line: 357, column: 15, scope: !605)
!1481 = !DILocation(line: 358, column: 5, scope: !605)
!1482 = !DILocation(line: 358, column: 15, scope: !605)
!1483 = !DILocation(line: 359, column: 5, scope: !605)
!1484 = !DILocation(line: 359, column: 9, scope: !605)
!1485 = !DILocation(line: 361, column: 34, scope: !1486)
!1486 = distinct !DILexicalBlock(scope: !605, file: !368, line: 361, column: 9)
!1487 = !DILocation(line: 361, column: 10, scope: !1486)
!1488 = !DILocation(line: 361, column: 9, scope: !605)
!1489 = !DILocation(line: 364, column: 9, scope: !1486)
!1490 = !DILocation(line: 365, column: 39, scope: !605)
!1491 = !DILocation(line: 365, column: 58, scope: !605)
!1492 = !DILocation(line: 365, column: 20, scope: !605)
!1493 = !DILocation(line: 365, column: 18, scope: !605)
!1494 = !DILocation(line: 365, column: 5, scope: !605)
!1495 = !DILocation(line: 369, column: 18, scope: !1496)
!1496 = distinct !DILexicalBlock(scope: !605, file: !368, line: 369, column: 9)
!1497 = !DILocation(line: 369, column: 9, scope: !1496)
!1498 = !DILocation(line: 369, column: 9, scope: !605)
!1499 = !DILocation(line: 370, column: 8, scope: !1496)
!1500 = !DILocation(line: 372, column: 12, scope: !605)
!1501 = !DILocation(line: 373, column: 1, scope: !605)
!1502 = !DILocation(line: 372, column: 5, scope: !605)
!1503 = !DILocation(line: 388, column: 26, scope: !624)
!1504 = !DILocation(line: 388, column: 44, scope: !624)
!1505 = !DILocation(line: 390, column: 5, scope: !624)
!1506 = !DILocation(line: 390, column: 15, scope: !624)
!1507 = !DILocation(line: 391, column: 5, scope: !624)
!1508 = !DILocation(line: 391, column: 15, scope: !624)
!1509 = !DILocation(line: 392, column: 5, scope: !624)
!1510 = !DILocation(line: 392, column: 9, scope: !624)
!1511 = !DILocation(line: 393, column: 5, scope: !624)
!1512 = !DILocation(line: 393, column: 12, scope: !624)
!1513 = !DILocation(line: 395, column: 34, scope: !1514)
!1514 = distinct !DILexicalBlock(scope: !624, file: !368, line: 395, column: 9)
!1515 = !DILocation(line: 395, column: 10, scope: !1514)
!1516 = !DILocation(line: 395, column: 9, scope: !624)
!1517 = !DILocation(line: 398, column: 9, scope: !1514)
!1518 = !DILocation(line: 399, column: 37, scope: !624)
!1519 = !DILocation(line: 399, column: 56, scope: !624)
!1520 = !DILocation(line: 399, column: 63, scope: !624)
!1521 = !{!1522, !1522, i64 0}
!1522 = !{!"double", !1202, i64 0}
!1523 = !DILocation(line: 399, column: 20, scope: !624)
!1524 = !DILocation(line: 399, column: 18, scope: !624)
!1525 = !DILocation(line: 399, column: 5, scope: !624)
!1526 = !DILocation(line: 403, column: 18, scope: !1527)
!1527 = distinct !DILexicalBlock(scope: !624, file: !368, line: 403, column: 9)
!1528 = !DILocation(line: 403, column: 9, scope: !1527)
!1529 = !DILocation(line: 403, column: 9, scope: !624)
!1530 = !DILocation(line: 404, column: 8, scope: !1527)
!1531 = !DILocation(line: 406, column: 12, scope: !624)
!1532 = !DILocation(line: 407, column: 1, scope: !624)
!1533 = !DILocation(line: 406, column: 5, scope: !624)
!1534 = !DILocation(line: 492, column: 26, scope: !656)
!1535 = !DILocation(line: 492, column: 44, scope: !656)
!1536 = !DILocation(line: 494, column: 5, scope: !656)
!1537 = !DILocation(line: 494, column: 15, scope: !656)
!1538 = !DILocation(line: 495, column: 5, scope: !656)
!1539 = !DILocation(line: 495, column: 15, scope: !656)
!1540 = !DILocation(line: 496, column: 5, scope: !656)
!1541 = !DILocation(line: 496, column: 15, scope: !656)
!1542 = !DILocation(line: 497, column: 5, scope: !656)
!1543 = !DILocation(line: 497, column: 9, scope: !656)
!1544 = !DILocation(line: 499, column: 34, scope: !1545)
!1545 = distinct !DILexicalBlock(scope: !656, file: !368, line: 499, column: 9)
!1546 = !DILocation(line: 499, column: 10, scope: !1545)
!1547 = !DILocation(line: 499, column: 9, scope: !656)
!1548 = !DILocation(line: 502, column: 9, scope: !1545)
!1549 = !DILocation(line: 503, column: 37, scope: !656)
!1550 = !DILocation(line: 503, column: 69, scope: !656)
!1551 = !DILocation(line: 503, column: 20, scope: !656)
!1552 = !DILocation(line: 503, column: 18, scope: !656)
!1553 = !DILocation(line: 503, column: 5, scope: !656)
!1554 = !DILocation(line: 507, column: 19, scope: !1555)
!1555 = distinct !DILexicalBlock(scope: !656, file: !368, line: 507, column: 9)
!1556 = !DILocation(line: 507, column: 9, scope: !1555)
!1557 = !DILocation(line: 507, column: 9, scope: !656)
!1558 = !DILocation(line: 508, column: 8, scope: !1555)
!1559 = !DILocation(line: 510, column: 19, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !656, file: !368, line: 510, column: 9)
!1561 = !DILocation(line: 510, column: 9, scope: !1560)
!1562 = !DILocation(line: 510, column: 9, scope: !656)
!1563 = !DILocation(line: 511, column: 8, scope: !1560)
!1564 = !DILocation(line: 513, column: 12, scope: !656)
!1565 = !DILocation(line: 514, column: 1, scope: !656)
!1566 = !DILocation(line: 513, column: 5, scope: !656)
!1567 = !DILocation(line: 529, column: 27, scope: !686)
!1568 = !DILocation(line: 529, column: 45, scope: !686)
!1569 = !DILocation(line: 531, column: 5, scope: !686)
!1570 = !DILocation(line: 531, column: 15, scope: !686)
!1571 = !DILocation(line: 532, column: 5, scope: !686)
!1572 = !DILocation(line: 532, column: 15, scope: !686)
!1573 = !DILocation(line: 533, column: 5, scope: !686)
!1574 = !DILocation(line: 533, column: 9, scope: !686)
!1575 = !DILocation(line: 534, column: 5, scope: !686)
!1576 = !DILocation(line: 534, column: 9, scope: !686)
!1577 = !DILocation(line: 536, column: 34, scope: !1578)
!1578 = distinct !DILexicalBlock(scope: !686, file: !368, line: 536, column: 9)
!1579 = !DILocation(line: 536, column: 10, scope: !1578)
!1580 = !DILocation(line: 536, column: 9, scope: !686)
!1581 = !DILocation(line: 539, column: 9, scope: !1578)
!1582 = !DILocation(line: 540, column: 38, scope: !686)
!1583 = !DILocation(line: 540, column: 57, scope: !686)
!1584 = !DILocation(line: 540, column: 64, scope: !686)
!1585 = !DILocation(line: 540, column: 20, scope: !686)
!1586 = !DILocation(line: 540, column: 18, scope: !686)
!1587 = !DILocation(line: 540, column: 5, scope: !686)
!1588 = !DILocation(line: 544, column: 18, scope: !1589)
!1589 = distinct !DILexicalBlock(scope: !686, file: !368, line: 544, column: 9)
!1590 = !DILocation(line: 544, column: 9, scope: !1589)
!1591 = !DILocation(line: 544, column: 9, scope: !686)
!1592 = !DILocation(line: 545, column: 8, scope: !1589)
!1593 = !DILocation(line: 547, column: 12, scope: !686)
!1594 = !DILocation(line: 548, column: 1, scope: !686)
!1595 = !DILocation(line: 547, column: 5, scope: !686)
!1596 = !DILocation(line: 736, column: 31, scope: !707)
!1597 = !DILocation(line: 736, column: 49, scope: !707)
!1598 = !DILocation(line: 738, column: 5, scope: !707)
!1599 = !DILocation(line: 738, column: 15, scope: !707)
!1600 = !DILocation(line: 739, column: 5, scope: !707)
!1601 = !DILocation(line: 739, column: 15, scope: !707)
!1602 = !DILocation(line: 740, column: 5, scope: !707)
!1603 = !DILocation(line: 740, column: 9, scope: !707)
!1604 = !DILocation(line: 742, column: 34, scope: !1605)
!1605 = distinct !DILexicalBlock(scope: !707, file: !368, line: 742, column: 9)
!1606 = !DILocation(line: 742, column: 10, scope: !1605)
!1607 = !DILocation(line: 742, column: 9, scope: !707)
!1608 = !DILocation(line: 745, column: 9, scope: !1605)
!1609 = !DILocation(line: 746, column: 42, scope: !707)
!1610 = !DILocation(line: 746, column: 61, scope: !707)
!1611 = !DILocation(line: 746, column: 20, scope: !707)
!1612 = !DILocation(line: 746, column: 18, scope: !707)
!1613 = !DILocation(line: 746, column: 5, scope: !707)
!1614 = !DILocation(line: 750, column: 18, scope: !1615)
!1615 = distinct !DILexicalBlock(scope: !707, file: !368, line: 750, column: 9)
!1616 = !DILocation(line: 750, column: 9, scope: !1615)
!1617 = !DILocation(line: 750, column: 9, scope: !707)
!1618 = !DILocation(line: 751, column: 8, scope: !1615)
!1619 = !DILocation(line: 753, column: 12, scope: !707)
!1620 = !DILocation(line: 754, column: 1, scope: !707)
!1621 = !DILocation(line: 753, column: 5, scope: !707)
!1622 = !DILocation(line: 703, column: 31, scope: !727)
!1623 = !DILocation(line: 703, column: 49, scope: !727)
!1624 = !DILocation(line: 705, column: 5, scope: !727)
!1625 = !DILocation(line: 705, column: 15, scope: !727)
!1626 = !DILocation(line: 706, column: 5, scope: !727)
!1627 = !DILocation(line: 706, column: 15, scope: !727)
!1628 = !DILocation(line: 707, column: 5, scope: !727)
!1629 = !DILocation(line: 707, column: 9, scope: !727)
!1630 = !DILocation(line: 709, column: 34, scope: !1631)
!1631 = distinct !DILexicalBlock(scope: !727, file: !368, line: 709, column: 9)
!1632 = !DILocation(line: 709, column: 10, scope: !1631)
!1633 = !DILocation(line: 709, column: 9, scope: !727)
!1634 = !DILocation(line: 712, column: 9, scope: !1631)
!1635 = !DILocation(line: 713, column: 42, scope: !727)
!1636 = !DILocation(line: 713, column: 61, scope: !727)
!1637 = !DILocation(line: 713, column: 20, scope: !727)
!1638 = !DILocation(line: 713, column: 18, scope: !727)
!1639 = !DILocation(line: 713, column: 5, scope: !727)
!1640 = !DILocation(line: 717, column: 18, scope: !1641)
!1641 = distinct !DILexicalBlock(scope: !727, file: !368, line: 717, column: 9)
!1642 = !DILocation(line: 717, column: 9, scope: !1641)
!1643 = !DILocation(line: 717, column: 9, scope: !727)
!1644 = !DILocation(line: 718, column: 8, scope: !1641)
!1645 = !DILocation(line: 720, column: 12, scope: !727)
!1646 = !DILocation(line: 721, column: 1, scope: !727)
!1647 = !DILocation(line: 720, column: 5, scope: !727)
!1648 = !DILocation(line: 802, column: 31, scope: !764)
!1649 = !DILocation(line: 802, column: 49, scope: !764)
!1650 = !DILocation(line: 804, column: 5, scope: !764)
!1651 = !DILocation(line: 804, column: 15, scope: !764)
!1652 = !DILocation(line: 805, column: 5, scope: !764)
!1653 = !DILocation(line: 805, column: 15, scope: !764)
!1654 = !DILocation(line: 806, column: 5, scope: !764)
!1655 = !DILocation(line: 806, column: 9, scope: !764)
!1656 = !DILocation(line: 808, column: 34, scope: !1657)
!1657 = distinct !DILexicalBlock(scope: !764, file: !368, line: 808, column: 9)
!1658 = !DILocation(line: 808, column: 10, scope: !1657)
!1659 = !DILocation(line: 808, column: 9, scope: !764)
!1660 = !DILocation(line: 811, column: 9, scope: !1657)
!1661 = !DILocation(line: 812, column: 42, scope: !764)
!1662 = !DILocation(line: 812, column: 61, scope: !764)
!1663 = !DILocation(line: 812, column: 20, scope: !764)
!1664 = !DILocation(line: 812, column: 18, scope: !764)
!1665 = !DILocation(line: 812, column: 5, scope: !764)
!1666 = !DILocation(line: 816, column: 18, scope: !1667)
!1667 = distinct !DILexicalBlock(scope: !764, file: !368, line: 816, column: 9)
!1668 = !DILocation(line: 816, column: 9, scope: !1667)
!1669 = !DILocation(line: 816, column: 9, scope: !764)
!1670 = !DILocation(line: 817, column: 8, scope: !1667)
!1671 = !DILocation(line: 819, column: 12, scope: !764)
!1672 = !DILocation(line: 820, column: 1, scope: !764)
!1673 = !DILocation(line: 819, column: 5, scope: !764)
!1674 = !DILocation(line: 769, column: 31, scope: !781)
!1675 = !DILocation(line: 769, column: 49, scope: !781)
!1676 = !DILocation(line: 771, column: 5, scope: !781)
!1677 = !DILocation(line: 771, column: 15, scope: !781)
!1678 = !DILocation(line: 772, column: 5, scope: !781)
!1679 = !DILocation(line: 772, column: 15, scope: !781)
!1680 = !DILocation(line: 773, column: 5, scope: !781)
!1681 = !DILocation(line: 773, column: 9, scope: !781)
!1682 = !DILocation(line: 775, column: 34, scope: !1683)
!1683 = distinct !DILexicalBlock(scope: !781, file: !368, line: 775, column: 9)
!1684 = !DILocation(line: 775, column: 10, scope: !1683)
!1685 = !DILocation(line: 775, column: 9, scope: !781)
!1686 = !DILocation(line: 778, column: 9, scope: !1683)
!1687 = !DILocation(line: 779, column: 42, scope: !781)
!1688 = !DILocation(line: 779, column: 61, scope: !781)
!1689 = !DILocation(line: 779, column: 20, scope: !781)
!1690 = !DILocation(line: 779, column: 18, scope: !781)
!1691 = !DILocation(line: 779, column: 5, scope: !781)
!1692 = !DILocation(line: 783, column: 18, scope: !1693)
!1693 = distinct !DILexicalBlock(scope: !781, file: !368, line: 783, column: 9)
!1694 = !DILocation(line: 783, column: 9, scope: !1693)
!1695 = !DILocation(line: 783, column: 9, scope: !781)
!1696 = !DILocation(line: 784, column: 8, scope: !1693)
!1697 = !DILocation(line: 786, column: 12, scope: !781)
!1698 = !DILocation(line: 787, column: 1, scope: !781)
!1699 = !DILocation(line: 786, column: 5, scope: !781)
!1700 = !DILocation(line: 629, column: 30, scope: !806)
!1701 = !DILocation(line: 629, column: 48, scope: !806)
!1702 = !DILocation(line: 631, column: 5, scope: !806)
!1703 = !DILocation(line: 631, column: 15, scope: !806)
!1704 = !DILocation(line: 632, column: 5, scope: !806)
!1705 = !DILocation(line: 632, column: 15, scope: !806)
!1706 = !DILocation(line: 633, column: 5, scope: !806)
!1707 = !DILocation(line: 633, column: 9, scope: !806)
!1708 = !DILocation(line: 634, column: 5, scope: !806)
!1709 = !DILocation(line: 634, column: 9, scope: !806)
!1710 = !DILocation(line: 636, column: 34, scope: !1711)
!1711 = distinct !DILexicalBlock(scope: !806, file: !368, line: 636, column: 9)
!1712 = !DILocation(line: 636, column: 10, scope: !1711)
!1713 = !DILocation(line: 636, column: 9, scope: !806)
!1714 = !DILocation(line: 639, column: 9, scope: !1711)
!1715 = !DILocation(line: 640, column: 41, scope: !806)
!1716 = !DILocation(line: 640, column: 60, scope: !806)
!1717 = !DILocation(line: 640, column: 67, scope: !806)
!1718 = !DILocation(line: 640, column: 20, scope: !806)
!1719 = !DILocation(line: 640, column: 18, scope: !806)
!1720 = !DILocation(line: 640, column: 5, scope: !806)
!1721 = !DILocation(line: 644, column: 18, scope: !1722)
!1722 = distinct !DILexicalBlock(scope: !806, file: !368, line: 644, column: 9)
!1723 = !DILocation(line: 644, column: 9, scope: !1722)
!1724 = !DILocation(line: 644, column: 9, scope: !806)
!1725 = !DILocation(line: 645, column: 8, scope: !1722)
!1726 = !DILocation(line: 647, column: 12, scope: !806)
!1727 = !DILocation(line: 648, column: 1, scope: !806)
!1728 = !DILocation(line: 647, column: 5, scope: !806)
!1729 = !DILocation(line: 869, column: 32, scope: !828)
!1730 = !DILocation(line: 869, column: 50, scope: !828)
!1731 = !DILocation(line: 871, column: 5, scope: !828)
!1732 = !DILocation(line: 871, column: 15, scope: !828)
!1733 = !DILocation(line: 872, column: 5, scope: !828)
!1734 = !DILocation(line: 872, column: 15, scope: !828)
!1735 = !DILocation(line: 873, column: 5, scope: !828)
!1736 = !DILocation(line: 873, column: 9, scope: !828)
!1737 = !DILocation(line: 874, column: 5, scope: !828)
!1738 = !DILocation(line: 874, column: 15, scope: !828)
!1739 = !DILocation(line: 876, column: 34, scope: !1740)
!1740 = distinct !DILexicalBlock(scope: !828, file: !368, line: 876, column: 9)
!1741 = !DILocation(line: 876, column: 10, scope: !1740)
!1742 = !DILocation(line: 876, column: 9, scope: !828)
!1743 = !DILocation(line: 879, column: 9, scope: !1740)
!1744 = !DILocation(line: 880, column: 43, scope: !828)
!1745 = !DILocation(line: 880, column: 62, scope: !828)
!1746 = !DILocation(line: 880, column: 69, scope: !828)
!1747 = !DILocation(line: 880, column: 20, scope: !828)
!1748 = !DILocation(line: 880, column: 18, scope: !828)
!1749 = !DILocation(line: 880, column: 5, scope: !828)
!1750 = !DILocation(line: 884, column: 18, scope: !1751)
!1751 = distinct !DILexicalBlock(scope: !828, file: !368, line: 884, column: 9)
!1752 = !DILocation(line: 884, column: 9, scope: !1751)
!1753 = !DILocation(line: 884, column: 9, scope: !828)
!1754 = !DILocation(line: 885, column: 8, scope: !1751)
!1755 = !DILocation(line: 887, column: 12, scope: !828)
!1756 = !DILocation(line: 888, column: 1, scope: !828)
!1757 = !DILocation(line: 887, column: 5, scope: !828)
!1758 = !DILocation(line: 835, column: 32, scope: !860)
!1759 = !DILocation(line: 835, column: 50, scope: !860)
!1760 = !DILocation(line: 837, column: 5, scope: !860)
!1761 = !DILocation(line: 837, column: 15, scope: !860)
!1762 = !DILocation(line: 838, column: 5, scope: !860)
!1763 = !DILocation(line: 838, column: 15, scope: !860)
!1764 = !DILocation(line: 839, column: 5, scope: !860)
!1765 = !DILocation(line: 839, column: 9, scope: !860)
!1766 = !DILocation(line: 840, column: 5, scope: !860)
!1767 = !DILocation(line: 840, column: 15, scope: !860)
!1768 = !DILocation(line: 842, column: 34, scope: !1769)
!1769 = distinct !DILexicalBlock(scope: !860, file: !368, line: 842, column: 9)
!1770 = !DILocation(line: 842, column: 10, scope: !1769)
!1771 = !DILocation(line: 842, column: 9, scope: !860)
!1772 = !DILocation(line: 845, column: 9, scope: !1769)
!1773 = !DILocation(line: 846, column: 43, scope: !860)
!1774 = !DILocation(line: 846, column: 62, scope: !860)
!1775 = !DILocation(line: 846, column: 69, scope: !860)
!1776 = !DILocation(line: 846, column: 20, scope: !860)
!1777 = !DILocation(line: 846, column: 18, scope: !860)
!1778 = !DILocation(line: 846, column: 5, scope: !860)
!1779 = !DILocation(line: 850, column: 18, scope: !1780)
!1780 = distinct !DILexicalBlock(scope: !860, file: !368, line: 850, column: 9)
!1781 = !DILocation(line: 850, column: 9, scope: !1780)
!1782 = !DILocation(line: 850, column: 9, scope: !860)
!1783 = !DILocation(line: 851, column: 8, scope: !1780)
!1784 = !DILocation(line: 853, column: 12, scope: !860)
!1785 = !DILocation(line: 854, column: 1, scope: !860)
!1786 = !DILocation(line: 853, column: 5, scope: !860)
!1787 = !DILocation(line: 422, column: 29, scope: !893)
!1788 = !DILocation(line: 422, column: 47, scope: !893)
!1789 = !DILocation(line: 424, column: 5, scope: !893)
!1790 = !DILocation(line: 424, column: 15, scope: !893)
!1791 = !DILocation(line: 425, column: 5, scope: !893)
!1792 = !DILocation(line: 425, column: 15, scope: !893)
!1793 = !DILocation(line: 426, column: 5, scope: !893)
!1794 = !DILocation(line: 426, column: 9, scope: !893)
!1795 = !DILocation(line: 427, column: 5, scope: !893)
!1796 = !DILocation(line: 427, column: 12, scope: !893)
!1797 = !DILocation(line: 428, column: 5, scope: !893)
!1798 = !DILocation(line: 428, column: 12, scope: !893)
!1799 = !DILocation(line: 430, column: 34, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !893, file: !368, line: 430, column: 9)
!1801 = !DILocation(line: 430, column: 10, scope: !1800)
!1802 = !DILocation(line: 430, column: 9, scope: !893)
!1803 = !DILocation(line: 433, column: 9, scope: !1800)
!1804 = !DILocation(line: 434, column: 40, scope: !893)
!1805 = !DILocation(line: 434, column: 59, scope: !893)
!1806 = !DILocation(line: 434, column: 66, scope: !893)
!1807 = !DILocation(line: 434, column: 75, scope: !893)
!1808 = !DILocation(line: 434, column: 20, scope: !893)
!1809 = !DILocation(line: 434, column: 18, scope: !893)
!1810 = !DILocation(line: 434, column: 5, scope: !893)
!1811 = !DILocation(line: 438, column: 18, scope: !1812)
!1812 = distinct !DILexicalBlock(scope: !893, file: !368, line: 438, column: 9)
!1813 = !DILocation(line: 438, column: 9, scope: !1812)
!1814 = !DILocation(line: 438, column: 9, scope: !893)
!1815 = !DILocation(line: 439, column: 8, scope: !1812)
!1816 = !DILocation(line: 441, column: 12, scope: !893)
!1817 = !DILocation(line: 442, column: 1, scope: !893)
!1818 = !DILocation(line: 441, column: 5, scope: !893)
!1819 = !DILocation(line: 457, column: 31, scope: !924)
!1820 = !DILocation(line: 457, column: 49, scope: !924)
!1821 = !DILocation(line: 459, column: 5, scope: !924)
!1822 = !DILocation(line: 459, column: 15, scope: !924)
!1823 = !DILocation(line: 460, column: 5, scope: !924)
!1824 = !DILocation(line: 460, column: 15, scope: !924)
!1825 = !DILocation(line: 461, column: 5, scope: !924)
!1826 = !DILocation(line: 461, column: 9, scope: !924)
!1827 = !DILocation(line: 462, column: 5, scope: !924)
!1828 = !DILocation(line: 462, column: 12, scope: !924)
!1829 = !DILocation(line: 463, column: 5, scope: !924)
!1830 = !DILocation(line: 463, column: 12, scope: !924)
!1831 = !DILocation(line: 465, column: 34, scope: !1832)
!1832 = distinct !DILexicalBlock(scope: !924, file: !368, line: 465, column: 9)
!1833 = !DILocation(line: 465, column: 10, scope: !1832)
!1834 = !DILocation(line: 465, column: 9, scope: !924)
!1835 = !DILocation(line: 468, column: 9, scope: !1832)
!1836 = !DILocation(line: 469, column: 42, scope: !924)
!1837 = !DILocation(line: 469, column: 61, scope: !924)
!1838 = !DILocation(line: 469, column: 68, scope: !924)
!1839 = !DILocation(line: 469, column: 77, scope: !924)
!1840 = !DILocation(line: 469, column: 20, scope: !924)
!1841 = !DILocation(line: 469, column: 18, scope: !924)
!1842 = !DILocation(line: 469, column: 5, scope: !924)
!1843 = !DILocation(line: 473, column: 18, scope: !1844)
!1844 = distinct !DILexicalBlock(scope: !924, file: !368, line: 473, column: 9)
!1845 = !DILocation(line: 473, column: 9, scope: !1844)
!1846 = !DILocation(line: 473, column: 9, scope: !924)
!1847 = !DILocation(line: 474, column: 8, scope: !1844)
!1848 = !DILocation(line: 476, column: 12, scope: !924)
!1849 = !DILocation(line: 477, column: 1, scope: !924)
!1850 = !DILocation(line: 476, column: 5, scope: !924)
!1851 = !DILocation(line: 18, column: 32, scope: !951)
!1852 = !DILocation(line: 18, column: 50, scope: !951)
!1853 = !DILocation(line: 20, column: 5, scope: !951)
!1854 = !DILocation(line: 20, column: 15, scope: !951)
!1855 = !DILocation(line: 21, column: 5, scope: !951)
!1856 = !DILocation(line: 21, column: 15, scope: !951)
!1857 = !DILocation(line: 22, column: 5, scope: !951)
!1858 = !DILocation(line: 22, column: 9, scope: !951)
!1859 = !DILocation(line: 23, column: 5, scope: !951)
!1860 = !DILocation(line: 23, column: 16, scope: !951)
!1861 = !DILocation(line: 25, column: 34, scope: !1862)
!1862 = distinct !DILexicalBlock(scope: !951, file: !368, line: 25, column: 9)
!1863 = !DILocation(line: 25, column: 10, scope: !1862)
!1864 = !DILocation(line: 25, column: 9, scope: !951)
!1865 = !DILocation(line: 28, column: 9, scope: !1862)
!1866 = !DILocation(line: 29, column: 43, scope: !951)
!1867 = !DILocation(line: 29, column: 62, scope: !951)
!1868 = !DILocation(line: 29, column: 69, scope: !951)
!1869 = !DILocation(line: 29, column: 20, scope: !951)
!1870 = !DILocation(line: 29, column: 18, scope: !951)
!1871 = !DILocation(line: 29, column: 5, scope: !951)
!1872 = !DILocation(line: 33, column: 18, scope: !1873)
!1873 = distinct !DILexicalBlock(scope: !951, file: !368, line: 33, column: 9)
!1874 = !DILocation(line: 33, column: 9, scope: !1873)
!1875 = !DILocation(line: 33, column: 9, scope: !951)
!1876 = !DILocation(line: 34, column: 8, scope: !1873)
!1877 = !DILocation(line: 36, column: 12, scope: !951)
!1878 = !DILocation(line: 37, column: 1, scope: !951)
!1879 = !DILocation(line: 36, column: 5, scope: !951)
!1880 = !DILocation(line: 563, column: 30, scope: !968)
!1881 = !DILocation(line: 563, column: 48, scope: !968)
!1882 = !DILocation(line: 565, column: 5, scope: !968)
!1883 = !DILocation(line: 565, column: 15, scope: !968)
!1884 = !DILocation(line: 566, column: 5, scope: !968)
!1885 = !DILocation(line: 566, column: 15, scope: !968)
!1886 = !DILocation(line: 567, column: 5, scope: !968)
!1887 = !DILocation(line: 567, column: 9, scope: !968)
!1888 = !DILocation(line: 569, column: 34, scope: !1889)
!1889 = distinct !DILexicalBlock(scope: !968, file: !368, line: 569, column: 9)
!1890 = !DILocation(line: 569, column: 10, scope: !1889)
!1891 = !DILocation(line: 569, column: 9, scope: !968)
!1892 = !DILocation(line: 572, column: 9, scope: !1889)
!1893 = !DILocation(line: 573, column: 41, scope: !968)
!1894 = !DILocation(line: 573, column: 60, scope: !968)
!1895 = !DILocation(line: 573, column: 20, scope: !968)
!1896 = !DILocation(line: 573, column: 18, scope: !968)
!1897 = !DILocation(line: 573, column: 5, scope: !968)
!1898 = !DILocation(line: 577, column: 18, scope: !1899)
!1899 = distinct !DILexicalBlock(scope: !968, file: !368, line: 577, column: 9)
!1900 = !DILocation(line: 577, column: 9, scope: !1899)
!1901 = !DILocation(line: 577, column: 9, scope: !968)
!1902 = !DILocation(line: 578, column: 8, scope: !1899)
!1903 = !DILocation(line: 580, column: 12, scope: !968)
!1904 = !DILocation(line: 581, column: 1, scope: !968)
!1905 = !DILocation(line: 580, column: 5, scope: !968)
!1906 = !DILocation(line: 596, column: 31, scope: !987)
!1907 = !DILocation(line: 596, column: 49, scope: !987)
!1908 = !DILocation(line: 598, column: 5, scope: !987)
!1909 = !DILocation(line: 598, column: 15, scope: !987)
!1910 = !DILocation(line: 599, column: 5, scope: !987)
!1911 = !DILocation(line: 599, column: 15, scope: !987)
!1912 = !DILocation(line: 600, column: 5, scope: !987)
!1913 = !DILocation(line: 600, column: 9, scope: !987)
!1914 = !DILocation(line: 602, column: 34, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !987, file: !368, line: 602, column: 9)
!1916 = !DILocation(line: 602, column: 10, scope: !1915)
!1917 = !DILocation(line: 602, column: 9, scope: !987)
!1918 = !DILocation(line: 605, column: 9, scope: !1915)
!1919 = !DILocation(line: 606, column: 42, scope: !987)
!1920 = !DILocation(line: 606, column: 61, scope: !987)
!1921 = !DILocation(line: 606, column: 20, scope: !987)
!1922 = !DILocation(line: 606, column: 18, scope: !987)
!1923 = !DILocation(line: 606, column: 5, scope: !987)
!1924 = !DILocation(line: 610, column: 18, scope: !1925)
!1925 = distinct !DILexicalBlock(scope: !987, file: !368, line: 610, column: 9)
!1926 = !DILocation(line: 610, column: 9, scope: !1925)
!1927 = !DILocation(line: 610, column: 9, scope: !987)
!1928 = !DILocation(line: 611, column: 8, scope: !1925)
!1929 = !DILocation(line: 613, column: 12, scope: !987)
!1930 = !DILocation(line: 614, column: 1, scope: !987)
!1931 = !DILocation(line: 613, column: 5, scope: !987)
!1932 = !DILocation(line: 664, column: 29, scope: !1006)
!1933 = !DILocation(line: 664, column: 47, scope: !1006)
!1934 = !DILocation(line: 666, column: 5, scope: !1006)
!1935 = !DILocation(line: 666, column: 15, scope: !1006)
!1936 = !DILocation(line: 667, column: 5, scope: !1006)
!1937 = !DILocation(line: 667, column: 15, scope: !1006)
!1938 = !DILocation(line: 668, column: 5, scope: !1006)
!1939 = !DILocation(line: 668, column: 9, scope: !1006)
!1940 = !DILocation(line: 669, column: 5, scope: !1006)
!1941 = !DILocation(line: 669, column: 9, scope: !1006)
!1942 = !DILocation(line: 670, column: 5, scope: !1006)
!1943 = !DILocation(line: 670, column: 9, scope: !1006)
!1944 = !DILocation(line: 671, column: 5, scope: !1006)
!1945 = !DILocation(line: 671, column: 9, scope: !1006)
!1946 = !DILocation(line: 672, column: 5, scope: !1006)
!1947 = !DILocation(line: 672, column: 15, scope: !1006)
!1948 = !DILocation(line: 673, column: 5, scope: !1006)
!1949 = !DILocation(line: 673, column: 9, scope: !1006)
!1950 = !DILocation(line: 674, column: 5, scope: !1006)
!1951 = !DILocation(line: 674, column: 9, scope: !1006)
!1952 = !DILocation(line: 676, column: 34, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1006, file: !368, line: 676, column: 9)
!1954 = !DILocation(line: 676, column: 10, scope: !1953)
!1955 = !DILocation(line: 676, column: 9, scope: !1006)
!1956 = !DILocation(line: 679, column: 9, scope: !1953)
!1957 = !DILocation(line: 680, column: 40, scope: !1006)
!1958 = !DILocation(line: 680, column: 59, scope: !1006)
!1959 = !DILocation(line: 680, column: 66, scope: !1006)
!1960 = !DILocation(line: 680, column: 77, scope: !1006)
!1961 = !DILocation(line: 680, column: 85, scope: !1006)
!1962 = !DILocation(line: 680, column: 94, scope: !1006)
!1963 = !DILocation(line: 680, column: 101, scope: !1006)
!1964 = !DILocation(line: 680, column: 110, scope: !1006)
!1965 = !DILocation(line: 680, column: 20, scope: !1006)
!1966 = !DILocation(line: 680, column: 18, scope: !1006)
!1967 = !DILocation(line: 680, column: 5, scope: !1006)
!1968 = !DILocation(line: 684, column: 18, scope: !1969)
!1969 = distinct !DILexicalBlock(scope: !1006, file: !368, line: 684, column: 9)
!1970 = !DILocation(line: 684, column: 9, scope: !1969)
!1971 = !DILocation(line: 684, column: 9, scope: !1006)
!1972 = !DILocation(line: 685, column: 8, scope: !1969)
!1973 = !DILocation(line: 687, column: 12, scope: !1006)
!1974 = !DILocation(line: 688, column: 1, scope: !1006)
!1975 = !DILocation(line: 687, column: 5, scope: !1006)
!1976 = !DILocation(line: 437, column: 31, scope: !401)
!1977 = !DILocation(line: 437, column: 50, scope: !401)
!1978 = !DILocation(line: 437, column: 64, scope: !401)
!1979 = !DILocation(line: 440, column: 5, scope: !401)
!1980 = !DILocation(line: 440, column: 16, scope: !401)
!1981 = !DILocation(line: 441, column: 5, scope: !401)
!1982 = !DILocation(line: 441, column: 18, scope: !401)
!1983 = !DILocation(line: 441, column: 26, scope: !401)
!1984 = !DILocation(line: 443, column: 35, scope: !1985)
!1985 = distinct !DILexicalBlock(scope: !401, file: !361, line: 443, column: 9)
!1986 = !DILocation(line: 443, column: 45, scope: !1985)
!1987 = !{!1252, !1253, i64 16}
!1988 = !DILocation(line: 443, column: 50, scope: !1985)
!1989 = !DILocation(line: 443, column: 10, scope: !1985)
!1990 = !DILocation(line: 443, column: 9, scope: !401)
!1991 = !DILocation(line: 444, column: 9, scope: !1985)
!1992 = !DILocation(line: 445, column: 12, scope: !414)
!1993 = !DILocation(line: 445, column: 10, scope: !414)
!1994 = !DILocation(line: 445, column: 17, scope: !1995)
!1995 = !DILexicalBlockFile(scope: !1996, file: !361, discriminator: 2)
!1996 = !DILexicalBlockFile(scope: !413, file: !361, discriminator: 1)
!1997 = !DILocation(line: 445, column: 21, scope: !413)
!1998 = !DILocation(line: 445, column: 31, scope: !413)
!1999 = !DILocation(line: 445, column: 19, scope: !413)
!2000 = !DILocation(line: 445, column: 5, scope: !414)
!2001 = !DILocation(line: 446, column: 9, scope: !412)
!2002 = !DILocation(line: 446, column: 13, scope: !412)
!2003 = !DILocation(line: 446, column: 22, scope: !412)
!2004 = !DILocation(line: 446, column: 28, scope: !412)
!2005 = !DILocation(line: 446, column: 21, scope: !412)
!2006 = !DILocation(line: 446, column: 79, scope: !2007)
!2007 = !DILexicalBlockFile(scope: !412, file: !361, discriminator: 1)
!2008 = !DILocation(line: 446, column: 89, scope: !412)
!2009 = !{!1252, !1201, i64 0}
!2010 = !DILocation(line: 446, column: 101, scope: !412)
!2011 = !DILocation(line: 446, column: 96, scope: !412)
!2012 = !DILocation(line: 446, column: 42, scope: !412)
!2013 = !{!1202, !1202, i64 0}
!2014 = !DILocation(line: 446, column: 36, scope: !412)
!2015 = !DILocation(line: 446, column: 111, scope: !2016)
!2016 = !DILexicalBlockFile(scope: !412, file: !361, discriminator: 2)
!2017 = !DILocation(line: 446, column: 117, scope: !412)
!2018 = !DILocation(line: 446, column: 110, scope: !412)
!2019 = !DILocation(line: 446, column: 162, scope: !2020)
!2020 = !DILexicalBlockFile(scope: !412, file: !361, discriminator: 4)
!2021 = !DILocation(line: 446, column: 172, scope: !412)
!2022 = !DILocation(line: 446, column: 184, scope: !412)
!2023 = !DILocation(line: 446, column: 179, scope: !412)
!2024 = !DILocation(line: 446, column: 132, scope: !412)
!2025 = !DILocation(line: 446, column: 131, scope: !412)
!2026 = !{!2027, !2027, i64 0}
!2027 = !{!"short", !1202, i64 0}
!2028 = !DILocation(line: 446, column: 125, scope: !412)
!2029 = !DILocation(line: 446, column: 194, scope: !2030)
!2030 = !DILexicalBlockFile(scope: !412, file: !361, discriminator: 5)
!2031 = !DILocation(line: 446, column: 200, scope: !412)
!2032 = !DILocation(line: 446, column: 193, scope: !412)
!2033 = !DILocation(line: 446, column: 235, scope: !2034)
!2034 = !DILexicalBlockFile(scope: !412, file: !361, discriminator: 7)
!2035 = !DILocation(line: 446, column: 245, scope: !412)
!2036 = !DILocation(line: 446, column: 255, scope: !412)
!2037 = !DILocation(line: 446, column: 251, scope: !412)
!2038 = !DILocation(line: 446, column: 215, scope: !412)
!2039 = !DILocation(line: 446, column: 286, scope: !412)
!2040 = !DILocation(line: 446, column: 296, scope: !412)
!2041 = !DILocation(line: 446, column: 306, scope: !412)
!2042 = !DILocation(line: 446, column: 302, scope: !412)
!2043 = !DILocation(line: 446, column: 266, scope: !412)
!2044 = !DILocation(line: 446, column: 314, scope: !412)
!2045 = !DILocation(line: 446, column: 263, scope: !412)
!2046 = !DILocation(line: 446, column: 341, scope: !412)
!2047 = !DILocation(line: 446, column: 351, scope: !412)
!2048 = !DILocation(line: 446, column: 361, scope: !412)
!2049 = !DILocation(line: 446, column: 357, scope: !412)
!2050 = !DILocation(line: 446, column: 323, scope: !412)
!2051 = !DILocation(line: 446, column: 369, scope: !412)
!2052 = !DILocation(line: 446, column: 320, scope: !412)
!2053 = !DILocation(line: 446, column: 419, scope: !2054)
!2054 = !DILexicalBlockFile(scope: !412, file: !361, discriminator: 8)
!2055 = !DILocation(line: 446, column: 429, scope: !412)
!2056 = !DILocation(line: 446, column: 441, scope: !412)
!2057 = !DILocation(line: 446, column: 436, scope: !412)
!2058 = !DILocation(line: 446, column: 387, scope: !412)
!2059 = !DILocation(line: 446, column: 386, scope: !412)
!2060 = !DILocation(line: 446, column: 110, scope: !2061)
!2061 = !DILexicalBlockFile(scope: !2062, file: !361, discriminator: 10)
!2062 = !DILexicalBlockFile(scope: !412, file: !361, discriminator: 9)
!2063 = !DILocation(line: 446, column: 21, scope: !2064)
!2064 = !DILexicalBlockFile(scope: !2065, file: !361, discriminator: 11)
!2065 = !DILexicalBlockFile(scope: !412, file: !361, discriminator: 6)
!2066 = !DILocation(line: 446, column: 13, scope: !2067)
!2067 = !DILexicalBlockFile(scope: !2068, file: !361, discriminator: 12)
!2068 = !DILexicalBlockFile(scope: !412, file: !361, discriminator: 3)
!2069 = !DILocation(line: 447, column: 13, scope: !2070)
!2070 = distinct !DILexicalBlock(scope: !412, file: !361, line: 447, column: 13)
!2071 = !DILocation(line: 447, column: 17, scope: !2070)
!2072 = !DILocation(line: 447, column: 13, scope: !412)
!2073 = !DILocation(line: 447, column: 33, scope: !2074)
!2074 = !DILexicalBlockFile(scope: !2070, file: !361, discriminator: 1)
!2075 = !DILocation(line: 447, column: 32, scope: !2070)
!2076 = !DILocation(line: 447, column: 29, scope: !2070)
!2077 = !DILocation(line: 447, column: 22, scope: !2070)
!2078 = !DILocation(line: 448, column: 23, scope: !2070)
!2079 = !DILocation(line: 448, column: 21, scope: !2070)
!2080 = !DILocation(line: 449, column: 13, scope: !2081)
!2081 = distinct !DILexicalBlock(scope: !412, file: !361, line: 449, column: 13)
!2082 = !DILocation(line: 449, column: 22, scope: !2081)
!2083 = !DILocation(line: 449, column: 20, scope: !2081)
!2084 = !DILocation(line: 449, column: 13, scope: !412)
!2085 = !DILocation(line: 449, column: 33, scope: !2086)
!2086 = !DILexicalBlockFile(scope: !2081, file: !361, discriminator: 1)
!2087 = !DILocation(line: 449, column: 31, scope: !2081)
!2088 = !DILocation(line: 449, column: 27, scope: !2081)
!2089 = !DILocation(line: 450, column: 5, scope: !413)
!2090 = !DILocation(line: 450, column: 5, scope: !412)
!2091 = !DILocation(line: 445, column: 41, scope: !413)
!2092 = !DILocation(line: 445, column: 38, scope: !413)
!2093 = !DILocation(line: 445, column: 5, scope: !413)
!2094 = !DILocation(line: 451, column: 36, scope: !401)
!2095 = !DILocation(line: 451, column: 12, scope: !401)
!2096 = !DILocation(line: 451, column: 5, scope: !401)
!2097 = !DILocation(line: 452, column: 1, scope: !401)
!2098 = !DILocation(line: 382, column: 37, scope: !415)
!2099 = !DILocation(line: 382, column: 46, scope: !415)
!2100 = !DILocation(line: 384, column: 29, scope: !2101)
!2101 = distinct !DILexicalBlock(scope: !415, file: !361, line: 384, column: 9)
!2102 = !DILocation(line: 384, column: 10, scope: !2101)
!2103 = !DILocation(line: 384, column: 9, scope: !415)
!2104 = !DILocation(line: 385, column: 9, scope: !2101)
!2105 = !DILocation(line: 386, column: 9, scope: !2106)
!2106 = distinct !DILexicalBlock(scope: !415, file: !361, line: 386, column: 9)
!2107 = !DILocation(line: 386, column: 15, scope: !2106)
!2108 = !DILocation(line: 386, column: 13, scope: !2106)
!2109 = !DILocation(line: 386, column: 20, scope: !2106)
!2110 = !DILocation(line: 386, column: 9, scope: !415)
!2111 = !DILocation(line: 387, column: 25, scope: !2112)
!2112 = distinct !DILexicalBlock(scope: !2106, file: !361, line: 386, column: 26)
!2113 = !DILocation(line: 387, column: 9, scope: !2112)
!2114 = !DILocation(line: 388, column: 9, scope: !2112)
!2115 = !DILocation(line: 390, column: 5, scope: !415)
!2116 = !DILocation(line: 391, column: 1, scope: !415)
!2117 = !DILocation(line: 371, column: 24, scope: !421)
!2118 = !DILocation(line: 373, column: 9, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !421, file: !361, line: 373, column: 9)
!2120 = !DILocation(line: 373, column: 14, scope: !2119)
!2121 = !DILocation(line: 373, column: 18, scope: !2119)
!2122 = !DILocation(line: 373, column: 21, scope: !2123)
!2123 = !DILexicalBlockFile(scope: !2119, file: !361, discriminator: 1)
!2124 = !DILocation(line: 373, column: 26, scope: !2119)
!2125 = !DILocation(line: 373, column: 9, scope: !421)
!2126 = !DILocation(line: 374, column: 25, scope: !2127)
!2127 = distinct !DILexicalBlock(scope: !2119, file: !361, line: 373, column: 31)
!2128 = !DILocation(line: 374, column: 9, scope: !2127)
!2129 = !DILocation(line: 375, column: 9, scope: !2127)
!2130 = !DILocation(line: 378, column: 9, scope: !2119)
!2131 = !DILocation(line: 379, column: 1, scope: !421)
!2132 = !DILocation(line: 465, column: 34, scope: !433)
!2133 = !DILocation(line: 465, column: 53, scope: !433)
!2134 = !DILocation(line: 465, column: 67, scope: !433)
!2135 = !DILocation(line: 468, column: 5, scope: !433)
!2136 = !DILocation(line: 468, column: 16, scope: !433)
!2137 = !DILocation(line: 471, column: 5, scope: !433)
!2138 = !DILocation(line: 471, column: 9, scope: !433)
!2139 = !DILocation(line: 471, column: 27, scope: !433)
!2140 = !DILocation(line: 473, column: 35, scope: !2141)
!2141 = distinct !DILexicalBlock(scope: !433, file: !361, line: 473, column: 9)
!2142 = !DILocation(line: 473, column: 45, scope: !2141)
!2143 = !DILocation(line: 473, column: 50, scope: !2141)
!2144 = !DILocation(line: 473, column: 10, scope: !2141)
!2145 = !DILocation(line: 473, column: 9, scope: !433)
!2146 = !DILocation(line: 474, column: 9, scope: !2141)
!2147 = !DILocation(line: 475, column: 12, scope: !444)
!2148 = !DILocation(line: 475, column: 10, scope: !444)
!2149 = !DILocation(line: 475, column: 17, scope: !2150)
!2150 = !DILexicalBlockFile(scope: !2151, file: !361, discriminator: 2)
!2151 = !DILexicalBlockFile(scope: !443, file: !361, discriminator: 1)
!2152 = !DILocation(line: 475, column: 21, scope: !443)
!2153 = !DILocation(line: 475, column: 31, scope: !443)
!2154 = !DILocation(line: 475, column: 19, scope: !443)
!2155 = !DILocation(line: 475, column: 5, scope: !444)
!2156 = !DILocation(line: 476, column: 9, scope: !442)
!2157 = !DILocation(line: 476, column: 13, scope: !442)
!2158 = !DILocation(line: 476, column: 22, scope: !442)
!2159 = !DILocation(line: 476, column: 28, scope: !442)
!2160 = !DILocation(line: 476, column: 21, scope: !442)
!2161 = !DILocation(line: 476, column: 79, scope: !2162)
!2162 = !DILexicalBlockFile(scope: !442, file: !361, discriminator: 1)
!2163 = !DILocation(line: 476, column: 89, scope: !442)
!2164 = !DILocation(line: 476, column: 101, scope: !442)
!2165 = !DILocation(line: 476, column: 96, scope: !442)
!2166 = !DILocation(line: 476, column: 42, scope: !442)
!2167 = !DILocation(line: 476, column: 36, scope: !442)
!2168 = !DILocation(line: 476, column: 111, scope: !2169)
!2169 = !DILexicalBlockFile(scope: !442, file: !361, discriminator: 2)
!2170 = !DILocation(line: 476, column: 117, scope: !442)
!2171 = !DILocation(line: 476, column: 110, scope: !442)
!2172 = !DILocation(line: 476, column: 162, scope: !2173)
!2173 = !DILexicalBlockFile(scope: !442, file: !361, discriminator: 4)
!2174 = !DILocation(line: 476, column: 172, scope: !442)
!2175 = !DILocation(line: 476, column: 184, scope: !442)
!2176 = !DILocation(line: 476, column: 179, scope: !442)
!2177 = !DILocation(line: 476, column: 132, scope: !442)
!2178 = !DILocation(line: 476, column: 131, scope: !442)
!2179 = !DILocation(line: 476, column: 125, scope: !442)
!2180 = !DILocation(line: 476, column: 194, scope: !2181)
!2181 = !DILexicalBlockFile(scope: !442, file: !361, discriminator: 5)
!2182 = !DILocation(line: 476, column: 200, scope: !442)
!2183 = !DILocation(line: 476, column: 193, scope: !442)
!2184 = !DILocation(line: 476, column: 235, scope: !2185)
!2185 = !DILexicalBlockFile(scope: !442, file: !361, discriminator: 7)
!2186 = !DILocation(line: 476, column: 245, scope: !442)
!2187 = !DILocation(line: 476, column: 255, scope: !442)
!2188 = !DILocation(line: 476, column: 251, scope: !442)
!2189 = !DILocation(line: 476, column: 215, scope: !442)
!2190 = !DILocation(line: 476, column: 286, scope: !442)
!2191 = !DILocation(line: 476, column: 296, scope: !442)
!2192 = !DILocation(line: 476, column: 306, scope: !442)
!2193 = !DILocation(line: 476, column: 302, scope: !442)
!2194 = !DILocation(line: 476, column: 266, scope: !442)
!2195 = !DILocation(line: 476, column: 314, scope: !442)
!2196 = !DILocation(line: 476, column: 263, scope: !442)
!2197 = !DILocation(line: 476, column: 341, scope: !442)
!2198 = !DILocation(line: 476, column: 351, scope: !442)
!2199 = !DILocation(line: 476, column: 361, scope: !442)
!2200 = !DILocation(line: 476, column: 357, scope: !442)
!2201 = !DILocation(line: 476, column: 323, scope: !442)
!2202 = !DILocation(line: 476, column: 369, scope: !442)
!2203 = !DILocation(line: 476, column: 320, scope: !442)
!2204 = !DILocation(line: 476, column: 419, scope: !2205)
!2205 = !DILexicalBlockFile(scope: !442, file: !361, discriminator: 8)
!2206 = !DILocation(line: 476, column: 429, scope: !442)
!2207 = !DILocation(line: 476, column: 441, scope: !442)
!2208 = !DILocation(line: 476, column: 436, scope: !442)
!2209 = !DILocation(line: 476, column: 387, scope: !442)
!2210 = !DILocation(line: 476, column: 386, scope: !442)
!2211 = !DILocation(line: 476, column: 110, scope: !2212)
!2212 = !DILexicalBlockFile(scope: !2213, file: !361, discriminator: 10)
!2213 = !DILexicalBlockFile(scope: !442, file: !361, discriminator: 9)
!2214 = !DILocation(line: 476, column: 21, scope: !2215)
!2215 = !DILexicalBlockFile(scope: !2216, file: !361, discriminator: 11)
!2216 = !DILexicalBlockFile(scope: !442, file: !361, discriminator: 6)
!2217 = !DILocation(line: 476, column: 13, scope: !2218)
!2218 = !DILexicalBlockFile(scope: !2219, file: !361, discriminator: 12)
!2219 = !DILexicalBlockFile(scope: !442, file: !361, discriminator: 3)
!2220 = !DILocation(line: 477, column: 13, scope: !2221)
!2221 = distinct !DILexicalBlock(scope: !442, file: !361, line: 477, column: 13)
!2222 = !DILocation(line: 477, column: 19, scope: !2221)
!2223 = !DILocation(line: 477, column: 17, scope: !2221)
!2224 = !DILocation(line: 477, column: 13, scope: !442)
!2225 = !DILocation(line: 477, column: 30, scope: !2226)
!2226 = !DILexicalBlockFile(scope: !2221, file: !361, discriminator: 1)
!2227 = !DILocation(line: 477, column: 28, scope: !2221)
!2228 = !DILocation(line: 477, column: 24, scope: !2221)
!2229 = !DILocation(line: 478, column: 13, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !442, file: !361, line: 478, column: 13)
!2231 = !DILocation(line: 478, column: 19, scope: !2230)
!2232 = !DILocation(line: 478, column: 17, scope: !2230)
!2233 = !DILocation(line: 478, column: 13, scope: !442)
!2234 = !DILocation(line: 478, column: 30, scope: !2235)
!2235 = !DILexicalBlockFile(scope: !2230, file: !361, discriminator: 1)
!2236 = !DILocation(line: 478, column: 28, scope: !2230)
!2237 = !DILocation(line: 478, column: 24, scope: !2230)
!2238 = !DILocation(line: 479, column: 5, scope: !443)
!2239 = !DILocation(line: 479, column: 5, scope: !442)
!2240 = !DILocation(line: 475, column: 41, scope: !443)
!2241 = !DILocation(line: 475, column: 38, scope: !443)
!2242 = !DILocation(line: 475, column: 5, scope: !443)
!2243 = !DILocation(line: 480, column: 41, scope: !433)
!2244 = !DILocation(line: 480, column: 46, scope: !433)
!2245 = !DILocation(line: 480, column: 12, scope: !433)
!2246 = !DILocation(line: 480, column: 5, scope: !433)
!2247 = !DILocation(line: 481, column: 1, scope: !433)
!2248 = !DILocation(line: 494, column: 31, scope: !452)
!2249 = !DILocation(line: 494, column: 50, scope: !452)
!2250 = !DILocation(line: 494, column: 64, scope: !452)
!2251 = !DILocation(line: 497, column: 5, scope: !452)
!2252 = !DILocation(line: 497, column: 16, scope: !452)
!2253 = !DILocation(line: 498, column: 5, scope: !452)
!2254 = !DILocation(line: 498, column: 9, scope: !452)
!2255 = !DILocation(line: 499, column: 5, scope: !452)
!2256 = !DILocation(line: 499, column: 12, scope: !452)
!2257 = !DILocation(line: 501, column: 35, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !452, file: !361, line: 501, column: 9)
!2259 = !DILocation(line: 501, column: 45, scope: !2258)
!2260 = !DILocation(line: 501, column: 50, scope: !2258)
!2261 = !DILocation(line: 501, column: 10, scope: !2258)
!2262 = !DILocation(line: 501, column: 9, scope: !452)
!2263 = !DILocation(line: 502, column: 9, scope: !2258)
!2264 = !DILocation(line: 503, column: 12, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !452, file: !361, line: 503, column: 5)
!2266 = !DILocation(line: 503, column: 10, scope: !2265)
!2267 = !DILocation(line: 503, column: 17, scope: !2268)
!2268 = !DILexicalBlockFile(scope: !2269, file: !361, discriminator: 2)
!2269 = !DILexicalBlockFile(scope: !2270, file: !361, discriminator: 1)
!2270 = distinct !DILexicalBlock(scope: !2265, file: !361, line: 503, column: 5)
!2271 = !DILocation(line: 503, column: 21, scope: !2270)
!2272 = !DILocation(line: 503, column: 31, scope: !2270)
!2273 = !DILocation(line: 503, column: 19, scope: !2270)
!2274 = !DILocation(line: 503, column: 5, scope: !2265)
!2275 = !DILocation(line: 504, column: 19, scope: !2270)
!2276 = !DILocation(line: 504, column: 25, scope: !2270)
!2277 = !DILocation(line: 504, column: 18, scope: !2270)
!2278 = !DILocation(line: 504, column: 76, scope: !2269)
!2279 = !DILocation(line: 504, column: 86, scope: !2270)
!2280 = !DILocation(line: 504, column: 98, scope: !2270)
!2281 = !DILocation(line: 504, column: 93, scope: !2270)
!2282 = !DILocation(line: 504, column: 39, scope: !2270)
!2283 = !DILocation(line: 504, column: 33, scope: !2270)
!2284 = !DILocation(line: 504, column: 108, scope: !2285)
!2285 = !DILexicalBlockFile(scope: !2270, file: !361, discriminator: 2)
!2286 = !DILocation(line: 504, column: 114, scope: !2270)
!2287 = !DILocation(line: 504, column: 107, scope: !2270)
!2288 = !DILocation(line: 504, column: 159, scope: !2289)
!2289 = !DILexicalBlockFile(scope: !2270, file: !361, discriminator: 4)
!2290 = !DILocation(line: 504, column: 169, scope: !2270)
!2291 = !DILocation(line: 504, column: 181, scope: !2270)
!2292 = !DILocation(line: 504, column: 176, scope: !2270)
!2293 = !DILocation(line: 504, column: 129, scope: !2270)
!2294 = !DILocation(line: 504, column: 128, scope: !2270)
!2295 = !DILocation(line: 504, column: 122, scope: !2270)
!2296 = !DILocation(line: 504, column: 191, scope: !2297)
!2297 = !DILexicalBlockFile(scope: !2270, file: !361, discriminator: 5)
!2298 = !DILocation(line: 504, column: 197, scope: !2270)
!2299 = !DILocation(line: 504, column: 190, scope: !2270)
!2300 = !DILocation(line: 504, column: 232, scope: !2301)
!2301 = !DILexicalBlockFile(scope: !2270, file: !361, discriminator: 7)
!2302 = !DILocation(line: 504, column: 242, scope: !2270)
!2303 = !DILocation(line: 504, column: 252, scope: !2270)
!2304 = !DILocation(line: 504, column: 248, scope: !2270)
!2305 = !DILocation(line: 504, column: 212, scope: !2270)
!2306 = !DILocation(line: 504, column: 283, scope: !2270)
!2307 = !DILocation(line: 504, column: 293, scope: !2270)
!2308 = !DILocation(line: 504, column: 303, scope: !2270)
!2309 = !DILocation(line: 504, column: 299, scope: !2270)
!2310 = !DILocation(line: 504, column: 263, scope: !2270)
!2311 = !DILocation(line: 504, column: 311, scope: !2270)
!2312 = !DILocation(line: 504, column: 260, scope: !2270)
!2313 = !DILocation(line: 504, column: 338, scope: !2270)
!2314 = !DILocation(line: 504, column: 348, scope: !2270)
!2315 = !DILocation(line: 504, column: 358, scope: !2270)
!2316 = !DILocation(line: 504, column: 354, scope: !2270)
!2317 = !DILocation(line: 504, column: 320, scope: !2270)
!2318 = !DILocation(line: 504, column: 366, scope: !2270)
!2319 = !DILocation(line: 504, column: 317, scope: !2270)
!2320 = !DILocation(line: 504, column: 416, scope: !2321)
!2321 = !DILexicalBlockFile(scope: !2270, file: !361, discriminator: 8)
!2322 = !DILocation(line: 504, column: 426, scope: !2270)
!2323 = !DILocation(line: 504, column: 438, scope: !2270)
!2324 = !DILocation(line: 504, column: 433, scope: !2270)
!2325 = !DILocation(line: 504, column: 384, scope: !2270)
!2326 = !DILocation(line: 504, column: 383, scope: !2270)
!2327 = !DILocation(line: 504, column: 107, scope: !2328)
!2328 = !DILexicalBlockFile(scope: !2329, file: !361, discriminator: 10)
!2329 = !DILexicalBlockFile(scope: !2270, file: !361, discriminator: 9)
!2330 = !DILocation(line: 504, column: 18, scope: !2331)
!2331 = !DILexicalBlockFile(scope: !2332, file: !361, discriminator: 11)
!2332 = !DILexicalBlockFile(scope: !2270, file: !361, discriminator: 6)
!2333 = !DILocation(line: 504, column: 16, scope: !2334)
!2334 = !DILexicalBlockFile(scope: !2335, file: !361, discriminator: 12)
!2335 = !DILexicalBlockFile(scope: !2270, file: !361, discriminator: 3)
!2336 = !DILocation(line: 504, column: 13, scope: !2270)
!2337 = !DILocation(line: 504, column: 9, scope: !2270)
!2338 = !DILocation(line: 503, column: 41, scope: !2270)
!2339 = !DILocation(line: 503, column: 38, scope: !2270)
!2340 = !DILocation(line: 503, column: 5, scope: !2270)
!2341 = !DILocation(line: 505, column: 9, scope: !2342)
!2342 = distinct !DILexicalBlock(scope: !452, file: !361, line: 505, column: 9)
!2343 = !DILocation(line: 505, column: 19, scope: !2342)
!2344 = !DILocation(line: 505, column: 23, scope: !2342)
!2345 = !DILocation(line: 505, column: 9, scope: !452)
!2346 = !DILocation(line: 506, column: 13, scope: !2342)
!2347 = !DILocation(line: 506, column: 9, scope: !2342)
!2348 = !DILocation(line: 508, column: 26, scope: !2342)
!2349 = !DILocation(line: 508, column: 41, scope: !2342)
!2350 = !DILocation(line: 508, column: 51, scope: !2342)
!2351 = !DILocation(line: 508, column: 55, scope: !2342)
!2352 = !DILocation(line: 508, column: 54, scope: !2342)
!2353 = !DILocation(line: 508, column: 32, scope: !2342)
!2354 = !DILocation(line: 508, column: 30, scope: !2342)
!2355 = !DILocation(line: 508, column: 20, scope: !2342)
!2356 = !DILocation(line: 508, column: 15, scope: !2342)
!2357 = !DILocation(line: 508, column: 13, scope: !2342)
!2358 = !DILocation(line: 509, column: 28, scope: !452)
!2359 = !DILocation(line: 509, column: 12, scope: !452)
!2360 = !DILocation(line: 509, column: 5, scope: !452)
!2361 = !DILocation(line: 510, column: 1, scope: !452)
!2362 = !DILocation(line: 816, column: 33, scope: !467)
!2363 = !DILocation(line: 816, column: 52, scope: !467)
!2364 = !DILocation(line: 816, column: 66, scope: !467)
!2365 = !DILocation(line: 819, column: 5, scope: !467)
!2366 = !DILocation(line: 819, column: 16, scope: !467)
!2367 = !DILocation(line: 820, column: 5, scope: !467)
!2368 = !DILocation(line: 820, column: 9, scope: !467)
!2369 = !DILocation(line: 820, column: 18, scope: !467)
!2370 = !DILocation(line: 820, column: 40, scope: !467)
!2371 = !DILocation(line: 821, column: 5, scope: !467)
!2372 = !DILocation(line: 821, column: 18, scope: !467)
!2373 = !DILocation(line: 821, column: 27, scope: !467)
!2374 = !DILocation(line: 822, column: 5, scope: !467)
!2375 = !DILocation(line: 822, column: 9, scope: !467)
!2376 = !DILocation(line: 822, column: 15, scope: !467)
!2377 = !DILocation(line: 824, column: 35, scope: !2378)
!2378 = distinct !DILexicalBlock(scope: !467, file: !361, line: 824, column: 9)
!2379 = !DILocation(line: 824, column: 45, scope: !2378)
!2380 = !DILocation(line: 824, column: 50, scope: !2378)
!2381 = !DILocation(line: 824, column: 10, scope: !2378)
!2382 = !DILocation(line: 824, column: 9, scope: !467)
!2383 = !DILocation(line: 825, column: 9, scope: !2378)
!2384 = !DILocation(line: 826, column: 9, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !467, file: !361, line: 826, column: 9)
!2386 = !DILocation(line: 826, column: 19, scope: !2385)
!2387 = !DILocation(line: 826, column: 26, scope: !2385)
!2388 = !DILocation(line: 826, column: 23, scope: !2385)
!2389 = !DILocation(line: 826, column: 9, scope: !467)
!2390 = !DILocation(line: 827, column: 16, scope: !2385)
!2391 = !DILocation(line: 827, column: 9, scope: !2385)
!2392 = !DILocation(line: 828, column: 18, scope: !467)
!2393 = !DILocation(line: 828, column: 24, scope: !467)
!2394 = !DILocation(line: 828, column: 17, scope: !467)
!2395 = !DILocation(line: 828, column: 75, scope: !2396)
!2396 = !DILexicalBlockFile(scope: !467, file: !361, discriminator: 1)
!2397 = !DILocation(line: 828, column: 85, scope: !467)
!2398 = !DILocation(line: 828, column: 92, scope: !467)
!2399 = !DILocation(line: 828, column: 38, scope: !467)
!2400 = !DILocation(line: 828, column: 32, scope: !467)
!2401 = !DILocation(line: 828, column: 107, scope: !2402)
!2402 = !DILexicalBlockFile(scope: !467, file: !361, discriminator: 2)
!2403 = !DILocation(line: 828, column: 113, scope: !467)
!2404 = !DILocation(line: 828, column: 106, scope: !467)
!2405 = !DILocation(line: 828, column: 158, scope: !2406)
!2406 = !DILexicalBlockFile(scope: !467, file: !361, discriminator: 4)
!2407 = !DILocation(line: 828, column: 168, scope: !467)
!2408 = !DILocation(line: 828, column: 175, scope: !467)
!2409 = !DILocation(line: 828, column: 128, scope: !467)
!2410 = !DILocation(line: 828, column: 127, scope: !467)
!2411 = !DILocation(line: 828, column: 121, scope: !467)
!2412 = !DILocation(line: 828, column: 190, scope: !2413)
!2413 = !DILexicalBlockFile(scope: !467, file: !361, discriminator: 5)
!2414 = !DILocation(line: 828, column: 196, scope: !467)
!2415 = !DILocation(line: 828, column: 189, scope: !467)
!2416 = !DILocation(line: 828, column: 231, scope: !2417)
!2417 = !DILexicalBlockFile(scope: !467, file: !361, discriminator: 7)
!2418 = !DILocation(line: 828, column: 241, scope: !467)
!2419 = !DILocation(line: 828, column: 247, scope: !467)
!2420 = !DILocation(line: 828, column: 211, scope: !467)
!2421 = !DILocation(line: 828, column: 282, scope: !467)
!2422 = !DILocation(line: 828, column: 292, scope: !467)
!2423 = !DILocation(line: 828, column: 298, scope: !467)
!2424 = !DILocation(line: 828, column: 262, scope: !467)
!2425 = !DILocation(line: 828, column: 310, scope: !467)
!2426 = !DILocation(line: 828, column: 259, scope: !467)
!2427 = !DILocation(line: 828, column: 337, scope: !467)
!2428 = !DILocation(line: 828, column: 347, scope: !467)
!2429 = !DILocation(line: 828, column: 353, scope: !467)
!2430 = !DILocation(line: 828, column: 319, scope: !467)
!2431 = !DILocation(line: 828, column: 365, scope: !467)
!2432 = !DILocation(line: 828, column: 316, scope: !467)
!2433 = !DILocation(line: 828, column: 415, scope: !2434)
!2434 = !DILexicalBlockFile(scope: !467, file: !361, discriminator: 8)
!2435 = !DILocation(line: 828, column: 425, scope: !467)
!2436 = !DILocation(line: 828, column: 432, scope: !467)
!2437 = !DILocation(line: 828, column: 383, scope: !467)
!2438 = !DILocation(line: 828, column: 382, scope: !467)
!2439 = !DILocation(line: 828, column: 106, scope: !2440)
!2440 = !DILexicalBlockFile(scope: !2441, file: !361, discriminator: 10)
!2441 = !DILexicalBlockFile(scope: !467, file: !361, discriminator: 9)
!2442 = !DILocation(line: 828, column: 17, scope: !2443)
!2443 = !DILexicalBlockFile(scope: !2444, file: !361, discriminator: 11)
!2444 = !DILexicalBlockFile(scope: !467, file: !361, discriminator: 6)
!2445 = !DILocation(line: 828, column: 13, scope: !2446)
!2446 = !DILexicalBlockFile(scope: !2447, file: !361, discriminator: 12)
!2447 = !DILexicalBlockFile(scope: !467, file: !361, discriminator: 3)
!2448 = !DILocation(line: 829, column: 14, scope: !467)
!2449 = !DILocation(line: 830, column: 14, scope: !483)
!2450 = !DILocation(line: 830, column: 12, scope: !483)
!2451 = !DILocation(line: 830, column: 10, scope: !483)
!2452 = !DILocation(line: 830, column: 21, scope: !2453)
!2453 = !DILexicalBlockFile(scope: !2454, file: !361, discriminator: 2)
!2454 = !DILexicalBlockFile(scope: !482, file: !361, discriminator: 1)
!2455 = !DILocation(line: 830, column: 25, scope: !482)
!2456 = !DILocation(line: 830, column: 35, scope: !482)
!2457 = !DILocation(line: 830, column: 23, scope: !482)
!2458 = !DILocation(line: 830, column: 5, scope: !483)
!2459 = !DILocation(line: 831, column: 9, scope: !481)
!2460 = !DILocation(line: 831, column: 13, scope: !481)
!2461 = !DILocation(line: 831, column: 22, scope: !481)
!2462 = !DILocation(line: 831, column: 28, scope: !481)
!2463 = !DILocation(line: 831, column: 21, scope: !481)
!2464 = !DILocation(line: 831, column: 79, scope: !2465)
!2465 = !DILexicalBlockFile(scope: !481, file: !361, discriminator: 1)
!2466 = !DILocation(line: 831, column: 89, scope: !481)
!2467 = !DILocation(line: 831, column: 101, scope: !481)
!2468 = !DILocation(line: 831, column: 96, scope: !481)
!2469 = !DILocation(line: 831, column: 42, scope: !481)
!2470 = !DILocation(line: 831, column: 36, scope: !481)
!2471 = !DILocation(line: 831, column: 111, scope: !2472)
!2472 = !DILexicalBlockFile(scope: !481, file: !361, discriminator: 2)
!2473 = !DILocation(line: 831, column: 117, scope: !481)
!2474 = !DILocation(line: 831, column: 110, scope: !481)
!2475 = !DILocation(line: 831, column: 162, scope: !2476)
!2476 = !DILexicalBlockFile(scope: !481, file: !361, discriminator: 4)
!2477 = !DILocation(line: 831, column: 172, scope: !481)
!2478 = !DILocation(line: 831, column: 184, scope: !481)
!2479 = !DILocation(line: 831, column: 179, scope: !481)
!2480 = !DILocation(line: 831, column: 132, scope: !481)
!2481 = !DILocation(line: 831, column: 131, scope: !481)
!2482 = !DILocation(line: 831, column: 125, scope: !481)
!2483 = !DILocation(line: 831, column: 194, scope: !2484)
!2484 = !DILexicalBlockFile(scope: !481, file: !361, discriminator: 5)
!2485 = !DILocation(line: 831, column: 200, scope: !481)
!2486 = !DILocation(line: 831, column: 193, scope: !481)
!2487 = !DILocation(line: 831, column: 235, scope: !2488)
!2488 = !DILexicalBlockFile(scope: !481, file: !361, discriminator: 7)
!2489 = !DILocation(line: 831, column: 245, scope: !481)
!2490 = !DILocation(line: 831, column: 255, scope: !481)
!2491 = !DILocation(line: 831, column: 251, scope: !481)
!2492 = !DILocation(line: 831, column: 215, scope: !481)
!2493 = !DILocation(line: 831, column: 286, scope: !481)
!2494 = !DILocation(line: 831, column: 296, scope: !481)
!2495 = !DILocation(line: 831, column: 306, scope: !481)
!2496 = !DILocation(line: 831, column: 302, scope: !481)
!2497 = !DILocation(line: 831, column: 266, scope: !481)
!2498 = !DILocation(line: 831, column: 314, scope: !481)
!2499 = !DILocation(line: 831, column: 263, scope: !481)
!2500 = !DILocation(line: 831, column: 341, scope: !481)
!2501 = !DILocation(line: 831, column: 351, scope: !481)
!2502 = !DILocation(line: 831, column: 361, scope: !481)
!2503 = !DILocation(line: 831, column: 357, scope: !481)
!2504 = !DILocation(line: 831, column: 323, scope: !481)
!2505 = !DILocation(line: 831, column: 369, scope: !481)
!2506 = !DILocation(line: 831, column: 320, scope: !481)
!2507 = !DILocation(line: 831, column: 419, scope: !2508)
!2508 = !DILexicalBlockFile(scope: !481, file: !361, discriminator: 8)
!2509 = !DILocation(line: 831, column: 429, scope: !481)
!2510 = !DILocation(line: 831, column: 441, scope: !481)
!2511 = !DILocation(line: 831, column: 436, scope: !481)
!2512 = !DILocation(line: 831, column: 387, scope: !481)
!2513 = !DILocation(line: 831, column: 386, scope: !481)
!2514 = !DILocation(line: 831, column: 110, scope: !2515)
!2515 = !DILexicalBlockFile(scope: !2516, file: !361, discriminator: 10)
!2516 = !DILexicalBlockFile(scope: !481, file: !361, discriminator: 9)
!2517 = !DILocation(line: 831, column: 21, scope: !2518)
!2518 = !DILexicalBlockFile(scope: !2519, file: !361, discriminator: 11)
!2519 = !DILexicalBlockFile(scope: !481, file: !361, discriminator: 6)
!2520 = !DILocation(line: 831, column: 13, scope: !2521)
!2521 = !DILexicalBlockFile(scope: !2522, file: !361, discriminator: 12)
!2522 = !DILexicalBlockFile(scope: !481, file: !361, discriminator: 3)
!2523 = !DILocation(line: 832, column: 13, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !481, file: !361, line: 832, column: 13)
!2525 = !DILocation(line: 832, column: 20, scope: !2524)
!2526 = !DILocation(line: 832, column: 17, scope: !2524)
!2527 = !DILocation(line: 832, column: 13, scope: !481)
!2528 = !DILocation(line: 833, column: 20, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2524, file: !361, line: 832, column: 29)
!2530 = !DILocation(line: 833, column: 26, scope: !2529)
!2531 = !DILocation(line: 833, column: 24, scope: !2529)
!2532 = !DILocation(line: 833, column: 18, scope: !2529)
!2533 = !DILocation(line: 834, column: 17, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2529, file: !361, line: 834, column: 17)
!2535 = !DILocation(line: 834, column: 30, scope: !2534)
!2536 = !DILocation(line: 834, column: 29, scope: !2534)
!2537 = !DILocation(line: 834, column: 26, scope: !2534)
!2538 = !DILocation(line: 834, column: 17, scope: !2529)
!2539 = !DILocation(line: 838, column: 21, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2541, file: !361, line: 838, column: 21)
!2541 = distinct !DILexicalBlock(scope: !2534, file: !361, line: 834, column: 36)
!2542 = !DILocation(line: 838, column: 21, scope: !2541)
!2543 = !DILocation(line: 839, column: 25, scope: !2544)
!2544 = distinct !DILexicalBlock(scope: !2545, file: !361, line: 839, column: 25)
!2545 = distinct !DILexicalBlock(scope: !2540, file: !361, line: 838, column: 39)
!2546 = !DILocation(line: 839, column: 35, scope: !2544)
!2547 = !DILocation(line: 839, column: 33, scope: !2544)
!2548 = !DILocation(line: 839, column: 25, scope: !2545)
!2549 = !DILocation(line: 840, column: 53, scope: !2544)
!2550 = !DILocation(line: 841, column: 53, scope: !2544)
!2551 = !DILocation(line: 840, column: 65, scope: !2544)
!2552 = !DILocation(line: 840, column: 37, scope: !2544)
!2553 = !DILocation(line: 840, column: 25, scope: !2544)
!2554 = !DILocation(line: 843, column: 53, scope: !2544)
!2555 = !DILocation(line: 844, column: 53, scope: !2544)
!2556 = !DILocation(line: 843, column: 61, scope: !2544)
!2557 = !DILocation(line: 843, column: 37, scope: !2544)
!2558 = !DILocation(line: 845, column: 26, scope: !2559)
!2559 = distinct !DILexicalBlock(scope: !2545, file: !361, line: 845, column: 26)
!2560 = !DILocation(line: 845, column: 40, scope: !2559)
!2561 = !DILocation(line: 845, column: 38, scope: !2559)
!2562 = !DILocation(line: 845, column: 26, scope: !2545)
!2563 = !DILocation(line: 846, column: 31, scope: !2559)
!2564 = !DILocation(line: 846, column: 29, scope: !2559)
!2565 = !DILocation(line: 846, column: 25, scope: !2559)
!2566 = !DILocation(line: 847, column: 17, scope: !2545)
!2567 = !DILocation(line: 848, column: 34, scope: !2541)
!2568 = !DILocation(line: 849, column: 31, scope: !2541)
!2569 = !DILocation(line: 849, column: 29, scope: !2541)
!2570 = !DILocation(line: 850, column: 13, scope: !2541)
!2571 = !DILocation(line: 851, column: 23, scope: !2529)
!2572 = !DILocation(line: 851, column: 21, scope: !2529)
!2573 = !DILocation(line: 852, column: 24, scope: !2529)
!2574 = !DILocation(line: 852, column: 22, scope: !2529)
!2575 = !DILocation(line: 853, column: 9, scope: !2529)
!2576 = !DILocation(line: 854, column: 5, scope: !482)
!2577 = !DILocation(line: 854, column: 5, scope: !481)
!2578 = !DILocation(line: 830, column: 45, scope: !482)
!2579 = !DILocation(line: 830, column: 42, scope: !482)
!2580 = !DILocation(line: 830, column: 5, scope: !482)
!2581 = !DILocation(line: 855, column: 36, scope: !467)
!2582 = !DILocation(line: 855, column: 12, scope: !467)
!2583 = !DILocation(line: 855, column: 5, scope: !467)
!2584 = !DILocation(line: 856, column: 1, scope: !467)
!2585 = !DILocation(line: 759, column: 33, scope: !491)
!2586 = !DILocation(line: 759, column: 52, scope: !491)
!2587 = !DILocation(line: 759, column: 66, scope: !491)
!2588 = !DILocation(line: 762, column: 5, scope: !491)
!2589 = !DILocation(line: 762, column: 16, scope: !491)
!2590 = !DILocation(line: 763, column: 5, scope: !491)
!2591 = !DILocation(line: 763, column: 9, scope: !491)
!2592 = !DILocation(line: 763, column: 18, scope: !491)
!2593 = !DILocation(line: 763, column: 40, scope: !491)
!2594 = !DILocation(line: 764, column: 5, scope: !491)
!2595 = !DILocation(line: 764, column: 12, scope: !491)
!2596 = !DILocation(line: 765, column: 5, scope: !491)
!2597 = !DILocation(line: 765, column: 18, scope: !491)
!2598 = !DILocation(line: 766, column: 5, scope: !491)
!2599 = !DILocation(line: 766, column: 9, scope: !491)
!2600 = !DILocation(line: 766, column: 15, scope: !491)
!2601 = !DILocation(line: 766, column: 25, scope: !491)
!2602 = !DILocation(line: 768, column: 35, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !491, file: !361, line: 768, column: 9)
!2604 = !DILocation(line: 768, column: 45, scope: !2603)
!2605 = !DILocation(line: 768, column: 50, scope: !2603)
!2606 = !DILocation(line: 768, column: 10, scope: !2603)
!2607 = !DILocation(line: 768, column: 9, scope: !491)
!2608 = !DILocation(line: 769, column: 9, scope: !2603)
!2609 = !DILocation(line: 770, column: 9, scope: !2610)
!2610 = distinct !DILexicalBlock(scope: !491, file: !361, line: 770, column: 9)
!2611 = !DILocation(line: 770, column: 19, scope: !2610)
!2612 = !DILocation(line: 770, column: 26, scope: !2610)
!2613 = !DILocation(line: 770, column: 23, scope: !2610)
!2614 = !DILocation(line: 770, column: 9, scope: !491)
!2615 = !DILocation(line: 771, column: 16, scope: !2610)
!2616 = !DILocation(line: 771, column: 9, scope: !2610)
!2617 = !DILocation(line: 772, column: 18, scope: !491)
!2618 = !DILocation(line: 772, column: 24, scope: !491)
!2619 = !DILocation(line: 772, column: 17, scope: !491)
!2620 = !DILocation(line: 772, column: 75, scope: !2621)
!2621 = !DILexicalBlockFile(scope: !491, file: !361, discriminator: 1)
!2622 = !DILocation(line: 772, column: 85, scope: !491)
!2623 = !DILocation(line: 772, column: 92, scope: !491)
!2624 = !DILocation(line: 772, column: 38, scope: !491)
!2625 = !DILocation(line: 772, column: 32, scope: !491)
!2626 = !DILocation(line: 772, column: 107, scope: !2627)
!2627 = !DILexicalBlockFile(scope: !491, file: !361, discriminator: 2)
!2628 = !DILocation(line: 772, column: 113, scope: !491)
!2629 = !DILocation(line: 772, column: 106, scope: !491)
!2630 = !DILocation(line: 772, column: 158, scope: !2631)
!2631 = !DILexicalBlockFile(scope: !491, file: !361, discriminator: 4)
!2632 = !DILocation(line: 772, column: 168, scope: !491)
!2633 = !DILocation(line: 772, column: 175, scope: !491)
!2634 = !DILocation(line: 772, column: 128, scope: !491)
!2635 = !DILocation(line: 772, column: 127, scope: !491)
!2636 = !DILocation(line: 772, column: 121, scope: !491)
!2637 = !DILocation(line: 772, column: 190, scope: !2638)
!2638 = !DILexicalBlockFile(scope: !491, file: !361, discriminator: 5)
!2639 = !DILocation(line: 772, column: 196, scope: !491)
!2640 = !DILocation(line: 772, column: 189, scope: !491)
!2641 = !DILocation(line: 772, column: 231, scope: !2642)
!2642 = !DILexicalBlockFile(scope: !491, file: !361, discriminator: 7)
!2643 = !DILocation(line: 772, column: 241, scope: !491)
!2644 = !DILocation(line: 772, column: 247, scope: !491)
!2645 = !DILocation(line: 772, column: 211, scope: !491)
!2646 = !DILocation(line: 772, column: 282, scope: !491)
!2647 = !DILocation(line: 772, column: 292, scope: !491)
!2648 = !DILocation(line: 772, column: 298, scope: !491)
!2649 = !DILocation(line: 772, column: 262, scope: !491)
!2650 = !DILocation(line: 772, column: 310, scope: !491)
!2651 = !DILocation(line: 772, column: 259, scope: !491)
!2652 = !DILocation(line: 772, column: 337, scope: !491)
!2653 = !DILocation(line: 772, column: 347, scope: !491)
!2654 = !DILocation(line: 772, column: 353, scope: !491)
!2655 = !DILocation(line: 772, column: 319, scope: !491)
!2656 = !DILocation(line: 772, column: 365, scope: !491)
!2657 = !DILocation(line: 772, column: 316, scope: !491)
!2658 = !DILocation(line: 772, column: 415, scope: !2659)
!2659 = !DILexicalBlockFile(scope: !491, file: !361, discriminator: 8)
!2660 = !DILocation(line: 772, column: 425, scope: !491)
!2661 = !DILocation(line: 772, column: 432, scope: !491)
!2662 = !DILocation(line: 772, column: 383, scope: !491)
!2663 = !DILocation(line: 772, column: 382, scope: !491)
!2664 = !DILocation(line: 772, column: 106, scope: !2665)
!2665 = !DILexicalBlockFile(scope: !2666, file: !361, discriminator: 10)
!2666 = !DILexicalBlockFile(scope: !491, file: !361, discriminator: 9)
!2667 = !DILocation(line: 772, column: 17, scope: !2668)
!2668 = !DILexicalBlockFile(scope: !2669, file: !361, discriminator: 11)
!2669 = !DILexicalBlockFile(scope: !491, file: !361, discriminator: 6)
!2670 = !DILocation(line: 772, column: 13, scope: !2671)
!2671 = !DILexicalBlockFile(scope: !2672, file: !361, discriminator: 12)
!2672 = !DILexicalBlockFile(scope: !491, file: !361, discriminator: 3)
!2673 = !DILocation(line: 773, column: 14, scope: !491)
!2674 = !DILocation(line: 774, column: 14, scope: !508)
!2675 = !DILocation(line: 774, column: 12, scope: !508)
!2676 = !DILocation(line: 774, column: 10, scope: !508)
!2677 = !DILocation(line: 774, column: 21, scope: !2678)
!2678 = !DILexicalBlockFile(scope: !2679, file: !361, discriminator: 2)
!2679 = !DILexicalBlockFile(scope: !507, file: !361, discriminator: 1)
!2680 = !DILocation(line: 774, column: 25, scope: !507)
!2681 = !DILocation(line: 774, column: 35, scope: !507)
!2682 = !DILocation(line: 774, column: 23, scope: !507)
!2683 = !DILocation(line: 774, column: 5, scope: !508)
!2684 = !DILocation(line: 775, column: 9, scope: !506)
!2685 = !DILocation(line: 775, column: 13, scope: !506)
!2686 = !DILocation(line: 775, column: 22, scope: !506)
!2687 = !DILocation(line: 775, column: 28, scope: !506)
!2688 = !DILocation(line: 775, column: 21, scope: !506)
!2689 = !DILocation(line: 775, column: 79, scope: !2690)
!2690 = !DILexicalBlockFile(scope: !506, file: !361, discriminator: 1)
!2691 = !DILocation(line: 775, column: 89, scope: !506)
!2692 = !DILocation(line: 775, column: 101, scope: !506)
!2693 = !DILocation(line: 775, column: 96, scope: !506)
!2694 = !DILocation(line: 775, column: 42, scope: !506)
!2695 = !DILocation(line: 775, column: 36, scope: !506)
!2696 = !DILocation(line: 775, column: 111, scope: !2697)
!2697 = !DILexicalBlockFile(scope: !506, file: !361, discriminator: 2)
!2698 = !DILocation(line: 775, column: 117, scope: !506)
!2699 = !DILocation(line: 775, column: 110, scope: !506)
!2700 = !DILocation(line: 775, column: 162, scope: !2701)
!2701 = !DILexicalBlockFile(scope: !506, file: !361, discriminator: 4)
!2702 = !DILocation(line: 775, column: 172, scope: !506)
!2703 = !DILocation(line: 775, column: 184, scope: !506)
!2704 = !DILocation(line: 775, column: 179, scope: !506)
!2705 = !DILocation(line: 775, column: 132, scope: !506)
!2706 = !DILocation(line: 775, column: 131, scope: !506)
!2707 = !DILocation(line: 775, column: 125, scope: !506)
!2708 = !DILocation(line: 775, column: 194, scope: !2709)
!2709 = !DILexicalBlockFile(scope: !506, file: !361, discriminator: 5)
!2710 = !DILocation(line: 775, column: 200, scope: !506)
!2711 = !DILocation(line: 775, column: 193, scope: !506)
!2712 = !DILocation(line: 775, column: 235, scope: !2713)
!2713 = !DILexicalBlockFile(scope: !506, file: !361, discriminator: 7)
!2714 = !DILocation(line: 775, column: 245, scope: !506)
!2715 = !DILocation(line: 775, column: 255, scope: !506)
!2716 = !DILocation(line: 775, column: 251, scope: !506)
!2717 = !DILocation(line: 775, column: 215, scope: !506)
!2718 = !DILocation(line: 775, column: 286, scope: !506)
!2719 = !DILocation(line: 775, column: 296, scope: !506)
!2720 = !DILocation(line: 775, column: 306, scope: !506)
!2721 = !DILocation(line: 775, column: 302, scope: !506)
!2722 = !DILocation(line: 775, column: 266, scope: !506)
!2723 = !DILocation(line: 775, column: 314, scope: !506)
!2724 = !DILocation(line: 775, column: 263, scope: !506)
!2725 = !DILocation(line: 775, column: 341, scope: !506)
!2726 = !DILocation(line: 775, column: 351, scope: !506)
!2727 = !DILocation(line: 775, column: 361, scope: !506)
!2728 = !DILocation(line: 775, column: 357, scope: !506)
!2729 = !DILocation(line: 775, column: 323, scope: !506)
!2730 = !DILocation(line: 775, column: 369, scope: !506)
!2731 = !DILocation(line: 775, column: 320, scope: !506)
!2732 = !DILocation(line: 775, column: 419, scope: !2733)
!2733 = !DILexicalBlockFile(scope: !506, file: !361, discriminator: 8)
!2734 = !DILocation(line: 775, column: 429, scope: !506)
!2735 = !DILocation(line: 775, column: 441, scope: !506)
!2736 = !DILocation(line: 775, column: 436, scope: !506)
!2737 = !DILocation(line: 775, column: 387, scope: !506)
!2738 = !DILocation(line: 775, column: 386, scope: !506)
!2739 = !DILocation(line: 775, column: 110, scope: !2740)
!2740 = !DILexicalBlockFile(scope: !2741, file: !361, discriminator: 10)
!2741 = !DILexicalBlockFile(scope: !506, file: !361, discriminator: 9)
!2742 = !DILocation(line: 775, column: 21, scope: !2743)
!2743 = !DILexicalBlockFile(scope: !2744, file: !361, discriminator: 11)
!2744 = !DILexicalBlockFile(scope: !506, file: !361, discriminator: 6)
!2745 = !DILocation(line: 775, column: 13, scope: !2746)
!2746 = !DILexicalBlockFile(scope: !2747, file: !361, discriminator: 12)
!2747 = !DILexicalBlockFile(scope: !506, file: !361, discriminator: 3)
!2748 = !DILocation(line: 776, column: 13, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !506, file: !361, line: 776, column: 13)
!2750 = !DILocation(line: 776, column: 20, scope: !2749)
!2751 = !DILocation(line: 776, column: 17, scope: !2749)
!2752 = !DILocation(line: 776, column: 13, scope: !506)
!2753 = !DILocation(line: 777, column: 20, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2749, file: !361, line: 776, column: 29)
!2755 = !DILocation(line: 777, column: 26, scope: !2754)
!2756 = !DILocation(line: 777, column: 24, scope: !2754)
!2757 = !DILocation(line: 777, column: 18, scope: !2754)
!2758 = !DILocation(line: 778, column: 17, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !2754, file: !361, line: 778, column: 17)
!2760 = !DILocation(line: 778, column: 30, scope: !2759)
!2761 = !DILocation(line: 778, column: 29, scope: !2759)
!2762 = !DILocation(line: 778, column: 26, scope: !2759)
!2763 = !DILocation(line: 778, column: 17, scope: !2754)
!2764 = !DILocation(line: 782, column: 21, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2766, file: !361, line: 782, column: 21)
!2766 = distinct !DILexicalBlock(scope: !2759, file: !361, line: 778, column: 36)
!2767 = !DILocation(line: 782, column: 21, scope: !2766)
!2768 = !DILocation(line: 783, column: 25, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2770, file: !361, line: 783, column: 25)
!2770 = distinct !DILexicalBlock(scope: !2765, file: !361, line: 782, column: 39)
!2771 = !DILocation(line: 783, column: 35, scope: !2769)
!2772 = !DILocation(line: 783, column: 33, scope: !2769)
!2773 = !DILocation(line: 783, column: 25, scope: !2770)
!2774 = !DILocation(line: 784, column: 55, scope: !2769)
!2775 = !DILocation(line: 785, column: 55, scope: !2769)
!2776 = !DILocation(line: 784, column: 67, scope: !2769)
!2777 = !DILocation(line: 784, column: 32, scope: !2769)
!2778 = !DILocation(line: 784, column: 29, scope: !2769)
!2779 = !DILocation(line: 784, column: 25, scope: !2769)
!2780 = !DILocation(line: 787, column: 55, scope: !2769)
!2781 = !DILocation(line: 788, column: 55, scope: !2769)
!2782 = !DILocation(line: 787, column: 63, scope: !2769)
!2783 = !DILocation(line: 787, column: 32, scope: !2769)
!2784 = !DILocation(line: 787, column: 29, scope: !2769)
!2785 = !DILocation(line: 789, column: 29, scope: !2770)
!2786 = !DILocation(line: 790, column: 17, scope: !2770)
!2787 = !DILocation(line: 791, column: 34, scope: !2766)
!2788 = !DILocation(line: 792, column: 31, scope: !2766)
!2789 = !DILocation(line: 792, column: 29, scope: !2766)
!2790 = !DILocation(line: 793, column: 13, scope: !2766)
!2791 = !DILocation(line: 794, column: 23, scope: !2754)
!2792 = !DILocation(line: 794, column: 21, scope: !2754)
!2793 = !DILocation(line: 795, column: 24, scope: !2754)
!2794 = !DILocation(line: 795, column: 22, scope: !2754)
!2795 = !DILocation(line: 796, column: 9, scope: !2754)
!2796 = !DILocation(line: 797, column: 5, scope: !507)
!2797 = !DILocation(line: 797, column: 5, scope: !506)
!2798 = !DILocation(line: 774, column: 45, scope: !507)
!2799 = !DILocation(line: 774, column: 42, scope: !507)
!2800 = !DILocation(line: 774, column: 5, scope: !507)
!2801 = !DILocation(line: 798, column: 10, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !491, file: !361, line: 798, column: 10)
!2803 = !DILocation(line: 798, column: 19, scope: !2802)
!2804 = !DILocation(line: 798, column: 10, scope: !491)
!2805 = !DILocation(line: 799, column: 13, scope: !2802)
!2806 = !DILocation(line: 799, column: 9, scope: !2802)
!2807 = !DILocation(line: 801, column: 30, scope: !2802)
!2808 = !DILocation(line: 801, column: 44, scope: !2802)
!2809 = !DILocation(line: 801, column: 36, scope: !2802)
!2810 = !DILocation(line: 801, column: 34, scope: !2802)
!2811 = !DILocation(line: 801, column: 15, scope: !2802)
!2812 = !DILocation(line: 801, column: 13, scope: !2802)
!2813 = !DILocation(line: 802, column: 36, scope: !491)
!2814 = !DILocation(line: 802, column: 12, scope: !491)
!2815 = !DILocation(line: 802, column: 5, scope: !491)
!2816 = !DILocation(line: 803, column: 1, scope: !491)
!2817 = !DILocation(line: 523, column: 31, scope: !516)
!2818 = !DILocation(line: 523, column: 50, scope: !516)
!2819 = !DILocation(line: 523, column: 64, scope: !516)
!2820 = !DILocation(line: 526, column: 5, scope: !516)
!2821 = !DILocation(line: 526, column: 16, scope: !516)
!2822 = !DILocation(line: 527, column: 5, scope: !516)
!2823 = !DILocation(line: 527, column: 18, scope: !516)
!2824 = !DILocation(line: 528, column: 5, scope: !516)
!2825 = !DILocation(line: 528, column: 12, scope: !516)
!2826 = !DILocation(line: 530, column: 35, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !516, file: !361, line: 530, column: 9)
!2828 = !DILocation(line: 530, column: 45, scope: !2827)
!2829 = !DILocation(line: 530, column: 50, scope: !2827)
!2830 = !DILocation(line: 530, column: 10, scope: !2827)
!2831 = !DILocation(line: 530, column: 9, scope: !516)
!2832 = !DILocation(line: 531, column: 9, scope: !2827)
!2833 = !DILocation(line: 532, column: 12, scope: !527)
!2834 = !DILocation(line: 532, column: 10, scope: !527)
!2835 = !DILocation(line: 532, column: 17, scope: !2836)
!2836 = !DILexicalBlockFile(scope: !2837, file: !361, discriminator: 2)
!2837 = !DILexicalBlockFile(scope: !526, file: !361, discriminator: 1)
!2838 = !DILocation(line: 532, column: 21, scope: !526)
!2839 = !DILocation(line: 532, column: 31, scope: !526)
!2840 = !DILocation(line: 532, column: 19, scope: !526)
!2841 = !DILocation(line: 532, column: 5, scope: !527)
!2842 = !DILocation(line: 533, column: 9, scope: !525)
!2843 = !DILocation(line: 533, column: 16, scope: !525)
!2844 = !DILocation(line: 533, column: 25, scope: !525)
!2845 = !DILocation(line: 533, column: 31, scope: !525)
!2846 = !DILocation(line: 533, column: 24, scope: !525)
!2847 = !DILocation(line: 533, column: 82, scope: !2848)
!2848 = !DILexicalBlockFile(scope: !525, file: !361, discriminator: 1)
!2849 = !DILocation(line: 533, column: 92, scope: !525)
!2850 = !DILocation(line: 533, column: 104, scope: !525)
!2851 = !DILocation(line: 533, column: 99, scope: !525)
!2852 = !DILocation(line: 533, column: 45, scope: !525)
!2853 = !DILocation(line: 533, column: 39, scope: !525)
!2854 = !DILocation(line: 533, column: 114, scope: !2855)
!2855 = !DILexicalBlockFile(scope: !525, file: !361, discriminator: 2)
!2856 = !DILocation(line: 533, column: 120, scope: !525)
!2857 = !DILocation(line: 533, column: 113, scope: !525)
!2858 = !DILocation(line: 533, column: 165, scope: !2859)
!2859 = !DILexicalBlockFile(scope: !525, file: !361, discriminator: 4)
!2860 = !DILocation(line: 533, column: 175, scope: !525)
!2861 = !DILocation(line: 533, column: 187, scope: !525)
!2862 = !DILocation(line: 533, column: 182, scope: !525)
!2863 = !DILocation(line: 533, column: 135, scope: !525)
!2864 = !DILocation(line: 533, column: 134, scope: !525)
!2865 = !DILocation(line: 533, column: 128, scope: !525)
!2866 = !DILocation(line: 533, column: 197, scope: !2867)
!2867 = !DILexicalBlockFile(scope: !525, file: !361, discriminator: 5)
!2868 = !DILocation(line: 533, column: 203, scope: !525)
!2869 = !DILocation(line: 533, column: 196, scope: !525)
!2870 = !DILocation(line: 533, column: 238, scope: !2871)
!2871 = !DILexicalBlockFile(scope: !525, file: !361, discriminator: 7)
!2872 = !DILocation(line: 533, column: 248, scope: !525)
!2873 = !DILocation(line: 533, column: 258, scope: !525)
!2874 = !DILocation(line: 533, column: 254, scope: !525)
!2875 = !DILocation(line: 533, column: 218, scope: !525)
!2876 = !DILocation(line: 533, column: 289, scope: !525)
!2877 = !DILocation(line: 533, column: 299, scope: !525)
!2878 = !DILocation(line: 533, column: 309, scope: !525)
!2879 = !DILocation(line: 533, column: 305, scope: !525)
!2880 = !DILocation(line: 533, column: 269, scope: !525)
!2881 = !DILocation(line: 533, column: 317, scope: !525)
!2882 = !DILocation(line: 533, column: 266, scope: !525)
!2883 = !DILocation(line: 533, column: 344, scope: !525)
!2884 = !DILocation(line: 533, column: 354, scope: !525)
!2885 = !DILocation(line: 533, column: 364, scope: !525)
!2886 = !DILocation(line: 533, column: 360, scope: !525)
!2887 = !DILocation(line: 533, column: 326, scope: !525)
!2888 = !DILocation(line: 533, column: 372, scope: !525)
!2889 = !DILocation(line: 533, column: 323, scope: !525)
!2890 = !DILocation(line: 533, column: 422, scope: !2891)
!2891 = !DILexicalBlockFile(scope: !525, file: !361, discriminator: 8)
!2892 = !DILocation(line: 533, column: 432, scope: !525)
!2893 = !DILocation(line: 533, column: 444, scope: !525)
!2894 = !DILocation(line: 533, column: 439, scope: !525)
!2895 = !DILocation(line: 533, column: 390, scope: !525)
!2896 = !DILocation(line: 533, column: 389, scope: !525)
!2897 = !DILocation(line: 533, column: 113, scope: !2898)
!2898 = !DILexicalBlockFile(scope: !2899, file: !361, discriminator: 10)
!2899 = !DILexicalBlockFile(scope: !525, file: !361, discriminator: 9)
!2900 = !DILocation(line: 533, column: 24, scope: !2901)
!2901 = !DILexicalBlockFile(scope: !2902, file: !361, discriminator: 11)
!2902 = !DILexicalBlockFile(scope: !525, file: !361, discriminator: 6)
!2903 = !DILocation(line: 533, column: 22, scope: !2904)
!2904 = !DILexicalBlockFile(scope: !2905, file: !361, discriminator: 12)
!2905 = !DILexicalBlockFile(scope: !525, file: !361, discriminator: 3)
!2906 = !DILocation(line: 534, column: 24, scope: !525)
!2907 = !DILocation(line: 534, column: 28, scope: !525)
!2908 = !DILocation(line: 534, column: 27, scope: !525)
!2909 = !DILocation(line: 534, column: 21, scope: !525)
!2910 = !DILocation(line: 535, column: 5, scope: !526)
!2911 = !DILocation(line: 535, column: 5, scope: !525)
!2912 = !DILocation(line: 532, column: 41, scope: !526)
!2913 = !DILocation(line: 532, column: 38, scope: !526)
!2914 = !DILocation(line: 532, column: 5, scope: !526)
!2915 = !DILocation(line: 536, column: 9, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !516, file: !361, line: 536, column: 9)
!2917 = !DILocation(line: 536, column: 19, scope: !2916)
!2918 = !DILocation(line: 536, column: 23, scope: !2916)
!2919 = !DILocation(line: 536, column: 9, scope: !516)
!2920 = !DILocation(line: 537, column: 13, scope: !2916)
!2921 = !DILocation(line: 537, column: 9, scope: !2916)
!2922 = !DILocation(line: 539, column: 34, scope: !2916)
!2923 = !DILocation(line: 539, column: 57, scope: !2916)
!2924 = !DILocation(line: 539, column: 67, scope: !2916)
!2925 = !DILocation(line: 539, column: 71, scope: !2916)
!2926 = !DILocation(line: 539, column: 70, scope: !2916)
!2927 = !DILocation(line: 539, column: 48, scope: !2916)
!2928 = !DILocation(line: 539, column: 46, scope: !2916)
!2929 = !DILocation(line: 539, column: 29, scope: !2916)
!2930 = !DILocation(line: 539, column: 15, scope: !2916)
!2931 = !DILocation(line: 539, column: 13, scope: !2916)
!2932 = !DILocation(line: 540, column: 36, scope: !516)
!2933 = !DILocation(line: 540, column: 12, scope: !516)
!2934 = !DILocation(line: 540, column: 5, scope: !516)
!2935 = !DILocation(line: 541, column: 1, scope: !516)
!2936 = !DILocation(line: 597, column: 35, scope: !535)
!2937 = !DILocation(line: 597, column: 54, scope: !535)
!2938 = !DILocation(line: 597, column: 75, scope: !535)
!2939 = !DILocation(line: 600, column: 5, scope: !535)
!2940 = !DILocation(line: 600, column: 18, scope: !535)
!2941 = !DILocation(line: 600, column: 24, scope: !535)
!2942 = !DILocation(line: 601, column: 5, scope: !535)
!2943 = !DILocation(line: 601, column: 16, scope: !535)
!2944 = !DILocation(line: 601, column: 22, scope: !535)
!2945 = !DILocation(line: 602, column: 5, scope: !535)
!2946 = !DILocation(line: 602, column: 16, scope: !535)
!2947 = !DILocation(line: 602, column: 19, scope: !535)
!2948 = !DILocation(line: 603, column: 5, scope: !535)
!2949 = !DILocation(line: 603, column: 12, scope: !535)
!2950 = !DILocation(line: 603, column: 19, scope: !535)
!2951 = !DILocation(line: 604, column: 5, scope: !535)
!2952 = !DILocation(line: 604, column: 12, scope: !535)
!2953 = !DILocation(line: 604, column: 22, scope: !535)
!2954 = !DILocation(line: 604, column: 33, scope: !535)
!2955 = !DILocation(line: 604, column: 45, scope: !535)
!2956 = !DILocation(line: 604, column: 53, scope: !535)
!2957 = !DILocation(line: 604, column: 66, scope: !535)
!2958 = !DILocation(line: 606, column: 9, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !535, file: !361, line: 606, column: 9)
!2960 = !DILocation(line: 606, column: 19, scope: !2959)
!2961 = !DILocation(line: 606, column: 23, scope: !2959)
!2962 = !DILocation(line: 606, column: 27, scope: !2959)
!2963 = !DILocation(line: 606, column: 30, scope: !2964)
!2964 = !DILexicalBlockFile(scope: !2959, file: !361, discriminator: 1)
!2965 = !DILocation(line: 606, column: 41, scope: !2959)
!2966 = !DILocation(line: 606, column: 45, scope: !2959)
!2967 = !DILocation(line: 606, column: 9, scope: !535)
!2968 = !DILocation(line: 607, column: 25, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2959, file: !361, line: 606, column: 50)
!2970 = !DILocation(line: 607, column: 9, scope: !2969)
!2971 = !DILocation(line: 608, column: 9, scope: !2969)
!2972 = !DILocation(line: 610, column: 26, scope: !535)
!2973 = !DILocation(line: 610, column: 36, scope: !535)
!2974 = !DILocation(line: 610, column: 11, scope: !535)
!2975 = !DILocation(line: 610, column: 9, scope: !535)
!2976 = !DILocation(line: 611, column: 12, scope: !535)
!2977 = !DILocation(line: 611, column: 22, scope: !535)
!2978 = !DILocation(line: 611, column: 26, scope: !535)
!2979 = !DILocation(line: 611, column: 10, scope: !535)
!2980 = !DILocation(line: 612, column: 26, scope: !535)
!2981 = !DILocation(line: 612, column: 37, scope: !535)
!2982 = !DILocation(line: 612, column: 11, scope: !535)
!2983 = !DILocation(line: 612, column: 9, scope: !535)
!2984 = !DILocation(line: 613, column: 12, scope: !535)
!2985 = !DILocation(line: 613, column: 23, scope: !535)
!2986 = !DILocation(line: 613, column: 27, scope: !535)
!2987 = !DILocation(line: 613, column: 10, scope: !535)
!2988 = !DILocation(line: 615, column: 9, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !535, file: !361, line: 615, column: 9)
!2990 = !DILocation(line: 615, column: 16, scope: !2989)
!2991 = !DILocation(line: 615, column: 14, scope: !2989)
!2992 = !DILocation(line: 615, column: 9, scope: !535)
!2993 = !DILocation(line: 616, column: 25, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !2989, file: !361, line: 615, column: 22)
!2995 = !DILocation(line: 616, column: 9, scope: !2994)
!2996 = !DILocation(line: 617, column: 9, scope: !2994)
!2997 = !DILocation(line: 619, column: 22, scope: !535)
!2998 = !DILocation(line: 619, column: 27, scope: !535)
!2999 = !DILocation(line: 619, column: 32, scope: !535)
!3000 = !DILocation(line: 619, column: 16, scope: !535)
!3001 = !DILocation(line: 619, column: 14, scope: !535)
!3002 = !DILocation(line: 620, column: 23, scope: !535)
!3003 = !DILocation(line: 620, column: 28, scope: !535)
!3004 = !DILocation(line: 620, column: 33, scope: !535)
!3005 = !DILocation(line: 620, column: 17, scope: !535)
!3006 = !DILocation(line: 620, column: 15, scope: !535)
!3007 = !DILocation(line: 621, column: 24, scope: !535)
!3008 = !DILocation(line: 621, column: 29, scope: !535)
!3009 = !DILocation(line: 621, column: 34, scope: !535)
!3010 = !DILocation(line: 621, column: 18, scope: !535)
!3011 = !DILocation(line: 621, column: 16, scope: !535)
!3012 = !DILocation(line: 623, column: 15, scope: !535)
!3013 = !DILocation(line: 623, column: 24, scope: !535)
!3014 = !DILocation(line: 623, column: 23, scope: !535)
!3015 = !DILocation(line: 623, column: 36, scope: !535)
!3016 = !DILocation(line: 623, column: 47, scope: !535)
!3017 = !DILocation(line: 623, column: 46, scope: !535)
!3018 = !DILocation(line: 623, column: 34, scope: !535)
!3019 = !DILocation(line: 623, column: 61, scope: !535)
!3020 = !DILocation(line: 623, column: 59, scope: !535)
!3021 = !DILocation(line: 623, column: 12, scope: !535)
!3022 = !DILocation(line: 625, column: 19, scope: !535)
!3023 = !DILocation(line: 625, column: 17, scope: !535)
!3024 = !DILocation(line: 626, column: 12, scope: !535)
!3025 = !DILocation(line: 628, column: 12, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !535, file: !361, line: 628, column: 5)
!3027 = !DILocation(line: 628, column: 11, scope: !3026)
!3028 = !DILocation(line: 628, column: 16, scope: !3029)
!3029 = !DILexicalBlockFile(scope: !3030, file: !361, discriminator: 2)
!3030 = !DILexicalBlockFile(scope: !3031, file: !361, discriminator: 1)
!3031 = distinct !DILexicalBlock(scope: !3026, file: !361, line: 628, column: 5)
!3032 = !DILocation(line: 628, column: 19, scope: !3031)
!3033 = !DILocation(line: 628, column: 24, scope: !3031)
!3034 = !DILocation(line: 628, column: 23, scope: !3031)
!3035 = !DILocation(line: 628, column: 17, scope: !3031)
!3036 = !DILocation(line: 628, column: 5, scope: !3026)
!3037 = !DILocation(line: 629, column: 29, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3031, file: !361, line: 628, column: 35)
!3039 = !DILocation(line: 629, column: 30, scope: !3038)
!3040 = !DILocation(line: 629, column: 25, scope: !3038)
!3041 = !DILocation(line: 629, column: 17, scope: !3038)
!3042 = !DILocation(line: 629, column: 15, scope: !3038)
!3043 = !DILocation(line: 630, column: 30, scope: !3038)
!3044 = !DILocation(line: 630, column: 32, scope: !3038)
!3045 = !DILocation(line: 630, column: 31, scope: !3038)
!3046 = !DILocation(line: 630, column: 36, scope: !3038)
!3047 = !DILocation(line: 630, column: 26, scope: !3038)
!3048 = !DILocation(line: 630, column: 18, scope: !3038)
!3049 = !DILocation(line: 630, column: 16, scope: !3038)
!3050 = !DILocation(line: 632, column: 21, scope: !3038)
!3051 = !DILocation(line: 632, column: 33, scope: !3038)
!3052 = !DILocation(line: 632, column: 40, scope: !3038)
!3053 = !DILocation(line: 632, column: 39, scope: !3038)
!3054 = !DILocation(line: 632, column: 31, scope: !3038)
!3055 = !DILocation(line: 632, column: 49, scope: !3038)
!3056 = !DILocation(line: 632, column: 55, scope: !3038)
!3057 = !DILocation(line: 632, column: 54, scope: !3038)
!3058 = !DILocation(line: 632, column: 47, scope: !3038)
!3059 = !DILocation(line: 632, column: 19, scope: !3038)
!3060 = !DILocation(line: 633, column: 28, scope: !3038)
!3061 = !DILocation(line: 633, column: 32, scope: !3038)
!3062 = !DILocation(line: 633, column: 31, scope: !3038)
!3063 = !DILocation(line: 633, column: 35, scope: !3038)
!3064 = !DILocation(line: 633, column: 40, scope: !3038)
!3065 = !DILocation(line: 633, column: 22, scope: !3038)
!3066 = !DILocation(line: 633, column: 20, scope: !3038)
!3067 = !DILocation(line: 635, column: 19, scope: !3038)
!3068 = !DILocation(line: 635, column: 28, scope: !3038)
!3069 = !DILocation(line: 635, column: 27, scope: !3038)
!3070 = !DILocation(line: 635, column: 40, scope: !3038)
!3071 = !DILocation(line: 635, column: 51, scope: !3038)
!3072 = !DILocation(line: 635, column: 50, scope: !3038)
!3073 = !DILocation(line: 635, column: 38, scope: !3038)
!3074 = !DILocation(line: 636, column: 15, scope: !3038)
!3075 = !DILocation(line: 636, column: 13, scope: !3038)
!3076 = !DILocation(line: 635, column: 16, scope: !3038)
!3077 = !DILocation(line: 638, column: 14, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3038, file: !361, line: 638, column: 14)
!3079 = !DILocation(line: 638, column: 23, scope: !3078)
!3080 = !DILocation(line: 638, column: 21, scope: !3078)
!3081 = !DILocation(line: 638, column: 14, scope: !3038)
!3082 = !DILocation(line: 639, column: 27, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3078, file: !361, line: 638, column: 37)
!3084 = !DILocation(line: 639, column: 25, scope: !3083)
!3085 = !DILocation(line: 640, column: 22, scope: !3083)
!3086 = !DILocation(line: 640, column: 20, scope: !3083)
!3087 = !DILocation(line: 641, column: 9, scope: !3083)
!3088 = !DILocation(line: 643, column: 5, scope: !3038)
!3089 = !DILocation(line: 628, column: 31, scope: !3031)
!3090 = !DILocation(line: 628, column: 5, scope: !3031)
!3091 = !DILocation(line: 645, column: 20, scope: !535)
!3092 = !DILocation(line: 645, column: 24, scope: !535)
!3093 = !DILocation(line: 645, column: 23, scope: !535)
!3094 = !DILocation(line: 645, column: 32, scope: !535)
!3095 = !DILocation(line: 645, column: 37, scope: !535)
!3096 = !DILocation(line: 645, column: 14, scope: !535)
!3097 = !DILocation(line: 645, column: 45, scope: !535)
!3098 = !DILocation(line: 645, column: 43, scope: !535)
!3099 = !DILocation(line: 645, column: 12, scope: !535)
!3100 = !DILocation(line: 647, column: 41, scope: !535)
!3101 = !DILocation(line: 647, column: 49, scope: !535)
!3102 = !DILocation(line: 647, column: 12, scope: !535)
!3103 = !DILocation(line: 647, column: 5, scope: !535)
!3104 = !DILocation(line: 648, column: 1, scope: !535)
!3105 = !DILocation(line: 543, column: 34, scope: !556)
!3106 = !DILocation(line: 543, column: 50, scope: !556)
!3107 = !DILocation(line: 543, column: 64, scope: !556)
!3108 = !DILocation(line: 545, column: 5, scope: !556)
!3109 = !DILocation(line: 545, column: 16, scope: !556)
!3110 = !DILocation(line: 546, column: 5, scope: !556)
!3111 = !DILocation(line: 546, column: 12, scope: !556)
!3112 = !DILocation(line: 548, column: 11, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !556, file: !361, line: 548, column: 5)
!3114 = !DILocation(line: 548, column: 10, scope: !3113)
!3115 = !DILocation(line: 548, column: 15, scope: !3116)
!3116 = !DILexicalBlockFile(scope: !3117, file: !361, discriminator: 2)
!3117 = !DILexicalBlockFile(scope: !3118, file: !361, discriminator: 1)
!3118 = distinct !DILexicalBlock(scope: !3113, file: !361, line: 548, column: 5)
!3119 = !DILocation(line: 548, column: 17, scope: !3118)
!3120 = !DILocation(line: 548, column: 16, scope: !3118)
!3121 = !DILocation(line: 548, column: 5, scope: !3113)
!3122 = !DILocation(line: 549, column: 15, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3118, file: !361, line: 548, column: 27)
!3124 = !DILocation(line: 549, column: 31, scope: !3123)
!3125 = !DILocation(line: 549, column: 29, scope: !3123)
!3126 = !DILocation(line: 549, column: 21, scope: !3123)
!3127 = !DILocation(line: 549, column: 44, scope: !3123)
!3128 = !DILocation(line: 549, column: 42, scope: !3123)
!3129 = !DILocation(line: 549, column: 34, scope: !3123)
!3130 = !DILocation(line: 549, column: 33, scope: !3123)
!3131 = !DILocation(line: 549, column: 19, scope: !3123)
!3132 = !DILocation(line: 549, column: 13, scope: !3123)
!3133 = !DILocation(line: 550, column: 5, scope: !3123)
!3134 = !DILocation(line: 548, column: 23, scope: !3118)
!3135 = !DILocation(line: 548, column: 5, scope: !3118)
!3136 = !DILocation(line: 551, column: 12, scope: !556)
!3137 = !DILocation(line: 552, column: 1, scope: !556)
!3138 = !DILocation(line: 551, column: 5, scope: !556)
!3139 = !DILocation(line: 706, column: 35, scope: !572)
!3140 = !DILocation(line: 706, column: 54, scope: !572)
!3141 = !DILocation(line: 706, column: 75, scope: !572)
!3142 = !DILocation(line: 709, column: 5, scope: !572)
!3143 = !DILocation(line: 709, column: 18, scope: !572)
!3144 = !DILocation(line: 710, column: 5, scope: !572)
!3145 = !DILocation(line: 710, column: 16, scope: !572)
!3146 = !DILocation(line: 711, column: 5, scope: !572)
!3147 = !DILocation(line: 711, column: 16, scope: !572)
!3148 = !DILocation(line: 711, column: 19, scope: !572)
!3149 = !DILocation(line: 712, column: 5, scope: !572)
!3150 = !DILocation(line: 712, column: 12, scope: !572)
!3151 = !DILocation(line: 712, column: 19, scope: !572)
!3152 = !DILocation(line: 713, column: 5, scope: !572)
!3153 = !DILocation(line: 713, column: 12, scope: !572)
!3154 = !DILocation(line: 713, column: 20, scope: !572)
!3155 = !DILocation(line: 715, column: 9, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !572, file: !361, line: 715, column: 9)
!3157 = !DILocation(line: 715, column: 19, scope: !3156)
!3158 = !DILocation(line: 715, column: 23, scope: !3156)
!3159 = !DILocation(line: 715, column: 9, scope: !572)
!3160 = !DILocation(line: 716, column: 25, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3156, file: !361, line: 715, column: 28)
!3162 = !DILocation(line: 716, column: 9, scope: !3161)
!3163 = !DILocation(line: 717, column: 9, scope: !3161)
!3164 = !DILocation(line: 719, column: 26, scope: !572)
!3165 = !DILocation(line: 719, column: 36, scope: !572)
!3166 = !DILocation(line: 719, column: 11, scope: !572)
!3167 = !DILocation(line: 719, column: 9, scope: !572)
!3168 = !DILocation(line: 720, column: 12, scope: !572)
!3169 = !DILocation(line: 720, column: 22, scope: !572)
!3170 = !DILocation(line: 720, column: 26, scope: !572)
!3171 = !DILocation(line: 720, column: 10, scope: !572)
!3172 = !DILocation(line: 722, column: 9, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !572, file: !361, line: 722, column: 9)
!3174 = !DILocation(line: 722, column: 16, scope: !3173)
!3175 = !DILocation(line: 722, column: 20, scope: !3173)
!3176 = !DILocation(line: 722, column: 23, scope: !3177)
!3177 = !DILexicalBlockFile(scope: !3173, file: !361, discriminator: 1)
!3178 = !DILocation(line: 722, column: 30, scope: !3173)
!3179 = !DILocation(line: 722, column: 28, scope: !3173)
!3180 = !DILocation(line: 722, column: 9, scope: !572)
!3181 = !DILocation(line: 723, column: 25, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3173, file: !361, line: 722, column: 38)
!3183 = !DILocation(line: 723, column: 9, scope: !3182)
!3184 = !DILocation(line: 724, column: 9, scope: !3182)
!3185 = !DILocation(line: 727, column: 20, scope: !572)
!3186 = !DILocation(line: 727, column: 25, scope: !572)
!3187 = !DILocation(line: 727, column: 30, scope: !572)
!3188 = !DILocation(line: 727, column: 14, scope: !572)
!3189 = !DILocation(line: 727, column: 12, scope: !572)
!3190 = !DILocation(line: 729, column: 19, scope: !572)
!3191 = !DILocation(line: 729, column: 17, scope: !572)
!3192 = !DILocation(line: 730, column: 12, scope: !572)
!3193 = !DILocation(line: 732, column: 12, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !572, file: !361, line: 732, column: 5)
!3195 = !DILocation(line: 732, column: 11, scope: !3194)
!3196 = !DILocation(line: 732, column: 16, scope: !3197)
!3197 = !DILexicalBlockFile(scope: !3198, file: !361, discriminator: 2)
!3198 = !DILexicalBlockFile(scope: !3199, file: !361, discriminator: 1)
!3199 = distinct !DILexicalBlock(scope: !3194, file: !361, line: 732, column: 5)
!3200 = !DILocation(line: 732, column: 19, scope: !3199)
!3201 = !DILocation(line: 732, column: 24, scope: !3199)
!3202 = !DILocation(line: 732, column: 23, scope: !3199)
!3203 = !DILocation(line: 732, column: 17, scope: !3199)
!3204 = !DILocation(line: 732, column: 5, scope: !3194)
!3205 = !DILocation(line: 733, column: 29, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3199, file: !361, line: 732, column: 37)
!3207 = !DILocation(line: 733, column: 30, scope: !3206)
!3208 = !DILocation(line: 733, column: 25, scope: !3206)
!3209 = !DILocation(line: 733, column: 17, scope: !3206)
!3210 = !DILocation(line: 733, column: 15, scope: !3206)
!3211 = !DILocation(line: 734, column: 30, scope: !3206)
!3212 = !DILocation(line: 734, column: 32, scope: !3206)
!3213 = !DILocation(line: 734, column: 31, scope: !3206)
!3214 = !DILocation(line: 734, column: 38, scope: !3206)
!3215 = !DILocation(line: 734, column: 26, scope: !3206)
!3216 = !DILocation(line: 734, column: 18, scope: !3206)
!3217 = !DILocation(line: 734, column: 16, scope: !3206)
!3218 = !DILocation(line: 736, column: 18, scope: !3206)
!3219 = !DILocation(line: 736, column: 27, scope: !3206)
!3220 = !DILocation(line: 736, column: 34, scope: !3206)
!3221 = !DILocation(line: 736, column: 33, scope: !3206)
!3222 = !DILocation(line: 736, column: 25, scope: !3206)
!3223 = !DILocation(line: 736, column: 43, scope: !3206)
!3224 = !DILocation(line: 736, column: 49, scope: !3206)
!3225 = !DILocation(line: 736, column: 48, scope: !3206)
!3226 = !DILocation(line: 736, column: 41, scope: !3206)
!3227 = !DILocation(line: 736, column: 16, scope: !3206)
!3228 = !DILocation(line: 738, column: 14, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3206, file: !361, line: 738, column: 14)
!3230 = !DILocation(line: 738, column: 23, scope: !3229)
!3231 = !DILocation(line: 738, column: 21, scope: !3229)
!3232 = !DILocation(line: 738, column: 14, scope: !3206)
!3233 = !DILocation(line: 739, column: 27, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3229, file: !361, line: 738, column: 37)
!3235 = !DILocation(line: 739, column: 25, scope: !3234)
!3236 = !DILocation(line: 740, column: 22, scope: !3234)
!3237 = !DILocation(line: 740, column: 20, scope: !3234)
!3238 = !DILocation(line: 741, column: 9, scope: !3234)
!3239 = !DILocation(line: 743, column: 5, scope: !3206)
!3240 = !DILocation(line: 732, column: 33, scope: !3199)
!3241 = !DILocation(line: 732, column: 5, scope: !3199)
!3242 = !DILocation(line: 745, column: 31, scope: !572)
!3243 = !DILocation(line: 745, column: 12, scope: !572)
!3244 = !DILocation(line: 745, column: 5, scope: !572)
!3245 = !DILocation(line: 746, column: 1, scope: !572)
!3246 = !DILocation(line: 665, column: 38, scope: !594)
!3247 = !DILocation(line: 665, column: 57, scope: !594)
!3248 = !DILocation(line: 665, column: 78, scope: !594)
!3249 = !DILocation(line: 668, column: 5, scope: !594)
!3250 = !DILocation(line: 668, column: 18, scope: !594)
!3251 = !DILocation(line: 668, column: 24, scope: !594)
!3252 = !DILocation(line: 669, column: 5, scope: !594)
!3253 = !DILocation(line: 669, column: 16, scope: !594)
!3254 = !DILocation(line: 670, column: 5, scope: !594)
!3255 = !DILocation(line: 670, column: 12, scope: !594)
!3256 = !DILocation(line: 670, column: 22, scope: !594)
!3257 = !DILocation(line: 670, column: 34, scope: !594)
!3258 = !DILocation(line: 672, column: 9, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !594, file: !361, line: 672, column: 9)
!3260 = !DILocation(line: 672, column: 19, scope: !3259)
!3261 = !DILocation(line: 672, column: 23, scope: !3259)
!3262 = !DILocation(line: 672, column: 27, scope: !3259)
!3263 = !DILocation(line: 672, column: 30, scope: !3264)
!3264 = !DILexicalBlockFile(scope: !3259, file: !361, discriminator: 1)
!3265 = !DILocation(line: 672, column: 41, scope: !3259)
!3266 = !DILocation(line: 672, column: 45, scope: !3259)
!3267 = !DILocation(line: 672, column: 9, scope: !594)
!3268 = !DILocation(line: 673, column: 25, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3259, file: !361, line: 672, column: 50)
!3270 = !DILocation(line: 673, column: 9, scope: !3269)
!3271 = !DILocation(line: 674, column: 9, scope: !3269)
!3272 = !DILocation(line: 676, column: 9, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !594, file: !361, line: 676, column: 9)
!3274 = !DILocation(line: 676, column: 19, scope: !3273)
!3275 = !DILocation(line: 676, column: 26, scope: !3273)
!3276 = !DILocation(line: 676, column: 37, scope: !3273)
!3277 = !DILocation(line: 676, column: 23, scope: !3273)
!3278 = !DILocation(line: 676, column: 9, scope: !594)
!3279 = !DILocation(line: 677, column: 25, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3273, file: !361, line: 676, column: 42)
!3281 = !DILocation(line: 677, column: 9, scope: !3280)
!3282 = !DILocation(line: 678, column: 9, scope: !3280)
!3283 = !DILocation(line: 680, column: 26, scope: !594)
!3284 = !DILocation(line: 680, column: 36, scope: !594)
!3285 = !DILocation(line: 680, column: 11, scope: !594)
!3286 = !DILocation(line: 680, column: 9, scope: !594)
!3287 = !DILocation(line: 681, column: 26, scope: !594)
!3288 = !DILocation(line: 681, column: 37, scope: !594)
!3289 = !DILocation(line: 681, column: 11, scope: !594)
!3290 = !DILocation(line: 681, column: 9, scope: !594)
!3291 = !DILocation(line: 682, column: 11, scope: !594)
!3292 = !DILocation(line: 682, column: 21, scope: !594)
!3293 = !DILocation(line: 682, column: 25, scope: !594)
!3294 = !DILocation(line: 682, column: 9, scope: !594)
!3295 = !DILocation(line: 683, column: 22, scope: !594)
!3296 = !DILocation(line: 683, column: 27, scope: !594)
!3297 = !DILocation(line: 683, column: 32, scope: !594)
!3298 = !DILocation(line: 683, column: 16, scope: !594)
!3299 = !DILocation(line: 683, column: 14, scope: !594)
!3300 = !DILocation(line: 684, column: 24, scope: !594)
!3301 = !DILocation(line: 684, column: 29, scope: !594)
!3302 = !DILocation(line: 684, column: 34, scope: !594)
!3303 = !DILocation(line: 684, column: 18, scope: !594)
!3304 = !DILocation(line: 684, column: 16, scope: !594)
!3305 = !DILocation(line: 686, column: 14, scope: !594)
!3306 = !DILocation(line: 686, column: 27, scope: !594)
!3307 = !DILocation(line: 686, column: 25, scope: !594)
!3308 = !DILocation(line: 686, column: 12, scope: !594)
!3309 = !DILocation(line: 688, column: 31, scope: !594)
!3310 = !DILocation(line: 688, column: 12, scope: !594)
!3311 = !DILocation(line: 688, column: 5, scope: !594)
!3312 = !DILocation(line: 689, column: 1, scope: !594)
!3313 = !DILocation(line: 869, column: 33, scope: !612)
!3314 = !DILocation(line: 869, column: 52, scope: !612)
!3315 = !DILocation(line: 869, column: 66, scope: !612)
!3316 = !DILocation(line: 872, column: 5, scope: !612)
!3317 = !DILocation(line: 872, column: 16, scope: !612)
!3318 = !DILocation(line: 873, column: 5, scope: !612)
!3319 = !DILocation(line: 873, column: 9, scope: !612)
!3320 = !DILocation(line: 874, column: 5, scope: !612)
!3321 = !DILocation(line: 874, column: 16, scope: !612)
!3322 = !DILocation(line: 876, column: 35, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !612, file: !361, line: 876, column: 9)
!3324 = !DILocation(line: 876, column: 45, scope: !3323)
!3325 = !DILocation(line: 876, column: 50, scope: !3323)
!3326 = !DILocation(line: 876, column: 10, scope: !3323)
!3327 = !DILocation(line: 876, column: 9, scope: !612)
!3328 = !DILocation(line: 877, column: 9, scope: !3323)
!3329 = !DILocation(line: 878, column: 12, scope: !612)
!3330 = !DILocation(line: 879, column: 13, scope: !612)
!3331 = !DILocation(line: 880, column: 12, scope: !623)
!3332 = !DILocation(line: 880, column: 10, scope: !623)
!3333 = !DILocation(line: 880, column: 17, scope: !3334)
!3334 = !DILexicalBlockFile(scope: !3335, file: !361, discriminator: 2)
!3335 = !DILexicalBlockFile(scope: !622, file: !361, discriminator: 1)
!3336 = !DILocation(line: 880, column: 21, scope: !622)
!3337 = !DILocation(line: 880, column: 31, scope: !622)
!3338 = !DILocation(line: 880, column: 19, scope: !622)
!3339 = !DILocation(line: 880, column: 5, scope: !623)
!3340 = !DILocation(line: 881, column: 9, scope: !621)
!3341 = !DILocation(line: 881, column: 13, scope: !621)
!3342 = !DILocation(line: 881, column: 22, scope: !621)
!3343 = !DILocation(line: 881, column: 28, scope: !621)
!3344 = !DILocation(line: 881, column: 21, scope: !621)
!3345 = !DILocation(line: 881, column: 79, scope: !3346)
!3346 = !DILexicalBlockFile(scope: !621, file: !361, discriminator: 1)
!3347 = !DILocation(line: 881, column: 89, scope: !621)
!3348 = !DILocation(line: 881, column: 101, scope: !621)
!3349 = !DILocation(line: 881, column: 96, scope: !621)
!3350 = !DILocation(line: 881, column: 42, scope: !621)
!3351 = !DILocation(line: 881, column: 36, scope: !621)
!3352 = !DILocation(line: 881, column: 111, scope: !3353)
!3353 = !DILexicalBlockFile(scope: !621, file: !361, discriminator: 2)
!3354 = !DILocation(line: 881, column: 117, scope: !621)
!3355 = !DILocation(line: 881, column: 110, scope: !621)
!3356 = !DILocation(line: 881, column: 162, scope: !3357)
!3357 = !DILexicalBlockFile(scope: !621, file: !361, discriminator: 4)
!3358 = !DILocation(line: 881, column: 172, scope: !621)
!3359 = !DILocation(line: 881, column: 184, scope: !621)
!3360 = !DILocation(line: 881, column: 179, scope: !621)
!3361 = !DILocation(line: 881, column: 132, scope: !621)
!3362 = !DILocation(line: 881, column: 131, scope: !621)
!3363 = !DILocation(line: 881, column: 125, scope: !621)
!3364 = !DILocation(line: 881, column: 194, scope: !3365)
!3365 = !DILexicalBlockFile(scope: !621, file: !361, discriminator: 5)
!3366 = !DILocation(line: 881, column: 200, scope: !621)
!3367 = !DILocation(line: 881, column: 193, scope: !621)
!3368 = !DILocation(line: 881, column: 235, scope: !3369)
!3369 = !DILexicalBlockFile(scope: !621, file: !361, discriminator: 7)
!3370 = !DILocation(line: 881, column: 245, scope: !621)
!3371 = !DILocation(line: 881, column: 255, scope: !621)
!3372 = !DILocation(line: 881, column: 251, scope: !621)
!3373 = !DILocation(line: 881, column: 215, scope: !621)
!3374 = !DILocation(line: 881, column: 286, scope: !621)
!3375 = !DILocation(line: 881, column: 296, scope: !621)
!3376 = !DILocation(line: 881, column: 306, scope: !621)
!3377 = !DILocation(line: 881, column: 302, scope: !621)
!3378 = !DILocation(line: 881, column: 266, scope: !621)
!3379 = !DILocation(line: 881, column: 314, scope: !621)
!3380 = !DILocation(line: 881, column: 263, scope: !621)
!3381 = !DILocation(line: 881, column: 341, scope: !621)
!3382 = !DILocation(line: 881, column: 351, scope: !621)
!3383 = !DILocation(line: 881, column: 361, scope: !621)
!3384 = !DILocation(line: 881, column: 357, scope: !621)
!3385 = !DILocation(line: 881, column: 323, scope: !621)
!3386 = !DILocation(line: 881, column: 369, scope: !621)
!3387 = !DILocation(line: 881, column: 320, scope: !621)
!3388 = !DILocation(line: 881, column: 419, scope: !3389)
!3389 = !DILexicalBlockFile(scope: !621, file: !361, discriminator: 8)
!3390 = !DILocation(line: 881, column: 429, scope: !621)
!3391 = !DILocation(line: 881, column: 441, scope: !621)
!3392 = !DILocation(line: 881, column: 436, scope: !621)
!3393 = !DILocation(line: 881, column: 387, scope: !621)
!3394 = !DILocation(line: 881, column: 386, scope: !621)
!3395 = !DILocation(line: 881, column: 110, scope: !3396)
!3396 = !DILexicalBlockFile(scope: !3397, file: !361, discriminator: 10)
!3397 = !DILexicalBlockFile(scope: !621, file: !361, discriminator: 9)
!3398 = !DILocation(line: 881, column: 21, scope: !3399)
!3399 = !DILexicalBlockFile(scope: !3400, file: !361, discriminator: 11)
!3400 = !DILexicalBlockFile(scope: !621, file: !361, discriminator: 6)
!3401 = !DILocation(line: 881, column: 449, scope: !3402)
!3402 = !DILexicalBlockFile(scope: !3403, file: !361, discriminator: 12)
!3403 = !DILexicalBlockFile(scope: !621, file: !361, discriminator: 3)
!3404 = !DILocation(line: 882, column: 13, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !621, file: !361, line: 882, column: 13)
!3406 = !DILocation(line: 882, column: 20, scope: !3405)
!3407 = !DILocation(line: 882, column: 17, scope: !3405)
!3408 = !DILocation(line: 882, column: 13, scope: !621)
!3409 = !DILocation(line: 882, column: 35, scope: !3410)
!3410 = !DILexicalBlockFile(scope: !3405, file: !361, discriminator: 1)
!3411 = !DILocation(line: 882, column: 29, scope: !3405)
!3412 = !DILocation(line: 883, column: 19, scope: !621)
!3413 = !DILocation(line: 883, column: 17, scope: !621)
!3414 = !DILocation(line: 884, column: 5, scope: !622)
!3415 = !DILocation(line: 884, column: 5, scope: !621)
!3416 = !DILocation(line: 880, column: 41, scope: !622)
!3417 = !DILocation(line: 880, column: 38, scope: !622)
!3418 = !DILocation(line: 880, column: 5, scope: !622)
!3419 = !DILocation(line: 885, column: 31, scope: !612)
!3420 = !DILocation(line: 885, column: 12, scope: !612)
!3421 = !DILocation(line: 885, column: 5, scope: !612)
!3422 = !DILocation(line: 886, column: 1, scope: !612)
!3423 = !DILocation(line: 900, column: 31, scope: !632)
!3424 = !DILocation(line: 900, column: 50, scope: !632)
!3425 = !DILocation(line: 900, column: 64, scope: !632)
!3426 = !DILocation(line: 900, column: 78, scope: !632)
!3427 = !DILocation(line: 903, column: 5, scope: !632)
!3428 = !DILocation(line: 903, column: 18, scope: !632)
!3429 = !DILocation(line: 904, column: 5, scope: !632)
!3430 = !DILocation(line: 904, column: 16, scope: !632)
!3431 = !DILocation(line: 905, column: 5, scope: !632)
!3432 = !DILocation(line: 905, column: 12, scope: !632)
!3433 = !DILocation(line: 905, column: 20, scope: !632)
!3434 = !DILocation(line: 906, column: 5, scope: !632)
!3435 = !DILocation(line: 906, column: 15, scope: !632)
!3436 = !DILocation(line: 908, column: 35, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !632, file: !361, line: 908, column: 9)
!3438 = !DILocation(line: 908, column: 45, scope: !3437)
!3439 = !DILocation(line: 908, column: 50, scope: !3437)
!3440 = !DILocation(line: 908, column: 10, scope: !3437)
!3441 = !DILocation(line: 908, column: 9, scope: !632)
!3442 = !DILocation(line: 909, column: 9, scope: !3437)
!3443 = !DILocation(line: 911, column: 31, scope: !632)
!3444 = !DILocation(line: 911, column: 23, scope: !632)
!3445 = !DILocation(line: 911, column: 14, scope: !632)
!3446 = !DILocation(line: 911, column: 12, scope: !632)
!3447 = !DILocation(line: 912, column: 31, scope: !632)
!3448 = !DILocation(line: 912, column: 23, scope: !632)
!3449 = !DILocation(line: 912, column: 14, scope: !632)
!3450 = !DILocation(line: 912, column: 12, scope: !632)
!3451 = !DILocation(line: 914, column: 48, scope: !632)
!3452 = !DILocation(line: 914, column: 58, scope: !632)
!3453 = !DILocation(line: 914, column: 10, scope: !632)
!3454 = !DILocation(line: 914, column: 8, scope: !632)
!3455 = !DILocation(line: 915, column: 9, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !632, file: !361, line: 915, column: 9)
!3457 = !DILocation(line: 915, column: 12, scope: !3456)
!3458 = !DILocation(line: 915, column: 9, scope: !632)
!3459 = !DILocation(line: 916, column: 9, scope: !3456)
!3460 = !DILocation(line: 917, column: 43, scope: !632)
!3461 = !DILocation(line: 917, column: 26, scope: !632)
!3462 = !DILocation(line: 917, column: 9, scope: !632)
!3463 = !DILocation(line: 919, column: 12, scope: !648)
!3464 = !DILocation(line: 919, column: 10, scope: !648)
!3465 = !DILocation(line: 919, column: 17, scope: !3466)
!3466 = !DILexicalBlockFile(scope: !3467, file: !361, discriminator: 2)
!3467 = !DILexicalBlockFile(scope: !647, file: !361, discriminator: 1)
!3468 = !DILocation(line: 919, column: 21, scope: !647)
!3469 = !DILocation(line: 919, column: 31, scope: !647)
!3470 = !DILocation(line: 919, column: 19, scope: !647)
!3471 = !DILocation(line: 919, column: 5, scope: !648)
!3472 = !DILocation(line: 920, column: 9, scope: !646)
!3473 = !DILocation(line: 920, column: 16, scope: !646)
!3474 = !DILocation(line: 920, column: 25, scope: !646)
!3475 = !DILocation(line: 920, column: 31, scope: !646)
!3476 = !DILocation(line: 920, column: 24, scope: !646)
!3477 = !DILocation(line: 920, column: 82, scope: !3478)
!3478 = !DILexicalBlockFile(scope: !646, file: !361, discriminator: 1)
!3479 = !DILocation(line: 920, column: 92, scope: !646)
!3480 = !DILocation(line: 920, column: 104, scope: !646)
!3481 = !DILocation(line: 920, column: 99, scope: !646)
!3482 = !DILocation(line: 920, column: 45, scope: !646)
!3483 = !DILocation(line: 920, column: 39, scope: !646)
!3484 = !DILocation(line: 920, column: 114, scope: !3485)
!3485 = !DILexicalBlockFile(scope: !646, file: !361, discriminator: 2)
!3486 = !DILocation(line: 920, column: 120, scope: !646)
!3487 = !DILocation(line: 920, column: 113, scope: !646)
!3488 = !DILocation(line: 920, column: 165, scope: !3489)
!3489 = !DILexicalBlockFile(scope: !646, file: !361, discriminator: 4)
!3490 = !DILocation(line: 920, column: 175, scope: !646)
!3491 = !DILocation(line: 920, column: 187, scope: !646)
!3492 = !DILocation(line: 920, column: 182, scope: !646)
!3493 = !DILocation(line: 920, column: 135, scope: !646)
!3494 = !DILocation(line: 920, column: 134, scope: !646)
!3495 = !DILocation(line: 920, column: 128, scope: !646)
!3496 = !DILocation(line: 920, column: 197, scope: !3497)
!3497 = !DILexicalBlockFile(scope: !646, file: !361, discriminator: 5)
!3498 = !DILocation(line: 920, column: 203, scope: !646)
!3499 = !DILocation(line: 920, column: 196, scope: !646)
!3500 = !DILocation(line: 920, column: 238, scope: !3501)
!3501 = !DILexicalBlockFile(scope: !646, file: !361, discriminator: 7)
!3502 = !DILocation(line: 920, column: 248, scope: !646)
!3503 = !DILocation(line: 920, column: 258, scope: !646)
!3504 = !DILocation(line: 920, column: 254, scope: !646)
!3505 = !DILocation(line: 920, column: 218, scope: !646)
!3506 = !DILocation(line: 920, column: 289, scope: !646)
!3507 = !DILocation(line: 920, column: 299, scope: !646)
!3508 = !DILocation(line: 920, column: 309, scope: !646)
!3509 = !DILocation(line: 920, column: 305, scope: !646)
!3510 = !DILocation(line: 920, column: 269, scope: !646)
!3511 = !DILocation(line: 920, column: 317, scope: !646)
!3512 = !DILocation(line: 920, column: 266, scope: !646)
!3513 = !DILocation(line: 920, column: 344, scope: !646)
!3514 = !DILocation(line: 920, column: 354, scope: !646)
!3515 = !DILocation(line: 920, column: 364, scope: !646)
!3516 = !DILocation(line: 920, column: 360, scope: !646)
!3517 = !DILocation(line: 920, column: 326, scope: !646)
!3518 = !DILocation(line: 920, column: 372, scope: !646)
!3519 = !DILocation(line: 920, column: 323, scope: !646)
!3520 = !DILocation(line: 920, column: 422, scope: !3521)
!3521 = !DILexicalBlockFile(scope: !646, file: !361, discriminator: 8)
!3522 = !DILocation(line: 920, column: 432, scope: !646)
!3523 = !DILocation(line: 920, column: 444, scope: !646)
!3524 = !DILocation(line: 920, column: 439, scope: !646)
!3525 = !DILocation(line: 920, column: 390, scope: !646)
!3526 = !DILocation(line: 920, column: 389, scope: !646)
!3527 = !DILocation(line: 920, column: 113, scope: !3528)
!3528 = !DILexicalBlockFile(scope: !3529, file: !361, discriminator: 10)
!3529 = !DILexicalBlockFile(scope: !646, file: !361, discriminator: 9)
!3530 = !DILocation(line: 920, column: 24, scope: !3531)
!3531 = !DILexicalBlockFile(scope: !3532, file: !361, discriminator: 11)
!3532 = !DILexicalBlockFile(scope: !646, file: !361, discriminator: 6)
!3533 = !DILocation(line: 920, column: 22, scope: !3534)
!3534 = !DILexicalBlockFile(scope: !3535, file: !361, discriminator: 12)
!3535 = !DILexicalBlockFile(scope: !646, file: !361, discriminator: 3)
!3536 = !DILocation(line: 921, column: 16, scope: !646)
!3537 = !DILocation(line: 921, column: 13, scope: !646)
!3538 = !DILocation(line: 922, column: 28, scope: !646)
!3539 = !DILocation(line: 922, column: 33, scope: !646)
!3540 = !DILocation(line: 922, column: 41, scope: !646)
!3541 = !DILocation(line: 922, column: 21, scope: !646)
!3542 = !DILocation(line: 922, column: 15, scope: !646)
!3543 = !DILocation(line: 922, column: 13, scope: !646)
!3544 = !DILocation(line: 923, column: 9, scope: !646)
!3545 = !DILocation(line: 923, column: 18, scope: !3546)
!3546 = !DILexicalBlockFile(scope: !3547, file: !361, discriminator: 1)
!3547 = distinct !DILexicalBlock(scope: !3548, file: !361, line: 923, column: 18)
!3548 = distinct !DILexicalBlock(scope: !646, file: !361, line: 923, column: 12)
!3549 = !DILocation(line: 923, column: 24, scope: !3547)
!3550 = !DILocation(line: 923, column: 18, scope: !3548)
!3551 = !DILocation(line: 923, column: 30, scope: !3552)
!3552 = !DILexicalBlockFile(scope: !3547, file: !361, discriminator: 2)
!3553 = !DILocation(line: 923, column: 113, scope: !3554)
!3554 = !DILexicalBlockFile(scope: !3555, file: !361, discriminator: 4)
!3555 = distinct !DILexicalBlock(scope: !3547, file: !361, line: 923, column: 33)
!3556 = !DILocation(line: 923, column: 108, scope: !3555)
!3557 = !DILocation(line: 923, column: 92, scope: !3555)
!3558 = !DILocation(line: 923, column: 72, scope: !3555)
!3559 = !DILocation(line: 923, column: 84, scope: !3555)
!3560 = !DILocation(line: 923, column: 79, scope: !3555)
!3561 = !DILocation(line: 923, column: 90, scope: !3555)
!3562 = !DILocation(line: 923, column: 121, scope: !3555)
!3563 = !DILocation(line: 923, column: 121, scope: !3564)
!3564 = !DILexicalBlockFile(scope: !3555, file: !361, discriminator: 5)
!3565 = !DILocation(line: 923, column: 121, scope: !3566)
!3566 = !DILexicalBlockFile(scope: !3555, file: !361, discriminator: 6)
!3567 = !DILocation(line: 923, column: 143, scope: !3568)
!3568 = !DILexicalBlockFile(scope: !3569, file: !361, discriminator: 3)
!3569 = distinct !DILexicalBlock(scope: !3547, file: !361, line: 923, column: 143)
!3570 = !DILocation(line: 923, column: 149, scope: !3569)
!3571 = !DILocation(line: 923, column: 143, scope: !3547)
!3572 = !DILocation(line: 923, column: 155, scope: !3573)
!3573 = !DILexicalBlockFile(scope: !3569, file: !361, discriminator: 8)
!3574 = !DILocation(line: 923, column: 226, scope: !3575)
!3575 = !DILexicalBlockFile(scope: !3576, file: !361, discriminator: 10)
!3576 = distinct !DILexicalBlock(scope: !3569, file: !361, line: 923, column: 158)
!3577 = !DILocation(line: 923, column: 221, scope: !3576)
!3578 = !DILocation(line: 923, column: 211, scope: !3576)
!3579 = !DILocation(line: 923, column: 191, scope: !3576)
!3580 = !DILocation(line: 923, column: 203, scope: !3576)
!3581 = !DILocation(line: 923, column: 198, scope: !3576)
!3582 = !DILocation(line: 923, column: 161, scope: !3576)
!3583 = !DILocation(line: 923, column: 209, scope: !3576)
!3584 = !DILocation(line: 923, column: 234, scope: !3576)
!3585 = !DILocation(line: 923, column: 234, scope: !3586)
!3586 = !DILexicalBlockFile(scope: !3576, file: !361, discriminator: 11)
!3587 = !DILocation(line: 923, column: 234, scope: !3588)
!3588 = !DILexicalBlockFile(scope: !3576, file: !361, discriminator: 12)
!3589 = !DILocation(line: 923, column: 256, scope: !3590)
!3590 = !DILexicalBlockFile(scope: !3591, file: !361, discriminator: 9)
!3591 = distinct !DILexicalBlock(scope: !3569, file: !361, line: 923, column: 256)
!3592 = !DILocation(line: 923, column: 262, scope: !3591)
!3593 = !DILocation(line: 923, column: 256, scope: !3569)
!3594 = !DILocation(line: 923, column: 268, scope: !3595)
!3595 = !DILexicalBlockFile(scope: !3591, file: !361, discriminator: 13)
!3596 = !DILocation(line: 923, column: 325, scope: !3597)
!3597 = !DILexicalBlockFile(scope: !3598, file: !361, discriminator: 15)
!3598 = distinct !DILexicalBlock(scope: !3591, file: !361, line: 923, column: 271)
!3599 = !DILocation(line: 923, column: 320, scope: !3598)
!3600 = !DILocation(line: 923, column: 313, scope: !3598)
!3601 = !DILocation(line: 923, column: 293, scope: !3598)
!3602 = !DILocation(line: 923, column: 303, scope: !3598)
!3603 = !DILocation(line: 923, column: 299, scope: !3598)
!3604 = !DILocation(line: 923, column: 273, scope: !3598)
!3605 = !DILocation(line: 923, column: 311, scope: !3598)
!3606 = !DILocation(line: 923, column: 384, scope: !3598)
!3607 = !DILocation(line: 923, column: 379, scope: !3598)
!3608 = !DILocation(line: 923, column: 390, scope: !3598)
!3609 = !DILocation(line: 923, column: 372, scope: !3598)
!3610 = !DILocation(line: 923, column: 352, scope: !3598)
!3611 = !DILocation(line: 923, column: 362, scope: !3598)
!3612 = !DILocation(line: 923, column: 358, scope: !3598)
!3613 = !DILocation(line: 923, column: 332, scope: !3598)
!3614 = !DILocation(line: 923, column: 370, scope: !3598)
!3615 = !DILocation(line: 923, column: 446, scope: !3598)
!3616 = !DILocation(line: 923, column: 441, scope: !3598)
!3617 = !DILocation(line: 923, column: 452, scope: !3598)
!3618 = !DILocation(line: 923, column: 434, scope: !3598)
!3619 = !DILocation(line: 923, column: 414, scope: !3598)
!3620 = !DILocation(line: 923, column: 424, scope: !3598)
!3621 = !DILocation(line: 923, column: 420, scope: !3598)
!3622 = !DILocation(line: 923, column: 396, scope: !3598)
!3623 = !DILocation(line: 923, column: 432, scope: !3598)
!3624 = !DILocation(line: 923, column: 459, scope: !3598)
!3625 = !DILocation(line: 923, column: 459, scope: !3626)
!3626 = !DILexicalBlockFile(scope: !3598, file: !361, discriminator: 16)
!3627 = !DILocation(line: 923, column: 459, scope: !3628)
!3628 = !DILexicalBlockFile(scope: !3598, file: !361, discriminator: 17)
!3629 = !DILocation(line: 923, column: 477, scope: !3630)
!3630 = !DILexicalBlockFile(scope: !3591, file: !361, discriminator: 14)
!3631 = !DILocation(line: 923, column: 552, scope: !3632)
!3632 = !DILexicalBlockFile(scope: !3633, file: !361, discriminator: 18)
!3633 = distinct !DILexicalBlock(scope: !3591, file: !361, line: 923, column: 480)
!3634 = !DILocation(line: 923, column: 547, scope: !3633)
!3635 = !DILocation(line: 923, column: 515, scope: !3633)
!3636 = !DILocation(line: 923, column: 527, scope: !3633)
!3637 = !DILocation(line: 923, column: 522, scope: !3633)
!3638 = !DILocation(line: 923, column: 483, scope: !3633)
!3639 = !DILocation(line: 923, column: 533, scope: !3633)
!3640 = !DILocation(line: 923, column: 560, scope: !3633)
!3641 = !DILocation(line: 923, column: 560, scope: !3642)
!3642 = !DILexicalBlockFile(scope: !3633, file: !361, discriminator: 19)
!3643 = !DILocation(line: 923, column: 573, scope: !3644)
!3644 = !DILexicalBlockFile(scope: !3548, file: !361, discriminator: 7)
!3645 = !DILocation(line: 923, column: 573, scope: !3646)
!3646 = !DILexicalBlockFile(scope: !3548, file: !361, discriminator: 20)
!3647 = !DILocation(line: 924, column: 5, scope: !647)
!3648 = !DILocation(line: 924, column: 5, scope: !646)
!3649 = !DILocation(line: 919, column: 41, scope: !647)
!3650 = !DILocation(line: 919, column: 38, scope: !647)
!3651 = !DILocation(line: 919, column: 5, scope: !647)
!3652 = !DILocation(line: 925, column: 12, scope: !632)
!3653 = !DILocation(line: 925, column: 5, scope: !632)
!3654 = !DILocation(line: 926, column: 1, scope: !632)
!3655 = !DILocation(line: 23, column: 15, scope: !649)
!3656 = !DILocation(line: 23, column: 27, scope: !649)
!3657 = !DILocation(line: 23, column: 42, scope: !649)
!3658 = !DILocation(line: 25, column: 9, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !649, file: !361, line: 25, column: 9)
!3660 = !DILocation(line: 25, column: 15, scope: !3659)
!3661 = !DILocation(line: 25, column: 13, scope: !3659)
!3662 = !DILocation(line: 25, column: 9, scope: !649)
!3663 = !DILocation(line: 26, column: 15, scope: !3659)
!3664 = !DILocation(line: 26, column: 13, scope: !3659)
!3665 = !DILocation(line: 26, column: 9, scope: !3659)
!3666 = !DILocation(line: 27, column: 14, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3659, file: !361, line: 27, column: 14)
!3668 = !DILocation(line: 27, column: 20, scope: !3667)
!3669 = !DILocation(line: 27, column: 27, scope: !3667)
!3670 = !DILocation(line: 27, column: 18, scope: !3667)
!3671 = !DILocation(line: 27, column: 14, scope: !3659)
!3672 = !DILocation(line: 28, column: 15, scope: !3667)
!3673 = !DILocation(line: 28, column: 13, scope: !3667)
!3674 = !DILocation(line: 28, column: 9, scope: !3667)
!3675 = !DILocation(line: 29, column: 17, scope: !649)
!3676 = !DILocation(line: 29, column: 12, scope: !649)
!3677 = !DILocation(line: 29, column: 5, scope: !649)
!3678 = !DILocation(line: 1036, column: 31, scope: !664)
!3679 = !DILocation(line: 1036, column: 50, scope: !664)
!3680 = !DILocation(line: 1036, column: 72, scope: !664)
!3681 = !DILocation(line: 1036, column: 87, scope: !664)
!3682 = !DILocation(line: 1039, column: 5, scope: !664)
!3683 = !DILocation(line: 1039, column: 18, scope: !664)
!3684 = !DILocation(line: 1040, column: 5, scope: !664)
!3685 = !DILocation(line: 1040, column: 16, scope: !664)
!3686 = !DILocation(line: 1041, column: 5, scope: !664)
!3687 = !DILocation(line: 1041, column: 9, scope: !664)
!3688 = !DILocation(line: 1041, column: 17, scope: !664)
!3689 = !DILocation(line: 1041, column: 25, scope: !664)
!3690 = !DILocation(line: 1042, column: 5, scope: !664)
!3691 = !DILocation(line: 1042, column: 15, scope: !664)
!3692 = !DILocation(line: 1044, column: 35, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !664, file: !361, line: 1044, column: 9)
!3694 = !DILocation(line: 1044, column: 46, scope: !3693)
!3695 = !DILocation(line: 1044, column: 51, scope: !3693)
!3696 = !DILocation(line: 1044, column: 10, scope: !3693)
!3697 = !DILocation(line: 1044, column: 9, scope: !664)
!3698 = !DILocation(line: 1045, column: 9, scope: !3693)
!3699 = !DILocation(line: 1046, column: 9, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !664, file: !361, line: 1046, column: 9)
!3701 = !DILocation(line: 1046, column: 20, scope: !3700)
!3702 = !DILocation(line: 1046, column: 27, scope: !3700)
!3703 = !DILocation(line: 1046, column: 38, scope: !3700)
!3704 = !DILocation(line: 1046, column: 24, scope: !3700)
!3705 = !DILocation(line: 1046, column: 9, scope: !664)
!3706 = !DILocation(line: 1047, column: 25, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3700, file: !361, line: 1046, column: 43)
!3708 = !DILocation(line: 1047, column: 9, scope: !3707)
!3709 = !DILocation(line: 1048, column: 9, scope: !3707)
!3710 = !DILocation(line: 1051, column: 22, scope: !664)
!3711 = !DILocation(line: 1051, column: 14, scope: !664)
!3712 = !DILocation(line: 1051, column: 12, scope: !664)
!3713 = !DILocation(line: 1052, column: 22, scope: !664)
!3714 = !DILocation(line: 1052, column: 14, scope: !664)
!3715 = !DILocation(line: 1052, column: 12, scope: !664)
!3716 = !DILocation(line: 1054, column: 48, scope: !664)
!3717 = !DILocation(line: 1054, column: 59, scope: !664)
!3718 = !DILocation(line: 1054, column: 10, scope: !664)
!3719 = !DILocation(line: 1054, column: 8, scope: !664)
!3720 = !DILocation(line: 1055, column: 9, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !664, file: !361, line: 1055, column: 9)
!3722 = !DILocation(line: 1055, column: 12, scope: !3721)
!3723 = !DILocation(line: 1055, column: 9, scope: !664)
!3724 = !DILocation(line: 1056, column: 9, scope: !3721)
!3725 = !DILocation(line: 1057, column: 43, scope: !664)
!3726 = !DILocation(line: 1057, column: 26, scope: !664)
!3727 = !DILocation(line: 1057, column: 9, scope: !664)
!3728 = !DILocation(line: 1059, column: 12, scope: !681)
!3729 = !DILocation(line: 1059, column: 10, scope: !681)
!3730 = !DILocation(line: 1059, column: 17, scope: !3731)
!3731 = !DILexicalBlockFile(scope: !3732, file: !361, discriminator: 2)
!3732 = !DILexicalBlockFile(scope: !680, file: !361, discriminator: 1)
!3733 = !DILocation(line: 1059, column: 21, scope: !680)
!3734 = !DILocation(line: 1059, column: 32, scope: !680)
!3735 = !DILocation(line: 1059, column: 19, scope: !680)
!3736 = !DILocation(line: 1059, column: 5, scope: !681)
!3737 = !DILocation(line: 1060, column: 9, scope: !679)
!3738 = !DILocation(line: 1060, column: 13, scope: !679)
!3739 = !DILocation(line: 1060, column: 23, scope: !679)
!3740 = !DILocation(line: 1060, column: 29, scope: !679)
!3741 = !DILocation(line: 1060, column: 22, scope: !679)
!3742 = !DILocation(line: 1060, column: 80, scope: !3743)
!3743 = !DILexicalBlockFile(scope: !679, file: !361, discriminator: 1)
!3744 = !DILocation(line: 1060, column: 91, scope: !679)
!3745 = !DILocation(line: 1060, column: 103, scope: !679)
!3746 = !DILocation(line: 1060, column: 98, scope: !679)
!3747 = !DILocation(line: 1060, column: 43, scope: !679)
!3748 = !DILocation(line: 1060, column: 37, scope: !679)
!3749 = !DILocation(line: 1060, column: 113, scope: !3750)
!3750 = !DILexicalBlockFile(scope: !679, file: !361, discriminator: 2)
!3751 = !DILocation(line: 1060, column: 119, scope: !679)
!3752 = !DILocation(line: 1060, column: 112, scope: !679)
!3753 = !DILocation(line: 1060, column: 164, scope: !3754)
!3754 = !DILexicalBlockFile(scope: !679, file: !361, discriminator: 4)
!3755 = !DILocation(line: 1060, column: 175, scope: !679)
!3756 = !DILocation(line: 1060, column: 187, scope: !679)
!3757 = !DILocation(line: 1060, column: 182, scope: !679)
!3758 = !DILocation(line: 1060, column: 134, scope: !679)
!3759 = !DILocation(line: 1060, column: 133, scope: !679)
!3760 = !DILocation(line: 1060, column: 127, scope: !679)
!3761 = !DILocation(line: 1060, column: 197, scope: !3762)
!3762 = !DILexicalBlockFile(scope: !679, file: !361, discriminator: 5)
!3763 = !DILocation(line: 1060, column: 203, scope: !679)
!3764 = !DILocation(line: 1060, column: 196, scope: !679)
!3765 = !DILocation(line: 1060, column: 238, scope: !3766)
!3766 = !DILexicalBlockFile(scope: !679, file: !361, discriminator: 7)
!3767 = !DILocation(line: 1060, column: 249, scope: !679)
!3768 = !DILocation(line: 1060, column: 259, scope: !679)
!3769 = !DILocation(line: 1060, column: 255, scope: !679)
!3770 = !DILocation(line: 1060, column: 218, scope: !679)
!3771 = !DILocation(line: 1060, column: 290, scope: !679)
!3772 = !DILocation(line: 1060, column: 301, scope: !679)
!3773 = !DILocation(line: 1060, column: 311, scope: !679)
!3774 = !DILocation(line: 1060, column: 307, scope: !679)
!3775 = !DILocation(line: 1060, column: 270, scope: !679)
!3776 = !DILocation(line: 1060, column: 319, scope: !679)
!3777 = !DILocation(line: 1060, column: 267, scope: !679)
!3778 = !DILocation(line: 1060, column: 346, scope: !679)
!3779 = !DILocation(line: 1060, column: 357, scope: !679)
!3780 = !DILocation(line: 1060, column: 367, scope: !679)
!3781 = !DILocation(line: 1060, column: 363, scope: !679)
!3782 = !DILocation(line: 1060, column: 328, scope: !679)
!3783 = !DILocation(line: 1060, column: 375, scope: !679)
!3784 = !DILocation(line: 1060, column: 325, scope: !679)
!3785 = !DILocation(line: 1060, column: 425, scope: !3786)
!3786 = !DILexicalBlockFile(scope: !679, file: !361, discriminator: 8)
!3787 = !DILocation(line: 1060, column: 436, scope: !679)
!3788 = !DILocation(line: 1060, column: 448, scope: !679)
!3789 = !DILocation(line: 1060, column: 443, scope: !679)
!3790 = !DILocation(line: 1060, column: 393, scope: !679)
!3791 = !DILocation(line: 1060, column: 392, scope: !679)
!3792 = !DILocation(line: 1060, column: 112, scope: !3793)
!3793 = !DILexicalBlockFile(scope: !3794, file: !361, discriminator: 10)
!3794 = !DILexicalBlockFile(scope: !679, file: !361, discriminator: 9)
!3795 = !DILocation(line: 1060, column: 22, scope: !3796)
!3796 = !DILexicalBlockFile(scope: !3797, file: !361, discriminator: 11)
!3797 = !DILexicalBlockFile(scope: !679, file: !361, discriminator: 6)
!3798 = !DILocation(line: 1060, column: 13, scope: !3799)
!3799 = !DILexicalBlockFile(scope: !3800, file: !361, discriminator: 12)
!3800 = !DILexicalBlockFile(scope: !679, file: !361, discriminator: 3)
!3801 = !DILocation(line: 1061, column: 9, scope: !679)
!3802 = !DILocation(line: 1061, column: 13, scope: !679)
!3803 = !DILocation(line: 1061, column: 23, scope: !679)
!3804 = !DILocation(line: 1061, column: 29, scope: !679)
!3805 = !DILocation(line: 1061, column: 22, scope: !679)
!3806 = !DILocation(line: 1061, column: 80, scope: !3743)
!3807 = !DILocation(line: 1061, column: 91, scope: !679)
!3808 = !DILocation(line: 1061, column: 103, scope: !679)
!3809 = !DILocation(line: 1061, column: 98, scope: !679)
!3810 = !DILocation(line: 1061, column: 43, scope: !679)
!3811 = !DILocation(line: 1061, column: 37, scope: !679)
!3812 = !DILocation(line: 1061, column: 113, scope: !3750)
!3813 = !DILocation(line: 1061, column: 119, scope: !679)
!3814 = !DILocation(line: 1061, column: 112, scope: !679)
!3815 = !DILocation(line: 1061, column: 164, scope: !3754)
!3816 = !DILocation(line: 1061, column: 175, scope: !679)
!3817 = !DILocation(line: 1061, column: 187, scope: !679)
!3818 = !DILocation(line: 1061, column: 182, scope: !679)
!3819 = !DILocation(line: 1061, column: 134, scope: !679)
!3820 = !DILocation(line: 1061, column: 133, scope: !679)
!3821 = !DILocation(line: 1061, column: 127, scope: !679)
!3822 = !DILocation(line: 1061, column: 197, scope: !3762)
!3823 = !DILocation(line: 1061, column: 203, scope: !679)
!3824 = !DILocation(line: 1061, column: 196, scope: !679)
!3825 = !DILocation(line: 1061, column: 238, scope: !3766)
!3826 = !DILocation(line: 1061, column: 249, scope: !679)
!3827 = !DILocation(line: 1061, column: 259, scope: !679)
!3828 = !DILocation(line: 1061, column: 255, scope: !679)
!3829 = !DILocation(line: 1061, column: 218, scope: !679)
!3830 = !DILocation(line: 1061, column: 290, scope: !679)
!3831 = !DILocation(line: 1061, column: 301, scope: !679)
!3832 = !DILocation(line: 1061, column: 311, scope: !679)
!3833 = !DILocation(line: 1061, column: 307, scope: !679)
!3834 = !DILocation(line: 1061, column: 270, scope: !679)
!3835 = !DILocation(line: 1061, column: 319, scope: !679)
!3836 = !DILocation(line: 1061, column: 267, scope: !679)
!3837 = !DILocation(line: 1061, column: 346, scope: !679)
!3838 = !DILocation(line: 1061, column: 357, scope: !679)
!3839 = !DILocation(line: 1061, column: 367, scope: !679)
!3840 = !DILocation(line: 1061, column: 363, scope: !679)
!3841 = !DILocation(line: 1061, column: 328, scope: !679)
!3842 = !DILocation(line: 1061, column: 375, scope: !679)
!3843 = !DILocation(line: 1061, column: 325, scope: !679)
!3844 = !DILocation(line: 1061, column: 425, scope: !3786)
!3845 = !DILocation(line: 1061, column: 436, scope: !679)
!3846 = !DILocation(line: 1061, column: 448, scope: !679)
!3847 = !DILocation(line: 1061, column: 443, scope: !679)
!3848 = !DILocation(line: 1061, column: 393, scope: !679)
!3849 = !DILocation(line: 1061, column: 392, scope: !679)
!3850 = !DILocation(line: 1061, column: 112, scope: !3793)
!3851 = !DILocation(line: 1061, column: 22, scope: !3796)
!3852 = !DILocation(line: 1061, column: 13, scope: !3799)
!3853 = !DILocation(line: 1063, column: 13, scope: !685)
!3854 = !DILocation(line: 1063, column: 19, scope: !685)
!3855 = !DILocation(line: 1063, column: 13, scope: !679)
!3856 = !DILocation(line: 1064, column: 22, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !685, file: !361, line: 1063, column: 24)
!3858 = !DILocation(line: 1064, column: 29, scope: !3857)
!3859 = !DILocation(line: 1064, column: 27, scope: !3857)
!3860 = !DILocation(line: 1064, column: 20, scope: !3857)
!3861 = !DILocation(line: 1066, column: 17, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3857, file: !361, line: 1066, column: 17)
!3863 = !DILocation(line: 1066, column: 26, scope: !3862)
!3864 = !DILocation(line: 1066, column: 24, scope: !3862)
!3865 = !DILocation(line: 1066, column: 17, scope: !3857)
!3866 = !DILocation(line: 1067, column: 26, scope: !3862)
!3867 = !DILocation(line: 1067, column: 24, scope: !3862)
!3868 = !DILocation(line: 1067, column: 17, scope: !3862)
!3869 = !DILocation(line: 1068, column: 22, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3862, file: !361, line: 1068, column: 22)
!3871 = !DILocation(line: 1068, column: 31, scope: !3870)
!3872 = !DILocation(line: 1068, column: 29, scope: !3870)
!3873 = !DILocation(line: 1068, column: 22, scope: !3862)
!3874 = !DILocation(line: 1069, column: 26, scope: !3870)
!3875 = !DILocation(line: 1069, column: 24, scope: !3870)
!3876 = !DILocation(line: 1069, column: 17, scope: !3870)
!3877 = !DILocation(line: 1070, column: 9, scope: !3857)
!3878 = !DILocation(line: 1072, column: 13, scope: !684)
!3879 = !DILocation(line: 1072, column: 20, scope: !684)
!3880 = !DILocation(line: 1072, column: 35, scope: !684)
!3881 = !DILocation(line: 1072, column: 27, scope: !684)
!3882 = !DILocation(line: 1072, column: 50, scope: !684)
!3883 = !DILocation(line: 1072, column: 42, scope: !684)
!3884 = !DILocation(line: 1072, column: 40, scope: !684)
!3885 = !DILocation(line: 1074, column: 40, scope: !684)
!3886 = !DILocation(line: 1074, column: 46, scope: !684)
!3887 = !DILocation(line: 1074, column: 54, scope: !684)
!3888 = !DILocation(line: 1074, column: 33, scope: !684)
!3889 = !DILocation(line: 1074, column: 27, scope: !684)
!3890 = !DILocation(line: 1074, column: 22, scope: !684)
!3891 = !DILocation(line: 1074, column: 20, scope: !684)
!3892 = !DILocation(line: 1075, column: 9, scope: !685)
!3893 = !DILocation(line: 1077, column: 9, scope: !679)
!3894 = !DILocation(line: 1077, column: 18, scope: !3895)
!3895 = !DILexicalBlockFile(scope: !3896, file: !361, discriminator: 1)
!3896 = distinct !DILexicalBlock(scope: !3897, file: !361, line: 1077, column: 18)
!3897 = distinct !DILexicalBlock(scope: !679, file: !361, line: 1077, column: 12)
!3898 = !DILocation(line: 1077, column: 24, scope: !3896)
!3899 = !DILocation(line: 1077, column: 18, scope: !3897)
!3900 = !DILocation(line: 1077, column: 30, scope: !3901)
!3901 = !DILexicalBlockFile(scope: !3896, file: !361, discriminator: 2)
!3902 = !DILocation(line: 1077, column: 108, scope: !3903)
!3903 = !DILexicalBlockFile(scope: !3904, file: !361, discriminator: 4)
!3904 = distinct !DILexicalBlock(scope: !3896, file: !361, line: 1077, column: 33)
!3905 = !DILocation(line: 1077, column: 92, scope: !3904)
!3906 = !DILocation(line: 1077, column: 72, scope: !3904)
!3907 = !DILocation(line: 1077, column: 84, scope: !3904)
!3908 = !DILocation(line: 1077, column: 79, scope: !3904)
!3909 = !DILocation(line: 1077, column: 90, scope: !3904)
!3910 = !DILocation(line: 1077, column: 119, scope: !3904)
!3911 = !DILocation(line: 1077, column: 119, scope: !3912)
!3912 = !DILexicalBlockFile(scope: !3904, file: !361, discriminator: 5)
!3913 = !DILocation(line: 1077, column: 119, scope: !3914)
!3914 = !DILexicalBlockFile(scope: !3904, file: !361, discriminator: 6)
!3915 = !DILocation(line: 1077, column: 141, scope: !3916)
!3916 = !DILexicalBlockFile(scope: !3917, file: !361, discriminator: 3)
!3917 = distinct !DILexicalBlock(scope: !3896, file: !361, line: 1077, column: 141)
!3918 = !DILocation(line: 1077, column: 147, scope: !3917)
!3919 = !DILocation(line: 1077, column: 141, scope: !3896)
!3920 = !DILocation(line: 1077, column: 153, scope: !3921)
!3921 = !DILexicalBlockFile(scope: !3917, file: !361, discriminator: 8)
!3922 = !DILocation(line: 1077, column: 219, scope: !3923)
!3923 = !DILexicalBlockFile(scope: !3924, file: !361, discriminator: 10)
!3924 = distinct !DILexicalBlock(scope: !3917, file: !361, line: 1077, column: 156)
!3925 = !DILocation(line: 1077, column: 209, scope: !3924)
!3926 = !DILocation(line: 1077, column: 189, scope: !3924)
!3927 = !DILocation(line: 1077, column: 201, scope: !3924)
!3928 = !DILocation(line: 1077, column: 196, scope: !3924)
!3929 = !DILocation(line: 1077, column: 159, scope: !3924)
!3930 = !DILocation(line: 1077, column: 207, scope: !3924)
!3931 = !DILocation(line: 1077, column: 230, scope: !3924)
!3932 = !DILocation(line: 1077, column: 230, scope: !3933)
!3933 = !DILexicalBlockFile(scope: !3924, file: !361, discriminator: 11)
!3934 = !DILocation(line: 1077, column: 230, scope: !3935)
!3935 = !DILexicalBlockFile(scope: !3924, file: !361, discriminator: 12)
!3936 = !DILocation(line: 1077, column: 252, scope: !3937)
!3937 = !DILexicalBlockFile(scope: !3938, file: !361, discriminator: 9)
!3938 = distinct !DILexicalBlock(scope: !3917, file: !361, line: 1077, column: 252)
!3939 = !DILocation(line: 1077, column: 258, scope: !3938)
!3940 = !DILocation(line: 1077, column: 252, scope: !3917)
!3941 = !DILocation(line: 1077, column: 264, scope: !3942)
!3942 = !DILexicalBlockFile(scope: !3938, file: !361, discriminator: 13)
!3943 = !DILocation(line: 1077, column: 316, scope: !3944)
!3944 = !DILexicalBlockFile(scope: !3945, file: !361, discriminator: 15)
!3945 = distinct !DILexicalBlock(scope: !3938, file: !361, line: 1077, column: 267)
!3946 = !DILocation(line: 1077, column: 309, scope: !3945)
!3947 = !DILocation(line: 1077, column: 289, scope: !3945)
!3948 = !DILocation(line: 1077, column: 299, scope: !3945)
!3949 = !DILocation(line: 1077, column: 295, scope: !3945)
!3950 = !DILocation(line: 1077, column: 269, scope: !3945)
!3951 = !DILocation(line: 1077, column: 307, scope: !3945)
!3952 = !DILocation(line: 1077, column: 373, scope: !3945)
!3953 = !DILocation(line: 1077, column: 382, scope: !3945)
!3954 = !DILocation(line: 1077, column: 366, scope: !3945)
!3955 = !DILocation(line: 1077, column: 346, scope: !3945)
!3956 = !DILocation(line: 1077, column: 356, scope: !3945)
!3957 = !DILocation(line: 1077, column: 352, scope: !3945)
!3958 = !DILocation(line: 1077, column: 326, scope: !3945)
!3959 = !DILocation(line: 1077, column: 364, scope: !3945)
!3960 = !DILocation(line: 1077, column: 433, scope: !3945)
!3961 = !DILocation(line: 1077, column: 442, scope: !3945)
!3962 = !DILocation(line: 1077, column: 426, scope: !3945)
!3963 = !DILocation(line: 1077, column: 406, scope: !3945)
!3964 = !DILocation(line: 1077, column: 416, scope: !3945)
!3965 = !DILocation(line: 1077, column: 412, scope: !3945)
!3966 = !DILocation(line: 1077, column: 388, scope: !3945)
!3967 = !DILocation(line: 1077, column: 424, scope: !3945)
!3968 = !DILocation(line: 1077, column: 449, scope: !3945)
!3969 = !DILocation(line: 1077, column: 449, scope: !3970)
!3970 = !DILexicalBlockFile(scope: !3945, file: !361, discriminator: 16)
!3971 = !DILocation(line: 1077, column: 449, scope: !3972)
!3972 = !DILexicalBlockFile(scope: !3945, file: !361, discriminator: 17)
!3973 = !DILocation(line: 1077, column: 467, scope: !3974)
!3974 = !DILexicalBlockFile(scope: !3938, file: !361, discriminator: 14)
!3975 = !DILocation(line: 1077, column: 537, scope: !3976)
!3976 = !DILexicalBlockFile(scope: !3977, file: !361, discriminator: 18)
!3977 = distinct !DILexicalBlock(scope: !3938, file: !361, line: 1077, column: 470)
!3978 = !DILocation(line: 1077, column: 505, scope: !3977)
!3979 = !DILocation(line: 1077, column: 517, scope: !3977)
!3980 = !DILocation(line: 1077, column: 512, scope: !3977)
!3981 = !DILocation(line: 1077, column: 473, scope: !3977)
!3982 = !DILocation(line: 1077, column: 523, scope: !3977)
!3983 = !DILocation(line: 1077, column: 548, scope: !3977)
!3984 = !DILocation(line: 1077, column: 548, scope: !3985)
!3985 = !DILexicalBlockFile(scope: !3977, file: !361, discriminator: 19)
!3986 = !DILocation(line: 1077, column: 561, scope: !3987)
!3987 = !DILexicalBlockFile(scope: !3897, file: !361, discriminator: 7)
!3988 = !DILocation(line: 1077, column: 561, scope: !3989)
!3989 = !DILexicalBlockFile(scope: !3897, file: !361, discriminator: 20)
!3990 = !DILocation(line: 1078, column: 5, scope: !680)
!3991 = !DILocation(line: 1078, column: 5, scope: !679)
!3992 = !DILocation(line: 1059, column: 42, scope: !680)
!3993 = !DILocation(line: 1059, column: 39, scope: !680)
!3994 = !DILocation(line: 1059, column: 5, scope: !680)
!3995 = !DILocation(line: 1079, column: 12, scope: !664)
!3996 = !DILocation(line: 1079, column: 5, scope: !664)
!3997 = !DILocation(line: 1080, column: 1, scope: !664)
!3998 = !DILocation(line: 1094, column: 32, scope: !694)
!3999 = !DILocation(line: 1094, column: 51, scope: !694)
!4000 = !DILocation(line: 1094, column: 65, scope: !694)
!4001 = !DILocation(line: 1094, column: 76, scope: !694)
!4002 = !DILocation(line: 1097, column: 5, scope: !694)
!4003 = !DILocation(line: 1097, column: 18, scope: !694)
!4004 = !DILocation(line: 1098, column: 5, scope: !694)
!4005 = !DILocation(line: 1098, column: 16, scope: !694)
!4006 = !DILocation(line: 1099, column: 5, scope: !694)
!4007 = !DILocation(line: 1099, column: 18, scope: !694)
!4008 = !DILocation(line: 1099, column: 27, scope: !694)
!4009 = !DILocation(line: 1100, column: 5, scope: !694)
!4010 = !DILocation(line: 1100, column: 15, scope: !694)
!4011 = !DILocation(line: 1102, column: 35, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !694, file: !361, line: 1102, column: 9)
!4013 = !DILocation(line: 1102, column: 45, scope: !4012)
!4014 = !DILocation(line: 1102, column: 50, scope: !4012)
!4015 = !DILocation(line: 1102, column: 10, scope: !4012)
!4016 = !DILocation(line: 1102, column: 9, scope: !694)
!4017 = !DILocation(line: 1103, column: 9, scope: !4012)
!4018 = !DILocation(line: 1105, column: 48, scope: !694)
!4019 = !DILocation(line: 1105, column: 58, scope: !694)
!4020 = !DILocation(line: 1105, column: 10, scope: !694)
!4021 = !DILocation(line: 1105, column: 8, scope: !694)
!4022 = !DILocation(line: 1106, column: 9, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !694, file: !361, line: 1106, column: 9)
!4024 = !DILocation(line: 1106, column: 12, scope: !4023)
!4025 = !DILocation(line: 1106, column: 9, scope: !694)
!4026 = !DILocation(line: 1107, column: 9, scope: !4023)
!4027 = !DILocation(line: 1108, column: 43, scope: !694)
!4028 = !DILocation(line: 1108, column: 26, scope: !694)
!4029 = !DILocation(line: 1108, column: 9, scope: !694)
!4030 = !DILocation(line: 1110, column: 18, scope: !694)
!4031 = !DILocation(line: 1110, column: 12, scope: !694)
!4032 = !DILocation(line: 1110, column: 10, scope: !694)
!4033 = !DILocation(line: 1112, column: 12, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !694, file: !361, line: 1112, column: 5)
!4035 = !DILocation(line: 1112, column: 10, scope: !4034)
!4036 = !DILocation(line: 1112, column: 17, scope: !4037)
!4037 = !DILexicalBlockFile(scope: !4038, file: !361, discriminator: 2)
!4038 = !DILexicalBlockFile(scope: !4039, file: !361, discriminator: 1)
!4039 = distinct !DILexicalBlock(scope: !4034, file: !361, line: 1112, column: 5)
!4040 = !DILocation(line: 1112, column: 21, scope: !4039)
!4041 = !DILocation(line: 1112, column: 31, scope: !4039)
!4042 = !DILocation(line: 1112, column: 19, scope: !4039)
!4043 = !DILocation(line: 1112, column: 5, scope: !4034)
!4044 = !DILocation(line: 1113, column: 13, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !4046, file: !361, line: 1113, column: 13)
!4046 = distinct !DILexicalBlock(scope: !4039, file: !361, line: 1112, column: 48)
!4047 = !DILocation(line: 1113, column: 19, scope: !4045)
!4048 = !DILocation(line: 1113, column: 13, scope: !4046)
!4049 = !DILocation(line: 1114, column: 57, scope: !4045)
!4050 = !DILocation(line: 1114, column: 67, scope: !4045)
!4051 = !DILocation(line: 1114, column: 75, scope: !4045)
!4052 = !DILocation(line: 1114, column: 72, scope: !4045)
!4053 = !DILocation(line: 1114, column: 20, scope: !4045)
!4054 = !DILocation(line: 1114, column: 19, scope: !4045)
!4055 = !DILocation(line: 1114, column: 17, scope: !4045)
!4056 = !DILocation(line: 1114, column: 13, scope: !4045)
!4057 = !DILocation(line: 1115, column: 18, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4045, file: !361, line: 1115, column: 18)
!4059 = !DILocation(line: 1115, column: 24, scope: !4058)
!4060 = !DILocation(line: 1115, column: 18, scope: !4045)
!4061 = !DILocation(line: 1116, column: 58, scope: !4058)
!4062 = !DILocation(line: 1116, column: 68, scope: !4058)
!4063 = !DILocation(line: 1116, column: 76, scope: !4058)
!4064 = !DILocation(line: 1116, column: 73, scope: !4058)
!4065 = !DILocation(line: 1116, column: 21, scope: !4058)
!4066 = !DILocation(line: 1116, column: 20, scope: !4058)
!4067 = !DILocation(line: 1116, column: 19, scope: !4058)
!4068 = !DILocation(line: 1116, column: 17, scope: !4058)
!4069 = !DILocation(line: 1116, column: 13, scope: !4058)
!4070 = !DILocation(line: 1117, column: 18, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4058, file: !361, line: 1117, column: 18)
!4072 = !DILocation(line: 1117, column: 24, scope: !4071)
!4073 = !DILocation(line: 1117, column: 18, scope: !4058)
!4074 = !DILocation(line: 1118, column: 55, scope: !4071)
!4075 = !DILocation(line: 1118, column: 65, scope: !4071)
!4076 = !DILocation(line: 1118, column: 73, scope: !4071)
!4077 = !DILocation(line: 1118, column: 70, scope: !4071)
!4078 = !DILocation(line: 1118, column: 36, scope: !4071)
!4079 = !DILocation(line: 1118, column: 102, scope: !4071)
!4080 = !DILocation(line: 1118, column: 112, scope: !4071)
!4081 = !DILocation(line: 1118, column: 120, scope: !4071)
!4082 = !DILocation(line: 1118, column: 117, scope: !4071)
!4083 = !DILocation(line: 1118, column: 83, scope: !4071)
!4084 = !DILocation(line: 1118, column: 127, scope: !4071)
!4085 = !DILocation(line: 1118, column: 80, scope: !4071)
!4086 = !DILocation(line: 1118, column: 153, scope: !4071)
!4087 = !DILocation(line: 1118, column: 163, scope: !4071)
!4088 = !DILocation(line: 1118, column: 171, scope: !4071)
!4089 = !DILocation(line: 1118, column: 168, scope: !4071)
!4090 = !DILocation(line: 1118, column: 136, scope: !4071)
!4091 = !DILocation(line: 1118, column: 178, scope: !4071)
!4092 = !DILocation(line: 1118, column: 133, scope: !4071)
!4093 = !DILocation(line: 1118, column: 188, scope: !4071)
!4094 = !DILocation(line: 1118, column: 17, scope: !4071)
!4095 = !DILocation(line: 1118, column: 13, scope: !4071)
!4096 = !DILocation(line: 1121, column: 52, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4071, file: !361, line: 1119, column: 14)
!4098 = !DILocation(line: 1121, column: 62, scope: !4097)
!4099 = !DILocation(line: 1121, column: 70, scope: !4097)
!4100 = !DILocation(line: 1121, column: 67, scope: !4097)
!4101 = !DILocation(line: 1121, column: 21, scope: !4097)
!4102 = !DILocation(line: 1121, column: 20, scope: !4097)
!4103 = !DILocation(line: 1121, column: 17, scope: !4097)
!4104 = !DILocation(line: 1124, column: 30, scope: !4046)
!4105 = !DILocation(line: 1124, column: 13, scope: !4046)
!4106 = !DILocation(line: 1126, column: 16, scope: !4046)
!4107 = !DILocation(line: 1126, column: 13, scope: !4046)
!4108 = !DILocation(line: 1128, column: 13, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4046, file: !361, line: 1128, column: 13)
!4110 = !DILocation(line: 1128, column: 19, scope: !4109)
!4111 = !DILocation(line: 1128, column: 13, scope: !4046)
!4112 = !DILocation(line: 1129, column: 13, scope: !4109)
!4113 = !DILocation(line: 1129, column: 85, scope: !4114)
!4114 = !DILexicalBlockFile(scope: !4115, file: !361, discriminator: 1)
!4115 = distinct !DILexicalBlock(scope: !4109, file: !361, line: 1129, column: 16)
!4116 = !DILocation(line: 1129, column: 69, scope: !4115)
!4117 = !DILocation(line: 1129, column: 55, scope: !4115)
!4118 = !DILocation(line: 1129, column: 63, scope: !4115)
!4119 = !DILocation(line: 1129, column: 60, scope: !4115)
!4120 = !DILocation(line: 1129, column: 67, scope: !4115)
!4121 = !DILocation(line: 1129, column: 91, scope: !4115)
!4122 = !DILocation(line: 1129, column: 91, scope: !4123)
!4123 = !DILexicalBlockFile(scope: !4115, file: !361, discriminator: 2)
!4124 = !DILocation(line: 1129, column: 91, scope: !4125)
!4125 = !DILexicalBlockFile(scope: !4115, file: !361, discriminator: 3)
!4126 = !DILocation(line: 1130, column: 18, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4109, file: !361, line: 1130, column: 18)
!4128 = !DILocation(line: 1130, column: 24, scope: !4127)
!4129 = !DILocation(line: 1130, column: 18, scope: !4109)
!4130 = !DILocation(line: 1131, column: 13, scope: !4127)
!4131 = !DILocation(line: 1131, column: 87, scope: !4132)
!4132 = !DILexicalBlockFile(scope: !4133, file: !361, discriminator: 1)
!4133 = distinct !DILexicalBlock(scope: !4127, file: !361, line: 1131, column: 16)
!4134 = !DILocation(line: 1131, column: 70, scope: !4133)
!4135 = !DILocation(line: 1131, column: 56, scope: !4133)
!4136 = !DILocation(line: 1131, column: 64, scope: !4133)
!4137 = !DILocation(line: 1131, column: 61, scope: !4133)
!4138 = !DILocation(line: 1131, column: 19, scope: !4133)
!4139 = !DILocation(line: 1131, column: 68, scope: !4133)
!4140 = !DILocation(line: 1131, column: 93, scope: !4133)
!4141 = !DILocation(line: 1131, column: 93, scope: !4142)
!4142 = !DILexicalBlockFile(scope: !4133, file: !361, discriminator: 2)
!4143 = !DILocation(line: 1131, column: 93, scope: !4144)
!4144 = !DILexicalBlockFile(scope: !4133, file: !361, discriminator: 3)
!4145 = !DILocation(line: 1132, column: 18, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4127, file: !361, line: 1132, column: 18)
!4147 = !DILocation(line: 1132, column: 24, scope: !4146)
!4148 = !DILocation(line: 1132, column: 18, scope: !4127)
!4149 = !DILocation(line: 1133, column: 13, scope: !4146)
!4150 = !DILocation(line: 1133, column: 65, scope: !4151)
!4151 = !DILexicalBlockFile(scope: !4152, file: !361, discriminator: 1)
!4152 = distinct !DILexicalBlock(scope: !4146, file: !361, line: 1133, column: 16)
!4153 = !DILocation(line: 1133, column: 54, scope: !4152)
!4154 = !DILocation(line: 1133, column: 37, scope: !4152)
!4155 = !DILocation(line: 1133, column: 45, scope: !4152)
!4156 = !DILocation(line: 1133, column: 42, scope: !4152)
!4157 = !DILocation(line: 1133, column: 18, scope: !4152)
!4158 = !DILocation(line: 1133, column: 52, scope: !4152)
!4159 = !DILocation(line: 1133, column: 118, scope: !4152)
!4160 = !DILocation(line: 1133, column: 123, scope: !4152)
!4161 = !DILocation(line: 1133, column: 107, scope: !4152)
!4162 = !DILocation(line: 1133, column: 90, scope: !4152)
!4163 = !DILocation(line: 1133, column: 98, scope: !4152)
!4164 = !DILocation(line: 1133, column: 95, scope: !4152)
!4165 = !DILocation(line: 1133, column: 71, scope: !4152)
!4166 = !DILocation(line: 1133, column: 105, scope: !4152)
!4167 = !DILocation(line: 1133, column: 174, scope: !4152)
!4168 = !DILocation(line: 1133, column: 179, scope: !4152)
!4169 = !DILocation(line: 1133, column: 163, scope: !4152)
!4170 = !DILocation(line: 1133, column: 146, scope: !4152)
!4171 = !DILocation(line: 1133, column: 154, scope: !4152)
!4172 = !DILocation(line: 1133, column: 151, scope: !4152)
!4173 = !DILocation(line: 1133, column: 129, scope: !4152)
!4174 = !DILocation(line: 1133, column: 161, scope: !4152)
!4175 = !DILocation(line: 1133, column: 186, scope: !4152)
!4176 = !DILocation(line: 1133, column: 186, scope: !4177)
!4177 = !DILexicalBlockFile(scope: !4152, file: !361, discriminator: 2)
!4178 = !DILocation(line: 1133, column: 186, scope: !4179)
!4179 = !DILexicalBlockFile(scope: !4152, file: !361, discriminator: 3)
!4180 = !DILocation(line: 1136, column: 13, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4146, file: !361, line: 1134, column: 14)
!4182 = !DILocation(line: 1136, column: 75, scope: !4183)
!4183 = !DILexicalBlockFile(scope: !4184, file: !361, discriminator: 1)
!4184 = distinct !DILexicalBlock(scope: !4181, file: !361, line: 1136, column: 16)
!4185 = !DILocation(line: 1136, column: 50, scope: !4184)
!4186 = !DILocation(line: 1136, column: 58, scope: !4184)
!4187 = !DILocation(line: 1136, column: 55, scope: !4184)
!4188 = !DILocation(line: 1136, column: 19, scope: !4184)
!4189 = !DILocation(line: 1136, column: 62, scope: !4184)
!4190 = !DILocation(line: 1136, column: 81, scope: !4184)
!4191 = !DILocation(line: 1136, column: 81, scope: !4192)
!4192 = !DILexicalBlockFile(scope: !4184, file: !361, discriminator: 2)
!4193 = !DILocation(line: 1138, column: 5, scope: !4046)
!4194 = !DILocation(line: 1112, column: 41, scope: !4039)
!4195 = !DILocation(line: 1112, column: 38, scope: !4039)
!4196 = !DILocation(line: 1112, column: 5, scope: !4039)
!4197 = !DILocation(line: 1139, column: 12, scope: !694)
!4198 = !DILocation(line: 1139, column: 5, scope: !694)
!4199 = !DILocation(line: 1140, column: 1, scope: !694)
!4200 = !DILocation(line: 1490, column: 36, scope: !714)
!4201 = !DILocation(line: 1490, column: 55, scope: !714)
!4202 = !DILocation(line: 1490, column: 69, scope: !714)
!4203 = !DILocation(line: 1493, column: 5, scope: !714)
!4204 = !DILocation(line: 1493, column: 20, scope: !714)
!4205 = !DILocation(line: 1494, column: 5, scope: !714)
!4206 = !DILocation(line: 1494, column: 18, scope: !714)
!4207 = !DILocation(line: 1495, column: 5, scope: !714)
!4208 = !DILocation(line: 1495, column: 16, scope: !714)
!4209 = !DILocation(line: 1496, column: 5, scope: !714)
!4210 = !DILocation(line: 1496, column: 15, scope: !714)
!4211 = !DILocation(line: 1498, column: 29, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !714, file: !361, line: 1498, column: 9)
!4213 = !DILocation(line: 1498, column: 10, scope: !4212)
!4214 = !DILocation(line: 1498, column: 9, scope: !714)
!4215 = !DILocation(line: 1499, column: 9, scope: !4212)
!4216 = !DILocation(line: 1501, column: 9, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !714, file: !361, line: 1501, column: 9)
!4218 = !DILocation(line: 1501, column: 19, scope: !4217)
!4219 = !DILocation(line: 1501, column: 57, scope: !4217)
!4220 = !DILocation(line: 1501, column: 56, scope: !4217)
!4221 = !DILocation(line: 1501, column: 23, scope: !4217)
!4222 = !DILocation(line: 1501, column: 9, scope: !714)
!4223 = !DILocation(line: 1502, column: 25, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4217, file: !361, line: 1501, column: 64)
!4225 = !DILocation(line: 1502, column: 9, scope: !4224)
!4226 = !DILocation(line: 1504, column: 9, scope: !4224)
!4227 = !DILocation(line: 1506, column: 48, scope: !714)
!4228 = !DILocation(line: 1506, column: 58, scope: !714)
!4229 = !DILocation(line: 1506, column: 62, scope: !714)
!4230 = !DILocation(line: 1506, column: 61, scope: !714)
!4231 = !DILocation(line: 1506, column: 10, scope: !714)
!4232 = !DILocation(line: 1506, column: 8, scope: !714)
!4233 = !DILocation(line: 1507, column: 9, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !714, file: !361, line: 1507, column: 9)
!4235 = !DILocation(line: 1507, column: 12, scope: !4234)
!4236 = !DILocation(line: 1507, column: 9, scope: !714)
!4237 = !DILocation(line: 1508, column: 9, scope: !4234)
!4238 = !DILocation(line: 1509, column: 43, scope: !714)
!4239 = !DILocation(line: 1509, column: 26, scope: !714)
!4240 = !DILocation(line: 1509, column: 9, scope: !714)
!4241 = !DILocation(line: 1511, column: 10, scope: !714)
!4242 = !DILocation(line: 1511, column: 20, scope: !714)
!4243 = !DILocation(line: 1511, column: 8, scope: !714)
!4244 = !DILocation(line: 1512, column: 12, scope: !726)
!4245 = !DILocation(line: 1512, column: 10, scope: !726)
!4246 = !DILocation(line: 1512, column: 17, scope: !4247)
!4247 = !DILexicalBlockFile(scope: !4248, file: !361, discriminator: 2)
!4248 = !DILexicalBlockFile(scope: !725, file: !361, discriminator: 1)
!4249 = !DILocation(line: 1512, column: 21, scope: !725)
!4250 = !DILocation(line: 1512, column: 31, scope: !725)
!4251 = !DILocation(line: 1512, column: 35, scope: !725)
!4252 = !DILocation(line: 1512, column: 34, scope: !725)
!4253 = !DILocation(line: 1512, column: 19, scope: !725)
!4254 = !DILocation(line: 1512, column: 5, scope: !726)
!4255 = !DILocation(line: 1513, column: 9, scope: !724)
!4256 = !DILocation(line: 1513, column: 13, scope: !724)
!4257 = !DILocation(line: 1513, column: 41, scope: !724)
!4258 = !DILocation(line: 1513, column: 38, scope: !724)
!4259 = !DILocation(line: 1513, column: 20, scope: !724)
!4260 = !DILocation(line: 1513, column: 19, scope: !724)
!4261 = !DILocation(line: 1513, column: 46, scope: !724)
!4262 = !DILocation(line: 1514, column: 9, scope: !724)
!4263 = !DILocation(line: 1514, column: 18, scope: !4264)
!4264 = !DILexicalBlockFile(scope: !4265, file: !361, discriminator: 1)
!4265 = distinct !DILexicalBlock(scope: !4266, file: !361, line: 1514, column: 18)
!4266 = distinct !DILexicalBlock(scope: !724, file: !361, line: 1514, column: 12)
!4267 = !DILocation(line: 1514, column: 24, scope: !4265)
!4268 = !DILocation(line: 1514, column: 18, scope: !4266)
!4269 = !DILocation(line: 1514, column: 30, scope: !4270)
!4270 = !DILexicalBlockFile(scope: !4265, file: !361, discriminator: 2)
!4271 = !DILocation(line: 1514, column: 108, scope: !4272)
!4272 = !DILexicalBlockFile(scope: !4273, file: !361, discriminator: 4)
!4273 = distinct !DILexicalBlock(scope: !4265, file: !361, line: 1514, column: 33)
!4274 = !DILocation(line: 1514, column: 113, scope: !4273)
!4275 = !DILocation(line: 1514, column: 92, scope: !4273)
!4276 = !DILocation(line: 1514, column: 72, scope: !4273)
!4277 = !DILocation(line: 1514, column: 84, scope: !4273)
!4278 = !DILocation(line: 1514, column: 79, scope: !4273)
!4279 = !DILocation(line: 1514, column: 90, scope: !4273)
!4280 = !DILocation(line: 1514, column: 122, scope: !4273)
!4281 = !DILocation(line: 1514, column: 122, scope: !4282)
!4282 = !DILexicalBlockFile(scope: !4273, file: !361, discriminator: 5)
!4283 = !DILocation(line: 1514, column: 122, scope: !4284)
!4284 = !DILexicalBlockFile(scope: !4273, file: !361, discriminator: 6)
!4285 = !DILocation(line: 1514, column: 144, scope: !4286)
!4286 = !DILexicalBlockFile(scope: !4287, file: !361, discriminator: 3)
!4287 = distinct !DILexicalBlock(scope: !4265, file: !361, line: 1514, column: 144)
!4288 = !DILocation(line: 1514, column: 150, scope: !4287)
!4289 = !DILocation(line: 1514, column: 144, scope: !4265)
!4290 = !DILocation(line: 1514, column: 156, scope: !4291)
!4291 = !DILexicalBlockFile(scope: !4287, file: !361, discriminator: 8)
!4292 = !DILocation(line: 1514, column: 222, scope: !4293)
!4293 = !DILexicalBlockFile(scope: !4294, file: !361, discriminator: 10)
!4294 = distinct !DILexicalBlock(scope: !4287, file: !361, line: 1514, column: 159)
!4295 = !DILocation(line: 1514, column: 227, scope: !4294)
!4296 = !DILocation(line: 1514, column: 212, scope: !4294)
!4297 = !DILocation(line: 1514, column: 192, scope: !4294)
!4298 = !DILocation(line: 1514, column: 204, scope: !4294)
!4299 = !DILocation(line: 1514, column: 199, scope: !4294)
!4300 = !DILocation(line: 1514, column: 162, scope: !4294)
!4301 = !DILocation(line: 1514, column: 210, scope: !4294)
!4302 = !DILocation(line: 1514, column: 236, scope: !4294)
!4303 = !DILocation(line: 1514, column: 236, scope: !4304)
!4304 = !DILexicalBlockFile(scope: !4294, file: !361, discriminator: 11)
!4305 = !DILocation(line: 1514, column: 236, scope: !4306)
!4306 = !DILexicalBlockFile(scope: !4294, file: !361, discriminator: 12)
!4307 = !DILocation(line: 1514, column: 258, scope: !4308)
!4308 = !DILexicalBlockFile(scope: !4309, file: !361, discriminator: 9)
!4309 = distinct !DILexicalBlock(scope: !4287, file: !361, line: 1514, column: 258)
!4310 = !DILocation(line: 1514, column: 264, scope: !4309)
!4311 = !DILocation(line: 1514, column: 258, scope: !4287)
!4312 = !DILocation(line: 1514, column: 270, scope: !4313)
!4313 = !DILexicalBlockFile(scope: !4309, file: !361, discriminator: 13)
!4314 = !DILocation(line: 1514, column: 322, scope: !4315)
!4315 = !DILexicalBlockFile(scope: !4316, file: !361, discriminator: 15)
!4316 = distinct !DILexicalBlock(scope: !4309, file: !361, line: 1514, column: 273)
!4317 = !DILocation(line: 1514, column: 327, scope: !4316)
!4318 = !DILocation(line: 1514, column: 315, scope: !4316)
!4319 = !DILocation(line: 1514, column: 295, scope: !4316)
!4320 = !DILocation(line: 1514, column: 305, scope: !4316)
!4321 = !DILocation(line: 1514, column: 301, scope: !4316)
!4322 = !DILocation(line: 1514, column: 275, scope: !4316)
!4323 = !DILocation(line: 1514, column: 313, scope: !4316)
!4324 = !DILocation(line: 1514, column: 381, scope: !4316)
!4325 = !DILocation(line: 1514, column: 386, scope: !4316)
!4326 = !DILocation(line: 1514, column: 392, scope: !4316)
!4327 = !DILocation(line: 1514, column: 374, scope: !4316)
!4328 = !DILocation(line: 1514, column: 354, scope: !4316)
!4329 = !DILocation(line: 1514, column: 364, scope: !4316)
!4330 = !DILocation(line: 1514, column: 360, scope: !4316)
!4331 = !DILocation(line: 1514, column: 334, scope: !4316)
!4332 = !DILocation(line: 1514, column: 372, scope: !4316)
!4333 = !DILocation(line: 1514, column: 443, scope: !4316)
!4334 = !DILocation(line: 1514, column: 448, scope: !4316)
!4335 = !DILocation(line: 1514, column: 454, scope: !4316)
!4336 = !DILocation(line: 1514, column: 436, scope: !4316)
!4337 = !DILocation(line: 1514, column: 416, scope: !4316)
!4338 = !DILocation(line: 1514, column: 426, scope: !4316)
!4339 = !DILocation(line: 1514, column: 422, scope: !4316)
!4340 = !DILocation(line: 1514, column: 398, scope: !4316)
!4341 = !DILocation(line: 1514, column: 434, scope: !4316)
!4342 = !DILocation(line: 1514, column: 461, scope: !4316)
!4343 = !DILocation(line: 1514, column: 461, scope: !4344)
!4344 = !DILexicalBlockFile(scope: !4316, file: !361, discriminator: 16)
!4345 = !DILocation(line: 1514, column: 461, scope: !4346)
!4346 = !DILexicalBlockFile(scope: !4316, file: !361, discriminator: 17)
!4347 = !DILocation(line: 1514, column: 479, scope: !4348)
!4348 = !DILexicalBlockFile(scope: !4309, file: !361, discriminator: 14)
!4349 = !DILocation(line: 1514, column: 549, scope: !4350)
!4350 = !DILexicalBlockFile(scope: !4351, file: !361, discriminator: 18)
!4351 = distinct !DILexicalBlock(scope: !4309, file: !361, line: 1514, column: 482)
!4352 = !DILocation(line: 1514, column: 517, scope: !4351)
!4353 = !DILocation(line: 1514, column: 529, scope: !4351)
!4354 = !DILocation(line: 1514, column: 524, scope: !4351)
!4355 = !DILocation(line: 1514, column: 485, scope: !4351)
!4356 = !DILocation(line: 1514, column: 535, scope: !4351)
!4357 = !DILocation(line: 1514, column: 557, scope: !4351)
!4358 = !DILocation(line: 1514, column: 557, scope: !4359)
!4359 = !DILexicalBlockFile(scope: !4351, file: !361, discriminator: 19)
!4360 = !DILocation(line: 1514, column: 570, scope: !4361)
!4361 = !DILexicalBlockFile(scope: !4266, file: !361, discriminator: 7)
!4362 = !DILocation(line: 1514, column: 570, scope: !4363)
!4363 = !DILexicalBlockFile(scope: !4266, file: !361, discriminator: 20)
!4364 = !DILocation(line: 1515, column: 5, scope: !725)
!4365 = !DILocation(line: 1515, column: 5, scope: !724)
!4366 = !DILocation(line: 1512, column: 47, scope: !725)
!4367 = !DILocation(line: 1512, column: 44, scope: !725)
!4368 = !DILocation(line: 1512, column: 5, scope: !725)
!4369 = !DILocation(line: 1516, column: 12, scope: !714)
!4370 = !DILocation(line: 1516, column: 5, scope: !714)
!4371 = !DILocation(line: 1517, column: 1, scope: !714)
!4372 = !DILocation(line: 1457, column: 36, scope: !734)
!4373 = !DILocation(line: 1457, column: 55, scope: !734)
!4374 = !DILocation(line: 1457, column: 69, scope: !734)
!4375 = !DILocation(line: 1460, column: 5, scope: !734)
!4376 = !DILocation(line: 1460, column: 20, scope: !734)
!4377 = !DILocation(line: 1461, column: 5, scope: !734)
!4378 = !DILocation(line: 1461, column: 16, scope: !734)
!4379 = !DILocation(line: 1462, column: 5, scope: !734)
!4380 = !DILocation(line: 1462, column: 15, scope: !734)
!4381 = !DILocation(line: 1464, column: 35, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !734, file: !361, line: 1464, column: 9)
!4383 = !DILocation(line: 1464, column: 45, scope: !4382)
!4384 = !DILocation(line: 1464, column: 50, scope: !4382)
!4385 = !DILocation(line: 1464, column: 10, scope: !4382)
!4386 = !DILocation(line: 1464, column: 9, scope: !734)
!4387 = !DILocation(line: 1465, column: 9, scope: !4382)
!4388 = !DILocation(line: 1467, column: 48, scope: !734)
!4389 = !DILocation(line: 1467, column: 58, scope: !734)
!4390 = !DILocation(line: 1467, column: 62, scope: !734)
!4391 = !DILocation(line: 1467, column: 61, scope: !734)
!4392 = !DILocation(line: 1467, column: 10, scope: !734)
!4393 = !DILocation(line: 1467, column: 8, scope: !734)
!4394 = !DILocation(line: 1468, column: 9, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !734, file: !361, line: 1468, column: 9)
!4396 = !DILocation(line: 1468, column: 12, scope: !4395)
!4397 = !DILocation(line: 1468, column: 9, scope: !734)
!4398 = !DILocation(line: 1469, column: 9, scope: !4395)
!4399 = !DILocation(line: 1470, column: 45, scope: !734)
!4400 = !DILocation(line: 1470, column: 28, scope: !734)
!4401 = !DILocation(line: 1470, column: 9, scope: !734)
!4402 = !DILocation(line: 1472, column: 12, scope: !745)
!4403 = !DILocation(line: 1472, column: 10, scope: !745)
!4404 = !DILocation(line: 1472, column: 17, scope: !4405)
!4405 = !DILexicalBlockFile(scope: !4406, file: !361, discriminator: 2)
!4406 = !DILexicalBlockFile(scope: !744, file: !361, discriminator: 1)
!4407 = !DILocation(line: 1472, column: 21, scope: !744)
!4408 = !DILocation(line: 1472, column: 31, scope: !744)
!4409 = !DILocation(line: 1472, column: 19, scope: !744)
!4410 = !DILocation(line: 1472, column: 5, scope: !745)
!4411 = !DILocation(line: 1473, column: 9, scope: !743)
!4412 = !DILocation(line: 1473, column: 13, scope: !743)
!4413 = !DILocation(line: 1473, column: 22, scope: !743)
!4414 = !DILocation(line: 1473, column: 28, scope: !743)
!4415 = !DILocation(line: 1473, column: 21, scope: !743)
!4416 = !DILocation(line: 1473, column: 79, scope: !4417)
!4417 = !DILexicalBlockFile(scope: !743, file: !361, discriminator: 1)
!4418 = !DILocation(line: 1473, column: 89, scope: !743)
!4419 = !DILocation(line: 1473, column: 101, scope: !743)
!4420 = !DILocation(line: 1473, column: 96, scope: !743)
!4421 = !DILocation(line: 1473, column: 42, scope: !743)
!4422 = !DILocation(line: 1473, column: 36, scope: !743)
!4423 = !DILocation(line: 1473, column: 108, scope: !743)
!4424 = !DILocation(line: 1473, column: 117, scope: !4425)
!4425 = !DILexicalBlockFile(scope: !743, file: !361, discriminator: 2)
!4426 = !DILocation(line: 1473, column: 123, scope: !743)
!4427 = !DILocation(line: 1473, column: 116, scope: !743)
!4428 = !DILocation(line: 1473, column: 168, scope: !4429)
!4429 = !DILexicalBlockFile(scope: !743, file: !361, discriminator: 4)
!4430 = !DILocation(line: 1473, column: 178, scope: !743)
!4431 = !DILocation(line: 1473, column: 190, scope: !743)
!4432 = !DILocation(line: 1473, column: 185, scope: !743)
!4433 = !DILocation(line: 1473, column: 138, scope: !743)
!4434 = !DILocation(line: 1473, column: 137, scope: !743)
!4435 = !DILocation(line: 1473, column: 131, scope: !743)
!4436 = !DILocation(line: 1473, column: 197, scope: !743)
!4437 = !DILocation(line: 1473, column: 206, scope: !4438)
!4438 = !DILexicalBlockFile(scope: !743, file: !361, discriminator: 5)
!4439 = !DILocation(line: 1473, column: 212, scope: !743)
!4440 = !DILocation(line: 1473, column: 205, scope: !743)
!4441 = !DILocation(line: 1473, column: 247, scope: !4442)
!4442 = !DILexicalBlockFile(scope: !743, file: !361, discriminator: 7)
!4443 = !DILocation(line: 1473, column: 257, scope: !743)
!4444 = !DILocation(line: 1473, column: 267, scope: !743)
!4445 = !DILocation(line: 1473, column: 263, scope: !743)
!4446 = !DILocation(line: 1473, column: 227, scope: !743)
!4447 = !DILocation(line: 1473, column: 298, scope: !743)
!4448 = !DILocation(line: 1473, column: 308, scope: !743)
!4449 = !DILocation(line: 1473, column: 318, scope: !743)
!4450 = !DILocation(line: 1473, column: 314, scope: !743)
!4451 = !DILocation(line: 1473, column: 278, scope: !743)
!4452 = !DILocation(line: 1473, column: 326, scope: !743)
!4453 = !DILocation(line: 1473, column: 275, scope: !743)
!4454 = !DILocation(line: 1473, column: 353, scope: !743)
!4455 = !DILocation(line: 1473, column: 363, scope: !743)
!4456 = !DILocation(line: 1473, column: 373, scope: !743)
!4457 = !DILocation(line: 1473, column: 369, scope: !743)
!4458 = !DILocation(line: 1473, column: 335, scope: !743)
!4459 = !DILocation(line: 1473, column: 381, scope: !743)
!4460 = !DILocation(line: 1473, column: 332, scope: !743)
!4461 = !DILocation(line: 1473, column: 390, scope: !743)
!4462 = !DILocation(line: 1473, column: 436, scope: !4463)
!4463 = !DILexicalBlockFile(scope: !743, file: !361, discriminator: 8)
!4464 = !DILocation(line: 1473, column: 446, scope: !743)
!4465 = !DILocation(line: 1473, column: 458, scope: !743)
!4466 = !DILocation(line: 1473, column: 453, scope: !743)
!4467 = !DILocation(line: 1473, column: 404, scope: !743)
!4468 = !DILocation(line: 1473, column: 403, scope: !743)
!4469 = !DILocation(line: 1473, column: 116, scope: !4470)
!4470 = !DILexicalBlockFile(scope: !4471, file: !361, discriminator: 10)
!4471 = !DILexicalBlockFile(scope: !743, file: !361, discriminator: 9)
!4472 = !DILocation(line: 1473, column: 21, scope: !4473)
!4473 = !DILexicalBlockFile(scope: !4474, file: !361, discriminator: 11)
!4474 = !DILexicalBlockFile(scope: !743, file: !361, discriminator: 6)
!4475 = !DILocation(line: 1473, column: 13, scope: !4476)
!4476 = !DILexicalBlockFile(scope: !4477, file: !361, discriminator: 12)
!4477 = !DILexicalBlockFile(scope: !743, file: !361, discriminator: 3)
!4478 = !DILocation(line: 1474, column: 35, scope: !743)
!4479 = !DILocation(line: 1474, column: 39, scope: !743)
!4480 = !DILocation(line: 1474, column: 18, scope: !743)
!4481 = !DILocation(line: 1474, column: 13, scope: !743)
!4482 = !DILocation(line: 1474, column: 16, scope: !743)
!4483 = !DILocation(line: 1475, column: 5, scope: !744)
!4484 = !DILocation(line: 1475, column: 5, scope: !743)
!4485 = !DILocation(line: 1472, column: 41, scope: !744)
!4486 = !DILocation(line: 1472, column: 38, scope: !744)
!4487 = !DILocation(line: 1472, column: 5, scope: !744)
!4488 = !DILocation(line: 1476, column: 12, scope: !734)
!4489 = !DILocation(line: 1476, column: 5, scope: !734)
!4490 = !DILocation(line: 1477, column: 1, scope: !734)
!4491 = !DILocation(line: 146, column: 26, scope: !746)
!4492 = !DILocation(line: 148, column: 5, scope: !746)
!4493 = !DILocation(line: 148, column: 13, scope: !746)
!4494 = !DILocation(line: 149, column: 5, scope: !746)
!4495 = !DILocation(line: 149, column: 13, scope: !746)
!4496 = !DILocation(line: 150, column: 5, scope: !746)
!4497 = !DILocation(line: 150, column: 19, scope: !746)
!4498 = !DILocation(line: 154, column: 9, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !746, file: !361, line: 154, column: 9)
!4500 = !DILocation(line: 154, column: 17, scope: !4499)
!4501 = !DILocation(line: 154, column: 9, scope: !746)
!4502 = !DILocation(line: 155, column: 20, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4499, file: !361, line: 154, column: 22)
!4504 = !DILocation(line: 155, column: 19, scope: !4503)
!4505 = !DILocation(line: 155, column: 17, scope: !4503)
!4506 = !DILocation(line: 156, column: 14, scope: !4503)
!4507 = !DILocation(line: 157, column: 5, scope: !4503)
!4508 = !DILocation(line: 158, column: 14, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4499, file: !361, line: 157, column: 12)
!4510 = !DILocation(line: 160, column: 10, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !746, file: !361, line: 160, column: 10)
!4512 = !DILocation(line: 160, column: 18, scope: !4511)
!4513 = !DILocation(line: 160, column: 10, scope: !746)
!4514 = !DILocation(line: 160, column: 36, scope: !4515)
!4515 = !DILexicalBlockFile(scope: !4511, file: !361, discriminator: 1)
!4516 = !DILocation(line: 160, column: 28, scope: !4511)
!4517 = !DILocation(line: 161, column: 13, scope: !746)
!4518 = !DILocation(line: 164, column: 18, scope: !746)
!4519 = !DILocation(line: 164, column: 11, scope: !746)
!4520 = !DILocation(line: 164, column: 9, scope: !746)
!4521 = !DILocation(line: 170, column: 9, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !746, file: !361, line: 170, column: 9)
!4523 = !DILocation(line: 170, column: 13, scope: !4522)
!4524 = !DILocation(line: 170, column: 9, scope: !746)
!4525 = !DILocation(line: 171, column: 40, scope: !4522)
!4526 = !DILocation(line: 171, column: 38, scope: !4522)
!4527 = !DILocation(line: 171, column: 16, scope: !4522)
!4528 = !DILocation(line: 171, column: 9, scope: !4522)
!4529 = !DILocation(line: 173, column: 33, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4522, file: !361, line: 172, column: 10)
!4531 = !DILocation(line: 173, column: 37, scope: !4530)
!4532 = !DILocation(line: 173, column: 16, scope: !4530)
!4533 = !DILocation(line: 173, column: 47, scope: !4530)
!4534 = !DILocation(line: 173, column: 59, scope: !4530)
!4535 = !DILocation(line: 173, column: 63, scope: !4530)
!4536 = !DILocation(line: 173, column: 55, scope: !4530)
!4537 = !DILocation(line: 173, column: 69, scope: !4530)
!4538 = !DILocation(line: 173, column: 43, scope: !4530)
!4539 = !DILocation(line: 173, column: 14, scope: !4530)
!4540 = !DILocation(line: 174, column: 17, scope: !4530)
!4541 = !DILocation(line: 174, column: 24, scope: !4530)
!4542 = !DILocation(line: 174, column: 22, scope: !4530)
!4543 = !DILocation(line: 174, column: 16, scope: !4530)
!4544 = !DILocation(line: 174, column: 9, scope: !4530)
!4545 = !DILocation(line: 177, column: 1, scope: !746)
!4546 = !DILocation(line: 60, column: 16, scope: !755)
!4547 = !DILocation(line: 60, column: 30, scope: !755)
!4548 = !DILocation(line: 60, column: 41, scope: !755)
!4549 = !DILocation(line: 62, column: 5, scope: !755)
!4550 = !DILocation(line: 62, column: 9, scope: !755)
!4551 = !DILocation(line: 64, column: 12, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !755, file: !361, line: 64, column: 5)
!4553 = !DILocation(line: 64, column: 10, scope: !4552)
!4554 = !DILocation(line: 64, column: 17, scope: !4555)
!4555 = !DILexicalBlockFile(scope: !4556, file: !361, discriminator: 2)
!4556 = !DILexicalBlockFile(scope: !4557, file: !361, discriminator: 1)
!4557 = distinct !DILexicalBlock(scope: !4552, file: !361, line: 64, column: 5)
!4558 = !DILocation(line: 64, column: 21, scope: !4557)
!4559 = !DILocation(line: 64, column: 19, scope: !4557)
!4560 = !DILocation(line: 64, column: 5, scope: !4552)
!4561 = !DILocation(line: 65, column: 13, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !361, line: 65, column: 13)
!4563 = distinct !DILexicalBlock(scope: !4557, file: !361, line: 64, column: 32)
!4564 = !DILocation(line: 65, column: 26, scope: !4562)
!4565 = !DILocation(line: 65, column: 20, scope: !4562)
!4566 = !DILocation(line: 65, column: 17, scope: !4562)
!4567 = !DILocation(line: 65, column: 13, scope: !4563)
!4568 = !DILocation(line: 66, column: 21, scope: !4562)
!4569 = !DILocation(line: 66, column: 20, scope: !4562)
!4570 = !DILocation(line: 66, column: 13, scope: !4562)
!4571 = !DILocation(line: 67, column: 5, scope: !4563)
!4572 = !DILocation(line: 64, column: 28, scope: !4557)
!4573 = !DILocation(line: 64, column: 5, scope: !4557)
!4574 = !DILocation(line: 68, column: 13, scope: !755)
!4575 = !DILocation(line: 68, column: 12, scope: !755)
!4576 = !DILocation(line: 68, column: 5, scope: !755)
!4577 = !DILocation(line: 69, column: 1, scope: !755)
!4578 = !DILocation(line: 1563, column: 36, scope: !771)
!4579 = !DILocation(line: 1563, column: 55, scope: !771)
!4580 = !DILocation(line: 1563, column: 69, scope: !771)
!4581 = !DILocation(line: 1566, column: 5, scope: !771)
!4582 = !DILocation(line: 1566, column: 20, scope: !771)
!4583 = !DILocation(line: 1567, column: 5, scope: !771)
!4584 = !DILocation(line: 1567, column: 18, scope: !771)
!4585 = !DILocation(line: 1568, column: 5, scope: !771)
!4586 = !DILocation(line: 1568, column: 16, scope: !771)
!4587 = !DILocation(line: 1569, column: 5, scope: !771)
!4588 = !DILocation(line: 1569, column: 9, scope: !771)
!4589 = !DILocation(line: 1570, column: 5, scope: !771)
!4590 = !DILocation(line: 1570, column: 15, scope: !771)
!4591 = !DILocation(line: 1572, column: 29, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !771, file: !361, line: 1572, column: 9)
!4593 = !DILocation(line: 1572, column: 10, scope: !4592)
!4594 = !DILocation(line: 1572, column: 9, scope: !771)
!4595 = !DILocation(line: 1573, column: 9, scope: !4592)
!4596 = !DILocation(line: 1575, column: 9, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !771, file: !361, line: 1575, column: 9)
!4598 = !DILocation(line: 1575, column: 19, scope: !4597)
!4599 = !DILocation(line: 1575, column: 57, scope: !4597)
!4600 = !DILocation(line: 1575, column: 56, scope: !4597)
!4601 = !DILocation(line: 1575, column: 23, scope: !4597)
!4602 = !DILocation(line: 1575, column: 9, scope: !771)
!4603 = !DILocation(line: 1576, column: 25, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4597, file: !361, line: 1575, column: 64)
!4605 = !DILocation(line: 1576, column: 9, scope: !4604)
!4606 = !DILocation(line: 1578, column: 9, scope: !4604)
!4607 = !DILocation(line: 1580, column: 48, scope: !771)
!4608 = !DILocation(line: 1580, column: 58, scope: !771)
!4609 = !DILocation(line: 1580, column: 62, scope: !771)
!4610 = !DILocation(line: 1580, column: 61, scope: !771)
!4611 = !DILocation(line: 1580, column: 10, scope: !771)
!4612 = !DILocation(line: 1580, column: 8, scope: !771)
!4613 = !DILocation(line: 1581, column: 9, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !771, file: !361, line: 1581, column: 9)
!4615 = !DILocation(line: 1581, column: 12, scope: !4614)
!4616 = !DILocation(line: 1581, column: 9, scope: !771)
!4617 = !DILocation(line: 1582, column: 9, scope: !4614)
!4618 = !DILocation(line: 1583, column: 43, scope: !771)
!4619 = !DILocation(line: 1583, column: 26, scope: !771)
!4620 = !DILocation(line: 1583, column: 9, scope: !771)
!4621 = !DILocation(line: 1584, column: 10, scope: !771)
!4622 = !DILocation(line: 1584, column: 20, scope: !771)
!4623 = !DILocation(line: 1584, column: 8, scope: !771)
!4624 = !DILocation(line: 1586, column: 12, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !771, file: !361, line: 1586, column: 5)
!4626 = !DILocation(line: 1586, column: 10, scope: !4625)
!4627 = !DILocation(line: 1586, column: 17, scope: !4628)
!4628 = !DILexicalBlockFile(scope: !4629, file: !361, discriminator: 2)
!4629 = !DILexicalBlockFile(scope: !4630, file: !361, discriminator: 1)
!4630 = distinct !DILexicalBlock(scope: !4625, file: !361, line: 1586, column: 5)
!4631 = !DILocation(line: 1586, column: 21, scope: !4630)
!4632 = !DILocation(line: 1586, column: 31, scope: !4630)
!4633 = !DILocation(line: 1586, column: 35, scope: !4630)
!4634 = !DILocation(line: 1586, column: 34, scope: !4630)
!4635 = !DILocation(line: 1586, column: 19, scope: !4630)
!4636 = !DILocation(line: 1586, column: 5, scope: !4625)
!4637 = !DILocation(line: 1587, column: 37, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4630, file: !361, line: 1586, column: 54)
!4639 = !DILocation(line: 1587, column: 34, scope: !4638)
!4640 = !DILocation(line: 1587, column: 16, scope: !4638)
!4641 = !DILocation(line: 1587, column: 15, scope: !4638)
!4642 = !DILocation(line: 1587, column: 42, scope: !4638)
!4643 = !DILocation(line: 1587, column: 13, scope: !4638)
!4644 = !DILocation(line: 1588, column: 9, scope: !4638)
!4645 = !DILocation(line: 1588, column: 18, scope: !4646)
!4646 = !DILexicalBlockFile(scope: !4647, file: !361, discriminator: 1)
!4647 = distinct !DILexicalBlock(scope: !4648, file: !361, line: 1588, column: 18)
!4648 = distinct !DILexicalBlock(scope: !4638, file: !361, line: 1588, column: 12)
!4649 = !DILocation(line: 1588, column: 24, scope: !4647)
!4650 = !DILocation(line: 1588, column: 18, scope: !4648)
!4651 = !DILocation(line: 1588, column: 30, scope: !4652)
!4652 = !DILexicalBlockFile(scope: !4647, file: !361, discriminator: 2)
!4653 = !DILocation(line: 1588, column: 108, scope: !4654)
!4654 = !DILexicalBlockFile(scope: !4655, file: !361, discriminator: 4)
!4655 = distinct !DILexicalBlock(scope: !4647, file: !361, line: 1588, column: 33)
!4656 = !DILocation(line: 1588, column: 113, scope: !4655)
!4657 = !DILocation(line: 1588, column: 92, scope: !4655)
!4658 = !DILocation(line: 1588, column: 72, scope: !4655)
!4659 = !DILocation(line: 1588, column: 84, scope: !4655)
!4660 = !DILocation(line: 1588, column: 79, scope: !4655)
!4661 = !DILocation(line: 1588, column: 90, scope: !4655)
!4662 = !DILocation(line: 1588, column: 122, scope: !4655)
!4663 = !DILocation(line: 1588, column: 122, scope: !4664)
!4664 = !DILexicalBlockFile(scope: !4655, file: !361, discriminator: 5)
!4665 = !DILocation(line: 1588, column: 122, scope: !4666)
!4666 = !DILexicalBlockFile(scope: !4655, file: !361, discriminator: 6)
!4667 = !DILocation(line: 1588, column: 144, scope: !4668)
!4668 = !DILexicalBlockFile(scope: !4669, file: !361, discriminator: 3)
!4669 = distinct !DILexicalBlock(scope: !4647, file: !361, line: 1588, column: 144)
!4670 = !DILocation(line: 1588, column: 150, scope: !4669)
!4671 = !DILocation(line: 1588, column: 144, scope: !4647)
!4672 = !DILocation(line: 1588, column: 156, scope: !4673)
!4673 = !DILexicalBlockFile(scope: !4669, file: !361, discriminator: 8)
!4674 = !DILocation(line: 1588, column: 222, scope: !4675)
!4675 = !DILexicalBlockFile(scope: !4676, file: !361, discriminator: 10)
!4676 = distinct !DILexicalBlock(scope: !4669, file: !361, line: 1588, column: 159)
!4677 = !DILocation(line: 1588, column: 227, scope: !4676)
!4678 = !DILocation(line: 1588, column: 212, scope: !4676)
!4679 = !DILocation(line: 1588, column: 192, scope: !4676)
!4680 = !DILocation(line: 1588, column: 204, scope: !4676)
!4681 = !DILocation(line: 1588, column: 199, scope: !4676)
!4682 = !DILocation(line: 1588, column: 162, scope: !4676)
!4683 = !DILocation(line: 1588, column: 210, scope: !4676)
!4684 = !DILocation(line: 1588, column: 236, scope: !4676)
!4685 = !DILocation(line: 1588, column: 236, scope: !4686)
!4686 = !DILexicalBlockFile(scope: !4676, file: !361, discriminator: 11)
!4687 = !DILocation(line: 1588, column: 236, scope: !4688)
!4688 = !DILexicalBlockFile(scope: !4676, file: !361, discriminator: 12)
!4689 = !DILocation(line: 1588, column: 258, scope: !4690)
!4690 = !DILexicalBlockFile(scope: !4691, file: !361, discriminator: 9)
!4691 = distinct !DILexicalBlock(scope: !4669, file: !361, line: 1588, column: 258)
!4692 = !DILocation(line: 1588, column: 264, scope: !4691)
!4693 = !DILocation(line: 1588, column: 258, scope: !4669)
!4694 = !DILocation(line: 1588, column: 270, scope: !4695)
!4695 = !DILexicalBlockFile(scope: !4691, file: !361, discriminator: 13)
!4696 = !DILocation(line: 1588, column: 322, scope: !4697)
!4697 = !DILexicalBlockFile(scope: !4698, file: !361, discriminator: 15)
!4698 = distinct !DILexicalBlock(scope: !4691, file: !361, line: 1588, column: 273)
!4699 = !DILocation(line: 1588, column: 327, scope: !4698)
!4700 = !DILocation(line: 1588, column: 315, scope: !4698)
!4701 = !DILocation(line: 1588, column: 295, scope: !4698)
!4702 = !DILocation(line: 1588, column: 305, scope: !4698)
!4703 = !DILocation(line: 1588, column: 301, scope: !4698)
!4704 = !DILocation(line: 1588, column: 275, scope: !4698)
!4705 = !DILocation(line: 1588, column: 313, scope: !4698)
!4706 = !DILocation(line: 1588, column: 381, scope: !4698)
!4707 = !DILocation(line: 1588, column: 386, scope: !4698)
!4708 = !DILocation(line: 1588, column: 392, scope: !4698)
!4709 = !DILocation(line: 1588, column: 374, scope: !4698)
!4710 = !DILocation(line: 1588, column: 354, scope: !4698)
!4711 = !DILocation(line: 1588, column: 364, scope: !4698)
!4712 = !DILocation(line: 1588, column: 360, scope: !4698)
!4713 = !DILocation(line: 1588, column: 334, scope: !4698)
!4714 = !DILocation(line: 1588, column: 372, scope: !4698)
!4715 = !DILocation(line: 1588, column: 443, scope: !4698)
!4716 = !DILocation(line: 1588, column: 448, scope: !4698)
!4717 = !DILocation(line: 1588, column: 454, scope: !4698)
!4718 = !DILocation(line: 1588, column: 436, scope: !4698)
!4719 = !DILocation(line: 1588, column: 416, scope: !4698)
!4720 = !DILocation(line: 1588, column: 426, scope: !4698)
!4721 = !DILocation(line: 1588, column: 422, scope: !4698)
!4722 = !DILocation(line: 1588, column: 398, scope: !4698)
!4723 = !DILocation(line: 1588, column: 434, scope: !4698)
!4724 = !DILocation(line: 1588, column: 461, scope: !4698)
!4725 = !DILocation(line: 1588, column: 461, scope: !4726)
!4726 = !DILexicalBlockFile(scope: !4698, file: !361, discriminator: 16)
!4727 = !DILocation(line: 1588, column: 461, scope: !4728)
!4728 = !DILexicalBlockFile(scope: !4698, file: !361, discriminator: 17)
!4729 = !DILocation(line: 1588, column: 479, scope: !4730)
!4730 = !DILexicalBlockFile(scope: !4691, file: !361, discriminator: 14)
!4731 = !DILocation(line: 1588, column: 549, scope: !4732)
!4732 = !DILexicalBlockFile(scope: !4733, file: !361, discriminator: 18)
!4733 = distinct !DILexicalBlock(scope: !4691, file: !361, line: 1588, column: 482)
!4734 = !DILocation(line: 1588, column: 517, scope: !4733)
!4735 = !DILocation(line: 1588, column: 529, scope: !4733)
!4736 = !DILocation(line: 1588, column: 524, scope: !4733)
!4737 = !DILocation(line: 1588, column: 485, scope: !4733)
!4738 = !DILocation(line: 1588, column: 535, scope: !4733)
!4739 = !DILocation(line: 1588, column: 557, scope: !4733)
!4740 = !DILocation(line: 1588, column: 557, scope: !4741)
!4741 = !DILexicalBlockFile(scope: !4733, file: !361, discriminator: 19)
!4742 = !DILocation(line: 1588, column: 570, scope: !4743)
!4743 = !DILexicalBlockFile(scope: !4648, file: !361, discriminator: 7)
!4744 = !DILocation(line: 1588, column: 570, scope: !4745)
!4745 = !DILexicalBlockFile(scope: !4648, file: !361, discriminator: 20)
!4746 = !DILocation(line: 1589, column: 5, scope: !4638)
!4747 = !DILocation(line: 1586, column: 47, scope: !4630)
!4748 = !DILocation(line: 1586, column: 44, scope: !4630)
!4749 = !DILocation(line: 1586, column: 5, scope: !4630)
!4750 = !DILocation(line: 1590, column: 12, scope: !771)
!4751 = !DILocation(line: 1590, column: 5, scope: !771)
!4752 = !DILocation(line: 1591, column: 1, scope: !771)
!4753 = !DILocation(line: 1530, column: 36, scope: !788)
!4754 = !DILocation(line: 1530, column: 55, scope: !788)
!4755 = !DILocation(line: 1530, column: 69, scope: !788)
!4756 = !DILocation(line: 1533, column: 5, scope: !788)
!4757 = !DILocation(line: 1533, column: 20, scope: !788)
!4758 = !DILocation(line: 1534, column: 5, scope: !788)
!4759 = !DILocation(line: 1534, column: 16, scope: !788)
!4760 = !DILocation(line: 1535, column: 5, scope: !788)
!4761 = !DILocation(line: 1535, column: 15, scope: !788)
!4762 = !DILocation(line: 1537, column: 35, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !788, file: !361, line: 1537, column: 9)
!4764 = !DILocation(line: 1537, column: 45, scope: !4763)
!4765 = !DILocation(line: 1537, column: 50, scope: !4763)
!4766 = !DILocation(line: 1537, column: 10, scope: !4763)
!4767 = !DILocation(line: 1537, column: 9, scope: !788)
!4768 = !DILocation(line: 1538, column: 9, scope: !4763)
!4769 = !DILocation(line: 1540, column: 48, scope: !788)
!4770 = !DILocation(line: 1540, column: 58, scope: !788)
!4771 = !DILocation(line: 1540, column: 62, scope: !788)
!4772 = !DILocation(line: 1540, column: 61, scope: !788)
!4773 = !DILocation(line: 1540, column: 10, scope: !788)
!4774 = !DILocation(line: 1540, column: 8, scope: !788)
!4775 = !DILocation(line: 1541, column: 9, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !788, file: !361, line: 1541, column: 9)
!4777 = !DILocation(line: 1541, column: 12, scope: !4776)
!4778 = !DILocation(line: 1541, column: 9, scope: !788)
!4779 = !DILocation(line: 1542, column: 9, scope: !4776)
!4780 = !DILocation(line: 1543, column: 45, scope: !788)
!4781 = !DILocation(line: 1543, column: 28, scope: !788)
!4782 = !DILocation(line: 1543, column: 9, scope: !788)
!4783 = !DILocation(line: 1545, column: 12, scope: !799)
!4784 = !DILocation(line: 1545, column: 10, scope: !799)
!4785 = !DILocation(line: 1545, column: 17, scope: !4786)
!4786 = !DILexicalBlockFile(scope: !4787, file: !361, discriminator: 2)
!4787 = !DILexicalBlockFile(scope: !798, file: !361, discriminator: 1)
!4788 = !DILocation(line: 1545, column: 21, scope: !798)
!4789 = !DILocation(line: 1545, column: 31, scope: !798)
!4790 = !DILocation(line: 1545, column: 19, scope: !798)
!4791 = !DILocation(line: 1545, column: 5, scope: !799)
!4792 = !DILocation(line: 1546, column: 9, scope: !797)
!4793 = !DILocation(line: 1546, column: 13, scope: !797)
!4794 = !DILocation(line: 1546, column: 22, scope: !797)
!4795 = !DILocation(line: 1546, column: 28, scope: !797)
!4796 = !DILocation(line: 1546, column: 21, scope: !797)
!4797 = !DILocation(line: 1546, column: 79, scope: !4798)
!4798 = !DILexicalBlockFile(scope: !797, file: !361, discriminator: 1)
!4799 = !DILocation(line: 1546, column: 89, scope: !797)
!4800 = !DILocation(line: 1546, column: 101, scope: !797)
!4801 = !DILocation(line: 1546, column: 96, scope: !797)
!4802 = !DILocation(line: 1546, column: 42, scope: !797)
!4803 = !DILocation(line: 1546, column: 36, scope: !797)
!4804 = !DILocation(line: 1546, column: 108, scope: !797)
!4805 = !DILocation(line: 1546, column: 117, scope: !4806)
!4806 = !DILexicalBlockFile(scope: !797, file: !361, discriminator: 2)
!4807 = !DILocation(line: 1546, column: 123, scope: !797)
!4808 = !DILocation(line: 1546, column: 116, scope: !797)
!4809 = !DILocation(line: 1546, column: 168, scope: !4810)
!4810 = !DILexicalBlockFile(scope: !797, file: !361, discriminator: 4)
!4811 = !DILocation(line: 1546, column: 178, scope: !797)
!4812 = !DILocation(line: 1546, column: 190, scope: !797)
!4813 = !DILocation(line: 1546, column: 185, scope: !797)
!4814 = !DILocation(line: 1546, column: 138, scope: !797)
!4815 = !DILocation(line: 1546, column: 137, scope: !797)
!4816 = !DILocation(line: 1546, column: 131, scope: !797)
!4817 = !DILocation(line: 1546, column: 197, scope: !797)
!4818 = !DILocation(line: 1546, column: 206, scope: !4819)
!4819 = !DILexicalBlockFile(scope: !797, file: !361, discriminator: 5)
!4820 = !DILocation(line: 1546, column: 212, scope: !797)
!4821 = !DILocation(line: 1546, column: 205, scope: !797)
!4822 = !DILocation(line: 1546, column: 247, scope: !4823)
!4823 = !DILexicalBlockFile(scope: !797, file: !361, discriminator: 7)
!4824 = !DILocation(line: 1546, column: 257, scope: !797)
!4825 = !DILocation(line: 1546, column: 267, scope: !797)
!4826 = !DILocation(line: 1546, column: 263, scope: !797)
!4827 = !DILocation(line: 1546, column: 227, scope: !797)
!4828 = !DILocation(line: 1546, column: 298, scope: !797)
!4829 = !DILocation(line: 1546, column: 308, scope: !797)
!4830 = !DILocation(line: 1546, column: 318, scope: !797)
!4831 = !DILocation(line: 1546, column: 314, scope: !797)
!4832 = !DILocation(line: 1546, column: 278, scope: !797)
!4833 = !DILocation(line: 1546, column: 326, scope: !797)
!4834 = !DILocation(line: 1546, column: 275, scope: !797)
!4835 = !DILocation(line: 1546, column: 353, scope: !797)
!4836 = !DILocation(line: 1546, column: 363, scope: !797)
!4837 = !DILocation(line: 1546, column: 373, scope: !797)
!4838 = !DILocation(line: 1546, column: 369, scope: !797)
!4839 = !DILocation(line: 1546, column: 335, scope: !797)
!4840 = !DILocation(line: 1546, column: 381, scope: !797)
!4841 = !DILocation(line: 1546, column: 332, scope: !797)
!4842 = !DILocation(line: 1546, column: 390, scope: !797)
!4843 = !DILocation(line: 1546, column: 436, scope: !4844)
!4844 = !DILexicalBlockFile(scope: !797, file: !361, discriminator: 8)
!4845 = !DILocation(line: 1546, column: 446, scope: !797)
!4846 = !DILocation(line: 1546, column: 458, scope: !797)
!4847 = !DILocation(line: 1546, column: 453, scope: !797)
!4848 = !DILocation(line: 1546, column: 404, scope: !797)
!4849 = !DILocation(line: 1546, column: 403, scope: !797)
!4850 = !DILocation(line: 1546, column: 116, scope: !4851)
!4851 = !DILexicalBlockFile(scope: !4852, file: !361, discriminator: 10)
!4852 = !DILexicalBlockFile(scope: !797, file: !361, discriminator: 9)
!4853 = !DILocation(line: 1546, column: 21, scope: !4854)
!4854 = !DILexicalBlockFile(scope: !4855, file: !361, discriminator: 11)
!4855 = !DILexicalBlockFile(scope: !797, file: !361, discriminator: 6)
!4856 = !DILocation(line: 1546, column: 13, scope: !4857)
!4857 = !DILexicalBlockFile(scope: !4858, file: !361, discriminator: 12)
!4858 = !DILexicalBlockFile(scope: !797, file: !361, discriminator: 3)
!4859 = !DILocation(line: 1547, column: 33, scope: !797)
!4860 = !DILocation(line: 1547, column: 37, scope: !797)
!4861 = !DILocation(line: 1547, column: 18, scope: !797)
!4862 = !DILocation(line: 1547, column: 13, scope: !797)
!4863 = !DILocation(line: 1547, column: 16, scope: !797)
!4864 = !DILocation(line: 1548, column: 5, scope: !798)
!4865 = !DILocation(line: 1548, column: 5, scope: !797)
!4866 = !DILocation(line: 1545, column: 41, scope: !798)
!4867 = !DILocation(line: 1545, column: 38, scope: !798)
!4868 = !DILocation(line: 1545, column: 5, scope: !798)
!4869 = !DILocation(line: 1549, column: 12, scope: !788)
!4870 = !DILocation(line: 1549, column: 5, scope: !788)
!4871 = !DILocation(line: 1550, column: 1, scope: !788)
!4872 = !DILocation(line: 240, column: 24, scope: !800)
!4873 = !DILocation(line: 242, column: 5, scope: !800)
!4874 = !DILocation(line: 242, column: 13, scope: !800)
!4875 = !DILocation(line: 243, column: 5, scope: !800)
!4876 = !DILocation(line: 243, column: 11, scope: !800)
!4877 = !DILocation(line: 244, column: 5, scope: !800)
!4878 = !DILocation(line: 244, column: 19, scope: !800)
!4879 = !DILocation(line: 247, column: 9, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !800, file: !361, line: 247, column: 9)
!4881 = !DILocation(line: 247, column: 17, scope: !4880)
!4882 = !DILocation(line: 247, column: 9, scope: !800)
!4883 = !DILocation(line: 248, column: 14, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4880, file: !361, line: 247, column: 23)
!4885 = !DILocation(line: 249, column: 5, scope: !4884)
!4886 = !DILocation(line: 250, column: 14, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4880, file: !361, line: 249, column: 12)
!4888 = !DILocation(line: 251, column: 20, scope: !4887)
!4889 = !DILocation(line: 251, column: 19, scope: !4887)
!4890 = !DILocation(line: 251, column: 28, scope: !4887)
!4891 = !DILocation(line: 251, column: 17, scope: !4887)
!4892 = !DILocation(line: 255, column: 18, scope: !800)
!4893 = !DILocation(line: 255, column: 11, scope: !800)
!4894 = !DILocation(line: 255, column: 9, scope: !800)
!4895 = !DILocation(line: 259, column: 9, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !800, file: !361, line: 259, column: 9)
!4897 = !DILocation(line: 259, column: 13, scope: !4896)
!4898 = !DILocation(line: 259, column: 9, scope: !800)
!4899 = !DILocation(line: 260, column: 40, scope: !4896)
!4900 = !DILocation(line: 260, column: 38, scope: !4896)
!4901 = !DILocation(line: 260, column: 16, scope: !4896)
!4902 = !DILocation(line: 260, column: 9, scope: !4896)
!4903 = !DILocation(line: 262, column: 32, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4896, file: !361, line: 261, column: 10)
!4905 = !DILocation(line: 262, column: 16, scope: !4904)
!4906 = !DILocation(line: 262, column: 36, scope: !4904)
!4907 = !DILocation(line: 262, column: 14, scope: !4904)
!4908 = !DILocation(line: 263, column: 13, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4904, file: !361, line: 263, column: 13)
!4910 = !DILocation(line: 263, column: 17, scope: !4909)
!4911 = !DILocation(line: 263, column: 13, scope: !4904)
!4912 = !DILocation(line: 264, column: 22, scope: !4909)
!4913 = !DILocation(line: 264, column: 30, scope: !4909)
!4914 = !DILocation(line: 264, column: 36, scope: !4909)
!4915 = !DILocation(line: 264, column: 18, scope: !4909)
!4916 = !DILocation(line: 264, column: 13, scope: !4909)
!4917 = !DILocation(line: 266, column: 22, scope: !4909)
!4918 = !DILocation(line: 266, column: 33, scope: !4909)
!4919 = !DILocation(line: 266, column: 30, scope: !4909)
!4920 = !DILocation(line: 266, column: 38, scope: !4909)
!4921 = !DILocation(line: 266, column: 18, scope: !4909)
!4922 = !DILocation(line: 267, column: 17, scope: !4904)
!4923 = !DILocation(line: 267, column: 24, scope: !4904)
!4924 = !DILocation(line: 267, column: 22, scope: !4904)
!4925 = !DILocation(line: 267, column: 16, scope: !4904)
!4926 = !DILocation(line: 267, column: 9, scope: !4904)
!4927 = !DILocation(line: 269, column: 1, scope: !800)
!4928 = !DILocation(line: 1221, column: 35, scope: !814)
!4929 = !DILocation(line: 1221, column: 54, scope: !814)
!4930 = !DILocation(line: 1221, column: 68, scope: !814)
!4931 = !DILocation(line: 1221, column: 79, scope: !814)
!4932 = !DILocation(line: 1224, column: 5, scope: !814)
!4933 = !DILocation(line: 1224, column: 20, scope: !814)
!4934 = !DILocation(line: 1225, column: 5, scope: !814)
!4935 = !DILocation(line: 1225, column: 16, scope: !814)
!4936 = !DILocation(line: 1225, column: 19, scope: !814)
!4937 = !DILocation(line: 1226, column: 5, scope: !814)
!4938 = !DILocation(line: 1226, column: 15, scope: !814)
!4939 = !DILocation(line: 1228, column: 35, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !814, file: !361, line: 1228, column: 9)
!4941 = !DILocation(line: 1228, column: 45, scope: !4940)
!4942 = !DILocation(line: 1228, column: 50, scope: !4940)
!4943 = !DILocation(line: 1228, column: 10, scope: !4940)
!4944 = !DILocation(line: 1228, column: 9, scope: !814)
!4945 = !DILocation(line: 1229, column: 9, scope: !4940)
!4946 = !DILocation(line: 1230, column: 29, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !814, file: !361, line: 1230, column: 9)
!4948 = !DILocation(line: 1230, column: 10, scope: !4947)
!4949 = !DILocation(line: 1230, column: 9, scope: !814)
!4950 = !DILocation(line: 1231, column: 9, scope: !4947)
!4951 = !DILocation(line: 1233, column: 9, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !814, file: !361, line: 1233, column: 9)
!4953 = !DILocation(line: 1233, column: 19, scope: !4952)
!4954 = !DILocation(line: 1233, column: 23, scope: !4952)
!4955 = !DILocation(line: 1233, column: 22, scope: !4952)
!4956 = !DILocation(line: 1233, column: 63, scope: !4952)
!4957 = !DILocation(line: 1233, column: 62, scope: !4952)
!4958 = !DILocation(line: 1233, column: 29, scope: !4952)
!4959 = !DILocation(line: 1233, column: 9, scope: !814)
!4960 = !DILocation(line: 1234, column: 25, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4952, file: !361, line: 1233, column: 73)
!4962 = !DILocation(line: 1234, column: 9, scope: !4961)
!4963 = !DILocation(line: 1236, column: 9, scope: !4961)
!4964 = !DILocation(line: 1238, column: 49, scope: !814)
!4965 = !DILocation(line: 1238, column: 59, scope: !814)
!4966 = !DILocation(line: 1238, column: 63, scope: !814)
!4967 = !DILocation(line: 1238, column: 62, scope: !814)
!4968 = !DILocation(line: 1238, column: 70, scope: !814)
!4969 = !DILocation(line: 1238, column: 69, scope: !814)
!4970 = !DILocation(line: 1238, column: 10, scope: !814)
!4971 = !DILocation(line: 1238, column: 8, scope: !814)
!4972 = !DILocation(line: 1239, column: 9, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !814, file: !361, line: 1239, column: 9)
!4974 = !DILocation(line: 1239, column: 12, scope: !4973)
!4975 = !DILocation(line: 1239, column: 9, scope: !814)
!4976 = !DILocation(line: 1240, column: 9, scope: !4973)
!4977 = !DILocation(line: 1241, column: 45, scope: !814)
!4978 = !DILocation(line: 1241, column: 28, scope: !814)
!4979 = !DILocation(line: 1241, column: 9, scope: !814)
!4980 = !DILocation(line: 1243, column: 16, scope: !827)
!4981 = !DILocation(line: 1243, column: 12, scope: !827)
!4982 = !DILocation(line: 1243, column: 10, scope: !827)
!4983 = !DILocation(line: 1243, column: 21, scope: !4984)
!4984 = !DILexicalBlockFile(scope: !4985, file: !361, discriminator: 2)
!4985 = !DILexicalBlockFile(scope: !826, file: !361, discriminator: 1)
!4986 = !DILocation(line: 1243, column: 25, scope: !826)
!4987 = !DILocation(line: 1243, column: 35, scope: !826)
!4988 = !DILocation(line: 1243, column: 23, scope: !826)
!4989 = !DILocation(line: 1243, column: 5, scope: !827)
!4990 = !DILocation(line: 1244, column: 9, scope: !825)
!4991 = !DILocation(line: 1244, column: 13, scope: !825)
!4992 = !DILocation(line: 1244, column: 22, scope: !825)
!4993 = !DILocation(line: 1244, column: 28, scope: !825)
!4994 = !DILocation(line: 1244, column: 21, scope: !825)
!4995 = !DILocation(line: 1244, column: 79, scope: !4996)
!4996 = !DILexicalBlockFile(scope: !825, file: !361, discriminator: 1)
!4997 = !DILocation(line: 1244, column: 89, scope: !825)
!4998 = !DILocation(line: 1244, column: 101, scope: !825)
!4999 = !DILocation(line: 1244, column: 96, scope: !825)
!5000 = !DILocation(line: 1244, column: 42, scope: !825)
!5001 = !DILocation(line: 1244, column: 36, scope: !825)
!5002 = !DILocation(line: 1244, column: 108, scope: !825)
!5003 = !DILocation(line: 1244, column: 117, scope: !5004)
!5004 = !DILexicalBlockFile(scope: !825, file: !361, discriminator: 2)
!5005 = !DILocation(line: 1244, column: 123, scope: !825)
!5006 = !DILocation(line: 1244, column: 116, scope: !825)
!5007 = !DILocation(line: 1244, column: 168, scope: !5008)
!5008 = !DILexicalBlockFile(scope: !825, file: !361, discriminator: 4)
!5009 = !DILocation(line: 1244, column: 178, scope: !825)
!5010 = !DILocation(line: 1244, column: 190, scope: !825)
!5011 = !DILocation(line: 1244, column: 185, scope: !825)
!5012 = !DILocation(line: 1244, column: 138, scope: !825)
!5013 = !DILocation(line: 1244, column: 137, scope: !825)
!5014 = !DILocation(line: 1244, column: 131, scope: !825)
!5015 = !DILocation(line: 1244, column: 197, scope: !825)
!5016 = !DILocation(line: 1244, column: 206, scope: !5017)
!5017 = !DILexicalBlockFile(scope: !825, file: !361, discriminator: 5)
!5018 = !DILocation(line: 1244, column: 212, scope: !825)
!5019 = !DILocation(line: 1244, column: 205, scope: !825)
!5020 = !DILocation(line: 1244, column: 247, scope: !5021)
!5021 = !DILexicalBlockFile(scope: !825, file: !361, discriminator: 7)
!5022 = !DILocation(line: 1244, column: 257, scope: !825)
!5023 = !DILocation(line: 1244, column: 267, scope: !825)
!5024 = !DILocation(line: 1244, column: 263, scope: !825)
!5025 = !DILocation(line: 1244, column: 227, scope: !825)
!5026 = !DILocation(line: 1244, column: 298, scope: !825)
!5027 = !DILocation(line: 1244, column: 308, scope: !825)
!5028 = !DILocation(line: 1244, column: 318, scope: !825)
!5029 = !DILocation(line: 1244, column: 314, scope: !825)
!5030 = !DILocation(line: 1244, column: 278, scope: !825)
!5031 = !DILocation(line: 1244, column: 326, scope: !825)
!5032 = !DILocation(line: 1244, column: 275, scope: !825)
!5033 = !DILocation(line: 1244, column: 353, scope: !825)
!5034 = !DILocation(line: 1244, column: 363, scope: !825)
!5035 = !DILocation(line: 1244, column: 373, scope: !825)
!5036 = !DILocation(line: 1244, column: 369, scope: !825)
!5037 = !DILocation(line: 1244, column: 335, scope: !825)
!5038 = !DILocation(line: 1244, column: 381, scope: !825)
!5039 = !DILocation(line: 1244, column: 332, scope: !825)
!5040 = !DILocation(line: 1244, column: 390, scope: !825)
!5041 = !DILocation(line: 1244, column: 436, scope: !5042)
!5042 = !DILexicalBlockFile(scope: !825, file: !361, discriminator: 8)
!5043 = !DILocation(line: 1244, column: 446, scope: !825)
!5044 = !DILocation(line: 1244, column: 458, scope: !825)
!5045 = !DILocation(line: 1244, column: 453, scope: !825)
!5046 = !DILocation(line: 1244, column: 404, scope: !825)
!5047 = !DILocation(line: 1244, column: 403, scope: !825)
!5048 = !DILocation(line: 1244, column: 116, scope: !5049)
!5049 = !DILexicalBlockFile(scope: !5050, file: !361, discriminator: 10)
!5050 = !DILexicalBlockFile(scope: !825, file: !361, discriminator: 9)
!5051 = !DILocation(line: 1244, column: 21, scope: !5052)
!5052 = !DILexicalBlockFile(scope: !5053, file: !361, discriminator: 11)
!5053 = !DILexicalBlockFile(scope: !825, file: !361, discriminator: 6)
!5054 = !DILocation(line: 1244, column: 13, scope: !5055)
!5055 = !DILexicalBlockFile(scope: !5056, file: !361, discriminator: 12)
!5056 = !DILexicalBlockFile(scope: !825, file: !361, discriminator: 3)
!5057 = !DILocation(line: 1245, column: 9, scope: !825)
!5058 = !DILocation(line: 1245, column: 18, scope: !5059)
!5059 = !DILexicalBlockFile(scope: !5060, file: !361, discriminator: 1)
!5060 = distinct !DILexicalBlock(scope: !5061, file: !361, line: 1245, column: 18)
!5061 = distinct !DILexicalBlock(scope: !825, file: !361, line: 1245, column: 12)
!5062 = !DILocation(line: 1245, column: 27, scope: !5060)
!5063 = !DILocation(line: 1245, column: 18, scope: !5061)
!5064 = !DILocation(line: 1245, column: 33, scope: !5065)
!5065 = !DILexicalBlockFile(scope: !5060, file: !361, discriminator: 2)
!5066 = !DILocation(line: 1245, column: 111, scope: !5067)
!5067 = !DILexicalBlockFile(scope: !5068, file: !361, discriminator: 4)
!5068 = distinct !DILexicalBlock(scope: !5060, file: !361, line: 1245, column: 36)
!5069 = !DILocation(line: 1245, column: 116, scope: !5068)
!5070 = !DILocation(line: 1245, column: 95, scope: !5068)
!5071 = !DILocation(line: 1245, column: 75, scope: !5068)
!5072 = !DILocation(line: 1245, column: 87, scope: !5068)
!5073 = !DILocation(line: 1245, column: 82, scope: !5068)
!5074 = !DILocation(line: 1245, column: 93, scope: !5068)
!5075 = !DILocation(line: 1245, column: 125, scope: !5068)
!5076 = !DILocation(line: 1245, column: 125, scope: !5077)
!5077 = !DILexicalBlockFile(scope: !5068, file: !361, discriminator: 5)
!5078 = !DILocation(line: 1245, column: 125, scope: !5079)
!5079 = !DILexicalBlockFile(scope: !5068, file: !361, discriminator: 6)
!5080 = !DILocation(line: 1245, column: 147, scope: !5081)
!5081 = !DILexicalBlockFile(scope: !5082, file: !361, discriminator: 3)
!5082 = distinct !DILexicalBlock(scope: !5060, file: !361, line: 1245, column: 147)
!5083 = !DILocation(line: 1245, column: 156, scope: !5082)
!5084 = !DILocation(line: 1245, column: 147, scope: !5060)
!5085 = !DILocation(line: 1245, column: 162, scope: !5086)
!5086 = !DILexicalBlockFile(scope: !5082, file: !361, discriminator: 8)
!5087 = !DILocation(line: 1245, column: 228, scope: !5088)
!5088 = !DILexicalBlockFile(scope: !5089, file: !361, discriminator: 10)
!5089 = distinct !DILexicalBlock(scope: !5082, file: !361, line: 1245, column: 165)
!5090 = !DILocation(line: 1245, column: 233, scope: !5089)
!5091 = !DILocation(line: 1245, column: 218, scope: !5089)
!5092 = !DILocation(line: 1245, column: 198, scope: !5089)
!5093 = !DILocation(line: 1245, column: 210, scope: !5089)
!5094 = !DILocation(line: 1245, column: 205, scope: !5089)
!5095 = !DILocation(line: 1245, column: 168, scope: !5089)
!5096 = !DILocation(line: 1245, column: 216, scope: !5089)
!5097 = !DILocation(line: 1245, column: 242, scope: !5089)
!5098 = !DILocation(line: 1245, column: 242, scope: !5099)
!5099 = !DILexicalBlockFile(scope: !5089, file: !361, discriminator: 11)
!5100 = !DILocation(line: 1245, column: 242, scope: !5101)
!5101 = !DILexicalBlockFile(scope: !5089, file: !361, discriminator: 12)
!5102 = !DILocation(line: 1245, column: 264, scope: !5103)
!5103 = !DILexicalBlockFile(scope: !5104, file: !361, discriminator: 9)
!5104 = distinct !DILexicalBlock(scope: !5082, file: !361, line: 1245, column: 264)
!5105 = !DILocation(line: 1245, column: 273, scope: !5104)
!5106 = !DILocation(line: 1245, column: 264, scope: !5082)
!5107 = !DILocation(line: 1245, column: 279, scope: !5108)
!5108 = !DILexicalBlockFile(scope: !5104, file: !361, discriminator: 13)
!5109 = !DILocation(line: 1245, column: 331, scope: !5110)
!5110 = !DILexicalBlockFile(scope: !5111, file: !361, discriminator: 15)
!5111 = distinct !DILexicalBlock(scope: !5104, file: !361, line: 1245, column: 282)
!5112 = !DILocation(line: 1245, column: 336, scope: !5111)
!5113 = !DILocation(line: 1245, column: 324, scope: !5111)
!5114 = !DILocation(line: 1245, column: 304, scope: !5111)
!5115 = !DILocation(line: 1245, column: 314, scope: !5111)
!5116 = !DILocation(line: 1245, column: 310, scope: !5111)
!5117 = !DILocation(line: 1245, column: 284, scope: !5111)
!5118 = !DILocation(line: 1245, column: 322, scope: !5111)
!5119 = !DILocation(line: 1245, column: 390, scope: !5111)
!5120 = !DILocation(line: 1245, column: 395, scope: !5111)
!5121 = !DILocation(line: 1245, column: 401, scope: !5111)
!5122 = !DILocation(line: 1245, column: 383, scope: !5111)
!5123 = !DILocation(line: 1245, column: 363, scope: !5111)
!5124 = !DILocation(line: 1245, column: 373, scope: !5111)
!5125 = !DILocation(line: 1245, column: 369, scope: !5111)
!5126 = !DILocation(line: 1245, column: 343, scope: !5111)
!5127 = !DILocation(line: 1245, column: 381, scope: !5111)
!5128 = !DILocation(line: 1245, column: 452, scope: !5111)
!5129 = !DILocation(line: 1245, column: 457, scope: !5111)
!5130 = !DILocation(line: 1245, column: 463, scope: !5111)
!5131 = !DILocation(line: 1245, column: 445, scope: !5111)
!5132 = !DILocation(line: 1245, column: 425, scope: !5111)
!5133 = !DILocation(line: 1245, column: 435, scope: !5111)
!5134 = !DILocation(line: 1245, column: 431, scope: !5111)
!5135 = !DILocation(line: 1245, column: 407, scope: !5111)
!5136 = !DILocation(line: 1245, column: 443, scope: !5111)
!5137 = !DILocation(line: 1245, column: 470, scope: !5111)
!5138 = !DILocation(line: 1245, column: 470, scope: !5139)
!5139 = !DILexicalBlockFile(scope: !5111, file: !361, discriminator: 16)
!5140 = !DILocation(line: 1245, column: 470, scope: !5141)
!5141 = !DILexicalBlockFile(scope: !5111, file: !361, discriminator: 17)
!5142 = !DILocation(line: 1245, column: 488, scope: !5143)
!5143 = !DILexicalBlockFile(scope: !5104, file: !361, discriminator: 14)
!5144 = !DILocation(line: 1245, column: 558, scope: !5145)
!5145 = !DILexicalBlockFile(scope: !5146, file: !361, discriminator: 18)
!5146 = distinct !DILexicalBlock(scope: !5104, file: !361, line: 1245, column: 491)
!5147 = !DILocation(line: 1245, column: 526, scope: !5146)
!5148 = !DILocation(line: 1245, column: 538, scope: !5146)
!5149 = !DILocation(line: 1245, column: 533, scope: !5146)
!5150 = !DILocation(line: 1245, column: 494, scope: !5146)
!5151 = !DILocation(line: 1245, column: 544, scope: !5146)
!5152 = !DILocation(line: 1245, column: 566, scope: !5146)
!5153 = !DILocation(line: 1245, column: 566, scope: !5154)
!5154 = !DILexicalBlockFile(scope: !5146, file: !361, discriminator: 19)
!5155 = !DILocation(line: 1245, column: 579, scope: !5156)
!5156 = !DILexicalBlockFile(scope: !5061, file: !361, discriminator: 7)
!5157 = !DILocation(line: 1245, column: 579, scope: !5158)
!5158 = !DILexicalBlockFile(scope: !5061, file: !361, discriminator: 20)
!5159 = !DILocation(line: 1246, column: 5, scope: !826)
!5160 = !DILocation(line: 1246, column: 5, scope: !825)
!5161 = !DILocation(line: 1243, column: 45, scope: !826)
!5162 = !DILocation(line: 1243, column: 42, scope: !826)
!5163 = !DILocation(line: 1243, column: 57, scope: !826)
!5164 = !DILocation(line: 1243, column: 54, scope: !826)
!5165 = !DILocation(line: 1243, column: 5, scope: !826)
!5166 = !DILocation(line: 1247, column: 12, scope: !814)
!5167 = !DILocation(line: 1247, column: 5, scope: !814)
!5168 = !DILocation(line: 1248, column: 1, scope: !814)
!5169 = !DILocation(line: 1727, column: 37, scope: !836)
!5170 = !DILocation(line: 1727, column: 56, scope: !836)
!5171 = !DILocation(line: 1727, column: 70, scope: !836)
!5172 = !DILocation(line: 1727, column: 87, scope: !836)
!5173 = !DILocation(line: 1730, column: 5, scope: !836)
!5174 = !DILocation(line: 1730, column: 18, scope: !836)
!5175 = !DILocation(line: 1731, column: 5, scope: !836)
!5176 = !DILocation(line: 1731, column: 18, scope: !836)
!5177 = !DILocation(line: 1732, column: 5, scope: !836)
!5178 = !DILocation(line: 1732, column: 16, scope: !836)
!5179 = !DILocation(line: 1732, column: 19, scope: !836)
!5180 = !DILocation(line: 1733, column: 5, scope: !836)
!5181 = !DILocation(line: 1733, column: 9, scope: !836)
!5182 = !DILocation(line: 1733, column: 18, scope: !836)
!5183 = !DILocation(line: 1733, column: 24, scope: !836)
!5184 = !DILocation(line: 1733, column: 31, scope: !836)
!5185 = !DILocation(line: 1733, column: 38, scope: !836)
!5186 = !DILocation(line: 1733, column: 44, scope: !836)
!5187 = !DILocation(line: 1734, column: 5, scope: !836)
!5188 = !DILocation(line: 1734, column: 15, scope: !836)
!5189 = !DILocation(line: 1734, column: 20, scope: !836)
!5190 = !DILocation(line: 1735, column: 5, scope: !836)
!5191 = !DILocation(line: 1735, column: 9, scope: !836)
!5192 = !DILocation(line: 1735, column: 26, scope: !836)
!5193 = !DILocation(line: 1737, column: 29, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !836, file: !361, line: 1737, column: 9)
!5195 = !DILocation(line: 1737, column: 10, scope: !5194)
!5196 = !DILocation(line: 1737, column: 9, scope: !836)
!5197 = !DILocation(line: 1738, column: 9, scope: !5194)
!5198 = !DILocation(line: 1741, column: 10, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !836, file: !361, line: 1741, column: 10)
!5200 = !DILocation(line: 1741, column: 16, scope: !5199)
!5201 = !DILocation(line: 1741, column: 10, scope: !836)
!5202 = !DILocation(line: 1743, column: 17, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5199, file: !361, line: 1741, column: 39)
!5204 = !DILocation(line: 1744, column: 15, scope: !5203)
!5205 = !DILocation(line: 1745, column: 5, scope: !5203)
!5206 = !DILocation(line: 1745, column: 34, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5199, file: !361, line: 1745, column: 16)
!5208 = !DILocation(line: 1745, column: 43, scope: !5207)
!5209 = !{!5210, !1201, i64 8}
!5210 = !{!"_object", !1253, i64 0, !1201, i64 8}
!5211 = !DILocation(line: 1745, column: 54, scope: !5207)
!5212 = !{!5213, !1253, i64 168}
!5213 = !{!"_typeobject", !5214, i64 0, !1201, i64 24, !1253, i64 32, !1253, i64 40, !1201, i64 48, !1201, i64 56, !1201, i64 64, !1201, i64 72, !1201, i64 80, !1201, i64 88, !1201, i64 96, !1201, i64 104, !1201, i64 112, !1201, i64 120, !1201, i64 128, !1201, i64 136, !1201, i64 144, !1201, i64 152, !1201, i64 160, !1253, i64 168, !1201, i64 176, !1201, i64 184, !1201, i64 192, !1201, i64 200, !1253, i64 208, !1201, i64 216, !1201, i64 224, !1201, i64 232, !1201, i64 240, !1201, i64 248, !1201, i64 256, !1201, i64 264, !1201, i64 272, !1201, i64 280, !1253, i64 288, !1201, i64 296, !1201, i64 304, !1201, i64 312, !1201, i64 320, !1201, i64 328, !1201, i64 336, !1201, i64 344, !1201, i64 352, !1201, i64 360, !1201, i64 368, !1201, i64 376, !1245, i64 384, !1201, i64 392}
!5214 = !{!"", !5210, i64 0, !1253, i64 16}
!5215 = !DILocation(line: 1745, column: 63, scope: !5207)
!5216 = !DILocation(line: 1745, column: 80, scope: !5207)
!5217 = !DILocation(line: 1745, column: 16, scope: !5199)
!5218 = !DILocation(line: 1746, column: 25, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5207, file: !361, line: 1745, column: 87)
!5220 = !DILocation(line: 1746, column: 9, scope: !5219)
!5221 = !DILocation(line: 1747, column: 9, scope: !5219)
!5222 = !DILocation(line: 1748, column: 41, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5207, file: !361, line: 1748, column: 16)
!5224 = !DILocation(line: 1748, column: 17, scope: !5223)
!5225 = !DILocation(line: 1748, column: 16, scope: !5207)
!5226 = !DILocation(line: 1749, column: 9, scope: !5223)
!5227 = !DILocation(line: 1751, column: 9, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !836, file: !361, line: 1751, column: 9)
!5229 = !DILocation(line: 1751, column: 19, scope: !5228)
!5230 = !DILocation(line: 1751, column: 61, scope: !5228)
!5231 = !DILocation(line: 1751, column: 60, scope: !5228)
!5232 = !DILocation(line: 1751, column: 23, scope: !5228)
!5233 = !DILocation(line: 1751, column: 9, scope: !836)
!5234 = !DILocation(line: 1752, column: 25, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5228, file: !361, line: 1751, column: 68)
!5236 = !DILocation(line: 1752, column: 9, scope: !5235)
!5237 = !DILocation(line: 1754, column: 9, scope: !5235)
!5238 = !DILocation(line: 1756, column: 14, scope: !836)
!5239 = !DILocation(line: 1756, column: 24, scope: !836)
!5240 = !DILocation(line: 1756, column: 28, scope: !836)
!5241 = !DILocation(line: 1756, column: 27, scope: !836)
!5242 = !DILocation(line: 1756, column: 33, scope: !836)
!5243 = !DILocation(line: 1756, column: 12, scope: !836)
!5244 = !DILocation(line: 1757, column: 49, scope: !836)
!5245 = !DILocation(line: 1757, column: 11, scope: !836)
!5246 = !DILocation(line: 1757, column: 9, scope: !836)
!5247 = !DILocation(line: 1758, column: 9, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !836, file: !361, line: 1758, column: 9)
!5249 = !DILocation(line: 1758, column: 13, scope: !5248)
!5250 = !DILocation(line: 1758, column: 9, scope: !836)
!5251 = !DILocation(line: 1759, column: 9, scope: !5248)
!5252 = !DILocation(line: 1760, column: 43, scope: !836)
!5253 = !DILocation(line: 1760, column: 26, scope: !836)
!5254 = !DILocation(line: 1760, column: 9, scope: !836)
!5255 = !DILocation(line: 1761, column: 10, scope: !836)
!5256 = !DILocation(line: 1761, column: 20, scope: !836)
!5257 = !DILocation(line: 1761, column: 8, scope: !836)
!5258 = !DILocation(line: 1763, column: 26, scope: !836)
!5259 = !DILocation(line: 1763, column: 12, scope: !836)
!5260 = !DILocation(line: 1763, column: 10, scope: !836)
!5261 = !DILocation(line: 1764, column: 16, scope: !836)
!5262 = !DILocation(line: 1766, column: 12, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !836, file: !361, line: 1766, column: 5)
!5264 = !DILocation(line: 1766, column: 10, scope: !5263)
!5265 = !DILocation(line: 1766, column: 17, scope: !5266)
!5266 = !DILexicalBlockFile(scope: !5267, file: !361, discriminator: 2)
!5267 = !DILexicalBlockFile(scope: !5268, file: !361, discriminator: 1)
!5268 = distinct !DILexicalBlock(scope: !5263, file: !361, line: 1766, column: 5)
!5269 = !DILocation(line: 1766, column: 21, scope: !5268)
!5270 = !DILocation(line: 1766, column: 19, scope: !5268)
!5271 = !DILocation(line: 1766, column: 5, scope: !5263)
!5272 = !DILocation(line: 1768, column: 14, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5274, file: !361, line: 1768, column: 14)
!5274 = distinct !DILexicalBlock(scope: !5268, file: !361, line: 1766, column: 41)
!5275 = !DILocation(line: 1768, column: 14, scope: !5274)
!5276 = !DILocation(line: 1769, column: 21, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5273, file: !361, line: 1768, column: 27)
!5278 = !DILocation(line: 1769, column: 33, scope: !5277)
!5279 = !DILocation(line: 1769, column: 19, scope: !5277)
!5280 = !DILocation(line: 1770, column: 9, scope: !5277)
!5281 = !DILocation(line: 1771, column: 30, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5273, file: !361, line: 1770, column: 16)
!5283 = !DILocation(line: 1771, column: 27, scope: !5282)
!5284 = !DILocation(line: 1771, column: 25, scope: !5282)
!5285 = !DILocation(line: 1772, column: 22, scope: !5282)
!5286 = !DILocation(line: 1772, column: 34, scope: !5282)
!5287 = !DILocation(line: 1772, column: 40, scope: !5282)
!5288 = !DILocation(line: 1772, column: 19, scope: !5282)
!5289 = !DILocation(line: 1775, column: 23, scope: !5274)
!5290 = !DILocation(line: 1775, column: 22, scope: !5274)
!5291 = !DILocation(line: 1775, column: 20, scope: !5274)
!5292 = !DILocation(line: 1778, column: 29, scope: !5274)
!5293 = !DILocation(line: 1778, column: 18, scope: !5274)
!5294 = !DILocation(line: 1778, column: 15, scope: !5274)
!5295 = !DILocation(line: 1779, column: 14, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5274, file: !361, line: 1779, column: 14)
!5297 = !DILocation(line: 1779, column: 20, scope: !5296)
!5298 = !DILocation(line: 1779, column: 14, scope: !5274)
!5299 = !DILocation(line: 1779, column: 32, scope: !5300)
!5300 = !DILexicalBlockFile(scope: !5296, file: !361, discriminator: 1)
!5301 = !DILocation(line: 1779, column: 26, scope: !5296)
!5302 = !DILocation(line: 1780, column: 14, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5274, file: !361, line: 1780, column: 14)
!5304 = !DILocation(line: 1780, column: 20, scope: !5303)
!5305 = !DILocation(line: 1780, column: 14, scope: !5274)
!5306 = !DILocation(line: 1780, column: 33, scope: !5307)
!5307 = !DILexicalBlockFile(scope: !5303, file: !361, discriminator: 1)
!5308 = !DILocation(line: 1780, column: 27, scope: !5303)
!5309 = !DILocation(line: 1783, column: 16, scope: !5274)
!5310 = !DILocation(line: 1783, column: 22, scope: !5274)
!5311 = !DILocation(line: 1783, column: 14, scope: !5274)
!5312 = !DILocation(line: 1784, column: 17, scope: !5274)
!5313 = !DILocation(line: 1784, column: 23, scope: !5274)
!5314 = !DILocation(line: 1784, column: 15, scope: !5274)
!5315 = !DILocation(line: 1791, column: 18, scope: !5274)
!5316 = !DILocation(line: 1791, column: 23, scope: !5274)
!5317 = !DILocation(line: 1791, column: 16, scope: !5274)
!5318 = !DILocation(line: 1792, column: 14, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5274, file: !361, line: 1792, column: 14)
!5320 = !DILocation(line: 1792, column: 20, scope: !5319)
!5321 = !DILocation(line: 1792, column: 14, scope: !5274)
!5322 = !DILocation(line: 1792, column: 36, scope: !5323)
!5323 = !DILexicalBlockFile(scope: !5319, file: !361, discriminator: 1)
!5324 = !DILocation(line: 1792, column: 33, scope: !5319)
!5325 = !DILocation(line: 1792, column: 26, scope: !5319)
!5326 = !DILocation(line: 1793, column: 14, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5274, file: !361, line: 1793, column: 14)
!5328 = !DILocation(line: 1793, column: 20, scope: !5327)
!5329 = !DILocation(line: 1793, column: 14, scope: !5274)
!5330 = !DILocation(line: 1793, column: 36, scope: !5331)
!5331 = !DILexicalBlockFile(scope: !5327, file: !361, discriminator: 1)
!5332 = !DILocation(line: 1793, column: 40, scope: !5327)
!5333 = !DILocation(line: 1793, column: 33, scope: !5327)
!5334 = !DILocation(line: 1793, column: 26, scope: !5327)
!5335 = !DILocation(line: 1794, column: 14, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5274, file: !361, line: 1794, column: 14)
!5337 = !DILocation(line: 1794, column: 20, scope: !5336)
!5338 = !DILocation(line: 1794, column: 14, scope: !5274)
!5339 = !DILocation(line: 1794, column: 36, scope: !5340)
!5340 = !DILexicalBlockFile(scope: !5336, file: !361, discriminator: 1)
!5341 = !DILocation(line: 1794, column: 40, scope: !5336)
!5342 = !DILocation(line: 1794, column: 33, scope: !5336)
!5343 = !DILocation(line: 1794, column: 26, scope: !5336)
!5344 = !DILocation(line: 1796, column: 14, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5274, file: !361, line: 1796, column: 14)
!5346 = !DILocation(line: 1796, column: 14, scope: !5274)
!5347 = !DILocation(line: 1797, column: 24, scope: !5345)
!5348 = !DILocation(line: 1797, column: 21, scope: !5345)
!5349 = !DILocation(line: 1797, column: 13, scope: !5345)
!5350 = !DILocation(line: 1799, column: 24, scope: !5345)
!5351 = !DILocation(line: 1799, column: 21, scope: !5345)
!5352 = !DILocation(line: 1802, column: 14, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5274, file: !361, line: 1802, column: 14)
!5354 = !DILocation(line: 1802, column: 22, scope: !5353)
!5355 = !DILocation(line: 1802, column: 14, scope: !5274)
!5356 = !DILocation(line: 1803, column: 21, scope: !5353)
!5357 = !DILocation(line: 1803, column: 13, scope: !5353)
!5358 = !DILocation(line: 1804, column: 19, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5353, file: !361, line: 1804, column: 19)
!5360 = !DILocation(line: 1804, column: 27, scope: !5359)
!5361 = !DILocation(line: 1804, column: 19, scope: !5353)
!5362 = !DILocation(line: 1805, column: 21, scope: !5359)
!5363 = !DILocation(line: 1805, column: 13, scope: !5359)
!5364 = !DILocation(line: 1808, column: 30, scope: !5274)
!5365 = !DILocation(line: 1808, column: 16, scope: !5274)
!5366 = !DILocation(line: 1808, column: 14, scope: !5274)
!5367 = !DILocation(line: 1811, column: 9, scope: !5274)
!5368 = !DILocation(line: 1811, column: 18, scope: !5369)
!5369 = !DILexicalBlockFile(scope: !5370, file: !361, discriminator: 1)
!5370 = distinct !DILexicalBlock(scope: !5371, file: !361, line: 1811, column: 18)
!5371 = distinct !DILexicalBlock(scope: !5274, file: !361, line: 1811, column: 12)
!5372 = !DILocation(line: 1811, column: 24, scope: !5370)
!5373 = !DILocation(line: 1811, column: 18, scope: !5371)
!5374 = !DILocation(line: 1811, column: 30, scope: !5375)
!5375 = !DILexicalBlockFile(scope: !5370, file: !361, discriminator: 2)
!5376 = !DILocation(line: 1811, column: 108, scope: !5377)
!5377 = !DILexicalBlockFile(scope: !5378, file: !361, discriminator: 4)
!5378 = distinct !DILexicalBlock(scope: !5370, file: !361, line: 1811, column: 33)
!5379 = !DILocation(line: 1811, column: 116, scope: !5378)
!5380 = !DILocation(line: 1811, column: 123, scope: !5378)
!5381 = !DILocation(line: 1811, column: 92, scope: !5378)
!5382 = !DILocation(line: 1811, column: 72, scope: !5378)
!5383 = !DILocation(line: 1811, column: 84, scope: !5378)
!5384 = !DILocation(line: 1811, column: 79, scope: !5378)
!5385 = !DILocation(line: 1811, column: 90, scope: !5378)
!5386 = !DILocation(line: 1811, column: 132, scope: !5378)
!5387 = !DILocation(line: 1811, column: 132, scope: !5388)
!5388 = !DILexicalBlockFile(scope: !5378, file: !361, discriminator: 5)
!5389 = !DILocation(line: 1811, column: 132, scope: !5390)
!5390 = !DILexicalBlockFile(scope: !5378, file: !361, discriminator: 6)
!5391 = !DILocation(line: 1811, column: 154, scope: !5392)
!5392 = !DILexicalBlockFile(scope: !5393, file: !361, discriminator: 3)
!5393 = distinct !DILexicalBlock(scope: !5370, file: !361, line: 1811, column: 154)
!5394 = !DILocation(line: 1811, column: 160, scope: !5393)
!5395 = !DILocation(line: 1811, column: 154, scope: !5370)
!5396 = !DILocation(line: 1811, column: 166, scope: !5397)
!5397 = !DILexicalBlockFile(scope: !5393, file: !361, discriminator: 8)
!5398 = !DILocation(line: 1811, column: 232, scope: !5399)
!5399 = !DILexicalBlockFile(scope: !5400, file: !361, discriminator: 10)
!5400 = distinct !DILexicalBlock(scope: !5393, file: !361, line: 1811, column: 169)
!5401 = !DILocation(line: 1811, column: 240, scope: !5400)
!5402 = !DILocation(line: 1811, column: 247, scope: !5400)
!5403 = !DILocation(line: 1811, column: 222, scope: !5400)
!5404 = !DILocation(line: 1811, column: 202, scope: !5400)
!5405 = !DILocation(line: 1811, column: 214, scope: !5400)
!5406 = !DILocation(line: 1811, column: 209, scope: !5400)
!5407 = !DILocation(line: 1811, column: 172, scope: !5400)
!5408 = !DILocation(line: 1811, column: 220, scope: !5400)
!5409 = !DILocation(line: 1811, column: 256, scope: !5400)
!5410 = !DILocation(line: 1811, column: 256, scope: !5411)
!5411 = !DILexicalBlockFile(scope: !5400, file: !361, discriminator: 11)
!5412 = !DILocation(line: 1811, column: 256, scope: !5413)
!5413 = !DILexicalBlockFile(scope: !5400, file: !361, discriminator: 12)
!5414 = !DILocation(line: 1811, column: 278, scope: !5415)
!5415 = !DILexicalBlockFile(scope: !5416, file: !361, discriminator: 9)
!5416 = distinct !DILexicalBlock(scope: !5393, file: !361, line: 1811, column: 278)
!5417 = !DILocation(line: 1811, column: 284, scope: !5416)
!5418 = !DILocation(line: 1811, column: 278, scope: !5393)
!5419 = !DILocation(line: 1811, column: 290, scope: !5420)
!5420 = !DILexicalBlockFile(scope: !5416, file: !361, discriminator: 13)
!5421 = !DILocation(line: 1811, column: 342, scope: !5422)
!5422 = !DILexicalBlockFile(scope: !5423, file: !361, discriminator: 15)
!5423 = distinct !DILexicalBlock(scope: !5416, file: !361, line: 1811, column: 293)
!5424 = !DILocation(line: 1811, column: 350, scope: !5423)
!5425 = !DILocation(line: 1811, column: 357, scope: !5423)
!5426 = !DILocation(line: 1811, column: 335, scope: !5423)
!5427 = !DILocation(line: 1811, column: 315, scope: !5423)
!5428 = !DILocation(line: 1811, column: 325, scope: !5423)
!5429 = !DILocation(line: 1811, column: 321, scope: !5423)
!5430 = !DILocation(line: 1811, column: 295, scope: !5423)
!5431 = !DILocation(line: 1811, column: 333, scope: !5423)
!5432 = !DILocation(line: 1811, column: 411, scope: !5423)
!5433 = !DILocation(line: 1811, column: 419, scope: !5423)
!5434 = !DILocation(line: 1811, column: 426, scope: !5423)
!5435 = !DILocation(line: 1811, column: 432, scope: !5423)
!5436 = !DILocation(line: 1811, column: 404, scope: !5423)
!5437 = !DILocation(line: 1811, column: 384, scope: !5423)
!5438 = !DILocation(line: 1811, column: 394, scope: !5423)
!5439 = !DILocation(line: 1811, column: 390, scope: !5423)
!5440 = !DILocation(line: 1811, column: 364, scope: !5423)
!5441 = !DILocation(line: 1811, column: 402, scope: !5423)
!5442 = !DILocation(line: 1811, column: 483, scope: !5423)
!5443 = !DILocation(line: 1811, column: 491, scope: !5423)
!5444 = !DILocation(line: 1811, column: 498, scope: !5423)
!5445 = !DILocation(line: 1811, column: 504, scope: !5423)
!5446 = !DILocation(line: 1811, column: 476, scope: !5423)
!5447 = !DILocation(line: 1811, column: 456, scope: !5423)
!5448 = !DILocation(line: 1811, column: 466, scope: !5423)
!5449 = !DILocation(line: 1811, column: 462, scope: !5423)
!5450 = !DILocation(line: 1811, column: 438, scope: !5423)
!5451 = !DILocation(line: 1811, column: 474, scope: !5423)
!5452 = !DILocation(line: 1811, column: 511, scope: !5423)
!5453 = !DILocation(line: 1811, column: 511, scope: !5454)
!5454 = !DILexicalBlockFile(scope: !5423, file: !361, discriminator: 16)
!5455 = !DILocation(line: 1811, column: 511, scope: !5456)
!5456 = !DILexicalBlockFile(scope: !5423, file: !361, discriminator: 17)
!5457 = !DILocation(line: 1811, column: 529, scope: !5458)
!5458 = !DILexicalBlockFile(scope: !5416, file: !361, discriminator: 14)
!5459 = !DILocation(line: 1811, column: 599, scope: !5460)
!5460 = !DILexicalBlockFile(scope: !5461, file: !361, discriminator: 18)
!5461 = distinct !DILexicalBlock(scope: !5416, file: !361, line: 1811, column: 532)
!5462 = !DILocation(line: 1811, column: 607, scope: !5461)
!5463 = !DILocation(line: 1811, column: 567, scope: !5461)
!5464 = !DILocation(line: 1811, column: 579, scope: !5461)
!5465 = !DILocation(line: 1811, column: 574, scope: !5461)
!5466 = !DILocation(line: 1811, column: 535, scope: !5461)
!5467 = !DILocation(line: 1811, column: 585, scope: !5461)
!5468 = !DILocation(line: 1811, column: 617, scope: !5461)
!5469 = !DILocation(line: 1811, column: 617, scope: !5470)
!5470 = !DILexicalBlockFile(scope: !5461, file: !361, discriminator: 19)
!5471 = !DILocation(line: 1811, column: 630, scope: !5472)
!5472 = !DILexicalBlockFile(scope: !5371, file: !361, discriminator: 7)
!5473 = !DILocation(line: 1811, column: 630, scope: !5474)
!5474 = !DILexicalBlockFile(scope: !5371, file: !361, discriminator: 20)
!5475 = !DILocation(line: 1812, column: 5, scope: !5274)
!5476 = !DILocation(line: 1766, column: 34, scope: !5268)
!5477 = !DILocation(line: 1766, column: 31, scope: !5268)
!5478 = !DILocation(line: 1766, column: 5, scope: !5268)
!5479 = !DILocation(line: 1814, column: 42, scope: !836)
!5480 = !DILocation(line: 1814, column: 47, scope: !836)
!5481 = !DILocation(line: 1814, column: 56, scope: !836)
!5482 = !DILocation(line: 1814, column: 10, scope: !836)
!5483 = !DILocation(line: 1814, column: 8, scope: !836)
!5484 = !DILocation(line: 1815, column: 5, scope: !836)
!5485 = !DILocation(line: 1815, column: 10, scope: !5486)
!5486 = !DILexicalBlockFile(scope: !859, file: !361, discriminator: 1)
!5487 = !DILocation(line: 1815, column: 20, scope: !859)
!5488 = !DILocation(line: 1815, column: 50, scope: !859)
!5489 = !DILocation(line: 1815, column: 64, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !859, file: !361, line: 1815, column: 61)
!5491 = !DILocation(line: 1815, column: 81, scope: !5490)
!5492 = !DILocation(line: 1815, column: 61, scope: !5490)
!5493 = !{!5210, !1253, i64 0}
!5494 = !DILocation(line: 1815, column: 91, scope: !5490)
!5495 = !DILocation(line: 1815, column: 61, scope: !859)
!5496 = !DILocation(line: 1815, column: 61, scope: !5497)
!5497 = !DILexicalBlockFile(scope: !859, file: !361, discriminator: 2)
!5498 = !DILocation(line: 1815, column: 122, scope: !5499)
!5499 = !DILexicalBlockFile(scope: !5490, file: !361, discriminator: 3)
!5500 = !DILocation(line: 1815, column: 140, scope: !5490)
!5501 = !DILocation(line: 1815, column: 150, scope: !5490)
!5502 = !{!5213, !1201, i64 48}
!5503 = !DILocation(line: 1815, column: 175, scope: !5490)
!5504 = !DILocation(line: 1815, column: 106, scope: !5490)
!5505 = !DILocation(line: 1815, column: 194, scope: !5506)
!5506 = !DILexicalBlockFile(scope: !836, file: !361, discriminator: 4)
!5507 = !DILocation(line: 1815, column: 194, scope: !859)
!5508 = !DILocation(line: 1815, column: 194, scope: !5509)
!5509 = !DILexicalBlockFile(scope: !859, file: !361, discriminator: 5)
!5510 = !DILocation(line: 1816, column: 12, scope: !836)
!5511 = !DILocation(line: 1816, column: 5, scope: !836)
!5512 = !DILocation(line: 1817, column: 1, scope: !836)
!5513 = !DILocation(line: 1605, column: 37, scope: !868)
!5514 = !DILocation(line: 1605, column: 56, scope: !868)
!5515 = !DILocation(line: 1605, column: 70, scope: !868)
!5516 = !DILocation(line: 1605, column: 87, scope: !868)
!5517 = !DILocation(line: 1608, column: 5, scope: !868)
!5518 = !DILocation(line: 1608, column: 18, scope: !868)
!5519 = !DILocation(line: 1609, column: 5, scope: !868)
!5520 = !DILocation(line: 1609, column: 16, scope: !868)
!5521 = !DILocation(line: 1610, column: 5, scope: !868)
!5522 = !DILocation(line: 1610, column: 9, scope: !868)
!5523 = !DILocation(line: 1610, column: 15, scope: !868)
!5524 = !DILocation(line: 1610, column: 24, scope: !868)
!5525 = !DILocation(line: 1611, column: 9, scope: !868)
!5526 = !DILocation(line: 1611, column: 16, scope: !868)
!5527 = !DILocation(line: 1611, column: 22, scope: !868)
!5528 = !DILocation(line: 1611, column: 30, scope: !868)
!5529 = !DILocation(line: 1612, column: 5, scope: !868)
!5530 = !DILocation(line: 1612, column: 15, scope: !868)
!5531 = !DILocation(line: 1612, column: 33, scope: !868)
!5532 = !DILocation(line: 1613, column: 5, scope: !868)
!5533 = !DILocation(line: 1613, column: 9, scope: !868)
!5534 = !DILocation(line: 1613, column: 27, scope: !868)
!5535 = !DILocation(line: 1615, column: 35, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !868, file: !361, line: 1615, column: 9)
!5537 = !DILocation(line: 1615, column: 45, scope: !5536)
!5538 = !DILocation(line: 1615, column: 50, scope: !5536)
!5539 = !DILocation(line: 1615, column: 10, scope: !5536)
!5540 = !DILocation(line: 1615, column: 9, scope: !868)
!5541 = !DILocation(line: 1616, column: 9, scope: !5536)
!5542 = !DILocation(line: 1618, column: 49, scope: !868)
!5543 = !DILocation(line: 1618, column: 59, scope: !868)
!5544 = !DILocation(line: 1618, column: 64, scope: !868)
!5545 = !DILocation(line: 1618, column: 69, scope: !868)
!5546 = !DILocation(line: 1618, column: 63, scope: !868)
!5547 = !DILocation(line: 1618, column: 62, scope: !868)
!5548 = !DILocation(line: 1618, column: 11, scope: !868)
!5549 = !DILocation(line: 1618, column: 9, scope: !868)
!5550 = !DILocation(line: 1619, column: 9, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !868, file: !361, line: 1619, column: 9)
!5552 = !DILocation(line: 1619, column: 13, scope: !5551)
!5553 = !DILocation(line: 1619, column: 9, scope: !868)
!5554 = !DILocation(line: 1620, column: 9, scope: !5551)
!5555 = !DILocation(line: 1621, column: 43, scope: !868)
!5556 = !DILocation(line: 1621, column: 26, scope: !868)
!5557 = !DILocation(line: 1621, column: 9, scope: !868)
!5558 = !DILocation(line: 1624, column: 10, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !868, file: !361, line: 1624, column: 10)
!5560 = !DILocation(line: 1624, column: 16, scope: !5559)
!5561 = !DILocation(line: 1624, column: 10, scope: !868)
!5562 = !DILocation(line: 1626, column: 17, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5559, file: !361, line: 1624, column: 39)
!5564 = !DILocation(line: 1627, column: 15, scope: !5563)
!5565 = !DILocation(line: 1628, column: 5, scope: !5563)
!5566 = !DILocation(line: 1628, column: 34, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5559, file: !361, line: 1628, column: 16)
!5568 = !DILocation(line: 1628, column: 43, scope: !5567)
!5569 = !DILocation(line: 1628, column: 54, scope: !5567)
!5570 = !DILocation(line: 1628, column: 63, scope: !5567)
!5571 = !DILocation(line: 1628, column: 80, scope: !5567)
!5572 = !DILocation(line: 1628, column: 16, scope: !5559)
!5573 = !DILocation(line: 1629, column: 25, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5567, file: !361, line: 1628, column: 87)
!5575 = !DILocation(line: 1629, column: 9, scope: !5574)
!5576 = !DILocation(line: 1630, column: 9, scope: !5574)
!5577 = !DILocation(line: 1631, column: 41, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5567, file: !361, line: 1631, column: 16)
!5579 = !DILocation(line: 1631, column: 17, scope: !5578)
!5580 = !DILocation(line: 1631, column: 16, scope: !5567)
!5581 = !DILocation(line: 1632, column: 9, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5578, file: !361, line: 1631, column: 73)
!5583 = !DILocation(line: 1635, column: 26, scope: !868)
!5584 = !DILocation(line: 1635, column: 12, scope: !868)
!5585 = !DILocation(line: 1635, column: 10, scope: !868)
!5586 = !DILocation(line: 1636, column: 16, scope: !868)
!5587 = !DILocation(line: 1638, column: 12, scope: !890)
!5588 = !DILocation(line: 1638, column: 10, scope: !890)
!5589 = !DILocation(line: 1638, column: 17, scope: !5590)
!5590 = !DILexicalBlockFile(scope: !5591, file: !361, discriminator: 2)
!5591 = !DILexicalBlockFile(scope: !889, file: !361, discriminator: 1)
!5592 = !DILocation(line: 1638, column: 21, scope: !889)
!5593 = !DILocation(line: 1638, column: 31, scope: !889)
!5594 = !DILocation(line: 1638, column: 19, scope: !889)
!5595 = !DILocation(line: 1638, column: 5, scope: !890)
!5596 = !DILocation(line: 1639, column: 9, scope: !888)
!5597 = !DILocation(line: 1639, column: 13, scope: !888)
!5598 = !DILocation(line: 1639, column: 22, scope: !888)
!5599 = !DILocation(line: 1639, column: 28, scope: !888)
!5600 = !DILocation(line: 1639, column: 21, scope: !888)
!5601 = !DILocation(line: 1639, column: 79, scope: !5602)
!5602 = !DILexicalBlockFile(scope: !888, file: !361, discriminator: 1)
!5603 = !DILocation(line: 1639, column: 89, scope: !888)
!5604 = !DILocation(line: 1639, column: 101, scope: !888)
!5605 = !DILocation(line: 1639, column: 96, scope: !888)
!5606 = !DILocation(line: 1639, column: 42, scope: !888)
!5607 = !DILocation(line: 1639, column: 36, scope: !888)
!5608 = !DILocation(line: 1639, column: 108, scope: !888)
!5609 = !DILocation(line: 1639, column: 117, scope: !5610)
!5610 = !DILexicalBlockFile(scope: !888, file: !361, discriminator: 2)
!5611 = !DILocation(line: 1639, column: 123, scope: !888)
!5612 = !DILocation(line: 1639, column: 116, scope: !888)
!5613 = !DILocation(line: 1639, column: 168, scope: !5614)
!5614 = !DILexicalBlockFile(scope: !888, file: !361, discriminator: 4)
!5615 = !DILocation(line: 1639, column: 178, scope: !888)
!5616 = !DILocation(line: 1639, column: 190, scope: !888)
!5617 = !DILocation(line: 1639, column: 185, scope: !888)
!5618 = !DILocation(line: 1639, column: 138, scope: !888)
!5619 = !DILocation(line: 1639, column: 137, scope: !888)
!5620 = !DILocation(line: 1639, column: 131, scope: !888)
!5621 = !DILocation(line: 1639, column: 197, scope: !888)
!5622 = !DILocation(line: 1639, column: 206, scope: !5623)
!5623 = !DILexicalBlockFile(scope: !888, file: !361, discriminator: 5)
!5624 = !DILocation(line: 1639, column: 212, scope: !888)
!5625 = !DILocation(line: 1639, column: 205, scope: !888)
!5626 = !DILocation(line: 1639, column: 247, scope: !5627)
!5627 = !DILexicalBlockFile(scope: !888, file: !361, discriminator: 7)
!5628 = !DILocation(line: 1639, column: 257, scope: !888)
!5629 = !DILocation(line: 1639, column: 267, scope: !888)
!5630 = !DILocation(line: 1639, column: 263, scope: !888)
!5631 = !DILocation(line: 1639, column: 227, scope: !888)
!5632 = !DILocation(line: 1639, column: 298, scope: !888)
!5633 = !DILocation(line: 1639, column: 308, scope: !888)
!5634 = !DILocation(line: 1639, column: 318, scope: !888)
!5635 = !DILocation(line: 1639, column: 314, scope: !888)
!5636 = !DILocation(line: 1639, column: 278, scope: !888)
!5637 = !DILocation(line: 1639, column: 326, scope: !888)
!5638 = !DILocation(line: 1639, column: 275, scope: !888)
!5639 = !DILocation(line: 1639, column: 353, scope: !888)
!5640 = !DILocation(line: 1639, column: 363, scope: !888)
!5641 = !DILocation(line: 1639, column: 373, scope: !888)
!5642 = !DILocation(line: 1639, column: 369, scope: !888)
!5643 = !DILocation(line: 1639, column: 335, scope: !888)
!5644 = !DILocation(line: 1639, column: 381, scope: !888)
!5645 = !DILocation(line: 1639, column: 332, scope: !888)
!5646 = !DILocation(line: 1639, column: 390, scope: !888)
!5647 = !DILocation(line: 1639, column: 436, scope: !5648)
!5648 = !DILexicalBlockFile(scope: !888, file: !361, discriminator: 8)
!5649 = !DILocation(line: 1639, column: 446, scope: !888)
!5650 = !DILocation(line: 1639, column: 458, scope: !888)
!5651 = !DILocation(line: 1639, column: 453, scope: !888)
!5652 = !DILocation(line: 1639, column: 404, scope: !888)
!5653 = !DILocation(line: 1639, column: 403, scope: !888)
!5654 = !DILocation(line: 1639, column: 116, scope: !5655)
!5655 = !DILexicalBlockFile(scope: !5656, file: !361, discriminator: 10)
!5656 = !DILexicalBlockFile(scope: !888, file: !361, discriminator: 9)
!5657 = !DILocation(line: 1639, column: 21, scope: !5658)
!5658 = !DILexicalBlockFile(scope: !5659, file: !361, discriminator: 11)
!5659 = !DILexicalBlockFile(scope: !888, file: !361, discriminator: 6)
!5660 = !DILocation(line: 1639, column: 466, scope: !5661)
!5661 = !DILexicalBlockFile(scope: !5662, file: !361, discriminator: 12)
!5662 = !DILexicalBlockFile(scope: !888, file: !361, discriminator: 3)
!5663 = !DILocation(line: 1642, column: 13, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !888, file: !361, line: 1642, column: 13)
!5665 = !DILocation(line: 1642, column: 19, scope: !5664)
!5666 = !DILocation(line: 1642, column: 17, scope: !5664)
!5667 = !DILocation(line: 1642, column: 13, scope: !888)
!5668 = !DILocation(line: 1643, column: 20, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5664, file: !361, line: 1642, column: 28)
!5670 = !DILocation(line: 1643, column: 30, scope: !5669)
!5671 = !DILocation(line: 1643, column: 28, scope: !5669)
!5672 = !DILocation(line: 1643, column: 18, scope: !5669)
!5673 = !DILocation(line: 1644, column: 18, scope: !5669)
!5674 = !DILocation(line: 1645, column: 9, scope: !5669)
!5675 = !DILocation(line: 1647, column: 20, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5664, file: !361, line: 1646, column: 14)
!5677 = !DILocation(line: 1647, column: 26, scope: !5676)
!5678 = !DILocation(line: 1647, column: 24, scope: !5676)
!5679 = !DILocation(line: 1647, column: 18, scope: !5676)
!5680 = !DILocation(line: 1648, column: 18, scope: !5676)
!5681 = !DILocation(line: 1660, column: 15, scope: !888)
!5682 = !DILocation(line: 1661, column: 19, scope: !888)
!5683 = !DILocation(line: 1661, column: 24, scope: !888)
!5684 = !DILocation(line: 1661, column: 16, scope: !888)
!5685 = !DILocation(line: 1663, column: 14, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !888, file: !361, line: 1663, column: 14)
!5687 = !DILocation(line: 1663, column: 22, scope: !5686)
!5688 = !DILocation(line: 1663, column: 19, scope: !5686)
!5689 = !DILocation(line: 1663, column: 14, scope: !888)
!5690 = !DILocation(line: 1664, column: 19, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5686, file: !361, line: 1663, column: 29)
!5692 = !DILocation(line: 1665, column: 21, scope: !5691)
!5693 = !DILocation(line: 1665, column: 18, scope: !5691)
!5694 = !DILocation(line: 1666, column: 23, scope: !5691)
!5695 = !DILocation(line: 1666, column: 20, scope: !5691)
!5696 = !DILocation(line: 1667, column: 9, scope: !5691)
!5697 = !DILocation(line: 1668, column: 14, scope: !888)
!5698 = !DILocation(line: 1669, column: 14, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !888, file: !361, line: 1669, column: 14)
!5700 = !DILocation(line: 1669, column: 22, scope: !5699)
!5701 = !DILocation(line: 1669, column: 19, scope: !5699)
!5702 = !DILocation(line: 1669, column: 14, scope: !888)
!5703 = !DILocation(line: 1670, column: 19, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5699, file: !361, line: 1669, column: 29)
!5705 = !DILocation(line: 1671, column: 21, scope: !5704)
!5706 = !DILocation(line: 1671, column: 18, scope: !5704)
!5707 = !DILocation(line: 1672, column: 23, scope: !5704)
!5708 = !DILocation(line: 1672, column: 20, scope: !5704)
!5709 = !DILocation(line: 1673, column: 9, scope: !5704)
!5710 = !DILocation(line: 1674, column: 14, scope: !888)
!5711 = !DILocation(line: 1675, column: 14, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !888, file: !361, line: 1675, column: 14)
!5713 = !DILocation(line: 1675, column: 22, scope: !5712)
!5714 = !DILocation(line: 1675, column: 19, scope: !5712)
!5715 = !DILocation(line: 1675, column: 14, scope: !888)
!5716 = !DILocation(line: 1676, column: 19, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5712, file: !361, line: 1675, column: 29)
!5718 = !DILocation(line: 1677, column: 23, scope: !5717)
!5719 = !DILocation(line: 1677, column: 20, scope: !5717)
!5720 = !DILocation(line: 1678, column: 9, scope: !5717)
!5721 = !DILocation(line: 1681, column: 14, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !888, file: !361, line: 1681, column: 14)
!5723 = !DILocation(line: 1681, column: 14, scope: !888)
!5724 = !DILocation(line: 1682, column: 24, scope: !5722)
!5725 = !DILocation(line: 1682, column: 21, scope: !5722)
!5726 = !DILocation(line: 1682, column: 13, scope: !5722)
!5727 = !DILocation(line: 1684, column: 24, scope: !5722)
!5728 = !DILocation(line: 1684, column: 21, scope: !5722)
!5729 = !DILocation(line: 1687, column: 14, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !888, file: !361, line: 1687, column: 14)
!5731 = !DILocation(line: 1687, column: 22, scope: !5730)
!5732 = !DILocation(line: 1687, column: 14, scope: !888)
!5733 = !DILocation(line: 1688, column: 21, scope: !5730)
!5734 = !DILocation(line: 1688, column: 13, scope: !5730)
!5735 = !DILocation(line: 1689, column: 19, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5730, file: !361, line: 1689, column: 19)
!5737 = !DILocation(line: 1689, column: 27, scope: !5736)
!5738 = !DILocation(line: 1689, column: 19, scope: !5730)
!5739 = !DILocation(line: 1690, column: 21, scope: !5736)
!5740 = !DILocation(line: 1690, column: 13, scope: !5736)
!5741 = !DILocation(line: 1693, column: 18, scope: !888)
!5742 = !DILocation(line: 1693, column: 15, scope: !888)
!5743 = !DILocation(line: 1695, column: 29, scope: !888)
!5744 = !DILocation(line: 1695, column: 18, scope: !888)
!5745 = !DILocation(line: 1695, column: 15, scope: !888)
!5746 = !DILocation(line: 1696, column: 14, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !888, file: !361, line: 1696, column: 14)
!5748 = !DILocation(line: 1696, column: 20, scope: !5747)
!5749 = !DILocation(line: 1696, column: 14, scope: !888)
!5750 = !DILocation(line: 1696, column: 32, scope: !5751)
!5751 = !DILexicalBlockFile(scope: !5747, file: !361, discriminator: 1)
!5752 = !DILocation(line: 1696, column: 26, scope: !5747)
!5753 = !DILocation(line: 1697, column: 14, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !888, file: !361, line: 1697, column: 14)
!5755 = !DILocation(line: 1697, column: 20, scope: !5754)
!5756 = !DILocation(line: 1697, column: 14, scope: !888)
!5757 = !DILocation(line: 1697, column: 33, scope: !5758)
!5758 = !DILexicalBlockFile(scope: !5754, file: !361, discriminator: 1)
!5759 = !DILocation(line: 1697, column: 27, scope: !5754)
!5760 = !DILocation(line: 1698, column: 30, scope: !888)
!5761 = !DILocation(line: 1698, column: 16, scope: !888)
!5762 = !DILocation(line: 1698, column: 14, scope: !888)
!5763 = !DILocation(line: 1701, column: 14, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !888, file: !361, line: 1701, column: 14)
!5765 = !DILocation(line: 1701, column: 14, scope: !888)
!5766 = !DILocation(line: 1702, column: 29, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5764, file: !361, line: 1701, column: 27)
!5768 = !DILocation(line: 1702, column: 35, scope: !5767)
!5769 = !DILocation(line: 1702, column: 41, scope: !5767)
!5770 = !DILocation(line: 1702, column: 26, scope: !5767)
!5771 = !DILocation(line: 1703, column: 9, scope: !5767)
!5772 = !DILocation(line: 1704, column: 23, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5764, file: !361, line: 1703, column: 16)
!5774 = !DILocation(line: 1704, column: 29, scope: !5773)
!5775 = !DILocation(line: 1704, column: 39, scope: !5773)
!5776 = !DILocation(line: 1704, column: 37, scope: !5773)
!5777 = !DILocation(line: 1704, column: 22, scope: !5773)
!5778 = !DILocation(line: 1704, column: 17, scope: !5773)
!5779 = !DILocation(line: 1704, column: 20, scope: !5773)
!5780 = !DILocation(line: 1706, column: 23, scope: !888)
!5781 = !DILocation(line: 1706, column: 22, scope: !888)
!5782 = !DILocation(line: 1706, column: 20, scope: !888)
!5783 = !DILocation(line: 1707, column: 5, scope: !889)
!5784 = !DILocation(line: 1707, column: 5, scope: !888)
!5785 = !DILocation(line: 1638, column: 41, scope: !889)
!5786 = !DILocation(line: 1638, column: 38, scope: !889)
!5787 = !DILocation(line: 1638, column: 5, scope: !889)
!5788 = !DILocation(line: 1708, column: 42, scope: !868)
!5789 = !DILocation(line: 1708, column: 47, scope: !868)
!5790 = !DILocation(line: 1708, column: 56, scope: !868)
!5791 = !DILocation(line: 1708, column: 10, scope: !868)
!5792 = !DILocation(line: 1708, column: 8, scope: !868)
!5793 = !DILocation(line: 1708, column: 5, scope: !868)
!5794 = !DILocation(line: 1711, column: 5, scope: !868)
!5795 = !DILocation(line: 1711, column: 10, scope: !5796)
!5796 = !DILexicalBlockFile(scope: !892, file: !361, discriminator: 1)
!5797 = !DILocation(line: 1711, column: 20, scope: !892)
!5798 = !DILocation(line: 1711, column: 50, scope: !892)
!5799 = !DILocation(line: 1711, column: 64, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !892, file: !361, line: 1711, column: 61)
!5801 = !DILocation(line: 1711, column: 81, scope: !5800)
!5802 = !DILocation(line: 1711, column: 61, scope: !5800)
!5803 = !DILocation(line: 1711, column: 91, scope: !5800)
!5804 = !DILocation(line: 1711, column: 61, scope: !892)
!5805 = !DILocation(line: 1711, column: 61, scope: !5806)
!5806 = !DILexicalBlockFile(scope: !892, file: !361, discriminator: 2)
!5807 = !DILocation(line: 1711, column: 122, scope: !5808)
!5808 = !DILexicalBlockFile(scope: !5800, file: !361, discriminator: 3)
!5809 = !DILocation(line: 1711, column: 140, scope: !5800)
!5810 = !DILocation(line: 1711, column: 150, scope: !5800)
!5811 = !DILocation(line: 1711, column: 175, scope: !5800)
!5812 = !DILocation(line: 1711, column: 106, scope: !5800)
!5813 = !DILocation(line: 1711, column: 194, scope: !5814)
!5814 = !DILexicalBlockFile(scope: !868, file: !361, discriminator: 4)
!5815 = !DILocation(line: 1711, column: 194, scope: !892)
!5816 = !DILocation(line: 1711, column: 194, scope: !5817)
!5817 = !DILexicalBlockFile(scope: !892, file: !361, discriminator: 5)
!5818 = !DILocation(line: 1712, column: 12, scope: !868)
!5819 = !DILocation(line: 1712, column: 5, scope: !868)
!5820 = !DILocation(line: 1713, column: 1, scope: !868)
!5821 = !DILocation(line: 941, column: 34, scope: !902)
!5822 = !DILocation(line: 941, column: 53, scope: !902)
!5823 = !DILocation(line: 941, column: 67, scope: !902)
!5824 = !DILocation(line: 941, column: 81, scope: !902)
!5825 = !DILocation(line: 941, column: 97, scope: !902)
!5826 = !DILocation(line: 944, column: 5, scope: !902)
!5827 = !DILocation(line: 944, column: 18, scope: !902)
!5828 = !DILocation(line: 944, column: 23, scope: !902)
!5829 = !DILocation(line: 945, column: 5, scope: !902)
!5830 = !DILocation(line: 945, column: 16, scope: !902)
!5831 = !DILocation(line: 945, column: 21, scope: !902)
!5832 = !DILocation(line: 946, column: 5, scope: !902)
!5833 = !DILocation(line: 946, column: 12, scope: !902)
!5834 = !DILocation(line: 946, column: 20, scope: !902)
!5835 = !DILocation(line: 947, column: 5, scope: !902)
!5836 = !DILocation(line: 947, column: 15, scope: !902)
!5837 = !DILocation(line: 949, column: 10, scope: !902)
!5838 = !DILocation(line: 949, column: 20, scope: !902)
!5839 = !DILocation(line: 949, column: 8, scope: !902)
!5840 = !DILocation(line: 950, column: 11, scope: !902)
!5841 = !DILocation(line: 950, column: 21, scope: !902)
!5842 = !DILocation(line: 950, column: 9, scope: !902)
!5843 = !DILocation(line: 951, column: 35, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !902, file: !361, line: 951, column: 9)
!5845 = !DILocation(line: 951, column: 40, scope: !5844)
!5846 = !DILocation(line: 951, column: 10, scope: !5844)
!5847 = !DILocation(line: 951, column: 9, scope: !902)
!5848 = !DILocation(line: 952, column: 9, scope: !5844)
!5849 = !DILocation(line: 953, column: 11, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !902, file: !361, line: 953, column: 9)
!5851 = !DILocation(line: 953, column: 17, scope: !5850)
!5852 = !DILocation(line: 953, column: 15, scope: !5850)
!5853 = !DILocation(line: 953, column: 24, scope: !5850)
!5854 = !DILocation(line: 953, column: 29, scope: !5850)
!5855 = !DILocation(line: 953, column: 9, scope: !902)
!5856 = !DILocation(line: 954, column: 25, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5850, file: !361, line: 953, column: 35)
!5858 = !DILocation(line: 954, column: 9, scope: !5857)
!5859 = !DILocation(line: 955, column: 9, scope: !5857)
!5860 = !DILocation(line: 958, column: 31, scope: !902)
!5861 = !DILocation(line: 958, column: 23, scope: !902)
!5862 = !DILocation(line: 958, column: 14, scope: !902)
!5863 = !DILocation(line: 958, column: 12, scope: !902)
!5864 = !DILocation(line: 959, column: 31, scope: !902)
!5865 = !DILocation(line: 959, column: 23, scope: !902)
!5866 = !DILocation(line: 959, column: 14, scope: !902)
!5867 = !DILocation(line: 959, column: 12, scope: !902)
!5868 = !DILocation(line: 961, column: 48, scope: !902)
!5869 = !DILocation(line: 961, column: 51, scope: !902)
!5870 = !DILocation(line: 961, column: 10, scope: !902)
!5871 = !DILocation(line: 961, column: 8, scope: !902)
!5872 = !DILocation(line: 962, column: 9, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !902, file: !361, line: 962, column: 9)
!5874 = !DILocation(line: 962, column: 12, scope: !5873)
!5875 = !DILocation(line: 962, column: 9, scope: !902)
!5876 = !DILocation(line: 963, column: 9, scope: !5873)
!5877 = !DILocation(line: 964, column: 43, scope: !902)
!5878 = !DILocation(line: 964, column: 26, scope: !902)
!5879 = !DILocation(line: 964, column: 9, scope: !902)
!5880 = !DILocation(line: 966, column: 12, scope: !921)
!5881 = !DILocation(line: 966, column: 10, scope: !921)
!5882 = !DILocation(line: 966, column: 17, scope: !5883)
!5883 = !DILexicalBlockFile(scope: !5884, file: !361, discriminator: 2)
!5884 = !DILexicalBlockFile(scope: !920, file: !361, discriminator: 1)
!5885 = !DILocation(line: 966, column: 21, scope: !920)
!5886 = !DILocation(line: 966, column: 19, scope: !920)
!5887 = !DILocation(line: 966, column: 5, scope: !921)
!5888 = !DILocation(line: 967, column: 9, scope: !919)
!5889 = !DILocation(line: 967, column: 16, scope: !919)
!5890 = !DILocation(line: 967, column: 26, scope: !919)
!5891 = !DILocation(line: 967, column: 32, scope: !919)
!5892 = !DILocation(line: 967, column: 25, scope: !919)
!5893 = !DILocation(line: 967, column: 83, scope: !5894)
!5894 = !DILexicalBlockFile(scope: !919, file: !361, discriminator: 1)
!5895 = !DILocation(line: 967, column: 94, scope: !919)
!5896 = !DILocation(line: 967, column: 89, scope: !919)
!5897 = !DILocation(line: 967, column: 46, scope: !919)
!5898 = !DILocation(line: 967, column: 40, scope: !919)
!5899 = !DILocation(line: 967, column: 104, scope: !5900)
!5900 = !DILexicalBlockFile(scope: !919, file: !361, discriminator: 2)
!5901 = !DILocation(line: 967, column: 110, scope: !919)
!5902 = !DILocation(line: 967, column: 103, scope: !919)
!5903 = !DILocation(line: 967, column: 155, scope: !5904)
!5904 = !DILexicalBlockFile(scope: !919, file: !361, discriminator: 4)
!5905 = !DILocation(line: 967, column: 166, scope: !919)
!5906 = !DILocation(line: 967, column: 161, scope: !919)
!5907 = !DILocation(line: 967, column: 125, scope: !919)
!5908 = !DILocation(line: 967, column: 124, scope: !919)
!5909 = !DILocation(line: 967, column: 118, scope: !919)
!5910 = !DILocation(line: 967, column: 176, scope: !5911)
!5911 = !DILexicalBlockFile(scope: !919, file: !361, discriminator: 5)
!5912 = !DILocation(line: 967, column: 182, scope: !919)
!5913 = !DILocation(line: 967, column: 175, scope: !919)
!5914 = !DILocation(line: 967, column: 217, scope: !5915)
!5915 = !DILexicalBlockFile(scope: !919, file: !361, discriminator: 7)
!5916 = !DILocation(line: 967, column: 226, scope: !919)
!5917 = !DILocation(line: 967, column: 222, scope: !919)
!5918 = !DILocation(line: 967, column: 197, scope: !919)
!5919 = !DILocation(line: 967, column: 257, scope: !919)
!5920 = !DILocation(line: 967, column: 266, scope: !919)
!5921 = !DILocation(line: 967, column: 262, scope: !919)
!5922 = !DILocation(line: 967, column: 237, scope: !919)
!5923 = !DILocation(line: 967, column: 274, scope: !919)
!5924 = !DILocation(line: 967, column: 234, scope: !919)
!5925 = !DILocation(line: 967, column: 301, scope: !919)
!5926 = !DILocation(line: 967, column: 310, scope: !919)
!5927 = !DILocation(line: 967, column: 306, scope: !919)
!5928 = !DILocation(line: 967, column: 283, scope: !919)
!5929 = !DILocation(line: 967, column: 318, scope: !919)
!5930 = !DILocation(line: 967, column: 280, scope: !919)
!5931 = !DILocation(line: 967, column: 368, scope: !5932)
!5932 = !DILexicalBlockFile(scope: !919, file: !361, discriminator: 8)
!5933 = !DILocation(line: 967, column: 379, scope: !919)
!5934 = !DILocation(line: 967, column: 374, scope: !919)
!5935 = !DILocation(line: 967, column: 336, scope: !919)
!5936 = !DILocation(line: 967, column: 335, scope: !919)
!5937 = !DILocation(line: 967, column: 103, scope: !5938)
!5938 = !DILexicalBlockFile(scope: !5939, file: !361, discriminator: 10)
!5939 = !DILexicalBlockFile(scope: !919, file: !361, discriminator: 9)
!5940 = !DILocation(line: 967, column: 25, scope: !5941)
!5941 = !DILexicalBlockFile(scope: !5942, file: !361, discriminator: 11)
!5942 = !DILexicalBlockFile(scope: !919, file: !361, discriminator: 6)
!5943 = !DILocation(line: 967, column: 23, scope: !5944)
!5944 = !DILexicalBlockFile(scope: !5945, file: !361, discriminator: 12)
!5945 = !DILexicalBlockFile(scope: !919, file: !361, discriminator: 3)
!5946 = !DILocation(line: 968, column: 9, scope: !919)
!5947 = !DILocation(line: 968, column: 16, scope: !919)
!5948 = !DILocation(line: 968, column: 26, scope: !919)
!5949 = !DILocation(line: 968, column: 32, scope: !919)
!5950 = !DILocation(line: 968, column: 25, scope: !919)
!5951 = !DILocation(line: 968, column: 83, scope: !5894)
!5952 = !DILocation(line: 968, column: 94, scope: !919)
!5953 = !DILocation(line: 968, column: 98, scope: !919)
!5954 = !DILocation(line: 968, column: 96, scope: !919)
!5955 = !DILocation(line: 968, column: 89, scope: !919)
!5956 = !DILocation(line: 968, column: 46, scope: !919)
!5957 = !DILocation(line: 968, column: 40, scope: !919)
!5958 = !DILocation(line: 968, column: 112, scope: !5900)
!5959 = !DILocation(line: 968, column: 118, scope: !919)
!5960 = !DILocation(line: 968, column: 111, scope: !919)
!5961 = !DILocation(line: 968, column: 163, scope: !5904)
!5962 = !DILocation(line: 968, column: 174, scope: !919)
!5963 = !DILocation(line: 968, column: 178, scope: !919)
!5964 = !DILocation(line: 968, column: 176, scope: !919)
!5965 = !DILocation(line: 968, column: 169, scope: !919)
!5966 = !DILocation(line: 968, column: 133, scope: !919)
!5967 = !DILocation(line: 968, column: 132, scope: !919)
!5968 = !DILocation(line: 968, column: 126, scope: !919)
!5969 = !DILocation(line: 968, column: 192, scope: !5911)
!5970 = !DILocation(line: 968, column: 198, scope: !919)
!5971 = !DILocation(line: 968, column: 191, scope: !919)
!5972 = !DILocation(line: 968, column: 233, scope: !5915)
!5973 = !DILocation(line: 968, column: 242, scope: !919)
!5974 = !DILocation(line: 968, column: 246, scope: !919)
!5975 = !DILocation(line: 968, column: 244, scope: !919)
!5976 = !DILocation(line: 968, column: 238, scope: !919)
!5977 = !DILocation(line: 968, column: 213, scope: !919)
!5978 = !DILocation(line: 968, column: 281, scope: !919)
!5979 = !DILocation(line: 968, column: 290, scope: !919)
!5980 = !DILocation(line: 968, column: 294, scope: !919)
!5981 = !DILocation(line: 968, column: 292, scope: !919)
!5982 = !DILocation(line: 968, column: 286, scope: !919)
!5983 = !DILocation(line: 968, column: 261, scope: !919)
!5984 = !DILocation(line: 968, column: 306, scope: !919)
!5985 = !DILocation(line: 968, column: 258, scope: !919)
!5986 = !DILocation(line: 968, column: 333, scope: !919)
!5987 = !DILocation(line: 968, column: 342, scope: !919)
!5988 = !DILocation(line: 968, column: 346, scope: !919)
!5989 = !DILocation(line: 968, column: 344, scope: !919)
!5990 = !DILocation(line: 968, column: 338, scope: !919)
!5991 = !DILocation(line: 968, column: 315, scope: !919)
!5992 = !DILocation(line: 968, column: 358, scope: !919)
!5993 = !DILocation(line: 968, column: 312, scope: !919)
!5994 = !DILocation(line: 968, column: 408, scope: !5932)
!5995 = !DILocation(line: 968, column: 419, scope: !919)
!5996 = !DILocation(line: 968, column: 423, scope: !919)
!5997 = !DILocation(line: 968, column: 421, scope: !919)
!5998 = !DILocation(line: 968, column: 414, scope: !919)
!5999 = !DILocation(line: 968, column: 376, scope: !919)
!6000 = !DILocation(line: 968, column: 375, scope: !919)
!6001 = !DILocation(line: 968, column: 111, scope: !5938)
!6002 = !DILocation(line: 968, column: 25, scope: !5941)
!6003 = !DILocation(line: 968, column: 23, scope: !5944)
!6004 = !DILocation(line: 969, column: 9, scope: !919)
!6005 = !DILocation(line: 969, column: 16, scope: !919)
!6006 = !DILocation(line: 969, column: 22, scope: !919)
!6007 = !DILocation(line: 969, column: 27, scope: !919)
!6008 = !DILocation(line: 969, column: 26, scope: !919)
!6009 = !DILocation(line: 969, column: 37, scope: !919)
!6010 = !DILocation(line: 969, column: 42, scope: !919)
!6011 = !DILocation(line: 969, column: 41, scope: !919)
!6012 = !DILocation(line: 969, column: 35, scope: !919)
!6013 = !DILocation(line: 970, column: 28, scope: !919)
!6014 = !DILocation(line: 970, column: 33, scope: !919)
!6015 = !DILocation(line: 970, column: 41, scope: !919)
!6016 = !DILocation(line: 970, column: 21, scope: !919)
!6017 = !DILocation(line: 970, column: 15, scope: !919)
!6018 = !DILocation(line: 970, column: 13, scope: !919)
!6019 = !DILocation(line: 971, column: 9, scope: !919)
!6020 = !DILocation(line: 971, column: 18, scope: !6021)
!6021 = !DILexicalBlockFile(scope: !6022, file: !361, discriminator: 1)
!6022 = distinct !DILexicalBlock(scope: !6023, file: !361, line: 971, column: 18)
!6023 = distinct !DILexicalBlock(scope: !919, file: !361, line: 971, column: 12)
!6024 = !DILocation(line: 971, column: 24, scope: !6022)
!6025 = !DILocation(line: 971, column: 18, scope: !6023)
!6026 = !DILocation(line: 971, column: 30, scope: !6027)
!6027 = !DILexicalBlockFile(scope: !6022, file: !361, discriminator: 2)
!6028 = !DILocation(line: 971, column: 110, scope: !6029)
!6029 = !DILexicalBlockFile(scope: !6030, file: !361, discriminator: 4)
!6030 = distinct !DILexicalBlock(scope: !6022, file: !361, line: 971, column: 33)
!6031 = !DILocation(line: 971, column: 94, scope: !6030)
!6032 = !DILocation(line: 971, column: 72, scope: !6030)
!6033 = !DILocation(line: 971, column: 84, scope: !6030)
!6034 = !DILocation(line: 971, column: 85, scope: !6030)
!6035 = !DILocation(line: 971, column: 79, scope: !6030)
!6036 = !DILocation(line: 971, column: 92, scope: !6030)
!6037 = !DILocation(line: 971, column: 118, scope: !6030)
!6038 = !DILocation(line: 971, column: 118, scope: !6039)
!6039 = !DILexicalBlockFile(scope: !6030, file: !361, discriminator: 5)
!6040 = !DILocation(line: 971, column: 118, scope: !6041)
!6041 = !DILexicalBlockFile(scope: !6030, file: !361, discriminator: 6)
!6042 = !DILocation(line: 971, column: 140, scope: !6043)
!6043 = !DILexicalBlockFile(scope: !6044, file: !361, discriminator: 3)
!6044 = distinct !DILexicalBlock(scope: !6022, file: !361, line: 971, column: 140)
!6045 = !DILocation(line: 971, column: 146, scope: !6044)
!6046 = !DILocation(line: 971, column: 140, scope: !6022)
!6047 = !DILocation(line: 971, column: 152, scope: !6048)
!6048 = !DILexicalBlockFile(scope: !6044, file: !361, discriminator: 8)
!6049 = !DILocation(line: 971, column: 220, scope: !6050)
!6050 = !DILexicalBlockFile(scope: !6051, file: !361, discriminator: 10)
!6051 = distinct !DILexicalBlock(scope: !6044, file: !361, line: 971, column: 155)
!6052 = !DILocation(line: 971, column: 210, scope: !6051)
!6053 = !DILocation(line: 971, column: 188, scope: !6051)
!6054 = !DILocation(line: 971, column: 200, scope: !6051)
!6055 = !DILocation(line: 971, column: 201, scope: !6051)
!6056 = !DILocation(line: 971, column: 195, scope: !6051)
!6057 = !DILocation(line: 971, column: 158, scope: !6051)
!6058 = !DILocation(line: 971, column: 208, scope: !6051)
!6059 = !DILocation(line: 971, column: 228, scope: !6051)
!6060 = !DILocation(line: 971, column: 228, scope: !6061)
!6061 = !DILexicalBlockFile(scope: !6051, file: !361, discriminator: 11)
!6062 = !DILocation(line: 971, column: 228, scope: !6063)
!6063 = !DILexicalBlockFile(scope: !6051, file: !361, discriminator: 12)
!6064 = !DILocation(line: 971, column: 250, scope: !6065)
!6065 = !DILexicalBlockFile(scope: !6066, file: !361, discriminator: 9)
!6066 = distinct !DILexicalBlock(scope: !6044, file: !361, line: 971, column: 250)
!6067 = !DILocation(line: 971, column: 256, scope: !6066)
!6068 = !DILocation(line: 971, column: 250, scope: !6044)
!6069 = !DILocation(line: 971, column: 262, scope: !6070)
!6070 = !DILexicalBlockFile(scope: !6066, file: !361, discriminator: 13)
!6071 = !DILocation(line: 971, column: 316, scope: !6072)
!6072 = !DILexicalBlockFile(scope: !6073, file: !361, discriminator: 15)
!6073 = distinct !DILexicalBlock(scope: !6066, file: !361, line: 971, column: 265)
!6074 = !DILocation(line: 971, column: 309, scope: !6073)
!6075 = !DILocation(line: 971, column: 287, scope: !6073)
!6076 = !DILocation(line: 971, column: 297, scope: !6073)
!6077 = !DILocation(line: 971, column: 298, scope: !6073)
!6078 = !DILocation(line: 971, column: 293, scope: !6073)
!6079 = !DILocation(line: 971, column: 267, scope: !6073)
!6080 = !DILocation(line: 971, column: 307, scope: !6073)
!6081 = !DILocation(line: 971, column: 372, scope: !6073)
!6082 = !DILocation(line: 971, column: 365, scope: !6073)
!6083 = !DILocation(line: 971, column: 378, scope: !6073)
!6084 = !DILocation(line: 971, column: 343, scope: !6073)
!6085 = !DILocation(line: 971, column: 353, scope: !6073)
!6086 = !DILocation(line: 971, column: 354, scope: !6073)
!6087 = !DILocation(line: 971, column: 349, scope: !6073)
!6088 = !DILocation(line: 971, column: 323, scope: !6073)
!6089 = !DILocation(line: 971, column: 363, scope: !6073)
!6090 = !DILocation(line: 971, column: 431, scope: !6073)
!6091 = !DILocation(line: 971, column: 424, scope: !6073)
!6092 = !DILocation(line: 971, column: 437, scope: !6073)
!6093 = !DILocation(line: 971, column: 402, scope: !6073)
!6094 = !DILocation(line: 971, column: 412, scope: !6073)
!6095 = !DILocation(line: 971, column: 413, scope: !6073)
!6096 = !DILocation(line: 971, column: 408, scope: !6073)
!6097 = !DILocation(line: 971, column: 384, scope: !6073)
!6098 = !DILocation(line: 971, column: 422, scope: !6073)
!6099 = !DILocation(line: 971, column: 444, scope: !6073)
!6100 = !DILocation(line: 971, column: 444, scope: !6101)
!6101 = !DILexicalBlockFile(scope: !6073, file: !361, discriminator: 16)
!6102 = !DILocation(line: 971, column: 444, scope: !6103)
!6103 = !DILexicalBlockFile(scope: !6073, file: !361, discriminator: 17)
!6104 = !DILocation(line: 971, column: 462, scope: !6105)
!6105 = !DILexicalBlockFile(scope: !6066, file: !361, discriminator: 14)
!6106 = !DILocation(line: 971, column: 534, scope: !6107)
!6107 = !DILexicalBlockFile(scope: !6108, file: !361, discriminator: 18)
!6108 = distinct !DILexicalBlock(scope: !6066, file: !361, line: 971, column: 465)
!6109 = !DILocation(line: 971, column: 522, scope: !6108)
!6110 = !DILocation(line: 971, column: 500, scope: !6108)
!6111 = !DILocation(line: 971, column: 512, scope: !6108)
!6112 = !DILocation(line: 971, column: 513, scope: !6108)
!6113 = !DILocation(line: 971, column: 507, scope: !6108)
!6114 = !DILocation(line: 971, column: 468, scope: !6108)
!6115 = !DILocation(line: 971, column: 520, scope: !6108)
!6116 = !DILocation(line: 971, column: 542, scope: !6108)
!6117 = !DILocation(line: 971, column: 542, scope: !6118)
!6118 = !DILexicalBlockFile(scope: !6108, file: !361, discriminator: 19)
!6119 = !DILocation(line: 971, column: 555, scope: !6120)
!6120 = !DILexicalBlockFile(scope: !6023, file: !361, discriminator: 7)
!6121 = !DILocation(line: 971, column: 555, scope: !6122)
!6122 = !DILexicalBlockFile(scope: !6023, file: !361, discriminator: 20)
!6123 = !DILocation(line: 972, column: 5, scope: !920)
!6124 = !DILocation(line: 972, column: 5, scope: !919)
!6125 = !DILocation(line: 966, column: 31, scope: !920)
!6126 = !DILocation(line: 966, column: 36, scope: !920)
!6127 = !DILocation(line: 966, column: 28, scope: !920)
!6128 = !DILocation(line: 966, column: 5, scope: !920)
!6129 = !DILocation(line: 973, column: 12, scope: !902)
!6130 = !DILocation(line: 973, column: 5, scope: !902)
!6131 = !DILocation(line: 974, column: 1, scope: !902)
!6132 = !DILocation(line: 989, column: 36, scope: !933)
!6133 = !DILocation(line: 989, column: 55, scope: !933)
!6134 = !DILocation(line: 989, column: 69, scope: !933)
!6135 = !DILocation(line: 989, column: 83, scope: !933)
!6136 = !DILocation(line: 989, column: 99, scope: !933)
!6137 = !DILocation(line: 992, column: 5, scope: !933)
!6138 = !DILocation(line: 992, column: 18, scope: !933)
!6139 = !DILocation(line: 993, column: 5, scope: !933)
!6140 = !DILocation(line: 993, column: 16, scope: !933)
!6141 = !DILocation(line: 994, column: 5, scope: !933)
!6142 = !DILocation(line: 994, column: 12, scope: !933)
!6143 = !DILocation(line: 994, column: 20, scope: !933)
!6144 = !DILocation(line: 995, column: 5, scope: !933)
!6145 = !DILocation(line: 995, column: 15, scope: !933)
!6146 = !DILocation(line: 997, column: 35, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !933, file: !361, line: 997, column: 9)
!6148 = !DILocation(line: 997, column: 45, scope: !6147)
!6149 = !DILocation(line: 997, column: 50, scope: !6147)
!6150 = !DILocation(line: 997, column: 10, scope: !6147)
!6151 = !DILocation(line: 997, column: 9, scope: !933)
!6152 = !DILocation(line: 998, column: 9, scope: !6147)
!6153 = !DILocation(line: 1000, column: 31, scope: !933)
!6154 = !DILocation(line: 1000, column: 23, scope: !933)
!6155 = !DILocation(line: 1000, column: 14, scope: !933)
!6156 = !DILocation(line: 1000, column: 12, scope: !933)
!6157 = !DILocation(line: 1001, column: 31, scope: !933)
!6158 = !DILocation(line: 1001, column: 23, scope: !933)
!6159 = !DILocation(line: 1001, column: 14, scope: !933)
!6160 = !DILocation(line: 1001, column: 12, scope: !933)
!6161 = !DILocation(line: 1003, column: 9, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !933, file: !361, line: 1003, column: 9)
!6163 = !DILocation(line: 1003, column: 19, scope: !6162)
!6164 = !DILocation(line: 1003, column: 23, scope: !6162)
!6165 = !DILocation(line: 1003, column: 9, scope: !933)
!6166 = !DILocation(line: 1004, column: 25, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6162, file: !361, line: 1003, column: 60)
!6168 = !DILocation(line: 1004, column: 9, scope: !6167)
!6169 = !DILocation(line: 1006, column: 9, scope: !6167)
!6170 = !DILocation(line: 1009, column: 48, scope: !933)
!6171 = !DILocation(line: 1009, column: 58, scope: !933)
!6172 = !DILocation(line: 1009, column: 61, scope: !933)
!6173 = !DILocation(line: 1009, column: 10, scope: !933)
!6174 = !DILocation(line: 1009, column: 8, scope: !933)
!6175 = !DILocation(line: 1010, column: 9, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !933, file: !361, line: 1010, column: 9)
!6177 = !DILocation(line: 1010, column: 12, scope: !6176)
!6178 = !DILocation(line: 1010, column: 9, scope: !933)
!6179 = !DILocation(line: 1011, column: 9, scope: !6176)
!6180 = !DILocation(line: 1012, column: 43, scope: !933)
!6181 = !DILocation(line: 1012, column: 26, scope: !933)
!6182 = !DILocation(line: 1012, column: 9, scope: !933)
!6183 = !DILocation(line: 1014, column: 12, scope: !948)
!6184 = !DILocation(line: 1014, column: 10, scope: !948)
!6185 = !DILocation(line: 1014, column: 17, scope: !6186)
!6186 = !DILexicalBlockFile(scope: !6187, file: !361, discriminator: 2)
!6187 = !DILexicalBlockFile(scope: !947, file: !361, discriminator: 1)
!6188 = !DILocation(line: 1014, column: 21, scope: !947)
!6189 = !DILocation(line: 1014, column: 31, scope: !947)
!6190 = !DILocation(line: 1014, column: 19, scope: !947)
!6191 = !DILocation(line: 1014, column: 5, scope: !948)
!6192 = !DILocation(line: 1015, column: 9, scope: !946)
!6193 = !DILocation(line: 1015, column: 16, scope: !946)
!6194 = !DILocation(line: 1015, column: 25, scope: !946)
!6195 = !DILocation(line: 1015, column: 31, scope: !946)
!6196 = !DILocation(line: 1015, column: 24, scope: !946)
!6197 = !DILocation(line: 1015, column: 82, scope: !6198)
!6198 = !DILexicalBlockFile(scope: !946, file: !361, discriminator: 1)
!6199 = !DILocation(line: 1015, column: 92, scope: !946)
!6200 = !DILocation(line: 1015, column: 104, scope: !946)
!6201 = !DILocation(line: 1015, column: 99, scope: !946)
!6202 = !DILocation(line: 1015, column: 45, scope: !946)
!6203 = !DILocation(line: 1015, column: 39, scope: !946)
!6204 = !DILocation(line: 1015, column: 114, scope: !6205)
!6205 = !DILexicalBlockFile(scope: !946, file: !361, discriminator: 2)
!6206 = !DILocation(line: 1015, column: 120, scope: !946)
!6207 = !DILocation(line: 1015, column: 113, scope: !946)
!6208 = !DILocation(line: 1015, column: 165, scope: !6209)
!6209 = !DILexicalBlockFile(scope: !946, file: !361, discriminator: 4)
!6210 = !DILocation(line: 1015, column: 175, scope: !946)
!6211 = !DILocation(line: 1015, column: 187, scope: !946)
!6212 = !DILocation(line: 1015, column: 182, scope: !946)
!6213 = !DILocation(line: 1015, column: 135, scope: !946)
!6214 = !DILocation(line: 1015, column: 134, scope: !946)
!6215 = !DILocation(line: 1015, column: 128, scope: !946)
!6216 = !DILocation(line: 1015, column: 197, scope: !6217)
!6217 = !DILexicalBlockFile(scope: !946, file: !361, discriminator: 5)
!6218 = !DILocation(line: 1015, column: 203, scope: !946)
!6219 = !DILocation(line: 1015, column: 196, scope: !946)
!6220 = !DILocation(line: 1015, column: 238, scope: !6221)
!6221 = !DILexicalBlockFile(scope: !946, file: !361, discriminator: 7)
!6222 = !DILocation(line: 1015, column: 248, scope: !946)
!6223 = !DILocation(line: 1015, column: 258, scope: !946)
!6224 = !DILocation(line: 1015, column: 254, scope: !946)
!6225 = !DILocation(line: 1015, column: 218, scope: !946)
!6226 = !DILocation(line: 1015, column: 289, scope: !946)
!6227 = !DILocation(line: 1015, column: 299, scope: !946)
!6228 = !DILocation(line: 1015, column: 309, scope: !946)
!6229 = !DILocation(line: 1015, column: 305, scope: !946)
!6230 = !DILocation(line: 1015, column: 269, scope: !946)
!6231 = !DILocation(line: 1015, column: 317, scope: !946)
!6232 = !DILocation(line: 1015, column: 266, scope: !946)
!6233 = !DILocation(line: 1015, column: 344, scope: !946)
!6234 = !DILocation(line: 1015, column: 354, scope: !946)
!6235 = !DILocation(line: 1015, column: 364, scope: !946)
!6236 = !DILocation(line: 1015, column: 360, scope: !946)
!6237 = !DILocation(line: 1015, column: 326, scope: !946)
!6238 = !DILocation(line: 1015, column: 372, scope: !946)
!6239 = !DILocation(line: 1015, column: 323, scope: !946)
!6240 = !DILocation(line: 1015, column: 422, scope: !6241)
!6241 = !DILexicalBlockFile(scope: !946, file: !361, discriminator: 8)
!6242 = !DILocation(line: 1015, column: 432, scope: !946)
!6243 = !DILocation(line: 1015, column: 444, scope: !946)
!6244 = !DILocation(line: 1015, column: 439, scope: !946)
!6245 = !DILocation(line: 1015, column: 390, scope: !946)
!6246 = !DILocation(line: 1015, column: 389, scope: !946)
!6247 = !DILocation(line: 1015, column: 113, scope: !6248)
!6248 = !DILexicalBlockFile(scope: !6249, file: !361, discriminator: 10)
!6249 = !DILexicalBlockFile(scope: !946, file: !361, discriminator: 9)
!6250 = !DILocation(line: 1015, column: 24, scope: !6251)
!6251 = !DILexicalBlockFile(scope: !6252, file: !361, discriminator: 11)
!6252 = !DILexicalBlockFile(scope: !946, file: !361, discriminator: 6)
!6253 = !DILocation(line: 1015, column: 22, scope: !6254)
!6254 = !DILexicalBlockFile(scope: !6255, file: !361, discriminator: 12)
!6255 = !DILexicalBlockFile(scope: !946, file: !361, discriminator: 3)
!6256 = !DILocation(line: 1016, column: 9, scope: !946)
!6257 = !DILocation(line: 1016, column: 13, scope: !946)
!6258 = !DILocation(line: 1016, column: 38, scope: !946)
!6259 = !DILocation(line: 1016, column: 42, scope: !946)
!6260 = !DILocation(line: 1016, column: 41, scope: !946)
!6261 = !DILocation(line: 1016, column: 51, scope: !946)
!6262 = !DILocation(line: 1016, column: 59, scope: !946)
!6263 = !DILocation(line: 1016, column: 31, scope: !946)
!6264 = !DILocation(line: 1016, column: 25, scope: !946)
!6265 = !DILocation(line: 1016, column: 20, scope: !946)
!6266 = !DILocation(line: 1017, column: 9, scope: !946)
!6267 = !DILocation(line: 1017, column: 13, scope: !946)
!6268 = !DILocation(line: 1017, column: 38, scope: !946)
!6269 = !DILocation(line: 1017, column: 42, scope: !946)
!6270 = !DILocation(line: 1017, column: 41, scope: !946)
!6271 = !DILocation(line: 1017, column: 51, scope: !946)
!6272 = !DILocation(line: 1017, column: 59, scope: !946)
!6273 = !DILocation(line: 1017, column: 31, scope: !946)
!6274 = !DILocation(line: 1017, column: 25, scope: !946)
!6275 = !DILocation(line: 1017, column: 20, scope: !946)
!6276 = !DILocation(line: 1018, column: 9, scope: !946)
!6277 = !DILocation(line: 1018, column: 18, scope: !6278)
!6278 = !DILexicalBlockFile(scope: !6279, file: !361, discriminator: 1)
!6279 = distinct !DILexicalBlock(scope: !6280, file: !361, line: 1018, column: 18)
!6280 = distinct !DILexicalBlock(scope: !946, file: !361, line: 1018, column: 12)
!6281 = !DILocation(line: 1018, column: 24, scope: !6279)
!6282 = !DILocation(line: 1018, column: 18, scope: !6280)
!6283 = !DILocation(line: 1018, column: 30, scope: !6284)
!6284 = !DILexicalBlockFile(scope: !6279, file: !361, discriminator: 2)
!6285 = !DILocation(line: 1018, column: 110, scope: !6286)
!6286 = !DILexicalBlockFile(scope: !6287, file: !361, discriminator: 4)
!6287 = distinct !DILexicalBlock(scope: !6279, file: !361, line: 1018, column: 33)
!6288 = !DILocation(line: 1018, column: 94, scope: !6287)
!6289 = !DILocation(line: 1018, column: 72, scope: !6287)
!6290 = !DILocation(line: 1018, column: 84, scope: !6287)
!6291 = !DILocation(line: 1018, column: 85, scope: !6287)
!6292 = !DILocation(line: 1018, column: 79, scope: !6287)
!6293 = !DILocation(line: 1018, column: 92, scope: !6287)
!6294 = !DILocation(line: 1018, column: 119, scope: !6287)
!6295 = !DILocation(line: 1018, column: 119, scope: !6296)
!6296 = !DILexicalBlockFile(scope: !6287, file: !361, discriminator: 5)
!6297 = !DILocation(line: 1018, column: 119, scope: !6298)
!6298 = !DILexicalBlockFile(scope: !6287, file: !361, discriminator: 6)
!6299 = !DILocation(line: 1018, column: 141, scope: !6300)
!6300 = !DILexicalBlockFile(scope: !6301, file: !361, discriminator: 3)
!6301 = distinct !DILexicalBlock(scope: !6279, file: !361, line: 1018, column: 141)
!6302 = !DILocation(line: 1018, column: 147, scope: !6301)
!6303 = !DILocation(line: 1018, column: 141, scope: !6279)
!6304 = !DILocation(line: 1018, column: 153, scope: !6305)
!6305 = !DILexicalBlockFile(scope: !6301, file: !361, discriminator: 8)
!6306 = !DILocation(line: 1018, column: 221, scope: !6307)
!6307 = !DILexicalBlockFile(scope: !6308, file: !361, discriminator: 10)
!6308 = distinct !DILexicalBlock(scope: !6301, file: !361, line: 1018, column: 156)
!6309 = !DILocation(line: 1018, column: 211, scope: !6308)
!6310 = !DILocation(line: 1018, column: 189, scope: !6308)
!6311 = !DILocation(line: 1018, column: 201, scope: !6308)
!6312 = !DILocation(line: 1018, column: 202, scope: !6308)
!6313 = !DILocation(line: 1018, column: 196, scope: !6308)
!6314 = !DILocation(line: 1018, column: 159, scope: !6308)
!6315 = !DILocation(line: 1018, column: 209, scope: !6308)
!6316 = !DILocation(line: 1018, column: 230, scope: !6308)
!6317 = !DILocation(line: 1018, column: 230, scope: !6318)
!6318 = !DILexicalBlockFile(scope: !6308, file: !361, discriminator: 11)
!6319 = !DILocation(line: 1018, column: 230, scope: !6320)
!6320 = !DILexicalBlockFile(scope: !6308, file: !361, discriminator: 12)
!6321 = !DILocation(line: 1018, column: 252, scope: !6322)
!6322 = !DILexicalBlockFile(scope: !6323, file: !361, discriminator: 9)
!6323 = distinct !DILexicalBlock(scope: !6301, file: !361, line: 1018, column: 252)
!6324 = !DILocation(line: 1018, column: 258, scope: !6323)
!6325 = !DILocation(line: 1018, column: 252, scope: !6301)
!6326 = !DILocation(line: 1018, column: 264, scope: !6327)
!6327 = !DILexicalBlockFile(scope: !6323, file: !361, discriminator: 13)
!6328 = !DILocation(line: 1018, column: 318, scope: !6329)
!6329 = !DILexicalBlockFile(scope: !6330, file: !361, discriminator: 15)
!6330 = distinct !DILexicalBlock(scope: !6323, file: !361, line: 1018, column: 267)
!6331 = !DILocation(line: 1018, column: 311, scope: !6330)
!6332 = !DILocation(line: 1018, column: 289, scope: !6330)
!6333 = !DILocation(line: 1018, column: 299, scope: !6330)
!6334 = !DILocation(line: 1018, column: 300, scope: !6330)
!6335 = !DILocation(line: 1018, column: 295, scope: !6330)
!6336 = !DILocation(line: 1018, column: 269, scope: !6330)
!6337 = !DILocation(line: 1018, column: 309, scope: !6330)
!6338 = !DILocation(line: 1018, column: 375, scope: !6330)
!6339 = !DILocation(line: 1018, column: 382, scope: !6330)
!6340 = !DILocation(line: 1018, column: 368, scope: !6330)
!6341 = !DILocation(line: 1018, column: 346, scope: !6330)
!6342 = !DILocation(line: 1018, column: 356, scope: !6330)
!6343 = !DILocation(line: 1018, column: 357, scope: !6330)
!6344 = !DILocation(line: 1018, column: 352, scope: !6330)
!6345 = !DILocation(line: 1018, column: 326, scope: !6330)
!6346 = !DILocation(line: 1018, column: 366, scope: !6330)
!6347 = !DILocation(line: 1018, column: 435, scope: !6330)
!6348 = !DILocation(line: 1018, column: 442, scope: !6330)
!6349 = !DILocation(line: 1018, column: 428, scope: !6330)
!6350 = !DILocation(line: 1018, column: 406, scope: !6330)
!6351 = !DILocation(line: 1018, column: 416, scope: !6330)
!6352 = !DILocation(line: 1018, column: 417, scope: !6330)
!6353 = !DILocation(line: 1018, column: 412, scope: !6330)
!6354 = !DILocation(line: 1018, column: 388, scope: !6330)
!6355 = !DILocation(line: 1018, column: 426, scope: !6330)
!6356 = !DILocation(line: 1018, column: 449, scope: !6330)
!6357 = !DILocation(line: 1018, column: 449, scope: !6358)
!6358 = !DILexicalBlockFile(scope: !6330, file: !361, discriminator: 16)
!6359 = !DILocation(line: 1018, column: 449, scope: !6360)
!6360 = !DILexicalBlockFile(scope: !6330, file: !361, discriminator: 17)
!6361 = !DILocation(line: 1018, column: 467, scope: !6362)
!6362 = !DILexicalBlockFile(scope: !6323, file: !361, discriminator: 14)
!6363 = !DILocation(line: 1018, column: 539, scope: !6364)
!6364 = !DILexicalBlockFile(scope: !6365, file: !361, discriminator: 18)
!6365 = distinct !DILexicalBlock(scope: !6323, file: !361, line: 1018, column: 470)
!6366 = !DILocation(line: 1018, column: 505, scope: !6365)
!6367 = !DILocation(line: 1018, column: 517, scope: !6365)
!6368 = !DILocation(line: 1018, column: 518, scope: !6365)
!6369 = !DILocation(line: 1018, column: 512, scope: !6365)
!6370 = !DILocation(line: 1018, column: 473, scope: !6365)
!6371 = !DILocation(line: 1018, column: 525, scope: !6365)
!6372 = !DILocation(line: 1018, column: 548, scope: !6365)
!6373 = !DILocation(line: 1018, column: 548, scope: !6374)
!6374 = !DILexicalBlockFile(scope: !6365, file: !361, discriminator: 19)
!6375 = !DILocation(line: 1018, column: 561, scope: !6376)
!6376 = !DILexicalBlockFile(scope: !6280, file: !361, discriminator: 7)
!6377 = !DILocation(line: 1018, column: 561, scope: !6378)
!6378 = !DILexicalBlockFile(scope: !6280, file: !361, discriminator: 20)
!6379 = !DILocation(line: 1019, column: 9, scope: !946)
!6380 = !DILocation(line: 1019, column: 18, scope: !6381)
!6381 = !DILexicalBlockFile(scope: !6382, file: !361, discriminator: 1)
!6382 = distinct !DILexicalBlock(scope: !6383, file: !361, line: 1019, column: 18)
!6383 = distinct !DILexicalBlock(scope: !946, file: !361, line: 1019, column: 12)
!6384 = !DILocation(line: 1019, column: 24, scope: !6382)
!6385 = !DILocation(line: 1019, column: 18, scope: !6383)
!6386 = !DILocation(line: 1019, column: 30, scope: !6387)
!6387 = !DILexicalBlockFile(scope: !6382, file: !361, discriminator: 2)
!6388 = !DILocation(line: 1019, column: 118, scope: !6389)
!6389 = !DILexicalBlockFile(scope: !6390, file: !361, discriminator: 4)
!6390 = distinct !DILexicalBlock(scope: !6382, file: !361, line: 1019, column: 33)
!6391 = !DILocation(line: 1019, column: 102, scope: !6390)
!6392 = !DILocation(line: 1019, column: 72, scope: !6390)
!6393 = !DILocation(line: 1019, column: 84, scope: !6390)
!6394 = !DILocation(line: 1019, column: 85, scope: !6390)
!6395 = !DILocation(line: 1019, column: 90, scope: !6390)
!6396 = !DILocation(line: 1019, column: 88, scope: !6390)
!6397 = !DILocation(line: 1019, column: 79, scope: !6390)
!6398 = !DILocation(line: 1019, column: 100, scope: !6390)
!6399 = !DILocation(line: 1019, column: 127, scope: !6390)
!6400 = !DILocation(line: 1019, column: 127, scope: !6401)
!6401 = !DILexicalBlockFile(scope: !6390, file: !361, discriminator: 5)
!6402 = !DILocation(line: 1019, column: 127, scope: !6403)
!6403 = !DILexicalBlockFile(scope: !6390, file: !361, discriminator: 6)
!6404 = !DILocation(line: 1019, column: 149, scope: !6405)
!6405 = !DILexicalBlockFile(scope: !6406, file: !361, discriminator: 3)
!6406 = distinct !DILexicalBlock(scope: !6382, file: !361, line: 1019, column: 149)
!6407 = !DILocation(line: 1019, column: 155, scope: !6406)
!6408 = !DILocation(line: 1019, column: 149, scope: !6382)
!6409 = !DILocation(line: 1019, column: 161, scope: !6410)
!6410 = !DILexicalBlockFile(scope: !6406, file: !361, discriminator: 8)
!6411 = !DILocation(line: 1019, column: 237, scope: !6412)
!6412 = !DILexicalBlockFile(scope: !6413, file: !361, discriminator: 10)
!6413 = distinct !DILexicalBlock(scope: !6406, file: !361, line: 1019, column: 164)
!6414 = !DILocation(line: 1019, column: 227, scope: !6413)
!6415 = !DILocation(line: 1019, column: 197, scope: !6413)
!6416 = !DILocation(line: 1019, column: 209, scope: !6413)
!6417 = !DILocation(line: 1019, column: 210, scope: !6413)
!6418 = !DILocation(line: 1019, column: 215, scope: !6413)
!6419 = !DILocation(line: 1019, column: 213, scope: !6413)
!6420 = !DILocation(line: 1019, column: 204, scope: !6413)
!6421 = !DILocation(line: 1019, column: 167, scope: !6413)
!6422 = !DILocation(line: 1019, column: 225, scope: !6413)
!6423 = !DILocation(line: 1019, column: 246, scope: !6413)
!6424 = !DILocation(line: 1019, column: 246, scope: !6425)
!6425 = !DILexicalBlockFile(scope: !6413, file: !361, discriminator: 11)
!6426 = !DILocation(line: 1019, column: 246, scope: !6427)
!6427 = !DILexicalBlockFile(scope: !6413, file: !361, discriminator: 12)
!6428 = !DILocation(line: 1019, column: 268, scope: !6429)
!6429 = !DILexicalBlockFile(scope: !6430, file: !361, discriminator: 9)
!6430 = distinct !DILexicalBlock(scope: !6406, file: !361, line: 1019, column: 268)
!6431 = !DILocation(line: 1019, column: 274, scope: !6430)
!6432 = !DILocation(line: 1019, column: 268, scope: !6406)
!6433 = !DILocation(line: 1019, column: 280, scope: !6434)
!6434 = !DILexicalBlockFile(scope: !6430, file: !361, discriminator: 13)
!6435 = !DILocation(line: 1019, column: 342, scope: !6436)
!6436 = !DILexicalBlockFile(scope: !6437, file: !361, discriminator: 15)
!6437 = distinct !DILexicalBlock(scope: !6430, file: !361, line: 1019, column: 283)
!6438 = !DILocation(line: 1019, column: 335, scope: !6437)
!6439 = !DILocation(line: 1019, column: 305, scope: !6437)
!6440 = !DILocation(line: 1019, column: 315, scope: !6437)
!6441 = !DILocation(line: 1019, column: 316, scope: !6437)
!6442 = !DILocation(line: 1019, column: 321, scope: !6437)
!6443 = !DILocation(line: 1019, column: 319, scope: !6437)
!6444 = !DILocation(line: 1019, column: 311, scope: !6437)
!6445 = !DILocation(line: 1019, column: 285, scope: !6437)
!6446 = !DILocation(line: 1019, column: 333, scope: !6437)
!6447 = !DILocation(line: 1019, column: 407, scope: !6437)
!6448 = !DILocation(line: 1019, column: 414, scope: !6437)
!6449 = !DILocation(line: 1019, column: 400, scope: !6437)
!6450 = !DILocation(line: 1019, column: 370, scope: !6437)
!6451 = !DILocation(line: 1019, column: 380, scope: !6437)
!6452 = !DILocation(line: 1019, column: 381, scope: !6437)
!6453 = !DILocation(line: 1019, column: 386, scope: !6437)
!6454 = !DILocation(line: 1019, column: 384, scope: !6437)
!6455 = !DILocation(line: 1019, column: 376, scope: !6437)
!6456 = !DILocation(line: 1019, column: 350, scope: !6437)
!6457 = !DILocation(line: 1019, column: 398, scope: !6437)
!6458 = !DILocation(line: 1019, column: 475, scope: !6437)
!6459 = !DILocation(line: 1019, column: 482, scope: !6437)
!6460 = !DILocation(line: 1019, column: 468, scope: !6437)
!6461 = !DILocation(line: 1019, column: 438, scope: !6437)
!6462 = !DILocation(line: 1019, column: 448, scope: !6437)
!6463 = !DILocation(line: 1019, column: 449, scope: !6437)
!6464 = !DILocation(line: 1019, column: 454, scope: !6437)
!6465 = !DILocation(line: 1019, column: 452, scope: !6437)
!6466 = !DILocation(line: 1019, column: 444, scope: !6437)
!6467 = !DILocation(line: 1019, column: 420, scope: !6437)
!6468 = !DILocation(line: 1019, column: 466, scope: !6437)
!6469 = !DILocation(line: 1019, column: 489, scope: !6437)
!6470 = !DILocation(line: 1019, column: 489, scope: !6471)
!6471 = !DILexicalBlockFile(scope: !6437, file: !361, discriminator: 16)
!6472 = !DILocation(line: 1019, column: 489, scope: !6473)
!6473 = !DILexicalBlockFile(scope: !6437, file: !361, discriminator: 17)
!6474 = !DILocation(line: 1019, column: 507, scope: !6475)
!6475 = !DILexicalBlockFile(scope: !6430, file: !361, discriminator: 14)
!6476 = !DILocation(line: 1019, column: 587, scope: !6477)
!6477 = !DILexicalBlockFile(scope: !6478, file: !361, discriminator: 18)
!6478 = distinct !DILexicalBlock(scope: !6430, file: !361, line: 1019, column: 510)
!6479 = !DILocation(line: 1019, column: 545, scope: !6478)
!6480 = !DILocation(line: 1019, column: 557, scope: !6478)
!6481 = !DILocation(line: 1019, column: 558, scope: !6478)
!6482 = !DILocation(line: 1019, column: 563, scope: !6478)
!6483 = !DILocation(line: 1019, column: 561, scope: !6478)
!6484 = !DILocation(line: 1019, column: 552, scope: !6478)
!6485 = !DILocation(line: 1019, column: 513, scope: !6478)
!6486 = !DILocation(line: 1019, column: 573, scope: !6478)
!6487 = !DILocation(line: 1019, column: 596, scope: !6478)
!6488 = !DILocation(line: 1019, column: 596, scope: !6489)
!6489 = !DILexicalBlockFile(scope: !6478, file: !361, discriminator: 19)
!6490 = !DILocation(line: 1019, column: 609, scope: !6491)
!6491 = !DILexicalBlockFile(scope: !6383, file: !361, discriminator: 7)
!6492 = !DILocation(line: 1019, column: 609, scope: !6493)
!6493 = !DILexicalBlockFile(scope: !6383, file: !361, discriminator: 20)
!6494 = !DILocation(line: 1020, column: 5, scope: !947)
!6495 = !DILocation(line: 1020, column: 5, scope: !946)
!6496 = !DILocation(line: 1014, column: 41, scope: !947)
!6497 = !DILocation(line: 1014, column: 38, scope: !947)
!6498 = !DILocation(line: 1014, column: 5, scope: !947)
!6499 = !DILocation(line: 1021, column: 12, scope: !933)
!6500 = !DILocation(line: 1021, column: 5, scope: !933)
!6501 = !DILocation(line: 1022, column: 1, scope: !933)
!6502 = !DILocation(line: 411, column: 37, scope: !959)
!6503 = !DILocation(line: 411, column: 56, scope: !959)
!6504 = !DILocation(line: 411, column: 70, scope: !959)
!6505 = !DILocation(line: 411, column: 88, scope: !959)
!6506 = !DILocation(line: 414, column: 5, scope: !959)
!6507 = !DILocation(line: 414, column: 9, scope: !959)
!6508 = !DILocation(line: 416, column: 35, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !959, file: !361, line: 416, column: 9)
!6510 = !DILocation(line: 416, column: 45, scope: !6509)
!6511 = !DILocation(line: 416, column: 50, scope: !6509)
!6512 = !DILocation(line: 416, column: 10, scope: !6509)
!6513 = !DILocation(line: 416, column: 9, scope: !959)
!6514 = !DILocation(line: 417, column: 9, scope: !6509)
!6515 = !DILocation(line: 418, column: 9, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !959, file: !361, line: 418, column: 9)
!6517 = !DILocation(line: 418, column: 15, scope: !6516)
!6518 = !DILocation(line: 418, column: 19, scope: !6516)
!6519 = !DILocation(line: 418, column: 22, scope: !6520)
!6520 = !DILexicalBlockFile(scope: !6516, file: !361, discriminator: 1)
!6521 = !DILocation(line: 418, column: 31, scope: !6516)
!6522 = !DILocation(line: 418, column: 41, scope: !6516)
!6523 = !DILocation(line: 418, column: 45, scope: !6516)
!6524 = !DILocation(line: 418, column: 44, scope: !6516)
!6525 = !DILocation(line: 418, column: 28, scope: !6516)
!6526 = !DILocation(line: 418, column: 9, scope: !959)
!6527 = !DILocation(line: 419, column: 25, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6516, file: !361, line: 418, column: 52)
!6529 = !DILocation(line: 419, column: 9, scope: !6528)
!6530 = !DILocation(line: 420, column: 9, scope: !6528)
!6531 = !DILocation(line: 422, column: 14, scope: !959)
!6532 = !DILocation(line: 422, column: 20, scope: !959)
!6533 = !DILocation(line: 422, column: 13, scope: !959)
!6534 = !DILocation(line: 422, column: 71, scope: !6535)
!6535 = !DILexicalBlockFile(scope: !959, file: !361, discriminator: 1)
!6536 = !DILocation(line: 422, column: 81, scope: !959)
!6537 = !DILocation(line: 422, column: 93, scope: !959)
!6538 = !DILocation(line: 422, column: 99, scope: !959)
!6539 = !DILocation(line: 422, column: 98, scope: !959)
!6540 = !DILocation(line: 422, column: 88, scope: !959)
!6541 = !DILocation(line: 422, column: 34, scope: !959)
!6542 = !DILocation(line: 422, column: 28, scope: !959)
!6543 = !DILocation(line: 422, column: 113, scope: !6544)
!6544 = !DILexicalBlockFile(scope: !959, file: !361, discriminator: 2)
!6545 = !DILocation(line: 422, column: 119, scope: !959)
!6546 = !DILocation(line: 422, column: 112, scope: !959)
!6547 = !DILocation(line: 422, column: 164, scope: !6548)
!6548 = !DILexicalBlockFile(scope: !959, file: !361, discriminator: 4)
!6549 = !DILocation(line: 422, column: 174, scope: !959)
!6550 = !DILocation(line: 422, column: 186, scope: !959)
!6551 = !DILocation(line: 422, column: 192, scope: !959)
!6552 = !DILocation(line: 422, column: 191, scope: !959)
!6553 = !DILocation(line: 422, column: 181, scope: !959)
!6554 = !DILocation(line: 422, column: 134, scope: !959)
!6555 = !DILocation(line: 422, column: 133, scope: !959)
!6556 = !DILocation(line: 422, column: 127, scope: !959)
!6557 = !DILocation(line: 422, column: 206, scope: !6558)
!6558 = !DILexicalBlockFile(scope: !959, file: !361, discriminator: 5)
!6559 = !DILocation(line: 422, column: 212, scope: !959)
!6560 = !DILocation(line: 422, column: 205, scope: !959)
!6561 = !DILocation(line: 422, column: 247, scope: !6562)
!6562 = !DILexicalBlockFile(scope: !959, file: !361, discriminator: 7)
!6563 = !DILocation(line: 422, column: 257, scope: !959)
!6564 = !DILocation(line: 422, column: 267, scope: !959)
!6565 = !DILocation(line: 422, column: 273, scope: !959)
!6566 = !DILocation(line: 422, column: 272, scope: !959)
!6567 = !DILocation(line: 422, column: 263, scope: !959)
!6568 = !DILocation(line: 422, column: 227, scope: !959)
!6569 = !DILocation(line: 422, column: 308, scope: !959)
!6570 = !DILocation(line: 422, column: 318, scope: !959)
!6571 = !DILocation(line: 422, column: 328, scope: !959)
!6572 = !DILocation(line: 422, column: 334, scope: !959)
!6573 = !DILocation(line: 422, column: 333, scope: !959)
!6574 = !DILocation(line: 422, column: 324, scope: !959)
!6575 = !DILocation(line: 422, column: 288, scope: !959)
!6576 = !DILocation(line: 422, column: 346, scope: !959)
!6577 = !DILocation(line: 422, column: 285, scope: !959)
!6578 = !DILocation(line: 422, column: 373, scope: !959)
!6579 = !DILocation(line: 422, column: 383, scope: !959)
!6580 = !DILocation(line: 422, column: 393, scope: !959)
!6581 = !DILocation(line: 422, column: 399, scope: !959)
!6582 = !DILocation(line: 422, column: 398, scope: !959)
!6583 = !DILocation(line: 422, column: 389, scope: !959)
!6584 = !DILocation(line: 422, column: 355, scope: !959)
!6585 = !DILocation(line: 422, column: 411, scope: !959)
!6586 = !DILocation(line: 422, column: 352, scope: !959)
!6587 = !DILocation(line: 422, column: 461, scope: !6588)
!6588 = !DILexicalBlockFile(scope: !959, file: !361, discriminator: 8)
!6589 = !DILocation(line: 422, column: 471, scope: !959)
!6590 = !DILocation(line: 422, column: 483, scope: !959)
!6591 = !DILocation(line: 422, column: 489, scope: !959)
!6592 = !DILocation(line: 422, column: 488, scope: !959)
!6593 = !DILocation(line: 422, column: 478, scope: !959)
!6594 = !DILocation(line: 422, column: 429, scope: !959)
!6595 = !DILocation(line: 422, column: 428, scope: !959)
!6596 = !DILocation(line: 422, column: 112, scope: !6597)
!6597 = !DILexicalBlockFile(scope: !6598, file: !361, discriminator: 10)
!6598 = !DILexicalBlockFile(scope: !959, file: !361, discriminator: 9)
!6599 = !DILocation(line: 422, column: 13, scope: !6600)
!6600 = !DILexicalBlockFile(scope: !6601, file: !361, discriminator: 11)
!6601 = !DILexicalBlockFile(scope: !959, file: !361, discriminator: 6)
!6602 = !DILocation(line: 422, column: 9, scope: !6603)
!6603 = !DILexicalBlockFile(scope: !6604, file: !361, discriminator: 12)
!6604 = !DILexicalBlockFile(scope: !959, file: !361, discriminator: 3)
!6605 = !DILocation(line: 423, column: 28, scope: !959)
!6606 = !DILocation(line: 423, column: 12, scope: !959)
!6607 = !DILocation(line: 423, column: 5, scope: !959)
!6608 = !DILocation(line: 424, column: 1, scope: !959)
!6609 = !DILocation(line: 1153, column: 35, scope: !975)
!6610 = !DILocation(line: 1153, column: 54, scope: !975)
!6611 = !DILocation(line: 1153, column: 68, scope: !975)
!6612 = !DILocation(line: 1156, column: 5, scope: !975)
!6613 = !DILocation(line: 1156, column: 20, scope: !975)
!6614 = !DILocation(line: 1157, column: 5, scope: !975)
!6615 = !DILocation(line: 1157, column: 16, scope: !975)
!6616 = !DILocation(line: 1158, column: 5, scope: !975)
!6617 = !DILocation(line: 1158, column: 15, scope: !975)
!6618 = !DILocation(line: 1160, column: 35, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !975, file: !361, line: 1160, column: 9)
!6620 = !DILocation(line: 1160, column: 45, scope: !6619)
!6621 = !DILocation(line: 1160, column: 50, scope: !6619)
!6622 = !DILocation(line: 1160, column: 10, scope: !6619)
!6623 = !DILocation(line: 1160, column: 9, scope: !975)
!6624 = !DILocation(line: 1161, column: 9, scope: !6619)
!6625 = !DILocation(line: 1163, column: 48, scope: !975)
!6626 = !DILocation(line: 1163, column: 58, scope: !975)
!6627 = !DILocation(line: 1163, column: 10, scope: !975)
!6628 = !DILocation(line: 1163, column: 8, scope: !975)
!6629 = !DILocation(line: 1164, column: 9, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !975, file: !361, line: 1164, column: 9)
!6631 = !DILocation(line: 1164, column: 12, scope: !6630)
!6632 = !DILocation(line: 1164, column: 9, scope: !975)
!6633 = !DILocation(line: 1165, column: 9, scope: !6630)
!6634 = !DILocation(line: 1166, column: 45, scope: !975)
!6635 = !DILocation(line: 1166, column: 28, scope: !975)
!6636 = !DILocation(line: 1166, column: 9, scope: !975)
!6637 = !DILocation(line: 1168, column: 12, scope: !986)
!6638 = !DILocation(line: 1168, column: 10, scope: !986)
!6639 = !DILocation(line: 1168, column: 17, scope: !6640)
!6640 = !DILexicalBlockFile(scope: !6641, file: !361, discriminator: 2)
!6641 = !DILexicalBlockFile(scope: !985, file: !361, discriminator: 1)
!6642 = !DILocation(line: 1168, column: 21, scope: !985)
!6643 = !DILocation(line: 1168, column: 31, scope: !985)
!6644 = !DILocation(line: 1168, column: 19, scope: !985)
!6645 = !DILocation(line: 1168, column: 5, scope: !986)
!6646 = !DILocation(line: 1169, column: 9, scope: !984)
!6647 = !DILocation(line: 1169, column: 13, scope: !984)
!6648 = !DILocation(line: 1169, column: 22, scope: !984)
!6649 = !DILocation(line: 1169, column: 28, scope: !984)
!6650 = !DILocation(line: 1169, column: 21, scope: !984)
!6651 = !DILocation(line: 1169, column: 79, scope: !6652)
!6652 = !DILexicalBlockFile(scope: !984, file: !361, discriminator: 1)
!6653 = !DILocation(line: 1169, column: 89, scope: !984)
!6654 = !DILocation(line: 1169, column: 101, scope: !984)
!6655 = !DILocation(line: 1169, column: 96, scope: !984)
!6656 = !DILocation(line: 1169, column: 42, scope: !984)
!6657 = !DILocation(line: 1169, column: 36, scope: !984)
!6658 = !DILocation(line: 1169, column: 111, scope: !6659)
!6659 = !DILexicalBlockFile(scope: !984, file: !361, discriminator: 2)
!6660 = !DILocation(line: 1169, column: 117, scope: !984)
!6661 = !DILocation(line: 1169, column: 110, scope: !984)
!6662 = !DILocation(line: 1169, column: 162, scope: !6663)
!6663 = !DILexicalBlockFile(scope: !984, file: !361, discriminator: 4)
!6664 = !DILocation(line: 1169, column: 172, scope: !984)
!6665 = !DILocation(line: 1169, column: 184, scope: !984)
!6666 = !DILocation(line: 1169, column: 179, scope: !984)
!6667 = !DILocation(line: 1169, column: 132, scope: !984)
!6668 = !DILocation(line: 1169, column: 131, scope: !984)
!6669 = !DILocation(line: 1169, column: 125, scope: !984)
!6670 = !DILocation(line: 1169, column: 194, scope: !6671)
!6671 = !DILexicalBlockFile(scope: !984, file: !361, discriminator: 5)
!6672 = !DILocation(line: 1169, column: 200, scope: !984)
!6673 = !DILocation(line: 1169, column: 193, scope: !984)
!6674 = !DILocation(line: 1169, column: 235, scope: !6675)
!6675 = !DILexicalBlockFile(scope: !984, file: !361, discriminator: 7)
!6676 = !DILocation(line: 1169, column: 245, scope: !984)
!6677 = !DILocation(line: 1169, column: 255, scope: !984)
!6678 = !DILocation(line: 1169, column: 251, scope: !984)
!6679 = !DILocation(line: 1169, column: 215, scope: !984)
!6680 = !DILocation(line: 1169, column: 286, scope: !984)
!6681 = !DILocation(line: 1169, column: 296, scope: !984)
!6682 = !DILocation(line: 1169, column: 306, scope: !984)
!6683 = !DILocation(line: 1169, column: 302, scope: !984)
!6684 = !DILocation(line: 1169, column: 266, scope: !984)
!6685 = !DILocation(line: 1169, column: 314, scope: !984)
!6686 = !DILocation(line: 1169, column: 263, scope: !984)
!6687 = !DILocation(line: 1169, column: 341, scope: !984)
!6688 = !DILocation(line: 1169, column: 351, scope: !984)
!6689 = !DILocation(line: 1169, column: 361, scope: !984)
!6690 = !DILocation(line: 1169, column: 357, scope: !984)
!6691 = !DILocation(line: 1169, column: 323, scope: !984)
!6692 = !DILocation(line: 1169, column: 369, scope: !984)
!6693 = !DILocation(line: 1169, column: 320, scope: !984)
!6694 = !DILocation(line: 1169, column: 419, scope: !6695)
!6695 = !DILexicalBlockFile(scope: !984, file: !361, discriminator: 8)
!6696 = !DILocation(line: 1169, column: 429, scope: !984)
!6697 = !DILocation(line: 1169, column: 441, scope: !984)
!6698 = !DILocation(line: 1169, column: 436, scope: !984)
!6699 = !DILocation(line: 1169, column: 387, scope: !984)
!6700 = !DILocation(line: 1169, column: 386, scope: !984)
!6701 = !DILocation(line: 1169, column: 110, scope: !6702)
!6702 = !DILexicalBlockFile(scope: !6703, file: !361, discriminator: 10)
!6703 = !DILexicalBlockFile(scope: !984, file: !361, discriminator: 9)
!6704 = !DILocation(line: 1169, column: 21, scope: !6705)
!6705 = !DILexicalBlockFile(scope: !6706, file: !361, discriminator: 11)
!6706 = !DILexicalBlockFile(scope: !984, file: !361, discriminator: 6)
!6707 = !DILocation(line: 1169, column: 13, scope: !6708)
!6708 = !DILexicalBlockFile(scope: !6709, file: !361, discriminator: 12)
!6709 = !DILexicalBlockFile(scope: !984, file: !361, discriminator: 3)
!6710 = !DILocation(line: 1170, column: 9, scope: !984)
!6711 = !DILocation(line: 1170, column: 18, scope: !6712)
!6712 = !DILexicalBlockFile(scope: !6713, file: !361, discriminator: 1)
!6713 = distinct !DILexicalBlock(scope: !6714, file: !361, line: 1170, column: 18)
!6714 = distinct !DILexicalBlock(scope: !984, file: !361, line: 1170, column: 12)
!6715 = !DILocation(line: 1170, column: 24, scope: !6713)
!6716 = !DILocation(line: 1170, column: 18, scope: !6714)
!6717 = !DILocation(line: 1170, column: 30, scope: !6718)
!6718 = !DILexicalBlockFile(scope: !6713, file: !361, discriminator: 2)
!6719 = !DILocation(line: 1170, column: 132, scope: !6720)
!6720 = !DILexicalBlockFile(scope: !6721, file: !361, discriminator: 4)
!6721 = distinct !DILexicalBlock(scope: !6713, file: !361, line: 1170, column: 33)
!6722 = !DILocation(line: 1170, column: 116, scope: !6721)
!6723 = !DILocation(line: 1170, column: 72, scope: !6721)
!6724 = !DILocation(line: 1170, column: 84, scope: !6721)
!6725 = !DILocation(line: 1170, column: 94, scope: !6721)
!6726 = !DILocation(line: 1170, column: 100, scope: !6721)
!6727 = !DILocation(line: 1170, column: 98, scope: !6721)
!6728 = !DILocation(line: 1170, column: 104, scope: !6721)
!6729 = !DILocation(line: 1170, column: 102, scope: !6721)
!6730 = !DILocation(line: 1170, column: 79, scope: !6721)
!6731 = !DILocation(line: 1170, column: 114, scope: !6721)
!6732 = !DILocation(line: 1170, column: 140, scope: !6721)
!6733 = !DILocation(line: 1170, column: 140, scope: !6734)
!6734 = !DILexicalBlockFile(scope: !6721, file: !361, discriminator: 5)
!6735 = !DILocation(line: 1170, column: 140, scope: !6736)
!6736 = !DILexicalBlockFile(scope: !6721, file: !361, discriminator: 6)
!6737 = !DILocation(line: 1170, column: 162, scope: !6738)
!6738 = !DILexicalBlockFile(scope: !6739, file: !361, discriminator: 3)
!6739 = distinct !DILexicalBlock(scope: !6713, file: !361, line: 1170, column: 162)
!6740 = !DILocation(line: 1170, column: 168, scope: !6739)
!6741 = !DILocation(line: 1170, column: 162, scope: !6713)
!6742 = !DILocation(line: 1170, column: 174, scope: !6743)
!6743 = !DILexicalBlockFile(scope: !6739, file: !361, discriminator: 8)
!6744 = !DILocation(line: 1170, column: 264, scope: !6745)
!6745 = !DILexicalBlockFile(scope: !6746, file: !361, discriminator: 10)
!6746 = distinct !DILexicalBlock(scope: !6739, file: !361, line: 1170, column: 177)
!6747 = !DILocation(line: 1170, column: 254, scope: !6746)
!6748 = !DILocation(line: 1170, column: 210, scope: !6746)
!6749 = !DILocation(line: 1170, column: 222, scope: !6746)
!6750 = !DILocation(line: 1170, column: 232, scope: !6746)
!6751 = !DILocation(line: 1170, column: 238, scope: !6746)
!6752 = !DILocation(line: 1170, column: 236, scope: !6746)
!6753 = !DILocation(line: 1170, column: 242, scope: !6746)
!6754 = !DILocation(line: 1170, column: 240, scope: !6746)
!6755 = !DILocation(line: 1170, column: 217, scope: !6746)
!6756 = !DILocation(line: 1170, column: 180, scope: !6746)
!6757 = !DILocation(line: 1170, column: 252, scope: !6746)
!6758 = !DILocation(line: 1170, column: 272, scope: !6746)
!6759 = !DILocation(line: 1170, column: 272, scope: !6760)
!6760 = !DILexicalBlockFile(scope: !6746, file: !361, discriminator: 11)
!6761 = !DILocation(line: 1170, column: 272, scope: !6762)
!6762 = !DILexicalBlockFile(scope: !6746, file: !361, discriminator: 12)
!6763 = !DILocation(line: 1170, column: 294, scope: !6764)
!6764 = !DILexicalBlockFile(scope: !6765, file: !361, discriminator: 9)
!6765 = distinct !DILexicalBlock(scope: !6739, file: !361, line: 1170, column: 294)
!6766 = !DILocation(line: 1170, column: 300, scope: !6765)
!6767 = !DILocation(line: 1170, column: 294, scope: !6739)
!6768 = !DILocation(line: 1170, column: 306, scope: !6769)
!6769 = !DILexicalBlockFile(scope: !6765, file: !361, discriminator: 13)
!6770 = !DILocation(line: 1170, column: 382, scope: !6771)
!6771 = !DILexicalBlockFile(scope: !6772, file: !361, discriminator: 15)
!6772 = distinct !DILexicalBlock(scope: !6765, file: !361, line: 1170, column: 309)
!6773 = !DILocation(line: 1170, column: 375, scope: !6772)
!6774 = !DILocation(line: 1170, column: 331, scope: !6772)
!6775 = !DILocation(line: 1170, column: 341, scope: !6772)
!6776 = !DILocation(line: 1170, column: 351, scope: !6772)
!6777 = !DILocation(line: 1170, column: 357, scope: !6772)
!6778 = !DILocation(line: 1170, column: 355, scope: !6772)
!6779 = !DILocation(line: 1170, column: 361, scope: !6772)
!6780 = !DILocation(line: 1170, column: 359, scope: !6772)
!6781 = !DILocation(line: 1170, column: 337, scope: !6772)
!6782 = !DILocation(line: 1170, column: 311, scope: !6772)
!6783 = !DILocation(line: 1170, column: 373, scope: !6772)
!6784 = !DILocation(line: 1170, column: 460, scope: !6772)
!6785 = !DILocation(line: 1170, column: 466, scope: !6772)
!6786 = !DILocation(line: 1170, column: 453, scope: !6772)
!6787 = !DILocation(line: 1170, column: 409, scope: !6772)
!6788 = !DILocation(line: 1170, column: 419, scope: !6772)
!6789 = !DILocation(line: 1170, column: 429, scope: !6772)
!6790 = !DILocation(line: 1170, column: 435, scope: !6772)
!6791 = !DILocation(line: 1170, column: 433, scope: !6772)
!6792 = !DILocation(line: 1170, column: 439, scope: !6772)
!6793 = !DILocation(line: 1170, column: 437, scope: !6772)
!6794 = !DILocation(line: 1170, column: 415, scope: !6772)
!6795 = !DILocation(line: 1170, column: 389, scope: !6772)
!6796 = !DILocation(line: 1170, column: 451, scope: !6772)
!6797 = !DILocation(line: 1170, column: 541, scope: !6772)
!6798 = !DILocation(line: 1170, column: 547, scope: !6772)
!6799 = !DILocation(line: 1170, column: 534, scope: !6772)
!6800 = !DILocation(line: 1170, column: 490, scope: !6772)
!6801 = !DILocation(line: 1170, column: 500, scope: !6772)
!6802 = !DILocation(line: 1170, column: 510, scope: !6772)
!6803 = !DILocation(line: 1170, column: 516, scope: !6772)
!6804 = !DILocation(line: 1170, column: 514, scope: !6772)
!6805 = !DILocation(line: 1170, column: 520, scope: !6772)
!6806 = !DILocation(line: 1170, column: 518, scope: !6772)
!6807 = !DILocation(line: 1170, column: 496, scope: !6772)
!6808 = !DILocation(line: 1170, column: 472, scope: !6772)
!6809 = !DILocation(line: 1170, column: 532, scope: !6772)
!6810 = !DILocation(line: 1170, column: 554, scope: !6772)
!6811 = !DILocation(line: 1170, column: 554, scope: !6812)
!6812 = !DILexicalBlockFile(scope: !6772, file: !361, discriminator: 16)
!6813 = !DILocation(line: 1170, column: 554, scope: !6814)
!6814 = !DILexicalBlockFile(scope: !6772, file: !361, discriminator: 17)
!6815 = !DILocation(line: 1170, column: 572, scope: !6816)
!6816 = !DILexicalBlockFile(scope: !6765, file: !361, discriminator: 14)
!6817 = !DILocation(line: 1170, column: 666, scope: !6818)
!6818 = !DILexicalBlockFile(scope: !6819, file: !361, discriminator: 18)
!6819 = distinct !DILexicalBlock(scope: !6765, file: !361, line: 1170, column: 575)
!6820 = !DILocation(line: 1170, column: 610, scope: !6819)
!6821 = !DILocation(line: 1170, column: 622, scope: !6819)
!6822 = !DILocation(line: 1170, column: 632, scope: !6819)
!6823 = !DILocation(line: 1170, column: 638, scope: !6819)
!6824 = !DILocation(line: 1170, column: 636, scope: !6819)
!6825 = !DILocation(line: 1170, column: 642, scope: !6819)
!6826 = !DILocation(line: 1170, column: 640, scope: !6819)
!6827 = !DILocation(line: 1170, column: 617, scope: !6819)
!6828 = !DILocation(line: 1170, column: 578, scope: !6819)
!6829 = !DILocation(line: 1170, column: 652, scope: !6819)
!6830 = !DILocation(line: 1170, column: 674, scope: !6819)
!6831 = !DILocation(line: 1170, column: 674, scope: !6832)
!6832 = !DILexicalBlockFile(scope: !6819, file: !361, discriminator: 19)
!6833 = !DILocation(line: 1170, column: 687, scope: !6834)
!6834 = !DILexicalBlockFile(scope: !6714, file: !361, discriminator: 7)
!6835 = !DILocation(line: 1170, column: 687, scope: !6836)
!6836 = !DILexicalBlockFile(scope: !6714, file: !361, discriminator: 20)
!6837 = !DILocation(line: 1171, column: 5, scope: !985)
!6838 = !DILocation(line: 1171, column: 5, scope: !984)
!6839 = !DILocation(line: 1168, column: 41, scope: !985)
!6840 = !DILocation(line: 1168, column: 38, scope: !985)
!6841 = !DILocation(line: 1168, column: 5, scope: !985)
!6842 = !DILocation(line: 1172, column: 12, scope: !975)
!6843 = !DILocation(line: 1172, column: 5, scope: !975)
!6844 = !DILocation(line: 1173, column: 1, scope: !975)
!6845 = !DILocation(line: 1186, column: 36, scope: !994)
!6846 = !DILocation(line: 1186, column: 55, scope: !994)
!6847 = !DILocation(line: 1186, column: 69, scope: !994)
!6848 = !DILocation(line: 1189, column: 5, scope: !994)
!6849 = !DILocation(line: 1189, column: 20, scope: !994)
!6850 = !DILocation(line: 1190, column: 5, scope: !994)
!6851 = !DILocation(line: 1190, column: 16, scope: !994)
!6852 = !DILocation(line: 1191, column: 5, scope: !994)
!6853 = !DILocation(line: 1191, column: 15, scope: !994)
!6854 = !DILocation(line: 1193, column: 35, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !994, file: !361, line: 1193, column: 9)
!6856 = !DILocation(line: 1193, column: 45, scope: !6855)
!6857 = !DILocation(line: 1193, column: 50, scope: !6855)
!6858 = !DILocation(line: 1193, column: 10, scope: !6855)
!6859 = !DILocation(line: 1193, column: 9, scope: !994)
!6860 = !DILocation(line: 1194, column: 9, scope: !6855)
!6861 = !DILocation(line: 1196, column: 48, scope: !994)
!6862 = !DILocation(line: 1196, column: 58, scope: !994)
!6863 = !DILocation(line: 1196, column: 10, scope: !994)
!6864 = !DILocation(line: 1196, column: 8, scope: !994)
!6865 = !DILocation(line: 1197, column: 9, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !994, file: !361, line: 1197, column: 9)
!6867 = !DILocation(line: 1197, column: 12, scope: !6866)
!6868 = !DILocation(line: 1197, column: 9, scope: !994)
!6869 = !DILocation(line: 1198, column: 9, scope: !6866)
!6870 = !DILocation(line: 1199, column: 45, scope: !994)
!6871 = !DILocation(line: 1199, column: 28, scope: !994)
!6872 = !DILocation(line: 1199, column: 9, scope: !994)
!6873 = !DILocation(line: 1201, column: 12, scope: !1005)
!6874 = !DILocation(line: 1201, column: 10, scope: !1005)
!6875 = !DILocation(line: 1201, column: 17, scope: !6876)
!6876 = !DILexicalBlockFile(scope: !6877, file: !361, discriminator: 2)
!6877 = !DILexicalBlockFile(scope: !1004, file: !361, discriminator: 1)
!6878 = !DILocation(line: 1201, column: 21, scope: !1004)
!6879 = !DILocation(line: 1201, column: 31, scope: !1004)
!6880 = !DILocation(line: 1201, column: 19, scope: !1004)
!6881 = !DILocation(line: 1201, column: 5, scope: !1005)
!6882 = !DILocation(line: 1202, column: 9, scope: !1003)
!6883 = !DILocation(line: 1202, column: 13, scope: !1003)
!6884 = !DILocation(line: 1203, column: 16, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !1003, file: !361, line: 1203, column: 9)
!6886 = !DILocation(line: 1203, column: 14, scope: !6885)
!6887 = !DILocation(line: 1203, column: 21, scope: !6888)
!6888 = !DILexicalBlockFile(scope: !6889, file: !361, discriminator: 2)
!6889 = !DILexicalBlockFile(scope: !6890, file: !361, discriminator: 1)
!6890 = distinct !DILexicalBlock(scope: !6885, file: !361, line: 1203, column: 9)
!6891 = !DILocation(line: 1203, column: 25, scope: !6890)
!6892 = !DILocation(line: 1203, column: 23, scope: !6890)
!6893 = !DILocation(line: 1203, column: 9, scope: !6885)
!6894 = !DILocation(line: 1204, column: 71, scope: !6890)
!6895 = !DILocation(line: 1204, column: 75, scope: !6890)
!6896 = !DILocation(line: 1204, column: 73, scope: !6890)
!6897 = !DILocation(line: 1204, column: 56, scope: !6890)
!6898 = !DILocation(line: 1204, column: 66, scope: !6890)
!6899 = !DILocation(line: 1204, column: 38, scope: !6890)
!6900 = !DILocation(line: 1204, column: 17, scope: !6890)
!6901 = !DILocation(line: 1204, column: 21, scope: !6890)
!6902 = !DILocation(line: 1204, column: 19, scope: !6890)
!6903 = !DILocation(line: 1204, column: 27, scope: !6890)
!6904 = !DILocation(line: 1204, column: 33, scope: !6890)
!6905 = !DILocation(line: 1204, column: 31, scope: !6890)
!6906 = !DILocation(line: 1204, column: 13, scope: !6890)
!6907 = !DILocation(line: 1204, column: 36, scope: !6890)
!6908 = !DILocation(line: 1203, column: 33, scope: !6890)
!6909 = !DILocation(line: 1203, column: 9, scope: !6890)
!6910 = !DILocation(line: 1205, column: 5, scope: !1004)
!6911 = !DILocation(line: 1205, column: 5, scope: !1003)
!6912 = !DILocation(line: 1201, column: 41, scope: !1004)
!6913 = !DILocation(line: 1201, column: 38, scope: !1004)
!6914 = !DILocation(line: 1201, column: 5, scope: !1004)
!6915 = !DILocation(line: 1206, column: 12, scope: !994)
!6916 = !DILocation(line: 1206, column: 5, scope: !994)
!6917 = !DILocation(line: 1207, column: 1, scope: !994)
!6918 = !DILocation(line: 1278, column: 34, scope: !1019)
!6919 = !DILocation(line: 1278, column: 53, scope: !1019)
!6920 = !DILocation(line: 1278, column: 67, scope: !1019)
!6921 = !DILocation(line: 1278, column: 78, scope: !1019)
!6922 = !DILocation(line: 1278, column: 93, scope: !1019)
!6923 = !DILocation(line: 1278, column: 105, scope: !1019)
!6924 = !DILocation(line: 1278, column: 124, scope: !1019)
!6925 = !DILocation(line: 1278, column: 135, scope: !1019)
!6926 = !DILocation(line: 1278, column: 148, scope: !1019)
!6927 = !DILocation(line: 1281, column: 5, scope: !1019)
!6928 = !DILocation(line: 1281, column: 11, scope: !1019)
!6929 = !DILocation(line: 1281, column: 16, scope: !1019)
!6930 = !DILocation(line: 1282, column: 5, scope: !1019)
!6931 = !DILocation(line: 1282, column: 16, scope: !1019)
!6932 = !DILocation(line: 1283, column: 5, scope: !1019)
!6933 = !DILocation(line: 1283, column: 9, scope: !1019)
!6934 = !DILocation(line: 1283, column: 15, scope: !1019)
!6935 = !DILocation(line: 1283, column: 19, scope: !1019)
!6936 = !DILocation(line: 1283, column: 28, scope: !1019)
!6937 = !DILocation(line: 1283, column: 35, scope: !1019)
!6938 = !DILocation(line: 1284, column: 5, scope: !1019)
!6939 = !DILocation(line: 1284, column: 15, scope: !1019)
!6940 = !DILocation(line: 1284, column: 23, scope: !1019)
!6941 = !DILocation(line: 1284, column: 29, scope: !1019)
!6942 = !DILocation(line: 1285, column: 5, scope: !1019)
!6943 = !DILocation(line: 1285, column: 9, scope: !1019)
!6944 = !DILocation(line: 1287, column: 29, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !1019, file: !361, line: 1287, column: 9)
!6946 = !DILocation(line: 1287, column: 10, scope: !6945)
!6947 = !DILocation(line: 1287, column: 9, scope: !1019)
!6948 = !DILocation(line: 1288, column: 9, scope: !6945)
!6949 = !DILocation(line: 1289, column: 9, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !1019, file: !361, line: 1289, column: 9)
!6951 = !DILocation(line: 1289, column: 19, scope: !6950)
!6952 = !DILocation(line: 1289, column: 9, scope: !1019)
!6953 = !DILocation(line: 1290, column: 25, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6950, file: !361, line: 1289, column: 24)
!6955 = !DILocation(line: 1290, column: 9, scope: !6954)
!6956 = !DILocation(line: 1291, column: 9, scope: !6954)
!6957 = !DILocation(line: 1293, column: 9, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !1019, file: !361, line: 1293, column: 9)
!6959 = !DILocation(line: 1293, column: 30, scope: !6958)
!6960 = !DILocation(line: 1293, column: 28, scope: !6958)
!6961 = !DILocation(line: 1293, column: 15, scope: !6958)
!6962 = !DILocation(line: 1293, column: 9, scope: !1019)
!6963 = !DILocation(line: 1297, column: 25, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6958, file: !361, line: 1293, column: 41)
!6965 = !DILocation(line: 1297, column: 9, scope: !6964)
!6966 = !DILocation(line: 1299, column: 9, scope: !6964)
!6967 = !DILocation(line: 1301, column: 23, scope: !1019)
!6968 = !DILocation(line: 1301, column: 31, scope: !1019)
!6969 = !DILocation(line: 1301, column: 29, scope: !1019)
!6970 = !DILocation(line: 1301, column: 21, scope: !1019)
!6971 = !DILocation(line: 1302, column: 9, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !1019, file: !361, line: 1302, column: 9)
!6973 = !DILocation(line: 1302, column: 17, scope: !6972)
!6974 = !DILocation(line: 1302, column: 21, scope: !6972)
!6975 = !DILocation(line: 1302, column: 24, scope: !6976)
!6976 = !DILexicalBlockFile(scope: !6972, file: !361, discriminator: 1)
!6977 = !DILocation(line: 1302, column: 32, scope: !6972)
!6978 = !DILocation(line: 1302, column: 9, scope: !1019)
!6979 = !DILocation(line: 1303, column: 25, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6972, file: !361, line: 1302, column: 37)
!6981 = !DILocation(line: 1303, column: 9, scope: !6980)
!6982 = !DILocation(line: 1305, column: 9, scope: !6980)
!6983 = !DILocation(line: 1308, column: 9, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !1019, file: !361, line: 1308, column: 9)
!6985 = !DILocation(line: 1308, column: 19, scope: !6984)
!6986 = !DILocation(line: 1308, column: 25, scope: !6984)
!6987 = !DILocation(line: 1308, column: 23, scope: !6984)
!6988 = !DILocation(line: 1308, column: 41, scope: !6984)
!6989 = !DILocation(line: 1308, column: 9, scope: !1019)
!6990 = !DILocation(line: 1309, column: 25, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6984, file: !361, line: 1308, column: 47)
!6992 = !DILocation(line: 1309, column: 9, scope: !6991)
!6993 = !DILocation(line: 1310, column: 9, scope: !6991)
!6994 = !DILocation(line: 1312, column: 9, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !1019, file: !361, line: 1312, column: 9)
!6996 = !DILocation(line: 1312, column: 16, scope: !6995)
!6997 = !DILocation(line: 1312, column: 21, scope: !6995)
!6998 = !DILocation(line: 1312, column: 24, scope: !6999)
!6999 = !DILexicalBlockFile(scope: !6995, file: !361, discriminator: 1)
!7000 = !DILocation(line: 1312, column: 32, scope: !6995)
!7001 = !DILocation(line: 1312, column: 9, scope: !1019)
!7002 = !DILocation(line: 1313, column: 25, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6995, file: !361, line: 1312, column: 38)
!7004 = !DILocation(line: 1313, column: 9, scope: !7003)
!7005 = !DILocation(line: 1314, column: 9, scope: !7003)
!7006 = !DILocation(line: 1317, column: 13, scope: !1019)
!7007 = !DILocation(line: 1317, column: 21, scope: !1019)
!7008 = !DILocation(line: 1317, column: 9, scope: !1019)
!7009 = !DILocation(line: 1317, column: 7, scope: !1019)
!7010 = !DILocation(line: 1318, column: 15, scope: !1019)
!7011 = !DILocation(line: 1318, column: 12, scope: !1019)
!7012 = !DILocation(line: 1319, column: 16, scope: !1019)
!7013 = !DILocation(line: 1319, column: 13, scope: !1019)
!7014 = !DILocation(line: 1321, column: 13, scope: !1019)
!7015 = !DILocation(line: 1321, column: 22, scope: !1019)
!7016 = !DILocation(line: 1321, column: 9, scope: !1019)
!7017 = !DILocation(line: 1321, column: 7, scope: !1019)
!7018 = !DILocation(line: 1322, column: 16, scope: !1019)
!7019 = !DILocation(line: 1322, column: 13, scope: !1019)
!7020 = !DILocation(line: 1323, column: 16, scope: !1019)
!7021 = !DILocation(line: 1323, column: 13, scope: !1019)
!7022 = !DILocation(line: 1325, column: 17, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !1019, file: !361, line: 1325, column: 9)
!7024 = !DILocation(line: 1325, column: 9, scope: !7023)
!7025 = !DILocation(line: 1325, column: 27, scope: !7023)
!7026 = !DILocation(line: 1325, column: 9, scope: !1019)
!7027 = !DILocation(line: 1326, column: 25, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7023, file: !361, line: 1325, column: 67)
!7029 = !DILocation(line: 1326, column: 9, scope: !7028)
!7030 = !DILocation(line: 1328, column: 9, scope: !7028)
!7031 = !DILocation(line: 1330, column: 35, scope: !1019)
!7032 = !DILocation(line: 1330, column: 45, scope: !1019)
!7033 = !DILocation(line: 1330, column: 22, scope: !1019)
!7034 = !DILocation(line: 1330, column: 14, scope: !1019)
!7035 = !DILocation(line: 1330, column: 12, scope: !1019)
!7036 = !DILocation(line: 1331, column: 34, scope: !1019)
!7037 = !DILocation(line: 1331, column: 44, scope: !1019)
!7038 = !DILocation(line: 1331, column: 21, scope: !1019)
!7039 = !DILocation(line: 1331, column: 13, scope: !1019)
!7040 = !DILocation(line: 1331, column: 11, scope: !1019)
!7041 = !DILocation(line: 1332, column: 9, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !1019, file: !361, line: 1332, column: 9)
!7043 = !DILocation(line: 1332, column: 16, scope: !7042)
!7044 = !DILocation(line: 1332, column: 30, scope: !7042)
!7045 = !DILocation(line: 1332, column: 33, scope: !7046)
!7046 = !DILexicalBlockFile(scope: !7042, file: !361, discriminator: 1)
!7047 = !DILocation(line: 1332, column: 39, scope: !7042)
!7048 = !DILocation(line: 1332, column: 9, scope: !1019)
!7049 = !DILocation(line: 1333, column: 16, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7042, file: !361, line: 1332, column: 54)
!7051 = !DILocation(line: 1334, column: 9, scope: !7050)
!7052 = !DILocation(line: 1337, column: 11, scope: !1019)
!7053 = !DILocation(line: 1337, column: 21, scope: !1019)
!7054 = !DILocation(line: 1337, column: 27, scope: !1019)
!7055 = !DILocation(line: 1337, column: 25, scope: !1019)
!7056 = !DILocation(line: 1337, column: 9, scope: !1019)
!7057 = !DILocation(line: 1339, column: 9, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !1019, file: !361, line: 1339, column: 9)
!7059 = !DILocation(line: 1339, column: 15, scope: !7058)
!7060 = !DILocation(line: 1339, column: 9, scope: !1019)
!7061 = !DILocation(line: 1340, column: 14, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7058, file: !361, line: 1339, column: 37)
!7063 = !DILocation(line: 1340, column: 13, scope: !7062)
!7064 = !DILocation(line: 1340, column: 11, scope: !7062)
!7065 = !DILocation(line: 1341, column: 19, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7062, file: !361, line: 1341, column: 9)
!7067 = !DILocation(line: 1341, column: 14, scope: !7066)
!7068 = !DILocation(line: 1341, column: 24, scope: !7069)
!7069 = !DILexicalBlockFile(scope: !7070, file: !361, discriminator: 2)
!7070 = !DILexicalBlockFile(scope: !7071, file: !361, discriminator: 1)
!7071 = distinct !DILexicalBlock(scope: !7066, file: !361, line: 1341, column: 9)
!7072 = !DILocation(line: 1341, column: 31, scope: !7071)
!7073 = !DILocation(line: 1341, column: 29, scope: !7071)
!7074 = !DILocation(line: 1341, column: 9, scope: !7066)
!7075 = !DILocation(line: 1342, column: 34, scope: !7071)
!7076 = !DILocation(line: 1342, column: 28, scope: !7071)
!7077 = !DILocation(line: 1342, column: 40, scope: !7071)
!7078 = !DILocation(line: 1342, column: 20, scope: !7071)
!7079 = !DILocation(line: 1342, column: 13, scope: !7071)
!7080 = !DILocation(line: 1342, column: 26, scope: !7071)
!7081 = !DILocation(line: 1341, column: 46, scope: !7071)
!7082 = !DILocation(line: 1341, column: 9, scope: !7071)
!7083 = !DILocation(line: 1343, column: 5, scope: !7062)
!7084 = !DILocation(line: 1345, column: 38, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7086, file: !361, line: 1345, column: 13)
!7086 = distinct !DILexicalBlock(scope: !7058, file: !361, line: 1344, column: 10)
!7087 = !DILocation(line: 1345, column: 14, scope: !7085)
!7088 = !DILocation(line: 1345, column: 13, scope: !7086)
!7089 = !DILocation(line: 1348, column: 13, scope: !7085)
!7090 = !DILocation(line: 1349, column: 26, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7086, file: !361, line: 1349, column: 13)
!7092 = !DILocation(line: 1349, column: 13, scope: !7091)
!7093 = !DILocation(line: 1349, column: 36, scope: !7091)
!7094 = !DILocation(line: 1349, column: 33, scope: !7091)
!7095 = !DILocation(line: 1349, column: 13, scope: !7086)
!7096 = !DILocation(line: 1350, column: 29, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7091, file: !361, line: 1349, column: 47)
!7098 = !DILocation(line: 1350, column: 13, scope: !7097)
!7099 = !DILocation(line: 1352, column: 13, scope: !7097)
!7100 = !DILocation(line: 1354, column: 19, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7086, file: !361, line: 1354, column: 9)
!7102 = !DILocation(line: 1354, column: 14, scope: !7101)
!7103 = !DILocation(line: 1354, column: 24, scope: !7104)
!7104 = !DILexicalBlockFile(scope: !7105, file: !361, discriminator: 2)
!7105 = !DILexicalBlockFile(scope: !7106, file: !361, discriminator: 1)
!7106 = distinct !DILexicalBlock(scope: !7101, file: !361, line: 1354, column: 9)
!7107 = !DILocation(line: 1354, column: 31, scope: !7106)
!7108 = !DILocation(line: 1354, column: 29, scope: !7106)
!7109 = !DILocation(line: 1354, column: 9, scope: !7101)
!7110 = !DILocation(line: 1355, column: 58, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7112, file: !361, line: 1355, column: 17)
!7112 = distinct !DILexicalBlock(scope: !7106, file: !361, line: 1354, column: 50)
!7113 = !DILocation(line: 1355, column: 65, scope: !7111)
!7114 = !DILocation(line: 1355, column: 42, scope: !7111)
!7115 = !DILocation(line: 1356, column: 56, scope: !7111)
!7116 = !DILocation(line: 1356, column: 49, scope: !7111)
!7117 = !DILocation(line: 1357, column: 55, scope: !7111)
!7118 = !DILocation(line: 1357, column: 49, scope: !7111)
!7119 = !DILocation(line: 1355, column: 18, scope: !7111)
!7120 = !DILocation(line: 1355, column: 17, scope: !7112)
!7121 = !DILocation(line: 1358, column: 17, scope: !7111)
!7122 = !DILocation(line: 1359, column: 9, scope: !7112)
!7123 = !DILocation(line: 1354, column: 46, scope: !7106)
!7124 = !DILocation(line: 1354, column: 9, scope: !7106)
!7125 = !DILocation(line: 1363, column: 9, scope: !1046)
!7126 = !DILocation(line: 1363, column: 13, scope: !1046)
!7127 = !DILocation(line: 1363, column: 9, scope: !1019)
!7128 = !DILocation(line: 1364, column: 15, scope: !1046)
!7129 = !DILocation(line: 1364, column: 13, scope: !1046)
!7130 = !DILocation(line: 1364, column: 9, scope: !1046)
!7131 = !DILocation(line: 1374, column: 9, scope: !1045)
!7132 = !DILocation(line: 1374, column: 20, scope: !1045)
!7133 = !DILocation(line: 1374, column: 29, scope: !1045)
!7134 = !DILocation(line: 1374, column: 33, scope: !1045)
!7135 = !DILocation(line: 1374, column: 40, scope: !1045)
!7136 = !DILocation(line: 1374, column: 38, scope: !1045)
!7137 = !DILocation(line: 1374, column: 26, scope: !1045)
!7138 = !DILocation(line: 1375, column: 13, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !1045, file: !361, line: 1375, column: 13)
!7140 = !DILocation(line: 1375, column: 57, scope: !7139)
!7141 = !DILocation(line: 1375, column: 55, scope: !7139)
!7142 = !DILocation(line: 1375, column: 61, scope: !7139)
!7143 = !DILocation(line: 1375, column: 59, scope: !7139)
!7144 = !DILocation(line: 1375, column: 21, scope: !7139)
!7145 = !DILocation(line: 1375, column: 13, scope: !1045)
!7146 = !DILocation(line: 1376, column: 17, scope: !7139)
!7147 = !DILocation(line: 1376, column: 13, scope: !7139)
!7148 = !DILocation(line: 1379, column: 45, scope: !7139)
!7149 = !DILocation(line: 1379, column: 49, scope: !7139)
!7150 = !DILocation(line: 1379, column: 47, scope: !7139)
!7151 = !DILocation(line: 1379, column: 59, scope: !7139)
!7152 = !DILocation(line: 1379, column: 57, scope: !7139)
!7153 = !DILocation(line: 1378, column: 19, scope: !7139)
!7154 = !DILocation(line: 1378, column: 17, scope: !7139)
!7155 = !DILocation(line: 1380, column: 5, scope: !1046)
!7156 = !DILocation(line: 1381, column: 9, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !1019, file: !361, line: 1381, column: 9)
!7158 = !DILocation(line: 1381, column: 13, scope: !7157)
!7159 = !DILocation(line: 1381, column: 9, scope: !1019)
!7160 = !DILocation(line: 1382, column: 25, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7157, file: !361, line: 1381, column: 28)
!7162 = !DILocation(line: 1382, column: 9, scope: !7161)
!7163 = !DILocation(line: 1384, column: 9, scope: !7161)
!7164 = !DILocation(line: 1386, column: 28, scope: !1019)
!7165 = !DILocation(line: 1386, column: 11, scope: !1019)
!7166 = !DILocation(line: 1386, column: 9, scope: !1019)
!7167 = !DILocation(line: 1387, column: 10, scope: !1019)
!7168 = !DILocation(line: 1387, column: 20, scope: !1019)
!7169 = !DILocation(line: 1387, column: 8, scope: !1019)
!7170 = !DILocation(line: 1389, column: 5, scope: !1019)
!7171 = !DILocation(line: 1390, column: 9, scope: !1052)
!7172 = !DILocation(line: 1390, column: 16, scope: !7173)
!7173 = !DILexicalBlockFile(scope: !7174, file: !361, discriminator: 2)
!7174 = !DILexicalBlockFile(scope: !1052, file: !361, discriminator: 1)
!7175 = !DILocation(line: 1390, column: 18, scope: !1052)
!7176 = !DILocation(line: 1391, column: 17, scope: !1050)
!7177 = !DILocation(line: 1391, column: 21, scope: !1050)
!7178 = !DILocation(line: 1391, column: 17, scope: !1051)
!7179 = !DILocation(line: 1392, column: 37, scope: !1049)
!7180 = !DILocation(line: 1392, column: 25, scope: !1049)
!7181 = !DILocation(line: 1392, column: 23, scope: !1049)
!7182 = !DILocation(line: 1393, column: 21, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !1049, file: !361, line: 1393, column: 21)
!7184 = !DILocation(line: 1393, column: 27, scope: !7183)
!7185 = !DILocation(line: 1393, column: 21, scope: !1049)
!7186 = !DILocation(line: 1394, column: 21, scope: !7183)
!7187 = !DILocation(line: 1395, column: 27, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !1049, file: !361, line: 1395, column: 17)
!7189 = !DILocation(line: 1395, column: 22, scope: !7188)
!7190 = !DILocation(line: 1395, column: 32, scope: !7191)
!7191 = !DILexicalBlockFile(scope: !7192, file: !361, discriminator: 2)
!7192 = !DILexicalBlockFile(scope: !7193, file: !361, discriminator: 1)
!7193 = distinct !DILexicalBlock(scope: !7188, file: !361, line: 1395, column: 17)
!7194 = !DILocation(line: 1395, column: 39, scope: !7193)
!7195 = !DILocation(line: 1395, column: 37, scope: !7193)
!7196 = !DILocation(line: 1395, column: 17, scope: !7188)
!7197 = !DILocation(line: 1396, column: 37, scope: !7193)
!7198 = !DILocation(line: 1396, column: 44, scope: !7193)
!7199 = !DILocation(line: 1398, column: 46, scope: !7193)
!7200 = !DILocation(line: 1398, column: 39, scope: !7193)
!7201 = !DILocation(line: 1399, column: 45, scope: !7193)
!7202 = !DILocation(line: 1399, column: 39, scope: !7193)
!7203 = !DILocation(line: 1397, column: 25, scope: !7193)
!7204 = !DILocation(line: 1396, column: 21, scope: !7193)
!7205 = !DILocation(line: 1395, column: 54, scope: !7193)
!7206 = !DILocation(line: 1395, column: 17, scope: !7193)
!7207 = !DILocation(line: 1400, column: 21, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !1049, file: !361, line: 1400, column: 21)
!7209 = !DILocation(line: 1400, column: 21, scope: !1049)
!7210 = !DILocation(line: 1401, column: 21, scope: !7208)
!7211 = !DILocation(line: 1404, column: 36, scope: !1049)
!7212 = !DILocation(line: 1404, column: 59, scope: !1049)
!7213 = !DILocation(line: 1404, column: 42, scope: !1049)
!7214 = !DILocation(line: 1404, column: 40, scope: !1049)
!7215 = !DILocation(line: 1404, column: 21, scope: !1049)
!7216 = !DILocation(line: 1406, column: 39, scope: !1049)
!7217 = !DILocation(line: 1406, column: 22, scope: !1049)
!7218 = !DILocation(line: 1406, column: 45, scope: !1049)
!7219 = !DILocation(line: 1405, column: 22, scope: !1049)
!7220 = !DILocation(line: 1405, column: 20, scope: !1049)
!7221 = !DILocation(line: 1407, column: 17, scope: !1049)
!7222 = !DILocation(line: 1407, column: 22, scope: !7223)
!7223 = !DILexicalBlockFile(scope: !1048, file: !361, discriminator: 1)
!7224 = !DILocation(line: 1407, column: 32, scope: !1048)
!7225 = !DILocation(line: 1407, column: 62, scope: !1048)
!7226 = !DILocation(line: 1407, column: 76, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !1048, file: !361, line: 1407, column: 73)
!7228 = !DILocation(line: 1407, column: 93, scope: !7227)
!7229 = !DILocation(line: 1407, column: 73, scope: !7227)
!7230 = !DILocation(line: 1407, column: 103, scope: !7227)
!7231 = !DILocation(line: 1407, column: 73, scope: !1048)
!7232 = !DILocation(line: 1407, column: 73, scope: !7233)
!7233 = !DILexicalBlockFile(scope: !1048, file: !361, discriminator: 2)
!7234 = !DILocation(line: 1407, column: 134, scope: !7235)
!7235 = !DILexicalBlockFile(scope: !7227, file: !361, discriminator: 3)
!7236 = !DILocation(line: 1407, column: 152, scope: !7227)
!7237 = !DILocation(line: 1407, column: 162, scope: !7227)
!7238 = !DILocation(line: 1407, column: 187, scope: !7227)
!7239 = !DILocation(line: 1407, column: 118, scope: !7227)
!7240 = !DILocation(line: 1407, column: 206, scope: !7241)
!7241 = !DILexicalBlockFile(scope: !1049, file: !361, discriminator: 4)
!7242 = !DILocation(line: 1407, column: 206, scope: !1048)
!7243 = !DILocation(line: 1407, column: 206, scope: !7244)
!7244 = !DILexicalBlockFile(scope: !1048, file: !361, discriminator: 5)
!7245 = !DILocation(line: 1408, column: 23, scope: !1049)
!7246 = !DILocation(line: 1408, column: 21, scope: !1049)
!7247 = !DILocation(line: 1409, column: 21, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !1049, file: !361, line: 1409, column: 21)
!7249 = !DILocation(line: 1409, column: 25, scope: !7248)
!7250 = !DILocation(line: 1409, column: 21, scope: !1049)
!7251 = !DILocation(line: 1410, column: 21, scope: !7248)
!7252 = !DILocation(line: 1411, column: 54, scope: !1049)
!7253 = !DILocation(line: 1411, column: 59, scope: !1049)
!7254 = !DILocation(line: 1411, column: 62, scope: !1049)
!7255 = !DILocation(line: 1411, column: 22, scope: !1049)
!7256 = !DILocation(line: 1411, column: 20, scope: !1049)
!7257 = !DILocation(line: 1412, column: 17, scope: !1049)
!7258 = !DILocation(line: 1412, column: 22, scope: !7259)
!7259 = !DILexicalBlockFile(scope: !1056, file: !361, discriminator: 1)
!7260 = !DILocation(line: 1412, column: 32, scope: !1056)
!7261 = !DILocation(line: 1412, column: 62, scope: !1056)
!7262 = !DILocation(line: 1412, column: 78, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !1056, file: !361, line: 1412, column: 75)
!7264 = !DILocation(line: 1412, column: 95, scope: !7263)
!7265 = !DILocation(line: 1412, column: 75, scope: !7263)
!7266 = !DILocation(line: 1412, column: 105, scope: !7263)
!7267 = !DILocation(line: 1412, column: 75, scope: !1056)
!7268 = !DILocation(line: 1412, column: 75, scope: !7269)
!7269 = !DILexicalBlockFile(scope: !1056, file: !361, discriminator: 2)
!7270 = !DILocation(line: 1412, column: 136, scope: !7271)
!7271 = !DILexicalBlockFile(scope: !7263, file: !361, discriminator: 3)
!7272 = !DILocation(line: 1412, column: 154, scope: !7263)
!7273 = !DILocation(line: 1412, column: 164, scope: !7263)
!7274 = !DILocation(line: 1412, column: 189, scope: !7263)
!7275 = !DILocation(line: 1412, column: 120, scope: !7263)
!7276 = !DILocation(line: 1412, column: 208, scope: !7241)
!7277 = !DILocation(line: 1412, column: 208, scope: !1056)
!7278 = !DILocation(line: 1412, column: 208, scope: !7279)
!7279 = !DILexicalBlockFile(scope: !1056, file: !361, discriminator: 5)
!7280 = !DILocation(line: 1413, column: 17, scope: !1049)
!7281 = !DILocation(line: 1413, column: 22, scope: !7282)
!7282 = !DILexicalBlockFile(scope: !1058, file: !361, discriminator: 1)
!7283 = !DILocation(line: 1413, column: 32, scope: !1058)
!7284 = !DILocation(line: 1413, column: 62, scope: !1058)
!7285 = !DILocation(line: 1413, column: 76, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !1058, file: !361, line: 1413, column: 73)
!7287 = !DILocation(line: 1413, column: 93, scope: !7286)
!7288 = !DILocation(line: 1413, column: 73, scope: !7286)
!7289 = !DILocation(line: 1413, column: 103, scope: !7286)
!7290 = !DILocation(line: 1413, column: 73, scope: !1058)
!7291 = !DILocation(line: 1413, column: 73, scope: !7292)
!7292 = !DILexicalBlockFile(scope: !1058, file: !361, discriminator: 2)
!7293 = !DILocation(line: 1413, column: 134, scope: !7294)
!7294 = !DILexicalBlockFile(scope: !7286, file: !361, discriminator: 3)
!7295 = !DILocation(line: 1413, column: 152, scope: !7286)
!7296 = !DILocation(line: 1413, column: 162, scope: !7286)
!7297 = !DILocation(line: 1413, column: 187, scope: !7286)
!7298 = !DILocation(line: 1413, column: 118, scope: !7286)
!7299 = !DILocation(line: 1413, column: 206, scope: !7241)
!7300 = !DILocation(line: 1413, column: 206, scope: !1058)
!7301 = !DILocation(line: 1413, column: 206, scope: !7302)
!7302 = !DILexicalBlockFile(scope: !1058, file: !361, discriminator: 5)
!7303 = !DILocation(line: 1414, column: 17, scope: !1049)
!7304 = !DILocation(line: 1416, column: 23, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !1051, file: !361, line: 1416, column: 13)
!7306 = !DILocation(line: 1416, column: 18, scope: !7305)
!7307 = !DILocation(line: 1416, column: 28, scope: !7308)
!7308 = !DILexicalBlockFile(scope: !7309, file: !361, discriminator: 2)
!7309 = !DILexicalBlockFile(scope: !7310, file: !361, discriminator: 1)
!7310 = distinct !DILexicalBlock(scope: !7305, file: !361, line: 1416, column: 13)
!7311 = !DILocation(line: 1416, column: 35, scope: !7310)
!7312 = !DILocation(line: 1416, column: 33, scope: !7310)
!7313 = !DILocation(line: 1416, column: 13, scope: !7305)
!7314 = !DILocation(line: 1417, column: 38, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7310, file: !361, line: 1416, column: 54)
!7316 = !DILocation(line: 1417, column: 32, scope: !7315)
!7317 = !DILocation(line: 1417, column: 24, scope: !7315)
!7318 = !DILocation(line: 1417, column: 17, scope: !7315)
!7319 = !DILocation(line: 1417, column: 30, scope: !7315)
!7320 = !DILocation(line: 1418, column: 34, scope: !7315)
!7321 = !DILocation(line: 1418, column: 40, scope: !7315)
!7322 = !DILocation(line: 1418, column: 33, scope: !7315)
!7323 = !DILocation(line: 1418, column: 91, scope: !7324)
!7324 = !DILexicalBlockFile(scope: !7315, file: !361, discriminator: 1)
!7325 = !DILocation(line: 1418, column: 97, scope: !7315)
!7326 = !DILocation(line: 1418, column: 54, scope: !7315)
!7327 = !DILocation(line: 1418, column: 48, scope: !7315)
!7328 = !DILocation(line: 1418, column: 109, scope: !7315)
!7329 = !DILocation(line: 1418, column: 118, scope: !7330)
!7330 = !DILexicalBlockFile(scope: !7315, file: !361, discriminator: 2)
!7331 = !DILocation(line: 1418, column: 124, scope: !7315)
!7332 = !DILocation(line: 1418, column: 117, scope: !7315)
!7333 = !DILocation(line: 1418, column: 169, scope: !7334)
!7334 = !DILexicalBlockFile(scope: !7315, file: !361, discriminator: 4)
!7335 = !DILocation(line: 1418, column: 175, scope: !7315)
!7336 = !DILocation(line: 1418, column: 139, scope: !7315)
!7337 = !DILocation(line: 1418, column: 138, scope: !7315)
!7338 = !DILocation(line: 1418, column: 132, scope: !7315)
!7339 = !DILocation(line: 1418, column: 187, scope: !7315)
!7340 = !DILocation(line: 1418, column: 196, scope: !7341)
!7341 = !DILexicalBlockFile(scope: !7315, file: !361, discriminator: 5)
!7342 = !DILocation(line: 1418, column: 202, scope: !7315)
!7343 = !DILocation(line: 1418, column: 195, scope: !7315)
!7344 = !DILocation(line: 1418, column: 237, scope: !7345)
!7345 = !DILexicalBlockFile(scope: !7315, file: !361, discriminator: 7)
!7346 = !DILocation(line: 1418, column: 242, scope: !7315)
!7347 = !DILocation(line: 1418, column: 217, scope: !7315)
!7348 = !DILocation(line: 1418, column: 277, scope: !7315)
!7349 = !DILocation(line: 1418, column: 282, scope: !7315)
!7350 = !DILocation(line: 1418, column: 257, scope: !7315)
!7351 = !DILocation(line: 1418, column: 294, scope: !7315)
!7352 = !DILocation(line: 1418, column: 254, scope: !7315)
!7353 = !DILocation(line: 1418, column: 321, scope: !7315)
!7354 = !DILocation(line: 1418, column: 326, scope: !7315)
!7355 = !DILocation(line: 1418, column: 303, scope: !7315)
!7356 = !DILocation(line: 1418, column: 338, scope: !7315)
!7357 = !DILocation(line: 1418, column: 300, scope: !7315)
!7358 = !DILocation(line: 1418, column: 347, scope: !7315)
!7359 = !DILocation(line: 1418, column: 393, scope: !7360)
!7360 = !DILexicalBlockFile(scope: !7315, file: !361, discriminator: 8)
!7361 = !DILocation(line: 1418, column: 399, scope: !7315)
!7362 = !DILocation(line: 1418, column: 361, scope: !7315)
!7363 = !DILocation(line: 1418, column: 360, scope: !7315)
!7364 = !DILocation(line: 1418, column: 117, scope: !7365)
!7365 = !DILexicalBlockFile(scope: !7366, file: !361, discriminator: 10)
!7366 = !DILexicalBlockFile(scope: !7315, file: !361, discriminator: 9)
!7367 = !DILocation(line: 1418, column: 33, scope: !7368)
!7368 = !DILexicalBlockFile(scope: !7369, file: !361, discriminator: 11)
!7369 = !DILexicalBlockFile(scope: !7315, file: !361, discriminator: 6)
!7370 = !DILocation(line: 1418, column: 23, scope: !7371)
!7371 = !DILexicalBlockFile(scope: !7372, file: !361, discriminator: 12)
!7372 = !DILexicalBlockFile(scope: !7315, file: !361, discriminator: 3)
!7373 = !DILocation(line: 1418, column: 17, scope: !7315)
!7374 = !DILocation(line: 1418, column: 29, scope: !7315)
!7375 = !DILocation(line: 1419, column: 23, scope: !7315)
!7376 = !DILocation(line: 1419, column: 20, scope: !7315)
!7377 = !DILocation(line: 1422, column: 30, scope: !7315)
!7378 = !DILocation(line: 1422, column: 22, scope: !7315)
!7379 = !DILocation(line: 1422, column: 54, scope: !7315)
!7380 = !DILocation(line: 1422, column: 48, scope: !7315)
!7381 = !DILocation(line: 1422, column: 40, scope: !7315)
!7382 = !DILocation(line: 1422, column: 38, scope: !7315)
!7383 = !DILocation(line: 1423, column: 30, scope: !7315)
!7384 = !DILocation(line: 1423, column: 22, scope: !7315)
!7385 = !DILocation(line: 1423, column: 55, scope: !7315)
!7386 = !DILocation(line: 1423, column: 48, scope: !7315)
!7387 = !DILocation(line: 1423, column: 40, scope: !7315)
!7388 = !DILocation(line: 1423, column: 38, scope: !7315)
!7389 = !DILocation(line: 1422, column: 60, scope: !7315)
!7390 = !DILocation(line: 1424, column: 30, scope: !7315)
!7391 = !DILocation(line: 1424, column: 22, scope: !7315)
!7392 = !DILocation(line: 1424, column: 48, scope: !7315)
!7393 = !DILocation(line: 1424, column: 40, scope: !7315)
!7394 = !DILocation(line: 1424, column: 38, scope: !7315)
!7395 = !DILocation(line: 1423, column: 62, scope: !7315)
!7396 = !DILocation(line: 1421, column: 31, scope: !7315)
!7397 = !DILocation(line: 1421, column: 23, scope: !7315)
!7398 = !DILocation(line: 1421, column: 17, scope: !7315)
!7399 = !DILocation(line: 1421, column: 29, scope: !7315)
!7400 = !DILocation(line: 1425, column: 13, scope: !7315)
!7401 = !DILocation(line: 1416, column: 50, scope: !7310)
!7402 = !DILocation(line: 1416, column: 13, scope: !7310)
!7403 = !DILocation(line: 1426, column: 16, scope: !1051)
!7404 = !DILocation(line: 1427, column: 18, scope: !1051)
!7405 = !DILocation(line: 1427, column: 15, scope: !1051)
!7406 = !DILocation(line: 1429, column: 9, scope: !1052)
!7407 = !DILocation(line: 1429, column: 16, scope: !7173)
!7408 = !DILocation(line: 1429, column: 18, scope: !1052)
!7409 = !DILocation(line: 1430, column: 23, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7411, file: !361, line: 1430, column: 13)
!7411 = distinct !DILexicalBlock(scope: !1052, file: !361, line: 1429, column: 24)
!7412 = !DILocation(line: 1430, column: 18, scope: !7410)
!7413 = !DILocation(line: 1430, column: 28, scope: !7414)
!7414 = !DILexicalBlockFile(scope: !7415, file: !361, discriminator: 2)
!7415 = !DILexicalBlockFile(scope: !7416, file: !361, discriminator: 1)
!7416 = distinct !DILexicalBlock(scope: !7410, file: !361, line: 1430, column: 13)
!7417 = !DILocation(line: 1430, column: 35, scope: !7416)
!7418 = !DILocation(line: 1430, column: 33, scope: !7416)
!7419 = !DILocation(line: 1430, column: 13, scope: !7410)
!7420 = !DILocation(line: 1431, column: 47, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7416, file: !361, line: 1430, column: 54)
!7422 = !DILocation(line: 1431, column: 40, scope: !7421)
!7423 = !DILocation(line: 1431, column: 32, scope: !7421)
!7424 = !DILocation(line: 1431, column: 63, scope: !7421)
!7425 = !DILocation(line: 1431, column: 55, scope: !7421)
!7426 = !DILocation(line: 1431, column: 53, scope: !7421)
!7427 = !DILocation(line: 1432, column: 40, scope: !7421)
!7428 = !DILocation(line: 1432, column: 34, scope: !7421)
!7429 = !DILocation(line: 1432, column: 26, scope: !7421)
!7430 = !DILocation(line: 1432, column: 57, scope: !7421)
!7431 = !DILocation(line: 1432, column: 67, scope: !7421)
!7432 = !DILocation(line: 1432, column: 65, scope: !7421)
!7433 = !DILocation(line: 1432, column: 48, scope: !7421)
!7434 = !DILocation(line: 1432, column: 46, scope: !7421)
!7435 = !DILocation(line: 1431, column: 65, scope: !7421)
!7436 = !DILocation(line: 1433, column: 29, scope: !7421)
!7437 = !DILocation(line: 1433, column: 21, scope: !7421)
!7438 = !DILocation(line: 1432, column: 71, scope: !7421)
!7439 = !DILocation(line: 1431, column: 25, scope: !7421)
!7440 = !DILocation(line: 1431, column: 23, scope: !7421)
!7441 = !DILocation(line: 1434, column: 17, scope: !7421)
!7442 = !DILocation(line: 1434, column: 26, scope: !7443)
!7443 = !DILexicalBlockFile(scope: !7444, file: !361, discriminator: 1)
!7444 = distinct !DILexicalBlock(scope: !7445, file: !361, line: 1434, column: 26)
!7445 = distinct !DILexicalBlock(scope: !7421, file: !361, line: 1434, column: 20)
!7446 = !DILocation(line: 1434, column: 32, scope: !7444)
!7447 = !DILocation(line: 1434, column: 26, scope: !7445)
!7448 = !DILocation(line: 1434, column: 38, scope: !7449)
!7449 = !DILexicalBlockFile(scope: !7444, file: !361, discriminator: 2)
!7450 = !DILocation(line: 1434, column: 116, scope: !7451)
!7451 = !DILexicalBlockFile(scope: !7452, file: !361, discriminator: 4)
!7452 = distinct !DILexicalBlock(scope: !7444, file: !361, line: 1434, column: 41)
!7453 = !DILocation(line: 1434, column: 123, scope: !7452)
!7454 = !DILocation(line: 1434, column: 100, scope: !7452)
!7455 = !DILocation(line: 1434, column: 80, scope: !7452)
!7456 = !DILocation(line: 1434, column: 87, scope: !7452)
!7457 = !DILocation(line: 1434, column: 98, scope: !7452)
!7458 = !DILocation(line: 1434, column: 132, scope: !7452)
!7459 = !DILocation(line: 1434, column: 132, scope: !7460)
!7460 = !DILexicalBlockFile(scope: !7452, file: !361, discriminator: 5)
!7461 = !DILocation(line: 1434, column: 132, scope: !7462)
!7462 = !DILexicalBlockFile(scope: !7452, file: !361, discriminator: 6)
!7463 = !DILocation(line: 1434, column: 154, scope: !7464)
!7464 = !DILexicalBlockFile(scope: !7465, file: !361, discriminator: 3)
!7465 = distinct !DILexicalBlock(scope: !7444, file: !361, line: 1434, column: 154)
!7466 = !DILocation(line: 1434, column: 160, scope: !7465)
!7467 = !DILocation(line: 1434, column: 154, scope: !7444)
!7468 = !DILocation(line: 1434, column: 166, scope: !7469)
!7469 = !DILexicalBlockFile(scope: !7465, file: !361, discriminator: 8)
!7470 = !DILocation(line: 1434, column: 232, scope: !7471)
!7471 = !DILexicalBlockFile(scope: !7472, file: !361, discriminator: 10)
!7472 = distinct !DILexicalBlock(scope: !7465, file: !361, line: 1434, column: 169)
!7473 = !DILocation(line: 1434, column: 239, scope: !7472)
!7474 = !DILocation(line: 1434, column: 222, scope: !7472)
!7475 = !DILocation(line: 1434, column: 202, scope: !7472)
!7476 = !DILocation(line: 1434, column: 209, scope: !7472)
!7477 = !DILocation(line: 1434, column: 172, scope: !7472)
!7478 = !DILocation(line: 1434, column: 220, scope: !7472)
!7479 = !DILocation(line: 1434, column: 248, scope: !7472)
!7480 = !DILocation(line: 1434, column: 248, scope: !7481)
!7481 = !DILexicalBlockFile(scope: !7472, file: !361, discriminator: 11)
!7482 = !DILocation(line: 1434, column: 248, scope: !7483)
!7483 = !DILexicalBlockFile(scope: !7472, file: !361, discriminator: 12)
!7484 = !DILocation(line: 1434, column: 270, scope: !7485)
!7485 = !DILexicalBlockFile(scope: !7486, file: !361, discriminator: 9)
!7486 = distinct !DILexicalBlock(scope: !7465, file: !361, line: 1434, column: 270)
!7487 = !DILocation(line: 1434, column: 276, scope: !7486)
!7488 = !DILocation(line: 1434, column: 270, scope: !7465)
!7489 = !DILocation(line: 1434, column: 282, scope: !7490)
!7490 = !DILexicalBlockFile(scope: !7486, file: !361, discriminator: 13)
!7491 = !DILocation(line: 1434, column: 334, scope: !7492)
!7492 = !DILexicalBlockFile(scope: !7493, file: !361, discriminator: 15)
!7493 = distinct !DILexicalBlock(scope: !7486, file: !361, line: 1434, column: 285)
!7494 = !DILocation(line: 1434, column: 341, scope: !7493)
!7495 = !DILocation(line: 1434, column: 327, scope: !7493)
!7496 = !DILocation(line: 1434, column: 307, scope: !7493)
!7497 = !DILocation(line: 1434, column: 313, scope: !7493)
!7498 = !DILocation(line: 1434, column: 287, scope: !7493)
!7499 = !DILocation(line: 1434, column: 325, scope: !7493)
!7500 = !DILocation(line: 1434, column: 395, scope: !7493)
!7501 = !DILocation(line: 1434, column: 402, scope: !7493)
!7502 = !DILocation(line: 1434, column: 408, scope: !7493)
!7503 = !DILocation(line: 1434, column: 388, scope: !7493)
!7504 = !DILocation(line: 1434, column: 368, scope: !7493)
!7505 = !DILocation(line: 1434, column: 374, scope: !7493)
!7506 = !DILocation(line: 1434, column: 348, scope: !7493)
!7507 = !DILocation(line: 1434, column: 386, scope: !7493)
!7508 = !DILocation(line: 1434, column: 459, scope: !7493)
!7509 = !DILocation(line: 1434, column: 466, scope: !7493)
!7510 = !DILocation(line: 1434, column: 472, scope: !7493)
!7511 = !DILocation(line: 1434, column: 452, scope: !7493)
!7512 = !DILocation(line: 1434, column: 432, scope: !7493)
!7513 = !DILocation(line: 1434, column: 438, scope: !7493)
!7514 = !DILocation(line: 1434, column: 414, scope: !7493)
!7515 = !DILocation(line: 1434, column: 450, scope: !7493)
!7516 = !DILocation(line: 1434, column: 479, scope: !7493)
!7517 = !DILocation(line: 1434, column: 479, scope: !7518)
!7518 = !DILexicalBlockFile(scope: !7493, file: !361, discriminator: 16)
!7519 = !DILocation(line: 1434, column: 479, scope: !7520)
!7520 = !DILexicalBlockFile(scope: !7493, file: !361, discriminator: 17)
!7521 = !DILocation(line: 1434, column: 497, scope: !7522)
!7522 = !DILexicalBlockFile(scope: !7486, file: !361, discriminator: 14)
!7523 = !DILocation(line: 1434, column: 567, scope: !7524)
!7524 = !DILexicalBlockFile(scope: !7525, file: !361, discriminator: 18)
!7525 = distinct !DILexicalBlock(scope: !7486, file: !361, line: 1434, column: 500)
!7526 = !DILocation(line: 1434, column: 535, scope: !7525)
!7527 = !DILocation(line: 1434, column: 542, scope: !7525)
!7528 = !DILocation(line: 1434, column: 503, scope: !7525)
!7529 = !DILocation(line: 1434, column: 553, scope: !7525)
!7530 = !DILocation(line: 1434, column: 577, scope: !7525)
!7531 = !DILocation(line: 1434, column: 577, scope: !7532)
!7532 = !DILexicalBlockFile(scope: !7525, file: !361, discriminator: 19)
!7533 = !DILocation(line: 1434, column: 590, scope: !7534)
!7534 = !DILexicalBlockFile(scope: !7445, file: !361, discriminator: 7)
!7535 = !DILocation(line: 1434, column: 590, scope: !7536)
!7536 = !DILexicalBlockFile(scope: !7445, file: !361, discriminator: 20)
!7537 = !DILocation(line: 1435, column: 24, scope: !7421)
!7538 = !DILocation(line: 1435, column: 21, scope: !7421)
!7539 = !DILocation(line: 1436, column: 13, scope: !7421)
!7540 = !DILocation(line: 1430, column: 50, scope: !7416)
!7541 = !DILocation(line: 1430, column: 13, scope: !7416)
!7542 = !DILocation(line: 1437, column: 18, scope: !7411)
!7543 = !DILocation(line: 1437, column: 15, scope: !7411)
!7544 = !DILocation(line: 1389, column: 5, scope: !1053)
!7545 = !DILocation(line: 1441, column: 16, scope: !1019)
!7546 = !DILocation(line: 1441, column: 5, scope: !1019)
!7547 = !DILocation(line: 1442, column: 16, scope: !1019)
!7548 = !DILocation(line: 1442, column: 5, scope: !1019)
!7549 = !DILocation(line: 1443, column: 12, scope: !1019)
!7550 = !DILocation(line: 1443, column: 5, scope: !1019)
!7551 = !DILocation(line: 1444, column: 1, scope: !1019)
!7552 = !DILocation(line: 1251, column: 9, scope: !1059)
!7553 = !DILocation(line: 1251, column: 16, scope: !1059)
!7554 = !DILocation(line: 1253, column: 5, scope: !1059)
!7555 = !DILocation(line: 1253, column: 12, scope: !7556)
!7556 = !DILexicalBlockFile(scope: !7557, file: !361, discriminator: 2)
!7557 = !DILexicalBlockFile(scope: !1059, file: !361, discriminator: 1)
!7558 = !DILocation(line: 1253, column: 14, scope: !1059)
!7559 = !DILocation(line: 1254, column: 9, scope: !1066)
!7560 = !DILocation(line: 1254, column: 13, scope: !1066)
!7561 = !DILocation(line: 1254, column: 19, scope: !1066)
!7562 = !DILocation(line: 1254, column: 23, scope: !1066)
!7563 = !DILocation(line: 1254, column: 21, scope: !1066)
!7564 = !DILocation(line: 1255, column: 13, scope: !1066)
!7565 = !DILocation(line: 1255, column: 11, scope: !1066)
!7566 = !DILocation(line: 1256, column: 13, scope: !1066)
!7567 = !DILocation(line: 1256, column: 11, scope: !1066)
!7568 = !DILocation(line: 1257, column: 5, scope: !1059)
!7569 = !DILocation(line: 1258, column: 12, scope: !1059)
!7570 = !DILocation(line: 1258, column: 5, scope: !1059)
