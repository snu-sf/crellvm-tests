; ModuleID = 'programs_new/Python-new/_ctypes.bc.ll'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, {}*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, {}*, i64, {}*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._object = type { i64, %struct._typeobject* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, {}* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyMemberDef = type { i8*, i32, i64, i32, i8* }
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyModuleDef = type { %struct.PyModuleDef_Base, i8*, i8*, i64, %struct.PyMethodDef*, i32 (%struct._object*)*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, void (i8*)* }
%struct.PyModuleDef_Base = type { %struct._object, %struct._object* ()*, i64, %struct._object* }
%struct._ffi_type = type { i64, i16, i16, %struct._ffi_type** }
%struct._Py_atomic_address = type { i8* }
%struct._Py_Identifier = type { %struct._Py_Identifier*, i8*, %struct._object* }
%struct.DictRemoverObject = type { %struct._object, %struct._object*, %struct._object* }
%struct._PyWeakReference = type { %struct._object, %struct._object*, %struct._object*, i64, %struct._PyWeakReference*, %struct._PyWeakReference* }
%struct.StgDictObject = type { %struct.PyDictObject, i64, i64, i64, %struct._ffi_type, %struct._object*, %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, i64)*, %struct.tagPyCArgObject* (%struct.tagCDataObject*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i32, i8*, i32, i64* }
%struct.PyDictObject = type { %struct._object, i64, %struct._dictkeysobject*, %struct._object** }
%struct._dictkeysobject = type opaque
%struct.tagPyCArgObject = type { %struct._object, %struct._ffi_type*, i8, %union.anon, %struct._object*, i64 }
%union.anon = type { x86_fp80 }
%struct.tagCDataObject = type { %struct._object, i8*, i32, %struct.tagCDataObject*, i64, i64, i64, %struct._object*, %union.value }
%union.value = type { x86_fp80 }
%struct.fielddesc = type { i8, %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, i64)*, %struct._ffi_type*, %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, i64)* }
%struct.PyCFuncPtrObject = type { %struct._object, i8*, i32, %struct.tagCDataObject*, i64, i64, i64, %struct._object*, %union.value, %struct.CThunkObject*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object* }
%struct.CThunkObject = type { %struct.PyVarObject, %struct.ffi_closure*, i8*, %struct.ffi_cif, i32, %struct._object*, %struct._object*, %struct._object*, %struct._object* (i8*, %struct._object*, i64)*, %struct._ffi_type*, [1 x %struct._ffi_type*] }
%struct.ffi_closure = type { [24 x i8], %struct.ffi_cif*, void (%struct.ffi_cif*, i8*, i8**, i8*)*, i8* }
%struct.ffi_cif = type { i32, i32, %struct._ffi_type**, %struct._ffi_type*, i32, i32 }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }
%struct._ts = type { %struct._ts*, %struct._ts*, %struct._is*, %struct._frame*, i32, i8, i8, i32, i32, i32 (%struct._object*, %struct._frame*, i32, %struct._object*)*, i32 (%struct._object*, %struct._frame*, i32, %struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i32, %struct._object*, i64, i32, %struct._object*, void (i8*)*, i8* }
%struct._is = type { %struct._is*, %struct._ts*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i32, i32, i32, %struct._object* }
%struct._frame = type opaque
%struct.PyListObject = type { %struct.PyVarObject, %struct._object**, i64 }
%struct.PySliceObject = type { %struct._object, %struct._object*, %struct._object*, %struct._object* }

@_PyWeakref_ProxyType = external global %struct._typeobject, align 8
@_PyWeakref_CallableProxyType = external global %struct._typeobject, align 8
@_Py_NoneStruct = external global %struct._object, align 8
@.str = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%zd,\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"%zd)\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"_ctypes.PyCStructType\00", align 1
@CDataType_as_sequence = internal global %struct.PySequenceMethods { i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, i64)* @CDataType_repeat, %struct._object* (%struct._object*, i64)* null, i8* null, i32 (%struct._object*, i64, %struct._object*)* null, i8* null, i32 (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, i64)* null }, align 8
@.str.4 = private unnamed_addr constant [31 x i8] c"metatype for the CData Objects\00", align 1
@CDataType_methods = internal global [6 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @CDataType_from_param, i32 8, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @from_param_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @CDataType_from_address, i32 8, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @from_address_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @CDataType_from_buffer, i32 1, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @from_buffer_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.56, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @CDataType_from_buffer_copy, i32 1, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @from_buffer_copy_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @CDataType_in_dll, i32 1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @in_dll_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@PyCStructType_Type = global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i32 0, i32 0), i64 0, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* @CDataType_as_sequence, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* @PyCStructType_setattro, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct._typeobject*, i32 (%struct._object*, i8*)*, i8*)* @CDataType_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct._typeobject*)* @CDataType_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([6 x %struct.PyMethodDef], [6 x %struct.PyMethodDef]* @CDataType_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyCStructType_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.5 = private unnamed_addr constant [23 x i8] c"_ctypes.PyCPointerType\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"metatype for the Pointer Objects\00", align 1
@PyCPointerType_methods = internal global [7 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @CDataType_from_address, i32 8, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @from_address_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @CDataType_from_buffer, i32 1, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @from_buffer_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.56, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @CDataType_from_buffer_copy, i32 1, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @from_buffer_copy_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @CDataType_in_dll, i32 1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @in_dll_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @PyCPointerType_from_param, i32 8, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @from_param_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.72, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._typeobject*, %struct._object*)* @PyCPointerType_set_type to %struct._object* (%struct._object*, %struct._object*)*), i32 8, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@PyCPointerType_Type = global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i32 0, i32 0), i64 0, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* @CDataType_as_sequence, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct._typeobject*, i32 (%struct._object*, i8*)*, i8*)* @CDataType_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct._typeobject*)* @CDataType_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([7 x %struct.PyMethodDef], [7 x %struct.PyMethodDef]* @PyCPointerType_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyCPointerType_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.7 = private unnamed_addr constant [21 x i8] c"_ctypes.PyCArrayType\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"metatype for the Array Objects\00", align 1
@PyCArrayType_Type = global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i32 0, i32 0), i64 0, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* @CDataType_as_sequence, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 263168, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([6 x %struct.PyMethodDef], [6 x %struct.PyMethodDef]* @CDataType_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyCArrayType_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.9 = private unnamed_addr constant [22 x i8] c"_ctypes.PyCSimpleType\00", align 1
@.str.10 = private unnamed_addr constant [39 x i8] c"metatype for the PyCSimpleType Objects\00", align 1
@PyCSimpleType_methods = internal global [6 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @PyCSimpleType_from_param, i32 8, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @from_param_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @CDataType_from_address, i32 8, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @from_address_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @CDataType_from_buffer, i32 1, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @from_buffer_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.56, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @CDataType_from_buffer_copy, i32 1, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @from_buffer_copy_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @CDataType_in_dll, i32 1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @in_dll_doc, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@PyCSimpleType_Type = global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i32 0, i32 0), i64 0, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* @CDataType_as_sequence, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 263168, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([6 x %struct.PyMethodDef], [6 x %struct.PyMethodDef]* @PyCSimpleType_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyCSimpleType_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.11 = private unnamed_addr constant [23 x i8] c"_ctypes.PyCFuncPtrType\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"metatype for C function pointers\00", align 1
@PyCFuncPtrType_Type = global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i32 0, i32 0), i64 0, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* @CDataType_as_sequence, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct._typeobject*, i32 (%struct._object*, i8*)*, i8*)* @CDataType_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct._typeobject*)* @CDataType_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([6 x %struct.PyMethodDef], [6 x %struct.PyMethodDef]* @CDataType_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyCFuncPtrType_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.13 = private unnamed_addr constant [15 x i8] c"_ctypes._CData\00", align 1
@PyCData_as_buffer = internal global %struct.PyBufferProcs { i32 (%struct._object*, %struct.bufferinfo*, i32)* @PyCData_NewGetBuffer, void (%struct._object*, %struct.bufferinfo*)* null }, align 8
@.str.14 = private unnamed_addr constant [19 x i8] c"XXX to be provided\00", align 1
@PyCData_methods = internal global [4 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.115, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @PyCData_from_outparam, i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.116, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @PyCData_reduce, i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.117, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @PyCData_setstate, i32 1, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@PyCData_members = internal global [4 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.122, i32 0, i32 0), i32 6, i64 32, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.123, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.124, i32 0, i32 0), i32 1, i64 24, i32 1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.125, i32 0, i32 0) }, %struct.PyMemberDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.126, i32 0, i32 0), i32 6, i64 64, i32 1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.127, i32 0, i32 0) }, %struct.PyMemberDef zeroinitializer], align 16
@PyCData_Type = global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i32 0, i32 0), i64 96, i64 0, void (%struct._object*)* @PyCData_dealloc, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* @PyCData_nohash, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* @PyCData_as_buffer, i64 263168, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.tagCDataObject*, i32 (%struct._object*, i8*)*, i8*)* @PyCData_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.tagCDataObject*)* @PyCData_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([4 x %struct.PyMethodDef], [4 x %struct.PyMethodDef]* @PyCData_methods, i32 0, i32 0), %struct.PyMemberDef* getelementptr inbounds ([4 x %struct.PyMemberDef], [4 x %struct.PyMemberDef]* @PyCData_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_TypeError = external global %struct._object*, align 8
@.str.15 = private unnamed_addr constant [15 x i8] c"abstract class\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"not a ctype instance\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"_ctypes.PyCFuncPtr\00", align 1
@PyCFuncPtr_as_number = internal global %struct.PyNumberMethods { %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, i32 (%struct._object*)* bitcast (i32 (%struct.PyCFuncPtrObject*)* @PyCFuncPtr_bool to i32 (%struct._object*)*), %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null }, align 8
@.str.18 = private unnamed_addr constant [17 x i8] c"Function Pointer\00", align 1
@PyCFuncPtr_getsets = internal global [4 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.145, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyCFuncPtrObject*)* @PyCFuncPtr_get_errcheck to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.PyCFuncPtrObject*, %struct._object*)* @PyCFuncPtr_set_errcheck to i32 (%struct._object*, %struct._object*, i8*)*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.146, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.147, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyCFuncPtrObject*)* @PyCFuncPtr_get_restype to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.PyCFuncPtrObject*, %struct._object*)* @PyCFuncPtr_set_restype to i32 (%struct._object*, %struct._object*, i8*)*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.148, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.149, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.PyCFuncPtrObject*)* @PyCFuncPtr_get_argtypes to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.PyCFuncPtrObject*, %struct._object*)* @PyCFuncPtr_set_argtypes to i32 (%struct._object*, %struct._object*, i8*)*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.150, i32 0, i32 0), i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@PyCFuncPtr_Type = global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i32 0, i32 0), i64 160, i64 0, void (%struct._object*)* bitcast (void (%struct.PyCFuncPtrObject*)* @PyCFuncPtr_dealloc to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.PyCFuncPtrObject*)* @PyCFuncPtr_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* @PyCFuncPtr_as_number, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* bitcast (%struct._object* (%struct.PyCFuncPtrObject*, %struct._object*, %struct._object*)* @PyCFuncPtr_call to %struct._object* (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* @PyCData_as_buffer, i64 263168, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.PyCFuncPtrObject*, i32 (%struct._object*, i8*)*, i8*)* @PyCFuncPtr_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.PyCFuncPtrObject*)* @PyCFuncPtr_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([4 x %struct.PyGetSetDef], [4 x %struct.PyGetSetDef]* @PyCFuncPtr_getsets, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyCFuncPtr_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.19 = private unnamed_addr constant [14 x i8] c"_ctypes.Array\00", align 1
@Array_as_sequence = internal global %struct.PySequenceMethods { i64 (%struct._object*)* @Array_length, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, i64)* null, %struct._object* (%struct._object*, i64)* @Array_item, i8* null, i32 (%struct._object*, i64, %struct._object*)* @Array_ass_item, i8* null, i32 (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, i64)* null }, align 8
@PyCArray_Type = global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i32 0, i32 0), i64 96, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* @Array_as_sequence, %struct.PyMappingMethods* bitcast ({ i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }* @Array_as_mapping to %struct.PyMappingMethods*), i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* @PyCData_as_buffer, i64 263168, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.tagCDataObject*, i32 (%struct._object*, i8*)*, i8*)* @PyCData_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.tagCDataObject*)* @PyCData_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.tagCDataObject*, %struct._object*, %struct._object*)* @Array_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @GenericPyCData_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyCArrayType_from_ctype.cache = internal global %struct._object* null, align 8
@.str.20 = private unnamed_addr constant [23 x i8] c"Expected a type object\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"%.200s_Array_%ld\00", align 1
@.str.22 = private unnamed_addr constant [14 x i8] c"s(O){s:n,s:O}\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"_length_\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"_type_\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"_ctypes._Pointer\00", align 1
@Pointer_as_number = internal global %struct.PyNumberMethods { %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, i32 (%struct._object*)* bitcast (i32 (%struct.tagCDataObject*)* @Pointer_bool to i32 (%struct._object*)*), %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null }, align 8
@Pointer_as_sequence = internal global %struct.PySequenceMethods { i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, i64)* null, %struct._object* (%struct._object*, i64)* @Pointer_item, i8* null, i32 (%struct._object*, i64, %struct._object*)* @Pointer_ass_item, i8* null, i32 (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, i64)* null }, align 8
@Pointer_getsets = internal global [2 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.183, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.tagCDataObject*, i8*)* @Pointer_get_contents to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.tagCDataObject*, %struct._object*, i8*)* @Pointer_set_contents to i32 (%struct._object*, %struct._object*, i8*)*), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.184, i32 0, i32 0), i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@PyCPointer_Type = global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i64 96, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* @Pointer_as_number, %struct.PySequenceMethods* @Pointer_as_sequence, %struct.PyMappingMethods* bitcast ({ i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }* @Pointer_as_mapping to %struct.PyMappingMethods*), i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* @PyCData_as_buffer, i64 263168, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.tagCDataObject*, i32 (%struct._object*, i8*)*, i8*)* @PyCData_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.tagCDataObject*)* @PyCData_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([2 x %struct.PyGetSetDef], [2 x %struct.PyGetSetDef]* @Pointer_getsets, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.tagCDataObject*, %struct._object*, %struct._object*)* @Pointer_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @Pointer_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@_ctypesmodule = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, %struct._typeobject* null }, %struct._object* ()* null, i64 0, %struct._object* null }, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @module_docs, i32 0, i32 0), i64 -1, %struct.PyMethodDef* getelementptr inbounds ([0 x %struct.PyMethodDef], [0 x %struct.PyMethodDef]* @_ctypes_module_methods, i32 0, i32 0), i32 (%struct._object*)* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, void (i8*)* null }, align 8
@_ctypes_ptrtype_cache = common global %struct._object* null, align 8
@.str.26 = private unnamed_addr constant [20 x i8] c"_pointer_type_cache\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"_unpickle\00", align 1
@_unpickle = internal global %struct._object* null, align 8
@PyCArg_Type = external global %struct._typeobject, align 8
@PyCThunk_Type = external global %struct._typeobject, align 8
@PyDict_Type = external global %struct._typeobject, align 8
@PyCStgDict_Type = external global %struct._typeobject, align 8
@PyType_Type = external global %struct._typeobject, align 8
@.str.28 = private unnamed_addr constant [10 x i8] c"Structure\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"Union\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"_Pointer\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"Array\00", align 1
@.str.32 = private unnamed_addr constant [13 x i8] c"_SimpleCData\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"CFuncPtr\00", align 1
@PyCField_Type = external global %struct._typeobject, align 8
@.str.34 = private unnamed_addr constant [15 x i8] c"FUNCFLAG_CDECL\00", align 1
@.str.35 = private unnamed_addr constant [19 x i8] c"FUNCFLAG_USE_ERRNO\00", align 1
@.str.36 = private unnamed_addr constant [23 x i8] c"FUNCFLAG_USE_LASTERROR\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c"FUNCFLAG_PYTHONAPI\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"__version__\00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"1.1.0\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"_memmove_addr\00", align 1
@.str.41 = private unnamed_addr constant [13 x i8] c"_memset_addr\00", align 1
@.str.42 = private unnamed_addr constant [16 x i8] c"_string_at_addr\00", align 1
@.str.43 = private unnamed_addr constant [11 x i8] c"_cast_addr\00", align 1
@.str.44 = private unnamed_addr constant [17 x i8] c"_wstring_at_addr\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"RTLD_LOCAL\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"RTLD_GLOBAL\00", align 1
@.str.47 = private unnamed_addr constant [21 x i8] c"ctypes.ArgumentError\00", align 1
@PyExc_ArgError = common global %struct._object* null, align 8
@.str.48 = private unnamed_addr constant [14 x i8] c"ArgumentError\00", align 1
@.str.49 = private unnamed_addr constant [20 x i8] c"_ctypes.DictRemover\00", align 1
@.str.50 = private unnamed_addr constant [32 x i8] c"deletes a key from a dictionary\00", align 1
@DictRemover_Type = internal global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.49, i32 0, i32 0), i64 32, i64 0, void (%struct._object*)* @_DictRemover_dealloc, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @_DictRemover_call, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 262144, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.50, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* null, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_ValueError = external global %struct._object*, align 8
@.str.51 = private unnamed_addr constant [35 x i8] c"Array length must be >= 0, not %zd\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"_fields_\00", align 1
@.str.53 = private unnamed_addr constant [11 x i8] c"from_param\00", align 1
@from_param_doc = internal global [56 x i8] c"Convert a Python object into a function call parameter.\00", align 16
@.str.54 = private unnamed_addr constant [13 x i8] c"from_address\00", align 1
@from_address_doc = internal global [83 x i8] c"C.from_address(integer) -> C instance\0Aaccess a C instance at the specified address\00", align 16
@.str.55 = private unnamed_addr constant [12 x i8] c"from_buffer\00", align 1
@from_buffer_doc = internal global [90 x i8] c"C.from_buffer(object, offset=0) -> C instance\0Acreate a C instance from a writeable buffer\00", align 16
@.str.56 = private unnamed_addr constant [17 x i8] c"from_buffer_copy\00", align 1
@from_buffer_copy_doc = internal global [94 x i8] c"C.from_buffer_copy(object, offset=0) -> C instance\0Acreate a C instance from a readable buffer\00", align 16
@.str.57 = private unnamed_addr constant [7 x i8] c"in_dll\00", align 1
@in_dll_doc = internal global [63 x i8] c"C.in_dll(dll, name) -> C instance\0Aaccess a C instance in a dll\00", align 16
@.str.58 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.59 = private unnamed_addr constant [46 x i8] c"expected %s instance instead of pointer to %s\00", align 1
@.str.60 = private unnamed_addr constant [15 x i8] c"_as_parameter_\00", align 1
@.str.61 = private unnamed_addr constant [35 x i8] c"expected %s instance instead of %s\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"integer expected\00", align 1
@.str.63 = private unnamed_addr constant [16 x i8] c"O|n:from_buffer\00", align 1
@.str.64 = private unnamed_addr constant [26 x i8] c"offset cannot be negative\00", align 1
@.str.65 = private unnamed_addr constant [58 x i8] c"Buffer size too small (%zd instead of at least %zd bytes)\00", align 1
@.str.66 = private unnamed_addr constant [10 x i8] c"Os:in_dll\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"_handle\00", align 1
@.str.68 = private unnamed_addr constant [64 x i8] c"the _handle attribute of the second argument must be an integer\00", align 1
@.str.69 = private unnamed_addr constant [53 x i8] c"could not convert the _handle attribute to a pointer\00", align 1
@.str.70 = private unnamed_addr constant [11 x i8] c"_abstract_\00", align 1
@.str.71 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.72 = private unnamed_addr constant [9 x i8] c"set_type\00", align 1
@.str.73 = private unnamed_addr constant [24 x i8] c"expected CData instance\00", align 1
@ffi_type_pointer = external global %struct._ffi_type, align 8
@.str.74 = private unnamed_addr constant [22 x i8] c"_type_ must be a type\00", align 1
@.str.75 = private unnamed_addr constant [30 x i8] c"_type_ must have storage info\00", align 1
@.str.76 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str.77 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@PyExc_AttributeError = external global %struct._object*, align 8
@.str.78 = private unnamed_addr constant [75 x i8] c"class must define a '_length_' attribute, which must be a positive integer\00", align 1
@PyExc_OverflowError = external global %struct._object*, align 8
@.str.79 = private unnamed_addr constant [38 x i8] c"The '_length_' attribute is too large\00", align 1
@.str.80 = private unnamed_addr constant [39 x i8] c"class must define a '_type_' attribute\00", align 1
@.str.81 = private unnamed_addr constant [16 x i8] c"array too large\00", align 1
@.str.82 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@CharArray_getsets = internal global [3 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.84, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.tagCDataObject*)* @CharArray_get_raw to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.tagCDataObject*, %struct._object*)* @CharArray_set_raw to i32 (%struct._object*, %struct._object*, i8*)*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.tagCDataObject*)* @CharArray_get_value to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.tagCDataObject*, %struct._object*)* @CharArray_set_value to i32 (%struct._object*, %struct._object*, i8*)*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.86, i32 0, i32 0), i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.83 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@WCharArray_getsets = internal global [2 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.tagCDataObject*)* @WCharArray_get_value to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.tagCDataObject*, %struct._object*)* @WCharArray_set_value to i32 (%struct._object*, %struct._object*, i8*)*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.86, i32 0, i32 0), i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@.str.84 = private unnamed_addr constant [4 x i8] c"raw\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.86 = private unnamed_addr constant [13 x i8] c"string value\00", align 1
@.str.87 = private unnamed_addr constant [16 x i8] c"string too long\00", align 1
@.str.88 = private unnamed_addr constant [23 x i8] c"can't delete attribute\00", align 1
@.str.89 = private unnamed_addr constant [38 x i8] c"bytes expected instead of %s instance\00", align 1
@.str.90 = private unnamed_addr constant [47 x i8] c"unicode string expected instead of %s instance\00", align 1
@_PyThreadState_Current = external global %struct._Py_atomic_address, align 8
@_Py_CheckRecursionLimit = external global i32, align 4
@.str.91 = private unnamed_addr constant [32 x i8] c"while processing _as_parameter_\00", align 1
@.str.92 = private unnamed_addr constant [11 x i8] c"wrong type\00", align 1
@.str.93 = private unnamed_addr constant [46 x i8] c"class must define a '_type_' string attribute\00", align 1
@.str.94 = private unnamed_addr constant [74 x i8] c"class must define a '_type_' attribute which must be a string of length 1\00", align 1
@SIMPLE_TYPE_CHARS = internal global i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.101, i32 0, i32 0), align 8
@.str.95 = private unnamed_addr constant [103 x i8] c"class must define a '_type_' attribute which must be\0Aa single character string containing one of '%s'.\00", align 1
@.str.96 = private unnamed_addr constant [26 x i8] c"_type_ '%s' not supported\00", align 1
@.str.97 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@c_char_p_method = internal global %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @c_char_p_from_param, i32 8, i8* null }, align 8
@c_wchar_p_method = internal global %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @c_wchar_p_from_param, i32 8, i8* null }, align 8
@c_void_p_method = internal global %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @c_void_p_from_param, i32 8, i8* null }, align 8
@.str.98 = private unnamed_addr constant [13 x i8] c"__ctype_be__\00", align 1
@.str.99 = private unnamed_addr constant [13 x i8] c"__ctype_le__\00", align 1
@.str.100 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.101 = private unnamed_addr constant [23 x i8] c"cbBhHiIlLdfuzZqQPXOv?g\00", align 1
@.str.102 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@.str.103 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@PyByteArray_Type = external global %struct._typeobject, align 8
@CreateSwappedType.suffix = internal global %struct._object* null, align 8
@.str.104 = private unnamed_addr constant [4 x i8] c"_be\00", align 1
@.str.105 = private unnamed_addr constant [4 x i8] c"X{}\00", align 1
@.str.106 = private unnamed_addr constant [8 x i8] c"_flags_\00", align 1
@.str.107 = private unnamed_addr constant [51 x i8] c"class must define _flags_ which must be an integer\00", align 1
@.str.108 = private unnamed_addr constant [11 x i8] c"_argtypes_\00", align 1
@.str.109 = private unnamed_addr constant [10 x i8] c"_restype_\00", align 1
@.str.110 = private unnamed_addr constant [46 x i8] c"_restype_ must be a type, a callable, or None\00", align 1
@.str.111 = private unnamed_addr constant [15 x i8] c"_check_retval_\00", align 1
@.str.112 = private unnamed_addr constant [39 x i8] c"_argtypes_ must be a sequence of types\00", align 1
@.str.113 = private unnamed_addr constant [48 x i8] c"item %zd in _argtypes_ has no from_param method\00", align 1
@.str.114 = private unnamed_addr constant [16 x i8] c"unhashable type\00", align 1
@.str.115 = private unnamed_addr constant [25 x i8] c"__ctypes_from_outparam__\00", align 1
@.str.116 = private unnamed_addr constant [11 x i8] c"__reduce__\00", align 1
@.str.117 = private unnamed_addr constant [13 x i8] c"__setstate__\00", align 1
@.str.118 = private unnamed_addr constant [53 x i8] c"ctypes objects containing pointers cannot be pickled\00", align 1
@.str.119 = private unnamed_addr constant [9 x i8] c"O(O(NN))\00", align 1
@.str.120 = private unnamed_addr constant [9 x i8] c"__dict__\00", align 1
@.str.121 = private unnamed_addr constant [4 x i8] c"Os#\00", align 1
@.str.122 = private unnamed_addr constant [9 x i8] c"_b_base_\00", align 1
@.str.123 = private unnamed_addr constant [16 x i8] c"the base object\00", align 1
@.str.124 = private unnamed_addr constant [14 x i8] c"_b_needsfree_\00", align 1
@.str.125 = private unnamed_addr constant [42 x i8] c"whether the object owns the memory or not\00", align 1
@.str.126 = private unnamed_addr constant [9 x i8] c"_objects\00", align 1
@.str.127 = private unnamed_addr constant [50 x i8] c"internal objects tree (NEVER CHANGE THIS OBJECT!)\00", align 1
@PyExc_RuntimeError = external global %struct._object*, align 8
@.str.128 = private unnamed_addr constant [6 x i8] c"(%s) \00", align 1
@.str.129 = private unnamed_addr constant [29 x i8] c"expected %s instance, got %s\00", align 1
@.str.130 = private unnamed_addr constant [55 x i8] c"incompatible types, %s instance instead of %s instance\00", align 1
@.str.131 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@.str.132 = private unnamed_addr constant [33 x i8] c"ctypes object structure too deep\00", align 1
@.str.133 = private unnamed_addr constant [4 x i8] c":%x\00", align 1
@.str.134 = private unnamed_addr constant [18 x i8] c"<%s object at %p>\00", align 1
@.str.135 = private unnamed_addr constant [54 x i8] c"this function takes at least %d argument%s (%d given)\00", align 1
@.str.136 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.137 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.138 = private unnamed_addr constant [45 x i8] c"this function takes %d argument%s (%d given)\00", align 1
@.str.139 = private unnamed_addr constant [24 x i8] c"NULL stgdict unexpected\00", align 1
@.str.140 = private unnamed_addr constant [51 x i8] c"%s 'out' parameter must be passed as default value\00", align 1
@.str.141 = private unnamed_addr constant [33 x i8] c"paramflag %d not yet implemented\00", align 1
@.str.142 = private unnamed_addr constant [44 x i8] c"call takes exactly %d arguments (%zd given)\00", align 1
@.str.143 = private unnamed_addr constant [31 x i8] c"required argument '%S' missing\00", align 1
@.str.144 = private unnamed_addr constant [21 x i8] c"not enough arguments\00", align 1
@_build_result.PyId___ctypes_from_outparam__ = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.115, i32 0, i32 0), %struct._object* null }, align 8
@.str.145 = private unnamed_addr constant [9 x i8] c"errcheck\00", align 1
@.str.146 = private unnamed_addr constant [31 x i8] c"a function to check for errors\00", align 1
@.str.147 = private unnamed_addr constant [8 x i8] c"restype\00", align 1
@.str.148 = private unnamed_addr constant [24 x i8] c"specify the result type\00", align 1
@.str.149 = private unnamed_addr constant [9 x i8] c"argtypes\00", align 1
@.str.150 = private unnamed_addr constant [27 x i8] c"specify the argument types\00", align 1
@.str.151 = private unnamed_addr constant [40 x i8] c"the errcheck attribute must be callable\00", align 1
@.str.152 = private unnamed_addr constant [44 x i8] c"restype must be a type, a callable, or None\00", align 1
@.str.153 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str.154 = private unnamed_addr constant [54 x i8] c"argument must be callable or integer function address\00", align 1
@.str.155 = private unnamed_addr constant [53 x i8] c"cannot construct instance of this class: no argtypes\00", align 1
@.str.156 = private unnamed_addr constant [4 x i8] c"O|O\00", align 1
@.str.157 = private unnamed_addr constant [4 x i8] c"O&O\00", align 1
@.str.158 = private unnamed_addr constant [40 x i8] c"function name must be string or integer\00", align 1
@.str.159 = private unnamed_addr constant [35 x i8] c"paramflags must be a tuple or None\00", align 1
@.str.160 = private unnamed_addr constant [49 x i8] c"paramflags must have the same length as argtypes\00", align 1
@.str.161 = private unnamed_addr constant [5 x i8] c"i|ZO\00", align 1
@.str.162 = private unnamed_addr constant [65 x i8] c"paramflags must be a sequence of (int [,string [,value]]) tuples\00", align 1
@.str.163 = private unnamed_addr constant [33 x i8] c"paramflag value %d not supported\00", align 1
@.str.164 = private unnamed_addr constant [4 x i8] c"PzZ\00", align 1
@.str.165 = private unnamed_addr constant [50 x i8] c"'out' parameter %d must be a pointer type, not %s\00", align 1
@PyExc_IndexError = external global %struct._object*, align 8
@.str.166 = private unnamed_addr constant [14 x i8] c"invalid index\00", align 1
@.str.167 = private unnamed_addr constant [37 x i8] c"Array does not support item deletion\00", align 1
@Array_as_mapping = internal global { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* } { i64 (%struct._object*)* @Array_length, %struct._object* (%struct._object*, %struct._object*)* @Array_subscript, i32 (%struct._object*, %struct._object*, %struct._object*)* @Array_ass_subscript }, align 8
@PySlice_Type = external global %struct._typeobject, align 8
@.str.168 = private unnamed_addr constant [25 x i8] c"indices must be integers\00", align 1
@.str.169 = private unnamed_addr constant [38 x i8] c"Can only assign sequence of same size\00", align 1
@.str.170 = private unnamed_addr constant [24 x i8] c"indices must be integer\00", align 1
@.str.171 = private unnamed_addr constant [18 x i8] c"args not a tuple?\00", align 1
@.str.172 = private unnamed_addr constant [21 x i8] c"_ctypes._SimpleCData\00", align 1
@Simple_as_number = internal global %struct.PyNumberMethods { %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, i32 (%struct._object*)* bitcast (i32 (%struct.tagCDataObject*)* @Simple_bool to i32 (%struct._object*)*), %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null }, align 8
@Simple_methods = internal global [2 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.115, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @Simple_from_outparm, i32 4, i8* null }, %struct.PyMethodDef zeroinitializer], align 16
@Simple_getsets = internal global [2 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.85, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct.tagCDataObject*)* @Simple_get_value to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* bitcast (i32 (%struct.tagCDataObject*, %struct._object*)* @Simple_set_value to i32 (%struct._object*, %struct._object*, i8*)*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.175, i32 0, i32 0), i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@Simple_Type = internal global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.172, i32 0, i32 0), i64 96, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct.tagCDataObject*)* @Simple_repr to %struct._object* (%struct._object*)*), %struct.PyNumberMethods* @Simple_as_number, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* @PyCData_as_buffer, i64 263168, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.tagCDataObject*, i32 (%struct._object*, i8*)*, i8*)* @PyCData_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.tagCDataObject*)* @PyCData_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([2 x %struct.PyMethodDef], [2 x %struct.PyMethodDef]* @Simple_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([2 x %struct.PyGetSetDef], [2 x %struct.PyGetSetDef]* @Simple_getsets, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* bitcast (i32 (%struct.tagCDataObject*, %struct._object*, %struct._object*)* @Simple_init to i32 (%struct._object*, %struct._object*, %struct._object*)*), %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @GenericPyCData_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.173 = private unnamed_addr constant [7 x i8] c"%s(%R)\00", align 1
@.str.174 = private unnamed_addr constant [17 x i8] zeroinitializer, align 1
@.str.175 = private unnamed_addr constant [14 x i8] c"current value\00", align 1
@.str.176 = private unnamed_addr constant [9 x i8] c"__init__\00", align 1
@.str.177 = private unnamed_addr constant [20 x i8] c"NULL pointer access\00", align 1
@.str.178 = private unnamed_addr constant [39 x i8] c"Pointer does not support item deletion\00", align 1
@Pointer_as_mapping = internal global { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* } { i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @Pointer_subscript, i32 (%struct._object*, %struct._object*, %struct._object*)* null }, align 8
@.str.179 = private unnamed_addr constant [26 x i8] c"slice step cannot be zero\00", align 1
@.str.180 = private unnamed_addr constant [37 x i8] c"slice start is required for step < 0\00", align 1
@.str.181 = private unnamed_addr constant [23 x i8] c"slice stop is required\00", align 1
@.str.182 = private unnamed_addr constant [32 x i8] c"Pointer indices must be integer\00", align 1
@.str.183 = private unnamed_addr constant [9 x i8] c"contents\00", align 1
@.str.184 = private unnamed_addr constant [47 x i8] c"the object this pointer points to (read-write)\00", align 1
@.str.185 = private unnamed_addr constant [26 x i8] c"expected %s instead of %s\00", align 1
@.str.186 = private unnamed_addr constant [8 x i8] c"POINTER\00", align 1
@.str.187 = private unnamed_addr constant [38 x i8] c"Cannot create instance: has no _type_\00", align 1
@.str.188 = private unnamed_addr constant [8 x i8] c"_ctypes\00", align 1
@module_docs = internal constant [57 x i8] c"Create and manipulate C compatible data types in Python.\00", align 16
@_ctypes_module_methods = external global [0 x %struct.PyMethodDef], align 8
@.str.189 = private unnamed_addr constant [18 x i8] c"_ctypes.UnionType\00", align 1
@UnionType_Type = internal global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.189, i32 0, i32 0), i64 0, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* @CDataType_as_sequence, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* @UnionType_setattro, %struct.PyBufferProcs* null, i64 279552, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct._typeobject*, i32 (%struct._object*, i8*)*, i8*)* @CDataType_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct._typeobject*)* @CDataType_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([6 x %struct.PyMethodDef], [6 x %struct.PyMethodDef]* @CDataType_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @UnionType_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.190 = private unnamed_addr constant [18 x i8] c"_ctypes.Structure\00", align 1
@.str.191 = private unnamed_addr constant [21 x i8] c"Structure base class\00", align 1
@Struct_Type = internal global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.190, i32 0, i32 0), i64 96, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* @PyCData_as_buffer, i64 263168, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.191, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.tagCDataObject*, i32 (%struct._object*, i8*)*, i8*)* @PyCData_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.tagCDataObject*)* @PyCData_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* @Struct_init, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @GenericPyCData_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.192 = private unnamed_addr constant [22 x i8] c"too many initializers\00", align 1
@.str.193 = private unnamed_addr constant [32 x i8] c"duplicate values for field '%s'\00", align 1
@.str.194 = private unnamed_addr constant [14 x i8] c"_ctypes.Union\00", align 1
@.str.195 = private unnamed_addr constant [17 x i8] c"Union base class\00", align 1
@Union_Type = internal global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.194, i32 0, i32 0), i64 96, i64 0, void (%struct._object*)* null, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* @PyCData_as_buffer, i64 263168, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.195, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* bitcast (i32 (%struct.tagCDataObject*, i32 (%struct._object*, i8*)*, i8*)* @PyCData_traverse to i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*), i32 (%struct._object*)* bitcast (i32 (%struct.tagCDataObject*)* @PyCData_clear to i32 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* @Struct_init, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @GenericPyCData_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.196 = private unnamed_addr constant [8 x i8] c"sPzUZXO\00", align 1
@.str.197 = private unnamed_addr constant [49 x i8] c"cast() argument 2 must be a pointer type, not %s\00", align 1

; Function Attrs: uwtable
define i32 @PyDict_SetItemProxy(%struct._object* %dict, %struct._object* %key, %struct._object* %item) #0 {
entry:
  %retval = alloca i32, align 4
  %dict.addr = alloca %struct._object*, align 8
  %key.addr = alloca %struct._object*, align 8
  %item.addr = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %remover = alloca %struct.DictRemoverObject*, align 8
  %proxy = alloca %struct._object*, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp15 = alloca %struct._object*, align 8
  store %struct._object* %dict, %struct._object** %dict.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %dict.addr, metadata !670, metadata !2526), !dbg !2527
  store %struct._object* %key, %struct._object** %key.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %key.addr, metadata !671, metadata !2526), !dbg !2528
  store %struct._object* %item, %struct._object** %item.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %item.addr, metadata !672, metadata !2526), !dbg !2529
  %0 = bitcast %struct._object** %obj to i8*, !dbg !2530
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2530
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !673, metadata !2526), !dbg !2531
  %1 = bitcast %struct.DictRemoverObject** %remover to i8*, !dbg !2532
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !2532
  call void @llvm.dbg.declare(metadata %struct.DictRemoverObject** %remover, metadata !674, metadata !2526), !dbg !2533
  %2 = bitcast %struct._object** %proxy to i8*, !dbg !2534
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !2534
  call void @llvm.dbg.declare(metadata %struct._object** %proxy, metadata !675, metadata !2526), !dbg !2535
  %3 = bitcast i32* %result to i8*, !dbg !2536
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !2536
  call void @llvm.dbg.declare(metadata i32* %result, metadata !676, metadata !2526), !dbg !2537
  %call = call %struct._object* @PyObject_CallObject(%struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @DictRemover_Type to %struct._typeobject*), i32 0, i32 0, i32 0), %struct._object* null), !dbg !2538
  store %struct._object* %call, %struct._object** %obj, align 8, !dbg !2539, !tbaa !2522
  %4 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2540, !tbaa !2522
  %cmp = icmp eq %struct._object* %4, null, !dbg !2542
  br i1 %cmp, label %if.then, label %if.end, !dbg !2543

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !2544
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2544

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2545, !tbaa !2522
  %6 = bitcast %struct._object* %5 to %struct.DictRemoverObject*, !dbg !2546
  store %struct.DictRemoverObject* %6, %struct.DictRemoverObject** %remover, align 8, !dbg !2547, !tbaa !2522
  %7 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !2548, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !2549
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !2550, !tbaa !2551
  %inc = add i64 %8, 1, !dbg !2550
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2550, !tbaa !2551
  %9 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !2554, !tbaa !2522
  %10 = load %struct.DictRemoverObject*, %struct.DictRemoverObject** %remover, align 8, !dbg !2555, !tbaa !2522
  %key1 = getelementptr inbounds %struct.DictRemoverObject, %struct.DictRemoverObject* %10, i32 0, i32 1, !dbg !2556
  store %struct._object* %9, %struct._object** %key1, align 8, !dbg !2557, !tbaa !2558
  %11 = load %struct._object*, %struct._object** %dict.addr, align 8, !dbg !2560, !tbaa !2522
  %ob_refcnt2 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !2561
  %12 = load i64, i64* %ob_refcnt2, align 8, !dbg !2562, !tbaa !2551
  %inc3 = add i64 %12, 1, !dbg !2562
  store i64 %inc3, i64* %ob_refcnt2, align 8, !dbg !2562, !tbaa !2551
  %13 = load %struct._object*, %struct._object** %dict.addr, align 8, !dbg !2563, !tbaa !2522
  %14 = load %struct.DictRemoverObject*, %struct.DictRemoverObject** %remover, align 8, !dbg !2564, !tbaa !2522
  %dict4 = getelementptr inbounds %struct.DictRemoverObject, %struct.DictRemoverObject* %14, i32 0, i32 2, !dbg !2565
  store %struct._object* %13, %struct._object** %dict4, align 8, !dbg !2566, !tbaa !2567
  %15 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !2568, !tbaa !2522
  %16 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2569, !tbaa !2522
  %call5 = call %struct._object* @PyWeakref_NewProxy(%struct._object* %15, %struct._object* %16), !dbg !2570
  store %struct._object* %call5, %struct._object** %proxy, align 8, !dbg !2571, !tbaa !2522
  br label %do.body, !dbg !2572

do.body:                                          ; preds = %if.end
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2573
  call void @llvm.lifetime.start(i64 8, i8* %17) #2, !dbg !2573
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !677, metadata !2526), !dbg !2575
  %18 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2576, !tbaa !2522
  store %struct._object* %18, %struct._object** %_py_decref_tmp, align 8, !dbg !2575, !tbaa !2522
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2577, !tbaa !2522
  %ob_refcnt6 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !2579
  %20 = load i64, i64* %ob_refcnt6, align 8, !dbg !2580, !tbaa !2551
  %dec = add i64 %20, -1, !dbg !2580
  store i64 %dec, i64* %ob_refcnt6, align 8, !dbg !2580, !tbaa !2551
  %cmp7 = icmp ne i64 %dec, 0, !dbg !2581
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !2582

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !2583

if.else:                                          ; preds = %do.body
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2585, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !2587
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2587, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !2589
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2589, !tbaa !2590
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2594, !tbaa !2522
  call void %23(%struct._object* %24), !dbg !2595
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2596
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !2596
  br label %do.cond, !dbg !2598

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !2599

do.end:                                           ; preds = %do.cond
  %26 = load %struct._object*, %struct._object** %proxy, align 8, !dbg !2601, !tbaa !2522
  %cmp10 = icmp eq %struct._object* %26, null, !dbg !2603
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !2604

if.then.11:                                       ; preds = %do.end
  store i32 -1, i32* %retval, !dbg !2605
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2605

if.end.12:                                        ; preds = %do.end
  %27 = load %struct._object*, %struct._object** %dict.addr, align 8, !dbg !2606, !tbaa !2522
  %28 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !2607, !tbaa !2522
  %29 = load %struct._object*, %struct._object** %proxy, align 8, !dbg !2608, !tbaa !2522
  %call13 = call i32 @PyDict_SetItem(%struct._object* %27, %struct._object* %28, %struct._object* %29), !dbg !2609
  store i32 %call13, i32* %result, align 4, !dbg !2610, !tbaa !2611
  br label %do.body.14, !dbg !2612

do.body.14:                                       ; preds = %if.end.12
  %30 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !2613
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !2613
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp15, metadata !679, metadata !2526), !dbg !2615
  %31 = load %struct._object*, %struct._object** %proxy, align 8, !dbg !2616, !tbaa !2522
  store %struct._object* %31, %struct._object** %_py_decref_tmp15, align 8, !dbg !2615, !tbaa !2522
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !2617, !tbaa !2522
  %ob_refcnt16 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !2619
  %33 = load i64, i64* %ob_refcnt16, align 8, !dbg !2620, !tbaa !2551
  %dec17 = add i64 %33, -1, !dbg !2620
  store i64 %dec17, i64* %ob_refcnt16, align 8, !dbg !2620, !tbaa !2551
  %cmp18 = icmp ne i64 %dec17, 0, !dbg !2621
  br i1 %cmp18, label %if.then.19, label %if.else.20, !dbg !2622

if.then.19:                                       ; preds = %do.body.14
  br label %if.end.23, !dbg !2623

if.else.20:                                       ; preds = %do.body.14
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !2625, !tbaa !2522
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !2627
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !2627, !tbaa !2588
  %tp_dealloc22 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !2628
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc22, align 8, !dbg !2628, !tbaa !2590
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp15, align 8, !dbg !2629, !tbaa !2522
  call void %36(%struct._object* %37), !dbg !2630
  br label %if.end.23

if.end.23:                                        ; preds = %if.else.20, %if.then.19
  %38 = bitcast %struct._object** %_py_decref_tmp15 to i8*, !dbg !2631
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !2631
  br label %do.cond.24, !dbg !2632

do.cond.24:                                       ; preds = %if.end.23
  br label %do.end.25, !dbg !2633

do.end.25:                                        ; preds = %do.cond.24
  %39 = load i32, i32* %result, align 4, !dbg !2635, !tbaa !2611
  store i32 %39, i32* %retval, !dbg !2636
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2636

cleanup:                                          ; preds = %do.end.25, %if.then.11, %if.then
  %40 = bitcast i32* %result to i8*, !dbg !2637
  call void @llvm.lifetime.end(i64 4, i8* %40) #2, !dbg !2637
  %41 = bitcast %struct._object** %proxy to i8*, !dbg !2637
  call void @llvm.lifetime.end(i64 8, i8* %41) #2, !dbg !2637
  %42 = bitcast %struct.DictRemoverObject** %remover to i8*, !dbg !2637
  call void @llvm.lifetime.end(i64 8, i8* %42) #2, !dbg !2637
  %43 = bitcast %struct._object** %obj to i8*, !dbg !2637
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !2637
  %44 = load i32, i32* %retval, !dbg !2637
  ret i32 %44, !dbg !2637
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

declare %struct._object* @PyObject_CallObject(%struct._object*, %struct._object*) #3

declare %struct._object* @PyWeakref_NewProxy(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

declare i32 @PyDict_SetItem(%struct._object*, %struct._object*, %struct._object*) #3

; Function Attrs: uwtable
define %struct._object* @PyDict_GetItemProxy(%struct._object* %dict, %struct._object* %key) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %dict.addr = alloca %struct._object*, align 8
  %key.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %item = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %dict, %struct._object** %dict.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %dict.addr, metadata !683, metadata !2526), !dbg !2638
  store %struct._object* %key, %struct._object** %key.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %key.addr, metadata !684, metadata !2526), !dbg !2639
  %0 = bitcast %struct._object** %result to i8*, !dbg !2640
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2640
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !685, metadata !2526), !dbg !2641
  %1 = bitcast %struct._object** %item to i8*, !dbg !2642
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !2642
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !686, metadata !2526), !dbg !2643
  %2 = load %struct._object*, %struct._object** %dict.addr, align 8, !dbg !2644, !tbaa !2522
  %3 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !2645, !tbaa !2522
  %call = call %struct._object* @PyDict_GetItem(%struct._object* %2, %struct._object* %3), !dbg !2646
  store %struct._object* %call, %struct._object** %item, align 8, !dbg !2643, !tbaa !2522
  %4 = load %struct._object*, %struct._object** %item, align 8, !dbg !2647, !tbaa !2522
  %cmp = icmp eq %struct._object* %4, null, !dbg !2649
  br i1 %cmp, label %if.then, label %if.end, !dbg !2650

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2651
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2651

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %item, align 8, !dbg !2652, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !2654
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2654, !tbaa !2588
  %cmp1 = icmp eq %struct._typeobject* %6, @_PyWeakref_ProxyType, !dbg !2655
  br i1 %cmp1, label %if.end.5, label %lor.lhs.false, !dbg !2656

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %item, align 8, !dbg !2657, !tbaa !2522
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !2659
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !2659, !tbaa !2588
  %cmp3 = icmp eq %struct._typeobject* %8, @_PyWeakref_CallableProxyType, !dbg !2660
  br i1 %cmp3, label %if.end.5, label %if.then.4, !dbg !2661

if.then.4:                                        ; preds = %lor.lhs.false
  %9 = load %struct._object*, %struct._object** %item, align 8, !dbg !2662, !tbaa !2522
  store %struct._object* %9, %struct._object** %retval, !dbg !2663
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2663

if.end.5:                                         ; preds = %lor.lhs.false, %if.end
  %10 = load %struct._object*, %struct._object** %item, align 8, !dbg !2664, !tbaa !2522
  %11 = bitcast %struct._object* %10 to %struct._PyWeakReference*, !dbg !2665
  %wr_object = getelementptr inbounds %struct._PyWeakReference, %struct._PyWeakReference* %11, i32 0, i32 1, !dbg !2666
  %12 = load %struct._object*, %struct._object** %wr_object, align 8, !dbg !2666, !tbaa !2667
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !2669
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !2669, !tbaa !2551
  %cmp6 = icmp sgt i64 %13, 0, !dbg !2670
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !2671

cond.true:                                        ; preds = %if.end.5
  %14 = load %struct._object*, %struct._object** %item, align 8, !dbg !2672, !tbaa !2522
  %15 = bitcast %struct._object* %14 to %struct._PyWeakReference*, !dbg !2674
  %wr_object7 = getelementptr inbounds %struct._PyWeakReference, %struct._PyWeakReference* %15, i32 0, i32 1, !dbg !2675
  %16 = load %struct._object*, %struct._object** %wr_object7, align 8, !dbg !2675, !tbaa !2667
  br label %cond.end, !dbg !2671

cond.false:                                       ; preds = %if.end.5
  br label %cond.end, !dbg !2676

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %16, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !2671
  store %struct._object* %cond, %struct._object** %result, align 8, !dbg !2678, !tbaa !2522
  %17 = load %struct._object*, %struct._object** %result, align 8, !dbg !2681, !tbaa !2522
  %cmp8 = icmp eq %struct._object* %17, @_Py_NoneStruct, !dbg !2683
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !2684

if.then.9:                                        ; preds = %cond.end
  store %struct._object* null, %struct._object** %retval, !dbg !2685
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2685

if.end.10:                                        ; preds = %cond.end
  %18 = load %struct._object*, %struct._object** %result, align 8, !dbg !2686, !tbaa !2522
  store %struct._object* %18, %struct._object** %retval, !dbg !2687
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2687

cleanup:                                          ; preds = %if.end.10, %if.then.9, %if.then.4, %if.then
  %19 = bitcast %struct._object** %item to i8*, !dbg !2688
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !2688
  %20 = bitcast %struct._object** %result to i8*, !dbg !2688
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !2688
  %21 = load %struct._object*, %struct._object** %retval, !dbg !2688
  ret %struct._object* %21, !dbg !2688
}

declare %struct._object* @PyDict_GetItem(%struct._object*, %struct._object*) #3

; Function Attrs: uwtable
define i8* @_ctypes_alloc_format_string(i8* %prefix, i8* %suffix) #0 {
entry:
  %retval = alloca i8*, align 8
  %prefix.addr = alloca i8*, align 8
  %suffix.addr = alloca i8*, align 8
  %len = alloca i64, align 8
  %result = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store i8* %prefix, i8** %prefix.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !691, metadata !2526), !dbg !2689
  store i8* %suffix, i8** %suffix.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %suffix.addr, metadata !692, metadata !2526), !dbg !2690
  %0 = bitcast i64* %len to i8*, !dbg !2691
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2691
  call void @llvm.dbg.declare(metadata i64* %len, metadata !693, metadata !2526), !dbg !2692
  %1 = bitcast i8** %result to i8*, !dbg !2693
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !2693
  call void @llvm.dbg.declare(metadata i8** %result, metadata !694, metadata !2526), !dbg !2694
  %2 = load i8*, i8** %suffix.addr, align 8, !dbg !2695, !tbaa !2522
  %cmp = icmp eq i8* %2, null, !dbg !2697
  br i1 %cmp, label %if.then, label %if.end, !dbg !2698

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, !dbg !2699
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2699

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %suffix.addr, align 8, !dbg !2701, !tbaa !2522
  %call = call i64 @strlen(i8* %3) #8, !dbg !2702
  store i64 %call, i64* %len, align 8, !dbg !2703, !tbaa !2704
  %4 = load i8*, i8** %prefix.addr, align 8, !dbg !2705, !tbaa !2522
  %tobool = icmp ne i8* %4, null, !dbg !2705
  br i1 %tobool, label %if.then.1, label %if.end.3, !dbg !2707

if.then.1:                                        ; preds = %if.end
  %5 = load i8*, i8** %prefix.addr, align 8, !dbg !2708, !tbaa !2522
  %call2 = call i64 @strlen(i8* %5) #8, !dbg !2709
  %6 = load i64, i64* %len, align 8, !dbg !2710, !tbaa !2704
  %add = add i64 %6, %call2, !dbg !2710
  store i64 %add, i64* %len, align 8, !dbg !2710, !tbaa !2704
  br label %if.end.3, !dbg !2711

if.end.3:                                         ; preds = %if.then.1, %if.end
  %7 = load i64, i64* %len, align 8, !dbg !2712, !tbaa !2704
  %add4 = add i64 %7, 1, !dbg !2713
  %call5 = call i8* @PyMem_Malloc(i64 %add4), !dbg !2714
  store i8* %call5, i8** %result, align 8, !dbg !2715, !tbaa !2522
  %8 = load i8*, i8** %result, align 8, !dbg !2716, !tbaa !2522
  %cmp6 = icmp eq i8* %8, null, !dbg !2718
  br i1 %cmp6, label %if.then.7, label %if.end.9, !dbg !2719

if.then.7:                                        ; preds = %if.end.3
  %call8 = call %struct._object* @PyErr_NoMemory(), !dbg !2720
  store i8* null, i8** %retval, !dbg !2722
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2722

if.end.9:                                         ; preds = %if.end.3
  %9 = load i8*, i8** %prefix.addr, align 8, !dbg !2723, !tbaa !2522
  %tobool10 = icmp ne i8* %9, null, !dbg !2723
  br i1 %tobool10, label %if.then.11, label %if.else, !dbg !2725

if.then.11:                                       ; preds = %if.end.9
  %10 = load i8*, i8** %result, align 8, !dbg !2726, !tbaa !2522
  %11 = load i8*, i8** %prefix.addr, align 8, !dbg !2727, !tbaa !2522
  %call12 = call i8* @strcpy(i8* %10, i8* %11) #2, !dbg !2728
  br label %if.end.13, !dbg !2728

if.else:                                          ; preds = %if.end.9
  %12 = load i8*, i8** %result, align 8, !dbg !2729, !tbaa !2522
  %arrayidx = getelementptr i8, i8* %12, i64 0, !dbg !2729
  store i8 0, i8* %arrayidx, align 1, !dbg !2730, !tbaa !2731
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.11
  %13 = load i8*, i8** %result, align 8, !dbg !2732, !tbaa !2522
  %14 = load i8*, i8** %suffix.addr, align 8, !dbg !2733, !tbaa !2522
  %call14 = call i8* @strcat(i8* %13, i8* %14) #2, !dbg !2734
  %15 = load i8*, i8** %result, align 8, !dbg !2735, !tbaa !2522
  store i8* %15, i8** %retval, !dbg !2736
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2736

cleanup:                                          ; preds = %if.end.13, %if.then.7, %if.then
  %16 = bitcast i8** %result to i8*, !dbg !2737
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !2737
  %17 = bitcast i64* %len to i8*, !dbg !2737
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !2737
  %18 = load i8*, i8** %retval, !dbg !2737
  ret i8* %18, !dbg !2737
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

declare i8* @PyMem_Malloc(i64) #3

declare %struct._object* @PyErr_NoMemory() #3

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #5

; Function Attrs: nounwind
declare i8* @strcat(i8*, i8*) #5

; Function Attrs: uwtable
define i8* @_ctypes_alloc_format_string_with_shape(i32 %ndim, i64* %shape, i8* %prefix, i8* %suffix) #0 {
entry:
  %retval = alloca i8*, align 8
  %ndim.addr = alloca i32, align 4
  %shape.addr = alloca i64*, align 8
  %prefix.addr = alloca i8*, align 8
  %suffix.addr = alloca i8*, align 8
  %new_prefix = alloca i8*, align 8
  %result = alloca i8*, align 8
  %buf = alloca [32 x i8], align 16
  %prefix_len = alloca i32, align 4
  %k = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store i32 %ndim, i32* %ndim.addr, align 4, !tbaa !2611
  call void @llvm.dbg.declare(metadata i32* %ndim.addr, metadata !701, metadata !2526), !dbg !2738
  store i64* %shape, i64** %shape.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i64** %shape.addr, metadata !702, metadata !2526), !dbg !2739
  store i8* %prefix, i8** %prefix.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !703, metadata !2526), !dbg !2740
  store i8* %suffix, i8** %suffix.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %suffix.addr, metadata !704, metadata !2526), !dbg !2741
  %0 = bitcast i8** %new_prefix to i8*, !dbg !2742
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2742
  call void @llvm.dbg.declare(metadata i8** %new_prefix, metadata !705, metadata !2526), !dbg !2743
  %1 = bitcast i8** %result to i8*, !dbg !2744
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !2744
  call void @llvm.dbg.declare(metadata i8** %result, metadata !706, metadata !2526), !dbg !2745
  %2 = bitcast [32 x i8]* %buf to i8*, !dbg !2746
  call void @llvm.lifetime.start(i64 32, i8* %2) #2, !dbg !2746
  call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !707, metadata !2526), !dbg !2747
  %3 = bitcast i32* %prefix_len to i8*, !dbg !2748
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !2748
  call void @llvm.dbg.declare(metadata i32* %prefix_len, metadata !711, metadata !2526), !dbg !2749
  %4 = bitcast i32* %k to i8*, !dbg !2750
  call void @llvm.lifetime.start(i64 4, i8* %4) #2, !dbg !2750
  call void @llvm.dbg.declare(metadata i32* %k, metadata !712, metadata !2526), !dbg !2751
  %5 = load i32, i32* %ndim.addr, align 4, !dbg !2752, !tbaa !2611
  %mul = mul i32 32, %5, !dbg !2753
  %add = add i32 %mul, 3, !dbg !2754
  store i32 %add, i32* %prefix_len, align 4, !dbg !2755, !tbaa !2611
  %6 = load i8*, i8** %prefix.addr, align 8, !dbg !2756, !tbaa !2522
  %tobool = icmp ne i8* %6, null, !dbg !2756
  br i1 %tobool, label %if.then, label %if.end, !dbg !2758

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %prefix.addr, align 8, !dbg !2759, !tbaa !2522
  %call = call i64 @strlen(i8* %7) #8, !dbg !2760
  %8 = load i32, i32* %prefix_len, align 4, !dbg !2761, !tbaa !2611
  %conv = sext i32 %8 to i64, !dbg !2761
  %add1 = add i64 %conv, %call, !dbg !2761
  %conv2 = trunc i64 %add1 to i32, !dbg !2761
  store i32 %conv2, i32* %prefix_len, align 4, !dbg !2761, !tbaa !2611
  br label %if.end, !dbg !2762

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %prefix_len, align 4, !dbg !2763, !tbaa !2611
  %conv3 = sext i32 %9 to i64, !dbg !2763
  %call4 = call i8* @PyMem_Malloc(i64 %conv3), !dbg !2764
  store i8* %call4, i8** %new_prefix, align 8, !dbg !2765, !tbaa !2522
  %10 = load i8*, i8** %new_prefix, align 8, !dbg !2766, !tbaa !2522
  %cmp = icmp eq i8* %10, null, !dbg !2768
  br i1 %cmp, label %if.then.6, label %if.end.7, !dbg !2769

if.then.6:                                        ; preds = %if.end
  store i8* null, i8** %retval, !dbg !2770
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2770

if.end.7:                                         ; preds = %if.end
  %11 = load i8*, i8** %new_prefix, align 8, !dbg !2771, !tbaa !2522
  %arrayidx = getelementptr i8, i8* %11, i64 0, !dbg !2771
  store i8 0, i8* %arrayidx, align 1, !dbg !2772, !tbaa !2731
  %12 = load i8*, i8** %prefix.addr, align 8, !dbg !2773, !tbaa !2522
  %tobool8 = icmp ne i8* %12, null, !dbg !2773
  br i1 %tobool8, label %if.then.9, label %if.end.11, !dbg !2775

if.then.9:                                        ; preds = %if.end.7
  %13 = load i8*, i8** %new_prefix, align 8, !dbg !2776, !tbaa !2522
  %14 = load i8*, i8** %prefix.addr, align 8, !dbg !2777, !tbaa !2522
  %call10 = call i8* @strcpy(i8* %13, i8* %14) #2, !dbg !2778
  br label %if.end.11, !dbg !2778

if.end.11:                                        ; preds = %if.then.9, %if.end.7
  %15 = load i32, i32* %ndim.addr, align 4, !dbg !2779, !tbaa !2611
  %cmp12 = icmp sgt i32 %15, 0, !dbg !2781
  br i1 %cmp12, label %if.then.14, label %if.end.30, !dbg !2782

if.then.14:                                       ; preds = %if.end.11
  %16 = load i8*, i8** %new_prefix, align 8, !dbg !2783, !tbaa !2522
  %call15 = call i8* @strcat(i8* %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)) #2, !dbg !2785
  store i32 0, i32* %k, align 4, !dbg !2786, !tbaa !2611
  br label %for.cond, !dbg !2788

for.cond:                                         ; preds = %for.inc, %if.then.14
  %17 = load i32, i32* %k, align 4, !dbg !2789, !tbaa !2611
  %18 = load i32, i32* %ndim.addr, align 4, !dbg !2793, !tbaa !2611
  %cmp16 = icmp slt i32 %17, %18, !dbg !2794
  br i1 %cmp16, label %for.body, label %for.end, !dbg !2795

for.body:                                         ; preds = %for.cond
  %19 = load i32, i32* %k, align 4, !dbg !2796, !tbaa !2611
  %20 = load i32, i32* %ndim.addr, align 4, !dbg !2799, !tbaa !2611
  %sub = sub i32 %20, 1, !dbg !2800
  %cmp18 = icmp slt i32 %19, %sub, !dbg !2801
  br i1 %cmp18, label %if.then.20, label %if.else, !dbg !2802

if.then.20:                                       ; preds = %for.body
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0, !dbg !2803
  %21 = load i32, i32* %k, align 4, !dbg !2805, !tbaa !2611
  %idxprom = sext i32 %21 to i64, !dbg !2806
  %22 = load i64*, i64** %shape.addr, align 8, !dbg !2806, !tbaa !2522
  %arrayidx21 = getelementptr i64, i64* %22, i64 %idxprom, !dbg !2806
  %23 = load i64, i64* %arrayidx21, align 8, !dbg !2806, !tbaa !2704
  %call22 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i64 %23) #2, !dbg !2807
  br label %if.end.27, !dbg !2808

if.else:                                          ; preds = %for.body
  %arraydecay23 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0, !dbg !2809
  %24 = load i32, i32* %k, align 4, !dbg !2811, !tbaa !2611
  %idxprom24 = sext i32 %24 to i64, !dbg !2812
  %25 = load i64*, i64** %shape.addr, align 8, !dbg !2812, !tbaa !2522
  %arrayidx25 = getelementptr i64, i64* %25, i64 %idxprom24, !dbg !2812
  %26 = load i64, i64* %arrayidx25, align 8, !dbg !2812, !tbaa !2704
  %call26 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i64 %26) #2, !dbg !2813
  br label %if.end.27

if.end.27:                                        ; preds = %if.else, %if.then.20
  %27 = load i8*, i8** %new_prefix, align 8, !dbg !2814, !tbaa !2522
  %arraydecay28 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0, !dbg !2815
  %call29 = call i8* @strcat(i8* %27, i8* %arraydecay28) #2, !dbg !2816
  br label %for.inc, !dbg !2817

for.inc:                                          ; preds = %if.end.27
  %28 = load i32, i32* %k, align 4, !dbg !2818, !tbaa !2611
  %inc = add i32 %28, 1, !dbg !2818
  store i32 %inc, i32* %k, align 4, !dbg !2818, !tbaa !2611
  br label %for.cond, !dbg !2819

for.end:                                          ; preds = %for.cond
  br label %if.end.30, !dbg !2820

if.end.30:                                        ; preds = %for.end, %if.end.11
  %29 = load i8*, i8** %new_prefix, align 8, !dbg !2821, !tbaa !2522
  %30 = load i8*, i8** %suffix.addr, align 8, !dbg !2822, !tbaa !2522
  %call31 = call i8* @_ctypes_alloc_format_string(i8* %29, i8* %30), !dbg !2823
  store i8* %call31, i8** %result, align 8, !dbg !2824, !tbaa !2522
  %31 = load i8*, i8** %new_prefix, align 8, !dbg !2825, !tbaa !2522
  call void @PyMem_Free(i8* %31), !dbg !2826
  %32 = load i8*, i8** %result, align 8, !dbg !2827, !tbaa !2522
  store i8* %32, i8** %retval, !dbg !2828
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2828

cleanup:                                          ; preds = %if.end.30, %if.then.6
  %33 = bitcast i32* %k to i8*, !dbg !2829
  call void @llvm.lifetime.end(i64 4, i8* %33) #2, !dbg !2829
  %34 = bitcast i32* %prefix_len to i8*, !dbg !2829
  call void @llvm.lifetime.end(i64 4, i8* %34) #2, !dbg !2829
  %35 = bitcast [32 x i8]* %buf to i8*, !dbg !2829
  call void @llvm.lifetime.end(i64 32, i8* %35) #2, !dbg !2829
  %36 = bitcast i8** %result to i8*, !dbg !2829
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !2829
  %37 = bitcast i8** %new_prefix to i8*, !dbg !2829
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !2829
  %38 = load i8*, i8** %retval, !dbg !2829
  ret i8* %38, !dbg !2829
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #5

declare void @PyMem_Free(i8*) #3

; Function Attrs: uwtable
define internal i32 @PyCStructType_setattro(%struct._object* %self, %struct._object* %key, %struct._object* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %key.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp42 = alloca i32, align 4
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !841, metadata !2526), !dbg !2830
  store %struct._object* %key, %struct._object** %key.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %key.addr, metadata !842, metadata !2526), !dbg !2831
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !843, metadata !2526), !dbg !2832
  %0 = load i32 (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)** bitcast ({}** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyType_Type, i32 0, i32 17) to i32 (%struct._object*, %struct._object*, %struct._object*)**), align 8, !dbg !2833, !tbaa !2835
  %1 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !2836, !tbaa !2522
  %2 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !2837, !tbaa !2522
  %3 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !2838, !tbaa !2522
  %call = call i32 %0(%struct._object* %1, %struct._object* %2, %struct._object* %3), !dbg !2839
  %cmp = icmp eq i32 -1, %call, !dbg !2840
  br i1 %cmp, label %if.then, label %if.end, !dbg !2841

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !2842
  br label %return, !dbg !2842

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !2843, !tbaa !2522
  %tobool = icmp ne %struct._object* %4, null, !dbg !2843
  br i1 %tobool, label %land.lhs.true, label %if.end.49, !dbg !2844

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !2845, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !2847
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2847, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19, !dbg !2848
  %7 = load i64, i64* %tp_flags, align 8, !dbg !2848, !tbaa !2849
  %and = and i64 %7, 268435456, !dbg !2850
  %cmp1 = icmp ne i64 %and, 0, !dbg !2851
  br i1 %cmp1, label %land.lhs.true.2, label %if.end.49, !dbg !2852

land.lhs.true.2:                                  ; preds = %land.lhs.true
  %8 = bitcast i64* %__s1_len to i8*, !dbg !2853
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !2853
  call void @llvm.dbg.declare(metadata i64* %__s1_len, metadata !844, metadata !2526), !dbg !2854
  %9 = bitcast i64* %__s2_len to i8*, !dbg !2853
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !2853
  call void @llvm.dbg.declare(metadata i64* %__s2_len, metadata !847, metadata !2526), !dbg !2855
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i64 1) to i64), i64 ptrtoint ([9 x i8]* @.str.52 to i64)), i64 1), label %land.lhs.true.3, label %cond.false, !dbg !2856

land.lhs.true.3:                                  ; preds = %land.lhs.true.2
  store i64 8, i64* %__s2_len, align 8, !dbg !2857, !tbaa !2704
  %10 = load i64, i64* %__s2_len, align 8, !dbg !2859, !tbaa !2704
  %cmp4 = icmp ult i64 %10, 4, !dbg !2860
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !2861

cond.true:                                        ; preds = %land.lhs.true.3
  %11 = bitcast i8** %__s1 to i8*, !dbg !2862
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !2862
  call void @llvm.dbg.declare(metadata i8** %__s1, metadata !848, metadata !2526), !dbg !2864
  %12 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !2865, !tbaa !2522
  %call6 = call i8* @PyUnicode_AsUTF8(%struct._object* %12), !dbg !2866
  store i8* %call6, i8** %__s1, align 8, !dbg !2864, !tbaa !2522
  %13 = bitcast i32* %__result to i8*, !dbg !2867
  call void @llvm.lifetime.start(i64 4, i8* %13) #2, !dbg !2867
  call void @llvm.dbg.declare(metadata i32* %__result, metadata !850, metadata !2526), !dbg !2868
  %14 = load i8*, i8** %__s1, align 8, !dbg !2869, !tbaa !2522
  %arrayidx = getelementptr i8, i8* %14, i64 0, !dbg !2869
  %15 = load i8, i8* %arrayidx, align 1, !dbg !2869, !tbaa !2731
  %conv = zext i8 %15 to i32, !dbg !2869
  %16 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), align 1, !dbg !2870, !tbaa !2731
  %conv8 = zext i8 %16 to i32, !dbg !2870
  %sub = sub i32 %conv, %conv8, !dbg !2871
  store i32 %sub, i32* %__result, align 4, !dbg !2868, !tbaa !2611
  %17 = load i64, i64* %__s2_len, align 8, !dbg !2872, !tbaa !2704
  %cmp9 = icmp ugt i64 %17, 0, !dbg !2874
  br i1 %cmp9, label %land.lhs.true.11, label %if.end.41, !dbg !2875

land.lhs.true.11:                                 ; preds = %cond.true
  %18 = load i32, i32* %__result, align 4, !dbg !2876, !tbaa !2611
  %cmp12 = icmp eq i32 %18, 0, !dbg !2878
  br i1 %cmp12, label %if.then.14, label %if.end.41, !dbg !2879

if.then.14:                                       ; preds = %land.lhs.true.11
  %19 = load i8*, i8** %__s1, align 8, !dbg !2880, !tbaa !2522
  %arrayidx15 = getelementptr i8, i8* %19, i64 1, !dbg !2880
  %20 = load i8, i8* %arrayidx15, align 1, !dbg !2880, !tbaa !2731
  %conv16 = zext i8 %20 to i32, !dbg !2880
  %21 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i64 1), align 1, !dbg !2883, !tbaa !2731
  %conv17 = zext i8 %21 to i32, !dbg !2883
  %sub18 = sub i32 %conv16, %conv17, !dbg !2884
  store i32 %sub18, i32* %__result, align 4, !dbg !2885, !tbaa !2611
  %22 = load i64, i64* %__s2_len, align 8, !dbg !2886, !tbaa !2704
  %cmp19 = icmp ugt i64 %22, 1, !dbg !2888
  br i1 %cmp19, label %land.lhs.true.21, label %if.end.40, !dbg !2889

land.lhs.true.21:                                 ; preds = %if.then.14
  %23 = load i32, i32* %__result, align 4, !dbg !2890, !tbaa !2611
  %cmp22 = icmp eq i32 %23, 0, !dbg !2892
  br i1 %cmp22, label %if.then.24, label %if.end.40, !dbg !2893

if.then.24:                                       ; preds = %land.lhs.true.21
  %24 = load i8*, i8** %__s1, align 8, !dbg !2894, !tbaa !2522
  %arrayidx25 = getelementptr i8, i8* %24, i64 2, !dbg !2894
  %25 = load i8, i8* %arrayidx25, align 1, !dbg !2894, !tbaa !2731
  %conv26 = zext i8 %25 to i32, !dbg !2894
  %26 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i64 2), align 1, !dbg !2897, !tbaa !2731
  %conv27 = zext i8 %26 to i32, !dbg !2897
  %sub28 = sub i32 %conv26, %conv27, !dbg !2898
  store i32 %sub28, i32* %__result, align 4, !dbg !2899, !tbaa !2611
  %27 = load i64, i64* %__s2_len, align 8, !dbg !2900, !tbaa !2704
  %cmp29 = icmp ugt i64 %27, 2, !dbg !2902
  br i1 %cmp29, label %land.lhs.true.31, label %if.end.39, !dbg !2903

land.lhs.true.31:                                 ; preds = %if.then.24
  %28 = load i32, i32* %__result, align 4, !dbg !2904, !tbaa !2611
  %cmp32 = icmp eq i32 %28, 0, !dbg !2906
  br i1 %cmp32, label %if.then.34, label %if.end.39, !dbg !2907

if.then.34:                                       ; preds = %land.lhs.true.31
  %29 = load i8*, i8** %__s1, align 8, !dbg !2908, !tbaa !2522
  %arrayidx35 = getelementptr i8, i8* %29, i64 3, !dbg !2908
  %30 = load i8, i8* %arrayidx35, align 1, !dbg !2908, !tbaa !2731
  %conv36 = zext i8 %30 to i32, !dbg !2908
  %31 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i64 3), align 1, !dbg !2910, !tbaa !2731
  %conv37 = zext i8 %31 to i32, !dbg !2910
  %sub38 = sub i32 %conv36, %conv37, !dbg !2911
  store i32 %sub38, i32* %__result, align 4, !dbg !2912, !tbaa !2611
  br label %if.end.39, !dbg !2913

if.end.39:                                        ; preds = %if.then.34, %land.lhs.true.31, %if.then.24
  br label %if.end.40, !dbg !2914

if.end.40:                                        ; preds = %if.end.39, %land.lhs.true.21, %if.then.14
  br label %if.end.41, !dbg !2918

if.end.41:                                        ; preds = %if.end.40, %land.lhs.true.11, %cond.true
  %32 = load i32, i32* %__result, align 4, !dbg !2922, !tbaa !2611
  store i32 %32, i32* %tmp42, !dbg !2926, !tbaa !2611
  %33 = bitcast i32* %__result to i8*, !dbg !2927
  call void @llvm.lifetime.end(i64 4, i8* %33) #2, !dbg !2927
  %34 = bitcast i8** %__s1 to i8*, !dbg !2927
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !2927
  %35 = load i32, i32* %tmp42, !dbg !2928, !tbaa !2611
  br label %cond.end, !dbg !2861

cond.false:                                       ; preds = %land.lhs.true.3, %land.lhs.true.2
  %36 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !2929, !tbaa !2522
  %call43 = call i8* @PyUnicode_AsUTF8(%struct._object* %36), !dbg !2932
  %call44 = call i32 @strcmp(i8* %call43, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0)) #2, !dbg !2933
  br label %cond.end, !dbg !2861

cond.end:                                         ; preds = %cond.false, %if.end.41
  %cond = phi i32 [ %35, %if.end.41 ], [ %call44, %cond.false ], !dbg !2861
  store i32 %cond, i32* %tmp, !dbg !2934, !tbaa !2611
  %37 = bitcast i64* %__s2_len to i8*, !dbg !2937
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !2937
  %38 = bitcast i64* %__s1_len to i8*, !dbg !2937
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !2937
  %39 = load i32, i32* %tmp, !dbg !2938, !tbaa !2611
  %cmp45 = icmp eq i32 0, %39, !dbg !2939
  br i1 %cmp45, label %if.then.47, label %if.end.49, !dbg !2940

if.then.47:                                       ; preds = %cond.end
  %40 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !2941, !tbaa !2522
  %41 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !2942, !tbaa !2522
  %call48 = call i32 @PyCStructUnionType_update_stgdict(%struct._object* %40, %struct._object* %41, i32 1), !dbg !2943
  store i32 %call48, i32* %retval, !dbg !2944
  br label %return, !dbg !2944

if.end.49:                                        ; preds = %cond.end, %land.lhs.true, %if.end
  store i32 0, i32* %retval, !dbg !2945
  br label %return, !dbg !2945

return:                                           ; preds = %if.end.49, %if.then.47, %if.then
  %42 = load i32, i32* %retval, !dbg !2946
  ret i32 %42, !dbg !2946
}

; Function Attrs: uwtable
define internal i32 @CDataType_traverse(%struct._typeobject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._typeobject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %self, %struct._typeobject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %self.addr, metadata !855, metadata !2526), !dbg !2947
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !856, metadata !2526), !dbg !2948
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !857, metadata !2526), !dbg !2949
  %0 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !2950
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2950
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !858, metadata !2526), !dbg !2951
  %1 = load %struct._typeobject*, %struct._typeobject** %self.addr, align 8, !dbg !2952, !tbaa !2522
  %2 = bitcast %struct._typeobject* %1 to %struct._object*, !dbg !2953
  %call = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %2), !dbg !2954
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !2951, !tbaa !2522
  %3 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !2955, !tbaa !2522
  %tobool = icmp ne %struct.StgDictObject* %3, null, !dbg !2955
  br i1 %tobool, label %if.then, label %if.end.8, !dbg !2956

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !2957

do.body:                                          ; preds = %if.then
  %4 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !2958, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %4, i32 0, i32 5, !dbg !2960
  %5 = load %struct._object*, %struct._object** %proto, align 8, !dbg !2960, !tbaa !2961
  %tobool1 = icmp ne %struct._object* %5, null, !dbg !2966
  br i1 %tobool1, label %if.then.2, label %if.end.7, !dbg !2967

if.then.2:                                        ; preds = %do.body
  %6 = bitcast i32* %vret to i8*, !dbg !2968
  call void @llvm.lifetime.start(i64 4, i8* %6) #2, !dbg !2968
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !859, metadata !2526), !dbg !2970
  %7 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !2971, !tbaa !2522
  %8 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !2972, !tbaa !2522
  %proto3 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %8, i32 0, i32 5, !dbg !2973
  %9 = load %struct._object*, %struct._object** %proto3, align 8, !dbg !2973, !tbaa !2961
  %10 = load i8*, i8** %arg.addr, align 8, !dbg !2974, !tbaa !2522
  %call4 = call i32 %7(%struct._object* %9, i8* %10), !dbg !2971
  store i32 %call4, i32* %vret, align 4, !dbg !2970, !tbaa !2611
  %11 = load i32, i32* %vret, align 4, !dbg !2975, !tbaa !2611
  %tobool5 = icmp ne i32 %11, 0, !dbg !2975
  br i1 %tobool5, label %if.then.6, label %if.end, !dbg !2977

if.then.6:                                        ; preds = %if.then.2
  %12 = load i32, i32* %vret, align 4, !dbg !2978, !tbaa !2611
  store i32 %12, i32* %retval, !dbg !2980
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2980

if.end:                                           ; preds = %if.then.2
  store i32 0, i32* %cleanup.dest.slot, !dbg !2981
  br label %cleanup, !dbg !2981

cleanup:                                          ; preds = %if.end, %if.then.6
  %13 = bitcast i32* %vret to i8*, !dbg !2983
  call void @llvm.lifetime.end(i64 4, i8* %13) #2, !dbg !2983
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.7, !dbg !2986

if.end.7:                                         ; preds = %cleanup.cont, %do.body
  br label %do.cond, !dbg !2987

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !2990

do.end:                                           ; preds = %do.cond
  br label %if.end.8, !dbg !2992

if.end.8:                                         ; preds = %do.end, %entry
  %14 = load i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyType_Type, i32 0, i32 21), align 8, !dbg !2994, !tbaa !2995
  %15 = load %struct._typeobject*, %struct._typeobject** %self.addr, align 8, !dbg !2996, !tbaa !2522
  %16 = bitcast %struct._typeobject* %15 to %struct._object*, !dbg !2997
  %17 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !2998, !tbaa !2522
  %18 = load i8*, i8** %arg.addr, align 8, !dbg !2999, !tbaa !2522
  %call9 = call i32 %14(%struct._object* %16, i32 (%struct._object*, i8*)* %17, i8* %18), !dbg !3000
  store i32 %call9, i32* %retval, !dbg !3001
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.10, !dbg !3001

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.10

cleanup.10:                                       ; preds = %NewDefault, %if.end.8
  %19 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !3002
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !3002
  %20 = load i32, i32* %retval, !dbg !3002
  ret i32 %20, !dbg !3002
}

; Function Attrs: uwtable
define internal i32 @CDataType_clear(%struct._typeobject* %self) #0 {
entry:
  %self.addr = alloca %struct._typeobject*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %self, %struct._typeobject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %self.addr, metadata !868, metadata !2526), !dbg !3003
  %0 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !3004
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3004
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !869, metadata !2526), !dbg !3005
  %1 = load %struct._typeobject*, %struct._typeobject** %self.addr, align 8, !dbg !3006, !tbaa !2522
  %2 = bitcast %struct._typeobject* %1 to %struct._object*, !dbg !3007
  %call = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %2), !dbg !3008
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !3005, !tbaa !2522
  %3 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !3009, !tbaa !2522
  %tobool = icmp ne %struct.StgDictObject* %3, null, !dbg !3009
  br i1 %tobool, label %if.then, label %if.end.9, !dbg !3010

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !3011

do.body:                                          ; preds = %if.then
  %4 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3012
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !3012
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !870, metadata !2526), !dbg !3014
  %5 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !3015, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %5, i32 0, i32 5, !dbg !3016
  %6 = load %struct._object*, %struct._object** %proto, align 8, !dbg !3016, !tbaa !2961
  store %struct._object* %6, %struct._object** %_py_tmp, align 8, !dbg !3014, !tbaa !2522
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3017, !tbaa !2522
  %cmp = icmp ne %struct._object* %7, null, !dbg !3018
  br i1 %cmp, label %if.then.1, label %if.end.6, !dbg !3019

if.then.1:                                        ; preds = %do.body
  %8 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !3020, !tbaa !2522
  %proto2 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %8, i32 0, i32 5, !dbg !3022
  store %struct._object* null, %struct._object** %proto2, align 8, !dbg !3023, !tbaa !2961
  br label %do.body.3, !dbg !3024

do.body.3:                                        ; preds = %if.then.1
  %9 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3025
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !3025
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !873, metadata !2526), !dbg !3027
  %10 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !3028, !tbaa !2522
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !3027, !tbaa !2522
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3029, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !3031
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !3032, !tbaa !2551
  %dec = add i64 %12, -1, !dbg !3032
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3032, !tbaa !2551
  %cmp4 = icmp ne i64 %dec, 0, !dbg !3033
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !3034

if.then.5:                                        ; preds = %do.body.3
  br label %if.end, !dbg !3035

if.else:                                          ; preds = %do.body.3
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3037, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !3039
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3039, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !3040
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3040, !tbaa !2590
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3041, !tbaa !2522
  call void %15(%struct._object* %16), !dbg !3042
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.5
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3043
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !3043
  br label %do.cond, !dbg !3045

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !3046

do.end:                                           ; preds = %do.cond
  br label %if.end.6, !dbg !3048

if.end.6:                                         ; preds = %do.end, %do.body
  %18 = bitcast %struct._object** %_py_tmp to i8*, !dbg !3050
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !3050
  br label %do.cond.7, !dbg !3053

do.cond.7:                                        ; preds = %if.end.6
  br label %do.end.8, !dbg !3054

do.end.8:                                         ; preds = %do.cond.7
  br label %if.end.9, !dbg !3056

if.end.9:                                         ; preds = %do.end.8, %entry
  %19 = load i32 (%struct._object*)*, i32 (%struct._object*)** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyType_Type, i32 0, i32 22), align 8, !dbg !3058, !tbaa !3059
  %20 = load %struct._typeobject*, %struct._typeobject** %self.addr, align 8, !dbg !3060, !tbaa !2522
  %21 = bitcast %struct._typeobject* %20 to %struct._object*, !dbg !3061
  %call10 = call i32 %19(%struct._object* %21), !dbg !3062
  %22 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !3063
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !3063
  ret i32 %call10, !dbg !3064
}

; Function Attrs: uwtable
define internal %struct._object* @PyCStructType_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !937, metadata !2526), !dbg !3065
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !938, metadata !2526), !dbg !3066
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !939, metadata !2526), !dbg !3067
  %0 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3068, !tbaa !2522
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !3069, !tbaa !2522
  %2 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3070, !tbaa !2522
  %call = call %struct._object* @StructUnionType_new(%struct._typeobject* %0, %struct._object* %1, %struct._object* %2, i32 1), !dbg !3071
  ret %struct._object* %call, !dbg !3072
}

; Function Attrs: uwtable
define internal %struct._object* @PyCPointerType_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %result = alloca %struct._typeobject*, align 8
  %stgdict = alloca %struct.StgDictObject*, align 8
  %proto = alloca %struct._object*, align 8
  %typedict = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %itemdict = alloca %struct.StgDictObject*, align 8
  %current_format = alloca i8*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  %_py_decref_tmp56 = alloca %struct._object*, align 8
  %_py_decref_tmp74 = alloca %struct._object*, align 8
  %_py_decref_tmp87 = alloca %struct._object*, align 8
  %_py_decref_tmp101 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1019, metadata !2526), !dbg !3073
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1020, metadata !2526), !dbg !3074
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1021, metadata !2526), !dbg !3075
  %0 = bitcast %struct._typeobject** %result to i8*, !dbg !3076
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3076
  call void @llvm.dbg.declare(metadata %struct._typeobject** %result, metadata !1022, metadata !2526), !dbg !3077
  %1 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !3078
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !3078
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict, metadata !1023, metadata !2526), !dbg !3079
  %2 = bitcast %struct._object** %proto to i8*, !dbg !3080
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !3080
  call void @llvm.dbg.declare(metadata %struct._object** %proto, metadata !1024, metadata !2526), !dbg !3081
  %3 = bitcast %struct._object** %typedict to i8*, !dbg !3082
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !3082
  call void @llvm.dbg.declare(metadata %struct._object** %typedict, metadata !1025, metadata !2526), !dbg !3083
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !3084, !tbaa !2522
  %call = call %struct._object* @PyTuple_GetItem(%struct._object* %4, i64 2), !dbg !3085
  store %struct._object* %call, %struct._object** %typedict, align 8, !dbg !3086, !tbaa !2522
  %5 = load %struct._object*, %struct._object** %typedict, align 8, !dbg !3087, !tbaa !2522
  %tobool = icmp ne %struct._object* %5, null, !dbg !3087
  br i1 %tobool, label %if.end, label %if.then, !dbg !3089

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3090
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.115, !dbg !3090

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyObject_CallObject(%struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyCStgDict_Type, i32 0, i32 0, i32 0), %struct._object* null), !dbg !3091
  %6 = bitcast %struct._object* %call1 to %struct.StgDictObject*, !dbg !3092
  store %struct.StgDictObject* %6, %struct.StgDictObject** %stgdict, align 8, !dbg !3093, !tbaa !2522
  %7 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3094, !tbaa !2522
  %tobool2 = icmp ne %struct.StgDictObject* %7, null, !dbg !3094
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !3096

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !3097
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.115, !dbg !3097

if.end.4:                                         ; preds = %if.end
  %8 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3098, !tbaa !2522
  %size = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %8, i32 0, i32 1, !dbg !3099
  store i64 8, i64* %size, align 8, !dbg !3100, !tbaa !3101
  %call5 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i32 0, i32 0)), !dbg !3102
  %pffi_type = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %call5, i32 0, i32 3, !dbg !3103
  %9 = load %struct._ffi_type*, %struct._ffi_type** %pffi_type, align 8, !dbg !3103, !tbaa !3104
  %alignment = getelementptr inbounds %struct._ffi_type, %struct._ffi_type* %9, i32 0, i32 1, !dbg !3106
  %10 = load i16, i16* %alignment, align 2, !dbg !3106, !tbaa !3107
  %conv = zext i16 %10 to i64, !dbg !3102
  %11 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3108, !tbaa !2522
  %align = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %11, i32 0, i32 2, !dbg !3109
  store i64 %conv, i64* %align, align 8, !dbg !3110, !tbaa !3111
  %12 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3112, !tbaa !2522
  %length = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %12, i32 0, i32 3, !dbg !3113
  store i64 1, i64* %length, align 8, !dbg !3114, !tbaa !3115
  %13 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3116, !tbaa !2522
  %ffi_type_pointer = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %13, i32 0, i32 4, !dbg !3117
  %14 = bitcast %struct._ffi_type* %ffi_type_pointer to i8*, !dbg !3118
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* bitcast (%struct._ffi_type* @ffi_type_pointer to i8*), i64 24, i32 8, i1 false), !dbg !3118, !tbaa.struct !3119
  %15 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3121, !tbaa !2522
  %paramfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %15, i32 0, i32 8, !dbg !3122
  store %struct.tagPyCArgObject* (%struct.tagCDataObject*)* @PyCPointerType_paramfunc, %struct.tagPyCArgObject* (%struct.tagCDataObject*)** %paramfunc, align 8, !dbg !3123, !tbaa !3124
  %16 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3125, !tbaa !2522
  %flags = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %16, i32 0, i32 13, !dbg !3126
  %17 = load i32, i32* %flags, align 4, !dbg !3127, !tbaa !3128
  %or = or i32 %17, 256, !dbg !3127
  store i32 %or, i32* %flags, align 4, !dbg !3127, !tbaa !3128
  %18 = load %struct._object*, %struct._object** %typedict, align 8, !dbg !3129, !tbaa !2522
  %call6 = call %struct._object* @PyDict_GetItemString(%struct._object* %18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0)), !dbg !3130
  store %struct._object* %call6, %struct._object** %proto, align 8, !dbg !3131, !tbaa !2522
  %19 = load %struct._object*, %struct._object** %proto, align 8, !dbg !3132, !tbaa !2522
  %tobool7 = icmp ne %struct._object* %19, null, !dbg !3132
  br i1 %tobool7, label %land.lhs.true, label %if.end.15, !dbg !3133

land.lhs.true:                                    ; preds = %if.end.4
  %20 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3134, !tbaa !2522
  %21 = load %struct._object*, %struct._object** %proto, align 8, !dbg !3136, !tbaa !2522
  %call8 = call i32 @PyCPointerType_SetProto(%struct.StgDictObject* %20, %struct._object* %21), !dbg !3137
  %cmp = icmp eq i32 -1, %call8, !dbg !3138
  br i1 %cmp, label %if.then.10, label %if.end.15, !dbg !3139

if.then.10:                                       ; preds = %land.lhs.true
  br label %do.body, !dbg !3140

do.body:                                          ; preds = %if.then.10
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3141
  call void @llvm.lifetime.start(i64 8, i8* %22) #2, !dbg !3141
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1026, metadata !2526), !dbg !3143
  %23 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3144, !tbaa !2522
  %24 = bitcast %struct.StgDictObject* %23 to %struct._object*, !dbg !3145
  store %struct._object* %24, %struct._object** %_py_decref_tmp, align 8, !dbg !3143, !tbaa !2522
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3146, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !3148
  %26 = load i64, i64* %ob_refcnt, align 8, !dbg !3149, !tbaa !2551
  %dec = add i64 %26, -1, !dbg !3149
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3149, !tbaa !2551
  %cmp11 = icmp ne i64 %dec, 0, !dbg !3150
  br i1 %cmp11, label %if.then.13, label %if.else, !dbg !3151

if.then.13:                                       ; preds = %do.body
  br label %if.end.14, !dbg !3152

if.else:                                          ; preds = %do.body
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3154, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !3156
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3156, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !3157
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3157, !tbaa !2590
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3158, !tbaa !2522
  call void %29(%struct._object* %30), !dbg !3159
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.13
  %31 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3160
  call void @llvm.lifetime.end(i64 8, i8* %31) #2, !dbg !3160
  br label %do.cond, !dbg !3162

do.cond:                                          ; preds = %if.end.14
  br label %do.end, !dbg !3163

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !3165
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.115, !dbg !3165

if.end.15:                                        ; preds = %land.lhs.true, %if.end.4
  %32 = load %struct._object*, %struct._object** %proto, align 8, !dbg !3166, !tbaa !2522
  %tobool16 = icmp ne %struct._object* %32, null, !dbg !3166
  br i1 %tobool16, label %if.then.17, label %if.end.50, !dbg !3167

if.then.17:                                       ; preds = %if.end.15
  %33 = bitcast %struct.StgDictObject** %itemdict to i8*, !dbg !3168
  call void @llvm.lifetime.start(i64 8, i8* %33) #2, !dbg !3168
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %itemdict, metadata !1030, metadata !2526), !dbg !3169
  %34 = load %struct._object*, %struct._object** %proto, align 8, !dbg !3170, !tbaa !2522
  %call18 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %34), !dbg !3171
  store %struct.StgDictObject* %call18, %struct.StgDictObject** %itemdict, align 8, !dbg !3169, !tbaa !2522
  %35 = bitcast i8** %current_format to i8*, !dbg !3172
  call void @llvm.lifetime.start(i64 8, i8* %35) #2, !dbg !3172
  call void @llvm.dbg.declare(metadata i8** %current_format, metadata !1033, metadata !2526), !dbg !3173
  %36 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !3174, !tbaa !2522
  %format = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %36, i32 0, i32 14, !dbg !3175
  %37 = load i8*, i8** %format, align 8, !dbg !3175, !tbaa !3176
  %tobool19 = icmp ne i8* %37, null, !dbg !3174
  br i1 %tobool19, label %cond.true, label %cond.false, !dbg !3174

cond.true:                                        ; preds = %if.then.17
  %38 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !3177, !tbaa !2522
  %format20 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %38, i32 0, i32 14, !dbg !3179
  %39 = load i8*, i8** %format20, align 8, !dbg !3179, !tbaa !3176
  br label %cond.end, !dbg !3174

cond.false:                                       ; preds = %if.then.17
  br label %cond.end, !dbg !3180

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %39, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71, i32 0, i32 0), %cond.false ], !dbg !3174
  store i8* %cond, i8** %current_format, align 8, !dbg !3182, !tbaa !2522
  %40 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !3185, !tbaa !2522
  %shape = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %40, i32 0, i32 16, !dbg !3187
  %41 = load i64*, i64** %shape, align 8, !dbg !3187, !tbaa !3188
  %cmp21 = icmp ne i64* %41, null, !dbg !3189
  br i1 %cmp21, label %if.then.23, label %if.else.27, !dbg !3190

if.then.23:                                       ; preds = %cond.end
  %42 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !3191, !tbaa !2522
  %ndim = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %42, i32 0, i32 15, !dbg !3193
  %43 = load i32, i32* %ndim, align 4, !dbg !3193, !tbaa !3194
  %44 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !3195, !tbaa !2522
  %shape24 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %44, i32 0, i32 16, !dbg !3196
  %45 = load i64*, i64** %shape24, align 8, !dbg !3196, !tbaa !3188
  %46 = load i8*, i8** %current_format, align 8, !dbg !3197, !tbaa !2522
  %call25 = call i8* @_ctypes_alloc_format_string_with_shape(i32 %43, i64* %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.77, i32 0, i32 0), i8* %46), !dbg !3198
  %47 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3199, !tbaa !2522
  %format26 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %47, i32 0, i32 14, !dbg !3200
  store i8* %call25, i8** %format26, align 8, !dbg !3201, !tbaa !3176
  br label %if.end.30, !dbg !3202

if.else.27:                                       ; preds = %cond.end
  %48 = load i8*, i8** %current_format, align 8, !dbg !3203, !tbaa !2522
  %call28 = call i8* @_ctypes_alloc_format_string(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.77, i32 0, i32 0), i8* %48), !dbg !3205
  %49 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3206, !tbaa !2522
  %format29 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %49, i32 0, i32 14, !dbg !3207
  store i8* %call28, i8** %format29, align 8, !dbg !3208, !tbaa !3176
  br label %if.end.30

if.end.30:                                        ; preds = %if.else.27, %if.then.23
  %50 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3209, !tbaa !2522
  %format31 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %50, i32 0, i32 14, !dbg !3210
  %51 = load i8*, i8** %format31, align 8, !dbg !3210, !tbaa !3176
  %cmp32 = icmp eq i8* %51, null, !dbg !3211
  br i1 %cmp32, label %if.then.34, label %if.end.48, !dbg !3212

if.then.34:                                       ; preds = %if.end.30
  br label %do.body.35, !dbg !3213

do.body.35:                                       ; preds = %if.then.34
  %52 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !3214
  call void @llvm.lifetime.start(i64 8, i8* %52) #2, !dbg !3214
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp36, metadata !1034, metadata !2526), !dbg !3216
  %53 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3217, !tbaa !2522
  %54 = bitcast %struct.StgDictObject* %53 to %struct._object*, !dbg !3218
  store %struct._object* %54, %struct._object** %_py_decref_tmp36, align 8, !dbg !3216, !tbaa !2522
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !3219, !tbaa !2522
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 0, !dbg !3221
  %56 = load i64, i64* %ob_refcnt37, align 8, !dbg !3222, !tbaa !2551
  %dec38 = add i64 %56, -1, !dbg !3222
  store i64 %dec38, i64* %ob_refcnt37, align 8, !dbg !3222, !tbaa !2551
  %cmp39 = icmp ne i64 %dec38, 0, !dbg !3223
  br i1 %cmp39, label %if.then.41, label %if.else.42, !dbg !3224

if.then.41:                                       ; preds = %do.body.35
  br label %if.end.45, !dbg !3225

if.else.42:                                       ; preds = %do.body.35
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !3227, !tbaa !2522
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 1, !dbg !3229
  %58 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !3229, !tbaa !2588
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %58, i32 0, i32 4, !dbg !3230
  %59 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8, !dbg !3230, !tbaa !2590
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !3231, !tbaa !2522
  call void %59(%struct._object* %60), !dbg !3232
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.42, %if.then.41
  %61 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !3233
  call void @llvm.lifetime.end(i64 8, i8* %61) #2, !dbg !3233
  br label %do.cond.46, !dbg !3235

do.cond.46:                                       ; preds = %if.end.45
  br label %do.end.47, !dbg !3236

do.end.47:                                        ; preds = %do.cond.46
  store %struct._object* null, %struct._object** %retval, !dbg !3238
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3238

if.end.48:                                        ; preds = %if.end.30
  store i32 0, i32* %cleanup.dest.slot, !dbg !3239
  br label %cleanup, !dbg !3239

cleanup:                                          ; preds = %if.end.48, %do.end.47
  %62 = bitcast i8** %current_format to i8*, !dbg !3240
  call void @llvm.lifetime.end(i64 8, i8* %62) #2, !dbg !3240
  %63 = bitcast %struct.StgDictObject** %itemdict to i8*, !dbg !3240
  call void @llvm.lifetime.end(i64 8, i8* %63) #2, !dbg !3240
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.50, !dbg !3242

if.end.50:                                        ; preds = %cleanup.cont, %if.end.15
  %64 = load %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyType_Type, i32 0, i32 37), align 8, !dbg !3243, !tbaa !3244
  %65 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3245, !tbaa !2522
  %66 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !3246, !tbaa !2522
  %67 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3247, !tbaa !2522
  %call51 = call %struct._object* %64(%struct._typeobject* %65, %struct._object* %66, %struct._object* %67), !dbg !3248
  %68 = bitcast %struct._object* %call51 to %struct._typeobject*, !dbg !3249
  store %struct._typeobject* %68, %struct._typeobject** %result, align 8, !dbg !3250, !tbaa !2522
  %69 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3251, !tbaa !2522
  %cmp52 = icmp eq %struct._typeobject* %69, null, !dbg !3252
  br i1 %cmp52, label %if.then.54, label %if.end.68, !dbg !3253

if.then.54:                                       ; preds = %if.end.50
  br label %do.body.55, !dbg !3254

do.body.55:                                       ; preds = %if.then.54
  %70 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !3255
  call void @llvm.lifetime.start(i64 8, i8* %70) #2, !dbg !3255
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp56, metadata !1038, metadata !2526), !dbg !3257
  %71 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3258, !tbaa !2522
  %72 = bitcast %struct.StgDictObject* %71 to %struct._object*, !dbg !3259
  store %struct._object* %72, %struct._object** %_py_decref_tmp56, align 8, !dbg !3257, !tbaa !2522
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !3260, !tbaa !2522
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 0, !dbg !3262
  %74 = load i64, i64* %ob_refcnt57, align 8, !dbg !3263, !tbaa !2551
  %dec58 = add i64 %74, -1, !dbg !3263
  store i64 %dec58, i64* %ob_refcnt57, align 8, !dbg !3263, !tbaa !2551
  %cmp59 = icmp ne i64 %dec58, 0, !dbg !3264
  br i1 %cmp59, label %if.then.61, label %if.else.62, !dbg !3265

if.then.61:                                       ; preds = %do.body.55
  br label %if.end.65, !dbg !3266

if.else.62:                                       ; preds = %do.body.55
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !3268, !tbaa !2522
  %ob_type63 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 1, !dbg !3270
  %76 = load %struct._typeobject*, %struct._typeobject** %ob_type63, align 8, !dbg !3270, !tbaa !2588
  %tp_dealloc64 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %76, i32 0, i32 4, !dbg !3271
  %77 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc64, align 8, !dbg !3271, !tbaa !2590
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !3272, !tbaa !2522
  call void %77(%struct._object* %78), !dbg !3273
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.62, %if.then.61
  %79 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !3274
  call void @llvm.lifetime.end(i64 8, i8* %79) #2, !dbg !3274
  br label %do.cond.66, !dbg !3276

do.cond.66:                                       ; preds = %if.end.65
  br label %do.end.67, !dbg !3277

do.end.67:                                        ; preds = %do.cond.66
  store %struct._object* null, %struct._object** %retval, !dbg !3279
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.115, !dbg !3279

if.end.68:                                        ; preds = %if.end.50
  %80 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3280, !tbaa !2522
  %81 = bitcast %struct.StgDictObject* %80 to %struct._object*, !dbg !3281
  %82 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3282, !tbaa !2522
  %tp_dict = getelementptr inbounds %struct._typeobject, %struct._typeobject* %82, i32 0, i32 31, !dbg !3283
  %83 = load %struct._object*, %struct._object** %tp_dict, align 8, !dbg !3283, !tbaa !3284
  %call69 = call i32 @PyDict_Update(%struct._object* %81, %struct._object* %83), !dbg !3285
  %cmp70 = icmp eq i32 -1, %call69, !dbg !3286
  br i1 %cmp70, label %if.then.72, label %if.end.99, !dbg !3287

if.then.72:                                       ; preds = %if.end.68
  br label %do.body.73, !dbg !3288

do.body.73:                                       ; preds = %if.then.72
  %84 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !3289
  call void @llvm.lifetime.start(i64 8, i8* %84) #2, !dbg !3289
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp74, metadata !1042, metadata !2526), !dbg !3291
  %85 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3292, !tbaa !2522
  %86 = bitcast %struct._typeobject* %85 to %struct._object*, !dbg !3293
  store %struct._object* %86, %struct._object** %_py_decref_tmp74, align 8, !dbg !3291, !tbaa !2522
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !3294, !tbaa !2522
  %ob_refcnt75 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 0, !dbg !3296
  %88 = load i64, i64* %ob_refcnt75, align 8, !dbg !3297, !tbaa !2551
  %dec76 = add i64 %88, -1, !dbg !3297
  store i64 %dec76, i64* %ob_refcnt75, align 8, !dbg !3297, !tbaa !2551
  %cmp77 = icmp ne i64 %dec76, 0, !dbg !3298
  br i1 %cmp77, label %if.then.79, label %if.else.80, !dbg !3299

if.then.79:                                       ; preds = %do.body.73
  br label %if.end.83, !dbg !3300

if.else.80:                                       ; preds = %do.body.73
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !3302, !tbaa !2522
  %ob_type81 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 1, !dbg !3304
  %90 = load %struct._typeobject*, %struct._typeobject** %ob_type81, align 8, !dbg !3304, !tbaa !2588
  %tp_dealloc82 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %90, i32 0, i32 4, !dbg !3305
  %91 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc82, align 8, !dbg !3305, !tbaa !2590
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !3306, !tbaa !2522
  call void %91(%struct._object* %92), !dbg !3307
  br label %if.end.83

if.end.83:                                        ; preds = %if.else.80, %if.then.79
  %93 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !3308
  call void @llvm.lifetime.end(i64 8, i8* %93) #2, !dbg !3308
  br label %do.cond.84, !dbg !3310

do.cond.84:                                       ; preds = %if.end.83
  br label %do.end.85, !dbg !3311

do.end.85:                                        ; preds = %do.cond.84
  br label %do.body.86, !dbg !3313

do.body.86:                                       ; preds = %do.end.85
  %94 = bitcast %struct._object** %_py_decref_tmp87 to i8*, !dbg !3314
  call void @llvm.lifetime.start(i64 8, i8* %94) #2, !dbg !3314
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp87, metadata !1046, metadata !2526), !dbg !3316
  %95 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3317, !tbaa !2522
  %96 = bitcast %struct.StgDictObject* %95 to %struct._object*, !dbg !3318
  store %struct._object* %96, %struct._object** %_py_decref_tmp87, align 8, !dbg !3316, !tbaa !2522
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !3319, !tbaa !2522
  %ob_refcnt88 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 0, !dbg !3321
  %98 = load i64, i64* %ob_refcnt88, align 8, !dbg !3322, !tbaa !2551
  %dec89 = add i64 %98, -1, !dbg !3322
  store i64 %dec89, i64* %ob_refcnt88, align 8, !dbg !3322, !tbaa !2551
  %cmp90 = icmp ne i64 %dec89, 0, !dbg !3323
  br i1 %cmp90, label %if.then.92, label %if.else.93, !dbg !3324

if.then.92:                                       ; preds = %do.body.86
  br label %if.end.96, !dbg !3325

if.else.93:                                       ; preds = %do.body.86
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !3327, !tbaa !2522
  %ob_type94 = getelementptr inbounds %struct._object, %struct._object* %99, i32 0, i32 1, !dbg !3329
  %100 = load %struct._typeobject*, %struct._typeobject** %ob_type94, align 8, !dbg !3329, !tbaa !2588
  %tp_dealloc95 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %100, i32 0, i32 4, !dbg !3330
  %101 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc95, align 8, !dbg !3330, !tbaa !2590
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !3331, !tbaa !2522
  call void %101(%struct._object* %102), !dbg !3332
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.93, %if.then.92
  %103 = bitcast %struct._object** %_py_decref_tmp87 to i8*, !dbg !3333
  call void @llvm.lifetime.end(i64 8, i8* %103) #2, !dbg !3333
  br label %do.cond.97, !dbg !3334

do.cond.97:                                       ; preds = %if.end.96
  br label %do.end.98, !dbg !3335

do.end.98:                                        ; preds = %do.cond.97
  store %struct._object* null, %struct._object** %retval, !dbg !3337
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.115, !dbg !3337

if.end.99:                                        ; preds = %if.end.68
  br label %do.body.100, !dbg !3338

do.body.100:                                      ; preds = %if.end.99
  %104 = bitcast %struct._object** %_py_decref_tmp101 to i8*, !dbg !3339
  call void @llvm.lifetime.start(i64 8, i8* %104) #2, !dbg !3339
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp101, metadata !1048, metadata !2526), !dbg !3341
  %105 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3342, !tbaa !2522
  %tp_dict102 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %105, i32 0, i32 31, !dbg !3343
  %106 = load %struct._object*, %struct._object** %tp_dict102, align 8, !dbg !3343, !tbaa !3284
  store %struct._object* %106, %struct._object** %_py_decref_tmp101, align 8, !dbg !3341, !tbaa !2522
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp101, align 8, !dbg !3344, !tbaa !2522
  %ob_refcnt103 = getelementptr inbounds %struct._object, %struct._object* %107, i32 0, i32 0, !dbg !3346
  %108 = load i64, i64* %ob_refcnt103, align 8, !dbg !3347, !tbaa !2551
  %dec104 = add i64 %108, -1, !dbg !3347
  store i64 %dec104, i64* %ob_refcnt103, align 8, !dbg !3347, !tbaa !2551
  %cmp105 = icmp ne i64 %dec104, 0, !dbg !3348
  br i1 %cmp105, label %if.then.107, label %if.else.108, !dbg !3349

if.then.107:                                      ; preds = %do.body.100
  br label %if.end.111, !dbg !3350

if.else.108:                                      ; preds = %do.body.100
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp101, align 8, !dbg !3352, !tbaa !2522
  %ob_type109 = getelementptr inbounds %struct._object, %struct._object* %109, i32 0, i32 1, !dbg !3354
  %110 = load %struct._typeobject*, %struct._typeobject** %ob_type109, align 8, !dbg !3354, !tbaa !2588
  %tp_dealloc110 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %110, i32 0, i32 4, !dbg !3355
  %111 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc110, align 8, !dbg !3355, !tbaa !2590
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp101, align 8, !dbg !3356, !tbaa !2522
  call void %111(%struct._object* %112), !dbg !3357
  br label %if.end.111

if.end.111:                                       ; preds = %if.else.108, %if.then.107
  %113 = bitcast %struct._object** %_py_decref_tmp101 to i8*, !dbg !3358
  call void @llvm.lifetime.end(i64 8, i8* %113) #2, !dbg !3358
  br label %do.cond.112, !dbg !3360

do.cond.112:                                      ; preds = %if.end.111
  br label %do.end.113, !dbg !3361

do.end.113:                                       ; preds = %do.cond.112
  %114 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3363, !tbaa !2522
  %115 = bitcast %struct.StgDictObject* %114 to %struct._object*, !dbg !3364
  %116 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3365, !tbaa !2522
  %tp_dict114 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %116, i32 0, i32 31, !dbg !3366
  store %struct._object* %115, %struct._object** %tp_dict114, align 8, !dbg !3367, !tbaa !3284
  %117 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3368, !tbaa !2522
  %118 = bitcast %struct._typeobject* %117 to %struct._object*, !dbg !3369
  store %struct._object* %118, %struct._object** %retval, !dbg !3370
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.115, !dbg !3370

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.115

cleanup.115:                                      ; preds = %NewDefault, %do.end.113, %do.end.98, %do.end.67, %do.end, %if.then.3, %if.then
  %119 = bitcast %struct._object** %typedict to i8*, !dbg !3371
  call void @llvm.lifetime.end(i64 8, i8* %119) #2, !dbg !3371
  %120 = bitcast %struct._object** %proto to i8*, !dbg !3371
  call void @llvm.lifetime.end(i64 8, i8* %120) #2, !dbg !3371
  %121 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !3371
  call void @llvm.lifetime.end(i64 8, i8* %121) #2, !dbg !3371
  %122 = bitcast %struct._typeobject** %result to i8*, !dbg !3371
  call void @llvm.lifetime.end(i64 8, i8* %122) #2, !dbg !3371
  %123 = load %struct._object*, %struct._object** %retval, !dbg !3371
  ret %struct._object* %123, !dbg !3371
}

; Function Attrs: uwtable
define internal %struct._object* @PyCArrayType_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %result = alloca %struct._typeobject*, align 8
  %stgdict = alloca %struct.StgDictObject*, align 8
  %itemdict = alloca %struct.StgDictObject*, align 8
  %length_attr = alloca %struct._object*, align 8
  %type_attr = alloca %struct._object*, align 8
  %length = alloca i64, align 8
  %overflow = alloca i32, align 4
  %itemsize = alloca i64, align 8
  %itemalign = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp19 = alloca %struct._object*, align 8
  %_py_decref_tmp32 = alloca %struct._object*, align 8
  %_py_decref_tmp97 = alloca %struct._object*, align 8
  %_py_xdecref_tmp136 = alloca %struct._object*, align 8
  %_py_decref_tmp141 = alloca %struct._object*, align 8
  %_py_xdecref_tmp157 = alloca %struct._object*, align 8
  %_py_decref_tmp162 = alloca %struct._object*, align 8
  %_py_decref_tmp178 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1056, metadata !2526), !dbg !3372
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1057, metadata !2526), !dbg !3373
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1058, metadata !2526), !dbg !3374
  %0 = bitcast %struct._typeobject** %result to i8*, !dbg !3375
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3375
  call void @llvm.dbg.declare(metadata %struct._typeobject** %result, metadata !1059, metadata !2526), !dbg !3376
  %1 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !3377
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !3377
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict, metadata !1060, metadata !2526), !dbg !3378
  %2 = bitcast %struct.StgDictObject** %itemdict to i8*, !dbg !3379
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !3379
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %itemdict, metadata !1061, metadata !2526), !dbg !3380
  %3 = bitcast %struct._object** %length_attr to i8*, !dbg !3381
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !3381
  call void @llvm.dbg.declare(metadata %struct._object** %length_attr, metadata !1062, metadata !2526), !dbg !3382
  %4 = bitcast %struct._object** %type_attr to i8*, !dbg !3381
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !3381
  call void @llvm.dbg.declare(metadata %struct._object** %type_attr, metadata !1063, metadata !2526), !dbg !3383
  %5 = bitcast i64* %length to i8*, !dbg !3384
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !3384
  call void @llvm.dbg.declare(metadata i64* %length, metadata !1064, metadata !2526), !dbg !3385
  %6 = bitcast i32* %overflow to i8*, !dbg !3386
  call void @llvm.lifetime.start(i64 4, i8* %6) #2, !dbg !3386
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !1065, metadata !2526), !dbg !3387
  %7 = bitcast i64* %itemsize to i8*, !dbg !3388
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !3388
  call void @llvm.dbg.declare(metadata i64* %itemsize, metadata !1066, metadata !2526), !dbg !3389
  %8 = bitcast i64* %itemalign to i8*, !dbg !3388
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !3388
  call void @llvm.dbg.declare(metadata i64* %itemalign, metadata !1067, metadata !2526), !dbg !3390
  %9 = load %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyType_Type, i32 0, i32 37), align 8, !dbg !3391, !tbaa !3244
  %10 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3392, !tbaa !2522
  %11 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !3393, !tbaa !2522
  %12 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3394, !tbaa !2522
  %call = call %struct._object* %9(%struct._typeobject* %10, %struct._object* %11, %struct._object* %12), !dbg !3395
  %13 = bitcast %struct._object* %call to %struct._typeobject*, !dbg !3396
  store %struct._typeobject* %13, %struct._typeobject** %result, align 8, !dbg !3397, !tbaa !2522
  %14 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3398, !tbaa !2522
  %cmp = icmp eq %struct._typeobject* %14, null, !dbg !3400
  br i1 %cmp, label %if.then, label %if.end, !dbg !3401

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3402
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3402

if.end:                                           ; preds = %entry
  store %struct.StgDictObject* null, %struct.StgDictObject** %stgdict, align 8, !dbg !3403, !tbaa !2522
  store %struct._object* null, %struct._object** %type_attr, align 8, !dbg !3404, !tbaa !2522
  %15 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3405, !tbaa !2522
  %16 = bitcast %struct._typeobject* %15 to %struct._object*, !dbg !3406
  %call1 = call %struct._object* @PyObject_GetAttrString(%struct._object* %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i32 0, i32 0)), !dbg !3407
  store %struct._object* %call1, %struct._object** %length_attr, align 8, !dbg !3408, !tbaa !2522
  %17 = load %struct._object*, %struct._object** %length_attr, align 8, !dbg !3409, !tbaa !2522
  %tobool = icmp ne %struct._object* %17, null, !dbg !3409
  br i1 %tobool, label %lor.lhs.false, label %if.then.3, !dbg !3410

lor.lhs.false:                                    ; preds = %if.end
  %18 = load %struct._object*, %struct._object** %length_attr, align 8, !dbg !3411, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !3413
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3413, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 19, !dbg !3414
  %20 = load i64, i64* %tp_flags, align 8, !dbg !3414, !tbaa !2849
  %and = and i64 %20, 16777216, !dbg !3415
  %cmp2 = icmp ne i64 %and, 0, !dbg !3416
  br i1 %cmp2, label %if.end.14, label %if.then.3, !dbg !3417

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  %21 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !3418, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %21, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.78, i32 0, i32 0)), !dbg !3419
  br label %do.body, !dbg !3420

do.body:                                          ; preds = %if.then.3
  %22 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3421
  call void @llvm.lifetime.start(i64 8, i8* %22) #2, !dbg !3421
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1068, metadata !2526), !dbg !3423
  %23 = load %struct._object*, %struct._object** %length_attr, align 8, !dbg !3424, !tbaa !2522
  store %struct._object* %23, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3423, !tbaa !2522
  %24 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3425, !tbaa !2522
  %cmp4 = icmp ne %struct._object* %24, null, !dbg !3426
  br i1 %cmp4, label %if.then.5, label %if.end.11, !dbg !3427

if.then.5:                                        ; preds = %do.body
  br label %do.body.6, !dbg !3428

do.body.6:                                        ; preds = %if.then.5
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3430
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !3430
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1072, metadata !2526), !dbg !3432
  %26 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3433, !tbaa !2522
  store %struct._object* %26, %struct._object** %_py_decref_tmp, align 8, !dbg !3432, !tbaa !2522
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3434, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !3436
  %28 = load i64, i64* %ob_refcnt, align 8, !dbg !3437, !tbaa !2551
  %dec = add i64 %28, -1, !dbg !3437
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3437, !tbaa !2551
  %cmp7 = icmp ne i64 %dec, 0, !dbg !3438
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !3439

if.then.8:                                        ; preds = %do.body.6
  br label %if.end.10, !dbg !3440

if.else:                                          ; preds = %do.body.6
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3442, !tbaa !2522
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !3444
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !3444, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !3445
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3445, !tbaa !2590
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3446, !tbaa !2522
  call void %31(%struct._object* %32), !dbg !3447
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.then.8
  %33 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3448
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !3448
  br label %do.cond, !dbg !3450

do.cond:                                          ; preds = %if.end.10
  br label %do.end, !dbg !3451

do.end:                                           ; preds = %do.cond
  br label %if.end.11, !dbg !3453

if.end.11:                                        ; preds = %do.end, %do.body
  %34 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3455
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !3455
  br label %do.cond.12, !dbg !3458

do.cond.12:                                       ; preds = %if.end.11
  br label %do.end.13, !dbg !3459

do.end.13:                                        ; preds = %do.cond.12
  br label %error, !dbg !3461

if.end.14:                                        ; preds = %lor.lhs.false
  %35 = load %struct._object*, %struct._object** %length_attr, align 8, !dbg !3462, !tbaa !2522
  %call15 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %35, i32* %overflow), !dbg !3463
  store i64 %call15, i64* %length, align 8, !dbg !3464, !tbaa !2704
  %36 = load i32, i32* %overflow, align 4, !dbg !3465, !tbaa !2611
  %tobool16 = icmp ne i32 %36, 0, !dbg !3465
  br i1 %tobool16, label %if.then.17, label %if.end.30, !dbg !3466

if.then.17:                                       ; preds = %if.end.14
  %37 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !3467, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %37, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.79, i32 0, i32 0)), !dbg !3468
  br label %do.body.18, !dbg !3469

do.body.18:                                       ; preds = %if.then.17
  %38 = bitcast %struct._object** %_py_decref_tmp19 to i8*, !dbg !3470
  call void @llvm.lifetime.start(i64 8, i8* %38) #2, !dbg !3470
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp19, metadata !1075, metadata !2526), !dbg !3472
  %39 = load %struct._object*, %struct._object** %length_attr, align 8, !dbg !3473, !tbaa !2522
  store %struct._object* %39, %struct._object** %_py_decref_tmp19, align 8, !dbg !3472, !tbaa !2522
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !3474, !tbaa !2522
  %ob_refcnt20 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0, !dbg !3476
  %41 = load i64, i64* %ob_refcnt20, align 8, !dbg !3477, !tbaa !2551
  %dec21 = add i64 %41, -1, !dbg !3477
  store i64 %dec21, i64* %ob_refcnt20, align 8, !dbg !3477, !tbaa !2551
  %cmp22 = icmp ne i64 %dec21, 0, !dbg !3478
  br i1 %cmp22, label %if.then.23, label %if.else.24, !dbg !3479

if.then.23:                                       ; preds = %do.body.18
  br label %if.end.27, !dbg !3480

if.else.24:                                       ; preds = %do.body.18
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !3482, !tbaa !2522
  %ob_type25 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1, !dbg !3484
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !3484, !tbaa !2588
  %tp_dealloc26 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4, !dbg !3485
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc26, align 8, !dbg !3485, !tbaa !2590
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !3486, !tbaa !2522
  call void %44(%struct._object* %45), !dbg !3487
  br label %if.end.27

if.end.27:                                        ; preds = %if.else.24, %if.then.23
  %46 = bitcast %struct._object** %_py_decref_tmp19 to i8*, !dbg !3488
  call void @llvm.lifetime.end(i64 8, i8* %46) #2, !dbg !3488
  br label %do.cond.28, !dbg !3490

do.cond.28:                                       ; preds = %if.end.27
  br label %do.end.29, !dbg !3491

do.end.29:                                        ; preds = %do.cond.28
  br label %error, !dbg !3493

if.end.30:                                        ; preds = %if.end.14
  br label %do.body.31, !dbg !3494

do.body.31:                                       ; preds = %if.end.30
  %47 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !3495
  call void @llvm.lifetime.start(i64 8, i8* %47) #2, !dbg !3495
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp32, metadata !1079, metadata !2526), !dbg !3497
  %48 = load %struct._object*, %struct._object** %length_attr, align 8, !dbg !3498, !tbaa !2522
  store %struct._object* %48, %struct._object** %_py_decref_tmp32, align 8, !dbg !3497, !tbaa !2522
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !3499, !tbaa !2522
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0, !dbg !3501
  %50 = load i64, i64* %ob_refcnt33, align 8, !dbg !3502, !tbaa !2551
  %dec34 = add i64 %50, -1, !dbg !3502
  store i64 %dec34, i64* %ob_refcnt33, align 8, !dbg !3502, !tbaa !2551
  %cmp35 = icmp ne i64 %dec34, 0, !dbg !3503
  br i1 %cmp35, label %if.then.36, label %if.else.37, !dbg !3504

if.then.36:                                       ; preds = %do.body.31
  br label %if.end.40, !dbg !3505

if.else.37:                                       ; preds = %do.body.31
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !3507, !tbaa !2522
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 1, !dbg !3509
  %52 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8, !dbg !3509, !tbaa !2588
  %tp_dealloc39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %52, i32 0, i32 4, !dbg !3510
  %53 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc39, align 8, !dbg !3510, !tbaa !2590
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !3511, !tbaa !2522
  call void %53(%struct._object* %54), !dbg !3512
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.37, %if.then.36
  %55 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !3513
  call void @llvm.lifetime.end(i64 8, i8* %55) #2, !dbg !3513
  br label %do.cond.41, !dbg !3515

do.cond.41:                                       ; preds = %if.end.40
  br label %do.end.42, !dbg !3516

do.end.42:                                        ; preds = %do.cond.41
  %56 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3518, !tbaa !2522
  %57 = bitcast %struct._typeobject* %56 to %struct._object*, !dbg !3519
  %call43 = call %struct._object* @PyObject_GetAttrString(%struct._object* %57, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0)), !dbg !3520
  store %struct._object* %call43, %struct._object** %type_attr, align 8, !dbg !3521, !tbaa !2522
  %58 = load %struct._object*, %struct._object** %type_attr, align 8, !dbg !3522, !tbaa !2522
  %tobool44 = icmp ne %struct._object* %58, null, !dbg !3522
  br i1 %tobool44, label %if.end.46, label %if.then.45, !dbg !3524

if.then.45:                                       ; preds = %do.end.42
  %59 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !3525, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %59, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.80, i32 0, i32 0)), !dbg !3527
  br label %error, !dbg !3528

if.end.46:                                        ; preds = %do.end.42
  %call47 = call %struct._object* @PyObject_CallObject(%struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyCStgDict_Type, i32 0, i32 0, i32 0), %struct._object* null), !dbg !3529
  %60 = bitcast %struct._object* %call47 to %struct.StgDictObject*, !dbg !3530
  store %struct.StgDictObject* %60, %struct.StgDictObject** %stgdict, align 8, !dbg !3531, !tbaa !2522
  %61 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3532, !tbaa !2522
  %tobool48 = icmp ne %struct.StgDictObject* %61, null, !dbg !3532
  br i1 %tobool48, label %if.end.50, label %if.then.49, !dbg !3534

if.then.49:                                       ; preds = %if.end.46
  br label %error, !dbg !3535

if.end.50:                                        ; preds = %if.end.46
  %62 = load %struct._object*, %struct._object** %type_attr, align 8, !dbg !3536, !tbaa !2522
  %call51 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %62), !dbg !3537
  store %struct.StgDictObject* %call51, %struct.StgDictObject** %itemdict, align 8, !dbg !3538, !tbaa !2522
  %63 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !3539, !tbaa !2522
  %tobool52 = icmp ne %struct.StgDictObject* %63, null, !dbg !3539
  br i1 %tobool52, label %if.end.54, label %if.then.53, !dbg !3541

if.then.53:                                       ; preds = %if.end.50
  %64 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3542, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %64, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.75, i32 0, i32 0)), !dbg !3544
  br label %error, !dbg !3545

if.end.54:                                        ; preds = %if.end.50
  %65 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !3546, !tbaa !2522
  %format = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %65, i32 0, i32 14, !dbg !3547
  %66 = load i8*, i8** %format, align 8, !dbg !3547, !tbaa !3176
  %call55 = call i8* @_ctypes_alloc_format_string(i8* null, i8* %66), !dbg !3548
  %67 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3549, !tbaa !2522
  %format56 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %67, i32 0, i32 14, !dbg !3550
  store i8* %call55, i8** %format56, align 8, !dbg !3551, !tbaa !3176
  %68 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3552, !tbaa !2522
  %format57 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %68, i32 0, i32 14, !dbg !3554
  %69 = load i8*, i8** %format57, align 8, !dbg !3554, !tbaa !3176
  %cmp58 = icmp eq i8* %69, null, !dbg !3555
  br i1 %cmp58, label %if.then.59, label %if.end.60, !dbg !3556

if.then.59:                                       ; preds = %if.end.54
  br label %error, !dbg !3557

if.end.60:                                        ; preds = %if.end.54
  %70 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !3558, !tbaa !2522
  %ndim = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %70, i32 0, i32 15, !dbg !3559
  %71 = load i32, i32* %ndim, align 4, !dbg !3559, !tbaa !3194
  %add = add i32 %71, 1, !dbg !3560
  %72 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3561, !tbaa !2522
  %ndim61 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %72, i32 0, i32 15, !dbg !3562
  store i32 %add, i32* %ndim61, align 4, !dbg !3563, !tbaa !3194
  %73 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3564, !tbaa !2522
  %ndim62 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %73, i32 0, i32 15, !dbg !3565
  %74 = load i32, i32* %ndim62, align 4, !dbg !3565, !tbaa !3194
  %conv = sext i32 %74 to i64, !dbg !3564
  %mul = mul i64 8, %conv, !dbg !3566
  %call63 = call i8* @PyMem_Malloc(i64 %mul), !dbg !3567
  %75 = bitcast i8* %call63 to i64*, !dbg !3567
  %76 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3568, !tbaa !2522
  %shape = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %76, i32 0, i32 16, !dbg !3569
  store i64* %75, i64** %shape, align 8, !dbg !3570, !tbaa !3188
  %77 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3571, !tbaa !2522
  %shape64 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %77, i32 0, i32 16, !dbg !3573
  %78 = load i64*, i64** %shape64, align 8, !dbg !3573, !tbaa !3188
  %cmp65 = icmp eq i64* %78, null, !dbg !3574
  br i1 %cmp65, label %if.then.67, label %if.end.69, !dbg !3575

if.then.67:                                       ; preds = %if.end.60
  %call68 = call %struct._object* @PyErr_NoMemory(), !dbg !3576
  br label %error, !dbg !3578

if.end.69:                                        ; preds = %if.end.60
  %79 = load i64, i64* %length, align 8, !dbg !3579, !tbaa !2704
  %80 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3580, !tbaa !2522
  %shape70 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %80, i32 0, i32 16, !dbg !3581
  %81 = load i64*, i64** %shape70, align 8, !dbg !3581, !tbaa !3188
  %arrayidx = getelementptr i64, i64* %81, i64 0, !dbg !3580
  store i64 %79, i64* %arrayidx, align 8, !dbg !3582, !tbaa !2704
  %82 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3583, !tbaa !2522
  %shape71 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %82, i32 0, i32 16, !dbg !3584
  %83 = load i64*, i64** %shape71, align 8, !dbg !3584, !tbaa !3188
  %arrayidx72 = getelementptr i64, i64* %83, i64 1, !dbg !3583
  %84 = bitcast i64* %arrayidx72 to i8*, !dbg !3585
  %85 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !3586, !tbaa !2522
  %shape73 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %85, i32 0, i32 16, !dbg !3587
  %86 = load i64*, i64** %shape73, align 8, !dbg !3587, !tbaa !3188
  %87 = bitcast i64* %86 to i8*, !dbg !3585
  %88 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3588, !tbaa !2522
  %ndim74 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %88, i32 0, i32 15, !dbg !3589
  %89 = load i32, i32* %ndim74, align 4, !dbg !3589, !tbaa !3194
  %sub = sub i32 %89, 1, !dbg !3590
  %conv75 = sext i32 %sub to i64, !dbg !3591
  %mul76 = mul i64 8, %conv75, !dbg !3592
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %84, i8* %87, i64 %mul76, i32 8, i1 false), !dbg !3585
  %90 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !3593, !tbaa !2522
  %size = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %90, i32 0, i32 1, !dbg !3594
  %91 = load i64, i64* %size, align 8, !dbg !3594, !tbaa !3101
  store i64 %91, i64* %itemsize, align 8, !dbg !3595, !tbaa !2704
  %92 = load i64, i64* %length, align 8, !dbg !3596, !tbaa !2704
  %93 = load i64, i64* %itemsize, align 8, !dbg !3598, !tbaa !2704
  %mul77 = mul i64 %92, %93, !dbg !3599
  %cmp78 = icmp slt i64 %mul77, 0, !dbg !3600
  br i1 %cmp78, label %if.then.80, label %if.end.81, !dbg !3601

if.then.80:                                       ; preds = %if.end.69
  %94 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !3602, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %94, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.81, i32 0, i32 0)), !dbg !3604
  br label %error, !dbg !3605

if.end.81:                                        ; preds = %if.end.69
  %95 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !3606, !tbaa !2522
  %align = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %95, i32 0, i32 2, !dbg !3607
  %96 = load i64, i64* %align, align 8, !dbg !3607, !tbaa !3111
  store i64 %96, i64* %itemalign, align 8, !dbg !3608, !tbaa !2704
  %97 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !3609, !tbaa !2522
  %flags = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %97, i32 0, i32 13, !dbg !3611
  %98 = load i32, i32* %flags, align 4, !dbg !3611, !tbaa !3128
  %and82 = and i32 %98, 768, !dbg !3612
  %tobool83 = icmp ne i32 %and82, 0, !dbg !3612
  br i1 %tobool83, label %if.then.84, label %if.end.86, !dbg !3613

if.then.84:                                       ; preds = %if.end.81
  %99 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3614, !tbaa !2522
  %flags85 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %99, i32 0, i32 13, !dbg !3615
  %100 = load i32, i32* %flags85, align 4, !dbg !3616, !tbaa !3128
  %or = or i32 %100, 512, !dbg !3616
  store i32 %or, i32* %flags85, align 4, !dbg !3616, !tbaa !3128
  br label %if.end.86, !dbg !3614

if.end.86:                                        ; preds = %if.then.84, %if.end.81
  %101 = load i64, i64* %itemsize, align 8, !dbg !3617, !tbaa !2704
  %102 = load i64, i64* %length, align 8, !dbg !3618, !tbaa !2704
  %mul87 = mul i64 %101, %102, !dbg !3619
  %103 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3620, !tbaa !2522
  %size88 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %103, i32 0, i32 1, !dbg !3621
  store i64 %mul87, i64* %size88, align 8, !dbg !3622, !tbaa !3101
  %104 = load i64, i64* %itemalign, align 8, !dbg !3623, !tbaa !2704
  %105 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3624, !tbaa !2522
  %align89 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %105, i32 0, i32 2, !dbg !3625
  store i64 %104, i64* %align89, align 8, !dbg !3626, !tbaa !3111
  %106 = load i64, i64* %length, align 8, !dbg !3627, !tbaa !2704
  %107 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3628, !tbaa !2522
  %length90 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %107, i32 0, i32 3, !dbg !3629
  store i64 %106, i64* %length90, align 8, !dbg !3630, !tbaa !3115
  %108 = load %struct._object*, %struct._object** %type_attr, align 8, !dbg !3631, !tbaa !2522
  %109 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3632, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %109, i32 0, i32 5, !dbg !3633
  store %struct._object* %108, %struct._object** %proto, align 8, !dbg !3634, !tbaa !2961
  %110 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3635, !tbaa !2522
  %paramfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %110, i32 0, i32 8, !dbg !3636
  store %struct.tagPyCArgObject* (%struct.tagCDataObject*)* @PyCArrayType_paramfunc, %struct.tagPyCArgObject* (%struct.tagCDataObject*)** %paramfunc, align 8, !dbg !3637, !tbaa !3124
  %111 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3638, !tbaa !2522
  %ffi_type_pointer = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %111, i32 0, i32 4, !dbg !3639
  %112 = bitcast %struct._ffi_type* %ffi_type_pointer to i8*, !dbg !3640
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %112, i8* bitcast (%struct._ffi_type* @ffi_type_pointer to i8*), i64 24, i32 8, i1 false), !dbg !3640, !tbaa.struct !3119
  %113 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3641, !tbaa !2522
  %114 = bitcast %struct.StgDictObject* %113 to %struct._object*, !dbg !3643
  %115 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3644, !tbaa !2522
  %tp_dict = getelementptr inbounds %struct._typeobject, %struct._typeobject* %115, i32 0, i32 31, !dbg !3645
  %116 = load %struct._object*, %struct._object** %tp_dict, align 8, !dbg !3645, !tbaa !3284
  %call91 = call i32 @PyDict_Update(%struct._object* %114, %struct._object* %116), !dbg !3646
  %cmp92 = icmp eq i32 -1, %call91, !dbg !3647
  br i1 %cmp92, label %if.then.94, label %if.end.95, !dbg !3648

if.then.94:                                       ; preds = %if.end.86
  br label %error, !dbg !3649

if.end.95:                                        ; preds = %if.end.86
  br label %do.body.96, !dbg !3650

do.body.96:                                       ; preds = %if.end.95
  %117 = bitcast %struct._object** %_py_decref_tmp97 to i8*, !dbg !3651
  call void @llvm.lifetime.start(i64 8, i8* %117) #2, !dbg !3651
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp97, metadata !1081, metadata !2526), !dbg !3653
  %118 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3654, !tbaa !2522
  %tp_dict98 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %118, i32 0, i32 31, !dbg !3655
  %119 = load %struct._object*, %struct._object** %tp_dict98, align 8, !dbg !3655, !tbaa !3284
  store %struct._object* %119, %struct._object** %_py_decref_tmp97, align 8, !dbg !3653, !tbaa !2522
  %120 = load %struct._object*, %struct._object** %_py_decref_tmp97, align 8, !dbg !3656, !tbaa !2522
  %ob_refcnt99 = getelementptr inbounds %struct._object, %struct._object* %120, i32 0, i32 0, !dbg !3658
  %121 = load i64, i64* %ob_refcnt99, align 8, !dbg !3659, !tbaa !2551
  %dec100 = add i64 %121, -1, !dbg !3659
  store i64 %dec100, i64* %ob_refcnt99, align 8, !dbg !3659, !tbaa !2551
  %cmp101 = icmp ne i64 %dec100, 0, !dbg !3660
  br i1 %cmp101, label %if.then.103, label %if.else.104, !dbg !3661

if.then.103:                                      ; preds = %do.body.96
  br label %if.end.107, !dbg !3662

if.else.104:                                      ; preds = %do.body.96
  %122 = load %struct._object*, %struct._object** %_py_decref_tmp97, align 8, !dbg !3664, !tbaa !2522
  %ob_type105 = getelementptr inbounds %struct._object, %struct._object* %122, i32 0, i32 1, !dbg !3666
  %123 = load %struct._typeobject*, %struct._typeobject** %ob_type105, align 8, !dbg !3666, !tbaa !2588
  %tp_dealloc106 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %123, i32 0, i32 4, !dbg !3667
  %124 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc106, align 8, !dbg !3667, !tbaa !2590
  %125 = load %struct._object*, %struct._object** %_py_decref_tmp97, align 8, !dbg !3668, !tbaa !2522
  call void %124(%struct._object* %125), !dbg !3669
  br label %if.end.107

if.end.107:                                       ; preds = %if.else.104, %if.then.103
  %126 = bitcast %struct._object** %_py_decref_tmp97 to i8*, !dbg !3670
  call void @llvm.lifetime.end(i64 8, i8* %126) #2, !dbg !3670
  br label %do.cond.108, !dbg !3671

do.cond.108:                                      ; preds = %if.end.107
  br label %do.end.109, !dbg !3672

do.end.109:                                       ; preds = %do.cond.108
  %127 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3674, !tbaa !2522
  %128 = bitcast %struct.StgDictObject* %127 to %struct._object*, !dbg !3675
  %129 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3676, !tbaa !2522
  %tp_dict110 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %129, i32 0, i32 31, !dbg !3677
  store %struct._object* %128, %struct._object** %tp_dict110, align 8, !dbg !3678, !tbaa !3284
  store %struct.StgDictObject* null, %struct.StgDictObject** %stgdict, align 8, !dbg !3679, !tbaa !2522
  %130 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !3680, !tbaa !2522
  %getfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %130, i32 0, i32 7, !dbg !3682
  %131 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc, align 8, !dbg !3682, !tbaa !3683
  %call111 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i32 0, i32 0)), !dbg !3684
  %getfunc112 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %call111, i32 0, i32 2, !dbg !3685
  %132 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc112, align 8, !dbg !3685, !tbaa !3686
  %cmp113 = icmp eq %struct._object* (i8*, i64)* %131, %132, !dbg !3687
  br i1 %cmp113, label %if.then.115, label %if.else.121, !dbg !3688

if.then.115:                                      ; preds = %do.end.109
  %133 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3689, !tbaa !2522
  %call116 = call i32 @add_getset(%struct._typeobject* %133, %struct.PyGetSetDef* getelementptr inbounds ([3 x %struct.PyGetSetDef], [3 x %struct.PyGetSetDef]* @CharArray_getsets, i32 0, i32 0)), !dbg !3692
  %cmp117 = icmp eq i32 -1, %call116, !dbg !3693
  br i1 %cmp117, label %if.then.119, label %if.end.120, !dbg !3694

if.then.119:                                      ; preds = %if.then.115
  br label %error, !dbg !3695

if.end.120:                                       ; preds = %if.then.115
  br label %if.end.134, !dbg !3696

if.else.121:                                      ; preds = %do.end.109
  %134 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !3697, !tbaa !2522
  %getfunc122 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %134, i32 0, i32 7, !dbg !3699
  %135 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc122, align 8, !dbg !3699, !tbaa !3683
  %call123 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0)), !dbg !3700
  %getfunc124 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %call123, i32 0, i32 2, !dbg !3701
  %136 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc124, align 8, !dbg !3701, !tbaa !3686
  %cmp125 = icmp eq %struct._object* (i8*, i64)* %135, %136, !dbg !3702
  br i1 %cmp125, label %if.then.127, label %if.end.133, !dbg !3703

if.then.127:                                      ; preds = %if.else.121
  %137 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3704, !tbaa !2522
  %call128 = call i32 @add_getset(%struct._typeobject* %137, %struct.PyGetSetDef* getelementptr inbounds ([2 x %struct.PyGetSetDef], [2 x %struct.PyGetSetDef]* @WCharArray_getsets, i32 0, i32 0)), !dbg !3707
  %cmp129 = icmp eq i32 -1, %call128, !dbg !3708
  br i1 %cmp129, label %if.then.131, label %if.end.132, !dbg !3709

if.then.131:                                      ; preds = %if.then.127
  br label %error, !dbg !3710

if.end.132:                                       ; preds = %if.then.127
  br label %if.end.133, !dbg !3711

if.end.133:                                       ; preds = %if.end.132, %if.else.121
  br label %if.end.134

if.end.134:                                       ; preds = %if.end.133, %if.end.120
  %138 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3712, !tbaa !2522
  %139 = bitcast %struct._typeobject* %138 to %struct._object*, !dbg !3713
  store %struct._object* %139, %struct._object** %retval, !dbg !3714
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3714

error:                                            ; preds = %if.then.131, %if.then.119, %if.then.94, %if.then.80, %if.then.67, %if.then.59, %if.then.53, %if.then.49, %if.then.45, %do.end.29, %do.end.13
  br label %do.body.135, !dbg !3715

do.body.135:                                      ; preds = %error
  %140 = bitcast %struct._object** %_py_xdecref_tmp136 to i8*, !dbg !3716
  call void @llvm.lifetime.start(i64 8, i8* %140) #2, !dbg !3716
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp136, metadata !1083, metadata !2526), !dbg !3718
  %141 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !3719, !tbaa !2522
  %142 = bitcast %struct.StgDictObject* %141 to %struct._object*, !dbg !3720
  store %struct._object* %142, %struct._object** %_py_xdecref_tmp136, align 8, !dbg !3718, !tbaa !2522
  %143 = load %struct._object*, %struct._object** %_py_xdecref_tmp136, align 8, !dbg !3721, !tbaa !2522
  %cmp137 = icmp ne %struct._object* %143, null, !dbg !3722
  br i1 %cmp137, label %if.then.139, label %if.end.153, !dbg !3723

if.then.139:                                      ; preds = %do.body.135
  br label %do.body.140, !dbg !3724

do.body.140:                                      ; preds = %if.then.139
  %144 = bitcast %struct._object** %_py_decref_tmp141 to i8*, !dbg !3726
  call void @llvm.lifetime.start(i64 8, i8* %144) #2, !dbg !3726
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp141, metadata !1085, metadata !2526), !dbg !3728
  %145 = load %struct._object*, %struct._object** %_py_xdecref_tmp136, align 8, !dbg !3729, !tbaa !2522
  store %struct._object* %145, %struct._object** %_py_decref_tmp141, align 8, !dbg !3728, !tbaa !2522
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp141, align 8, !dbg !3730, !tbaa !2522
  %ob_refcnt142 = getelementptr inbounds %struct._object, %struct._object* %146, i32 0, i32 0, !dbg !3732
  %147 = load i64, i64* %ob_refcnt142, align 8, !dbg !3733, !tbaa !2551
  %dec143 = add i64 %147, -1, !dbg !3733
  store i64 %dec143, i64* %ob_refcnt142, align 8, !dbg !3733, !tbaa !2551
  %cmp144 = icmp ne i64 %dec143, 0, !dbg !3734
  br i1 %cmp144, label %if.then.146, label %if.else.147, !dbg !3735

if.then.146:                                      ; preds = %do.body.140
  br label %if.end.150, !dbg !3736

if.else.147:                                      ; preds = %do.body.140
  %148 = load %struct._object*, %struct._object** %_py_decref_tmp141, align 8, !dbg !3738, !tbaa !2522
  %ob_type148 = getelementptr inbounds %struct._object, %struct._object* %148, i32 0, i32 1, !dbg !3740
  %149 = load %struct._typeobject*, %struct._typeobject** %ob_type148, align 8, !dbg !3740, !tbaa !2588
  %tp_dealloc149 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %149, i32 0, i32 4, !dbg !3741
  %150 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc149, align 8, !dbg !3741, !tbaa !2590
  %151 = load %struct._object*, %struct._object** %_py_decref_tmp141, align 8, !dbg !3742, !tbaa !2522
  call void %150(%struct._object* %151), !dbg !3743
  br label %if.end.150

if.end.150:                                       ; preds = %if.else.147, %if.then.146
  %152 = bitcast %struct._object** %_py_decref_tmp141 to i8*, !dbg !3744
  call void @llvm.lifetime.end(i64 8, i8* %152) #2, !dbg !3744
  br label %do.cond.151, !dbg !3746

do.cond.151:                                      ; preds = %if.end.150
  br label %do.end.152, !dbg !3747

do.end.152:                                       ; preds = %do.cond.151
  br label %if.end.153, !dbg !3749

if.end.153:                                       ; preds = %do.end.152, %do.body.135
  %153 = bitcast %struct._object** %_py_xdecref_tmp136 to i8*, !dbg !3751
  call void @llvm.lifetime.end(i64 8, i8* %153) #2, !dbg !3751
  br label %do.cond.154, !dbg !3754

do.cond.154:                                      ; preds = %if.end.153
  br label %do.end.155, !dbg !3755

do.end.155:                                       ; preds = %do.cond.154
  br label %do.body.156, !dbg !3757

do.body.156:                                      ; preds = %do.end.155
  %154 = bitcast %struct._object** %_py_xdecref_tmp157 to i8*, !dbg !3758
  call void @llvm.lifetime.start(i64 8, i8* %154) #2, !dbg !3758
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp157, metadata !1088, metadata !2526), !dbg !3760
  %155 = load %struct._object*, %struct._object** %type_attr, align 8, !dbg !3761, !tbaa !2522
  store %struct._object* %155, %struct._object** %_py_xdecref_tmp157, align 8, !dbg !3760, !tbaa !2522
  %156 = load %struct._object*, %struct._object** %_py_xdecref_tmp157, align 8, !dbg !3762, !tbaa !2522
  %cmp158 = icmp ne %struct._object* %156, null, !dbg !3763
  br i1 %cmp158, label %if.then.160, label %if.end.174, !dbg !3764

if.then.160:                                      ; preds = %do.body.156
  br label %do.body.161, !dbg !3765

do.body.161:                                      ; preds = %if.then.160
  %157 = bitcast %struct._object** %_py_decref_tmp162 to i8*, !dbg !3767
  call void @llvm.lifetime.start(i64 8, i8* %157) #2, !dbg !3767
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp162, metadata !1090, metadata !2526), !dbg !3769
  %158 = load %struct._object*, %struct._object** %_py_xdecref_tmp157, align 8, !dbg !3770, !tbaa !2522
  store %struct._object* %158, %struct._object** %_py_decref_tmp162, align 8, !dbg !3769, !tbaa !2522
  %159 = load %struct._object*, %struct._object** %_py_decref_tmp162, align 8, !dbg !3771, !tbaa !2522
  %ob_refcnt163 = getelementptr inbounds %struct._object, %struct._object* %159, i32 0, i32 0, !dbg !3773
  %160 = load i64, i64* %ob_refcnt163, align 8, !dbg !3774, !tbaa !2551
  %dec164 = add i64 %160, -1, !dbg !3774
  store i64 %dec164, i64* %ob_refcnt163, align 8, !dbg !3774, !tbaa !2551
  %cmp165 = icmp ne i64 %dec164, 0, !dbg !3775
  br i1 %cmp165, label %if.then.167, label %if.else.168, !dbg !3776

if.then.167:                                      ; preds = %do.body.161
  br label %if.end.171, !dbg !3777

if.else.168:                                      ; preds = %do.body.161
  %161 = load %struct._object*, %struct._object** %_py_decref_tmp162, align 8, !dbg !3779, !tbaa !2522
  %ob_type169 = getelementptr inbounds %struct._object, %struct._object* %161, i32 0, i32 1, !dbg !3781
  %162 = load %struct._typeobject*, %struct._typeobject** %ob_type169, align 8, !dbg !3781, !tbaa !2588
  %tp_dealloc170 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %162, i32 0, i32 4, !dbg !3782
  %163 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc170, align 8, !dbg !3782, !tbaa !2590
  %164 = load %struct._object*, %struct._object** %_py_decref_tmp162, align 8, !dbg !3783, !tbaa !2522
  call void %163(%struct._object* %164), !dbg !3784
  br label %if.end.171

if.end.171:                                       ; preds = %if.else.168, %if.then.167
  %165 = bitcast %struct._object** %_py_decref_tmp162 to i8*, !dbg !3785
  call void @llvm.lifetime.end(i64 8, i8* %165) #2, !dbg !3785
  br label %do.cond.172, !dbg !3787

do.cond.172:                                      ; preds = %if.end.171
  br label %do.end.173, !dbg !3788

do.end.173:                                       ; preds = %do.cond.172
  br label %if.end.174, !dbg !3790

if.end.174:                                       ; preds = %do.end.173, %do.body.156
  %166 = bitcast %struct._object** %_py_xdecref_tmp157 to i8*, !dbg !3792
  call void @llvm.lifetime.end(i64 8, i8* %166) #2, !dbg !3792
  br label %do.cond.175, !dbg !3793

do.cond.175:                                      ; preds = %if.end.174
  br label %do.end.176, !dbg !3794

do.end.176:                                       ; preds = %do.cond.175
  br label %do.body.177, !dbg !3796

do.body.177:                                      ; preds = %do.end.176
  %167 = bitcast %struct._object** %_py_decref_tmp178 to i8*, !dbg !3797
  call void @llvm.lifetime.start(i64 8, i8* %167) #2, !dbg !3797
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp178, metadata !1093, metadata !2526), !dbg !3799
  %168 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3800, !tbaa !2522
  %169 = bitcast %struct._typeobject* %168 to %struct._object*, !dbg !3801
  store %struct._object* %169, %struct._object** %_py_decref_tmp178, align 8, !dbg !3799, !tbaa !2522
  %170 = load %struct._object*, %struct._object** %_py_decref_tmp178, align 8, !dbg !3802, !tbaa !2522
  %ob_refcnt179 = getelementptr inbounds %struct._object, %struct._object* %170, i32 0, i32 0, !dbg !3804
  %171 = load i64, i64* %ob_refcnt179, align 8, !dbg !3805, !tbaa !2551
  %dec180 = add i64 %171, -1, !dbg !3805
  store i64 %dec180, i64* %ob_refcnt179, align 8, !dbg !3805, !tbaa !2551
  %cmp181 = icmp ne i64 %dec180, 0, !dbg !3806
  br i1 %cmp181, label %if.then.183, label %if.else.184, !dbg !3807

if.then.183:                                      ; preds = %do.body.177
  br label %if.end.187, !dbg !3808

if.else.184:                                      ; preds = %do.body.177
  %172 = load %struct._object*, %struct._object** %_py_decref_tmp178, align 8, !dbg !3810, !tbaa !2522
  %ob_type185 = getelementptr inbounds %struct._object, %struct._object* %172, i32 0, i32 1, !dbg !3812
  %173 = load %struct._typeobject*, %struct._typeobject** %ob_type185, align 8, !dbg !3812, !tbaa !2588
  %tp_dealloc186 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %173, i32 0, i32 4, !dbg !3813
  %174 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc186, align 8, !dbg !3813, !tbaa !2590
  %175 = load %struct._object*, %struct._object** %_py_decref_tmp178, align 8, !dbg !3814, !tbaa !2522
  call void %174(%struct._object* %175), !dbg !3815
  br label %if.end.187

if.end.187:                                       ; preds = %if.else.184, %if.then.183
  %176 = bitcast %struct._object** %_py_decref_tmp178 to i8*, !dbg !3816
  call void @llvm.lifetime.end(i64 8, i8* %176) #2, !dbg !3816
  br label %do.cond.188, !dbg !3817

do.cond.188:                                      ; preds = %if.end.187
  br label %do.end.189, !dbg !3818

do.end.189:                                       ; preds = %do.cond.188
  store %struct._object* null, %struct._object** %retval, !dbg !3820
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3820

cleanup:                                          ; preds = %do.end.189, %if.end.134, %if.then
  %177 = bitcast i64* %itemalign to i8*, !dbg !3821
  call void @llvm.lifetime.end(i64 8, i8* %177) #2, !dbg !3821
  %178 = bitcast i64* %itemsize to i8*, !dbg !3821
  call void @llvm.lifetime.end(i64 8, i8* %178) #2, !dbg !3821
  %179 = bitcast i32* %overflow to i8*, !dbg !3821
  call void @llvm.lifetime.end(i64 4, i8* %179) #2, !dbg !3821
  %180 = bitcast i64* %length to i8*, !dbg !3821
  call void @llvm.lifetime.end(i64 8, i8* %180) #2, !dbg !3821
  %181 = bitcast %struct._object** %type_attr to i8*, !dbg !3821
  call void @llvm.lifetime.end(i64 8, i8* %181) #2, !dbg !3821
  %182 = bitcast %struct._object** %length_attr to i8*, !dbg !3821
  call void @llvm.lifetime.end(i64 8, i8* %182) #2, !dbg !3821
  %183 = bitcast %struct.StgDictObject** %itemdict to i8*, !dbg !3821
  call void @llvm.lifetime.end(i64 8, i8* %183) #2, !dbg !3821
  %184 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !3821
  call void @llvm.lifetime.end(i64 8, i8* %184) #2, !dbg !3821
  %185 = bitcast %struct._typeobject** %result to i8*, !dbg !3821
  call void @llvm.lifetime.end(i64 8, i8* %185) #2, !dbg !3821
  %186 = load %struct._object*, %struct._object** %retval, !dbg !3821
  ret %struct._object* %186, !dbg !3821
}

; Function Attrs: uwtable
define internal %struct._object* @PyCSimpleType_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %result = alloca %struct._typeobject*, align 8
  %stgdict = alloca %struct.StgDictObject*, align 8
  %proto = alloca %struct._object*, align 8
  %proto_str = alloca i8*, align 8
  %proto_len = alloca i64, align 8
  %ml = alloca %struct.PyMethodDef*, align 8
  %fmt = alloca %struct.fielddesc*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp13 = alloca %struct._object*, align 8
  %_py_decref_tmp17 = alloca %struct._object*, align 8
  %_py_decref_tmp77 = alloca %struct._object*, align 8
  %_py_decref_tmp90 = alloca %struct._object*, align 8
  %_py_decref_tmp103 = alloca %struct._object*, align 8
  %_py_decref_tmp122 = alloca %struct._object*, align 8
  %_py_decref_tmp135 = alloca %struct._object*, align 8
  %_py_decref_tmp149 = alloca %struct._object*, align 8
  %meth = alloca %struct._object*, align 8
  %x = alloca i32, align 4
  %_py_decref_tmp185 = alloca %struct._object*, align 8
  %_py_decref_tmp201 = alloca %struct._object*, align 8
  %swapped = alloca %struct._object*, align 8
  %sw_dict = alloca %struct.StgDictObject*, align 8
  %_py_decref_tmp229 = alloca %struct._object*, align 8
  %_py_decref_tmp251 = alloca %struct._object*, align 8
  %_py_decref_tmp267 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1235, metadata !2526), !dbg !3822
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1236, metadata !2526), !dbg !3823
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1237, metadata !2526), !dbg !3824
  %0 = bitcast %struct._typeobject** %result to i8*, !dbg !3825
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3825
  call void @llvm.dbg.declare(metadata %struct._typeobject** %result, metadata !1238, metadata !2526), !dbg !3826
  %1 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !3827
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !3827
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict, metadata !1239, metadata !2526), !dbg !3828
  %2 = bitcast %struct._object** %proto to i8*, !dbg !3829
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !3829
  call void @llvm.dbg.declare(metadata %struct._object** %proto, metadata !1240, metadata !2526), !dbg !3830
  %3 = bitcast i8** %proto_str to i8*, !dbg !3831
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !3831
  call void @llvm.dbg.declare(metadata i8** %proto_str, metadata !1241, metadata !2526), !dbg !3832
  %4 = bitcast i64* %proto_len to i8*, !dbg !3833
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !3833
  call void @llvm.dbg.declare(metadata i64* %proto_len, metadata !1242, metadata !2526), !dbg !3834
  %5 = bitcast %struct.PyMethodDef** %ml to i8*, !dbg !3835
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !3835
  call void @llvm.dbg.declare(metadata %struct.PyMethodDef** %ml, metadata !1243, metadata !2526), !dbg !3836
  %6 = bitcast %struct.fielddesc** %fmt to i8*, !dbg !3837
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !3837
  call void @llvm.dbg.declare(metadata %struct.fielddesc** %fmt, metadata !1246, metadata !2526), !dbg !3838
  %7 = load %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyType_Type, i32 0, i32 37), align 8, !dbg !3839, !tbaa !3244
  %8 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !3840, !tbaa !2522
  %9 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !3841, !tbaa !2522
  %10 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !3842, !tbaa !2522
  %call = call %struct._object* %7(%struct._typeobject* %8, %struct._object* %9, %struct._object* %10), !dbg !3843
  %11 = bitcast %struct._object* %call to %struct._typeobject*, !dbg !3844
  store %struct._typeobject* %11, %struct._typeobject** %result, align 8, !dbg !3845, !tbaa !2522
  %12 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3846, !tbaa !2522
  %cmp = icmp eq %struct._typeobject* %12, null, !dbg !3848
  br i1 %cmp, label %if.then, label %if.end, !dbg !3849

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3850
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.285, !dbg !3850

if.end:                                           ; preds = %entry
  %13 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3851, !tbaa !2522
  %14 = bitcast %struct._typeobject* %13 to %struct._object*, !dbg !3852
  %call1 = call %struct._object* @PyObject_GetAttrString(%struct._object* %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0)), !dbg !3853
  store %struct._object* %call1, %struct._object** %proto, align 8, !dbg !3854, !tbaa !2522
  %15 = load %struct._object*, %struct._object** %proto, align 8, !dbg !3855, !tbaa !2522
  %tobool = icmp ne %struct._object* %15, null, !dbg !3855
  br i1 %tobool, label %if.end.31, label %if.then.2, !dbg !3856

if.then.2:                                        ; preds = %if.end
  %16 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !3857, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.80, i32 0, i32 0)), !dbg !3858
  br label %error, !dbg !3858

error:                                            ; preds = %if.then.63, %if.then.58, %if.then.52, %if.then.42, %if.else.39, %if.then.37, %if.then.2
  br label %do.body, !dbg !3859

do.body:                                          ; preds = %error
  %17 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3860
  call void @llvm.lifetime.start(i64 8, i8* %17) #2, !dbg !3860
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1247, metadata !2526), !dbg !3862
  %18 = load %struct._object*, %struct._object** %proto, align 8, !dbg !3863, !tbaa !2522
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3862, !tbaa !2522
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3864, !tbaa !2522
  %cmp3 = icmp ne %struct._object* %19, null, !dbg !3865
  br i1 %cmp3, label %if.then.4, label %if.end.9, !dbg !3866

if.then.4:                                        ; preds = %do.body
  br label %do.body.5, !dbg !3867

do.body.5:                                        ; preds = %if.then.4
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3869
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !3869
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1251, metadata !2526), !dbg !3871
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3872, !tbaa !2522
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8, !dbg !3871, !tbaa !2522
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3873, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !3875
  %23 = load i64, i64* %ob_refcnt, align 8, !dbg !3876, !tbaa !2551
  %dec = add i64 %23, -1, !dbg !3876
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3876, !tbaa !2551
  %cmp6 = icmp ne i64 %dec, 0, !dbg !3877
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !3878

if.then.7:                                        ; preds = %do.body.5
  br label %if.end.8, !dbg !3879

if.else:                                          ; preds = %do.body.5
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3881, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !3883
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3883, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !3884
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3884, !tbaa !2590
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3885, !tbaa !2522
  call void %26(%struct._object* %27), !dbg !3886
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3887
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !3887
  br label %do.cond, !dbg !3889

do.cond:                                          ; preds = %if.end.8
  br label %do.end, !dbg !3890

do.end:                                           ; preds = %do.cond
  br label %if.end.9, !dbg !3892

if.end.9:                                         ; preds = %do.end, %do.body
  %29 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3894
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !3894
  br label %do.cond.10, !dbg !3897

do.cond.10:                                       ; preds = %if.end.9
  br label %do.end.11, !dbg !3898

do.end.11:                                        ; preds = %do.cond.10
  br label %do.body.12, !dbg !3900

do.body.12:                                       ; preds = %do.end.11
  %30 = bitcast %struct._object** %_py_xdecref_tmp13 to i8*, !dbg !3901
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !3901
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp13, metadata !1254, metadata !2526), !dbg !3903
  %31 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !3904, !tbaa !2522
  %32 = bitcast %struct._typeobject* %31 to %struct._object*, !dbg !3905
  store %struct._object* %32, %struct._object** %_py_xdecref_tmp13, align 8, !dbg !3903, !tbaa !2522
  %33 = load %struct._object*, %struct._object** %_py_xdecref_tmp13, align 8, !dbg !3906, !tbaa !2522
  %cmp14 = icmp ne %struct._object* %33, null, !dbg !3907
  br i1 %cmp14, label %if.then.15, label %if.end.28, !dbg !3908

if.then.15:                                       ; preds = %do.body.12
  br label %do.body.16, !dbg !3909

do.body.16:                                       ; preds = %if.then.15
  %34 = bitcast %struct._object** %_py_decref_tmp17 to i8*, !dbg !3911
  call void @llvm.lifetime.start(i64 8, i8* %34) #2, !dbg !3911
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp17, metadata !1256, metadata !2526), !dbg !3913
  %35 = load %struct._object*, %struct._object** %_py_xdecref_tmp13, align 8, !dbg !3914, !tbaa !2522
  store %struct._object* %35, %struct._object** %_py_decref_tmp17, align 8, !dbg !3913, !tbaa !2522
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !3915, !tbaa !2522
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !3917
  %37 = load i64, i64* %ob_refcnt18, align 8, !dbg !3918, !tbaa !2551
  %dec19 = add i64 %37, -1, !dbg !3918
  store i64 %dec19, i64* %ob_refcnt18, align 8, !dbg !3918, !tbaa !2551
  %cmp20 = icmp ne i64 %dec19, 0, !dbg !3919
  br i1 %cmp20, label %if.then.21, label %if.else.22, !dbg !3920

if.then.21:                                       ; preds = %do.body.16
  br label %if.end.25, !dbg !3921

if.else.22:                                       ; preds = %do.body.16
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !3923, !tbaa !2522
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !3925
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !3925, !tbaa !2588
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4, !dbg !3926
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8, !dbg !3926, !tbaa !2590
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !3927, !tbaa !2522
  call void %40(%struct._object* %41), !dbg !3928
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.22, %if.then.21
  %42 = bitcast %struct._object** %_py_decref_tmp17 to i8*, !dbg !3929
  call void @llvm.lifetime.end(i64 8, i8* %42) #2, !dbg !3929
  br label %do.cond.26, !dbg !3931

do.cond.26:                                       ; preds = %if.end.25
  br label %do.end.27, !dbg !3932

do.end.27:                                        ; preds = %do.cond.26
  br label %if.end.28, !dbg !3934

if.end.28:                                        ; preds = %do.end.27, %do.body.12
  %43 = bitcast %struct._object** %_py_xdecref_tmp13 to i8*, !dbg !3936
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !3936
  br label %do.cond.29, !dbg !3937

do.cond.29:                                       ; preds = %if.end.28
  br label %do.end.30, !dbg !3938

do.end.30:                                        ; preds = %do.cond.29
  store %struct._object* null, %struct._object** %retval, !dbg !3940
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.285, !dbg !3940

if.end.31:                                        ; preds = %if.end
  %44 = load %struct._object*, %struct._object** %proto, align 8, !dbg !3941, !tbaa !2522
  %ob_type32 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1, !dbg !3943
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type32, align 8, !dbg !3943, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 19, !dbg !3944
  %46 = load i64, i64* %tp_flags, align 8, !dbg !3944, !tbaa !2849
  %and = and i64 %46, 268435456, !dbg !3945
  %cmp33 = icmp ne i64 %and, 0, !dbg !3946
  br i1 %cmp33, label %if.then.34, label %if.else.39, !dbg !3947

if.then.34:                                       ; preds = %if.end.31
  %47 = load %struct._object*, %struct._object** %proto, align 8, !dbg !3948, !tbaa !2522
  %call35 = call i8* @PyUnicode_AsUTF8AndSize(%struct._object* %47, i64* %proto_len), !dbg !3950
  store i8* %call35, i8** %proto_str, align 8, !dbg !3951, !tbaa !2522
  %48 = load i8*, i8** %proto_str, align 8, !dbg !3952, !tbaa !2522
  %tobool36 = icmp ne i8* %48, null, !dbg !3952
  br i1 %tobool36, label %if.end.38, label %if.then.37, !dbg !3954

if.then.37:                                       ; preds = %if.then.34
  br label %error, !dbg !3955

if.end.38:                                        ; preds = %if.then.34
  br label %if.end.40, !dbg !3956

if.else.39:                                       ; preds = %if.end.31
  %49 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3957, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %49, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.93, i32 0, i32 0)), !dbg !3959
  br label %error, !dbg !3960

if.end.40:                                        ; preds = %if.end.38
  %50 = load i64, i64* %proto_len, align 8, !dbg !3961, !tbaa !2704
  %cmp41 = icmp ne i64 %50, 1, !dbg !3963
  br i1 %cmp41, label %if.then.42, label %if.end.43, !dbg !3964

if.then.42:                                       ; preds = %if.end.40
  %51 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !3965, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %51, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.94, i32 0, i32 0)), !dbg !3967
  br label %error, !dbg !3968

if.end.43:                                        ; preds = %if.end.40
  br i1 false, label %land.lhs.true, label %cond.false, !dbg !3969

land.lhs.true:                                    ; preds = %if.end.43
  %52 = load i8*, i8** %proto_str, align 8, !dbg !3971, !tbaa !2522
  %53 = load i8, i8* %52, align 1, !dbg !3973, !tbaa !2731
  %conv = sext i8 %53 to i32, !dbg !3974
  %cmp44 = icmp eq i32 %conv, 0, !dbg !3975
  br i1 %cmp44, label %cond.true, label %cond.false, !dbg !3976

cond.true:                                        ; preds = %land.lhs.true
  %54 = load i8*, i8** @SIMPLE_TYPE_CHARS, align 8, !dbg !3977, !tbaa !2522
  %55 = load i8*, i8** %proto_str, align 8, !dbg !3979, !tbaa !2522
  %56 = load i8, i8* %55, align 1, !dbg !3980, !tbaa !2731
  %conv46 = sext i8 %56 to i32, !dbg !3980
  %call47 = call i8* @__rawmemchr(i8* %54, i32 %conv46), !dbg !3981
  %tobool48 = icmp ne i8* %call47, null, !dbg !3982
  br i1 %tobool48, label %if.end.54, label %if.then.52, !dbg !3983

cond.false:                                       ; preds = %land.lhs.true, %if.end.43
  %57 = load i8*, i8** @SIMPLE_TYPE_CHARS, align 8, !dbg !3984, !tbaa !2522
  %58 = load i8*, i8** %proto_str, align 8, !dbg !3987, !tbaa !2522
  %59 = load i8, i8* %58, align 1, !dbg !3988, !tbaa !2731
  %conv49 = sext i8 %59 to i32, !dbg !3988
  %call50 = call i8* @strchr(i8* %57, i32 %conv49) #2, !dbg !3989
  %tobool51 = icmp ne i8* %call50, null, !dbg !3989
  br i1 %tobool51, label %if.end.54, label %if.then.52, !dbg !3976

if.then.52:                                       ; preds = %cond.false, %cond.true
  %60 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !3990, !tbaa !2522
  %61 = load i8*, i8** @SIMPLE_TYPE_CHARS, align 8, !dbg !3992, !tbaa !2522
  %call53 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %60, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.95, i32 0, i32 0), i8* %61), !dbg !3993
  br label %error, !dbg !3994

if.end.54:                                        ; preds = %cond.false, %cond.true
  %62 = load i8*, i8** %proto_str, align 8, !dbg !3995, !tbaa !2522
  %call55 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* %62), !dbg !3996
  store %struct.fielddesc* %call55, %struct.fielddesc** %fmt, align 8, !dbg !3997, !tbaa !2522
  %63 = load %struct.fielddesc*, %struct.fielddesc** %fmt, align 8, !dbg !3998, !tbaa !2522
  %cmp56 = icmp eq %struct.fielddesc* %63, null, !dbg !4000
  br i1 %cmp56, label %if.then.58, label %if.end.60, !dbg !4001

if.then.58:                                       ; preds = %if.end.54
  %64 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4002, !tbaa !2522
  %65 = load i8*, i8** %proto_str, align 8, !dbg !4004, !tbaa !2522
  %call59 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %64, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.96, i32 0, i32 0), i8* %65), !dbg !4005
  br label %error, !dbg !4006

if.end.60:                                        ; preds = %if.end.54
  %call61 = call %struct._object* @PyObject_CallObject(%struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyCStgDict_Type, i32 0, i32 0, i32 0), %struct._object* null), !dbg !4007
  %66 = bitcast %struct._object* %call61 to %struct.StgDictObject*, !dbg !4008
  store %struct.StgDictObject* %66, %struct.StgDictObject** %stgdict, align 8, !dbg !4009, !tbaa !2522
  %67 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4010, !tbaa !2522
  %tobool62 = icmp ne %struct.StgDictObject* %67, null, !dbg !4010
  br i1 %tobool62, label %if.end.64, label %if.then.63, !dbg !4012

if.then.63:                                       ; preds = %if.end.60
  br label %error, !dbg !4013

if.end.64:                                        ; preds = %if.end.60
  %68 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4014, !tbaa !2522
  %ffi_type_pointer = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %68, i32 0, i32 4, !dbg !4015
  %69 = load %struct.fielddesc*, %struct.fielddesc** %fmt, align 8, !dbg !4016, !tbaa !2522
  %pffi_type = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %69, i32 0, i32 3, !dbg !4017
  %70 = load %struct._ffi_type*, %struct._ffi_type** %pffi_type, align 8, !dbg !4017, !tbaa !3104
  %71 = bitcast %struct._ffi_type* %ffi_type_pointer to i8*, !dbg !4018
  %72 = bitcast %struct._ffi_type* %70 to i8*, !dbg !4018
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %71, i8* %72, i64 24, i32 8, i1 false), !dbg !4018, !tbaa.struct !3119
  %73 = load %struct.fielddesc*, %struct.fielddesc** %fmt, align 8, !dbg !4019, !tbaa !2522
  %pffi_type65 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %73, i32 0, i32 3, !dbg !4020
  %74 = load %struct._ffi_type*, %struct._ffi_type** %pffi_type65, align 8, !dbg !4020, !tbaa !3104
  %alignment = getelementptr inbounds %struct._ffi_type, %struct._ffi_type* %74, i32 0, i32 1, !dbg !4021
  %75 = load i16, i16* %alignment, align 2, !dbg !4021, !tbaa !3107
  %conv66 = zext i16 %75 to i64, !dbg !4019
  %76 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4022, !tbaa !2522
  %align = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %76, i32 0, i32 2, !dbg !4023
  store i64 %conv66, i64* %align, align 8, !dbg !4024, !tbaa !3111
  %77 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4025, !tbaa !2522
  %length = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %77, i32 0, i32 3, !dbg !4026
  store i64 0, i64* %length, align 8, !dbg !4027, !tbaa !3115
  %78 = load %struct.fielddesc*, %struct.fielddesc** %fmt, align 8, !dbg !4028, !tbaa !2522
  %pffi_type67 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %78, i32 0, i32 3, !dbg !4029
  %79 = load %struct._ffi_type*, %struct._ffi_type** %pffi_type67, align 8, !dbg !4029, !tbaa !3104
  %size = getelementptr inbounds %struct._ffi_type, %struct._ffi_type* %79, i32 0, i32 0, !dbg !4030
  %80 = load i64, i64* %size, align 8, !dbg !4030, !tbaa !4031
  %81 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4032, !tbaa !2522
  %size68 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %81, i32 0, i32 1, !dbg !4033
  store i64 %80, i64* %size68, align 8, !dbg !4034, !tbaa !3101
  %82 = load %struct.fielddesc*, %struct.fielddesc** %fmt, align 8, !dbg !4035, !tbaa !2522
  %setfunc = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %82, i32 0, i32 1, !dbg !4036
  %83 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc, align 8, !dbg !4036, !tbaa !4037
  %84 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4038, !tbaa !2522
  %setfunc69 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %84, i32 0, i32 6, !dbg !4039
  store %struct._object* (i8*, %struct._object*, i64)* %83, %struct._object* (i8*, %struct._object*, i64)** %setfunc69, align 8, !dbg !4040, !tbaa !4041
  %85 = load %struct.fielddesc*, %struct.fielddesc** %fmt, align 8, !dbg !4042, !tbaa !2522
  %getfunc = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %85, i32 0, i32 2, !dbg !4043
  %86 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc, align 8, !dbg !4043, !tbaa !3686
  %87 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4044, !tbaa !2522
  %getfunc70 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %87, i32 0, i32 7, !dbg !4045
  store %struct._object* (i8*, i64)* %86, %struct._object* (i8*, i64)** %getfunc70, align 8, !dbg !4046, !tbaa !3683
  %88 = load i8*, i8** %proto_str, align 8, !dbg !4047, !tbaa !2522
  %call71 = call i8* @_ctypes_alloc_format_string(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.97, i32 0, i32 0), i8* %88), !dbg !4048
  %89 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4049, !tbaa !2522
  %format = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %89, i32 0, i32 14, !dbg !4050
  store i8* %call71, i8** %format, align 8, !dbg !4051, !tbaa !3176
  %90 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4052, !tbaa !2522
  %format72 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %90, i32 0, i32 14, !dbg !4053
  %91 = load i8*, i8** %format72, align 8, !dbg !4053, !tbaa !3176
  %cmp73 = icmp eq i8* %91, null, !dbg !4054
  br i1 %cmp73, label %if.then.75, label %if.end.115, !dbg !4055

if.then.75:                                       ; preds = %if.end.64
  br label %do.body.76, !dbg !4056

do.body.76:                                       ; preds = %if.then.75
  %92 = bitcast %struct._object** %_py_decref_tmp77 to i8*, !dbg !4057
  call void @llvm.lifetime.start(i64 8, i8* %92) #2, !dbg !4057
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp77, metadata !1259, metadata !2526), !dbg !4059
  %93 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4060, !tbaa !2522
  %94 = bitcast %struct._typeobject* %93 to %struct._object*, !dbg !4061
  store %struct._object* %94, %struct._object** %_py_decref_tmp77, align 8, !dbg !4059, !tbaa !2522
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp77, align 8, !dbg !4062, !tbaa !2522
  %ob_refcnt78 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 0, !dbg !4064
  %96 = load i64, i64* %ob_refcnt78, align 8, !dbg !4065, !tbaa !2551
  %dec79 = add i64 %96, -1, !dbg !4065
  store i64 %dec79, i64* %ob_refcnt78, align 8, !dbg !4065, !tbaa !2551
  %cmp80 = icmp ne i64 %dec79, 0, !dbg !4066
  br i1 %cmp80, label %if.then.82, label %if.else.83, !dbg !4067

if.then.82:                                       ; preds = %do.body.76
  br label %if.end.86, !dbg !4068

if.else.83:                                       ; preds = %do.body.76
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp77, align 8, !dbg !4070, !tbaa !2522
  %ob_type84 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 1, !dbg !4072
  %98 = load %struct._typeobject*, %struct._typeobject** %ob_type84, align 8, !dbg !4072, !tbaa !2588
  %tp_dealloc85 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %98, i32 0, i32 4, !dbg !4073
  %99 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc85, align 8, !dbg !4073, !tbaa !2590
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp77, align 8, !dbg !4074, !tbaa !2522
  call void %99(%struct._object* %100), !dbg !4075
  br label %if.end.86

if.end.86:                                        ; preds = %if.else.83, %if.then.82
  %101 = bitcast %struct._object** %_py_decref_tmp77 to i8*, !dbg !4076
  call void @llvm.lifetime.end(i64 8, i8* %101) #2, !dbg !4076
  br label %do.cond.87, !dbg !4078

do.cond.87:                                       ; preds = %if.end.86
  br label %do.end.88, !dbg !4079

do.end.88:                                        ; preds = %do.cond.87
  br label %do.body.89, !dbg !4081

do.body.89:                                       ; preds = %do.end.88
  %102 = bitcast %struct._object** %_py_decref_tmp90 to i8*, !dbg !4082
  call void @llvm.lifetime.start(i64 8, i8* %102) #2, !dbg !4082
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp90, metadata !1263, metadata !2526), !dbg !4084
  %103 = load %struct._object*, %struct._object** %proto, align 8, !dbg !4085, !tbaa !2522
  store %struct._object* %103, %struct._object** %_py_decref_tmp90, align 8, !dbg !4084, !tbaa !2522
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8, !dbg !4086, !tbaa !2522
  %ob_refcnt91 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 0, !dbg !4088
  %105 = load i64, i64* %ob_refcnt91, align 8, !dbg !4089, !tbaa !2551
  %dec92 = add i64 %105, -1, !dbg !4089
  store i64 %dec92, i64* %ob_refcnt91, align 8, !dbg !4089, !tbaa !2551
  %cmp93 = icmp ne i64 %dec92, 0, !dbg !4090
  br i1 %cmp93, label %if.then.95, label %if.else.96, !dbg !4091

if.then.95:                                       ; preds = %do.body.89
  br label %if.end.99, !dbg !4092

if.else.96:                                       ; preds = %do.body.89
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8, !dbg !4094, !tbaa !2522
  %ob_type97 = getelementptr inbounds %struct._object, %struct._object* %106, i32 0, i32 1, !dbg !4096
  %107 = load %struct._typeobject*, %struct._typeobject** %ob_type97, align 8, !dbg !4096, !tbaa !2588
  %tp_dealloc98 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %107, i32 0, i32 4, !dbg !4097
  %108 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc98, align 8, !dbg !4097, !tbaa !2590
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8, !dbg !4098, !tbaa !2522
  call void %108(%struct._object* %109), !dbg !4099
  br label %if.end.99

if.end.99:                                        ; preds = %if.else.96, %if.then.95
  %110 = bitcast %struct._object** %_py_decref_tmp90 to i8*, !dbg !4100
  call void @llvm.lifetime.end(i64 8, i8* %110) #2, !dbg !4100
  br label %do.cond.100, !dbg !4101

do.cond.100:                                      ; preds = %if.end.99
  br label %do.end.101, !dbg !4102

do.end.101:                                       ; preds = %do.cond.100
  br label %do.body.102, !dbg !4104

do.body.102:                                      ; preds = %do.end.101
  %111 = bitcast %struct._object** %_py_decref_tmp103 to i8*, !dbg !4105
  call void @llvm.lifetime.start(i64 8, i8* %111) #2, !dbg !4105
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp103, metadata !1265, metadata !2526), !dbg !4107
  %112 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4108, !tbaa !2522
  %113 = bitcast %struct.StgDictObject* %112 to %struct._object*, !dbg !4109
  store %struct._object* %113, %struct._object** %_py_decref_tmp103, align 8, !dbg !4107, !tbaa !2522
  %114 = load %struct._object*, %struct._object** %_py_decref_tmp103, align 8, !dbg !4110, !tbaa !2522
  %ob_refcnt104 = getelementptr inbounds %struct._object, %struct._object* %114, i32 0, i32 0, !dbg !4112
  %115 = load i64, i64* %ob_refcnt104, align 8, !dbg !4113, !tbaa !2551
  %dec105 = add i64 %115, -1, !dbg !4113
  store i64 %dec105, i64* %ob_refcnt104, align 8, !dbg !4113, !tbaa !2551
  %cmp106 = icmp ne i64 %dec105, 0, !dbg !4114
  br i1 %cmp106, label %if.then.108, label %if.else.109, !dbg !4115

if.then.108:                                      ; preds = %do.body.102
  br label %if.end.112, !dbg !4116

if.else.109:                                      ; preds = %do.body.102
  %116 = load %struct._object*, %struct._object** %_py_decref_tmp103, align 8, !dbg !4118, !tbaa !2522
  %ob_type110 = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 1, !dbg !4120
  %117 = load %struct._typeobject*, %struct._typeobject** %ob_type110, align 8, !dbg !4120, !tbaa !2588
  %tp_dealloc111 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %117, i32 0, i32 4, !dbg !4121
  %118 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc111, align 8, !dbg !4121, !tbaa !2590
  %119 = load %struct._object*, %struct._object** %_py_decref_tmp103, align 8, !dbg !4122, !tbaa !2522
  call void %118(%struct._object* %119), !dbg !4123
  br label %if.end.112

if.end.112:                                       ; preds = %if.else.109, %if.then.108
  %120 = bitcast %struct._object** %_py_decref_tmp103 to i8*, !dbg !4124
  call void @llvm.lifetime.end(i64 8, i8* %120) #2, !dbg !4124
  br label %do.cond.113, !dbg !4125

do.cond.113:                                      ; preds = %if.end.112
  br label %do.end.114, !dbg !4126

do.end.114:                                       ; preds = %do.cond.113
  store %struct._object* null, %struct._object** %retval, !dbg !4128
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.285, !dbg !4128

if.end.115:                                       ; preds = %if.end.64
  %121 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4129, !tbaa !2522
  %paramfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %121, i32 0, i32 8, !dbg !4130
  store %struct.tagPyCArgObject* (%struct.tagCDataObject*)* @PyCSimpleType_paramfunc, %struct.tagPyCArgObject* (%struct.tagCDataObject*)** %paramfunc, align 8, !dbg !4131, !tbaa !3124
  %122 = load %struct._object*, %struct._object** %proto, align 8, !dbg !4132, !tbaa !2522
  %123 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4133, !tbaa !2522
  %proto116 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %123, i32 0, i32 5, !dbg !4134
  store %struct._object* %122, %struct._object** %proto116, align 8, !dbg !4135, !tbaa !2961
  %124 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4136, !tbaa !2522
  %125 = bitcast %struct.StgDictObject* %124 to %struct._object*, !dbg !4137
  %126 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4138, !tbaa !2522
  %tp_dict = getelementptr inbounds %struct._typeobject, %struct._typeobject* %126, i32 0, i32 31, !dbg !4139
  %127 = load %struct._object*, %struct._object** %tp_dict, align 8, !dbg !4139, !tbaa !3284
  %call117 = call i32 @PyDict_Update(%struct._object* %125, %struct._object* %127), !dbg !4140
  %cmp118 = icmp eq i32 -1, %call117, !dbg !4141
  br i1 %cmp118, label %if.then.120, label %if.end.147, !dbg !4142

if.then.120:                                      ; preds = %if.end.115
  br label %do.body.121, !dbg !4143

do.body.121:                                      ; preds = %if.then.120
  %128 = bitcast %struct._object** %_py_decref_tmp122 to i8*, !dbg !4144
  call void @llvm.lifetime.start(i64 8, i8* %128) #2, !dbg !4144
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp122, metadata !1267, metadata !2526), !dbg !4146
  %129 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4147, !tbaa !2522
  %130 = bitcast %struct._typeobject* %129 to %struct._object*, !dbg !4148
  store %struct._object* %130, %struct._object** %_py_decref_tmp122, align 8, !dbg !4146, !tbaa !2522
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8, !dbg !4149, !tbaa !2522
  %ob_refcnt123 = getelementptr inbounds %struct._object, %struct._object* %131, i32 0, i32 0, !dbg !4151
  %132 = load i64, i64* %ob_refcnt123, align 8, !dbg !4152, !tbaa !2551
  %dec124 = add i64 %132, -1, !dbg !4152
  store i64 %dec124, i64* %ob_refcnt123, align 8, !dbg !4152, !tbaa !2551
  %cmp125 = icmp ne i64 %dec124, 0, !dbg !4153
  br i1 %cmp125, label %if.then.127, label %if.else.128, !dbg !4154

if.then.127:                                      ; preds = %do.body.121
  br label %if.end.131, !dbg !4155

if.else.128:                                      ; preds = %do.body.121
  %133 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8, !dbg !4157, !tbaa !2522
  %ob_type129 = getelementptr inbounds %struct._object, %struct._object* %133, i32 0, i32 1, !dbg !4159
  %134 = load %struct._typeobject*, %struct._typeobject** %ob_type129, align 8, !dbg !4159, !tbaa !2588
  %tp_dealloc130 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %134, i32 0, i32 4, !dbg !4160
  %135 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc130, align 8, !dbg !4160, !tbaa !2590
  %136 = load %struct._object*, %struct._object** %_py_decref_tmp122, align 8, !dbg !4161, !tbaa !2522
  call void %135(%struct._object* %136), !dbg !4162
  br label %if.end.131

if.end.131:                                       ; preds = %if.else.128, %if.then.127
  %137 = bitcast %struct._object** %_py_decref_tmp122 to i8*, !dbg !4163
  call void @llvm.lifetime.end(i64 8, i8* %137) #2, !dbg !4163
  br label %do.cond.132, !dbg !4165

do.cond.132:                                      ; preds = %if.end.131
  br label %do.end.133, !dbg !4166

do.end.133:                                       ; preds = %do.cond.132
  br label %do.body.134, !dbg !4168

do.body.134:                                      ; preds = %do.end.133
  %138 = bitcast %struct._object** %_py_decref_tmp135 to i8*, !dbg !4169
  call void @llvm.lifetime.start(i64 8, i8* %138) #2, !dbg !4169
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp135, metadata !1271, metadata !2526), !dbg !4171
  %139 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4172, !tbaa !2522
  %140 = bitcast %struct.StgDictObject* %139 to %struct._object*, !dbg !4173
  store %struct._object* %140, %struct._object** %_py_decref_tmp135, align 8, !dbg !4171, !tbaa !2522
  %141 = load %struct._object*, %struct._object** %_py_decref_tmp135, align 8, !dbg !4174, !tbaa !2522
  %ob_refcnt136 = getelementptr inbounds %struct._object, %struct._object* %141, i32 0, i32 0, !dbg !4176
  %142 = load i64, i64* %ob_refcnt136, align 8, !dbg !4177, !tbaa !2551
  %dec137 = add i64 %142, -1, !dbg !4177
  store i64 %dec137, i64* %ob_refcnt136, align 8, !dbg !4177, !tbaa !2551
  %cmp138 = icmp ne i64 %dec137, 0, !dbg !4178
  br i1 %cmp138, label %if.then.140, label %if.else.141, !dbg !4179

if.then.140:                                      ; preds = %do.body.134
  br label %if.end.144, !dbg !4180

if.else.141:                                      ; preds = %do.body.134
  %143 = load %struct._object*, %struct._object** %_py_decref_tmp135, align 8, !dbg !4182, !tbaa !2522
  %ob_type142 = getelementptr inbounds %struct._object, %struct._object* %143, i32 0, i32 1, !dbg !4184
  %144 = load %struct._typeobject*, %struct._typeobject** %ob_type142, align 8, !dbg !4184, !tbaa !2588
  %tp_dealloc143 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %144, i32 0, i32 4, !dbg !4185
  %145 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc143, align 8, !dbg !4185, !tbaa !2590
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp135, align 8, !dbg !4186, !tbaa !2522
  call void %145(%struct._object* %146), !dbg !4187
  br label %if.end.144

if.end.144:                                       ; preds = %if.else.141, %if.then.140
  %147 = bitcast %struct._object** %_py_decref_tmp135 to i8*, !dbg !4188
  call void @llvm.lifetime.end(i64 8, i8* %147) #2, !dbg !4188
  br label %do.cond.145, !dbg !4189

do.cond.145:                                      ; preds = %if.end.144
  br label %do.end.146, !dbg !4190

do.end.146:                                       ; preds = %do.cond.145
  store %struct._object* null, %struct._object** %retval, !dbg !4192
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.285, !dbg !4192

if.end.147:                                       ; preds = %if.end.115
  br label %do.body.148, !dbg !4193

do.body.148:                                      ; preds = %if.end.147
  %148 = bitcast %struct._object** %_py_decref_tmp149 to i8*, !dbg !4194
  call void @llvm.lifetime.start(i64 8, i8* %148) #2, !dbg !4194
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp149, metadata !1273, metadata !2526), !dbg !4196
  %149 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4197, !tbaa !2522
  %tp_dict150 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %149, i32 0, i32 31, !dbg !4198
  %150 = load %struct._object*, %struct._object** %tp_dict150, align 8, !dbg !4198, !tbaa !3284
  store %struct._object* %150, %struct._object** %_py_decref_tmp149, align 8, !dbg !4196, !tbaa !2522
  %151 = load %struct._object*, %struct._object** %_py_decref_tmp149, align 8, !dbg !4199, !tbaa !2522
  %ob_refcnt151 = getelementptr inbounds %struct._object, %struct._object* %151, i32 0, i32 0, !dbg !4201
  %152 = load i64, i64* %ob_refcnt151, align 8, !dbg !4202, !tbaa !2551
  %dec152 = add i64 %152, -1, !dbg !4202
  store i64 %dec152, i64* %ob_refcnt151, align 8, !dbg !4202, !tbaa !2551
  %cmp153 = icmp ne i64 %dec152, 0, !dbg !4203
  br i1 %cmp153, label %if.then.155, label %if.else.156, !dbg !4204

if.then.155:                                      ; preds = %do.body.148
  br label %if.end.159, !dbg !4205

if.else.156:                                      ; preds = %do.body.148
  %153 = load %struct._object*, %struct._object** %_py_decref_tmp149, align 8, !dbg !4207, !tbaa !2522
  %ob_type157 = getelementptr inbounds %struct._object, %struct._object* %153, i32 0, i32 1, !dbg !4209
  %154 = load %struct._typeobject*, %struct._typeobject** %ob_type157, align 8, !dbg !4209, !tbaa !2588
  %tp_dealloc158 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %154, i32 0, i32 4, !dbg !4210
  %155 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc158, align 8, !dbg !4210, !tbaa !2590
  %156 = load %struct._object*, %struct._object** %_py_decref_tmp149, align 8, !dbg !4211, !tbaa !2522
  call void %155(%struct._object* %156), !dbg !4212
  br label %if.end.159

if.end.159:                                       ; preds = %if.else.156, %if.then.155
  %157 = bitcast %struct._object** %_py_decref_tmp149 to i8*, !dbg !4213
  call void @llvm.lifetime.end(i64 8, i8* %157) #2, !dbg !4213
  br label %do.cond.160, !dbg !4215

do.cond.160:                                      ; preds = %if.end.159
  br label %do.end.161, !dbg !4216

do.end.161:                                       ; preds = %do.cond.160
  %158 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4218, !tbaa !2522
  %159 = bitcast %struct.StgDictObject* %158 to %struct._object*, !dbg !4219
  %160 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4220, !tbaa !2522
  %tp_dict162 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %160, i32 0, i32 31, !dbg !4221
  store %struct._object* %159, %struct._object** %tp_dict162, align 8, !dbg !4222, !tbaa !3284
  %161 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4223, !tbaa !2522
  %tp_base = getelementptr inbounds %struct._typeobject, %struct._typeobject* %161, i32 0, i32 30, !dbg !4224
  %162 = load %struct._typeobject*, %struct._typeobject** %tp_base, align 8, !dbg !4224, !tbaa !4225
  %cmp163 = icmp eq %struct._typeobject* %162, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Simple_Type to %struct._typeobject*), !dbg !4226
  br i1 %cmp163, label %if.then.165, label %if.end.216, !dbg !4227

if.then.165:                                      ; preds = %do.end.161
  %163 = load i8*, i8** %proto_str, align 8, !dbg !4228, !tbaa !2522
  %164 = load i8, i8* %163, align 1, !dbg !4229, !tbaa !2731
  %conv166 = sext i8 %164 to i32, !dbg !4229
  br label %NodeBlock.17

NodeBlock.17:                                     ; preds = %if.then.165
  %Pivot.18 = icmp slt i32 %conv166, 90
  br i1 %Pivot.18, label %NodeBlock.5, label %NodeBlock.15

NodeBlock.15:                                     ; preds = %NodeBlock.17
  %Pivot.16 = icmp slt i32 %conv166, 115
  br i1 %Pivot.16, label %LeafBlock.7, label %NodeBlock.13

NodeBlock.13:                                     ; preds = %NodeBlock.15
  %Pivot.14 = icmp slt i32 %conv166, 122
  br i1 %Pivot.14, label %LeafBlock.9, label %LeafBlock.11

LeafBlock.11:                                     ; preds = %NodeBlock.13
  %SwitchLeaf12 = icmp eq i32 %conv166, 122
  br i1 %SwitchLeaf12, label %sw.bb, label %NewDefault

LeafBlock.9:                                      ; preds = %NodeBlock.13
  %SwitchLeaf10 = icmp eq i32 %conv166, 115
  br i1 %SwitchLeaf10, label %sw.bb.173, label %NewDefault

LeafBlock.7:                                      ; preds = %NodeBlock.15
  %SwitchLeaf8 = icmp eq i32 %conv166, 90
  br i1 %SwitchLeaf8, label %sw.bb.167, label %NewDefault

NodeBlock.5:                                      ; preds = %NodeBlock.17
  %Pivot.6 = icmp slt i32 %conv166, 80
  br i1 %Pivot.6, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock.5
  %Pivot = icmp slt i32 %conv166, 88
  br i1 %Pivot, label %LeafBlock.1, label %LeafBlock.3

LeafBlock.3:                                      ; preds = %NodeBlock
  %SwitchLeaf4 = icmp eq i32 %conv166, 88
  br i1 %SwitchLeaf4, label %sw.bb.173, label %NewDefault

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %conv166, 80
  br i1 %SwitchLeaf2, label %sw.bb.170, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock.5
  %SwitchLeaf = icmp eq i32 %conv166, 79
  br i1 %SwitchLeaf, label %sw.bb.173, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock.11
  store %struct.PyMethodDef* @c_char_p_method, %struct.PyMethodDef** %ml, align 8, !dbg !4230, !tbaa !2522
  %165 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4232, !tbaa !2522
  %flags = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %165, i32 0, i32 13, !dbg !4233
  %166 = load i32, i32* %flags, align 4, !dbg !4234, !tbaa !3128
  %or = or i32 %166, 256, !dbg !4234
  store i32 %or, i32* %flags, align 4, !dbg !4234, !tbaa !3128
  br label %sw.epilog, !dbg !4235

sw.bb.167:                                        ; preds = %LeafBlock.7
  store %struct.PyMethodDef* @c_wchar_p_method, %struct.PyMethodDef** %ml, align 8, !dbg !4236, !tbaa !2522
  %167 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4237, !tbaa !2522
  %flags168 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %167, i32 0, i32 13, !dbg !4238
  %168 = load i32, i32* %flags168, align 4, !dbg !4239, !tbaa !3128
  %or169 = or i32 %168, 256, !dbg !4239
  store i32 %or169, i32* %flags168, align 4, !dbg !4239, !tbaa !3128
  br label %sw.epilog, !dbg !4240

sw.bb.170:                                        ; preds = %LeafBlock.1
  store %struct.PyMethodDef* @c_void_p_method, %struct.PyMethodDef** %ml, align 8, !dbg !4241, !tbaa !2522
  %169 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4242, !tbaa !2522
  %flags171 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %169, i32 0, i32 13, !dbg !4243
  %170 = load i32, i32* %flags171, align 4, !dbg !4244, !tbaa !3128
  %or172 = or i32 %170, 256, !dbg !4244
  store i32 %or172, i32* %flags171, align 4, !dbg !4244, !tbaa !3128
  br label %sw.epilog, !dbg !4245

sw.bb.173:                                        ; preds = %LeafBlock.9, %LeafBlock.3, %LeafBlock
  store %struct.PyMethodDef* null, %struct.PyMethodDef** %ml, align 8, !dbg !4246, !tbaa !2522
  %171 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4247, !tbaa !2522
  %flags174 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %171, i32 0, i32 13, !dbg !4248
  %172 = load i32, i32* %flags174, align 4, !dbg !4249, !tbaa !3128
  %or175 = or i32 %172, 256, !dbg !4249
  store i32 %or175, i32* %flags174, align 4, !dbg !4249, !tbaa !3128
  br label %sw.epilog, !dbg !4250

NewDefault:                                       ; preds = %LeafBlock.11, %LeafBlock.9, %LeafBlock.7, %LeafBlock.3, %LeafBlock.1, %LeafBlock
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  store %struct.PyMethodDef* null, %struct.PyMethodDef** %ml, align 8, !dbg !4251, !tbaa !2522
  br label %sw.epilog, !dbg !4252

sw.epilog:                                        ; preds = %sw.default, %sw.bb.173, %sw.bb.170, %sw.bb.167, %sw.bb
  %173 = load %struct.PyMethodDef*, %struct.PyMethodDef** %ml, align 8, !dbg !4253, !tbaa !2522
  %tobool176 = icmp ne %struct.PyMethodDef* %173, null, !dbg !4253
  br i1 %tobool176, label %if.then.177, label %if.end.215, !dbg !4254

if.then.177:                                      ; preds = %sw.epilog
  %174 = bitcast %struct._object** %meth to i8*, !dbg !4255
  call void @llvm.lifetime.start(i64 8, i8* %174) #2, !dbg !4255
  call void @llvm.dbg.declare(metadata %struct._object** %meth, metadata !1275, metadata !2526), !dbg !4256
  %175 = bitcast i32* %x to i8*, !dbg !4257
  call void @llvm.lifetime.start(i64 4, i8* %175) #2, !dbg !4257
  call void @llvm.dbg.declare(metadata i32* %x, metadata !1280, metadata !2526), !dbg !4258
  %176 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4259, !tbaa !2522
  %177 = load %struct.PyMethodDef*, %struct.PyMethodDef** %ml, align 8, !dbg !4260, !tbaa !2522
  %call178 = call %struct._object* @PyDescr_NewClassMethod(%struct._typeobject* %176, %struct.PyMethodDef* %177), !dbg !4261
  store %struct._object* %call178, %struct._object** %meth, align 8, !dbg !4262, !tbaa !2522
  %178 = load %struct._object*, %struct._object** %meth, align 8, !dbg !4263, !tbaa !2522
  %tobool179 = icmp ne %struct._object* %178, null, !dbg !4263
  br i1 %tobool179, label %if.end.181, label %if.then.180, !dbg !4265

if.then.180:                                      ; preds = %if.then.177
  store %struct._object* null, %struct._object** %retval, !dbg !4266
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4266

if.end.181:                                       ; preds = %if.then.177
  %179 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4267, !tbaa !2522
  %tp_dict182 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %179, i32 0, i32 31, !dbg !4268
  %180 = load %struct._object*, %struct._object** %tp_dict182, align 8, !dbg !4268, !tbaa !3284
  %181 = load %struct.PyMethodDef*, %struct.PyMethodDef** %ml, align 8, !dbg !4269, !tbaa !2522
  %ml_name = getelementptr inbounds %struct.PyMethodDef, %struct.PyMethodDef* %181, i32 0, i32 0, !dbg !4270
  %182 = load i8*, i8** %ml_name, align 8, !dbg !4270, !tbaa !4271
  %183 = load %struct._object*, %struct._object** %meth, align 8, !dbg !4273, !tbaa !2522
  %call183 = call i32 @PyDict_SetItemString(%struct._object* %180, i8* %182, %struct._object* %183), !dbg !4274
  store i32 %call183, i32* %x, align 4, !dbg !4275, !tbaa !2611
  br label %do.body.184, !dbg !4276

do.body.184:                                      ; preds = %if.end.181
  %184 = bitcast %struct._object** %_py_decref_tmp185 to i8*, !dbg !4277
  call void @llvm.lifetime.start(i64 8, i8* %184) #2, !dbg !4277
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp185, metadata !1281, metadata !2526), !dbg !4279
  %185 = load %struct._object*, %struct._object** %meth, align 8, !dbg !4280, !tbaa !2522
  store %struct._object* %185, %struct._object** %_py_decref_tmp185, align 8, !dbg !4279, !tbaa !2522
  %186 = load %struct._object*, %struct._object** %_py_decref_tmp185, align 8, !dbg !4281, !tbaa !2522
  %ob_refcnt186 = getelementptr inbounds %struct._object, %struct._object* %186, i32 0, i32 0, !dbg !4283
  %187 = load i64, i64* %ob_refcnt186, align 8, !dbg !4284, !tbaa !2551
  %dec187 = add i64 %187, -1, !dbg !4284
  store i64 %dec187, i64* %ob_refcnt186, align 8, !dbg !4284, !tbaa !2551
  %cmp188 = icmp ne i64 %dec187, 0, !dbg !4285
  br i1 %cmp188, label %if.then.190, label %if.else.191, !dbg !4286

if.then.190:                                      ; preds = %do.body.184
  br label %if.end.194, !dbg !4287

if.else.191:                                      ; preds = %do.body.184
  %188 = load %struct._object*, %struct._object** %_py_decref_tmp185, align 8, !dbg !4289, !tbaa !2522
  %ob_type192 = getelementptr inbounds %struct._object, %struct._object* %188, i32 0, i32 1, !dbg !4291
  %189 = load %struct._typeobject*, %struct._typeobject** %ob_type192, align 8, !dbg !4291, !tbaa !2588
  %tp_dealloc193 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %189, i32 0, i32 4, !dbg !4292
  %190 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc193, align 8, !dbg !4292, !tbaa !2590
  %191 = load %struct._object*, %struct._object** %_py_decref_tmp185, align 8, !dbg !4293, !tbaa !2522
  call void %190(%struct._object* %191), !dbg !4294
  br label %if.end.194

if.end.194:                                       ; preds = %if.else.191, %if.then.190
  %192 = bitcast %struct._object** %_py_decref_tmp185 to i8*, !dbg !4295
  call void @llvm.lifetime.end(i64 8, i8* %192) #2, !dbg !4295
  br label %do.cond.195, !dbg !4297

do.cond.195:                                      ; preds = %if.end.194
  br label %do.end.196, !dbg !4298

do.end.196:                                       ; preds = %do.cond.195
  %193 = load i32, i32* %x, align 4, !dbg !4300, !tbaa !2611
  %cmp197 = icmp eq i32 %193, -1, !dbg !4301
  br i1 %cmp197, label %if.then.199, label %if.end.213, !dbg !4302

if.then.199:                                      ; preds = %do.end.196
  br label %do.body.200, !dbg !4303

do.body.200:                                      ; preds = %if.then.199
  %194 = bitcast %struct._object** %_py_decref_tmp201 to i8*, !dbg !4304
  call void @llvm.lifetime.start(i64 8, i8* %194) #2, !dbg !4304
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp201, metadata !1283, metadata !2526), !dbg !4306
  %195 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4307, !tbaa !2522
  %196 = bitcast %struct._typeobject* %195 to %struct._object*, !dbg !4308
  store %struct._object* %196, %struct._object** %_py_decref_tmp201, align 8, !dbg !4306, !tbaa !2522
  %197 = load %struct._object*, %struct._object** %_py_decref_tmp201, align 8, !dbg !4309, !tbaa !2522
  %ob_refcnt202 = getelementptr inbounds %struct._object, %struct._object* %197, i32 0, i32 0, !dbg !4311
  %198 = load i64, i64* %ob_refcnt202, align 8, !dbg !4312, !tbaa !2551
  %dec203 = add i64 %198, -1, !dbg !4312
  store i64 %dec203, i64* %ob_refcnt202, align 8, !dbg !4312, !tbaa !2551
  %cmp204 = icmp ne i64 %dec203, 0, !dbg !4313
  br i1 %cmp204, label %if.then.206, label %if.else.207, !dbg !4314

if.then.206:                                      ; preds = %do.body.200
  br label %if.end.210, !dbg !4315

if.else.207:                                      ; preds = %do.body.200
  %199 = load %struct._object*, %struct._object** %_py_decref_tmp201, align 8, !dbg !4317, !tbaa !2522
  %ob_type208 = getelementptr inbounds %struct._object, %struct._object* %199, i32 0, i32 1, !dbg !4319
  %200 = load %struct._typeobject*, %struct._typeobject** %ob_type208, align 8, !dbg !4319, !tbaa !2588
  %tp_dealloc209 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %200, i32 0, i32 4, !dbg !4320
  %201 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc209, align 8, !dbg !4320, !tbaa !2590
  %202 = load %struct._object*, %struct._object** %_py_decref_tmp201, align 8, !dbg !4321, !tbaa !2522
  call void %201(%struct._object* %202), !dbg !4322
  br label %if.end.210

if.end.210:                                       ; preds = %if.else.207, %if.then.206
  %203 = bitcast %struct._object** %_py_decref_tmp201 to i8*, !dbg !4323
  call void @llvm.lifetime.end(i64 8, i8* %203) #2, !dbg !4323
  br label %do.cond.211, !dbg !4325

do.cond.211:                                      ; preds = %if.end.210
  br label %do.end.212, !dbg !4326

do.end.212:                                       ; preds = %do.cond.211
  store %struct._object* null, %struct._object** %retval, !dbg !4328
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4328

if.end.213:                                       ; preds = %do.end.196
  store i32 0, i32* %cleanup.dest.slot, !dbg !4329
  br label %cleanup, !dbg !4329

cleanup:                                          ; preds = %if.end.213, %do.end.212, %if.then.180
  %204 = bitcast i32* %x to i8*, !dbg !4330
  call void @llvm.lifetime.end(i64 4, i8* %204) #2, !dbg !4330
  %205 = bitcast %struct._object** %meth to i8*, !dbg !4330
  call void @llvm.lifetime.end(i64 8, i8* %205) #2, !dbg !4330
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.20

LeafBlock.20:                                     ; preds = %cleanup
  %SwitchLeaf21 = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf21, label %cleanup.cont, label %NewDefault.19

cleanup.cont:                                     ; preds = %LeafBlock.20
  br label %if.end.215, !dbg !4332

if.end.215:                                       ; preds = %cleanup.cont, %sw.epilog
  br label %if.end.216, !dbg !4333

if.end.216:                                       ; preds = %if.end.215, %do.end.161
  %206 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !4334, !tbaa !2522
  %cmp217 = icmp eq %struct._typeobject* %206, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCSimpleType_Type to %struct._typeobject*), !dbg !4335
  br i1 %cmp217, label %land.lhs.true.219, label %if.end.284, !dbg !4336

land.lhs.true.219:                                ; preds = %if.end.216
  %207 = load %struct.fielddesc*, %struct.fielddesc** %fmt, align 8, !dbg !4337, !tbaa !2522
  %setfunc_swapped = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %207, i32 0, i32 4, !dbg !4339
  %208 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc_swapped, align 8, !dbg !4339, !tbaa !4340
  %tobool220 = icmp ne %struct._object* (i8*, %struct._object*, i64)* %208, null, !dbg !4341
  br i1 %tobool220, label %land.lhs.true.221, label %if.end.284, !dbg !4342

land.lhs.true.221:                                ; preds = %land.lhs.true.219
  %209 = load %struct.fielddesc*, %struct.fielddesc** %fmt, align 8, !dbg !4343, !tbaa !2522
  %getfunc_swapped = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %209, i32 0, i32 5, !dbg !4345
  %210 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc_swapped, align 8, !dbg !4345, !tbaa !4346
  %tobool222 = icmp ne %struct._object* (i8*, i64)* %210, null, !dbg !4347
  br i1 %tobool222, label %if.then.223, label %if.end.284, !dbg !4348

if.then.223:                                      ; preds = %land.lhs.true.221
  %211 = bitcast %struct._object** %swapped to i8*, !dbg !4349
  call void @llvm.lifetime.start(i64 8, i8* %211) #2, !dbg !4349
  call void @llvm.dbg.declare(metadata %struct._object** %swapped, metadata !1287, metadata !2526), !dbg !4350
  %212 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !4351, !tbaa !2522
  %213 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4352, !tbaa !2522
  %214 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !4353, !tbaa !2522
  %215 = load %struct._object*, %struct._object** %proto, align 8, !dbg !4354, !tbaa !2522
  %216 = load %struct.fielddesc*, %struct.fielddesc** %fmt, align 8, !dbg !4355, !tbaa !2522
  %call224 = call %struct._object* @CreateSwappedType(%struct._typeobject* %212, %struct._object* %213, %struct._object* %214, %struct._object* %215, %struct.fielddesc* %216), !dbg !4356
  store %struct._object* %call224, %struct._object** %swapped, align 8, !dbg !4350, !tbaa !2522
  %217 = bitcast %struct.StgDictObject** %sw_dict to i8*, !dbg !4357
  call void @llvm.lifetime.start(i64 8, i8* %217) #2, !dbg !4357
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %sw_dict, metadata !1290, metadata !2526), !dbg !4358
  %218 = load %struct._object*, %struct._object** %swapped, align 8, !dbg !4359, !tbaa !2522
  %cmp225 = icmp eq %struct._object* %218, null, !dbg !4360
  br i1 %cmp225, label %if.then.227, label %if.end.241, !dbg !4361

if.then.227:                                      ; preds = %if.then.223
  br label %do.body.228, !dbg !4362

do.body.228:                                      ; preds = %if.then.227
  %219 = bitcast %struct._object** %_py_decref_tmp229 to i8*, !dbg !4363
  call void @llvm.lifetime.start(i64 8, i8* %219) #2, !dbg !4363
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp229, metadata !1291, metadata !2526), !dbg !4365
  %220 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4366, !tbaa !2522
  %221 = bitcast %struct._typeobject* %220 to %struct._object*, !dbg !4367
  store %struct._object* %221, %struct._object** %_py_decref_tmp229, align 8, !dbg !4365, !tbaa !2522
  %222 = load %struct._object*, %struct._object** %_py_decref_tmp229, align 8, !dbg !4368, !tbaa !2522
  %ob_refcnt230 = getelementptr inbounds %struct._object, %struct._object* %222, i32 0, i32 0, !dbg !4370
  %223 = load i64, i64* %ob_refcnt230, align 8, !dbg !4371, !tbaa !2551
  %dec231 = add i64 %223, -1, !dbg !4371
  store i64 %dec231, i64* %ob_refcnt230, align 8, !dbg !4371, !tbaa !2551
  %cmp232 = icmp ne i64 %dec231, 0, !dbg !4372
  br i1 %cmp232, label %if.then.234, label %if.else.235, !dbg !4373

if.then.234:                                      ; preds = %do.body.228
  br label %if.end.238, !dbg !4374

if.else.235:                                      ; preds = %do.body.228
  %224 = load %struct._object*, %struct._object** %_py_decref_tmp229, align 8, !dbg !4376, !tbaa !2522
  %ob_type236 = getelementptr inbounds %struct._object, %struct._object* %224, i32 0, i32 1, !dbg !4378
  %225 = load %struct._typeobject*, %struct._typeobject** %ob_type236, align 8, !dbg !4378, !tbaa !2588
  %tp_dealloc237 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %225, i32 0, i32 4, !dbg !4379
  %226 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc237, align 8, !dbg !4379, !tbaa !2590
  %227 = load %struct._object*, %struct._object** %_py_decref_tmp229, align 8, !dbg !4380, !tbaa !2522
  call void %226(%struct._object* %227), !dbg !4381
  br label %if.end.238

if.end.238:                                       ; preds = %if.else.235, %if.then.234
  %228 = bitcast %struct._object** %_py_decref_tmp229 to i8*, !dbg !4382
  call void @llvm.lifetime.end(i64 8, i8* %228) #2, !dbg !4382
  br label %do.cond.239, !dbg !4384

do.cond.239:                                      ; preds = %if.end.238
  br label %do.end.240, !dbg !4385

do.end.240:                                       ; preds = %do.cond.239
  store %struct._object* null, %struct._object** %retval, !dbg !4387
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.280, !dbg !4387

if.end.241:                                       ; preds = %if.then.223
  %229 = load %struct._object*, %struct._object** %swapped, align 8, !dbg !4388, !tbaa !2522
  %call242 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %229), !dbg !4389
  store %struct.StgDictObject* %call242, %struct.StgDictObject** %sw_dict, align 8, !dbg !4390, !tbaa !2522
  %230 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4391, !tbaa !2522
  %231 = bitcast %struct._typeobject* %230 to %struct._object*, !dbg !4392
  %232 = load %struct._object*, %struct._object** %swapped, align 8, !dbg !4393, !tbaa !2522
  %call243 = call i32 @PyObject_SetAttrString(%struct._object* %231, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.98, i32 0, i32 0), %struct._object* %232), !dbg !4394
  %233 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4395, !tbaa !2522
  %234 = bitcast %struct._typeobject* %233 to %struct._object*, !dbg !4396
  %235 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4397, !tbaa !2522
  %236 = bitcast %struct._typeobject* %235 to %struct._object*, !dbg !4398
  %call244 = call i32 @PyObject_SetAttrString(%struct._object* %234, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i32 0, i32 0), %struct._object* %236), !dbg !4399
  %237 = load %struct._object*, %struct._object** %swapped, align 8, !dbg !4400, !tbaa !2522
  %238 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4401, !tbaa !2522
  %239 = bitcast %struct._typeobject* %238 to %struct._object*, !dbg !4402
  %call245 = call i32 @PyObject_SetAttrString(%struct._object* %237, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i32 0, i32 0), %struct._object* %239), !dbg !4403
  %240 = load %struct._object*, %struct._object** %swapped, align 8, !dbg !4404, !tbaa !2522
  %241 = load %struct._object*, %struct._object** %swapped, align 8, !dbg !4405, !tbaa !2522
  %call246 = call i32 @PyObject_SetAttrString(%struct._object* %240, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.98, i32 0, i32 0), %struct._object* %241), !dbg !4406
  %242 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4407, !tbaa !2522
  %format247 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %242, i32 0, i32 14, !dbg !4408
  %243 = load i8*, i8** %format247, align 8, !dbg !4408, !tbaa !3176
  %add.ptr = getelementptr i8, i8* %243, i64 1, !dbg !4409
  %call248 = call i8* @_ctypes_alloc_format_string(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.100, i32 0, i32 0), i8* %add.ptr), !dbg !4410
  %244 = load %struct.StgDictObject*, %struct.StgDictObject** %sw_dict, align 8, !dbg !4411, !tbaa !2522
  %format249 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %244, i32 0, i32 14, !dbg !4412
  store i8* %call248, i8** %format249, align 8, !dbg !4413, !tbaa !3176
  br label %do.body.250, !dbg !4414

do.body.250:                                      ; preds = %if.end.241
  %245 = bitcast %struct._object** %_py_decref_tmp251 to i8*, !dbg !4415
  call void @llvm.lifetime.start(i64 8, i8* %245) #2, !dbg !4415
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp251, metadata !1295, metadata !2526), !dbg !4417
  %246 = load %struct._object*, %struct._object** %swapped, align 8, !dbg !4418, !tbaa !2522
  store %struct._object* %246, %struct._object** %_py_decref_tmp251, align 8, !dbg !4417, !tbaa !2522
  %247 = load %struct._object*, %struct._object** %_py_decref_tmp251, align 8, !dbg !4419, !tbaa !2522
  %ob_refcnt252 = getelementptr inbounds %struct._object, %struct._object* %247, i32 0, i32 0, !dbg !4421
  %248 = load i64, i64* %ob_refcnt252, align 8, !dbg !4422, !tbaa !2551
  %dec253 = add i64 %248, -1, !dbg !4422
  store i64 %dec253, i64* %ob_refcnt252, align 8, !dbg !4422, !tbaa !2551
  %cmp254 = icmp ne i64 %dec253, 0, !dbg !4423
  br i1 %cmp254, label %if.then.256, label %if.else.257, !dbg !4424

if.then.256:                                      ; preds = %do.body.250
  br label %if.end.260, !dbg !4425

if.else.257:                                      ; preds = %do.body.250
  %249 = load %struct._object*, %struct._object** %_py_decref_tmp251, align 8, !dbg !4427, !tbaa !2522
  %ob_type258 = getelementptr inbounds %struct._object, %struct._object* %249, i32 0, i32 1, !dbg !4429
  %250 = load %struct._typeobject*, %struct._typeobject** %ob_type258, align 8, !dbg !4429, !tbaa !2588
  %tp_dealloc259 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %250, i32 0, i32 4, !dbg !4430
  %251 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc259, align 8, !dbg !4430, !tbaa !2590
  %252 = load %struct._object*, %struct._object** %_py_decref_tmp251, align 8, !dbg !4431, !tbaa !2522
  call void %251(%struct._object* %252), !dbg !4432
  br label %if.end.260

if.end.260:                                       ; preds = %if.else.257, %if.then.256
  %253 = bitcast %struct._object** %_py_decref_tmp251 to i8*, !dbg !4433
  call void @llvm.lifetime.end(i64 8, i8* %253) #2, !dbg !4433
  br label %do.cond.261, !dbg !4435

do.cond.261:                                      ; preds = %if.end.260
  br label %do.end.262, !dbg !4436

do.end.262:                                       ; preds = %do.cond.261
  %call263 = call %struct._object* @PyErr_Occurred(), !dbg !4438
  %tobool264 = icmp ne %struct._object* %call263, null, !dbg !4438
  br i1 %tobool264, label %if.then.265, label %if.end.279, !dbg !4439

if.then.265:                                      ; preds = %do.end.262
  br label %do.body.266, !dbg !4440

do.body.266:                                      ; preds = %if.then.265
  %254 = bitcast %struct._object** %_py_decref_tmp267 to i8*, !dbg !4441
  call void @llvm.lifetime.start(i64 8, i8* %254) #2, !dbg !4441
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp267, metadata !1297, metadata !2526), !dbg !4443
  %255 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4444, !tbaa !2522
  %256 = bitcast %struct._typeobject* %255 to %struct._object*, !dbg !4445
  store %struct._object* %256, %struct._object** %_py_decref_tmp267, align 8, !dbg !4443, !tbaa !2522
  %257 = load %struct._object*, %struct._object** %_py_decref_tmp267, align 8, !dbg !4446, !tbaa !2522
  %ob_refcnt268 = getelementptr inbounds %struct._object, %struct._object* %257, i32 0, i32 0, !dbg !4448
  %258 = load i64, i64* %ob_refcnt268, align 8, !dbg !4449, !tbaa !2551
  %dec269 = add i64 %258, -1, !dbg !4449
  store i64 %dec269, i64* %ob_refcnt268, align 8, !dbg !4449, !tbaa !2551
  %cmp270 = icmp ne i64 %dec269, 0, !dbg !4450
  br i1 %cmp270, label %if.then.272, label %if.else.273, !dbg !4451

if.then.272:                                      ; preds = %do.body.266
  br label %if.end.276, !dbg !4452

if.else.273:                                      ; preds = %do.body.266
  %259 = load %struct._object*, %struct._object** %_py_decref_tmp267, align 8, !dbg !4454, !tbaa !2522
  %ob_type274 = getelementptr inbounds %struct._object, %struct._object* %259, i32 0, i32 1, !dbg !4456
  %260 = load %struct._typeobject*, %struct._typeobject** %ob_type274, align 8, !dbg !4456, !tbaa !2588
  %tp_dealloc275 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %260, i32 0, i32 4, !dbg !4457
  %261 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc275, align 8, !dbg !4457, !tbaa !2590
  %262 = load %struct._object*, %struct._object** %_py_decref_tmp267, align 8, !dbg !4458, !tbaa !2522
  call void %261(%struct._object* %262), !dbg !4459
  br label %if.end.276

if.end.276:                                       ; preds = %if.else.273, %if.then.272
  %263 = bitcast %struct._object** %_py_decref_tmp267 to i8*, !dbg !4460
  call void @llvm.lifetime.end(i64 8, i8* %263) #2, !dbg !4460
  br label %do.cond.277, !dbg !4462

do.cond.277:                                      ; preds = %if.end.276
  br label %do.end.278, !dbg !4463

do.end.278:                                       ; preds = %do.cond.277
  store %struct._object* null, %struct._object** %retval, !dbg !4465
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.280, !dbg !4465

if.end.279:                                       ; preds = %do.end.262
  store i32 0, i32* %cleanup.dest.slot, !dbg !4466
  br label %cleanup.280, !dbg !4466

cleanup.280:                                      ; preds = %if.end.279, %do.end.278, %do.end.240
  %264 = bitcast %struct.StgDictObject** %sw_dict to i8*, !dbg !4467
  call void @llvm.lifetime.end(i64 8, i8* %264) #2, !dbg !4467
  %265 = bitcast %struct._object** %swapped to i8*, !dbg !4467
  call void @llvm.lifetime.end(i64 8, i8* %265) #2, !dbg !4467
  %cleanup.dest.282 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.23

LeafBlock.23:                                     ; preds = %cleanup.280
  %SwitchLeaf24 = icmp eq i32 %cleanup.dest.282, 0
  br i1 %SwitchLeaf24, label %cleanup.cont.283, label %NewDefault.22

cleanup.cont.283:                                 ; preds = %LeafBlock.23
  br label %if.end.284, !dbg !4468

if.end.284:                                       ; preds = %cleanup.cont.283, %land.lhs.true.221, %land.lhs.true.219, %if.end.216
  %266 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4469, !tbaa !2522
  %267 = bitcast %struct._typeobject* %266 to %struct._object*, !dbg !4470
  store %struct._object* %267, %struct._object** %retval, !dbg !4471
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.285, !dbg !4471

NewDefault.19:                                    ; preds = %LeafBlock.20
  br label %cleanup.285

NewDefault.22:                                    ; preds = %LeafBlock.23
  br label %cleanup.285

cleanup.285:                                      ; preds = %NewDefault.22, %NewDefault.19, %if.end.284, %do.end.146, %do.end.114, %do.end.30, %if.then
  %268 = bitcast %struct.fielddesc** %fmt to i8*, !dbg !4472
  call void @llvm.lifetime.end(i64 8, i8* %268) #2, !dbg !4472
  %269 = bitcast %struct.PyMethodDef** %ml to i8*, !dbg !4472
  call void @llvm.lifetime.end(i64 8, i8* %269) #2, !dbg !4472
  %270 = bitcast i64* %proto_len to i8*, !dbg !4472
  call void @llvm.lifetime.end(i64 8, i8* %270) #2, !dbg !4472
  %271 = bitcast i8** %proto_str to i8*, !dbg !4472
  call void @llvm.lifetime.end(i64 8, i8* %271) #2, !dbg !4472
  %272 = bitcast %struct._object** %proto to i8*, !dbg !4472
  call void @llvm.lifetime.end(i64 8, i8* %272) #2, !dbg !4472
  %273 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !4472
  call void @llvm.lifetime.end(i64 8, i8* %273) #2, !dbg !4472
  %274 = bitcast %struct._typeobject** %result to i8*, !dbg !4472
  call void @llvm.lifetime.end(i64 8, i8* %274) #2, !dbg !4472
  %275 = load %struct._object*, %struct._object** %retval, !dbg !4472
  ret %struct._object* %275, !dbg !4472
}

; Function Attrs: uwtable
define internal %struct._object* @PyCFuncPtrType_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %result = alloca %struct._typeobject*, align 8
  %stgdict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  %_py_decref_tmp28 = alloca %struct._object*, align 8
  %_py_decref_tmp40 = alloca %struct._object*, align 8
  %_py_decref_tmp53 = alloca %struct._object*, align 8
  %_py_decref_tmp70 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1444, metadata !2526), !dbg !4473
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1445, metadata !2526), !dbg !4474
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1446, metadata !2526), !dbg !4475
  %0 = bitcast %struct._typeobject** %result to i8*, !dbg !4476
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4476
  call void @llvm.dbg.declare(metadata %struct._typeobject** %result, metadata !1447, metadata !2526), !dbg !4477
  %1 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !4478
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !4478
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict, metadata !1448, metadata !2526), !dbg !4479
  %call = call %struct._object* @PyObject_CallObject(%struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyCStgDict_Type, i32 0, i32 0, i32 0), %struct._object* null), !dbg !4480
  %2 = bitcast %struct._object* %call to %struct.StgDictObject*, !dbg !4481
  store %struct.StgDictObject* %2, %struct.StgDictObject** %stgdict, align 8, !dbg !4482, !tbaa !2522
  %3 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4483, !tbaa !2522
  %tobool = icmp ne %struct.StgDictObject* %3, null, !dbg !4483
  br i1 %tobool, label %if.end, label %if.then, !dbg !4485

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4486
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4486

if.end:                                           ; preds = %entry
  %4 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4487, !tbaa !2522
  %paramfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %4, i32 0, i32 8, !dbg !4488
  store %struct.tagPyCArgObject* (%struct.tagCDataObject*)* @PyCFuncPtrType_paramfunc, %struct.tagPyCArgObject* (%struct.tagCDataObject*)** %paramfunc, align 8, !dbg !4489, !tbaa !3124
  %call1 = call i8* @_ctypes_alloc_format_string(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i32 0, i32 0)), !dbg !4490
  %5 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4491, !tbaa !2522
  %format = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %5, i32 0, i32 14, !dbg !4492
  store i8* %call1, i8** %format, align 8, !dbg !4493, !tbaa !3176
  %6 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4494, !tbaa !2522
  %format2 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %6, i32 0, i32 14, !dbg !4495
  %7 = load i8*, i8** %format2, align 8, !dbg !4495, !tbaa !3176
  %cmp = icmp eq i8* %7, null, !dbg !4496
  br i1 %cmp, label %if.then.3, label %if.end.7, !dbg !4497

if.then.3:                                        ; preds = %if.end
  br label %do.body, !dbg !4498

do.body:                                          ; preds = %if.then.3
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4499
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !4499
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1449, metadata !2526), !dbg !4501
  %9 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4502, !tbaa !2522
  %10 = bitcast %struct.StgDictObject* %9 to %struct._object*, !dbg !4503
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !4501, !tbaa !2522
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4504, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !4506
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !4507, !tbaa !2551
  %dec = add i64 %12, -1, !dbg !4507
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4507, !tbaa !2551
  %cmp4 = icmp ne i64 %dec, 0, !dbg !4508
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !4509

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !4510

if.else:                                          ; preds = %do.body
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4512, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !4514
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4514, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !4515
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4515, !tbaa !2590
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4516, !tbaa !2522
  call void %15(%struct._object* %16), !dbg !4517
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4518
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !4518
  br label %do.cond, !dbg !4520

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !4521

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !4523
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4523

if.end.7:                                         ; preds = %if.end
  %18 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4524, !tbaa !2522
  %flags = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %18, i32 0, i32 13, !dbg !4525
  %19 = load i32, i32* %flags, align 4, !dbg !4526, !tbaa !3128
  %or = or i32 %19, 256, !dbg !4526
  store i32 %or, i32* %flags, align 4, !dbg !4526, !tbaa !3128
  %20 = load %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyType_Type, i32 0, i32 37), align 8, !dbg !4527, !tbaa !3244
  %21 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !4528, !tbaa !2522
  %22 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4529, !tbaa !2522
  %23 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !4530, !tbaa !2522
  %call8 = call %struct._object* %20(%struct._typeobject* %21, %struct._object* %22, %struct._object* %23), !dbg !4531
  %24 = bitcast %struct._object* %call8 to %struct._typeobject*, !dbg !4532
  store %struct._typeobject* %24, %struct._typeobject** %result, align 8, !dbg !4533, !tbaa !2522
  %25 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4534, !tbaa !2522
  %cmp9 = icmp eq %struct._typeobject* %25, null, !dbg !4535
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !4536

if.then.10:                                       ; preds = %if.end.7
  br label %do.body.11, !dbg !4537

do.body.11:                                       ; preds = %if.then.10
  %26 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !4538
  call void @llvm.lifetime.start(i64 8, i8* %26) #2, !dbg !4538
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !1453, metadata !2526), !dbg !4540
  %27 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4541, !tbaa !2522
  %28 = bitcast %struct.StgDictObject* %27 to %struct._object*, !dbg !4542
  store %struct._object* %28, %struct._object** %_py_decref_tmp12, align 8, !dbg !4540, !tbaa !2522
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !4543, !tbaa !2522
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !4545
  %30 = load i64, i64* %ob_refcnt13, align 8, !dbg !4546, !tbaa !2551
  %dec14 = add i64 %30, -1, !dbg !4546
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !4546, !tbaa !2551
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !4547
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !4548

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !4549

if.else.17:                                       ; preds = %do.body.11
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !4551, !tbaa !2522
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !4553
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !4553, !tbaa !2588
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !4554
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !4554, !tbaa !2590
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !4555, !tbaa !2522
  call void %33(%struct._object* %34), !dbg !4556
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %35 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !4557
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !4557
  br label %do.cond.21, !dbg !4559

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !4560

do.end.22:                                        ; preds = %do.cond.21
  store %struct._object* null, %struct._object** %retval, !dbg !4562
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4562

if.end.23:                                        ; preds = %if.end.7
  %36 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4563, !tbaa !2522
  %37 = bitcast %struct.StgDictObject* %36 to %struct._object*, !dbg !4564
  %38 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4565, !tbaa !2522
  %tp_dict = getelementptr inbounds %struct._typeobject, %struct._typeobject* %38, i32 0, i32 31, !dbg !4566
  %39 = load %struct._object*, %struct._object** %tp_dict, align 8, !dbg !4566, !tbaa !3284
  %call24 = call i32 @PyDict_Update(%struct._object* %37, %struct._object* %39), !dbg !4567
  %cmp25 = icmp eq i32 -1, %call24, !dbg !4568
  br i1 %cmp25, label %if.then.26, label %if.end.51, !dbg !4569

if.then.26:                                       ; preds = %if.end.23
  br label %do.body.27, !dbg !4570

do.body.27:                                       ; preds = %if.then.26
  %40 = bitcast %struct._object** %_py_decref_tmp28 to i8*, !dbg !4571
  call void @llvm.lifetime.start(i64 8, i8* %40) #2, !dbg !4571
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp28, metadata !1457, metadata !2526), !dbg !4573
  %41 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4574, !tbaa !2522
  %42 = bitcast %struct._typeobject* %41 to %struct._object*, !dbg !4575
  store %struct._object* %42, %struct._object** %_py_decref_tmp28, align 8, !dbg !4573, !tbaa !2522
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !4576, !tbaa !2522
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 0, !dbg !4578
  %44 = load i64, i64* %ob_refcnt29, align 8, !dbg !4579, !tbaa !2551
  %dec30 = add i64 %44, -1, !dbg !4579
  store i64 %dec30, i64* %ob_refcnt29, align 8, !dbg !4579, !tbaa !2551
  %cmp31 = icmp ne i64 %dec30, 0, !dbg !4580
  br i1 %cmp31, label %if.then.32, label %if.else.33, !dbg !4581

if.then.32:                                       ; preds = %do.body.27
  br label %if.end.36, !dbg !4582

if.else.33:                                       ; preds = %do.body.27
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !4584, !tbaa !2522
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !4586
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8, !dbg !4586, !tbaa !2588
  %tp_dealloc35 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 4, !dbg !4587
  %47 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc35, align 8, !dbg !4587, !tbaa !2590
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !4588, !tbaa !2522
  call void %47(%struct._object* %48), !dbg !4589
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.33, %if.then.32
  %49 = bitcast %struct._object** %_py_decref_tmp28 to i8*, !dbg !4590
  call void @llvm.lifetime.end(i64 8, i8* %49) #2, !dbg !4590
  br label %do.cond.37, !dbg !4592

do.cond.37:                                       ; preds = %if.end.36
  br label %do.end.38, !dbg !4593

do.end.38:                                        ; preds = %do.cond.37
  br label %do.body.39, !dbg !4595

do.body.39:                                       ; preds = %do.end.38
  %50 = bitcast %struct._object** %_py_decref_tmp40 to i8*, !dbg !4596
  call void @llvm.lifetime.start(i64 8, i8* %50) #2, !dbg !4596
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp40, metadata !1461, metadata !2526), !dbg !4598
  %51 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4599, !tbaa !2522
  %52 = bitcast %struct.StgDictObject* %51 to %struct._object*, !dbg !4600
  store %struct._object* %52, %struct._object** %_py_decref_tmp40, align 8, !dbg !4598, !tbaa !2522
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !4601, !tbaa !2522
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0, !dbg !4603
  %54 = load i64, i64* %ob_refcnt41, align 8, !dbg !4604, !tbaa !2551
  %dec42 = add i64 %54, -1, !dbg !4604
  store i64 %dec42, i64* %ob_refcnt41, align 8, !dbg !4604, !tbaa !2551
  %cmp43 = icmp ne i64 %dec42, 0, !dbg !4605
  br i1 %cmp43, label %if.then.44, label %if.else.45, !dbg !4606

if.then.44:                                       ; preds = %do.body.39
  br label %if.end.48, !dbg !4607

if.else.45:                                       ; preds = %do.body.39
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !4609, !tbaa !2522
  %ob_type46 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 1, !dbg !4611
  %56 = load %struct._typeobject*, %struct._typeobject** %ob_type46, align 8, !dbg !4611, !tbaa !2588
  %tp_dealloc47 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %56, i32 0, i32 4, !dbg !4612
  %57 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc47, align 8, !dbg !4612, !tbaa !2590
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !4613, !tbaa !2522
  call void %57(%struct._object* %58), !dbg !4614
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.45, %if.then.44
  %59 = bitcast %struct._object** %_py_decref_tmp40 to i8*, !dbg !4615
  call void @llvm.lifetime.end(i64 8, i8* %59) #2, !dbg !4615
  br label %do.cond.49, !dbg !4616

do.cond.49:                                       ; preds = %if.end.48
  br label %do.end.50, !dbg !4617

do.end.50:                                        ; preds = %do.cond.49
  store %struct._object* null, %struct._object** %retval, !dbg !4619
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4619

if.end.51:                                        ; preds = %if.end.23
  br label %do.body.52, !dbg !4620

do.body.52:                                       ; preds = %if.end.51
  %60 = bitcast %struct._object** %_py_decref_tmp53 to i8*, !dbg !4621
  call void @llvm.lifetime.start(i64 8, i8* %60) #2, !dbg !4621
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp53, metadata !1463, metadata !2526), !dbg !4623
  %61 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4624, !tbaa !2522
  %tp_dict54 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %61, i32 0, i32 31, !dbg !4625
  %62 = load %struct._object*, %struct._object** %tp_dict54, align 8, !dbg !4625, !tbaa !3284
  store %struct._object* %62, %struct._object** %_py_decref_tmp53, align 8, !dbg !4623, !tbaa !2522
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !4626, !tbaa !2522
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0, !dbg !4628
  %64 = load i64, i64* %ob_refcnt55, align 8, !dbg !4629, !tbaa !2551
  %dec56 = add i64 %64, -1, !dbg !4629
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !4629, !tbaa !2551
  %cmp57 = icmp ne i64 %dec56, 0, !dbg !4630
  br i1 %cmp57, label %if.then.58, label %if.else.59, !dbg !4631

if.then.58:                                       ; preds = %do.body.52
  br label %if.end.62, !dbg !4632

if.else.59:                                       ; preds = %do.body.52
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !4634, !tbaa !2522
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1, !dbg !4636
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !4636, !tbaa !2588
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %66, i32 0, i32 4, !dbg !4637
  %67 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8, !dbg !4637, !tbaa !2590
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !4638, !tbaa !2522
  call void %67(%struct._object* %68), !dbg !4639
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.then.58
  %69 = bitcast %struct._object** %_py_decref_tmp53 to i8*, !dbg !4640
  call void @llvm.lifetime.end(i64 8, i8* %69) #2, !dbg !4640
  br label %do.cond.63, !dbg !4642

do.cond.63:                                       ; preds = %if.end.62
  br label %do.end.64, !dbg !4643

do.end.64:                                        ; preds = %do.cond.63
  %70 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4645, !tbaa !2522
  %71 = bitcast %struct.StgDictObject* %70 to %struct._object*, !dbg !4646
  %72 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4647, !tbaa !2522
  %tp_dict65 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 31, !dbg !4648
  store %struct._object* %71, %struct._object** %tp_dict65, align 8, !dbg !4649, !tbaa !3284
  %73 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !4650, !tbaa !2522
  %call66 = call i32 @make_funcptrtype_dict(%struct.StgDictObject* %73), !dbg !4651
  %cmp67 = icmp eq i32 -1, %call66, !dbg !4652
  br i1 %cmp67, label %if.then.68, label %if.end.81, !dbg !4653

if.then.68:                                       ; preds = %do.end.64
  br label %do.body.69, !dbg !4654

do.body.69:                                       ; preds = %if.then.68
  %74 = bitcast %struct._object** %_py_decref_tmp70 to i8*, !dbg !4655
  call void @llvm.lifetime.start(i64 8, i8* %74) #2, !dbg !4655
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp70, metadata !1465, metadata !2526), !dbg !4657
  %75 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4658, !tbaa !2522
  %76 = bitcast %struct._typeobject* %75 to %struct._object*, !dbg !4659
  store %struct._object* %76, %struct._object** %_py_decref_tmp70, align 8, !dbg !4657, !tbaa !2522
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8, !dbg !4660, !tbaa !2522
  %ob_refcnt71 = getelementptr inbounds %struct._object, %struct._object* %77, i32 0, i32 0, !dbg !4662
  %78 = load i64, i64* %ob_refcnt71, align 8, !dbg !4663, !tbaa !2551
  %dec72 = add i64 %78, -1, !dbg !4663
  store i64 %dec72, i64* %ob_refcnt71, align 8, !dbg !4663, !tbaa !2551
  %cmp73 = icmp ne i64 %dec72, 0, !dbg !4664
  br i1 %cmp73, label %if.then.74, label %if.else.75, !dbg !4665

if.then.74:                                       ; preds = %do.body.69
  br label %if.end.78, !dbg !4666

if.else.75:                                       ; preds = %do.body.69
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8, !dbg !4668, !tbaa !2522
  %ob_type76 = getelementptr inbounds %struct._object, %struct._object* %79, i32 0, i32 1, !dbg !4670
  %80 = load %struct._typeobject*, %struct._typeobject** %ob_type76, align 8, !dbg !4670, !tbaa !2588
  %tp_dealloc77 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %80, i32 0, i32 4, !dbg !4671
  %81 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc77, align 8, !dbg !4671, !tbaa !2590
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8, !dbg !4672, !tbaa !2522
  call void %81(%struct._object* %82), !dbg !4673
  br label %if.end.78

if.end.78:                                        ; preds = %if.else.75, %if.then.74
  %83 = bitcast %struct._object** %_py_decref_tmp70 to i8*, !dbg !4674
  call void @llvm.lifetime.end(i64 8, i8* %83) #2, !dbg !4674
  br label %do.cond.79, !dbg !4676

do.cond.79:                                       ; preds = %if.end.78
  br label %do.end.80, !dbg !4677

do.end.80:                                        ; preds = %do.cond.79
  store %struct._object* null, %struct._object** %retval, !dbg !4679
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4679

if.end.81:                                        ; preds = %do.end.64
  %84 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !4680, !tbaa !2522
  %85 = bitcast %struct._typeobject* %84 to %struct._object*, !dbg !4681
  store %struct._object* %85, %struct._object** %retval, !dbg !4682
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4682

cleanup:                                          ; preds = %if.end.81, %do.end.80, %do.end.50, %do.end.22, %do.end, %if.then
  %86 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !4683
  call void @llvm.lifetime.end(i64 8, i8* %86) #2, !dbg !4683
  %87 = bitcast %struct._typeobject** %result to i8*, !dbg !4683
  call void @llvm.lifetime.end(i64 8, i8* %87) #2, !dbg !4683
  %88 = load %struct._object*, %struct._object** %retval, !dbg !4683
  ret %struct._object* %88, !dbg !4683
}

; Function Attrs: uwtable
define internal void @PyCData_dealloc(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1507, metadata !2526), !dbg !4684
  %0 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !4685, !tbaa !2522
  %1 = bitcast %struct._object* %0 to %struct.tagCDataObject*, !dbg !4686
  %call = call i32 @PyCData_clear(%struct.tagCDataObject* %1), !dbg !4687
  %2 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !4688, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !4689
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4689, !tbaa !2588
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 38, !dbg !4690
  %4 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !4690, !tbaa !4691
  %5 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !4692, !tbaa !2522
  %6 = bitcast %struct._object* %5 to i8*, !dbg !4692
  call void %4(i8* %6), !dbg !4693
  ret void, !dbg !4694
}

; Function Attrs: uwtable
define internal i64 @PyCData_nohash(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1510, metadata !2526), !dbg !4695
  %0 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4696, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.114, i32 0, i32 0)), !dbg !4697
  ret i64 -1, !dbg !4698
}

; Function Attrs: uwtable
define internal i32 @PyCData_traverse(%struct.tagCDataObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !1523, metadata !2526), !dbg !4699
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1524, metadata !2526), !dbg !4700
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1525, metadata !2526), !dbg !4701
  br label %do.body, !dbg !4702

do.body:                                          ; preds = %entry
  %0 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !4703, !tbaa !2522
  %b_objects = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %0, i32 0, i32 7, !dbg !4705
  %1 = load %struct._object*, %struct._object** %b_objects, align 8, !dbg !4705, !tbaa !4706
  %tobool = icmp ne %struct._object* %1, null, !dbg !4708
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !4709

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !4710
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !4710
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1526, metadata !2526), !dbg !4712
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4713, !tbaa !2522
  %4 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !4714, !tbaa !2522
  %b_objects1 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %4, i32 0, i32 7, !dbg !4715
  %5 = load %struct._object*, %struct._object** %b_objects1, align 8, !dbg !4715, !tbaa !4706
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !4716, !tbaa !2522
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !4713
  store i32 %call, i32* %vret, align 4, !dbg !4712, !tbaa !2611
  %7 = load i32, i32* %vret, align 4, !dbg !4717, !tbaa !2611
  %tobool2 = icmp ne i32 %7, 0, !dbg !4717
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !4719

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !4720, !tbaa !2611
  store i32 %8, i32* %retval, !dbg !4722
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4722

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !4723
  br label %cleanup, !dbg !4723

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !4725
  call void @llvm.lifetime.end(i64 4, i8* %9) #2, !dbg !4725
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !4728

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !4729

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !4732

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !4733, !tbaa !2522
  %b_base = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %10, i32 0, i32 3, !dbg !4735
  %11 = load %struct.tagCDataObject*, %struct.tagCDataObject** %b_base, align 8, !dbg !4735, !tbaa !4736
  %12 = bitcast %struct.tagCDataObject* %11 to %struct._object*, !dbg !4737
  %tobool6 = icmp ne %struct._object* %12, null, !dbg !4737
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !4738

if.then.7:                                        ; preds = %do.body.5
  %13 = bitcast i32* %vret8 to i8*, !dbg !4739
  call void @llvm.lifetime.start(i64 4, i8* %13) #2, !dbg !4739
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1530, metadata !2526), !dbg !4741
  %14 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !4742, !tbaa !2522
  %15 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !4743, !tbaa !2522
  %b_base9 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %15, i32 0, i32 3, !dbg !4744
  %16 = load %struct.tagCDataObject*, %struct.tagCDataObject** %b_base9, align 8, !dbg !4744, !tbaa !4736
  %17 = bitcast %struct.tagCDataObject* %16 to %struct._object*, !dbg !4745
  %18 = load i8*, i8** %arg.addr, align 8, !dbg !4746, !tbaa !2522
  %call10 = call i32 %14(%struct._object* %17, i8* %18), !dbg !4742
  store i32 %call10, i32* %vret8, align 4, !dbg !4741, !tbaa !2611
  %19 = load i32, i32* %vret8, align 4, !dbg !4747, !tbaa !2611
  %tobool11 = icmp ne i32 %19, 0, !dbg !4747
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !4749

if.then.12:                                       ; preds = %if.then.7
  %20 = load i32, i32* %vret8, align 4, !dbg !4750, !tbaa !2611
  store i32 %20, i32* %retval, !dbg !4752
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !4752

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !4753
  br label %cleanup.14, !dbg !4753

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %21 = bitcast i32* %vret8 to i8*, !dbg !4755
  call void @llvm.lifetime.end(i64 4, i8* %21) #2, !dbg !4755
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !4758

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !4759

do.end.18:                                        ; preds = %if.end.17
  store i32 0, i32* %retval, !dbg !4762
  br label %return, !dbg !4762

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %do.end.18
  %22 = load i32, i32* %retval, !dbg !4763
  ret i32 %22, !dbg !4763
}

; Function Attrs: uwtable
define internal i32 @PyCData_clear(%struct.tagCDataObject* %self) #0 {
entry:
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp14 = alloca %struct._object*, align 8
  %_py_decref_tmp19 = alloca %struct._object*, align 8
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !1538, metadata !2526), !dbg !4764
  br label %do.body, !dbg !4765

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4766
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4766
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1539, metadata !2526), !dbg !4768
  %1 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !4769, !tbaa !2522
  %b_objects = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %1, i32 0, i32 7, !dbg !4770
  %2 = load %struct._object*, %struct._object** %b_objects, align 8, !dbg !4770, !tbaa !4706
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !4768, !tbaa !2522
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4771, !tbaa !2522
  %cmp = icmp ne %struct._object* %3, null, !dbg !4772
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !4773

if.then:                                          ; preds = %do.body
  %4 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !4774, !tbaa !2522
  %b_objects1 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %4, i32 0, i32 7, !dbg !4776
  store %struct._object* null, %struct._object** %b_objects1, align 8, !dbg !4777, !tbaa !4706
  br label %do.body.2, !dbg !4778

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4779
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !4779
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1541, metadata !2526), !dbg !4781
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !4782, !tbaa !2522
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !4781, !tbaa !2522
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4783, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !4785
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !4786, !tbaa !2551
  %dec = add i64 %8, -1, !dbg !4786
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4786, !tbaa !2551
  %cmp3 = icmp ne i64 %dec, 0, !dbg !4787
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !4788

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !4789

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4791, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !4793
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4793, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !4794
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4794, !tbaa !2590
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4795, !tbaa !2522
  call void %11(%struct._object* %12), !dbg !4796
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4797
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !4797
  br label %do.cond, !dbg !4799

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !4800

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !4802

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !4804
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !4804
  br label %do.end.7, !dbg !4807

do.end.7:                                         ; preds = %if.end.5
  %15 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !4808, !tbaa !2522
  %b_needsfree = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %15, i32 0, i32 2, !dbg !4810
  %16 = load i32, i32* %b_needsfree, align 4, !dbg !4810, !tbaa !4811
  %tobool = icmp ne i32 %16, 0, !dbg !4812
  br i1 %tobool, label %land.lhs.true, label %if.end.11, !dbg !4813

land.lhs.true:                                    ; preds = %do.end.7
  %17 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !4814, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %17, i32 0, i32 1, !dbg !4816
  %18 = load i8*, i8** %b_ptr, align 8, !dbg !4816, !tbaa !4817
  %19 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !4818, !tbaa !2522
  %b_value = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %19, i32 0, i32 8, !dbg !4819
  %20 = bitcast %union.value* %b_value to i8*, !dbg !4820
  %cmp8 = icmp ne i8* %18, %20, !dbg !4821
  br i1 %cmp8, label %if.then.9, label %if.end.11, !dbg !4822

if.then.9:                                        ; preds = %land.lhs.true
  %21 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !4823, !tbaa !2522
  %b_ptr10 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %21, i32 0, i32 1, !dbg !4824
  %22 = load i8*, i8** %b_ptr10, align 8, !dbg !4824, !tbaa !4817
  call void @PyMem_Free(i8* %22), !dbg !4825
  br label %if.end.11, !dbg !4825

if.end.11:                                        ; preds = %if.then.9, %land.lhs.true, %do.end.7
  %23 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !4826, !tbaa !2522
  %b_ptr12 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %23, i32 0, i32 1, !dbg !4827
  store i8* null, i8** %b_ptr12, align 8, !dbg !4828, !tbaa !4817
  br label %do.body.13, !dbg !4829

do.body.13:                                       ; preds = %if.end.11
  %24 = bitcast %struct._object** %_py_tmp14 to i8*, !dbg !4830
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !4830
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp14, metadata !1545, metadata !2526), !dbg !4832
  %25 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !4833, !tbaa !2522
  %b_base = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %25, i32 0, i32 3, !dbg !4834
  %26 = load %struct.tagCDataObject*, %struct.tagCDataObject** %b_base, align 8, !dbg !4834, !tbaa !4736
  %27 = bitcast %struct.tagCDataObject* %26 to %struct._object*, !dbg !4835
  store %struct._object* %27, %struct._object** %_py_tmp14, align 8, !dbg !4832, !tbaa !2522
  %28 = load %struct._object*, %struct._object** %_py_tmp14, align 8, !dbg !4836, !tbaa !2522
  %cmp15 = icmp ne %struct._object* %28, null, !dbg !4837
  br i1 %cmp15, label %if.then.16, label %if.end.30, !dbg !4838

if.then.16:                                       ; preds = %do.body.13
  %29 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !4839, !tbaa !2522
  %b_base17 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %29, i32 0, i32 3, !dbg !4841
  store %struct.tagCDataObject* null, %struct.tagCDataObject** %b_base17, align 8, !dbg !4842, !tbaa !4736
  br label %do.body.18, !dbg !4843

do.body.18:                                       ; preds = %if.then.16
  %30 = bitcast %struct._object** %_py_decref_tmp19 to i8*, !dbg !4844
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !4844
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp19, metadata !1547, metadata !2526), !dbg !4846
  %31 = load %struct._object*, %struct._object** %_py_tmp14, align 8, !dbg !4847, !tbaa !2522
  store %struct._object* %31, %struct._object** %_py_decref_tmp19, align 8, !dbg !4846, !tbaa !2522
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !4848, !tbaa !2522
  %ob_refcnt20 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !4850
  %33 = load i64, i64* %ob_refcnt20, align 8, !dbg !4851, !tbaa !2551
  %dec21 = add i64 %33, -1, !dbg !4851
  store i64 %dec21, i64* %ob_refcnt20, align 8, !dbg !4851, !tbaa !2551
  %cmp22 = icmp ne i64 %dec21, 0, !dbg !4852
  br i1 %cmp22, label %if.then.23, label %if.else.24, !dbg !4853

if.then.23:                                       ; preds = %do.body.18
  br label %if.end.27, !dbg !4854

if.else.24:                                       ; preds = %do.body.18
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !4856, !tbaa !2522
  %ob_type25 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !4858
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !4858, !tbaa !2588
  %tp_dealloc26 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !4859
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc26, align 8, !dbg !4859, !tbaa !2590
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !4860, !tbaa !2522
  call void %36(%struct._object* %37), !dbg !4861
  br label %if.end.27

if.end.27:                                        ; preds = %if.else.24, %if.then.23
  %38 = bitcast %struct._object** %_py_decref_tmp19 to i8*, !dbg !4862
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !4862
  br label %do.cond.28, !dbg !4864

do.cond.28:                                       ; preds = %if.end.27
  br label %do.end.29, !dbg !4865

do.end.29:                                        ; preds = %do.cond.28
  br label %if.end.30, !dbg !4867

if.end.30:                                        ; preds = %do.end.29, %do.body.13
  %39 = bitcast %struct._object** %_py_tmp14 to i8*, !dbg !4869
  call void @llvm.lifetime.end(i64 8, i8* %39) #2, !dbg !4869
  br label %do.end.32, !dbg !4870

do.end.32:                                        ; preds = %if.end.30
  ret i32 0, !dbg !4871
}

; Function Attrs: uwtable
define %struct._object* @PyCData_FromBaseObj(%struct._object* %type, %struct._object* %base, i64 %index, i8* %adr) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._object*, align 8
  %base.addr = alloca %struct._object*, align 8
  %index.addr = alloca i64, align 8
  %adr.addr = alloca i8*, align 8
  %cmem = alloca %struct.tagCDataObject*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !717, metadata !2526), !dbg !4872
  store %struct._object* %base, %struct._object** %base.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %base.addr, metadata !718, metadata !2526), !dbg !4873
  store i64 %index, i64* %index.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !719, metadata !2526), !dbg !4874
  store i8* %adr, i8** %adr.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %adr.addr, metadata !720, metadata !2526), !dbg !4875
  %0 = bitcast %struct.tagCDataObject** %cmem to i8*, !dbg !4876
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4876
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %cmem, metadata !721, metadata !2526), !dbg !4877
  %1 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !4878
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !4878
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !722, metadata !2526), !dbg !4879
  %2 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !4880, !tbaa !2522
  %call = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %2), !dbg !4881
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !4882, !tbaa !2522
  %3 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !4883, !tbaa !2522
  %tobool = icmp ne %struct.StgDictObject* %3, null, !dbg !4883
  br i1 %tobool, label %if.end, label %if.then, !dbg !4885

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !4886, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i32 0, i32 0)), !dbg !4888
  store %struct._object* null, %struct._object** %retval, !dbg !4889
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4889

if.end:                                           ; preds = %entry
  %5 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !4890, !tbaa !2522
  %flags = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %5, i32 0, i32 13, !dbg !4891
  %6 = load i32, i32* %flags, align 4, !dbg !4892, !tbaa !3128
  %or = or i32 %6, 4096, !dbg !4892
  store i32 %or, i32* %flags, align 4, !dbg !4892, !tbaa !3128
  %7 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !4893, !tbaa !2522
  %8 = bitcast %struct._object* %7 to %struct._typeobject*, !dbg !4894
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 36, !dbg !4895
  %9 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !4895, !tbaa !4896
  %10 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !4897, !tbaa !2522
  %11 = bitcast %struct._object* %10 to %struct._typeobject*, !dbg !4898
  %call1 = call %struct._object* %9(%struct._typeobject* %11, i64 0), !dbg !4899
  %12 = bitcast %struct._object* %call1 to %struct.tagCDataObject*, !dbg !4900
  store %struct.tagCDataObject* %12, %struct.tagCDataObject** %cmem, align 8, !dbg !4901, !tbaa !2522
  %13 = load %struct.tagCDataObject*, %struct.tagCDataObject** %cmem, align 8, !dbg !4902, !tbaa !2522
  %cmp = icmp eq %struct.tagCDataObject* %13, null, !dbg !4904
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !4905

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !4906
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4906

if.end.3:                                         ; preds = %if.end
  %14 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !4907, !tbaa !2522
  %length = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %14, i32 0, i32 3, !dbg !4908
  %15 = load i64, i64* %length, align 8, !dbg !4908, !tbaa !3115
  %16 = load %struct.tagCDataObject*, %struct.tagCDataObject** %cmem, align 8, !dbg !4909, !tbaa !2522
  %b_length = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %16, i32 0, i32 5, !dbg !4910
  store i64 %15, i64* %b_length, align 8, !dbg !4911, !tbaa !4912
  %17 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !4913, !tbaa !2522
  %size = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %17, i32 0, i32 1, !dbg !4914
  %18 = load i64, i64* %size, align 8, !dbg !4914, !tbaa !3101
  %19 = load %struct.tagCDataObject*, %struct.tagCDataObject** %cmem, align 8, !dbg !4915, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %19, i32 0, i32 4, !dbg !4916
  store i64 %18, i64* %b_size, align 8, !dbg !4917, !tbaa !4918
  %20 = load %struct._object*, %struct._object** %base.addr, align 8, !dbg !4919, !tbaa !2522
  %tobool4 = icmp ne %struct._object* %20, null, !dbg !4919
  br i1 %tobool4, label %if.then.5, label %if.else, !dbg !4920

if.then.5:                                        ; preds = %if.end.3
  %21 = load i8*, i8** %adr.addr, align 8, !dbg !4921, !tbaa !2522
  %22 = load %struct.tagCDataObject*, %struct.tagCDataObject** %cmem, align 8, !dbg !4923, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %22, i32 0, i32 1, !dbg !4924
  store i8* %21, i8** %b_ptr, align 8, !dbg !4925, !tbaa !4817
  %23 = load %struct.tagCDataObject*, %struct.tagCDataObject** %cmem, align 8, !dbg !4926, !tbaa !2522
  %b_needsfree = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %23, i32 0, i32 2, !dbg !4927
  store i32 0, i32* %b_needsfree, align 4, !dbg !4928, !tbaa !4811
  %24 = load %struct._object*, %struct._object** %base.addr, align 8, !dbg !4929, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !4930
  %25 = load i64, i64* %ob_refcnt, align 8, !dbg !4931, !tbaa !2551
  %inc = add i64 %25, 1, !dbg !4931
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !4931, !tbaa !2551
  %26 = load %struct._object*, %struct._object** %base.addr, align 8, !dbg !4932, !tbaa !2522
  %27 = bitcast %struct._object* %26 to %struct.tagCDataObject*, !dbg !4933
  %28 = load %struct.tagCDataObject*, %struct.tagCDataObject** %cmem, align 8, !dbg !4934, !tbaa !2522
  %b_base = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %28, i32 0, i32 3, !dbg !4935
  store %struct.tagCDataObject* %27, %struct.tagCDataObject** %b_base, align 8, !dbg !4936, !tbaa !4736
  %29 = load i64, i64* %index.addr, align 8, !dbg !4937, !tbaa !2704
  %30 = load %struct.tagCDataObject*, %struct.tagCDataObject** %cmem, align 8, !dbg !4938, !tbaa !2522
  %b_index = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %30, i32 0, i32 6, !dbg !4939
  store i64 %29, i64* %b_index, align 8, !dbg !4940, !tbaa !4941
  br label %if.end.18, !dbg !4942

if.else:                                          ; preds = %if.end.3
  %31 = load %struct.tagCDataObject*, %struct.tagCDataObject** %cmem, align 8, !dbg !4943, !tbaa !2522
  %32 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !4944, !tbaa !2522
  %call6 = call i32 @PyCData_MallocBuffer(%struct.tagCDataObject* %31, %struct.StgDictObject* %32), !dbg !4945
  %cmp7 = icmp eq i32 -1, %call6, !dbg !4946
  br i1 %cmp7, label %if.then.8, label %if.end.14, !dbg !4947

if.then.8:                                        ; preds = %if.else
  br label %do.body, !dbg !4948

do.body:                                          ; preds = %if.then.8
  %33 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4949
  call void @llvm.lifetime.start(i64 8, i8* %33) #2, !dbg !4949
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !723, metadata !2526), !dbg !4951
  %34 = load %struct.tagCDataObject*, %struct.tagCDataObject** %cmem, align 8, !dbg !4952, !tbaa !2522
  %35 = bitcast %struct.tagCDataObject* %34 to %struct._object*, !dbg !4953
  store %struct._object* %35, %struct._object** %_py_decref_tmp, align 8, !dbg !4951, !tbaa !2522
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4954, !tbaa !2522
  %ob_refcnt9 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !4956
  %37 = load i64, i64* %ob_refcnt9, align 8, !dbg !4957, !tbaa !2551
  %dec = add i64 %37, -1, !dbg !4957
  store i64 %dec, i64* %ob_refcnt9, align 8, !dbg !4957, !tbaa !2551
  %cmp10 = icmp ne i64 %dec, 0, !dbg !4958
  br i1 %cmp10, label %if.then.11, label %if.else.12, !dbg !4959

if.then.11:                                       ; preds = %do.body
  br label %if.end.13, !dbg !4960

if.else.12:                                       ; preds = %do.body
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4962, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !4964
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4964, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4, !dbg !4965
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4965, !tbaa !2590
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4966, !tbaa !2522
  call void %40(%struct._object* %41), !dbg !4967
  br label %if.end.13

if.end.13:                                        ; preds = %if.else.12, %if.then.11
  %42 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4968
  call void @llvm.lifetime.end(i64 8, i8* %42) #2, !dbg !4968
  br label %do.cond, !dbg !4970

do.cond:                                          ; preds = %if.end.13
  br label %do.end, !dbg !4971

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !4973
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4973

if.end.14:                                        ; preds = %if.else
  %43 = load %struct.tagCDataObject*, %struct.tagCDataObject** %cmem, align 8, !dbg !4974, !tbaa !2522
  %b_ptr15 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %43, i32 0, i32 1, !dbg !4975
  %44 = load i8*, i8** %b_ptr15, align 8, !dbg !4975, !tbaa !4817
  %45 = load i8*, i8** %adr.addr, align 8, !dbg !4976, !tbaa !2522
  %46 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !4977, !tbaa !2522
  %size16 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %46, i32 0, i32 1, !dbg !4978
  %47 = load i64, i64* %size16, align 8, !dbg !4978, !tbaa !3101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 %47, i32 1, i1 false), !dbg !4979
  %48 = load i64, i64* %index.addr, align 8, !dbg !4980, !tbaa !2704
  %49 = load %struct.tagCDataObject*, %struct.tagCDataObject** %cmem, align 8, !dbg !4981, !tbaa !2522
  %b_index17 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %49, i32 0, i32 6, !dbg !4982
  store i64 %48, i64* %b_index17, align 8, !dbg !4983, !tbaa !4941
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.14, %if.then.5
  %50 = load %struct.tagCDataObject*, %struct.tagCDataObject** %cmem, align 8, !dbg !4984, !tbaa !2522
  %51 = bitcast %struct.tagCDataObject* %50 to %struct._object*, !dbg !4985
  store %struct._object* %51, %struct._object** %retval, !dbg !4986
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4986

cleanup:                                          ; preds = %if.end.18, %do.end, %if.then.2, %if.then
  %52 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !4987
  call void @llvm.lifetime.end(i64 8, i8* %52) #2, !dbg !4987
  %53 = bitcast %struct.tagCDataObject** %cmem to i8*, !dbg !4987
  call void @llvm.lifetime.end(i64 8, i8* %53) #2, !dbg !4987
  %54 = load %struct._object*, %struct._object** %retval, !dbg !4987
  ret %struct._object* %54, !dbg !4987
}

declare %struct.StgDictObject* @PyType_stgdict(%struct._object*) #3

declare void @PyErr_SetString(%struct._object*, i8*) #3

; Function Attrs: uwtable
define internal i32 @PyCData_MallocBuffer(%struct.tagCDataObject* %obj, %struct.StgDictObject* %dict) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct.tagCDataObject*, align 8
  %dict.addr = alloca %struct.StgDictObject*, align 8
  store %struct.tagCDataObject* %obj, %struct.tagCDataObject** %obj.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %obj.addr, metadata !1576, metadata !2526), !dbg !4988
  store %struct.StgDictObject* %dict, %struct.StgDictObject** %dict.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict.addr, metadata !1577, metadata !2526), !dbg !4989
  %0 = load %struct.StgDictObject*, %struct.StgDictObject** %dict.addr, align 8, !dbg !4990, !tbaa !2522
  %size = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %0, i32 0, i32 1, !dbg !4992
  %1 = load i64, i64* %size, align 8, !dbg !4992, !tbaa !3101
  %cmp = icmp ule i64 %1, 16, !dbg !4993
  br i1 %cmp, label %if.then, label %if.else, !dbg !4994

if.then:                                          ; preds = %entry
  %2 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj.addr, align 8, !dbg !4995, !tbaa !2522
  %b_value = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %2, i32 0, i32 8, !dbg !4997
  %3 = bitcast %union.value* %b_value to i8*, !dbg !4998
  %4 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj.addr, align 8, !dbg !4999, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %4, i32 0, i32 1, !dbg !5000
  store i8* %3, i8** %b_ptr, align 8, !dbg !5001, !tbaa !4817
  %5 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj.addr, align 8, !dbg !5002, !tbaa !2522
  %b_needsfree = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %5, i32 0, i32 2, !dbg !5003
  store i32 1, i32* %b_needsfree, align 4, !dbg !5004, !tbaa !4811
  br label %if.end.10, !dbg !5005

if.else:                                          ; preds = %entry
  %6 = load %struct.StgDictObject*, %struct.StgDictObject** %dict.addr, align 8, !dbg !5006, !tbaa !2522
  %size1 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %6, i32 0, i32 1, !dbg !5008
  %7 = load i64, i64* %size1, align 8, !dbg !5008, !tbaa !3101
  %call = call i8* @PyMem_Malloc(i64 %7), !dbg !5009
  %8 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj.addr, align 8, !dbg !5010, !tbaa !2522
  %b_ptr2 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %8, i32 0, i32 1, !dbg !5011
  store i8* %call, i8** %b_ptr2, align 8, !dbg !5012, !tbaa !4817
  %9 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj.addr, align 8, !dbg !5013, !tbaa !2522
  %b_ptr3 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %9, i32 0, i32 1, !dbg !5015
  %10 = load i8*, i8** %b_ptr3, align 8, !dbg !5015, !tbaa !4817
  %cmp4 = icmp eq i8* %10, null, !dbg !5016
  br i1 %cmp4, label %if.then.5, label %if.end, !dbg !5017

if.then.5:                                        ; preds = %if.else
  %call6 = call %struct._object* @PyErr_NoMemory(), !dbg !5018
  store i32 -1, i32* %retval, !dbg !5020
  br label %return, !dbg !5020

if.end:                                           ; preds = %if.else
  %11 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj.addr, align 8, !dbg !5021, !tbaa !2522
  %b_needsfree7 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %11, i32 0, i32 2, !dbg !5022
  store i32 1, i32* %b_needsfree7, align 4, !dbg !5023, !tbaa !4811
  %12 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj.addr, align 8, !dbg !5024, !tbaa !2522
  %b_ptr8 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %12, i32 0, i32 1, !dbg !5025
  %13 = load i8*, i8** %b_ptr8, align 8, !dbg !5025, !tbaa !4817
  %14 = load %struct.StgDictObject*, %struct.StgDictObject** %dict.addr, align 8, !dbg !5026, !tbaa !2522
  %size9 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %14, i32 0, i32 1, !dbg !5027
  %15 = load i64, i64* %size9, align 8, !dbg !5027, !tbaa !3101
  call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 %15, i32 1, i1 false), !dbg !5028
  br label %if.end.10

if.end.10:                                        ; preds = %if.end, %if.then
  %16 = load %struct.StgDictObject*, %struct.StgDictObject** %dict.addr, align 8, !dbg !5029, !tbaa !2522
  %size11 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %16, i32 0, i32 1, !dbg !5030
  %17 = load i64, i64* %size11, align 8, !dbg !5030, !tbaa !3101
  %18 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj.addr, align 8, !dbg !5031, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %18, i32 0, i32 4, !dbg !5032
  store i64 %17, i64* %b_size, align 8, !dbg !5033, !tbaa !4918
  store i32 0, i32* %retval, !dbg !5034
  br label %return, !dbg !5034

return:                                           ; preds = %if.end.10, %if.then.5
  %19 = load i32, i32* %retval, !dbg !5035
  ret i32 %19, !dbg !5035
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: uwtable
define %struct._object* @PyCData_AtAddress(%struct._object* %type, i8* %buf) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._object*, align 8
  %buf.addr = alloca i8*, align 8
  %pd = alloca %struct.tagCDataObject*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !731, metadata !2526), !dbg !5036
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !732, metadata !2526), !dbg !5037
  %0 = bitcast %struct.tagCDataObject** %pd to i8*, !dbg !5038
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5038
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %pd, metadata !733, metadata !2526), !dbg !5039
  %1 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !5040
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !5040
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !734, metadata !2526), !dbg !5041
  %2 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5042, !tbaa !2522
  %call = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %2), !dbg !5043
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !5044, !tbaa !2522
  %3 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5045, !tbaa !2522
  %tobool = icmp ne %struct.StgDictObject* %3, null, !dbg !5045
  br i1 %tobool, label %if.end, label %if.then, !dbg !5047

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5048, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i32 0, i32 0)), !dbg !5050
  store %struct._object* null, %struct._object** %retval, !dbg !5051
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5051

if.end:                                           ; preds = %entry
  %5 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5052, !tbaa !2522
  %flags = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %5, i32 0, i32 13, !dbg !5053
  %6 = load i32, i32* %flags, align 4, !dbg !5054, !tbaa !3128
  %or = or i32 %6, 4096, !dbg !5054
  store i32 %or, i32* %flags, align 4, !dbg !5054, !tbaa !3128
  %7 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5055, !tbaa !2522
  %8 = bitcast %struct._object* %7 to %struct._typeobject*, !dbg !5056
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 36, !dbg !5057
  %9 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !5057, !tbaa !4896
  %10 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5058, !tbaa !2522
  %11 = bitcast %struct._object* %10 to %struct._typeobject*, !dbg !5059
  %call1 = call %struct._object* %9(%struct._typeobject* %11, i64 0), !dbg !5060
  %12 = bitcast %struct._object* %call1 to %struct.tagCDataObject*, !dbg !5061
  store %struct.tagCDataObject* %12, %struct.tagCDataObject** %pd, align 8, !dbg !5062, !tbaa !2522
  %13 = load %struct.tagCDataObject*, %struct.tagCDataObject** %pd, align 8, !dbg !5063, !tbaa !2522
  %tobool2 = icmp ne %struct.tagCDataObject* %13, null, !dbg !5063
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !5065

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !5066
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5066

if.end.4:                                         ; preds = %if.end
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !5067, !tbaa !2522
  %15 = load %struct.tagCDataObject*, %struct.tagCDataObject** %pd, align 8, !dbg !5068, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %15, i32 0, i32 1, !dbg !5069
  store i8* %14, i8** %b_ptr, align 8, !dbg !5070, !tbaa !4817
  %16 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5071, !tbaa !2522
  %length = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %16, i32 0, i32 3, !dbg !5072
  %17 = load i64, i64* %length, align 8, !dbg !5072, !tbaa !3115
  %18 = load %struct.tagCDataObject*, %struct.tagCDataObject** %pd, align 8, !dbg !5073, !tbaa !2522
  %b_length = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %18, i32 0, i32 5, !dbg !5074
  store i64 %17, i64* %b_length, align 8, !dbg !5075, !tbaa !4912
  %19 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5076, !tbaa !2522
  %size = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %19, i32 0, i32 1, !dbg !5077
  %20 = load i64, i64* %size, align 8, !dbg !5077, !tbaa !3101
  %21 = load %struct.tagCDataObject*, %struct.tagCDataObject** %pd, align 8, !dbg !5078, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %21, i32 0, i32 4, !dbg !5079
  store i64 %20, i64* %b_size, align 8, !dbg !5080, !tbaa !4918
  %22 = load %struct.tagCDataObject*, %struct.tagCDataObject** %pd, align 8, !dbg !5081, !tbaa !2522
  %23 = bitcast %struct.tagCDataObject* %22 to %struct._object*, !dbg !5082
  store %struct._object* %23, %struct._object** %retval, !dbg !5083
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5083

cleanup:                                          ; preds = %if.end.4, %if.then.3, %if.then
  %24 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !5084
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !5084
  %25 = bitcast %struct.tagCDataObject** %pd to i8*, !dbg !5084
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !5084
  %26 = load %struct._object*, %struct._object** %retval, !dbg !5084
  ret %struct._object* %26, !dbg !5084
}

; Function Attrs: uwtable
define i32 @_ctypes_simple_instance(%struct._object* %obj) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %type = alloca %struct._typeobject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %obj, %struct._object** %obj.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %obj.addr, metadata !737, metadata !2526), !dbg !5085
  %0 = bitcast %struct._typeobject** %type to i8*, !dbg !5086
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5086
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type, metadata !738, metadata !2526), !dbg !5087
  %1 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !5088, !tbaa !2522
  %2 = bitcast %struct._object* %1 to %struct._typeobject*, !dbg !5089
  store %struct._typeobject* %2, %struct._typeobject** %type, align 8, !dbg !5087, !tbaa !2522
  %3 = load %struct._typeobject*, %struct._typeobject** %type, align 8, !dbg !5090, !tbaa !2522
  %4 = bitcast %struct._typeobject* %3 to %struct._object*, !dbg !5092
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !5093
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5093, !tbaa !2588
  %cmp = icmp eq %struct._typeobject* %5, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCSimpleType_Type to %struct._typeobject*), !dbg !5094
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5095

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct._typeobject*, %struct._typeobject** %type, align 8, !dbg !5096, !tbaa !2522
  %7 = bitcast %struct._typeobject* %6 to %struct._object*, !dbg !5098
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !5099
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !5099, !tbaa !2588
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %8, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCSimpleType_Type to %struct._typeobject*)), !dbg !5100
  %tobool = icmp ne i32 %call, 0, !dbg !5100
  br i1 %tobool, label %if.then, label %if.end, !dbg !5101

if.then:                                          ; preds = %lor.lhs.false, %entry
  %9 = load %struct._typeobject*, %struct._typeobject** %type, align 8, !dbg !5102, !tbaa !2522
  %tp_base = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 30, !dbg !5103
  %10 = load %struct._typeobject*, %struct._typeobject** %tp_base, align 8, !dbg !5103, !tbaa !4225
  %cmp2 = icmp ne %struct._typeobject* %10, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Simple_Type to %struct._typeobject*), !dbg !5104
  %conv = zext i1 %cmp2 to i32, !dbg !5104
  store i32 %conv, i32* %retval, !dbg !5105
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5105

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %retval, !dbg !5106
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5106

cleanup:                                          ; preds = %if.end, %if.then
  %11 = bitcast %struct._typeobject** %type to i8*, !dbg !5107
  call void @llvm.lifetime.end(i64 8, i8* %11) #2, !dbg !5107
  %12 = load i32, i32* %retval, !dbg !5107
  ret i32 %12, !dbg !5107
}

declare i32 @PyType_IsSubtype(%struct._typeobject*, %struct._typeobject*) #3

; Function Attrs: uwtable
define %struct._object* @PyCData_get(%struct._object* %type, %struct._object* (i8*, i64)* %getfunc, %struct._object* %src, i64 %index, i64 %size, i8* %adr) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._object*, align 8
  %getfunc.addr = alloca %struct._object* (i8*, i64)*, align 8
  %src.addr = alloca %struct._object*, align 8
  %index.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %adr.addr = alloca i8*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !743, metadata !2526), !dbg !5108
  store %struct._object* (i8*, i64)* %getfunc, %struct._object* (i8*, i64)** %getfunc.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object* (i8*, i64)** %getfunc.addr, metadata !744, metadata !2526), !dbg !5109
  store %struct._object* %src, %struct._object** %src.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %src.addr, metadata !745, metadata !2526), !dbg !5110
  store i64 %index, i64* %index.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !746, metadata !2526), !dbg !5111
  store i64 %size, i64* %size.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !747, metadata !2526), !dbg !5112
  store i8* %adr, i8** %adr.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %adr.addr, metadata !748, metadata !2526), !dbg !5113
  %0 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !5114
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5114
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !749, metadata !2526), !dbg !5115
  %1 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc.addr, align 8, !dbg !5116, !tbaa !2522
  %tobool = icmp ne %struct._object* (i8*, i64)* %1, null, !dbg !5116
  br i1 %tobool, label %if.then, label %if.end, !dbg !5118

if.then:                                          ; preds = %entry
  %2 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc.addr, align 8, !dbg !5119, !tbaa !2522
  %3 = load i8*, i8** %adr.addr, align 8, !dbg !5120, !tbaa !2522
  %4 = load i64, i64* %size.addr, align 8, !dbg !5121, !tbaa !2704
  %call = call %struct._object* %2(i8* %3, i64 %4), !dbg !5119
  store %struct._object* %call, %struct._object** %retval, !dbg !5122
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5122

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5123, !tbaa !2522
  %call1 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %5), !dbg !5124
  store %struct.StgDictObject* %call1, %struct.StgDictObject** %dict, align 8, !dbg !5125, !tbaa !2522
  %6 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5126, !tbaa !2522
  %tobool2 = icmp ne %struct.StgDictObject* %6, null, !dbg !5126
  br i1 %tobool2, label %land.lhs.true, label %if.end.11, !dbg !5128

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5129, !tbaa !2522
  %getfunc3 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %7, i32 0, i32 7, !dbg !5131
  %8 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc3, align 8, !dbg !5131, !tbaa !3683
  %tobool4 = icmp ne %struct._object* (i8*, i64)* %8, null, !dbg !5132
  br i1 %tobool4, label %land.lhs.true.5, label %if.end.11, !dbg !5133

land.lhs.true.5:                                  ; preds = %land.lhs.true
  %9 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5134, !tbaa !2522
  %call6 = call i32 @_ctypes_simple_instance(%struct._object* %9), !dbg !5136
  %tobool7 = icmp ne i32 %call6, 0, !dbg !5136
  br i1 %tobool7, label %if.end.11, label %if.then.8, !dbg !5137

if.then.8:                                        ; preds = %land.lhs.true.5
  %10 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5138, !tbaa !2522
  %getfunc9 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %10, i32 0, i32 7, !dbg !5139
  %11 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc9, align 8, !dbg !5139, !tbaa !3683
  %12 = load i8*, i8** %adr.addr, align 8, !dbg !5140, !tbaa !2522
  %13 = load i64, i64* %size.addr, align 8, !dbg !5141, !tbaa !2704
  %call10 = call %struct._object* %11(i8* %12, i64 %13), !dbg !5138
  store %struct._object* %call10, %struct._object** %retval, !dbg !5142
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5142

if.end.11:                                        ; preds = %land.lhs.true.5, %land.lhs.true, %if.end
  %14 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5143, !tbaa !2522
  %15 = load %struct._object*, %struct._object** %src.addr, align 8, !dbg !5144, !tbaa !2522
  %16 = load i64, i64* %index.addr, align 8, !dbg !5145, !tbaa !2704
  %17 = load i8*, i8** %adr.addr, align 8, !dbg !5146, !tbaa !2522
  %call12 = call %struct._object* @PyCData_FromBaseObj(%struct._object* %14, %struct._object* %15, i64 %16, i8* %17), !dbg !5147
  store %struct._object* %call12, %struct._object** %retval, !dbg !5148
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5148

cleanup:                                          ; preds = %if.end.11, %if.then.8, %if.then
  %18 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !5149
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !5149
  %19 = load %struct._object*, %struct._object** %retval, !dbg !5149
  ret %struct._object* %19, !dbg !5149
}

; Function Attrs: uwtable
define i32 @PyCData_set(%struct._object* %dst, %struct._object* %type, %struct._object* (i8*, %struct._object*, i64)* %setfunc, %struct._object* %value, i64 %index, i64 %size, i8* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %dst.addr = alloca %struct._object*, align 8
  %type.addr = alloca %struct._object*, align 8
  %setfunc.addr = alloca %struct._object* (i8*, %struct._object*, i64)*, align 8
  %value.addr = alloca %struct._object*, align 8
  %index.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %mem = alloca %struct.tagCDataObject*, align 8
  %result = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %dst, %struct._object** %dst.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %dst.addr, metadata !754, metadata !2526), !dbg !5150
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !755, metadata !2526), !dbg !5151
  store %struct._object* (i8*, %struct._object*, i64)* %setfunc, %struct._object* (i8*, %struct._object*, i64)** %setfunc.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object* (i8*, %struct._object*, i64)** %setfunc.addr, metadata !756, metadata !2526), !dbg !5152
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !757, metadata !2526), !dbg !5153
  store i64 %index, i64* %index.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !758, metadata !2526), !dbg !5154
  store i64 %size, i64* %size.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !759, metadata !2526), !dbg !5155
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !760, metadata !2526), !dbg !5156
  %0 = bitcast %struct.tagCDataObject** %mem to i8*, !dbg !5157
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5157
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %mem, metadata !761, metadata !2526), !dbg !5158
  %1 = load %struct._object*, %struct._object** %dst.addr, align 8, !dbg !5159, !tbaa !2522
  %2 = bitcast %struct._object* %1 to %struct.tagCDataObject*, !dbg !5160
  store %struct.tagCDataObject* %2, %struct.tagCDataObject** %mem, align 8, !dbg !5158, !tbaa !2522
  %3 = bitcast %struct._object** %result to i8*, !dbg !5161
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !5161
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !762, metadata !2526), !dbg !5162
  %4 = load %struct._object*, %struct._object** %dst.addr, align 8, !dbg !5163, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !5165
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5165, !tbaa !2588
  %cmp = icmp eq %struct._typeobject* %5, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*), !dbg !5166
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !5167

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct._object*, %struct._object** %dst.addr, align 8, !dbg !5168, !tbaa !2522
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !5170
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !5170, !tbaa !2588
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %7, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*)), !dbg !5171
  %tobool = icmp ne i32 %call, 0, !dbg !5171
  br i1 %tobool, label %if.end, label %if.then, !dbg !5172

if.then:                                          ; preds = %lor.lhs.false
  %8 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5173, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i32 0, i32 0)), !dbg !5175
  store i32 -1, i32* %retval, !dbg !5176
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5176

if.end:                                           ; preds = %lor.lhs.false, %entry
  %9 = load %struct.tagCDataObject*, %struct.tagCDataObject** %mem, align 8, !dbg !5177, !tbaa !2522
  %10 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5178, !tbaa !2522
  %11 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc.addr, align 8, !dbg !5179, !tbaa !2522
  %12 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5180, !tbaa !2522
  %13 = load i64, i64* %size.addr, align 8, !dbg !5181, !tbaa !2704
  %14 = load i8*, i8** %ptr.addr, align 8, !dbg !5182, !tbaa !2522
  %call2 = call %struct._object* @_PyCData_set(%struct.tagCDataObject* %9, %struct._object* %10, %struct._object* (i8*, %struct._object*, i64)* %11, %struct._object* %12, i64 %13, i8* %14), !dbg !5183
  store %struct._object* %call2, %struct._object** %result, align 8, !dbg !5184, !tbaa !2522
  %15 = load %struct._object*, %struct._object** %result, align 8, !dbg !5185, !tbaa !2522
  %cmp3 = icmp eq %struct._object* %15, null, !dbg !5187
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !5188

if.then.4:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !5189
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5189

if.end.5:                                         ; preds = %if.end
  %16 = load %struct.tagCDataObject*, %struct.tagCDataObject** %mem, align 8, !dbg !5190, !tbaa !2522
  %17 = load i64, i64* %index.addr, align 8, !dbg !5191, !tbaa !2704
  %18 = load %struct._object*, %struct._object** %result, align 8, !dbg !5192, !tbaa !2522
  %call6 = call i32 @KeepRef(%struct.tagCDataObject* %16, i64 %17, %struct._object* %18), !dbg !5193
  store i32 %call6, i32* %retval, !dbg !5194
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5194

cleanup:                                          ; preds = %if.end.5, %if.then.4, %if.then
  %19 = bitcast %struct._object** %result to i8*, !dbg !5195
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !5195
  %20 = bitcast %struct.tagCDataObject** %mem to i8*, !dbg !5195
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !5195
  %21 = load i32, i32* %retval, !dbg !5195
  ret i32 %21, !dbg !5195
}

; Function Attrs: uwtable
define internal %struct._object* @_PyCData_set(%struct.tagCDataObject* %dst, %struct._object* %type, %struct._object* (i8*, %struct._object*, i64)* %setfunc, %struct._object* %value, i64 %size, i8* %ptr) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %dst.addr = alloca %struct.tagCDataObject*, align 8
  %type.addr = alloca %struct._object*, align 8
  %setfunc.addr = alloca %struct._object* (i8*, %struct._object*, i64)*, align 8
  %value.addr = alloca %struct._object*, align 8
  %size.addr = alloca i64, align 8
  %ptr.addr = alloca i8*, align 8
  %src = alloca %struct.tagCDataObject*, align 8
  %err = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %dict = alloca %struct.StgDictObject*, align 8
  %ob = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %p1 = alloca %struct.StgDictObject*, align 8
  %p2 = alloca %struct.StgDictObject*, align 8
  %keep = alloca %struct._object*, align 8
  store %struct.tagCDataObject* %dst, %struct.tagCDataObject** %dst.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %dst.addr, metadata !1582, metadata !2526), !dbg !5196
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !1583, metadata !2526), !dbg !5197
  store %struct._object* (i8*, %struct._object*, i64)* %setfunc, %struct._object* (i8*, %struct._object*, i64)** %setfunc.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object* (i8*, %struct._object*, i64)** %setfunc.addr, metadata !1584, metadata !2526), !dbg !5198
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !1585, metadata !2526), !dbg !5199
  store i64 %size, i64* %size.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !1586, metadata !2526), !dbg !5200
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1587, metadata !2526), !dbg !5201
  %0 = bitcast %struct.tagCDataObject** %src to i8*, !dbg !5202
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5202
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %src, metadata !1588, metadata !2526), !dbg !5203
  %1 = bitcast i32* %err to i8*, !dbg !5204
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !5204
  call void @llvm.dbg.declare(metadata i32* %err, metadata !1589, metadata !2526), !dbg !5205
  %2 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc.addr, align 8, !dbg !5206, !tbaa !2522
  %tobool = icmp ne %struct._object* (i8*, %struct._object*, i64)* %2, null, !dbg !5206
  br i1 %tobool, label %if.then, label %if.end, !dbg !5208

if.then:                                          ; preds = %entry
  %3 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc.addr, align 8, !dbg !5209, !tbaa !2522
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !5210, !tbaa !2522
  %5 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5211, !tbaa !2522
  %6 = load i64, i64* %size.addr, align 8, !dbg !5212, !tbaa !2704
  %call = call %struct._object* %3(i8* %4, %struct._object* %5, i64 %6), !dbg !5209
  store %struct._object* %call, %struct._object** %retval, !dbg !5213
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102, !dbg !5213

if.end:                                           ; preds = %entry
  %7 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5214, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !5215
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5215, !tbaa !2588
  %cmp = icmp eq %struct._typeobject* %8, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*), !dbg !5216
  br i1 %cmp, label %if.end.42, label %lor.lhs.false, !dbg !5217

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5218, !tbaa !2522
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !5220
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !5220, !tbaa !2588
  %call2 = call i32 @PyType_IsSubtype(%struct._typeobject* %10, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*)), !dbg !5221
  %tobool3 = icmp ne i32 %call2, 0, !dbg !5221
  br i1 %tobool3, label %if.end.42, label %if.then.4, !dbg !5222

if.then.4:                                        ; preds = %lor.lhs.false
  %11 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !5223
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !5223
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !1590, metadata !2526), !dbg !5224
  %12 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5225, !tbaa !2522
  %call5 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %12), !dbg !5226
  store %struct.StgDictObject* %call5, %struct.StgDictObject** %dict, align 8, !dbg !5224, !tbaa !2522
  %13 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5227, !tbaa !2522
  %tobool6 = icmp ne %struct.StgDictObject* %13, null, !dbg !5227
  br i1 %tobool6, label %land.lhs.true, label %if.end.12, !dbg !5229

land.lhs.true:                                    ; preds = %if.then.4
  %14 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5230, !tbaa !2522
  %setfunc7 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %14, i32 0, i32 6, !dbg !5232
  %15 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc7, align 8, !dbg !5232, !tbaa !4041
  %tobool8 = icmp ne %struct._object* (i8*, %struct._object*, i64)* %15, null, !dbg !5233
  br i1 %tobool8, label %if.then.9, label %if.end.12, !dbg !5234

if.then.9:                                        ; preds = %land.lhs.true
  %16 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5235, !tbaa !2522
  %setfunc10 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %16, i32 0, i32 6, !dbg !5236
  %17 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc10, align 8, !dbg !5236, !tbaa !4041
  %18 = load i8*, i8** %ptr.addr, align 8, !dbg !5237, !tbaa !2522
  %19 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5238, !tbaa !2522
  %20 = load i64, i64* %size.addr, align 8, !dbg !5239, !tbaa !2704
  %call11 = call %struct._object* %17(i8* %18, %struct._object* %19, i64 %20), !dbg !5235
  store %struct._object* %call11, %struct._object** %retval, !dbg !5240
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.41, !dbg !5240

if.end.12:                                        ; preds = %land.lhs.true, %if.then.4
  %21 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5241, !tbaa !2522
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !5242
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type13, align 8, !dbg !5242, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 19, !dbg !5243
  %23 = load i64, i64* %tp_flags, align 8, !dbg !5243, !tbaa !2849
  %and = and i64 %23, 67108864, !dbg !5244
  %cmp14 = icmp ne i64 %and, 0, !dbg !5245
  br i1 %cmp14, label %if.then.15, label %if.else.26, !dbg !5246

if.then.15:                                       ; preds = %if.end.12
  %24 = bitcast %struct._object** %ob to i8*, !dbg !5247
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !5247
  call void @llvm.dbg.declare(metadata %struct._object** %ob, metadata !1593, metadata !2526), !dbg !5248
  %25 = bitcast %struct._object** %result to i8*, !dbg !5249
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !5249
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1596, metadata !2526), !dbg !5250
  %26 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5251, !tbaa !2522
  %27 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5252, !tbaa !2522
  %call16 = call %struct._object* @PyObject_CallObject(%struct._object* %26, %struct._object* %27), !dbg !5253
  store %struct._object* %call16, %struct._object** %ob, align 8, !dbg !5254, !tbaa !2522
  %28 = load %struct._object*, %struct._object** %ob, align 8, !dbg !5255, !tbaa !2522
  %cmp17 = icmp eq %struct._object* %28, null, !dbg !5257
  br i1 %cmp17, label %if.then.18, label %if.end.19, !dbg !5258

if.then.18:                                       ; preds = %if.then.15
  %29 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !5259, !tbaa !2522
  %30 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5261, !tbaa !2522
  %31 = bitcast %struct._object* %30 to %struct._typeobject*, !dbg !5262
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 1, !dbg !5263
  %32 = load i8*, i8** %tp_name, align 8, !dbg !5263, !tbaa !5264
  call void (%struct._object*, i8*, ...) @_ctypes_extend_error(%struct._object* %29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.128, i32 0, i32 0), i8* %32), !dbg !5265
  store %struct._object* null, %struct._object** %retval, !dbg !5266
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5266

if.end.19:                                        ; preds = %if.then.15
  %33 = load %struct.tagCDataObject*, %struct.tagCDataObject** %dst.addr, align 8, !dbg !5267, !tbaa !2522
  %34 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5268, !tbaa !2522
  %35 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc.addr, align 8, !dbg !5269, !tbaa !2522
  %36 = load %struct._object*, %struct._object** %ob, align 8, !dbg !5270, !tbaa !2522
  %37 = load i64, i64* %size.addr, align 8, !dbg !5271, !tbaa !2704
  %38 = load i8*, i8** %ptr.addr, align 8, !dbg !5272, !tbaa !2522
  %call20 = call %struct._object* @_PyCData_set(%struct.tagCDataObject* %33, %struct._object* %34, %struct._object* (i8*, %struct._object*, i64)* %35, %struct._object* %36, i64 %37, i8* %38), !dbg !5273
  store %struct._object* %call20, %struct._object** %result, align 8, !dbg !5274, !tbaa !2522
  br label %do.body, !dbg !5275

do.body:                                          ; preds = %if.end.19
  %39 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5276
  call void @llvm.lifetime.start(i64 8, i8* %39) #2, !dbg !5276
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1597, metadata !2526), !dbg !5278
  %40 = load %struct._object*, %struct._object** %ob, align 8, !dbg !5279, !tbaa !2522
  store %struct._object* %40, %struct._object** %_py_decref_tmp, align 8, !dbg !5278, !tbaa !2522
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5280, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !5282
  %42 = load i64, i64* %ob_refcnt, align 8, !dbg !5283, !tbaa !2551
  %dec = add i64 %42, -1, !dbg !5283
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5283, !tbaa !2551
  %cmp21 = icmp ne i64 %dec, 0, !dbg !5284
  br i1 %cmp21, label %if.then.22, label %if.else, !dbg !5285

if.then.22:                                       ; preds = %do.body
  br label %if.end.24, !dbg !5286

if.else:                                          ; preds = %do.body
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5288, !tbaa !2522
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !5290
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !5290, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4, !dbg !5291
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5291, !tbaa !2590
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5292, !tbaa !2522
  call void %45(%struct._object* %46), !dbg !5293
  br label %if.end.24

if.end.24:                                        ; preds = %if.else, %if.then.22
  %47 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5294
  call void @llvm.lifetime.end(i64 8, i8* %47) #2, !dbg !5294
  br label %do.cond, !dbg !5296

do.cond:                                          ; preds = %if.end.24
  br label %do.end, !dbg !5297

do.end:                                           ; preds = %do.cond
  %48 = load %struct._object*, %struct._object** %result, align 8, !dbg !5299, !tbaa !2522
  store %struct._object* %48, %struct._object** %retval, !dbg !5300
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5300

cleanup:                                          ; preds = %do.end, %if.then.18
  %49 = bitcast %struct._object** %result to i8*, !dbg !5301
  call void @llvm.lifetime.end(i64 8, i8* %49) #2, !dbg !5301
  %50 = bitcast %struct._object** %ob to i8*, !dbg !5301
  call void @llvm.lifetime.end(i64 8, i8* %50) #2, !dbg !5301
  br label %cleanup.41

if.else.26:                                       ; preds = %if.end.12
  %51 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5302, !tbaa !2522
  %cmp27 = icmp eq %struct._object* %51, @_Py_NoneStruct, !dbg !5304
  br i1 %cmp27, label %land.lhs.true.28, label %if.else.36, !dbg !5305

land.lhs.true.28:                                 ; preds = %if.else.26
  %52 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5306, !tbaa !2522
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !5308
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8, !dbg !5308, !tbaa !2588
  %cmp30 = icmp eq %struct._typeobject* %53, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointerType_Type to %struct._typeobject*), !dbg !5309
  br i1 %cmp30, label %if.then.35, label %lor.lhs.false.31, !dbg !5310

lor.lhs.false.31:                                 ; preds = %land.lhs.true.28
  %54 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5311, !tbaa !2522
  %ob_type32 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !5313
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type32, align 8, !dbg !5313, !tbaa !2588
  %call33 = call i32 @PyType_IsSubtype(%struct._typeobject* %55, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointerType_Type to %struct._typeobject*)), !dbg !5314
  %tobool34 = icmp ne i32 %call33, 0, !dbg !5314
  br i1 %tobool34, label %if.then.35, label %if.else.36, !dbg !5315

if.then.35:                                       ; preds = %lor.lhs.false.31, %land.lhs.true.28
  %56 = load i8*, i8** %ptr.addr, align 8, !dbg !5316, !tbaa !2522
  %57 = bitcast i8* %56 to i8**, !dbg !5318
  store i8* null, i8** %57, align 8, !dbg !5319, !tbaa !2522
  %58 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5320, !tbaa !2551
  %inc = add i64 %58, 1, !dbg !5320
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5320, !tbaa !2551
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !5321
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.41, !dbg !5321

if.else.36:                                       ; preds = %lor.lhs.false.31, %if.else.26
  %59 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5322, !tbaa !2522
  %60 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5324, !tbaa !2522
  %61 = bitcast %struct._object* %60 to %struct._typeobject*, !dbg !5325
  %tp_name37 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %61, i32 0, i32 1, !dbg !5326
  %62 = load i8*, i8** %tp_name37, align 8, !dbg !5326, !tbaa !5264
  %63 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5327, !tbaa !2522
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 1, !dbg !5328
  %64 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8, !dbg !5328, !tbaa !2588
  %tp_name39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i32 0, i32 1, !dbg !5329
  %65 = load i8*, i8** %tp_name39, align 8, !dbg !5329, !tbaa !5264
  %call40 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %59, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.129, i32 0, i32 0), i8* %62, i8* %65), !dbg !5330
  store %struct._object* null, %struct._object** %retval, !dbg !5331
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.41, !dbg !5331

cleanup.41:                                       ; preds = %if.else.36, %if.then.35, %cleanup, %if.then.9
  %66 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !5332
  call void @llvm.lifetime.end(i64 8, i8* %66) #2, !dbg !5332
  br label %cleanup.102

if.end.42:                                        ; preds = %lor.lhs.false, %if.end
  %67 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5333, !tbaa !2522
  %68 = bitcast %struct._object* %67 to %struct.tagCDataObject*, !dbg !5334
  store %struct.tagCDataObject* %68, %struct.tagCDataObject** %src, align 8, !dbg !5335, !tbaa !2522
  %69 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5336, !tbaa !2522
  %70 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5337, !tbaa !2522
  %call43 = call i32 @PyObject_IsInstance(%struct._object* %69, %struct._object* %70), !dbg !5338
  store i32 %call43, i32* %err, align 4, !dbg !5339, !tbaa !2611
  %71 = load i32, i32* %err, align 4, !dbg !5340, !tbaa !2611
  %cmp44 = icmp eq i32 %71, -1, !dbg !5342
  br i1 %cmp44, label %if.then.45, label %if.end.46, !dbg !5343

if.then.45:                                       ; preds = %if.end.42
  store %struct._object* null, %struct._object** %retval, !dbg !5344
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102, !dbg !5344

if.end.46:                                        ; preds = %if.end.42
  %72 = load i32, i32* %err, align 4, !dbg !5345, !tbaa !2611
  %tobool47 = icmp ne i32 %72, 0, !dbg !5345
  br i1 %tobool47, label %if.then.48, label %if.end.63, !dbg !5347

if.then.48:                                       ; preds = %if.end.46
  %73 = load i8*, i8** %ptr.addr, align 8, !dbg !5348, !tbaa !2522
  %74 = load %struct.tagCDataObject*, %struct.tagCDataObject** %src, align 8, !dbg !5350, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %74, i32 0, i32 1, !dbg !5351
  %75 = load i8*, i8** %b_ptr, align 8, !dbg !5351, !tbaa !4817
  %76 = load i64, i64* %size.addr, align 8, !dbg !5352, !tbaa !2704
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %75, i64 %76, i32 1, i1 false), !dbg !5353
  %77 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5354, !tbaa !2522
  %ob_type49 = getelementptr inbounds %struct._object, %struct._object* %77, i32 0, i32 1, !dbg !5356
  %78 = load %struct._typeobject*, %struct._typeobject** %ob_type49, align 8, !dbg !5356, !tbaa !2588
  %cmp50 = icmp eq %struct._typeobject* %78, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointerType_Type to %struct._typeobject*), !dbg !5357
  br i1 %cmp50, label %if.then.55, label %lor.lhs.false.51, !dbg !5358

lor.lhs.false.51:                                 ; preds = %if.then.48
  %79 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5359, !tbaa !2522
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %79, i32 0, i32 1, !dbg !5361
  %80 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8, !dbg !5361, !tbaa !2588
  %call53 = call i32 @PyType_IsSubtype(%struct._typeobject* %80, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointerType_Type to %struct._typeobject*)), !dbg !5362
  %tobool54 = icmp ne i32 %call53, 0, !dbg !5362
  br i1 %tobool54, label %if.then.55, label %if.end.56, !dbg !5363

if.then.55:                                       ; preds = %lor.lhs.false.51, %if.then.48
  br label %if.end.56, !dbg !5364

if.end.56:                                        ; preds = %if.then.55, %lor.lhs.false.51
  %81 = load %struct.tagCDataObject*, %struct.tagCDataObject** %src, align 8, !dbg !5367, !tbaa !2522
  %call57 = call %struct._object* @GetKeepedObjects(%struct.tagCDataObject* %81), !dbg !5368
  store %struct._object* %call57, %struct._object** %value.addr, align 8, !dbg !5369, !tbaa !2522
  %82 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5370, !tbaa !2522
  %cmp58 = icmp eq %struct._object* %82, null, !dbg !5372
  br i1 %cmp58, label %if.then.59, label %if.end.60, !dbg !5373

if.then.59:                                       ; preds = %if.end.56
  store %struct._object* null, %struct._object** %retval, !dbg !5374
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102, !dbg !5374

if.end.60:                                        ; preds = %if.end.56
  %83 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5375, !tbaa !2522
  %ob_refcnt61 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 0, !dbg !5376
  %84 = load i64, i64* %ob_refcnt61, align 8, !dbg !5377, !tbaa !2551
  %inc62 = add i64 %84, 1, !dbg !5377
  store i64 %inc62, i64* %ob_refcnt61, align 8, !dbg !5377, !tbaa !2551
  %85 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5378, !tbaa !2522
  store %struct._object* %85, %struct._object** %retval, !dbg !5379
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102, !dbg !5379

if.end.63:                                        ; preds = %if.end.46
  %86 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5380, !tbaa !2522
  %ob_type64 = getelementptr inbounds %struct._object, %struct._object* %86, i32 0, i32 1, !dbg !5381
  %87 = load %struct._typeobject*, %struct._typeobject** %ob_type64, align 8, !dbg !5381, !tbaa !2588
  %cmp65 = icmp eq %struct._typeobject* %87, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointerType_Type to %struct._typeobject*), !dbg !5382
  br i1 %cmp65, label %land.lhs.true.70, label %lor.lhs.false.66, !dbg !5383

lor.lhs.false.66:                                 ; preds = %if.end.63
  %88 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5384, !tbaa !2522
  %ob_type67 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 1, !dbg !5386
  %89 = load %struct._typeobject*, %struct._typeobject** %ob_type67, align 8, !dbg !5386, !tbaa !2588
  %call68 = call i32 @PyType_IsSubtype(%struct._typeobject* %89, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointerType_Type to %struct._typeobject*)), !dbg !5387
  %tobool69 = icmp ne i32 %call68, 0, !dbg !5387
  br i1 %tobool69, label %land.lhs.true.70, label %if.end.97, !dbg !5388

land.lhs.true.70:                                 ; preds = %lor.lhs.false.66, %if.end.63
  %90 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5389, !tbaa !2522
  %ob_type71 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 1, !dbg !5390
  %91 = load %struct._typeobject*, %struct._typeobject** %ob_type71, align 8, !dbg !5390, !tbaa !2588
  %cmp72 = icmp eq %struct._typeobject* %91, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type to %struct._typeobject*), !dbg !5391
  br i1 %cmp72, label %if.then.77, label %lor.lhs.false.73, !dbg !5392

lor.lhs.false.73:                                 ; preds = %land.lhs.true.70
  %92 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5393, !tbaa !2522
  %ob_type74 = getelementptr inbounds %struct._object, %struct._object* %92, i32 0, i32 1, !dbg !5395
  %93 = load %struct._typeobject*, %struct._typeobject** %ob_type74, align 8, !dbg !5395, !tbaa !2588
  %call75 = call i32 @PyType_IsSubtype(%struct._typeobject* %93, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type to %struct._typeobject*)), !dbg !5396
  %tobool76 = icmp ne i32 %call75, 0, !dbg !5396
  br i1 %tobool76, label %if.then.77, label %if.end.97, !dbg !5397

if.then.77:                                       ; preds = %lor.lhs.false.73, %land.lhs.true.70
  %94 = bitcast %struct.StgDictObject** %p1 to i8*, !dbg !5398
  call void @llvm.lifetime.start(i64 8, i8* %94) #2, !dbg !5398
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %p1, metadata !1599, metadata !2526), !dbg !5399
  %95 = bitcast %struct.StgDictObject** %p2 to i8*, !dbg !5398
  call void @llvm.lifetime.start(i64 8, i8* %95) #2, !dbg !5398
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %p2, metadata !1602, metadata !2526), !dbg !5400
  %96 = bitcast %struct._object** %keep to i8*, !dbg !5401
  call void @llvm.lifetime.start(i64 8, i8* %96) #2, !dbg !5401
  call void @llvm.dbg.declare(metadata %struct._object** %keep, metadata !1603, metadata !2526), !dbg !5402
  %97 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5403, !tbaa !2522
  %call78 = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %97), !dbg !5404
  store %struct.StgDictObject* %call78, %struct.StgDictObject** %p1, align 8, !dbg !5405, !tbaa !2522
  %98 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5406, !tbaa !2522
  %call79 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %98), !dbg !5407
  store %struct.StgDictObject* %call79, %struct.StgDictObject** %p2, align 8, !dbg !5408, !tbaa !2522
  %99 = load %struct.StgDictObject*, %struct.StgDictObject** %p1, align 8, !dbg !5409, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %99, i32 0, i32 5, !dbg !5411
  %100 = load %struct._object*, %struct._object** %proto, align 8, !dbg !5411, !tbaa !2961
  %101 = load %struct.StgDictObject*, %struct.StgDictObject** %p2, align 8, !dbg !5412, !tbaa !2522
  %proto80 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %101, i32 0, i32 5, !dbg !5413
  %102 = load %struct._object*, %struct._object** %proto80, align 8, !dbg !5413, !tbaa !2961
  %cmp81 = icmp ne %struct._object* %100, %102, !dbg !5414
  br i1 %cmp81, label %if.then.82, label %if.end.87, !dbg !5415

if.then.82:                                       ; preds = %if.then.77
  %103 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5416, !tbaa !2522
  %104 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5418, !tbaa !2522
  %ob_type83 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 1, !dbg !5419
  %105 = load %struct._typeobject*, %struct._typeobject** %ob_type83, align 8, !dbg !5419, !tbaa !2588
  %tp_name84 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %105, i32 0, i32 1, !dbg !5420
  %106 = load i8*, i8** %tp_name84, align 8, !dbg !5420, !tbaa !5264
  %107 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5421, !tbaa !2522
  %108 = bitcast %struct._object* %107 to %struct._typeobject*, !dbg !5422
  %tp_name85 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %108, i32 0, i32 1, !dbg !5423
  %109 = load i8*, i8** %tp_name85, align 8, !dbg !5423, !tbaa !5264
  %call86 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %103, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.130, i32 0, i32 0), i8* %106, i8* %109), !dbg !5424
  store %struct._object* null, %struct._object** %retval, !dbg !5425
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.94, !dbg !5425

if.end.87:                                        ; preds = %if.then.77
  %110 = load %struct.tagCDataObject*, %struct.tagCDataObject** %src, align 8, !dbg !5426, !tbaa !2522
  %b_ptr88 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %110, i32 0, i32 1, !dbg !5427
  %111 = load i8*, i8** %b_ptr88, align 8, !dbg !5427, !tbaa !4817
  %112 = load i8*, i8** %ptr.addr, align 8, !dbg !5428, !tbaa !2522
  %113 = bitcast i8* %112 to i8**, !dbg !5429
  store i8* %111, i8** %113, align 8, !dbg !5430, !tbaa !2522
  %114 = load %struct.tagCDataObject*, %struct.tagCDataObject** %src, align 8, !dbg !5431, !tbaa !2522
  %call89 = call %struct._object* @GetKeepedObjects(%struct.tagCDataObject* %114), !dbg !5432
  store %struct._object* %call89, %struct._object** %keep, align 8, !dbg !5433, !tbaa !2522
  %115 = load %struct._object*, %struct._object** %keep, align 8, !dbg !5434, !tbaa !2522
  %cmp90 = icmp eq %struct._object* %115, null, !dbg !5436
  br i1 %cmp90, label %if.then.91, label %if.end.92, !dbg !5437

if.then.91:                                       ; preds = %if.end.87
  store %struct._object* null, %struct._object** %retval, !dbg !5438
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.94, !dbg !5438

if.end.92:                                        ; preds = %if.end.87
  %116 = load %struct._object*, %struct._object** %keep, align 8, !dbg !5439, !tbaa !2522
  %117 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5440, !tbaa !2522
  %call93 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._object* %116, %struct._object* %117), !dbg !5441
  store %struct._object* %call93, %struct._object** %retval, !dbg !5442
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.94, !dbg !5442

cleanup.94:                                       ; preds = %if.end.92, %if.then.91, %if.then.82
  %118 = bitcast %struct._object** %keep to i8*, !dbg !5443
  call void @llvm.lifetime.end(i64 8, i8* %118) #2, !dbg !5443
  %119 = bitcast %struct.StgDictObject** %p2 to i8*, !dbg !5443
  call void @llvm.lifetime.end(i64 8, i8* %119) #2, !dbg !5443
  %120 = bitcast %struct.StgDictObject** %p1 to i8*, !dbg !5443
  call void @llvm.lifetime.end(i64 8, i8* %120) #2, !dbg !5443
  br label %cleanup.102

if.end.97:                                        ; preds = %lor.lhs.false.73, %lor.lhs.false.66
  %121 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5444, !tbaa !2522
  %122 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !5445, !tbaa !2522
  %ob_type98 = getelementptr inbounds %struct._object, %struct._object* %122, i32 0, i32 1, !dbg !5446
  %123 = load %struct._typeobject*, %struct._typeobject** %ob_type98, align 8, !dbg !5446, !tbaa !2588
  %tp_name99 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %123, i32 0, i32 1, !dbg !5447
  %124 = load i8*, i8** %tp_name99, align 8, !dbg !5447, !tbaa !5264
  %125 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !5448, !tbaa !2522
  %126 = bitcast %struct._object* %125 to %struct._typeobject*, !dbg !5449
  %tp_name100 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %126, i32 0, i32 1, !dbg !5450
  %127 = load i8*, i8** %tp_name100, align 8, !dbg !5450, !tbaa !5264
  %call101 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %121, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.130, i32 0, i32 0), i8* %124, i8* %127), !dbg !5451
  store %struct._object* null, %struct._object** %retval, !dbg !5452
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102, !dbg !5452

cleanup.102:                                      ; preds = %if.end.97, %cleanup.94, %if.end.60, %if.then.59, %if.then.45, %cleanup.41, %if.then
  %128 = bitcast i32* %err to i8*, !dbg !5453
  call void @llvm.lifetime.end(i64 4, i8* %128) #2, !dbg !5453
  %129 = bitcast %struct.tagCDataObject** %src to i8*, !dbg !5453
  call void @llvm.lifetime.end(i64 8, i8* %129) #2, !dbg !5453
  %130 = load %struct._object*, %struct._object** %retval, !dbg !5453
  ret %struct._object* %130, !dbg !5453
}

; Function Attrs: uwtable
define internal i32 @KeepRef(%struct.tagCDataObject* %target, i64 %index, %struct._object* %keep) #0 {
entry:
  %retval = alloca i32, align 4
  %target.addr = alloca %struct.tagCDataObject*, align 8
  %index.addr = alloca i64, align 8
  %keep.addr = alloca %struct._object*, align 8
  %result = alloca i32, align 4
  %ob = alloca %struct.tagCDataObject*, align 8
  %key = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp7 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp29 = alloca %struct._object*, align 8
  %_py_decref_tmp49 = alloca %struct._object*, align 8
  %_py_decref_tmp64 = alloca %struct._object*, align 8
  %_py_decref_tmp76 = alloca %struct._object*, align 8
  store %struct.tagCDataObject* %target, %struct.tagCDataObject** %target.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %target.addr, metadata !1617, metadata !2526), !dbg !5454
  store i64 %index, i64* %index.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !1618, metadata !2526), !dbg !5455
  store %struct._object* %keep, %struct._object** %keep.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %keep.addr, metadata !1619, metadata !2526), !dbg !5456
  %0 = bitcast i32* %result to i8*, !dbg !5457
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !5457
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1620, metadata !2526), !dbg !5458
  %1 = bitcast %struct.tagCDataObject** %ob to i8*, !dbg !5459
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !5459
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %ob, metadata !1621, metadata !2526), !dbg !5460
  %2 = bitcast %struct._object** %key to i8*, !dbg !5461
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !5461
  call void @llvm.dbg.declare(metadata %struct._object** %key, metadata !1622, metadata !2526), !dbg !5462
  %3 = load %struct._object*, %struct._object** %keep.addr, align 8, !dbg !5463, !tbaa !2522
  %cmp = icmp eq %struct._object* %3, @_Py_NoneStruct, !dbg !5464
  br i1 %cmp, label %if.then, label %if.end.3, !dbg !5465

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5466

do.body:                                          ; preds = %if.then
  %4 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5467
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !5467
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1623, metadata !2526), !dbg !5469
  store %struct._object* @_Py_NoneStruct, %struct._object** %_py_decref_tmp, align 8, !dbg !5469, !tbaa !2522
  %5 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5470, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0, !dbg !5472
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !5473, !tbaa !2551
  %dec = add i64 %6, -1, !dbg !5473
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5473, !tbaa !2551
  %cmp1 = icmp ne i64 %dec, 0, !dbg !5474
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !5475

if.then.2:                                        ; preds = %do.body
  br label %if.end, !dbg !5476

if.else:                                          ; preds = %do.body
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5478, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !5480
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5480, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 4, !dbg !5481
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5481, !tbaa !2590
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5482, !tbaa !2522
  call void %9(%struct._object* %10), !dbg !5483
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.2
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5484
  call void @llvm.lifetime.end(i64 8, i8* %11) #2, !dbg !5484
  br label %do.cond, !dbg !5486

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !5487

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, !dbg !5489
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5489

if.end.3:                                         ; preds = %entry
  %12 = load %struct.tagCDataObject*, %struct.tagCDataObject** %target.addr, align 8, !dbg !5490, !tbaa !2522
  %call = call %struct.tagCDataObject* @PyCData_GetContainer(%struct.tagCDataObject* %12), !dbg !5491
  store %struct.tagCDataObject* %call, %struct.tagCDataObject** %ob, align 8, !dbg !5492, !tbaa !2522
  %13 = load %struct.tagCDataObject*, %struct.tagCDataObject** %ob, align 8, !dbg !5493, !tbaa !2522
  %cmp4 = icmp eq %struct.tagCDataObject* %13, null, !dbg !5494
  br i1 %cmp4, label %if.then.5, label %if.end.18, !dbg !5495

if.then.5:                                        ; preds = %if.end.3
  br label %do.body.6, !dbg !5496

do.body.6:                                        ; preds = %if.then.5
  %14 = bitcast %struct._object** %_py_decref_tmp7 to i8*, !dbg !5497
  call void @llvm.lifetime.start(i64 8, i8* %14) #2, !dbg !5497
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp7, metadata !1627, metadata !2526), !dbg !5499
  %15 = load %struct._object*, %struct._object** %keep.addr, align 8, !dbg !5500, !tbaa !2522
  store %struct._object* %15, %struct._object** %_py_decref_tmp7, align 8, !dbg !5499, !tbaa !2522
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp7, align 8, !dbg !5501, !tbaa !2522
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !5503
  %17 = load i64, i64* %ob_refcnt8, align 8, !dbg !5504, !tbaa !2551
  %dec9 = add i64 %17, -1, !dbg !5504
  store i64 %dec9, i64* %ob_refcnt8, align 8, !dbg !5504, !tbaa !2551
  %cmp10 = icmp ne i64 %dec9, 0, !dbg !5505
  br i1 %cmp10, label %if.then.11, label %if.else.12, !dbg !5506

if.then.11:                                       ; preds = %do.body.6
  br label %if.end.15, !dbg !5507

if.else.12:                                       ; preds = %do.body.6
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp7, align 8, !dbg !5509, !tbaa !2522
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !5511
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type13, align 8, !dbg !5511, !tbaa !2588
  %tp_dealloc14 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !5512
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc14, align 8, !dbg !5512, !tbaa !2590
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp7, align 8, !dbg !5513, !tbaa !2522
  call void %20(%struct._object* %21), !dbg !5514
  br label %if.end.15

if.end.15:                                        ; preds = %if.else.12, %if.then.11
  %22 = bitcast %struct._object** %_py_decref_tmp7 to i8*, !dbg !5515
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !5515
  br label %do.cond.16, !dbg !5517

do.cond.16:                                       ; preds = %if.end.15
  br label %do.end.17, !dbg !5518

do.end.17:                                        ; preds = %do.cond.16
  store i32 -1, i32* %retval, !dbg !5520
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5520

if.end.18:                                        ; preds = %if.end.3
  %23 = load %struct.tagCDataObject*, %struct.tagCDataObject** %ob, align 8, !dbg !5521, !tbaa !2522
  %b_objects = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %23, i32 0, i32 7, !dbg !5522
  %24 = load %struct._object*, %struct._object** %b_objects, align 8, !dbg !5522, !tbaa !4706
  %cmp19 = icmp eq %struct._object* %24, null, !dbg !5523
  br i1 %cmp19, label %if.then.23, label %lor.lhs.false, !dbg !5524

lor.lhs.false:                                    ; preds = %if.end.18
  %25 = load %struct.tagCDataObject*, %struct.tagCDataObject** %ob, align 8, !dbg !5525, !tbaa !2522
  %b_objects20 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %25, i32 0, i32 7, !dbg !5527
  %26 = load %struct._object*, %struct._object** %b_objects20, align 8, !dbg !5527, !tbaa !4706
  %ob_type21 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !5528
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type21, align 8, !dbg !5528, !tbaa !2588
  %cmp22 = icmp eq %struct._typeobject* %27, @PyDict_Type, !dbg !5529
  br i1 %cmp22, label %if.end.44, label %if.then.23, !dbg !5530

if.then.23:                                       ; preds = %lor.lhs.false, %if.end.18
  br label %do.body.24, !dbg !5531

do.body.24:                                       ; preds = %if.then.23
  %28 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5532
  call void @llvm.lifetime.start(i64 8, i8* %28) #2, !dbg !5532
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1631, metadata !2526), !dbg !5534
  %29 = load %struct.tagCDataObject*, %struct.tagCDataObject** %ob, align 8, !dbg !5535, !tbaa !2522
  %b_objects25 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %29, i32 0, i32 7, !dbg !5536
  %30 = load %struct._object*, %struct._object** %b_objects25, align 8, !dbg !5536, !tbaa !4706
  store %struct._object* %30, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5534, !tbaa !2522
  %31 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5537, !tbaa !2522
  %cmp26 = icmp ne %struct._object* %31, null, !dbg !5538
  br i1 %cmp26, label %if.then.27, label %if.end.40, !dbg !5539

if.then.27:                                       ; preds = %do.body.24
  br label %do.body.28, !dbg !5540

do.body.28:                                       ; preds = %if.then.27
  %32 = bitcast %struct._object** %_py_decref_tmp29 to i8*, !dbg !5542
  call void @llvm.lifetime.start(i64 8, i8* %32) #2, !dbg !5542
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp29, metadata !1635, metadata !2526), !dbg !5544
  %33 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !5545, !tbaa !2522
  store %struct._object* %33, %struct._object** %_py_decref_tmp29, align 8, !dbg !5544, !tbaa !2522
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8, !dbg !5546, !tbaa !2522
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0, !dbg !5548
  %35 = load i64, i64* %ob_refcnt30, align 8, !dbg !5549, !tbaa !2551
  %dec31 = add i64 %35, -1, !dbg !5549
  store i64 %dec31, i64* %ob_refcnt30, align 8, !dbg !5549, !tbaa !2551
  %cmp32 = icmp ne i64 %dec31, 0, !dbg !5550
  br i1 %cmp32, label %if.then.33, label %if.else.34, !dbg !5551

if.then.33:                                       ; preds = %do.body.28
  br label %if.end.37, !dbg !5552

if.else.34:                                       ; preds = %do.body.28
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8, !dbg !5554, !tbaa !2522
  %ob_type35 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !5556
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type35, align 8, !dbg !5556, !tbaa !2588
  %tp_dealloc36 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 4, !dbg !5557
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc36, align 8, !dbg !5557, !tbaa !2590
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8, !dbg !5558, !tbaa !2522
  call void %38(%struct._object* %39), !dbg !5559
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.34, %if.then.33
  %40 = bitcast %struct._object** %_py_decref_tmp29 to i8*, !dbg !5560
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !5560
  br label %do.cond.38, !dbg !5562

do.cond.38:                                       ; preds = %if.end.37
  br label %do.end.39, !dbg !5563

do.end.39:                                        ; preds = %do.cond.38
  br label %if.end.40, !dbg !5565

if.end.40:                                        ; preds = %do.end.39, %do.body.24
  %41 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !5567
  call void @llvm.lifetime.end(i64 8, i8* %41) #2, !dbg !5567
  br label %do.cond.41, !dbg !5570

do.cond.41:                                       ; preds = %if.end.40
  br label %do.end.42, !dbg !5571

do.end.42:                                        ; preds = %do.cond.41
  %42 = load %struct._object*, %struct._object** %keep.addr, align 8, !dbg !5573, !tbaa !2522
  %43 = load %struct.tagCDataObject*, %struct.tagCDataObject** %ob, align 8, !dbg !5574, !tbaa !2522
  %b_objects43 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %43, i32 0, i32 7, !dbg !5575
  store %struct._object* %42, %struct._object** %b_objects43, align 8, !dbg !5576, !tbaa !4706
  store i32 0, i32* %retval, !dbg !5577
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5577

if.end.44:                                        ; preds = %lor.lhs.false
  %44 = load %struct.tagCDataObject*, %struct.tagCDataObject** %target.addr, align 8, !dbg !5578, !tbaa !2522
  %45 = load i64, i64* %index.addr, align 8, !dbg !5579, !tbaa !2704
  %call45 = call %struct._object* @unique_key(%struct.tagCDataObject* %44, i64 %45), !dbg !5580
  store %struct._object* %call45, %struct._object** %key, align 8, !dbg !5581, !tbaa !2522
  %46 = load %struct._object*, %struct._object** %key, align 8, !dbg !5582, !tbaa !2522
  %cmp46 = icmp eq %struct._object* %46, null, !dbg !5583
  br i1 %cmp46, label %if.then.47, label %if.end.60, !dbg !5584

if.then.47:                                       ; preds = %if.end.44
  br label %do.body.48, !dbg !5585

do.body.48:                                       ; preds = %if.then.47
  %47 = bitcast %struct._object** %_py_decref_tmp49 to i8*, !dbg !5586
  call void @llvm.lifetime.start(i64 8, i8* %47) #2, !dbg !5586
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp49, metadata !1638, metadata !2526), !dbg !5588
  %48 = load %struct._object*, %struct._object** %keep.addr, align 8, !dbg !5589, !tbaa !2522
  store %struct._object* %48, %struct._object** %_py_decref_tmp49, align 8, !dbg !5588, !tbaa !2522
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !5590, !tbaa !2522
  %ob_refcnt50 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0, !dbg !5592
  %50 = load i64, i64* %ob_refcnt50, align 8, !dbg !5593, !tbaa !2551
  %dec51 = add i64 %50, -1, !dbg !5593
  store i64 %dec51, i64* %ob_refcnt50, align 8, !dbg !5593, !tbaa !2551
  %cmp52 = icmp ne i64 %dec51, 0, !dbg !5594
  br i1 %cmp52, label %if.then.53, label %if.else.54, !dbg !5595

if.then.53:                                       ; preds = %do.body.48
  br label %if.end.57, !dbg !5596

if.else.54:                                       ; preds = %do.body.48
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !5598, !tbaa !2522
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 1, !dbg !5600
  %52 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8, !dbg !5600, !tbaa !2588
  %tp_dealloc56 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %52, i32 0, i32 4, !dbg !5601
  %53 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc56, align 8, !dbg !5601, !tbaa !2590
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !5602, !tbaa !2522
  call void %53(%struct._object* %54), !dbg !5603
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.54, %if.then.53
  %55 = bitcast %struct._object** %_py_decref_tmp49 to i8*, !dbg !5604
  call void @llvm.lifetime.end(i64 8, i8* %55) #2, !dbg !5604
  br label %do.cond.58, !dbg !5606

do.cond.58:                                       ; preds = %if.end.57
  br label %do.end.59, !dbg !5607

do.end.59:                                        ; preds = %do.cond.58
  store i32 -1, i32* %retval, !dbg !5609
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5609

if.end.60:                                        ; preds = %if.end.44
  %56 = load %struct.tagCDataObject*, %struct.tagCDataObject** %ob, align 8, !dbg !5610, !tbaa !2522
  %b_objects61 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %56, i32 0, i32 7, !dbg !5611
  %57 = load %struct._object*, %struct._object** %b_objects61, align 8, !dbg !5611, !tbaa !4706
  %58 = load %struct._object*, %struct._object** %key, align 8, !dbg !5612, !tbaa !2522
  %59 = load %struct._object*, %struct._object** %keep.addr, align 8, !dbg !5613, !tbaa !2522
  %call62 = call i32 @PyDict_SetItem(%struct._object* %57, %struct._object* %58, %struct._object* %59), !dbg !5614
  store i32 %call62, i32* %result, align 4, !dbg !5615, !tbaa !2611
  br label %do.body.63, !dbg !5616

do.body.63:                                       ; preds = %if.end.60
  %60 = bitcast %struct._object** %_py_decref_tmp64 to i8*, !dbg !5617
  call void @llvm.lifetime.start(i64 8, i8* %60) #2, !dbg !5617
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp64, metadata !1642, metadata !2526), !dbg !5619
  %61 = load %struct._object*, %struct._object** %key, align 8, !dbg !5620, !tbaa !2522
  store %struct._object* %61, %struct._object** %_py_decref_tmp64, align 8, !dbg !5619, !tbaa !2522
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !5621, !tbaa !2522
  %ob_refcnt65 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 0, !dbg !5623
  %63 = load i64, i64* %ob_refcnt65, align 8, !dbg !5624, !tbaa !2551
  %dec66 = add i64 %63, -1, !dbg !5624
  store i64 %dec66, i64* %ob_refcnt65, align 8, !dbg !5624, !tbaa !2551
  %cmp67 = icmp ne i64 %dec66, 0, !dbg !5625
  br i1 %cmp67, label %if.then.68, label %if.else.69, !dbg !5626

if.then.68:                                       ; preds = %do.body.63
  br label %if.end.72, !dbg !5627

if.else.69:                                       ; preds = %do.body.63
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !5629, !tbaa !2522
  %ob_type70 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 1, !dbg !5631
  %65 = load %struct._typeobject*, %struct._typeobject** %ob_type70, align 8, !dbg !5631, !tbaa !2588
  %tp_dealloc71 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %65, i32 0, i32 4, !dbg !5632
  %66 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc71, align 8, !dbg !5632, !tbaa !2590
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp64, align 8, !dbg !5633, !tbaa !2522
  call void %66(%struct._object* %67), !dbg !5634
  br label %if.end.72

if.end.72:                                        ; preds = %if.else.69, %if.then.68
  %68 = bitcast %struct._object** %_py_decref_tmp64 to i8*, !dbg !5635
  call void @llvm.lifetime.end(i64 8, i8* %68) #2, !dbg !5635
  br label %do.cond.73, !dbg !5637

do.cond.73:                                       ; preds = %if.end.72
  br label %do.end.74, !dbg !5638

do.end.74:                                        ; preds = %do.cond.73
  br label %do.body.75, !dbg !5640

do.body.75:                                       ; preds = %do.end.74
  %69 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !5641
  call void @llvm.lifetime.start(i64 8, i8* %69) #2, !dbg !5641
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp76, metadata !1644, metadata !2526), !dbg !5643
  %70 = load %struct._object*, %struct._object** %keep.addr, align 8, !dbg !5644, !tbaa !2522
  store %struct._object* %70, %struct._object** %_py_decref_tmp76, align 8, !dbg !5643, !tbaa !2522
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !5645, !tbaa !2522
  %ob_refcnt77 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 0, !dbg !5647
  %72 = load i64, i64* %ob_refcnt77, align 8, !dbg !5648, !tbaa !2551
  %dec78 = add i64 %72, -1, !dbg !5648
  store i64 %dec78, i64* %ob_refcnt77, align 8, !dbg !5648, !tbaa !2551
  %cmp79 = icmp ne i64 %dec78, 0, !dbg !5649
  br i1 %cmp79, label %if.then.80, label %if.else.81, !dbg !5650

if.then.80:                                       ; preds = %do.body.75
  br label %if.end.84, !dbg !5651

if.else.81:                                       ; preds = %do.body.75
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !5653, !tbaa !2522
  %ob_type82 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1, !dbg !5655
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type82, align 8, !dbg !5655, !tbaa !2588
  %tp_dealloc83 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i32 0, i32 4, !dbg !5656
  %75 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc83, align 8, !dbg !5656, !tbaa !2590
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !5657, !tbaa !2522
  call void %75(%struct._object* %76), !dbg !5658
  br label %if.end.84

if.end.84:                                        ; preds = %if.else.81, %if.then.80
  %77 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !5659
  call void @llvm.lifetime.end(i64 8, i8* %77) #2, !dbg !5659
  br label %do.cond.85, !dbg !5660

do.cond.85:                                       ; preds = %if.end.84
  br label %do.end.86, !dbg !5661

do.end.86:                                        ; preds = %do.cond.85
  %78 = load i32, i32* %result, align 4, !dbg !5663, !tbaa !2611
  store i32 %78, i32* %retval, !dbg !5664
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5664

cleanup:                                          ; preds = %do.end.86, %do.end.59, %do.end.42, %do.end.17, %do.end
  %79 = bitcast %struct._object** %key to i8*, !dbg !5665
  call void @llvm.lifetime.end(i64 8, i8* %79) #2, !dbg !5665
  %80 = bitcast %struct.tagCDataObject** %ob to i8*, !dbg !5665
  call void @llvm.lifetime.end(i64 8, i8* %80) #2, !dbg !5665
  %81 = bitcast i32* %result to i8*, !dbg !5665
  call void @llvm.lifetime.end(i64 4, i8* %81) #2, !dbg !5665
  %82 = load i32, i32* %retval, !dbg !5665
  ret i32 %82, !dbg !5665
}

; Function Attrs: uwtable
define internal void @PyCFuncPtr_dealloc(%struct.PyCFuncPtrObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyCFuncPtrObject*, align 8
  store %struct.PyCFuncPtrObject* %self, %struct.PyCFuncPtrObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %self.addr, metadata !1659, metadata !2526), !dbg !5666
  %0 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5667, !tbaa !2522
  %call = call i32 @PyCFuncPtr_clear(%struct.PyCFuncPtrObject* %0), !dbg !5668
  %1 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5669, !tbaa !2522
  %2 = bitcast %struct.PyCFuncPtrObject* %1 to %struct._object*, !dbg !5670
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !5671
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5671, !tbaa !2588
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 38, !dbg !5672
  %4 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !5672, !tbaa !4691
  %5 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5673, !tbaa !2522
  %6 = bitcast %struct.PyCFuncPtrObject* %5 to %struct._object*, !dbg !5674
  %7 = bitcast %struct._object* %6 to i8*, !dbg !5674
  call void %4(i8* %7), !dbg !5675
  ret void, !dbg !5676
}

; Function Attrs: uwtable
define internal %struct._object* @PyCFuncPtr_repr(%struct.PyCFuncPtrObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyCFuncPtrObject*, align 8
  store %struct.PyCFuncPtrObject* %self, %struct.PyCFuncPtrObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %self.addr, metadata !1664, metadata !2526), !dbg !5677
  %0 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5678, !tbaa !2522
  %1 = bitcast %struct.PyCFuncPtrObject* %0 to %struct._object*, !dbg !5679
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !5680
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5680, !tbaa !2588
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 1, !dbg !5681
  %3 = load i8*, i8** %tp_name, align 8, !dbg !5681, !tbaa !5264
  %4 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5682, !tbaa !2522
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.134, i32 0, i32 0), i8* %3, %struct.PyCFuncPtrObject* %4), !dbg !5683
  ret %struct._object* %call, !dbg !5684
}

; Function Attrs: uwtable
define internal %struct._object* @PyCFuncPtr_call(%struct.PyCFuncPtrObject* %self, %struct._object* %inargs, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyCFuncPtrObject*, align 8
  %inargs.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %restype = alloca %struct._object*, align 8
  %converters = alloca %struct._object*, align 8
  %checker = alloca %struct._object*, align 8
  %argtypes = alloca %struct._object*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %result = alloca %struct._object*, align 8
  %callargs = alloca %struct._object*, align 8
  %errcheck = alloca %struct._object*, align 8
  %pProc = alloca i8*, align 8
  %inoutmask = alloca i32, align 4
  %outmask = alloca i32, align 4
  %numretvals = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %required = alloca i32, align 4
  %actual = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  %v = alloca %struct._object*, align 8
  %_py_decref_tmp87 = alloca %struct._object*, align 8
  %_py_decref_tmp100 = alloca %struct._object*, align 8
  %_py_decref_tmp114 = alloca %struct._object*, align 8
  store %struct.PyCFuncPtrObject* %self, %struct.PyCFuncPtrObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %self.addr, metadata !1674, metadata !2526), !dbg !5685
  store %struct._object* %inargs, %struct._object** %inargs.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %inargs.addr, metadata !1675, metadata !2526), !dbg !5686
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1676, metadata !2526), !dbg !5687
  %0 = bitcast %struct._object** %restype to i8*, !dbg !5688
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5688
  call void @llvm.dbg.declare(metadata %struct._object** %restype, metadata !1677, metadata !2526), !dbg !5689
  %1 = bitcast %struct._object** %converters to i8*, !dbg !5690
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !5690
  call void @llvm.dbg.declare(metadata %struct._object** %converters, metadata !1678, metadata !2526), !dbg !5691
  %2 = bitcast %struct._object** %checker to i8*, !dbg !5692
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !5692
  call void @llvm.dbg.declare(metadata %struct._object** %checker, metadata !1679, metadata !2526), !dbg !5693
  %3 = bitcast %struct._object** %argtypes to i8*, !dbg !5694
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !5694
  call void @llvm.dbg.declare(metadata %struct._object** %argtypes, metadata !1680, metadata !2526), !dbg !5695
  %4 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !5696
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !5696
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !1681, metadata !2526), !dbg !5697
  %5 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5698, !tbaa !2522
  %6 = bitcast %struct.PyCFuncPtrObject* %5 to %struct._object*, !dbg !5699
  %call = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %6), !dbg !5700
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !5697, !tbaa !2522
  %7 = bitcast %struct._object** %result to i8*, !dbg !5701
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !5701
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1682, metadata !2526), !dbg !5702
  %8 = bitcast %struct._object** %callargs to i8*, !dbg !5703
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !5703
  call void @llvm.dbg.declare(metadata %struct._object** %callargs, metadata !1683, metadata !2526), !dbg !5704
  %9 = bitcast %struct._object** %errcheck to i8*, !dbg !5705
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !5705
  call void @llvm.dbg.declare(metadata %struct._object** %errcheck, metadata !1684, metadata !2526), !dbg !5706
  %10 = bitcast i8** %pProc to i8*, !dbg !5707
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !5707
  call void @llvm.dbg.declare(metadata i8** %pProc, metadata !1685, metadata !2526), !dbg !5708
  store i8* null, i8** %pProc, align 8, !dbg !5708, !tbaa !2522
  %11 = bitcast i32* %inoutmask to i8*, !dbg !5709
  call void @llvm.lifetime.start(i64 4, i8* %11) #2, !dbg !5709
  call void @llvm.dbg.declare(metadata i32* %inoutmask, metadata !1686, metadata !2526), !dbg !5710
  %12 = bitcast i32* %outmask to i8*, !dbg !5711
  call void @llvm.lifetime.start(i64 4, i8* %12) #2, !dbg !5711
  call void @llvm.dbg.declare(metadata i32* %outmask, metadata !1687, metadata !2526), !dbg !5712
  %13 = bitcast i32* %numretvals to i8*, !dbg !5713
  call void @llvm.lifetime.start(i64 4, i8* %13) #2, !dbg !5713
  call void @llvm.dbg.declare(metadata i32* %numretvals, metadata !1688, metadata !2526), !dbg !5714
  %14 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5715, !tbaa !2522
  %restype1 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %14, i32 0, i32 13, !dbg !5716
  %15 = load %struct._object*, %struct._object** %restype1, align 8, !dbg !5716, !tbaa !5717
  %tobool = icmp ne %struct._object* %15, null, !dbg !5715
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5715

cond.true:                                        ; preds = %entry
  %16 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5719, !tbaa !2522
  %restype2 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %16, i32 0, i32 13, !dbg !5721
  %17 = load %struct._object*, %struct._object** %restype2, align 8, !dbg !5721, !tbaa !5717
  br label %cond.end, !dbg !5715

cond.false:                                       ; preds = %entry
  %18 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5722, !tbaa !2522
  %restype3 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %18, i32 0, i32 11, !dbg !5724
  %19 = load %struct._object*, %struct._object** %restype3, align 8, !dbg !5724, !tbaa !5725
  br label %cond.end, !dbg !5715

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %17, %cond.true ], [ %19, %cond.false ], !dbg !5715
  store %struct._object* %cond, %struct._object** %restype, align 8, !dbg !5726, !tbaa !2522
  %20 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5729, !tbaa !2522
  %converters4 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %20, i32 0, i32 11, !dbg !5730
  %21 = load %struct._object*, %struct._object** %converters4, align 8, !dbg !5730, !tbaa !5731
  %tobool5 = icmp ne %struct._object* %21, null, !dbg !5729
  br i1 %tobool5, label %cond.true.6, label %cond.false.8, !dbg !5729

cond.true.6:                                      ; preds = %cond.end
  %22 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5732, !tbaa !2522
  %converters7 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %22, i32 0, i32 11, !dbg !5733
  %23 = load %struct._object*, %struct._object** %converters7, align 8, !dbg !5733, !tbaa !5731
  br label %cond.end.10, !dbg !5729

cond.false.8:                                     ; preds = %cond.end
  %24 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5734, !tbaa !2522
  %converters9 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %24, i32 0, i32 10, !dbg !5735
  %25 = load %struct._object*, %struct._object** %converters9, align 8, !dbg !5735, !tbaa !5736
  br label %cond.end.10, !dbg !5729

cond.end.10:                                      ; preds = %cond.false.8, %cond.true.6
  %cond11 = phi %struct._object* [ %23, %cond.true.6 ], [ %25, %cond.false.8 ], !dbg !5729
  store %struct._object* %cond11, %struct._object** %converters, align 8, !dbg !5737, !tbaa !2522
  %26 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5738, !tbaa !2522
  %checker12 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %26, i32 0, i32 14, !dbg !5739
  %27 = load %struct._object*, %struct._object** %checker12, align 8, !dbg !5739, !tbaa !5740
  %tobool13 = icmp ne %struct._object* %27, null, !dbg !5738
  br i1 %tobool13, label %cond.true.14, label %cond.false.16, !dbg !5738

cond.true.14:                                     ; preds = %cond.end.10
  %28 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5741, !tbaa !2522
  %checker15 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %28, i32 0, i32 14, !dbg !5742
  %29 = load %struct._object*, %struct._object** %checker15, align 8, !dbg !5742, !tbaa !5740
  br label %cond.end.18, !dbg !5738

cond.false.16:                                    ; preds = %cond.end.10
  %30 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5743, !tbaa !2522
  %checker17 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %30, i32 0, i32 12, !dbg !5744
  %31 = load %struct._object*, %struct._object** %checker17, align 8, !dbg !5744, !tbaa !5745
  br label %cond.end.18, !dbg !5738

cond.end.18:                                      ; preds = %cond.false.16, %cond.true.14
  %cond19 = phi %struct._object* [ %29, %cond.true.14 ], [ %31, %cond.false.16 ], !dbg !5738
  store %struct._object* %cond19, %struct._object** %checker, align 8, !dbg !5746, !tbaa !2522
  %32 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5747, !tbaa !2522
  %argtypes20 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %32, i32 0, i32 12, !dbg !5748
  %33 = load %struct._object*, %struct._object** %argtypes20, align 8, !dbg !5748, !tbaa !5749
  %tobool21 = icmp ne %struct._object* %33, null, !dbg !5747
  br i1 %tobool21, label %cond.true.22, label %cond.false.24, !dbg !5747

cond.true.22:                                     ; preds = %cond.end.18
  %34 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5750, !tbaa !2522
  %argtypes23 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %34, i32 0, i32 12, !dbg !5751
  %35 = load %struct._object*, %struct._object** %argtypes23, align 8, !dbg !5751, !tbaa !5749
  br label %cond.end.26, !dbg !5747

cond.false.24:                                    ; preds = %cond.end.18
  %36 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5752, !tbaa !2522
  %argtypes25 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %36, i32 0, i32 9, !dbg !5753
  %37 = load %struct._object*, %struct._object** %argtypes25, align 8, !dbg !5753, !tbaa !5754
  br label %cond.end.26, !dbg !5747

cond.end.26:                                      ; preds = %cond.false.24, %cond.true.22
  %cond27 = phi %struct._object* [ %35, %cond.true.22 ], [ %37, %cond.false.24 ], !dbg !5747
  store %struct._object* %cond27, %struct._object** %argtypes, align 8, !dbg !5755, !tbaa !2522
  %38 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5756, !tbaa !2522
  %errcheck28 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %38, i32 0, i32 15, !dbg !5757
  %39 = load %struct._object*, %struct._object** %errcheck28, align 8, !dbg !5757, !tbaa !5758
  store %struct._object* %39, %struct._object** %errcheck, align 8, !dbg !5759, !tbaa !2522
  %40 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5760, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %40, i32 0, i32 1, !dbg !5761
  %41 = load i8*, i8** %b_ptr, align 8, !dbg !5761, !tbaa !5762
  %42 = bitcast i8* %41 to i8**, !dbg !5763
  %43 = load i8*, i8** %42, align 8, !dbg !5764, !tbaa !2522
  store i8* %43, i8** %pProc, align 8, !dbg !5765, !tbaa !2522
  %44 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5766, !tbaa !2522
  %45 = load %struct._object*, %struct._object** %argtypes, align 8, !dbg !5767, !tbaa !2522
  %46 = load %struct._object*, %struct._object** %inargs.addr, align 8, !dbg !5768, !tbaa !2522
  %47 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !5769, !tbaa !2522
  %call29 = call %struct._object* @_build_callargs(%struct.PyCFuncPtrObject* %44, %struct._object* %45, %struct._object* %46, %struct._object* %47, i32* %outmask, i32* %inoutmask, i32* %numretvals), !dbg !5770
  store %struct._object* %call29, %struct._object** %callargs, align 8, !dbg !5771, !tbaa !2522
  %48 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !5772, !tbaa !2522
  %cmp = icmp eq %struct._object* %48, null, !dbg !5774
  br i1 %cmp, label %if.then, label %if.end, !dbg !5775

if.then:                                          ; preds = %cond.end.26
  store %struct._object* null, %struct._object** %retval, !dbg !5776
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.131, !dbg !5776

if.end:                                           ; preds = %cond.end.26
  %49 = load %struct._object*, %struct._object** %converters, align 8, !dbg !5777, !tbaa !2522
  %tobool30 = icmp ne %struct._object* %49, null, !dbg !5777
  br i1 %tobool30, label %if.then.31, label %if.end.73, !dbg !5778

if.then.31:                                       ; preds = %if.end
  %50 = bitcast i32* %required to i8*, !dbg !5779
  call void @llvm.lifetime.start(i64 4, i8* %50) #2, !dbg !5779
  call void @llvm.dbg.declare(metadata i32* %required, metadata !1689, metadata !2526), !dbg !5780
  %51 = load %struct._object*, %struct._object** %converters, align 8, !dbg !5781, !tbaa !2522
  %52 = bitcast %struct._object* %51 to %struct.PyVarObject*, !dbg !5782
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %52, i32 0, i32 1, !dbg !5783
  %53 = load i64, i64* %ob_size, align 8, !dbg !5783, !tbaa !5784
  %conv = trunc i64 %53 to i32, !dbg !5785
  store i32 %conv, i32* %required, align 4, !dbg !5780, !tbaa !2611
  %54 = bitcast i32* %actual to i8*, !dbg !5786
  call void @llvm.lifetime.start(i64 4, i8* %54) #2, !dbg !5786
  call void @llvm.dbg.declare(metadata i32* %actual, metadata !1692, metadata !2526), !dbg !5787
  %55 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !5788, !tbaa !2522
  %56 = bitcast %struct._object* %55 to %struct.PyVarObject*, !dbg !5789
  %ob_size32 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %56, i32 0, i32 1, !dbg !5790
  %57 = load i64, i64* %ob_size32, align 8, !dbg !5790, !tbaa !5784
  %conv33 = trunc i64 %57 to i32, !dbg !5791
  store i32 %conv33, i32* %actual, align 4, !dbg !5787, !tbaa !2611
  %58 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5792, !tbaa !2522
  %flags = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %58, i32 0, i32 13, !dbg !5793
  %59 = load i32, i32* %flags, align 4, !dbg !5793, !tbaa !3128
  %and = and i32 %59, 1, !dbg !5794
  %cmp34 = icmp eq i32 %and, 1, !dbg !5795
  br i1 %cmp34, label %if.then.36, label %if.else.49, !dbg !5796

if.then.36:                                       ; preds = %if.then.31
  %60 = load i32, i32* %required, align 4, !dbg !5797, !tbaa !2611
  %61 = load i32, i32* %actual, align 4, !dbg !5798, !tbaa !2611
  %cmp37 = icmp sgt i32 %60, %61, !dbg !5799
  br i1 %cmp37, label %if.then.39, label %if.end.48, !dbg !5800

if.then.39:                                       ; preds = %if.then.36
  br label %do.body, !dbg !5801

do.body:                                          ; preds = %if.then.39
  %62 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5802
  call void @llvm.lifetime.start(i64 8, i8* %62) #2, !dbg !5802
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1693, metadata !2526), !dbg !5804
  %63 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !5805, !tbaa !2522
  store %struct._object* %63, %struct._object** %_py_decref_tmp, align 8, !dbg !5804, !tbaa !2522
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5806, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 0, !dbg !5808
  %65 = load i64, i64* %ob_refcnt, align 8, !dbg !5809, !tbaa !2551
  %dec = add i64 %65, -1, !dbg !5809
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5809, !tbaa !2551
  %cmp40 = icmp ne i64 %dec, 0, !dbg !5810
  br i1 %cmp40, label %if.then.42, label %if.else, !dbg !5811

if.then.42:                                       ; preds = %do.body
  br label %if.end.43, !dbg !5812

if.else:                                          ; preds = %do.body
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5814, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 1, !dbg !5816
  %67 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5816, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %67, i32 0, i32 4, !dbg !5817
  %68 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5817, !tbaa !2590
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5818, !tbaa !2522
  call void %68(%struct._object* %69), !dbg !5819
  br label %if.end.43

if.end.43:                                        ; preds = %if.else, %if.then.42
  %70 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5820
  call void @llvm.lifetime.end(i64 8, i8* %70) #2, !dbg !5820
  br label %do.cond, !dbg !5822

do.cond:                                          ; preds = %if.end.43
  br label %do.end, !dbg !5823

do.end:                                           ; preds = %do.cond
  %71 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5825, !tbaa !2522
  %72 = load i32, i32* %required, align 4, !dbg !5826, !tbaa !2611
  %73 = load i32, i32* %required, align 4, !dbg !5827, !tbaa !2611
  %cmp44 = icmp eq i32 %73, 1, !dbg !5828
  %cond46 = select i1 %cmp44, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.137, i32 0, i32 0), !dbg !5827
  %74 = load i32, i32* %actual, align 4, !dbg !5829, !tbaa !2611
  %call47 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %71, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.135, i32 0, i32 0), i32 %72, i8* %cond46, i32 %74), !dbg !5830
  store %struct._object* null, %struct._object** %retval, !dbg !5831
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5831

if.end.48:                                        ; preds = %if.then.36
  br label %if.end.71, !dbg !5832

if.else.49:                                       ; preds = %if.then.31
  %75 = load i32, i32* %required, align 4, !dbg !5833, !tbaa !2611
  %76 = load i32, i32* %actual, align 4, !dbg !5834, !tbaa !2611
  %cmp50 = icmp ne i32 %75, %76, !dbg !5835
  br i1 %cmp50, label %if.then.52, label %if.end.70, !dbg !5836

if.then.52:                                       ; preds = %if.else.49
  br label %do.body.53, !dbg !5837

do.body.53:                                       ; preds = %if.then.52
  %77 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !5838
  call void @llvm.lifetime.start(i64 8, i8* %77) #2, !dbg !5838
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp54, metadata !1699, metadata !2526), !dbg !5840
  %78 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !5841, !tbaa !2522
  store %struct._object* %78, %struct._object** %_py_decref_tmp54, align 8, !dbg !5840, !tbaa !2522
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !5842, !tbaa !2522
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %79, i32 0, i32 0, !dbg !5844
  %80 = load i64, i64* %ob_refcnt55, align 8, !dbg !5845, !tbaa !2551
  %dec56 = add i64 %80, -1, !dbg !5845
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !5845, !tbaa !2551
  %cmp57 = icmp ne i64 %dec56, 0, !dbg !5846
  br i1 %cmp57, label %if.then.59, label %if.else.60, !dbg !5847

if.then.59:                                       ; preds = %do.body.53
  br label %if.end.63, !dbg !5848

if.else.60:                                       ; preds = %do.body.53
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !5850, !tbaa !2522
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %81, i32 0, i32 1, !dbg !5852
  %82 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8, !dbg !5852, !tbaa !2588
  %tp_dealloc62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %82, i32 0, i32 4, !dbg !5853
  %83 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc62, align 8, !dbg !5853, !tbaa !2590
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !5854, !tbaa !2522
  call void %83(%struct._object* %84), !dbg !5855
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.60, %if.then.59
  %85 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !5856
  call void @llvm.lifetime.end(i64 8, i8* %85) #2, !dbg !5856
  br label %do.cond.64, !dbg !5858

do.cond.64:                                       ; preds = %if.end.63
  br label %do.end.65, !dbg !5859

do.end.65:                                        ; preds = %do.cond.64
  %86 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !5861, !tbaa !2522
  %87 = load i32, i32* %required, align 4, !dbg !5862, !tbaa !2611
  %88 = load i32, i32* %required, align 4, !dbg !5863, !tbaa !2611
  %cmp66 = icmp eq i32 %88, 1, !dbg !5864
  %cond68 = select i1 %cmp66, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.137, i32 0, i32 0), !dbg !5863
  %89 = load i32, i32* %actual, align 4, !dbg !5865, !tbaa !2611
  %call69 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %86, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.138, i32 0, i32 0), i32 %87, i8* %cond68, i32 %89), !dbg !5866
  store %struct._object* null, %struct._object** %retval, !dbg !5867
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5867

if.end.70:                                        ; preds = %if.else.49
  br label %if.end.71

if.end.71:                                        ; preds = %if.end.70, %if.end.48
  store i32 0, i32* %cleanup.dest.slot, !dbg !5868
  br label %cleanup, !dbg !5868

cleanup:                                          ; preds = %if.end.71, %do.end.65, %do.end
  %90 = bitcast i32* %actual to i8*, !dbg !5869
  call void @llvm.lifetime.end(i64 4, i8* %90) #2, !dbg !5869
  %91 = bitcast i32* %required to i8*, !dbg !5869
  call void @llvm.lifetime.end(i64 4, i8* %91) #2, !dbg !5869
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.73, !dbg !5871

if.end.73:                                        ; preds = %cleanup.cont, %if.end
  %92 = load i8*, i8** %pProc, align 8, !dbg !5872, !tbaa !2522
  %93 = bitcast i8* %92 to i32 ()*, !dbg !5872
  %94 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !5873, !tbaa !2522
  %95 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !5874, !tbaa !2522
  %flags74 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %95, i32 0, i32 13, !dbg !5875
  %96 = load i32, i32* %flags74, align 4, !dbg !5875, !tbaa !3128
  %97 = load %struct._object*, %struct._object** %converters, align 8, !dbg !5876, !tbaa !2522
  %98 = load %struct._object*, %struct._object** %restype, align 8, !dbg !5877, !tbaa !2522
  %99 = load %struct._object*, %struct._object** %checker, align 8, !dbg !5878, !tbaa !2522
  %call75 = call %struct._object* @_ctypes_callproc(i32 ()* %93, %struct._object* %94, i32 %96, %struct._object* %97, %struct._object* %98, %struct._object* %99), !dbg !5879
  store %struct._object* %call75, %struct._object** %result, align 8, !dbg !5880, !tbaa !2522
  %100 = load %struct._object*, %struct._object** %result, align 8, !dbg !5881, !tbaa !2522
  %cmp76 = icmp ne %struct._object* %100, null, !dbg !5882
  br i1 %cmp76, label %land.lhs.true, label %if.end.129, !dbg !5883

land.lhs.true:                                    ; preds = %if.end.73
  %101 = load %struct._object*, %struct._object** %errcheck, align 8, !dbg !5884, !tbaa !2522
  %tobool78 = icmp ne %struct._object* %101, null, !dbg !5884
  br i1 %tobool78, label %if.then.79, label %if.end.129, !dbg !5886

if.then.79:                                       ; preds = %land.lhs.true
  %102 = bitcast %struct._object** %v to i8*, !dbg !5887
  call void @llvm.lifetime.start(i64 8, i8* %102) #2, !dbg !5887
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !1703, metadata !2526), !dbg !5888
  %103 = load %struct._object*, %struct._object** %errcheck, align 8, !dbg !5889, !tbaa !2522
  %104 = load %struct._object*, %struct._object** %result, align 8, !dbg !5890, !tbaa !2522
  %105 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5891, !tbaa !2522
  %106 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !5892, !tbaa !2522
  %call80 = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %103, %struct._object* %104, %struct.PyCFuncPtrObject* %105, %struct._object* %106, i8* null), !dbg !5893
  store %struct._object* %call80, %struct._object** %v, align 8, !dbg !5888, !tbaa !2522
  %107 = load %struct._object*, %struct._object** %v, align 8, !dbg !5894, !tbaa !2522
  %cmp81 = icmp eq %struct._object* %107, null, !dbg !5895
  br i1 %cmp81, label %if.then.85, label %lor.lhs.false, !dbg !5896

lor.lhs.false:                                    ; preds = %if.then.79
  %108 = load %struct._object*, %struct._object** %v, align 8, !dbg !5897, !tbaa !2522
  %109 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !5899, !tbaa !2522
  %cmp83 = icmp ne %struct._object* %108, %109, !dbg !5900
  br i1 %cmp83, label %if.then.85, label %if.end.112, !dbg !5901

if.then.85:                                       ; preds = %lor.lhs.false, %if.then.79
  br label %do.body.86, !dbg !5902

do.body.86:                                       ; preds = %if.then.85
  %110 = bitcast %struct._object** %_py_decref_tmp87 to i8*, !dbg !5903
  call void @llvm.lifetime.start(i64 8, i8* %110) #2, !dbg !5903
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp87, metadata !1706, metadata !2526), !dbg !5905
  %111 = load %struct._object*, %struct._object** %result, align 8, !dbg !5906, !tbaa !2522
  store %struct._object* %111, %struct._object** %_py_decref_tmp87, align 8, !dbg !5905, !tbaa !2522
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !5907, !tbaa !2522
  %ob_refcnt88 = getelementptr inbounds %struct._object, %struct._object* %112, i32 0, i32 0, !dbg !5909
  %113 = load i64, i64* %ob_refcnt88, align 8, !dbg !5910, !tbaa !2551
  %dec89 = add i64 %113, -1, !dbg !5910
  store i64 %dec89, i64* %ob_refcnt88, align 8, !dbg !5910, !tbaa !2551
  %cmp90 = icmp ne i64 %dec89, 0, !dbg !5911
  br i1 %cmp90, label %if.then.92, label %if.else.93, !dbg !5912

if.then.92:                                       ; preds = %do.body.86
  br label %if.end.96, !dbg !5913

if.else.93:                                       ; preds = %do.body.86
  %114 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !5915, !tbaa !2522
  %ob_type94 = getelementptr inbounds %struct._object, %struct._object* %114, i32 0, i32 1, !dbg !5917
  %115 = load %struct._typeobject*, %struct._typeobject** %ob_type94, align 8, !dbg !5917, !tbaa !2588
  %tp_dealloc95 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %115, i32 0, i32 4, !dbg !5918
  %116 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc95, align 8, !dbg !5918, !tbaa !2590
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8, !dbg !5919, !tbaa !2522
  call void %116(%struct._object* %117), !dbg !5920
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.93, %if.then.92
  %118 = bitcast %struct._object** %_py_decref_tmp87 to i8*, !dbg !5921
  call void @llvm.lifetime.end(i64 8, i8* %118) #2, !dbg !5921
  br label %do.cond.97, !dbg !5923

do.cond.97:                                       ; preds = %if.end.96
  br label %do.end.98, !dbg !5924

do.end.98:                                        ; preds = %do.cond.97
  br label %do.body.99, !dbg !5926

do.body.99:                                       ; preds = %do.end.98
  %119 = bitcast %struct._object** %_py_decref_tmp100 to i8*, !dbg !5927
  call void @llvm.lifetime.start(i64 8, i8* %119) #2, !dbg !5927
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp100, metadata !1710, metadata !2526), !dbg !5929
  %120 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !5930, !tbaa !2522
  store %struct._object* %120, %struct._object** %_py_decref_tmp100, align 8, !dbg !5929, !tbaa !2522
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8, !dbg !5931, !tbaa !2522
  %ob_refcnt101 = getelementptr inbounds %struct._object, %struct._object* %121, i32 0, i32 0, !dbg !5933
  %122 = load i64, i64* %ob_refcnt101, align 8, !dbg !5934, !tbaa !2551
  %dec102 = add i64 %122, -1, !dbg !5934
  store i64 %dec102, i64* %ob_refcnt101, align 8, !dbg !5934, !tbaa !2551
  %cmp103 = icmp ne i64 %dec102, 0, !dbg !5935
  br i1 %cmp103, label %if.then.105, label %if.else.106, !dbg !5936

if.then.105:                                      ; preds = %do.body.99
  br label %if.end.109, !dbg !5937

if.else.106:                                      ; preds = %do.body.99
  %123 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8, !dbg !5939, !tbaa !2522
  %ob_type107 = getelementptr inbounds %struct._object, %struct._object* %123, i32 0, i32 1, !dbg !5941
  %124 = load %struct._typeobject*, %struct._typeobject** %ob_type107, align 8, !dbg !5941, !tbaa !2588
  %tp_dealloc108 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %124, i32 0, i32 4, !dbg !5942
  %125 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc108, align 8, !dbg !5942, !tbaa !2590
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8, !dbg !5943, !tbaa !2522
  call void %125(%struct._object* %126), !dbg !5944
  br label %if.end.109

if.end.109:                                       ; preds = %if.else.106, %if.then.105
  %127 = bitcast %struct._object** %_py_decref_tmp100 to i8*, !dbg !5945
  call void @llvm.lifetime.end(i64 8, i8* %127) #2, !dbg !5945
  br label %do.cond.110, !dbg !5946

do.cond.110:                                      ; preds = %if.end.109
  br label %do.end.111, !dbg !5947

do.end.111:                                       ; preds = %do.cond.110
  %128 = load %struct._object*, %struct._object** %v, align 8, !dbg !5949, !tbaa !2522
  store %struct._object* %128, %struct._object** %retval, !dbg !5950
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.126, !dbg !5950

if.end.112:                                       ; preds = %lor.lhs.false
  br label %do.body.113, !dbg !5951

do.body.113:                                      ; preds = %if.end.112
  %129 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !5952
  call void @llvm.lifetime.start(i64 8, i8* %129) #2, !dbg !5952
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp114, metadata !1712, metadata !2526), !dbg !5954
  %130 = load %struct._object*, %struct._object** %v, align 8, !dbg !5955, !tbaa !2522
  store %struct._object* %130, %struct._object** %_py_decref_tmp114, align 8, !dbg !5954, !tbaa !2522
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !5956, !tbaa !2522
  %ob_refcnt115 = getelementptr inbounds %struct._object, %struct._object* %131, i32 0, i32 0, !dbg !5958
  %132 = load i64, i64* %ob_refcnt115, align 8, !dbg !5959, !tbaa !2551
  %dec116 = add i64 %132, -1, !dbg !5959
  store i64 %dec116, i64* %ob_refcnt115, align 8, !dbg !5959, !tbaa !2551
  %cmp117 = icmp ne i64 %dec116, 0, !dbg !5960
  br i1 %cmp117, label %if.then.119, label %if.else.120, !dbg !5961

if.then.119:                                      ; preds = %do.body.113
  br label %if.end.123, !dbg !5962

if.else.120:                                      ; preds = %do.body.113
  %133 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !5964, !tbaa !2522
  %ob_type121 = getelementptr inbounds %struct._object, %struct._object* %133, i32 0, i32 1, !dbg !5966
  %134 = load %struct._typeobject*, %struct._typeobject** %ob_type121, align 8, !dbg !5966, !tbaa !2588
  %tp_dealloc122 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %134, i32 0, i32 4, !dbg !5967
  %135 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc122, align 8, !dbg !5967, !tbaa !2590
  %136 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !5968, !tbaa !2522
  call void %135(%struct._object* %136), !dbg !5969
  br label %if.end.123

if.end.123:                                       ; preds = %if.else.120, %if.then.119
  %137 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !5970
  call void @llvm.lifetime.end(i64 8, i8* %137) #2, !dbg !5970
  br label %do.cond.124, !dbg !5972

do.cond.124:                                      ; preds = %if.end.123
  br label %do.end.125, !dbg !5973

do.end.125:                                       ; preds = %do.cond.124
  store i32 0, i32* %cleanup.dest.slot, !dbg !5975
  br label %cleanup.126, !dbg !5975

cleanup.126:                                      ; preds = %do.end.125, %do.end.111
  %138 = bitcast %struct._object** %v to i8*, !dbg !5976
  call void @llvm.lifetime.end(i64 8, i8* %138) #2, !dbg !5976
  %cleanup.dest.127 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.126
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.127, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.128, label %NewDefault.1

cleanup.cont.128:                                 ; preds = %LeafBlock.2
  br label %if.end.129, !dbg !5977

if.end.129:                                       ; preds = %cleanup.cont.128, %land.lhs.true, %if.end.73
  %139 = load %struct._object*, %struct._object** %result, align 8, !dbg !5978, !tbaa !2522
  %140 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !5979, !tbaa !2522
  %141 = load i32, i32* %outmask, align 4, !dbg !5980, !tbaa !2611
  %142 = load i32, i32* %inoutmask, align 4, !dbg !5981, !tbaa !2611
  %143 = load i32, i32* %numretvals, align 4, !dbg !5982, !tbaa !2611
  %call130 = call %struct._object* @_build_result(%struct._object* %139, %struct._object* %140, i32 %141, i32 %142, i32 %143), !dbg !5983
  store %struct._object* %call130, %struct._object** %retval, !dbg !5984
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.131, !dbg !5984

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.131

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.131

cleanup.131:                                      ; preds = %NewDefault.1, %NewDefault, %if.end.129, %if.then
  %144 = bitcast i32* %numretvals to i8*, !dbg !5985
  call void @llvm.lifetime.end(i64 4, i8* %144) #2, !dbg !5985
  %145 = bitcast i32* %outmask to i8*, !dbg !5985
  call void @llvm.lifetime.end(i64 4, i8* %145) #2, !dbg !5985
  %146 = bitcast i32* %inoutmask to i8*, !dbg !5985
  call void @llvm.lifetime.end(i64 4, i8* %146) #2, !dbg !5985
  %147 = bitcast i8** %pProc to i8*, !dbg !5985
  call void @llvm.lifetime.end(i64 8, i8* %147) #2, !dbg !5985
  %148 = bitcast %struct._object** %errcheck to i8*, !dbg !5985
  call void @llvm.lifetime.end(i64 8, i8* %148) #2, !dbg !5985
  %149 = bitcast %struct._object** %callargs to i8*, !dbg !5985
  call void @llvm.lifetime.end(i64 8, i8* %149) #2, !dbg !5985
  %150 = bitcast %struct._object** %result to i8*, !dbg !5985
  call void @llvm.lifetime.end(i64 8, i8* %150) #2, !dbg !5985
  %151 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !5985
  call void @llvm.lifetime.end(i64 8, i8* %151) #2, !dbg !5985
  %152 = bitcast %struct._object** %argtypes to i8*, !dbg !5985
  call void @llvm.lifetime.end(i64 8, i8* %152) #2, !dbg !5985
  %153 = bitcast %struct._object** %checker to i8*, !dbg !5985
  call void @llvm.lifetime.end(i64 8, i8* %153) #2, !dbg !5985
  %154 = bitcast %struct._object** %converters to i8*, !dbg !5985
  call void @llvm.lifetime.end(i64 8, i8* %154) #2, !dbg !5985
  %155 = bitcast %struct._object** %restype to i8*, !dbg !5985
  call void @llvm.lifetime.end(i64 8, i8* %155) #2, !dbg !5985
  %156 = load %struct._object*, %struct._object** %retval, !dbg !5985
  ret %struct._object* %156, !dbg !5985
}

; Function Attrs: uwtable
define internal i32 @PyCFuncPtr_traverse(%struct.PyCFuncPtrObject* %self, i32 (%struct._object*, i8*)* %visit, i8* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyCFuncPtrObject*, align 8
  %visit.addr = alloca i32 (%struct._object*, i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %vret = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %vret8 = alloca i32, align 4
  %vret22 = alloca i32, align 4
  %vret36 = alloca i32, align 4
  %vret50 = alloca i32, align 4
  %vret64 = alloca i32, align 4
  %vret78 = alloca i32, align 4
  %vret92 = alloca i32, align 4
  store %struct.PyCFuncPtrObject* %self, %struct.PyCFuncPtrObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %self.addr, metadata !1802, metadata !2526), !dbg !5986
  store i32 (%struct._object*, i8*)* %visit, i32 (%struct._object*, i8*)** %visit.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i32 (%struct._object*, i8*)** %visit.addr, metadata !1803, metadata !2526), !dbg !5987
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1804, metadata !2526), !dbg !5988
  br label %do.body, !dbg !5989

do.body:                                          ; preds = %entry
  %0 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !5990, !tbaa !2522
  %callable = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %0, i32 0, i32 10, !dbg !5992
  %1 = load %struct._object*, %struct._object** %callable, align 8, !dbg !5992, !tbaa !5993
  %tobool = icmp ne %struct._object* %1, null, !dbg !5994
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !5995

if.then:                                          ; preds = %do.body
  %2 = bitcast i32* %vret to i8*, !dbg !5996
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !5996
  call void @llvm.dbg.declare(metadata i32* %vret, metadata !1805, metadata !2526), !dbg !5998
  %3 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !5999, !tbaa !2522
  %4 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6000, !tbaa !2522
  %callable1 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %4, i32 0, i32 10, !dbg !6001
  %5 = load %struct._object*, %struct._object** %callable1, align 8, !dbg !6001, !tbaa !5993
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !6002, !tbaa !2522
  %call = call i32 %3(%struct._object* %5, i8* %6), !dbg !5999
  store i32 %call, i32* %vret, align 4, !dbg !5998, !tbaa !2611
  %7 = load i32, i32* %vret, align 4, !dbg !6003, !tbaa !2611
  %tobool2 = icmp ne i32 %7, 0, !dbg !6003
  br i1 %tobool2, label %if.then.3, label %if.end, !dbg !6005

if.then.3:                                        ; preds = %if.then
  %8 = load i32, i32* %vret, align 4, !dbg !6006, !tbaa !2611
  store i32 %8, i32* %retval, !dbg !6008
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6008

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot, !dbg !6009
  br label %cleanup, !dbg !6009

cleanup:                                          ; preds = %if.end, %if.then.3
  %9 = bitcast i32* %vret to i8*, !dbg !6011
  call void @llvm.lifetime.end(i64 4, i8* %9) #2, !dbg !6011
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.4, !dbg !6014

if.end.4:                                         ; preds = %cleanup.cont, %do.body
  br label %do.end, !dbg !6015

do.end:                                           ; preds = %if.end.4
  br label %do.body.5, !dbg !6018

do.body.5:                                        ; preds = %do.end
  %10 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6019, !tbaa !2522
  %restype = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %10, i32 0, i32 13, !dbg !6021
  %11 = load %struct._object*, %struct._object** %restype, align 8, !dbg !6021, !tbaa !5717
  %tobool6 = icmp ne %struct._object* %11, null, !dbg !6022
  br i1 %tobool6, label %if.then.7, label %if.end.17, !dbg !6023

if.then.7:                                        ; preds = %do.body.5
  %12 = bitcast i32* %vret8 to i8*, !dbg !6024
  call void @llvm.lifetime.start(i64 4, i8* %12) #2, !dbg !6024
  call void @llvm.dbg.declare(metadata i32* %vret8, metadata !1809, metadata !2526), !dbg !6026
  %13 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6027, !tbaa !2522
  %14 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6028, !tbaa !2522
  %restype9 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %14, i32 0, i32 13, !dbg !6029
  %15 = load %struct._object*, %struct._object** %restype9, align 8, !dbg !6029, !tbaa !5717
  %16 = load i8*, i8** %arg.addr, align 8, !dbg !6030, !tbaa !2522
  %call10 = call i32 %13(%struct._object* %15, i8* %16), !dbg !6027
  store i32 %call10, i32* %vret8, align 4, !dbg !6026, !tbaa !2611
  %17 = load i32, i32* %vret8, align 4, !dbg !6031, !tbaa !2611
  %tobool11 = icmp ne i32 %17, 0, !dbg !6031
  br i1 %tobool11, label %if.then.12, label %if.end.13, !dbg !6033

if.then.12:                                       ; preds = %if.then.7
  %18 = load i32, i32* %vret8, align 4, !dbg !6034, !tbaa !2611
  store i32 %18, i32* %retval, !dbg !6036
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.14, !dbg !6036

if.end.13:                                        ; preds = %if.then.7
  store i32 0, i32* %cleanup.dest.slot, !dbg !6037
  br label %cleanup.14, !dbg !6037

cleanup.14:                                       ; preds = %if.end.13, %if.then.12
  %19 = bitcast i32* %vret8 to i8*, !dbg !6039
  call void @llvm.lifetime.end(i64 4, i8* %19) #2, !dbg !6039
  %cleanup.dest.15 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.14
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.15, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.16

cleanup.cont.16:                                  ; preds = %NewDefault.1
  br label %if.end.17, !dbg !6042

if.end.17:                                        ; preds = %cleanup.cont.16, %do.body.5
  br label %do.end.18, !dbg !6043

do.end.18:                                        ; preds = %if.end.17
  br label %do.body.19, !dbg !6046

do.body.19:                                       ; preds = %do.end.18
  %20 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6047, !tbaa !2522
  %checker = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %20, i32 0, i32 14, !dbg !6049
  %21 = load %struct._object*, %struct._object** %checker, align 8, !dbg !6049, !tbaa !5740
  %tobool20 = icmp ne %struct._object* %21, null, !dbg !6050
  br i1 %tobool20, label %if.then.21, label %if.end.31, !dbg !6051

if.then.21:                                       ; preds = %do.body.19
  %22 = bitcast i32* %vret22 to i8*, !dbg !6052
  call void @llvm.lifetime.start(i64 4, i8* %22) #2, !dbg !6052
  call void @llvm.dbg.declare(metadata i32* %vret22, metadata !1813, metadata !2526), !dbg !6054
  %23 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6055, !tbaa !2522
  %24 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6056, !tbaa !2522
  %checker23 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %24, i32 0, i32 14, !dbg !6057
  %25 = load %struct._object*, %struct._object** %checker23, align 8, !dbg !6057, !tbaa !5740
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !6058, !tbaa !2522
  %call24 = call i32 %23(%struct._object* %25, i8* %26), !dbg !6055
  store i32 %call24, i32* %vret22, align 4, !dbg !6054, !tbaa !2611
  %27 = load i32, i32* %vret22, align 4, !dbg !6059, !tbaa !2611
  %tobool25 = icmp ne i32 %27, 0, !dbg !6059
  br i1 %tobool25, label %if.then.26, label %if.end.27, !dbg !6061

if.then.26:                                       ; preds = %if.then.21
  %28 = load i32, i32* %vret22, align 4, !dbg !6062, !tbaa !2611
  store i32 %28, i32* %retval, !dbg !6064
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !6064

if.end.27:                                        ; preds = %if.then.21
  store i32 0, i32* %cleanup.dest.slot, !dbg !6065
  br label %cleanup.28, !dbg !6065

cleanup.28:                                       ; preds = %if.end.27, %if.then.26
  %29 = bitcast i32* %vret22 to i8*, !dbg !6067
  call void @llvm.lifetime.end(i64 4, i8* %29) #2, !dbg !6067
  %cleanup.dest.29 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.5

LeafBlock.5:                                      ; preds = %cleanup.28
  %SwitchLeaf6 = icmp eq i32 %cleanup.dest.29, 1
  br i1 %SwitchLeaf6, label %return, label %NewDefault.4

NewDefault.4:                                     ; preds = %LeafBlock.5
  br label %cleanup.cont.30

cleanup.cont.30:                                  ; preds = %NewDefault.4
  br label %if.end.31, !dbg !6070

if.end.31:                                        ; preds = %cleanup.cont.30, %do.body.19
  br label %do.end.32, !dbg !6071

do.end.32:                                        ; preds = %if.end.31
  br label %do.body.33, !dbg !6074

do.body.33:                                       ; preds = %do.end.32
  %30 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6075, !tbaa !2522
  %errcheck = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %30, i32 0, i32 15, !dbg !6077
  %31 = load %struct._object*, %struct._object** %errcheck, align 8, !dbg !6077, !tbaa !5758
  %tobool34 = icmp ne %struct._object* %31, null, !dbg !6078
  br i1 %tobool34, label %if.then.35, label %if.end.45, !dbg !6079

if.then.35:                                       ; preds = %do.body.33
  %32 = bitcast i32* %vret36 to i8*, !dbg !6080
  call void @llvm.lifetime.start(i64 4, i8* %32) #2, !dbg !6080
  call void @llvm.dbg.declare(metadata i32* %vret36, metadata !1817, metadata !2526), !dbg !6082
  %33 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6083, !tbaa !2522
  %34 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6084, !tbaa !2522
  %errcheck37 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %34, i32 0, i32 15, !dbg !6085
  %35 = load %struct._object*, %struct._object** %errcheck37, align 8, !dbg !6085, !tbaa !5758
  %36 = load i8*, i8** %arg.addr, align 8, !dbg !6086, !tbaa !2522
  %call38 = call i32 %33(%struct._object* %35, i8* %36), !dbg !6083
  store i32 %call38, i32* %vret36, align 4, !dbg !6082, !tbaa !2611
  %37 = load i32, i32* %vret36, align 4, !dbg !6087, !tbaa !2611
  %tobool39 = icmp ne i32 %37, 0, !dbg !6087
  br i1 %tobool39, label %if.then.40, label %if.end.41, !dbg !6089

if.then.40:                                       ; preds = %if.then.35
  %38 = load i32, i32* %vret36, align 4, !dbg !6090, !tbaa !2611
  store i32 %38, i32* %retval, !dbg !6092
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.42, !dbg !6092

if.end.41:                                        ; preds = %if.then.35
  store i32 0, i32* %cleanup.dest.slot, !dbg !6093
  br label %cleanup.42, !dbg !6093

cleanup.42:                                       ; preds = %if.end.41, %if.then.40
  %39 = bitcast i32* %vret36 to i8*, !dbg !6095
  call void @llvm.lifetime.end(i64 4, i8* %39) #2, !dbg !6095
  %cleanup.dest.43 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.8

LeafBlock.8:                                      ; preds = %cleanup.42
  %SwitchLeaf9 = icmp eq i32 %cleanup.dest.43, 1
  br i1 %SwitchLeaf9, label %return, label %NewDefault.7

NewDefault.7:                                     ; preds = %LeafBlock.8
  br label %cleanup.cont.44

cleanup.cont.44:                                  ; preds = %NewDefault.7
  br label %if.end.45, !dbg !6098

if.end.45:                                        ; preds = %cleanup.cont.44, %do.body.33
  br label %do.end.46, !dbg !6099

do.end.46:                                        ; preds = %if.end.45
  br label %do.body.47, !dbg !6102

do.body.47:                                       ; preds = %do.end.46
  %40 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6103, !tbaa !2522
  %argtypes = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %40, i32 0, i32 12, !dbg !6105
  %41 = load %struct._object*, %struct._object** %argtypes, align 8, !dbg !6105, !tbaa !5749
  %tobool48 = icmp ne %struct._object* %41, null, !dbg !6106
  br i1 %tobool48, label %if.then.49, label %if.end.59, !dbg !6107

if.then.49:                                       ; preds = %do.body.47
  %42 = bitcast i32* %vret50 to i8*, !dbg !6108
  call void @llvm.lifetime.start(i64 4, i8* %42) #2, !dbg !6108
  call void @llvm.dbg.declare(metadata i32* %vret50, metadata !1821, metadata !2526), !dbg !6110
  %43 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6111, !tbaa !2522
  %44 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6112, !tbaa !2522
  %argtypes51 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %44, i32 0, i32 12, !dbg !6113
  %45 = load %struct._object*, %struct._object** %argtypes51, align 8, !dbg !6113, !tbaa !5749
  %46 = load i8*, i8** %arg.addr, align 8, !dbg !6114, !tbaa !2522
  %call52 = call i32 %43(%struct._object* %45, i8* %46), !dbg !6111
  store i32 %call52, i32* %vret50, align 4, !dbg !6110, !tbaa !2611
  %47 = load i32, i32* %vret50, align 4, !dbg !6115, !tbaa !2611
  %tobool53 = icmp ne i32 %47, 0, !dbg !6115
  br i1 %tobool53, label %if.then.54, label %if.end.55, !dbg !6117

if.then.54:                                       ; preds = %if.then.49
  %48 = load i32, i32* %vret50, align 4, !dbg !6118, !tbaa !2611
  store i32 %48, i32* %retval, !dbg !6120
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !6120

if.end.55:                                        ; preds = %if.then.49
  store i32 0, i32* %cleanup.dest.slot, !dbg !6121
  br label %cleanup.56, !dbg !6121

cleanup.56:                                       ; preds = %if.end.55, %if.then.54
  %49 = bitcast i32* %vret50 to i8*, !dbg !6123
  call void @llvm.lifetime.end(i64 4, i8* %49) #2, !dbg !6123
  %cleanup.dest.57 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.11

LeafBlock.11:                                     ; preds = %cleanup.56
  %SwitchLeaf12 = icmp eq i32 %cleanup.dest.57, 1
  br i1 %SwitchLeaf12, label %return, label %NewDefault.10

NewDefault.10:                                    ; preds = %LeafBlock.11
  br label %cleanup.cont.58

cleanup.cont.58:                                  ; preds = %NewDefault.10
  br label %if.end.59, !dbg !6126

if.end.59:                                        ; preds = %cleanup.cont.58, %do.body.47
  br label %do.end.60, !dbg !6127

do.end.60:                                        ; preds = %if.end.59
  br label %do.body.61, !dbg !6130

do.body.61:                                       ; preds = %do.end.60
  %50 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6131, !tbaa !2522
  %converters = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %50, i32 0, i32 11, !dbg !6133
  %51 = load %struct._object*, %struct._object** %converters, align 8, !dbg !6133, !tbaa !5731
  %tobool62 = icmp ne %struct._object* %51, null, !dbg !6134
  br i1 %tobool62, label %if.then.63, label %if.end.73, !dbg !6135

if.then.63:                                       ; preds = %do.body.61
  %52 = bitcast i32* %vret64 to i8*, !dbg !6136
  call void @llvm.lifetime.start(i64 4, i8* %52) #2, !dbg !6136
  call void @llvm.dbg.declare(metadata i32* %vret64, metadata !1825, metadata !2526), !dbg !6138
  %53 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6139, !tbaa !2522
  %54 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6140, !tbaa !2522
  %converters65 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %54, i32 0, i32 11, !dbg !6141
  %55 = load %struct._object*, %struct._object** %converters65, align 8, !dbg !6141, !tbaa !5731
  %56 = load i8*, i8** %arg.addr, align 8, !dbg !6142, !tbaa !2522
  %call66 = call i32 %53(%struct._object* %55, i8* %56), !dbg !6139
  store i32 %call66, i32* %vret64, align 4, !dbg !6138, !tbaa !2611
  %57 = load i32, i32* %vret64, align 4, !dbg !6143, !tbaa !2611
  %tobool67 = icmp ne i32 %57, 0, !dbg !6143
  br i1 %tobool67, label %if.then.68, label %if.end.69, !dbg !6145

if.then.68:                                       ; preds = %if.then.63
  %58 = load i32, i32* %vret64, align 4, !dbg !6146, !tbaa !2611
  store i32 %58, i32* %retval, !dbg !6148
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.70, !dbg !6148

if.end.69:                                        ; preds = %if.then.63
  store i32 0, i32* %cleanup.dest.slot, !dbg !6149
  br label %cleanup.70, !dbg !6149

cleanup.70:                                       ; preds = %if.end.69, %if.then.68
  %59 = bitcast i32* %vret64 to i8*, !dbg !6151
  call void @llvm.lifetime.end(i64 4, i8* %59) #2, !dbg !6151
  %cleanup.dest.71 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.14

LeafBlock.14:                                     ; preds = %cleanup.70
  %SwitchLeaf15 = icmp eq i32 %cleanup.dest.71, 1
  br i1 %SwitchLeaf15, label %return, label %NewDefault.13

NewDefault.13:                                    ; preds = %LeafBlock.14
  br label %cleanup.cont.72

cleanup.cont.72:                                  ; preds = %NewDefault.13
  br label %if.end.73, !dbg !6154

if.end.73:                                        ; preds = %cleanup.cont.72, %do.body.61
  br label %do.end.74, !dbg !6155

do.end.74:                                        ; preds = %if.end.73
  br label %do.body.75, !dbg !6158

do.body.75:                                       ; preds = %do.end.74
  %60 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6159, !tbaa !2522
  %paramflags = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %60, i32 0, i32 16, !dbg !6161
  %61 = load %struct._object*, %struct._object** %paramflags, align 8, !dbg !6161, !tbaa !6162
  %tobool76 = icmp ne %struct._object* %61, null, !dbg !6163
  br i1 %tobool76, label %if.then.77, label %if.end.87, !dbg !6164

if.then.77:                                       ; preds = %do.body.75
  %62 = bitcast i32* %vret78 to i8*, !dbg !6165
  call void @llvm.lifetime.start(i64 4, i8* %62) #2, !dbg !6165
  call void @llvm.dbg.declare(metadata i32* %vret78, metadata !1829, metadata !2526), !dbg !6167
  %63 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6168, !tbaa !2522
  %64 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6169, !tbaa !2522
  %paramflags79 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %64, i32 0, i32 16, !dbg !6170
  %65 = load %struct._object*, %struct._object** %paramflags79, align 8, !dbg !6170, !tbaa !6162
  %66 = load i8*, i8** %arg.addr, align 8, !dbg !6171, !tbaa !2522
  %call80 = call i32 %63(%struct._object* %65, i8* %66), !dbg !6168
  store i32 %call80, i32* %vret78, align 4, !dbg !6167, !tbaa !2611
  %67 = load i32, i32* %vret78, align 4, !dbg !6172, !tbaa !2611
  %tobool81 = icmp ne i32 %67, 0, !dbg !6172
  br i1 %tobool81, label %if.then.82, label %if.end.83, !dbg !6174

if.then.82:                                       ; preds = %if.then.77
  %68 = load i32, i32* %vret78, align 4, !dbg !6175, !tbaa !2611
  store i32 %68, i32* %retval, !dbg !6177
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.84, !dbg !6177

if.end.83:                                        ; preds = %if.then.77
  store i32 0, i32* %cleanup.dest.slot, !dbg !6178
  br label %cleanup.84, !dbg !6178

cleanup.84:                                       ; preds = %if.end.83, %if.then.82
  %69 = bitcast i32* %vret78 to i8*, !dbg !6180
  call void @llvm.lifetime.end(i64 4, i8* %69) #2, !dbg !6180
  %cleanup.dest.85 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.17

LeafBlock.17:                                     ; preds = %cleanup.84
  %SwitchLeaf18 = icmp eq i32 %cleanup.dest.85, 1
  br i1 %SwitchLeaf18, label %return, label %NewDefault.16

NewDefault.16:                                    ; preds = %LeafBlock.17
  br label %cleanup.cont.86

cleanup.cont.86:                                  ; preds = %NewDefault.16
  br label %if.end.87, !dbg !6183

if.end.87:                                        ; preds = %cleanup.cont.86, %do.body.75
  br label %do.end.88, !dbg !6184

do.end.88:                                        ; preds = %if.end.87
  br label %do.body.89, !dbg !6187

do.body.89:                                       ; preds = %do.end.88
  %70 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6188, !tbaa !2522
  %thunk = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %70, i32 0, i32 9, !dbg !6190
  %71 = load %struct.CThunkObject*, %struct.CThunkObject** %thunk, align 8, !dbg !6190, !tbaa !6191
  %tobool90 = icmp ne %struct.CThunkObject* %71, null, !dbg !6192
  br i1 %tobool90, label %if.then.91, label %if.end.101, !dbg !6193

if.then.91:                                       ; preds = %do.body.89
  %72 = bitcast i32* %vret92 to i8*, !dbg !6194
  call void @llvm.lifetime.start(i64 4, i8* %72) #2, !dbg !6194
  call void @llvm.dbg.declare(metadata i32* %vret92, metadata !1833, metadata !2526), !dbg !6196
  %73 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6197, !tbaa !2522
  %74 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6198, !tbaa !2522
  %thunk93 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %74, i32 0, i32 9, !dbg !6199
  %75 = load %struct.CThunkObject*, %struct.CThunkObject** %thunk93, align 8, !dbg !6199, !tbaa !6191
  %76 = bitcast %struct.CThunkObject* %75 to %struct._object*, !dbg !6200
  %77 = load i8*, i8** %arg.addr, align 8, !dbg !6201, !tbaa !2522
  %call94 = call i32 %73(%struct._object* %76, i8* %77), !dbg !6197
  store i32 %call94, i32* %vret92, align 4, !dbg !6196, !tbaa !2611
  %78 = load i32, i32* %vret92, align 4, !dbg !6202, !tbaa !2611
  %tobool95 = icmp ne i32 %78, 0, !dbg !6202
  br i1 %tobool95, label %if.then.96, label %if.end.97, !dbg !6204

if.then.96:                                       ; preds = %if.then.91
  %79 = load i32, i32* %vret92, align 4, !dbg !6205, !tbaa !2611
  store i32 %79, i32* %retval, !dbg !6207
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.98, !dbg !6207

if.end.97:                                        ; preds = %if.then.91
  store i32 0, i32* %cleanup.dest.slot, !dbg !6208
  br label %cleanup.98, !dbg !6208

cleanup.98:                                       ; preds = %if.end.97, %if.then.96
  %80 = bitcast i32* %vret92 to i8*, !dbg !6210
  call void @llvm.lifetime.end(i64 4, i8* %80) #2, !dbg !6210
  %cleanup.dest.99 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.20

LeafBlock.20:                                     ; preds = %cleanup.98
  %SwitchLeaf21 = icmp eq i32 %cleanup.dest.99, 1
  br i1 %SwitchLeaf21, label %return, label %NewDefault.19

NewDefault.19:                                    ; preds = %LeafBlock.20
  br label %cleanup.cont.100

cleanup.cont.100:                                 ; preds = %NewDefault.19
  br label %if.end.101, !dbg !6213

if.end.101:                                       ; preds = %cleanup.cont.100, %do.body.89
  br label %do.end.102, !dbg !6214

do.end.102:                                       ; preds = %if.end.101
  %81 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6217, !tbaa !2522
  %82 = bitcast %struct.PyCFuncPtrObject* %81 to %struct.tagCDataObject*, !dbg !6218
  %83 = load i32 (%struct._object*, i8*)*, i32 (%struct._object*, i8*)** %visit.addr, align 8, !dbg !6219, !tbaa !2522
  %84 = load i8*, i8** %arg.addr, align 8, !dbg !6220, !tbaa !2522
  %call103 = call i32 @PyCData_traverse(%struct.tagCDataObject* %82, i32 (%struct._object*, i8*)* %83, i8* %84), !dbg !6221
  store i32 %call103, i32* %retval, !dbg !6222
  br label %return, !dbg !6222

return:                                           ; preds = %LeafBlock.20, %LeafBlock.17, %LeafBlock.14, %LeafBlock.11, %LeafBlock.8, %LeafBlock.5, %LeafBlock.2, %LeafBlock, %do.end.102
  %85 = load i32, i32* %retval, !dbg !6223
  ret i32 %85, !dbg !6223
}

; Function Attrs: uwtable
define internal i32 @PyCFuncPtr_clear(%struct.PyCFuncPtrObject* %self) #0 {
entry:
  %self.addr = alloca %struct.PyCFuncPtrObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  %_py_tmp29 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  %_py_tmp49 = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  %_py_tmp69 = alloca %struct._object*, align 8
  %_py_decref_tmp74 = alloca %struct._object*, align 8
  %_py_tmp89 = alloca %struct._object*, align 8
  %_py_decref_tmp94 = alloca %struct._object*, align 8
  %_py_tmp109 = alloca %struct._object*, align 8
  %_py_decref_tmp114 = alloca %struct._object*, align 8
  %_py_tmp129 = alloca %struct._object*, align 8
  %_py_decref_tmp134 = alloca %struct._object*, align 8
  store %struct.PyCFuncPtrObject* %self, %struct.PyCFuncPtrObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %self.addr, metadata !1839, metadata !2526), !dbg !6224
  br label %do.body, !dbg !6225

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6226
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6226
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1840, metadata !2526), !dbg !6228
  %1 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6229, !tbaa !2522
  %callable = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %1, i32 0, i32 10, !dbg !6230
  %2 = load %struct._object*, %struct._object** %callable, align 8, !dbg !6230, !tbaa !5993
  store %struct._object* %2, %struct._object** %_py_tmp, align 8, !dbg !6228, !tbaa !2522
  %3 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6231, !tbaa !2522
  %cmp = icmp ne %struct._object* %3, null, !dbg !6232
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !6233

if.then:                                          ; preds = %do.body
  %4 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6234, !tbaa !2522
  %callable1 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %4, i32 0, i32 10, !dbg !6236
  store %struct._object* null, %struct._object** %callable1, align 8, !dbg !6237, !tbaa !5993
  br label %do.body.2, !dbg !6238

do.body.2:                                        ; preds = %if.then
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6239
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !6239
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1842, metadata !2526), !dbg !6241
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !6242, !tbaa !2522
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !6241, !tbaa !2522
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6243, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !6245
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !6246, !tbaa !2551
  %dec = add i64 %8, -1, !dbg !6246
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6246, !tbaa !2551
  %cmp3 = icmp ne i64 %dec, 0, !dbg !6247
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !6248

if.then.4:                                        ; preds = %do.body.2
  br label %if.end, !dbg !6249

if.else:                                          ; preds = %do.body.2
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6251, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !6253
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6253, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !6254
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6254, !tbaa !2590
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6255, !tbaa !2522
  call void %11(%struct._object* %12), !dbg !6256
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.4
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6257
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !6257
  br label %do.cond, !dbg !6259

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !6260

do.end:                                           ; preds = %do.cond
  br label %if.end.5, !dbg !6262

if.end.5:                                         ; preds = %do.end, %do.body
  %14 = bitcast %struct._object** %_py_tmp to i8*, !dbg !6264
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !6264
  br label %do.end.7, !dbg !6267

do.end.7:                                         ; preds = %if.end.5
  br label %do.body.8, !dbg !6268

do.body.8:                                        ; preds = %do.end.7
  %15 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !6269
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !6269
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp9, metadata !1846, metadata !2526), !dbg !6271
  %16 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6272, !tbaa !2522
  %restype = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %16, i32 0, i32 13, !dbg !6273
  %17 = load %struct._object*, %struct._object** %restype, align 8, !dbg !6273, !tbaa !5717
  store %struct._object* %17, %struct._object** %_py_tmp9, align 8, !dbg !6271, !tbaa !2522
  %18 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !6274, !tbaa !2522
  %cmp10 = icmp ne %struct._object* %18, null, !dbg !6275
  br i1 %cmp10, label %if.then.11, label %if.end.25, !dbg !6276

if.then.11:                                       ; preds = %do.body.8
  %19 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6277, !tbaa !2522
  %restype12 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %19, i32 0, i32 13, !dbg !6279
  store %struct._object* null, %struct._object** %restype12, align 8, !dbg !6280, !tbaa !5717
  br label %do.body.13, !dbg !6281

do.body.13:                                       ; preds = %if.then.11
  %20 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !6282
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !6282
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !1848, metadata !2526), !dbg !6284
  %21 = load %struct._object*, %struct._object** %_py_tmp9, align 8, !dbg !6285, !tbaa !2522
  store %struct._object* %21, %struct._object** %_py_decref_tmp14, align 8, !dbg !6284, !tbaa !2522
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !6286, !tbaa !2522
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !6288
  %23 = load i64, i64* %ob_refcnt15, align 8, !dbg !6289, !tbaa !2551
  %dec16 = add i64 %23, -1, !dbg !6289
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !6289, !tbaa !2551
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !6290
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !6291

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !6292

if.else.19:                                       ; preds = %do.body.13
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !6294, !tbaa !2522
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !6296
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !6296, !tbaa !2588
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !6297
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !6297, !tbaa !2590
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !6298, !tbaa !2522
  call void %26(%struct._object* %27), !dbg !6299
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %28 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !6300
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !6300
  br label %do.cond.23, !dbg !6302

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !6303

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !6305

if.end.25:                                        ; preds = %do.end.24, %do.body.8
  %29 = bitcast %struct._object** %_py_tmp9 to i8*, !dbg !6307
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !6307
  br label %do.end.27, !dbg !6308

do.end.27:                                        ; preds = %if.end.25
  br label %do.body.28, !dbg !6309

do.body.28:                                       ; preds = %do.end.27
  %30 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !6310
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !6310
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp29, metadata !1852, metadata !2526), !dbg !6312
  %31 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6313, !tbaa !2522
  %checker = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %31, i32 0, i32 14, !dbg !6314
  %32 = load %struct._object*, %struct._object** %checker, align 8, !dbg !6314, !tbaa !5740
  store %struct._object* %32, %struct._object** %_py_tmp29, align 8, !dbg !6312, !tbaa !2522
  %33 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !6315, !tbaa !2522
  %cmp30 = icmp ne %struct._object* %33, null, !dbg !6316
  br i1 %cmp30, label %if.then.31, label %if.end.45, !dbg !6317

if.then.31:                                       ; preds = %do.body.28
  %34 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6318, !tbaa !2522
  %checker32 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %34, i32 0, i32 14, !dbg !6320
  store %struct._object* null, %struct._object** %checker32, align 8, !dbg !6321, !tbaa !5740
  br label %do.body.33, !dbg !6322

do.body.33:                                       ; preds = %if.then.31
  %35 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !6323
  call void @llvm.lifetime.start(i64 8, i8* %35) #2, !dbg !6323
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !1854, metadata !2526), !dbg !6325
  %36 = load %struct._object*, %struct._object** %_py_tmp29, align 8, !dbg !6326, !tbaa !2522
  store %struct._object* %36, %struct._object** %_py_decref_tmp34, align 8, !dbg !6325, !tbaa !2522
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !6327, !tbaa !2522
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !6329
  %38 = load i64, i64* %ob_refcnt35, align 8, !dbg !6330, !tbaa !2551
  %dec36 = add i64 %38, -1, !dbg !6330
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !6330, !tbaa !2551
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !6331
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !6332

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !6333

if.else.39:                                       ; preds = %do.body.33
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !6335, !tbaa !2522
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !6337
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !6337, !tbaa !2588
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !6338
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !6338, !tbaa !2590
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !6339, !tbaa !2522
  call void %41(%struct._object* %42), !dbg !6340
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %43 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !6341
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !6341
  br label %do.cond.43, !dbg !6343

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !6344

do.end.44:                                        ; preds = %do.cond.43
  br label %if.end.45, !dbg !6346

if.end.45:                                        ; preds = %do.end.44, %do.body.28
  %44 = bitcast %struct._object** %_py_tmp29 to i8*, !dbg !6348
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !6348
  br label %do.end.47, !dbg !6349

do.end.47:                                        ; preds = %if.end.45
  br label %do.body.48, !dbg !6350

do.body.48:                                       ; preds = %do.end.47
  %45 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !6351
  call void @llvm.lifetime.start(i64 8, i8* %45) #2, !dbg !6351
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp49, metadata !1858, metadata !2526), !dbg !6353
  %46 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6354, !tbaa !2522
  %errcheck = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %46, i32 0, i32 15, !dbg !6355
  %47 = load %struct._object*, %struct._object** %errcheck, align 8, !dbg !6355, !tbaa !5758
  store %struct._object* %47, %struct._object** %_py_tmp49, align 8, !dbg !6353, !tbaa !2522
  %48 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !6356, !tbaa !2522
  %cmp50 = icmp ne %struct._object* %48, null, !dbg !6357
  br i1 %cmp50, label %if.then.51, label %if.end.65, !dbg !6358

if.then.51:                                       ; preds = %do.body.48
  %49 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6359, !tbaa !2522
  %errcheck52 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %49, i32 0, i32 15, !dbg !6361
  store %struct._object* null, %struct._object** %errcheck52, align 8, !dbg !6362, !tbaa !5758
  br label %do.body.53, !dbg !6363

do.body.53:                                       ; preds = %if.then.51
  %50 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !6364
  call void @llvm.lifetime.start(i64 8, i8* %50) #2, !dbg !6364
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp54, metadata !1860, metadata !2526), !dbg !6366
  %51 = load %struct._object*, %struct._object** %_py_tmp49, align 8, !dbg !6367, !tbaa !2522
  store %struct._object* %51, %struct._object** %_py_decref_tmp54, align 8, !dbg !6366, !tbaa !2522
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !6368, !tbaa !2522
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !6370
  %53 = load i64, i64* %ob_refcnt55, align 8, !dbg !6371, !tbaa !2551
  %dec56 = add i64 %53, -1, !dbg !6371
  store i64 %dec56, i64* %ob_refcnt55, align 8, !dbg !6371, !tbaa !2551
  %cmp57 = icmp ne i64 %dec56, 0, !dbg !6372
  br i1 %cmp57, label %if.then.58, label %if.else.59, !dbg !6373

if.then.58:                                       ; preds = %do.body.53
  br label %if.end.62, !dbg !6374

if.else.59:                                       ; preds = %do.body.53
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !6376, !tbaa !2522
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !6378
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !6378, !tbaa !2588
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !6379
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8, !dbg !6379, !tbaa !2590
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8, !dbg !6380, !tbaa !2522
  call void %56(%struct._object* %57), !dbg !6381
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.then.58
  %58 = bitcast %struct._object** %_py_decref_tmp54 to i8*, !dbg !6382
  call void @llvm.lifetime.end(i64 8, i8* %58) #2, !dbg !6382
  br label %do.cond.63, !dbg !6384

do.cond.63:                                       ; preds = %if.end.62
  br label %do.end.64, !dbg !6385

do.end.64:                                        ; preds = %do.cond.63
  br label %if.end.65, !dbg !6387

if.end.65:                                        ; preds = %do.end.64, %do.body.48
  %59 = bitcast %struct._object** %_py_tmp49 to i8*, !dbg !6389
  call void @llvm.lifetime.end(i64 8, i8* %59) #2, !dbg !6389
  br label %do.end.67, !dbg !6390

do.end.67:                                        ; preds = %if.end.65
  br label %do.body.68, !dbg !6391

do.body.68:                                       ; preds = %do.end.67
  %60 = bitcast %struct._object** %_py_tmp69 to i8*, !dbg !6392
  call void @llvm.lifetime.start(i64 8, i8* %60) #2, !dbg !6392
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp69, metadata !1864, metadata !2526), !dbg !6394
  %61 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6395, !tbaa !2522
  %argtypes = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %61, i32 0, i32 12, !dbg !6396
  %62 = load %struct._object*, %struct._object** %argtypes, align 8, !dbg !6396, !tbaa !5749
  store %struct._object* %62, %struct._object** %_py_tmp69, align 8, !dbg !6394, !tbaa !2522
  %63 = load %struct._object*, %struct._object** %_py_tmp69, align 8, !dbg !6397, !tbaa !2522
  %cmp70 = icmp ne %struct._object* %63, null, !dbg !6398
  br i1 %cmp70, label %if.then.71, label %if.end.85, !dbg !6399

if.then.71:                                       ; preds = %do.body.68
  %64 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6400, !tbaa !2522
  %argtypes72 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %64, i32 0, i32 12, !dbg !6402
  store %struct._object* null, %struct._object** %argtypes72, align 8, !dbg !6403, !tbaa !5749
  br label %do.body.73, !dbg !6404

do.body.73:                                       ; preds = %if.then.71
  %65 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !6405
  call void @llvm.lifetime.start(i64 8, i8* %65) #2, !dbg !6405
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp74, metadata !1866, metadata !2526), !dbg !6407
  %66 = load %struct._object*, %struct._object** %_py_tmp69, align 8, !dbg !6408, !tbaa !2522
  store %struct._object* %66, %struct._object** %_py_decref_tmp74, align 8, !dbg !6407, !tbaa !2522
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !6409, !tbaa !2522
  %ob_refcnt75 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 0, !dbg !6411
  %68 = load i64, i64* %ob_refcnt75, align 8, !dbg !6412, !tbaa !2551
  %dec76 = add i64 %68, -1, !dbg !6412
  store i64 %dec76, i64* %ob_refcnt75, align 8, !dbg !6412, !tbaa !2551
  %cmp77 = icmp ne i64 %dec76, 0, !dbg !6413
  br i1 %cmp77, label %if.then.78, label %if.else.79, !dbg !6414

if.then.78:                                       ; preds = %do.body.73
  br label %if.end.82, !dbg !6415

if.else.79:                                       ; preds = %do.body.73
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !6417, !tbaa !2522
  %ob_type80 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 1, !dbg !6419
  %70 = load %struct._typeobject*, %struct._typeobject** %ob_type80, align 8, !dbg !6419, !tbaa !2588
  %tp_dealloc81 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %70, i32 0, i32 4, !dbg !6420
  %71 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc81, align 8, !dbg !6420, !tbaa !2590
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8, !dbg !6421, !tbaa !2522
  call void %71(%struct._object* %72), !dbg !6422
  br label %if.end.82

if.end.82:                                        ; preds = %if.else.79, %if.then.78
  %73 = bitcast %struct._object** %_py_decref_tmp74 to i8*, !dbg !6423
  call void @llvm.lifetime.end(i64 8, i8* %73) #2, !dbg !6423
  br label %do.cond.83, !dbg !6425

do.cond.83:                                       ; preds = %if.end.82
  br label %do.end.84, !dbg !6426

do.end.84:                                        ; preds = %do.cond.83
  br label %if.end.85, !dbg !6428

if.end.85:                                        ; preds = %do.end.84, %do.body.68
  %74 = bitcast %struct._object** %_py_tmp69 to i8*, !dbg !6430
  call void @llvm.lifetime.end(i64 8, i8* %74) #2, !dbg !6430
  br label %do.end.87, !dbg !6431

do.end.87:                                        ; preds = %if.end.85
  br label %do.body.88, !dbg !6432

do.body.88:                                       ; preds = %do.end.87
  %75 = bitcast %struct._object** %_py_tmp89 to i8*, !dbg !6433
  call void @llvm.lifetime.start(i64 8, i8* %75) #2, !dbg !6433
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp89, metadata !1870, metadata !2526), !dbg !6435
  %76 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6436, !tbaa !2522
  %converters = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %76, i32 0, i32 11, !dbg !6437
  %77 = load %struct._object*, %struct._object** %converters, align 8, !dbg !6437, !tbaa !5731
  store %struct._object* %77, %struct._object** %_py_tmp89, align 8, !dbg !6435, !tbaa !2522
  %78 = load %struct._object*, %struct._object** %_py_tmp89, align 8, !dbg !6438, !tbaa !2522
  %cmp90 = icmp ne %struct._object* %78, null, !dbg !6439
  br i1 %cmp90, label %if.then.91, label %if.end.105, !dbg !6440

if.then.91:                                       ; preds = %do.body.88
  %79 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6441, !tbaa !2522
  %converters92 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %79, i32 0, i32 11, !dbg !6443
  store %struct._object* null, %struct._object** %converters92, align 8, !dbg !6444, !tbaa !5731
  br label %do.body.93, !dbg !6445

do.body.93:                                       ; preds = %if.then.91
  %80 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !6446
  call void @llvm.lifetime.start(i64 8, i8* %80) #2, !dbg !6446
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp94, metadata !1872, metadata !2526), !dbg !6448
  %81 = load %struct._object*, %struct._object** %_py_tmp89, align 8, !dbg !6449, !tbaa !2522
  store %struct._object* %81, %struct._object** %_py_decref_tmp94, align 8, !dbg !6448, !tbaa !2522
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !6450, !tbaa !2522
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 0, !dbg !6452
  %83 = load i64, i64* %ob_refcnt95, align 8, !dbg !6453, !tbaa !2551
  %dec96 = add i64 %83, -1, !dbg !6453
  store i64 %dec96, i64* %ob_refcnt95, align 8, !dbg !6453, !tbaa !2551
  %cmp97 = icmp ne i64 %dec96, 0, !dbg !6454
  br i1 %cmp97, label %if.then.98, label %if.else.99, !dbg !6455

if.then.98:                                       ; preds = %do.body.93
  br label %if.end.102, !dbg !6456

if.else.99:                                       ; preds = %do.body.93
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !6458, !tbaa !2522
  %ob_type100 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 1, !dbg !6460
  %85 = load %struct._typeobject*, %struct._typeobject** %ob_type100, align 8, !dbg !6460, !tbaa !2588
  %tp_dealloc101 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %85, i32 0, i32 4, !dbg !6461
  %86 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc101, align 8, !dbg !6461, !tbaa !2590
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !6462, !tbaa !2522
  call void %86(%struct._object* %87), !dbg !6463
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.99, %if.then.98
  %88 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !6464
  call void @llvm.lifetime.end(i64 8, i8* %88) #2, !dbg !6464
  br label %do.cond.103, !dbg !6466

do.cond.103:                                      ; preds = %if.end.102
  br label %do.end.104, !dbg !6467

do.end.104:                                       ; preds = %do.cond.103
  br label %if.end.105, !dbg !6469

if.end.105:                                       ; preds = %do.end.104, %do.body.88
  %89 = bitcast %struct._object** %_py_tmp89 to i8*, !dbg !6471
  call void @llvm.lifetime.end(i64 8, i8* %89) #2, !dbg !6471
  br label %do.end.107, !dbg !6472

do.end.107:                                       ; preds = %if.end.105
  br label %do.body.108, !dbg !6473

do.body.108:                                      ; preds = %do.end.107
  %90 = bitcast %struct._object** %_py_tmp109 to i8*, !dbg !6474
  call void @llvm.lifetime.start(i64 8, i8* %90) #2, !dbg !6474
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp109, metadata !1876, metadata !2526), !dbg !6476
  %91 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6477, !tbaa !2522
  %paramflags = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %91, i32 0, i32 16, !dbg !6478
  %92 = load %struct._object*, %struct._object** %paramflags, align 8, !dbg !6478, !tbaa !6162
  store %struct._object* %92, %struct._object** %_py_tmp109, align 8, !dbg !6476, !tbaa !2522
  %93 = load %struct._object*, %struct._object** %_py_tmp109, align 8, !dbg !6479, !tbaa !2522
  %cmp110 = icmp ne %struct._object* %93, null, !dbg !6480
  br i1 %cmp110, label %if.then.111, label %if.end.125, !dbg !6481

if.then.111:                                      ; preds = %do.body.108
  %94 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6482, !tbaa !2522
  %paramflags112 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %94, i32 0, i32 16, !dbg !6484
  store %struct._object* null, %struct._object** %paramflags112, align 8, !dbg !6485, !tbaa !6162
  br label %do.body.113, !dbg !6486

do.body.113:                                      ; preds = %if.then.111
  %95 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !6487
  call void @llvm.lifetime.start(i64 8, i8* %95) #2, !dbg !6487
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp114, metadata !1878, metadata !2526), !dbg !6489
  %96 = load %struct._object*, %struct._object** %_py_tmp109, align 8, !dbg !6490, !tbaa !2522
  store %struct._object* %96, %struct._object** %_py_decref_tmp114, align 8, !dbg !6489, !tbaa !2522
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !6491, !tbaa !2522
  %ob_refcnt115 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 0, !dbg !6493
  %98 = load i64, i64* %ob_refcnt115, align 8, !dbg !6494, !tbaa !2551
  %dec116 = add i64 %98, -1, !dbg !6494
  store i64 %dec116, i64* %ob_refcnt115, align 8, !dbg !6494, !tbaa !2551
  %cmp117 = icmp ne i64 %dec116, 0, !dbg !6495
  br i1 %cmp117, label %if.then.118, label %if.else.119, !dbg !6496

if.then.118:                                      ; preds = %do.body.113
  br label %if.end.122, !dbg !6497

if.else.119:                                      ; preds = %do.body.113
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !6499, !tbaa !2522
  %ob_type120 = getelementptr inbounds %struct._object, %struct._object* %99, i32 0, i32 1, !dbg !6501
  %100 = load %struct._typeobject*, %struct._typeobject** %ob_type120, align 8, !dbg !6501, !tbaa !2588
  %tp_dealloc121 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %100, i32 0, i32 4, !dbg !6502
  %101 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc121, align 8, !dbg !6502, !tbaa !2590
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp114, align 8, !dbg !6503, !tbaa !2522
  call void %101(%struct._object* %102), !dbg !6504
  br label %if.end.122

if.end.122:                                       ; preds = %if.else.119, %if.then.118
  %103 = bitcast %struct._object** %_py_decref_tmp114 to i8*, !dbg !6505
  call void @llvm.lifetime.end(i64 8, i8* %103) #2, !dbg !6505
  br label %do.cond.123, !dbg !6507

do.cond.123:                                      ; preds = %if.end.122
  br label %do.end.124, !dbg !6508

do.end.124:                                       ; preds = %do.cond.123
  br label %if.end.125, !dbg !6510

if.end.125:                                       ; preds = %do.end.124, %do.body.108
  %104 = bitcast %struct._object** %_py_tmp109 to i8*, !dbg !6512
  call void @llvm.lifetime.end(i64 8, i8* %104) #2, !dbg !6512
  br label %do.end.127, !dbg !6513

do.end.127:                                       ; preds = %if.end.125
  br label %do.body.128, !dbg !6514

do.body.128:                                      ; preds = %do.end.127
  %105 = bitcast %struct._object** %_py_tmp129 to i8*, !dbg !6515
  call void @llvm.lifetime.start(i64 8, i8* %105) #2, !dbg !6515
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp129, metadata !1882, metadata !2526), !dbg !6517
  %106 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6518, !tbaa !2522
  %thunk = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %106, i32 0, i32 9, !dbg !6519
  %107 = load %struct.CThunkObject*, %struct.CThunkObject** %thunk, align 8, !dbg !6519, !tbaa !6191
  %108 = bitcast %struct.CThunkObject* %107 to %struct._object*, !dbg !6520
  store %struct._object* %108, %struct._object** %_py_tmp129, align 8, !dbg !6517, !tbaa !2522
  %109 = load %struct._object*, %struct._object** %_py_tmp129, align 8, !dbg !6521, !tbaa !2522
  %cmp130 = icmp ne %struct._object* %109, null, !dbg !6522
  br i1 %cmp130, label %if.then.131, label %if.end.145, !dbg !6523

if.then.131:                                      ; preds = %do.body.128
  %110 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6524, !tbaa !2522
  %thunk132 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %110, i32 0, i32 9, !dbg !6526
  store %struct.CThunkObject* null, %struct.CThunkObject** %thunk132, align 8, !dbg !6527, !tbaa !6191
  br label %do.body.133, !dbg !6528

do.body.133:                                      ; preds = %if.then.131
  %111 = bitcast %struct._object** %_py_decref_tmp134 to i8*, !dbg !6529
  call void @llvm.lifetime.start(i64 8, i8* %111) #2, !dbg !6529
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp134, metadata !1884, metadata !2526), !dbg !6531
  %112 = load %struct._object*, %struct._object** %_py_tmp129, align 8, !dbg !6532, !tbaa !2522
  store %struct._object* %112, %struct._object** %_py_decref_tmp134, align 8, !dbg !6531, !tbaa !2522
  %113 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !6533, !tbaa !2522
  %ob_refcnt135 = getelementptr inbounds %struct._object, %struct._object* %113, i32 0, i32 0, !dbg !6535
  %114 = load i64, i64* %ob_refcnt135, align 8, !dbg !6536, !tbaa !2551
  %dec136 = add i64 %114, -1, !dbg !6536
  store i64 %dec136, i64* %ob_refcnt135, align 8, !dbg !6536, !tbaa !2551
  %cmp137 = icmp ne i64 %dec136, 0, !dbg !6537
  br i1 %cmp137, label %if.then.138, label %if.else.139, !dbg !6538

if.then.138:                                      ; preds = %do.body.133
  br label %if.end.142, !dbg !6539

if.else.139:                                      ; preds = %do.body.133
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !6541, !tbaa !2522
  %ob_type140 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 1, !dbg !6543
  %116 = load %struct._typeobject*, %struct._typeobject** %ob_type140, align 8, !dbg !6543, !tbaa !2588
  %tp_dealloc141 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %116, i32 0, i32 4, !dbg !6544
  %117 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc141, align 8, !dbg !6544, !tbaa !2590
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp134, align 8, !dbg !6545, !tbaa !2522
  call void %117(%struct._object* %118), !dbg !6546
  br label %if.end.142

if.end.142:                                       ; preds = %if.else.139, %if.then.138
  %119 = bitcast %struct._object** %_py_decref_tmp134 to i8*, !dbg !6547
  call void @llvm.lifetime.end(i64 8, i8* %119) #2, !dbg !6547
  br label %do.cond.143, !dbg !6549

do.cond.143:                                      ; preds = %if.end.142
  br label %do.end.144, !dbg !6550

do.end.144:                                       ; preds = %do.cond.143
  br label %if.end.145, !dbg !6552

if.end.145:                                       ; preds = %do.end.144, %do.body.128
  %120 = bitcast %struct._object** %_py_tmp129 to i8*, !dbg !6554
  call void @llvm.lifetime.end(i64 8, i8* %120) #2, !dbg !6554
  br label %do.end.147, !dbg !6555

do.end.147:                                       ; preds = %if.end.145
  %121 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !6556, !tbaa !2522
  %122 = bitcast %struct.PyCFuncPtrObject* %121 to %struct.tagCDataObject*, !dbg !6557
  %call = call i32 @PyCData_clear(%struct.tagCDataObject* %122), !dbg !6558
  ret i32 %call, !dbg !6559
}

; Function Attrs: uwtable
define internal %struct._object* @PyCFuncPtr_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %self = alloca %struct.PyCFuncPtrObject*, align 8
  %callable = alloca %struct._object*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %thunk = alloca %struct.CThunkObject*, align 8
  %cleanup.dest.slot = alloca i32
  %ob = alloca %struct.tagCDataObject*, align 8
  %ptr = alloca i8*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp67 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1972, metadata !2526), !dbg !6560
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1973, metadata !2526), !dbg !6561
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1974, metadata !2526), !dbg !6562
  %0 = bitcast %struct.PyCFuncPtrObject** %self to i8*, !dbg !6563
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6563
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %self, metadata !1975, metadata !2526), !dbg !6564
  %1 = bitcast %struct._object** %callable to i8*, !dbg !6565
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6565
  call void @llvm.dbg.declare(metadata %struct._object** %callable, metadata !1976, metadata !2526), !dbg !6566
  %2 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !6567
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !6567
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !1977, metadata !2526), !dbg !6568
  %3 = bitcast %struct.CThunkObject** %thunk to i8*, !dbg !6569
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !6569
  call void @llvm.dbg.declare(metadata %struct.CThunkObject** %thunk, metadata !1978, metadata !2526), !dbg !6570
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6571, !tbaa !2522
  %5 = bitcast %struct._object* %4 to %struct.PyVarObject*, !dbg !6573
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %5, i32 0, i32 1, !dbg !6574
  %6 = load i64, i64* %ob_size, align 8, !dbg !6574, !tbaa !5784
  %cmp = icmp eq i64 %6, 0, !dbg !6575
  br i1 %cmp, label %if.then, label %if.end, !dbg !6576

if.then:                                          ; preds = %entry
  %7 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6577, !tbaa !2522
  %8 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6578, !tbaa !2522
  %9 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !6579, !tbaa !2522
  %call = call %struct._object* @GenericPyCData_new(%struct._typeobject* %7, %struct._object* %8, %struct._object* %9), !dbg !6580
  store %struct._object* %call, %struct._object** %retval, !dbg !6581
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.79, !dbg !6581

if.end:                                           ; preds = %entry
  %10 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6582, !tbaa !2522
  %11 = bitcast %struct._object* %10 to %struct.PyVarObject*, !dbg !6584
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1, !dbg !6585
  %12 = load i64, i64* %ob_size1, align 8, !dbg !6585, !tbaa !5784
  %cmp2 = icmp sle i64 1, %12, !dbg !6586
  br i1 %cmp2, label %land.lhs.true, label %if.end.6, !dbg !6587

land.lhs.true:                                    ; preds = %if.end
  %13 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6588, !tbaa !2522
  %14 = bitcast %struct._object* %13 to %struct.PyTupleObject*, !dbg !6590
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %14, i32 0, i32 1, !dbg !6591
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !6592
  %15 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !6592, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !6593
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6593, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 19, !dbg !6594
  %17 = load i64, i64* %tp_flags, align 8, !dbg !6594, !tbaa !2849
  %and = and i64 %17, 67108864, !dbg !6595
  %cmp3 = icmp ne i64 %and, 0, !dbg !6596
  br i1 %cmp3, label %if.then.4, label %if.end.6, !dbg !6597

if.then.4:                                        ; preds = %land.lhs.true
  %18 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6598, !tbaa !2522
  %19 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6599, !tbaa !2522
  %20 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !6600, !tbaa !2522
  %call5 = call %struct._object* @PyCFuncPtr_FromDll(%struct._typeobject* %18, %struct._object* %19, %struct._object* %20), !dbg !6601
  store %struct._object* %call5, %struct._object** %retval, !dbg !6602
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.79, !dbg !6602

if.end.6:                                         ; preds = %land.lhs.true, %if.end
  %21 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6603, !tbaa !2522
  %22 = bitcast %struct._object* %21 to %struct.PyVarObject*, !dbg !6604
  %ob_size7 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %22, i32 0, i32 1, !dbg !6605
  %23 = load i64, i64* %ob_size7, align 8, !dbg !6605, !tbaa !5784
  %cmp8 = icmp eq i64 1, %23, !dbg !6606
  br i1 %cmp8, label %land.lhs.true.9, label %if.end.30, !dbg !6607

land.lhs.true.9:                                  ; preds = %if.end.6
  %24 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6608, !tbaa !2522
  %25 = bitcast %struct._object* %24 to %struct.PyTupleObject*, !dbg !6610
  %ob_item10 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %25, i32 0, i32 1, !dbg !6611
  %arrayidx11 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item10, i32 0, i64 0, !dbg !6612
  %26 = load %struct._object*, %struct._object** %arrayidx11, align 8, !dbg !6612, !tbaa !2522
  %ob_type12 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !6613
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type12, align 8, !dbg !6613, !tbaa !2588
  %tp_flags13 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 19, !dbg !6614
  %28 = load i64, i64* %tp_flags13, align 8, !dbg !6614, !tbaa !2849
  %and14 = and i64 %28, 16777216, !dbg !6615
  %cmp15 = icmp ne i64 %and14, 0, !dbg !6616
  br i1 %cmp15, label %if.then.16, label %if.end.30, !dbg !6617

if.then.16:                                       ; preds = %land.lhs.true.9
  %29 = bitcast %struct.tagCDataObject** %ob to i8*, !dbg !6618
  call void @llvm.lifetime.start(i64 8, i8* %29) #2, !dbg !6618
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %ob, metadata !1979, metadata !2526), !dbg !6619
  %30 = bitcast i8** %ptr to i8*, !dbg !6620
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !6620
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !1982, metadata !2526), !dbg !6621
  %31 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6622, !tbaa !2522
  %32 = bitcast %struct._object* %31 to %struct.PyTupleObject*, !dbg !6623
  %ob_item17 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %32, i32 0, i32 1, !dbg !6624
  %arrayidx18 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item17, i32 0, i64 0, !dbg !6625
  %33 = load %struct._object*, %struct._object** %arrayidx18, align 8, !dbg !6625, !tbaa !2522
  %call19 = call i8* @PyLong_AsVoidPtr(%struct._object* %33), !dbg !6626
  store i8* %call19, i8** %ptr, align 8, !dbg !6621, !tbaa !2522
  %34 = load i8*, i8** %ptr, align 8, !dbg !6627, !tbaa !2522
  %cmp20 = icmp eq i8* %34, null, !dbg !6629
  br i1 %cmp20, label %land.lhs.true.21, label %if.end.24, !dbg !6630

land.lhs.true.21:                                 ; preds = %if.then.16
  %call22 = call %struct._object* @PyErr_Occurred(), !dbg !6631
  %tobool = icmp ne %struct._object* %call22, null, !dbg !6631
  br i1 %tobool, label %if.then.23, label %if.end.24, !dbg !6633

if.then.23:                                       ; preds = %land.lhs.true.21
  store %struct._object* null, %struct._object** %retval, !dbg !6634
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6634

if.end.24:                                        ; preds = %land.lhs.true.21, %if.then.16
  %35 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6635, !tbaa !2522
  %36 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6636, !tbaa !2522
  %37 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !6637, !tbaa !2522
  %call25 = call %struct._object* @GenericPyCData_new(%struct._typeobject* %35, %struct._object* %36, %struct._object* %37), !dbg !6638
  %38 = bitcast %struct._object* %call25 to %struct.tagCDataObject*, !dbg !6639
  store %struct.tagCDataObject* %38, %struct.tagCDataObject** %ob, align 8, !dbg !6640, !tbaa !2522
  %39 = load %struct.tagCDataObject*, %struct.tagCDataObject** %ob, align 8, !dbg !6641, !tbaa !2522
  %cmp26 = icmp eq %struct.tagCDataObject* %39, null, !dbg !6643
  br i1 %cmp26, label %if.then.27, label %if.end.28, !dbg !6644

if.then.27:                                       ; preds = %if.end.24
  store %struct._object* null, %struct._object** %retval, !dbg !6645
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6645

if.end.28:                                        ; preds = %if.end.24
  %40 = load i8*, i8** %ptr, align 8, !dbg !6646, !tbaa !2522
  %41 = load %struct.tagCDataObject*, %struct.tagCDataObject** %ob, align 8, !dbg !6647, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %41, i32 0, i32 1, !dbg !6648
  %42 = load i8*, i8** %b_ptr, align 8, !dbg !6648, !tbaa !4817
  %43 = bitcast i8* %42 to i8**, !dbg !6649
  store i8* %40, i8** %43, align 8, !dbg !6650, !tbaa !2522
  %44 = load %struct.tagCDataObject*, %struct.tagCDataObject** %ob, align 8, !dbg !6651, !tbaa !2522
  %45 = bitcast %struct.tagCDataObject* %44 to %struct._object*, !dbg !6652
  store %struct._object* %45, %struct._object** %retval, !dbg !6653
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6653

cleanup:                                          ; preds = %if.end.28, %if.then.27, %if.then.23
  %46 = bitcast i8** %ptr to i8*, !dbg !6654
  call void @llvm.lifetime.end(i64 8, i8* %46) #2, !dbg !6654
  %47 = bitcast %struct.tagCDataObject** %ob to i8*, !dbg !6654
  call void @llvm.lifetime.end(i64 8, i8* %47) #2, !dbg !6654
  br label %cleanup.79

if.end.30:                                        ; preds = %land.lhs.true.9, %if.end.6
  %48 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6655, !tbaa !2522
  %call31 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.153, i32 0, i32 0), %struct._object** %callable), !dbg !6657
  %tobool32 = icmp ne i32 %call31, 0, !dbg !6657
  br i1 %tobool32, label %if.end.34, label %if.then.33, !dbg !6658

if.then.33:                                       ; preds = %if.end.30
  store %struct._object* null, %struct._object** %retval, !dbg !6659
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.79, !dbg !6659

if.end.34:                                        ; preds = %if.end.30
  %49 = load %struct._object*, %struct._object** %callable, align 8, !dbg !6660, !tbaa !2522
  %call35 = call i32 @PyCallable_Check(%struct._object* %49), !dbg !6662
  %tobool36 = icmp ne i32 %call35, 0, !dbg !6662
  br i1 %tobool36, label %if.end.38, label %if.then.37, !dbg !6663

if.then.37:                                       ; preds = %if.end.34
  %50 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6664, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %50, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.154, i32 0, i32 0)), !dbg !6666
  store %struct._object* null, %struct._object** %retval, !dbg !6667
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.79, !dbg !6667

if.end.38:                                        ; preds = %if.end.34
  %51 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6668, !tbaa !2522
  %52 = bitcast %struct._typeobject* %51 to %struct._object*, !dbg !6669
  %call39 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %52), !dbg !6670
  store %struct.StgDictObject* %call39, %struct.StgDictObject** %dict, align 8, !dbg !6671, !tbaa !2522
  %53 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !6672, !tbaa !2522
  %tobool40 = icmp ne %struct.StgDictObject* %53, null, !dbg !6672
  br i1 %tobool40, label %lor.lhs.false, label %if.then.42, !dbg !6674

lor.lhs.false:                                    ; preds = %if.end.38
  %54 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !6675, !tbaa !2522
  %argtypes = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %54, i32 0, i32 9, !dbg !6677
  %55 = load %struct._object*, %struct._object** %argtypes, align 8, !dbg !6677, !tbaa !5754
  %tobool41 = icmp ne %struct._object* %55, null, !dbg !6678
  br i1 %tobool41, label %if.end.43, label %if.then.42, !dbg !6679

if.then.42:                                       ; preds = %lor.lhs.false, %if.end.38
  %56 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6680, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %56, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.155, i32 0, i32 0)), !dbg !6682
  store %struct._object* null, %struct._object** %retval, !dbg !6683
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.79, !dbg !6683

if.end.43:                                        ; preds = %lor.lhs.false
  %57 = load %struct._object*, %struct._object** %callable, align 8, !dbg !6684, !tbaa !2522
  %58 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !6685, !tbaa !2522
  %argtypes44 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %58, i32 0, i32 9, !dbg !6686
  %59 = load %struct._object*, %struct._object** %argtypes44, align 8, !dbg !6686, !tbaa !5754
  %60 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !6687, !tbaa !2522
  %restype = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %60, i32 0, i32 11, !dbg !6688
  %61 = load %struct._object*, %struct._object** %restype, align 8, !dbg !6688, !tbaa !5725
  %62 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !6689, !tbaa !2522
  %flags = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %62, i32 0, i32 13, !dbg !6690
  %63 = load i32, i32* %flags, align 4, !dbg !6690, !tbaa !3128
  %call45 = call %struct.CThunkObject* @_ctypes_alloc_callback(%struct._object* %57, %struct._object* %59, %struct._object* %61, i32 %63), !dbg !6691
  store %struct.CThunkObject* %call45, %struct.CThunkObject** %thunk, align 8, !dbg !6692, !tbaa !2522
  %64 = load %struct.CThunkObject*, %struct.CThunkObject** %thunk, align 8, !dbg !6693, !tbaa !2522
  %tobool46 = icmp ne %struct.CThunkObject* %64, null, !dbg !6693
  br i1 %tobool46, label %if.end.48, label %if.then.47, !dbg !6695

if.then.47:                                       ; preds = %if.end.43
  store %struct._object* null, %struct._object** %retval, !dbg !6696
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.79, !dbg !6696

if.end.48:                                        ; preds = %if.end.43
  %65 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6697, !tbaa !2522
  %66 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6698, !tbaa !2522
  %67 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !6699, !tbaa !2522
  %call49 = call %struct._object* @GenericPyCData_new(%struct._typeobject* %65, %struct._object* %66, %struct._object* %67), !dbg !6700
  %68 = bitcast %struct._object* %call49 to %struct.PyCFuncPtrObject*, !dbg !6701
  store %struct.PyCFuncPtrObject* %68, %struct.PyCFuncPtrObject** %self, align 8, !dbg !6702, !tbaa !2522
  %69 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !6703, !tbaa !2522
  %cmp50 = icmp eq %struct.PyCFuncPtrObject* %69, null, !dbg !6704
  br i1 %cmp50, label %if.then.51, label %if.end.56, !dbg !6705

if.then.51:                                       ; preds = %if.end.48
  br label %do.body, !dbg !6706

do.body:                                          ; preds = %if.then.51
  %70 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6707
  call void @llvm.lifetime.start(i64 8, i8* %70) #2, !dbg !6707
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1983, metadata !2526), !dbg !6709
  %71 = load %struct.CThunkObject*, %struct.CThunkObject** %thunk, align 8, !dbg !6710, !tbaa !2522
  %72 = bitcast %struct.CThunkObject* %71 to %struct._object*, !dbg !6711
  store %struct._object* %72, %struct._object** %_py_decref_tmp, align 8, !dbg !6709, !tbaa !2522
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6712, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 0, !dbg !6714
  %74 = load i64, i64* %ob_refcnt, align 8, !dbg !6715, !tbaa !2551
  %dec = add i64 %74, -1, !dbg !6715
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6715, !tbaa !2551
  %cmp52 = icmp ne i64 %dec, 0, !dbg !6716
  br i1 %cmp52, label %if.then.53, label %if.else, !dbg !6717

if.then.53:                                       ; preds = %do.body
  br label %if.end.55, !dbg !6718

if.else:                                          ; preds = %do.body
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6720, !tbaa !2522
  %ob_type54 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 1, !dbg !6722
  %76 = load %struct._typeobject*, %struct._typeobject** %ob_type54, align 8, !dbg !6722, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %76, i32 0, i32 4, !dbg !6723
  %77 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6723, !tbaa !2590
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6724, !tbaa !2522
  call void %77(%struct._object* %78), !dbg !6725
  br label %if.end.55

if.end.55:                                        ; preds = %if.else, %if.then.53
  %79 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6726
  call void @llvm.lifetime.end(i64 8, i8* %79) #2, !dbg !6726
  br label %do.cond, !dbg !6728

do.cond:                                          ; preds = %if.end.55
  br label %do.end, !dbg !6729

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !6731
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.79, !dbg !6731

if.end.56:                                        ; preds = %if.end.48
  %80 = load %struct._object*, %struct._object** %callable, align 8, !dbg !6732, !tbaa !2522
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 0, !dbg !6733
  %81 = load i64, i64* %ob_refcnt57, align 8, !dbg !6734, !tbaa !2551
  %inc = add i64 %81, 1, !dbg !6734
  store i64 %inc, i64* %ob_refcnt57, align 8, !dbg !6734, !tbaa !2551
  %82 = load %struct._object*, %struct._object** %callable, align 8, !dbg !6735, !tbaa !2522
  %83 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !6736, !tbaa !2522
  %callable58 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %83, i32 0, i32 10, !dbg !6737
  store %struct._object* %82, %struct._object** %callable58, align 8, !dbg !6738, !tbaa !5993
  %84 = load %struct.CThunkObject*, %struct.CThunkObject** %thunk, align 8, !dbg !6739, !tbaa !2522
  %85 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !6740, !tbaa !2522
  %thunk59 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %85, i32 0, i32 9, !dbg !6741
  store %struct.CThunkObject* %84, %struct.CThunkObject** %thunk59, align 8, !dbg !6742, !tbaa !6191
  %86 = load %struct.CThunkObject*, %struct.CThunkObject** %thunk, align 8, !dbg !6743, !tbaa !2522
  %pcl_exec = getelementptr inbounds %struct.CThunkObject, %struct.CThunkObject* %86, i32 0, i32 2, !dbg !6744
  %87 = load i8*, i8** %pcl_exec, align 8, !dbg !6744, !tbaa !6745
  %88 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !6748, !tbaa !2522
  %b_ptr60 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %88, i32 0, i32 1, !dbg !6749
  %89 = load i8*, i8** %b_ptr60, align 8, !dbg !6749, !tbaa !5762
  %90 = bitcast i8* %89 to i8**, !dbg !6750
  store i8* %87, i8** %90, align 8, !dbg !6751, !tbaa !2522
  %91 = load %struct.CThunkObject*, %struct.CThunkObject** %thunk, align 8, !dbg !6752, !tbaa !2522
  %92 = bitcast %struct.CThunkObject* %91 to %struct._object*, !dbg !6753
  %ob_refcnt61 = getelementptr inbounds %struct._object, %struct._object* %92, i32 0, i32 0, !dbg !6754
  %93 = load i64, i64* %ob_refcnt61, align 8, !dbg !6755, !tbaa !2551
  %inc62 = add i64 %93, 1, !dbg !6755
  store i64 %inc62, i64* %ob_refcnt61, align 8, !dbg !6755, !tbaa !2551
  %94 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !6756, !tbaa !2522
  %95 = bitcast %struct.PyCFuncPtrObject* %94 to %struct.tagCDataObject*, !dbg !6757
  %96 = load %struct.CThunkObject*, %struct.CThunkObject** %thunk, align 8, !dbg !6758, !tbaa !2522
  %97 = bitcast %struct.CThunkObject* %96 to %struct._object*, !dbg !6759
  %call63 = call i32 @KeepRef(%struct.tagCDataObject* %95, i64 0, %struct._object* %97), !dbg !6760
  %cmp64 = icmp eq i32 -1, %call63, !dbg !6761
  br i1 %cmp64, label %if.then.65, label %if.end.78, !dbg !6762

if.then.65:                                       ; preds = %if.end.56
  br label %do.body.66, !dbg !6763

do.body.66:                                       ; preds = %if.then.65
  %98 = bitcast %struct._object** %_py_decref_tmp67 to i8*, !dbg !6764
  call void @llvm.lifetime.start(i64 8, i8* %98) #2, !dbg !6764
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp67, metadata !1987, metadata !2526), !dbg !6766
  %99 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !6767, !tbaa !2522
  %100 = bitcast %struct.PyCFuncPtrObject* %99 to %struct._object*, !dbg !6768
  store %struct._object* %100, %struct._object** %_py_decref_tmp67, align 8, !dbg !6766, !tbaa !2522
  %101 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8, !dbg !6769, !tbaa !2522
  %ob_refcnt68 = getelementptr inbounds %struct._object, %struct._object* %101, i32 0, i32 0, !dbg !6771
  %102 = load i64, i64* %ob_refcnt68, align 8, !dbg !6772, !tbaa !2551
  %dec69 = add i64 %102, -1, !dbg !6772
  store i64 %dec69, i64* %ob_refcnt68, align 8, !dbg !6772, !tbaa !2551
  %cmp70 = icmp ne i64 %dec69, 0, !dbg !6773
  br i1 %cmp70, label %if.then.71, label %if.else.72, !dbg !6774

if.then.71:                                       ; preds = %do.body.66
  br label %if.end.75, !dbg !6775

if.else.72:                                       ; preds = %do.body.66
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8, !dbg !6777, !tbaa !2522
  %ob_type73 = getelementptr inbounds %struct._object, %struct._object* %103, i32 0, i32 1, !dbg !6779
  %104 = load %struct._typeobject*, %struct._typeobject** %ob_type73, align 8, !dbg !6779, !tbaa !2588
  %tp_dealloc74 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %104, i32 0, i32 4, !dbg !6780
  %105 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc74, align 8, !dbg !6780, !tbaa !2590
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8, !dbg !6781, !tbaa !2522
  call void %105(%struct._object* %106), !dbg !6782
  br label %if.end.75

if.end.75:                                        ; preds = %if.else.72, %if.then.71
  %107 = bitcast %struct._object** %_py_decref_tmp67 to i8*, !dbg !6783
  call void @llvm.lifetime.end(i64 8, i8* %107) #2, !dbg !6783
  br label %do.cond.76, !dbg !6785

do.cond.76:                                       ; preds = %if.end.75
  br label %do.end.77, !dbg !6786

do.end.77:                                        ; preds = %do.cond.76
  store %struct._object* null, %struct._object** %retval, !dbg !6788
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.79, !dbg !6788

if.end.78:                                        ; preds = %if.end.56
  %108 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !6789, !tbaa !2522
  %109 = bitcast %struct.PyCFuncPtrObject* %108 to %struct._object*, !dbg !6790
  store %struct._object* %109, %struct._object** %retval, !dbg !6791
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.79, !dbg !6791

cleanup.79:                                       ; preds = %if.end.78, %do.end.77, %do.end, %if.then.47, %if.then.42, %if.then.37, %if.then.33, %cleanup, %if.then.4, %if.then
  %110 = bitcast %struct.CThunkObject** %thunk to i8*, !dbg !6792
  call void @llvm.lifetime.end(i64 8, i8* %110) #2, !dbg !6792
  %111 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !6792
  call void @llvm.lifetime.end(i64 8, i8* %111) #2, !dbg !6792
  %112 = bitcast %struct._object** %callable to i8*, !dbg !6792
  call void @llvm.lifetime.end(i64 8, i8* %112) #2, !dbg !6792
  %113 = bitcast %struct.PyCFuncPtrObject** %self to i8*, !dbg !6792
  call void @llvm.lifetime.end(i64 8, i8* %113) #2, !dbg !6792
  %114 = load %struct._object*, %struct._object** %retval, !dbg !6792
  ret %struct._object* %114, !dbg !6792
}

; Function Attrs: uwtable
define internal i32 @Array_init(%struct.tagCDataObject* %self, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %v = alloca %struct._object*, align 8
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !2154, metadata !2526), !dbg !6793
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2155, metadata !2526), !dbg !6794
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !2156, metadata !2526), !dbg !6795
  %0 = bitcast i64* %i to i8*, !dbg !6796
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6796
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2157, metadata !2526), !dbg !6797
  %1 = bitcast i64* %n to i8*, !dbg !6798
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6798
  call void @llvm.dbg.declare(metadata i64* %n, metadata !2158, metadata !2526), !dbg !6799
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6800, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1, !dbg !6802
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6802, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 19, !dbg !6803
  %4 = load i64, i64* %tp_flags, align 8, !dbg !6803, !tbaa !2849
  %and = and i64 %4, 67108864, !dbg !6804
  %cmp = icmp ne i64 %and, 0, !dbg !6805
  br i1 %cmp, label %if.end, label %if.then, !dbg !6806

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6807, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.171, i32 0, i32 0)), !dbg !6809
  store i32 -1, i32* %retval, !dbg !6810
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.5, !dbg !6810

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6811, !tbaa !2522
  %7 = bitcast %struct._object* %6 to %struct.PyVarObject*, !dbg !6812
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1, !dbg !6813
  %8 = load i64, i64* %ob_size, align 8, !dbg !6813, !tbaa !5784
  store i64 %8, i64* %n, align 8, !dbg !6814, !tbaa !2704
  store i64 0, i64* %i, align 8, !dbg !6815, !tbaa !2704
  br label %for.cond, !dbg !6816

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i64, i64* %i, align 8, !dbg !6817, !tbaa !2704
  %10 = load i64, i64* %n, align 8, !dbg !6820, !tbaa !2704
  %cmp1 = icmp slt i64 %9, %10, !dbg !6821
  br i1 %cmp1, label %for.body, label %for.end, !dbg !6822

for.body:                                         ; preds = %for.cond
  %11 = bitcast %struct._object** %v to i8*, !dbg !6823
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !6823
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !2159, metadata !2526), !dbg !6824
  %12 = load i64, i64* %i, align 8, !dbg !6825, !tbaa !2704
  %13 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6826, !tbaa !2522
  %14 = bitcast %struct._object* %13 to %struct.PyTupleObject*, !dbg !6827
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %14, i32 0, i32 1, !dbg !6828
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %12, !dbg !6829
  %15 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !6829, !tbaa !2522
  store %struct._object* %15, %struct._object** %v, align 8, !dbg !6830, !tbaa !2522
  %16 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !6831, !tbaa !2522
  %17 = bitcast %struct.tagCDataObject* %16 to %struct._object*, !dbg !6833
  %18 = load i64, i64* %i, align 8, !dbg !6834, !tbaa !2704
  %19 = load %struct._object*, %struct._object** %v, align 8, !dbg !6835, !tbaa !2522
  %call = call i32 @PySequence_SetItem(%struct._object* %17, i64 %18, %struct._object* %19), !dbg !6836
  %cmp2 = icmp eq i32 -1, %call, !dbg !6837
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !6838

if.then.3:                                        ; preds = %for.body
  store i32 -1, i32* %retval, !dbg !6839
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6839

if.end.4:                                         ; preds = %for.body
  store i32 0, i32* %cleanup.dest.slot, !dbg !6840
  br label %cleanup, !dbg !6840

cleanup:                                          ; preds = %if.end.4, %if.then.3
  %20 = bitcast %struct._object** %v to i8*, !dbg !6841
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !6841
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !6842

for.inc:                                          ; preds = %cleanup.cont
  %21 = load i64, i64* %i, align 8, !dbg !6843, !tbaa !2704
  %inc = add i64 %21, 1, !dbg !6843
  store i64 %inc, i64* %i, align 8, !dbg !6843, !tbaa !2704
  br label %for.cond, !dbg !6844

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, !dbg !6845
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.5, !dbg !6845

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.5

cleanup.5:                                        ; preds = %NewDefault, %for.end, %if.then
  %22 = bitcast i64* %n to i8*, !dbg !6846
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !6846
  %23 = bitcast i64* %i to i8*, !dbg !6846
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !6846
  %24 = load i32, i32* %retval, !dbg !6846
  ret i32 %24, !dbg !6846
}

; Function Attrs: uwtable
define internal %struct._object* @GenericPyCData_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %obj = alloca %struct.tagCDataObject*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2165, metadata !2526), !dbg !6847
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2166, metadata !2526), !dbg !6848
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !2167, metadata !2526), !dbg !6849
  %0 = bitcast %struct.tagCDataObject** %obj to i8*, !dbg !6850
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6850
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %obj, metadata !2168, metadata !2526), !dbg !6851
  %1 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !6852
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6852
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !2169, metadata !2526), !dbg !6853
  %2 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6854, !tbaa !2522
  %3 = bitcast %struct._typeobject* %2 to %struct._object*, !dbg !6855
  %call = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %3), !dbg !6856
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !6857, !tbaa !2522
  %4 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !6858, !tbaa !2522
  %tobool = icmp ne %struct.StgDictObject* %4, null, !dbg !6858
  br i1 %tobool, label %if.end, label %if.then, !dbg !6860

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !6861, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i32 0, i32 0)), !dbg !6863
  store %struct._object* null, %struct._object** %retval, !dbg !6864
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6864

if.end:                                           ; preds = %entry
  %6 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !6865, !tbaa !2522
  %flags = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %6, i32 0, i32 13, !dbg !6866
  %7 = load i32, i32* %flags, align 4, !dbg !6867, !tbaa !3128
  %or = or i32 %7, 4096, !dbg !6867
  store i32 %or, i32* %flags, align 4, !dbg !6867, !tbaa !3128
  %8 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6868, !tbaa !2522
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 36, !dbg !6869
  %9 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8, !dbg !6869, !tbaa !4896
  %10 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !6870, !tbaa !2522
  %call1 = call %struct._object* %9(%struct._typeobject* %10, i64 0), !dbg !6868
  %11 = bitcast %struct._object* %call1 to %struct.tagCDataObject*, !dbg !6871
  store %struct.tagCDataObject* %11, %struct.tagCDataObject** %obj, align 8, !dbg !6872, !tbaa !2522
  %12 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj, align 8, !dbg !6873, !tbaa !2522
  %tobool2 = icmp ne %struct.tagCDataObject* %12, null, !dbg !6873
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !6875

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !6876
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6876

if.end.4:                                         ; preds = %if.end
  %13 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj, align 8, !dbg !6877, !tbaa !2522
  %b_base = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %13, i32 0, i32 3, !dbg !6878
  store %struct.tagCDataObject* null, %struct.tagCDataObject** %b_base, align 8, !dbg !6879, !tbaa !4736
  %14 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj, align 8, !dbg !6880, !tbaa !2522
  %b_index = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %14, i32 0, i32 6, !dbg !6881
  store i64 0, i64* %b_index, align 8, !dbg !6882, !tbaa !4941
  %15 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj, align 8, !dbg !6883, !tbaa !2522
  %b_objects = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %15, i32 0, i32 7, !dbg !6884
  store %struct._object* null, %struct._object** %b_objects, align 8, !dbg !6885, !tbaa !4706
  %16 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !6886, !tbaa !2522
  %length = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %16, i32 0, i32 3, !dbg !6887
  %17 = load i64, i64* %length, align 8, !dbg !6887, !tbaa !3115
  %18 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj, align 8, !dbg !6888, !tbaa !2522
  %b_length = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %18, i32 0, i32 5, !dbg !6889
  store i64 %17, i64* %b_length, align 8, !dbg !6890, !tbaa !4912
  %19 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj, align 8, !dbg !6891, !tbaa !2522
  %20 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !6892, !tbaa !2522
  %call5 = call i32 @PyCData_MallocBuffer(%struct.tagCDataObject* %19, %struct.StgDictObject* %20), !dbg !6893
  %cmp = icmp eq i32 -1, %call5, !dbg !6894
  br i1 %cmp, label %if.then.6, label %if.end.10, !dbg !6895

if.then.6:                                        ; preds = %if.end.4
  br label %do.body, !dbg !6896

do.body:                                          ; preds = %if.then.6
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6897
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !6897
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2170, metadata !2526), !dbg !6899
  %22 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj, align 8, !dbg !6900, !tbaa !2522
  %23 = bitcast %struct.tagCDataObject* %22 to %struct._object*, !dbg !6901
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8, !dbg !6899, !tbaa !2522
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6902, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !6904
  %25 = load i64, i64* %ob_refcnt, align 8, !dbg !6905, !tbaa !2551
  %dec = add i64 %25, -1, !dbg !6905
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6905, !tbaa !2551
  %cmp7 = icmp ne i64 %dec, 0, !dbg !6906
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !6907

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !6908

if.else:                                          ; preds = %do.body
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6910, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !6912
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6912, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !6913
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6913, !tbaa !2590
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6914, !tbaa !2522
  call void %28(%struct._object* %29), !dbg !6915
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6916
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !6916
  br label %do.cond, !dbg !6918

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !6919

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !6921
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6921

if.end.10:                                        ; preds = %if.end.4
  %31 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj, align 8, !dbg !6922, !tbaa !2522
  %32 = bitcast %struct.tagCDataObject* %31 to %struct._object*, !dbg !6923
  store %struct._object* %32, %struct._object** %retval, !dbg !6924
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6924

cleanup:                                          ; preds = %if.end.10, %do.end, %if.then.3, %if.then
  %33 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !6925
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !6925
  %34 = bitcast %struct.tagCDataObject** %obj to i8*, !dbg !6925
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !6925
  %35 = load %struct._object*, %struct._object** %retval, !dbg !6925
  ret %struct._object* %35, !dbg !6925
}

; Function Attrs: uwtable
define %struct._object* @PyCArrayType_from_ctype(%struct._object* %itemtype, i64 %length) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %itemtype.addr = alloca %struct._object*, align 8
  %length.addr = alloca i64, align 8
  %key = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %name = alloca [256 x i8], align 16
  %len = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp19 = alloca %struct._object*, align 8
  %_py_decref_tmp35 = alloca %struct._object*, align 8
  %_py_decref_tmp53 = alloca %struct._object*, align 8
  %_py_decref_tmp69 = alloca %struct._object*, align 8
  %_py_decref_tmp81 = alloca %struct._object*, align 8
  %_py_decref_tmp94 = alloca %struct._object*, align 8
  store %struct._object* %itemtype, %struct._object** %itemtype.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %itemtype.addr, metadata !765, metadata !2526), !dbg !6926
  store i64 %length, i64* %length.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !766, metadata !2526), !dbg !6927
  %0 = bitcast %struct._object** %key to i8*, !dbg !6928
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6928
  call void @llvm.dbg.declare(metadata %struct._object** %key, metadata !767, metadata !2526), !dbg !6929
  %1 = bitcast %struct._object** %result to i8*, !dbg !6930
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6930
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !768, metadata !2526), !dbg !6931
  %2 = bitcast [256 x i8]* %name to i8*, !dbg !6932
  call void @llvm.lifetime.start(i64 256, i8* %2) #2, !dbg !6932
  call void @llvm.dbg.declare(metadata [256 x i8]* %name, metadata !769, metadata !2526), !dbg !6933
  %3 = bitcast %struct._object** %len to i8*, !dbg !6934
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !6934
  call void @llvm.dbg.declare(metadata %struct._object** %len, metadata !773, metadata !2526), !dbg !6935
  %4 = load %struct._object*, %struct._object** @PyCArrayType_from_ctype.cache, align 8, !dbg !6936, !tbaa !2522
  %cmp = icmp eq %struct._object* %4, null, !dbg !6938
  br i1 %cmp, label %if.then, label %if.end.3, !dbg !6939

if.then:                                          ; preds = %entry
  %call = call %struct._object* @PyDict_New(), !dbg !6940
  store %struct._object* %call, %struct._object** @PyCArrayType_from_ctype.cache, align 8, !dbg !6942, !tbaa !2522
  %5 = load %struct._object*, %struct._object** @PyCArrayType_from_ctype.cache, align 8, !dbg !6943, !tbaa !2522
  %cmp1 = icmp eq %struct._object* %5, null, !dbg !6945
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !6946

if.then.2:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !6947
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6947

if.end:                                           ; preds = %if.then
  br label %if.end.3, !dbg !6948

if.end.3:                                         ; preds = %if.end, %entry
  %6 = load i64, i64* %length.addr, align 8, !dbg !6949, !tbaa !2704
  %call4 = call %struct._object* @PyLong_FromSsize_t(i64 %6), !dbg !6950
  store %struct._object* %call4, %struct._object** %len, align 8, !dbg !6951, !tbaa !2522
  %7 = load %struct._object*, %struct._object** %len, align 8, !dbg !6952, !tbaa !2522
  %cmp5 = icmp eq %struct._object* %7, null, !dbg !6954
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !6955

if.then.6:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %retval, !dbg !6956
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6956

if.end.7:                                         ; preds = %if.end.3
  %8 = load %struct._object*, %struct._object** %itemtype.addr, align 8, !dbg !6957, !tbaa !2522
  %9 = load %struct._object*, %struct._object** %len, align 8, !dbg !6958, !tbaa !2522
  %call8 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._object* %8, %struct._object* %9), !dbg !6959
  store %struct._object* %call8, %struct._object** %key, align 8, !dbg !6960, !tbaa !2522
  br label %do.body, !dbg !6961

do.body:                                          ; preds = %if.end.7
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6962
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !6962
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !774, metadata !2526), !dbg !6964
  %11 = load %struct._object*, %struct._object** %len, align 8, !dbg !6965, !tbaa !2522
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !6964, !tbaa !2522
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6966, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !6968
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !6969, !tbaa !2551
  %dec = add i64 %13, -1, !dbg !6969
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6969, !tbaa !2551
  %cmp9 = icmp ne i64 %dec, 0, !dbg !6970
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !6971

if.then.10:                                       ; preds = %do.body
  br label %if.end.11, !dbg !6972

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6974, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !6976
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6976, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !6977
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6977, !tbaa !2590
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6978, !tbaa !2522
  call void %16(%struct._object* %17), !dbg !6979
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.10
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6980
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !6980
  br label %do.cond, !dbg !6982

do.cond:                                          ; preds = %if.end.11
  br label %do.end, !dbg !6983

do.end:                                           ; preds = %do.cond
  %19 = load %struct._object*, %struct._object** %key, align 8, !dbg !6985, !tbaa !2522
  %tobool = icmp ne %struct._object* %19, null, !dbg !6985
  br i1 %tobool, label %if.end.13, label %if.then.12, !dbg !6987

if.then.12:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !6988
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6988

if.end.13:                                        ; preds = %do.end
  %20 = load %struct._object*, %struct._object** @PyCArrayType_from_ctype.cache, align 8, !dbg !6989, !tbaa !2522
  %21 = load %struct._object*, %struct._object** %key, align 8, !dbg !6990, !tbaa !2522
  %call14 = call %struct._object* @PyDict_GetItemProxy(%struct._object* %20, %struct._object* %21), !dbg !6991
  store %struct._object* %call14, %struct._object** %result, align 8, !dbg !6992, !tbaa !2522
  %22 = load %struct._object*, %struct._object** %result, align 8, !dbg !6993, !tbaa !2522
  %tobool15 = icmp ne %struct._object* %22, null, !dbg !6993
  br i1 %tobool15, label %if.then.16, label %if.end.30, !dbg !6994

if.then.16:                                       ; preds = %if.end.13
  %23 = load %struct._object*, %struct._object** %result, align 8, !dbg !6995, !tbaa !2522
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !6996
  %24 = load i64, i64* %ob_refcnt17, align 8, !dbg !6997, !tbaa !2551
  %inc = add i64 %24, 1, !dbg !6997
  store i64 %inc, i64* %ob_refcnt17, align 8, !dbg !6997, !tbaa !2551
  br label %do.body.18, !dbg !6998

do.body.18:                                       ; preds = %if.then.16
  %25 = bitcast %struct._object** %_py_decref_tmp19 to i8*, !dbg !6999
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !6999
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp19, metadata !776, metadata !2526), !dbg !7001
  %26 = load %struct._object*, %struct._object** %key, align 8, !dbg !7002, !tbaa !2522
  store %struct._object* %26, %struct._object** %_py_decref_tmp19, align 8, !dbg !7001, !tbaa !2522
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !7003, !tbaa !2522
  %ob_refcnt20 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !7005
  %28 = load i64, i64* %ob_refcnt20, align 8, !dbg !7006, !tbaa !2551
  %dec21 = add i64 %28, -1, !dbg !7006
  store i64 %dec21, i64* %ob_refcnt20, align 8, !dbg !7006, !tbaa !2551
  %cmp22 = icmp ne i64 %dec21, 0, !dbg !7007
  br i1 %cmp22, label %if.then.23, label %if.else.24, !dbg !7008

if.then.23:                                       ; preds = %do.body.18
  br label %if.end.27, !dbg !7009

if.else.24:                                       ; preds = %do.body.18
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !7011, !tbaa !2522
  %ob_type25 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !7013
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !7013, !tbaa !2588
  %tp_dealloc26 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !7014
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc26, align 8, !dbg !7014, !tbaa !2590
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !7015, !tbaa !2522
  call void %31(%struct._object* %32), !dbg !7016
  br label %if.end.27

if.end.27:                                        ; preds = %if.else.24, %if.then.23
  %33 = bitcast %struct._object** %_py_decref_tmp19 to i8*, !dbg !7017
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !7017
  br label %do.cond.28, !dbg !7019

do.cond.28:                                       ; preds = %if.end.27
  br label %do.end.29, !dbg !7020

do.end.29:                                        ; preds = %do.cond.28
  %34 = load %struct._object*, %struct._object** %result, align 8, !dbg !7022, !tbaa !2522
  store %struct._object* %34, %struct._object** %retval, !dbg !7023
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7023

if.end.30:                                        ; preds = %if.end.13
  %35 = load %struct._object*, %struct._object** %itemtype.addr, align 8, !dbg !7024, !tbaa !2522
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 1, !dbg !7025
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8, !dbg !7025, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %36, i32 0, i32 19, !dbg !7026
  %37 = load i64, i64* %tp_flags, align 8, !dbg !7026, !tbaa !2849
  %and = and i64 %37, 2147483648, !dbg !7027
  %cmp32 = icmp ne i64 %and, 0, !dbg !7028
  br i1 %cmp32, label %if.end.46, label %if.then.33, !dbg !7029

if.then.33:                                       ; preds = %if.end.30
  %38 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7030, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %38, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i32 0, i32 0)), !dbg !7031
  br label %do.body.34, !dbg !7032

do.body.34:                                       ; preds = %if.then.33
  %39 = bitcast %struct._object** %_py_decref_tmp35 to i8*, !dbg !7033
  call void @llvm.lifetime.start(i64 8, i8* %39) #2, !dbg !7033
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp35, metadata !780, metadata !2526), !dbg !7035
  %40 = load %struct._object*, %struct._object** %key, align 8, !dbg !7036, !tbaa !2522
  store %struct._object* %40, %struct._object** %_py_decref_tmp35, align 8, !dbg !7035, !tbaa !2522
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8, !dbg !7037, !tbaa !2522
  %ob_refcnt36 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !7039
  %42 = load i64, i64* %ob_refcnt36, align 8, !dbg !7040, !tbaa !2551
  %dec37 = add i64 %42, -1, !dbg !7040
  store i64 %dec37, i64* %ob_refcnt36, align 8, !dbg !7040, !tbaa !2551
  %cmp38 = icmp ne i64 %dec37, 0, !dbg !7041
  br i1 %cmp38, label %if.then.39, label %if.else.40, !dbg !7042

if.then.39:                                       ; preds = %do.body.34
  br label %if.end.43, !dbg !7043

if.else.40:                                       ; preds = %do.body.34
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8, !dbg !7045, !tbaa !2522
  %ob_type41 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !7047
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type41, align 8, !dbg !7047, !tbaa !2588
  %tp_dealloc42 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4, !dbg !7048
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc42, align 8, !dbg !7048, !tbaa !2590
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8, !dbg !7049, !tbaa !2522
  call void %45(%struct._object* %46), !dbg !7050
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.40, %if.then.39
  %47 = bitcast %struct._object** %_py_decref_tmp35 to i8*, !dbg !7051
  call void @llvm.lifetime.end(i64 8, i8* %47) #2, !dbg !7051
  br label %do.cond.44, !dbg !7053

do.cond.44:                                       ; preds = %if.end.43
  br label %do.end.45, !dbg !7054

do.end.45:                                        ; preds = %do.cond.44
  store %struct._object* null, %struct._object** %retval, !dbg !7056
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7056

if.end.46:                                        ; preds = %if.end.30
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %name, i32 0, i32 0, !dbg !7057
  %48 = load %struct._object*, %struct._object** %itemtype.addr, align 8, !dbg !7058, !tbaa !2522
  %49 = bitcast %struct._object* %48 to %struct._typeobject*, !dbg !7059
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 1, !dbg !7060
  %50 = load i8*, i8** %tp_name, align 8, !dbg !7060, !tbaa !5264
  %51 = load i64, i64* %length.addr, align 8, !dbg !7061, !tbaa !2704
  %call47 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i32 0, i32 0), i8* %50, i64 %51) #2, !dbg !7062
  %arraydecay48 = getelementptr inbounds [256 x i8], [256 x i8]* %name, i32 0, i32 0, !dbg !7063
  %52 = load i64, i64* %length.addr, align 8, !dbg !7064, !tbaa !2704
  %53 = load %struct._object*, %struct._object** %itemtype.addr, align 8, !dbg !7065, !tbaa !2522
  %call49 = call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* getelementptr inbounds ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }, { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArrayType_Type, i32 0, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i32 0, i32 0), i8* %arraydecay48, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type to %struct._typeobject*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i32 0, i32 0), i64 %52, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0), %struct._object* %53), !dbg !7066
  store %struct._object* %call49, %struct._object** %result, align 8, !dbg !7067, !tbaa !2522
  %54 = load %struct._object*, %struct._object** %result, align 8, !dbg !7068, !tbaa !2522
  %cmp50 = icmp eq %struct._object* %54, null, !dbg !7069
  br i1 %cmp50, label %if.then.51, label %if.end.64, !dbg !7070

if.then.51:                                       ; preds = %if.end.46
  br label %do.body.52, !dbg !7071

do.body.52:                                       ; preds = %if.then.51
  %55 = bitcast %struct._object** %_py_decref_tmp53 to i8*, !dbg !7072
  call void @llvm.lifetime.start(i64 8, i8* %55) #2, !dbg !7072
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp53, metadata !784, metadata !2526), !dbg !7074
  %56 = load %struct._object*, %struct._object** %key, align 8, !dbg !7075, !tbaa !2522
  store %struct._object* %56, %struct._object** %_py_decref_tmp53, align 8, !dbg !7074, !tbaa !2522
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !7076, !tbaa !2522
  %ob_refcnt54 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0, !dbg !7078
  %58 = load i64, i64* %ob_refcnt54, align 8, !dbg !7079, !tbaa !2551
  %dec55 = add i64 %58, -1, !dbg !7079
  store i64 %dec55, i64* %ob_refcnt54, align 8, !dbg !7079, !tbaa !2551
  %cmp56 = icmp ne i64 %dec55, 0, !dbg !7080
  br i1 %cmp56, label %if.then.57, label %if.else.58, !dbg !7081

if.then.57:                                       ; preds = %do.body.52
  br label %if.end.61, !dbg !7082

if.else.58:                                       ; preds = %do.body.52
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !7084, !tbaa !2522
  %ob_type59 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1, !dbg !7086
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type59, align 8, !dbg !7086, !tbaa !2588
  %tp_dealloc60 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4, !dbg !7087
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc60, align 8, !dbg !7087, !tbaa !2590
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !7088, !tbaa !2522
  call void %61(%struct._object* %62), !dbg !7089
  br label %if.end.61

if.end.61:                                        ; preds = %if.else.58, %if.then.57
  %63 = bitcast %struct._object** %_py_decref_tmp53 to i8*, !dbg !7090
  call void @llvm.lifetime.end(i64 8, i8* %63) #2, !dbg !7090
  br label %do.cond.62, !dbg !7092

do.cond.62:                                       ; preds = %if.end.61
  br label %do.end.63, !dbg !7093

do.end.63:                                        ; preds = %do.cond.62
  store %struct._object* null, %struct._object** %retval, !dbg !7095
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7095

if.end.64:                                        ; preds = %if.end.46
  %64 = load %struct._object*, %struct._object** @PyCArrayType_from_ctype.cache, align 8, !dbg !7096, !tbaa !2522
  %65 = load %struct._object*, %struct._object** %key, align 8, !dbg !7097, !tbaa !2522
  %66 = load %struct._object*, %struct._object** %result, align 8, !dbg !7098, !tbaa !2522
  %call65 = call i32 @PyDict_SetItemProxy(%struct._object* %64, %struct._object* %65, %struct._object* %66), !dbg !7099
  %cmp66 = icmp eq i32 -1, %call65, !dbg !7100
  br i1 %cmp66, label %if.then.67, label %if.end.92, !dbg !7101

if.then.67:                                       ; preds = %if.end.64
  br label %do.body.68, !dbg !7102

do.body.68:                                       ; preds = %if.then.67
  %67 = bitcast %struct._object** %_py_decref_tmp69 to i8*, !dbg !7103
  call void @llvm.lifetime.start(i64 8, i8* %67) #2, !dbg !7103
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp69, metadata !788, metadata !2526), !dbg !7105
  %68 = load %struct._object*, %struct._object** %key, align 8, !dbg !7106, !tbaa !2522
  store %struct._object* %68, %struct._object** %_py_decref_tmp69, align 8, !dbg !7105, !tbaa !2522
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !7107, !tbaa !2522
  %ob_refcnt70 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0, !dbg !7109
  %70 = load i64, i64* %ob_refcnt70, align 8, !dbg !7110, !tbaa !2551
  %dec71 = add i64 %70, -1, !dbg !7110
  store i64 %dec71, i64* %ob_refcnt70, align 8, !dbg !7110, !tbaa !2551
  %cmp72 = icmp ne i64 %dec71, 0, !dbg !7111
  br i1 %cmp72, label %if.then.73, label %if.else.74, !dbg !7112

if.then.73:                                       ; preds = %do.body.68
  br label %if.end.77, !dbg !7113

if.else.74:                                       ; preds = %do.body.68
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !7115, !tbaa !2522
  %ob_type75 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1, !dbg !7117
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type75, align 8, !dbg !7117, !tbaa !2588
  %tp_dealloc76 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4, !dbg !7118
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc76, align 8, !dbg !7118, !tbaa !2590
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8, !dbg !7119, !tbaa !2522
  call void %73(%struct._object* %74), !dbg !7120
  br label %if.end.77

if.end.77:                                        ; preds = %if.else.74, %if.then.73
  %75 = bitcast %struct._object** %_py_decref_tmp69 to i8*, !dbg !7121
  call void @llvm.lifetime.end(i64 8, i8* %75) #2, !dbg !7121
  br label %do.cond.78, !dbg !7123

do.cond.78:                                       ; preds = %if.end.77
  br label %do.end.79, !dbg !7124

do.end.79:                                        ; preds = %do.cond.78
  br label %do.body.80, !dbg !7126

do.body.80:                                       ; preds = %do.end.79
  %76 = bitcast %struct._object** %_py_decref_tmp81 to i8*, !dbg !7127
  call void @llvm.lifetime.start(i64 8, i8* %76) #2, !dbg !7127
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp81, metadata !792, metadata !2526), !dbg !7129
  %77 = load %struct._object*, %struct._object** %result, align 8, !dbg !7130, !tbaa !2522
  store %struct._object* %77, %struct._object** %_py_decref_tmp81, align 8, !dbg !7129, !tbaa !2522
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8, !dbg !7131, !tbaa !2522
  %ob_refcnt82 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 0, !dbg !7133
  %79 = load i64, i64* %ob_refcnt82, align 8, !dbg !7134, !tbaa !2551
  %dec83 = add i64 %79, -1, !dbg !7134
  store i64 %dec83, i64* %ob_refcnt82, align 8, !dbg !7134, !tbaa !2551
  %cmp84 = icmp ne i64 %dec83, 0, !dbg !7135
  br i1 %cmp84, label %if.then.85, label %if.else.86, !dbg !7136

if.then.85:                                       ; preds = %do.body.80
  br label %if.end.89, !dbg !7137

if.else.86:                                       ; preds = %do.body.80
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8, !dbg !7139, !tbaa !2522
  %ob_type87 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 1, !dbg !7141
  %81 = load %struct._typeobject*, %struct._typeobject** %ob_type87, align 8, !dbg !7141, !tbaa !2588
  %tp_dealloc88 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %81, i32 0, i32 4, !dbg !7142
  %82 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc88, align 8, !dbg !7142, !tbaa !2590
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8, !dbg !7143, !tbaa !2522
  call void %82(%struct._object* %83), !dbg !7144
  br label %if.end.89

if.end.89:                                        ; preds = %if.else.86, %if.then.85
  %84 = bitcast %struct._object** %_py_decref_tmp81 to i8*, !dbg !7145
  call void @llvm.lifetime.end(i64 8, i8* %84) #2, !dbg !7145
  br label %do.cond.90, !dbg !7146

do.cond.90:                                       ; preds = %if.end.89
  br label %do.end.91, !dbg !7147

do.end.91:                                        ; preds = %do.cond.90
  store %struct._object* null, %struct._object** %retval, !dbg !7149
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7149

if.end.92:                                        ; preds = %if.end.64
  br label %do.body.93, !dbg !7150

do.body.93:                                       ; preds = %if.end.92
  %85 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !7151
  call void @llvm.lifetime.start(i64 8, i8* %85) #2, !dbg !7151
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp94, metadata !794, metadata !2526), !dbg !7153
  %86 = load %struct._object*, %struct._object** %key, align 8, !dbg !7154, !tbaa !2522
  store %struct._object* %86, %struct._object** %_py_decref_tmp94, align 8, !dbg !7153, !tbaa !2522
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !7155, !tbaa !2522
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 0, !dbg !7157
  %88 = load i64, i64* %ob_refcnt95, align 8, !dbg !7158, !tbaa !2551
  %dec96 = add i64 %88, -1, !dbg !7158
  store i64 %dec96, i64* %ob_refcnt95, align 8, !dbg !7158, !tbaa !2551
  %cmp97 = icmp ne i64 %dec96, 0, !dbg !7159
  br i1 %cmp97, label %if.then.98, label %if.else.99, !dbg !7160

if.then.98:                                       ; preds = %do.body.93
  br label %if.end.102, !dbg !7161

if.else.99:                                       ; preds = %do.body.93
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !7163, !tbaa !2522
  %ob_type100 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 1, !dbg !7165
  %90 = load %struct._typeobject*, %struct._typeobject** %ob_type100, align 8, !dbg !7165, !tbaa !2588
  %tp_dealloc101 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %90, i32 0, i32 4, !dbg !7166
  %91 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc101, align 8, !dbg !7166, !tbaa !2590
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8, !dbg !7167, !tbaa !2522
  call void %91(%struct._object* %92), !dbg !7168
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.99, %if.then.98
  %93 = bitcast %struct._object** %_py_decref_tmp94 to i8*, !dbg !7169
  call void @llvm.lifetime.end(i64 8, i8* %93) #2, !dbg !7169
  br label %do.cond.103, !dbg !7170

do.cond.103:                                      ; preds = %if.end.102
  br label %do.end.104, !dbg !7171

do.end.104:                                       ; preds = %do.cond.103
  %94 = load %struct._object*, %struct._object** %result, align 8, !dbg !7173, !tbaa !2522
  store %struct._object* %94, %struct._object** %retval, !dbg !7174
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7174

cleanup:                                          ; preds = %do.end.104, %do.end.91, %do.end.63, %do.end.45, %do.end.29, %if.then.12, %if.then.6, %if.then.2
  %95 = bitcast %struct._object** %len to i8*, !dbg !7175
  call void @llvm.lifetime.end(i64 8, i8* %95) #2, !dbg !7175
  %96 = bitcast [256 x i8]* %name to i8*, !dbg !7175
  call void @llvm.lifetime.end(i64 256, i8* %96) #2, !dbg !7175
  %97 = bitcast %struct._object** %result to i8*, !dbg !7175
  call void @llvm.lifetime.end(i64 8, i8* %97) #2, !dbg !7175
  %98 = bitcast %struct._object** %key to i8*, !dbg !7175
  call void @llvm.lifetime.end(i64 8, i8* %98) #2, !dbg !7175
  %99 = load %struct._object*, %struct._object** %retval, !dbg !7175
  ret %struct._object* %99, !dbg !7175
}

declare %struct._object* @PyDict_New() #3

declare %struct._object* @PyLong_FromSsize_t(i64) #3

declare %struct._object* @PyTuple_Pack(i64, ...) #3

declare %struct._object* @_PyObject_CallFunction_SizeT(%struct._object*, i8*, ...) #3

; Function Attrs: uwtable
define internal i32 @Pointer_init(%struct.tagCDataObject* %self, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !2283, metadata !2526), !dbg !7176
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2284, metadata !2526), !dbg !7177
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !2285, metadata !2526), !dbg !7178
  %0 = bitcast %struct._object** %value to i8*, !dbg !7179
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7179
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !2286, metadata !2526), !dbg !7180
  store %struct._object* null, %struct._object** %value, align 8, !dbg !7180, !tbaa !2522
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7181, !tbaa !2522
  %call = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.186, i32 0, i32 0), i64 0, i64 1, %struct._object** %value), !dbg !7183
  %tobool = icmp ne i32 %call, 0, !dbg !7183
  br i1 %tobool, label %if.end, label %if.then, !dbg !7184

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !7185
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7185

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %value, align 8, !dbg !7186, !tbaa !2522
  %cmp = icmp eq %struct._object* %2, null, !dbg !7188
  br i1 %cmp, label %if.then.1, label %if.end.2, !dbg !7189

if.then.1:                                        ; preds = %if.end
  store i32 0, i32* %retval, !dbg !7190
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7190

if.end.2:                                         ; preds = %if.end
  %3 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !7191, !tbaa !2522
  %4 = load %struct._object*, %struct._object** %value, align 8, !dbg !7192, !tbaa !2522
  %call3 = call i32 @Pointer_set_contents(%struct.tagCDataObject* %3, %struct._object* %4, i8* null), !dbg !7193
  store i32 %call3, i32* %retval, !dbg !7194
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7194

cleanup:                                          ; preds = %if.end.2, %if.then.1, %if.then
  %5 = bitcast %struct._object** %value to i8*, !dbg !7195
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !7195
  %6 = load i32, i32* %retval, !dbg !7195
  ret i32 %6, !dbg !7195
}

; Function Attrs: uwtable
define internal %struct._object* @Pointer_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2289, metadata !2526), !dbg !7196
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2290, metadata !2526), !dbg !7197
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !2291, metadata !2526), !dbg !7198
  %0 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !7199
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7199
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !2292, metadata !2526), !dbg !7200
  %1 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7201, !tbaa !2522
  %2 = bitcast %struct._typeobject* %1 to %struct._object*, !dbg !7202
  %call = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %2), !dbg !7203
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !7200, !tbaa !2522
  %3 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !7204, !tbaa !2522
  %tobool = icmp ne %struct.StgDictObject* %3, null, !dbg !7204
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7206

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !7207, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %4, i32 0, i32 5, !dbg !7209
  %5 = load %struct._object*, %struct._object** %proto, align 8, !dbg !7209, !tbaa !2961
  %tobool1 = icmp ne %struct._object* %5, null, !dbg !7210
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7211

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7212, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.187, i32 0, i32 0)), !dbg !7214
  store %struct._object* null, %struct._object** %retval, !dbg !7215
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7215

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !7216, !tbaa !2522
  %8 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7217, !tbaa !2522
  %9 = load %struct._object*, %struct._object** %kw.addr, align 8, !dbg !7218, !tbaa !2522
  %call2 = call %struct._object* @GenericPyCData_new(%struct._typeobject* %7, %struct._object* %8, %struct._object* %9), !dbg !7219
  store %struct._object* %call2, %struct._object** %retval, !dbg !7220
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7220

cleanup:                                          ; preds = %if.end, %if.then
  %10 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !7221
  call void @llvm.lifetime.end(i64 8, i8* %10) #2, !dbg !7221
  %11 = load %struct._object*, %struct._object** %retval, !dbg !7221
  ret %struct._object* %11, !dbg !7221
}

; Function Attrs: uwtable
define %struct._object* @PyInit__ctypes() #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %m = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %0 = bitcast %struct._object** %m to i8*, !dbg !7222
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7222
  call void @llvm.dbg.declare(metadata %struct._object** %m, metadata !800, metadata !2526), !dbg !7223
  call void @PyEval_InitThreads(), !dbg !7224
  %call = call %struct._object* @PyModule_Create2(%struct.PyModuleDef* @_ctypesmodule, i32 1013), !dbg !7225
  store %struct._object* %call, %struct._object** %m, align 8, !dbg !7226, !tbaa !2522
  %1 = load %struct._object*, %struct._object** %m, align 8, !dbg !7227, !tbaa !2522
  %tobool = icmp ne %struct._object* %1, null, !dbg !7227
  br i1 %tobool, label %if.end, label %if.then, !dbg !7229

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7230
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7230

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyDict_New(), !dbg !7231
  store %struct._object* %call1, %struct._object** @_ctypes_ptrtype_cache, align 8, !dbg !7232, !tbaa !2522
  %2 = load %struct._object*, %struct._object** @_ctypes_ptrtype_cache, align 8, !dbg !7233, !tbaa !2522
  %cmp = icmp eq %struct._object* %2, null, !dbg !7235
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !7236

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !7237
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7237

if.end.3:                                         ; preds = %if.end
  %3 = load %struct._object*, %struct._object** %m, align 8, !dbg !7238, !tbaa !2522
  %4 = load %struct._object*, %struct._object** @_ctypes_ptrtype_cache, align 8, !dbg !7239, !tbaa !2522
  %call4 = call i32 @PyModule_AddObject(%struct._object* %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i32 0, i32 0), %struct._object* %4), !dbg !7240
  %5 = load %struct._object*, %struct._object** %m, align 8, !dbg !7241, !tbaa !2522
  %call5 = call %struct._object* @PyObject_GetAttrString(%struct._object* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i32 0, i32 0)), !dbg !7242
  store %struct._object* %call5, %struct._object** @_unpickle, align 8, !dbg !7243, !tbaa !2522
  %6 = load %struct._object*, %struct._object** @_unpickle, align 8, !dbg !7244, !tbaa !2522
  %cmp6 = icmp eq %struct._object* %6, null, !dbg !7246
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !7247

if.then.7:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %retval, !dbg !7248
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7248

if.end.8:                                         ; preds = %if.end.3
  %call9 = call i32 @PyType_Ready(%struct._typeobject* @PyCArg_Type), !dbg !7249
  %cmp10 = icmp slt i32 %call9, 0, !dbg !7251
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !7252

if.then.11:                                       ; preds = %if.end.8
  store %struct._object* null, %struct._object** %retval, !dbg !7253
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7253

if.end.12:                                        ; preds = %if.end.8
  %call13 = call i32 @PyType_Ready(%struct._typeobject* @PyCThunk_Type), !dbg !7254
  %cmp14 = icmp slt i32 %call13, 0, !dbg !7256
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !7257

if.then.15:                                       ; preds = %if.end.12
  store %struct._object* null, %struct._object** %retval, !dbg !7258
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7258

if.end.16:                                        ; preds = %if.end.12
  store %struct._typeobject* @PyDict_Type, %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyCStgDict_Type, i32 0, i32 30), align 8, !dbg !7259, !tbaa !4225
  %call17 = call i32 @PyType_Ready(%struct._typeobject* @PyCStgDict_Type), !dbg !7260
  %cmp18 = icmp slt i32 %call17, 0, !dbg !7262
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !7263

if.then.19:                                       ; preds = %if.end.16
  store %struct._object* null, %struct._object** %retval, !dbg !7264
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7264

if.end.20:                                        ; preds = %if.end.16
  store %struct._typeobject* @PyType_Type, %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCStructType_Type to %struct._typeobject*), i32 0, i32 30), align 8, !dbg !7265, !tbaa !4225
  %call21 = call i32 @PyType_Ready(%struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCStructType_Type to %struct._typeobject*)), !dbg !7266
  %cmp22 = icmp slt i32 %call21, 0, !dbg !7268
  br i1 %cmp22, label %if.then.23, label %if.end.24, !dbg !7269

if.then.23:                                       ; preds = %if.end.20
  store %struct._object* null, %struct._object** %retval, !dbg !7270
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7270

if.end.24:                                        ; preds = %if.end.20
  store %struct._typeobject* @PyType_Type, %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @UnionType_Type to %struct._typeobject*), i32 0, i32 30), align 8, !dbg !7271, !tbaa !4225
  %call25 = call i32 @PyType_Ready(%struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @UnionType_Type to %struct._typeobject*)), !dbg !7272
  %cmp26 = icmp slt i32 %call25, 0, !dbg !7274
  br i1 %cmp26, label %if.then.27, label %if.end.28, !dbg !7275

if.then.27:                                       ; preds = %if.end.24
  store %struct._object* null, %struct._object** %retval, !dbg !7276
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7276

if.end.28:                                        ; preds = %if.end.24
  store %struct._typeobject* @PyType_Type, %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointerType_Type to %struct._typeobject*), i32 0, i32 30), align 8, !dbg !7277, !tbaa !4225
  %call29 = call i32 @PyType_Ready(%struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointerType_Type to %struct._typeobject*)), !dbg !7278
  %cmp30 = icmp slt i32 %call29, 0, !dbg !7280
  br i1 %cmp30, label %if.then.31, label %if.end.32, !dbg !7281

if.then.31:                                       ; preds = %if.end.28
  store %struct._object* null, %struct._object** %retval, !dbg !7282
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7282

if.end.32:                                        ; preds = %if.end.28
  store %struct._typeobject* @PyType_Type, %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArrayType_Type to %struct._typeobject*), i32 0, i32 30), align 8, !dbg !7283, !tbaa !4225
  %call33 = call i32 @PyType_Ready(%struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArrayType_Type to %struct._typeobject*)), !dbg !7284
  %cmp34 = icmp slt i32 %call33, 0, !dbg !7286
  br i1 %cmp34, label %if.then.35, label %if.end.36, !dbg !7287

if.then.35:                                       ; preds = %if.end.32
  store %struct._object* null, %struct._object** %retval, !dbg !7288
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7288

if.end.36:                                        ; preds = %if.end.32
  store %struct._typeobject* @PyType_Type, %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCSimpleType_Type to %struct._typeobject*), i32 0, i32 30), align 8, !dbg !7289, !tbaa !4225
  %call37 = call i32 @PyType_Ready(%struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCSimpleType_Type to %struct._typeobject*)), !dbg !7290
  %cmp38 = icmp slt i32 %call37, 0, !dbg !7292
  br i1 %cmp38, label %if.then.39, label %if.end.40, !dbg !7293

if.then.39:                                       ; preds = %if.end.36
  store %struct._object* null, %struct._object** %retval, !dbg !7294
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7294

if.end.40:                                        ; preds = %if.end.36
  store %struct._typeobject* @PyType_Type, %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCFuncPtrType_Type to %struct._typeobject*), i32 0, i32 30), align 8, !dbg !7295, !tbaa !4225
  %call41 = call i32 @PyType_Ready(%struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCFuncPtrType_Type to %struct._typeobject*)), !dbg !7296
  %cmp42 = icmp slt i32 %call41, 0, !dbg !7298
  br i1 %cmp42, label %if.then.43, label %if.end.44, !dbg !7299

if.then.43:                                       ; preds = %if.end.40
  store %struct._object* null, %struct._object** %retval, !dbg !7300
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7300

if.end.44:                                        ; preds = %if.end.40
  %call45 = call i32 @PyType_Ready(%struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*)), !dbg !7301
  %cmp46 = icmp slt i32 %call45, 0, !dbg !7303
  br i1 %cmp46, label %if.then.47, label %if.end.48, !dbg !7304

if.then.47:                                       ; preds = %if.end.44
  store %struct._object* null, %struct._object** %retval, !dbg !7305
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7305

if.end.48:                                        ; preds = %if.end.44
  store %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCStructType_Type to %struct._typeobject*), %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Struct_Type to %struct._typeobject*), i32 0, i32 0, i32 0, i32 1), align 8, !dbg !7306, !tbaa !2588
  store %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*), %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Struct_Type to %struct._typeobject*), i32 0, i32 30), align 8, !dbg !7307, !tbaa !4225
  %call49 = call i32 @PyType_Ready(%struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Struct_Type to %struct._typeobject*)), !dbg !7308
  %cmp50 = icmp slt i32 %call49, 0, !dbg !7310
  br i1 %cmp50, label %if.then.51, label %if.end.52, !dbg !7311

if.then.51:                                       ; preds = %if.end.48
  store %struct._object* null, %struct._object** %retval, !dbg !7312
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7312

if.end.52:                                        ; preds = %if.end.48
  %7 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Struct_Type to %struct._typeobject*), i32 0, i32 0, i32 0, i32 0), align 8, !dbg !7313, !tbaa !2551
  %inc = add i64 %7, 1, !dbg !7313
  store i64 %inc, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Struct_Type to %struct._typeobject*), i32 0, i32 0, i32 0, i32 0), align 8, !dbg !7313, !tbaa !2551
  %8 = load %struct._object*, %struct._object** %m, align 8, !dbg !7314, !tbaa !2522
  %call53 = call i32 @PyModule_AddObject(%struct._object* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Struct_Type to %struct._typeobject*), i32 0, i32 0, i32 0)), !dbg !7315
  store %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @UnionType_Type to %struct._typeobject*), %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Union_Type to %struct._typeobject*), i32 0, i32 0, i32 0, i32 1), align 8, !dbg !7316, !tbaa !2588
  store %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*), %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Union_Type to %struct._typeobject*), i32 0, i32 30), align 8, !dbg !7317, !tbaa !4225
  %call54 = call i32 @PyType_Ready(%struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Union_Type to %struct._typeobject*)), !dbg !7318
  %cmp55 = icmp slt i32 %call54, 0, !dbg !7320
  br i1 %cmp55, label %if.then.56, label %if.end.57, !dbg !7321

if.then.56:                                       ; preds = %if.end.52
  store %struct._object* null, %struct._object** %retval, !dbg !7322
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7322

if.end.57:                                        ; preds = %if.end.52
  %9 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Union_Type to %struct._typeobject*), i32 0, i32 0, i32 0, i32 0), align 8, !dbg !7323, !tbaa !2551
  %inc58 = add i64 %9, 1, !dbg !7323
  store i64 %inc58, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Union_Type to %struct._typeobject*), i32 0, i32 0, i32 0, i32 0), align 8, !dbg !7323, !tbaa !2551
  %10 = load %struct._object*, %struct._object** %m, align 8, !dbg !7324, !tbaa !2522
  %call59 = call i32 @PyModule_AddObject(%struct._object* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Union_Type to %struct._typeobject*), i32 0, i32 0, i32 0)), !dbg !7325
  store %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointerType_Type to %struct._typeobject*), %struct._typeobject** getelementptr inbounds ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }, { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointer_Type, i32 0, i32 0, i32 0, i32 1), align 8, !dbg !7326, !tbaa !2588
  store %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*), %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointer_Type to %struct._typeobject*), i32 0, i32 30), align 8, !dbg !7327, !tbaa !4225
  %call60 = call i32 @PyType_Ready(%struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointer_Type to %struct._typeobject*)), !dbg !7328
  %cmp61 = icmp slt i32 %call60, 0, !dbg !7330
  br i1 %cmp61, label %if.then.62, label %if.end.63, !dbg !7331

if.then.62:                                       ; preds = %if.end.57
  store %struct._object* null, %struct._object** %retval, !dbg !7332
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7332

if.end.63:                                        ; preds = %if.end.57
  %11 = load i64, i64* getelementptr inbounds ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }, { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointer_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !7333, !tbaa !2551
  %inc64 = add i64 %11, 1, !dbg !7333
  store i64 %inc64, i64* getelementptr inbounds ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }, { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointer_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !7333, !tbaa !2551
  %12 = load %struct._object*, %struct._object** %m, align 8, !dbg !7334, !tbaa !2522
  %call65 = call i32 @PyModule_AddObject(%struct._object* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), %struct._object* getelementptr inbounds ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }, { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointer_Type, i32 0, i32 0, i32 0)), !dbg !7335
  store %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArrayType_Type to %struct._typeobject*), %struct._typeobject** getelementptr inbounds ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }, { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type, i32 0, i32 0, i32 0, i32 1), align 8, !dbg !7336, !tbaa !2588
  store %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*), %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type to %struct._typeobject*), i32 0, i32 30), align 8, !dbg !7337, !tbaa !4225
  %call66 = call i32 @PyType_Ready(%struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type to %struct._typeobject*)), !dbg !7338
  %cmp67 = icmp slt i32 %call66, 0, !dbg !7340
  br i1 %cmp67, label %if.then.68, label %if.end.69, !dbg !7341

if.then.68:                                       ; preds = %if.end.63
  store %struct._object* null, %struct._object** %retval, !dbg !7342
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7342

if.end.69:                                        ; preds = %if.end.63
  %13 = load i64, i64* getelementptr inbounds ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }, { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !7343, !tbaa !2551
  %inc70 = add i64 %13, 1, !dbg !7343
  store i64 %inc70, i64* getelementptr inbounds ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }, { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !7343, !tbaa !2551
  %14 = load %struct._object*, %struct._object** %m, align 8, !dbg !7344, !tbaa !2522
  %call71 = call i32 @PyModule_AddObject(%struct._object* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), %struct._object* getelementptr inbounds ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }, { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type, i32 0, i32 0, i32 0)), !dbg !7345
  store %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCSimpleType_Type to %struct._typeobject*), %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Simple_Type to %struct._typeobject*), i32 0, i32 0, i32 0, i32 1), align 8, !dbg !7346, !tbaa !2588
  store %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*), %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Simple_Type to %struct._typeobject*), i32 0, i32 30), align 8, !dbg !7347, !tbaa !4225
  %call72 = call i32 @PyType_Ready(%struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Simple_Type to %struct._typeobject*)), !dbg !7348
  %cmp73 = icmp slt i32 %call72, 0, !dbg !7350
  br i1 %cmp73, label %if.then.74, label %if.end.75, !dbg !7351

if.then.74:                                       ; preds = %if.end.69
  store %struct._object* null, %struct._object** %retval, !dbg !7352
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7352

if.end.75:                                        ; preds = %if.end.69
  %15 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Simple_Type to %struct._typeobject*), i32 0, i32 0, i32 0, i32 0), align 8, !dbg !7353, !tbaa !2551
  %inc76 = add i64 %15, 1, !dbg !7353
  store i64 %inc76, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Simple_Type to %struct._typeobject*), i32 0, i32 0, i32 0, i32 0), align 8, !dbg !7353, !tbaa !2551
  %16 = load %struct._object*, %struct._object** %m, align 8, !dbg !7354, !tbaa !2522
  %call77 = call i32 @PyModule_AddObject(%struct._object* %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Simple_Type to %struct._typeobject*), i32 0, i32 0, i32 0)), !dbg !7355
  store %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCFuncPtrType_Type to %struct._typeobject*), %struct._typeobject** getelementptr inbounds ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }, { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCFuncPtr_Type, i32 0, i32 0, i32 0, i32 1), align 8, !dbg !7356, !tbaa !2588
  store %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*), %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCFuncPtr_Type to %struct._typeobject*), i32 0, i32 30), align 8, !dbg !7357, !tbaa !4225
  %call78 = call i32 @PyType_Ready(%struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCFuncPtr_Type to %struct._typeobject*)), !dbg !7358
  %cmp79 = icmp slt i32 %call78, 0, !dbg !7360
  br i1 %cmp79, label %if.then.80, label %if.end.81, !dbg !7361

if.then.80:                                       ; preds = %if.end.75
  store %struct._object* null, %struct._object** %retval, !dbg !7362
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7362

if.end.81:                                        ; preds = %if.end.75
  %17 = load i64, i64* getelementptr inbounds ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }, { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCFuncPtr_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !7363, !tbaa !2551
  %inc82 = add i64 %17, 1, !dbg !7363
  store i64 %inc82, i64* getelementptr inbounds ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }, { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCFuncPtr_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !7363, !tbaa !2551
  %18 = load %struct._object*, %struct._object** %m, align 8, !dbg !7364, !tbaa !2522
  %call83 = call i32 @PyModule_AddObject(%struct._object* %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i32 0, i32 0), %struct._object* getelementptr inbounds ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }, { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCFuncPtr_Type, i32 0, i32 0, i32 0)), !dbg !7365
  %call84 = call i32 @PyType_Ready(%struct._typeobject* @PyCField_Type), !dbg !7366
  %cmp85 = icmp slt i32 %call84, 0, !dbg !7368
  br i1 %cmp85, label %if.then.86, label %if.end.87, !dbg !7369

if.then.86:                                       ; preds = %if.end.81
  store %struct._object* null, %struct._object** %retval, !dbg !7370
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7370

if.end.87:                                        ; preds = %if.end.81
  store %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyType_GenericNew, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @DictRemover_Type to %struct._typeobject*), i32 0, i32 37), align 8, !dbg !7371, !tbaa !3244
  %call88 = call i32 @PyType_Ready(%struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @DictRemover_Type to %struct._typeobject*)), !dbg !7372
  %cmp89 = icmp slt i32 %call88, 0, !dbg !7374
  br i1 %cmp89, label %if.then.90, label %if.end.91, !dbg !7375

if.then.90:                                       ; preds = %if.end.87
  store %struct._object* null, %struct._object** %retval, !dbg !7376
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7376

if.end.91:                                        ; preds = %if.end.87
  %19 = load %struct._object*, %struct._object** %m, align 8, !dbg !7377, !tbaa !2522
  %call92 = call %struct._object* @PyLong_FromLong(i64 1), !dbg !7378
  %call93 = call i32 @PyModule_AddObject(%struct._object* %19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i32 0, i32 0), %struct._object* %call92), !dbg !7379
  %20 = load %struct._object*, %struct._object** %m, align 8, !dbg !7380, !tbaa !2522
  %call94 = call %struct._object* @PyLong_FromLong(i64 8), !dbg !7381
  %call95 = call i32 @PyModule_AddObject(%struct._object* %20, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i32 0, i32 0), %struct._object* %call94), !dbg !7382
  %21 = load %struct._object*, %struct._object** %m, align 8, !dbg !7383, !tbaa !2522
  %call96 = call %struct._object* @PyLong_FromLong(i64 16), !dbg !7384
  %call97 = call i32 @PyModule_AddObject(%struct._object* %21, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i32 0, i32 0), %struct._object* %call96), !dbg !7385
  %22 = load %struct._object*, %struct._object** %m, align 8, !dbg !7386, !tbaa !2522
  %call98 = call %struct._object* @PyLong_FromLong(i64 4), !dbg !7387
  %call99 = call i32 @PyModule_AddObject(%struct._object* %22, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i32 0, i32 0), %struct._object* %call98), !dbg !7388
  %23 = load %struct._object*, %struct._object** %m, align 8, !dbg !7389, !tbaa !2522
  %call100 = call i32 @PyModule_AddStringConstant(%struct._object* %23, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0)), !dbg !7390
  %24 = load %struct._object*, %struct._object** %m, align 8, !dbg !7391, !tbaa !2522
  %call101 = call %struct._object* @PyLong_FromVoidPtr(i8* bitcast (i8* (i8*, i8*, i64)* @memmove to i8*)), !dbg !7392
  %call102 = call i32 @PyModule_AddObject(%struct._object* %24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0), %struct._object* %call101), !dbg !7393
  %25 = load %struct._object*, %struct._object** %m, align 8, !dbg !7394, !tbaa !2522
  %call103 = call %struct._object* @PyLong_FromVoidPtr(i8* bitcast (i8* (i8*, i32, i64)* @memset to i8*)), !dbg !7395
  %call104 = call i32 @PyModule_AddObject(%struct._object* %25, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i32 0, i32 0), %struct._object* %call103), !dbg !7396
  %26 = load %struct._object*, %struct._object** %m, align 8, !dbg !7397, !tbaa !2522
  %call105 = call %struct._object* @PyLong_FromVoidPtr(i8* bitcast (%struct._object* (i8*, i32)* @string_at to i8*)), !dbg !7398
  %call106 = call i32 @PyModule_AddObject(%struct._object* %26, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i32 0, i32 0), %struct._object* %call105), !dbg !7399
  %27 = load %struct._object*, %struct._object** %m, align 8, !dbg !7400, !tbaa !2522
  %call107 = call %struct._object* @PyLong_FromVoidPtr(i8* bitcast (%struct._object* (i8*, %struct._object*, %struct._object*)* @cast to i8*)), !dbg !7401
  %call108 = call i32 @PyModule_AddObject(%struct._object* %27, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i32 0, i32 0), %struct._object* %call107), !dbg !7402
  %28 = load %struct._object*, %struct._object** %m, align 8, !dbg !7403, !tbaa !2522
  %call109 = call %struct._object* @PyLong_FromVoidPtr(i8* bitcast (%struct._object* (i32*, i32)* @wstring_at to i8*)), !dbg !7404
  %call110 = call i32 @PyModule_AddObject(%struct._object* %28, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.44, i32 0, i32 0), %struct._object* %call109), !dbg !7405
  %29 = load %struct._object*, %struct._object** %m, align 8, !dbg !7406, !tbaa !2522
  %call111 = call %struct._object* @PyLong_FromLong(i64 0), !dbg !7407
  %call112 = call i32 @PyModule_AddObject(%struct._object* %29, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i32 0, i32 0), %struct._object* %call111), !dbg !7408
  %30 = load %struct._object*, %struct._object** %m, align 8, !dbg !7409, !tbaa !2522
  %call113 = call %struct._object* @PyLong_FromLong(i64 256), !dbg !7410
  %call114 = call i32 @PyModule_AddObject(%struct._object* %30, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i32 0, i32 0), %struct._object* %call113), !dbg !7411
  %call115 = call %struct._object* @PyErr_NewException(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47, i32 0, i32 0), %struct._object* null, %struct._object* null), !dbg !7412
  store %struct._object* %call115, %struct._object** @PyExc_ArgError, align 8, !dbg !7413, !tbaa !2522
  %31 = load %struct._object*, %struct._object** @PyExc_ArgError, align 8, !dbg !7414, !tbaa !2522
  %tobool116 = icmp ne %struct._object* %31, null, !dbg !7414
  br i1 %tobool116, label %if.then.117, label %if.end.120, !dbg !7416

if.then.117:                                      ; preds = %if.end.91
  %32 = load %struct._object*, %struct._object** @PyExc_ArgError, align 8, !dbg !7417, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !7419
  %33 = load i64, i64* %ob_refcnt, align 8, !dbg !7420, !tbaa !2551
  %inc118 = add i64 %33, 1, !dbg !7420
  store i64 %inc118, i64* %ob_refcnt, align 8, !dbg !7420, !tbaa !2551
  %34 = load %struct._object*, %struct._object** %m, align 8, !dbg !7421, !tbaa !2522
  %35 = load %struct._object*, %struct._object** @PyExc_ArgError, align 8, !dbg !7422, !tbaa !2522
  %call119 = call i32 @PyModule_AddObject(%struct._object* %34, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.48, i32 0, i32 0), %struct._object* %35), !dbg !7423
  br label %if.end.120, !dbg !7424

if.end.120:                                       ; preds = %if.then.117, %if.end.91
  %36 = load %struct._object*, %struct._object** %m, align 8, !dbg !7425, !tbaa !2522
  store %struct._object* %36, %struct._object** %retval, !dbg !7426
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7426

cleanup:                                          ; preds = %if.end.120, %if.then.90, %if.then.86, %if.then.80, %if.then.74, %if.then.68, %if.then.62, %if.then.56, %if.then.51, %if.then.47, %if.then.43, %if.then.39, %if.then.35, %if.then.31, %if.then.27, %if.then.23, %if.then.19, %if.then.15, %if.then.11, %if.then.7, %if.then.2, %if.then
  %37 = bitcast %struct._object** %m to i8*, !dbg !7427
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !7427
  %38 = load %struct._object*, %struct._object** %retval, !dbg !7427
  ret %struct._object* %38, !dbg !7427
}

declare void @PyEval_InitThreads() #3

declare %struct._object* @PyModule_Create2(%struct.PyModuleDef*, i32) #3

declare i32 @PyModule_AddObject(%struct._object*, i8*, %struct._object*) #3

declare %struct._object* @PyObject_GetAttrString(%struct._object*, i8*) #3

declare i32 @PyType_Ready(%struct._typeobject*) #3

declare %struct._object* @PyType_GenericNew(%struct._typeobject*, %struct._object*, %struct._object*) #3

declare %struct._object* @PyLong_FromLong(i64) #3

declare i32 @PyModule_AddStringConstant(%struct._object*, i8*, i8*) #3

declare %struct._object* @PyLong_FromVoidPtr(i8*) #3

; Function Attrs: nounwind
declare i8* @memmove(i8*, i8*, i64) #5

; Function Attrs: nounwind
declare i8* @memset(i8*, i32, i64) #5

; Function Attrs: uwtable
define internal %struct._object* @string_at(i8* %ptr, i32 %size) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !2361, metadata !2526), !dbg !7428
  store i32 %size, i32* %size.addr, align 4, !tbaa !2611
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !2362, metadata !2526), !dbg !7429
  %0 = load i32, i32* %size.addr, align 4, !dbg !7430, !tbaa !2611
  %cmp = icmp eq i32 %0, -1, !dbg !7432
  br i1 %cmp, label %if.then, label %if.end, !dbg !7433

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !7434, !tbaa !2522
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !7435, !tbaa !2522
  %call = call i64 @strlen(i8* %2) #8, !dbg !7436
  %call1 = call %struct._object* @PyBytes_FromStringAndSize(i8* %1, i64 %call), !dbg !7437
  store %struct._object* %call1, %struct._object** %retval, !dbg !7438
  br label %return, !dbg !7438

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !7439, !tbaa !2522
  %4 = load i32, i32* %size.addr, align 4, !dbg !7440, !tbaa !2611
  %conv = sext i32 %4 to i64, !dbg !7440
  %call2 = call %struct._object* @PyBytes_FromStringAndSize(i8* %3, i64 %conv), !dbg !7441
  store %struct._object* %call2, %struct._object** %retval, !dbg !7442
  br label %return, !dbg !7442

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct._object*, %struct._object** %retval, !dbg !7443
  ret %struct._object* %5, !dbg !7443
}

; Function Attrs: uwtable
define internal %struct._object* @cast(i8* %ptr, %struct._object* %src, %struct._object* %ctype) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ptr.addr = alloca i8*, align 8
  %src.addr = alloca %struct._object*, align 8
  %ctype.addr = alloca %struct._object*, align 8
  %result = alloca %struct.tagCDataObject*, align 8
  %cleanup.dest.slot = alloca i32
  %obj = alloca %struct.tagCDataObject*, align 8
  %container = alloca %struct.tagCDataObject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  %index = alloca %struct._object*, align 8
  %rc = alloca i32, align 4
  %_py_decref_tmp49 = alloca %struct._object*, align 8
  %_py_decref_tmp71 = alloca %struct._object*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !2367, metadata !2526), !dbg !7444
  store %struct._object* %src, %struct._object** %src.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %src.addr, metadata !2368, metadata !2526), !dbg !7445
  store %struct._object* %ctype, %struct._object** %ctype.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %ctype.addr, metadata !2369, metadata !2526), !dbg !7446
  %0 = bitcast %struct.tagCDataObject** %result to i8*, !dbg !7447
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7447
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %result, metadata !2370, metadata !2526), !dbg !7448
  %1 = load %struct._object*, %struct._object** %ctype.addr, align 8, !dbg !7449, !tbaa !2522
  %call = call i32 @cast_check_pointertype(%struct._object* %1), !dbg !7451
  %cmp = icmp eq i32 0, %call, !dbg !7452
  br i1 %cmp, label %if.then, label %if.end, !dbg !7453

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7454
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.82, !dbg !7454

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %ctype.addr, align 8, !dbg !7455, !tbaa !2522
  %call1 = call %struct._object* (%struct._object*, ...) @PyObject_CallFunctionObjArgs(%struct._object* %2, i8* null), !dbg !7456
  %3 = bitcast %struct._object* %call1 to %struct.tagCDataObject*, !dbg !7457
  store %struct.tagCDataObject* %3, %struct.tagCDataObject** %result, align 8, !dbg !7458, !tbaa !2522
  %4 = load %struct.tagCDataObject*, %struct.tagCDataObject** %result, align 8, !dbg !7459, !tbaa !2522
  %cmp2 = icmp eq %struct.tagCDataObject* %4, null, !dbg !7461
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !7462

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !7463
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.82, !dbg !7463

if.end.4:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %src.addr, align 8, !dbg !7464, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !7465
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7465, !tbaa !2588
  %cmp5 = icmp eq %struct._typeobject* %6, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*), !dbg !7466
  br i1 %cmp5, label %if.then.8, label %lor.lhs.false, !dbg !7467

lor.lhs.false:                                    ; preds = %if.end.4
  %7 = load %struct._object*, %struct._object** %src.addr, align 8, !dbg !7468, !tbaa !2522
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !7470
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !7470, !tbaa !2588
  %call7 = call i32 @PyType_IsSubtype(%struct._typeobject* %8, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*)), !dbg !7471
  %tobool = icmp ne i32 %call7, 0, !dbg !7471
  br i1 %tobool, label %if.then.8, label %if.end.69, !dbg !7472

if.then.8:                                        ; preds = %lor.lhs.false, %if.end.4
  %9 = bitcast %struct.tagCDataObject** %obj to i8*, !dbg !7473
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !7473
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %obj, metadata !2371, metadata !2526), !dbg !7474
  %10 = load %struct._object*, %struct._object** %src.addr, align 8, !dbg !7475, !tbaa !2522
  %11 = bitcast %struct._object* %10 to %struct.tagCDataObject*, !dbg !7476
  store %struct.tagCDataObject* %11, %struct.tagCDataObject** %obj, align 8, !dbg !7474, !tbaa !2522
  %12 = bitcast %struct.tagCDataObject** %container to i8*, !dbg !7477
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !7477
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %container, metadata !2374, metadata !2526), !dbg !7478
  %13 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj, align 8, !dbg !7479, !tbaa !2522
  %call9 = call %struct.tagCDataObject* @PyCData_GetContainer(%struct.tagCDataObject* %13), !dbg !7480
  store %struct.tagCDataObject* %call9, %struct.tagCDataObject** %container, align 8, !dbg !7481, !tbaa !2522
  %14 = load %struct.tagCDataObject*, %struct.tagCDataObject** %container, align 8, !dbg !7482, !tbaa !2522
  %cmp10 = icmp eq %struct.tagCDataObject* %14, null, !dbg !7484
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !7485

if.then.11:                                       ; preds = %if.then.8
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.65, !dbg !7486

if.end.12:                                        ; preds = %if.then.8
  %15 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj, align 8, !dbg !7487, !tbaa !2522
  %b_objects = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %15, i32 0, i32 7, !dbg !7488
  %16 = load %struct._object*, %struct._object** %b_objects, align 8, !dbg !7488, !tbaa !4706
  %cmp13 = icmp eq %struct._object* %16, @_Py_NoneStruct, !dbg !7489
  br i1 %cmp13, label %if.then.14, label %if.end.25, !dbg !7490

if.then.14:                                       ; preds = %if.end.12
  br label %do.body, !dbg !7491

do.body:                                          ; preds = %if.then.14
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7492
  call void @llvm.lifetime.start(i64 8, i8* %17) #2, !dbg !7492
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2375, metadata !2526), !dbg !7494
  store %struct._object* @_Py_NoneStruct, %struct._object** %_py_decref_tmp, align 8, !dbg !7494, !tbaa !2522
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7495, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !7497
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !7498, !tbaa !2551
  %dec = add i64 %19, -1, !dbg !7498
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7498, !tbaa !2551
  %cmp15 = icmp ne i64 %dec, 0, !dbg !7499
  br i1 %cmp15, label %if.then.16, label %if.else, !dbg !7500

if.then.16:                                       ; preds = %do.body
  br label %if.end.18, !dbg !7501

if.else:                                          ; preds = %do.body
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7503, !tbaa !2522
  %ob_type17 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !7505
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type17, align 8, !dbg !7505, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !7506
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7506, !tbaa !2590
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7507, !tbaa !2522
  call void %22(%struct._object* %23), !dbg !7508
  br label %if.end.18

if.end.18:                                        ; preds = %if.else, %if.then.16
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7509
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !7509
  br label %do.cond, !dbg !7511

do.cond:                                          ; preds = %if.end.18
  br label %do.end, !dbg !7512

do.end:                                           ; preds = %do.cond
  %call19 = call %struct._object* @PyDict_New(), !dbg !7514
  %25 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj, align 8, !dbg !7515, !tbaa !2522
  %b_objects20 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %25, i32 0, i32 7, !dbg !7516
  store %struct._object* %call19, %struct._object** %b_objects20, align 8, !dbg !7517, !tbaa !4706
  %26 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj, align 8, !dbg !7518, !tbaa !2522
  %b_objects21 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %26, i32 0, i32 7, !dbg !7520
  %27 = load %struct._object*, %struct._object** %b_objects21, align 8, !dbg !7520, !tbaa !4706
  %cmp22 = icmp eq %struct._object* %27, null, !dbg !7521
  br i1 %cmp22, label %if.then.23, label %if.end.24, !dbg !7522

if.then.23:                                       ; preds = %do.end
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.65, !dbg !7523

if.end.24:                                        ; preds = %do.end
  br label %if.end.25, !dbg !7524

if.end.25:                                        ; preds = %if.end.24, %if.end.12
  br label %do.body.26, !dbg !7525

do.body.26:                                       ; preds = %if.end.25
  %28 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !7526
  call void @llvm.lifetime.start(i64 8, i8* %28) #2, !dbg !7526
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !2379, metadata !2526), !dbg !7528
  %29 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj, align 8, !dbg !7529, !tbaa !2522
  %b_objects27 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %29, i32 0, i32 7, !dbg !7530
  %30 = load %struct._object*, %struct._object** %b_objects27, align 8, !dbg !7530, !tbaa !4706
  store %struct._object* %30, %struct._object** %_py_xincref_tmp, align 8, !dbg !7528, !tbaa !2522
  %31 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !7531, !tbaa !2522
  %cmp28 = icmp ne %struct._object* %31, null, !dbg !7533
  br i1 %cmp28, label %if.then.29, label %if.end.31, !dbg !7534

if.then.29:                                       ; preds = %do.body.26
  %32 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !7535, !tbaa !2522
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !7537
  %33 = load i64, i64* %ob_refcnt30, align 8, !dbg !7538, !tbaa !2551
  %inc = add i64 %33, 1, !dbg !7538
  store i64 %inc, i64* %ob_refcnt30, align 8, !dbg !7538, !tbaa !2551
  br label %if.end.31, !dbg !7539

if.end.31:                                        ; preds = %if.then.29, %do.body.26
  %34 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !7540
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !7540
  br label %do.cond.32, !dbg !7543

do.cond.32:                                       ; preds = %if.end.31
  br label %do.end.33, !dbg !7544

do.end.33:                                        ; preds = %do.cond.32
  %35 = load %struct.tagCDataObject*, %struct.tagCDataObject** %obj, align 8, !dbg !7546, !tbaa !2522
  %b_objects34 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %35, i32 0, i32 7, !dbg !7547
  %36 = load %struct._object*, %struct._object** %b_objects34, align 8, !dbg !7547, !tbaa !4706
  %37 = load %struct.tagCDataObject*, %struct.tagCDataObject** %result, align 8, !dbg !7548, !tbaa !2522
  %b_objects35 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %37, i32 0, i32 7, !dbg !7549
  store %struct._object* %36, %struct._object** %b_objects35, align 8, !dbg !7550, !tbaa !4706
  %38 = load %struct.tagCDataObject*, %struct.tagCDataObject** %result, align 8, !dbg !7551, !tbaa !2522
  %b_objects36 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %38, i32 0, i32 7, !dbg !7552
  %39 = load %struct._object*, %struct._object** %b_objects36, align 8, !dbg !7552, !tbaa !4706
  %tobool37 = icmp ne %struct._object* %39, null, !dbg !7551
  br i1 %tobool37, label %land.lhs.true, label %if.end.64, !dbg !7553

land.lhs.true:                                    ; preds = %do.end.33
  %40 = load %struct.tagCDataObject*, %struct.tagCDataObject** %result, align 8, !dbg !7554, !tbaa !2522
  %b_objects38 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %40, i32 0, i32 7, !dbg !7556
  %41 = load %struct._object*, %struct._object** %b_objects38, align 8, !dbg !7556, !tbaa !4706
  %ob_type39 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !7557
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type39, align 8, !dbg !7557, !tbaa !2588
  %cmp40 = icmp eq %struct._typeobject* %42, @PyDict_Type, !dbg !7558
  br i1 %cmp40, label %if.then.41, label %if.end.64, !dbg !7559

if.then.41:                                       ; preds = %land.lhs.true
  %43 = bitcast %struct._object** %index to i8*, !dbg !7560
  call void @llvm.lifetime.start(i64 8, i8* %43) #2, !dbg !7560
  call void @llvm.dbg.declare(metadata %struct._object** %index, metadata !2381, metadata !2526), !dbg !7561
  %44 = bitcast i32* %rc to i8*, !dbg !7562
  call void @llvm.lifetime.start(i64 4, i8* %44) #2, !dbg !7562
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !2384, metadata !2526), !dbg !7563
  %45 = load %struct._object*, %struct._object** %src.addr, align 8, !dbg !7564, !tbaa !2522
  %46 = bitcast %struct._object* %45 to i8*, !dbg !7565
  %call42 = call %struct._object* @PyLong_FromVoidPtr(i8* %46), !dbg !7566
  store %struct._object* %call42, %struct._object** %index, align 8, !dbg !7567, !tbaa !2522
  %47 = load %struct._object*, %struct._object** %index, align 8, !dbg !7568, !tbaa !2522
  %cmp43 = icmp eq %struct._object* %47, null, !dbg !7570
  br i1 %cmp43, label %if.then.44, label %if.end.45, !dbg !7571

if.then.44:                                       ; preds = %if.then.41
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7572

if.end.45:                                        ; preds = %if.then.41
  %48 = load %struct.tagCDataObject*, %struct.tagCDataObject** %result, align 8, !dbg !7573, !tbaa !2522
  %b_objects46 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %48, i32 0, i32 7, !dbg !7574
  %49 = load %struct._object*, %struct._object** %b_objects46, align 8, !dbg !7574, !tbaa !4706
  %50 = load %struct._object*, %struct._object** %index, align 8, !dbg !7575, !tbaa !2522
  %51 = load %struct._object*, %struct._object** %src.addr, align 8, !dbg !7576, !tbaa !2522
  %call47 = call i32 @PyDict_SetItem(%struct._object* %49, %struct._object* %50, %struct._object* %51), !dbg !7577
  store i32 %call47, i32* %rc, align 4, !dbg !7578, !tbaa !2611
  br label %do.body.48, !dbg !7579

do.body.48:                                       ; preds = %if.end.45
  %52 = bitcast %struct._object** %_py_decref_tmp49 to i8*, !dbg !7580
  call void @llvm.lifetime.start(i64 8, i8* %52) #2, !dbg !7580
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp49, metadata !2385, metadata !2526), !dbg !7582
  %53 = load %struct._object*, %struct._object** %index, align 8, !dbg !7583, !tbaa !2522
  store %struct._object* %53, %struct._object** %_py_decref_tmp49, align 8, !dbg !7582, !tbaa !2522
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !7584, !tbaa !2522
  %ob_refcnt50 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 0, !dbg !7586
  %55 = load i64, i64* %ob_refcnt50, align 8, !dbg !7587, !tbaa !2551
  %dec51 = add i64 %55, -1, !dbg !7587
  store i64 %dec51, i64* %ob_refcnt50, align 8, !dbg !7587, !tbaa !2551
  %cmp52 = icmp ne i64 %dec51, 0, !dbg !7588
  br i1 %cmp52, label %if.then.53, label %if.else.54, !dbg !7589

if.then.53:                                       ; preds = %do.body.48
  br label %if.end.57, !dbg !7590

if.else.54:                                       ; preds = %do.body.48
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !7592, !tbaa !2522
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 1, !dbg !7594
  %57 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8, !dbg !7594, !tbaa !2588
  %tp_dealloc56 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %57, i32 0, i32 4, !dbg !7595
  %58 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc56, align 8, !dbg !7595, !tbaa !2590
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8, !dbg !7596, !tbaa !2522
  call void %58(%struct._object* %59), !dbg !7597
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.54, %if.then.53
  %60 = bitcast %struct._object** %_py_decref_tmp49 to i8*, !dbg !7598
  call void @llvm.lifetime.end(i64 8, i8* %60) #2, !dbg !7598
  br label %do.cond.58, !dbg !7600

do.cond.58:                                       ; preds = %if.end.57
  br label %do.end.59, !dbg !7601

do.end.59:                                        ; preds = %do.cond.58
  %61 = load i32, i32* %rc, align 4, !dbg !7603, !tbaa !2611
  %cmp60 = icmp eq i32 %61, -1, !dbg !7605
  br i1 %cmp60, label %if.then.61, label %if.end.62, !dbg !7606

if.then.61:                                       ; preds = %do.end.59
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7607

if.end.62:                                        ; preds = %do.end.59
  store i32 0, i32* %cleanup.dest.slot, !dbg !7608
  br label %cleanup, !dbg !7608

cleanup:                                          ; preds = %if.end.62, %if.then.61, %if.then.44
  %62 = bitcast i32* %rc to i8*, !dbg !7609
  call void @llvm.lifetime.end(i64 4, i8* %62) #2, !dbg !7609
  %63 = bitcast %struct._object** %index to i8*, !dbg !7609
  call void @llvm.lifetime.end(i64 8, i8* %63) #2, !dbg !7609
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.64, !dbg !7610

if.end.64:                                        ; preds = %cleanup.cont, %land.lhs.true, %do.end.33
  store i32 0, i32* %cleanup.dest.slot, !dbg !7611
  br label %cleanup.65, !dbg !7611

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.65

cleanup.65:                                       ; preds = %NewDefault, %if.end.64, %if.then.23, %if.then.11
  %64 = bitcast %struct.tagCDataObject** %container to i8*, !dbg !7612
  call void @llvm.lifetime.end(i64 8, i8* %64) #2, !dbg !7612
  %65 = bitcast %struct.tagCDataObject** %obj to i8*, !dbg !7612
  call void @llvm.lifetime.end(i64 8, i8* %65) #2, !dbg !7612
  %cleanup.dest.67 = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup.65
  %Pivot = icmp slt i32 %cleanup.dest.67, 2
  br i1 %Pivot, label %LeafBlock.2, label %LeafBlock.4

LeafBlock.4:                                      ; preds = %NodeBlock
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest.67, 2
  br i1 %SwitchLeaf5, label %failed, label %NewDefault.1

LeafBlock.2:                                      ; preds = %NodeBlock
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.67, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.68, label %NewDefault.1

cleanup.cont.68:                                  ; preds = %LeafBlock.2
  br label %if.end.69, !dbg !7613

if.end.69:                                        ; preds = %cleanup.cont.68, %lor.lhs.false
  %66 = load %struct.tagCDataObject*, %struct.tagCDataObject** %result, align 8, !dbg !7614, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %66, i32 0, i32 1, !dbg !7615
  %67 = load i8*, i8** %b_ptr, align 8, !dbg !7615, !tbaa !4817
  %68 = bitcast i8** %ptr.addr to i8*, !dbg !7616
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 8, i32 1, i1 false), !dbg !7616
  %69 = load %struct.tagCDataObject*, %struct.tagCDataObject** %result, align 8, !dbg !7617, !tbaa !2522
  %70 = bitcast %struct.tagCDataObject* %69 to %struct._object*, !dbg !7618
  store %struct._object* %70, %struct._object** %retval, !dbg !7619
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.82, !dbg !7619

failed:                                           ; preds = %LeafBlock.4
  br label %do.body.70, !dbg !7620

do.body.70:                                       ; preds = %failed
  %71 = bitcast %struct._object** %_py_decref_tmp71 to i8*, !dbg !7621
  call void @llvm.lifetime.start(i64 8, i8* %71) #2, !dbg !7621
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp71, metadata !2387, metadata !2526), !dbg !7623
  %72 = load %struct.tagCDataObject*, %struct.tagCDataObject** %result, align 8, !dbg !7624, !tbaa !2522
  %73 = bitcast %struct.tagCDataObject* %72 to %struct._object*, !dbg !7625
  store %struct._object* %73, %struct._object** %_py_decref_tmp71, align 8, !dbg !7623, !tbaa !2522
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !7626, !tbaa !2522
  %ob_refcnt72 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0, !dbg !7628
  %75 = load i64, i64* %ob_refcnt72, align 8, !dbg !7629, !tbaa !2551
  %dec73 = add i64 %75, -1, !dbg !7629
  store i64 %dec73, i64* %ob_refcnt72, align 8, !dbg !7629, !tbaa !2551
  %cmp74 = icmp ne i64 %dec73, 0, !dbg !7630
  br i1 %cmp74, label %if.then.75, label %if.else.76, !dbg !7631

if.then.75:                                       ; preds = %do.body.70
  br label %if.end.79, !dbg !7632

if.else.76:                                       ; preds = %do.body.70
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !7634, !tbaa !2522
  %ob_type77 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 1, !dbg !7636
  %77 = load %struct._typeobject*, %struct._typeobject** %ob_type77, align 8, !dbg !7636, !tbaa !2588
  %tp_dealloc78 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %77, i32 0, i32 4, !dbg !7637
  %78 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc78, align 8, !dbg !7637, !tbaa !2590
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !7638, !tbaa !2522
  call void %78(%struct._object* %79), !dbg !7639
  br label %if.end.79

if.end.79:                                        ; preds = %if.else.76, %if.then.75
  %80 = bitcast %struct._object** %_py_decref_tmp71 to i8*, !dbg !7640
  call void @llvm.lifetime.end(i64 8, i8* %80) #2, !dbg !7640
  br label %do.cond.80, !dbg !7642

do.cond.80:                                       ; preds = %if.end.79
  br label %do.end.81, !dbg !7643

do.end.81:                                        ; preds = %do.cond.80
  store %struct._object* null, %struct._object** %retval, !dbg !7645
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.82, !dbg !7645

NewDefault.1:                                     ; preds = %LeafBlock.4, %LeafBlock.2
  br label %cleanup.82

cleanup.82:                                       ; preds = %NewDefault.1, %do.end.81, %if.end.69, %if.then.3, %if.then
  %81 = bitcast %struct.tagCDataObject** %result to i8*, !dbg !7646
  call void @llvm.lifetime.end(i64 8, i8* %81) #2, !dbg !7646
  %82 = load %struct._object*, %struct._object** %retval, !dbg !7646
  ret %struct._object* %82, !dbg !7646
}

; Function Attrs: uwtable
define internal %struct._object* @wstring_at(i32* %ptr, i32 %size) #0 {
entry:
  %ptr.addr = alloca i32*, align 8
  %size.addr = alloca i32, align 4
  %ssize = alloca i64, align 8
  store i32* %ptr, i32** %ptr.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i32** %ptr.addr, metadata !2399, metadata !2526), !dbg !7647
  store i32 %size, i32* %size.addr, align 4, !tbaa !2611
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !2400, metadata !2526), !dbg !7648
  %0 = bitcast i64* %ssize to i8*, !dbg !7649
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7649
  call void @llvm.dbg.declare(metadata i64* %ssize, metadata !2401, metadata !2526), !dbg !7650
  %1 = load i32, i32* %size.addr, align 4, !dbg !7651, !tbaa !2611
  %conv = sext i32 %1 to i64, !dbg !7651
  store i64 %conv, i64* %ssize, align 8, !dbg !7650, !tbaa !2704
  %2 = load i64, i64* %ssize, align 8, !dbg !7652, !tbaa !2704
  %cmp = icmp eq i64 %2, -1, !dbg !7654
  br i1 %cmp, label %if.then, label %if.end, !dbg !7655

if.then:                                          ; preds = %entry
  %3 = load i32*, i32** %ptr.addr, align 8, !dbg !7656, !tbaa !2522
  %call = call i64 @wcslen(i32* %3) #8, !dbg !7657
  store i64 %call, i64* %ssize, align 8, !dbg !7658, !tbaa !2704
  br label %if.end, !dbg !7659

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32*, i32** %ptr.addr, align 8, !dbg !7660, !tbaa !2522
  %5 = load i64, i64* %ssize, align 8, !dbg !7661, !tbaa !2704
  %call2 = call %struct._object* @PyUnicode_FromWideChar(i32* %4, i64 %5), !dbg !7662
  %6 = bitcast i64* %ssize to i8*, !dbg !7663
  call void @llvm.lifetime.end(i64 8, i8* %6) #2, !dbg !7663
  ret %struct._object* %call2, !dbg !7664
}

declare %struct._object* @PyErr_NewException(i8*, %struct._object*, %struct._object*) #3

; Function Attrs: uwtable
define internal void @_DictRemover_dealloc(%struct._object* %myself) #0 {
entry:
  %myself.addr = alloca %struct._object*, align 8
  %self = alloca %struct.DictRemoverObject*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp8 = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !803, metadata !2526), !dbg !7665
  %0 = bitcast %struct.DictRemoverObject** %self to i8*, !dbg !7666
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7666
  call void @llvm.dbg.declare(metadata %struct.DictRemoverObject** %self, metadata !804, metadata !2526), !dbg !7667
  %1 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !7668, !tbaa !2522
  %2 = bitcast %struct._object* %1 to %struct.DictRemoverObject*, !dbg !7669
  store %struct.DictRemoverObject* %2, %struct.DictRemoverObject** %self, align 8, !dbg !7667, !tbaa !2522
  br label %do.body, !dbg !7670

do.body:                                          ; preds = %entry
  %3 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7671
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !7671
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !805, metadata !2526), !dbg !7673
  %4 = load %struct.DictRemoverObject*, %struct.DictRemoverObject** %self, align 8, !dbg !7674, !tbaa !2522
  %key = getelementptr inbounds %struct.DictRemoverObject, %struct.DictRemoverObject* %4, i32 0, i32 1, !dbg !7675
  %5 = load %struct._object*, %struct._object** %key, align 8, !dbg !7675, !tbaa !2558
  store %struct._object* %5, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7673, !tbaa !2522
  %6 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7676, !tbaa !2522
  %cmp = icmp ne %struct._object* %6, null, !dbg !7677
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !7678

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !7679

do.body.1:                                        ; preds = %if.then
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7681
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !7681
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !807, metadata !2526), !dbg !7683
  %8 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !7684, !tbaa !2522
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !7683, !tbaa !2522
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7685, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !7687
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !7688, !tbaa !2551
  %dec = add i64 %10, -1, !dbg !7688
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7688, !tbaa !2551
  %cmp2 = icmp ne i64 %dec, 0, !dbg !7689
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !7690

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !7691

if.else:                                          ; preds = %do.body.1
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7693, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !7695
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7695, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !7696
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7696, !tbaa !2590
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7697, !tbaa !2522
  call void %13(%struct._object* %14), !dbg !7698
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7699
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !7699
  br label %do.cond, !dbg !7701

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !7702

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !7704

if.end.4:                                         ; preds = %do.end, %do.body
  %16 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !7706
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !7706
  br label %do.cond.5, !dbg !7709

do.cond.5:                                        ; preds = %if.end.4
  br label %do.end.6, !dbg !7710

do.end.6:                                         ; preds = %do.cond.5
  br label %do.body.7, !dbg !7712

do.body.7:                                        ; preds = %do.end.6
  %17 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !7713
  call void @llvm.lifetime.start(i64 8, i8* %17) #2, !dbg !7713
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp8, metadata !810, metadata !2526), !dbg !7715
  %18 = load %struct.DictRemoverObject*, %struct.DictRemoverObject** %self, align 8, !dbg !7716, !tbaa !2522
  %dict = getelementptr inbounds %struct.DictRemoverObject, %struct.DictRemoverObject* %18, i32 0, i32 2, !dbg !7717
  %19 = load %struct._object*, %struct._object** %dict, align 8, !dbg !7717, !tbaa !2567
  store %struct._object* %19, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !7715, !tbaa !2522
  %20 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !7718, !tbaa !2522
  %cmp9 = icmp ne %struct._object* %20, null, !dbg !7719
  br i1 %cmp9, label %if.then.10, label %if.end.23, !dbg !7720

if.then.10:                                       ; preds = %do.body.7
  br label %do.body.11, !dbg !7721

do.body.11:                                       ; preds = %if.then.10
  %21 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !7723
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !7723
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !812, metadata !2526), !dbg !7725
  %22 = load %struct._object*, %struct._object** %_py_xdecref_tmp8, align 8, !dbg !7726, !tbaa !2522
  store %struct._object* %22, %struct._object** %_py_decref_tmp12, align 8, !dbg !7725, !tbaa !2522
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !7727, !tbaa !2522
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !7729
  %24 = load i64, i64* %ob_refcnt13, align 8, !dbg !7730, !tbaa !2551
  %dec14 = add i64 %24, -1, !dbg !7730
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !7730, !tbaa !2551
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !7731
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !7732

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !7733

if.else.17:                                       ; preds = %do.body.11
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !7735, !tbaa !2522
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !7737
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !7737, !tbaa !2588
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !7738
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !7738, !tbaa !2590
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !7739, !tbaa !2522
  call void %27(%struct._object* %28), !dbg !7740
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %29 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !7741
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !7741
  br label %do.cond.21, !dbg !7743

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !7744

do.end.22:                                        ; preds = %do.cond.21
  br label %if.end.23, !dbg !7746

if.end.23:                                        ; preds = %do.end.22, %do.body.7
  %30 = bitcast %struct._object** %_py_xdecref_tmp8 to i8*, !dbg !7748
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !7748
  br label %do.cond.24, !dbg !7749

do.cond.24:                                       ; preds = %if.end.23
  br label %do.end.25, !dbg !7750

do.end.25:                                        ; preds = %do.cond.24
  %31 = load %struct.DictRemoverObject*, %struct.DictRemoverObject** %self, align 8, !dbg !7752, !tbaa !2522
  %32 = bitcast %struct.DictRemoverObject* %31 to %struct._object*, !dbg !7753
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 1, !dbg !7754
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !7754, !tbaa !2588
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 38, !dbg !7755
  %34 = load void (i8*)*, void (i8*)** %tp_free, align 8, !dbg !7755, !tbaa !4691
  %35 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !7756, !tbaa !2522
  %36 = bitcast %struct._object* %35 to i8*, !dbg !7756
  call void %34(i8* %36), !dbg !7757
  %37 = bitcast %struct.DictRemoverObject** %self to i8*, !dbg !7758
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !7758
  ret void, !dbg !7758
}

; Function Attrs: uwtable
define internal %struct._object* @_DictRemover_call(%struct._object* %myself, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %myself.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %self = alloca %struct.DictRemoverObject*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp17 = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !817, metadata !2526), !dbg !7759
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !818, metadata !2526), !dbg !7760
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !819, metadata !2526), !dbg !7761
  %0 = bitcast %struct.DictRemoverObject** %self to i8*, !dbg !7762
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7762
  call void @llvm.dbg.declare(metadata %struct.DictRemoverObject** %self, metadata !820, metadata !2526), !dbg !7763
  %1 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !7764, !tbaa !2522
  %2 = bitcast %struct._object* %1 to %struct.DictRemoverObject*, !dbg !7765
  store %struct.DictRemoverObject* %2, %struct.DictRemoverObject** %self, align 8, !dbg !7763, !tbaa !2522
  %3 = load %struct.DictRemoverObject*, %struct.DictRemoverObject** %self, align 8, !dbg !7766, !tbaa !2522
  %key = getelementptr inbounds %struct.DictRemoverObject, %struct.DictRemoverObject* %3, i32 0, i32 1, !dbg !7767
  %4 = load %struct._object*, %struct._object** %key, align 8, !dbg !7767, !tbaa !2558
  %tobool = icmp ne %struct._object* %4, null, !dbg !7766
  br i1 %tobool, label %land.lhs.true, label %if.end.37, !dbg !7768

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.DictRemoverObject*, %struct.DictRemoverObject** %self, align 8, !dbg !7769, !tbaa !2522
  %dict = getelementptr inbounds %struct.DictRemoverObject, %struct.DictRemoverObject* %5, i32 0, i32 2, !dbg !7771
  %6 = load %struct._object*, %struct._object** %dict, align 8, !dbg !7771, !tbaa !2567
  %tobool1 = icmp ne %struct._object* %6, null, !dbg !7772
  br i1 %tobool1, label %if.then, label %if.end.37, !dbg !7773

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.DictRemoverObject*, %struct.DictRemoverObject** %self, align 8, !dbg !7774, !tbaa !2522
  %dict2 = getelementptr inbounds %struct.DictRemoverObject, %struct.DictRemoverObject* %7, i32 0, i32 2, !dbg !7776
  %8 = load %struct._object*, %struct._object** %dict2, align 8, !dbg !7776, !tbaa !2567
  %9 = load %struct.DictRemoverObject*, %struct.DictRemoverObject** %self, align 8, !dbg !7777, !tbaa !2522
  %key3 = getelementptr inbounds %struct.DictRemoverObject, %struct.DictRemoverObject* %9, i32 0, i32 1, !dbg !7778
  %10 = load %struct._object*, %struct._object** %key3, align 8, !dbg !7778, !tbaa !2558
  %call = call i32 @PyDict_DelItem(%struct._object* %8, %struct._object* %10), !dbg !7779
  %cmp = icmp eq i32 -1, %call, !dbg !7780
  br i1 %cmp, label %if.then.4, label %if.end, !dbg !7781

if.then.4:                                        ; preds = %if.then
  call void @PyErr_WriteUnraisable(%struct._object* @_Py_NoneStruct), !dbg !7782
  br label %if.end, !dbg !7782

if.end:                                           ; preds = %if.then.4, %if.then
  br label %do.body, !dbg !7783

do.body:                                          ; preds = %if.end
  %11 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7784
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !7784
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !821, metadata !2526), !dbg !7786
  %12 = load %struct.DictRemoverObject*, %struct.DictRemoverObject** %self, align 8, !dbg !7787, !tbaa !2522
  %key5 = getelementptr inbounds %struct.DictRemoverObject, %struct.DictRemoverObject* %12, i32 0, i32 1, !dbg !7788
  %13 = load %struct._object*, %struct._object** %key5, align 8, !dbg !7788, !tbaa !2558
  store %struct._object* %13, %struct._object** %_py_tmp, align 8, !dbg !7786, !tbaa !2522
  %14 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7789, !tbaa !2522
  %cmp6 = icmp ne %struct._object* %14, null, !dbg !7790
  br i1 %cmp6, label %if.then.7, label %if.end.13, !dbg !7791

if.then.7:                                        ; preds = %do.body
  %15 = load %struct.DictRemoverObject*, %struct.DictRemoverObject** %self, align 8, !dbg !7792, !tbaa !2522
  %key8 = getelementptr inbounds %struct.DictRemoverObject, %struct.DictRemoverObject* %15, i32 0, i32 1, !dbg !7794
  store %struct._object* null, %struct._object** %key8, align 8, !dbg !7795, !tbaa !2558
  br label %do.body.9, !dbg !7796

do.body.9:                                        ; preds = %if.then.7
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7797
  call void @llvm.lifetime.start(i64 8, i8* %16) #2, !dbg !7797
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !825, metadata !2526), !dbg !7799
  %17 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !7800, !tbaa !2522
  store %struct._object* %17, %struct._object** %_py_decref_tmp, align 8, !dbg !7799, !tbaa !2522
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7801, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !7803
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !7804, !tbaa !2551
  %dec = add i64 %19, -1, !dbg !7804
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7804, !tbaa !2551
  %cmp10 = icmp ne i64 %dec, 0, !dbg !7805
  br i1 %cmp10, label %if.then.11, label %if.else, !dbg !7806

if.then.11:                                       ; preds = %do.body.9
  br label %if.end.12, !dbg !7807

if.else:                                          ; preds = %do.body.9
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7809, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !7811
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7811, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !7812
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7812, !tbaa !2590
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7813, !tbaa !2522
  call void %22(%struct._object* %23), !dbg !7814
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.11
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7815
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !7815
  br label %do.cond, !dbg !7817

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !7818

do.end:                                           ; preds = %do.cond
  br label %if.end.13, !dbg !7820

if.end.13:                                        ; preds = %do.end, %do.body
  %25 = bitcast %struct._object** %_py_tmp to i8*, !dbg !7822
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !7822
  br label %do.cond.14, !dbg !7825

do.cond.14:                                       ; preds = %if.end.13
  br label %do.end.15, !dbg !7826

do.end.15:                                        ; preds = %do.cond.14
  br label %do.body.16, !dbg !7828

do.body.16:                                       ; preds = %do.end.15
  %26 = bitcast %struct._object** %_py_tmp17 to i8*, !dbg !7829
  call void @llvm.lifetime.start(i64 8, i8* %26) #2, !dbg !7829
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp17, metadata !829, metadata !2526), !dbg !7831
  %27 = load %struct.DictRemoverObject*, %struct.DictRemoverObject** %self, align 8, !dbg !7832, !tbaa !2522
  %dict18 = getelementptr inbounds %struct.DictRemoverObject, %struct.DictRemoverObject* %27, i32 0, i32 2, !dbg !7833
  %28 = load %struct._object*, %struct._object** %dict18, align 8, !dbg !7833, !tbaa !2567
  store %struct._object* %28, %struct._object** %_py_tmp17, align 8, !dbg !7831, !tbaa !2522
  %29 = load %struct._object*, %struct._object** %_py_tmp17, align 8, !dbg !7834, !tbaa !2522
  %cmp19 = icmp ne %struct._object* %29, null, !dbg !7835
  br i1 %cmp19, label %if.then.20, label %if.end.34, !dbg !7836

if.then.20:                                       ; preds = %do.body.16
  %30 = load %struct.DictRemoverObject*, %struct.DictRemoverObject** %self, align 8, !dbg !7837, !tbaa !2522
  %dict21 = getelementptr inbounds %struct.DictRemoverObject, %struct.DictRemoverObject* %30, i32 0, i32 2, !dbg !7839
  store %struct._object* null, %struct._object** %dict21, align 8, !dbg !7840, !tbaa !2567
  br label %do.body.22, !dbg !7841

do.body.22:                                       ; preds = %if.then.20
  %31 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !7842
  call void @llvm.lifetime.start(i64 8, i8* %31) #2, !dbg !7842
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp23, metadata !831, metadata !2526), !dbg !7844
  %32 = load %struct._object*, %struct._object** %_py_tmp17, align 8, !dbg !7845, !tbaa !2522
  store %struct._object* %32, %struct._object** %_py_decref_tmp23, align 8, !dbg !7844, !tbaa !2522
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !7846, !tbaa !2522
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0, !dbg !7848
  %34 = load i64, i64* %ob_refcnt24, align 8, !dbg !7849, !tbaa !2551
  %dec25 = add i64 %34, -1, !dbg !7849
  store i64 %dec25, i64* %ob_refcnt24, align 8, !dbg !7849, !tbaa !2551
  %cmp26 = icmp ne i64 %dec25, 0, !dbg !7850
  br i1 %cmp26, label %if.then.27, label %if.else.28, !dbg !7851

if.then.27:                                       ; preds = %do.body.22
  br label %if.end.31, !dbg !7852

if.else.28:                                       ; preds = %do.body.22
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !7854, !tbaa !2522
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 1, !dbg !7856
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8, !dbg !7856, !tbaa !2588
  %tp_dealloc30 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %36, i32 0, i32 4, !dbg !7857
  %37 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc30, align 8, !dbg !7857, !tbaa !2590
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !7858, !tbaa !2522
  call void %37(%struct._object* %38), !dbg !7859
  br label %if.end.31

if.end.31:                                        ; preds = %if.else.28, %if.then.27
  %39 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !7860
  call void @llvm.lifetime.end(i64 8, i8* %39) #2, !dbg !7860
  br label %do.cond.32, !dbg !7862

do.cond.32:                                       ; preds = %if.end.31
  br label %do.end.33, !dbg !7863

do.end.33:                                        ; preds = %do.cond.32
  br label %if.end.34, !dbg !7865

if.end.34:                                        ; preds = %do.end.33, %do.body.16
  %40 = bitcast %struct._object** %_py_tmp17 to i8*, !dbg !7867
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !7867
  br label %do.cond.35, !dbg !7868

do.cond.35:                                       ; preds = %if.end.34
  br label %do.end.36, !dbg !7869

do.end.36:                                        ; preds = %do.cond.35
  br label %if.end.37, !dbg !7871

if.end.37:                                        ; preds = %do.end.36, %land.lhs.true, %entry
  %41 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7872, !tbaa !2551
  %inc = add i64 %41, 1, !dbg !7872
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7872, !tbaa !2551
  %42 = bitcast %struct.DictRemoverObject** %self to i8*, !dbg !7873
  call void @llvm.lifetime.end(i64 8, i8* %42) #2, !dbg !7873
  ret %struct._object* @_Py_NoneStruct, !dbg !7874
}

declare i32 @PyDict_DelItem(%struct._object*, %struct._object*) #3

declare void @PyErr_WriteUnraisable(%struct._object*) #3

; Function Attrs: uwtable
define internal %struct._object* @CDataType_repeat(%struct._object* %self, i64 %length) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %length.addr = alloca i64, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !837, metadata !2526), !dbg !7875
  store i64 %length, i64* %length.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !838, metadata !2526), !dbg !7876
  %0 = load i64, i64* %length.addr, align 8, !dbg !7877, !tbaa !2704
  %cmp = icmp slt i64 %0, 0, !dbg !7879
  br i1 %cmp, label %if.then, label %if.end, !dbg !7880

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !7881, !tbaa !2522
  %2 = load i64, i64* %length.addr, align 8, !dbg !7882, !tbaa !2704
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i32 0, i32 0), i64 %2), !dbg !7883
  store %struct._object* %call, %struct._object** %retval, !dbg !7884
  br label %return, !dbg !7884

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !7885, !tbaa !2522
  %4 = load i64, i64* %length.addr, align 8, !dbg !7886, !tbaa !2704
  %call1 = call %struct._object* @PyCArrayType_from_ctype(%struct._object* %3, i64 %4), !dbg !7887
  store %struct._object* %call1, %struct._object** %retval, !dbg !7888
  br label %return, !dbg !7888

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct._object*, %struct._object** %retval, !dbg !7889
  ret %struct._object* %5, !dbg !7889
}

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #3

declare i8* @PyUnicode_AsUTF8(%struct._object*) #3

; Function Attrs: nounwind
declare i32 @strcmp(i8*, i8*) #5

declare i32 @PyCStructUnionType_update_stgdict(%struct._object*, %struct._object*, i32) #3

; Function Attrs: uwtable
define internal %struct._object* @CDataType_from_param(%struct._object* %type, %struct._object* %value) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %as_parameter = alloca %struct._object*, align 8
  %res = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %p = alloca %struct.tagPyCArgObject*, align 8
  %ob = alloca %struct._object*, align 8
  %ob_name = alloca i8*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !879, metadata !2526), !dbg !7890
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !880, metadata !2526), !dbg !7891
  %0 = bitcast %struct._object** %as_parameter to i8*, !dbg !7892
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7892
  call void @llvm.dbg.declare(metadata %struct._object** %as_parameter, metadata !881, metadata !2526), !dbg !7893
  %1 = bitcast i32* %res to i8*, !dbg !7894
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !7894
  call void @llvm.dbg.declare(metadata i32* %res, metadata !882, metadata !2526), !dbg !7895
  %2 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !7896, !tbaa !2522
  %3 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !7897, !tbaa !2522
  %call = call i32 @PyObject_IsInstance(%struct._object* %2, %struct._object* %3), !dbg !7898
  store i32 %call, i32* %res, align 4, !dbg !7895, !tbaa !2611
  %4 = load i32, i32* %res, align 4, !dbg !7899, !tbaa !2611
  %cmp = icmp eq i32 %4, -1, !dbg !7901
  br i1 %cmp, label %if.then, label %if.end, !dbg !7902

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7903
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.41, !dbg !7903

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %res, align 4, !dbg !7904, !tbaa !2611
  %tobool = icmp ne i32 %5, 0, !dbg !7904
  br i1 %tobool, label %if.then.1, label %if.end.2, !dbg !7906

if.then.1:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !7907, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0, !dbg !7909
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !7910, !tbaa !2551
  %inc = add i64 %7, 1, !dbg !7910
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !7910, !tbaa !2551
  %8 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !7911, !tbaa !2522
  store %struct._object* %8, %struct._object** %retval, !dbg !7912
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.41, !dbg !7912

if.end.2:                                         ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !7913, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !7914
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7914, !tbaa !2588
  %cmp3 = icmp eq %struct._typeobject* %10, @PyCArg_Type, !dbg !7915
  br i1 %cmp3, label %if.then.4, label %if.end.26, !dbg !7916

if.then.4:                                        ; preds = %if.end.2
  %11 = bitcast %struct.tagPyCArgObject** %p to i8*, !dbg !7917
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !7917
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %p, metadata !883, metadata !2526), !dbg !7918
  %12 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !7919, !tbaa !2522
  %13 = bitcast %struct._object* %12 to %struct.tagPyCArgObject*, !dbg !7920
  store %struct.tagPyCArgObject* %13, %struct.tagPyCArgObject** %p, align 8, !dbg !7918, !tbaa !2522
  %14 = bitcast %struct._object** %ob to i8*, !dbg !7921
  call void @llvm.lifetime.start(i64 8, i8* %14) #2, !dbg !7921
  call void @llvm.dbg.declare(metadata %struct._object** %ob, metadata !886, metadata !2526), !dbg !7922
  %15 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %p, align 8, !dbg !7923, !tbaa !2522
  %obj = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %15, i32 0, i32 4, !dbg !7924
  %16 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7924, !tbaa !7925
  store %struct._object* %16, %struct._object** %ob, align 8, !dbg !7922, !tbaa !2522
  %17 = bitcast i8** %ob_name to i8*, !dbg !7927
  call void @llvm.lifetime.start(i64 8, i8* %17) #2, !dbg !7927
  call void @llvm.dbg.declare(metadata i8** %ob_name, metadata !887, metadata !2526), !dbg !7928
  %18 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !7929
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !7929
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !888, metadata !2526), !dbg !7930
  %19 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !7931, !tbaa !2522
  %call5 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %19), !dbg !7932
  store %struct.StgDictObject* %call5, %struct.StgDictObject** %dict, align 8, !dbg !7933, !tbaa !2522
  %20 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !7934, !tbaa !2522
  %tobool6 = icmp ne %struct.StgDictObject* %20, null, !dbg !7934
  br i1 %tobool6, label %land.lhs.true, label %if.end.18, !dbg !7936

land.lhs.true:                                    ; preds = %if.then.4
  %21 = load %struct._object*, %struct._object** %ob, align 8, !dbg !7937, !tbaa !2522
  %tobool7 = icmp ne %struct._object* %21, null, !dbg !7937
  br i1 %tobool7, label %if.then.8, label %if.end.18, !dbg !7939

if.then.8:                                        ; preds = %land.lhs.true
  %22 = load %struct._object*, %struct._object** %ob, align 8, !dbg !7940, !tbaa !2522
  %23 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !7942, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %23, i32 0, i32 5, !dbg !7943
  %24 = load %struct._object*, %struct._object** %proto, align 8, !dbg !7943, !tbaa !2961
  %call9 = call i32 @PyObject_IsInstance(%struct._object* %22, %struct._object* %24), !dbg !7944
  store i32 %call9, i32* %res, align 4, !dbg !7945, !tbaa !2611
  %25 = load i32, i32* %res, align 4, !dbg !7946, !tbaa !2611
  %cmp10 = icmp eq i32 %25, -1, !dbg !7948
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !7949

if.then.11:                                       ; preds = %if.then.8
  store %struct._object* null, %struct._object** %retval, !dbg !7950
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7950

if.end.12:                                        ; preds = %if.then.8
  %26 = load i32, i32* %res, align 4, !dbg !7951, !tbaa !2611
  %tobool13 = icmp ne i32 %26, 0, !dbg !7951
  br i1 %tobool13, label %if.then.14, label %if.end.17, !dbg !7953

if.then.14:                                       ; preds = %if.end.12
  %27 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !7954, !tbaa !2522
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !7956
  %28 = load i64, i64* %ob_refcnt15, align 8, !dbg !7957, !tbaa !2551
  %inc16 = add i64 %28, 1, !dbg !7957
  store i64 %inc16, i64* %ob_refcnt15, align 8, !dbg !7957, !tbaa !2551
  %29 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !7958, !tbaa !2522
  store %struct._object* %29, %struct._object** %retval, !dbg !7959
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7959

if.end.17:                                        ; preds = %if.end.12
  br label %if.end.18, !dbg !7960

if.end.18:                                        ; preds = %if.end.17, %land.lhs.true, %if.then.4
  %30 = load %struct._object*, %struct._object** %ob, align 8, !dbg !7961, !tbaa !2522
  %tobool19 = icmp ne %struct._object* %30, null, !dbg !7962
  br i1 %tobool19, label %cond.true, label %cond.false, !dbg !7962

cond.true:                                        ; preds = %if.end.18
  %31 = load %struct._object*, %struct._object** %ob, align 8, !dbg !7963, !tbaa !2522
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !7965
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !7965, !tbaa !2588
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 1, !dbg !7966
  %33 = load i8*, i8** %tp_name, align 8, !dbg !7966, !tbaa !5264
  br label %cond.end, !dbg !7962

cond.false:                                       ; preds = %if.end.18
  br label %cond.end, !dbg !7967

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %33, %cond.true ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i32 0, i32 0), %cond.false ], !dbg !7962
  store i8* %cond, i8** %ob_name, align 8, !dbg !7969, !tbaa !2522
  %34 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7972, !tbaa !2522
  %35 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !7973, !tbaa !2522
  %36 = bitcast %struct._object* %35 to %struct._typeobject*, !dbg !7974
  %tp_name21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %36, i32 0, i32 1, !dbg !7975
  %37 = load i8*, i8** %tp_name21, align 8, !dbg !7975, !tbaa !5264
  %38 = load i8*, i8** %ob_name, align 8, !dbg !7976, !tbaa !2522
  %call22 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %34, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.59, i32 0, i32 0), i8* %37, i8* %38), !dbg !7977
  store %struct._object* null, %struct._object** %retval, !dbg !7978
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7978

cleanup:                                          ; preds = %cond.end, %if.then.14, %if.then.11
  %39 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !7979
  call void @llvm.lifetime.end(i64 8, i8* %39) #2, !dbg !7979
  %40 = bitcast i8** %ob_name to i8*, !dbg !7979
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !7979
  %41 = bitcast %struct._object** %ob to i8*, !dbg !7979
  call void @llvm.lifetime.end(i64 8, i8* %41) #2, !dbg !7979
  %42 = bitcast %struct.tagPyCArgObject** %p to i8*, !dbg !7979
  call void @llvm.lifetime.end(i64 8, i8* %42) #2, !dbg !7979
  br label %cleanup.41

if.end.26:                                        ; preds = %if.end.2
  %43 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !7980, !tbaa !2522
  %call27 = call %struct._object* @PyObject_GetAttrString(%struct._object* %43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i32 0, i32 0)), !dbg !7981
  store %struct._object* %call27, %struct._object** %as_parameter, align 8, !dbg !7982, !tbaa !2522
  %44 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !7983, !tbaa !2522
  %tobool28 = icmp ne %struct._object* %44, null, !dbg !7983
  br i1 %tobool28, label %if.then.29, label %if.end.36, !dbg !7984

if.then.29:                                       ; preds = %if.end.26
  %45 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !7985, !tbaa !2522
  %46 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !7986, !tbaa !2522
  %call30 = call %struct._object* @CDataType_from_param(%struct._object* %45, %struct._object* %46), !dbg !7987
  store %struct._object* %call30, %struct._object** %value.addr, align 8, !dbg !7988, !tbaa !2522
  br label %do.body, !dbg !7989

do.body:                                          ; preds = %if.then.29
  %47 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7990
  call void @llvm.lifetime.start(i64 8, i8* %47) #2, !dbg !7990
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !889, metadata !2526), !dbg !7992
  %48 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !7993, !tbaa !2522
  store %struct._object* %48, %struct._object** %_py_decref_tmp, align 8, !dbg !7992, !tbaa !2522
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7994, !tbaa !2522
  %ob_refcnt31 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0, !dbg !7996
  %50 = load i64, i64* %ob_refcnt31, align 8, !dbg !7997, !tbaa !2551
  %dec = add i64 %50, -1, !dbg !7997
  store i64 %dec, i64* %ob_refcnt31, align 8, !dbg !7997, !tbaa !2551
  %cmp32 = icmp ne i64 %dec, 0, !dbg !7998
  br i1 %cmp32, label %if.then.33, label %if.else, !dbg !7999

if.then.33:                                       ; preds = %do.body
  br label %if.end.35, !dbg !8000

if.else:                                          ; preds = %do.body
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8002, !tbaa !2522
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 1, !dbg !8004
  %52 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8, !dbg !8004, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %52, i32 0, i32 4, !dbg !8005
  %53 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8005, !tbaa !2590
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8006, !tbaa !2522
  call void %53(%struct._object* %54), !dbg !8007
  br label %if.end.35

if.end.35:                                        ; preds = %if.else, %if.then.33
  %55 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8008
  call void @llvm.lifetime.end(i64 8, i8* %55) #2, !dbg !8008
  br label %do.cond, !dbg !8010

do.cond:                                          ; preds = %if.end.35
  br label %do.end, !dbg !8011

do.end:                                           ; preds = %do.cond
  %56 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8013, !tbaa !2522
  store %struct._object* %56, %struct._object** %retval, !dbg !8014
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.41, !dbg !8014

if.end.36:                                        ; preds = %if.end.26
  %57 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8015, !tbaa !2522
  %58 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !8016, !tbaa !2522
  %59 = bitcast %struct._object* %58 to %struct._typeobject*, !dbg !8017
  %tp_name37 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 1, !dbg !8018
  %60 = load i8*, i8** %tp_name37, align 8, !dbg !8018, !tbaa !5264
  %61 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8019, !tbaa !2522
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 1, !dbg !8020
  %62 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8, !dbg !8020, !tbaa !2588
  %tp_name39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %62, i32 0, i32 1, !dbg !8021
  %63 = load i8*, i8** %tp_name39, align 8, !dbg !8021, !tbaa !5264
  %call40 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %57, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.61, i32 0, i32 0), i8* %60, i8* %63), !dbg !8022
  store %struct._object* null, %struct._object** %retval, !dbg !8023
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.41, !dbg !8023

cleanup.41:                                       ; preds = %if.end.36, %do.end, %cleanup, %if.then.1, %if.then
  %64 = bitcast i32* %res to i8*, !dbg !8024
  call void @llvm.lifetime.end(i64 4, i8* %64) #2, !dbg !8024
  %65 = bitcast %struct._object** %as_parameter to i8*, !dbg !8024
  call void @llvm.lifetime.end(i64 8, i8* %65) #2, !dbg !8024
  %66 = load %struct._object*, %struct._object** %retval, !dbg !8024
  ret %struct._object* %66, !dbg !8024
}

; Function Attrs: uwtable
define internal %struct._object* @CDataType_from_address(%struct._object* %type, %struct._object* %value) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %buf = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !895, metadata !2526), !dbg !8025
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !896, metadata !2526), !dbg !8026
  %0 = bitcast i8** %buf to i8*, !dbg !8027
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8027
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !897, metadata !2526), !dbg !8028
  %1 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8029, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !8031
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8031, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19, !dbg !8032
  %3 = load i64, i64* %tp_flags, align 8, !dbg !8032, !tbaa !2849
  %and = and i64 %3, 16777216, !dbg !8033
  %cmp = icmp ne i64 %and, 0, !dbg !8034
  br i1 %cmp, label %if.end, label %if.then, !dbg !8035

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8036, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i32 0, i32 0)), !dbg !8038
  store %struct._object* null, %struct._object** %retval, !dbg !8039
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8039

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8040, !tbaa !2522
  %call = call i8* @PyLong_AsVoidPtr(%struct._object* %5), !dbg !8041
  store i8* %call, i8** %buf, align 8, !dbg !8042, !tbaa !2522
  %call1 = call %struct._object* @PyErr_Occurred(), !dbg !8043
  %tobool = icmp ne %struct._object* %call1, null, !dbg !8043
  br i1 %tobool, label %if.then.2, label %if.end.3, !dbg !8045

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !8046
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8046

if.end.3:                                         ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !8047, !tbaa !2522
  %7 = load i8*, i8** %buf, align 8, !dbg !8048, !tbaa !2522
  %call4 = call %struct._object* @PyCData_AtAddress(%struct._object* %6, i8* %7), !dbg !8049
  store %struct._object* %call4, %struct._object** %retval, !dbg !8050
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8050

cleanup:                                          ; preds = %if.end.3, %if.then.2, %if.then
  %8 = bitcast i8** %buf to i8*, !dbg !8051
  call void @llvm.lifetime.end(i64 8, i8* %8) #2, !dbg !8051
  %9 = load %struct._object*, %struct._object** %retval, !dbg !8051
  ret %struct._object* %9, !dbg !8051
}

; Function Attrs: uwtable
define internal %struct._object* @CDataType_from_buffer(%struct._object* %type, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %buffer = alloca i8*, align 8
  %buffer_len = alloca i64, align 8
  %offset = alloca i64, align 8
  %obj = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !900, metadata !2526), !dbg !8052
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !901, metadata !2526), !dbg !8053
  %0 = bitcast i8** %buffer to i8*, !dbg !8054
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8054
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !902, metadata !2526), !dbg !8055
  %1 = bitcast i64* %buffer_len to i8*, !dbg !8056
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8056
  call void @llvm.dbg.declare(metadata i64* %buffer_len, metadata !903, metadata !2526), !dbg !8057
  %2 = bitcast i64* %offset to i8*, !dbg !8058
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8058
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !904, metadata !2526), !dbg !8059
  store i64 0, i64* %offset, align 8, !dbg !8059, !tbaa !2704
  %3 = bitcast %struct._object** %obj to i8*, !dbg !8060
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !8060
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !905, metadata !2526), !dbg !8061
  %4 = bitcast %struct._object** %result to i8*, !dbg !8060
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !8060
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !906, metadata !2526), !dbg !8062
  %5 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !8063
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !8063
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !907, metadata !2526), !dbg !8064
  %6 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !8065, !tbaa !2522
  %call = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %6), !dbg !8066
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !8064, !tbaa !2522
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8067, !tbaa !2522
  %call1 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0), %struct._object** %obj, i64* %offset), !dbg !8069
  %tobool = icmp ne i32 %call1, 0, !dbg !8069
  br i1 %tobool, label %if.end, label %if.then, !dbg !8070

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8071
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8071

if.end:                                           ; preds = %entry
  %8 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8072, !tbaa !2522
  %call2 = call i32 @PyObject_AsWriteBuffer(%struct._object* %8, i8** %buffer, i64* %buffer_len), !dbg !8074
  %cmp = icmp eq i32 -1, %call2, !dbg !8075
  br i1 %cmp, label %if.then.3, label %if.end.4, !dbg !8076

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !8077
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8077

if.end.4:                                         ; preds = %if.end
  %9 = load i64, i64* %offset, align 8, !dbg !8078, !tbaa !2704
  %cmp5 = icmp slt i64 %9, 0, !dbg !8080
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !8081

if.then.6:                                        ; preds = %if.end.4
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8082, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.64, i32 0, i32 0)), !dbg !8084
  store %struct._object* null, %struct._object** %retval, !dbg !8085
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8085

if.end.7:                                         ; preds = %if.end.4
  %11 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8086, !tbaa !2522
  %size = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %11, i32 0, i32 1, !dbg !8088
  %12 = load i64, i64* %size, align 8, !dbg !8088, !tbaa !3101
  %13 = load i64, i64* %buffer_len, align 8, !dbg !8089, !tbaa !2704
  %14 = load i64, i64* %offset, align 8, !dbg !8090, !tbaa !2704
  %sub = sub i64 %13, %14, !dbg !8091
  %cmp8 = icmp sgt i64 %12, %sub, !dbg !8092
  br i1 %cmp8, label %if.then.9, label %if.end.12, !dbg !8093

if.then.9:                                        ; preds = %if.end.7
  %15 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8094, !tbaa !2522
  %16 = load i64, i64* %buffer_len, align 8, !dbg !8096, !tbaa !2704
  %17 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8097, !tbaa !2522
  %size10 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %17, i32 0, i32 1, !dbg !8098
  %18 = load i64, i64* %size10, align 8, !dbg !8098, !tbaa !3101
  %19 = load i64, i64* %offset, align 8, !dbg !8099, !tbaa !2704
  %add = add i64 %18, %19, !dbg !8100
  %call11 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %15, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0), i64 %16, i64 %add), !dbg !8101
  store %struct._object* null, %struct._object** %retval, !dbg !8102
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8102

if.end.12:                                        ; preds = %if.end.7
  %20 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !8103, !tbaa !2522
  %21 = load i8*, i8** %buffer, align 8, !dbg !8104, !tbaa !2522
  %22 = load i64, i64* %offset, align 8, !dbg !8105, !tbaa !2704
  %add.ptr = getelementptr i8, i8* %21, i64 %22, !dbg !8106
  %call13 = call %struct._object* @PyCData_AtAddress(%struct._object* %20, i8* %add.ptr), !dbg !8107
  store %struct._object* %call13, %struct._object** %result, align 8, !dbg !8108, !tbaa !2522
  %23 = load %struct._object*, %struct._object** %result, align 8, !dbg !8109, !tbaa !2522
  %cmp14 = icmp eq %struct._object* %23, null, !dbg !8111
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !8112

if.then.15:                                       ; preds = %if.end.12
  store %struct._object* null, %struct._object** %retval, !dbg !8113
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8113

if.end.16:                                        ; preds = %if.end.12
  %24 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8114, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !8115
  %25 = load i64, i64* %ob_refcnt, align 8, !dbg !8116, !tbaa !2551
  %inc = add i64 %25, 1, !dbg !8116
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8116, !tbaa !2551
  %26 = load %struct._object*, %struct._object** %result, align 8, !dbg !8117, !tbaa !2522
  %27 = bitcast %struct._object* %26 to %struct.tagCDataObject*, !dbg !8119
  %28 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8120, !tbaa !2522
  %call17 = call i32 @KeepRef(%struct.tagCDataObject* %27, i64 -1, %struct._object* %28), !dbg !8121
  %cmp18 = icmp eq i32 -1, %call17, !dbg !8122
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !8123

if.then.19:                                       ; preds = %if.end.16
  store %struct._object* null, %struct._object** %retval, !dbg !8124
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8124

if.end.20:                                        ; preds = %if.end.16
  %29 = load %struct._object*, %struct._object** %result, align 8, !dbg !8126, !tbaa !2522
  store %struct._object* %29, %struct._object** %retval, !dbg !8127
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8127

cleanup:                                          ; preds = %if.end.20, %if.then.19, %if.then.15, %if.then.9, %if.then.6, %if.then.3, %if.then
  %30 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !8128
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !8128
  %31 = bitcast %struct._object** %result to i8*, !dbg !8128
  call void @llvm.lifetime.end(i64 8, i8* %31) #2, !dbg !8128
  %32 = bitcast %struct._object** %obj to i8*, !dbg !8128
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !8128
  %33 = bitcast i64* %offset to i8*, !dbg !8128
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !8128
  %34 = bitcast i64* %buffer_len to i8*, !dbg !8128
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !8128
  %35 = bitcast i8** %buffer to i8*, !dbg !8128
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !8128
  %36 = load %struct._object*, %struct._object** %retval, !dbg !8128
  ret %struct._object* %36, !dbg !8128
}

; Function Attrs: uwtable
define internal %struct._object* @CDataType_from_buffer_copy(%struct._object* %type, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %buffer = alloca i8*, align 8
  %buffer_len = alloca i64, align 8
  %offset = alloca i64, align 8
  %obj = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !910, metadata !2526), !dbg !8129
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !911, metadata !2526), !dbg !8130
  %0 = bitcast i8** %buffer to i8*, !dbg !8131
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8131
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !912, metadata !2526), !dbg !8132
  %1 = bitcast i64* %buffer_len to i8*, !dbg !8133
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8133
  call void @llvm.dbg.declare(metadata i64* %buffer_len, metadata !913, metadata !2526), !dbg !8134
  %2 = bitcast i64* %offset to i8*, !dbg !8135
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8135
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !914, metadata !2526), !dbg !8136
  store i64 0, i64* %offset, align 8, !dbg !8136, !tbaa !2704
  %3 = bitcast %struct._object** %obj to i8*, !dbg !8137
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !8137
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !915, metadata !2526), !dbg !8138
  %4 = bitcast %struct._object** %result to i8*, !dbg !8137
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !8137
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !916, metadata !2526), !dbg !8139
  %5 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !8140
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !8140
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !917, metadata !2526), !dbg !8141
  %6 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !8142, !tbaa !2522
  %call = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %6), !dbg !8143
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !8141, !tbaa !2522
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8144, !tbaa !2522
  %call1 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0), %struct._object** %obj, i64* %offset), !dbg !8146
  %tobool = icmp ne i32 %call1, 0, !dbg !8146
  br i1 %tobool, label %if.end, label %if.then, !dbg !8147

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8148
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8148

if.end:                                           ; preds = %entry
  %8 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8149, !tbaa !2522
  %call2 = call i32 @PyObject_AsReadBuffer(%struct._object* %8, i8** %buffer, i64* %buffer_len), !dbg !8151
  %cmp = icmp eq i32 -1, %call2, !dbg !8152
  br i1 %cmp, label %if.then.3, label %if.end.4, !dbg !8153

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !8154
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8154

if.end.4:                                         ; preds = %if.end
  %9 = load i64, i64* %offset, align 8, !dbg !8155, !tbaa !2704
  %cmp5 = icmp slt i64 %9, 0, !dbg !8157
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !8158

if.then.6:                                        ; preds = %if.end.4
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8159, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.64, i32 0, i32 0)), !dbg !8161
  store %struct._object* null, %struct._object** %retval, !dbg !8162
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8162

if.end.7:                                         ; preds = %if.end.4
  %11 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8163, !tbaa !2522
  %size = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %11, i32 0, i32 1, !dbg !8165
  %12 = load i64, i64* %size, align 8, !dbg !8165, !tbaa !3101
  %13 = load i64, i64* %buffer_len, align 8, !dbg !8166, !tbaa !2704
  %14 = load i64, i64* %offset, align 8, !dbg !8167, !tbaa !2704
  %sub = sub i64 %13, %14, !dbg !8168
  %cmp8 = icmp sgt i64 %12, %sub, !dbg !8169
  br i1 %cmp8, label %if.then.9, label %if.end.12, !dbg !8170

if.then.9:                                        ; preds = %if.end.7
  %15 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8171, !tbaa !2522
  %16 = load i64, i64* %buffer_len, align 8, !dbg !8173, !tbaa !2704
  %17 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8174, !tbaa !2522
  %size10 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %17, i32 0, i32 1, !dbg !8175
  %18 = load i64, i64* %size10, align 8, !dbg !8175, !tbaa !3101
  %19 = load i64, i64* %offset, align 8, !dbg !8176, !tbaa !2704
  %add = add i64 %18, %19, !dbg !8177
  %call11 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %15, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0), i64 %16, i64 %add), !dbg !8178
  store %struct._object* null, %struct._object** %retval, !dbg !8179
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8179

if.end.12:                                        ; preds = %if.end.7
  %20 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !8180, !tbaa !2522
  %21 = bitcast %struct._object* %20 to %struct._typeobject*, !dbg !8181
  %call13 = call %struct._object* @GenericPyCData_new(%struct._typeobject* %21, %struct._object* null, %struct._object* null), !dbg !8182
  store %struct._object* %call13, %struct._object** %result, align 8, !dbg !8183, !tbaa !2522
  %22 = load %struct._object*, %struct._object** %result, align 8, !dbg !8184, !tbaa !2522
  %cmp14 = icmp eq %struct._object* %22, null, !dbg !8186
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !8187

if.then.15:                                       ; preds = %if.end.12
  store %struct._object* null, %struct._object** %retval, !dbg !8188
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8188

if.end.16:                                        ; preds = %if.end.12
  %23 = load %struct._object*, %struct._object** %result, align 8, !dbg !8189, !tbaa !2522
  %24 = bitcast %struct._object* %23 to %struct.tagCDataObject*, !dbg !8190
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %24, i32 0, i32 1, !dbg !8191
  %25 = load i8*, i8** %b_ptr, align 8, !dbg !8191, !tbaa !4817
  %26 = load i8*, i8** %buffer, align 8, !dbg !8192, !tbaa !2522
  %27 = load i64, i64* %offset, align 8, !dbg !8193, !tbaa !2704
  %add.ptr = getelementptr i8, i8* %26, i64 %27, !dbg !8194
  %28 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8195, !tbaa !2522
  %size17 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %28, i32 0, i32 1, !dbg !8196
  %29 = load i64, i64* %size17, align 8, !dbg !8196, !tbaa !3101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %add.ptr, i64 %29, i32 1, i1 false), !dbg !8197
  %30 = load %struct._object*, %struct._object** %result, align 8, !dbg !8198, !tbaa !2522
  store %struct._object* %30, %struct._object** %retval, !dbg !8199
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8199

cleanup:                                          ; preds = %if.end.16, %if.then.15, %if.then.9, %if.then.6, %if.then.3, %if.then
  %31 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !8200
  call void @llvm.lifetime.end(i64 8, i8* %31) #2, !dbg !8200
  %32 = bitcast %struct._object** %result to i8*, !dbg !8200
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !8200
  %33 = bitcast %struct._object** %obj to i8*, !dbg !8200
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !8200
  %34 = bitcast i64* %offset to i8*, !dbg !8200
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !8200
  %35 = bitcast i64* %buffer_len to i8*, !dbg !8200
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !8200
  %36 = bitcast i8** %buffer to i8*, !dbg !8200
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !8200
  %37 = load %struct._object*, %struct._object** %retval, !dbg !8200
  ret %struct._object* %37, !dbg !8200
}

; Function Attrs: uwtable
define internal %struct._object* @CDataType_in_dll(%struct._object* %type, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %dll = alloca %struct._object*, align 8
  %name = alloca i8*, align 8
  %obj = alloca %struct._object*, align 8
  %handle = alloca i8*, align 8
  %address = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp13 = alloca %struct._object*, align 8
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !920, metadata !2526), !dbg !8201
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !921, metadata !2526), !dbg !8202
  %0 = bitcast %struct._object** %dll to i8*, !dbg !8203
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8203
  call void @llvm.dbg.declare(metadata %struct._object** %dll, metadata !922, metadata !2526), !dbg !8204
  %1 = bitcast i8** %name to i8*, !dbg !8205
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8205
  call void @llvm.dbg.declare(metadata i8** %name, metadata !923, metadata !2526), !dbg !8206
  %2 = bitcast %struct._object** %obj to i8*, !dbg !8207
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8207
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !924, metadata !2526), !dbg !8208
  %3 = bitcast i8** %handle to i8*, !dbg !8209
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !8209
  call void @llvm.dbg.declare(metadata i8** %handle, metadata !925, metadata !2526), !dbg !8210
  %4 = bitcast i8** %address to i8*, !dbg !8211
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !8211
  call void @llvm.dbg.declare(metadata i8** %address, metadata !926, metadata !2526), !dbg !8212
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8213, !tbaa !2522
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i32 0, i32 0), %struct._object** %dll, i8** %name), !dbg !8215
  %tobool = icmp ne i32 %call, 0, !dbg !8215
  br i1 %tobool, label %if.end, label %if.then, !dbg !8216

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8217
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8217

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %dll, align 8, !dbg !8218, !tbaa !2522
  %call1 = call %struct._object* @PyObject_GetAttrString(%struct._object* %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i32 0, i32 0)), !dbg !8219
  store %struct._object* %call1, %struct._object** %obj, align 8, !dbg !8220, !tbaa !2522
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8221, !tbaa !2522
  %tobool2 = icmp ne %struct._object* %7, null, !dbg !8221
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !8223

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !8224
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8224

if.end.4:                                         ; preds = %if.end
  %8 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8225, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !8226
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8226, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 19, !dbg !8227
  %10 = load i64, i64* %tp_flags, align 8, !dbg !8227, !tbaa !2849
  %and = and i64 %10, 16777216, !dbg !8228
  %cmp = icmp ne i64 %and, 0, !dbg !8229
  br i1 %cmp, label %if.end.10, label %if.then.5, !dbg !8230

if.then.5:                                        ; preds = %if.end.4
  %11 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8231, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.68, i32 0, i32 0)), !dbg !8232
  br label %do.body, !dbg !8233

do.body:                                          ; preds = %if.then.5
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8234
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !8234
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !927, metadata !2526), !dbg !8236
  %13 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8237, !tbaa !2522
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !8236, !tbaa !2522
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8238, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !8240
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !8241, !tbaa !2551
  %dec = add i64 %15, -1, !dbg !8241
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8241, !tbaa !2551
  %cmp6 = icmp ne i64 %dec, 0, !dbg !8242
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !8243

if.then.7:                                        ; preds = %do.body
  br label %if.end.9, !dbg !8244

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8246, !tbaa !2522
  %ob_type8 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !8248
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type8, align 8, !dbg !8248, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !8249
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8249, !tbaa !2590
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8250, !tbaa !2522
  call void %18(%struct._object* %19), !dbg !8251
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.7
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8252
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !8252
  br label %do.cond, !dbg !8254

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !8255

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !8257
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8257

if.end.10:                                        ; preds = %if.end.4
  %21 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8258, !tbaa !2522
  %call11 = call i8* @PyLong_AsVoidPtr(%struct._object* %21), !dbg !8259
  store i8* %call11, i8** %handle, align 8, !dbg !8260, !tbaa !2522
  br label %do.body.12, !dbg !8261

do.body.12:                                       ; preds = %if.end.10
  %22 = bitcast %struct._object** %_py_decref_tmp13 to i8*, !dbg !8262
  call void @llvm.lifetime.start(i64 8, i8* %22) #2, !dbg !8262
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp13, metadata !931, metadata !2526), !dbg !8264
  %23 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8265, !tbaa !2522
  store %struct._object* %23, %struct._object** %_py_decref_tmp13, align 8, !dbg !8264, !tbaa !2522
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !8266, !tbaa !2522
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !8268
  %25 = load i64, i64* %ob_refcnt14, align 8, !dbg !8269, !tbaa !2551
  %dec15 = add i64 %25, -1, !dbg !8269
  store i64 %dec15, i64* %ob_refcnt14, align 8, !dbg !8269, !tbaa !2551
  %cmp16 = icmp ne i64 %dec15, 0, !dbg !8270
  br i1 %cmp16, label %if.then.17, label %if.else.18, !dbg !8271

if.then.17:                                       ; preds = %do.body.12
  br label %if.end.21, !dbg !8272

if.else.18:                                       ; preds = %do.body.12
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !8274, !tbaa !2522
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !8276
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !8276, !tbaa !2588
  %tp_dealloc20 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !8277
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc20, align 8, !dbg !8277, !tbaa !2590
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp13, align 8, !dbg !8278, !tbaa !2522
  call void %28(%struct._object* %29), !dbg !8279
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.18, %if.then.17
  %30 = bitcast %struct._object** %_py_decref_tmp13 to i8*, !dbg !8280
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !8280
  br label %do.cond.22, !dbg !8282

do.cond.22:                                       ; preds = %if.end.21
  br label %do.end.23, !dbg !8283

do.end.23:                                        ; preds = %do.cond.22
  %call24 = call %struct._object* @PyErr_Occurred(), !dbg !8285
  %tobool25 = icmp ne %struct._object* %call24, null, !dbg !8285
  br i1 %tobool25, label %if.then.26, label %if.end.27, !dbg !8287

if.then.26:                                       ; preds = %do.end.23
  %31 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8288, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %31, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.69, i32 0, i32 0)), !dbg !8290
  store %struct._object* null, %struct._object** %retval, !dbg !8291
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8291

if.end.27:                                        ; preds = %do.end.23
  %32 = load i8*, i8** %handle, align 8, !dbg !8292, !tbaa !2522
  %33 = load i8*, i8** %name, align 8, !dbg !8293, !tbaa !2522
  %call28 = call i8* @dlsym(i8* %32, i8* %33) #2, !dbg !8294
  store i8* %call28, i8** %address, align 8, !dbg !8295, !tbaa !2522
  %34 = load i8*, i8** %address, align 8, !dbg !8296, !tbaa !2522
  %tobool29 = icmp ne i8* %34, null, !dbg !8296
  br i1 %tobool29, label %if.end.32, label %if.then.30, !dbg !8298

if.then.30:                                       ; preds = %if.end.27
  %35 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !8299, !tbaa !2522
  %call31 = call i8* @dlerror() #2, !dbg !8301
  call void @PyErr_SetString(%struct._object* %35, i8* %call31), !dbg !8302
  store %struct._object* null, %struct._object** %retval, !dbg !8303
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8303

if.end.32:                                        ; preds = %if.end.27
  %36 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !8304, !tbaa !2522
  %37 = load i8*, i8** %address, align 8, !dbg !8305, !tbaa !2522
  %call33 = call %struct._object* @PyCData_AtAddress(%struct._object* %36, i8* %37), !dbg !8306
  store %struct._object* %call33, %struct._object** %retval, !dbg !8307
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8307

cleanup:                                          ; preds = %if.end.32, %if.then.30, %if.then.26, %do.end, %if.then.3, %if.then
  %38 = bitcast i8** %address to i8*, !dbg !8308
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !8308
  %39 = bitcast i8** %handle to i8*, !dbg !8308
  call void @llvm.lifetime.end(i64 8, i8* %39) #2, !dbg !8308
  %40 = bitcast %struct._object** %obj to i8*, !dbg !8308
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !8308
  %41 = bitcast i8** %name to i8*, !dbg !8308
  call void @llvm.lifetime.end(i64 8, i8* %41) #2, !dbg !8308
  %42 = bitcast %struct._object** %dll to i8*, !dbg !8308
  call void @llvm.lifetime.end(i64 8, i8* %42) #2, !dbg !8308
  %43 = load %struct._object*, %struct._object** %retval, !dbg !8308
  ret %struct._object* %43, !dbg !8308
}

declare i32 @PyObject_IsInstance(%struct._object*, %struct._object*) #3

declare i8* @PyLong_AsVoidPtr(%struct._object*) #3

declare %struct._object* @PyErr_Occurred() #3

declare i32 @_PyArg_ParseTuple_SizeT(%struct._object*, i8*, ...) #3

declare i32 @PyObject_AsWriteBuffer(%struct._object*, i8**, i64*) #3

declare i32 @PyObject_AsReadBuffer(%struct._object*, i8**, i64*) #3

; Function Attrs: nounwind
declare i8* @dlsym(i8*, i8*) #5

; Function Attrs: nounwind
declare i8* @dlerror() #5

; Function Attrs: uwtable
define internal %struct._object* @StructUnionType_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds, i32 %isStruct) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %isStruct.addr = alloca i32, align 4
  %result = alloca %struct._typeobject*, align 8
  %fields = alloca %struct._object*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp16 = alloca %struct._object*, align 8
  %_py_decref_tmp28 = alloca %struct._object*, align 8
  %_py_decref_tmp41 = alloca %struct._object*, align 8
  %_py_decref_tmp59 = alloca %struct._object*, align 8
  %basedict = alloca %struct.StgDictObject*, align 8
  %_py_decref_tmp82 = alloca %struct._object*, align 8
  %_py_decref_tmp100 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !944, metadata !2526), !dbg !8309
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !945, metadata !2526), !dbg !8310
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !946, metadata !2526), !dbg !8311
  store i32 %isStruct, i32* %isStruct.addr, align 4, !tbaa !2611
  call void @llvm.dbg.declare(metadata i32* %isStruct.addr, metadata !947, metadata !2526), !dbg !8312
  %0 = bitcast %struct._typeobject** %result to i8*, !dbg !8313
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8313
  call void @llvm.dbg.declare(metadata %struct._typeobject** %result, metadata !948, metadata !2526), !dbg !8314
  %1 = bitcast %struct._object** %fields to i8*, !dbg !8315
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8315
  call void @llvm.dbg.declare(metadata %struct._object** %fields, metadata !949, metadata !2526), !dbg !8316
  %2 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !8317
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8317
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !950, metadata !2526), !dbg !8318
  %3 = load %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyType_Type, i32 0, i32 37), align 8, !dbg !8319, !tbaa !3244
  %4 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8320, !tbaa !2522
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8321, !tbaa !2522
  %6 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !8322, !tbaa !2522
  %call = call %struct._object* %3(%struct._typeobject* %4, %struct._object* %5, %struct._object* %6), !dbg !8323
  %7 = bitcast %struct._object* %call to %struct._typeobject*, !dbg !8324
  store %struct._typeobject* %7, %struct._typeobject** %result, align 8, !dbg !8325, !tbaa !2522
  %8 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8326, !tbaa !2522
  %tobool = icmp ne %struct._typeobject* %8, null, !dbg !8326
  br i1 %tobool, label %if.end, label %if.then, !dbg !8328

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8329
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.112, !dbg !8329

if.end:                                           ; preds = %entry
  %9 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8330, !tbaa !2522
  %tp_dict = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 31, !dbg !8332
  %10 = load %struct._object*, %struct._object** %tp_dict, align 8, !dbg !8332, !tbaa !3284
  %call1 = call %struct._object* @PyDict_GetItemString(%struct._object* %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.70, i32 0, i32 0)), !dbg !8333
  %tobool2 = icmp ne %struct._object* %call1, null, !dbg !8333
  br i1 %tobool2, label %if.then.3, label %if.end.4, !dbg !8334

if.then.3:                                        ; preds = %if.end
  %11 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8335, !tbaa !2522
  %12 = bitcast %struct._typeobject* %11 to %struct._object*, !dbg !8336
  store %struct._object* %12, %struct._object** %retval, !dbg !8337
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.112, !dbg !8337

if.end.4:                                         ; preds = %if.end
  %call5 = call %struct._object* @PyObject_CallObject(%struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyCStgDict_Type, i32 0, i32 0, i32 0), %struct._object* null), !dbg !8338
  %13 = bitcast %struct._object* %call5 to %struct.StgDictObject*, !dbg !8339
  store %struct.StgDictObject* %13, %struct.StgDictObject** %dict, align 8, !dbg !8340, !tbaa !2522
  %14 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8341, !tbaa !2522
  %tobool6 = icmp ne %struct.StgDictObject* %14, null, !dbg !8341
  br i1 %tobool6, label %if.end.10, label %if.then.7, !dbg !8342

if.then.7:                                        ; preds = %if.end.4
  br label %do.body, !dbg !8343

do.body:                                          ; preds = %if.then.7
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8344
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !8344
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !951, metadata !2526), !dbg !8346
  %16 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8347, !tbaa !2522
  %17 = bitcast %struct._typeobject* %16 to %struct._object*, !dbg !8348
  store %struct._object* %17, %struct._object** %_py_decref_tmp, align 8, !dbg !8346, !tbaa !2522
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8349, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !8351
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !8352, !tbaa !2551
  %dec = add i64 %19, -1, !dbg !8352
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8352, !tbaa !2551
  %cmp = icmp ne i64 %dec, 0, !dbg !8353
  br i1 %cmp, label %if.then.8, label %if.else, !dbg !8354

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !8355

if.else:                                          ; preds = %do.body
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8357, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !8359
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8359, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !8360
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8360, !tbaa !2590
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8361, !tbaa !2522
  call void %22(%struct._object* %23), !dbg !8362
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8363
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !8363
  br label %do.cond, !dbg !8365

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !8366

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !8368
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.112, !dbg !8368

if.end.10:                                        ; preds = %if.end.4
  %25 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8369, !tbaa !2522
  %26 = bitcast %struct.StgDictObject* %25 to %struct._object*, !dbg !8370
  %27 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8371, !tbaa !2522
  %tp_dict11 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 31, !dbg !8372
  %28 = load %struct._object*, %struct._object** %tp_dict11, align 8, !dbg !8372, !tbaa !3284
  %call12 = call i32 @PyDict_Update(%struct._object* %26, %struct._object* %28), !dbg !8373
  %cmp13 = icmp eq i32 -1, %call12, !dbg !8374
  br i1 %cmp13, label %if.then.14, label %if.end.39, !dbg !8375

if.then.14:                                       ; preds = %if.end.10
  br label %do.body.15, !dbg !8376

do.body.15:                                       ; preds = %if.then.14
  %29 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !8377
  call void @llvm.lifetime.start(i64 8, i8* %29) #2, !dbg !8377
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp16, metadata !955, metadata !2526), !dbg !8379
  %30 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8380, !tbaa !2522
  %31 = bitcast %struct._typeobject* %30 to %struct._object*, !dbg !8381
  store %struct._object* %31, %struct._object** %_py_decref_tmp16, align 8, !dbg !8379, !tbaa !2522
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !8382, !tbaa !2522
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !8384
  %33 = load i64, i64* %ob_refcnt17, align 8, !dbg !8385, !tbaa !2551
  %dec18 = add i64 %33, -1, !dbg !8385
  store i64 %dec18, i64* %ob_refcnt17, align 8, !dbg !8385, !tbaa !2551
  %cmp19 = icmp ne i64 %dec18, 0, !dbg !8386
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !8387

if.then.20:                                       ; preds = %do.body.15
  br label %if.end.24, !dbg !8388

if.else.21:                                       ; preds = %do.body.15
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !8390, !tbaa !2522
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !8392
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !8392, !tbaa !2588
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !8393
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !8393, !tbaa !2590
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !8394, !tbaa !2522
  call void %36(%struct._object* %37), !dbg !8395
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  %38 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !8396
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !8396
  br label %do.cond.25, !dbg !8398

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !8399

do.end.26:                                        ; preds = %do.cond.25
  br label %do.body.27, !dbg !8401

do.body.27:                                       ; preds = %do.end.26
  %39 = bitcast %struct._object** %_py_decref_tmp28 to i8*, !dbg !8402
  call void @llvm.lifetime.start(i64 8, i8* %39) #2, !dbg !8402
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp28, metadata !959, metadata !2526), !dbg !8404
  %40 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8405, !tbaa !2522
  %41 = bitcast %struct.StgDictObject* %40 to %struct._object*, !dbg !8406
  store %struct._object* %41, %struct._object** %_py_decref_tmp28, align 8, !dbg !8404, !tbaa !2522
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !8407, !tbaa !2522
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0, !dbg !8409
  %43 = load i64, i64* %ob_refcnt29, align 8, !dbg !8410, !tbaa !2551
  %dec30 = add i64 %43, -1, !dbg !8410
  store i64 %dec30, i64* %ob_refcnt29, align 8, !dbg !8410, !tbaa !2551
  %cmp31 = icmp ne i64 %dec30, 0, !dbg !8411
  br i1 %cmp31, label %if.then.32, label %if.else.33, !dbg !8412

if.then.32:                                       ; preds = %do.body.27
  br label %if.end.36, !dbg !8413

if.else.33:                                       ; preds = %do.body.27
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !8415, !tbaa !2522
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1, !dbg !8417
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8, !dbg !8417, !tbaa !2588
  %tp_dealloc35 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4, !dbg !8418
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc35, align 8, !dbg !8418, !tbaa !2590
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp28, align 8, !dbg !8419, !tbaa !2522
  call void %46(%struct._object* %47), !dbg !8420
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.33, %if.then.32
  %48 = bitcast %struct._object** %_py_decref_tmp28 to i8*, !dbg !8421
  call void @llvm.lifetime.end(i64 8, i8* %48) #2, !dbg !8421
  br label %do.cond.37, !dbg !8422

do.cond.37:                                       ; preds = %if.end.36
  br label %do.end.38, !dbg !8423

do.end.38:                                        ; preds = %do.cond.37
  store %struct._object* null, %struct._object** %retval, !dbg !8425
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.112, !dbg !8425

if.end.39:                                        ; preds = %if.end.10
  br label %do.body.40, !dbg !8426

do.body.40:                                       ; preds = %if.end.39
  %49 = bitcast %struct._object** %_py_decref_tmp41 to i8*, !dbg !8427
  call void @llvm.lifetime.start(i64 8, i8* %49) #2, !dbg !8427
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp41, metadata !961, metadata !2526), !dbg !8429
  %50 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8430, !tbaa !2522
  %tp_dict42 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %50, i32 0, i32 31, !dbg !8431
  %51 = load %struct._object*, %struct._object** %tp_dict42, align 8, !dbg !8431, !tbaa !3284
  store %struct._object* %51, %struct._object** %_py_decref_tmp41, align 8, !dbg !8429, !tbaa !2522
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp41, align 8, !dbg !8432, !tbaa !2522
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !8434
  %53 = load i64, i64* %ob_refcnt43, align 8, !dbg !8435, !tbaa !2551
  %dec44 = add i64 %53, -1, !dbg !8435
  store i64 %dec44, i64* %ob_refcnt43, align 8, !dbg !8435, !tbaa !2551
  %cmp45 = icmp ne i64 %dec44, 0, !dbg !8436
  br i1 %cmp45, label %if.then.46, label %if.else.47, !dbg !8437

if.then.46:                                       ; preds = %do.body.40
  br label %if.end.50, !dbg !8438

if.else.47:                                       ; preds = %do.body.40
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp41, align 8, !dbg !8440, !tbaa !2522
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !8442
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !8442, !tbaa !2588
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !8443
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8, !dbg !8443, !tbaa !2590
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp41, align 8, !dbg !8444, !tbaa !2522
  call void %56(%struct._object* %57), !dbg !8445
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  %58 = bitcast %struct._object** %_py_decref_tmp41 to i8*, !dbg !8446
  call void @llvm.lifetime.end(i64 8, i8* %58) #2, !dbg !8446
  br label %do.cond.51, !dbg !8448

do.cond.51:                                       ; preds = %if.end.50
  br label %do.end.52, !dbg !8449

do.end.52:                                        ; preds = %do.cond.51
  %59 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8451, !tbaa !2522
  %60 = bitcast %struct.StgDictObject* %59 to %struct._object*, !dbg !8452
  %61 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8453, !tbaa !2522
  %tp_dict53 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %61, i32 0, i32 31, !dbg !8454
  store %struct._object* %60, %struct._object** %tp_dict53, align 8, !dbg !8455, !tbaa !3284
  %call54 = call i8* @_ctypes_alloc_format_string(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71, i32 0, i32 0)), !dbg !8456
  %62 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8457, !tbaa !2522
  %format = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %62, i32 0, i32 14, !dbg !8458
  store i8* %call54, i8** %format, align 8, !dbg !8459, !tbaa !3176
  %63 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8460, !tbaa !2522
  %format55 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %63, i32 0, i32 14, !dbg !8461
  %64 = load i8*, i8** %format55, align 8, !dbg !8461, !tbaa !3176
  %cmp56 = icmp eq i8* %64, null, !dbg !8462
  br i1 %cmp56, label %if.then.57, label %if.end.70, !dbg !8463

if.then.57:                                       ; preds = %do.end.52
  br label %do.body.58, !dbg !8464

do.body.58:                                       ; preds = %if.then.57
  %65 = bitcast %struct._object** %_py_decref_tmp59 to i8*, !dbg !8465
  call void @llvm.lifetime.start(i64 8, i8* %65) #2, !dbg !8465
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp59, metadata !963, metadata !2526), !dbg !8467
  %66 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8468, !tbaa !2522
  %67 = bitcast %struct._typeobject* %66 to %struct._object*, !dbg !8469
  store %struct._object* %67, %struct._object** %_py_decref_tmp59, align 8, !dbg !8467, !tbaa !2522
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp59, align 8, !dbg !8470, !tbaa !2522
  %ob_refcnt60 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0, !dbg !8472
  %69 = load i64, i64* %ob_refcnt60, align 8, !dbg !8473, !tbaa !2551
  %dec61 = add i64 %69, -1, !dbg !8473
  store i64 %dec61, i64* %ob_refcnt60, align 8, !dbg !8473, !tbaa !2551
  %cmp62 = icmp ne i64 %dec61, 0, !dbg !8474
  br i1 %cmp62, label %if.then.63, label %if.else.64, !dbg !8475

if.then.63:                                       ; preds = %do.body.58
  br label %if.end.67, !dbg !8476

if.else.64:                                       ; preds = %do.body.58
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp59, align 8, !dbg !8478, !tbaa !2522
  %ob_type65 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1, !dbg !8480
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type65, align 8, !dbg !8480, !tbaa !2588
  %tp_dealloc66 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %71, i32 0, i32 4, !dbg !8481
  %72 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc66, align 8, !dbg !8481, !tbaa !2590
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp59, align 8, !dbg !8482, !tbaa !2522
  call void %72(%struct._object* %73), !dbg !8483
  br label %if.end.67

if.end.67:                                        ; preds = %if.else.64, %if.then.63
  %74 = bitcast %struct._object** %_py_decref_tmp59 to i8*, !dbg !8484
  call void @llvm.lifetime.end(i64 8, i8* %74) #2, !dbg !8484
  br label %do.cond.68, !dbg !8486

do.cond.68:                                       ; preds = %if.end.67
  br label %do.end.69, !dbg !8487

do.end.69:                                        ; preds = %do.cond.68
  store %struct._object* null, %struct._object** %retval, !dbg !8489
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.112, !dbg !8489

if.end.70:                                        ; preds = %do.end.52
  %75 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8490, !tbaa !2522
  %paramfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %75, i32 0, i32 8, !dbg !8491
  store %struct.tagPyCArgObject* (%struct.tagCDataObject*)* @StructUnionType_paramfunc, %struct.tagPyCArgObject* (%struct.tagCDataObject*)** %paramfunc, align 8, !dbg !8492, !tbaa !3124
  %76 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8493, !tbaa !2522
  %77 = bitcast %struct.StgDictObject* %76 to %struct._object*, !dbg !8494
  %call71 = call %struct._object* @PyDict_GetItemString(%struct._object* %77, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0)), !dbg !8495
  store %struct._object* %call71, %struct._object** %fields, align 8, !dbg !8496, !tbaa !2522
  %78 = load %struct._object*, %struct._object** %fields, align 8, !dbg !8497, !tbaa !2522
  %tobool72 = icmp ne %struct._object* %78, null, !dbg !8497
  br i1 %tobool72, label %if.end.95, label %if.then.73, !dbg !8498

if.then.73:                                       ; preds = %if.end.70
  %79 = bitcast %struct.StgDictObject** %basedict to i8*, !dbg !8499
  call void @llvm.lifetime.start(i64 8, i8* %79) #2, !dbg !8499
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %basedict, metadata !967, metadata !2526), !dbg !8500
  %80 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8501, !tbaa !2522
  %tp_base = getelementptr inbounds %struct._typeobject, %struct._typeobject* %80, i32 0, i32 30, !dbg !8502
  %81 = load %struct._typeobject*, %struct._typeobject** %tp_base, align 8, !dbg !8502, !tbaa !4225
  %82 = bitcast %struct._typeobject* %81 to %struct._object*, !dbg !8503
  %call74 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %82), !dbg !8504
  store %struct.StgDictObject* %call74, %struct.StgDictObject** %basedict, align 8, !dbg !8500, !tbaa !2522
  %83 = load %struct.StgDictObject*, %struct.StgDictObject** %basedict, align 8, !dbg !8505, !tbaa !2522
  %cmp75 = icmp eq %struct.StgDictObject* %83, null, !dbg !8507
  br i1 %cmp75, label %if.then.76, label %if.end.77, !dbg !8508

if.then.76:                                       ; preds = %if.then.73
  %84 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8509, !tbaa !2522
  %85 = bitcast %struct._typeobject* %84 to %struct._object*, !dbg !8510
  store %struct._object* %85, %struct._object** %retval, !dbg !8511
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8511

if.end.77:                                        ; preds = %if.then.73
  %86 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8512, !tbaa !2522
  %87 = load %struct.StgDictObject*, %struct.StgDictObject** %basedict, align 8, !dbg !8513, !tbaa !2522
  %call78 = call i32 @PyCStgDict_clone(%struct.StgDictObject* %86, %struct.StgDictObject* %87), !dbg !8514
  %cmp79 = icmp eq i32 -1, %call78, !dbg !8515
  br i1 %cmp79, label %if.then.80, label %if.end.93, !dbg !8516

if.then.80:                                       ; preds = %if.end.77
  br label %do.body.81, !dbg !8517

do.body.81:                                       ; preds = %if.then.80
  %88 = bitcast %struct._object** %_py_decref_tmp82 to i8*, !dbg !8518
  call void @llvm.lifetime.start(i64 8, i8* %88) #2, !dbg !8518
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp82, metadata !970, metadata !2526), !dbg !8520
  %89 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8521, !tbaa !2522
  %90 = bitcast %struct._typeobject* %89 to %struct._object*, !dbg !8522
  store %struct._object* %90, %struct._object** %_py_decref_tmp82, align 8, !dbg !8520, !tbaa !2522
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8, !dbg !8523, !tbaa !2522
  %ob_refcnt83 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 0, !dbg !8525
  %92 = load i64, i64* %ob_refcnt83, align 8, !dbg !8526, !tbaa !2551
  %dec84 = add i64 %92, -1, !dbg !8526
  store i64 %dec84, i64* %ob_refcnt83, align 8, !dbg !8526, !tbaa !2551
  %cmp85 = icmp ne i64 %dec84, 0, !dbg !8527
  br i1 %cmp85, label %if.then.86, label %if.else.87, !dbg !8528

if.then.86:                                       ; preds = %do.body.81
  br label %if.end.90, !dbg !8529

if.else.87:                                       ; preds = %do.body.81
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8, !dbg !8531, !tbaa !2522
  %ob_type88 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 1, !dbg !8533
  %94 = load %struct._typeobject*, %struct._typeobject** %ob_type88, align 8, !dbg !8533, !tbaa !2588
  %tp_dealloc89 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %94, i32 0, i32 4, !dbg !8534
  %95 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc89, align 8, !dbg !8534, !tbaa !2590
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8, !dbg !8535, !tbaa !2522
  call void %95(%struct._object* %96), !dbg !8536
  br label %if.end.90

if.end.90:                                        ; preds = %if.else.87, %if.then.86
  %97 = bitcast %struct._object** %_py_decref_tmp82 to i8*, !dbg !8537
  call void @llvm.lifetime.end(i64 8, i8* %97) #2, !dbg !8537
  br label %do.cond.91, !dbg !8539

do.cond.91:                                       ; preds = %if.end.90
  br label %do.end.92, !dbg !8540

do.end.92:                                        ; preds = %do.cond.91
  store %struct._object* null, %struct._object** %retval, !dbg !8542
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8542

if.end.93:                                        ; preds = %if.end.77
  %98 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8543, !tbaa !2522
  %flags = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %98, i32 0, i32 13, !dbg !8544
  %99 = load i32, i32* %flags, align 4, !dbg !8545, !tbaa !3128
  %and = and i32 %99, -4097, !dbg !8545
  store i32 %and, i32* %flags, align 4, !dbg !8545, !tbaa !3128
  %100 = load %struct.StgDictObject*, %struct.StgDictObject** %basedict, align 8, !dbg !8546, !tbaa !2522
  %flags94 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %100, i32 0, i32 13, !dbg !8547
  %101 = load i32, i32* %flags94, align 4, !dbg !8548, !tbaa !3128
  %or = or i32 %101, 4096, !dbg !8548
  store i32 %or, i32* %flags94, align 4, !dbg !8548, !tbaa !3128
  %102 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8549, !tbaa !2522
  %103 = bitcast %struct._typeobject* %102 to %struct._object*, !dbg !8550
  store %struct._object* %103, %struct._object** %retval, !dbg !8551
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8551

cleanup:                                          ; preds = %if.end.93, %do.end.92, %if.then.76
  %104 = bitcast %struct.StgDictObject** %basedict to i8*, !dbg !8552
  call void @llvm.lifetime.end(i64 8, i8* %104) #2, !dbg !8552
  br label %cleanup.112

if.end.95:                                        ; preds = %if.end.70
  %105 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8553, !tbaa !2522
  %106 = bitcast %struct._typeobject* %105 to %struct._object*, !dbg !8554
  %107 = load %struct._object*, %struct._object** %fields, align 8, !dbg !8555, !tbaa !2522
  %call96 = call i32 @PyObject_SetAttrString(%struct._object* %106, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), %struct._object* %107), !dbg !8556
  %cmp97 = icmp eq i32 -1, %call96, !dbg !8557
  br i1 %cmp97, label %if.then.98, label %if.end.111, !dbg !8558

if.then.98:                                       ; preds = %if.end.95
  br label %do.body.99, !dbg !8559

do.body.99:                                       ; preds = %if.then.98
  %108 = bitcast %struct._object** %_py_decref_tmp100 to i8*, !dbg !8560
  call void @llvm.lifetime.start(i64 8, i8* %108) #2, !dbg !8560
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp100, metadata !974, metadata !2526), !dbg !8562
  %109 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8563, !tbaa !2522
  %110 = bitcast %struct._typeobject* %109 to %struct._object*, !dbg !8564
  store %struct._object* %110, %struct._object** %_py_decref_tmp100, align 8, !dbg !8562, !tbaa !2522
  %111 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8, !dbg !8565, !tbaa !2522
  %ob_refcnt101 = getelementptr inbounds %struct._object, %struct._object* %111, i32 0, i32 0, !dbg !8567
  %112 = load i64, i64* %ob_refcnt101, align 8, !dbg !8568, !tbaa !2551
  %dec102 = add i64 %112, -1, !dbg !8568
  store i64 %dec102, i64* %ob_refcnt101, align 8, !dbg !8568, !tbaa !2551
  %cmp103 = icmp ne i64 %dec102, 0, !dbg !8569
  br i1 %cmp103, label %if.then.104, label %if.else.105, !dbg !8570

if.then.104:                                      ; preds = %do.body.99
  br label %if.end.108, !dbg !8571

if.else.105:                                      ; preds = %do.body.99
  %113 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8, !dbg !8573, !tbaa !2522
  %ob_type106 = getelementptr inbounds %struct._object, %struct._object* %113, i32 0, i32 1, !dbg !8575
  %114 = load %struct._typeobject*, %struct._typeobject** %ob_type106, align 8, !dbg !8575, !tbaa !2588
  %tp_dealloc107 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %114, i32 0, i32 4, !dbg !8576
  %115 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc107, align 8, !dbg !8576, !tbaa !2590
  %116 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8, !dbg !8577, !tbaa !2522
  call void %115(%struct._object* %116), !dbg !8578
  br label %if.end.108

if.end.108:                                       ; preds = %if.else.105, %if.then.104
  %117 = bitcast %struct._object** %_py_decref_tmp100 to i8*, !dbg !8579
  call void @llvm.lifetime.end(i64 8, i8* %117) #2, !dbg !8579
  br label %do.cond.109, !dbg !8581

do.cond.109:                                      ; preds = %if.end.108
  br label %do.end.110, !dbg !8582

do.end.110:                                       ; preds = %do.cond.109
  store %struct._object* null, %struct._object** %retval, !dbg !8584
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.112, !dbg !8584

if.end.111:                                       ; preds = %if.end.95
  %118 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !8585, !tbaa !2522
  %119 = bitcast %struct._typeobject* %118 to %struct._object*, !dbg !8586
  store %struct._object* %119, %struct._object** %retval, !dbg !8587
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.112, !dbg !8587

cleanup.112:                                      ; preds = %if.end.111, %do.end.110, %cleanup, %do.end.69, %do.end.38, %do.end, %if.then.3, %if.then
  %120 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !8588
  call void @llvm.lifetime.end(i64 8, i8* %120) #2, !dbg !8588
  %121 = bitcast %struct._object** %fields to i8*, !dbg !8588
  call void @llvm.lifetime.end(i64 8, i8* %121) #2, !dbg !8588
  %122 = bitcast %struct._typeobject** %result to i8*, !dbg !8588
  call void @llvm.lifetime.end(i64 8, i8* %122) #2, !dbg !8588
  %123 = load %struct._object*, %struct._object** %retval, !dbg !8588
  ret %struct._object* %123, !dbg !8588
}

declare %struct._object* @PyDict_GetItemString(%struct._object*, i8*) #3

declare i32 @PyDict_Update(%struct._object*, %struct._object*) #3

; Function Attrs: uwtable
define internal %struct.tagPyCArgObject* @StructUnionType_paramfunc(%struct.tagCDataObject* %self) #0 {
entry:
  %retval = alloca %struct.tagPyCArgObject*, align 8
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %parg = alloca %struct.tagPyCArgObject*, align 8
  %stgdict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !980, metadata !2526), !dbg !8589
  %0 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !8590
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8590
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %parg, metadata !981, metadata !2526), !dbg !8591
  %1 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !8592
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8592
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict, metadata !982, metadata !2526), !dbg !8593
  %call = call %struct.tagPyCArgObject* @PyCArgObject_new(), !dbg !8594
  store %struct.tagPyCArgObject* %call, %struct.tagPyCArgObject** %parg, align 8, !dbg !8595, !tbaa !2522
  %2 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8596, !tbaa !2522
  %cmp = icmp eq %struct.tagPyCArgObject* %2, null, !dbg !8598
  br i1 %cmp, label %if.then, label %if.end, !dbg !8599

if.then:                                          ; preds = %entry
  store %struct.tagPyCArgObject* null, %struct.tagPyCArgObject** %retval, !dbg !8600
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8600

if.end:                                           ; preds = %entry
  %3 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8601, !tbaa !2522
  %tag = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %3, i32 0, i32 2, !dbg !8602
  store i8 86, i8* %tag, align 1, !dbg !8603, !tbaa !8604
  %4 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !8605, !tbaa !2522
  %5 = bitcast %struct.tagCDataObject* %4 to %struct._object*, !dbg !8606
  %call1 = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %5), !dbg !8607
  store %struct.StgDictObject* %call1, %struct.StgDictObject** %stgdict, align 8, !dbg !8608, !tbaa !2522
  %6 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !8609, !tbaa !2522
  %ffi_type_pointer = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %6, i32 0, i32 4, !dbg !8610
  %7 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8611, !tbaa !2522
  %pffi_type = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %7, i32 0, i32 1, !dbg !8612
  store %struct._ffi_type* %ffi_type_pointer, %struct._ffi_type** %pffi_type, align 8, !dbg !8613, !tbaa !8614
  %8 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !8615, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %8, i32 0, i32 1, !dbg !8616
  %9 = load i8*, i8** %b_ptr, align 8, !dbg !8616, !tbaa !4817
  %10 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8617, !tbaa !2522
  %value = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %10, i32 0, i32 3, !dbg !8618
  %p = bitcast %union.anon* %value to i8**, !dbg !8619
  store i8* %9, i8** %p, align 8, !dbg !8620, !tbaa !2522
  %11 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !8621, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %11, i32 0, i32 4, !dbg !8622
  %12 = load i64, i64* %b_size, align 8, !dbg !8622, !tbaa !4918
  %13 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8623, !tbaa !2522
  %size = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %13, i32 0, i32 5, !dbg !8624
  store i64 %12, i64* %size, align 8, !dbg !8625, !tbaa !8626
  %14 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !8627, !tbaa !2522
  %15 = bitcast %struct.tagCDataObject* %14 to %struct._object*, !dbg !8628
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !8629
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !8630, !tbaa !2551
  %inc = add i64 %16, 1, !dbg !8630
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8630, !tbaa !2551
  %17 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !8631, !tbaa !2522
  %18 = bitcast %struct.tagCDataObject* %17 to %struct._object*, !dbg !8632
  %19 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8633, !tbaa !2522
  %obj = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %19, i32 0, i32 4, !dbg !8634
  store %struct._object* %18, %struct._object** %obj, align 8, !dbg !8635, !tbaa !7925
  %20 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8636, !tbaa !2522
  store %struct.tagPyCArgObject* %20, %struct.tagPyCArgObject** %retval, !dbg !8637
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8637

cleanup:                                          ; preds = %if.end, %if.then
  %21 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !8638
  call void @llvm.lifetime.end(i64 8, i8* %21) #2, !dbg !8638
  %22 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !8638
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !8638
  %23 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %retval, !dbg !8638
  ret %struct.tagPyCArgObject* %23, !dbg !8638
}

declare i32 @PyCStgDict_clone(%struct.StgDictObject*, %struct.StgDictObject*) #3

declare i32 @PyObject_SetAttrString(%struct._object*, i8*, %struct._object*) #3

declare %struct.tagPyCArgObject* @PyCArgObject_new() #3

declare %struct.StgDictObject* @PyObject_stgdict(%struct._object*) #3

; Function Attrs: uwtable
define internal %struct._object* @PyCPointerType_from_param(%struct._object* %type, %struct._object* %value) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %typedict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  %v = alloca %struct.StgDictObject*, align 8
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !985, metadata !2526), !dbg !8639
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !986, metadata !2526), !dbg !8640
  %0 = bitcast %struct.StgDictObject** %typedict to i8*, !dbg !8641
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8641
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %typedict, metadata !987, metadata !2526), !dbg !8642
  %1 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8643, !tbaa !2522
  %cmp = icmp eq %struct._object* %1, @_Py_NoneStruct, !dbg !8645
  br i1 %cmp, label %if.then, label %if.end, !dbg !8646

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8647, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 0, !dbg !8649
  %3 = load i64, i64* %ob_refcnt, align 8, !dbg !8650, !tbaa !2551
  %inc = add i64 %3, 1, !dbg !8650
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8650, !tbaa !2551
  %4 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8651, !tbaa !2522
  store %struct._object* %4, %struct._object** %retval, !dbg !8652
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !8652

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !8653, !tbaa !2522
  %call = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %5), !dbg !8654
  store %struct.StgDictObject* %call, %struct.StgDictObject** %typedict, align 8, !dbg !8655, !tbaa !2522
  %6 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8656, !tbaa !2522
  %7 = load %struct.StgDictObject*, %struct.StgDictObject** %typedict, align 8, !dbg !8657, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %7, i32 0, i32 5, !dbg !8658
  %8 = load %struct._object*, %struct._object** %proto, align 8, !dbg !8658, !tbaa !2961
  %call1 = call i32 @PyObject_IsInstance(%struct._object* %6, %struct._object* %8), !dbg !8659
  br label %NodeBlock

NodeBlock:                                        ; preds = %if.end
  %Pivot = icmp slt i32 %call1, 1
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %call1, 1
  br i1 %SwitchLeaf2, label %sw.bb, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %call1, -1
  br i1 %SwitchLeaf, label %sw.bb.5, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock.1
  %9 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8660, !tbaa !2522
  %ob_refcnt2 = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !8662
  %10 = load i64, i64* %ob_refcnt2, align 8, !dbg !8663, !tbaa !2551
  %inc3 = add i64 %10, 1, !dbg !8663
  store i64 %inc3, i64* %ob_refcnt2, align 8, !dbg !8663, !tbaa !2551
  %11 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8664, !tbaa !2522
  %call4 = call %struct._object* @_byref(%struct._object* %11), !dbg !8665
  store %struct._object* %call4, %struct._object** %retval, !dbg !8666
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !8666

sw.bb.5:                                          ; preds = %LeafBlock
  store %struct._object* null, %struct._object** %retval, !dbg !8667
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !8667

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  br label %sw.epilog, !dbg !8668

sw.epilog:                                        ; preds = %sw.default
  %12 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8669, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !8670
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8670, !tbaa !2588
  %cmp6 = icmp eq %struct._typeobject* %13, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointer_Type to %struct._typeobject*), !dbg !8671
  br i1 %cmp6, label %if.then.16, label %lor.lhs.false, !dbg !8672

lor.lhs.false:                                    ; preds = %sw.epilog
  %14 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8673, !tbaa !2522
  %ob_type7 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !8675
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8, !dbg !8675, !tbaa !2588
  %call8 = call i32 @PyType_IsSubtype(%struct._typeobject* %15, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointer_Type to %struct._typeobject*)), !dbg !8676
  %tobool = icmp ne i32 %call8, 0, !dbg !8676
  br i1 %tobool, label %if.then.16, label %lor.lhs.false.9, !dbg !8677

lor.lhs.false.9:                                  ; preds = %lor.lhs.false
  %16 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8678, !tbaa !2522
  %ob_type10 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !8680
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type10, align 8, !dbg !8680, !tbaa !2588
  %cmp11 = icmp eq %struct._typeobject* %17, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type to %struct._typeobject*), !dbg !8681
  br i1 %cmp11, label %if.then.16, label %lor.lhs.false.12, !dbg !8682

lor.lhs.false.12:                                 ; preds = %lor.lhs.false.9
  %18 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8683, !tbaa !2522
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !8685
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type13, align 8, !dbg !8685, !tbaa !2588
  %call14 = call i32 @PyType_IsSubtype(%struct._typeobject* %19, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type to %struct._typeobject*)), !dbg !8686
  %tobool15 = icmp ne i32 %call14, 0, !dbg !8686
  br i1 %tobool15, label %if.then.16, label %if.end.26, !dbg !8687

if.then.16:                                       ; preds = %lor.lhs.false.12, %lor.lhs.false.9, %lor.lhs.false, %sw.epilog
  %20 = bitcast %struct.StgDictObject** %v to i8*, !dbg !8688
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !8688
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %v, metadata !988, metadata !2526), !dbg !8689
  %21 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8690, !tbaa !2522
  %call17 = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %21), !dbg !8691
  store %struct.StgDictObject* %call17, %struct.StgDictObject** %v, align 8, !dbg !8689, !tbaa !2522
  %22 = load %struct.StgDictObject*, %struct.StgDictObject** %v, align 8, !dbg !8692, !tbaa !2522
  %proto18 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %22, i32 0, i32 5, !dbg !8694
  %23 = load %struct._object*, %struct._object** %proto18, align 8, !dbg !8694, !tbaa !2961
  %24 = load %struct.StgDictObject*, %struct.StgDictObject** %typedict, align 8, !dbg !8695, !tbaa !2522
  %proto19 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %24, i32 0, i32 5, !dbg !8696
  %25 = load %struct._object*, %struct._object** %proto19, align 8, !dbg !8696, !tbaa !2961
  %call20 = call i32 @PyObject_IsSubclass(%struct._object* %23, %struct._object* %25), !dbg !8697
  %tobool21 = icmp ne i32 %call20, 0, !dbg !8697
  br i1 %tobool21, label %if.then.22, label %if.end.25, !dbg !8698

if.then.22:                                       ; preds = %if.then.16
  %26 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8699, !tbaa !2522
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !8701
  %27 = load i64, i64* %ob_refcnt23, align 8, !dbg !8702, !tbaa !2551
  %inc24 = add i64 %27, 1, !dbg !8702
  store i64 %inc24, i64* %ob_refcnt23, align 8, !dbg !8702, !tbaa !2551
  %28 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8703, !tbaa !2522
  store %struct._object* %28, %struct._object** %retval, !dbg !8704
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8704

if.end.25:                                        ; preds = %if.then.16
  store i32 0, i32* %cleanup.dest.slot, !dbg !8705
  br label %cleanup, !dbg !8705

cleanup:                                          ; preds = %if.end.25, %if.then.22
  %29 = bitcast %struct.StgDictObject** %v to i8*, !dbg !8706
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !8706
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.4

LeafBlock.4:                                      ; preds = %cleanup
  %SwitchLeaf5 = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf5, label %cleanup.cont, label %NewDefault.3

cleanup.cont:                                     ; preds = %LeafBlock.4
  br label %if.end.26, !dbg !8707

if.end.26:                                        ; preds = %cleanup.cont, %lor.lhs.false.12
  %30 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !8708, !tbaa !2522
  %31 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !8709, !tbaa !2522
  %call27 = call %struct._object* @CDataType_from_param(%struct._object* %30, %struct._object* %31), !dbg !8710
  store %struct._object* %call27, %struct._object** %retval, !dbg !8711
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.28, !dbg !8711

NewDefault.3:                                     ; preds = %LeafBlock.4
  br label %cleanup.28

cleanup.28:                                       ; preds = %NewDefault.3, %if.end.26, %sw.bb.5, %sw.bb, %if.then
  %32 = bitcast %struct.StgDictObject** %typedict to i8*, !dbg !8712
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !8712
  %33 = load %struct._object*, %struct._object** %retval, !dbg !8712
  ret %struct._object* %33, !dbg !8712
}

; Function Attrs: uwtable
define internal %struct._object* @PyCPointerType_set_type(%struct._typeobject* %self, %struct._object* %type) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._typeobject*, align 8
  %type.addr = alloca %struct._object*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._typeobject* %self, %struct._typeobject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %self.addr, metadata !1003, metadata !2526), !dbg !8713
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !1004, metadata !2526), !dbg !8714
  %0 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !8715
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8715
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !1005, metadata !2526), !dbg !8716
  %1 = load %struct._typeobject*, %struct._typeobject** %self.addr, align 8, !dbg !8717, !tbaa !2522
  %2 = bitcast %struct._typeobject* %1 to %struct._object*, !dbg !8718
  %call = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %2), !dbg !8719
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !8720, !tbaa !2522
  %3 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8721, !tbaa !2522
  %4 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !8723, !tbaa !2522
  %call1 = call i32 @PyCPointerType_SetProto(%struct.StgDictObject* %3, %struct._object* %4), !dbg !8724
  %cmp = icmp eq i32 -1, %call1, !dbg !8725
  br i1 %cmp, label %if.then, label %if.end, !dbg !8726

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8727
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8727

if.end:                                           ; preds = %entry
  %5 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !8728, !tbaa !2522
  %6 = bitcast %struct.StgDictObject* %5 to %struct._object*, !dbg !8730
  %7 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !8731, !tbaa !2522
  %call2 = call i32 @PyDict_SetItemString(%struct._object* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0), %struct._object* %7), !dbg !8732
  %cmp3 = icmp eq i32 -1, %call2, !dbg !8733
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !8734

if.then.4:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !8735
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8735

if.end.5:                                         ; preds = %if.end
  %8 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8736, !tbaa !2551
  %inc = add i64 %8, 1, !dbg !8736
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8736, !tbaa !2551
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !8737
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8737

cleanup:                                          ; preds = %if.end.5, %if.then.4, %if.then
  %9 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !8738
  call void @llvm.lifetime.end(i64 8, i8* %9) #2, !dbg !8738
  %10 = load %struct._object*, %struct._object** %retval, !dbg !8738
  ret %struct._object* %10, !dbg !8738
}

; Function Attrs: uwtable
define internal %struct._object* @_byref(%struct._object* %obj) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %obj.addr = alloca %struct._object*, align 8
  %parg = alloca %struct.tagPyCArgObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %obj.addr, metadata !993, metadata !2526), !dbg !8739
  %0 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !8740
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8740
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %parg, metadata !994, metadata !2526), !dbg !8741
  %1 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !8742, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !8744
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8744, !tbaa !2588
  %cmp = icmp eq %struct._typeobject* %2, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*), !dbg !8745
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !8746

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !8747, !tbaa !2522
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !8749
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !8749, !tbaa !2588
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %4, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*)), !dbg !8750
  %tobool = icmp ne i32 %call, 0, !dbg !8750
  br i1 %tobool, label %if.end, label %if.then, !dbg !8751

if.then:                                          ; preds = %lor.lhs.false
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8752, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.73, i32 0, i32 0)), !dbg !8754
  store %struct._object* null, %struct._object** %retval, !dbg !8755
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8755

if.end:                                           ; preds = %lor.lhs.false, %entry
  %call2 = call %struct.tagPyCArgObject* @PyCArgObject_new(), !dbg !8756
  store %struct.tagPyCArgObject* %call2, %struct.tagPyCArgObject** %parg, align 8, !dbg !8757, !tbaa !2522
  %6 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8758, !tbaa !2522
  %cmp3 = icmp eq %struct.tagPyCArgObject* %6, null, !dbg !8759
  br i1 %cmp3, label %if.then.4, label %if.end.9, !dbg !8760

if.then.4:                                        ; preds = %if.end
  br label %do.body, !dbg !8761

do.body:                                          ; preds = %if.then.4
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8762
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !8762
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !995, metadata !2526), !dbg !8764
  %8 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !8765, !tbaa !2522
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !8764, !tbaa !2522
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8766, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !8768
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !8769, !tbaa !2551
  %dec = add i64 %10, -1, !dbg !8769
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8769, !tbaa !2551
  %cmp5 = icmp ne i64 %dec, 0, !dbg !8770
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !8771

if.then.6:                                        ; preds = %do.body
  br label %if.end.8, !dbg !8772

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8774, !tbaa !2522
  %ob_type7 = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !8776
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type7, align 8, !dbg !8776, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !8777
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8777, !tbaa !2590
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8778, !tbaa !2522
  call void %13(%struct._object* %14), !dbg !8779
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.6
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8780
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !8780
  br label %do.cond, !dbg !8782

do.cond:                                          ; preds = %if.end.8
  br label %do.end, !dbg !8783

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !8785
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8785

if.end.9:                                         ; preds = %if.end
  %16 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8786, !tbaa !2522
  %tag = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %16, i32 0, i32 2, !dbg !8787
  store i8 80, i8* %tag, align 1, !dbg !8788, !tbaa !8604
  %17 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8789, !tbaa !2522
  %pffi_type = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %17, i32 0, i32 1, !dbg !8790
  store %struct._ffi_type* @ffi_type_pointer, %struct._ffi_type** %pffi_type, align 8, !dbg !8791, !tbaa !8614
  %18 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !8792, !tbaa !2522
  %19 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8793, !tbaa !2522
  %obj10 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %19, i32 0, i32 4, !dbg !8794
  store %struct._object* %18, %struct._object** %obj10, align 8, !dbg !8795, !tbaa !7925
  %20 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !8796, !tbaa !2522
  %21 = bitcast %struct._object* %20 to %struct.tagCDataObject*, !dbg !8797
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %21, i32 0, i32 1, !dbg !8798
  %22 = load i8*, i8** %b_ptr, align 8, !dbg !8798, !tbaa !4817
  %23 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8799, !tbaa !2522
  %value = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %23, i32 0, i32 3, !dbg !8800
  %p = bitcast %union.anon* %value to i8**, !dbg !8801
  store i8* %22, i8** %p, align 8, !dbg !8802, !tbaa !2522
  %24 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8803, !tbaa !2522
  %25 = bitcast %struct.tagPyCArgObject* %24 to %struct._object*, !dbg !8804
  store %struct._object* %25, %struct._object** %retval, !dbg !8805
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8805

cleanup:                                          ; preds = %if.end.9, %do.end, %if.then
  %26 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !8806
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !8806
  %27 = load %struct._object*, %struct._object** %retval, !dbg !8806
  ret %struct._object* %27, !dbg !8806
}

declare i32 @PyObject_IsSubclass(%struct._object*, %struct._object*) #3

; Function Attrs: uwtable
define internal i32 @PyCPointerType_SetProto(%struct.StgDictObject* %stgdict, %struct._object* %proto) #0 {
entry:
  %retval = alloca i32, align 4
  %stgdict.addr = alloca %struct.StgDictObject*, align 8
  %proto.addr = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.StgDictObject* %stgdict, %struct.StgDictObject** %stgdict.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict.addr, metadata !1010, metadata !2526), !dbg !8807
  store %struct._object* %proto, %struct._object** %proto.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %proto.addr, metadata !1011, metadata !2526), !dbg !8808
  %0 = load %struct._object*, %struct._object** %proto.addr, align 8, !dbg !8809, !tbaa !2522
  %tobool = icmp ne %struct._object* %0, null, !dbg !8809
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8811

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._object*, %struct._object** %proto.addr, align 8, !dbg !8812, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !8814
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8814, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19, !dbg !8815
  %3 = load i64, i64* %tp_flags, align 8, !dbg !8815, !tbaa !2849
  %and = and i64 %3, 2147483648, !dbg !8816
  %cmp = icmp ne i64 %and, 0, !dbg !8817
  br i1 %cmp, label %if.end, label %if.then, !dbg !8818

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8819, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.74, i32 0, i32 0)), !dbg !8821
  store i32 -1, i32* %retval, !dbg !8822
  br label %return, !dbg !8822

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct._object*, %struct._object** %proto.addr, align 8, !dbg !8823, !tbaa !2522
  %call = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %5), !dbg !8825
  %tobool1 = icmp ne %struct.StgDictObject* %call, null, !dbg !8825
  br i1 %tobool1, label %if.end.3, label %if.then.2, !dbg !8826

if.then.2:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8827, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.75, i32 0, i32 0)), !dbg !8829
  store i32 -1, i32* %retval, !dbg !8830
  br label %return, !dbg !8830

if.end.3:                                         ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %proto.addr, align 8, !dbg !8831, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !8832
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !8833, !tbaa !2551
  %inc = add i64 %8, 1, !dbg !8833
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8833, !tbaa !2551
  br label %do.body, !dbg !8834

do.body:                                          ; preds = %if.end.3
  %9 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8835
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !8835
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1012, metadata !2526), !dbg !8837
  %10 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !8838, !tbaa !2522
  %proto4 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %10, i32 0, i32 5, !dbg !8839
  %11 = load %struct._object*, %struct._object** %proto4, align 8, !dbg !8839, !tbaa !2961
  store %struct._object* %11, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8837, !tbaa !2522
  %12 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8840, !tbaa !2522
  %cmp5 = icmp ne %struct._object* %12, null, !dbg !8841
  br i1 %cmp5, label %if.then.6, label %if.end.13, !dbg !8842

if.then.6:                                        ; preds = %do.body
  br label %do.body.7, !dbg !8843

do.body.7:                                        ; preds = %if.then.6
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8845
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !8845
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1014, metadata !2526), !dbg !8847
  %14 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8848, !tbaa !2522
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !8847, !tbaa !2522
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8849, !tbaa !2522
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !8851
  %16 = load i64, i64* %ob_refcnt8, align 8, !dbg !8852, !tbaa !2551
  %dec = add i64 %16, -1, !dbg !8852
  store i64 %dec, i64* %ob_refcnt8, align 8, !dbg !8852, !tbaa !2551
  %cmp9 = icmp ne i64 %dec, 0, !dbg !8853
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !8854

if.then.10:                                       ; preds = %do.body.7
  br label %if.end.12, !dbg !8855

if.else:                                          ; preds = %do.body.7
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8857, !tbaa !2522
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !8859
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !8859, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !8860
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8860, !tbaa !2590
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8861, !tbaa !2522
  call void %19(%struct._object* %20), !dbg !8862
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.10
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8863
  call void @llvm.lifetime.end(i64 8, i8* %21) #2, !dbg !8863
  br label %do.cond, !dbg !8865

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !8866

do.end:                                           ; preds = %do.cond
  br label %if.end.13, !dbg !8868

if.end.13:                                        ; preds = %do.end, %do.body
  %22 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8870
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !8870
  br label %do.end.15, !dbg !8873

do.end.15:                                        ; preds = %if.end.13
  %23 = load %struct._object*, %struct._object** %proto.addr, align 8, !dbg !8874, !tbaa !2522
  %24 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !8875, !tbaa !2522
  %proto16 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %24, i32 0, i32 5, !dbg !8876
  store %struct._object* %23, %struct._object** %proto16, align 8, !dbg !8877, !tbaa !2961
  store i32 0, i32* %retval, !dbg !8878
  br label %return, !dbg !8878

return:                                           ; preds = %do.end.15, %if.then.2, %if.then
  %25 = load i32, i32* %retval, !dbg !8879
  ret i32 %25, !dbg !8879
}

declare i32 @PyDict_SetItemString(%struct._object*, i8*, %struct._object*) #3

declare %struct._object* @PyTuple_GetItem(%struct._object*, i64) #3

declare %struct.fielddesc* @_ctypes_get_fielddesc(i8*) #3

; Function Attrs: uwtable
define internal %struct.tagPyCArgObject* @PyCPointerType_paramfunc(%struct.tagCDataObject* %self) #0 {
entry:
  %retval = alloca %struct.tagPyCArgObject*, align 8
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %parg = alloca %struct.tagPyCArgObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !1052, metadata !2526), !dbg !8880
  %0 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !8881
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8881
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %parg, metadata !1053, metadata !2526), !dbg !8882
  %call = call %struct.tagPyCArgObject* @PyCArgObject_new(), !dbg !8883
  store %struct.tagPyCArgObject* %call, %struct.tagPyCArgObject** %parg, align 8, !dbg !8884, !tbaa !2522
  %1 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8885, !tbaa !2522
  %cmp = icmp eq %struct.tagPyCArgObject* %1, null, !dbg !8887
  br i1 %cmp, label %if.then, label %if.end, !dbg !8888

if.then:                                          ; preds = %entry
  store %struct.tagPyCArgObject* null, %struct.tagPyCArgObject** %retval, !dbg !8889
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8889

if.end:                                           ; preds = %entry
  %2 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8890, !tbaa !2522
  %tag = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %2, i32 0, i32 2, !dbg !8891
  store i8 80, i8* %tag, align 1, !dbg !8892, !tbaa !8604
  %3 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8893, !tbaa !2522
  %pffi_type = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %3, i32 0, i32 1, !dbg !8894
  store %struct._ffi_type* @ffi_type_pointer, %struct._ffi_type** %pffi_type, align 8, !dbg !8895, !tbaa !8614
  %4 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !8896, !tbaa !2522
  %5 = bitcast %struct.tagCDataObject* %4 to %struct._object*, !dbg !8897
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0, !dbg !8898
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !8899, !tbaa !2551
  %inc = add i64 %6, 1, !dbg !8899
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8899, !tbaa !2551
  %7 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !8900, !tbaa !2522
  %8 = bitcast %struct.tagCDataObject* %7 to %struct._object*, !dbg !8901
  %9 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8902, !tbaa !2522
  %obj = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %9, i32 0, i32 4, !dbg !8903
  store %struct._object* %8, %struct._object** %obj, align 8, !dbg !8904, !tbaa !7925
  %10 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !8905, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %10, i32 0, i32 1, !dbg !8906
  %11 = load i8*, i8** %b_ptr, align 8, !dbg !8906, !tbaa !4817
  %12 = bitcast i8* %11 to i8**, !dbg !8907
  %13 = load i8*, i8** %12, align 8, !dbg !8908, !tbaa !2522
  %14 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8909, !tbaa !2522
  %value = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %14, i32 0, i32 3, !dbg !8910
  %p = bitcast %union.anon* %value to i8**, !dbg !8911
  store i8* %13, i8** %p, align 8, !dbg !8912, !tbaa !2522
  %15 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !8913, !tbaa !2522
  store %struct.tagPyCArgObject* %15, %struct.tagPyCArgObject** %retval, !dbg !8914
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8914

cleanup:                                          ; preds = %if.end, %if.then
  %16 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !8915
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !8915
  %17 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %retval, !dbg !8915
  ret %struct.tagPyCArgObject* %17, !dbg !8915
}

declare i64 @PyLong_AsLongAndOverflow(%struct._object*, i32*) #3

; Function Attrs: nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: uwtable
define internal %struct.tagPyCArgObject* @PyCArrayType_paramfunc(%struct.tagCDataObject* %self) #0 {
entry:
  %retval = alloca %struct.tagPyCArgObject*, align 8
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %p = alloca %struct.tagPyCArgObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !1097, metadata !2526), !dbg !8916
  %0 = bitcast %struct.tagPyCArgObject** %p to i8*, !dbg !8917
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8917
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %p, metadata !1098, metadata !2526), !dbg !8918
  %call = call %struct.tagPyCArgObject* @PyCArgObject_new(), !dbg !8919
  store %struct.tagPyCArgObject* %call, %struct.tagPyCArgObject** %p, align 8, !dbg !8918, !tbaa !2522
  %1 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %p, align 8, !dbg !8920, !tbaa !2522
  %cmp = icmp eq %struct.tagPyCArgObject* %1, null, !dbg !8922
  br i1 %cmp, label %if.then, label %if.end, !dbg !8923

if.then:                                          ; preds = %entry
  store %struct.tagPyCArgObject* null, %struct.tagPyCArgObject** %retval, !dbg !8924
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8924

if.end:                                           ; preds = %entry
  %2 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %p, align 8, !dbg !8925, !tbaa !2522
  %tag = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %2, i32 0, i32 2, !dbg !8926
  store i8 80, i8* %tag, align 1, !dbg !8927, !tbaa !8604
  %3 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %p, align 8, !dbg !8928, !tbaa !2522
  %pffi_type = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %3, i32 0, i32 1, !dbg !8929
  store %struct._ffi_type* @ffi_type_pointer, %struct._ffi_type** %pffi_type, align 8, !dbg !8930, !tbaa !8614
  %4 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !8931, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %4, i32 0, i32 1, !dbg !8932
  %5 = load i8*, i8** %b_ptr, align 8, !dbg !8932, !tbaa !4817
  %6 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %p, align 8, !dbg !8933, !tbaa !2522
  %value = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %6, i32 0, i32 3, !dbg !8934
  %p1 = bitcast %union.anon* %value to i8**, !dbg !8935
  store i8* %5, i8** %p1, align 8, !dbg !8936, !tbaa !2522
  %7 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !8937, !tbaa !2522
  %8 = bitcast %struct.tagCDataObject* %7 to %struct._object*, !dbg !8938
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !8939
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !8940, !tbaa !2551
  %inc = add i64 %9, 1, !dbg !8940
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8940, !tbaa !2551
  %10 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !8941, !tbaa !2522
  %11 = bitcast %struct.tagCDataObject* %10 to %struct._object*, !dbg !8942
  %12 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %p, align 8, !dbg !8943, !tbaa !2522
  %obj = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %12, i32 0, i32 4, !dbg !8944
  store %struct._object* %11, %struct._object** %obj, align 8, !dbg !8945, !tbaa !7925
  %13 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %p, align 8, !dbg !8946, !tbaa !2522
  store %struct.tagPyCArgObject* %13, %struct.tagPyCArgObject** %retval, !dbg !8947
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8947

cleanup:                                          ; preds = %if.end, %if.then
  %14 = bitcast %struct.tagPyCArgObject** %p to i8*, !dbg !8948
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !8948
  %15 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %retval, !dbg !8948
  ret %struct.tagPyCArgObject* %15, !dbg !8948
}

; Function Attrs: uwtable
define internal i32 @add_getset(%struct._typeobject* %type, %struct.PyGetSetDef* %gsp) #0 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca %struct._typeobject*, align 8
  %gsp.addr = alloca %struct.PyGetSetDef*, align 8
  %dict = alloca %struct._object*, align 8
  %descr = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1105, metadata !2526), !dbg !8949
  store %struct.PyGetSetDef* %gsp, %struct.PyGetSetDef** %gsp.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.PyGetSetDef** %gsp.addr, metadata !1106, metadata !2526), !dbg !8950
  %0 = bitcast %struct._object** %dict to i8*, !dbg !8951
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8951
  call void @llvm.dbg.declare(metadata %struct._object** %dict, metadata !1107, metadata !2526), !dbg !8952
  %1 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8953, !tbaa !2522
  %tp_dict = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 31, !dbg !8954
  %2 = load %struct._object*, %struct._object** %tp_dict, align 8, !dbg !8954, !tbaa !3284
  store %struct._object* %2, %struct._object** %dict, align 8, !dbg !8952, !tbaa !2522
  br label %for.cond, !dbg !8955

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.PyGetSetDef*, %struct.PyGetSetDef** %gsp.addr, align 8, !dbg !8956, !tbaa !2522
  %name = getelementptr inbounds %struct.PyGetSetDef, %struct.PyGetSetDef* %3, i32 0, i32 0, !dbg !8959
  %4 = load i8*, i8** %name, align 8, !dbg !8959, !tbaa !8960
  %cmp = icmp ne i8* %4, null, !dbg !8962
  br i1 %cmp, label %for.body, label %for.end, !dbg !8963

for.body:                                         ; preds = %for.cond
  %5 = bitcast %struct._object** %descr to i8*, !dbg !8964
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !8964
  call void @llvm.dbg.declare(metadata %struct._object** %descr, metadata !1108, metadata !2526), !dbg !8965
  %6 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !8966, !tbaa !2522
  %7 = load %struct.PyGetSetDef*, %struct.PyGetSetDef** %gsp.addr, align 8, !dbg !8967, !tbaa !2522
  %call = call %struct._object* @PyDescr_NewGetSet(%struct._typeobject* %6, %struct.PyGetSetDef* %7), !dbg !8968
  store %struct._object* %call, %struct._object** %descr, align 8, !dbg !8969, !tbaa !2522
  %8 = load %struct._object*, %struct._object** %descr, align 8, !dbg !8970, !tbaa !2522
  %cmp1 = icmp eq %struct._object* %8, null, !dbg !8972
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8973

if.then:                                          ; preds = %for.body
  store i32 -1, i32* %retval, !dbg !8974
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8974

if.end:                                           ; preds = %for.body
  %9 = load %struct._object*, %struct._object** %dict, align 8, !dbg !8975, !tbaa !2522
  %10 = load %struct.PyGetSetDef*, %struct.PyGetSetDef** %gsp.addr, align 8, !dbg !8977, !tbaa !2522
  %name2 = getelementptr inbounds %struct.PyGetSetDef, %struct.PyGetSetDef* %10, i32 0, i32 0, !dbg !8978
  %11 = load i8*, i8** %name2, align 8, !dbg !8978, !tbaa !8960
  %12 = load %struct._object*, %struct._object** %descr, align 8, !dbg !8979, !tbaa !2522
  %call3 = call i32 @PyDict_SetItemString(%struct._object* %9, i8* %11, %struct._object* %12), !dbg !8980
  %cmp4 = icmp slt i32 %call3, 0, !dbg !8981
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !8982

if.then.5:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !8983
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8983

if.end.6:                                         ; preds = %if.end
  br label %do.body, !dbg !8984

do.body:                                          ; preds = %if.end.6
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8985
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !8985
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1112, metadata !2526), !dbg !8987
  %14 = load %struct._object*, %struct._object** %descr, align 8, !dbg !8988, !tbaa !2522
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !8987, !tbaa !2522
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8989, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !8991
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !8992, !tbaa !2551
  %dec = add i64 %16, -1, !dbg !8992
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8992, !tbaa !2551
  %cmp7 = icmp ne i64 %dec, 0, !dbg !8993
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !8994

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !8995

if.else:                                          ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8997, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !8999
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8999, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !9000
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9000, !tbaa !2590
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9001, !tbaa !2522
  call void %19(%struct._object* %20), !dbg !9002
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9003
  call void @llvm.lifetime.end(i64 8, i8* %21) #2, !dbg !9003
  br label %do.cond, !dbg !9005

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !9006

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !9008
  br label %cleanup, !dbg !9008

cleanup:                                          ; preds = %do.end, %if.then.5, %if.then
  %22 = bitcast %struct._object** %descr to i8*, !dbg !9009
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !9009
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !9010

for.inc:                                          ; preds = %cleanup.cont
  %23 = load %struct.PyGetSetDef*, %struct.PyGetSetDef** %gsp.addr, align 8, !dbg !9011, !tbaa !2522
  %incdec.ptr = getelementptr %struct.PyGetSetDef, %struct.PyGetSetDef* %23, i32 1, !dbg !9011
  store %struct.PyGetSetDef* %incdec.ptr, %struct.PyGetSetDef** %gsp.addr, align 8, !dbg !9011, !tbaa !2522
  br label %for.cond, !dbg !9012

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, !dbg !9013
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.10, !dbg !9013

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.10

cleanup.10:                                       ; preds = %NewDefault, %for.end
  %24 = bitcast %struct._object** %dict to i8*, !dbg !9014
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !9014
  %25 = load i32, i32* %retval, !dbg !9014
  ret i32 %25, !dbg !9014
}

declare %struct._object* @PyDescr_NewGetSet(%struct._typeobject*, %struct.PyGetSetDef*) #3

; Function Attrs: uwtable
define internal %struct._object* @CharArray_get_raw(%struct.tagCDataObject* %self) #0 {
entry:
  %self.addr = alloca %struct.tagCDataObject*, align 8
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !1118, metadata !2526), !dbg !9015
  %0 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9016, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %0, i32 0, i32 1, !dbg !9017
  %1 = load i8*, i8** %b_ptr, align 8, !dbg !9017, !tbaa !4817
  %2 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9018, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %2, i32 0, i32 4, !dbg !9019
  %3 = load i64, i64* %b_size, align 8, !dbg !9019, !tbaa !4918
  %call = call %struct._object* @PyBytes_FromStringAndSize(i8* %1, i64 %3), !dbg !9020
  ret %struct._object* %call, !dbg !9021
}

; Function Attrs: uwtable
define internal i32 @CharArray_set_raw(%struct.tagCDataObject* %self, %struct._object* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %value.addr = alloca %struct._object*, align 8
  %ptr = alloca i8*, align 8
  %size = alloca i64, align 8
  %view = alloca %struct.bufferinfo, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !1123, metadata !2526), !dbg !9022
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !1124, metadata !2526), !dbg !9023
  %0 = bitcast i8** %ptr to i8*, !dbg !9024
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9024
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !1125, metadata !2526), !dbg !9025
  %1 = bitcast i64* %size to i8*, !dbg !9026
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9026
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1126, metadata !2526), !dbg !9027
  %2 = bitcast %struct.bufferinfo* %view to i8*, !dbg !9028
  call void @llvm.lifetime.start(i64 80, i8* %2) #2, !dbg !9028
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %view, metadata !1127, metadata !2526), !dbg !9029
  %3 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9030, !tbaa !2522
  %call = call i32 @PyObject_GetBuffer(%struct._object* %3, %struct.bufferinfo* %view, i32 0), !dbg !9032
  %cmp = icmp slt i32 %call, 0, !dbg !9033
  br i1 %cmp, label %if.then, label %if.end, !dbg !9034

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !9035
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9035

if.end:                                           ; preds = %entry
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 2, !dbg !9036
  %4 = load i64, i64* %len, align 8, !dbg !9036, !tbaa !9037
  store i64 %4, i64* %size, align 8, !dbg !9039, !tbaa !2704
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %view, i32 0, i32 0, !dbg !9040
  %5 = load i8*, i8** %buf, align 8, !dbg !9040, !tbaa !9041
  store i8* %5, i8** %ptr, align 8, !dbg !9042, !tbaa !2522
  %6 = load i64, i64* %size, align 8, !dbg !9043, !tbaa !2704
  %7 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9045, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %7, i32 0, i32 4, !dbg !9046
  %8 = load i64, i64* %b_size, align 8, !dbg !9046, !tbaa !4918
  %cmp1 = icmp sgt i64 %6, %8, !dbg !9047
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !9048

if.then.2:                                        ; preds = %if.end
  %9 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9049, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.87, i32 0, i32 0)), !dbg !9051
  br label %fail, !dbg !9052

if.end.3:                                         ; preds = %if.end
  %10 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9053, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %10, i32 0, i32 1, !dbg !9054
  %11 = load i8*, i8** %b_ptr, align 8, !dbg !9054, !tbaa !4817
  %12 = load i8*, i8** %ptr, align 8, !dbg !9055, !tbaa !2522
  %13 = load i64, i64* %size, align 8, !dbg !9056, !tbaa !2704
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 %13, i32 1, i1 false), !dbg !9057
  call void @PyBuffer_Release(%struct.bufferinfo* %view), !dbg !9058
  store i32 0, i32* %retval, !dbg !9059
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9059

fail:                                             ; preds = %if.then.2
  call void @PyBuffer_Release(%struct.bufferinfo* %view), !dbg !9060
  store i32 -1, i32* %retval, !dbg !9061
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9061

cleanup:                                          ; preds = %fail, %if.end.3, %if.then
  %14 = bitcast %struct.bufferinfo* %view to i8*, !dbg !9062
  call void @llvm.lifetime.end(i64 80, i8* %14) #2, !dbg !9062
  %15 = bitcast i64* %size to i8*, !dbg !9062
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !9062
  %16 = bitcast i8** %ptr to i8*, !dbg !9062
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !9062
  %17 = load i32, i32* %retval, !dbg !9062
  ret i32 %17, !dbg !9062
}

; Function Attrs: uwtable
define internal %struct._object* @CharArray_get_value(%struct.tagCDataObject* %self) #0 {
entry:
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %i = alloca i32, align 4
  %ptr = alloca i8*, align 8
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !1130, metadata !2526), !dbg !9063
  %0 = bitcast i32* %i to i8*, !dbg !9064
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !9064
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1131, metadata !2526), !dbg !9065
  %1 = bitcast i8** %ptr to i8*, !dbg !9066
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9066
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !1132, metadata !2526), !dbg !9067
  %2 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9068, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %2, i32 0, i32 1, !dbg !9069
  %3 = load i8*, i8** %b_ptr, align 8, !dbg !9069, !tbaa !4817
  store i8* %3, i8** %ptr, align 8, !dbg !9067, !tbaa !2522
  store i32 0, i32* %i, align 4, !dbg !9070, !tbaa !2611
  br label %for.cond, !dbg !9072

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !9073, !tbaa !2611
  %conv = sext i32 %4 to i64, !dbg !9073
  %5 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9077, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %5, i32 0, i32 4, !dbg !9078
  %6 = load i64, i64* %b_size, align 8, !dbg !9078, !tbaa !4918
  %cmp = icmp slt i64 %conv, %6, !dbg !9079
  br i1 %cmp, label %for.body, label %for.end, !dbg !9080

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %ptr, align 8, !dbg !9081, !tbaa !2522
  %incdec.ptr = getelementptr i8, i8* %7, i32 1, !dbg !9081
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !9081, !tbaa !2522
  %8 = load i8, i8* %7, align 1, !dbg !9083, !tbaa !2731
  %conv2 = sext i8 %8 to i32, !dbg !9083
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !9084
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9085

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !9086

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9087

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !9089, !tbaa !2611
  %inc = add i32 %9, 1, !dbg !9089
  store i32 %inc, i32* %i, align 4, !dbg !9089, !tbaa !2611
  br label %for.cond, !dbg !9090

for.end:                                          ; preds = %if.then, %for.cond
  %10 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9091, !tbaa !2522
  %b_ptr5 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %10, i32 0, i32 1, !dbg !9092
  %11 = load i8*, i8** %b_ptr5, align 8, !dbg !9092, !tbaa !4817
  %12 = load i32, i32* %i, align 4, !dbg !9093, !tbaa !2611
  %conv6 = sext i32 %12 to i64, !dbg !9093
  %call = call %struct._object* @PyBytes_FromStringAndSize(i8* %11, i64 %conv6), !dbg !9094
  %13 = bitcast i8** %ptr to i8*, !dbg !9095
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !9095
  %14 = bitcast i32* %i to i8*, !dbg !9095
  call void @llvm.lifetime.end(i64 4, i8* %14) #2, !dbg !9095
  ret %struct._object* %call, !dbg !9096
}

; Function Attrs: uwtable
define internal i32 @CharArray_set_value(%struct.tagCDataObject* %self, %struct._object* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %value.addr = alloca %struct._object*, align 8
  %ptr = alloca i8*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp20 = alloca %struct._object*, align 8
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !1135, metadata !2526), !dbg !9097
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !1136, metadata !2526), !dbg !9098
  %0 = bitcast i8** %ptr to i8*, !dbg !9099
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9099
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !1137, metadata !2526), !dbg !9100
  %1 = bitcast i64* %size to i8*, !dbg !9101
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9101
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1138, metadata !2526), !dbg !9102
  %2 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9103, !tbaa !2522
  %cmp = icmp eq %struct._object* %2, null, !dbg !9105
  br i1 %cmp, label %if.then, label %if.end, !dbg !9106

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !9107, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.88, i32 0, i32 0)), !dbg !9109
  store i32 -1, i32* %retval, !dbg !9110
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9110

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9111, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !9113
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9113, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 19, !dbg !9114
  %6 = load i64, i64* %tp_flags, align 8, !dbg !9114, !tbaa !2849
  %and = and i64 %6, 134217728, !dbg !9115
  %cmp1 = icmp ne i64 %and, 0, !dbg !9116
  br i1 %cmp1, label %if.else, label %if.then.2, !dbg !9117

if.then.2:                                        ; preds = %if.end
  %7 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !9118, !tbaa !2522
  %8 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9120, !tbaa !2522
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !9121
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8, !dbg !9121, !tbaa !2588
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 1, !dbg !9122
  %10 = load i8*, i8** %tp_name, align 8, !dbg !9122, !tbaa !5264
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.89, i32 0, i32 0), i8* %10), !dbg !9123
  store i32 -1, i32* %retval, !dbg !9124
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9124

if.else:                                          ; preds = %if.end
  %11 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9125, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !9126
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !9127, !tbaa !2551
  %inc = add i64 %12, 1, !dbg !9127
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !9127, !tbaa !2551
  br label %if.end.4

if.end.4:                                         ; preds = %if.else
  %13 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9128, !tbaa !2522
  %14 = bitcast %struct._object* %13 to %struct.PyVarObject*, !dbg !9129
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %14, i32 0, i32 1, !dbg !9130
  %15 = load i64, i64* %ob_size, align 8, !dbg !9130, !tbaa !5784
  store i64 %15, i64* %size, align 8, !dbg !9131, !tbaa !2704
  %16 = load i64, i64* %size, align 8, !dbg !9132, !tbaa !2704
  %17 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9133, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %17, i32 0, i32 4, !dbg !9134
  %18 = load i64, i64* %b_size, align 8, !dbg !9134, !tbaa !4918
  %cmp5 = icmp sgt i64 %16, %18, !dbg !9135
  br i1 %cmp5, label %if.then.6, label %if.end.13, !dbg !9136

if.then.6:                                        ; preds = %if.end.4
  %19 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9137, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.87, i32 0, i32 0)), !dbg !9138
  br label %do.body, !dbg !9139

do.body:                                          ; preds = %if.then.6
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9140
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !9140
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1139, metadata !2526), !dbg !9142
  %21 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9143, !tbaa !2522
  store %struct._object* %21, %struct._object** %_py_decref_tmp, align 8, !dbg !9142, !tbaa !2522
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9144, !tbaa !2522
  %ob_refcnt7 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !9146
  %23 = load i64, i64* %ob_refcnt7, align 8, !dbg !9147, !tbaa !2551
  %dec = add i64 %23, -1, !dbg !9147
  store i64 %dec, i64* %ob_refcnt7, align 8, !dbg !9147, !tbaa !2551
  %cmp8 = icmp ne i64 %dec, 0, !dbg !9148
  br i1 %cmp8, label %if.then.9, label %if.else.10, !dbg !9149

if.then.9:                                        ; preds = %do.body
  br label %if.end.12, !dbg !9150

if.else.10:                                       ; preds = %do.body
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9152, !tbaa !2522
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !9154
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !9154, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !9155
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9155, !tbaa !2590
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9156, !tbaa !2522
  call void %26(%struct._object* %27), !dbg !9157
  br label %if.end.12

if.end.12:                                        ; preds = %if.else.10, %if.then.9
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9158
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !9158
  br label %do.cond, !dbg !9160

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !9161

do.end:                                           ; preds = %do.cond
  store i32 -1, i32* %retval, !dbg !9163
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9163

if.end.13:                                        ; preds = %if.end.4
  %29 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9164, !tbaa !2522
  %30 = bitcast %struct._object* %29 to %struct.PyBytesObject*, !dbg !9165
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %30, i32 0, i32 2, !dbg !9166
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !9167
  store i8* %arraydecay, i8** %ptr, align 8, !dbg !9168, !tbaa !2522
  %31 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9169, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %31, i32 0, i32 1, !dbg !9170
  %32 = load i8*, i8** %b_ptr, align 8, !dbg !9170, !tbaa !4817
  %33 = load i8*, i8** %ptr, align 8, !dbg !9171, !tbaa !2522
  %34 = load i64, i64* %size, align 8, !dbg !9172, !tbaa !2704
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 %34, i32 1, i1 false), !dbg !9173
  %35 = load i64, i64* %size, align 8, !dbg !9174, !tbaa !2704
  %36 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9176, !tbaa !2522
  %b_size14 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %36, i32 0, i32 4, !dbg !9177
  %37 = load i64, i64* %b_size14, align 8, !dbg !9177, !tbaa !4918
  %cmp15 = icmp slt i64 %35, %37, !dbg !9178
  br i1 %cmp15, label %if.then.16, label %if.end.18, !dbg !9179

if.then.16:                                       ; preds = %if.end.13
  %38 = load i64, i64* %size, align 8, !dbg !9180, !tbaa !2704
  %39 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9181, !tbaa !2522
  %b_ptr17 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %39, i32 0, i32 1, !dbg !9182
  %40 = load i8*, i8** %b_ptr17, align 8, !dbg !9182, !tbaa !4817
  %arrayidx = getelementptr i8, i8* %40, i64 %38, !dbg !9181
  store i8 0, i8* %arrayidx, align 1, !dbg !9183, !tbaa !2731
  br label %if.end.18, !dbg !9181

if.end.18:                                        ; preds = %if.then.16, %if.end.13
  br label %do.body.19, !dbg !9184

do.body.19:                                       ; preds = %if.end.18
  %41 = bitcast %struct._object** %_py_decref_tmp20 to i8*, !dbg !9185
  call void @llvm.lifetime.start(i64 8, i8* %41) #2, !dbg !9185
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp20, metadata !1143, metadata !2526), !dbg !9187
  %42 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9188, !tbaa !2522
  store %struct._object* %42, %struct._object** %_py_decref_tmp20, align 8, !dbg !9187, !tbaa !2522
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !9189, !tbaa !2522
  %ob_refcnt21 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 0, !dbg !9191
  %44 = load i64, i64* %ob_refcnt21, align 8, !dbg !9192, !tbaa !2551
  %dec22 = add i64 %44, -1, !dbg !9192
  store i64 %dec22, i64* %ob_refcnt21, align 8, !dbg !9192, !tbaa !2551
  %cmp23 = icmp ne i64 %dec22, 0, !dbg !9193
  br i1 %cmp23, label %if.then.24, label %if.else.25, !dbg !9194

if.then.24:                                       ; preds = %do.body.19
  br label %if.end.28, !dbg !9195

if.else.25:                                       ; preds = %do.body.19
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !9197, !tbaa !2522
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !9199
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8, !dbg !9199, !tbaa !2588
  %tp_dealloc27 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 4, !dbg !9200
  %47 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc27, align 8, !dbg !9200, !tbaa !2590
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp20, align 8, !dbg !9201, !tbaa !2522
  call void %47(%struct._object* %48), !dbg !9202
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.25, %if.then.24
  %49 = bitcast %struct._object** %_py_decref_tmp20 to i8*, !dbg !9203
  call void @llvm.lifetime.end(i64 8, i8* %49) #2, !dbg !9203
  br label %do.cond.29, !dbg !9205

do.cond.29:                                       ; preds = %if.end.28
  br label %do.end.30, !dbg !9206

do.end.30:                                        ; preds = %do.cond.29
  store i32 0, i32* %retval, !dbg !9208
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9208

cleanup:                                          ; preds = %do.end.30, %do.end, %if.then.2, %if.then
  %50 = bitcast i64* %size to i8*, !dbg !9209
  call void @llvm.lifetime.end(i64 8, i8* %50) #2, !dbg !9209
  %51 = bitcast i8** %ptr to i8*, !dbg !9209
  call void @llvm.lifetime.end(i64 8, i8* %51) #2, !dbg !9209
  %52 = load i32, i32* %retval, !dbg !9209
  ret i32 %52, !dbg !9209
}

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #3

declare i32 @PyObject_GetBuffer(%struct._object*, %struct.bufferinfo*, i32) #3

declare void @PyBuffer_Release(%struct.bufferinfo*) #3

; Function Attrs: uwtable
define internal %struct._object* @WCharArray_get_value(%struct.tagCDataObject* %self) #0 {
entry:
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %i = alloca i32, align 4
  %ptr = alloca i32*, align 8
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !1147, metadata !2526), !dbg !9210
  %0 = bitcast i32* %i to i8*, !dbg !9211
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !9211
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1148, metadata !2526), !dbg !9212
  %1 = bitcast i32** %ptr to i8*, !dbg !9213
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9213
  call void @llvm.dbg.declare(metadata i32** %ptr, metadata !1149, metadata !2526), !dbg !9214
  %2 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9215, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %2, i32 0, i32 1, !dbg !9216
  %3 = load i8*, i8** %b_ptr, align 8, !dbg !9216, !tbaa !4817
  %4 = bitcast i8* %3 to i32*, !dbg !9217
  store i32* %4, i32** %ptr, align 8, !dbg !9214, !tbaa !2522
  store i32 0, i32* %i, align 4, !dbg !9218, !tbaa !2611
  br label %for.cond, !dbg !9220

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !9221, !tbaa !2611
  %conv = zext i32 %5 to i64, !dbg !9221
  %6 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9225, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %6, i32 0, i32 4, !dbg !9226
  %7 = load i64, i64* %b_size, align 8, !dbg !9226, !tbaa !4918
  %div = udiv i64 %7, 4, !dbg !9227
  %cmp = icmp ult i64 %conv, %div, !dbg !9228
  br i1 %cmp, label %for.body, label %for.end, !dbg !9229

for.body:                                         ; preds = %for.cond
  %8 = load i32*, i32** %ptr, align 8, !dbg !9230, !tbaa !2522
  %incdec.ptr = getelementptr i32, i32* %8, i32 1, !dbg !9230
  store i32* %incdec.ptr, i32** %ptr, align 8, !dbg !9230, !tbaa !2522
  %9 = load i32, i32* %8, align 4, !dbg !9232, !tbaa !2611
  %cmp2 = icmp eq i32 %9, 0, !dbg !9233
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9234

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !9235

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9236

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !9238, !tbaa !2611
  %inc = add i32 %10, 1, !dbg !9238
  store i32 %inc, i32* %i, align 4, !dbg !9238, !tbaa !2611
  br label %for.cond, !dbg !9239

for.end:                                          ; preds = %if.then, %for.cond
  %11 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9240, !tbaa !2522
  %b_ptr4 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %11, i32 0, i32 1, !dbg !9241
  %12 = load i8*, i8** %b_ptr4, align 8, !dbg !9241, !tbaa !4817
  %13 = bitcast i8* %12 to i32*, !dbg !9242
  %14 = load i32, i32* %i, align 4, !dbg !9243, !tbaa !2611
  %conv5 = zext i32 %14 to i64, !dbg !9243
  %call = call %struct._object* @PyUnicode_FromWideChar(i32* %13, i64 %conv5), !dbg !9244
  %15 = bitcast i32** %ptr to i8*, !dbg !9245
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !9245
  %16 = bitcast i32* %i to i8*, !dbg !9245
  call void @llvm.lifetime.end(i64 4, i8* %16) #2, !dbg !9245
  ret %struct._object* %call, !dbg !9246
}

; Function Attrs: uwtable
define internal i32 @WCharArray_set_value(%struct.tagCDataObject* %self, %struct._object* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %value.addr = alloca %struct._object*, align 8
  %result = alloca i64, align 8
  %wstr = alloca i32*, align 8
  %len = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !1152, metadata !2526), !dbg !9247
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !1153, metadata !2526), !dbg !9248
  %0 = bitcast i64* %result to i8*, !dbg !9249
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9249
  call void @llvm.dbg.declare(metadata i64* %result, metadata !1154, metadata !2526), !dbg !9250
  store i64 0, i64* %result, align 8, !dbg !9250, !tbaa !2704
  %1 = bitcast i32** %wstr to i8*, !dbg !9251
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9251
  call void @llvm.dbg.declare(metadata i32** %wstr, metadata !1155, metadata !2526), !dbg !9252
  %2 = bitcast i64* %len to i8*, !dbg !9253
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !9253
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1159, metadata !2526), !dbg !9254
  %3 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9255, !tbaa !2522
  %cmp = icmp eq %struct._object* %3, null, !dbg !9257
  br i1 %cmp, label %if.then, label %if.end, !dbg !9258

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !9259, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.88, i32 0, i32 0)), !dbg !9261
  store i32 -1, i32* %retval, !dbg !9262
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9262

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9263, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !9265
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9265, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19, !dbg !9266
  %7 = load i64, i64* %tp_flags, align 8, !dbg !9266, !tbaa !2849
  %and = and i64 %7, 268435456, !dbg !9267
  %cmp1 = icmp ne i64 %and, 0, !dbg !9268
  br i1 %cmp1, label %if.else, label %if.then.2, !dbg !9269

if.then.2:                                        ; preds = %if.end
  %8 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !9270, !tbaa !2522
  %9 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9272, !tbaa !2522
  %ob_type3 = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !9273
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type3, align 8, !dbg !9273, !tbaa !2588
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 1, !dbg !9274
  %11 = load i8*, i8** %tp_name, align 8, !dbg !9274, !tbaa !5264
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.90, i32 0, i32 0), i8* %11), !dbg !9275
  store i32 -1, i32* %retval, !dbg !9276
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9276

if.else:                                          ; preds = %if.end
  %12 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9277, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !9278
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !9279, !tbaa !2551
  %inc = add i64 %13, 1, !dbg !9279
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !9279, !tbaa !2551
  br label %if.end.4

if.end.4:                                         ; preds = %if.else
  %14 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9280, !tbaa !2522
  %call5 = call i32* @PyUnicode_AsUnicodeAndSize(%struct._object* %14, i64* %len), !dbg !9281
  store i32* %call5, i32** %wstr, align 8, !dbg !9282, !tbaa !2522
  %15 = load i32*, i32** %wstr, align 8, !dbg !9283, !tbaa !2522
  %cmp6 = icmp eq i32* %15, null, !dbg !9285
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !9286

if.then.7:                                        ; preds = %if.end.4
  store i32 -1, i32* %retval, !dbg !9287
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9287

if.end.8:                                         ; preds = %if.end.4
  %16 = load i64, i64* %len, align 8, !dbg !9288, !tbaa !2704
  %conv = trunc i64 %16 to i32, !dbg !9290
  %conv9 = zext i32 %conv to i64, !dbg !9290
  %17 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9291, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %17, i32 0, i32 4, !dbg !9292
  %18 = load i64, i64* %b_size, align 8, !dbg !9292, !tbaa !4918
  %div = udiv i64 %18, 4, !dbg !9293
  %cmp10 = icmp ugt i64 %conv9, %div, !dbg !9294
  br i1 %cmp10, label %if.then.12, label %if.end.13, !dbg !9295

if.then.12:                                       ; preds = %if.end.8
  %19 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !9296, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.87, i32 0, i32 0)), !dbg !9298
  store i64 -1, i64* %result, align 8, !dbg !9299, !tbaa !2704
  br label %done, !dbg !9300

if.end.13:                                        ; preds = %if.end.8
  %20 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9301, !tbaa !2522
  %21 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9302, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %21, i32 0, i32 1, !dbg !9303
  %22 = load i8*, i8** %b_ptr, align 8, !dbg !9303, !tbaa !4817
  %23 = bitcast i8* %22 to i32*, !dbg !9304
  %24 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9305, !tbaa !2522
  %b_size14 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %24, i32 0, i32 4, !dbg !9306
  %25 = load i64, i64* %b_size14, align 8, !dbg !9306, !tbaa !4918
  %div15 = udiv i64 %25, 4, !dbg !9307
  %call16 = call i64 @PyUnicode_AsWideChar(%struct._object* %20, i32* %23, i64 %div15), !dbg !9308
  store i64 %call16, i64* %result, align 8, !dbg !9309, !tbaa !2704
  %26 = load i64, i64* %result, align 8, !dbg !9310, !tbaa !2704
  %cmp17 = icmp sge i64 %26, 0, !dbg !9312
  br i1 %cmp17, label %land.lhs.true, label %if.end.25, !dbg !9313

land.lhs.true:                                    ; preds = %if.end.13
  %27 = load i64, i64* %result, align 8, !dbg !9314, !tbaa !2704
  %28 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9316, !tbaa !2522
  %b_size19 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %28, i32 0, i32 4, !dbg !9317
  %29 = load i64, i64* %b_size19, align 8, !dbg !9317, !tbaa !4918
  %div20 = udiv i64 %29, 4, !dbg !9318
  %cmp21 = icmp ult i64 %27, %div20, !dbg !9319
  br i1 %cmp21, label %if.then.23, label %if.end.25, !dbg !9320

if.then.23:                                       ; preds = %land.lhs.true
  %30 = load i64, i64* %result, align 8, !dbg !9321, !tbaa !2704
  %31 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9322, !tbaa !2522
  %b_ptr24 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %31, i32 0, i32 1, !dbg !9323
  %32 = load i8*, i8** %b_ptr24, align 8, !dbg !9323, !tbaa !4817
  %33 = bitcast i8* %32 to i32*, !dbg !9324
  %arrayidx = getelementptr i32, i32* %33, i64 %30, !dbg !9325
  store i32 0, i32* %arrayidx, align 4, !dbg !9326, !tbaa !2611
  br label %if.end.25, !dbg !9325

if.end.25:                                        ; preds = %if.then.23, %land.lhs.true, %if.end.13
  br label %done, !dbg !9327

done:                                             ; preds = %if.end.25, %if.then.12
  br label %do.body, !dbg !9330

do.body:                                          ; preds = %done
  %34 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9331
  call void @llvm.lifetime.start(i64 8, i8* %34) #2, !dbg !9331
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1160, metadata !2526), !dbg !9333
  %35 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9334, !tbaa !2522
  store %struct._object* %35, %struct._object** %_py_decref_tmp, align 8, !dbg !9333, !tbaa !2522
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9335, !tbaa !2522
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0, !dbg !9337
  %37 = load i64, i64* %ob_refcnt26, align 8, !dbg !9338, !tbaa !2551
  %dec = add i64 %37, -1, !dbg !9338
  store i64 %dec, i64* %ob_refcnt26, align 8, !dbg !9338, !tbaa !2551
  %cmp27 = icmp ne i64 %dec, 0, !dbg !9339
  br i1 %cmp27, label %if.then.29, label %if.else.30, !dbg !9340

if.then.29:                                       ; preds = %do.body
  br label %if.end.32, !dbg !9341

if.else.30:                                       ; preds = %do.body
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9343, !tbaa !2522
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1, !dbg !9345
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8, !dbg !9345, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4, !dbg !9346
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9346, !tbaa !2590
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9347, !tbaa !2522
  call void %40(%struct._object* %41), !dbg !9348
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.30, %if.then.29
  %42 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9349
  call void @llvm.lifetime.end(i64 8, i8* %42) #2, !dbg !9349
  br label %do.cond, !dbg !9351

do.cond:                                          ; preds = %if.end.32
  br label %do.end, !dbg !9352

do.end:                                           ; preds = %do.cond
  %43 = load i64, i64* %result, align 8, !dbg !9354, !tbaa !2704
  %cmp33 = icmp sge i64 %43, 0, !dbg !9355
  %cond = select i1 %cmp33, i32 0, i32 -1, !dbg !9354
  store i32 %cond, i32* %retval, !dbg !9356
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9356

cleanup:                                          ; preds = %do.end, %if.then.7, %if.then.2, %if.then
  %44 = bitcast i64* %len to i8*, !dbg !9357
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !9357
  %45 = bitcast i32** %wstr to i8*, !dbg !9357
  call void @llvm.lifetime.end(i64 8, i8* %45) #2, !dbg !9357
  %46 = bitcast i64* %result to i8*, !dbg !9357
  call void @llvm.lifetime.end(i64 8, i8* %46) #2, !dbg !9357
  %47 = load i32, i32* %retval, !dbg !9357
  ret i32 %47, !dbg !9357
}

declare %struct._object* @PyUnicode_FromWideChar(i32*, i64) #3

declare i32* @PyUnicode_AsUnicodeAndSize(%struct._object*, i64*) #3

declare i64 @PyUnicode_AsWideChar(%struct._object*, i32*, i64) #3

; Function Attrs: uwtable
define internal %struct._object* @PyCSimpleType_from_param(%struct._object* %type, %struct._object* %value) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %fmt = alloca i8*, align 8
  %parg = alloca %struct.tagPyCArgObject*, align 8
  %fd = alloca %struct.fielddesc*, align 8
  %as_parameter = alloca %struct._object*, align 8
  %res = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %atomic_val = alloca %struct._Py_atomic_address*, align 8
  %result = alloca i8*, align 8
  %volatile_data = alloca i8**, align 8
  %order = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  %atomic_val49 = alloca %struct._Py_atomic_address*, align 8
  %result51 = alloca i8*, align 8
  %volatile_data53 = alloca i8**, align 8
  %order56 = alloca i32, align 4
  %tmp63 = alloca i8*, align 8
  %atomic_val70 = alloca %struct._Py_atomic_address*, align 8
  %result72 = alloca i8*, align 8
  %volatile_data74 = alloca i8**, align 8
  %order77 = alloca i32, align 4
  %tmp84 = alloca i8*, align 8
  %_py_decref_tmp90 = alloca %struct._object*, align 8
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !1164, metadata !2526), !dbg !9358
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !1165, metadata !2526), !dbg !9359
  %0 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !9360
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9360
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !1166, metadata !2526), !dbg !9361
  %1 = bitcast i8** %fmt to i8*, !dbg !9362
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9362
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !1167, metadata !2526), !dbg !9363
  %2 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !9364
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !9364
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %parg, metadata !1168, metadata !2526), !dbg !9365
  %3 = bitcast %struct.fielddesc** %fd to i8*, !dbg !9366
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !9366
  call void @llvm.dbg.declare(metadata %struct.fielddesc** %fd, metadata !1169, metadata !2526), !dbg !9367
  %4 = bitcast %struct._object** %as_parameter to i8*, !dbg !9368
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !9368
  call void @llvm.dbg.declare(metadata %struct._object** %as_parameter, metadata !1179, metadata !2526), !dbg !9369
  %5 = bitcast i32* %res to i8*, !dbg !9370
  call void @llvm.lifetime.start(i64 4, i8* %5) #2, !dbg !9370
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1180, metadata !2526), !dbg !9371
  %6 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9372, !tbaa !2522
  %7 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !9373, !tbaa !2522
  %call = call i32 @PyObject_IsInstance(%struct._object* %6, %struct._object* %7), !dbg !9374
  store i32 %call, i32* %res, align 4, !dbg !9375, !tbaa !2611
  %8 = load i32, i32* %res, align 4, !dbg !9376, !tbaa !2611
  %cmp = icmp eq i32 %8, -1, !dbg !9378
  br i1 %cmp, label %if.then, label %if.end, !dbg !9379

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9380
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9380

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %res, align 4, !dbg !9381, !tbaa !2611
  %tobool = icmp ne i32 %9, 0, !dbg !9381
  br i1 %tobool, label %if.then.1, label %if.end.2, !dbg !9383

if.then.1:                                        ; preds = %if.end
  %10 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9384, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !9386
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !9387, !tbaa !2551
  %inc = add i64 %11, 1, !dbg !9387
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !9387, !tbaa !2551
  %12 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9388, !tbaa !2522
  store %struct._object* %12, %struct._object** %retval, !dbg !9389
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9389

if.end.2:                                         ; preds = %if.end
  %13 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !9390, !tbaa !2522
  %call3 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %13), !dbg !9391
  store %struct.StgDictObject* %call3, %struct.StgDictObject** %dict, align 8, !dbg !9392, !tbaa !2522
  %14 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !9393, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %14, i32 0, i32 5, !dbg !9394
  %15 = load %struct._object*, %struct._object** %proto, align 8, !dbg !9394, !tbaa !2961
  %call4 = call i8* @PyUnicode_AsUTF8(%struct._object* %15), !dbg !9395
  store i8* %call4, i8** %fmt, align 8, !dbg !9396, !tbaa !2522
  %16 = load i8*, i8** %fmt, align 8, !dbg !9397, !tbaa !2522
  %call5 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* %16), !dbg !9398
  store %struct.fielddesc* %call5, %struct.fielddesc** %fd, align 8, !dbg !9399, !tbaa !2522
  %call6 = call %struct.tagPyCArgObject* @PyCArgObject_new(), !dbg !9400
  store %struct.tagPyCArgObject* %call6, %struct.tagPyCArgObject** %parg, align 8, !dbg !9401, !tbaa !2522
  %17 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !9402, !tbaa !2522
  %cmp7 = icmp eq %struct.tagPyCArgObject* %17, null, !dbg !9404
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !9405

if.then.8:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !9406
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9406

if.end.9:                                         ; preds = %if.end.2
  %18 = load i8*, i8** %fmt, align 8, !dbg !9407, !tbaa !2522
  %arrayidx = getelementptr i8, i8* %18, i64 0, !dbg !9407
  %19 = load i8, i8* %arrayidx, align 1, !dbg !9407, !tbaa !2731
  %20 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !9408, !tbaa !2522
  %tag = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %20, i32 0, i32 2, !dbg !9409
  store i8 %19, i8* %tag, align 1, !dbg !9410, !tbaa !8604
  %21 = load %struct.fielddesc*, %struct.fielddesc** %fd, align 8, !dbg !9411, !tbaa !2522
  %pffi_type = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %21, i32 0, i32 3, !dbg !9412
  %22 = load %struct._ffi_type*, %struct._ffi_type** %pffi_type, align 8, !dbg !9412, !tbaa !3104
  %23 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !9413, !tbaa !2522
  %pffi_type10 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %23, i32 0, i32 1, !dbg !9414
  store %struct._ffi_type* %22, %struct._ffi_type** %pffi_type10, align 8, !dbg !9415, !tbaa !8614
  %24 = load %struct.fielddesc*, %struct.fielddesc** %fd, align 8, !dbg !9416, !tbaa !2522
  %setfunc = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %24, i32 0, i32 1, !dbg !9417
  %25 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc, align 8, !dbg !9417, !tbaa !4037
  %26 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !9418, !tbaa !2522
  %value11 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %26, i32 0, i32 3, !dbg !9419
  %27 = bitcast %union.anon* %value11 to i8*, !dbg !9420
  %28 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9421, !tbaa !2522
  %call12 = call %struct._object* %25(i8* %27, %struct._object* %28, i64 0), !dbg !9416
  %29 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !9422, !tbaa !2522
  %obj = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %29, i32 0, i32 4, !dbg !9423
  store %struct._object* %call12, %struct._object** %obj, align 8, !dbg !9424, !tbaa !7925
  %30 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !9425, !tbaa !2522
  %obj13 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %30, i32 0, i32 4, !dbg !9427
  %31 = load %struct._object*, %struct._object** %obj13, align 8, !dbg !9427, !tbaa !7925
  %tobool14 = icmp ne %struct._object* %31, null, !dbg !9425
  br i1 %tobool14, label %if.then.15, label %if.end.16, !dbg !9428

if.then.15:                                       ; preds = %if.end.9
  %32 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !9429, !tbaa !2522
  %33 = bitcast %struct.tagPyCArgObject* %32 to %struct._object*, !dbg !9430
  store %struct._object* %33, %struct._object** %retval, !dbg !9431
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9431

if.end.16:                                        ; preds = %if.end.9
  call void @PyErr_Clear(), !dbg !9432
  br label %do.body, !dbg !9433

do.body:                                          ; preds = %if.end.16
  %34 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9434
  call void @llvm.lifetime.start(i64 8, i8* %34) #2, !dbg !9434
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1181, metadata !2526), !dbg !9436
  %35 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !9437, !tbaa !2522
  %36 = bitcast %struct.tagPyCArgObject* %35 to %struct._object*, !dbg !9438
  store %struct._object* %36, %struct._object** %_py_decref_tmp, align 8, !dbg !9436, !tbaa !2522
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9439, !tbaa !2522
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !9441
  %38 = load i64, i64* %ob_refcnt17, align 8, !dbg !9442, !tbaa !2551
  %dec = add i64 %38, -1, !dbg !9442
  store i64 %dec, i64* %ob_refcnt17, align 8, !dbg !9442, !tbaa !2551
  %cmp18 = icmp ne i64 %dec, 0, !dbg !9443
  br i1 %cmp18, label %if.then.19, label %if.else, !dbg !9444

if.then.19:                                       ; preds = %do.body
  br label %if.end.20, !dbg !9445

if.else:                                          ; preds = %do.body
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9447, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1, !dbg !9449
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9449, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4, !dbg !9450
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9450, !tbaa !2590
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9451, !tbaa !2522
  call void %41(%struct._object* %42), !dbg !9452
  br label %if.end.20

if.end.20:                                        ; preds = %if.else, %if.then.19
  %43 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9453
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !9453
  br label %do.cond, !dbg !9455

do.cond:                                          ; preds = %if.end.20
  br label %do.end, !dbg !9456

do.end:                                           ; preds = %do.cond
  %44 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9458, !tbaa !2522
  %call21 = call %struct._object* @PyObject_GetAttrString(%struct._object* %44, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i32 0, i32 0)), !dbg !9459
  store %struct._object* %call21, %struct._object** %as_parameter, align 8, !dbg !9460, !tbaa !2522
  %45 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !9461, !tbaa !2522
  %tobool22 = icmp ne %struct._object* %45, null, !dbg !9461
  br i1 %tobool22, label %if.then.23, label %if.end.101, !dbg !9462

if.then.23:                                       ; preds = %do.end
  %46 = bitcast %struct._Py_atomic_address** %atomic_val to i8*, !dbg !9463
  call void @llvm.lifetime.start(i64 8, i8* %46) #2, !dbg !9463
  call void @llvm.dbg.declare(metadata %struct._Py_atomic_address** %atomic_val, metadata !1183, metadata !2526), !dbg !9464
  store %struct._Py_atomic_address* @_PyThreadState_Current, %struct._Py_atomic_address** %atomic_val, align 8, !dbg !9464, !tbaa !2522
  %47 = bitcast i8** %result to i8*, !dbg !9465
  call void @llvm.lifetime.start(i64 8, i8* %47) #2, !dbg !9465
  call void @llvm.dbg.declare(metadata i8** %result, metadata !1193, metadata !2526), !dbg !9466
  %48 = bitcast i8*** %volatile_data to i8*, !dbg !9467
  call void @llvm.lifetime.start(i64 8, i8* %48) #2, !dbg !9467
  call void @llvm.dbg.declare(metadata i8*** %volatile_data, metadata !1194, metadata !2526), !dbg !9468
  %49 = load %struct._Py_atomic_address*, %struct._Py_atomic_address** %atomic_val, align 8, !dbg !9469, !tbaa !2522
  %_value = getelementptr inbounds %struct._Py_atomic_address, %struct._Py_atomic_address* %49, i32 0, i32 0, !dbg !9470
  store i8** %_value, i8*** %volatile_data, align 8, !dbg !9468, !tbaa !2522
  %50 = bitcast i32* %order to i8*, !dbg !9471
  call void @llvm.lifetime.start(i64 4, i8* %50) #2, !dbg !9471
  call void @llvm.dbg.declare(metadata i32* %order, metadata !1197, metadata !2526), !dbg !9472
  store i32 0, i32* %order, align 4, !dbg !9472, !tbaa !2731
  %51 = load %struct._Py_atomic_address*, %struct._Py_atomic_address** %atomic_val, align 8, !dbg !9473, !tbaa !2522
  %52 = bitcast %struct._Py_atomic_address* %51 to i8*, !dbg !9473
  %53 = load i32, i32* %order, align 4, !dbg !9474, !tbaa !2731
  call void @_Py_ANNOTATE_MEMORY_ORDER(i8* %52, i32 %53), !dbg !9475
  %54 = load i32, i32* %order, align 4, !dbg !9476, !tbaa !2731
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.then.23
  %.off = add i32 %54, -2
  %SwitchLeaf = icmp ule i32 %.off, 2
  br i1 %SwitchLeaf, label %sw.bb, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock
  call void @_Py_atomic_thread_fence(i32 2), !dbg !9477
  br label %sw.epilog, !dbg !9482

NewDefault:                                       ; preds = %LeafBlock
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  br label %sw.epilog, !dbg !9483

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %55 = load i8**, i8*** %volatile_data, align 8, !dbg !9485, !tbaa !2522
  %56 = load volatile i8*, i8** %55, align 8, !dbg !9488, !tbaa !2522
  store i8* %56, i8** %result, align 8, !dbg !9489, !tbaa !2522
  %57 = load i32, i32* %order, align 4, !dbg !9490, !tbaa !2731
  br label %NodeBlock

NodeBlock:                                        ; preds = %sw.epilog
  %Pivot = icmp slt i32 %57, 3
  br i1 %Pivot, label %LeafBlock.2, label %LeafBlock.4

LeafBlock.4:                                      ; preds = %NodeBlock
  %.off.5 = add i32 %57, -3
  %SwitchLeaf6 = icmp ule i32 %.off.5, 1
  br i1 %SwitchLeaf6, label %sw.bb.24, label %NewDefault.1

LeafBlock.2:                                      ; preds = %NodeBlock
  %SwitchLeaf3 = icmp eq i32 %57, 1
  br i1 %SwitchLeaf3, label %sw.bb.24, label %NewDefault.1

sw.bb.24:                                         ; preds = %LeafBlock.4, %LeafBlock.2
  call void @_Py_atomic_signal_fence(i32 1), !dbg !9491
  br label %sw.epilog.26, !dbg !9496

NewDefault.1:                                     ; preds = %LeafBlock.4, %LeafBlock.2
  br label %sw.default.25

sw.default.25:                                    ; preds = %NewDefault.1
  br label %sw.epilog.26, !dbg !9497

sw.epilog.26:                                     ; preds = %sw.default.25, %sw.bb.24
  %58 = load i8*, i8** %result, align 8, !dbg !9499, !tbaa !2522
  store i8* %58, i8** %tmp, !dbg !9502, !tbaa !2522
  %59 = bitcast i32* %order to i8*, !dbg !9503
  call void @llvm.lifetime.end(i64 4, i8* %59) #2, !dbg !9503
  %60 = bitcast i8*** %volatile_data to i8*, !dbg !9503
  call void @llvm.lifetime.end(i64 8, i8* %60) #2, !dbg !9503
  %61 = bitcast i8** %result to i8*, !dbg !9503
  call void @llvm.lifetime.end(i64 8, i8* %61) #2, !dbg !9503
  %62 = bitcast %struct._Py_atomic_address** %atomic_val to i8*, !dbg !9503
  call void @llvm.lifetime.end(i64 8, i8* %62) #2, !dbg !9503
  %63 = load i8*, i8** %tmp, !dbg !9504, !tbaa !2522
  %64 = bitcast i8* %63 to %struct._ts*, !dbg !9505
  %recursion_depth = getelementptr inbounds %struct._ts, %struct._ts* %64, i32 0, i32 4, !dbg !9506
  %65 = load i32, i32* %recursion_depth, align 4, !dbg !9507, !tbaa !9508
  %inc27 = add i32 %65, 1, !dbg !9507
  store i32 %inc27, i32* %recursion_depth, align 4, !dbg !9507, !tbaa !9508
  %66 = load i32, i32* @_Py_CheckRecursionLimit, align 4, !dbg !9510, !tbaa !2611
  %cmp28 = icmp sgt i32 %inc27, %66, !dbg !9511
  br i1 %cmp28, label %land.lhs.true, label %if.end.45, !dbg !9512

land.lhs.true:                                    ; preds = %sw.epilog.26
  %call29 = call i32 @_Py_CheckRecursiveCall(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.91, i32 0, i32 0)), !dbg !9513
  %tobool30 = icmp ne i32 %call29, 0, !dbg !9513
  br i1 %tobool30, label %if.then.31, label %if.end.45, !dbg !9515

if.then.31:                                       ; preds = %land.lhs.true
  br label %do.body.32, !dbg !9516

do.body.32:                                       ; preds = %if.then.31
  %67 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !9517
  call void @llvm.lifetime.start(i64 8, i8* %67) #2, !dbg !9517
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !1199, metadata !2526), !dbg !9519
  %68 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !9520, !tbaa !2522
  store %struct._object* %68, %struct._object** %_py_decref_tmp34, align 8, !dbg !9519, !tbaa !2522
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !9521, !tbaa !2522
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0, !dbg !9523
  %70 = load i64, i64* %ob_refcnt35, align 8, !dbg !9524, !tbaa !2551
  %dec36 = add i64 %70, -1, !dbg !9524
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !9524, !tbaa !2551
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !9525
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !9526

if.then.38:                                       ; preds = %do.body.32
  br label %if.end.42, !dbg !9527

if.else.39:                                       ; preds = %do.body.32
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !9529, !tbaa !2522
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1, !dbg !9531
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !9531, !tbaa !2588
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4, !dbg !9532
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !9532, !tbaa !2590
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !9533, !tbaa !2522
  call void %73(%struct._object* %74), !dbg !9534
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %75 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !9535
  call void @llvm.lifetime.end(i64 8, i8* %75) #2, !dbg !9535
  br label %do.cond.43, !dbg !9537

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !9538

do.end.44:                                        ; preds = %do.cond.43
  store %struct._object* null, %struct._object** %retval, !dbg !9540
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9540

if.end.45:                                        ; preds = %land.lhs.true, %sw.epilog.26
  %76 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !9541, !tbaa !2522
  %77 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !9542, !tbaa !2522
  %call46 = call %struct._object* @PyCSimpleType_from_param(%struct._object* %76, %struct._object* %77), !dbg !9543
  store %struct._object* %call46, %struct._object** %value.addr, align 8, !dbg !9544, !tbaa !2522
  br label %do.body.47, !dbg !9545

do.body.47:                                       ; preds = %if.end.45
  %78 = bitcast %struct._Py_atomic_address** %atomic_val49 to i8*, !dbg !9546
  call void @llvm.lifetime.start(i64 8, i8* %78) #2, !dbg !9546
  call void @llvm.dbg.declare(metadata %struct._Py_atomic_address** %atomic_val49, metadata !1202, metadata !2526), !dbg !9548
  store %struct._Py_atomic_address* @_PyThreadState_Current, %struct._Py_atomic_address** %atomic_val49, align 8, !dbg !9548, !tbaa !2522
  %79 = bitcast i8** %result51 to i8*, !dbg !9549
  call void @llvm.lifetime.start(i64 8, i8* %79) #2, !dbg !9549
  call void @llvm.dbg.declare(metadata i8** %result51, metadata !1206, metadata !2526), !dbg !9550
  %80 = bitcast i8*** %volatile_data53 to i8*, !dbg !9551
  call void @llvm.lifetime.start(i64 8, i8* %80) #2, !dbg !9551
  call void @llvm.dbg.declare(metadata i8*** %volatile_data53, metadata !1207, metadata !2526), !dbg !9552
  %81 = load %struct._Py_atomic_address*, %struct._Py_atomic_address** %atomic_val49, align 8, !dbg !9553, !tbaa !2522
  %_value54 = getelementptr inbounds %struct._Py_atomic_address, %struct._Py_atomic_address* %81, i32 0, i32 0, !dbg !9554
  store i8** %_value54, i8*** %volatile_data53, align 8, !dbg !9552, !tbaa !2522
  %82 = bitcast i32* %order56 to i8*, !dbg !9555
  call void @llvm.lifetime.start(i64 4, i8* %82) #2, !dbg !9555
  call void @llvm.dbg.declare(metadata i32* %order56, metadata !1208, metadata !2526), !dbg !9556
  store i32 0, i32* %order56, align 4, !dbg !9556, !tbaa !2731
  %83 = load %struct._Py_atomic_address*, %struct._Py_atomic_address** %atomic_val49, align 8, !dbg !9557, !tbaa !2522
  %84 = bitcast %struct._Py_atomic_address* %83 to i8*, !dbg !9557
  %85 = load i32, i32* %order56, align 4, !dbg !9558, !tbaa !2731
  call void @_Py_ANNOTATE_MEMORY_ORDER(i8* %84, i32 %85), !dbg !9559
  %86 = load i32, i32* %order56, align 4, !dbg !9560, !tbaa !2731
  br label %LeafBlock.8

LeafBlock.8:                                      ; preds = %do.body.47
  %.off.9 = add i32 %86, -2
  %SwitchLeaf10 = icmp ule i32 %.off.9, 2
  br i1 %SwitchLeaf10, label %sw.bb.57, label %NewDefault.7

sw.bb.57:                                         ; preds = %LeafBlock.8
  call void @_Py_atomic_thread_fence(i32 2), !dbg !9561
  br label %sw.epilog.59, !dbg !9566

NewDefault.7:                                     ; preds = %LeafBlock.8
  br label %sw.default.58

sw.default.58:                                    ; preds = %NewDefault.7
  br label %sw.epilog.59, !dbg !9567

sw.epilog.59:                                     ; preds = %sw.default.58, %sw.bb.57
  %87 = load i8**, i8*** %volatile_data53, align 8, !dbg !9569, !tbaa !2522
  %88 = load volatile i8*, i8** %87, align 8, !dbg !9572, !tbaa !2522
  store i8* %88, i8** %result51, align 8, !dbg !9573, !tbaa !2522
  %89 = load i32, i32* %order56, align 4, !dbg !9574, !tbaa !2731
  br label %NodeBlock.17

NodeBlock.17:                                     ; preds = %sw.epilog.59
  %Pivot.18 = icmp slt i32 %89, 3
  br i1 %Pivot.18, label %LeafBlock.12, label %LeafBlock.14

LeafBlock.14:                                     ; preds = %NodeBlock.17
  %.off.15 = add i32 %89, -3
  %SwitchLeaf16 = icmp ule i32 %.off.15, 1
  br i1 %SwitchLeaf16, label %sw.bb.60, label %NewDefault.11

LeafBlock.12:                                     ; preds = %NodeBlock.17
  %SwitchLeaf13 = icmp eq i32 %89, 1
  br i1 %SwitchLeaf13, label %sw.bb.60, label %NewDefault.11

sw.bb.60:                                         ; preds = %LeafBlock.14, %LeafBlock.12
  call void @_Py_atomic_signal_fence(i32 1), !dbg !9575
  br label %sw.epilog.62, !dbg !9580

NewDefault.11:                                    ; preds = %LeafBlock.14, %LeafBlock.12
  br label %sw.default.61

sw.default.61:                                    ; preds = %NewDefault.11
  br label %sw.epilog.62, !dbg !9581

sw.epilog.62:                                     ; preds = %sw.default.61, %sw.bb.60
  %90 = load i8*, i8** %result51, align 8, !dbg !9583, !tbaa !2522
  store i8* %90, i8** %tmp63, !dbg !9586, !tbaa !2522
  %91 = bitcast i32* %order56 to i8*, !dbg !9587
  call void @llvm.lifetime.end(i64 4, i8* %91) #2, !dbg !9587
  %92 = bitcast i8*** %volatile_data53 to i8*, !dbg !9587
  call void @llvm.lifetime.end(i64 8, i8* %92) #2, !dbg !9587
  %93 = bitcast i8** %result51 to i8*, !dbg !9587
  call void @llvm.lifetime.end(i64 8, i8* %93) #2, !dbg !9587
  %94 = bitcast %struct._Py_atomic_address** %atomic_val49 to i8*, !dbg !9587
  call void @llvm.lifetime.end(i64 8, i8* %94) #2, !dbg !9587
  %95 = load i8*, i8** %tmp63, !dbg !9588, !tbaa !2522
  %96 = bitcast i8* %95 to %struct._ts*, !dbg !9589
  %recursion_depth64 = getelementptr inbounds %struct._ts, %struct._ts* %96, i32 0, i32 4, !dbg !9590
  %97 = load i32, i32* %recursion_depth64, align 4, !dbg !9591, !tbaa !9508
  %dec65 = add i32 %97, -1, !dbg !9591
  store i32 %dec65, i32* %recursion_depth64, align 4, !dbg !9591, !tbaa !9508
  %98 = load i32, i32* @_Py_CheckRecursionLimit, align 4, !dbg !9592, !tbaa !2611
  %cmp66 = icmp sgt i32 %98, 100, !dbg !9593
  br i1 %cmp66, label %cond.true, label %cond.false, !dbg !9594

cond.true:                                        ; preds = %sw.epilog.62
  %99 = load i32, i32* @_Py_CheckRecursionLimit, align 4, !dbg !9595, !tbaa !2611
  %sub = sub i32 %99, 50, !dbg !9597
  br label %cond.end, !dbg !9594

cond.false:                                       ; preds = %sw.epilog.62
  %100 = load i32, i32* @_Py_CheckRecursionLimit, align 4, !dbg !9598, !tbaa !2611
  %shr = ashr i32 %100, 2, !dbg !9600
  %mul = mul i32 3, %shr, !dbg !9601
  br label %cond.end, !dbg !9594

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %mul, %cond.false ], !dbg !9594
  %cmp67 = icmp slt i32 %dec65, %cond, !dbg !9602
  br i1 %cmp67, label %if.then.68, label %if.end.85, !dbg !9605

if.then.68:                                       ; preds = %cond.end
  %101 = bitcast %struct._Py_atomic_address** %atomic_val70 to i8*, !dbg !9606
  call void @llvm.lifetime.start(i64 8, i8* %101) #2, !dbg !9606
  call void @llvm.dbg.declare(metadata %struct._Py_atomic_address** %atomic_val70, metadata !1209, metadata !2526), !dbg !9608
  store %struct._Py_atomic_address* @_PyThreadState_Current, %struct._Py_atomic_address** %atomic_val70, align 8, !dbg !9608, !tbaa !2522
  %102 = bitcast i8** %result72 to i8*, !dbg !9609
  call void @llvm.lifetime.start(i64 8, i8* %102) #2, !dbg !9609
  call void @llvm.dbg.declare(metadata i8** %result72, metadata !1211, metadata !2526), !dbg !9610
  %103 = bitcast i8*** %volatile_data74 to i8*, !dbg !9611
  call void @llvm.lifetime.start(i64 8, i8* %103) #2, !dbg !9611
  call void @llvm.dbg.declare(metadata i8*** %volatile_data74, metadata !1212, metadata !2526), !dbg !9612
  %104 = load %struct._Py_atomic_address*, %struct._Py_atomic_address** %atomic_val70, align 8, !dbg !9613, !tbaa !2522
  %_value75 = getelementptr inbounds %struct._Py_atomic_address, %struct._Py_atomic_address* %104, i32 0, i32 0, !dbg !9614
  store i8** %_value75, i8*** %volatile_data74, align 8, !dbg !9612, !tbaa !2522
  %105 = bitcast i32* %order77 to i8*, !dbg !9615
  call void @llvm.lifetime.start(i64 4, i8* %105) #2, !dbg !9615
  call void @llvm.dbg.declare(metadata i32* %order77, metadata !1213, metadata !2526), !dbg !9616
  store i32 0, i32* %order77, align 4, !dbg !9616, !tbaa !2731
  %106 = load %struct._Py_atomic_address*, %struct._Py_atomic_address** %atomic_val70, align 8, !dbg !9617, !tbaa !2522
  %107 = bitcast %struct._Py_atomic_address* %106 to i8*, !dbg !9617
  %108 = load i32, i32* %order77, align 4, !dbg !9618, !tbaa !2731
  call void @_Py_ANNOTATE_MEMORY_ORDER(i8* %107, i32 %108), !dbg !9619
  %109 = load i32, i32* %order77, align 4, !dbg !9620, !tbaa !2731
  br label %LeafBlock.20

LeafBlock.20:                                     ; preds = %if.then.68
  %.off.21 = add i32 %109, -2
  %SwitchLeaf22 = icmp ule i32 %.off.21, 2
  br i1 %SwitchLeaf22, label %sw.bb.78, label %NewDefault.19

sw.bb.78:                                         ; preds = %LeafBlock.20
  call void @_Py_atomic_thread_fence(i32 2), !dbg !9621
  br label %sw.epilog.80, !dbg !9626

NewDefault.19:                                    ; preds = %LeafBlock.20
  br label %sw.default.79

sw.default.79:                                    ; preds = %NewDefault.19
  br label %sw.epilog.80, !dbg !9627

sw.epilog.80:                                     ; preds = %sw.default.79, %sw.bb.78
  %110 = load i8**, i8*** %volatile_data74, align 8, !dbg !9629, !tbaa !2522
  %111 = load volatile i8*, i8** %110, align 8, !dbg !9632, !tbaa !2522
  store i8* %111, i8** %result72, align 8, !dbg !9633, !tbaa !2522
  %112 = load i32, i32* %order77, align 4, !dbg !9634, !tbaa !2731
  br label %NodeBlock.29

NodeBlock.29:                                     ; preds = %sw.epilog.80
  %Pivot.30 = icmp slt i32 %112, 3
  br i1 %Pivot.30, label %LeafBlock.24, label %LeafBlock.26

LeafBlock.26:                                     ; preds = %NodeBlock.29
  %.off.27 = add i32 %112, -3
  %SwitchLeaf28 = icmp ule i32 %.off.27, 1
  br i1 %SwitchLeaf28, label %sw.bb.81, label %NewDefault.23

LeafBlock.24:                                     ; preds = %NodeBlock.29
  %SwitchLeaf25 = icmp eq i32 %112, 1
  br i1 %SwitchLeaf25, label %sw.bb.81, label %NewDefault.23

sw.bb.81:                                         ; preds = %LeafBlock.26, %LeafBlock.24
  call void @_Py_atomic_signal_fence(i32 1), !dbg !9635
  br label %sw.epilog.83, !dbg !9640

NewDefault.23:                                    ; preds = %LeafBlock.26, %LeafBlock.24
  br label %sw.default.82

sw.default.82:                                    ; preds = %NewDefault.23
  br label %sw.epilog.83, !dbg !9641

sw.epilog.83:                                     ; preds = %sw.default.82, %sw.bb.81
  %113 = load i8*, i8** %result72, align 8, !dbg !9643, !tbaa !2522
  store i8* %113, i8** %tmp84, !dbg !9646, !tbaa !2522
  %114 = bitcast i32* %order77 to i8*, !dbg !9647
  call void @llvm.lifetime.end(i64 4, i8* %114) #2, !dbg !9647
  %115 = bitcast i8*** %volatile_data74 to i8*, !dbg !9647
  call void @llvm.lifetime.end(i64 8, i8* %115) #2, !dbg !9647
  %116 = bitcast i8** %result72 to i8*, !dbg !9647
  call void @llvm.lifetime.end(i64 8, i8* %116) #2, !dbg !9647
  %117 = bitcast %struct._Py_atomic_address** %atomic_val70 to i8*, !dbg !9647
  call void @llvm.lifetime.end(i64 8, i8* %117) #2, !dbg !9647
  %118 = load i8*, i8** %tmp84, !dbg !9648, !tbaa !2522
  %119 = bitcast i8* %118 to %struct._ts*, !dbg !9649
  %overflowed = getelementptr inbounds %struct._ts, %struct._ts* %119, i32 0, i32 5, !dbg !9650
  store i8 0, i8* %overflowed, align 1, !dbg !9651, !tbaa !9652
  br label %if.end.85, !dbg !9653

if.end.85:                                        ; preds = %sw.epilog.83, %cond.end
  br label %do.cond.86, !dbg !9654

do.cond.86:                                       ; preds = %if.end.85
  br label %do.end.87, !dbg !9657

do.end.87:                                        ; preds = %do.cond.86
  br label %do.body.88, !dbg !9659

do.body.88:                                       ; preds = %do.end.87
  %120 = bitcast %struct._object** %_py_decref_tmp90 to i8*, !dbg !9660
  call void @llvm.lifetime.start(i64 8, i8* %120) #2, !dbg !9660
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp90, metadata !1214, metadata !2526), !dbg !9662
  %121 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !9663, !tbaa !2522
  store %struct._object* %121, %struct._object** %_py_decref_tmp90, align 8, !dbg !9662, !tbaa !2522
  %122 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8, !dbg !9664, !tbaa !2522
  %ob_refcnt91 = getelementptr inbounds %struct._object, %struct._object* %122, i32 0, i32 0, !dbg !9666
  %123 = load i64, i64* %ob_refcnt91, align 8, !dbg !9667, !tbaa !2551
  %dec92 = add i64 %123, -1, !dbg !9667
  store i64 %dec92, i64* %ob_refcnt91, align 8, !dbg !9667, !tbaa !2551
  %cmp93 = icmp ne i64 %dec92, 0, !dbg !9668
  br i1 %cmp93, label %if.then.94, label %if.else.95, !dbg !9669

if.then.94:                                       ; preds = %do.body.88
  br label %if.end.98, !dbg !9670

if.else.95:                                       ; preds = %do.body.88
  %124 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8, !dbg !9672, !tbaa !2522
  %ob_type96 = getelementptr inbounds %struct._object, %struct._object* %124, i32 0, i32 1, !dbg !9674
  %125 = load %struct._typeobject*, %struct._typeobject** %ob_type96, align 8, !dbg !9674, !tbaa !2588
  %tp_dealloc97 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %125, i32 0, i32 4, !dbg !9675
  %126 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc97, align 8, !dbg !9675, !tbaa !2590
  %127 = load %struct._object*, %struct._object** %_py_decref_tmp90, align 8, !dbg !9676, !tbaa !2522
  call void %126(%struct._object* %127), !dbg !9677
  br label %if.end.98

if.end.98:                                        ; preds = %if.else.95, %if.then.94
  %128 = bitcast %struct._object** %_py_decref_tmp90 to i8*, !dbg !9678
  call void @llvm.lifetime.end(i64 8, i8* %128) #2, !dbg !9678
  br label %do.cond.99, !dbg !9680

do.cond.99:                                       ; preds = %if.end.98
  br label %do.end.100, !dbg !9681

do.end.100:                                       ; preds = %do.cond.99
  %129 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !9683, !tbaa !2522
  store %struct._object* %129, %struct._object** %retval, !dbg !9684
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9684

if.end.101:                                       ; preds = %do.end
  %130 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !9685, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %130, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.92, i32 0, i32 0)), !dbg !9686
  store %struct._object* null, %struct._object** %retval, !dbg !9687
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9687

cleanup:                                          ; preds = %if.end.101, %do.end.100, %do.end.44, %if.then.15, %if.then.8, %if.then.1, %if.then
  %131 = bitcast i32* %res to i8*, !dbg !9688
  call void @llvm.lifetime.end(i64 4, i8* %131) #2, !dbg !9688
  %132 = bitcast %struct._object** %as_parameter to i8*, !dbg !9688
  call void @llvm.lifetime.end(i64 8, i8* %132) #2, !dbg !9688
  %133 = bitcast %struct.fielddesc** %fd to i8*, !dbg !9688
  call void @llvm.lifetime.end(i64 8, i8* %133) #2, !dbg !9688
  %134 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !9688
  call void @llvm.lifetime.end(i64 8, i8* %134) #2, !dbg !9688
  %135 = bitcast i8** %fmt to i8*, !dbg !9688
  call void @llvm.lifetime.end(i64 8, i8* %135) #2, !dbg !9688
  %136 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !9688
  call void @llvm.lifetime.end(i64 8, i8* %136) #2, !dbg !9688
  %137 = load %struct._object*, %struct._object** %retval, !dbg !9688
  ret %struct._object* %137, !dbg !9688
}

declare void @PyErr_Clear() #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @_Py_ANNOTATE_MEMORY_ORDER(i8* %address, i32 %order) #6 {
entry:
  %address.addr = alloca i8*, align 8
  %order.addr = alloca i32, align 4
  store i8* %address, i8** %address.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %address.addr, metadata !1223, metadata !2526), !dbg !9689
  store i32 %order, i32* %order.addr, align 4, !tbaa !2731
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !1224, metadata !2526), !dbg !9690
  %0 = load i8*, i8** %address.addr, align 8, !dbg !9691, !tbaa !2522
  %1 = load i32, i32* %order.addr, align 4, !dbg !9692, !tbaa !2731
  br label %NodeBlock

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %1, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %.off = add i32 %1, -2
  %SwitchLeaf2 = icmp ule i32 %.off, 2
  br i1 %SwitchLeaf2, label %sw.bb, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp ule i32 %1, 1
  br i1 %SwitchLeaf, label %sw.bb.1, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock.1
  br label %sw.epilog, !dbg !9693

sw.bb.1:                                          ; preds = %LeafBlock
  br label %sw.epilog, !dbg !9695

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %sw.epilog

sw.epilog:                                        ; preds = %NewDefault, %sw.bb.1, %sw.bb
  %2 = load i32, i32* %order.addr, align 4, !dbg !9696, !tbaa !2731
  br label %NodeBlock.13

NodeBlock.13:                                     ; preds = %sw.epilog
  %Pivot.14 = icmp slt i32 %2, 2
  br i1 %Pivot.14, label %NodeBlock.6, label %NodeBlock.11

NodeBlock.11:                                     ; preds = %NodeBlock.13
  %Pivot.12 = icmp slt i32 %2, 3
  br i1 %Pivot.12, label %sw.bb.3, label %LeafBlock.8

LeafBlock.8:                                      ; preds = %NodeBlock.11
  %.off.9 = add i32 %2, -3
  %SwitchLeaf10 = icmp ule i32 %.off.9, 1
  br i1 %SwitchLeaf10, label %sw.bb.2, label %NewDefault.3

NodeBlock.6:                                      ; preds = %NodeBlock.13
  %Pivot.7 = icmp slt i32 %2, 1
  br i1 %Pivot.7, label %LeafBlock.4, label %sw.bb.2

LeafBlock.4:                                      ; preds = %NodeBlock.6
  %SwitchLeaf5 = icmp eq i32 %2, 0
  br i1 %SwitchLeaf5, label %sw.bb.3, label %NewDefault.3

sw.bb.2:                                          ; preds = %LeafBlock.8, %NodeBlock.6
  br label %sw.epilog.4, !dbg !9697

sw.bb.3:                                          ; preds = %NodeBlock.11, %LeafBlock.4
  br label %sw.epilog.4, !dbg !9699

NewDefault.3:                                     ; preds = %LeafBlock.8, %LeafBlock.4
  br label %sw.epilog.4

sw.epilog.4:                                      ; preds = %NewDefault.3, %sw.bb.3, %sw.bb.2
  ret void, !dbg !9700
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_Py_atomic_thread_fence(i32 %order) #6 {
entry:
  %order.addr = alloca i32, align 4
  store i32 %order, i32* %order.addr, align 4, !tbaa !2731
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !1229, metadata !2526), !dbg !9701
  %0 = load i32, i32* %order.addr, align 4, !dbg !9702, !tbaa !2731
  %cmp = icmp ne i32 %0, 0, !dbg !9704
  br i1 %cmp, label %if.then, label %if.end, !dbg !9705

if.then:                                          ; preds = %entry
  call void asm sideeffect "mfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !9706, !srcloc !9707
  br label %if.end, !dbg !9706

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9708
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_Py_atomic_signal_fence(i32 %order) #6 {
entry:
  %order.addr = alloca i32, align 4
  store i32 %order, i32* %order.addr, align 4, !tbaa !2731
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !1232, metadata !2526), !dbg !9709
  %0 = load i32, i32* %order.addr, align 4, !dbg !9710, !tbaa !2731
  %cmp = icmp ne i32 %0, 0, !dbg !9712
  br i1 %cmp, label %if.then, label %if.end, !dbg !9713

if.then:                                          ; preds = %entry
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #2, !dbg !9714, !srcloc !9715
  br label %if.end, !dbg !9714

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9716
}

declare i32 @_Py_CheckRecursiveCall(i8*) #3

declare i8* @PyUnicode_AsUTF8AndSize(%struct._object*, i64*) #3

declare i8* @__rawmemchr(i8*, i32) #3

; Function Attrs: nounwind
declare i8* @strchr(i8*, i32) #5

; Function Attrs: uwtable
define internal %struct.tagPyCArgObject* @PyCSimpleType_paramfunc(%struct.tagCDataObject* %self) #0 {
entry:
  %retval = alloca %struct.tagPyCArgObject*, align 8
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %fmt = alloca i8*, align 8
  %parg = alloca %struct.tagPyCArgObject*, align 8
  %fd = alloca %struct.fielddesc*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !1303, metadata !2526), !dbg !9717
  %0 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !9718
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9718
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !1304, metadata !2526), !dbg !9719
  %1 = bitcast i8** %fmt to i8*, !dbg !9720
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9720
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !1305, metadata !2526), !dbg !9721
  %2 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !9722
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !9722
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %parg, metadata !1306, metadata !2526), !dbg !9723
  %3 = bitcast %struct.fielddesc** %fd to i8*, !dbg !9724
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !9724
  call void @llvm.dbg.declare(metadata %struct.fielddesc** %fd, metadata !1307, metadata !2526), !dbg !9725
  %4 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9726, !tbaa !2522
  %5 = bitcast %struct.tagCDataObject* %4 to %struct._object*, !dbg !9727
  %call = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %5), !dbg !9728
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !9729, !tbaa !2522
  %6 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !9730, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %6, i32 0, i32 5, !dbg !9731
  %7 = load %struct._object*, %struct._object** %proto, align 8, !dbg !9731, !tbaa !2961
  %call1 = call i8* @PyUnicode_AsUTF8(%struct._object* %7), !dbg !9732
  store i8* %call1, i8** %fmt, align 8, !dbg !9733, !tbaa !2522
  %8 = load i8*, i8** %fmt, align 8, !dbg !9734, !tbaa !2522
  %call2 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* %8), !dbg !9735
  store %struct.fielddesc* %call2, %struct.fielddesc** %fd, align 8, !dbg !9736, !tbaa !2522
  %call3 = call %struct.tagPyCArgObject* @PyCArgObject_new(), !dbg !9737
  store %struct.tagPyCArgObject* %call3, %struct.tagPyCArgObject** %parg, align 8, !dbg !9738, !tbaa !2522
  %9 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !9739, !tbaa !2522
  %cmp = icmp eq %struct.tagPyCArgObject* %9, null, !dbg !9741
  br i1 %cmp, label %if.then, label %if.end, !dbg !9742

if.then:                                          ; preds = %entry
  store %struct.tagPyCArgObject* null, %struct.tagPyCArgObject** %retval, !dbg !9743
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9743

if.end:                                           ; preds = %entry
  %10 = load i8*, i8** %fmt, align 8, !dbg !9744, !tbaa !2522
  %arrayidx = getelementptr i8, i8* %10, i64 0, !dbg !9744
  %11 = load i8, i8* %arrayidx, align 1, !dbg !9744, !tbaa !2731
  %12 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !9745, !tbaa !2522
  %tag = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %12, i32 0, i32 2, !dbg !9746
  store i8 %11, i8* %tag, align 1, !dbg !9747, !tbaa !8604
  %13 = load %struct.fielddesc*, %struct.fielddesc** %fd, align 8, !dbg !9748, !tbaa !2522
  %pffi_type = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %13, i32 0, i32 3, !dbg !9749
  %14 = load %struct._ffi_type*, %struct._ffi_type** %pffi_type, align 8, !dbg !9749, !tbaa !3104
  %15 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !9750, !tbaa !2522
  %pffi_type4 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %15, i32 0, i32 1, !dbg !9751
  store %struct._ffi_type* %14, %struct._ffi_type** %pffi_type4, align 8, !dbg !9752, !tbaa !8614
  %16 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9753, !tbaa !2522
  %17 = bitcast %struct.tagCDataObject* %16 to %struct._object*, !dbg !9754
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !9755
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !9756, !tbaa !2551
  %inc = add i64 %18, 1, !dbg !9756
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !9756, !tbaa !2551
  %19 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9757, !tbaa !2522
  %20 = bitcast %struct.tagCDataObject* %19 to %struct._object*, !dbg !9758
  %21 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !9759, !tbaa !2522
  %obj = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %21, i32 0, i32 4, !dbg !9760
  store %struct._object* %20, %struct._object** %obj, align 8, !dbg !9761, !tbaa !7925
  %22 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !9762, !tbaa !2522
  %value = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %22, i32 0, i32 3, !dbg !9763
  %23 = bitcast %union.anon* %value to i8*, !dbg !9764
  %24 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9765, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %24, i32 0, i32 1, !dbg !9766
  %25 = load i8*, i8** %b_ptr, align 8, !dbg !9766, !tbaa !4817
  %26 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !9767, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %26, i32 0, i32 4, !dbg !9768
  %27 = load i64, i64* %b_size, align 8, !dbg !9768, !tbaa !4918
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %25, i64 %27, i32 1, i1 false), !dbg !9764
  %28 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !9769, !tbaa !2522
  store %struct.tagPyCArgObject* %28, %struct.tagPyCArgObject** %retval, !dbg !9770
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9770

cleanup:                                          ; preds = %if.end, %if.then
  %29 = bitcast %struct.fielddesc** %fd to i8*, !dbg !9771
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !9771
  %30 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !9771
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !9771
  %31 = bitcast i8** %fmt to i8*, !dbg !9771
  call void @llvm.lifetime.end(i64 8, i8* %31) #2, !dbg !9771
  %32 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !9771
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !9771
  %33 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %retval, !dbg !9771
  ret %struct.tagPyCArgObject* %33, !dbg !9771
}

declare %struct._object* @PyDescr_NewClassMethod(%struct._typeobject*, %struct.PyMethodDef*) #3

; Function Attrs: uwtable
define internal %struct._object* @CreateSwappedType(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds, %struct._object* %proto, %struct.fielddesc* %fmt) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %proto.addr = alloca %struct._object*, align 8
  %fmt.addr = alloca %struct.fielddesc*, align 8
  %result = alloca %struct._typeobject*, align 8
  %stgdict = alloca %struct.StgDictObject*, align 8
  %name = alloca %struct._object*, align 8
  %newname = alloca %struct._object*, align 8
  %swapped_args = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %v = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp40 = alloca %struct._object*, align 8
  %_py_decref_tmp53 = alloca %struct._object*, align 8
  %_py_decref_tmp67 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1417, metadata !2526), !dbg !9772
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1418, metadata !2526), !dbg !9773
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1419, metadata !2526), !dbg !9774
  store %struct._object* %proto, %struct._object** %proto.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %proto.addr, metadata !1420, metadata !2526), !dbg !9775
  store %struct.fielddesc* %fmt, %struct.fielddesc** %fmt.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.fielddesc** %fmt.addr, metadata !1421, metadata !2526), !dbg !9776
  %0 = bitcast %struct._typeobject** %result to i8*, !dbg !9777
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9777
  call void @llvm.dbg.declare(metadata %struct._typeobject** %result, metadata !1422, metadata !2526), !dbg !9778
  %1 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !9779
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9779
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict, metadata !1423, metadata !2526), !dbg !9780
  %2 = bitcast %struct._object** %name to i8*, !dbg !9781
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !9781
  call void @llvm.dbg.declare(metadata %struct._object** %name, metadata !1424, metadata !2526), !dbg !9782
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9783, !tbaa !2522
  %4 = bitcast %struct._object* %3 to %struct.PyTupleObject*, !dbg !9784
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %4, i32 0, i32 1, !dbg !9785
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !9786
  %5 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !9786, !tbaa !2522
  store %struct._object* %5, %struct._object** %name, align 8, !dbg !9782, !tbaa !2522
  %6 = bitcast %struct._object** %newname to i8*, !dbg !9787
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !9787
  call void @llvm.dbg.declare(metadata %struct._object** %newname, metadata !1425, metadata !2526), !dbg !9788
  %7 = bitcast %struct._object** %swapped_args to i8*, !dbg !9789
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !9789
  call void @llvm.dbg.declare(metadata %struct._object** %swapped_args, metadata !1426, metadata !2526), !dbg !9790
  %8 = bitcast i64* %i to i8*, !dbg !9791
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !9791
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1427, metadata !2526), !dbg !9792
  %9 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9793, !tbaa !2522
  %10 = bitcast %struct._object* %9 to %struct.PyVarObject*, !dbg !9794
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1, !dbg !9795
  %11 = load i64, i64* %ob_size, align 8, !dbg !9795, !tbaa !5784
  %call = call %struct._object* @PyTuple_New(i64 %11), !dbg !9796
  store %struct._object* %call, %struct._object** %swapped_args, align 8, !dbg !9797, !tbaa !2522
  %12 = load %struct._object*, %struct._object** %swapped_args, align 8, !dbg !9798, !tbaa !2522
  %tobool = icmp ne %struct._object* %12, null, !dbg !9798
  br i1 %tobool, label %if.end, label %if.then, !dbg !9800

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !9801
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9801

if.end:                                           ; preds = %entry
  %13 = load %struct._object*, %struct._object** @CreateSwappedType.suffix, align 8, !dbg !9802, !tbaa !2522
  %cmp = icmp eq %struct._object* %13, null, !dbg !9804
  br i1 %cmp, label %if.then.1, label %if.end.3, !dbg !9805

if.then.1:                                        ; preds = %if.end
  %call2 = call %struct._object* @PyUnicode_InternFromString(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.104, i32 0, i32 0)), !dbg !9806
  store %struct._object* %call2, %struct._object** @CreateSwappedType.suffix, align 8, !dbg !9807, !tbaa !2522
  br label %if.end.3, !dbg !9808

if.end.3:                                         ; preds = %if.then.1, %if.end
  %14 = load %struct._object*, %struct._object** %name, align 8, !dbg !9809, !tbaa !2522
  %15 = load %struct._object*, %struct._object** @CreateSwappedType.suffix, align 8, !dbg !9810, !tbaa !2522
  %call4 = call %struct._object* @PyUnicode_Concat(%struct._object* %14, %struct._object* %15), !dbg !9811
  store %struct._object* %call4, %struct._object** %newname, align 8, !dbg !9812, !tbaa !2522
  %16 = load %struct._object*, %struct._object** %newname, align 8, !dbg !9813, !tbaa !2522
  %cmp5 = icmp eq %struct._object* %16, null, !dbg !9815
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !9816

if.then.6:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %retval, !dbg !9817
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9817

if.end.7:                                         ; preds = %if.end.3
  %17 = load %struct._object*, %struct._object** %newname, align 8, !dbg !9819, !tbaa !2522
  %18 = load %struct._object*, %struct._object** %swapped_args, align 8, !dbg !9820, !tbaa !2522
  %19 = bitcast %struct._object* %18 to %struct.PyTupleObject*, !dbg !9821
  %ob_item8 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %19, i32 0, i32 1, !dbg !9822
  %arrayidx9 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item8, i32 0, i64 0, !dbg !9823
  store %struct._object* %17, %struct._object** %arrayidx9, align 8, !dbg !9824, !tbaa !2522
  store i64 1, i64* %i, align 8, !dbg !9825, !tbaa !2704
  br label %for.cond, !dbg !9826

for.cond:                                         ; preds = %for.inc, %if.end.7
  %20 = load i64, i64* %i, align 8, !dbg !9827, !tbaa !2704
  %21 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9830, !tbaa !2522
  %22 = bitcast %struct._object* %21 to %struct.PyVarObject*, !dbg !9831
  %ob_size10 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %22, i32 0, i32 1, !dbg !9832
  %23 = load i64, i64* %ob_size10, align 8, !dbg !9832, !tbaa !5784
  %cmp11 = icmp slt i64 %20, %23, !dbg !9833
  br i1 %cmp11, label %for.body, label %for.end, !dbg !9834

for.body:                                         ; preds = %for.cond
  %24 = bitcast %struct._object** %v to i8*, !dbg !9835
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !9835
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !1428, metadata !2526), !dbg !9836
  %25 = load i64, i64* %i, align 8, !dbg !9837, !tbaa !2704
  %26 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !9838, !tbaa !2522
  %27 = bitcast %struct._object* %26 to %struct.PyTupleObject*, !dbg !9839
  %ob_item12 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %27, i32 0, i32 1, !dbg !9840
  %arrayidx13 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item12, i32 0, i64 %25, !dbg !9841
  %28 = load %struct._object*, %struct._object** %arrayidx13, align 8, !dbg !9841, !tbaa !2522
  store %struct._object* %28, %struct._object** %v, align 8, !dbg !9836, !tbaa !2522
  %29 = load %struct._object*, %struct._object** %v, align 8, !dbg !9842, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !9843
  %30 = load i64, i64* %ob_refcnt, align 8, !dbg !9844, !tbaa !2551
  %inc = add i64 %30, 1, !dbg !9844
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !9844, !tbaa !2551
  %31 = load %struct._object*, %struct._object** %v, align 8, !dbg !9845, !tbaa !2522
  %32 = load i64, i64* %i, align 8, !dbg !9846, !tbaa !2704
  %33 = load %struct._object*, %struct._object** %swapped_args, align 8, !dbg !9847, !tbaa !2522
  %34 = bitcast %struct._object* %33 to %struct.PyTupleObject*, !dbg !9848
  %ob_item14 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %34, i32 0, i32 1, !dbg !9849
  %arrayidx15 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item14, i32 0, i64 %32, !dbg !9850
  store %struct._object* %31, %struct._object** %arrayidx15, align 8, !dbg !9851, !tbaa !2522
  %35 = bitcast %struct._object** %v to i8*, !dbg !9852
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !9852
  br label %for.inc, !dbg !9853

for.inc:                                          ; preds = %for.body
  %36 = load i64, i64* %i, align 8, !dbg !9854, !tbaa !2704
  %inc16 = add i64 %36, 1, !dbg !9854
  store i64 %inc16, i64* %i, align 8, !dbg !9854, !tbaa !2704
  br label %for.cond, !dbg !9855

for.end:                                          ; preds = %for.cond
  %37 = load %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyType_Type, i32 0, i32 37), align 8, !dbg !9856, !tbaa !3244
  %38 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !9857, !tbaa !2522
  %39 = load %struct._object*, %struct._object** %swapped_args, align 8, !dbg !9858, !tbaa !2522
  %40 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !9859, !tbaa !2522
  %call17 = call %struct._object* %37(%struct._typeobject* %38, %struct._object* %39, %struct._object* %40), !dbg !9860
  %41 = bitcast %struct._object* %call17 to %struct._typeobject*, !dbg !9861
  store %struct._typeobject* %41, %struct._typeobject** %result, align 8, !dbg !9862, !tbaa !2522
  br label %do.body, !dbg !9863

do.body:                                          ; preds = %for.end
  %42 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9864
  call void @llvm.lifetime.start(i64 8, i8* %42) #2, !dbg !9864
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1432, metadata !2526), !dbg !9866
  %43 = load %struct._object*, %struct._object** %swapped_args, align 8, !dbg !9867, !tbaa !2522
  store %struct._object* %43, %struct._object** %_py_decref_tmp, align 8, !dbg !9866, !tbaa !2522
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9868, !tbaa !2522
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0, !dbg !9870
  %45 = load i64, i64* %ob_refcnt18, align 8, !dbg !9871, !tbaa !2551
  %dec = add i64 %45, -1, !dbg !9871
  store i64 %dec, i64* %ob_refcnt18, align 8, !dbg !9871, !tbaa !2551
  %cmp19 = icmp ne i64 %dec, 0, !dbg !9872
  br i1 %cmp19, label %if.then.20, label %if.else, !dbg !9873

if.then.20:                                       ; preds = %do.body
  br label %if.end.21, !dbg !9874

if.else:                                          ; preds = %do.body
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9876, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1, !dbg !9878
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9878, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %47, i32 0, i32 4, !dbg !9879
  %48 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9879, !tbaa !2590
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9880, !tbaa !2522
  call void %48(%struct._object* %49), !dbg !9881
  br label %if.end.21

if.end.21:                                        ; preds = %if.else, %if.then.20
  %50 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9882
  call void @llvm.lifetime.end(i64 8, i8* %50) #2, !dbg !9882
  br label %do.cond, !dbg !9884

do.cond:                                          ; preds = %if.end.21
  br label %do.end, !dbg !9885

do.end:                                           ; preds = %do.cond
  %51 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !9887, !tbaa !2522
  %cmp22 = icmp eq %struct._typeobject* %51, null, !dbg !9889
  br i1 %cmp22, label %if.then.23, label %if.end.24, !dbg !9890

if.then.23:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !9891
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9891

if.end.24:                                        ; preds = %do.end
  %call25 = call %struct._object* @PyObject_CallObject(%struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyCStgDict_Type, i32 0, i32 0, i32 0), %struct._object* null), !dbg !9892
  %52 = bitcast %struct._object* %call25 to %struct.StgDictObject*, !dbg !9893
  store %struct.StgDictObject* %52, %struct.StgDictObject** %stgdict, align 8, !dbg !9894, !tbaa !2522
  %53 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !9895, !tbaa !2522
  %tobool26 = icmp ne %struct.StgDictObject* %53, null, !dbg !9895
  br i1 %tobool26, label %if.end.28, label %if.then.27, !dbg !9897

if.then.27:                                       ; preds = %if.end.24
  store %struct._object* null, %struct._object** %retval, !dbg !9898
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9898

if.end.28:                                        ; preds = %if.end.24
  %54 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !9899, !tbaa !2522
  %ffi_type_pointer = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %54, i32 0, i32 4, !dbg !9900
  %55 = load %struct.fielddesc*, %struct.fielddesc** %fmt.addr, align 8, !dbg !9901, !tbaa !2522
  %pffi_type = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %55, i32 0, i32 3, !dbg !9902
  %56 = load %struct._ffi_type*, %struct._ffi_type** %pffi_type, align 8, !dbg !9902, !tbaa !3104
  %57 = bitcast %struct._ffi_type* %ffi_type_pointer to i8*, !dbg !9903
  %58 = bitcast %struct._ffi_type* %56 to i8*, !dbg !9903
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 24, i32 8, i1 false), !dbg !9903, !tbaa.struct !3119
  %59 = load %struct.fielddesc*, %struct.fielddesc** %fmt.addr, align 8, !dbg !9904, !tbaa !2522
  %pffi_type29 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %59, i32 0, i32 3, !dbg !9905
  %60 = load %struct._ffi_type*, %struct._ffi_type** %pffi_type29, align 8, !dbg !9905, !tbaa !3104
  %alignment = getelementptr inbounds %struct._ffi_type, %struct._ffi_type* %60, i32 0, i32 1, !dbg !9906
  %61 = load i16, i16* %alignment, align 2, !dbg !9906, !tbaa !3107
  %conv = zext i16 %61 to i64, !dbg !9904
  %62 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !9907, !tbaa !2522
  %align = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %62, i32 0, i32 2, !dbg !9908
  store i64 %conv, i64* %align, align 8, !dbg !9909, !tbaa !3111
  %63 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !9910, !tbaa !2522
  %length = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %63, i32 0, i32 3, !dbg !9911
  store i64 0, i64* %length, align 8, !dbg !9912, !tbaa !3115
  %64 = load %struct.fielddesc*, %struct.fielddesc** %fmt.addr, align 8, !dbg !9913, !tbaa !2522
  %pffi_type30 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %64, i32 0, i32 3, !dbg !9914
  %65 = load %struct._ffi_type*, %struct._ffi_type** %pffi_type30, align 8, !dbg !9914, !tbaa !3104
  %size = getelementptr inbounds %struct._ffi_type, %struct._ffi_type* %65, i32 0, i32 0, !dbg !9915
  %66 = load i64, i64* %size, align 8, !dbg !9915, !tbaa !4031
  %67 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !9916, !tbaa !2522
  %size31 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %67, i32 0, i32 1, !dbg !9917
  store i64 %66, i64* %size31, align 8, !dbg !9918, !tbaa !3101
  %68 = load %struct.fielddesc*, %struct.fielddesc** %fmt.addr, align 8, !dbg !9919, !tbaa !2522
  %setfunc_swapped = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %68, i32 0, i32 4, !dbg !9920
  %69 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc_swapped, align 8, !dbg !9920, !tbaa !4340
  %70 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !9921, !tbaa !2522
  %setfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %70, i32 0, i32 6, !dbg !9922
  store %struct._object* (i8*, %struct._object*, i64)* %69, %struct._object* (i8*, %struct._object*, i64)** %setfunc, align 8, !dbg !9923, !tbaa !4041
  %71 = load %struct.fielddesc*, %struct.fielddesc** %fmt.addr, align 8, !dbg !9924, !tbaa !2522
  %getfunc_swapped = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %71, i32 0, i32 5, !dbg !9925
  %72 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc_swapped, align 8, !dbg !9925, !tbaa !4346
  %73 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !9926, !tbaa !2522
  %getfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %73, i32 0, i32 7, !dbg !9927
  store %struct._object* (i8*, i64)* %72, %struct._object* (i8*, i64)** %getfunc, align 8, !dbg !9928, !tbaa !3683
  %74 = load %struct._object*, %struct._object** %proto.addr, align 8, !dbg !9929, !tbaa !2522
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0, !dbg !9930
  %75 = load i64, i64* %ob_refcnt32, align 8, !dbg !9931, !tbaa !2551
  %inc33 = add i64 %75, 1, !dbg !9931
  store i64 %inc33, i64* %ob_refcnt32, align 8, !dbg !9931, !tbaa !2551
  %76 = load %struct._object*, %struct._object** %proto.addr, align 8, !dbg !9932, !tbaa !2522
  %77 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !9933, !tbaa !2522
  %proto34 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %77, i32 0, i32 5, !dbg !9934
  store %struct._object* %76, %struct._object** %proto34, align 8, !dbg !9935, !tbaa !2961
  %78 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !9936, !tbaa !2522
  %79 = bitcast %struct.StgDictObject* %78 to %struct._object*, !dbg !9937
  %80 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !9938, !tbaa !2522
  %tp_dict = getelementptr inbounds %struct._typeobject, %struct._typeobject* %80, i32 0, i32 31, !dbg !9939
  %81 = load %struct._object*, %struct._object** %tp_dict, align 8, !dbg !9939, !tbaa !3284
  %call35 = call i32 @PyDict_Update(%struct._object* %79, %struct._object* %81), !dbg !9940
  %cmp36 = icmp eq i32 -1, %call35, !dbg !9941
  br i1 %cmp36, label %if.then.38, label %if.end.65, !dbg !9942

if.then.38:                                       ; preds = %if.end.28
  br label %do.body.39, !dbg !9943

do.body.39:                                       ; preds = %if.then.38
  %82 = bitcast %struct._object** %_py_decref_tmp40 to i8*, !dbg !9944
  call void @llvm.lifetime.start(i64 8, i8* %82) #2, !dbg !9944
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp40, metadata !1434, metadata !2526), !dbg !9946
  %83 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !9947, !tbaa !2522
  %84 = bitcast %struct._typeobject* %83 to %struct._object*, !dbg !9948
  store %struct._object* %84, %struct._object** %_py_decref_tmp40, align 8, !dbg !9946, !tbaa !2522
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !9949, !tbaa !2522
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 0, !dbg !9951
  %86 = load i64, i64* %ob_refcnt41, align 8, !dbg !9952, !tbaa !2551
  %dec42 = add i64 %86, -1, !dbg !9952
  store i64 %dec42, i64* %ob_refcnt41, align 8, !dbg !9952, !tbaa !2551
  %cmp43 = icmp ne i64 %dec42, 0, !dbg !9953
  br i1 %cmp43, label %if.then.45, label %if.else.46, !dbg !9954

if.then.45:                                       ; preds = %do.body.39
  br label %if.end.49, !dbg !9955

if.else.46:                                       ; preds = %do.body.39
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !9957, !tbaa !2522
  %ob_type47 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 1, !dbg !9959
  %88 = load %struct._typeobject*, %struct._typeobject** %ob_type47, align 8, !dbg !9959, !tbaa !2588
  %tp_dealloc48 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %88, i32 0, i32 4, !dbg !9960
  %89 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc48, align 8, !dbg !9960, !tbaa !2590
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !9961, !tbaa !2522
  call void %89(%struct._object* %90), !dbg !9962
  br label %if.end.49

if.end.49:                                        ; preds = %if.else.46, %if.then.45
  %91 = bitcast %struct._object** %_py_decref_tmp40 to i8*, !dbg !9963
  call void @llvm.lifetime.end(i64 8, i8* %91) #2, !dbg !9963
  br label %do.cond.50, !dbg !9965

do.cond.50:                                       ; preds = %if.end.49
  br label %do.end.51, !dbg !9966

do.end.51:                                        ; preds = %do.cond.50
  br label %do.body.52, !dbg !9968

do.body.52:                                       ; preds = %do.end.51
  %92 = bitcast %struct._object** %_py_decref_tmp53 to i8*, !dbg !9969
  call void @llvm.lifetime.start(i64 8, i8* %92) #2, !dbg !9969
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp53, metadata !1438, metadata !2526), !dbg !9971
  %93 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !9972, !tbaa !2522
  %94 = bitcast %struct.StgDictObject* %93 to %struct._object*, !dbg !9973
  store %struct._object* %94, %struct._object** %_py_decref_tmp53, align 8, !dbg !9971, !tbaa !2522
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !9974, !tbaa !2522
  %ob_refcnt54 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 0, !dbg !9976
  %96 = load i64, i64* %ob_refcnt54, align 8, !dbg !9977, !tbaa !2551
  %dec55 = add i64 %96, -1, !dbg !9977
  store i64 %dec55, i64* %ob_refcnt54, align 8, !dbg !9977, !tbaa !2551
  %cmp56 = icmp ne i64 %dec55, 0, !dbg !9978
  br i1 %cmp56, label %if.then.58, label %if.else.59, !dbg !9979

if.then.58:                                       ; preds = %do.body.52
  br label %if.end.62, !dbg !9980

if.else.59:                                       ; preds = %do.body.52
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !9982, !tbaa !2522
  %ob_type60 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 1, !dbg !9984
  %98 = load %struct._typeobject*, %struct._typeobject** %ob_type60, align 8, !dbg !9984, !tbaa !2588
  %tp_dealloc61 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %98, i32 0, i32 4, !dbg !9985
  %99 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc61, align 8, !dbg !9985, !tbaa !2590
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp53, align 8, !dbg !9986, !tbaa !2522
  call void %99(%struct._object* %100), !dbg !9987
  br label %if.end.62

if.end.62:                                        ; preds = %if.else.59, %if.then.58
  %101 = bitcast %struct._object** %_py_decref_tmp53 to i8*, !dbg !9988
  call void @llvm.lifetime.end(i64 8, i8* %101) #2, !dbg !9988
  br label %do.cond.63, !dbg !9989

do.cond.63:                                       ; preds = %if.end.62
  br label %do.end.64, !dbg !9990

do.end.64:                                        ; preds = %do.cond.63
  store %struct._object* null, %struct._object** %retval, !dbg !9992
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9992

if.end.65:                                        ; preds = %if.end.28
  br label %do.body.66, !dbg !9993

do.body.66:                                       ; preds = %if.end.65
  %102 = bitcast %struct._object** %_py_decref_tmp67 to i8*, !dbg !9994
  call void @llvm.lifetime.start(i64 8, i8* %102) #2, !dbg !9994
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp67, metadata !1440, metadata !2526), !dbg !9996
  %103 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !9997, !tbaa !2522
  %tp_dict68 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %103, i32 0, i32 31, !dbg !9998
  %104 = load %struct._object*, %struct._object** %tp_dict68, align 8, !dbg !9998, !tbaa !3284
  store %struct._object* %104, %struct._object** %_py_decref_tmp67, align 8, !dbg !9996, !tbaa !2522
  %105 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8, !dbg !9999, !tbaa !2522
  %ob_refcnt69 = getelementptr inbounds %struct._object, %struct._object* %105, i32 0, i32 0, !dbg !10001
  %106 = load i64, i64* %ob_refcnt69, align 8, !dbg !10002, !tbaa !2551
  %dec70 = add i64 %106, -1, !dbg !10002
  store i64 %dec70, i64* %ob_refcnt69, align 8, !dbg !10002, !tbaa !2551
  %cmp71 = icmp ne i64 %dec70, 0, !dbg !10003
  br i1 %cmp71, label %if.then.73, label %if.else.74, !dbg !10004

if.then.73:                                       ; preds = %do.body.66
  br label %if.end.77, !dbg !10005

if.else.74:                                       ; preds = %do.body.66
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8, !dbg !10007, !tbaa !2522
  %ob_type75 = getelementptr inbounds %struct._object, %struct._object* %107, i32 0, i32 1, !dbg !10009
  %108 = load %struct._typeobject*, %struct._typeobject** %ob_type75, align 8, !dbg !10009, !tbaa !2588
  %tp_dealloc76 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %108, i32 0, i32 4, !dbg !10010
  %109 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc76, align 8, !dbg !10010, !tbaa !2590
  %110 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8, !dbg !10011, !tbaa !2522
  call void %109(%struct._object* %110), !dbg !10012
  br label %if.end.77

if.end.77:                                        ; preds = %if.else.74, %if.then.73
  %111 = bitcast %struct._object** %_py_decref_tmp67 to i8*, !dbg !10013
  call void @llvm.lifetime.end(i64 8, i8* %111) #2, !dbg !10013
  br label %do.cond.78, !dbg !10014

do.cond.78:                                       ; preds = %if.end.77
  br label %do.end.79, !dbg !10015

do.end.79:                                        ; preds = %do.cond.78
  %112 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !10017, !tbaa !2522
  %113 = bitcast %struct.StgDictObject* %112 to %struct._object*, !dbg !10018
  %114 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !10019, !tbaa !2522
  %tp_dict80 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %114, i32 0, i32 31, !dbg !10020
  store %struct._object* %113, %struct._object** %tp_dict80, align 8, !dbg !10021, !tbaa !3284
  %115 = load %struct._typeobject*, %struct._typeobject** %result, align 8, !dbg !10022, !tbaa !2522
  %116 = bitcast %struct._typeobject* %115 to %struct._object*, !dbg !10023
  store %struct._object* %116, %struct._object** %retval, !dbg !10024
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10024

cleanup:                                          ; preds = %do.end.79, %do.end.64, %if.then.27, %if.then.23, %if.then.6, %if.then
  %117 = bitcast i64* %i to i8*, !dbg !10025
  call void @llvm.lifetime.end(i64 8, i8* %117) #2, !dbg !10025
  %118 = bitcast %struct._object** %swapped_args to i8*, !dbg !10025
  call void @llvm.lifetime.end(i64 8, i8* %118) #2, !dbg !10025
  %119 = bitcast %struct._object** %newname to i8*, !dbg !10025
  call void @llvm.lifetime.end(i64 8, i8* %119) #2, !dbg !10025
  %120 = bitcast %struct._object** %name to i8*, !dbg !10025
  call void @llvm.lifetime.end(i64 8, i8* %120) #2, !dbg !10025
  %121 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !10025
  call void @llvm.lifetime.end(i64 8, i8* %121) #2, !dbg !10025
  %122 = bitcast %struct._typeobject** %result to i8*, !dbg !10025
  call void @llvm.lifetime.end(i64 8, i8* %122) #2, !dbg !10025
  %123 = load %struct._object*, %struct._object** %retval, !dbg !10025
  ret %struct._object* %123, !dbg !10025
}

; Function Attrs: uwtable
define internal %struct._object* @c_char_p_from_param(%struct._object* %type, %struct._object* %value) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %as_parameter = alloca %struct._object*, align 8
  %res = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %parg = alloca %struct.tagPyCArgObject*, align 8
  %fd = alloca %struct.fielddesc*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %dt = alloca %struct.StgDictObject*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %a = alloca %struct.tagPyCArgObject*, align 8
  %dict61 = alloca %struct.StgDictObject*, align 8
  %_py_decref_tmp84 = alloca %struct._object*, align 8
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !1310, metadata !2526), !dbg !10026
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !1311, metadata !2526), !dbg !10027
  %0 = bitcast %struct._object** %as_parameter to i8*, !dbg !10028
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10028
  call void @llvm.dbg.declare(metadata %struct._object** %as_parameter, metadata !1312, metadata !2526), !dbg !10029
  %1 = bitcast i32* %res to i8*, !dbg !10030
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !10030
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1313, metadata !2526), !dbg !10031
  %2 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10032, !tbaa !2522
  %cmp = icmp eq %struct._object* %2, @_Py_NoneStruct, !dbg !10034
  br i1 %cmp, label %if.then, label %if.end, !dbg !10035

if.then:                                          ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10036, !tbaa !2551
  %inc = add i64 %3, 1, !dbg !10036
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10036, !tbaa !2551
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !10038
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !10038

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10039, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !10040
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10040, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 19, !dbg !10041
  %6 = load i64, i64* %tp_flags, align 8, !dbg !10041, !tbaa !2849
  %and = and i64 %6, 134217728, !dbg !10042
  %cmp1 = icmp ne i64 %and, 0, !dbg !10043
  br i1 %cmp1, label %if.then.2, label %if.end.18, !dbg !10044

if.then.2:                                        ; preds = %if.end
  %7 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !10045
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !10045
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %parg, metadata !1314, metadata !2526), !dbg !10046
  %8 = bitcast %struct.fielddesc** %fd to i8*, !dbg !10047
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !10047
  call void @llvm.dbg.declare(metadata %struct.fielddesc** %fd, metadata !1317, metadata !2526), !dbg !10048
  %call = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.102, i32 0, i32 0)), !dbg !10049
  store %struct.fielddesc* %call, %struct.fielddesc** %fd, align 8, !dbg !10048, !tbaa !2522
  %call3 = call %struct.tagPyCArgObject* @PyCArgObject_new(), !dbg !10050
  store %struct.tagPyCArgObject* %call3, %struct.tagPyCArgObject** %parg, align 8, !dbg !10051, !tbaa !2522
  %9 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10052, !tbaa !2522
  %cmp4 = icmp eq %struct.tagPyCArgObject* %9, null, !dbg !10054
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !10055

if.then.5:                                        ; preds = %if.then.2
  store %struct._object* null, %struct._object** %retval, !dbg !10056
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10056

if.end.6:                                         ; preds = %if.then.2
  %10 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10057, !tbaa !2522
  %pffi_type = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %10, i32 0, i32 1, !dbg !10058
  store %struct._ffi_type* @ffi_type_pointer, %struct._ffi_type** %pffi_type, align 8, !dbg !10059, !tbaa !8614
  %11 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10060, !tbaa !2522
  %tag = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %11, i32 0, i32 2, !dbg !10061
  store i8 122, i8* %tag, align 1, !dbg !10062, !tbaa !8604
  %12 = load %struct.fielddesc*, %struct.fielddesc** %fd, align 8, !dbg !10063, !tbaa !2522
  %setfunc = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %12, i32 0, i32 1, !dbg !10064
  %13 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc, align 8, !dbg !10064, !tbaa !4037
  %14 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10065, !tbaa !2522
  %value7 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %14, i32 0, i32 3, !dbg !10066
  %15 = bitcast %union.anon* %value7 to i8*, !dbg !10067
  %16 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10068, !tbaa !2522
  %call8 = call %struct._object* %13(i8* %15, %struct._object* %16, i64 0), !dbg !10063
  %17 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10069, !tbaa !2522
  %obj = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %17, i32 0, i32 4, !dbg !10070
  store %struct._object* %call8, %struct._object** %obj, align 8, !dbg !10071, !tbaa !7925
  %18 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10072, !tbaa !2522
  %obj9 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %18, i32 0, i32 4, !dbg !10073
  %19 = load %struct._object*, %struct._object** %obj9, align 8, !dbg !10073, !tbaa !7925
  %cmp10 = icmp eq %struct._object* %19, null, !dbg !10074
  br i1 %cmp10, label %if.then.11, label %if.end.16, !dbg !10075

if.then.11:                                       ; preds = %if.end.6
  br label %do.body, !dbg !10076

do.body:                                          ; preds = %if.then.11
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10077
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !10077
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1318, metadata !2526), !dbg !10079
  %21 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10080, !tbaa !2522
  %22 = bitcast %struct.tagPyCArgObject* %21 to %struct._object*, !dbg !10081
  store %struct._object* %22, %struct._object** %_py_decref_tmp, align 8, !dbg !10079, !tbaa !2522
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10082, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !10084
  %24 = load i64, i64* %ob_refcnt, align 8, !dbg !10085, !tbaa !2551
  %dec = add i64 %24, -1, !dbg !10085
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10085, !tbaa !2551
  %cmp12 = icmp ne i64 %dec, 0, !dbg !10086
  br i1 %cmp12, label %if.then.13, label %if.else, !dbg !10087

if.then.13:                                       ; preds = %do.body
  br label %if.end.15, !dbg !10088

if.else:                                          ; preds = %do.body
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10090, !tbaa !2522
  %ob_type14 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !10092
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type14, align 8, !dbg !10092, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !10093
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10093, !tbaa !2590
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10094, !tbaa !2522
  call void %27(%struct._object* %28), !dbg !10095
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.then.13
  %29 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10096
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !10096
  br label %do.cond, !dbg !10098

do.cond:                                          ; preds = %if.end.15
  br label %do.end, !dbg !10099

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !10101
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10101

if.end.16:                                        ; preds = %if.end.6
  %30 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10102, !tbaa !2522
  %31 = bitcast %struct.tagPyCArgObject* %30 to %struct._object*, !dbg !10103
  store %struct._object* %31, %struct._object** %retval, !dbg !10104
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10104

cleanup:                                          ; preds = %if.end.16, %do.end, %if.then.5
  %32 = bitcast %struct.fielddesc** %fd to i8*, !dbg !10105
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !10105
  %33 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !10105
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !10105
  br label %cleanup.96

if.end.18:                                        ; preds = %if.end
  %34 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10106, !tbaa !2522
  %35 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !10107, !tbaa !2522
  %call19 = call i32 @PyObject_IsInstance(%struct._object* %34, %struct._object* %35), !dbg !10108
  store i32 %call19, i32* %res, align 4, !dbg !10109, !tbaa !2611
  %36 = load i32, i32* %res, align 4, !dbg !10110, !tbaa !2611
  %cmp20 = icmp eq i32 %36, -1, !dbg !10112
  br i1 %cmp20, label %if.then.21, label %if.end.22, !dbg !10113

if.then.21:                                       ; preds = %if.end.18
  store %struct._object* null, %struct._object** %retval, !dbg !10114
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !10114

if.end.22:                                        ; preds = %if.end.18
  %37 = load i32, i32* %res, align 4, !dbg !10115, !tbaa !2611
  %tobool = icmp ne i32 %37, 0, !dbg !10115
  br i1 %tobool, label %if.then.23, label %if.end.26, !dbg !10117

if.then.23:                                       ; preds = %if.end.22
  %38 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10118, !tbaa !2522
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0, !dbg !10120
  %39 = load i64, i64* %ob_refcnt24, align 8, !dbg !10121, !tbaa !2551
  %inc25 = add i64 %39, 1, !dbg !10121
  store i64 %inc25, i64* %ob_refcnt24, align 8, !dbg !10121, !tbaa !2551
  %40 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10122, !tbaa !2522
  store %struct._object* %40, %struct._object** %retval, !dbg !10123
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !10123

if.end.26:                                        ; preds = %if.end.22
  %41 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10124, !tbaa !2522
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !10125
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8, !dbg !10125, !tbaa !2588
  %cmp28 = icmp eq %struct._typeobject* %42, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type to %struct._typeobject*), !dbg !10126
  br i1 %cmp28, label %if.then.39, label %lor.lhs.false, !dbg !10127

lor.lhs.false:                                    ; preds = %if.end.26
  %43 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10128, !tbaa !2522
  %ob_type29 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !10130
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type29, align 8, !dbg !10130, !tbaa !2588
  %call30 = call i32 @PyType_IsSubtype(%struct._typeobject* %44, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type to %struct._typeobject*)), !dbg !10131
  %tobool31 = icmp ne i32 %call30, 0, !dbg !10131
  br i1 %tobool31, label %if.then.39, label %lor.lhs.false.32, !dbg !10132

lor.lhs.false.32:                                 ; preds = %lor.lhs.false
  %45 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10133, !tbaa !2522
  %ob_type33 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !10135
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type33, align 8, !dbg !10135, !tbaa !2588
  %cmp34 = icmp eq %struct._typeobject* %46, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointer_Type to %struct._typeobject*), !dbg !10136
  br i1 %cmp34, label %if.then.39, label %lor.lhs.false.35, !dbg !10137

lor.lhs.false.35:                                 ; preds = %lor.lhs.false.32
  %47 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10138, !tbaa !2522
  %ob_type36 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1, !dbg !10140
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type36, align 8, !dbg !10140, !tbaa !2588
  %call37 = call i32 @PyType_IsSubtype(%struct._typeobject* %48, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointer_Type to %struct._typeobject*)), !dbg !10141
  %tobool38 = icmp ne i32 %call37, 0, !dbg !10141
  br i1 %tobool38, label %if.then.39, label %if.end.57, !dbg !10142

if.then.39:                                       ; preds = %lor.lhs.false.35, %lor.lhs.false.32, %lor.lhs.false, %if.end.26
  %49 = bitcast %struct.StgDictObject** %dt to i8*, !dbg !10143
  call void @llvm.lifetime.start(i64 8, i8* %49) #2, !dbg !10143
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dt, metadata !1322, metadata !2526), !dbg !10144
  %50 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10145, !tbaa !2522
  %call40 = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %50), !dbg !10146
  store %struct.StgDictObject* %call40, %struct.StgDictObject** %dt, align 8, !dbg !10144, !tbaa !2522
  %51 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !10147
  call void @llvm.lifetime.start(i64 8, i8* %51) #2, !dbg !10147
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !1325, metadata !2526), !dbg !10148
  %52 = load %struct.StgDictObject*, %struct.StgDictObject** %dt, align 8, !dbg !10149, !tbaa !2522
  %tobool41 = icmp ne %struct.StgDictObject* %52, null, !dbg !10149
  br i1 %tobool41, label %land.lhs.true, label %cond.false, !dbg !10150

land.lhs.true:                                    ; preds = %if.then.39
  %53 = load %struct.StgDictObject*, %struct.StgDictObject** %dt, align 8, !dbg !10151, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %53, i32 0, i32 5, !dbg !10153
  %54 = load %struct._object*, %struct._object** %proto, align 8, !dbg !10153, !tbaa !2961
  %tobool42 = icmp ne %struct._object* %54, null, !dbg !10154
  br i1 %tobool42, label %cond.true, label %cond.false, !dbg !10149

cond.true:                                        ; preds = %land.lhs.true
  %55 = load %struct.StgDictObject*, %struct.StgDictObject** %dt, align 8, !dbg !10155, !tbaa !2522
  %proto43 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %55, i32 0, i32 5, !dbg !10157
  %56 = load %struct._object*, %struct._object** %proto43, align 8, !dbg !10157, !tbaa !2961
  %call44 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %56), !dbg !10158
  br label %cond.end, !dbg !10149

cond.false:                                       ; preds = %land.lhs.true, %if.then.39
  br label %cond.end, !dbg !10159

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.StgDictObject* [ %call44, %cond.true ], [ null, %cond.false ], !dbg !10149
  store %struct.StgDictObject* %cond, %struct.StgDictObject** %dict, align 8, !dbg !10162, !tbaa !2522
  %57 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !10165, !tbaa !2522
  %tobool45 = icmp ne %struct.StgDictObject* %57, null, !dbg !10165
  br i1 %tobool45, label %land.lhs.true.46, label %if.end.54, !dbg !10167

land.lhs.true.46:                                 ; preds = %cond.end
  %58 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !10168, !tbaa !2522
  %setfunc47 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %58, i32 0, i32 6, !dbg !10170
  %59 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc47, align 8, !dbg !10170, !tbaa !4041
  %call48 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i32 0, i32 0)), !dbg !10171
  %setfunc49 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %call48, i32 0, i32 1, !dbg !10172
  %60 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc49, align 8, !dbg !10172, !tbaa !4037
  %cmp50 = icmp eq %struct._object* (i8*, %struct._object*, i64)* %59, %60, !dbg !10173
  br i1 %cmp50, label %if.then.51, label %if.end.54, !dbg !10174

if.then.51:                                       ; preds = %land.lhs.true.46
  %61 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10175, !tbaa !2522
  %ob_refcnt52 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 0, !dbg !10177
  %62 = load i64, i64* %ob_refcnt52, align 8, !dbg !10178, !tbaa !2551
  %inc53 = add i64 %62, 1, !dbg !10178
  store i64 %inc53, i64* %ob_refcnt52, align 8, !dbg !10178, !tbaa !2551
  %63 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10179, !tbaa !2522
  store %struct._object* %63, %struct._object** %retval, !dbg !10180
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.55, !dbg !10180

if.end.54:                                        ; preds = %land.lhs.true.46, %cond.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !10181
  br label %cleanup.55, !dbg !10181

cleanup.55:                                       ; preds = %if.end.54, %if.then.51
  %64 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !10182
  call void @llvm.lifetime.end(i64 8, i8* %64) #2, !dbg !10182
  %65 = bitcast %struct.StgDictObject** %dt to i8*, !dbg !10182
  call void @llvm.lifetime.end(i64 8, i8* %65) #2, !dbg !10182
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup.55
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.57, !dbg !10183

if.end.57:                                        ; preds = %cleanup.cont, %lor.lhs.false.35
  %66 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10184, !tbaa !2522
  %ob_type58 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 1, !dbg !10185
  %67 = load %struct._typeobject*, %struct._typeobject** %ob_type58, align 8, !dbg !10185, !tbaa !2588
  %cmp59 = icmp eq %struct._typeobject* %67, @PyCArg_Type, !dbg !10186
  br i1 %cmp59, label %if.then.60, label %if.end.78, !dbg !10187

if.then.60:                                       ; preds = %if.end.57
  %68 = bitcast %struct.tagPyCArgObject** %a to i8*, !dbg !10188
  call void @llvm.lifetime.start(i64 8, i8* %68) #2, !dbg !10188
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %a, metadata !1326, metadata !2526), !dbg !10189
  %69 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10190, !tbaa !2522
  %70 = bitcast %struct._object* %69 to %struct.tagPyCArgObject*, !dbg !10191
  store %struct.tagPyCArgObject* %70, %struct.tagPyCArgObject** %a, align 8, !dbg !10189, !tbaa !2522
  %71 = bitcast %struct.StgDictObject** %dict61 to i8*, !dbg !10192
  call void @llvm.lifetime.start(i64 8, i8* %71) #2, !dbg !10192
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict61, metadata !1329, metadata !2526), !dbg !10193
  %72 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %a, align 8, !dbg !10194, !tbaa !2522
  %obj62 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %72, i32 0, i32 4, !dbg !10195
  %73 = load %struct._object*, %struct._object** %obj62, align 8, !dbg !10195, !tbaa !7925
  %call63 = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %73), !dbg !10196
  store %struct.StgDictObject* %call63, %struct.StgDictObject** %dict61, align 8, !dbg !10193, !tbaa !2522
  %74 = load %struct.StgDictObject*, %struct.StgDictObject** %dict61, align 8, !dbg !10197, !tbaa !2522
  %tobool64 = icmp ne %struct.StgDictObject* %74, null, !dbg !10197
  br i1 %tobool64, label %land.lhs.true.65, label %if.end.73, !dbg !10199

land.lhs.true.65:                                 ; preds = %if.then.60
  %75 = load %struct.StgDictObject*, %struct.StgDictObject** %dict61, align 8, !dbg !10200, !tbaa !2522
  %setfunc66 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %75, i32 0, i32 6, !dbg !10202
  %76 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc66, align 8, !dbg !10202, !tbaa !4041
  %call67 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i32 0, i32 0)), !dbg !10203
  %setfunc68 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %call67, i32 0, i32 1, !dbg !10204
  %77 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc68, align 8, !dbg !10204, !tbaa !4037
  %cmp69 = icmp eq %struct._object* (i8*, %struct._object*, i64)* %76, %77, !dbg !10205
  br i1 %cmp69, label %if.then.70, label %if.end.73, !dbg !10206

if.then.70:                                       ; preds = %land.lhs.true.65
  %78 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10207, !tbaa !2522
  %ob_refcnt71 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 0, !dbg !10209
  %79 = load i64, i64* %ob_refcnt71, align 8, !dbg !10210, !tbaa !2551
  %inc72 = add i64 %79, 1, !dbg !10210
  store i64 %inc72, i64* %ob_refcnt71, align 8, !dbg !10210, !tbaa !2551
  %80 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10211, !tbaa !2522
  store %struct._object* %80, %struct._object** %retval, !dbg !10212
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.74, !dbg !10212

if.end.73:                                        ; preds = %land.lhs.true.65, %if.then.60
  store i32 0, i32* %cleanup.dest.slot, !dbg !10213
  br label %cleanup.74, !dbg !10213

cleanup.74:                                       ; preds = %if.end.73, %if.then.70
  %81 = bitcast %struct.StgDictObject** %dict61 to i8*, !dbg !10214
  call void @llvm.lifetime.end(i64 8, i8* %81) #2, !dbg !10214
  %82 = bitcast %struct.tagPyCArgObject** %a to i8*, !dbg !10214
  call void @llvm.lifetime.end(i64 8, i8* %82) #2, !dbg !10214
  %cleanup.dest.76 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.74
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.76, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.77, label %NewDefault.1

cleanup.cont.77:                                  ; preds = %LeafBlock.2
  br label %if.end.78, !dbg !10216

if.end.78:                                        ; preds = %cleanup.cont.77, %if.end.57
  %83 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10217, !tbaa !2522
  %call79 = call %struct._object* @PyObject_GetAttrString(%struct._object* %83, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i32 0, i32 0)), !dbg !10218
  store %struct._object* %call79, %struct._object** %as_parameter, align 8, !dbg !10219, !tbaa !2522
  %84 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !10220, !tbaa !2522
  %tobool80 = icmp ne %struct._object* %84, null, !dbg !10220
  br i1 %tobool80, label %if.then.81, label %if.end.95, !dbg !10221

if.then.81:                                       ; preds = %if.end.78
  %85 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !10222, !tbaa !2522
  %86 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !10223, !tbaa !2522
  %call82 = call %struct._object* @c_char_p_from_param(%struct._object* %85, %struct._object* %86), !dbg !10224
  store %struct._object* %call82, %struct._object** %value.addr, align 8, !dbg !10225, !tbaa !2522
  br label %do.body.83, !dbg !10226

do.body.83:                                       ; preds = %if.then.81
  %87 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !10227
  call void @llvm.lifetime.start(i64 8, i8* %87) #2, !dbg !10227
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp84, metadata !1330, metadata !2526), !dbg !10229
  %88 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !10230, !tbaa !2522
  store %struct._object* %88, %struct._object** %_py_decref_tmp84, align 8, !dbg !10229, !tbaa !2522
  %89 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !10231, !tbaa !2522
  %ob_refcnt85 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 0, !dbg !10233
  %90 = load i64, i64* %ob_refcnt85, align 8, !dbg !10234, !tbaa !2551
  %dec86 = add i64 %90, -1, !dbg !10234
  store i64 %dec86, i64* %ob_refcnt85, align 8, !dbg !10234, !tbaa !2551
  %cmp87 = icmp ne i64 %dec86, 0, !dbg !10235
  br i1 %cmp87, label %if.then.88, label %if.else.89, !dbg !10236

if.then.88:                                       ; preds = %do.body.83
  br label %if.end.92, !dbg !10237

if.else.89:                                       ; preds = %do.body.83
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !10239, !tbaa !2522
  %ob_type90 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 1, !dbg !10241
  %92 = load %struct._typeobject*, %struct._typeobject** %ob_type90, align 8, !dbg !10241, !tbaa !2588
  %tp_dealloc91 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %92, i32 0, i32 4, !dbg !10242
  %93 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc91, align 8, !dbg !10242, !tbaa !2590
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !10243, !tbaa !2522
  call void %93(%struct._object* %94), !dbg !10244
  br label %if.end.92

if.end.92:                                        ; preds = %if.else.89, %if.then.88
  %95 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !10245
  call void @llvm.lifetime.end(i64 8, i8* %95) #2, !dbg !10245
  br label %do.cond.93, !dbg !10247

do.cond.93:                                       ; preds = %if.end.92
  br label %do.end.94, !dbg !10248

do.end.94:                                        ; preds = %do.cond.93
  %96 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10250, !tbaa !2522
  store %struct._object* %96, %struct._object** %retval, !dbg !10251
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !10251

if.end.95:                                        ; preds = %if.end.78
  %97 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !10252, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %97, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.92, i32 0, i32 0)), !dbg !10253
  store %struct._object* null, %struct._object** %retval, !dbg !10254
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !10254

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.96

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.96

cleanup.96:                                       ; preds = %NewDefault.1, %NewDefault, %if.end.95, %do.end.94, %if.then.23, %if.then.21, %cleanup, %if.then
  %98 = bitcast i32* %res to i8*, !dbg !10255
  call void @llvm.lifetime.end(i64 4, i8* %98) #2, !dbg !10255
  %99 = bitcast %struct._object** %as_parameter to i8*, !dbg !10255
  call void @llvm.lifetime.end(i64 8, i8* %99) #2, !dbg !10255
  %100 = load %struct._object*, %struct._object** %retval, !dbg !10255
  ret %struct._object* %100, !dbg !10255
}

; Function Attrs: uwtable
define internal %struct._object* @c_wchar_p_from_param(%struct._object* %type, %struct._object* %value) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %as_parameter = alloca %struct._object*, align 8
  %res = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %parg = alloca %struct.tagPyCArgObject*, align 8
  %fd = alloca %struct.fielddesc*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %dt = alloca %struct.StgDictObject*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %a = alloca %struct.tagPyCArgObject*, align 8
  %dict66 = alloca %struct.StgDictObject*, align 8
  %_py_decref_tmp89 = alloca %struct._object*, align 8
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !1336, metadata !2526), !dbg !10256
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !1337, metadata !2526), !dbg !10257
  %0 = bitcast %struct._object** %as_parameter to i8*, !dbg !10258
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10258
  call void @llvm.dbg.declare(metadata %struct._object** %as_parameter, metadata !1338, metadata !2526), !dbg !10259
  %1 = bitcast i32* %res to i8*, !dbg !10260
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !10260
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1339, metadata !2526), !dbg !10261
  %2 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10262, !tbaa !2522
  %cmp = icmp eq %struct._object* %2, @_Py_NoneStruct, !dbg !10264
  br i1 %cmp, label %if.then, label %if.end, !dbg !10265

if.then:                                          ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10266, !tbaa !2551
  %inc = add i64 %3, 1, !dbg !10266
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10266, !tbaa !2551
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !10268
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !10268

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10269, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1, !dbg !10270
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10270, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 19, !dbg !10271
  %6 = load i64, i64* %tp_flags, align 8, !dbg !10271, !tbaa !2849
  %and = and i64 %6, 268435456, !dbg !10272
  %cmp1 = icmp ne i64 %and, 0, !dbg !10273
  br i1 %cmp1, label %if.then.6, label %lor.lhs.false, !dbg !10274

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10275, !tbaa !2522
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !10277
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !10277, !tbaa !2588
  %tp_flags3 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 19, !dbg !10278
  %9 = load i64, i64* %tp_flags3, align 8, !dbg !10278, !tbaa !2849
  %and4 = and i64 %9, 134217728, !dbg !10279
  %cmp5 = icmp ne i64 %and4, 0, !dbg !10280
  br i1 %cmp5, label %if.then.6, label %if.end.22, !dbg !10281

if.then.6:                                        ; preds = %lor.lhs.false, %if.end
  %10 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !10282
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !10282
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %parg, metadata !1340, metadata !2526), !dbg !10283
  %11 = bitcast %struct.fielddesc** %fd to i8*, !dbg !10284
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !10284
  call void @llvm.dbg.declare(metadata %struct.fielddesc** %fd, metadata !1343, metadata !2526), !dbg !10285
  %call = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.103, i32 0, i32 0)), !dbg !10286
  store %struct.fielddesc* %call, %struct.fielddesc** %fd, align 8, !dbg !10285, !tbaa !2522
  %call7 = call %struct.tagPyCArgObject* @PyCArgObject_new(), !dbg !10287
  store %struct.tagPyCArgObject* %call7, %struct.tagPyCArgObject** %parg, align 8, !dbg !10288, !tbaa !2522
  %12 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10289, !tbaa !2522
  %cmp8 = icmp eq %struct.tagPyCArgObject* %12, null, !dbg !10291
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !10292

if.then.9:                                        ; preds = %if.then.6
  store %struct._object* null, %struct._object** %retval, !dbg !10293
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10293

if.end.10:                                        ; preds = %if.then.6
  %13 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10294, !tbaa !2522
  %pffi_type = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %13, i32 0, i32 1, !dbg !10295
  store %struct._ffi_type* @ffi_type_pointer, %struct._ffi_type** %pffi_type, align 8, !dbg !10296, !tbaa !8614
  %14 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10297, !tbaa !2522
  %tag = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %14, i32 0, i32 2, !dbg !10298
  store i8 90, i8* %tag, align 1, !dbg !10299, !tbaa !8604
  %15 = load %struct.fielddesc*, %struct.fielddesc** %fd, align 8, !dbg !10300, !tbaa !2522
  %setfunc = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %15, i32 0, i32 1, !dbg !10301
  %16 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc, align 8, !dbg !10301, !tbaa !4037
  %17 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10302, !tbaa !2522
  %value11 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %17, i32 0, i32 3, !dbg !10303
  %18 = bitcast %union.anon* %value11 to i8*, !dbg !10304
  %19 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10305, !tbaa !2522
  %call12 = call %struct._object* %16(i8* %18, %struct._object* %19, i64 0), !dbg !10300
  %20 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10306, !tbaa !2522
  %obj = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %20, i32 0, i32 4, !dbg !10307
  store %struct._object* %call12, %struct._object** %obj, align 8, !dbg !10308, !tbaa !7925
  %21 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10309, !tbaa !2522
  %obj13 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %21, i32 0, i32 4, !dbg !10310
  %22 = load %struct._object*, %struct._object** %obj13, align 8, !dbg !10310, !tbaa !7925
  %cmp14 = icmp eq %struct._object* %22, null, !dbg !10311
  br i1 %cmp14, label %if.then.15, label %if.end.20, !dbg !10312

if.then.15:                                       ; preds = %if.end.10
  br label %do.body, !dbg !10313

do.body:                                          ; preds = %if.then.15
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10314
  call void @llvm.lifetime.start(i64 8, i8* %23) #2, !dbg !10314
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1344, metadata !2526), !dbg !10316
  %24 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10317, !tbaa !2522
  %25 = bitcast %struct.tagPyCArgObject* %24 to %struct._object*, !dbg !10318
  store %struct._object* %25, %struct._object** %_py_decref_tmp, align 8, !dbg !10316, !tbaa !2522
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10319, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !10321
  %27 = load i64, i64* %ob_refcnt, align 8, !dbg !10322, !tbaa !2551
  %dec = add i64 %27, -1, !dbg !10322
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10322, !tbaa !2551
  %cmp16 = icmp ne i64 %dec, 0, !dbg !10323
  br i1 %cmp16, label %if.then.17, label %if.else, !dbg !10324

if.then.17:                                       ; preds = %do.body
  br label %if.end.19, !dbg !10325

if.else:                                          ; preds = %do.body
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10327, !tbaa !2522
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !10329
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !10329, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4, !dbg !10330
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10330, !tbaa !2590
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10331, !tbaa !2522
  call void %30(%struct._object* %31), !dbg !10332
  br label %if.end.19

if.end.19:                                        ; preds = %if.else, %if.then.17
  %32 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10333
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !10333
  br label %do.cond, !dbg !10335

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !10336

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !10338
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10338

if.end.20:                                        ; preds = %if.end.10
  %33 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10339, !tbaa !2522
  %34 = bitcast %struct.tagPyCArgObject* %33 to %struct._object*, !dbg !10340
  store %struct._object* %34, %struct._object** %retval, !dbg !10341
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10341

cleanup:                                          ; preds = %if.end.20, %do.end, %if.then.9
  %35 = bitcast %struct.fielddesc** %fd to i8*, !dbg !10342
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !10342
  %36 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !10342
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !10342
  br label %cleanup.101

if.end.22:                                        ; preds = %lor.lhs.false
  %37 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10343, !tbaa !2522
  %38 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !10344, !tbaa !2522
  %call23 = call i32 @PyObject_IsInstance(%struct._object* %37, %struct._object* %38), !dbg !10345
  store i32 %call23, i32* %res, align 4, !dbg !10346, !tbaa !2611
  %39 = load i32, i32* %res, align 4, !dbg !10347, !tbaa !2611
  %cmp24 = icmp eq i32 %39, -1, !dbg !10349
  br i1 %cmp24, label %if.then.25, label %if.end.26, !dbg !10350

if.then.25:                                       ; preds = %if.end.22
  store %struct._object* null, %struct._object** %retval, !dbg !10351
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !10351

if.end.26:                                        ; preds = %if.end.22
  %40 = load i32, i32* %res, align 4, !dbg !10352, !tbaa !2611
  %tobool = icmp ne i32 %40, 0, !dbg !10352
  br i1 %tobool, label %if.then.27, label %if.end.30, !dbg !10354

if.then.27:                                       ; preds = %if.end.26
  %41 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10355, !tbaa !2522
  %ob_refcnt28 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !10357
  %42 = load i64, i64* %ob_refcnt28, align 8, !dbg !10358, !tbaa !2551
  %inc29 = add i64 %42, 1, !dbg !10358
  store i64 %inc29, i64* %ob_refcnt28, align 8, !dbg !10358, !tbaa !2551
  %43 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10359, !tbaa !2522
  store %struct._object* %43, %struct._object** %retval, !dbg !10360
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !10360

if.end.30:                                        ; preds = %if.end.26
  %44 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10361, !tbaa !2522
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1, !dbg !10362
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8, !dbg !10362, !tbaa !2588
  %cmp32 = icmp eq %struct._typeobject* %45, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type to %struct._typeobject*), !dbg !10363
  br i1 %cmp32, label %if.then.44, label %lor.lhs.false.33, !dbg !10364

lor.lhs.false.33:                                 ; preds = %if.end.30
  %46 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10365, !tbaa !2522
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1, !dbg !10367
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8, !dbg !10367, !tbaa !2588
  %call35 = call i32 @PyType_IsSubtype(%struct._typeobject* %47, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type to %struct._typeobject*)), !dbg !10368
  %tobool36 = icmp ne i32 %call35, 0, !dbg !10368
  br i1 %tobool36, label %if.then.44, label %lor.lhs.false.37, !dbg !10369

lor.lhs.false.37:                                 ; preds = %lor.lhs.false.33
  %48 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10370, !tbaa !2522
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !10372
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8, !dbg !10372, !tbaa !2588
  %cmp39 = icmp eq %struct._typeobject* %49, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointer_Type to %struct._typeobject*), !dbg !10373
  br i1 %cmp39, label %if.then.44, label %lor.lhs.false.40, !dbg !10374

lor.lhs.false.40:                                 ; preds = %lor.lhs.false.37
  %50 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10375, !tbaa !2522
  %ob_type41 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 1, !dbg !10377
  %51 = load %struct._typeobject*, %struct._typeobject** %ob_type41, align 8, !dbg !10377, !tbaa !2588
  %call42 = call i32 @PyType_IsSubtype(%struct._typeobject* %51, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointer_Type to %struct._typeobject*)), !dbg !10378
  %tobool43 = icmp ne i32 %call42, 0, !dbg !10378
  br i1 %tobool43, label %if.then.44, label %if.end.62, !dbg !10379

if.then.44:                                       ; preds = %lor.lhs.false.40, %lor.lhs.false.37, %lor.lhs.false.33, %if.end.30
  %52 = bitcast %struct.StgDictObject** %dt to i8*, !dbg !10380
  call void @llvm.lifetime.start(i64 8, i8* %52) #2, !dbg !10380
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dt, metadata !1348, metadata !2526), !dbg !10381
  %53 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10382, !tbaa !2522
  %call45 = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %53), !dbg !10383
  store %struct.StgDictObject* %call45, %struct.StgDictObject** %dt, align 8, !dbg !10381, !tbaa !2522
  %54 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !10384
  call void @llvm.lifetime.start(i64 8, i8* %54) #2, !dbg !10384
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !1351, metadata !2526), !dbg !10385
  %55 = load %struct.StgDictObject*, %struct.StgDictObject** %dt, align 8, !dbg !10386, !tbaa !2522
  %tobool46 = icmp ne %struct.StgDictObject* %55, null, !dbg !10386
  br i1 %tobool46, label %land.lhs.true, label %cond.false, !dbg !10387

land.lhs.true:                                    ; preds = %if.then.44
  %56 = load %struct.StgDictObject*, %struct.StgDictObject** %dt, align 8, !dbg !10388, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %56, i32 0, i32 5, !dbg !10390
  %57 = load %struct._object*, %struct._object** %proto, align 8, !dbg !10390, !tbaa !2961
  %tobool47 = icmp ne %struct._object* %57, null, !dbg !10391
  br i1 %tobool47, label %cond.true, label %cond.false, !dbg !10386

cond.true:                                        ; preds = %land.lhs.true
  %58 = load %struct.StgDictObject*, %struct.StgDictObject** %dt, align 8, !dbg !10392, !tbaa !2522
  %proto48 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %58, i32 0, i32 5, !dbg !10394
  %59 = load %struct._object*, %struct._object** %proto48, align 8, !dbg !10394, !tbaa !2961
  %call49 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %59), !dbg !10395
  br label %cond.end, !dbg !10386

cond.false:                                       ; preds = %land.lhs.true, %if.then.44
  br label %cond.end, !dbg !10396

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.StgDictObject* [ %call49, %cond.true ], [ null, %cond.false ], !dbg !10386
  store %struct.StgDictObject* %cond, %struct.StgDictObject** %dict, align 8, !dbg !10399, !tbaa !2522
  %60 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !10402, !tbaa !2522
  %tobool50 = icmp ne %struct.StgDictObject* %60, null, !dbg !10402
  br i1 %tobool50, label %land.lhs.true.51, label %if.end.59, !dbg !10404

land.lhs.true.51:                                 ; preds = %cond.end
  %61 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !10405, !tbaa !2522
  %setfunc52 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %61, i32 0, i32 6, !dbg !10407
  %62 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc52, align 8, !dbg !10407, !tbaa !4041
  %call53 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0)), !dbg !10408
  %setfunc54 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %call53, i32 0, i32 1, !dbg !10409
  %63 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc54, align 8, !dbg !10409, !tbaa !4037
  %cmp55 = icmp eq %struct._object* (i8*, %struct._object*, i64)* %62, %63, !dbg !10410
  br i1 %cmp55, label %if.then.56, label %if.end.59, !dbg !10411

if.then.56:                                       ; preds = %land.lhs.true.51
  %64 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10412, !tbaa !2522
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %64, i32 0, i32 0, !dbg !10414
  %65 = load i64, i64* %ob_refcnt57, align 8, !dbg !10415, !tbaa !2551
  %inc58 = add i64 %65, 1, !dbg !10415
  store i64 %inc58, i64* %ob_refcnt57, align 8, !dbg !10415, !tbaa !2551
  %66 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10416, !tbaa !2522
  store %struct._object* %66, %struct._object** %retval, !dbg !10417
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.60, !dbg !10417

if.end.59:                                        ; preds = %land.lhs.true.51, %cond.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !10418
  br label %cleanup.60, !dbg !10418

cleanup.60:                                       ; preds = %if.end.59, %if.then.56
  %67 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !10419
  call void @llvm.lifetime.end(i64 8, i8* %67) #2, !dbg !10419
  %68 = bitcast %struct.StgDictObject** %dt to i8*, !dbg !10419
  call void @llvm.lifetime.end(i64 8, i8* %68) #2, !dbg !10419
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup.60
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.62, !dbg !10420

if.end.62:                                        ; preds = %cleanup.cont, %lor.lhs.false.40
  %69 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10421, !tbaa !2522
  %ob_type63 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 1, !dbg !10422
  %70 = load %struct._typeobject*, %struct._typeobject** %ob_type63, align 8, !dbg !10422, !tbaa !2588
  %cmp64 = icmp eq %struct._typeobject* %70, @PyCArg_Type, !dbg !10423
  br i1 %cmp64, label %if.then.65, label %if.end.83, !dbg !10424

if.then.65:                                       ; preds = %if.end.62
  %71 = bitcast %struct.tagPyCArgObject** %a to i8*, !dbg !10425
  call void @llvm.lifetime.start(i64 8, i8* %71) #2, !dbg !10425
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %a, metadata !1352, metadata !2526), !dbg !10426
  %72 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10427, !tbaa !2522
  %73 = bitcast %struct._object* %72 to %struct.tagPyCArgObject*, !dbg !10428
  store %struct.tagPyCArgObject* %73, %struct.tagPyCArgObject** %a, align 8, !dbg !10426, !tbaa !2522
  %74 = bitcast %struct.StgDictObject** %dict66 to i8*, !dbg !10429
  call void @llvm.lifetime.start(i64 8, i8* %74) #2, !dbg !10429
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict66, metadata !1355, metadata !2526), !dbg !10430
  %75 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %a, align 8, !dbg !10431, !tbaa !2522
  %obj67 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %75, i32 0, i32 4, !dbg !10432
  %76 = load %struct._object*, %struct._object** %obj67, align 8, !dbg !10432, !tbaa !7925
  %call68 = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %76), !dbg !10433
  store %struct.StgDictObject* %call68, %struct.StgDictObject** %dict66, align 8, !dbg !10430, !tbaa !2522
  %77 = load %struct.StgDictObject*, %struct.StgDictObject** %dict66, align 8, !dbg !10434, !tbaa !2522
  %tobool69 = icmp ne %struct.StgDictObject* %77, null, !dbg !10434
  br i1 %tobool69, label %land.lhs.true.70, label %if.end.78, !dbg !10436

land.lhs.true.70:                                 ; preds = %if.then.65
  %78 = load %struct.StgDictObject*, %struct.StgDictObject** %dict66, align 8, !dbg !10437, !tbaa !2522
  %setfunc71 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %78, i32 0, i32 6, !dbg !10439
  %79 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc71, align 8, !dbg !10439, !tbaa !4041
  %call72 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0)), !dbg !10440
  %setfunc73 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %call72, i32 0, i32 1, !dbg !10441
  %80 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc73, align 8, !dbg !10441, !tbaa !4037
  %cmp74 = icmp eq %struct._object* (i8*, %struct._object*, i64)* %79, %80, !dbg !10442
  br i1 %cmp74, label %if.then.75, label %if.end.78, !dbg !10443

if.then.75:                                       ; preds = %land.lhs.true.70
  %81 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10444, !tbaa !2522
  %ob_refcnt76 = getelementptr inbounds %struct._object, %struct._object* %81, i32 0, i32 0, !dbg !10446
  %82 = load i64, i64* %ob_refcnt76, align 8, !dbg !10447, !tbaa !2551
  %inc77 = add i64 %82, 1, !dbg !10447
  store i64 %inc77, i64* %ob_refcnt76, align 8, !dbg !10447, !tbaa !2551
  %83 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10448, !tbaa !2522
  store %struct._object* %83, %struct._object** %retval, !dbg !10449
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.79, !dbg !10449

if.end.78:                                        ; preds = %land.lhs.true.70, %if.then.65
  store i32 0, i32* %cleanup.dest.slot, !dbg !10450
  br label %cleanup.79, !dbg !10450

cleanup.79:                                       ; preds = %if.end.78, %if.then.75
  %84 = bitcast %struct.StgDictObject** %dict66 to i8*, !dbg !10451
  call void @llvm.lifetime.end(i64 8, i8* %84) #2, !dbg !10451
  %85 = bitcast %struct.tagPyCArgObject** %a to i8*, !dbg !10451
  call void @llvm.lifetime.end(i64 8, i8* %85) #2, !dbg !10451
  %cleanup.dest.81 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.79
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.81, 0
  br i1 %SwitchLeaf3, label %cleanup.cont.82, label %NewDefault.1

cleanup.cont.82:                                  ; preds = %LeafBlock.2
  br label %if.end.83, !dbg !10453

if.end.83:                                        ; preds = %cleanup.cont.82, %if.end.62
  %86 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10454, !tbaa !2522
  %call84 = call %struct._object* @PyObject_GetAttrString(%struct._object* %86, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i32 0, i32 0)), !dbg !10455
  store %struct._object* %call84, %struct._object** %as_parameter, align 8, !dbg !10456, !tbaa !2522
  %87 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !10457, !tbaa !2522
  %tobool85 = icmp ne %struct._object* %87, null, !dbg !10457
  br i1 %tobool85, label %if.then.86, label %if.end.100, !dbg !10458

if.then.86:                                       ; preds = %if.end.83
  %88 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !10459, !tbaa !2522
  %89 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !10460, !tbaa !2522
  %call87 = call %struct._object* @c_wchar_p_from_param(%struct._object* %88, %struct._object* %89), !dbg !10461
  store %struct._object* %call87, %struct._object** %value.addr, align 8, !dbg !10462, !tbaa !2522
  br label %do.body.88, !dbg !10463

do.body.88:                                       ; preds = %if.then.86
  %90 = bitcast %struct._object** %_py_decref_tmp89 to i8*, !dbg !10464
  call void @llvm.lifetime.start(i64 8, i8* %90) #2, !dbg !10464
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp89, metadata !1356, metadata !2526), !dbg !10466
  %91 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !10467, !tbaa !2522
  store %struct._object* %91, %struct._object** %_py_decref_tmp89, align 8, !dbg !10466, !tbaa !2522
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8, !dbg !10468, !tbaa !2522
  %ob_refcnt90 = getelementptr inbounds %struct._object, %struct._object* %92, i32 0, i32 0, !dbg !10470
  %93 = load i64, i64* %ob_refcnt90, align 8, !dbg !10471, !tbaa !2551
  %dec91 = add i64 %93, -1, !dbg !10471
  store i64 %dec91, i64* %ob_refcnt90, align 8, !dbg !10471, !tbaa !2551
  %cmp92 = icmp ne i64 %dec91, 0, !dbg !10472
  br i1 %cmp92, label %if.then.93, label %if.else.94, !dbg !10473

if.then.93:                                       ; preds = %do.body.88
  br label %if.end.97, !dbg !10474

if.else.94:                                       ; preds = %do.body.88
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8, !dbg !10476, !tbaa !2522
  %ob_type95 = getelementptr inbounds %struct._object, %struct._object* %94, i32 0, i32 1, !dbg !10478
  %95 = load %struct._typeobject*, %struct._typeobject** %ob_type95, align 8, !dbg !10478, !tbaa !2588
  %tp_dealloc96 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %95, i32 0, i32 4, !dbg !10479
  %96 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc96, align 8, !dbg !10479, !tbaa !2590
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp89, align 8, !dbg !10480, !tbaa !2522
  call void %96(%struct._object* %97), !dbg !10481
  br label %if.end.97

if.end.97:                                        ; preds = %if.else.94, %if.then.93
  %98 = bitcast %struct._object** %_py_decref_tmp89 to i8*, !dbg !10482
  call void @llvm.lifetime.end(i64 8, i8* %98) #2, !dbg !10482
  br label %do.cond.98, !dbg !10484

do.cond.98:                                       ; preds = %if.end.97
  br label %do.end.99, !dbg !10485

do.end.99:                                        ; preds = %do.cond.98
  %99 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10487, !tbaa !2522
  store %struct._object* %99, %struct._object** %retval, !dbg !10488
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !10488

if.end.100:                                       ; preds = %if.end.83
  %100 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !10489, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %100, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.92, i32 0, i32 0)), !dbg !10490
  store %struct._object* null, %struct._object** %retval, !dbg !10491
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !10491

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.101

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.101

cleanup.101:                                      ; preds = %NewDefault.1, %NewDefault, %if.end.100, %do.end.99, %if.then.27, %if.then.25, %cleanup, %if.then
  %101 = bitcast i32* %res to i8*, !dbg !10492
  call void @llvm.lifetime.end(i64 4, i8* %101) #2, !dbg !10492
  %102 = bitcast %struct._object** %as_parameter to i8*, !dbg !10492
  call void @llvm.lifetime.end(i64 8, i8* %102) #2, !dbg !10492
  %103 = load %struct._object*, %struct._object** %retval, !dbg !10492
  ret %struct._object* %103, !dbg !10492
}

; Function Attrs: uwtable
define internal %struct._object* @c_void_p_from_param(%struct._object* %type, %struct._object* %value) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %stgd = alloca %struct.StgDictObject*, align 8
  %as_parameter = alloca %struct._object*, align 8
  %res = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %parg = alloca %struct.tagPyCArgObject*, align 8
  %fd = alloca %struct.fielddesc*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %parg24 = alloca %struct.tagPyCArgObject*, align 8
  %fd25 = alloca %struct.fielddesc*, align 8
  %_py_decref_tmp41 = alloca %struct._object*, align 8
  %parg61 = alloca %struct.tagPyCArgObject*, align 8
  %fd62 = alloca %struct.fielddesc*, align 8
  %_py_decref_tmp78 = alloca %struct._object*, align 8
  %parg98 = alloca %struct.tagPyCArgObject*, align 8
  %fd99 = alloca %struct.fielddesc*, align 8
  %_py_decref_tmp115 = alloca %struct._object*, align 8
  %a = alloca %struct.tagPyCArgObject*, align 8
  %parg176 = alloca %struct.tagPyCArgObject*, align 8
  %func = alloca %struct.PyCFuncPtrObject*, align 8
  %parg210 = alloca %struct.tagPyCArgObject*, align 8
  %_py_decref_tmp236 = alloca %struct._object*, align 8
  store %struct._object* %type, %struct._object** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %type.addr, metadata !1362, metadata !2526), !dbg !10493
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !1363, metadata !2526), !dbg !10494
  %0 = bitcast %struct.StgDictObject** %stgd to i8*, !dbg !10495
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10495
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgd, metadata !1364, metadata !2526), !dbg !10496
  %1 = bitcast %struct._object** %as_parameter to i8*, !dbg !10497
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !10497
  call void @llvm.dbg.declare(metadata %struct._object** %as_parameter, metadata !1365, metadata !2526), !dbg !10498
  %2 = bitcast i32* %res to i8*, !dbg !10499
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !10499
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1366, metadata !2526), !dbg !10500
  %3 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10501, !tbaa !2522
  %cmp = icmp eq %struct._object* %3, @_Py_NoneStruct, !dbg !10503
  br i1 %cmp, label %if.then, label %if.end, !dbg !10504

if.then:                                          ; preds = %entry
  %4 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10505, !tbaa !2551
  %inc = add i64 %4, 1, !dbg !10505
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10505, !tbaa !2551
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !10507
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.249, !dbg !10507

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10508, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !10509
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10509, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19, !dbg !10510
  %7 = load i64, i64* %tp_flags, align 8, !dbg !10510, !tbaa !2849
  %and = and i64 %7, 16777216, !dbg !10511
  %cmp1 = icmp ne i64 %and, 0, !dbg !10512
  br i1 %cmp1, label %if.then.2, label %if.end.18, !dbg !10513

if.then.2:                                        ; preds = %if.end
  %8 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !10514
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !10514
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %parg, metadata !1367, metadata !2526), !dbg !10515
  %9 = bitcast %struct.fielddesc** %fd to i8*, !dbg !10516
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !10516
  call void @llvm.dbg.declare(metadata %struct.fielddesc** %fd, metadata !1370, metadata !2526), !dbg !10517
  %call = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i32 0, i32 0)), !dbg !10518
  store %struct.fielddesc* %call, %struct.fielddesc** %fd, align 8, !dbg !10517, !tbaa !2522
  %call3 = call %struct.tagPyCArgObject* @PyCArgObject_new(), !dbg !10519
  store %struct.tagPyCArgObject* %call3, %struct.tagPyCArgObject** %parg, align 8, !dbg !10520, !tbaa !2522
  %10 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10521, !tbaa !2522
  %cmp4 = icmp eq %struct.tagPyCArgObject* %10, null, !dbg !10523
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !10524

if.then.5:                                        ; preds = %if.then.2
  store %struct._object* null, %struct._object** %retval, !dbg !10525
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10525

if.end.6:                                         ; preds = %if.then.2
  %11 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10526, !tbaa !2522
  %pffi_type = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %11, i32 0, i32 1, !dbg !10527
  store %struct._ffi_type* @ffi_type_pointer, %struct._ffi_type** %pffi_type, align 8, !dbg !10528, !tbaa !8614
  %12 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10529, !tbaa !2522
  %tag = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %12, i32 0, i32 2, !dbg !10530
  store i8 80, i8* %tag, align 1, !dbg !10531, !tbaa !8604
  %13 = load %struct.fielddesc*, %struct.fielddesc** %fd, align 8, !dbg !10532, !tbaa !2522
  %setfunc = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %13, i32 0, i32 1, !dbg !10533
  %14 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc, align 8, !dbg !10533, !tbaa !4037
  %15 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10534, !tbaa !2522
  %value7 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %15, i32 0, i32 3, !dbg !10535
  %16 = bitcast %union.anon* %value7 to i8*, !dbg !10536
  %17 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10537, !tbaa !2522
  %call8 = call %struct._object* %14(i8* %16, %struct._object* %17, i64 0), !dbg !10532
  %18 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10538, !tbaa !2522
  %obj = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %18, i32 0, i32 4, !dbg !10539
  store %struct._object* %call8, %struct._object** %obj, align 8, !dbg !10540, !tbaa !7925
  %19 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10541, !tbaa !2522
  %obj9 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %19, i32 0, i32 4, !dbg !10542
  %20 = load %struct._object*, %struct._object** %obj9, align 8, !dbg !10542, !tbaa !7925
  %cmp10 = icmp eq %struct._object* %20, null, !dbg !10543
  br i1 %cmp10, label %if.then.11, label %if.end.16, !dbg !10544

if.then.11:                                       ; preds = %if.end.6
  br label %do.body, !dbg !10545

do.body:                                          ; preds = %if.then.11
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10546
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !10546
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1371, metadata !2526), !dbg !10548
  %22 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10549, !tbaa !2522
  %23 = bitcast %struct.tagPyCArgObject* %22 to %struct._object*, !dbg !10550
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8, !dbg !10548, !tbaa !2522
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10551, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0, !dbg !10553
  %25 = load i64, i64* %ob_refcnt, align 8, !dbg !10554, !tbaa !2551
  %dec = add i64 %25, -1, !dbg !10554
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10554, !tbaa !2551
  %cmp12 = icmp ne i64 %dec, 0, !dbg !10555
  br i1 %cmp12, label %if.then.13, label %if.else, !dbg !10556

if.then.13:                                       ; preds = %do.body
  br label %if.end.15, !dbg !10557

if.else:                                          ; preds = %do.body
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10559, !tbaa !2522
  %ob_type14 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !10561
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type14, align 8, !dbg !10561, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4, !dbg !10562
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10562, !tbaa !2590
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10563, !tbaa !2522
  call void %28(%struct._object* %29), !dbg !10564
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.then.13
  %30 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10565
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !10565
  br label %do.cond, !dbg !10567

do.cond:                                          ; preds = %if.end.15
  br label %do.end, !dbg !10568

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !10570
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10570

if.end.16:                                        ; preds = %if.end.6
  %31 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !10571, !tbaa !2522
  %32 = bitcast %struct.tagPyCArgObject* %31 to %struct._object*, !dbg !10572
  store %struct._object* %32, %struct._object** %retval, !dbg !10573
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10573

cleanup:                                          ; preds = %if.end.16, %do.end, %if.then.5
  %33 = bitcast %struct.fielddesc** %fd to i8*, !dbg !10574
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !10574
  %34 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !10574
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !10574
  br label %cleanup.249

if.end.18:                                        ; preds = %if.end
  %35 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10575, !tbaa !2522
  %ob_type19 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 1, !dbg !10576
  %36 = load %struct._typeobject*, %struct._typeobject** %ob_type19, align 8, !dbg !10576, !tbaa !2588
  %tp_flags20 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %36, i32 0, i32 19, !dbg !10577
  %37 = load i64, i64* %tp_flags20, align 8, !dbg !10577, !tbaa !2849
  %and21 = and i64 %37, 134217728, !dbg !10578
  %cmp22 = icmp ne i64 %and21, 0, !dbg !10579
  br i1 %cmp22, label %if.then.23, label %if.end.55, !dbg !10580

if.then.23:                                       ; preds = %if.end.18
  %38 = bitcast %struct.tagPyCArgObject** %parg24 to i8*, !dbg !10581
  call void @llvm.lifetime.start(i64 8, i8* %38) #2, !dbg !10581
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %parg24, metadata !1375, metadata !2526), !dbg !10582
  %39 = bitcast %struct.fielddesc** %fd25 to i8*, !dbg !10583
  call void @llvm.lifetime.start(i64 8, i8* %39) #2, !dbg !10583
  call void @llvm.dbg.declare(metadata %struct.fielddesc** %fd25, metadata !1378, metadata !2526), !dbg !10584
  %call26 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.102, i32 0, i32 0)), !dbg !10585
  store %struct.fielddesc* %call26, %struct.fielddesc** %fd25, align 8, !dbg !10584, !tbaa !2522
  %call27 = call %struct.tagPyCArgObject* @PyCArgObject_new(), !dbg !10586
  store %struct.tagPyCArgObject* %call27, %struct.tagPyCArgObject** %parg24, align 8, !dbg !10587, !tbaa !2522
  %40 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg24, align 8, !dbg !10588, !tbaa !2522
  %cmp28 = icmp eq %struct.tagPyCArgObject* %40, null, !dbg !10590
  br i1 %cmp28, label %if.then.29, label %if.end.30, !dbg !10591

if.then.29:                                       ; preds = %if.then.23
  store %struct._object* null, %struct._object** %retval, !dbg !10592
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53, !dbg !10592

if.end.30:                                        ; preds = %if.then.23
  %41 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg24, align 8, !dbg !10593, !tbaa !2522
  %pffi_type31 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %41, i32 0, i32 1, !dbg !10594
  store %struct._ffi_type* @ffi_type_pointer, %struct._ffi_type** %pffi_type31, align 8, !dbg !10595, !tbaa !8614
  %42 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg24, align 8, !dbg !10596, !tbaa !2522
  %tag32 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %42, i32 0, i32 2, !dbg !10597
  store i8 122, i8* %tag32, align 1, !dbg !10598, !tbaa !8604
  %43 = load %struct.fielddesc*, %struct.fielddesc** %fd25, align 8, !dbg !10599, !tbaa !2522
  %setfunc33 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %43, i32 0, i32 1, !dbg !10600
  %44 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc33, align 8, !dbg !10600, !tbaa !4037
  %45 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg24, align 8, !dbg !10601, !tbaa !2522
  %value34 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %45, i32 0, i32 3, !dbg !10602
  %46 = bitcast %union.anon* %value34 to i8*, !dbg !10603
  %47 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10604, !tbaa !2522
  %call35 = call %struct._object* %44(i8* %46, %struct._object* %47, i64 0), !dbg !10599
  %48 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg24, align 8, !dbg !10605, !tbaa !2522
  %obj36 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %48, i32 0, i32 4, !dbg !10606
  store %struct._object* %call35, %struct._object** %obj36, align 8, !dbg !10607, !tbaa !7925
  %49 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg24, align 8, !dbg !10608, !tbaa !2522
  %obj37 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %49, i32 0, i32 4, !dbg !10609
  %50 = load %struct._object*, %struct._object** %obj37, align 8, !dbg !10609, !tbaa !7925
  %cmp38 = icmp eq %struct._object* %50, null, !dbg !10610
  br i1 %cmp38, label %if.then.39, label %if.end.52, !dbg !10611

if.then.39:                                       ; preds = %if.end.30
  br label %do.body.40, !dbg !10612

do.body.40:                                       ; preds = %if.then.39
  %51 = bitcast %struct._object** %_py_decref_tmp41 to i8*, !dbg !10613
  call void @llvm.lifetime.start(i64 8, i8* %51) #2, !dbg !10613
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp41, metadata !1379, metadata !2526), !dbg !10615
  %52 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg24, align 8, !dbg !10616, !tbaa !2522
  %53 = bitcast %struct.tagPyCArgObject* %52 to %struct._object*, !dbg !10617
  store %struct._object* %53, %struct._object** %_py_decref_tmp41, align 8, !dbg !10615, !tbaa !2522
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp41, align 8, !dbg !10618, !tbaa !2522
  %ob_refcnt42 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 0, !dbg !10620
  %55 = load i64, i64* %ob_refcnt42, align 8, !dbg !10621, !tbaa !2551
  %dec43 = add i64 %55, -1, !dbg !10621
  store i64 %dec43, i64* %ob_refcnt42, align 8, !dbg !10621, !tbaa !2551
  %cmp44 = icmp ne i64 %dec43, 0, !dbg !10622
  br i1 %cmp44, label %if.then.45, label %if.else.46, !dbg !10623

if.then.45:                                       ; preds = %do.body.40
  br label %if.end.49, !dbg !10624

if.else.46:                                       ; preds = %do.body.40
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp41, align 8, !dbg !10626, !tbaa !2522
  %ob_type47 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 1, !dbg !10628
  %57 = load %struct._typeobject*, %struct._typeobject** %ob_type47, align 8, !dbg !10628, !tbaa !2588
  %tp_dealloc48 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %57, i32 0, i32 4, !dbg !10629
  %58 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc48, align 8, !dbg !10629, !tbaa !2590
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp41, align 8, !dbg !10630, !tbaa !2522
  call void %58(%struct._object* %59), !dbg !10631
  br label %if.end.49

if.end.49:                                        ; preds = %if.else.46, %if.then.45
  %60 = bitcast %struct._object** %_py_decref_tmp41 to i8*, !dbg !10632
  call void @llvm.lifetime.end(i64 8, i8* %60) #2, !dbg !10632
  br label %do.cond.50, !dbg !10634

do.cond.50:                                       ; preds = %if.end.49
  br label %do.end.51, !dbg !10635

do.end.51:                                        ; preds = %do.cond.50
  store %struct._object* null, %struct._object** %retval, !dbg !10637
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53, !dbg !10637

if.end.52:                                        ; preds = %if.end.30
  %61 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg24, align 8, !dbg !10638, !tbaa !2522
  %62 = bitcast %struct.tagPyCArgObject* %61 to %struct._object*, !dbg !10639
  store %struct._object* %62, %struct._object** %retval, !dbg !10640
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.53, !dbg !10640

cleanup.53:                                       ; preds = %if.end.52, %do.end.51, %if.then.29
  %63 = bitcast %struct.fielddesc** %fd25 to i8*, !dbg !10641
  call void @llvm.lifetime.end(i64 8, i8* %63) #2, !dbg !10641
  %64 = bitcast %struct.tagPyCArgObject** %parg24 to i8*, !dbg !10641
  call void @llvm.lifetime.end(i64 8, i8* %64) #2, !dbg !10641
  br label %cleanup.249

if.end.55:                                        ; preds = %if.end.18
  %65 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10642, !tbaa !2522
  %ob_type56 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1, !dbg !10643
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type56, align 8, !dbg !10643, !tbaa !2588
  %cmp57 = icmp eq %struct._typeobject* %66, @PyByteArray_Type, !dbg !10644
  br i1 %cmp57, label %if.then.60, label %lor.lhs.false, !dbg !10645

lor.lhs.false:                                    ; preds = %if.end.55
  %67 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10646, !tbaa !2522
  %ob_type58 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1, !dbg !10648
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type58, align 8, !dbg !10648, !tbaa !2588
  %call59 = call i32 @PyType_IsSubtype(%struct._typeobject* %68, %struct._typeobject* @PyByteArray_Type), !dbg !10649
  %tobool = icmp ne i32 %call59, 0, !dbg !10649
  br i1 %tobool, label %if.then.60, label %if.end.92, !dbg !10650

if.then.60:                                       ; preds = %lor.lhs.false, %if.end.55
  %69 = bitcast %struct.tagPyCArgObject** %parg61 to i8*, !dbg !10651
  call void @llvm.lifetime.start(i64 8, i8* %69) #2, !dbg !10651
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %parg61, metadata !1383, metadata !2526), !dbg !10652
  %70 = bitcast %struct.fielddesc** %fd62 to i8*, !dbg !10653
  call void @llvm.lifetime.start(i64 8, i8* %70) #2, !dbg !10653
  call void @llvm.dbg.declare(metadata %struct.fielddesc** %fd62, metadata !1386, metadata !2526), !dbg !10654
  %call63 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.102, i32 0, i32 0)), !dbg !10655
  store %struct.fielddesc* %call63, %struct.fielddesc** %fd62, align 8, !dbg !10654, !tbaa !2522
  %call64 = call %struct.tagPyCArgObject* @PyCArgObject_new(), !dbg !10656
  store %struct.tagPyCArgObject* %call64, %struct.tagPyCArgObject** %parg61, align 8, !dbg !10657, !tbaa !2522
  %71 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg61, align 8, !dbg !10658, !tbaa !2522
  %cmp65 = icmp eq %struct.tagPyCArgObject* %71, null, !dbg !10660
  br i1 %cmp65, label %if.then.66, label %if.end.67, !dbg !10661

if.then.66:                                       ; preds = %if.then.60
  store %struct._object* null, %struct._object** %retval, !dbg !10662
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.90, !dbg !10662

if.end.67:                                        ; preds = %if.then.60
  %72 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg61, align 8, !dbg !10663, !tbaa !2522
  %pffi_type68 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %72, i32 0, i32 1, !dbg !10664
  store %struct._ffi_type* @ffi_type_pointer, %struct._ffi_type** %pffi_type68, align 8, !dbg !10665, !tbaa !8614
  %73 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg61, align 8, !dbg !10666, !tbaa !2522
  %tag69 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %73, i32 0, i32 2, !dbg !10667
  store i8 122, i8* %tag69, align 1, !dbg !10668, !tbaa !8604
  %74 = load %struct.fielddesc*, %struct.fielddesc** %fd62, align 8, !dbg !10669, !tbaa !2522
  %setfunc70 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %74, i32 0, i32 1, !dbg !10670
  %75 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc70, align 8, !dbg !10670, !tbaa !4037
  %76 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg61, align 8, !dbg !10671, !tbaa !2522
  %value71 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %76, i32 0, i32 3, !dbg !10672
  %77 = bitcast %union.anon* %value71 to i8*, !dbg !10673
  %78 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10674, !tbaa !2522
  %call72 = call %struct._object* %75(i8* %77, %struct._object* %78, i64 0), !dbg !10669
  %79 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg61, align 8, !dbg !10675, !tbaa !2522
  %obj73 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %79, i32 0, i32 4, !dbg !10676
  store %struct._object* %call72, %struct._object** %obj73, align 8, !dbg !10677, !tbaa !7925
  %80 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg61, align 8, !dbg !10678, !tbaa !2522
  %obj74 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %80, i32 0, i32 4, !dbg !10679
  %81 = load %struct._object*, %struct._object** %obj74, align 8, !dbg !10679, !tbaa !7925
  %cmp75 = icmp eq %struct._object* %81, null, !dbg !10680
  br i1 %cmp75, label %if.then.76, label %if.end.89, !dbg !10681

if.then.76:                                       ; preds = %if.end.67
  br label %do.body.77, !dbg !10682

do.body.77:                                       ; preds = %if.then.76
  %82 = bitcast %struct._object** %_py_decref_tmp78 to i8*, !dbg !10683
  call void @llvm.lifetime.start(i64 8, i8* %82) #2, !dbg !10683
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp78, metadata !1387, metadata !2526), !dbg !10685
  %83 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg61, align 8, !dbg !10686, !tbaa !2522
  %84 = bitcast %struct.tagPyCArgObject* %83 to %struct._object*, !dbg !10687
  store %struct._object* %84, %struct._object** %_py_decref_tmp78, align 8, !dbg !10685, !tbaa !2522
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !10688, !tbaa !2522
  %ob_refcnt79 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 0, !dbg !10690
  %86 = load i64, i64* %ob_refcnt79, align 8, !dbg !10691, !tbaa !2551
  %dec80 = add i64 %86, -1, !dbg !10691
  store i64 %dec80, i64* %ob_refcnt79, align 8, !dbg !10691, !tbaa !2551
  %cmp81 = icmp ne i64 %dec80, 0, !dbg !10692
  br i1 %cmp81, label %if.then.82, label %if.else.83, !dbg !10693

if.then.82:                                       ; preds = %do.body.77
  br label %if.end.86, !dbg !10694

if.else.83:                                       ; preds = %do.body.77
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !10696, !tbaa !2522
  %ob_type84 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 1, !dbg !10698
  %88 = load %struct._typeobject*, %struct._typeobject** %ob_type84, align 8, !dbg !10698, !tbaa !2588
  %tp_dealloc85 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %88, i32 0, i32 4, !dbg !10699
  %89 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc85, align 8, !dbg !10699, !tbaa !2590
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp78, align 8, !dbg !10700, !tbaa !2522
  call void %89(%struct._object* %90), !dbg !10701
  br label %if.end.86

if.end.86:                                        ; preds = %if.else.83, %if.then.82
  %91 = bitcast %struct._object** %_py_decref_tmp78 to i8*, !dbg !10702
  call void @llvm.lifetime.end(i64 8, i8* %91) #2, !dbg !10702
  br label %do.cond.87, !dbg !10704

do.cond.87:                                       ; preds = %if.end.86
  br label %do.end.88, !dbg !10705

do.end.88:                                        ; preds = %do.cond.87
  store %struct._object* null, %struct._object** %retval, !dbg !10707
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.90, !dbg !10707

if.end.89:                                        ; preds = %if.end.67
  %92 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg61, align 8, !dbg !10708, !tbaa !2522
  %93 = bitcast %struct.tagPyCArgObject* %92 to %struct._object*, !dbg !10709
  store %struct._object* %93, %struct._object** %retval, !dbg !10710
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.90, !dbg !10710

cleanup.90:                                       ; preds = %if.end.89, %do.end.88, %if.then.66
  %94 = bitcast %struct.fielddesc** %fd62 to i8*, !dbg !10711
  call void @llvm.lifetime.end(i64 8, i8* %94) #2, !dbg !10711
  %95 = bitcast %struct.tagPyCArgObject** %parg61 to i8*, !dbg !10711
  call void @llvm.lifetime.end(i64 8, i8* %95) #2, !dbg !10711
  br label %cleanup.249

if.end.92:                                        ; preds = %lor.lhs.false
  %96 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10712, !tbaa !2522
  %ob_type93 = getelementptr inbounds %struct._object, %struct._object* %96, i32 0, i32 1, !dbg !10713
  %97 = load %struct._typeobject*, %struct._typeobject** %ob_type93, align 8, !dbg !10713, !tbaa !2588
  %tp_flags94 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %97, i32 0, i32 19, !dbg !10714
  %98 = load i64, i64* %tp_flags94, align 8, !dbg !10714, !tbaa !2849
  %and95 = and i64 %98, 268435456, !dbg !10715
  %cmp96 = icmp ne i64 %and95, 0, !dbg !10716
  br i1 %cmp96, label %if.then.97, label %if.end.129, !dbg !10717

if.then.97:                                       ; preds = %if.end.92
  %99 = bitcast %struct.tagPyCArgObject** %parg98 to i8*, !dbg !10718
  call void @llvm.lifetime.start(i64 8, i8* %99) #2, !dbg !10718
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %parg98, metadata !1391, metadata !2526), !dbg !10719
  %100 = bitcast %struct.fielddesc** %fd99 to i8*, !dbg !10720
  call void @llvm.lifetime.start(i64 8, i8* %100) #2, !dbg !10720
  call void @llvm.dbg.declare(metadata %struct.fielddesc** %fd99, metadata !1394, metadata !2526), !dbg !10721
  %call100 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.103, i32 0, i32 0)), !dbg !10722
  store %struct.fielddesc* %call100, %struct.fielddesc** %fd99, align 8, !dbg !10721, !tbaa !2522
  %call101 = call %struct.tagPyCArgObject* @PyCArgObject_new(), !dbg !10723
  store %struct.tagPyCArgObject* %call101, %struct.tagPyCArgObject** %parg98, align 8, !dbg !10724, !tbaa !2522
  %101 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg98, align 8, !dbg !10725, !tbaa !2522
  %cmp102 = icmp eq %struct.tagPyCArgObject* %101, null, !dbg !10727
  br i1 %cmp102, label %if.then.103, label %if.end.104, !dbg !10728

if.then.103:                                      ; preds = %if.then.97
  store %struct._object* null, %struct._object** %retval, !dbg !10729
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.127, !dbg !10729

if.end.104:                                       ; preds = %if.then.97
  %102 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg98, align 8, !dbg !10730, !tbaa !2522
  %pffi_type105 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %102, i32 0, i32 1, !dbg !10731
  store %struct._ffi_type* @ffi_type_pointer, %struct._ffi_type** %pffi_type105, align 8, !dbg !10732, !tbaa !8614
  %103 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg98, align 8, !dbg !10733, !tbaa !2522
  %tag106 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %103, i32 0, i32 2, !dbg !10734
  store i8 90, i8* %tag106, align 1, !dbg !10735, !tbaa !8604
  %104 = load %struct.fielddesc*, %struct.fielddesc** %fd99, align 8, !dbg !10736, !tbaa !2522
  %setfunc107 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %104, i32 0, i32 1, !dbg !10737
  %105 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc107, align 8, !dbg !10737, !tbaa !4037
  %106 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg98, align 8, !dbg !10738, !tbaa !2522
  %value108 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %106, i32 0, i32 3, !dbg !10739
  %107 = bitcast %union.anon* %value108 to i8*, !dbg !10740
  %108 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10741, !tbaa !2522
  %call109 = call %struct._object* %105(i8* %107, %struct._object* %108, i64 0), !dbg !10736
  %109 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg98, align 8, !dbg !10742, !tbaa !2522
  %obj110 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %109, i32 0, i32 4, !dbg !10743
  store %struct._object* %call109, %struct._object** %obj110, align 8, !dbg !10744, !tbaa !7925
  %110 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg98, align 8, !dbg !10745, !tbaa !2522
  %obj111 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %110, i32 0, i32 4, !dbg !10746
  %111 = load %struct._object*, %struct._object** %obj111, align 8, !dbg !10746, !tbaa !7925
  %cmp112 = icmp eq %struct._object* %111, null, !dbg !10747
  br i1 %cmp112, label %if.then.113, label %if.end.126, !dbg !10748

if.then.113:                                      ; preds = %if.end.104
  br label %do.body.114, !dbg !10749

do.body.114:                                      ; preds = %if.then.113
  %112 = bitcast %struct._object** %_py_decref_tmp115 to i8*, !dbg !10750
  call void @llvm.lifetime.start(i64 8, i8* %112) #2, !dbg !10750
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp115, metadata !1395, metadata !2526), !dbg !10752
  %113 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg98, align 8, !dbg !10753, !tbaa !2522
  %114 = bitcast %struct.tagPyCArgObject* %113 to %struct._object*, !dbg !10754
  store %struct._object* %114, %struct._object** %_py_decref_tmp115, align 8, !dbg !10752, !tbaa !2522
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp115, align 8, !dbg !10755, !tbaa !2522
  %ob_refcnt116 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 0, !dbg !10757
  %116 = load i64, i64* %ob_refcnt116, align 8, !dbg !10758, !tbaa !2551
  %dec117 = add i64 %116, -1, !dbg !10758
  store i64 %dec117, i64* %ob_refcnt116, align 8, !dbg !10758, !tbaa !2551
  %cmp118 = icmp ne i64 %dec117, 0, !dbg !10759
  br i1 %cmp118, label %if.then.119, label %if.else.120, !dbg !10760

if.then.119:                                      ; preds = %do.body.114
  br label %if.end.123, !dbg !10761

if.else.120:                                      ; preds = %do.body.114
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp115, align 8, !dbg !10763, !tbaa !2522
  %ob_type121 = getelementptr inbounds %struct._object, %struct._object* %117, i32 0, i32 1, !dbg !10765
  %118 = load %struct._typeobject*, %struct._typeobject** %ob_type121, align 8, !dbg !10765, !tbaa !2588
  %tp_dealloc122 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %118, i32 0, i32 4, !dbg !10766
  %119 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc122, align 8, !dbg !10766, !tbaa !2590
  %120 = load %struct._object*, %struct._object** %_py_decref_tmp115, align 8, !dbg !10767, !tbaa !2522
  call void %119(%struct._object* %120), !dbg !10768
  br label %if.end.123

if.end.123:                                       ; preds = %if.else.120, %if.then.119
  %121 = bitcast %struct._object** %_py_decref_tmp115 to i8*, !dbg !10769
  call void @llvm.lifetime.end(i64 8, i8* %121) #2, !dbg !10769
  br label %do.cond.124, !dbg !10771

do.cond.124:                                      ; preds = %if.end.123
  br label %do.end.125, !dbg !10772

do.end.125:                                       ; preds = %do.cond.124
  store %struct._object* null, %struct._object** %retval, !dbg !10774
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.127, !dbg !10774

if.end.126:                                       ; preds = %if.end.104
  %122 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg98, align 8, !dbg !10775, !tbaa !2522
  %123 = bitcast %struct.tagPyCArgObject* %122 to %struct._object*, !dbg !10776
  store %struct._object* %123, %struct._object** %retval, !dbg !10777
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.127, !dbg !10777

cleanup.127:                                      ; preds = %if.end.126, %do.end.125, %if.then.103
  %124 = bitcast %struct.fielddesc** %fd99 to i8*, !dbg !10778
  call void @llvm.lifetime.end(i64 8, i8* %124) #2, !dbg !10778
  %125 = bitcast %struct.tagPyCArgObject** %parg98 to i8*, !dbg !10778
  call void @llvm.lifetime.end(i64 8, i8* %125) #2, !dbg !10778
  br label %cleanup.249

if.end.129:                                       ; preds = %if.end.92
  %126 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10779, !tbaa !2522
  %127 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !10780, !tbaa !2522
  %call130 = call i32 @PyObject_IsInstance(%struct._object* %126, %struct._object* %127), !dbg !10781
  store i32 %call130, i32* %res, align 4, !dbg !10782, !tbaa !2611
  %128 = load i32, i32* %res, align 4, !dbg !10783, !tbaa !2611
  %cmp131 = icmp eq i32 %128, -1, !dbg !10785
  br i1 %cmp131, label %if.then.132, label %if.end.133, !dbg !10786

if.then.132:                                      ; preds = %if.end.129
  store %struct._object* null, %struct._object** %retval, !dbg !10787
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.249, !dbg !10787

if.end.133:                                       ; preds = %if.end.129
  %129 = load i32, i32* %res, align 4, !dbg !10788, !tbaa !2611
  %tobool134 = icmp ne i32 %129, 0, !dbg !10788
  br i1 %tobool134, label %if.then.135, label %if.end.138, !dbg !10790

if.then.135:                                      ; preds = %if.end.133
  %130 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10791, !tbaa !2522
  %ob_refcnt136 = getelementptr inbounds %struct._object, %struct._object* %130, i32 0, i32 0, !dbg !10793
  %131 = load i64, i64* %ob_refcnt136, align 8, !dbg !10794, !tbaa !2551
  %inc137 = add i64 %131, 1, !dbg !10794
  store i64 %inc137, i64* %ob_refcnt136, align 8, !dbg !10794, !tbaa !2551
  %132 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10795, !tbaa !2522
  store %struct._object* %132, %struct._object** %retval, !dbg !10796
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.249, !dbg !10796

if.end.138:                                       ; preds = %if.end.133
  %133 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10797, !tbaa !2522
  %ob_type139 = getelementptr inbounds %struct._object, %struct._object* %133, i32 0, i32 1, !dbg !10799
  %134 = load %struct._typeobject*, %struct._typeobject** %ob_type139, align 8, !dbg !10799, !tbaa !2588
  %cmp140 = icmp eq %struct._typeobject* %134, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type to %struct._typeobject*), !dbg !10800
  br i1 %cmp140, label %if.then.152, label %lor.lhs.false.141, !dbg !10801

lor.lhs.false.141:                                ; preds = %if.end.138
  %135 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10802, !tbaa !2522
  %ob_type142 = getelementptr inbounds %struct._object, %struct._object* %135, i32 0, i32 1, !dbg !10804
  %136 = load %struct._typeobject*, %struct._typeobject** %ob_type142, align 8, !dbg !10804, !tbaa !2588
  %call143 = call i32 @PyType_IsSubtype(%struct._typeobject* %136, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type to %struct._typeobject*)), !dbg !10805
  %tobool144 = icmp ne i32 %call143, 0, !dbg !10805
  br i1 %tobool144, label %if.then.152, label %lor.lhs.false.145, !dbg !10806

lor.lhs.false.145:                                ; preds = %lor.lhs.false.141
  %137 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10807, !tbaa !2522
  %ob_type146 = getelementptr inbounds %struct._object, %struct._object* %137, i32 0, i32 1, !dbg !10809
  %138 = load %struct._typeobject*, %struct._typeobject** %ob_type146, align 8, !dbg !10809, !tbaa !2588
  %cmp147 = icmp eq %struct._typeobject* %138, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointer_Type to %struct._typeobject*), !dbg !10810
  br i1 %cmp147, label %if.then.152, label %lor.lhs.false.148, !dbg !10811

lor.lhs.false.148:                                ; preds = %lor.lhs.false.145
  %139 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10812, !tbaa !2522
  %ob_type149 = getelementptr inbounds %struct._object, %struct._object* %139, i32 0, i32 1, !dbg !10814
  %140 = load %struct._typeobject*, %struct._typeobject** %ob_type149, align 8, !dbg !10814, !tbaa !2588
  %call150 = call i32 @PyType_IsSubtype(%struct._typeobject* %140, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointer_Type to %struct._typeobject*)), !dbg !10815
  %tobool151 = icmp ne i32 %call150, 0, !dbg !10815
  br i1 %tobool151, label %if.then.152, label %if.end.155, !dbg !10816

if.then.152:                                      ; preds = %lor.lhs.false.148, %lor.lhs.false.145, %lor.lhs.false.141, %if.end.138
  %141 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10817, !tbaa !2522
  %ob_refcnt153 = getelementptr inbounds %struct._object, %struct._object* %141, i32 0, i32 0, !dbg !10819
  %142 = load i64, i64* %ob_refcnt153, align 8, !dbg !10820, !tbaa !2551
  %inc154 = add i64 %142, 1, !dbg !10820
  store i64 %inc154, i64* %ob_refcnt153, align 8, !dbg !10820, !tbaa !2551
  %143 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10821, !tbaa !2522
  store %struct._object* %143, %struct._object** %retval, !dbg !10822
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.249, !dbg !10822

if.end.155:                                       ; preds = %lor.lhs.false.148
  %144 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10823, !tbaa !2522
  %ob_type156 = getelementptr inbounds %struct._object, %struct._object* %144, i32 0, i32 1, !dbg !10824
  %145 = load %struct._typeobject*, %struct._typeobject** %ob_type156, align 8, !dbg !10824, !tbaa !2588
  %cmp157 = icmp eq %struct._typeobject* %145, @PyCArg_Type, !dbg !10825
  br i1 %cmp157, label %if.then.158, label %if.end.167, !dbg !10826

if.then.158:                                      ; preds = %if.end.155
  %146 = bitcast %struct.tagPyCArgObject** %a to i8*, !dbg !10827
  call void @llvm.lifetime.start(i64 8, i8* %146) #2, !dbg !10827
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %a, metadata !1399, metadata !2526), !dbg !10828
  %147 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10829, !tbaa !2522
  %148 = bitcast %struct._object* %147 to %struct.tagPyCArgObject*, !dbg !10830
  store %struct.tagPyCArgObject* %148, %struct.tagPyCArgObject** %a, align 8, !dbg !10828, !tbaa !2522
  %149 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %a, align 8, !dbg !10831, !tbaa !2522
  %tag159 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %149, i32 0, i32 2, !dbg !10833
  %150 = load i8, i8* %tag159, align 1, !dbg !10833, !tbaa !8604
  %conv = sext i8 %150 to i32, !dbg !10831
  %cmp160 = icmp eq i32 %conv, 80, !dbg !10834
  br i1 %cmp160, label %if.then.162, label %if.end.165, !dbg !10835

if.then.162:                                      ; preds = %if.then.158
  %151 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10836, !tbaa !2522
  %ob_refcnt163 = getelementptr inbounds %struct._object, %struct._object* %151, i32 0, i32 0, !dbg !10838
  %152 = load i64, i64* %ob_refcnt163, align 8, !dbg !10839, !tbaa !2551
  %inc164 = add i64 %152, 1, !dbg !10839
  store i64 %inc164, i64* %ob_refcnt163, align 8, !dbg !10839, !tbaa !2551
  %153 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10840, !tbaa !2522
  store %struct._object* %153, %struct._object** %retval, !dbg !10841
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.166, !dbg !10841

if.end.165:                                       ; preds = %if.then.158
  store i32 0, i32* %cleanup.dest.slot, !dbg !10842
  br label %cleanup.166, !dbg !10842

cleanup.166:                                      ; preds = %if.end.165, %if.then.162
  %154 = bitcast %struct.tagPyCArgObject** %a to i8*, !dbg !10843
  call void @llvm.lifetime.end(i64 8, i8* %154) #2, !dbg !10843
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup.166
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.167, !dbg !10845

if.end.167:                                       ; preds = %cleanup.cont, %if.end.155
  %155 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10846, !tbaa !2522
  %ob_type168 = getelementptr inbounds %struct._object, %struct._object* %155, i32 0, i32 1, !dbg !10847
  %156 = load %struct._typeobject*, %struct._typeobject** %ob_type168, align 8, !dbg !10847, !tbaa !2588
  %cmp169 = icmp eq %struct._typeobject* %156, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCFuncPtr_Type to %struct._typeobject*), !dbg !10848
  br i1 %cmp169, label %if.then.175, label %lor.lhs.false.171, !dbg !10849

lor.lhs.false.171:                                ; preds = %if.end.167
  %157 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10850, !tbaa !2522
  %ob_type172 = getelementptr inbounds %struct._object, %struct._object* %157, i32 0, i32 1, !dbg !10852
  %158 = load %struct._typeobject*, %struct._typeobject** %ob_type172, align 8, !dbg !10852, !tbaa !2588
  %call173 = call i32 @PyType_IsSubtype(%struct._typeobject* %158, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCFuncPtr_Type to %struct._typeobject*)), !dbg !10853
  %tobool174 = icmp ne i32 %call173, 0, !dbg !10853
  br i1 %tobool174, label %if.then.175, label %if.end.190, !dbg !10854

if.then.175:                                      ; preds = %lor.lhs.false.171, %if.end.167
  %159 = bitcast %struct.tagPyCArgObject** %parg176 to i8*, !dbg !10855
  call void @llvm.lifetime.start(i64 8, i8* %159) #2, !dbg !10855
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %parg176, metadata !1402, metadata !2526), !dbg !10856
  %160 = bitcast %struct.PyCFuncPtrObject** %func to i8*, !dbg !10857
  call void @llvm.lifetime.start(i64 8, i8* %160) #2, !dbg !10857
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %func, metadata !1405, metadata !2526), !dbg !10858
  %161 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10859, !tbaa !2522
  %162 = bitcast %struct._object* %161 to %struct.PyCFuncPtrObject*, !dbg !10860
  store %struct.PyCFuncPtrObject* %162, %struct.PyCFuncPtrObject** %func, align 8, !dbg !10861, !tbaa !2522
  %call177 = call %struct.tagPyCArgObject* @PyCArgObject_new(), !dbg !10862
  store %struct.tagPyCArgObject* %call177, %struct.tagPyCArgObject** %parg176, align 8, !dbg !10863, !tbaa !2522
  %163 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg176, align 8, !dbg !10864, !tbaa !2522
  %cmp178 = icmp eq %struct.tagPyCArgObject* %163, null, !dbg !10866
  br i1 %cmp178, label %if.then.180, label %if.end.181, !dbg !10867

if.then.180:                                      ; preds = %if.then.175
  store %struct._object* null, %struct._object** %retval, !dbg !10868
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.188, !dbg !10868

if.end.181:                                       ; preds = %if.then.175
  %164 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg176, align 8, !dbg !10869, !tbaa !2522
  %pffi_type182 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %164, i32 0, i32 1, !dbg !10870
  store %struct._ffi_type* @ffi_type_pointer, %struct._ffi_type** %pffi_type182, align 8, !dbg !10871, !tbaa !8614
  %165 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg176, align 8, !dbg !10872, !tbaa !2522
  %tag183 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %165, i32 0, i32 2, !dbg !10873
  store i8 80, i8* %tag183, align 1, !dbg !10874, !tbaa !8604
  %166 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10875, !tbaa !2522
  %ob_refcnt184 = getelementptr inbounds %struct._object, %struct._object* %166, i32 0, i32 0, !dbg !10876
  %167 = load i64, i64* %ob_refcnt184, align 8, !dbg !10877, !tbaa !2551
  %inc185 = add i64 %167, 1, !dbg !10877
  store i64 %inc185, i64* %ob_refcnt184, align 8, !dbg !10877, !tbaa !2551
  %168 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %func, align 8, !dbg !10878, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %168, i32 0, i32 1, !dbg !10879
  %169 = load i8*, i8** %b_ptr, align 8, !dbg !10879, !tbaa !5762
  %170 = bitcast i8* %169 to i8**, !dbg !10880
  %171 = load i8*, i8** %170, align 8, !dbg !10881, !tbaa !2522
  %172 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg176, align 8, !dbg !10882, !tbaa !2522
  %value186 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %172, i32 0, i32 3, !dbg !10883
  %p = bitcast %union.anon* %value186 to i8**, !dbg !10884
  store i8* %171, i8** %p, align 8, !dbg !10885, !tbaa !2522
  %173 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10886, !tbaa !2522
  %174 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg176, align 8, !dbg !10887, !tbaa !2522
  %obj187 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %174, i32 0, i32 4, !dbg !10888
  store %struct._object* %173, %struct._object** %obj187, align 8, !dbg !10889, !tbaa !7925
  %175 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg176, align 8, !dbg !10890, !tbaa !2522
  %176 = bitcast %struct.tagPyCArgObject* %175 to %struct._object*, !dbg !10891
  store %struct._object* %176, %struct._object** %retval, !dbg !10892
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.188, !dbg !10892

cleanup.188:                                      ; preds = %if.end.181, %if.then.180
  %177 = bitcast %struct.PyCFuncPtrObject** %func to i8*, !dbg !10893
  call void @llvm.lifetime.end(i64 8, i8* %177) #2, !dbg !10893
  %178 = bitcast %struct.tagPyCArgObject** %parg176 to i8*, !dbg !10893
  call void @llvm.lifetime.end(i64 8, i8* %178) #2, !dbg !10893
  br label %cleanup.249

if.end.190:                                       ; preds = %lor.lhs.false.171
  %179 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10894, !tbaa !2522
  %call191 = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %179), !dbg !10895
  store %struct.StgDictObject* %call191, %struct.StgDictObject** %stgd, align 8, !dbg !10896, !tbaa !2522
  %180 = load %struct.StgDictObject*, %struct.StgDictObject** %stgd, align 8, !dbg !10897, !tbaa !2522
  %tobool192 = icmp ne %struct.StgDictObject* %180, null, !dbg !10897
  br i1 %tobool192, label %land.lhs.true, label %if.end.230, !dbg !10898

land.lhs.true:                                    ; preds = %if.end.190
  %181 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10899, !tbaa !2522
  %ob_type193 = getelementptr inbounds %struct._object, %struct._object* %181, i32 0, i32 1, !dbg !10901
  %182 = load %struct._typeobject*, %struct._typeobject** %ob_type193, align 8, !dbg !10901, !tbaa !2588
  %cmp194 = icmp eq %struct._typeobject* %182, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*), !dbg !10902
  br i1 %cmp194, label %land.lhs.true.200, label %lor.lhs.false.196, !dbg !10903

lor.lhs.false.196:                                ; preds = %land.lhs.true
  %183 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10904, !tbaa !2522
  %ob_type197 = getelementptr inbounds %struct._object, %struct._object* %183, i32 0, i32 1, !dbg !10906
  %184 = load %struct._typeobject*, %struct._typeobject** %ob_type197, align 8, !dbg !10906, !tbaa !2588
  %call198 = call i32 @PyType_IsSubtype(%struct._typeobject* %184, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*)), !dbg !10907
  %tobool199 = icmp ne i32 %call198, 0, !dbg !10907
  br i1 %tobool199, label %land.lhs.true.200, label %if.end.230, !dbg !10908

land.lhs.true.200:                                ; preds = %lor.lhs.false.196, %land.lhs.true
  %185 = load %struct.StgDictObject*, %struct.StgDictObject** %stgd, align 8, !dbg !10909, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %185, i32 0, i32 5, !dbg !10912
  %186 = load %struct._object*, %struct._object** %proto, align 8, !dbg !10912, !tbaa !2961
  %tobool201 = icmp ne %struct._object* %186, null, !dbg !10913
  br i1 %tobool201, label %land.lhs.true.202, label %if.end.230, !dbg !10914

land.lhs.true.202:                                ; preds = %land.lhs.true.200
  %187 = load %struct.StgDictObject*, %struct.StgDictObject** %stgd, align 8, !dbg !10915, !tbaa !2522
  %proto203 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %187, i32 0, i32 5, !dbg !10917
  %188 = load %struct._object*, %struct._object** %proto203, align 8, !dbg !10917, !tbaa !2961
  %ob_type204 = getelementptr inbounds %struct._object, %struct._object* %188, i32 0, i32 1, !dbg !10918
  %189 = load %struct._typeobject*, %struct._typeobject** %ob_type204, align 8, !dbg !10918, !tbaa !2588
  %tp_flags205 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %189, i32 0, i32 19, !dbg !10919
  %190 = load i64, i64* %tp_flags205, align 8, !dbg !10919, !tbaa !2849
  %and206 = and i64 %190, 268435456, !dbg !10920
  %cmp207 = icmp ne i64 %and206, 0, !dbg !10921
  br i1 %cmp207, label %if.then.209, label %if.end.230, !dbg !10922

if.then.209:                                      ; preds = %land.lhs.true.202
  %191 = bitcast %struct.tagPyCArgObject** %parg210 to i8*, !dbg !10923
  call void @llvm.lifetime.start(i64 8, i8* %191) #2, !dbg !10923
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %parg210, metadata !1406, metadata !2526), !dbg !10924
  %192 = load %struct.StgDictObject*, %struct.StgDictObject** %stgd, align 8, !dbg !10925, !tbaa !2522
  %proto211 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %192, i32 0, i32 5, !dbg !10926
  %193 = load %struct._object*, %struct._object** %proto211, align 8, !dbg !10926, !tbaa !2961
  %call212 = call i8* @PyUnicode_AsUTF8(%struct._object* %193), !dbg !10927
  %arrayidx = getelementptr i8, i8* %call212, i64 0, !dbg !10927
  %194 = load i8, i8* %arrayidx, align 1, !dbg !10927, !tbaa !2731
  %conv213 = sext i8 %194 to i32, !dbg !10927
  br label %NodeBlock

NodeBlock:                                        ; preds = %if.then.209
  %Pivot = icmp slt i32 %conv213, 122
  br i1 %Pivot, label %LeafBlock.2, label %LeafBlock.4

LeafBlock.4:                                      ; preds = %NodeBlock
  %SwitchLeaf5 = icmp eq i32 %conv213, 122
  br i1 %SwitchLeaf5, label %sw.bb, label %NewDefault.1

LeafBlock.2:                                      ; preds = %NodeBlock
  %SwitchLeaf3 = icmp eq i32 %conv213, 90
  br i1 %SwitchLeaf3, label %sw.bb, label %NewDefault.1

sw.bb:                                            ; preds = %LeafBlock.4, %LeafBlock.2
  %call214 = call %struct.tagPyCArgObject* @PyCArgObject_new(), !dbg !10928
  store %struct.tagPyCArgObject* %call214, %struct.tagPyCArgObject** %parg210, align 8, !dbg !10930, !tbaa !2522
  %195 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg210, align 8, !dbg !10931, !tbaa !2522
  %cmp215 = icmp eq %struct.tagPyCArgObject* %195, null, !dbg !10933
  br i1 %cmp215, label %if.then.217, label %if.end.218, !dbg !10934

if.then.217:                                      ; preds = %sw.bb
  store %struct._object* null, %struct._object** %retval, !dbg !10935
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.227, !dbg !10935

if.end.218:                                       ; preds = %sw.bb
  %196 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg210, align 8, !dbg !10936, !tbaa !2522
  %pffi_type219 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %196, i32 0, i32 1, !dbg !10937
  store %struct._ffi_type* @ffi_type_pointer, %struct._ffi_type** %pffi_type219, align 8, !dbg !10938, !tbaa !8614
  %197 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg210, align 8, !dbg !10939, !tbaa !2522
  %tag220 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %197, i32 0, i32 2, !dbg !10940
  store i8 90, i8* %tag220, align 1, !dbg !10941, !tbaa !8604
  %198 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10942, !tbaa !2522
  %ob_refcnt221 = getelementptr inbounds %struct._object, %struct._object* %198, i32 0, i32 0, !dbg !10943
  %199 = load i64, i64* %ob_refcnt221, align 8, !dbg !10944, !tbaa !2551
  %inc222 = add i64 %199, 1, !dbg !10944
  store i64 %inc222, i64* %ob_refcnt221, align 8, !dbg !10944, !tbaa !2551
  %200 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10945, !tbaa !2522
  %201 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg210, align 8, !dbg !10946, !tbaa !2522
  %obj223 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %201, i32 0, i32 4, !dbg !10947
  store %struct._object* %200, %struct._object** %obj223, align 8, !dbg !10948, !tbaa !7925
  %202 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10949, !tbaa !2522
  %203 = bitcast %struct._object* %202 to %struct.tagCDataObject*, !dbg !10950
  %b_ptr224 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %203, i32 0, i32 1, !dbg !10951
  %204 = load i8*, i8** %b_ptr224, align 8, !dbg !10951, !tbaa !4817
  %205 = bitcast i8* %204 to i8**, !dbg !10952
  %206 = load i8*, i8** %205, align 8, !dbg !10953, !tbaa !2522
  %207 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg210, align 8, !dbg !10954, !tbaa !2522
  %value225 = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %207, i32 0, i32 3, !dbg !10955
  %p226 = bitcast %union.anon* %value225 to i8**, !dbg !10956
  store i8* %206, i8** %p226, align 8, !dbg !10957, !tbaa !2522
  %208 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg210, align 8, !dbg !10958, !tbaa !2522
  %209 = bitcast %struct.tagPyCArgObject* %208 to %struct._object*, !dbg !10959
  store %struct._object* %209, %struct._object** %retval, !dbg !10960
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.227, !dbg !10960

NewDefault.1:                                     ; preds = %LeafBlock.4, %LeafBlock.2
  br label %sw.epilog

sw.epilog:                                        ; preds = %NewDefault.1
  store i32 0, i32* %cleanup.dest.slot, !dbg !10961
  br label %cleanup.227, !dbg !10961

cleanup.227:                                      ; preds = %sw.epilog, %if.end.218, %if.then.217
  %210 = bitcast %struct.tagPyCArgObject** %parg210 to i8*, !dbg !10962
  call void @llvm.lifetime.end(i64 8, i8* %210) #2, !dbg !10962
  %cleanup.dest.228 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.7

LeafBlock.7:                                      ; preds = %cleanup.227
  %SwitchLeaf8 = icmp eq i32 %cleanup.dest.228, 0
  br i1 %SwitchLeaf8, label %cleanup.cont.229, label %NewDefault.6

cleanup.cont.229:                                 ; preds = %LeafBlock.7
  br label %if.end.230, !dbg !10963

if.end.230:                                       ; preds = %cleanup.cont.229, %land.lhs.true.202, %land.lhs.true.200, %lor.lhs.false.196, %if.end.190
  %211 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10964, !tbaa !2522
  %call231 = call %struct._object* @PyObject_GetAttrString(%struct._object* %211, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i32 0, i32 0)), !dbg !10965
  store %struct._object* %call231, %struct._object** %as_parameter, align 8, !dbg !10966, !tbaa !2522
  %212 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !10967, !tbaa !2522
  %tobool232 = icmp ne %struct._object* %212, null, !dbg !10967
  br i1 %tobool232, label %if.then.233, label %if.end.248, !dbg !10968

if.then.233:                                      ; preds = %if.end.230
  %213 = load %struct._object*, %struct._object** %type.addr, align 8, !dbg !10969, !tbaa !2522
  %214 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !10970, !tbaa !2522
  %call234 = call %struct._object* @c_void_p_from_param(%struct._object* %213, %struct._object* %214), !dbg !10971
  store %struct._object* %call234, %struct._object** %value.addr, align 8, !dbg !10972, !tbaa !2522
  br label %do.body.235, !dbg !10973

do.body.235:                                      ; preds = %if.then.233
  %215 = bitcast %struct._object** %_py_decref_tmp236 to i8*, !dbg !10974
  call void @llvm.lifetime.start(i64 8, i8* %215) #2, !dbg !10974
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp236, metadata !1409, metadata !2526), !dbg !10976
  %216 = load %struct._object*, %struct._object** %as_parameter, align 8, !dbg !10977, !tbaa !2522
  store %struct._object* %216, %struct._object** %_py_decref_tmp236, align 8, !dbg !10976, !tbaa !2522
  %217 = load %struct._object*, %struct._object** %_py_decref_tmp236, align 8, !dbg !10978, !tbaa !2522
  %ob_refcnt237 = getelementptr inbounds %struct._object, %struct._object* %217, i32 0, i32 0, !dbg !10980
  %218 = load i64, i64* %ob_refcnt237, align 8, !dbg !10981, !tbaa !2551
  %dec238 = add i64 %218, -1, !dbg !10981
  store i64 %dec238, i64* %ob_refcnt237, align 8, !dbg !10981, !tbaa !2551
  %cmp239 = icmp ne i64 %dec238, 0, !dbg !10982
  br i1 %cmp239, label %if.then.241, label %if.else.242, !dbg !10983

if.then.241:                                      ; preds = %do.body.235
  br label %if.end.245, !dbg !10984

if.else.242:                                      ; preds = %do.body.235
  %219 = load %struct._object*, %struct._object** %_py_decref_tmp236, align 8, !dbg !10986, !tbaa !2522
  %ob_type243 = getelementptr inbounds %struct._object, %struct._object* %219, i32 0, i32 1, !dbg !10988
  %220 = load %struct._typeobject*, %struct._typeobject** %ob_type243, align 8, !dbg !10988, !tbaa !2588
  %tp_dealloc244 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %220, i32 0, i32 4, !dbg !10989
  %221 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc244, align 8, !dbg !10989, !tbaa !2590
  %222 = load %struct._object*, %struct._object** %_py_decref_tmp236, align 8, !dbg !10990, !tbaa !2522
  call void %221(%struct._object* %222), !dbg !10991
  br label %if.end.245

if.end.245:                                       ; preds = %if.else.242, %if.then.241
  %223 = bitcast %struct._object** %_py_decref_tmp236 to i8*, !dbg !10992
  call void @llvm.lifetime.end(i64 8, i8* %223) #2, !dbg !10992
  br label %do.cond.246, !dbg !10994

do.cond.246:                                      ; preds = %if.end.245
  br label %do.end.247, !dbg !10995

do.end.247:                                       ; preds = %do.cond.246
  %224 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !10997, !tbaa !2522
  store %struct._object* %224, %struct._object** %retval, !dbg !10998
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.249, !dbg !10998

if.end.248:                                       ; preds = %if.end.230
  %225 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !10999, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %225, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.92, i32 0, i32 0)), !dbg !11000
  store %struct._object* null, %struct._object** %retval, !dbg !11001
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.249, !dbg !11001

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.249

NewDefault.6:                                     ; preds = %LeafBlock.7
  br label %cleanup.249

cleanup.249:                                      ; preds = %NewDefault.6, %NewDefault, %if.end.248, %do.end.247, %cleanup.188, %if.then.152, %if.then.135, %if.then.132, %cleanup.127, %cleanup.90, %cleanup.53, %cleanup, %if.then
  %226 = bitcast i32* %res to i8*, !dbg !11002
  call void @llvm.lifetime.end(i64 4, i8* %226) #2, !dbg !11002
  %227 = bitcast %struct._object** %as_parameter to i8*, !dbg !11002
  call void @llvm.lifetime.end(i64 8, i8* %227) #2, !dbg !11002
  %228 = bitcast %struct.StgDictObject** %stgd to i8*, !dbg !11002
  call void @llvm.lifetime.end(i64 8, i8* %228) #2, !dbg !11002
  %229 = load %struct._object*, %struct._object** %retval, !dbg !11002
  ret %struct._object* %229, !dbg !11002
}

declare %struct._object* @PyTuple_New(i64) #3

declare %struct._object* @PyUnicode_InternFromString(i8*) #3

declare %struct._object* @PyUnicode_Concat(%struct._object*, %struct._object*) #3

; Function Attrs: uwtable
define internal %struct.tagPyCArgObject* @PyCFuncPtrType_paramfunc(%struct.tagCDataObject* %self) #0 {
entry:
  %retval = alloca %struct.tagPyCArgObject*, align 8
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %parg = alloca %struct.tagPyCArgObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !1471, metadata !2526), !dbg !11003
  %0 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !11004
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11004
  call void @llvm.dbg.declare(metadata %struct.tagPyCArgObject** %parg, metadata !1472, metadata !2526), !dbg !11005
  %call = call %struct.tagPyCArgObject* @PyCArgObject_new(), !dbg !11006
  store %struct.tagPyCArgObject* %call, %struct.tagPyCArgObject** %parg, align 8, !dbg !11007, !tbaa !2522
  %1 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !11008, !tbaa !2522
  %cmp = icmp eq %struct.tagPyCArgObject* %1, null, !dbg !11010
  br i1 %cmp, label %if.then, label %if.end, !dbg !11011

if.then:                                          ; preds = %entry
  store %struct.tagPyCArgObject* null, %struct.tagPyCArgObject** %retval, !dbg !11012
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11012

if.end:                                           ; preds = %entry
  %2 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !11013, !tbaa !2522
  %tag = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %2, i32 0, i32 2, !dbg !11014
  store i8 80, i8* %tag, align 1, !dbg !11015, !tbaa !8604
  %3 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !11016, !tbaa !2522
  %pffi_type = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %3, i32 0, i32 1, !dbg !11017
  store %struct._ffi_type* @ffi_type_pointer, %struct._ffi_type** %pffi_type, align 8, !dbg !11018, !tbaa !8614
  %4 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !11019, !tbaa !2522
  %5 = bitcast %struct.tagCDataObject* %4 to %struct._object*, !dbg !11020
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0, !dbg !11021
  %6 = load i64, i64* %ob_refcnt, align 8, !dbg !11022, !tbaa !2551
  %inc = add i64 %6, 1, !dbg !11022
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !11022, !tbaa !2551
  %7 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !11023, !tbaa !2522
  %8 = bitcast %struct.tagCDataObject* %7 to %struct._object*, !dbg !11024
  %9 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !11025, !tbaa !2522
  %obj = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %9, i32 0, i32 4, !dbg !11026
  store %struct._object* %8, %struct._object** %obj, align 8, !dbg !11027, !tbaa !7925
  %10 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !11028, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %10, i32 0, i32 1, !dbg !11029
  %11 = load i8*, i8** %b_ptr, align 8, !dbg !11029, !tbaa !4817
  %12 = bitcast i8* %11 to i8**, !dbg !11030
  %13 = load i8*, i8** %12, align 8, !dbg !11031, !tbaa !2522
  %14 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !11032, !tbaa !2522
  %value = getelementptr inbounds %struct.tagPyCArgObject, %struct.tagPyCArgObject* %14, i32 0, i32 3, !dbg !11033
  %p = bitcast %union.anon* %value to i8**, !dbg !11034
  store i8* %13, i8** %p, align 8, !dbg !11035, !tbaa !2522
  %15 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %parg, align 8, !dbg !11036, !tbaa !2522
  store %struct.tagPyCArgObject* %15, %struct.tagPyCArgObject** %retval, !dbg !11037
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11037

cleanup:                                          ; preds = %if.end, %if.then
  %16 = bitcast %struct.tagPyCArgObject** %parg to i8*, !dbg !11038
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !11038
  %17 = load %struct.tagPyCArgObject*, %struct.tagPyCArgObject** %retval, !dbg !11038
  ret %struct.tagPyCArgObject* %17, !dbg !11038
}

; Function Attrs: uwtable
define internal i32 @make_funcptrtype_dict(%struct.StgDictObject* %stgdict) #0 {
entry:
  %retval = alloca i32, align 4
  %stgdict.addr = alloca %struct.StgDictObject*, align 8
  %ob = alloca %struct._object*, align 8
  %converters = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.StgDictObject* %stgdict, %struct.StgDictObject** %stgdict.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict.addr, metadata !1477, metadata !2526), !dbg !11039
  %0 = bitcast %struct._object** %ob to i8*, !dbg !11040
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11040
  call void @llvm.dbg.declare(metadata %struct._object** %ob, metadata !1478, metadata !2526), !dbg !11041
  %1 = bitcast %struct._object** %converters to i8*, !dbg !11042
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !11042
  call void @llvm.dbg.declare(metadata %struct._object** %converters, metadata !1479, metadata !2526), !dbg !11043
  store %struct._object* null, %struct._object** %converters, align 8, !dbg !11043, !tbaa !2522
  %call = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.76, i32 0, i32 0)), !dbg !11044
  %pffi_type = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %call, i32 0, i32 3, !dbg !11045
  %2 = load %struct._ffi_type*, %struct._ffi_type** %pffi_type, align 8, !dbg !11045, !tbaa !3104
  %alignment = getelementptr inbounds %struct._ffi_type, %struct._ffi_type* %2, i32 0, i32 1, !dbg !11046
  %3 = load i16, i16* %alignment, align 2, !dbg !11046, !tbaa !3107
  %conv = zext i16 %3 to i64, !dbg !11044
  %4 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !11047, !tbaa !2522
  %align = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %4, i32 0, i32 2, !dbg !11048
  store i64 %conv, i64* %align, align 8, !dbg !11049, !tbaa !3111
  %5 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !11050, !tbaa !2522
  %length = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %5, i32 0, i32 3, !dbg !11051
  store i64 1, i64* %length, align 8, !dbg !11052, !tbaa !3115
  %6 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !11053, !tbaa !2522
  %size = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %6, i32 0, i32 1, !dbg !11054
  store i64 8, i64* %size, align 8, !dbg !11055, !tbaa !3101
  %7 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !11056, !tbaa !2522
  %setfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %7, i32 0, i32 6, !dbg !11057
  store %struct._object* (i8*, %struct._object*, i64)* null, %struct._object* (i8*, %struct._object*, i64)** %setfunc, align 8, !dbg !11058, !tbaa !4041
  %8 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !11059, !tbaa !2522
  %getfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %8, i32 0, i32 7, !dbg !11060
  store %struct._object* (i8*, i64)* null, %struct._object* (i8*, i64)** %getfunc, align 8, !dbg !11061, !tbaa !3683
  %9 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !11062, !tbaa !2522
  %ffi_type_pointer = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %9, i32 0, i32 4, !dbg !11063
  %10 = bitcast %struct._ffi_type* %ffi_type_pointer to i8*, !dbg !11064
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* bitcast (%struct._ffi_type* @ffi_type_pointer to i8*), i64 24, i32 8, i1 false), !dbg !11064, !tbaa.struct !3119
  %11 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !11065, !tbaa !2522
  %12 = bitcast %struct.StgDictObject* %11 to %struct._object*, !dbg !11066
  %call1 = call %struct._object* @PyDict_GetItemString(%struct._object* %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.106, i32 0, i32 0)), !dbg !11067
  store %struct._object* %call1, %struct._object** %ob, align 8, !dbg !11068, !tbaa !2522
  %13 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11069, !tbaa !2522
  %tobool = icmp ne %struct._object* %13, null, !dbg !11069
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11071

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11072, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !11074
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11074, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 19, !dbg !11075
  %16 = load i64, i64* %tp_flags, align 8, !dbg !11075, !tbaa !2849
  %and = and i64 %16, 16777216, !dbg !11076
  %cmp = icmp ne i64 %and, 0, !dbg !11077
  br i1 %cmp, label %if.end, label %if.then, !dbg !11078

if.then:                                          ; preds = %lor.lhs.false, %entry
  %17 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !11079, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %17, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.107, i32 0, i32 0)), !dbg !11081
  store i32 -1, i32* %retval, !dbg !11082
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11082

if.end:                                           ; preds = %lor.lhs.false
  %18 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11083, !tbaa !2522
  %call3 = call i64 @PyLong_AsLong(%struct._object* %18), !dbg !11084
  %or = or i64 %call3, 256, !dbg !11085
  %conv4 = trunc i64 %or to i32, !dbg !11084
  %19 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !11086, !tbaa !2522
  %flags = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %19, i32 0, i32 13, !dbg !11087
  store i32 %conv4, i32* %flags, align 4, !dbg !11088, !tbaa !3128
  %20 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !11089, !tbaa !2522
  %21 = bitcast %struct.StgDictObject* %20 to %struct._object*, !dbg !11090
  %call5 = call %struct._object* @PyDict_GetItemString(%struct._object* %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.108, i32 0, i32 0)), !dbg !11091
  store %struct._object* %call5, %struct._object** %ob, align 8, !dbg !11092, !tbaa !2522
  %22 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11093, !tbaa !2522
  %tobool6 = icmp ne %struct._object* %22, null, !dbg !11093
  br i1 %tobool6, label %if.then.7, label %if.end.13, !dbg !11095

if.then.7:                                        ; preds = %if.end
  %23 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11096, !tbaa !2522
  %call8 = call %struct._object* @converters_from_argtypes(%struct._object* %23), !dbg !11098
  store %struct._object* %call8, %struct._object** %converters, align 8, !dbg !11099, !tbaa !2522
  %24 = load %struct._object*, %struct._object** %converters, align 8, !dbg !11100, !tbaa !2522
  %tobool9 = icmp ne %struct._object* %24, null, !dbg !11100
  br i1 %tobool9, label %if.end.11, label %if.then.10, !dbg !11102

if.then.10:                                       ; preds = %if.then.7
  br label %error, !dbg !11103

if.end.11:                                        ; preds = %if.then.7
  %25 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11104, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !11105
  %26 = load i64, i64* %ob_refcnt, align 8, !dbg !11106, !tbaa !2551
  %inc = add i64 %26, 1, !dbg !11106
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !11106, !tbaa !2551
  %27 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11107, !tbaa !2522
  %28 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !11108, !tbaa !2522
  %argtypes = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %28, i32 0, i32 9, !dbg !11109
  store %struct._object* %27, %struct._object** %argtypes, align 8, !dbg !11110, !tbaa !5754
  %29 = load %struct._object*, %struct._object** %converters, align 8, !dbg !11111, !tbaa !2522
  %30 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !11112, !tbaa !2522
  %converters12 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %30, i32 0, i32 10, !dbg !11113
  store %struct._object* %29, %struct._object** %converters12, align 8, !dbg !11114, !tbaa !5736
  br label %if.end.13, !dbg !11115

if.end.13:                                        ; preds = %if.end.11, %if.end
  %31 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !11116, !tbaa !2522
  %32 = bitcast %struct.StgDictObject* %31 to %struct._object*, !dbg !11117
  %call14 = call %struct._object* @PyDict_GetItemString(%struct._object* %32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.109, i32 0, i32 0)), !dbg !11118
  store %struct._object* %call14, %struct._object** %ob, align 8, !dbg !11119, !tbaa !2522
  %33 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11120, !tbaa !2522
  %tobool15 = icmp ne %struct._object* %33, null, !dbg !11120
  br i1 %tobool15, label %if.then.16, label %if.end.34, !dbg !11122

if.then.16:                                       ; preds = %if.end.13
  %34 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11123, !tbaa !2522
  %cmp17 = icmp ne %struct._object* %34, @_Py_NoneStruct, !dbg !11126
  br i1 %cmp17, label %land.lhs.true, label %if.end.25, !dbg !11127

land.lhs.true:                                    ; preds = %if.then.16
  %35 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11128, !tbaa !2522
  %call19 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %35), !dbg !11130
  %tobool20 = icmp ne %struct.StgDictObject* %call19, null, !dbg !11130
  br i1 %tobool20, label %if.end.25, label %land.lhs.true.21, !dbg !11131

land.lhs.true.21:                                 ; preds = %land.lhs.true
  %36 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11132, !tbaa !2522
  %call22 = call i32 @PyCallable_Check(%struct._object* %36), !dbg !11134
  %tobool23 = icmp ne i32 %call22, 0, !dbg !11134
  br i1 %tobool23, label %if.end.25, label %if.then.24, !dbg !11135

if.then.24:                                       ; preds = %land.lhs.true.21
  %37 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !11136, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %37, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.110, i32 0, i32 0)), !dbg !11138
  store i32 -1, i32* %retval, !dbg !11139
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11139

if.end.25:                                        ; preds = %land.lhs.true.21, %land.lhs.true, %if.then.16
  %38 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11140, !tbaa !2522
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0, !dbg !11141
  %39 = load i64, i64* %ob_refcnt26, align 8, !dbg !11142, !tbaa !2551
  %inc27 = add i64 %39, 1, !dbg !11142
  store i64 %inc27, i64* %ob_refcnt26, align 8, !dbg !11142, !tbaa !2551
  %40 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11143, !tbaa !2522
  %41 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !11144, !tbaa !2522
  %restype = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %41, i32 0, i32 11, !dbg !11145
  store %struct._object* %40, %struct._object** %restype, align 8, !dbg !11146, !tbaa !5725
  %42 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11147, !tbaa !2522
  %call28 = call %struct._object* @PyObject_GetAttrString(%struct._object* %42, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.111, i32 0, i32 0)), !dbg !11148
  %43 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !11149, !tbaa !2522
  %checker = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %43, i32 0, i32 12, !dbg !11150
  store %struct._object* %call28, %struct._object** %checker, align 8, !dbg !11151, !tbaa !5745
  %44 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict.addr, align 8, !dbg !11152, !tbaa !2522
  %checker29 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %44, i32 0, i32 12, !dbg !11154
  %45 = load %struct._object*, %struct._object** %checker29, align 8, !dbg !11154, !tbaa !5745
  %cmp30 = icmp eq %struct._object* %45, null, !dbg !11155
  br i1 %cmp30, label %if.then.32, label %if.end.33, !dbg !11156

if.then.32:                                       ; preds = %if.end.25
  call void @PyErr_Clear(), !dbg !11157
  br label %if.end.33, !dbg !11157

if.end.33:                                        ; preds = %if.then.32, %if.end.25
  br label %if.end.34, !dbg !11158

if.end.34:                                        ; preds = %if.end.33, %if.end.13
  store i32 0, i32* %retval, !dbg !11159
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11159

error:                                            ; preds = %if.then.10
  br label %do.body, !dbg !11160

do.body:                                          ; preds = %error
  %46 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !11161
  call void @llvm.lifetime.start(i64 8, i8* %46) #2, !dbg !11161
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1480, metadata !2526), !dbg !11163
  %47 = load %struct._object*, %struct._object** %converters, align 8, !dbg !11164, !tbaa !2522
  store %struct._object* %47, %struct._object** %_py_xdecref_tmp, align 8, !dbg !11163, !tbaa !2522
  %48 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !11165, !tbaa !2522
  %cmp35 = icmp ne %struct._object* %48, null, !dbg !11166
  br i1 %cmp35, label %if.then.37, label %if.end.45, !dbg !11167

if.then.37:                                       ; preds = %do.body
  br label %do.body.38, !dbg !11168

do.body.38:                                       ; preds = %if.then.37
  %49 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11170
  call void @llvm.lifetime.start(i64 8, i8* %49) #2, !dbg !11170
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1482, metadata !2526), !dbg !11172
  %50 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !11173, !tbaa !2522
  store %struct._object* %50, %struct._object** %_py_decref_tmp, align 8, !dbg !11172, !tbaa !2522
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11174, !tbaa !2522
  %ob_refcnt39 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0, !dbg !11176
  %52 = load i64, i64* %ob_refcnt39, align 8, !dbg !11177, !tbaa !2551
  %dec = add i64 %52, -1, !dbg !11177
  store i64 %dec, i64* %ob_refcnt39, align 8, !dbg !11177, !tbaa !2551
  %cmp40 = icmp ne i64 %dec, 0, !dbg !11178
  br i1 %cmp40, label %if.then.42, label %if.else, !dbg !11179

if.then.42:                                       ; preds = %do.body.38
  br label %if.end.44, !dbg !11180

if.else:                                          ; preds = %do.body.38
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11182, !tbaa !2522
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 1, !dbg !11184
  %54 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !11184, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %54, i32 0, i32 4, !dbg !11185
  %55 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11185, !tbaa !2590
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11186, !tbaa !2522
  call void %55(%struct._object* %56), !dbg !11187
  br label %if.end.44

if.end.44:                                        ; preds = %if.else, %if.then.42
  %57 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11188
  call void @llvm.lifetime.end(i64 8, i8* %57) #2, !dbg !11188
  br label %do.cond, !dbg !11190

do.cond:                                          ; preds = %if.end.44
  br label %do.end, !dbg !11191

do.end:                                           ; preds = %do.cond
  br label %if.end.45, !dbg !11193

if.end.45:                                        ; preds = %do.end, %do.body
  %58 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !11195
  call void @llvm.lifetime.end(i64 8, i8* %58) #2, !dbg !11195
  br label %do.cond.46, !dbg !11198

do.cond.46:                                       ; preds = %if.end.45
  br label %do.end.47, !dbg !11199

do.end.47:                                        ; preds = %do.cond.46
  store i32 -1, i32* %retval, !dbg !11201
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11201

cleanup:                                          ; preds = %do.end.47, %if.end.34, %if.then.24, %if.then
  %59 = bitcast %struct._object** %converters to i8*, !dbg !11202
  call void @llvm.lifetime.end(i64 8, i8* %59) #2, !dbg !11202
  %60 = bitcast %struct._object** %ob to i8*, !dbg !11202
  call void @llvm.lifetime.end(i64 8, i8* %60) #2, !dbg !11202
  %61 = load i32, i32* %retval, !dbg !11202
  ret i32 %61, !dbg !11202
}

declare i64 @PyLong_AsLong(%struct._object*) #3

; Function Attrs: uwtable
define internal %struct._object* @converters_from_argtypes(%struct._object* %ob) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ob.addr = alloca %struct._object*, align 8
  %converters = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %nArgs = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %tp = alloca %struct._object*, align 8
  %cnv = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp19 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  store %struct._object* %ob, %struct._object** %ob.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %ob.addr, metadata !1487, metadata !2526), !dbg !11203
  %0 = bitcast %struct._object** %converters to i8*, !dbg !11204
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11204
  call void @llvm.dbg.declare(metadata %struct._object** %converters, metadata !1488, metadata !2526), !dbg !11205
  %1 = bitcast i64* %i to i8*, !dbg !11206
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !11206
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1489, metadata !2526), !dbg !11207
  %2 = bitcast i64* %nArgs to i8*, !dbg !11208
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !11208
  call void @llvm.dbg.declare(metadata i64* %nArgs, metadata !1490, metadata !2526), !dbg !11209
  %3 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !11210, !tbaa !2522
  %call = call %struct._object* @PySequence_Tuple(%struct._object* %3), !dbg !11211
  store %struct._object* %call, %struct._object** %ob.addr, align 8, !dbg !11212, !tbaa !2522
  %4 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !11213, !tbaa !2522
  %tobool = icmp ne %struct._object* %4, null, !dbg !11213
  br i1 %tobool, label %if.end, label %if.then, !dbg !11215

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !11216, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.112, i32 0, i32 0)), !dbg !11218
  store %struct._object* null, %struct._object** %retval, !dbg !11219
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.46, !dbg !11219

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !11220, !tbaa !2522
  %7 = bitcast %struct._object* %6 to %struct.PyVarObject*, !dbg !11221
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1, !dbg !11222
  %8 = load i64, i64* %ob_size, align 8, !dbg !11222, !tbaa !5784
  store i64 %8, i64* %nArgs, align 8, !dbg !11223, !tbaa !2704
  %9 = load i64, i64* %nArgs, align 8, !dbg !11224, !tbaa !2704
  %call1 = call %struct._object* @PyTuple_New(i64 %9), !dbg !11225
  store %struct._object* %call1, %struct._object** %converters, align 8, !dbg !11226, !tbaa !2522
  %10 = load %struct._object*, %struct._object** %converters, align 8, !dbg !11227, !tbaa !2522
  %tobool2 = icmp ne %struct._object* %10, null, !dbg !11227
  br i1 %tobool2, label %if.end.4, label %if.then.3, !dbg !11229

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !11230
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.46, !dbg !11230

if.end.4:                                         ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !11231, !tbaa !2704
  br label %for.cond, !dbg !11232

for.cond:                                         ; preds = %for.inc, %if.end.4
  %11 = load i64, i64* %i, align 8, !dbg !11233, !tbaa !2704
  %12 = load i64, i64* %nArgs, align 8, !dbg !11236, !tbaa !2704
  %cmp = icmp slt i64 %11, %12, !dbg !11237
  br i1 %cmp, label %for.body, label %for.end, !dbg !11238

for.body:                                         ; preds = %for.cond
  %13 = bitcast %struct._object** %tp to i8*, !dbg !11239
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !11239
  call void @llvm.dbg.declare(metadata %struct._object** %tp, metadata !1491, metadata !2526), !dbg !11240
  %14 = load i64, i64* %i, align 8, !dbg !11241, !tbaa !2704
  %15 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !11242, !tbaa !2522
  %16 = bitcast %struct._object* %15 to %struct.PyTupleObject*, !dbg !11243
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %16, i32 0, i32 1, !dbg !11244
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %14, !dbg !11245
  %17 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !11245, !tbaa !2522
  store %struct._object* %17, %struct._object** %tp, align 8, !dbg !11240, !tbaa !2522
  %18 = bitcast %struct._object** %cnv to i8*, !dbg !11246
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !11246
  call void @llvm.dbg.declare(metadata %struct._object** %cnv, metadata !1495, metadata !2526), !dbg !11247
  %19 = load %struct._object*, %struct._object** %tp, align 8, !dbg !11248, !tbaa !2522
  %call5 = call %struct._object* @PyObject_GetAttrString(%struct._object* %19, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i32 0, i32 0)), !dbg !11249
  store %struct._object* %call5, %struct._object** %cnv, align 8, !dbg !11247, !tbaa !2522
  %20 = load %struct._object*, %struct._object** %cnv, align 8, !dbg !11250, !tbaa !2522
  %tobool6 = icmp ne %struct._object* %20, null, !dbg !11250
  br i1 %tobool6, label %if.end.8, label %if.then.7, !dbg !11252

if.then.7:                                        ; preds = %for.body
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11253

if.end.8:                                         ; preds = %for.body
  %21 = load %struct._object*, %struct._object** %cnv, align 8, !dbg !11254, !tbaa !2522
  %22 = load i64, i64* %i, align 8, !dbg !11255, !tbaa !2704
  %23 = load %struct._object*, %struct._object** %converters, align 8, !dbg !11256, !tbaa !2522
  %24 = bitcast %struct._object* %23 to %struct.PyTupleObject*, !dbg !11257
  %ob_item9 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %24, i32 0, i32 1, !dbg !11258
  %arrayidx10 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item9, i32 0, i64 %22, !dbg !11259
  store %struct._object* %21, %struct._object** %arrayidx10, align 8, !dbg !11260, !tbaa !2522
  store i32 0, i32* %cleanup.dest.slot, !dbg !11261
  br label %cleanup, !dbg !11261

cleanup:                                          ; preds = %if.end.8, %if.then.7
  %25 = bitcast %struct._object** %cnv to i8*, !dbg !11262
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !11262
  %26 = bitcast %struct._object** %tp to i8*, !dbg !11262
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !11262
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 5
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 5
  br i1 %SwitchLeaf2, label %argtypes_error_1, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !11263

for.inc:                                          ; preds = %cleanup.cont
  %27 = load i64, i64* %i, align 8, !dbg !11264, !tbaa !2704
  %inc = add i64 %27, 1, !dbg !11264
  store i64 %inc, i64* %i, align 8, !dbg !11264, !tbaa !2704
  br label %for.cond, !dbg !11265

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !11266

do.body:                                          ; preds = %for.end
  %28 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11267
  call void @llvm.lifetime.start(i64 8, i8* %28) #2, !dbg !11267
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1496, metadata !2526), !dbg !11269
  %29 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !11270, !tbaa !2522
  store %struct._object* %29, %struct._object** %_py_decref_tmp, align 8, !dbg !11269, !tbaa !2522
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11271, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 0, !dbg !11273
  %31 = load i64, i64* %ob_refcnt, align 8, !dbg !11274, !tbaa !2551
  %dec = add i64 %31, -1, !dbg !11274
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11274, !tbaa !2551
  %cmp12 = icmp ne i64 %dec, 0, !dbg !11275
  br i1 %cmp12, label %if.then.13, label %if.else, !dbg !11276

if.then.13:                                       ; preds = %do.body
  br label %if.end.14, !dbg !11277

if.else:                                          ; preds = %do.body
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11279, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 1, !dbg !11281
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11281, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 4, !dbg !11282
  %34 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11282, !tbaa !2590
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11283, !tbaa !2522
  call void %34(%struct._object* %35), !dbg !11284
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.13
  %36 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11285
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !11285
  br label %do.cond, !dbg !11287

do.cond:                                          ; preds = %if.end.14
  br label %do.end, !dbg !11288

do.end:                                           ; preds = %do.cond
  %37 = load %struct._object*, %struct._object** %converters, align 8, !dbg !11290, !tbaa !2522
  store %struct._object* %37, %struct._object** %retval, !dbg !11291
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.46, !dbg !11291

argtypes_error_1:                                 ; preds = %LeafBlock.1
  br label %do.body.15, !dbg !11292

do.body.15:                                       ; preds = %argtypes_error_1
  %38 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !11293
  call void @llvm.lifetime.start(i64 8, i8* %38) #2, !dbg !11293
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1498, metadata !2526), !dbg !11295
  %39 = load %struct._object*, %struct._object** %converters, align 8, !dbg !11296, !tbaa !2522
  store %struct._object* %39, %struct._object** %_py_xdecref_tmp, align 8, !dbg !11295, !tbaa !2522
  %40 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !11297, !tbaa !2522
  %cmp16 = icmp ne %struct._object* %40, null, !dbg !11298
  br i1 %cmp16, label %if.then.17, label %if.end.30, !dbg !11299

if.then.17:                                       ; preds = %do.body.15
  br label %do.body.18, !dbg !11300

do.body.18:                                       ; preds = %if.then.17
  %41 = bitcast %struct._object** %_py_decref_tmp19 to i8*, !dbg !11302
  call void @llvm.lifetime.start(i64 8, i8* %41) #2, !dbg !11302
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp19, metadata !1500, metadata !2526), !dbg !11304
  %42 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !11305, !tbaa !2522
  store %struct._object* %42, %struct._object** %_py_decref_tmp19, align 8, !dbg !11304, !tbaa !2522
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !11306, !tbaa !2522
  %ob_refcnt20 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 0, !dbg !11308
  %44 = load i64, i64* %ob_refcnt20, align 8, !dbg !11309, !tbaa !2551
  %dec21 = add i64 %44, -1, !dbg !11309
  store i64 %dec21, i64* %ob_refcnt20, align 8, !dbg !11309, !tbaa !2551
  %cmp22 = icmp ne i64 %dec21, 0, !dbg !11310
  br i1 %cmp22, label %if.then.23, label %if.else.24, !dbg !11311

if.then.23:                                       ; preds = %do.body.18
  br label %if.end.27, !dbg !11312

if.else.24:                                       ; preds = %do.body.18
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !11314, !tbaa !2522
  %ob_type25 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !11316
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !11316, !tbaa !2588
  %tp_dealloc26 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 4, !dbg !11317
  %47 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc26, align 8, !dbg !11317, !tbaa !2590
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp19, align 8, !dbg !11318, !tbaa !2522
  call void %47(%struct._object* %48), !dbg !11319
  br label %if.end.27

if.end.27:                                        ; preds = %if.else.24, %if.then.23
  %49 = bitcast %struct._object** %_py_decref_tmp19 to i8*, !dbg !11320
  call void @llvm.lifetime.end(i64 8, i8* %49) #2, !dbg !11320
  br label %do.cond.28, !dbg !11322

do.cond.28:                                       ; preds = %if.end.27
  br label %do.end.29, !dbg !11323

do.end.29:                                        ; preds = %do.cond.28
  br label %if.end.30, !dbg !11325

if.end.30:                                        ; preds = %do.end.29, %do.body.15
  %50 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !11327
  call void @llvm.lifetime.end(i64 8, i8* %50) #2, !dbg !11327
  br label %do.cond.31, !dbg !11330

do.cond.31:                                       ; preds = %if.end.30
  br label %do.end.32, !dbg !11331

do.end.32:                                        ; preds = %do.cond.31
  br label %do.body.33, !dbg !11333

do.body.33:                                       ; preds = %do.end.32
  %51 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !11334
  call void @llvm.lifetime.start(i64 8, i8* %51) #2, !dbg !11334
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !1503, metadata !2526), !dbg !11336
  %52 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !11337, !tbaa !2522
  store %struct._object* %52, %struct._object** %_py_decref_tmp34, align 8, !dbg !11336, !tbaa !2522
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !11338, !tbaa !2522
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0, !dbg !11340
  %54 = load i64, i64* %ob_refcnt35, align 8, !dbg !11341, !tbaa !2551
  %dec36 = add i64 %54, -1, !dbg !11341
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !11341, !tbaa !2551
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !11342
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !11343

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !11344

if.else.39:                                       ; preds = %do.body.33
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !11346, !tbaa !2522
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 1, !dbg !11348
  %56 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !11348, !tbaa !2588
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %56, i32 0, i32 4, !dbg !11349
  %57 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !11349, !tbaa !2590
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !11350, !tbaa !2522
  call void %57(%struct._object* %58), !dbg !11351
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %59 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !11352
  call void @llvm.lifetime.end(i64 8, i8* %59) #2, !dbg !11352
  br label %do.cond.43, !dbg !11353

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !11354

do.end.44:                                        ; preds = %do.cond.43
  %60 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !11356, !tbaa !2522
  %61 = load i64, i64* %i, align 8, !dbg !11357, !tbaa !2704
  %add = add i64 %61, 1, !dbg !11358
  %call45 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %60, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.113, i32 0, i32 0), i64 %add), !dbg !11359
  store %struct._object* null, %struct._object** %retval, !dbg !11360
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.46, !dbg !11360

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.46

cleanup.46:                                       ; preds = %NewDefault, %do.end.44, %do.end, %if.then.3, %if.then
  %62 = bitcast i64* %nArgs to i8*, !dbg !11361
  call void @llvm.lifetime.end(i64 8, i8* %62) #2, !dbg !11361
  %63 = bitcast i64* %i to i8*, !dbg !11361
  call void @llvm.lifetime.end(i64 8, i8* %63) #2, !dbg !11361
  %64 = bitcast %struct._object** %converters to i8*, !dbg !11361
  call void @llvm.lifetime.end(i64 8, i8* %64) #2, !dbg !11361
  %65 = load %struct._object*, %struct._object** %retval, !dbg !11361
  ret %struct._object* %65, !dbg !11361
}

declare i32 @PyCallable_Check(%struct._object*) #3

declare %struct._object* @PySequence_Tuple(%struct._object*) #3

; Function Attrs: uwtable
define internal i32 @PyCData_NewGetBuffer(%struct._object* %myself, %struct.bufferinfo* %view, i32 %flags) #0 {
entry:
  %retval = alloca i32, align 4
  %myself.addr = alloca %struct._object*, align 8
  %view.addr = alloca %struct.bufferinfo*, align 8
  %flags.addr = alloca i32, align 4
  %self = alloca %struct.tagCDataObject*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !1513, metadata !2526), !dbg !11362
  store %struct.bufferinfo* %view, %struct.bufferinfo** %view.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.bufferinfo** %view.addr, metadata !1514, metadata !2526), !dbg !11363
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2611
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !1515, metadata !2526), !dbg !11364
  %0 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !11365
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11365
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self, metadata !1516, metadata !2526), !dbg !11366
  %1 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !11367, !tbaa !2522
  %2 = bitcast %struct._object* %1 to %struct.tagCDataObject*, !dbg !11368
  store %struct.tagCDataObject* %2, %struct.tagCDataObject** %self, align 8, !dbg !11366, !tbaa !2522
  %3 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !11369
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !11369
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !1517, metadata !2526), !dbg !11370
  %4 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !11371, !tbaa !2522
  %call = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %4), !dbg !11372
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !11370, !tbaa !2522
  %5 = bitcast i64* %i to i8*, !dbg !11373
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !11373
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1518, metadata !2526), !dbg !11374
  %6 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !11375, !tbaa !2522
  %cmp = icmp eq %struct.bufferinfo* %6, null, !dbg !11377
  br i1 %cmp, label %if.then, label %if.end, !dbg !11378

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !11379
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11381

if.end:                                           ; preds = %entry
  %7 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !11382, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %7, i32 0, i32 1, !dbg !11383
  %8 = load i8*, i8** %b_ptr, align 8, !dbg !11383, !tbaa !4817
  %9 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !11384, !tbaa !2522
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %9, i32 0, i32 0, !dbg !11385
  store i8* %8, i8** %buf, align 8, !dbg !11386, !tbaa !9041
  %10 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !11387, !tbaa !2522
  %11 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !11388, !tbaa !2522
  %obj = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %11, i32 0, i32 1, !dbg !11389
  store %struct._object* %10, %struct._object** %obj, align 8, !dbg !11390, !tbaa !11391
  %12 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !11392, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !11393
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !11394, !tbaa !2551
  %inc = add i64 %13, 1, !dbg !11394
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !11394, !tbaa !2551
  %14 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !11395, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %14, i32 0, i32 4, !dbg !11396
  %15 = load i64, i64* %b_size, align 8, !dbg !11396, !tbaa !4918
  %16 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !11397, !tbaa !2522
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %16, i32 0, i32 2, !dbg !11398
  store i64 %15, i64* %len, align 8, !dbg !11399, !tbaa !9037
  %17 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !11400, !tbaa !2522
  %readonly = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %17, i32 0, i32 4, !dbg !11401
  store i32 0, i32* %readonly, align 4, !dbg !11402, !tbaa !11403
  %18 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !11404, !tbaa !2522
  %format = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %18, i32 0, i32 14, !dbg !11405
  %19 = load i8*, i8** %format, align 8, !dbg !11405, !tbaa !3176
  %tobool = icmp ne i8* %19, null, !dbg !11404
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11404

cond.true:                                        ; preds = %if.end
  %20 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !11406, !tbaa !2522
  %format1 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %20, i32 0, i32 14, !dbg !11408
  %21 = load i8*, i8** %format1, align 8, !dbg !11408, !tbaa !3176
  br label %cond.end, !dbg !11404

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !11409

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %21, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71, i32 0, i32 0), %cond.false ], !dbg !11404
  %22 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !11411, !tbaa !2522
  %format2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %22, i32 0, i32 6, !dbg !11414
  store i8* %cond, i8** %format2, align 8, !dbg !11415, !tbaa !11416
  %23 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !11417, !tbaa !2522
  %ndim = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %23, i32 0, i32 15, !dbg !11418
  %24 = load i32, i32* %ndim, align 4, !dbg !11418, !tbaa !3194
  %25 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !11419, !tbaa !2522
  %ndim3 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %25, i32 0, i32 5, !dbg !11420
  store i32 %24, i32* %ndim3, align 4, !dbg !11421, !tbaa !11422
  %26 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !11423, !tbaa !2522
  %shape = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %26, i32 0, i32 16, !dbg !11424
  %27 = load i64*, i64** %shape, align 8, !dbg !11424, !tbaa !3188
  %28 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !11425, !tbaa !2522
  %shape4 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %28, i32 0, i32 7, !dbg !11426
  store i64* %27, i64** %shape4, align 8, !dbg !11427, !tbaa !11428
  %29 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !11429, !tbaa !2522
  %b_size5 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %29, i32 0, i32 4, !dbg !11430
  %30 = load i64, i64* %b_size5, align 8, !dbg !11430, !tbaa !4918
  %31 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !11431, !tbaa !2522
  %itemsize = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %31, i32 0, i32 3, !dbg !11432
  store i64 %30, i64* %itemsize, align 8, !dbg !11433, !tbaa !11434
  %32 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !11435, !tbaa !2522
  %itemsize6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %32, i32 0, i32 3, !dbg !11437
  %33 = load i64, i64* %itemsize6, align 8, !dbg !11437, !tbaa !11434
  %tobool7 = icmp ne i64 %33, 0, !dbg !11435
  br i1 %tobool7, label %if.then.8, label %if.end.15, !dbg !11438

if.then.8:                                        ; preds = %cond.end
  store i64 0, i64* %i, align 8, !dbg !11439, !tbaa !2704
  br label %for.cond, !dbg !11442

for.cond:                                         ; preds = %for.inc, %if.then.8
  %34 = load i64, i64* %i, align 8, !dbg !11443, !tbaa !2704
  %35 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !11447, !tbaa !2522
  %ndim9 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %35, i32 0, i32 5, !dbg !11448
  %36 = load i32, i32* %ndim9, align 4, !dbg !11448, !tbaa !11422
  %conv = sext i32 %36 to i64, !dbg !11447
  %cmp10 = icmp slt i64 %34, %conv, !dbg !11449
  br i1 %cmp10, label %for.body, label %for.end, !dbg !11450

for.body:                                         ; preds = %for.cond
  %37 = load i64, i64* %i, align 8, !dbg !11451, !tbaa !2704
  %38 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !11453, !tbaa !2522
  %shape12 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %38, i32 0, i32 16, !dbg !11454
  %39 = load i64*, i64** %shape12, align 8, !dbg !11454, !tbaa !3188
  %arrayidx = getelementptr i64, i64* %39, i64 %37, !dbg !11453
  %40 = load i64, i64* %arrayidx, align 8, !dbg !11453, !tbaa !2704
  %41 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !11455, !tbaa !2522
  %itemsize13 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %41, i32 0, i32 3, !dbg !11456
  %42 = load i64, i64* %itemsize13, align 8, !dbg !11457, !tbaa !11434
  %div = sdiv i64 %42, %40, !dbg !11457
  store i64 %div, i64* %itemsize13, align 8, !dbg !11457, !tbaa !11434
  br label %for.inc, !dbg !11458

for.inc:                                          ; preds = %for.body
  %43 = load i64, i64* %i, align 8, !dbg !11459, !tbaa !2704
  %inc14 = add i64 %43, 1, !dbg !11459
  store i64 %inc14, i64* %i, align 8, !dbg !11459, !tbaa !2704
  br label %for.cond, !dbg !11460

for.end:                                          ; preds = %for.cond
  br label %if.end.15, !dbg !11461

if.end.15:                                        ; preds = %for.end, %cond.end
  %44 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !11462, !tbaa !2522
  %strides = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %44, i32 0, i32 8, !dbg !11463
  store i64* null, i64** %strides, align 8, !dbg !11464, !tbaa !11465
  %45 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !11466, !tbaa !2522
  %suboffsets = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %45, i32 0, i32 9, !dbg !11467
  store i64* null, i64** %suboffsets, align 8, !dbg !11468, !tbaa !11469
  %46 = load %struct.bufferinfo*, %struct.bufferinfo** %view.addr, align 8, !dbg !11470, !tbaa !2522
  %internal = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %46, i32 0, i32 10, !dbg !11471
  store i8* null, i8** %internal, align 8, !dbg !11472, !tbaa !11473
  store i32 0, i32* %retval, !dbg !11474
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11474

cleanup:                                          ; preds = %if.end.15, %if.then
  %47 = bitcast i64* %i to i8*, !dbg !11475
  call void @llvm.lifetime.end(i64 8, i8* %47) #2, !dbg !11475
  %48 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !11475
  call void @llvm.lifetime.end(i64 8, i8* %48) #2, !dbg !11475
  %49 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !11475
  call void @llvm.lifetime.end(i64 8, i8* %49) #2, !dbg !11475
  %50 = load i32, i32* %retval, !dbg !11475
  ret i32 %50, !dbg !11475
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @PyCData_from_outparam(%struct._object* %self, %struct._object* %args) #7 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1553, metadata !2526), !dbg !11476
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1554, metadata !2526), !dbg !11477
  %0 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !11478, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 0, !dbg !11479
  %1 = load i64, i64* %ob_refcnt, align 8, !dbg !11480, !tbaa !2551
  %inc = add i64 %1, 1, !dbg !11480
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !11480, !tbaa !2551
  %2 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !11481, !tbaa !2522
  ret %struct._object* %2, !dbg !11482
}

; Function Attrs: uwtable
define internal %struct._object* @PyCData_reduce(%struct._object* %myself, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %myself.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %self = alloca %struct.tagCDataObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !1557, metadata !2526), !dbg !11483
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1558, metadata !2526), !dbg !11484
  %0 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !11485
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11485
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self, metadata !1559, metadata !2526), !dbg !11486
  %1 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !11487, !tbaa !2522
  %2 = bitcast %struct._object* %1 to %struct.tagCDataObject*, !dbg !11488
  store %struct.tagCDataObject* %2, %struct.tagCDataObject** %self, align 8, !dbg !11486, !tbaa !2522
  %3 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !11489, !tbaa !2522
  %call = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %3), !dbg !11491
  %flags = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %call, i32 0, i32 13, !dbg !11492
  %4 = load i32, i32* %flags, align 4, !dbg !11492, !tbaa !3128
  %and = and i32 %4, 768, !dbg !11493
  %tobool = icmp ne i32 %and, 0, !dbg !11493
  br i1 %tobool, label %if.then, label %if.end, !dbg !11494

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !11495, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.118, i32 0, i32 0)), !dbg !11497
  store %struct._object* null, %struct._object** %retval, !dbg !11498
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11498

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** @_unpickle, align 8, !dbg !11499, !tbaa !2522
  %7 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !11500, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !11501
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11501, !tbaa !2588
  %9 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !11502, !tbaa !2522
  %call1 = call %struct._object* @PyObject_GetAttrString(%struct._object* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.120, i32 0, i32 0)), !dbg !11503
  %10 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !11504, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %10, i32 0, i32 1, !dbg !11505
  %11 = load i8*, i8** %b_ptr, align 8, !dbg !11505, !tbaa !4817
  %12 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !11506, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %12, i32 0, i32 4, !dbg !11507
  %13 = load i64, i64* %b_size, align 8, !dbg !11507, !tbaa !4918
  %call2 = call %struct._object* @PyBytes_FromStringAndSize(i8* %11, i64 %13), !dbg !11508
  %call3 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.119, i32 0, i32 0), %struct._object* %6, %struct._typeobject* %8, %struct._object* %call1, %struct._object* %call2), !dbg !11509
  store %struct._object* %call3, %struct._object** %retval, !dbg !11510
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11510

cleanup:                                          ; preds = %if.end, %if.then
  %14 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !11511
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !11511
  %15 = load %struct._object*, %struct._object** %retval, !dbg !11511
  ret %struct._object* %15, !dbg !11511
}

; Function Attrs: uwtable
define internal %struct._object* @PyCData_setstate(%struct._object* %myself, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %myself.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %data = alloca i8*, align 8
  %len = alloca i64, align 8
  %res = alloca i32, align 4
  %dict = alloca %struct._object*, align 8
  %mydict = alloca %struct._object*, align 8
  %self = alloca %struct.tagCDataObject*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !1562, metadata !2526), !dbg !11512
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1563, metadata !2526), !dbg !11513
  %0 = bitcast i8** %data to i8*, !dbg !11514
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11514
  call void @llvm.dbg.declare(metadata i8** %data, metadata !1564, metadata !2526), !dbg !11515
  %1 = bitcast i64* %len to i8*, !dbg !11516
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !11516
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1565, metadata !2526), !dbg !11517
  %2 = bitcast i32* %res to i8*, !dbg !11518
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !11518
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1566, metadata !2526), !dbg !11519
  %3 = bitcast %struct._object** %dict to i8*, !dbg !11520
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !11520
  call void @llvm.dbg.declare(metadata %struct._object** %dict, metadata !1567, metadata !2526), !dbg !11521
  %4 = bitcast %struct._object** %mydict to i8*, !dbg !11520
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !11520
  call void @llvm.dbg.declare(metadata %struct._object** %mydict, metadata !1568, metadata !2526), !dbg !11522
  %5 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !11523
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !11523
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self, metadata !1569, metadata !2526), !dbg !11524
  %6 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !11525, !tbaa !2522
  %7 = bitcast %struct._object* %6 to %struct.tagCDataObject*, !dbg !11526
  store %struct.tagCDataObject* %7, %struct.tagCDataObject** %self, align 8, !dbg !11524, !tbaa !2522
  %8 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !11527, !tbaa !2522
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.121, i32 0, i32 0), %struct._object** %dict, i8** %data, i64* %len), !dbg !11529
  %tobool = icmp ne i32 %call, 0, !dbg !11529
  br i1 %tobool, label %if.end, label %if.then, !dbg !11530

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !11531
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11531

if.end:                                           ; preds = %entry
  %9 = load i64, i64* %len, align 8, !dbg !11532, !tbaa !2704
  %10 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !11534, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %10, i32 0, i32 4, !dbg !11535
  %11 = load i64, i64* %b_size, align 8, !dbg !11535, !tbaa !4918
  %cmp = icmp sgt i64 %9, %11, !dbg !11536
  br i1 %cmp, label %if.then.1, label %if.end.3, !dbg !11537

if.then.1:                                        ; preds = %if.end
  %12 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !11538, !tbaa !2522
  %b_size2 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %12, i32 0, i32 4, !dbg !11539
  %13 = load i64, i64* %b_size2, align 8, !dbg !11539, !tbaa !4918
  store i64 %13, i64* %len, align 8, !dbg !11540, !tbaa !2704
  br label %if.end.3, !dbg !11541

if.end.3:                                         ; preds = %if.then.1, %if.end
  %14 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !11542, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %14, i32 0, i32 1, !dbg !11543
  %15 = load i8*, i8** %b_ptr, align 8, !dbg !11543, !tbaa !4817
  %16 = load i8*, i8** %data, align 8, !dbg !11544, !tbaa !2522
  %17 = load i64, i64* %len, align 8, !dbg !11545, !tbaa !2704
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %15, i8* %16, i64 %17, i32 1, i1 false), !dbg !11546
  %18 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !11547, !tbaa !2522
  %call4 = call %struct._object* @PyObject_GetAttrString(%struct._object* %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.120, i32 0, i32 0)), !dbg !11548
  store %struct._object* %call4, %struct._object** %mydict, align 8, !dbg !11549, !tbaa !2522
  %19 = load %struct._object*, %struct._object** %mydict, align 8, !dbg !11550, !tbaa !2522
  %20 = load %struct._object*, %struct._object** %dict, align 8, !dbg !11551, !tbaa !2522
  %call5 = call i32 @PyDict_Update(%struct._object* %19, %struct._object* %20), !dbg !11552
  store i32 %call5, i32* %res, align 4, !dbg !11553, !tbaa !2611
  br label %do.body, !dbg !11554

do.body:                                          ; preds = %if.end.3
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11555
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !11555
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1570, metadata !2526), !dbg !11557
  %22 = load %struct._object*, %struct._object** %mydict, align 8, !dbg !11558, !tbaa !2522
  store %struct._object* %22, %struct._object** %_py_decref_tmp, align 8, !dbg !11557, !tbaa !2522
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11559, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !11561
  %24 = load i64, i64* %ob_refcnt, align 8, !dbg !11562, !tbaa !2551
  %dec = add i64 %24, -1, !dbg !11562
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11562, !tbaa !2551
  %cmp6 = icmp ne i64 %dec, 0, !dbg !11563
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !11564

if.then.7:                                        ; preds = %do.body
  br label %if.end.8, !dbg !11565

if.else:                                          ; preds = %do.body
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11567, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !11569
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11569, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !11570
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11570, !tbaa !2590
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11571, !tbaa !2522
  call void %27(%struct._object* %28), !dbg !11572
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  %29 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11573
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !11573
  br label %do.cond, !dbg !11575

do.cond:                                          ; preds = %if.end.8
  br label %do.end, !dbg !11576

do.end:                                           ; preds = %do.cond
  %30 = load i32, i32* %res, align 4, !dbg !11578, !tbaa !2611
  %cmp9 = icmp eq i32 %30, -1, !dbg !11580
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !11581

if.then.10:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !11582
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11582

if.end.11:                                        ; preds = %do.end
  %31 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !11583, !tbaa !2551
  %inc = add i64 %31, 1, !dbg !11583
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !11583, !tbaa !2551
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !11584
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11584

cleanup:                                          ; preds = %if.end.11, %if.then.10, %if.then
  %32 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !11585
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !11585
  %33 = bitcast %struct._object** %mydict to i8*, !dbg !11585
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !11585
  %34 = bitcast %struct._object** %dict to i8*, !dbg !11585
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !11585
  %35 = bitcast i32* %res to i8*, !dbg !11585
  call void @llvm.lifetime.end(i64 4, i8* %35) #2, !dbg !11585
  %36 = bitcast i64* %len to i8*, !dbg !11585
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !11585
  %37 = bitcast i8** %data to i8*, !dbg !11585
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !11585
  %38 = load %struct._object*, %struct._object** %retval, !dbg !11585
  ret %struct._object* %38, !dbg !11585
}

declare %struct._object* @_Py_BuildValue_SizeT(i8*, ...) #3

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

declare void @_ctypes_extend_error(%struct._object*, i8*, ...) #3

; Function Attrs: uwtable
define internal %struct._object* @GetKeepedObjects(%struct.tagCDataObject* %target) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %target.addr = alloca %struct.tagCDataObject*, align 8
  %container = alloca %struct.tagCDataObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.tagCDataObject* %target, %struct.tagCDataObject** %target.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %target.addr, metadata !1606, metadata !2526), !dbg !11586
  %0 = bitcast %struct.tagCDataObject** %container to i8*, !dbg !11587
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11587
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %container, metadata !1607, metadata !2526), !dbg !11588
  %1 = load %struct.tagCDataObject*, %struct.tagCDataObject** %target.addr, align 8, !dbg !11589, !tbaa !2522
  %call = call %struct.tagCDataObject* @PyCData_GetContainer(%struct.tagCDataObject* %1), !dbg !11590
  store %struct.tagCDataObject* %call, %struct.tagCDataObject** %container, align 8, !dbg !11591, !tbaa !2522
  %2 = load %struct.tagCDataObject*, %struct.tagCDataObject** %container, align 8, !dbg !11592, !tbaa !2522
  %cmp = icmp eq %struct.tagCDataObject* %2, null, !dbg !11594
  br i1 %cmp, label %if.then, label %if.end, !dbg !11595

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !11596
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11596

if.end:                                           ; preds = %entry
  %3 = load %struct.tagCDataObject*, %struct.tagCDataObject** %container, align 8, !dbg !11597, !tbaa !2522
  %b_objects = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %3, i32 0, i32 7, !dbg !11598
  %4 = load %struct._object*, %struct._object** %b_objects, align 8, !dbg !11598, !tbaa !4706
  store %struct._object* %4, %struct._object** %retval, !dbg !11599
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11599

cleanup:                                          ; preds = %if.end, %if.then
  %5 = bitcast %struct.tagCDataObject** %container to i8*, !dbg !11600
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !11600
  %6 = load %struct._object*, %struct._object** %retval, !dbg !11600
  ret %struct._object* %6, !dbg !11600
}

; Function Attrs: uwtable
define internal %struct.tagCDataObject* @PyCData_GetContainer(%struct.tagCDataObject* %self) #0 {
entry:
  %retval = alloca %struct.tagCDataObject*, align 8
  %self.addr = alloca %struct.tagCDataObject*, align 8
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !1612, metadata !2526), !dbg !11601
  br label %while.cond, !dbg !11602

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !11603, !tbaa !2522
  %b_base = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %0, i32 0, i32 3, !dbg !11606
  %1 = load %struct.tagCDataObject*, %struct.tagCDataObject** %b_base, align 8, !dbg !11606, !tbaa !4736
  %tobool = icmp ne %struct.tagCDataObject* %1, null, !dbg !11602
  br i1 %tobool, label %while.body, label %while.end, !dbg !11602

while.body:                                       ; preds = %while.cond
  %2 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !11607, !tbaa !2522
  %b_base1 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %2, i32 0, i32 3, !dbg !11608
  %3 = load %struct.tagCDataObject*, %struct.tagCDataObject** %b_base1, align 8, !dbg !11608, !tbaa !4736
  store %struct.tagCDataObject* %3, %struct.tagCDataObject** %self.addr, align 8, !dbg !11609, !tbaa !2522
  br label %while.cond, !dbg !11602

while.end:                                        ; preds = %while.cond
  %4 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !11610, !tbaa !2522
  %b_objects = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %4, i32 0, i32 7, !dbg !11612
  %5 = load %struct._object*, %struct._object** %b_objects, align 8, !dbg !11612, !tbaa !4706
  %cmp = icmp eq %struct._object* %5, null, !dbg !11613
  br i1 %cmp, label %if.then, label %if.end.10, !dbg !11614

if.then:                                          ; preds = %while.end
  %6 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !11615, !tbaa !2522
  %b_length = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %6, i32 0, i32 5, !dbg !11618
  %7 = load i64, i64* %b_length, align 8, !dbg !11618, !tbaa !4912
  %tobool2 = icmp ne i64 %7, 0, !dbg !11615
  br i1 %tobool2, label %if.then.3, label %if.else, !dbg !11619

if.then.3:                                        ; preds = %if.then
  %call = call %struct._object* @PyDict_New(), !dbg !11620
  %8 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !11622, !tbaa !2522
  %b_objects4 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %8, i32 0, i32 7, !dbg !11623
  store %struct._object* %call, %struct._object** %b_objects4, align 8, !dbg !11624, !tbaa !4706
  %9 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !11625, !tbaa !2522
  %b_objects5 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %9, i32 0, i32 7, !dbg !11627
  %10 = load %struct._object*, %struct._object** %b_objects5, align 8, !dbg !11627, !tbaa !4706
  %cmp6 = icmp eq %struct._object* %10, null, !dbg !11628
  br i1 %cmp6, label %if.then.7, label %if.end, !dbg !11629

if.then.7:                                        ; preds = %if.then.3
  store %struct.tagCDataObject* null, %struct.tagCDataObject** %retval, !dbg !11630
  br label %return, !dbg !11630

if.end:                                           ; preds = %if.then.3
  br label %if.end.9, !dbg !11631

if.else:                                          ; preds = %if.then
  %11 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !11632, !tbaa !2551
  %inc = add i64 %11, 1, !dbg !11632
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !11632, !tbaa !2551
  %12 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !11634, !tbaa !2522
  %b_objects8 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %12, i32 0, i32 7, !dbg !11635
  store %struct._object* @_Py_NoneStruct, %struct._object** %b_objects8, align 8, !dbg !11636, !tbaa !4706
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.end
  br label %if.end.10, !dbg !11637

if.end.10:                                        ; preds = %if.end.9, %while.end
  %13 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !11638, !tbaa !2522
  store %struct.tagCDataObject* %13, %struct.tagCDataObject** %retval, !dbg !11639
  br label %return, !dbg !11639

return:                                           ; preds = %if.end.10, %if.then.7
  %14 = load %struct.tagCDataObject*, %struct.tagCDataObject** %retval, !dbg !11640
  ret %struct.tagCDataObject* %14, !dbg !11640
}

; Function Attrs: uwtable
define internal %struct._object* @unique_key(%struct.tagCDataObject* %target, i64 %index) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %target.addr = alloca %struct.tagCDataObject*, align 8
  %index.addr = alloca i64, align 8
  %string = alloca [256 x i8], align 16
  %cp = alloca i8*, align 8
  %bytes_left = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.tagCDataObject* %target, %struct.tagCDataObject** %target.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %target.addr, metadata !1650, metadata !2526), !dbg !11641
  store i64 %index, i64* %index.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !1651, metadata !2526), !dbg !11642
  %0 = bitcast [256 x i8]* %string to i8*, !dbg !11643
  call void @llvm.lifetime.start(i64 256, i8* %0) #2, !dbg !11643
  call void @llvm.dbg.declare(metadata [256 x i8]* %string, metadata !1652, metadata !2526), !dbg !11644
  %1 = bitcast i8** %cp to i8*, !dbg !11645
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !11645
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !1653, metadata !2526), !dbg !11646
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %string, i32 0, i32 0, !dbg !11647
  store i8* %arraydecay, i8** %cp, align 8, !dbg !11646, !tbaa !2522
  %2 = bitcast i64* %bytes_left to i8*, !dbg !11648
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !11648
  call void @llvm.dbg.declare(metadata i64* %bytes_left, metadata !1654, metadata !2526), !dbg !11649
  %3 = load i8*, i8** %cp, align 8, !dbg !11650, !tbaa !2522
  %4 = load i64, i64* %index.addr, align 8, !dbg !11651, !tbaa !2704
  %conv = trunc i64 %4 to i32, !dbg !11652
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.131, i32 0, i32 0), i32 %conv) #2, !dbg !11653
  %5 = load i8*, i8** %cp, align 8, !dbg !11654, !tbaa !2522
  %idx.ext = sext i32 %call to i64, !dbg !11654
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !11654
  store i8* %add.ptr, i8** %cp, align 8, !dbg !11654, !tbaa !2522
  br label %while.cond, !dbg !11655

while.cond:                                       ; preds = %if.end, %entry
  %6 = load %struct.tagCDataObject*, %struct.tagCDataObject** %target.addr, align 8, !dbg !11656, !tbaa !2522
  %b_base = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %6, i32 0, i32 3, !dbg !11659
  %7 = load %struct.tagCDataObject*, %struct.tagCDataObject** %b_base, align 8, !dbg !11659, !tbaa !4736
  %tobool = icmp ne %struct.tagCDataObject* %7, null, !dbg !11655
  br i1 %tobool, label %while.body, label %while.end, !dbg !11655

while.body:                                       ; preds = %while.cond
  %8 = load i8*, i8** %cp, align 8, !dbg !11660, !tbaa !2522
  %arraydecay1 = getelementptr inbounds [256 x i8], [256 x i8]* %string, i32 0, i32 0, !dbg !11662
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64, !dbg !11663
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay1 to i64, !dbg !11663
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11663
  %sub = sub i64 256, %sub.ptr.sub, !dbg !11664
  %sub2 = sub i64 %sub, 1, !dbg !11665
  store i64 %sub2, i64* %bytes_left, align 8, !dbg !11666, !tbaa !2704
  %9 = load i64, i64* %bytes_left, align 8, !dbg !11667, !tbaa !2704
  %cmp = icmp ult i64 %9, 16, !dbg !11669
  br i1 %cmp, label %if.then, label %if.end, !dbg !11670

if.then:                                          ; preds = %while.body
  %10 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !11671, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.132, i32 0, i32 0)), !dbg !11673
  store %struct._object* null, %struct._object** %retval, !dbg !11674
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11674

if.end:                                           ; preds = %while.body
  %11 = load i8*, i8** %cp, align 8, !dbg !11675, !tbaa !2522
  %12 = load %struct.tagCDataObject*, %struct.tagCDataObject** %target.addr, align 8, !dbg !11676, !tbaa !2522
  %b_index = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %12, i32 0, i32 6, !dbg !11677
  %13 = load i64, i64* %b_index, align 8, !dbg !11677, !tbaa !4941
  %conv4 = trunc i64 %13 to i32, !dbg !11678
  %call5 = call i32 (i8*, i8*, ...) @sprintf(i8* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.133, i32 0, i32 0), i32 %conv4) #2, !dbg !11679
  %14 = load i8*, i8** %cp, align 8, !dbg !11680, !tbaa !2522
  %idx.ext6 = sext i32 %call5 to i64, !dbg !11680
  %add.ptr7 = getelementptr i8, i8* %14, i64 %idx.ext6, !dbg !11680
  store i8* %add.ptr7, i8** %cp, align 8, !dbg !11680, !tbaa !2522
  %15 = load %struct.tagCDataObject*, %struct.tagCDataObject** %target.addr, align 8, !dbg !11681, !tbaa !2522
  %b_base8 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %15, i32 0, i32 3, !dbg !11682
  %16 = load %struct.tagCDataObject*, %struct.tagCDataObject** %b_base8, align 8, !dbg !11682, !tbaa !4736
  store %struct.tagCDataObject* %16, %struct.tagCDataObject** %target.addr, align 8, !dbg !11683, !tbaa !2522
  br label %while.cond, !dbg !11655

while.end:                                        ; preds = %while.cond
  %arraydecay9 = getelementptr inbounds [256 x i8], [256 x i8]* %string, i32 0, i32 0, !dbg !11684
  %17 = load i8*, i8** %cp, align 8, !dbg !11685, !tbaa !2522
  %arraydecay10 = getelementptr inbounds [256 x i8], [256 x i8]* %string, i32 0, i32 0, !dbg !11686
  %sub.ptr.lhs.cast11 = ptrtoint i8* %17 to i64, !dbg !11687
  %sub.ptr.rhs.cast12 = ptrtoint i8* %arraydecay10 to i64, !dbg !11687
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12, !dbg !11687
  %call14 = call %struct._object* @PyUnicode_FromStringAndSize(i8* %arraydecay9, i64 %sub.ptr.sub13), !dbg !11688
  store %struct._object* %call14, %struct._object** %retval, !dbg !11689
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11689

cleanup:                                          ; preds = %while.end, %if.then
  %18 = bitcast i64* %bytes_left to i8*, !dbg !11690
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !11690
  %19 = bitcast i8** %cp to i8*, !dbg !11690
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !11690
  %20 = bitcast [256 x i8]* %string to i8*, !dbg !11690
  call void @llvm.lifetime.end(i64 256, i8* %20) #2, !dbg !11690
  %21 = load %struct._object*, %struct._object** %retval, !dbg !11690
  ret %struct._object* %21, !dbg !11690
}

declare %struct._object* @PyUnicode_FromStringAndSize(i8*, i64) #3

declare %struct._object* @PyUnicode_FromFormat(i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @PyCFuncPtr_bool(%struct.PyCFuncPtrObject* %self) #7 {
entry:
  %self.addr = alloca %struct.PyCFuncPtrObject*, align 8
  store %struct.PyCFuncPtrObject* %self, %struct.PyCFuncPtrObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %self.addr, metadata !1669, metadata !2526), !dbg !11691
  %0 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !11692, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %0, i32 0, i32 1, !dbg !11693
  %1 = load i8*, i8** %b_ptr, align 8, !dbg !11693, !tbaa !5762
  %2 = bitcast i8* %1 to i8**, !dbg !11694
  %3 = load i8*, i8** %2, align 8, !dbg !11695, !tbaa !2522
  %cmp = icmp ne i8* %3, null, !dbg !11696
  %conv = zext i1 %cmp to i32, !dbg !11696
  ret i32 %conv, !dbg !11697
}

; Function Attrs: uwtable
define internal %struct._object* @_build_callargs(%struct.PyCFuncPtrObject* %self, %struct._object* %argtypes, %struct._object* %inargs, %struct._object* %kwds, i32* %poutmask, i32* %pinoutmask, i32* %pnumretvals) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyCFuncPtrObject*, align 8
  %argtypes.addr = alloca %struct._object*, align 8
  %inargs.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %poutmask.addr = alloca i32*, align 8
  %pinoutmask.addr = alloca i32*, align 8
  %pnumretvals.addr = alloca i32*, align 8
  %paramflags = alloca %struct._object*, align 8
  %callargs = alloca %struct._object*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %i = alloca i64, align 8
  %len = alloca i64, align 8
  %inargs_index = alloca i32, align 4
  %actual_args = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %item = alloca %struct._object*, align 8
  %ob = alloca %struct._object*, align 8
  %flag = alloca i32, align 4
  %name = alloca %struct._object*, align 8
  %defval = alloca %struct._object*, align 8
  %tsize = alloca i64, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.PyCFuncPtrObject* %self, %struct.PyCFuncPtrObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %self.addr, metadata !1720, metadata !2526), !dbg !11698
  store %struct._object* %argtypes, %struct._object** %argtypes.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %argtypes.addr, metadata !1721, metadata !2526), !dbg !11699
  store %struct._object* %inargs, %struct._object** %inargs.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %inargs.addr, metadata !1722, metadata !2526), !dbg !11700
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1723, metadata !2526), !dbg !11701
  store i32* %poutmask, i32** %poutmask.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i32** %poutmask.addr, metadata !1724, metadata !2526), !dbg !11702
  store i32* %pinoutmask, i32** %pinoutmask.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i32** %pinoutmask.addr, metadata !1725, metadata !2526), !dbg !11703
  store i32* %pnumretvals, i32** %pnumretvals.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i32** %pnumretvals.addr, metadata !1726, metadata !2526), !dbg !11704
  %0 = bitcast %struct._object** %paramflags to i8*, !dbg !11705
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11705
  call void @llvm.dbg.declare(metadata %struct._object** %paramflags, metadata !1727, metadata !2526), !dbg !11706
  %1 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !11707, !tbaa !2522
  %paramflags1 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %1, i32 0, i32 16, !dbg !11708
  %2 = load %struct._object*, %struct._object** %paramflags1, align 8, !dbg !11708, !tbaa !6162
  store %struct._object* %2, %struct._object** %paramflags, align 8, !dbg !11706, !tbaa !2522
  %3 = bitcast %struct._object** %callargs to i8*, !dbg !11709
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !11709
  call void @llvm.dbg.declare(metadata %struct._object** %callargs, metadata !1728, metadata !2526), !dbg !11710
  %4 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !11711
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !11711
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !1729, metadata !2526), !dbg !11712
  %5 = bitcast i64* %i to i8*, !dbg !11713
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !11713
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1730, metadata !2526), !dbg !11714
  %6 = bitcast i64* %len to i8*, !dbg !11713
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !11713
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1731, metadata !2526), !dbg !11715
  %7 = bitcast i32* %inargs_index to i8*, !dbg !11716
  call void @llvm.lifetime.start(i64 4, i8* %7) #2, !dbg !11716
  call void @llvm.dbg.declare(metadata i32* %inargs_index, metadata !1732, metadata !2526), !dbg !11717
  store i32 0, i32* %inargs_index, align 4, !dbg !11717, !tbaa !2611
  %8 = bitcast i64* %actual_args to i8*, !dbg !11718
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !11718
  call void @llvm.dbg.declare(metadata i64* %actual_args, metadata !1733, metadata !2526), !dbg !11719
  %9 = load i32*, i32** %poutmask.addr, align 8, !dbg !11720, !tbaa !2522
  store i32 0, i32* %9, align 4, !dbg !11721, !tbaa !2611
  %10 = load i32*, i32** %pinoutmask.addr, align 8, !dbg !11722, !tbaa !2522
  store i32 0, i32* %10, align 4, !dbg !11723, !tbaa !2611
  %11 = load i32*, i32** %pnumretvals.addr, align 8, !dbg !11724, !tbaa !2522
  store i32 0, i32* %11, align 4, !dbg !11725, !tbaa !2611
  %12 = load %struct._object*, %struct._object** %argtypes.addr, align 8, !dbg !11726, !tbaa !2522
  %cmp = icmp eq %struct._object* %12, null, !dbg !11728
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11729

lor.lhs.false:                                    ; preds = %entry
  %13 = load %struct._object*, %struct._object** %paramflags, align 8, !dbg !11730, !tbaa !2522
  %cmp2 = icmp eq %struct._object* %13, null, !dbg !11732
  br i1 %cmp2, label %if.then, label %lor.lhs.false.3, !dbg !11733

lor.lhs.false.3:                                  ; preds = %lor.lhs.false
  %14 = load %struct._object*, %struct._object** %argtypes.addr, align 8, !dbg !11734, !tbaa !2522
  %15 = bitcast %struct._object* %14 to %struct.PyVarObject*, !dbg !11736
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %15, i32 0, i32 1, !dbg !11737
  %16 = load i64, i64* %ob_size, align 8, !dbg !11737, !tbaa !5784
  %cmp4 = icmp eq i64 %16, 0, !dbg !11738
  br i1 %cmp4, label %if.then, label %if.end, !dbg !11739

if.then:                                          ; preds = %lor.lhs.false.3, %lor.lhs.false, %entry
  %17 = load %struct._object*, %struct._object** %inargs.addr, align 8, !dbg !11740, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !11742
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !11743, !tbaa !2551
  %inc = add i64 %18, 1, !dbg !11743
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !11743, !tbaa !2551
  %19 = load %struct._object*, %struct._object** %inargs.addr, align 8, !dbg !11744, !tbaa !2522
  store %struct._object* %19, %struct._object** %retval, !dbg !11745
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.124, !dbg !11745

if.end:                                           ; preds = %lor.lhs.false.3
  %20 = load %struct._object*, %struct._object** %argtypes.addr, align 8, !dbg !11746, !tbaa !2522
  %21 = bitcast %struct._object* %20 to %struct.PyVarObject*, !dbg !11747
  %ob_size5 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %21, i32 0, i32 1, !dbg !11748
  %22 = load i64, i64* %ob_size5, align 8, !dbg !11748, !tbaa !5784
  store i64 %22, i64* %len, align 8, !dbg !11749, !tbaa !2704
  %23 = load i64, i64* %len, align 8, !dbg !11750, !tbaa !2704
  %call = call %struct._object* @PyTuple_New(i64 %23), !dbg !11751
  store %struct._object* %call, %struct._object** %callargs, align 8, !dbg !11752, !tbaa !2522
  %24 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !11753, !tbaa !2522
  %cmp6 = icmp eq %struct._object* %24, null, !dbg !11755
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !11756

if.then.7:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !11757
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.124, !dbg !11757

if.end.8:                                         ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !11758, !tbaa !2704
  br label %for.cond, !dbg !11759

for.cond:                                         ; preds = %for.inc, %if.end.8
  %25 = load i64, i64* %i, align 8, !dbg !11760, !tbaa !2704
  %26 = load i64, i64* %len, align 8, !dbg !11763, !tbaa !2704
  %cmp9 = icmp slt i64 %25, %26, !dbg !11764
  br i1 %cmp9, label %for.body, label %for.end, !dbg !11765

for.body:                                         ; preds = %for.cond
  %27 = bitcast %struct._object** %item to i8*, !dbg !11766
  call void @llvm.lifetime.start(i64 8, i8* %27) #2, !dbg !11766
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !1734, metadata !2526), !dbg !11767
  %28 = load i64, i64* %i, align 8, !dbg !11768, !tbaa !2704
  %29 = load %struct._object*, %struct._object** %paramflags, align 8, !dbg !11769, !tbaa !2522
  %30 = bitcast %struct._object* %29 to %struct.PyTupleObject*, !dbg !11770
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %30, i32 0, i32 1, !dbg !11771
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %28, !dbg !11772
  %31 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !11772, !tbaa !2522
  store %struct._object* %31, %struct._object** %item, align 8, !dbg !11767, !tbaa !2522
  %32 = bitcast %struct._object** %ob to i8*, !dbg !11773
  call void @llvm.lifetime.start(i64 8, i8* %32) #2, !dbg !11773
  call void @llvm.dbg.declare(metadata %struct._object** %ob, metadata !1738, metadata !2526), !dbg !11774
  %33 = bitcast i32* %flag to i8*, !dbg !11775
  call void @llvm.lifetime.start(i64 4, i8* %33) #2, !dbg !11775
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !1739, metadata !2526), !dbg !11776
  %34 = bitcast %struct._object** %name to i8*, !dbg !11777
  call void @llvm.lifetime.start(i64 8, i8* %34) #2, !dbg !11777
  call void @llvm.dbg.declare(metadata %struct._object** %name, metadata !1740, metadata !2526), !dbg !11778
  store %struct._object* null, %struct._object** %name, align 8, !dbg !11778, !tbaa !2522
  %35 = bitcast %struct._object** %defval to i8*, !dbg !11779
  call void @llvm.lifetime.start(i64 8, i8* %35) #2, !dbg !11779
  call void @llvm.dbg.declare(metadata %struct._object** %defval, metadata !1741, metadata !2526), !dbg !11780
  store %struct._object* null, %struct._object** %defval, align 8, !dbg !11780, !tbaa !2522
  %36 = bitcast i64* %tsize to i8*, !dbg !11781
  call void @llvm.lifetime.start(i64 8, i8* %36) #2, !dbg !11781
  call void @llvm.dbg.declare(metadata i64* %tsize, metadata !1742, metadata !2526), !dbg !11782
  %37 = load %struct._object*, %struct._object** %item, align 8, !dbg !11783, !tbaa !2522
  %38 = bitcast %struct._object* %37 to %struct.PyVarObject*, !dbg !11784
  %ob_size10 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %38, i32 0, i32 1, !dbg !11785
  %39 = load i64, i64* %ob_size10, align 8, !dbg !11785, !tbaa !5784
  store i64 %39, i64* %tsize, align 8, !dbg !11782, !tbaa !2704
  %40 = load %struct._object*, %struct._object** %item, align 8, !dbg !11786, !tbaa !2522
  %41 = bitcast %struct._object* %40 to %struct.PyTupleObject*, !dbg !11787
  %ob_item11 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %41, i32 0, i32 1, !dbg !11788
  %arrayidx12 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item11, i32 0, i64 0, !dbg !11789
  %42 = load %struct._object*, %struct._object** %arrayidx12, align 8, !dbg !11789, !tbaa !2522
  %call13 = call i64 @PyLong_AsLong(%struct._object* %42), !dbg !11790
  %conv = trunc i64 %call13 to i32, !dbg !11790
  store i32 %conv, i32* %flag, align 4, !dbg !11791, !tbaa !2611
  %43 = load i64, i64* %tsize, align 8, !dbg !11792, !tbaa !2704
  %cmp14 = icmp sgt i64 %43, 1, !dbg !11793
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !11792

cond.true:                                        ; preds = %for.body
  %44 = load %struct._object*, %struct._object** %item, align 8, !dbg !11794, !tbaa !2522
  %45 = bitcast %struct._object* %44 to %struct.PyTupleObject*, !dbg !11796
  %ob_item16 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %45, i32 0, i32 1, !dbg !11797
  %arrayidx17 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item16, i32 0, i64 1, !dbg !11798
  %46 = load %struct._object*, %struct._object** %arrayidx17, align 8, !dbg !11798, !tbaa !2522
  br label %cond.end, !dbg !11792

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !11799

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %46, %cond.true ], [ null, %cond.false ], !dbg !11792
  store %struct._object* %cond, %struct._object** %name, align 8, !dbg !11801, !tbaa !2522
  %47 = load i64, i64* %tsize, align 8, !dbg !11804, !tbaa !2704
  %cmp18 = icmp sgt i64 %47, 2, !dbg !11805
  br i1 %cmp18, label %cond.true.20, label %cond.false.23, !dbg !11804

cond.true.20:                                     ; preds = %cond.end
  %48 = load %struct._object*, %struct._object** %item, align 8, !dbg !11806, !tbaa !2522
  %49 = bitcast %struct._object* %48 to %struct.PyTupleObject*, !dbg !11807
  %ob_item21 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %49, i32 0, i32 1, !dbg !11808
  %arrayidx22 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item21, i32 0, i64 2, !dbg !11809
  %50 = load %struct._object*, %struct._object** %arrayidx22, align 8, !dbg !11809, !tbaa !2522
  br label %cond.end.24, !dbg !11804

cond.false.23:                                    ; preds = %cond.end
  br label %cond.end.24, !dbg !11810

cond.end.24:                                      ; preds = %cond.false.23, %cond.true.20
  %cond25 = phi %struct._object* [ %50, %cond.true.20 ], [ null, %cond.false.23 ], !dbg !11804
  store %struct._object* %cond25, %struct._object** %defval, align 8, !dbg !11811, !tbaa !2522
  %51 = load i32, i32* %flag, align 4, !dbg !11812, !tbaa !2611
  %and = and i32 %51, 7, !dbg !11813
  br label %NodeBlock.7

NodeBlock.7:                                      ; preds = %cond.end.24
  %Pivot.8 = icmp slt i32 %and, 3
  br i1 %Pivot.8, label %NodeBlock, label %NodeBlock.5

NodeBlock.5:                                      ; preds = %NodeBlock.7
  %Pivot.6 = icmp slt i32 %and, 5
  br i1 %Pivot.6, label %LeafBlock.1, label %LeafBlock.3

LeafBlock.3:                                      ; preds = %NodeBlock.5
  %SwitchLeaf4 = icmp eq i32 %and, 5
  br i1 %SwitchLeaf4, label %sw.bb, label %NewDefault

LeafBlock.1:                                      ; preds = %NodeBlock.5
  %SwitchLeaf2 = icmp eq i32 %and, 3
  br i1 %SwitchLeaf2, label %sw.bb.39, label %NewDefault

NodeBlock:                                        ; preds = %NodeBlock.7
  %Pivot = icmp slt i32 %and, 2
  br i1 %Pivot, label %LeafBlock, label %sw.bb.49

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp ule i32 %and, 1
  br i1 %SwitchLeaf, label %sw.bb.41, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock.3
  %52 = load %struct._object*, %struct._object** %defval, align 8, !dbg !11814, !tbaa !2522
  %cmp26 = icmp eq %struct._object* %52, null, !dbg !11817
  br i1 %cmp26, label %if.then.28, label %if.else, !dbg !11818

if.then.28:                                       ; preds = %sw.bb
  %call29 = call %struct._object* @PyLong_FromLong(i64 0), !dbg !11819
  store %struct._object* %call29, %struct._object** %defval, align 8, !dbg !11821, !tbaa !2522
  %53 = load %struct._object*, %struct._object** %defval, align 8, !dbg !11822, !tbaa !2522
  %cmp30 = icmp eq %struct._object* %53, null, !dbg !11824
  br i1 %cmp30, label %if.then.32, label %if.end.33, !dbg !11825

if.then.32:                                       ; preds = %if.then.28
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11826

if.end.33:                                        ; preds = %if.then.28
  br label %if.end.36, !dbg !11827

if.else:                                          ; preds = %sw.bb
  %54 = load %struct._object*, %struct._object** %defval, align 8, !dbg !11828, !tbaa !2522
  %ob_refcnt34 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 0, !dbg !11829
  %55 = load i64, i64* %ob_refcnt34, align 8, !dbg !11830, !tbaa !2551
  %inc35 = add i64 %55, 1, !dbg !11830
  store i64 %inc35, i64* %ob_refcnt34, align 8, !dbg !11830, !tbaa !2551
  br label %if.end.36

if.end.36:                                        ; preds = %if.else, %if.end.33
  %56 = load %struct._object*, %struct._object** %defval, align 8, !dbg !11831, !tbaa !2522
  %57 = load i64, i64* %i, align 8, !dbg !11832, !tbaa !2704
  %58 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !11833, !tbaa !2522
  %59 = bitcast %struct._object* %58 to %struct.PyTupleObject*, !dbg !11834
  %ob_item37 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %59, i32 0, i32 1, !dbg !11835
  %arrayidx38 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item37, i32 0, i64 %57, !dbg !11836
  store %struct._object* %56, %struct._object** %arrayidx38, align 8, !dbg !11837, !tbaa !2522
  br label %sw.epilog, !dbg !11838

sw.bb.39:                                         ; preds = %LeafBlock.1
  %60 = load i64, i64* %i, align 8, !dbg !11839, !tbaa !2704
  %sh_prom = trunc i64 %60 to i32, !dbg !11840
  %shl = shl i32 1, %sh_prom, !dbg !11840
  %61 = load i32*, i32** %pinoutmask.addr, align 8, !dbg !11841, !tbaa !2522
  %62 = load i32, i32* %61, align 4, !dbg !11842, !tbaa !2611
  %or = or i32 %62, %shl, !dbg !11842
  store i32 %or, i32* %61, align 4, !dbg !11842, !tbaa !2611
  %63 = load i32*, i32** %pnumretvals.addr, align 8, !dbg !11843, !tbaa !2522
  %64 = load i32, i32* %63, align 4, !dbg !11844, !tbaa !2611
  %inc40 = add i32 %64, 1, !dbg !11844
  store i32 %inc40, i32* %63, align 4, !dbg !11844, !tbaa !2611
  br label %sw.bb.41, !dbg !11845

sw.bb.41:                                         ; preds = %LeafBlock, %sw.bb.39
  %65 = load %struct._object*, %struct._object** %name, align 8, !dbg !11846, !tbaa !2522
  %66 = load %struct._object*, %struct._object** %defval, align 8, !dbg !11847, !tbaa !2522
  %67 = load %struct._object*, %struct._object** %inargs.addr, align 8, !dbg !11848, !tbaa !2522
  %68 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !11849, !tbaa !2522
  %call42 = call %struct._object* @_get_arg(i32* %inargs_index, %struct._object* %65, %struct._object* %66, %struct._object* %67, %struct._object* %68), !dbg !11850
  store %struct._object* %call42, %struct._object** %ob, align 8, !dbg !11851, !tbaa !2522
  %69 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11852, !tbaa !2522
  %cmp43 = icmp eq %struct._object* %69, null, !dbg !11854
  br i1 %cmp43, label %if.then.45, label %if.end.46, !dbg !11855

if.then.45:                                       ; preds = %sw.bb.41
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11856

if.end.46:                                        ; preds = %sw.bb.41
  %70 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11857, !tbaa !2522
  %71 = load i64, i64* %i, align 8, !dbg !11858, !tbaa !2704
  %72 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !11859, !tbaa !2522
  %73 = bitcast %struct._object* %72 to %struct.PyTupleObject*, !dbg !11860
  %ob_item47 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %73, i32 0, i32 1, !dbg !11861
  %arrayidx48 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item47, i32 0, i64 %71, !dbg !11862
  store %struct._object* %70, %struct._object** %arrayidx48, align 8, !dbg !11863, !tbaa !2522
  br label %sw.epilog, !dbg !11864

sw.bb.49:                                         ; preds = %NodeBlock
  %74 = load %struct._object*, %struct._object** %defval, align 8, !dbg !11865, !tbaa !2522
  %tobool = icmp ne %struct._object* %74, null, !dbg !11865
  br i1 %tobool, label %if.then.50, label %if.end.59, !dbg !11867

if.then.50:                                       ; preds = %sw.bb.49
  %75 = load %struct._object*, %struct._object** %defval, align 8, !dbg !11868, !tbaa !2522
  %ob_refcnt51 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 0, !dbg !11870
  %76 = load i64, i64* %ob_refcnt51, align 8, !dbg !11871, !tbaa !2551
  %inc52 = add i64 %76, 1, !dbg !11871
  store i64 %inc52, i64* %ob_refcnt51, align 8, !dbg !11871, !tbaa !2551
  %77 = load %struct._object*, %struct._object** %defval, align 8, !dbg !11872, !tbaa !2522
  %78 = load i64, i64* %i, align 8, !dbg !11873, !tbaa !2704
  %79 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !11874, !tbaa !2522
  %80 = bitcast %struct._object* %79 to %struct.PyTupleObject*, !dbg !11875
  %ob_item53 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %80, i32 0, i32 1, !dbg !11876
  %arrayidx54 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item53, i32 0, i64 %78, !dbg !11877
  store %struct._object* %77, %struct._object** %arrayidx54, align 8, !dbg !11878, !tbaa !2522
  %81 = load i64, i64* %i, align 8, !dbg !11879, !tbaa !2704
  %sh_prom55 = trunc i64 %81 to i32, !dbg !11880
  %shl56 = shl i32 1, %sh_prom55, !dbg !11880
  %82 = load i32*, i32** %poutmask.addr, align 8, !dbg !11881, !tbaa !2522
  %83 = load i32, i32* %82, align 4, !dbg !11882, !tbaa !2611
  %or57 = or i32 %83, %shl56, !dbg !11882
  store i32 %or57, i32* %82, align 4, !dbg !11882, !tbaa !2611
  %84 = load i32*, i32** %pnumretvals.addr, align 8, !dbg !11883, !tbaa !2522
  %85 = load i32, i32* %84, align 4, !dbg !11884, !tbaa !2611
  %inc58 = add i32 %85, 1, !dbg !11884
  store i32 %inc58, i32* %84, align 4, !dbg !11884, !tbaa !2611
  br label %sw.epilog, !dbg !11885

if.end.59:                                        ; preds = %sw.bb.49
  %86 = load i64, i64* %i, align 8, !dbg !11886, !tbaa !2704
  %87 = load %struct._object*, %struct._object** %argtypes.addr, align 8, !dbg !11887, !tbaa !2522
  %88 = bitcast %struct._object* %87 to %struct.PyTupleObject*, !dbg !11888
  %ob_item60 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %88, i32 0, i32 1, !dbg !11889
  %arrayidx61 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item60, i32 0, i64 %86, !dbg !11890
  %89 = load %struct._object*, %struct._object** %arrayidx61, align 8, !dbg !11890, !tbaa !2522
  store %struct._object* %89, %struct._object** %ob, align 8, !dbg !11891, !tbaa !2522
  %90 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11892, !tbaa !2522
  %call62 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %90), !dbg !11893
  store %struct.StgDictObject* %call62, %struct.StgDictObject** %dict, align 8, !dbg !11894, !tbaa !2522
  %91 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !11895, !tbaa !2522
  %cmp63 = icmp eq %struct.StgDictObject* %91, null, !dbg !11897
  br i1 %cmp63, label %if.then.65, label %if.end.67, !dbg !11898

if.then.65:                                       ; preds = %if.end.59
  %92 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !11899, !tbaa !2522
  %call66 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %92, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.139, i32 0, i32 0)), !dbg !11901
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11902

if.end.67:                                        ; preds = %if.end.59
  %93 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !11903, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %93, i32 0, i32 5, !dbg !11905
  %94 = load %struct._object*, %struct._object** %proto, align 8, !dbg !11905, !tbaa !2961
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %94, i32 0, i32 1, !dbg !11906
  %95 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11906, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %95, i32 0, i32 19, !dbg !11907
  %96 = load i64, i64* %tp_flags, align 8, !dbg !11907, !tbaa !2849
  %and68 = and i64 %96, 268435456, !dbg !11908
  %cmp69 = icmp ne i64 %and68, 0, !dbg !11909
  br i1 %cmp69, label %if.then.71, label %if.end.73, !dbg !11910

if.then.71:                                       ; preds = %if.end.67
  %97 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !11911, !tbaa !2522
  %98 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11913, !tbaa !2522
  %99 = bitcast %struct._object* %98 to %struct._typeobject*, !dbg !11914
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %99, i32 0, i32 1, !dbg !11915
  %100 = load i8*, i8** %tp_name, align 8, !dbg !11915, !tbaa !5264
  %call72 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %97, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.140, i32 0, i32 0), i8* %100), !dbg !11916
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11917

if.end.73:                                        ; preds = %if.end.67
  %101 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11918, !tbaa !2522
  %ob_type74 = getelementptr inbounds %struct._object, %struct._object* %101, i32 0, i32 1, !dbg !11920
  %102 = load %struct._typeobject*, %struct._typeobject** %ob_type74, align 8, !dbg !11920, !tbaa !2588
  %cmp75 = icmp eq %struct._typeobject* %102, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArrayType_Type to %struct._typeobject*), !dbg !11921
  br i1 %cmp75, label %if.then.81, label %lor.lhs.false.77, !dbg !11922

lor.lhs.false.77:                                 ; preds = %if.end.73
  %103 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11923, !tbaa !2522
  %ob_type78 = getelementptr inbounds %struct._object, %struct._object* %103, i32 0, i32 1, !dbg !11925
  %104 = load %struct._typeobject*, %struct._typeobject** %ob_type78, align 8, !dbg !11925, !tbaa !2588
  %call79 = call i32 @PyType_IsSubtype(%struct._typeobject* %104, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArrayType_Type to %struct._typeobject*)), !dbg !11926
  %tobool80 = icmp ne i32 %call79, 0, !dbg !11926
  br i1 %tobool80, label %if.then.81, label %if.else.83, !dbg !11927

if.then.81:                                       ; preds = %lor.lhs.false.77, %if.end.73
  %105 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11928, !tbaa !2522
  %call82 = call %struct._object* @PyObject_CallObject(%struct._object* %105, %struct._object* null), !dbg !11929
  store %struct._object* %call82, %struct._object** %ob, align 8, !dbg !11930, !tbaa !2522
  br label %if.end.86, !dbg !11931

if.else.83:                                       ; preds = %lor.lhs.false.77
  %106 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !11932, !tbaa !2522
  %proto84 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %106, i32 0, i32 5, !dbg !11933
  %107 = load %struct._object*, %struct._object** %proto84, align 8, !dbg !11933, !tbaa !2961
  %call85 = call %struct._object* @PyObject_CallObject(%struct._object* %107, %struct._object* null), !dbg !11934
  store %struct._object* %call85, %struct._object** %ob, align 8, !dbg !11935, !tbaa !2522
  br label %if.end.86

if.end.86:                                        ; preds = %if.else.83, %if.then.81
  %108 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11936, !tbaa !2522
  %cmp87 = icmp eq %struct._object* %108, null, !dbg !11938
  br i1 %cmp87, label %if.then.89, label %if.end.90, !dbg !11939

if.then.89:                                       ; preds = %if.end.86
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11940

if.end.90:                                        ; preds = %if.end.86
  %109 = load %struct._object*, %struct._object** %ob, align 8, !dbg !11941, !tbaa !2522
  %110 = load i64, i64* %i, align 8, !dbg !11942, !tbaa !2704
  %111 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !11943, !tbaa !2522
  %112 = bitcast %struct._object* %111 to %struct.PyTupleObject*, !dbg !11944
  %ob_item91 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %112, i32 0, i32 1, !dbg !11945
  %arrayidx92 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item91, i32 0, i64 %110, !dbg !11946
  store %struct._object* %109, %struct._object** %arrayidx92, align 8, !dbg !11947, !tbaa !2522
  %113 = load i64, i64* %i, align 8, !dbg !11948, !tbaa !2704
  %sh_prom93 = trunc i64 %113 to i32, !dbg !11949
  %shl94 = shl i32 1, %sh_prom93, !dbg !11949
  %114 = load i32*, i32** %poutmask.addr, align 8, !dbg !11950, !tbaa !2522
  %115 = load i32, i32* %114, align 4, !dbg !11951, !tbaa !2611
  %or95 = or i32 %115, %shl94, !dbg !11951
  store i32 %or95, i32* %114, align 4, !dbg !11951, !tbaa !2611
  %116 = load i32*, i32** %pnumretvals.addr, align 8, !dbg !11952, !tbaa !2522
  %117 = load i32, i32* %116, align 4, !dbg !11953, !tbaa !2611
  %inc96 = add i32 %117, 1, !dbg !11953
  store i32 %inc96, i32* %116, align 4, !dbg !11953, !tbaa !2611
  br label %sw.epilog, !dbg !11954

NewDefault:                                       ; preds = %LeafBlock.3, %LeafBlock.1, %LeafBlock
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  %118 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !11955, !tbaa !2522
  %119 = load i32, i32* %flag, align 4, !dbg !11956, !tbaa !2611
  %call97 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %118, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.141, i32 0, i32 0), i32 %119), !dbg !11957
  store i32 6, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11958

sw.epilog:                                        ; preds = %if.end.90, %if.then.50, %if.end.46, %if.end.36
  store i32 0, i32* %cleanup.dest.slot, !dbg !11959
  br label %cleanup, !dbg !11959

cleanup:                                          ; preds = %sw.epilog, %sw.default, %if.then.89, %if.then.71, %if.then.65, %if.then.45, %if.then.32
  %120 = bitcast i64* %tsize to i8*, !dbg !11960
  call void @llvm.lifetime.end(i64 8, i8* %120) #2, !dbg !11960
  %121 = bitcast %struct._object** %defval to i8*, !dbg !11960
  call void @llvm.lifetime.end(i64 8, i8* %121) #2, !dbg !11960
  %122 = bitcast %struct._object** %name to i8*, !dbg !11960
  call void @llvm.lifetime.end(i64 8, i8* %122) #2, !dbg !11960
  %123 = bitcast i32* %flag to i8*, !dbg !11960
  call void @llvm.lifetime.end(i64 4, i8* %123) #2, !dbg !11960
  %124 = bitcast %struct._object** %ob to i8*, !dbg !11960
  call void @llvm.lifetime.end(i64 8, i8* %124) #2, !dbg !11960
  %125 = bitcast %struct._object** %item to i8*, !dbg !11960
  call void @llvm.lifetime.end(i64 8, i8* %125) #2, !dbg !11960
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock.14

NodeBlock.14:                                     ; preds = %cleanup
  %Pivot.15 = icmp slt i32 %cleanup.dest, 6
  br i1 %Pivot.15, label %LeafBlock.10, label %LeafBlock.12

LeafBlock.12:                                     ; preds = %NodeBlock.14
  %SwitchLeaf13 = icmp eq i32 %cleanup.dest, 6
  br i1 %SwitchLeaf13, label %error, label %NewDefault.9

LeafBlock.10:                                     ; preds = %NodeBlock.14
  %SwitchLeaf11 = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf11, label %cleanup.cont, label %NewDefault.9

cleanup.cont:                                     ; preds = %LeafBlock.10
  br label %for.inc, !dbg !11961

for.inc:                                          ; preds = %cleanup.cont
  %126 = load i64, i64* %i, align 8, !dbg !11962, !tbaa !2704
  %inc103 = add i64 %126, 1, !dbg !11962
  store i64 %inc103, i64* %i, align 8, !dbg !11962, !tbaa !2704
  br label %for.cond, !dbg !11963

for.end:                                          ; preds = %for.cond
  %127 = load %struct._object*, %struct._object** %inargs.addr, align 8, !dbg !11964, !tbaa !2522
  %128 = bitcast %struct._object* %127 to %struct.PyVarObject*, !dbg !11965
  %ob_size104 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %128, i32 0, i32 1, !dbg !11966
  %129 = load i64, i64* %ob_size104, align 8, !dbg !11966, !tbaa !5784
  %130 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !11967, !tbaa !2522
  %tobool105 = icmp ne %struct._object* %130, null, !dbg !11967
  br i1 %tobool105, label %cond.true.106, label %cond.false.108, !dbg !11967

cond.true.106:                                    ; preds = %for.end
  %131 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !11968, !tbaa !2522
  %call107 = call i64 @PyDict_Size(%struct._object* %131), !dbg !11970
  br label %cond.end.109, !dbg !11967

cond.false.108:                                   ; preds = %for.end
  br label %cond.end.109, !dbg !11971

cond.end.109:                                     ; preds = %cond.false.108, %cond.true.106
  %cond110 = phi i64 [ %call107, %cond.true.106 ], [ 0, %cond.false.108 ], !dbg !11967
  %add = add i64 %129, %cond110, !dbg !11973
  store i64 %add, i64* %actual_args, align 8, !dbg !11976, !tbaa !2704
  %132 = load i64, i64* %actual_args, align 8, !dbg !11977, !tbaa !2704
  %133 = load i32, i32* %inargs_index, align 4, !dbg !11979, !tbaa !2611
  %conv111 = sext i32 %133 to i64, !dbg !11979
  %cmp112 = icmp ne i64 %132, %conv111, !dbg !11980
  br i1 %cmp112, label %if.then.114, label %if.end.116, !dbg !11981

if.then.114:                                      ; preds = %cond.end.109
  %134 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !11982, !tbaa !2522
  %135 = load i32, i32* %inargs_index, align 4, !dbg !11984, !tbaa !2611
  %136 = load i64, i64* %actual_args, align 8, !dbg !11985, !tbaa !2704
  %call115 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %134, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.142, i32 0, i32 0), i32 %135, i64 %136), !dbg !11986
  br label %error, !dbg !11987

if.end.116:                                       ; preds = %cond.end.109
  %137 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !11988, !tbaa !2522
  store %struct._object* %137, %struct._object** %retval, !dbg !11989
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.124, !dbg !11989

error:                                            ; preds = %LeafBlock.12, %if.then.114
  br label %do.body, !dbg !11990

do.body:                                          ; preds = %error
  %138 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11991
  call void @llvm.lifetime.start(i64 8, i8* %138) #2, !dbg !11991
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1743, metadata !2526), !dbg !11993
  %139 = load %struct._object*, %struct._object** %callargs, align 8, !dbg !11994, !tbaa !2522
  store %struct._object* %139, %struct._object** %_py_decref_tmp, align 8, !dbg !11993, !tbaa !2522
  %140 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11995, !tbaa !2522
  %ob_refcnt117 = getelementptr inbounds %struct._object, %struct._object* %140, i32 0, i32 0, !dbg !11997
  %141 = load i64, i64* %ob_refcnt117, align 8, !dbg !11998, !tbaa !2551
  %dec = add i64 %141, -1, !dbg !11998
  store i64 %dec, i64* %ob_refcnt117, align 8, !dbg !11998, !tbaa !2551
  %cmp118 = icmp ne i64 %dec, 0, !dbg !11999
  br i1 %cmp118, label %if.then.120, label %if.else.121, !dbg !12000

if.then.120:                                      ; preds = %do.body
  br label %if.end.123, !dbg !12001

if.else.121:                                      ; preds = %do.body
  %142 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12003, !tbaa !2522
  %ob_type122 = getelementptr inbounds %struct._object, %struct._object* %142, i32 0, i32 1, !dbg !12005
  %143 = load %struct._typeobject*, %struct._typeobject** %ob_type122, align 8, !dbg !12005, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %143, i32 0, i32 4, !dbg !12006
  %144 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12006, !tbaa !2590
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12007, !tbaa !2522
  call void %144(%struct._object* %145), !dbg !12008
  br label %if.end.123

if.end.123:                                       ; preds = %if.else.121, %if.then.120
  %146 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12009
  call void @llvm.lifetime.end(i64 8, i8* %146) #2, !dbg !12009
  br label %do.cond, !dbg !12011

do.cond:                                          ; preds = %if.end.123
  br label %do.end, !dbg !12012

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !12014
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.124, !dbg !12014

NewDefault.9:                                     ; preds = %LeafBlock.12, %LeafBlock.10
  br label %cleanup.124

cleanup.124:                                      ; preds = %NewDefault.9, %do.end, %if.end.116, %if.then.7, %if.then
  %147 = bitcast i64* %actual_args to i8*, !dbg !12015
  call void @llvm.lifetime.end(i64 8, i8* %147) #2, !dbg !12015
  %148 = bitcast i32* %inargs_index to i8*, !dbg !12015
  call void @llvm.lifetime.end(i64 4, i8* %148) #2, !dbg !12015
  %149 = bitcast i64* %len to i8*, !dbg !12015
  call void @llvm.lifetime.end(i64 8, i8* %149) #2, !dbg !12015
  %150 = bitcast i64* %i to i8*, !dbg !12015
  call void @llvm.lifetime.end(i64 8, i8* %150) #2, !dbg !12015
  %151 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !12015
  call void @llvm.lifetime.end(i64 8, i8* %151) #2, !dbg !12015
  %152 = bitcast %struct._object** %callargs to i8*, !dbg !12015
  call void @llvm.lifetime.end(i64 8, i8* %152) #2, !dbg !12015
  %153 = bitcast %struct._object** %paramflags to i8*, !dbg !12015
  call void @llvm.lifetime.end(i64 8, i8* %153) #2, !dbg !12015
  %154 = load %struct._object*, %struct._object** %retval, !dbg !12015
  ret %struct._object* %154, !dbg !12015
}

declare %struct._object* @_ctypes_callproc(i32 ()*, %struct._object*, i32, %struct._object*, %struct._object*, %struct._object*) #3

declare %struct._object* @PyObject_CallFunctionObjArgs(%struct._object*, ...) #3

; Function Attrs: uwtable
define internal %struct._object* @_build_result(%struct._object* %result, %struct._object* %callargs, i32 %outmask, i32 %inoutmask, i32 %numretvals) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %result.addr = alloca %struct._object*, align 8
  %callargs.addr = alloca %struct._object*, align 8
  %outmask.addr = alloca i32, align 4
  %inoutmask.addr = alloca i32, align 4
  %numretvals.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %bit = alloca i32, align 4
  %tup = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp9 = alloca %struct._object*, align 8
  %_py_decref_tmp26 = alloca %struct._object*, align 8
  %v = alloca %struct._object*, align 8
  %_py_decref_tmp48 = alloca %struct._object*, align 8
  %_py_decref_tmp80 = alloca %struct._object*, align 8
  %_py_decref_tmp105 = alloca %struct._object*, align 8
  store %struct._object* %result, %struct._object** %result.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %result.addr, metadata !1759, metadata !2526), !dbg !12016
  store %struct._object* %callargs, %struct._object** %callargs.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %callargs.addr, metadata !1760, metadata !2526), !dbg !12017
  store i32 %outmask, i32* %outmask.addr, align 4, !tbaa !2611
  call void @llvm.dbg.declare(metadata i32* %outmask.addr, metadata !1761, metadata !2526), !dbg !12018
  store i32 %inoutmask, i32* %inoutmask.addr, align 4, !tbaa !2611
  call void @llvm.dbg.declare(metadata i32* %inoutmask.addr, metadata !1762, metadata !2526), !dbg !12019
  store i32 %numretvals, i32* %numretvals.addr, align 4, !tbaa !2611
  call void @llvm.dbg.declare(metadata i32* %numretvals.addr, metadata !1763, metadata !2526), !dbg !12020
  %0 = bitcast i32* %i to i8*, !dbg !12021
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !12021
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1764, metadata !2526), !dbg !12022
  %1 = bitcast i32* %index to i8*, !dbg !12021
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !12021
  call void @llvm.dbg.declare(metadata i32* %index, metadata !1765, metadata !2526), !dbg !12023
  %2 = bitcast i32* %bit to i8*, !dbg !12024
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !12024
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !1766, metadata !2526), !dbg !12025
  %3 = bitcast %struct._object** %tup to i8*, !dbg !12026
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !12026
  call void @llvm.dbg.declare(metadata %struct._object** %tup, metadata !1767, metadata !2526), !dbg !12027
  store %struct._object* null, %struct._object** %tup, align 8, !dbg !12027, !tbaa !2522
  %4 = load %struct._object*, %struct._object** %callargs.addr, align 8, !dbg !12028, !tbaa !2522
  %cmp = icmp eq %struct._object* %4, null, !dbg !12030
  br i1 %cmp, label %if.then, label %if.end, !dbg !12031

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** %result.addr, align 8, !dbg !12032, !tbaa !2522
  store %struct._object* %5, %struct._object** %retval, !dbg !12033
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.117, !dbg !12033

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %result.addr, align 8, !dbg !12034, !tbaa !2522
  %cmp1 = icmp eq %struct._object* %6, null, !dbg !12035
  br i1 %cmp1, label %if.then.3, label %lor.lhs.false, !dbg !12036

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i32, i32* %numretvals.addr, align 4, !dbg !12037, !tbaa !2611
  %cmp2 = icmp eq i32 %7, 0, !dbg !12039
  br i1 %cmp2, label %if.then.3, label %if.end.7, !dbg !12040

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  br label %do.body, !dbg !12041

do.body:                                          ; preds = %if.then.3
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12042
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !12042
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1768, metadata !2526), !dbg !12044
  %9 = load %struct._object*, %struct._object** %callargs.addr, align 8, !dbg !12045, !tbaa !2522
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !12044, !tbaa !2522
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12046, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !12048
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !12049, !tbaa !2551
  %dec = add i64 %11, -1, !dbg !12049
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12049, !tbaa !2551
  %cmp4 = icmp ne i64 %dec, 0, !dbg !12050
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !12051

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !12052

if.else:                                          ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12054, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !12056
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12056, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !12057
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12057, !tbaa !2590
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12058, !tbaa !2522
  call void %14(%struct._object* %15), !dbg !12059
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12060
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !12060
  br label %do.cond, !dbg !12062

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !12063

do.end:                                           ; preds = %do.cond
  %17 = load %struct._object*, %struct._object** %result.addr, align 8, !dbg !12065, !tbaa !2522
  store %struct._object* %17, %struct._object** %retval, !dbg !12066
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.117, !dbg !12066

if.end.7:                                         ; preds = %lor.lhs.false
  br label %do.body.8, !dbg !12067

do.body.8:                                        ; preds = %if.end.7
  %18 = bitcast %struct._object** %_py_decref_tmp9 to i8*, !dbg !12068
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !12068
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp9, metadata !1772, metadata !2526), !dbg !12070
  %19 = load %struct._object*, %struct._object** %result.addr, align 8, !dbg !12071, !tbaa !2522
  store %struct._object* %19, %struct._object** %_py_decref_tmp9, align 8, !dbg !12070, !tbaa !2522
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !12072, !tbaa !2522
  %ob_refcnt10 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !12074
  %21 = load i64, i64* %ob_refcnt10, align 8, !dbg !12075, !tbaa !2551
  %dec11 = add i64 %21, -1, !dbg !12075
  store i64 %dec11, i64* %ob_refcnt10, align 8, !dbg !12075, !tbaa !2551
  %cmp12 = icmp ne i64 %dec11, 0, !dbg !12076
  br i1 %cmp12, label %if.then.13, label %if.else.14, !dbg !12077

if.then.13:                                       ; preds = %do.body.8
  br label %if.end.17, !dbg !12078

if.else.14:                                       ; preds = %do.body.8
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !12080, !tbaa !2522
  %ob_type15 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !12082
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type15, align 8, !dbg !12082, !tbaa !2588
  %tp_dealloc16 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !12083
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc16, align 8, !dbg !12083, !tbaa !2590
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp9, align 8, !dbg !12084, !tbaa !2522
  call void %24(%struct._object* %25), !dbg !12085
  br label %if.end.17

if.end.17:                                        ; preds = %if.else.14, %if.then.13
  %26 = bitcast %struct._object** %_py_decref_tmp9 to i8*, !dbg !12086
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !12086
  br label %do.cond.18, !dbg !12088

do.cond.18:                                       ; preds = %if.end.17
  br label %do.end.19, !dbg !12089

do.end.19:                                        ; preds = %do.cond.18
  %27 = load i32, i32* %numretvals.addr, align 4, !dbg !12091, !tbaa !2611
  %cmp20 = icmp ugt i32 %27, 1, !dbg !12092
  br i1 %cmp20, label %if.then.21, label %if.end.39, !dbg !12093

if.then.21:                                       ; preds = %do.end.19
  %28 = load i32, i32* %numretvals.addr, align 4, !dbg !12094, !tbaa !2611
  %conv = zext i32 %28 to i64, !dbg !12094
  %call = call %struct._object* @PyTuple_New(i64 %conv), !dbg !12095
  store %struct._object* %call, %struct._object** %tup, align 8, !dbg !12096, !tbaa !2522
  %29 = load %struct._object*, %struct._object** %tup, align 8, !dbg !12097, !tbaa !2522
  %cmp22 = icmp eq %struct._object* %29, null, !dbg !12098
  br i1 %cmp22, label %if.then.24, label %if.end.38, !dbg !12099

if.then.24:                                       ; preds = %if.then.21
  br label %do.body.25, !dbg !12100

do.body.25:                                       ; preds = %if.then.24
  %30 = bitcast %struct._object** %_py_decref_tmp26 to i8*, !dbg !12101
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !12101
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp26, metadata !1774, metadata !2526), !dbg !12103
  %31 = load %struct._object*, %struct._object** %callargs.addr, align 8, !dbg !12104, !tbaa !2522
  store %struct._object* %31, %struct._object** %_py_decref_tmp26, align 8, !dbg !12103, !tbaa !2522
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !12105, !tbaa !2522
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !12107
  %33 = load i64, i64* %ob_refcnt27, align 8, !dbg !12108, !tbaa !2551
  %dec28 = add i64 %33, -1, !dbg !12108
  store i64 %dec28, i64* %ob_refcnt27, align 8, !dbg !12108, !tbaa !2551
  %cmp29 = icmp ne i64 %dec28, 0, !dbg !12109
  br i1 %cmp29, label %if.then.31, label %if.else.32, !dbg !12110

if.then.31:                                       ; preds = %do.body.25
  br label %if.end.35, !dbg !12111

if.else.32:                                       ; preds = %do.body.25
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !12113, !tbaa !2522
  %ob_type33 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !12115
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type33, align 8, !dbg !12115, !tbaa !2588
  %tp_dealloc34 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !12116
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc34, align 8, !dbg !12116, !tbaa !2590
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !12117, !tbaa !2522
  call void %36(%struct._object* %37), !dbg !12118
  br label %if.end.35

if.end.35:                                        ; preds = %if.else.32, %if.then.31
  %38 = bitcast %struct._object** %_py_decref_tmp26 to i8*, !dbg !12119
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !12119
  br label %do.cond.36, !dbg !12121

do.cond.36:                                       ; preds = %if.end.35
  br label %do.end.37, !dbg !12122

do.end.37:                                        ; preds = %do.cond.36
  store %struct._object* null, %struct._object** %retval, !dbg !12124
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.117, !dbg !12124

if.end.38:                                        ; preds = %if.then.21
  br label %if.end.39, !dbg !12125

if.end.39:                                        ; preds = %if.end.38, %do.end.19
  store i32 0, i32* %index, align 4, !dbg !12126, !tbaa !2611
  store i32 1, i32* %bit, align 4, !dbg !12127, !tbaa !2611
  store i32 0, i32* %i, align 4, !dbg !12128, !tbaa !2611
  br label %for.cond, !dbg !12129

for.cond:                                         ; preds = %for.inc, %if.end.39
  %39 = load i32, i32* %i, align 4, !dbg !12130, !tbaa !2611
  %cmp40 = icmp ult i32 %39, 32, !dbg !12133
  br i1 %cmp40, label %for.body, label %for.end, !dbg !12134

for.body:                                         ; preds = %for.cond
  %40 = bitcast %struct._object** %v to i8*, !dbg !12135
  call void @llvm.lifetime.start(i64 8, i8* %40) #2, !dbg !12135
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !1780, metadata !2526), !dbg !12136
  %41 = load i32, i32* %bit, align 4, !dbg !12137, !tbaa !2611
  %42 = load i32, i32* %inoutmask.addr, align 4, !dbg !12138, !tbaa !2611
  %and = and i32 %41, %42, !dbg !12139
  %tobool = icmp ne i32 %and, 0, !dbg !12139
  br i1 %tobool, label %if.then.42, label %if.else.65, !dbg !12140

if.then.42:                                       ; preds = %for.body
  %43 = load i32, i32* %i, align 4, !dbg !12141, !tbaa !2611
  %idxprom = zext i32 %43 to i64, !dbg !12142
  %44 = load %struct._object*, %struct._object** %callargs.addr, align 8, !dbg !12143, !tbaa !2522
  %45 = bitcast %struct._object* %44 to %struct.PyTupleObject*, !dbg !12144
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %45, i32 0, i32 1, !dbg !12145
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %idxprom, !dbg !12142
  %46 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !12142, !tbaa !2522
  store %struct._object* %46, %struct._object** %v, align 8, !dbg !12146, !tbaa !2522
  %47 = load %struct._object*, %struct._object** %v, align 8, !dbg !12147, !tbaa !2522
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 0, !dbg !12148
  %48 = load i64, i64* %ob_refcnt43, align 8, !dbg !12149, !tbaa !2551
  %inc = add i64 %48, 1, !dbg !12149
  store i64 %inc, i64* %ob_refcnt43, align 8, !dbg !12149, !tbaa !2551
  %49 = load i32, i32* %numretvals.addr, align 4, !dbg !12150, !tbaa !2611
  %cmp44 = icmp eq i32 %49, 1, !dbg !12151
  br i1 %cmp44, label %if.then.46, label %if.end.60, !dbg !12152

if.then.46:                                       ; preds = %if.then.42
  br label %do.body.47, !dbg !12153

do.body.47:                                       ; preds = %if.then.46
  %50 = bitcast %struct._object** %_py_decref_tmp48 to i8*, !dbg !12154
  call void @llvm.lifetime.start(i64 8, i8* %50) #2, !dbg !12154
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp48, metadata !1784, metadata !2526), !dbg !12156
  %51 = load %struct._object*, %struct._object** %callargs.addr, align 8, !dbg !12157, !tbaa !2522
  store %struct._object* %51, %struct._object** %_py_decref_tmp48, align 8, !dbg !12156, !tbaa !2522
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp48, align 8, !dbg !12158, !tbaa !2522
  %ob_refcnt49 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !12160
  %53 = load i64, i64* %ob_refcnt49, align 8, !dbg !12161, !tbaa !2551
  %dec50 = add i64 %53, -1, !dbg !12161
  store i64 %dec50, i64* %ob_refcnt49, align 8, !dbg !12161, !tbaa !2551
  %cmp51 = icmp ne i64 %dec50, 0, !dbg !12162
  br i1 %cmp51, label %if.then.53, label %if.else.54, !dbg !12163

if.then.53:                                       ; preds = %do.body.47
  br label %if.end.57, !dbg !12164

if.else.54:                                       ; preds = %do.body.47
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp48, align 8, !dbg !12166, !tbaa !2522
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !12168
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8, !dbg !12168, !tbaa !2588
  %tp_dealloc56 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !12169
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc56, align 8, !dbg !12169, !tbaa !2590
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp48, align 8, !dbg !12170, !tbaa !2522
  call void %56(%struct._object* %57), !dbg !12171
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.54, %if.then.53
  %58 = bitcast %struct._object** %_py_decref_tmp48 to i8*, !dbg !12172
  call void @llvm.lifetime.end(i64 8, i8* %58) #2, !dbg !12172
  br label %do.cond.58, !dbg !12174

do.cond.58:                                       ; preds = %if.end.57
  br label %do.end.59, !dbg !12175

do.end.59:                                        ; preds = %do.cond.58
  %59 = load %struct._object*, %struct._object** %v, align 8, !dbg !12177, !tbaa !2522
  store %struct._object* %59, %struct._object** %retval, !dbg !12178
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12178

if.end.60:                                        ; preds = %if.then.42
  %60 = load %struct._object*, %struct._object** %v, align 8, !dbg !12179, !tbaa !2522
  %61 = load i32, i32* %index, align 4, !dbg !12180, !tbaa !2611
  %idxprom61 = zext i32 %61 to i64, !dbg !12181
  %62 = load %struct._object*, %struct._object** %tup, align 8, !dbg !12182, !tbaa !2522
  %63 = bitcast %struct._object* %62 to %struct.PyTupleObject*, !dbg !12183
  %ob_item62 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %63, i32 0, i32 1, !dbg !12184
  %arrayidx63 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item62, i32 0, i64 %idxprom61, !dbg !12181
  store %struct._object* %60, %struct._object** %arrayidx63, align 8, !dbg !12185, !tbaa !2522
  %64 = load i32, i32* %index, align 4, !dbg !12186, !tbaa !2611
  %inc64 = add i32 %64, 1, !dbg !12186
  store i32 %inc64, i32* %index, align 4, !dbg !12186, !tbaa !2611
  br label %if.end.98, !dbg !12187

if.else.65:                                       ; preds = %for.body
  %65 = load i32, i32* %bit, align 4, !dbg !12188, !tbaa !2611
  %66 = load i32, i32* %outmask.addr, align 4, !dbg !12189, !tbaa !2611
  %and66 = and i32 %65, %66, !dbg !12190
  %tobool67 = icmp ne i32 %and66, 0, !dbg !12190
  br i1 %tobool67, label %if.then.68, label %if.end.97, !dbg !12191

if.then.68:                                       ; preds = %if.else.65
  %67 = load i32, i32* %i, align 4, !dbg !12192, !tbaa !2611
  %idxprom69 = zext i32 %67 to i64, !dbg !12193
  %68 = load %struct._object*, %struct._object** %callargs.addr, align 8, !dbg !12194, !tbaa !2522
  %69 = bitcast %struct._object* %68 to %struct.PyTupleObject*, !dbg !12195
  %ob_item70 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %69, i32 0, i32 1, !dbg !12196
  %arrayidx71 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item70, i32 0, i64 %idxprom69, !dbg !12193
  %70 = load %struct._object*, %struct._object** %arrayidx71, align 8, !dbg !12193, !tbaa !2522
  store %struct._object* %70, %struct._object** %v, align 8, !dbg !12197, !tbaa !2522
  %71 = load %struct._object*, %struct._object** %v, align 8, !dbg !12198, !tbaa !2522
  %call72 = call %struct._object* (%struct._object*, %struct._Py_Identifier*, i8*, ...) @_PyObject_CallMethodId_SizeT(%struct._object* %71, %struct._Py_Identifier* @_build_result.PyId___ctypes_from_outparam__, i8* null), !dbg !12199
  store %struct._object* %call72, %struct._object** %v, align 8, !dbg !12200, !tbaa !2522
  %72 = load %struct._object*, %struct._object** %v, align 8, !dbg !12201, !tbaa !2522
  %cmp73 = icmp eq %struct._object* %72, null, !dbg !12202
  br i1 %cmp73, label %if.then.78, label %lor.lhs.false.75, !dbg !12203

lor.lhs.false.75:                                 ; preds = %if.then.68
  %73 = load i32, i32* %numretvals.addr, align 4, !dbg !12204, !tbaa !2611
  %cmp76 = icmp eq i32 %73, 1, !dbg !12206
  br i1 %cmp76, label %if.then.78, label %if.end.92, !dbg !12207

if.then.78:                                       ; preds = %lor.lhs.false.75, %if.then.68
  br label %do.body.79, !dbg !12208

do.body.79:                                       ; preds = %if.then.78
  %74 = bitcast %struct._object** %_py_decref_tmp80 to i8*, !dbg !12209
  call void @llvm.lifetime.start(i64 8, i8* %74) #2, !dbg !12209
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp80, metadata !1790, metadata !2526), !dbg !12211
  %75 = load %struct._object*, %struct._object** %callargs.addr, align 8, !dbg !12212, !tbaa !2522
  store %struct._object* %75, %struct._object** %_py_decref_tmp80, align 8, !dbg !12211, !tbaa !2522
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !12213, !tbaa !2522
  %ob_refcnt81 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 0, !dbg !12215
  %77 = load i64, i64* %ob_refcnt81, align 8, !dbg !12216, !tbaa !2551
  %dec82 = add i64 %77, -1, !dbg !12216
  store i64 %dec82, i64* %ob_refcnt81, align 8, !dbg !12216, !tbaa !2551
  %cmp83 = icmp ne i64 %dec82, 0, !dbg !12217
  br i1 %cmp83, label %if.then.85, label %if.else.86, !dbg !12218

if.then.85:                                       ; preds = %do.body.79
  br label %if.end.89, !dbg !12219

if.else.86:                                       ; preds = %do.body.79
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !12221, !tbaa !2522
  %ob_type87 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 1, !dbg !12223
  %79 = load %struct._typeobject*, %struct._typeobject** %ob_type87, align 8, !dbg !12223, !tbaa !2588
  %tp_dealloc88 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %79, i32 0, i32 4, !dbg !12224
  %80 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc88, align 8, !dbg !12224, !tbaa !2590
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp80, align 8, !dbg !12225, !tbaa !2522
  call void %80(%struct._object* %81), !dbg !12226
  br label %if.end.89

if.end.89:                                        ; preds = %if.else.86, %if.then.85
  %82 = bitcast %struct._object** %_py_decref_tmp80 to i8*, !dbg !12227
  call void @llvm.lifetime.end(i64 8, i8* %82) #2, !dbg !12227
  br label %do.cond.90, !dbg !12229

do.cond.90:                                       ; preds = %if.end.89
  br label %do.end.91, !dbg !12230

do.end.91:                                        ; preds = %do.cond.90
  %83 = load %struct._object*, %struct._object** %v, align 8, !dbg !12232, !tbaa !2522
  store %struct._object* %83, %struct._object** %retval, !dbg !12233
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12233

if.end.92:                                        ; preds = %lor.lhs.false.75
  %84 = load %struct._object*, %struct._object** %v, align 8, !dbg !12234, !tbaa !2522
  %85 = load i32, i32* %index, align 4, !dbg !12235, !tbaa !2611
  %idxprom93 = zext i32 %85 to i64, !dbg !12236
  %86 = load %struct._object*, %struct._object** %tup, align 8, !dbg !12237, !tbaa !2522
  %87 = bitcast %struct._object* %86 to %struct.PyTupleObject*, !dbg !12238
  %ob_item94 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %87, i32 0, i32 1, !dbg !12239
  %arrayidx95 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item94, i32 0, i64 %idxprom93, !dbg !12236
  store %struct._object* %84, %struct._object** %arrayidx95, align 8, !dbg !12240, !tbaa !2522
  %88 = load i32, i32* %index, align 4, !dbg !12241, !tbaa !2611
  %inc96 = add i32 %88, 1, !dbg !12241
  store i32 %inc96, i32* %index, align 4, !dbg !12241, !tbaa !2611
  br label %if.end.97, !dbg !12242

if.end.97:                                        ; preds = %if.end.92, %if.else.65
  br label %if.end.98

if.end.98:                                        ; preds = %if.end.97, %if.end.60
  %89 = load i32, i32* %index, align 4, !dbg !12243, !tbaa !2611
  %90 = load i32, i32* %numretvals.addr, align 4, !dbg !12245, !tbaa !2611
  %cmp99 = icmp eq i32 %89, %90, !dbg !12246
  br i1 %cmp99, label %if.then.101, label %if.end.102, !dbg !12247

if.then.101:                                      ; preds = %if.end.98
  store i32 8, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12248

if.end.102:                                       ; preds = %if.end.98
  store i32 0, i32* %cleanup.dest.slot, !dbg !12249
  br label %cleanup, !dbg !12249

cleanup:                                          ; preds = %if.end.102, %if.then.101, %do.end.91, %do.end.59
  %91 = bitcast %struct._object** %v to i8*, !dbg !12250
  call void @llvm.lifetime.end(i64 8, i8* %91) #2, !dbg !12250
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %NodeBlock

NodeBlock:                                        ; preds = %cleanup
  %Pivot = icmp slt i32 %cleanup.dest, 8
  br i1 %Pivot, label %LeafBlock, label %LeafBlock.1

LeafBlock.1:                                      ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest, 8
  br i1 %SwitchLeaf2, label %for.end, label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !12251

for.inc:                                          ; preds = %cleanup.cont
  %92 = load i32, i32* %i, align 4, !dbg !12252, !tbaa !2611
  %inc103 = add i32 %92, 1, !dbg !12252
  store i32 %inc103, i32* %i, align 4, !dbg !12252, !tbaa !2611
  %93 = load i32, i32* %bit, align 4, !dbg !12253, !tbaa !2611
  %shl = shl i32 %93, 1, !dbg !12253
  store i32 %shl, i32* %bit, align 4, !dbg !12253, !tbaa !2611
  br label %for.cond, !dbg !12254

for.end:                                          ; preds = %LeafBlock.1, %for.cond
  br label %do.body.104, !dbg !12255

do.body.104:                                      ; preds = %for.end
  %94 = bitcast %struct._object** %_py_decref_tmp105 to i8*, !dbg !12256
  call void @llvm.lifetime.start(i64 8, i8* %94) #2, !dbg !12256
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp105, metadata !1796, metadata !2526), !dbg !12258
  %95 = load %struct._object*, %struct._object** %callargs.addr, align 8, !dbg !12259, !tbaa !2522
  store %struct._object* %95, %struct._object** %_py_decref_tmp105, align 8, !dbg !12258, !tbaa !2522
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp105, align 8, !dbg !12260, !tbaa !2522
  %ob_refcnt106 = getelementptr inbounds %struct._object, %struct._object* %96, i32 0, i32 0, !dbg !12262
  %97 = load i64, i64* %ob_refcnt106, align 8, !dbg !12263, !tbaa !2551
  %dec107 = add i64 %97, -1, !dbg !12263
  store i64 %dec107, i64* %ob_refcnt106, align 8, !dbg !12263, !tbaa !2551
  %cmp108 = icmp ne i64 %dec107, 0, !dbg !12264
  br i1 %cmp108, label %if.then.110, label %if.else.111, !dbg !12265

if.then.110:                                      ; preds = %do.body.104
  br label %if.end.114, !dbg !12266

if.else.111:                                      ; preds = %do.body.104
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp105, align 8, !dbg !12268, !tbaa !2522
  %ob_type112 = getelementptr inbounds %struct._object, %struct._object* %98, i32 0, i32 1, !dbg !12270
  %99 = load %struct._typeobject*, %struct._typeobject** %ob_type112, align 8, !dbg !12270, !tbaa !2588
  %tp_dealloc113 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %99, i32 0, i32 4, !dbg !12271
  %100 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc113, align 8, !dbg !12271, !tbaa !2590
  %101 = load %struct._object*, %struct._object** %_py_decref_tmp105, align 8, !dbg !12272, !tbaa !2522
  call void %100(%struct._object* %101), !dbg !12273
  br label %if.end.114

if.end.114:                                       ; preds = %if.else.111, %if.then.110
  %102 = bitcast %struct._object** %_py_decref_tmp105 to i8*, !dbg !12274
  call void @llvm.lifetime.end(i64 8, i8* %102) #2, !dbg !12274
  br label %do.cond.115, !dbg !12275

do.cond.115:                                      ; preds = %if.end.114
  br label %do.end.116, !dbg !12276

do.end.116:                                       ; preds = %do.cond.115
  %103 = load %struct._object*, %struct._object** %tup, align 8, !dbg !12278, !tbaa !2522
  store %struct._object* %103, %struct._object** %retval, !dbg !12279
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.117, !dbg !12279

NewDefault:                                       ; preds = %LeafBlock.1, %LeafBlock
  br label %cleanup.117

cleanup.117:                                      ; preds = %NewDefault, %do.end.116, %do.end.37, %do.end, %if.then
  %104 = bitcast %struct._object** %tup to i8*, !dbg !12280
  call void @llvm.lifetime.end(i64 8, i8* %104) #2, !dbg !12280
  %105 = bitcast i32* %bit to i8*, !dbg !12280
  call void @llvm.lifetime.end(i64 4, i8* %105) #2, !dbg !12280
  %106 = bitcast i32* %index to i8*, !dbg !12280
  call void @llvm.lifetime.end(i64 4, i8* %106) #2, !dbg !12280
  %107 = bitcast i32* %i to i8*, !dbg !12280
  call void @llvm.lifetime.end(i64 4, i8* %107) #2, !dbg !12280
  %108 = load %struct._object*, %struct._object** %retval, !dbg !12280
  ret %struct._object* %108, !dbg !12280
}

; Function Attrs: uwtable
define internal %struct._object* @_get_arg(i32* %pindex, %struct._object* %name, %struct._object* %defval, %struct._object* %inargs, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %pindex.addr = alloca i32*, align 8
  %name.addr = alloca %struct._object*, align 8
  %defval.addr = alloca %struct._object*, align 8
  %inargs.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %v = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store i32* %pindex, i32** %pindex.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i32** %pindex.addr, metadata !1749, metadata !2526), !dbg !12281
  store %struct._object* %name, %struct._object** %name.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %name.addr, metadata !1750, metadata !2526), !dbg !12282
  store %struct._object* %defval, %struct._object** %defval.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %defval.addr, metadata !1751, metadata !2526), !dbg !12283
  store %struct._object* %inargs, %struct._object** %inargs.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %inargs.addr, metadata !1752, metadata !2526), !dbg !12284
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1753, metadata !2526), !dbg !12285
  %0 = bitcast %struct._object** %v to i8*, !dbg !12286
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12286
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !1754, metadata !2526), !dbg !12287
  %1 = load i32*, i32** %pindex.addr, align 8, !dbg !12288, !tbaa !2522
  %2 = load i32, i32* %1, align 4, !dbg !12290, !tbaa !2611
  %conv = sext i32 %2 to i64, !dbg !12290
  %3 = load %struct._object*, %struct._object** %inargs.addr, align 8, !dbg !12291, !tbaa !2522
  %4 = bitcast %struct._object* %3 to %struct.PyVarObject*, !dbg !12292
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1, !dbg !12293
  %5 = load i64, i64* %ob_size, align 8, !dbg !12293, !tbaa !5784
  %cmp = icmp slt i64 %conv, %5, !dbg !12294
  br i1 %cmp, label %if.then, label %if.end, !dbg !12295

if.then:                                          ; preds = %entry
  %6 = load i32*, i32** %pindex.addr, align 8, !dbg !12296, !tbaa !2522
  %7 = load i32, i32* %6, align 4, !dbg !12298, !tbaa !2611
  %idxprom = sext i32 %7 to i64, !dbg !12299
  %8 = load %struct._object*, %struct._object** %inargs.addr, align 8, !dbg !12300, !tbaa !2522
  %9 = bitcast %struct._object* %8 to %struct.PyTupleObject*, !dbg !12301
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %9, i32 0, i32 1, !dbg !12302
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %idxprom, !dbg !12299
  %10 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !12299, !tbaa !2522
  store %struct._object* %10, %struct._object** %v, align 8, !dbg !12303, !tbaa !2522
  %11 = load i32*, i32** %pindex.addr, align 8, !dbg !12304, !tbaa !2522
  %12 = load i32, i32* %11, align 4, !dbg !12305, !tbaa !2611
  %inc = add i32 %12, 1, !dbg !12305
  store i32 %inc, i32* %11, align 4, !dbg !12305, !tbaa !2611
  %13 = load %struct._object*, %struct._object** %v, align 8, !dbg !12306, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !12307
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !12308, !tbaa !2551
  %inc2 = add i64 %14, 1, !dbg !12308
  store i64 %inc2, i64* %ob_refcnt, align 8, !dbg !12308, !tbaa !2551
  %15 = load %struct._object*, %struct._object** %v, align 8, !dbg !12309, !tbaa !2522
  store %struct._object* %15, %struct._object** %retval, !dbg !12310
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12310

if.end:                                           ; preds = %entry
  %16 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !12311, !tbaa !2522
  %tobool = icmp ne %struct._object* %16, null, !dbg !12311
  br i1 %tobool, label %land.lhs.true, label %if.end.10, !dbg !12313

land.lhs.true:                                    ; preds = %if.end
  %17 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !12314, !tbaa !2522
  %tobool3 = icmp ne %struct._object* %17, null, !dbg !12314
  br i1 %tobool3, label %land.lhs.true.4, label %if.end.10, !dbg !12316

land.lhs.true.4:                                  ; preds = %land.lhs.true
  %18 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !12317, !tbaa !2522
  %19 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !12319, !tbaa !2522
  %call = call %struct._object* @PyDict_GetItem(%struct._object* %18, %struct._object* %19), !dbg !12320
  store %struct._object* %call, %struct._object** %v, align 8, !dbg !12321, !tbaa !2522
  %tobool5 = icmp ne %struct._object* %call, null, !dbg !12321
  br i1 %tobool5, label %if.then.6, label %if.end.10, !dbg !12322

if.then.6:                                        ; preds = %land.lhs.true.4
  %20 = load i32*, i32** %pindex.addr, align 8, !dbg !12323, !tbaa !2522
  %21 = load i32, i32* %20, align 4, !dbg !12325, !tbaa !2611
  %inc7 = add i32 %21, 1, !dbg !12325
  store i32 %inc7, i32* %20, align 4, !dbg !12325, !tbaa !2611
  %22 = load %struct._object*, %struct._object** %v, align 8, !dbg !12326, !tbaa !2522
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !12327
  %23 = load i64, i64* %ob_refcnt8, align 8, !dbg !12328, !tbaa !2551
  %inc9 = add i64 %23, 1, !dbg !12328
  store i64 %inc9, i64* %ob_refcnt8, align 8, !dbg !12328, !tbaa !2551
  %24 = load %struct._object*, %struct._object** %v, align 8, !dbg !12329, !tbaa !2522
  store %struct._object* %24, %struct._object** %retval, !dbg !12330
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12330

if.end.10:                                        ; preds = %land.lhs.true.4, %land.lhs.true, %if.end
  %25 = load %struct._object*, %struct._object** %defval.addr, align 8, !dbg !12331, !tbaa !2522
  %tobool11 = icmp ne %struct._object* %25, null, !dbg !12331
  br i1 %tobool11, label %if.then.12, label %if.end.15, !dbg !12333

if.then.12:                                       ; preds = %if.end.10
  %26 = load %struct._object*, %struct._object** %defval.addr, align 8, !dbg !12334, !tbaa !2522
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !12336
  %27 = load i64, i64* %ob_refcnt13, align 8, !dbg !12337, !tbaa !2551
  %inc14 = add i64 %27, 1, !dbg !12337
  store i64 %inc14, i64* %ob_refcnt13, align 8, !dbg !12337, !tbaa !2551
  %28 = load %struct._object*, %struct._object** %defval.addr, align 8, !dbg !12338, !tbaa !2522
  store %struct._object* %28, %struct._object** %retval, !dbg !12339
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12339

if.end.15:                                        ; preds = %if.end.10
  %29 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !12340, !tbaa !2522
  %tobool16 = icmp ne %struct._object* %29, null, !dbg !12340
  br i1 %tobool16, label %if.then.17, label %if.else, !dbg !12342

if.then.17:                                       ; preds = %if.end.15
  %30 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !12343, !tbaa !2522
  %31 = load %struct._object*, %struct._object** %name.addr, align 8, !dbg !12344, !tbaa !2522
  %call18 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %30, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.143, i32 0, i32 0), %struct._object* %31), !dbg !12345
  br label %if.end.20, !dbg !12345

if.else:                                          ; preds = %if.end.15
  %32 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !12346, !tbaa !2522
  %call19 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %32, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.144, i32 0, i32 0)), !dbg !12347
  br label %if.end.20

if.end.20:                                        ; preds = %if.else, %if.then.17
  store %struct._object* null, %struct._object** %retval, !dbg !12348
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12348

cleanup:                                          ; preds = %if.end.20, %if.then.12, %if.then.6, %if.then
  %33 = bitcast %struct._object** %v to i8*, !dbg !12349
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !12349
  %34 = load %struct._object*, %struct._object** %retval, !dbg !12349
  ret %struct._object* %34, !dbg !12349
}

declare i64 @PyDict_Size(%struct._object*) #3

declare %struct._object* @_PyObject_CallMethodId_SizeT(%struct._object*, %struct._Py_Identifier*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @PyCFuncPtr_get_errcheck(%struct.PyCFuncPtrObject* %self) #7 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyCFuncPtrObject*, align 8
  store %struct.PyCFuncPtrObject* %self, %struct.PyCFuncPtrObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %self.addr, metadata !1890, metadata !2526), !dbg !12350
  %0 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12351, !tbaa !2522
  %errcheck = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %0, i32 0, i32 15, !dbg !12353
  %1 = load %struct._object*, %struct._object** %errcheck, align 8, !dbg !12353, !tbaa !5758
  %tobool = icmp ne %struct._object* %1, null, !dbg !12351
  br i1 %tobool, label %if.then, label %if.end, !dbg !12354

if.then:                                          ; preds = %entry
  %2 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12355, !tbaa !2522
  %errcheck1 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %2, i32 0, i32 15, !dbg !12357
  %3 = load %struct._object*, %struct._object** %errcheck1, align 8, !dbg !12357, !tbaa !5758
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 0, !dbg !12358
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !12359, !tbaa !2551
  %inc = add i64 %4, 1, !dbg !12359
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12359, !tbaa !2551
  %5 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12360, !tbaa !2522
  %errcheck2 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %5, i32 0, i32 15, !dbg !12361
  %6 = load %struct._object*, %struct._object** %errcheck2, align 8, !dbg !12361, !tbaa !5758
  store %struct._object* %6, %struct._object** %retval, !dbg !12362
  br label %return, !dbg !12362

if.end:                                           ; preds = %entry
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12363, !tbaa !2551
  %inc3 = add i64 %7, 1, !dbg !12363
  store i64 %inc3, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12363, !tbaa !2551
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12364
  br label %return, !dbg !12364

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !12365
  ret %struct._object* %8, !dbg !12365
}

; Function Attrs: uwtable
define internal i32 @PyCFuncPtr_set_errcheck(%struct.PyCFuncPtrObject* %self, %struct._object* %ob) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyCFuncPtrObject*, align 8
  %ob.addr = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  store %struct.PyCFuncPtrObject* %self, %struct.PyCFuncPtrObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %self.addr, metadata !1895, metadata !2526), !dbg !12366
  store %struct._object* %ob, %struct._object** %ob.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %ob.addr, metadata !1896, metadata !2526), !dbg !12367
  %0 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12368, !tbaa !2522
  %tobool = icmp ne %struct._object* %0, null, !dbg !12368
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !12370

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12371, !tbaa !2522
  %call = call i32 @PyCallable_Check(%struct._object* %1), !dbg !12373
  %tobool1 = icmp ne i32 %call, 0, !dbg !12373
  br i1 %tobool1, label %if.end, label %if.then, !dbg !12374

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !12375, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.151, i32 0, i32 0)), !dbg !12377
  store i32 -1, i32* %retval, !dbg !12378
  br label %return, !dbg !12378

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %do.body, !dbg !12379

do.body:                                          ; preds = %if.end
  %3 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12380
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !12380
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1897, metadata !2526), !dbg !12382
  %4 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12383, !tbaa !2522
  %errcheck = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %4, i32 0, i32 15, !dbg !12384
  %5 = load %struct._object*, %struct._object** %errcheck, align 8, !dbg !12384, !tbaa !5758
  store %struct._object* %5, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12382, !tbaa !2522
  %6 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12385, !tbaa !2522
  %cmp = icmp ne %struct._object* %6, null, !dbg !12386
  br i1 %cmp, label %if.then.2, label %if.end.7, !dbg !12387

if.then.2:                                        ; preds = %do.body
  br label %do.body.3, !dbg !12388

do.body.3:                                        ; preds = %if.then.2
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12390
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !12390
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1899, metadata !2526), !dbg !12392
  %8 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12393, !tbaa !2522
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !12392, !tbaa !2522
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12394, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !12396
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !12397, !tbaa !2551
  %dec = add i64 %10, -1, !dbg !12397
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12397, !tbaa !2551
  %cmp4 = icmp ne i64 %dec, 0, !dbg !12398
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !12399

if.then.5:                                        ; preds = %do.body.3
  br label %if.end.6, !dbg !12400

if.else:                                          ; preds = %do.body.3
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12402, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !12404
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12404, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !12405
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12405, !tbaa !2590
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12406, !tbaa !2522
  call void %13(%struct._object* %14), !dbg !12407
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12408
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !12408
  br label %do.cond, !dbg !12410

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !12411

do.end:                                           ; preds = %do.cond
  br label %if.end.7, !dbg !12413

if.end.7:                                         ; preds = %do.end, %do.body
  %16 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12415
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !12415
  br label %do.end.9, !dbg !12418

do.end.9:                                         ; preds = %if.end.7
  br label %do.body.10, !dbg !12419

do.body.10:                                       ; preds = %do.end.9
  %17 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !12420
  call void @llvm.lifetime.start(i64 8, i8* %17) #2, !dbg !12420
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !1902, metadata !2526), !dbg !12422
  %18 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12423, !tbaa !2522
  store %struct._object* %18, %struct._object** %_py_xincref_tmp, align 8, !dbg !12422, !tbaa !2522
  %19 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !12424, !tbaa !2522
  %cmp11 = icmp ne %struct._object* %19, null, !dbg !12426
  br i1 %cmp11, label %if.then.12, label %if.end.14, !dbg !12427

if.then.12:                                       ; preds = %do.body.10
  %20 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !12428, !tbaa !2522
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !12430
  %21 = load i64, i64* %ob_refcnt13, align 8, !dbg !12431, !tbaa !2551
  %inc = add i64 %21, 1, !dbg !12431
  store i64 %inc, i64* %ob_refcnt13, align 8, !dbg !12431, !tbaa !2551
  br label %if.end.14, !dbg !12432

if.end.14:                                        ; preds = %if.then.12, %do.body.10
  %22 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !12433
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !12433
  br label %do.end.16, !dbg !12435

do.end.16:                                        ; preds = %if.end.14
  %23 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12436, !tbaa !2522
  %24 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12437, !tbaa !2522
  %errcheck17 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %24, i32 0, i32 15, !dbg !12438
  store %struct._object* %23, %struct._object** %errcheck17, align 8, !dbg !12439, !tbaa !5758
  store i32 0, i32* %retval, !dbg !12440
  br label %return, !dbg !12440

return:                                           ; preds = %do.end.16, %if.then
  %25 = load i32, i32* %retval, !dbg !12441
  ret i32 %25, !dbg !12441
}

; Function Attrs: uwtable
define internal %struct._object* @PyCFuncPtr_get_restype(%struct.PyCFuncPtrObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyCFuncPtrObject*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyCFuncPtrObject* %self, %struct.PyCFuncPtrObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %self.addr, metadata !1906, metadata !2526), !dbg !12442
  %0 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !12443
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12443
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !1907, metadata !2526), !dbg !12444
  %1 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12445, !tbaa !2522
  %restype = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %1, i32 0, i32 13, !dbg !12447
  %2 = load %struct._object*, %struct._object** %restype, align 8, !dbg !12447, !tbaa !5717
  %tobool = icmp ne %struct._object* %2, null, !dbg !12445
  br i1 %tobool, label %if.then, label %if.end, !dbg !12448

if.then:                                          ; preds = %entry
  %3 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12449, !tbaa !2522
  %restype1 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %3, i32 0, i32 13, !dbg !12451
  %4 = load %struct._object*, %struct._object** %restype1, align 8, !dbg !12451, !tbaa !5717
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0, !dbg !12452
  %5 = load i64, i64* %ob_refcnt, align 8, !dbg !12453, !tbaa !2551
  %inc = add i64 %5, 1, !dbg !12453
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12453, !tbaa !2551
  %6 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12454, !tbaa !2522
  %restype2 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %6, i32 0, i32 13, !dbg !12455
  %7 = load %struct._object*, %struct._object** %restype2, align 8, !dbg !12455, !tbaa !5717
  store %struct._object* %7, %struct._object** %retval, !dbg !12456
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12456

if.end:                                           ; preds = %entry
  %8 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12457, !tbaa !2522
  %9 = bitcast %struct.PyCFuncPtrObject* %8 to %struct._object*, !dbg !12458
  %call = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %9), !dbg !12459
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !12460, !tbaa !2522
  %10 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !12461, !tbaa !2522
  %restype3 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %10, i32 0, i32 11, !dbg !12463
  %11 = load %struct._object*, %struct._object** %restype3, align 8, !dbg !12463, !tbaa !5725
  %tobool4 = icmp ne %struct._object* %11, null, !dbg !12461
  br i1 %tobool4, label %if.then.5, label %if.else, !dbg !12464

if.then.5:                                        ; preds = %if.end
  %12 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !12465, !tbaa !2522
  %restype6 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %12, i32 0, i32 11, !dbg !12467
  %13 = load %struct._object*, %struct._object** %restype6, align 8, !dbg !12467, !tbaa !5725
  %ob_refcnt7 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !12468
  %14 = load i64, i64* %ob_refcnt7, align 8, !dbg !12469, !tbaa !2551
  %inc8 = add i64 %14, 1, !dbg !12469
  store i64 %inc8, i64* %ob_refcnt7, align 8, !dbg !12469, !tbaa !2551
  %15 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !12470, !tbaa !2522
  %restype9 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %15, i32 0, i32 11, !dbg !12471
  %16 = load %struct._object*, %struct._object** %restype9, align 8, !dbg !12471, !tbaa !5725
  store %struct._object* %16, %struct._object** %retval, !dbg !12472
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12472

if.else:                                          ; preds = %if.end
  %17 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12473, !tbaa !2551
  %inc10 = add i64 %17, 1, !dbg !12473
  store i64 %inc10, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12473, !tbaa !2551
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12475
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12475

cleanup:                                          ; preds = %if.else, %if.then.5, %if.then
  %18 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !12476
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !12476
  %19 = load %struct._object*, %struct._object** %retval, !dbg !12476
  ret %struct._object* %19, !dbg !12476
}

; Function Attrs: uwtable
define internal i32 @PyCFuncPtr_set_restype(%struct.PyCFuncPtrObject* %self, %struct._object* %ob) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyCFuncPtrObject*, align 8
  %ob.addr = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp11 = alloca %struct._object*, align 8
  %_py_decref_tmp16 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp42 = alloca %struct._object*, align 8
  %_py_xdecref_tmp57 = alloca %struct._object*, align 8
  %_py_decref_tmp62 = alloca %struct._object*, align 8
  store %struct.PyCFuncPtrObject* %self, %struct.PyCFuncPtrObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %self.addr, metadata !1910, metadata !2526), !dbg !12477
  store %struct._object* %ob, %struct._object** %ob.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %ob.addr, metadata !1911, metadata !2526), !dbg !12478
  %0 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12479, !tbaa !2522
  %cmp = icmp eq %struct._object* %0, null, !dbg !12480
  br i1 %cmp, label %if.then, label %if.end.30, !dbg !12481

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !12482

do.body:                                          ; preds = %if.then
  %1 = bitcast %struct._object** %_py_tmp to i8*, !dbg !12483
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !12483
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1912, metadata !2526), !dbg !12485
  %2 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12486, !tbaa !2522
  %restype = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %2, i32 0, i32 13, !dbg !12487
  %3 = load %struct._object*, %struct._object** %restype, align 8, !dbg !12487, !tbaa !5717
  store %struct._object* %3, %struct._object** %_py_tmp, align 8, !dbg !12485, !tbaa !2522
  %4 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !12488, !tbaa !2522
  %cmp1 = icmp ne %struct._object* %4, null, !dbg !12489
  br i1 %cmp1, label %if.then.2, label %if.end.7, !dbg !12490

if.then.2:                                        ; preds = %do.body
  %5 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12491, !tbaa !2522
  %restype3 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %5, i32 0, i32 13, !dbg !12493
  store %struct._object* null, %struct._object** %restype3, align 8, !dbg !12494, !tbaa !5717
  br label %do.body.4, !dbg !12495

do.body.4:                                        ; preds = %if.then.2
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12496
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !12496
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1916, metadata !2526), !dbg !12498
  %7 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !12499, !tbaa !2522
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !12498, !tbaa !2522
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12500, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !12502
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !12503, !tbaa !2551
  %dec = add i64 %9, -1, !dbg !12503
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12503, !tbaa !2551
  %cmp5 = icmp ne i64 %dec, 0, !dbg !12504
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !12505

if.then.6:                                        ; preds = %do.body.4
  br label %if.end, !dbg !12506

if.else:                                          ; preds = %do.body.4
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12508, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !12510
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12510, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !12511
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12511, !tbaa !2590
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12512, !tbaa !2522
  call void %12(%struct._object* %13), !dbg !12513
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.6
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12514
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !12514
  br label %do.cond, !dbg !12516

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !12517

do.end:                                           ; preds = %do.cond
  br label %if.end.7, !dbg !12519

if.end.7:                                         ; preds = %do.end, %do.body
  %15 = bitcast %struct._object** %_py_tmp to i8*, !dbg !12521
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !12521
  br label %do.end.9, !dbg !12524

do.end.9:                                         ; preds = %if.end.7
  br label %do.body.10, !dbg !12525

do.body.10:                                       ; preds = %do.end.9
  %16 = bitcast %struct._object** %_py_tmp11 to i8*, !dbg !12526
  call void @llvm.lifetime.start(i64 8, i8* %16) #2, !dbg !12526
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp11, metadata !1920, metadata !2526), !dbg !12528
  %17 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12529, !tbaa !2522
  %checker = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %17, i32 0, i32 14, !dbg !12530
  %18 = load %struct._object*, %struct._object** %checker, align 8, !dbg !12530, !tbaa !5740
  store %struct._object* %18, %struct._object** %_py_tmp11, align 8, !dbg !12528, !tbaa !2522
  %19 = load %struct._object*, %struct._object** %_py_tmp11, align 8, !dbg !12531, !tbaa !2522
  %cmp12 = icmp ne %struct._object* %19, null, !dbg !12532
  br i1 %cmp12, label %if.then.13, label %if.end.27, !dbg !12533

if.then.13:                                       ; preds = %do.body.10
  %20 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12534, !tbaa !2522
  %checker14 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %20, i32 0, i32 14, !dbg !12536
  store %struct._object* null, %struct._object** %checker14, align 8, !dbg !12537, !tbaa !5740
  br label %do.body.15, !dbg !12538

do.body.15:                                       ; preds = %if.then.13
  %21 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !12539
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !12539
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp16, metadata !1922, metadata !2526), !dbg !12541
  %22 = load %struct._object*, %struct._object** %_py_tmp11, align 8, !dbg !12542, !tbaa !2522
  store %struct._object* %22, %struct._object** %_py_decref_tmp16, align 8, !dbg !12541, !tbaa !2522
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !12543, !tbaa !2522
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !12545
  %24 = load i64, i64* %ob_refcnt17, align 8, !dbg !12546, !tbaa !2551
  %dec18 = add i64 %24, -1, !dbg !12546
  store i64 %dec18, i64* %ob_refcnt17, align 8, !dbg !12546, !tbaa !2551
  %cmp19 = icmp ne i64 %dec18, 0, !dbg !12547
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !12548

if.then.20:                                       ; preds = %do.body.15
  br label %if.end.24, !dbg !12549

if.else.21:                                       ; preds = %do.body.15
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !12551, !tbaa !2522
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !12553
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !12553, !tbaa !2588
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !12554
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !12554, !tbaa !2590
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !12555, !tbaa !2522
  call void %27(%struct._object* %28), !dbg !12556
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  %29 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !12557
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !12557
  br label %do.cond.25, !dbg !12559

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !12560

do.end.26:                                        ; preds = %do.cond.25
  br label %if.end.27, !dbg !12562

if.end.27:                                        ; preds = %do.end.26, %do.body.10
  %30 = bitcast %struct._object** %_py_tmp11 to i8*, !dbg !12564
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !12564
  br label %do.end.29, !dbg !12565

do.end.29:                                        ; preds = %if.end.27
  store i32 0, i32* %retval, !dbg !12566
  br label %return, !dbg !12566

if.end.30:                                        ; preds = %entry
  %31 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12567, !tbaa !2522
  %cmp31 = icmp ne %struct._object* %31, @_Py_NoneStruct, !dbg !12569
  br i1 %cmp31, label %land.lhs.true, label %if.end.36, !dbg !12570

land.lhs.true:                                    ; preds = %if.end.30
  %32 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12571, !tbaa !2522
  %call = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %32), !dbg !12573
  %tobool = icmp ne %struct.StgDictObject* %call, null, !dbg !12573
  br i1 %tobool, label %if.end.36, label %land.lhs.true.32, !dbg !12574

land.lhs.true.32:                                 ; preds = %land.lhs.true
  %33 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12575, !tbaa !2522
  %call33 = call i32 @PyCallable_Check(%struct._object* %33), !dbg !12577
  %tobool34 = icmp ne i32 %call33, 0, !dbg !12577
  br i1 %tobool34, label %if.end.36, label %if.then.35, !dbg !12578

if.then.35:                                       ; preds = %land.lhs.true.32
  %34 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !12579, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %34, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.152, i32 0, i32 0)), !dbg !12581
  store i32 -1, i32* %retval, !dbg !12582
  br label %return, !dbg !12582

if.end.36:                                        ; preds = %land.lhs.true.32, %land.lhs.true, %if.end.30
  br label %do.body.37, !dbg !12583

do.body.37:                                       ; preds = %if.end.36
  %35 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12584
  call void @llvm.lifetime.start(i64 8, i8* %35) #2, !dbg !12584
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1926, metadata !2526), !dbg !12586
  %36 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12587, !tbaa !2522
  %checker38 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %36, i32 0, i32 14, !dbg !12588
  %37 = load %struct._object*, %struct._object** %checker38, align 8, !dbg !12588, !tbaa !5740
  store %struct._object* %37, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12586, !tbaa !2522
  %38 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12589, !tbaa !2522
  %cmp39 = icmp ne %struct._object* %38, null, !dbg !12590
  br i1 %cmp39, label %if.then.40, label %if.end.53, !dbg !12591

if.then.40:                                       ; preds = %do.body.37
  br label %do.body.41, !dbg !12592

do.body.41:                                       ; preds = %if.then.40
  %39 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !12594
  call void @llvm.lifetime.start(i64 8, i8* %39) #2, !dbg !12594
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp42, metadata !1928, metadata !2526), !dbg !12596
  %40 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12597, !tbaa !2522
  store %struct._object* %40, %struct._object** %_py_decref_tmp42, align 8, !dbg !12596, !tbaa !2522
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !12598, !tbaa !2522
  %ob_refcnt43 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !12600
  %42 = load i64, i64* %ob_refcnt43, align 8, !dbg !12601, !tbaa !2551
  %dec44 = add i64 %42, -1, !dbg !12601
  store i64 %dec44, i64* %ob_refcnt43, align 8, !dbg !12601, !tbaa !2551
  %cmp45 = icmp ne i64 %dec44, 0, !dbg !12602
  br i1 %cmp45, label %if.then.46, label %if.else.47, !dbg !12603

if.then.46:                                       ; preds = %do.body.41
  br label %if.end.50, !dbg !12604

if.else.47:                                       ; preds = %do.body.41
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !12606, !tbaa !2522
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !12608
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8, !dbg !12608, !tbaa !2588
  %tp_dealloc49 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4, !dbg !12609
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc49, align 8, !dbg !12609, !tbaa !2590
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp42, align 8, !dbg !12610, !tbaa !2522
  call void %45(%struct._object* %46), !dbg !12611
  br label %if.end.50

if.end.50:                                        ; preds = %if.else.47, %if.then.46
  %47 = bitcast %struct._object** %_py_decref_tmp42 to i8*, !dbg !12612
  call void @llvm.lifetime.end(i64 8, i8* %47) #2, !dbg !12612
  br label %do.cond.51, !dbg !12614

do.cond.51:                                       ; preds = %if.end.50
  br label %do.end.52, !dbg !12615

do.end.52:                                        ; preds = %do.cond.51
  br label %if.end.53, !dbg !12617

if.end.53:                                        ; preds = %do.end.52, %do.body.37
  %48 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12619
  call void @llvm.lifetime.end(i64 8, i8* %48) #2, !dbg !12619
  br label %do.end.55, !dbg !12622

do.end.55:                                        ; preds = %if.end.53
  br label %do.body.56, !dbg !12623

do.body.56:                                       ; preds = %do.end.55
  %49 = bitcast %struct._object** %_py_xdecref_tmp57 to i8*, !dbg !12624
  call void @llvm.lifetime.start(i64 8, i8* %49) #2, !dbg !12624
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp57, metadata !1931, metadata !2526), !dbg !12626
  %50 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12627, !tbaa !2522
  %restype58 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %50, i32 0, i32 13, !dbg !12628
  %51 = load %struct._object*, %struct._object** %restype58, align 8, !dbg !12628, !tbaa !5717
  store %struct._object* %51, %struct._object** %_py_xdecref_tmp57, align 8, !dbg !12626, !tbaa !2522
  %52 = load %struct._object*, %struct._object** %_py_xdecref_tmp57, align 8, !dbg !12629, !tbaa !2522
  %cmp59 = icmp ne %struct._object* %52, null, !dbg !12630
  br i1 %cmp59, label %if.then.60, label %if.end.73, !dbg !12631

if.then.60:                                       ; preds = %do.body.56
  br label %do.body.61, !dbg !12632

do.body.61:                                       ; preds = %if.then.60
  %53 = bitcast %struct._object** %_py_decref_tmp62 to i8*, !dbg !12634
  call void @llvm.lifetime.start(i64 8, i8* %53) #2, !dbg !12634
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp62, metadata !1933, metadata !2526), !dbg !12636
  %54 = load %struct._object*, %struct._object** %_py_xdecref_tmp57, align 8, !dbg !12637, !tbaa !2522
  store %struct._object* %54, %struct._object** %_py_decref_tmp62, align 8, !dbg !12636, !tbaa !2522
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8, !dbg !12638, !tbaa !2522
  %ob_refcnt63 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 0, !dbg !12640
  %56 = load i64, i64* %ob_refcnt63, align 8, !dbg !12641, !tbaa !2551
  %dec64 = add i64 %56, -1, !dbg !12641
  store i64 %dec64, i64* %ob_refcnt63, align 8, !dbg !12641, !tbaa !2551
  %cmp65 = icmp ne i64 %dec64, 0, !dbg !12642
  br i1 %cmp65, label %if.then.66, label %if.else.67, !dbg !12643

if.then.66:                                       ; preds = %do.body.61
  br label %if.end.70, !dbg !12644

if.else.67:                                       ; preds = %do.body.61
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8, !dbg !12646, !tbaa !2522
  %ob_type68 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 1, !dbg !12648
  %58 = load %struct._typeobject*, %struct._typeobject** %ob_type68, align 8, !dbg !12648, !tbaa !2588
  %tp_dealloc69 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %58, i32 0, i32 4, !dbg !12649
  %59 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc69, align 8, !dbg !12649, !tbaa !2590
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp62, align 8, !dbg !12650, !tbaa !2522
  call void %59(%struct._object* %60), !dbg !12651
  br label %if.end.70

if.end.70:                                        ; preds = %if.else.67, %if.then.66
  %61 = bitcast %struct._object** %_py_decref_tmp62 to i8*, !dbg !12652
  call void @llvm.lifetime.end(i64 8, i8* %61) #2, !dbg !12652
  br label %do.cond.71, !dbg !12654

do.cond.71:                                       ; preds = %if.end.70
  br label %do.end.72, !dbg !12655

do.end.72:                                        ; preds = %do.cond.71
  br label %if.end.73, !dbg !12657

if.end.73:                                        ; preds = %do.end.72, %do.body.56
  %62 = bitcast %struct._object** %_py_xdecref_tmp57 to i8*, !dbg !12659
  call void @llvm.lifetime.end(i64 8, i8* %62) #2, !dbg !12659
  br label %do.end.75, !dbg !12660

do.end.75:                                        ; preds = %if.end.73
  %63 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12661, !tbaa !2522
  %ob_refcnt76 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0, !dbg !12662
  %64 = load i64, i64* %ob_refcnt76, align 8, !dbg !12663, !tbaa !2551
  %inc = add i64 %64, 1, !dbg !12663
  store i64 %inc, i64* %ob_refcnt76, align 8, !dbg !12663, !tbaa !2551
  %65 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12664, !tbaa !2522
  %66 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12665, !tbaa !2522
  %restype77 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %66, i32 0, i32 13, !dbg !12666
  store %struct._object* %65, %struct._object** %restype77, align 8, !dbg !12667, !tbaa !5717
  %67 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12668, !tbaa !2522
  %call78 = call %struct._object* @PyObject_GetAttrString(%struct._object* %67, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.111, i32 0, i32 0)), !dbg !12669
  %68 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12670, !tbaa !2522
  %checker79 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %68, i32 0, i32 14, !dbg !12671
  store %struct._object* %call78, %struct._object** %checker79, align 8, !dbg !12672, !tbaa !5740
  %69 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12673, !tbaa !2522
  %checker80 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %69, i32 0, i32 14, !dbg !12675
  %70 = load %struct._object*, %struct._object** %checker80, align 8, !dbg !12675, !tbaa !5740
  %cmp81 = icmp eq %struct._object* %70, null, !dbg !12676
  br i1 %cmp81, label %if.then.82, label %if.end.83, !dbg !12677

if.then.82:                                       ; preds = %do.end.75
  call void @PyErr_Clear(), !dbg !12678
  br label %if.end.83, !dbg !12678

if.end.83:                                        ; preds = %if.then.82, %do.end.75
  store i32 0, i32* %retval, !dbg !12679
  br label %return, !dbg !12679

return:                                           ; preds = %if.end.83, %if.then.35, %do.end.29
  %71 = load i32, i32* %retval, !dbg !12680
  ret i32 %71, !dbg !12680
}

; Function Attrs: uwtable
define internal %struct._object* @PyCFuncPtr_get_argtypes(%struct.PyCFuncPtrObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.PyCFuncPtrObject*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.PyCFuncPtrObject* %self, %struct.PyCFuncPtrObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %self.addr, metadata !1938, metadata !2526), !dbg !12681
  %0 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !12682
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12682
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !1939, metadata !2526), !dbg !12683
  %1 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12684, !tbaa !2522
  %argtypes = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %1, i32 0, i32 12, !dbg !12686
  %2 = load %struct._object*, %struct._object** %argtypes, align 8, !dbg !12686, !tbaa !5749
  %tobool = icmp ne %struct._object* %2, null, !dbg !12684
  br i1 %tobool, label %if.then, label %if.end, !dbg !12687

if.then:                                          ; preds = %entry
  %3 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12688, !tbaa !2522
  %argtypes1 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %3, i32 0, i32 12, !dbg !12690
  %4 = load %struct._object*, %struct._object** %argtypes1, align 8, !dbg !12690, !tbaa !5749
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0, !dbg !12691
  %5 = load i64, i64* %ob_refcnt, align 8, !dbg !12692, !tbaa !2551
  %inc = add i64 %5, 1, !dbg !12692
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !12692, !tbaa !2551
  %6 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12693, !tbaa !2522
  %argtypes2 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %6, i32 0, i32 12, !dbg !12694
  %7 = load %struct._object*, %struct._object** %argtypes2, align 8, !dbg !12694, !tbaa !5749
  store %struct._object* %7, %struct._object** %retval, !dbg !12695
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12695

if.end:                                           ; preds = %entry
  %8 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12696, !tbaa !2522
  %9 = bitcast %struct.PyCFuncPtrObject* %8 to %struct._object*, !dbg !12697
  %call = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %9), !dbg !12698
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !12699, !tbaa !2522
  %10 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !12700, !tbaa !2522
  %argtypes3 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %10, i32 0, i32 9, !dbg !12702
  %11 = load %struct._object*, %struct._object** %argtypes3, align 8, !dbg !12702, !tbaa !5754
  %tobool4 = icmp ne %struct._object* %11, null, !dbg !12700
  br i1 %tobool4, label %if.then.5, label %if.else, !dbg !12703

if.then.5:                                        ; preds = %if.end
  %12 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !12704, !tbaa !2522
  %argtypes6 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %12, i32 0, i32 9, !dbg !12706
  %13 = load %struct._object*, %struct._object** %argtypes6, align 8, !dbg !12706, !tbaa !5754
  %ob_refcnt7 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !12707
  %14 = load i64, i64* %ob_refcnt7, align 8, !dbg !12708, !tbaa !2551
  %inc8 = add i64 %14, 1, !dbg !12708
  store i64 %inc8, i64* %ob_refcnt7, align 8, !dbg !12708, !tbaa !2551
  %15 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !12709, !tbaa !2522
  %argtypes9 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %15, i32 0, i32 9, !dbg !12710
  %16 = load %struct._object*, %struct._object** %argtypes9, align 8, !dbg !12710, !tbaa !5754
  store %struct._object* %16, %struct._object** %retval, !dbg !12711
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12711

if.else:                                          ; preds = %if.end
  %17 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12712, !tbaa !2551
  %inc10 = add i64 %17, 1, !dbg !12712
  store i64 %inc10, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !12712, !tbaa !2551
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !12714
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12714

cleanup:                                          ; preds = %if.else, %if.then.5, %if.then
  %18 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !12715
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !12715
  %19 = load %struct._object*, %struct._object** %retval, !dbg !12715
  ret %struct._object* %19, !dbg !12715
}

; Function Attrs: uwtable
define internal i32 @PyCFuncPtr_set_argtypes(%struct.PyCFuncPtrObject* %self, %struct._object* %ob) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.PyCFuncPtrObject*, align 8
  %ob.addr = alloca %struct._object*, align 8
  %converters = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp13 = alloca %struct._object*, align 8
  %_py_decref_tmp18 = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp40 = alloca %struct._object*, align 8
  %_py_xdecref_tmp56 = alloca %struct._object*, align 8
  %_py_decref_tmp61 = alloca %struct._object*, align 8
  store %struct.PyCFuncPtrObject* %self, %struct.PyCFuncPtrObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %self.addr, metadata !1942, metadata !2526), !dbg !12716
  store %struct._object* %ob, %struct._object** %ob.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %ob.addr, metadata !1943, metadata !2526), !dbg !12717
  %0 = bitcast %struct._object** %converters to i8*, !dbg !12718
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12718
  call void @llvm.dbg.declare(metadata %struct._object** %converters, metadata !1944, metadata !2526), !dbg !12719
  %1 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12720, !tbaa !2522
  %cmp = icmp eq %struct._object* %1, null, !dbg !12721
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12722

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12723, !tbaa !2522
  %cmp1 = icmp eq %struct._object* %2, @_Py_NoneStruct, !dbg !12725
  br i1 %cmp1, label %if.then, label %if.else.32, !dbg !12726

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %do.body, !dbg !12727

do.body:                                          ; preds = %if.then
  %3 = bitcast %struct._object** %_py_tmp to i8*, !dbg !12728
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !12728
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1945, metadata !2526), !dbg !12730
  %4 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12731, !tbaa !2522
  %converters2 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %4, i32 0, i32 11, !dbg !12732
  %5 = load %struct._object*, %struct._object** %converters2, align 8, !dbg !12732, !tbaa !5731
  store %struct._object* %5, %struct._object** %_py_tmp, align 8, !dbg !12730, !tbaa !2522
  %6 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !12733, !tbaa !2522
  %cmp3 = icmp ne %struct._object* %6, null, !dbg !12734
  br i1 %cmp3, label %if.then.4, label %if.end.9, !dbg !12735

if.then.4:                                        ; preds = %do.body
  %7 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12736, !tbaa !2522
  %converters5 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %7, i32 0, i32 11, !dbg !12738
  store %struct._object* null, %struct._object** %converters5, align 8, !dbg !12739, !tbaa !5731
  br label %do.body.6, !dbg !12740

do.body.6:                                        ; preds = %if.then.4
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12741
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !12741
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1949, metadata !2526), !dbg !12743
  %9 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !12744, !tbaa !2522
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !12743, !tbaa !2522
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12745, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !12747
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !12748, !tbaa !2551
  %dec = add i64 %11, -1, !dbg !12748
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12748, !tbaa !2551
  %cmp7 = icmp ne i64 %dec, 0, !dbg !12749
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !12750

if.then.8:                                        ; preds = %do.body.6
  br label %if.end, !dbg !12751

if.else:                                          ; preds = %do.body.6
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12753, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !12755
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12755, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !12756
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12756, !tbaa !2590
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12757, !tbaa !2522
  call void %14(%struct._object* %15), !dbg !12758
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.8
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12759
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !12759
  br label %do.cond, !dbg !12761

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !12762

do.end:                                           ; preds = %do.cond
  br label %if.end.9, !dbg !12764

if.end.9:                                         ; preds = %do.end, %do.body
  %17 = bitcast %struct._object** %_py_tmp to i8*, !dbg !12766
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !12766
  br label %do.cond.10, !dbg !12769

do.cond.10:                                       ; preds = %if.end.9
  br label %do.end.11, !dbg !12770

do.end.11:                                        ; preds = %do.cond.10
  br label %do.body.12, !dbg !12772

do.body.12:                                       ; preds = %do.end.11
  %18 = bitcast %struct._object** %_py_tmp13 to i8*, !dbg !12773
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !12773
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp13, metadata !1953, metadata !2526), !dbg !12775
  %19 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12776, !tbaa !2522
  %argtypes = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %19, i32 0, i32 12, !dbg !12777
  %20 = load %struct._object*, %struct._object** %argtypes, align 8, !dbg !12777, !tbaa !5749
  store %struct._object* %20, %struct._object** %_py_tmp13, align 8, !dbg !12775, !tbaa !2522
  %21 = load %struct._object*, %struct._object** %_py_tmp13, align 8, !dbg !12778, !tbaa !2522
  %cmp14 = icmp ne %struct._object* %21, null, !dbg !12779
  br i1 %cmp14, label %if.then.15, label %if.end.29, !dbg !12780

if.then.15:                                       ; preds = %do.body.12
  %22 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12781, !tbaa !2522
  %argtypes16 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %22, i32 0, i32 12, !dbg !12783
  store %struct._object* null, %struct._object** %argtypes16, align 8, !dbg !12784, !tbaa !5749
  br label %do.body.17, !dbg !12785

do.body.17:                                       ; preds = %if.then.15
  %23 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !12786
  call void @llvm.lifetime.start(i64 8, i8* %23) #2, !dbg !12786
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp18, metadata !1955, metadata !2526), !dbg !12788
  %24 = load %struct._object*, %struct._object** %_py_tmp13, align 8, !dbg !12789, !tbaa !2522
  store %struct._object* %24, %struct._object** %_py_decref_tmp18, align 8, !dbg !12788, !tbaa !2522
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !12790, !tbaa !2522
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !12792
  %26 = load i64, i64* %ob_refcnt19, align 8, !dbg !12793, !tbaa !2551
  %dec20 = add i64 %26, -1, !dbg !12793
  store i64 %dec20, i64* %ob_refcnt19, align 8, !dbg !12793, !tbaa !2551
  %cmp21 = icmp ne i64 %dec20, 0, !dbg !12794
  br i1 %cmp21, label %if.then.22, label %if.else.23, !dbg !12795

if.then.22:                                       ; preds = %do.body.17
  br label %if.end.26, !dbg !12796

if.else.23:                                       ; preds = %do.body.17
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !12798, !tbaa !2522
  %ob_type24 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !12800
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type24, align 8, !dbg !12800, !tbaa !2588
  %tp_dealloc25 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !12801
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc25, align 8, !dbg !12801, !tbaa !2590
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !12802, !tbaa !2522
  call void %29(%struct._object* %30), !dbg !12803
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.23, %if.then.22
  %31 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !12804
  call void @llvm.lifetime.end(i64 8, i8* %31) #2, !dbg !12804
  br label %do.cond.27, !dbg !12806

do.cond.27:                                       ; preds = %if.end.26
  br label %do.end.28, !dbg !12807

do.end.28:                                        ; preds = %do.cond.27
  br label %if.end.29, !dbg !12809

if.end.29:                                        ; preds = %do.end.28, %do.body.12
  %32 = bitcast %struct._object** %_py_tmp13 to i8*, !dbg !12811
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !12811
  br label %do.cond.30, !dbg !12812

do.cond.30:                                       ; preds = %if.end.29
  br label %do.end.31, !dbg !12813

do.end.31:                                        ; preds = %do.cond.30
  br label %if.end.77, !dbg !12815

if.else.32:                                       ; preds = %lor.lhs.false
  %33 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12816, !tbaa !2522
  %call = call %struct._object* @converters_from_argtypes(%struct._object* %33), !dbg !12817
  store %struct._object* %call, %struct._object** %converters, align 8, !dbg !12818, !tbaa !2522
  %34 = load %struct._object*, %struct._object** %converters, align 8, !dbg !12819, !tbaa !2522
  %tobool = icmp ne %struct._object* %34, null, !dbg !12819
  br i1 %tobool, label %if.end.34, label %if.then.33, !dbg !12821

if.then.33:                                       ; preds = %if.else.32
  store i32 -1, i32* %retval, !dbg !12822
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12822

if.end.34:                                        ; preds = %if.else.32
  br label %do.body.35, !dbg !12823

do.body.35:                                       ; preds = %if.end.34
  %35 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12824
  call void @llvm.lifetime.start(i64 8, i8* %35) #2, !dbg !12824
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1959, metadata !2526), !dbg !12826
  %36 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12827, !tbaa !2522
  %converters36 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %36, i32 0, i32 11, !dbg !12828
  %37 = load %struct._object*, %struct._object** %converters36, align 8, !dbg !12828, !tbaa !5731
  store %struct._object* %37, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12826, !tbaa !2522
  %38 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12829, !tbaa !2522
  %cmp37 = icmp ne %struct._object* %38, null, !dbg !12830
  br i1 %cmp37, label %if.then.38, label %if.end.51, !dbg !12831

if.then.38:                                       ; preds = %do.body.35
  br label %do.body.39, !dbg !12832

do.body.39:                                       ; preds = %if.then.38
  %39 = bitcast %struct._object** %_py_decref_tmp40 to i8*, !dbg !12834
  call void @llvm.lifetime.start(i64 8, i8* %39) #2, !dbg !12834
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp40, metadata !1962, metadata !2526), !dbg !12836
  %40 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !12837, !tbaa !2522
  store %struct._object* %40, %struct._object** %_py_decref_tmp40, align 8, !dbg !12836, !tbaa !2522
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !12838, !tbaa !2522
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !12840
  %42 = load i64, i64* %ob_refcnt41, align 8, !dbg !12841, !tbaa !2551
  %dec42 = add i64 %42, -1, !dbg !12841
  store i64 %dec42, i64* %ob_refcnt41, align 8, !dbg !12841, !tbaa !2551
  %cmp43 = icmp ne i64 %dec42, 0, !dbg !12842
  br i1 %cmp43, label %if.then.44, label %if.else.45, !dbg !12843

if.then.44:                                       ; preds = %do.body.39
  br label %if.end.48, !dbg !12844

if.else.45:                                       ; preds = %do.body.39
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !12846, !tbaa !2522
  %ob_type46 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !12848
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type46, align 8, !dbg !12848, !tbaa !2588
  %tp_dealloc47 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4, !dbg !12849
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc47, align 8, !dbg !12849, !tbaa !2590
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !12850, !tbaa !2522
  call void %45(%struct._object* %46), !dbg !12851
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.45, %if.then.44
  %47 = bitcast %struct._object** %_py_decref_tmp40 to i8*, !dbg !12852
  call void @llvm.lifetime.end(i64 8, i8* %47) #2, !dbg !12852
  br label %do.cond.49, !dbg !12854

do.cond.49:                                       ; preds = %if.end.48
  br label %do.end.50, !dbg !12855

do.end.50:                                        ; preds = %do.cond.49
  br label %if.end.51, !dbg !12857

if.end.51:                                        ; preds = %do.end.50, %do.body.35
  %48 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !12859
  call void @llvm.lifetime.end(i64 8, i8* %48) #2, !dbg !12859
  br label %do.cond.52, !dbg !12862

do.cond.52:                                       ; preds = %if.end.51
  br label %do.end.53, !dbg !12863

do.end.53:                                        ; preds = %do.cond.52
  %49 = load %struct._object*, %struct._object** %converters, align 8, !dbg !12865, !tbaa !2522
  %50 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12866, !tbaa !2522
  %converters54 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %50, i32 0, i32 11, !dbg !12867
  store %struct._object* %49, %struct._object** %converters54, align 8, !dbg !12868, !tbaa !5731
  br label %do.body.55, !dbg !12869

do.body.55:                                       ; preds = %do.end.53
  %51 = bitcast %struct._object** %_py_xdecref_tmp56 to i8*, !dbg !12870
  call void @llvm.lifetime.start(i64 8, i8* %51) #2, !dbg !12870
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp56, metadata !1965, metadata !2526), !dbg !12872
  %52 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12873, !tbaa !2522
  %argtypes57 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %52, i32 0, i32 12, !dbg !12874
  %53 = load %struct._object*, %struct._object** %argtypes57, align 8, !dbg !12874, !tbaa !5749
  store %struct._object* %53, %struct._object** %_py_xdecref_tmp56, align 8, !dbg !12872, !tbaa !2522
  %54 = load %struct._object*, %struct._object** %_py_xdecref_tmp56, align 8, !dbg !12875, !tbaa !2522
  %cmp58 = icmp ne %struct._object* %54, null, !dbg !12876
  br i1 %cmp58, label %if.then.59, label %if.end.72, !dbg !12877

if.then.59:                                       ; preds = %do.body.55
  br label %do.body.60, !dbg !12878

do.body.60:                                       ; preds = %if.then.59
  %55 = bitcast %struct._object** %_py_decref_tmp61 to i8*, !dbg !12880
  call void @llvm.lifetime.start(i64 8, i8* %55) #2, !dbg !12880
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp61, metadata !1967, metadata !2526), !dbg !12882
  %56 = load %struct._object*, %struct._object** %_py_xdecref_tmp56, align 8, !dbg !12883, !tbaa !2522
  store %struct._object* %56, %struct._object** %_py_decref_tmp61, align 8, !dbg !12882, !tbaa !2522
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8, !dbg !12884, !tbaa !2522
  %ob_refcnt62 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0, !dbg !12886
  %58 = load i64, i64* %ob_refcnt62, align 8, !dbg !12887, !tbaa !2551
  %dec63 = add i64 %58, -1, !dbg !12887
  store i64 %dec63, i64* %ob_refcnt62, align 8, !dbg !12887, !tbaa !2551
  %cmp64 = icmp ne i64 %dec63, 0, !dbg !12888
  br i1 %cmp64, label %if.then.65, label %if.else.66, !dbg !12889

if.then.65:                                       ; preds = %do.body.60
  br label %if.end.69, !dbg !12890

if.else.66:                                       ; preds = %do.body.60
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8, !dbg !12892, !tbaa !2522
  %ob_type67 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1, !dbg !12894
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type67, align 8, !dbg !12894, !tbaa !2588
  %tp_dealloc68 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4, !dbg !12895
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc68, align 8, !dbg !12895, !tbaa !2590
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp61, align 8, !dbg !12896, !tbaa !2522
  call void %61(%struct._object* %62), !dbg !12897
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.66, %if.then.65
  %63 = bitcast %struct._object** %_py_decref_tmp61 to i8*, !dbg !12898
  call void @llvm.lifetime.end(i64 8, i8* %63) #2, !dbg !12898
  br label %do.cond.70, !dbg !12900

do.cond.70:                                       ; preds = %if.end.69
  br label %do.end.71, !dbg !12901

do.end.71:                                        ; preds = %do.cond.70
  br label %if.end.72, !dbg !12903

if.end.72:                                        ; preds = %do.end.71, %do.body.55
  %64 = bitcast %struct._object** %_py_xdecref_tmp56 to i8*, !dbg !12905
  call void @llvm.lifetime.end(i64 8, i8* %64) #2, !dbg !12905
  br label %do.cond.73, !dbg !12906

do.cond.73:                                       ; preds = %if.end.72
  br label %do.end.74, !dbg !12907

do.end.74:                                        ; preds = %do.cond.73
  %65 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12909, !tbaa !2522
  %ob_refcnt75 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0, !dbg !12910
  %66 = load i64, i64* %ob_refcnt75, align 8, !dbg !12911, !tbaa !2551
  %inc = add i64 %66, 1, !dbg !12911
  store i64 %inc, i64* %ob_refcnt75, align 8, !dbg !12911, !tbaa !2551
  %67 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !12912, !tbaa !2522
  %68 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self.addr, align 8, !dbg !12913, !tbaa !2522
  %argtypes76 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %68, i32 0, i32 12, !dbg !12914
  store %struct._object* %67, %struct._object** %argtypes76, align 8, !dbg !12915, !tbaa !5749
  br label %if.end.77

if.end.77:                                        ; preds = %do.end.74, %do.end.31
  store i32 0, i32* %retval, !dbg !12916
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12916

cleanup:                                          ; preds = %if.end.77, %if.then.33
  %69 = bitcast %struct._object** %converters to i8*, !dbg !12917
  call void @llvm.lifetime.end(i64 8, i8* %69) #2, !dbg !12917
  %70 = load i32, i32* %retval, !dbg !12917
  ret i32 %70, !dbg !12917
}

; Function Attrs: uwtable
define internal %struct._object* @PyCFuncPtr_FromDll(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %name = alloca i8*, align 8
  %address = alloca i32 ()*, align 8
  %ftuple = alloca %struct._object*, align 8
  %dll = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %self = alloca %struct.PyCFuncPtrObject*, align 8
  %handle = alloca i8*, align 8
  %paramflags = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp18 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  %_py_decref_tmp46 = alloca %struct._object*, align 8
  %_py_decref_tmp60 = alloca %struct._object*, align 8
  %_py_decref_tmp75 = alloca %struct._object*, align 8
  %_py_decref_tmp92 = alloca %struct._object*, align 8
  %_py_decref_tmp106 = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp138 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1993, metadata !2526), !dbg !12918
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1994, metadata !2526), !dbg !12919
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !1995, metadata !2526), !dbg !12920
  %0 = bitcast i8** %name to i8*, !dbg !12921
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !12921
  call void @llvm.dbg.declare(metadata i8** %name, metadata !1996, metadata !2526), !dbg !12922
  %1 = bitcast i32 ()** %address to i8*, !dbg !12923
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !12923
  call void @llvm.dbg.declare(metadata i32 ()** %address, metadata !1997, metadata !2526), !dbg !12924
  %2 = bitcast %struct._object** %ftuple to i8*, !dbg !12925
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !12925
  call void @llvm.dbg.declare(metadata %struct._object** %ftuple, metadata !1998, metadata !2526), !dbg !12926
  %3 = bitcast %struct._object** %dll to i8*, !dbg !12927
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !12927
  call void @llvm.dbg.declare(metadata %struct._object** %dll, metadata !1999, metadata !2526), !dbg !12928
  %4 = bitcast %struct._object** %obj to i8*, !dbg !12929
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !12929
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !2000, metadata !2526), !dbg !12930
  %5 = bitcast %struct.PyCFuncPtrObject** %self to i8*, !dbg !12931
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !12931
  call void @llvm.dbg.declare(metadata %struct.PyCFuncPtrObject** %self, metadata !2001, metadata !2526), !dbg !12932
  %6 = bitcast i8** %handle to i8*, !dbg !12933
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !12933
  call void @llvm.dbg.declare(metadata i8** %handle, metadata !2002, metadata !2526), !dbg !12934
  %7 = bitcast %struct._object** %paramflags to i8*, !dbg !12935
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !12935
  call void @llvm.dbg.declare(metadata %struct._object** %paramflags, metadata !2003, metadata !2526), !dbg !12936
  store %struct._object* null, %struct._object** %paramflags, align 8, !dbg !12936, !tbaa !2522
  %8 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !12937, !tbaa !2522
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.156, i32 0, i32 0), %struct._object** %ftuple, %struct._object** %paramflags), !dbg !12939
  %tobool = icmp ne i32 %call, 0, !dbg !12939
  br i1 %tobool, label %if.end, label %if.then, !dbg !12940

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !12941
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12941

if.end:                                           ; preds = %entry
  %9 = load %struct._object*, %struct._object** %paramflags, align 8, !dbg !12942, !tbaa !2522
  %cmp = icmp eq %struct._object* %9, @_Py_NoneStruct, !dbg !12944
  br i1 %cmp, label %if.then.1, label %if.end.2, !dbg !12945

if.then.1:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %paramflags, align 8, !dbg !12946, !tbaa !2522
  br label %if.end.2, !dbg !12947

if.end.2:                                         ; preds = %if.then.1, %if.end
  %10 = load %struct._object*, %struct._object** %ftuple, align 8, !dbg !12948, !tbaa !2522
  %call3 = call %struct._object* @PySequence_Tuple(%struct._object* %10), !dbg !12949
  store %struct._object* %call3, %struct._object** %ftuple, align 8, !dbg !12950, !tbaa !2522
  %11 = load %struct._object*, %struct._object** %ftuple, align 8, !dbg !12951, !tbaa !2522
  %tobool4 = icmp ne %struct._object* %11, null, !dbg !12951
  br i1 %tobool4, label %if.end.6, label %if.then.5, !dbg !12953

if.then.5:                                        ; preds = %if.end.2
  store %struct._object* null, %struct._object** %retval, !dbg !12954
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12954

if.end.6:                                         ; preds = %if.end.2
  %12 = load %struct._object*, %struct._object** %ftuple, align 8, !dbg !12955, !tbaa !2522
  %call7 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.157, i32 0, i32 0), i32 (%struct._object*, i8**)* @_get_name, i8** %name, %struct._object** %dll), !dbg !12956
  %tobool8 = icmp ne i32 %call7, 0, !dbg !12956
  br i1 %tobool8, label %if.end.13, label %if.then.9, !dbg !12957

if.then.9:                                        ; preds = %if.end.6
  br label %do.body, !dbg !12958

do.body:                                          ; preds = %if.then.9
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12959
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !12959
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2004, metadata !2526), !dbg !12961
  %14 = load %struct._object*, %struct._object** %ftuple, align 8, !dbg !12962, !tbaa !2522
  store %struct._object* %14, %struct._object** %_py_decref_tmp, align 8, !dbg !12961, !tbaa !2522
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12963, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 0, !dbg !12965
  %16 = load i64, i64* %ob_refcnt, align 8, !dbg !12966, !tbaa !2551
  %dec = add i64 %16, -1, !dbg !12966
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !12966, !tbaa !2551
  %cmp10 = icmp ne i64 %dec, 0, !dbg !12967
  br i1 %cmp10, label %if.then.11, label %if.else, !dbg !12968

if.then.11:                                       ; preds = %do.body
  br label %if.end.12, !dbg !12969

if.else:                                          ; preds = %do.body
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12971, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !12973
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !12973, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 4, !dbg !12974
  %19 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !12974, !tbaa !2590
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !12975, !tbaa !2522
  call void %19(%struct._object* %20), !dbg !12976
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.11
  %21 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !12977
  call void @llvm.lifetime.end(i64 8, i8* %21) #2, !dbg !12977
  br label %do.cond, !dbg !12979

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !12980

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !12982
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !12982

if.end.13:                                        ; preds = %if.end.6
  %22 = load %struct._object*, %struct._object** %dll, align 8, !dbg !12983, !tbaa !2522
  %call14 = call %struct._object* @PyObject_GetAttrString(%struct._object* %22, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i32 0, i32 0)), !dbg !12984
  store %struct._object* %call14, %struct._object** %obj, align 8, !dbg !12985, !tbaa !2522
  %23 = load %struct._object*, %struct._object** %obj, align 8, !dbg !12986, !tbaa !2522
  %tobool15 = icmp ne %struct._object* %23, null, !dbg !12986
  br i1 %tobool15, label %if.end.29, label %if.then.16, !dbg !12987

if.then.16:                                       ; preds = %if.end.13
  br label %do.body.17, !dbg !12988

do.body.17:                                       ; preds = %if.then.16
  %24 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !12989
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !12989
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp18, metadata !2008, metadata !2526), !dbg !12991
  %25 = load %struct._object*, %struct._object** %ftuple, align 8, !dbg !12992, !tbaa !2522
  store %struct._object* %25, %struct._object** %_py_decref_tmp18, align 8, !dbg !12991, !tbaa !2522
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !12993, !tbaa !2522
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !12995
  %27 = load i64, i64* %ob_refcnt19, align 8, !dbg !12996, !tbaa !2551
  %dec20 = add i64 %27, -1, !dbg !12996
  store i64 %dec20, i64* %ob_refcnt19, align 8, !dbg !12996, !tbaa !2551
  %cmp21 = icmp ne i64 %dec20, 0, !dbg !12997
  br i1 %cmp21, label %if.then.22, label %if.else.23, !dbg !12998

if.then.22:                                       ; preds = %do.body.17
  br label %if.end.26, !dbg !12999

if.else.23:                                       ; preds = %do.body.17
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !13001, !tbaa !2522
  %ob_type24 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !13003
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type24, align 8, !dbg !13003, !tbaa !2588
  %tp_dealloc25 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4, !dbg !13004
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc25, align 8, !dbg !13004, !tbaa !2590
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !13005, !tbaa !2522
  call void %30(%struct._object* %31), !dbg !13006
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.23, %if.then.22
  %32 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !13007
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !13007
  br label %do.cond.27, !dbg !13009

do.cond.27:                                       ; preds = %if.end.26
  br label %do.end.28, !dbg !13010

do.end.28:                                        ; preds = %do.cond.27
  store %struct._object* null, %struct._object** %retval, !dbg !13012
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13012

if.end.29:                                        ; preds = %if.end.13
  %33 = load %struct._object*, %struct._object** %obj, align 8, !dbg !13013, !tbaa !2522
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !13014
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !13014, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 19, !dbg !13015
  %35 = load i64, i64* %tp_flags, align 8, !dbg !13015, !tbaa !2849
  %and = and i64 %35, 16777216, !dbg !13016
  %cmp31 = icmp ne i64 %and, 0, !dbg !13017
  br i1 %cmp31, label %if.end.57, label %if.then.32, !dbg !13018

if.then.32:                                       ; preds = %if.end.29
  %36 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !13019, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %36, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.68, i32 0, i32 0)), !dbg !13020
  br label %do.body.33, !dbg !13021

do.body.33:                                       ; preds = %if.then.32
  %37 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !13022
  call void @llvm.lifetime.start(i64 8, i8* %37) #2, !dbg !13022
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !2012, metadata !2526), !dbg !13024
  %38 = load %struct._object*, %struct._object** %ftuple, align 8, !dbg !13025, !tbaa !2522
  store %struct._object* %38, %struct._object** %_py_decref_tmp34, align 8, !dbg !13024, !tbaa !2522
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !13026, !tbaa !2522
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !13028
  %40 = load i64, i64* %ob_refcnt35, align 8, !dbg !13029, !tbaa !2551
  %dec36 = add i64 %40, -1, !dbg !13029
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !13029, !tbaa !2551
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !13030
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !13031

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !13032

if.else.39:                                       ; preds = %do.body.33
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !13034, !tbaa !2522
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !13036
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !13036, !tbaa !2588
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4, !dbg !13037
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !13037, !tbaa !2590
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !13038, !tbaa !2522
  call void %43(%struct._object* %44), !dbg !13039
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %45 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !13040
  call void @llvm.lifetime.end(i64 8, i8* %45) #2, !dbg !13040
  br label %do.cond.43, !dbg !13042

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !13043

do.end.44:                                        ; preds = %do.cond.43
  br label %do.body.45, !dbg !13045

do.body.45:                                       ; preds = %do.end.44
  %46 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !13046
  call void @llvm.lifetime.start(i64 8, i8* %46) #2, !dbg !13046
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp46, metadata !2016, metadata !2526), !dbg !13048
  %47 = load %struct._object*, %struct._object** %obj, align 8, !dbg !13049, !tbaa !2522
  store %struct._object* %47, %struct._object** %_py_decref_tmp46, align 8, !dbg !13048, !tbaa !2522
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !13050, !tbaa !2522
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0, !dbg !13052
  %49 = load i64, i64* %ob_refcnt47, align 8, !dbg !13053, !tbaa !2551
  %dec48 = add i64 %49, -1, !dbg !13053
  store i64 %dec48, i64* %ob_refcnt47, align 8, !dbg !13053, !tbaa !2551
  %cmp49 = icmp ne i64 %dec48, 0, !dbg !13054
  br i1 %cmp49, label %if.then.50, label %if.else.51, !dbg !13055

if.then.50:                                       ; preds = %do.body.45
  br label %if.end.54, !dbg !13056

if.else.51:                                       ; preds = %do.body.45
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !13058, !tbaa !2522
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 1, !dbg !13060
  %51 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8, !dbg !13060, !tbaa !2588
  %tp_dealloc53 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %51, i32 0, i32 4, !dbg !13061
  %52 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc53, align 8, !dbg !13061, !tbaa !2590
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !13062, !tbaa !2522
  call void %52(%struct._object* %53), !dbg !13063
  br label %if.end.54

if.end.54:                                        ; preds = %if.else.51, %if.then.50
  %54 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !13064
  call void @llvm.lifetime.end(i64 8, i8* %54) #2, !dbg !13064
  br label %do.cond.55, !dbg !13065

do.cond.55:                                       ; preds = %if.end.54
  br label %do.end.56, !dbg !13066

do.end.56:                                        ; preds = %do.cond.55
  store %struct._object* null, %struct._object** %retval, !dbg !13068
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13068

if.end.57:                                        ; preds = %if.end.29
  %55 = load %struct._object*, %struct._object** %obj, align 8, !dbg !13069, !tbaa !2522
  %call58 = call i8* @PyLong_AsVoidPtr(%struct._object* %55), !dbg !13070
  store i8* %call58, i8** %handle, align 8, !dbg !13071, !tbaa !2522
  br label %do.body.59, !dbg !13072

do.body.59:                                       ; preds = %if.end.57
  %56 = bitcast %struct._object** %_py_decref_tmp60 to i8*, !dbg !13073
  call void @llvm.lifetime.start(i64 8, i8* %56) #2, !dbg !13073
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp60, metadata !2018, metadata !2526), !dbg !13075
  %57 = load %struct._object*, %struct._object** %obj, align 8, !dbg !13076, !tbaa !2522
  store %struct._object* %57, %struct._object** %_py_decref_tmp60, align 8, !dbg !13075, !tbaa !2522
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !13077, !tbaa !2522
  %ob_refcnt61 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 0, !dbg !13079
  %59 = load i64, i64* %ob_refcnt61, align 8, !dbg !13080, !tbaa !2551
  %dec62 = add i64 %59, -1, !dbg !13080
  store i64 %dec62, i64* %ob_refcnt61, align 8, !dbg !13080, !tbaa !2551
  %cmp63 = icmp ne i64 %dec62, 0, !dbg !13081
  br i1 %cmp63, label %if.then.64, label %if.else.65, !dbg !13082

if.then.64:                                       ; preds = %do.body.59
  br label %if.end.68, !dbg !13083

if.else.65:                                       ; preds = %do.body.59
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !13085, !tbaa !2522
  %ob_type66 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 1, !dbg !13087
  %61 = load %struct._typeobject*, %struct._typeobject** %ob_type66, align 8, !dbg !13087, !tbaa !2588
  %tp_dealloc67 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %61, i32 0, i32 4, !dbg !13088
  %62 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc67, align 8, !dbg !13088, !tbaa !2590
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !13089, !tbaa !2522
  call void %62(%struct._object* %63), !dbg !13090
  br label %if.end.68

if.end.68:                                        ; preds = %if.else.65, %if.then.64
  %64 = bitcast %struct._object** %_py_decref_tmp60 to i8*, !dbg !13091
  call void @llvm.lifetime.end(i64 8, i8* %64) #2, !dbg !13091
  br label %do.cond.69, !dbg !13093

do.cond.69:                                       ; preds = %if.end.68
  br label %do.end.70, !dbg !13094

do.end.70:                                        ; preds = %do.cond.69
  %call71 = call %struct._object* @PyErr_Occurred(), !dbg !13096
  %tobool72 = icmp ne %struct._object* %call71, null, !dbg !13096
  br i1 %tobool72, label %if.then.73, label %if.end.86, !dbg !13097

if.then.73:                                       ; preds = %do.end.70
  %65 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !13098, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %65, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.69, i32 0, i32 0)), !dbg !13099
  br label %do.body.74, !dbg !13100

do.body.74:                                       ; preds = %if.then.73
  %66 = bitcast %struct._object** %_py_decref_tmp75 to i8*, !dbg !13101
  call void @llvm.lifetime.start(i64 8, i8* %66) #2, !dbg !13101
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp75, metadata !2020, metadata !2526), !dbg !13103
  %67 = load %struct._object*, %struct._object** %ftuple, align 8, !dbg !13104, !tbaa !2522
  store %struct._object* %67, %struct._object** %_py_decref_tmp75, align 8, !dbg !13103, !tbaa !2522
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8, !dbg !13105, !tbaa !2522
  %ob_refcnt76 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0, !dbg !13107
  %69 = load i64, i64* %ob_refcnt76, align 8, !dbg !13108, !tbaa !2551
  %dec77 = add i64 %69, -1, !dbg !13108
  store i64 %dec77, i64* %ob_refcnt76, align 8, !dbg !13108, !tbaa !2551
  %cmp78 = icmp ne i64 %dec77, 0, !dbg !13109
  br i1 %cmp78, label %if.then.79, label %if.else.80, !dbg !13110

if.then.79:                                       ; preds = %do.body.74
  br label %if.end.83, !dbg !13111

if.else.80:                                       ; preds = %do.body.74
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8, !dbg !13113, !tbaa !2522
  %ob_type81 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1, !dbg !13115
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type81, align 8, !dbg !13115, !tbaa !2588
  %tp_dealloc82 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %71, i32 0, i32 4, !dbg !13116
  %72 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc82, align 8, !dbg !13116, !tbaa !2590
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp75, align 8, !dbg !13117, !tbaa !2522
  call void %72(%struct._object* %73), !dbg !13118
  br label %if.end.83

if.end.83:                                        ; preds = %if.else.80, %if.then.79
  %74 = bitcast %struct._object** %_py_decref_tmp75 to i8*, !dbg !13119
  call void @llvm.lifetime.end(i64 8, i8* %74) #2, !dbg !13119
  br label %do.cond.84, !dbg !13121

do.cond.84:                                       ; preds = %if.end.83
  br label %do.end.85, !dbg !13122

do.end.85:                                        ; preds = %do.cond.84
  store %struct._object* null, %struct._object** %retval, !dbg !13124
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13124

if.end.86:                                        ; preds = %do.end.70
  %75 = load i8*, i8** %handle, align 8, !dbg !13125, !tbaa !2522
  %76 = load i8*, i8** %name, align 8, !dbg !13126, !tbaa !2522
  %call87 = call i8* @dlsym(i8* %75, i8* %76) #2, !dbg !13127
  %77 = bitcast i8* %call87 to i32 ()*, !dbg !13128
  store i32 ()* %77, i32 ()** %address, align 8, !dbg !13129, !tbaa !2522
  %78 = load i32 ()*, i32 ()** %address, align 8, !dbg !13130, !tbaa !2522
  %tobool88 = icmp ne i32 ()* %78, null, !dbg !13130
  br i1 %tobool88, label %if.end.103, label %if.then.89, !dbg !13131

if.then.89:                                       ; preds = %if.end.86
  %79 = load %struct._object*, %struct._object** @PyExc_AttributeError, align 8, !dbg !13132, !tbaa !2522
  %call90 = call i8* @dlerror() #2, !dbg !13133
  call void @PyErr_SetString(%struct._object* %79, i8* %call90), !dbg !13134
  br label %do.body.91, !dbg !13135

do.body.91:                                       ; preds = %if.then.89
  %80 = bitcast %struct._object** %_py_decref_tmp92 to i8*, !dbg !13136
  call void @llvm.lifetime.start(i64 8, i8* %80) #2, !dbg !13136
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp92, metadata !2024, metadata !2526), !dbg !13138
  %81 = load %struct._object*, %struct._object** %ftuple, align 8, !dbg !13139, !tbaa !2522
  store %struct._object* %81, %struct._object** %_py_decref_tmp92, align 8, !dbg !13138, !tbaa !2522
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp92, align 8, !dbg !13140, !tbaa !2522
  %ob_refcnt93 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 0, !dbg !13142
  %83 = load i64, i64* %ob_refcnt93, align 8, !dbg !13143, !tbaa !2551
  %dec94 = add i64 %83, -1, !dbg !13143
  store i64 %dec94, i64* %ob_refcnt93, align 8, !dbg !13143, !tbaa !2551
  %cmp95 = icmp ne i64 %dec94, 0, !dbg !13144
  br i1 %cmp95, label %if.then.96, label %if.else.97, !dbg !13145

if.then.96:                                       ; preds = %do.body.91
  br label %if.end.100, !dbg !13146

if.else.97:                                       ; preds = %do.body.91
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp92, align 8, !dbg !13148, !tbaa !2522
  %ob_type98 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 1, !dbg !13150
  %85 = load %struct._typeobject*, %struct._typeobject** %ob_type98, align 8, !dbg !13150, !tbaa !2588
  %tp_dealloc99 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %85, i32 0, i32 4, !dbg !13151
  %86 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc99, align 8, !dbg !13151, !tbaa !2590
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp92, align 8, !dbg !13152, !tbaa !2522
  call void %86(%struct._object* %87), !dbg !13153
  br label %if.end.100

if.end.100:                                       ; preds = %if.else.97, %if.then.96
  %88 = bitcast %struct._object** %_py_decref_tmp92 to i8*, !dbg !13154
  call void @llvm.lifetime.end(i64 8, i8* %88) #2, !dbg !13154
  br label %do.cond.101, !dbg !13156

do.cond.101:                                      ; preds = %if.end.100
  br label %do.end.102, !dbg !13157

do.end.102:                                       ; preds = %do.cond.101
  store %struct._object* null, %struct._object** %retval, !dbg !13159
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13159

if.end.103:                                       ; preds = %if.end.86
  %89 = load %struct._object*, %struct._object** %dll, align 8, !dbg !13160, !tbaa !2522
  %ob_refcnt104 = getelementptr inbounds %struct._object, %struct._object* %89, i32 0, i32 0, !dbg !13161
  %90 = load i64, i64* %ob_refcnt104, align 8, !dbg !13162, !tbaa !2551
  %inc = add i64 %90, 1, !dbg !13162
  store i64 %inc, i64* %ob_refcnt104, align 8, !dbg !13162, !tbaa !2551
  br label %do.body.105, !dbg !13163

do.body.105:                                      ; preds = %if.end.103
  %91 = bitcast %struct._object** %_py_decref_tmp106 to i8*, !dbg !13164
  call void @llvm.lifetime.start(i64 8, i8* %91) #2, !dbg !13164
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp106, metadata !2028, metadata !2526), !dbg !13166
  %92 = load %struct._object*, %struct._object** %ftuple, align 8, !dbg !13167, !tbaa !2522
  store %struct._object* %92, %struct._object** %_py_decref_tmp106, align 8, !dbg !13166, !tbaa !2522
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp106, align 8, !dbg !13168, !tbaa !2522
  %ob_refcnt107 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 0, !dbg !13170
  %94 = load i64, i64* %ob_refcnt107, align 8, !dbg !13171, !tbaa !2551
  %dec108 = add i64 %94, -1, !dbg !13171
  store i64 %dec108, i64* %ob_refcnt107, align 8, !dbg !13171, !tbaa !2551
  %cmp109 = icmp ne i64 %dec108, 0, !dbg !13172
  br i1 %cmp109, label %if.then.110, label %if.else.111, !dbg !13173

if.then.110:                                      ; preds = %do.body.105
  br label %if.end.114, !dbg !13174

if.else.111:                                      ; preds = %do.body.105
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp106, align 8, !dbg !13176, !tbaa !2522
  %ob_type112 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 1, !dbg !13178
  %96 = load %struct._typeobject*, %struct._typeobject** %ob_type112, align 8, !dbg !13178, !tbaa !2588
  %tp_dealloc113 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %96, i32 0, i32 4, !dbg !13179
  %97 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc113, align 8, !dbg !13179, !tbaa !2590
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp106, align 8, !dbg !13180, !tbaa !2522
  call void %97(%struct._object* %98), !dbg !13181
  br label %if.end.114

if.end.114:                                       ; preds = %if.else.111, %if.then.110
  %99 = bitcast %struct._object** %_py_decref_tmp106 to i8*, !dbg !13182
  call void @llvm.lifetime.end(i64 8, i8* %99) #2, !dbg !13182
  br label %do.cond.115, !dbg !13183

do.cond.115:                                      ; preds = %if.end.114
  br label %do.end.116, !dbg !13184

do.end.116:                                       ; preds = %do.cond.115
  %100 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !13186, !tbaa !2522
  %101 = load %struct._object*, %struct._object** %paramflags, align 8, !dbg !13188, !tbaa !2522
  %call117 = call i32 @_validate_paramflags(%struct._typeobject* %100, %struct._object* %101), !dbg !13189
  %tobool118 = icmp ne i32 %call117, 0, !dbg !13189
  br i1 %tobool118, label %if.end.120, label %if.then.119, !dbg !13190

if.then.119:                                      ; preds = %do.end.116
  store %struct._object* null, %struct._object** %retval, !dbg !13191
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13191

if.end.120:                                       ; preds = %do.end.116
  %102 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !13192, !tbaa !2522
  %103 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !13193, !tbaa !2522
  %104 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !13194, !tbaa !2522
  %call121 = call %struct._object* @GenericPyCData_new(%struct._typeobject* %102, %struct._object* %103, %struct._object* %104), !dbg !13195
  %105 = bitcast %struct._object* %call121 to %struct.PyCFuncPtrObject*, !dbg !13196
  store %struct.PyCFuncPtrObject* %105, %struct.PyCFuncPtrObject** %self, align 8, !dbg !13197, !tbaa !2522
  %106 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !13198, !tbaa !2522
  %tobool122 = icmp ne %struct.PyCFuncPtrObject* %106, null, !dbg !13198
  br i1 %tobool122, label %if.end.124, label %if.then.123, !dbg !13200

if.then.123:                                      ; preds = %if.end.120
  store %struct._object* null, %struct._object** %retval, !dbg !13201
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13201

if.end.124:                                       ; preds = %if.end.120
  br label %do.body.125, !dbg !13202

do.body.125:                                      ; preds = %if.end.124
  %107 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !13203
  call void @llvm.lifetime.start(i64 8, i8* %107) #2, !dbg !13203
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !2030, metadata !2526), !dbg !13205
  %108 = load %struct._object*, %struct._object** %paramflags, align 8, !dbg !13206, !tbaa !2522
  store %struct._object* %108, %struct._object** %_py_xincref_tmp, align 8, !dbg !13205, !tbaa !2522
  %109 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !13207, !tbaa !2522
  %cmp126 = icmp ne %struct._object* %109, null, !dbg !13209
  br i1 %cmp126, label %if.then.127, label %if.end.130, !dbg !13210

if.then.127:                                      ; preds = %do.body.125
  %110 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !13211, !tbaa !2522
  %ob_refcnt128 = getelementptr inbounds %struct._object, %struct._object* %110, i32 0, i32 0, !dbg !13213
  %111 = load i64, i64* %ob_refcnt128, align 8, !dbg !13214, !tbaa !2551
  %inc129 = add i64 %111, 1, !dbg !13214
  store i64 %inc129, i64* %ob_refcnt128, align 8, !dbg !13214, !tbaa !2551
  br label %if.end.130, !dbg !13215

if.end.130:                                       ; preds = %if.then.127, %do.body.125
  %112 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !13216
  call void @llvm.lifetime.end(i64 8, i8* %112) #2, !dbg !13216
  br label %do.cond.131, !dbg !13219

do.cond.131:                                      ; preds = %if.end.130
  br label %do.end.132, !dbg !13220

do.end.132:                                       ; preds = %do.cond.131
  %113 = load %struct._object*, %struct._object** %paramflags, align 8, !dbg !13222, !tbaa !2522
  %114 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !13223, !tbaa !2522
  %paramflags133 = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %114, i32 0, i32 16, !dbg !13224
  store %struct._object* %113, %struct._object** %paramflags133, align 8, !dbg !13225, !tbaa !6162
  %115 = load i32 ()*, i32 ()** %address, align 8, !dbg !13226, !tbaa !2522
  %116 = bitcast i32 ()* %115 to i8*, !dbg !13226
  %117 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !13227, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %117, i32 0, i32 1, !dbg !13228
  %118 = load i8*, i8** %b_ptr, align 8, !dbg !13228, !tbaa !5762
  %119 = bitcast i8* %118 to i8**, !dbg !13229
  store i8* %116, i8** %119, align 8, !dbg !13230, !tbaa !2522
  %120 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !13231, !tbaa !2522
  %121 = bitcast %struct.PyCFuncPtrObject* %120 to %struct.tagCDataObject*, !dbg !13232
  %122 = load %struct._object*, %struct._object** %dll, align 8, !dbg !13233, !tbaa !2522
  %call134 = call i32 @KeepRef(%struct.tagCDataObject* %121, i64 0, %struct._object* %122), !dbg !13234
  %cmp135 = icmp eq i32 -1, %call134, !dbg !13235
  br i1 %cmp135, label %if.then.136, label %if.end.149, !dbg !13236

if.then.136:                                      ; preds = %do.end.132
  br label %do.body.137, !dbg !13237

do.body.137:                                      ; preds = %if.then.136
  %123 = bitcast %struct._object** %_py_decref_tmp138 to i8*, !dbg !13238
  call void @llvm.lifetime.start(i64 8, i8* %123) #2, !dbg !13238
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp138, metadata !2032, metadata !2526), !dbg !13240
  %124 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !13241, !tbaa !2522
  %125 = bitcast %struct.PyCFuncPtrObject* %124 to %struct._object*, !dbg !13242
  store %struct._object* %125, %struct._object** %_py_decref_tmp138, align 8, !dbg !13240, !tbaa !2522
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp138, align 8, !dbg !13243, !tbaa !2522
  %ob_refcnt139 = getelementptr inbounds %struct._object, %struct._object* %126, i32 0, i32 0, !dbg !13245
  %127 = load i64, i64* %ob_refcnt139, align 8, !dbg !13246, !tbaa !2551
  %dec140 = add i64 %127, -1, !dbg !13246
  store i64 %dec140, i64* %ob_refcnt139, align 8, !dbg !13246, !tbaa !2551
  %cmp141 = icmp ne i64 %dec140, 0, !dbg !13247
  br i1 %cmp141, label %if.then.142, label %if.else.143, !dbg !13248

if.then.142:                                      ; preds = %do.body.137
  br label %if.end.146, !dbg !13249

if.else.143:                                      ; preds = %do.body.137
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp138, align 8, !dbg !13251, !tbaa !2522
  %ob_type144 = getelementptr inbounds %struct._object, %struct._object* %128, i32 0, i32 1, !dbg !13253
  %129 = load %struct._typeobject*, %struct._typeobject** %ob_type144, align 8, !dbg !13253, !tbaa !2588
  %tp_dealloc145 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %129, i32 0, i32 4, !dbg !13254
  %130 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc145, align 8, !dbg !13254, !tbaa !2590
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp138, align 8, !dbg !13255, !tbaa !2522
  call void %130(%struct._object* %131), !dbg !13256
  br label %if.end.146

if.end.146:                                       ; preds = %if.else.143, %if.then.142
  %132 = bitcast %struct._object** %_py_decref_tmp138 to i8*, !dbg !13257
  call void @llvm.lifetime.end(i64 8, i8* %132) #2, !dbg !13257
  br label %do.cond.147, !dbg !13259

do.cond.147:                                      ; preds = %if.end.146
  br label %do.end.148, !dbg !13260

do.end.148:                                       ; preds = %do.cond.147
  store %struct._object* null, %struct._object** %retval, !dbg !13262
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13262

if.end.149:                                       ; preds = %do.end.132
  %133 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !13263, !tbaa !2522
  %134 = bitcast %struct.PyCFuncPtrObject* %133 to %struct._object*, !dbg !13264
  %ob_refcnt150 = getelementptr inbounds %struct._object, %struct._object* %134, i32 0, i32 0, !dbg !13265
  %135 = load i64, i64* %ob_refcnt150, align 8, !dbg !13266, !tbaa !2551
  %inc151 = add i64 %135, 1, !dbg !13266
  store i64 %inc151, i64* %ob_refcnt150, align 8, !dbg !13266, !tbaa !2551
  %136 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !13267, !tbaa !2522
  %137 = bitcast %struct.PyCFuncPtrObject* %136 to %struct._object*, !dbg !13268
  %138 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !13269, !tbaa !2522
  %callable = getelementptr inbounds %struct.PyCFuncPtrObject, %struct.PyCFuncPtrObject* %138, i32 0, i32 10, !dbg !13270
  store %struct._object* %137, %struct._object** %callable, align 8, !dbg !13271, !tbaa !5993
  %139 = load %struct.PyCFuncPtrObject*, %struct.PyCFuncPtrObject** %self, align 8, !dbg !13272, !tbaa !2522
  %140 = bitcast %struct.PyCFuncPtrObject* %139 to %struct._object*, !dbg !13273
  store %struct._object* %140, %struct._object** %retval, !dbg !13274
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13274

cleanup:                                          ; preds = %if.end.149, %do.end.148, %if.then.123, %if.then.119, %do.end.102, %do.end.85, %do.end.56, %do.end.28, %do.end, %if.then.5, %if.then
  %141 = bitcast %struct._object** %paramflags to i8*, !dbg !13275
  call void @llvm.lifetime.end(i64 8, i8* %141) #2, !dbg !13275
  %142 = bitcast i8** %handle to i8*, !dbg !13275
  call void @llvm.lifetime.end(i64 8, i8* %142) #2, !dbg !13275
  %143 = bitcast %struct.PyCFuncPtrObject** %self to i8*, !dbg !13275
  call void @llvm.lifetime.end(i64 8, i8* %143) #2, !dbg !13275
  %144 = bitcast %struct._object** %obj to i8*, !dbg !13275
  call void @llvm.lifetime.end(i64 8, i8* %144) #2, !dbg !13275
  %145 = bitcast %struct._object** %dll to i8*, !dbg !13275
  call void @llvm.lifetime.end(i64 8, i8* %145) #2, !dbg !13275
  %146 = bitcast %struct._object** %ftuple to i8*, !dbg !13275
  call void @llvm.lifetime.end(i64 8, i8* %146) #2, !dbg !13275
  %147 = bitcast i32 ()** %address to i8*, !dbg !13275
  call void @llvm.lifetime.end(i64 8, i8* %147) #2, !dbg !13275
  %148 = bitcast i8** %name to i8*, !dbg !13275
  call void @llvm.lifetime.end(i64 8, i8* %148) #2, !dbg !13275
  %149 = load %struct._object*, %struct._object** %retval, !dbg !13275
  ret %struct._object* %149, !dbg !13275
}

declare %struct.CThunkObject* @_ctypes_alloc_callback(%struct._object*, %struct._object*, %struct._object*, i32) #3

; Function Attrs: uwtable
define internal i32 @_get_name(%struct._object* %obj, i8** %pname) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %pname.addr = alloca i8**, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %obj.addr, metadata !2040, metadata !2526), !dbg !13276
  store i8** %pname, i8*** %pname.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8*** %pname.addr, metadata !2041, metadata !2526), !dbg !13277
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !13278, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1, !dbg !13280
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13280, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19, !dbg !13281
  %2 = load i64, i64* %tp_flags, align 8, !dbg !13281, !tbaa !2849
  %and = and i64 %2, 134217728, !dbg !13282
  %cmp = icmp ne i64 %and, 0, !dbg !13283
  br i1 %cmp, label %if.then, label %if.end, !dbg !13284

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !13285, !tbaa !2522
  %4 = bitcast %struct._object* %3 to %struct.PyBytesObject*, !dbg !13287
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %4, i32 0, i32 2, !dbg !13288
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !13289
  %5 = load i8**, i8*** %pname.addr, align 8, !dbg !13290, !tbaa !2522
  store i8* %arraydecay, i8** %5, align 8, !dbg !13291, !tbaa !2522
  %6 = load i8**, i8*** %pname.addr, align 8, !dbg !13292, !tbaa !2522
  %7 = load i8*, i8** %6, align 8, !dbg !13293, !tbaa !2522
  %tobool = icmp ne i8* %7, null, !dbg !13293
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !13293
  store i32 %cond, i32* %retval, !dbg !13294
  br label %return, !dbg !13294

if.end:                                           ; preds = %entry
  %8 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !13295, !tbaa !2522
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !13297
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !13297, !tbaa !2588
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 19, !dbg !13298
  %10 = load i64, i64* %tp_flags2, align 8, !dbg !13298, !tbaa !2849
  %and3 = and i64 %10, 268435456, !dbg !13299
  %cmp4 = icmp ne i64 %and3, 0, !dbg !13300
  br i1 %cmp4, label %if.then.5, label %if.end.8, !dbg !13301

if.then.5:                                        ; preds = %if.end
  %11 = load %struct._object*, %struct._object** %obj.addr, align 8, !dbg !13302, !tbaa !2522
  %call = call i8* @PyUnicode_AsUTF8(%struct._object* %11), !dbg !13304
  %12 = load i8**, i8*** %pname.addr, align 8, !dbg !13305, !tbaa !2522
  store i8* %call, i8** %12, align 8, !dbg !13306, !tbaa !2522
  %13 = load i8**, i8*** %pname.addr, align 8, !dbg !13307, !tbaa !2522
  %14 = load i8*, i8** %13, align 8, !dbg !13308, !tbaa !2522
  %tobool6 = icmp ne i8* %14, null, !dbg !13308
  %cond7 = select i1 %tobool6, i32 1, i32 0, !dbg !13308
  store i32 %cond7, i32* %retval, !dbg !13309
  br label %return, !dbg !13309

if.end.8:                                         ; preds = %if.end
  %15 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !13310, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.158, i32 0, i32 0)), !dbg !13311
  store i32 0, i32* %retval, !dbg !13312
  br label %return, !dbg !13312

return:                                           ; preds = %if.end.8, %if.then.5, %if.then
  %16 = load i32, i32* %retval, !dbg !13313
  ret i32 %16, !dbg !13313
}

; Function Attrs: uwtable
define internal i32 @_validate_paramflags(%struct._typeobject* %type, %struct._object* %paramflags) #0 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca %struct._typeobject*, align 8
  %paramflags.addr = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %len = alloca i64, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %argtypes = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %item = alloca %struct._object*, align 8
  %flag = alloca i32, align 4
  %name = alloca i8*, align 8
  %defval = alloca %struct._object*, align 8
  %typ = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2046, metadata !2526), !dbg !13314
  store %struct._object* %paramflags, %struct._object** %paramflags.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %paramflags.addr, metadata !2047, metadata !2526), !dbg !13315
  %0 = bitcast i64* %i to i8*, !dbg !13316
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !13316
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2048, metadata !2526), !dbg !13317
  %1 = bitcast i64* %len to i8*, !dbg !13316
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !13316
  call void @llvm.dbg.declare(metadata i64* %len, metadata !2049, metadata !2526), !dbg !13318
  %2 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !13319
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !13319
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !2050, metadata !2526), !dbg !13320
  %3 = bitcast %struct._object** %argtypes to i8*, !dbg !13321
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !13321
  call void @llvm.dbg.declare(metadata %struct._object** %argtypes, metadata !2051, metadata !2526), !dbg !13322
  %4 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !13323, !tbaa !2522
  %5 = bitcast %struct._typeobject* %4 to %struct._object*, !dbg !13324
  %call = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %5), !dbg !13325
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !13326, !tbaa !2522
  %6 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !13327, !tbaa !2522
  %argtypes1 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %6, i32 0, i32 9, !dbg !13328
  %7 = load %struct._object*, %struct._object** %argtypes1, align 8, !dbg !13328, !tbaa !5754
  store %struct._object* %7, %struct._object** %argtypes, align 8, !dbg !13329, !tbaa !2522
  %8 = load %struct._object*, %struct._object** %paramflags.addr, align 8, !dbg !13330, !tbaa !2522
  %cmp = icmp eq %struct._object* %8, null, !dbg !13332
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13333

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !13334, !tbaa !2522
  %argtypes2 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %9, i32 0, i32 9, !dbg !13336
  %10 = load %struct._object*, %struct._object** %argtypes2, align 8, !dbg !13336, !tbaa !5754
  %cmp3 = icmp eq %struct._object* %10, null, !dbg !13337
  br i1 %cmp3, label %if.then, label %if.end, !dbg !13338

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval, !dbg !13339
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.29, !dbg !13339

if.end:                                           ; preds = %lor.lhs.false
  %11 = load %struct._object*, %struct._object** %paramflags.addr, align 8, !dbg !13340, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !13342
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13342, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 19, !dbg !13343
  %13 = load i64, i64* %tp_flags, align 8, !dbg !13343, !tbaa !2849
  %and = and i64 %13, 67108864, !dbg !13344
  %cmp4 = icmp ne i64 %and, 0, !dbg !13345
  br i1 %cmp4, label %if.end.6, label %if.then.5, !dbg !13346

if.then.5:                                        ; preds = %if.end
  %14 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !13347, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.159, i32 0, i32 0)), !dbg !13349
  store i32 0, i32* %retval, !dbg !13350
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.29, !dbg !13350

if.end.6:                                         ; preds = %if.end
  %15 = load %struct._object*, %struct._object** %paramflags.addr, align 8, !dbg !13351, !tbaa !2522
  %16 = bitcast %struct._object* %15 to %struct.PyVarObject*, !dbg !13352
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1, !dbg !13353
  %17 = load i64, i64* %ob_size, align 8, !dbg !13353, !tbaa !5784
  store i64 %17, i64* %len, align 8, !dbg !13354, !tbaa !2704
  %18 = load i64, i64* %len, align 8, !dbg !13355, !tbaa !2704
  %19 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !13357, !tbaa !2522
  %argtypes7 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %19, i32 0, i32 9, !dbg !13358
  %20 = load %struct._object*, %struct._object** %argtypes7, align 8, !dbg !13358, !tbaa !5754
  %21 = bitcast %struct._object* %20 to %struct.PyVarObject*, !dbg !13359
  %ob_size8 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %21, i32 0, i32 1, !dbg !13360
  %22 = load i64, i64* %ob_size8, align 8, !dbg !13360, !tbaa !5784
  %cmp9 = icmp ne i64 %18, %22, !dbg !13361
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !13362

if.then.10:                                       ; preds = %if.end.6
  %23 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !13363, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %23, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.160, i32 0, i32 0)), !dbg !13365
  store i32 0, i32* %retval, !dbg !13366
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.29, !dbg !13366

if.end.11:                                        ; preds = %if.end.6
  store i64 0, i64* %i, align 8, !dbg !13367, !tbaa !2704
  br label %for.cond, !dbg !13368

for.cond:                                         ; preds = %for.inc, %if.end.11
  %24 = load i64, i64* %i, align 8, !dbg !13369, !tbaa !2704
  %25 = load i64, i64* %len, align 8, !dbg !13372, !tbaa !2704
  %cmp12 = icmp slt i64 %24, %25, !dbg !13373
  br i1 %cmp12, label %for.body, label %for.end, !dbg !13374

for.body:                                         ; preds = %for.cond
  %26 = bitcast %struct._object** %item to i8*, !dbg !13375
  call void @llvm.lifetime.start(i64 8, i8* %26) #2, !dbg !13375
  call void @llvm.dbg.declare(metadata %struct._object** %item, metadata !2052, metadata !2526), !dbg !13376
  %27 = load i64, i64* %i, align 8, !dbg !13377, !tbaa !2704
  %28 = load %struct._object*, %struct._object** %paramflags.addr, align 8, !dbg !13378, !tbaa !2522
  %29 = bitcast %struct._object* %28 to %struct.PyTupleObject*, !dbg !13379
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %29, i32 0, i32 1, !dbg !13380
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %27, !dbg !13381
  %30 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !13381, !tbaa !2522
  store %struct._object* %30, %struct._object** %item, align 8, !dbg !13376, !tbaa !2522
  %31 = bitcast i32* %flag to i8*, !dbg !13382
  call void @llvm.lifetime.start(i64 4, i8* %31) #2, !dbg !13382
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !2056, metadata !2526), !dbg !13383
  %32 = bitcast i8** %name to i8*, !dbg !13384
  call void @llvm.lifetime.start(i64 8, i8* %32) #2, !dbg !13384
  call void @llvm.dbg.declare(metadata i8** %name, metadata !2057, metadata !2526), !dbg !13385
  %33 = bitcast %struct._object** %defval to i8*, !dbg !13386
  call void @llvm.lifetime.start(i64 8, i8* %33) #2, !dbg !13386
  call void @llvm.dbg.declare(metadata %struct._object** %defval, metadata !2058, metadata !2526), !dbg !13387
  %34 = bitcast %struct._object** %typ to i8*, !dbg !13388
  call void @llvm.lifetime.start(i64 8, i8* %34) #2, !dbg !13388
  call void @llvm.dbg.declare(metadata %struct._object** %typ, metadata !2059, metadata !2526), !dbg !13389
  %35 = load %struct._object*, %struct._object** %item, align 8, !dbg !13390, !tbaa !2522
  %call13 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i32 0, i32 0), i32* %flag, i8** %name, %struct._object** %defval), !dbg !13392
  %tobool = icmp ne i32 %call13, 0, !dbg !13392
  br i1 %tobool, label %if.end.15, label %if.then.14, !dbg !13393

if.then.14:                                       ; preds = %for.body
  %36 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !13394, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %36, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.162, i32 0, i32 0)), !dbg !13396
  store i32 0, i32* %retval, !dbg !13397
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13397

if.end.15:                                        ; preds = %for.body
  %37 = load i64, i64* %i, align 8, !dbg !13398, !tbaa !2704
  %38 = load %struct._object*, %struct._object** %argtypes, align 8, !dbg !13399, !tbaa !2522
  %39 = bitcast %struct._object* %38 to %struct.PyTupleObject*, !dbg !13400
  %ob_item16 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %39, i32 0, i32 1, !dbg !13401
  %arrayidx17 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item16, i32 0, i64 %37, !dbg !13402
  %40 = load %struct._object*, %struct._object** %arrayidx17, align 8, !dbg !13402, !tbaa !2522
  store %struct._object* %40, %struct._object** %typ, align 8, !dbg !13403, !tbaa !2522
  %41 = load i32, i32* %flag, align 4, !dbg !13404, !tbaa !2611
  %and18 = and i32 %41, 7, !dbg !13405
  br label %NodeBlock.7

NodeBlock.7:                                      ; preds = %if.end.15
  %Pivot.8 = icmp slt i32 %and18, 3
  br i1 %Pivot.8, label %NodeBlock, label %NodeBlock.5

NodeBlock.5:                                      ; preds = %NodeBlock.7
  %Pivot.6 = icmp slt i32 %and18, 5
  br i1 %Pivot.6, label %LeafBlock.1, label %LeafBlock.3

LeafBlock.3:                                      ; preds = %NodeBlock.5
  %SwitchLeaf4 = icmp eq i32 %and18, 5
  br i1 %SwitchLeaf4, label %sw.bb, label %NewDefault

LeafBlock.1:                                      ; preds = %NodeBlock.5
  %SwitchLeaf2 = icmp eq i32 %and18, 3
  br i1 %SwitchLeaf2, label %sw.bb, label %NewDefault

NodeBlock:                                        ; preds = %NodeBlock.7
  %Pivot = icmp slt i32 %and18, 2
  br i1 %Pivot, label %LeafBlock, label %sw.bb.19

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp ule i32 %and18, 1
  br i1 %SwitchLeaf, label %sw.bb, label %NewDefault

sw.bb:                                            ; preds = %LeafBlock.3, %LeafBlock.1, %LeafBlock
  br label %sw.epilog, !dbg !13406

sw.bb.19:                                         ; preds = %NodeBlock
  %42 = load %struct._object*, %struct._object** %typ, align 8, !dbg !13408, !tbaa !2522
  %43 = load i64, i64* %i, align 8, !dbg !13410, !tbaa !2704
  %add = add i64 %43, 1, !dbg !13411
  %call20 = call i32 @_check_outarg_type(%struct._object* %42, i64 %add), !dbg !13412
  %tobool21 = icmp ne i32 %call20, 0, !dbg !13412
  br i1 %tobool21, label %if.end.23, label %if.then.22, !dbg !13413

if.then.22:                                       ; preds = %sw.bb.19
  store i32 0, i32* %retval, !dbg !13414
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13414

if.end.23:                                        ; preds = %sw.bb.19
  br label %sw.epilog, !dbg !13415

NewDefault:                                       ; preds = %LeafBlock.3, %LeafBlock.1, %LeafBlock
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  %44 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !13416, !tbaa !2522
  %45 = load i32, i32* %flag, align 4, !dbg !13417, !tbaa !2611
  %call24 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %44, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.163, i32 0, i32 0), i32 %45), !dbg !13418
  store i32 0, i32* %retval, !dbg !13419
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13419

sw.epilog:                                        ; preds = %if.end.23, %sw.bb
  store i32 0, i32* %cleanup.dest.slot, !dbg !13420
  br label %cleanup, !dbg !13420

cleanup:                                          ; preds = %sw.epilog, %sw.default, %if.then.22, %if.then.14
  %46 = bitcast %struct._object** %typ to i8*, !dbg !13421
  call void @llvm.lifetime.end(i64 8, i8* %46) #2, !dbg !13421
  %47 = bitcast %struct._object** %defval to i8*, !dbg !13421
  call void @llvm.lifetime.end(i64 8, i8* %47) #2, !dbg !13421
  %48 = bitcast i8** %name to i8*, !dbg !13421
  call void @llvm.lifetime.end(i64 8, i8* %48) #2, !dbg !13421
  %49 = bitcast i32* %flag to i8*, !dbg !13421
  call void @llvm.lifetime.end(i64 4, i8* %49) #2, !dbg !13421
  %50 = bitcast %struct._object** %item to i8*, !dbg !13421
  call void @llvm.lifetime.end(i64 8, i8* %50) #2, !dbg !13421
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.10

LeafBlock.10:                                     ; preds = %cleanup
  %SwitchLeaf11 = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf11, label %cleanup.cont, label %NewDefault.9

cleanup.cont:                                     ; preds = %LeafBlock.10
  br label %for.inc, !dbg !13422

for.inc:                                          ; preds = %cleanup.cont
  %51 = load i64, i64* %i, align 8, !dbg !13423, !tbaa !2704
  %inc = add i64 %51, 1, !dbg !13423
  store i64 %inc, i64* %i, align 8, !dbg !13423, !tbaa !2704
  br label %for.cond, !dbg !13424

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, !dbg !13425
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.29, !dbg !13425

NewDefault.9:                                     ; preds = %LeafBlock.10
  br label %cleanup.29

cleanup.29:                                       ; preds = %NewDefault.9, %for.end, %if.then.10, %if.then.5, %if.then
  %52 = bitcast %struct._object** %argtypes to i8*, !dbg !13426
  call void @llvm.lifetime.end(i64 8, i8* %52) #2, !dbg !13426
  %53 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !13426
  call void @llvm.lifetime.end(i64 8, i8* %53) #2, !dbg !13426
  %54 = bitcast i64* %len to i8*, !dbg !13426
  call void @llvm.lifetime.end(i64 8, i8* %54) #2, !dbg !13426
  %55 = bitcast i64* %i to i8*, !dbg !13426
  call void @llvm.lifetime.end(i64 8, i8* %55) #2, !dbg !13426
  %56 = load i32, i32* %retval, !dbg !13426
  ret i32 %56, !dbg !13426
}

; Function Attrs: uwtable
define internal i32 @_check_outarg_type(%struct._object* %arg, i64 %index) #0 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca %struct._object*, align 8
  %index.addr = alloca i64, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !2064, metadata !2526), !dbg !13427
  store i64 %index, i64* %index.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !2065, metadata !2526), !dbg !13428
  %0 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !13429
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !13429
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !2066, metadata !2526), !dbg !13430
  %1 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !13431, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !13433
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13433, !tbaa !2588
  %cmp = icmp eq %struct._typeobject* %2, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointerType_Type to %struct._typeobject*), !dbg !13434
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13435

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !13436, !tbaa !2522
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !13438
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !13438, !tbaa !2588
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %4, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointerType_Type to %struct._typeobject*)), !dbg !13439
  %tobool = icmp ne i32 %call, 0, !dbg !13439
  br i1 %tobool, label %if.then, label %if.end, !dbg !13440

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval, !dbg !13441
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13441

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !13442, !tbaa !2522
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !13444
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !13444, !tbaa !2588
  %cmp3 = icmp eq %struct._typeobject* %6, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArrayType_Type to %struct._typeobject*), !dbg !13445
  br i1 %cmp3, label %if.then.8, label %lor.lhs.false.4, !dbg !13446

lor.lhs.false.4:                                  ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !13447, !tbaa !2522
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !13449
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !13449, !tbaa !2588
  %call6 = call i32 @PyType_IsSubtype(%struct._typeobject* %8, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArrayType_Type to %struct._typeobject*)), !dbg !13450
  %tobool7 = icmp ne i32 %call6, 0, !dbg !13450
  br i1 %tobool7, label %if.then.8, label %if.end.9, !dbg !13451

if.then.8:                                        ; preds = %lor.lhs.false.4, %if.end
  store i32 1, i32* %retval, !dbg !13452
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13452

if.end.9:                                         ; preds = %lor.lhs.false.4
  %9 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !13453, !tbaa !2522
  %call10 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %9), !dbg !13454
  store %struct.StgDictObject* %call10, %struct.StgDictObject** %dict, align 8, !dbg !13455, !tbaa !2522
  %10 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !13456, !tbaa !2522
  %tobool11 = icmp ne %struct.StgDictObject* %10, null, !dbg !13456
  br i1 %tobool11, label %land.lhs.true, label %if.end.34, !dbg !13458

land.lhs.true:                                    ; preds = %if.end.9
  %11 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !13459, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %11, i32 0, i32 5, !dbg !13461
  %12 = load %struct._object*, %struct._object** %proto, align 8, !dbg !13461, !tbaa !2961
  %ob_type12 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !13462
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type12, align 8, !dbg !13462, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 19, !dbg !13463
  %14 = load i64, i64* %tp_flags, align 8, !dbg !13463, !tbaa !2849
  %and = and i64 %14, 268435456, !dbg !13464
  %cmp13 = icmp ne i64 %and, 0, !dbg !13465
  br i1 %cmp13, label %land.lhs.true.14, label %if.end.34, !dbg !13466

land.lhs.true.14:                                 ; preds = %land.lhs.true
  br i1 false, label %land.lhs.true.15, label %cond.false, !dbg !13467

land.lhs.true.15:                                 ; preds = %land.lhs.true.14
  br i1 true, label %cond.false, label %land.lhs.true.16, !dbg !13468

land.lhs.true.16:                                 ; preds = %land.lhs.true.15
  %15 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !13470, !tbaa !2522
  %proto17 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %15, i32 0, i32 5, !dbg !13472
  %16 = load %struct._object*, %struct._object** %proto17, align 8, !dbg !13472, !tbaa !2961
  %call18 = call i8* @PyUnicode_AsUTF8(%struct._object* %16), !dbg !13473
  %arrayidx = getelementptr i8, i8* %call18, i64 0, !dbg !13473
  %17 = load i8, i8* %arrayidx, align 1, !dbg !13473, !tbaa !2731
  %conv = sext i8 %17 to i32, !dbg !13474
  %cmp19 = icmp eq i32 %conv, 0, !dbg !13475
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !13476

cond.true:                                        ; preds = %land.lhs.true.16
  %18 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !13477, !tbaa !2522
  %proto21 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %18, i32 0, i32 5, !dbg !13478
  %19 = load %struct._object*, %struct._object** %proto21, align 8, !dbg !13478, !tbaa !2961
  %call22 = call i8* @PyUnicode_AsUTF8(%struct._object* %19), !dbg !13479
  %arrayidx23 = getelementptr i8, i8* %call22, i64 0, !dbg !13479
  %20 = load i8, i8* %arrayidx23, align 1, !dbg !13479, !tbaa !2731
  %conv24 = sext i8 %20 to i32, !dbg !13479
  %call25 = call i8* @__rawmemchr(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.164, i32 0, i32 0), i32 %conv24), !dbg !13480
  %tobool26 = icmp ne i8* %call25, null, !dbg !13481
  br i1 %tobool26, label %if.then.33, label %if.end.34, !dbg !13482

cond.false:                                       ; preds = %land.lhs.true.16, %land.lhs.true.15, %land.lhs.true.14
  %21 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !13483, !tbaa !2522
  %proto27 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %21, i32 0, i32 5, !dbg !13486
  %22 = load %struct._object*, %struct._object** %proto27, align 8, !dbg !13486, !tbaa !2961
  %call28 = call i8* @PyUnicode_AsUTF8(%struct._object* %22), !dbg !13487
  %arrayidx29 = getelementptr i8, i8* %call28, i64 0, !dbg !13487
  %23 = load i8, i8* %arrayidx29, align 1, !dbg !13487, !tbaa !2731
  %conv30 = sext i8 %23 to i32, !dbg !13487
  %call31 = call i8* @strchr(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.164, i32 0, i32 0), i32 %conv30) #2, !dbg !13488
  %tobool32 = icmp ne i8* %call31, null, !dbg !13488
  br i1 %tobool32, label %if.then.33, label %if.end.34, !dbg !13476

if.then.33:                                       ; preds = %cond.false, %cond.true
  store i32 1, i32* %retval, !dbg !13489
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13489

if.end.34:                                        ; preds = %cond.false, %cond.true, %land.lhs.true, %if.end.9
  %24 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !13491, !tbaa !2522
  %25 = load i64, i64* %index.addr, align 8, !dbg !13492, !tbaa !2704
  %conv35 = trunc i64 %25 to i32, !dbg !13493
  %26 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !13494, !tbaa !2522
  %ob_type36 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1, !dbg !13495
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type36, align 8, !dbg !13495, !tbaa !2588
  %tp_flags37 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 19, !dbg !13496
  %28 = load i64, i64* %tp_flags37, align 8, !dbg !13496, !tbaa !2849
  %and38 = and i64 %28, 2147483648, !dbg !13497
  %cmp39 = icmp ne i64 %and38, 0, !dbg !13498
  br i1 %cmp39, label %cond.true.41, label %cond.false.42, !dbg !13499

cond.true.41:                                     ; preds = %if.end.34
  %29 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !13500, !tbaa !2522
  %30 = bitcast %struct._object* %29 to %struct._typeobject*, !dbg !13501
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 1, !dbg !13502
  %31 = load i8*, i8** %tp_name, align 8, !dbg !13502, !tbaa !5264
  br label %cond.end, !dbg !13499

cond.false.42:                                    ; preds = %if.end.34
  %32 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !13503, !tbaa !2522
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 1, !dbg !13504
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !13504, !tbaa !2588
  %tp_name44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 1, !dbg !13505
  %34 = load i8*, i8** %tp_name44, align 8, !dbg !13505, !tbaa !5264
  br label %cond.end, !dbg !13499

cond.end:                                         ; preds = %cond.false.42, %cond.true.41
  %cond = phi i8* [ %31, %cond.true.41 ], [ %34, %cond.false.42 ], !dbg !13499
  %call45 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %24, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.165, i32 0, i32 0), i32 %conv35, i8* %cond), !dbg !13506
  store i32 0, i32* %retval, !dbg !13507
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13507

cleanup:                                          ; preds = %cond.end, %if.then.33, %if.then.8, %if.then
  %35 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !13508
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !13508
  %36 = load i32, i32* %retval, !dbg !13508
  ret i32 %36, !dbg !13508
}

; Function Attrs: nounwind uwtable
define internal i64 @Array_length(%struct._object* %myself) #7 {
entry:
  %myself.addr = alloca %struct._object*, align 8
  %self = alloca %struct.tagCDataObject*, align 8
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !2069, metadata !2526), !dbg !13509
  %0 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !13510
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !13510
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self, metadata !2070, metadata !2526), !dbg !13511
  %1 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !13512, !tbaa !2522
  %2 = bitcast %struct._object* %1 to %struct.tagCDataObject*, !dbg !13513
  store %struct.tagCDataObject* %2, %struct.tagCDataObject** %self, align 8, !dbg !13511, !tbaa !2522
  %3 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !13514, !tbaa !2522
  %b_length = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %3, i32 0, i32 5, !dbg !13515
  %4 = load i64, i64* %b_length, align 8, !dbg !13515, !tbaa !4912
  %5 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !13516
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !13516
  ret i64 %4, !dbg !13517
}

; Function Attrs: uwtable
define internal %struct._object* @Array_item(%struct._object* %myself, i64 %index) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %myself.addr = alloca %struct._object*, align 8
  %index.addr = alloca i64, align 8
  %self = alloca %struct.tagCDataObject*, align 8
  %offset = alloca i64, align 8
  %size = alloca i64, align 8
  %stgdict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !2073, metadata !2526), !dbg !13518
  store i64 %index, i64* %index.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !2074, metadata !2526), !dbg !13519
  %0 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !13520
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !13520
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self, metadata !2075, metadata !2526), !dbg !13521
  %1 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !13522, !tbaa !2522
  %2 = bitcast %struct._object* %1 to %struct.tagCDataObject*, !dbg !13523
  store %struct.tagCDataObject* %2, %struct.tagCDataObject** %self, align 8, !dbg !13521, !tbaa !2522
  %3 = bitcast i64* %offset to i8*, !dbg !13524
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !13524
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !2076, metadata !2526), !dbg !13525
  %4 = bitcast i64* %size to i8*, !dbg !13524
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !13524
  call void @llvm.dbg.declare(metadata i64* %size, metadata !2077, metadata !2526), !dbg !13526
  %5 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !13527
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !13527
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict, metadata !2078, metadata !2526), !dbg !13528
  %6 = load i64, i64* %index.addr, align 8, !dbg !13529, !tbaa !2704
  %cmp = icmp slt i64 %6, 0, !dbg !13531
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13532

lor.lhs.false:                                    ; preds = %entry
  %7 = load i64, i64* %index.addr, align 8, !dbg !13533, !tbaa !2704
  %8 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !13535, !tbaa !2522
  %b_length = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %8, i32 0, i32 5, !dbg !13536
  %9 = load i64, i64* %b_length, align 8, !dbg !13536, !tbaa !4912
  %cmp1 = icmp sge i64 %7, %9, !dbg !13537
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13538

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !13539, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.166, i32 0, i32 0)), !dbg !13541
  store %struct._object* null, %struct._object** %retval, !dbg !13542
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13542

if.end:                                           ; preds = %lor.lhs.false
  %11 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !13543, !tbaa !2522
  %12 = bitcast %struct.tagCDataObject* %11 to %struct._object*, !dbg !13544
  %call = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %12), !dbg !13545
  store %struct.StgDictObject* %call, %struct.StgDictObject** %stgdict, align 8, !dbg !13546, !tbaa !2522
  %13 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !13547, !tbaa !2522
  %size2 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %13, i32 0, i32 1, !dbg !13548
  %14 = load i64, i64* %size2, align 8, !dbg !13548, !tbaa !3101
  %15 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !13549, !tbaa !2522
  %length = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %15, i32 0, i32 3, !dbg !13550
  %16 = load i64, i64* %length, align 8, !dbg !13550, !tbaa !3115
  %div = sdiv i64 %14, %16, !dbg !13551
  store i64 %div, i64* %size, align 8, !dbg !13552, !tbaa !2704
  %17 = load i64, i64* %index.addr, align 8, !dbg !13553, !tbaa !2704
  %18 = load i64, i64* %size, align 8, !dbg !13554, !tbaa !2704
  %mul = mul i64 %17, %18, !dbg !13555
  store i64 %mul, i64* %offset, align 8, !dbg !13556, !tbaa !2704
  %19 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !13557, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %19, i32 0, i32 5, !dbg !13558
  %20 = load %struct._object*, %struct._object** %proto, align 8, !dbg !13558, !tbaa !2961
  %21 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !13559, !tbaa !2522
  %getfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %21, i32 0, i32 7, !dbg !13560
  %22 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc, align 8, !dbg !13560, !tbaa !3683
  %23 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !13561, !tbaa !2522
  %24 = bitcast %struct.tagCDataObject* %23 to %struct._object*, !dbg !13562
  %25 = load i64, i64* %index.addr, align 8, !dbg !13563, !tbaa !2704
  %26 = load i64, i64* %size, align 8, !dbg !13564, !tbaa !2704
  %27 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !13565, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %27, i32 0, i32 1, !dbg !13566
  %28 = load i8*, i8** %b_ptr, align 8, !dbg !13566, !tbaa !4817
  %29 = load i64, i64* %offset, align 8, !dbg !13567, !tbaa !2704
  %add.ptr = getelementptr i8, i8* %28, i64 %29, !dbg !13568
  %call3 = call %struct._object* @PyCData_get(%struct._object* %20, %struct._object* (i8*, i64)* %22, %struct._object* %24, i64 %25, i64 %26, i8* %add.ptr), !dbg !13569
  store %struct._object* %call3, %struct._object** %retval, !dbg !13570
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13570

cleanup:                                          ; preds = %if.end, %if.then
  %30 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !13571
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !13571
  %31 = bitcast i64* %size to i8*, !dbg !13571
  call void @llvm.lifetime.end(i64 8, i8* %31) #2, !dbg !13571
  %32 = bitcast i64* %offset to i8*, !dbg !13571
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !13571
  %33 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !13571
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !13571
  %34 = load %struct._object*, %struct._object** %retval, !dbg !13571
  ret %struct._object* %34, !dbg !13571
}

; Function Attrs: uwtable
define internal i32 @Array_ass_item(%struct._object* %myself, i64 %index, %struct._object* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %myself.addr = alloca %struct._object*, align 8
  %index.addr = alloca i64, align 8
  %value.addr = alloca %struct._object*, align 8
  %self = alloca %struct.tagCDataObject*, align 8
  %size = alloca i64, align 8
  %offset = alloca i64, align 8
  %stgdict = alloca %struct.StgDictObject*, align 8
  %ptr = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !2081, metadata !2526), !dbg !13572
  store i64 %index, i64* %index.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !2082, metadata !2526), !dbg !13573
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !2083, metadata !2526), !dbg !13574
  %0 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !13575
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !13575
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self, metadata !2084, metadata !2526), !dbg !13576
  %1 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !13577, !tbaa !2522
  %2 = bitcast %struct._object* %1 to %struct.tagCDataObject*, !dbg !13578
  store %struct.tagCDataObject* %2, %struct.tagCDataObject** %self, align 8, !dbg !13576, !tbaa !2522
  %3 = bitcast i64* %size to i8*, !dbg !13579
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !13579
  call void @llvm.dbg.declare(metadata i64* %size, metadata !2085, metadata !2526), !dbg !13580
  %4 = bitcast i64* %offset to i8*, !dbg !13579
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !13579
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !2086, metadata !2526), !dbg !13581
  %5 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !13582
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !13582
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict, metadata !2087, metadata !2526), !dbg !13583
  %6 = bitcast i8** %ptr to i8*, !dbg !13584
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !13584
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !2088, metadata !2526), !dbg !13585
  %7 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !13586, !tbaa !2522
  %cmp = icmp eq %struct._object* %7, null, !dbg !13588
  br i1 %cmp, label %if.then, label %if.end, !dbg !13589

if.then:                                          ; preds = %entry
  %8 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !13590, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.167, i32 0, i32 0)), !dbg !13592
  store i32 -1, i32* %retval, !dbg !13593
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13593

if.end:                                           ; preds = %entry
  %9 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !13594, !tbaa !2522
  %10 = bitcast %struct.tagCDataObject* %9 to %struct._object*, !dbg !13595
  %call = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %10), !dbg !13596
  store %struct.StgDictObject* %call, %struct.StgDictObject** %stgdict, align 8, !dbg !13597, !tbaa !2522
  %11 = load i64, i64* %index.addr, align 8, !dbg !13598, !tbaa !2704
  %cmp1 = icmp slt i64 %11, 0, !dbg !13600
  br i1 %cmp1, label %if.then.3, label %lor.lhs.false, !dbg !13601

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i64, i64* %index.addr, align 8, !dbg !13602, !tbaa !2704
  %13 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !13604, !tbaa !2522
  %length = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %13, i32 0, i32 3, !dbg !13605
  %14 = load i64, i64* %length, align 8, !dbg !13605, !tbaa !3115
  %cmp2 = icmp sge i64 %12, %14, !dbg !13606
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !13607

if.then.3:                                        ; preds = %lor.lhs.false, %if.end
  %15 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !13608, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.166, i32 0, i32 0)), !dbg !13610
  store i32 -1, i32* %retval, !dbg !13611
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13611

if.end.4:                                         ; preds = %lor.lhs.false
  %16 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !13612, !tbaa !2522
  %size5 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %16, i32 0, i32 1, !dbg !13613
  %17 = load i64, i64* %size5, align 8, !dbg !13613, !tbaa !3101
  %18 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !13614, !tbaa !2522
  %length6 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %18, i32 0, i32 3, !dbg !13615
  %19 = load i64, i64* %length6, align 8, !dbg !13615, !tbaa !3115
  %div = sdiv i64 %17, %19, !dbg !13616
  store i64 %div, i64* %size, align 8, !dbg !13617, !tbaa !2704
  %20 = load i64, i64* %index.addr, align 8, !dbg !13618, !tbaa !2704
  %21 = load i64, i64* %size, align 8, !dbg !13619, !tbaa !2704
  %mul = mul i64 %20, %21, !dbg !13620
  store i64 %mul, i64* %offset, align 8, !dbg !13621, !tbaa !2704
  %22 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !13622, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %22, i32 0, i32 1, !dbg !13623
  %23 = load i8*, i8** %b_ptr, align 8, !dbg !13623, !tbaa !4817
  %24 = load i64, i64* %offset, align 8, !dbg !13624, !tbaa !2704
  %add.ptr = getelementptr i8, i8* %23, i64 %24, !dbg !13625
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !13626, !tbaa !2522
  %25 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !13627, !tbaa !2522
  %26 = bitcast %struct.tagCDataObject* %25 to %struct._object*, !dbg !13628
  %27 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !13629, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %27, i32 0, i32 5, !dbg !13630
  %28 = load %struct._object*, %struct._object** %proto, align 8, !dbg !13630, !tbaa !2961
  %29 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !13631, !tbaa !2522
  %setfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %29, i32 0, i32 6, !dbg !13632
  %30 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc, align 8, !dbg !13632, !tbaa !4041
  %31 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !13633, !tbaa !2522
  %32 = load i64, i64* %index.addr, align 8, !dbg !13634, !tbaa !2704
  %33 = load i64, i64* %size, align 8, !dbg !13635, !tbaa !2704
  %34 = load i8*, i8** %ptr, align 8, !dbg !13636, !tbaa !2522
  %call7 = call i32 @PyCData_set(%struct._object* %26, %struct._object* %28, %struct._object* (i8*, %struct._object*, i64)* %30, %struct._object* %31, i64 %32, i64 %33, i8* %34), !dbg !13637
  store i32 %call7, i32* %retval, !dbg !13638
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13638

cleanup:                                          ; preds = %if.end.4, %if.then.3, %if.then
  %35 = bitcast i8** %ptr to i8*, !dbg !13639
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !13639
  %36 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !13639
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !13639
  %37 = bitcast i64* %offset to i8*, !dbg !13639
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !13639
  %38 = bitcast i64* %size to i8*, !dbg !13639
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !13639
  %39 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !13639
  call void @llvm.lifetime.end(i64 8, i8* %39) #2, !dbg !13639
  %40 = load i32, i32* %retval, !dbg !13639
  ret i32 %40, !dbg !13639
}

; Function Attrs: uwtable
define internal %struct._object* @Array_subscript(%struct._object* %myself, %struct._object* %item) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %myself.addr = alloca %struct._object*, align 8
  %item.addr = alloca %struct._object*, align 8
  %self = alloca %struct.tagCDataObject*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %stgdict = alloca %struct.StgDictObject*, align 8
  %itemdict = alloca %struct.StgDictObject*, align 8
  %proto = alloca %struct._object*, align 8
  %np = alloca %struct._object*, align 8
  %start = alloca i64, align 8
  %stop = alloca i64, align 8
  %step = alloca i64, align 8
  %slicelen = alloca i64, align 8
  %cur = alloca i64, align 8
  %i15 = alloca i64, align 8
  %ptr = alloca i8*, align 8
  %dest = alloca i8*, align 8
  %ptr53 = alloca i32*, align 8
  %dest55 = alloca i32*, align 8
  %v = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !2091, metadata !2526), !dbg !13640
  store %struct._object* %item, %struct._object** %item.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %item.addr, metadata !2092, metadata !2526), !dbg !13641
  %0 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !13642
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !13642
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self, metadata !2093, metadata !2526), !dbg !13643
  %1 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !13644, !tbaa !2522
  %2 = bitcast %struct._object* %1 to %struct.tagCDataObject*, !dbg !13645
  store %struct.tagCDataObject* %2, %struct.tagCDataObject** %self, align 8, !dbg !13643, !tbaa !2522
  %3 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !13646, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !13647
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13647, !tbaa !2588
  %tp_as_number = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 10, !dbg !13648
  %5 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number, align 8, !dbg !13648, !tbaa !13649
  %cmp = icmp ne %struct.PyNumberMethods* %5, null, !dbg !13650
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !13651

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !13652, !tbaa !2522
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !13654
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !13654, !tbaa !2588
  %tp_as_number2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i32 0, i32 10, !dbg !13655
  %8 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number2, align 8, !dbg !13655, !tbaa !13649
  %nb_index = getelementptr inbounds %struct.PyNumberMethods, %struct.PyNumberMethods* %8, i32 0, i32 33, !dbg !13656
  %9 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %nb_index, align 8, !dbg !13656, !tbaa !13657
  %cmp3 = icmp ne %struct._object* (%struct._object*)* %9, null, !dbg !13659
  br i1 %cmp3, label %if.then, label %if.else, !dbg !13660

if.then:                                          ; preds = %land.lhs.true
  %10 = bitcast i64* %i to i8*, !dbg !13661
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !13661
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2094, metadata !2526), !dbg !13662
  %11 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !13663, !tbaa !2522
  %12 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !13664, !tbaa !2522
  %call = call i64 @PyNumber_AsSsize_t(%struct._object* %11, %struct._object* %12), !dbg !13665
  store i64 %call, i64* %i, align 8, !dbg !13662, !tbaa !2704
  %13 = load i64, i64* %i, align 8, !dbg !13666, !tbaa !2704
  %cmp4 = icmp eq i64 %13, -1, !dbg !13668
  br i1 %cmp4, label %land.lhs.true.5, label %if.end, !dbg !13669

land.lhs.true.5:                                  ; preds = %if.then
  %call6 = call %struct._object* @PyErr_Occurred(), !dbg !13670
  %tobool = icmp ne %struct._object* %call6, null, !dbg !13670
  br i1 %tobool, label %if.then.7, label %if.end, !dbg !13672

if.then.7:                                        ; preds = %land.lhs.true.5
  store %struct._object* null, %struct._object** %retval, !dbg !13673
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13673

if.end:                                           ; preds = %land.lhs.true.5, %if.then
  %14 = load i64, i64* %i, align 8, !dbg !13674, !tbaa !2704
  %cmp8 = icmp slt i64 %14, 0, !dbg !13676
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !13677

if.then.9:                                        ; preds = %if.end
  %15 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !13678, !tbaa !2522
  %b_length = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %15, i32 0, i32 5, !dbg !13679
  %16 = load i64, i64* %b_length, align 8, !dbg !13679, !tbaa !4912
  %17 = load i64, i64* %i, align 8, !dbg !13680, !tbaa !2704
  %add = add i64 %17, %16, !dbg !13680
  store i64 %add, i64* %i, align 8, !dbg !13680, !tbaa !2704
  br label %if.end.10, !dbg !13681

if.end.10:                                        ; preds = %if.then.9, %if.end
  %18 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !13682, !tbaa !2522
  %19 = load i64, i64* %i, align 8, !dbg !13683, !tbaa !2704
  %call11 = call %struct._object* @Array_item(%struct._object* %18, i64 %19), !dbg !13684
  store %struct._object* %call11, %struct._object** %retval, !dbg !13685
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13685

cleanup:                                          ; preds = %if.end.10, %if.then.7
  %20 = bitcast i64* %i to i8*, !dbg !13686
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !13686
  br label %cleanup.112

if.else:                                          ; preds = %land.lhs.true, %entry
  %21 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !13687, !tbaa !2522
  %ob_type12 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !13688
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type12, align 8, !dbg !13688, !tbaa !2588
  %cmp13 = icmp eq %struct._typeobject* %22, @PySlice_Type, !dbg !13689
  br i1 %cmp13, label %if.then.14, label %if.else.111, !dbg !13690

if.then.14:                                       ; preds = %if.else
  %23 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !13691
  call void @llvm.lifetime.start(i64 8, i8* %23) #2, !dbg !13691
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict, metadata !2097, metadata !2526), !dbg !13692
  %24 = bitcast %struct.StgDictObject** %itemdict to i8*, !dbg !13691
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !13691
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %itemdict, metadata !2100, metadata !2526), !dbg !13693
  %25 = bitcast %struct._object** %proto to i8*, !dbg !13694
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !13694
  call void @llvm.dbg.declare(metadata %struct._object** %proto, metadata !2101, metadata !2526), !dbg !13695
  %26 = bitcast %struct._object** %np to i8*, !dbg !13696
  call void @llvm.lifetime.start(i64 8, i8* %26) #2, !dbg !13696
  call void @llvm.dbg.declare(metadata %struct._object** %np, metadata !2102, metadata !2526), !dbg !13697
  %27 = bitcast i64* %start to i8*, !dbg !13698
  call void @llvm.lifetime.start(i64 8, i8* %27) #2, !dbg !13698
  call void @llvm.dbg.declare(metadata i64* %start, metadata !2103, metadata !2526), !dbg !13699
  %28 = bitcast i64* %stop to i8*, !dbg !13698
  call void @llvm.lifetime.start(i64 8, i8* %28) #2, !dbg !13698
  call void @llvm.dbg.declare(metadata i64* %stop, metadata !2104, metadata !2526), !dbg !13700
  %29 = bitcast i64* %step to i8*, !dbg !13698
  call void @llvm.lifetime.start(i64 8, i8* %29) #2, !dbg !13698
  call void @llvm.dbg.declare(metadata i64* %step, metadata !2105, metadata !2526), !dbg !13701
  %30 = bitcast i64* %slicelen to i8*, !dbg !13698
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !13698
  call void @llvm.dbg.declare(metadata i64* %slicelen, metadata !2106, metadata !2526), !dbg !13702
  %31 = bitcast i64* %cur to i8*, !dbg !13698
  call void @llvm.lifetime.start(i64 8, i8* %31) #2, !dbg !13698
  call void @llvm.dbg.declare(metadata i64* %cur, metadata !2107, metadata !2526), !dbg !13703
  %32 = bitcast i64* %i15 to i8*, !dbg !13698
  call void @llvm.lifetime.start(i64 8, i8* %32) #2, !dbg !13698
  call void @llvm.dbg.declare(metadata i64* %i15, metadata !2108, metadata !2526), !dbg !13704
  %33 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !13705, !tbaa !2522
  %34 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !13707, !tbaa !2522
  %b_length16 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %34, i32 0, i32 5, !dbg !13708
  %35 = load i64, i64* %b_length16, align 8, !dbg !13708, !tbaa !4912
  %call17 = call i32 @PySlice_GetIndicesEx(%struct._object* %33, i64 %35, i64* %start, i64* %stop, i64* %step, i64* %slicelen), !dbg !13709
  %cmp18 = icmp slt i32 %call17, 0, !dbg !13710
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !13711

if.then.19:                                       ; preds = %if.then.14
  store %struct._object* null, %struct._object** %retval, !dbg !13712
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !13712

if.end.20:                                        ; preds = %if.then.14
  %36 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !13714, !tbaa !2522
  %37 = bitcast %struct.tagCDataObject* %36 to %struct._object*, !dbg !13715
  %call21 = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %37), !dbg !13716
  store %struct.StgDictObject* %call21, %struct.StgDictObject** %stgdict, align 8, !dbg !13717, !tbaa !2522
  %38 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !13718, !tbaa !2522
  %proto22 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %38, i32 0, i32 5, !dbg !13719
  %39 = load %struct._object*, %struct._object** %proto22, align 8, !dbg !13719, !tbaa !2961
  store %struct._object* %39, %struct._object** %proto, align 8, !dbg !13720, !tbaa !2522
  %40 = load %struct._object*, %struct._object** %proto, align 8, !dbg !13721, !tbaa !2522
  %call23 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %40), !dbg !13722
  store %struct.StgDictObject* %call23, %struct.StgDictObject** %itemdict, align 8, !dbg !13723, !tbaa !2522
  %41 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !13724, !tbaa !2522
  %getfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %41, i32 0, i32 7, !dbg !13725
  %42 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc, align 8, !dbg !13725, !tbaa !3683
  %call24 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i32 0, i32 0)), !dbg !13726
  %getfunc25 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %call24, i32 0, i32 2, !dbg !13727
  %43 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc25, align 8, !dbg !13727, !tbaa !3686
  %cmp26 = icmp eq %struct._object* (i8*, i64)* %42, %43, !dbg !13728
  br i1 %cmp26, label %if.then.27, label %if.end.47, !dbg !13729

if.then.27:                                       ; preds = %if.end.20
  %44 = bitcast i8** %ptr to i8*, !dbg !13730
  call void @llvm.lifetime.start(i64 8, i8* %44) #2, !dbg !13730
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !2109, metadata !2526), !dbg !13731
  %45 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !13732, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %45, i32 0, i32 1, !dbg !13733
  %46 = load i8*, i8** %b_ptr, align 8, !dbg !13733, !tbaa !4817
  store i8* %46, i8** %ptr, align 8, !dbg !13731, !tbaa !2522
  %47 = bitcast i8** %dest to i8*, !dbg !13734
  call void @llvm.lifetime.start(i64 8, i8* %47) #2, !dbg !13734
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !2112, metadata !2526), !dbg !13735
  %48 = load i64, i64* %slicelen, align 8, !dbg !13736, !tbaa !2704
  %cmp28 = icmp sle i64 %48, 0, !dbg !13738
  br i1 %cmp28, label %if.then.29, label %if.end.31, !dbg !13739

if.then.29:                                       ; preds = %if.then.27
  %call30 = call %struct._object* @PyBytes_FromStringAndSize(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.136, i32 0, i32 0), i64 0), !dbg !13740
  store %struct._object* %call30, %struct._object** %retval, !dbg !13741
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.45, !dbg !13741

if.end.31:                                        ; preds = %if.then.27
  %49 = load i64, i64* %step, align 8, !dbg !13742, !tbaa !2704
  %cmp32 = icmp eq i64 %49, 1, !dbg !13744
  br i1 %cmp32, label %if.then.33, label %if.end.35, !dbg !13745

if.then.33:                                       ; preds = %if.end.31
  %50 = load i8*, i8** %ptr, align 8, !dbg !13746, !tbaa !2522
  %51 = load i64, i64* %start, align 8, !dbg !13748, !tbaa !2704
  %add.ptr = getelementptr i8, i8* %50, i64 %51, !dbg !13749
  %52 = load i64, i64* %slicelen, align 8, !dbg !13750, !tbaa !2704
  %call34 = call %struct._object* @PyBytes_FromStringAndSize(i8* %add.ptr, i64 %52), !dbg !13751
  store %struct._object* %call34, %struct._object** %retval, !dbg !13752
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.45, !dbg !13752

if.end.35:                                        ; preds = %if.end.31
  %53 = load i64, i64* %slicelen, align 8, !dbg !13753, !tbaa !2704
  %call36 = call i8* @PyMem_Malloc(i64 %53), !dbg !13754
  store i8* %call36, i8** %dest, align 8, !dbg !13755, !tbaa !2522
  %54 = load i8*, i8** %dest, align 8, !dbg !13756, !tbaa !2522
  %cmp37 = icmp eq i8* %54, null, !dbg !13758
  br i1 %cmp37, label %if.then.38, label %if.end.40, !dbg !13759

if.then.38:                                       ; preds = %if.end.35
  %call39 = call %struct._object* @PyErr_NoMemory(), !dbg !13760
  store %struct._object* %call39, %struct._object** %retval, !dbg !13761
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.45, !dbg !13761

if.end.40:                                        ; preds = %if.end.35
  %55 = load i64, i64* %start, align 8, !dbg !13762, !tbaa !2704
  store i64 %55, i64* %cur, align 8, !dbg !13764, !tbaa !2704
  store i64 0, i64* %i15, align 8, !dbg !13765, !tbaa !2704
  br label %for.cond, !dbg !13766

for.cond:                                         ; preds = %for.inc, %if.end.40
  %56 = load i64, i64* %i15, align 8, !dbg !13767, !tbaa !2704
  %57 = load i64, i64* %slicelen, align 8, !dbg !13771, !tbaa !2704
  %cmp41 = icmp slt i64 %56, %57, !dbg !13772
  br i1 %cmp41, label %for.body, label %for.end, !dbg !13773

for.body:                                         ; preds = %for.cond
  %58 = load i64, i64* %cur, align 8, !dbg !13774, !tbaa !2704
  %59 = load i8*, i8** %ptr, align 8, !dbg !13776, !tbaa !2522
  %arrayidx = getelementptr i8, i8* %59, i64 %58, !dbg !13776
  %60 = load i8, i8* %arrayidx, align 1, !dbg !13776, !tbaa !2731
  %61 = load i64, i64* %i15, align 8, !dbg !13777, !tbaa !2704
  %62 = load i8*, i8** %dest, align 8, !dbg !13778, !tbaa !2522
  %arrayidx42 = getelementptr i8, i8* %62, i64 %61, !dbg !13778
  store i8 %60, i8* %arrayidx42, align 1, !dbg !13779, !tbaa !2731
  br label %for.inc, !dbg !13780

for.inc:                                          ; preds = %for.body
  %63 = load i64, i64* %step, align 8, !dbg !13781, !tbaa !2704
  %64 = load i64, i64* %cur, align 8, !dbg !13782, !tbaa !2704
  %add43 = add i64 %64, %63, !dbg !13782
  store i64 %add43, i64* %cur, align 8, !dbg !13782, !tbaa !2704
  %65 = load i64, i64* %i15, align 8, !dbg !13783, !tbaa !2704
  %inc = add i64 %65, 1, !dbg !13783
  store i64 %inc, i64* %i15, align 8, !dbg !13783, !tbaa !2704
  br label %for.cond, !dbg !13784

for.end:                                          ; preds = %for.cond
  %66 = load i8*, i8** %dest, align 8, !dbg !13785, !tbaa !2522
  %67 = load i64, i64* %slicelen, align 8, !dbg !13786, !tbaa !2704
  %call44 = call %struct._object* @PyBytes_FromStringAndSize(i8* %66, i64 %67), !dbg !13787
  store %struct._object* %call44, %struct._object** %np, align 8, !dbg !13788, !tbaa !2522
  %68 = load i8*, i8** %dest, align 8, !dbg !13789, !tbaa !2522
  call void @PyMem_Free(i8* %68), !dbg !13790
  %69 = load %struct._object*, %struct._object** %np, align 8, !dbg !13791, !tbaa !2522
  store %struct._object* %69, %struct._object** %retval, !dbg !13792
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.45, !dbg !13792

cleanup.45:                                       ; preds = %for.end, %if.then.38, %if.then.33, %if.then.29
  %70 = bitcast i8** %dest to i8*, !dbg !13793
  call void @llvm.lifetime.end(i64 8, i8* %70) #2, !dbg !13793
  %71 = bitcast i8** %ptr to i8*, !dbg !13793
  call void @llvm.lifetime.end(i64 8, i8* %71) #2, !dbg !13793
  br label %cleanup.101

if.end.47:                                        ; preds = %if.end.20
  %72 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !13794, !tbaa !2522
  %getfunc48 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %72, i32 0, i32 7, !dbg !13795
  %73 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc48, align 8, !dbg !13795, !tbaa !3683
  %call49 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0)), !dbg !13796
  %getfunc50 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %call49, i32 0, i32 2, !dbg !13797
  %74 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc50, align 8, !dbg !13797, !tbaa !3686
  %cmp51 = icmp eq %struct._object* (i8*, i64)* %73, %74, !dbg !13798
  br i1 %cmp51, label %if.then.52, label %if.end.78, !dbg !13799

if.then.52:                                       ; preds = %if.end.47
  %75 = bitcast i32** %ptr53 to i8*, !dbg !13800
  call void @llvm.lifetime.start(i64 8, i8* %75) #2, !dbg !13800
  call void @llvm.dbg.declare(metadata i32** %ptr53, metadata !2113, metadata !2526), !dbg !13801
  %76 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !13802, !tbaa !2522
  %b_ptr54 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %76, i32 0, i32 1, !dbg !13803
  %77 = load i8*, i8** %b_ptr54, align 8, !dbg !13803, !tbaa !4817
  %78 = bitcast i8* %77 to i32*, !dbg !13804
  store i32* %78, i32** %ptr53, align 8, !dbg !13801, !tbaa !2522
  %79 = bitcast i32** %dest55 to i8*, !dbg !13805
  call void @llvm.lifetime.start(i64 8, i8* %79) #2, !dbg !13805
  call void @llvm.dbg.declare(metadata i32** %dest55, metadata !2116, metadata !2526), !dbg !13806
  %80 = load i64, i64* %slicelen, align 8, !dbg !13807, !tbaa !2704
  %cmp56 = icmp sle i64 %80, 0, !dbg !13809
  br i1 %cmp56, label %if.then.57, label %if.end.59, !dbg !13810

if.then.57:                                       ; preds = %if.then.52
  %call58 = call %struct._object* @PyUnicode_New(i64 0, i32 0), !dbg !13811
  store %struct._object* %call58, %struct._object** %retval, !dbg !13812
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76, !dbg !13812

if.end.59:                                        ; preds = %if.then.52
  %81 = load i64, i64* %step, align 8, !dbg !13813, !tbaa !2704
  %cmp60 = icmp eq i64 %81, 1, !dbg !13815
  br i1 %cmp60, label %if.then.61, label %if.end.64, !dbg !13816

if.then.61:                                       ; preds = %if.end.59
  %82 = load i32*, i32** %ptr53, align 8, !dbg !13817, !tbaa !2522
  %83 = load i64, i64* %start, align 8, !dbg !13819, !tbaa !2704
  %add.ptr62 = getelementptr i32, i32* %82, i64 %83, !dbg !13820
  %84 = load i64, i64* %slicelen, align 8, !dbg !13821, !tbaa !2704
  %call63 = call %struct._object* @PyUnicode_FromWideChar(i32* %add.ptr62, i64 %84), !dbg !13822
  store %struct._object* %call63, %struct._object** %retval, !dbg !13823
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76, !dbg !13823

if.end.64:                                        ; preds = %if.end.59
  %85 = load i64, i64* %slicelen, align 8, !dbg !13824, !tbaa !2704
  %mul = mul i64 %85, 4, !dbg !13825
  %call65 = call i8* @PyMem_Malloc(i64 %mul), !dbg !13826
  %86 = bitcast i8* %call65 to i32*, !dbg !13827
  store i32* %86, i32** %dest55, align 8, !dbg !13828, !tbaa !2522
  %87 = load i64, i64* %start, align 8, !dbg !13829, !tbaa !2704
  store i64 %87, i64* %cur, align 8, !dbg !13831, !tbaa !2704
  store i64 0, i64* %i15, align 8, !dbg !13832, !tbaa !2704
  br label %for.cond.66, !dbg !13833

for.cond.66:                                      ; preds = %for.inc.71, %if.end.64
  %88 = load i64, i64* %i15, align 8, !dbg !13834, !tbaa !2704
  %89 = load i64, i64* %slicelen, align 8, !dbg !13838, !tbaa !2704
  %cmp67 = icmp slt i64 %88, %89, !dbg !13839
  br i1 %cmp67, label %for.body.68, label %for.end.74, !dbg !13840

for.body.68:                                      ; preds = %for.cond.66
  %90 = load i64, i64* %cur, align 8, !dbg !13841, !tbaa !2704
  %91 = load i32*, i32** %ptr53, align 8, !dbg !13843, !tbaa !2522
  %arrayidx69 = getelementptr i32, i32* %91, i64 %90, !dbg !13843
  %92 = load i32, i32* %arrayidx69, align 4, !dbg !13843, !tbaa !2611
  %93 = load i64, i64* %i15, align 8, !dbg !13844, !tbaa !2704
  %94 = load i32*, i32** %dest55, align 8, !dbg !13845, !tbaa !2522
  %arrayidx70 = getelementptr i32, i32* %94, i64 %93, !dbg !13845
  store i32 %92, i32* %arrayidx70, align 4, !dbg !13846, !tbaa !2611
  br label %for.inc.71, !dbg !13847

for.inc.71:                                       ; preds = %for.body.68
  %95 = load i64, i64* %step, align 8, !dbg !13848, !tbaa !2704
  %96 = load i64, i64* %cur, align 8, !dbg !13849, !tbaa !2704
  %add72 = add i64 %96, %95, !dbg !13849
  store i64 %add72, i64* %cur, align 8, !dbg !13849, !tbaa !2704
  %97 = load i64, i64* %i15, align 8, !dbg !13850, !tbaa !2704
  %inc73 = add i64 %97, 1, !dbg !13850
  store i64 %inc73, i64* %i15, align 8, !dbg !13850, !tbaa !2704
  br label %for.cond.66, !dbg !13851

for.end.74:                                       ; preds = %for.cond.66
  %98 = load i32*, i32** %dest55, align 8, !dbg !13852, !tbaa !2522
  %99 = load i64, i64* %slicelen, align 8, !dbg !13853, !tbaa !2704
  %call75 = call %struct._object* @PyUnicode_FromWideChar(i32* %98, i64 %99), !dbg !13854
  store %struct._object* %call75, %struct._object** %np, align 8, !dbg !13855, !tbaa !2522
  %100 = load i32*, i32** %dest55, align 8, !dbg !13856, !tbaa !2522
  %101 = bitcast i32* %100 to i8*, !dbg !13856
  call void @PyMem_Free(i8* %101), !dbg !13857
  %102 = load %struct._object*, %struct._object** %np, align 8, !dbg !13858, !tbaa !2522
  store %struct._object* %102, %struct._object** %retval, !dbg !13859
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76, !dbg !13859

cleanup.76:                                       ; preds = %for.end.74, %if.then.61, %if.then.57
  %103 = bitcast i32** %dest55 to i8*, !dbg !13860
  call void @llvm.lifetime.end(i64 8, i8* %103) #2, !dbg !13860
  %104 = bitcast i32** %ptr53 to i8*, !dbg !13860
  call void @llvm.lifetime.end(i64 8, i8* %104) #2, !dbg !13860
  br label %cleanup.101

if.end.78:                                        ; preds = %if.end.47
  %105 = load i64, i64* %slicelen, align 8, !dbg !13861, !tbaa !2704
  %call79 = call %struct._object* @PyList_New(i64 %105), !dbg !13862
  store %struct._object* %call79, %struct._object** %np, align 8, !dbg !13863, !tbaa !2522
  %106 = load %struct._object*, %struct._object** %np, align 8, !dbg !13864, !tbaa !2522
  %cmp80 = icmp eq %struct._object* %106, null, !dbg !13866
  br i1 %cmp80, label %if.then.81, label %if.end.82, !dbg !13867

if.then.81:                                       ; preds = %if.end.78
  store %struct._object* null, %struct._object** %retval, !dbg !13868
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !13868

if.end.82:                                        ; preds = %if.end.78
  %107 = load i64, i64* %start, align 8, !dbg !13869, !tbaa !2704
  store i64 %107, i64* %cur, align 8, !dbg !13870, !tbaa !2704
  store i64 0, i64* %i15, align 8, !dbg !13871, !tbaa !2704
  br label %for.cond.83, !dbg !13872

for.cond.83:                                      ; preds = %for.inc.97, %if.end.82
  %108 = load i64, i64* %i15, align 8, !dbg !13873, !tbaa !2704
  %109 = load i64, i64* %slicelen, align 8, !dbg !13876, !tbaa !2704
  %cmp84 = icmp slt i64 %108, %109, !dbg !13877
  br i1 %cmp84, label %for.body.85, label %for.end.100, !dbg !13878

for.body.85:                                      ; preds = %for.cond.83
  %110 = bitcast %struct._object** %v to i8*, !dbg !13879
  call void @llvm.lifetime.start(i64 8, i8* %110) #2, !dbg !13879
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !2117, metadata !2526), !dbg !13880
  %111 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !13881, !tbaa !2522
  %112 = load i64, i64* %cur, align 8, !dbg !13882, !tbaa !2704
  %call86 = call %struct._object* @Array_item(%struct._object* %111, i64 %112), !dbg !13883
  store %struct._object* %call86, %struct._object** %v, align 8, !dbg !13880, !tbaa !2522
  %113 = load %struct._object*, %struct._object** %v, align 8, !dbg !13884, !tbaa !2522
  %cmp87 = icmp eq %struct._object* %113, null, !dbg !13885
  br i1 %cmp87, label %if.then.88, label %if.end.94, !dbg !13886

if.then.88:                                       ; preds = %for.body.85
  br label %do.body, !dbg !13887

do.body:                                          ; preds = %if.then.88
  %114 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13888
  call void @llvm.lifetime.start(i64 8, i8* %114) #2, !dbg !13888
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2121, metadata !2526), !dbg !13890
  %115 = load %struct._object*, %struct._object** %np, align 8, !dbg !13891, !tbaa !2522
  store %struct._object* %115, %struct._object** %_py_decref_tmp, align 8, !dbg !13890, !tbaa !2522
  %116 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13892, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 0, !dbg !13894
  %117 = load i64, i64* %ob_refcnt, align 8, !dbg !13895, !tbaa !2551
  %dec = add i64 %117, -1, !dbg !13895
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !13895, !tbaa !2551
  %cmp89 = icmp ne i64 %dec, 0, !dbg !13896
  br i1 %cmp89, label %if.then.90, label %if.else.91, !dbg !13897

if.then.90:                                       ; preds = %do.body
  br label %if.end.93, !dbg !13898

if.else.91:                                       ; preds = %do.body
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13900, !tbaa !2522
  %ob_type92 = getelementptr inbounds %struct._object, %struct._object* %118, i32 0, i32 1, !dbg !13902
  %119 = load %struct._typeobject*, %struct._typeobject** %ob_type92, align 8, !dbg !13902, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %119, i32 0, i32 4, !dbg !13903
  %120 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !13903, !tbaa !2590
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !13904, !tbaa !2522
  call void %120(%struct._object* %121), !dbg !13905
  br label %if.end.93

if.end.93:                                        ; preds = %if.else.91, %if.then.90
  %122 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !13906
  call void @llvm.lifetime.end(i64 8, i8* %122) #2, !dbg !13906
  br label %do.cond, !dbg !13908

do.cond:                                          ; preds = %if.end.93
  br label %do.end, !dbg !13909

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !13911
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96, !dbg !13911

if.end.94:                                        ; preds = %for.body.85
  %123 = load %struct._object*, %struct._object** %v, align 8, !dbg !13912, !tbaa !2522
  %124 = load i64, i64* %i15, align 8, !dbg !13913, !tbaa !2704
  %125 = load %struct._object*, %struct._object** %np, align 8, !dbg !13914, !tbaa !2522
  %126 = bitcast %struct._object* %125 to %struct.PyListObject*, !dbg !13915
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %126, i32 0, i32 1, !dbg !13916
  %127 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !13916, !tbaa !13917
  %arrayidx95 = getelementptr %struct._object*, %struct._object** %127, i64 %124, !dbg !13919
  store %struct._object* %123, %struct._object** %arrayidx95, align 8, !dbg !13920, !tbaa !2522
  store i32 0, i32* %cleanup.dest.slot, !dbg !13921
  br label %cleanup.96, !dbg !13921

cleanup.96:                                       ; preds = %if.end.94, %do.end
  %128 = bitcast %struct._object** %v to i8*, !dbg !13922
  call void @llvm.lifetime.end(i64 8, i8* %128) #2, !dbg !13922
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup.96
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc.97, !dbg !13923

for.inc.97:                                       ; preds = %cleanup.cont
  %129 = load i64, i64* %step, align 8, !dbg !13924, !tbaa !2704
  %130 = load i64, i64* %cur, align 8, !dbg !13925, !tbaa !2704
  %add98 = add i64 %130, %129, !dbg !13925
  store i64 %add98, i64* %cur, align 8, !dbg !13925, !tbaa !2704
  %131 = load i64, i64* %i15, align 8, !dbg !13926, !tbaa !2704
  %inc99 = add i64 %131, 1, !dbg !13926
  store i64 %inc99, i64* %i15, align 8, !dbg !13926, !tbaa !2704
  br label %for.cond.83, !dbg !13927

for.end.100:                                      ; preds = %for.cond.83
  %132 = load %struct._object*, %struct._object** %np, align 8, !dbg !13928, !tbaa !2522
  store %struct._object* %132, %struct._object** %retval, !dbg !13929
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.101, !dbg !13929

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.101

cleanup.101:                                      ; preds = %NewDefault, %for.end.100, %if.then.81, %cleanup.76, %cleanup.45, %if.then.19
  %133 = bitcast i64* %i15 to i8*, !dbg !13930
  call void @llvm.lifetime.end(i64 8, i8* %133) #2, !dbg !13930
  %134 = bitcast i64* %cur to i8*, !dbg !13930
  call void @llvm.lifetime.end(i64 8, i8* %134) #2, !dbg !13930
  %135 = bitcast i64* %slicelen to i8*, !dbg !13930
  call void @llvm.lifetime.end(i64 8, i8* %135) #2, !dbg !13930
  %136 = bitcast i64* %step to i8*, !dbg !13930
  call void @llvm.lifetime.end(i64 8, i8* %136) #2, !dbg !13930
  %137 = bitcast i64* %stop to i8*, !dbg !13930
  call void @llvm.lifetime.end(i64 8, i8* %137) #2, !dbg !13930
  %138 = bitcast i64* %start to i8*, !dbg !13930
  call void @llvm.lifetime.end(i64 8, i8* %138) #2, !dbg !13930
  %139 = bitcast %struct._object** %np to i8*, !dbg !13930
  call void @llvm.lifetime.end(i64 8, i8* %139) #2, !dbg !13930
  %140 = bitcast %struct._object** %proto to i8*, !dbg !13930
  call void @llvm.lifetime.end(i64 8, i8* %140) #2, !dbg !13930
  %141 = bitcast %struct.StgDictObject** %itemdict to i8*, !dbg !13930
  call void @llvm.lifetime.end(i64 8, i8* %141) #2, !dbg !13930
  %142 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !13930
  call void @llvm.lifetime.end(i64 8, i8* %142) #2, !dbg !13930
  br label %cleanup.112

if.else.111:                                      ; preds = %if.else
  %143 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !13931, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %143, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.168, i32 0, i32 0)), !dbg !13933
  store %struct._object* null, %struct._object** %retval, !dbg !13934
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.112, !dbg !13934

cleanup.112:                                      ; preds = %if.else.111, %cleanup.101, %cleanup
  %144 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !13935
  call void @llvm.lifetime.end(i64 8, i8* %144) #2, !dbg !13935
  %145 = load %struct._object*, %struct._object** %retval, !dbg !13935
  ret %struct._object* %145, !dbg !13935
}

; Function Attrs: uwtable
define internal i32 @Array_ass_subscript(%struct._object* %myself, %struct._object* %item, %struct._object* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %myself.addr = alloca %struct._object*, align 8
  %item.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %self = alloca %struct.tagCDataObject*, align 8
  %cleanup.dest.slot = alloca i32
  %i = alloca i64, align 8
  %start = alloca i64, align 8
  %stop = alloca i64, align 8
  %step = alloca i64, align 8
  %slicelen = alloca i64, align 8
  %otherlen = alloca i64, align 8
  %i18 = alloca i64, align 8
  %cur = alloca i64, align 8
  %item37 = alloca %struct._object*, align 8
  %result = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !2127, metadata !2526), !dbg !13936
  store %struct._object* %item, %struct._object** %item.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %item.addr, metadata !2128, metadata !2526), !dbg !13937
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !2129, metadata !2526), !dbg !13938
  %0 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !13939
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !13939
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self, metadata !2130, metadata !2526), !dbg !13940
  %1 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !13941, !tbaa !2522
  %2 = bitcast %struct._object* %1 to %struct.tagCDataObject*, !dbg !13942
  store %struct.tagCDataObject* %2, %struct.tagCDataObject** %self, align 8, !dbg !13940, !tbaa !2522
  %3 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !13943, !tbaa !2522
  %cmp = icmp eq %struct._object* %3, null, !dbg !13945
  br i1 %cmp, label %if.then, label %if.end, !dbg !13946

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !13947, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.167, i32 0, i32 0)), !dbg !13949
  store i32 -1, i32* %retval, !dbg !13950
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.62, !dbg !13950

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !13951, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !13952
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !13952, !tbaa !2588
  %tp_as_number = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 10, !dbg !13953
  %7 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number, align 8, !dbg !13953, !tbaa !13649
  %cmp1 = icmp ne %struct.PyNumberMethods* %7, null, !dbg !13954
  br i1 %cmp1, label %land.lhs.true, label %if.else, !dbg !13955

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !13956, !tbaa !2522
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !13958
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !13958, !tbaa !2588
  %tp_as_number3 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 10, !dbg !13959
  %10 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number3, align 8, !dbg !13959, !tbaa !13649
  %nb_index = getelementptr inbounds %struct.PyNumberMethods, %struct.PyNumberMethods* %10, i32 0, i32 33, !dbg !13960
  %11 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %nb_index, align 8, !dbg !13960, !tbaa !13657
  %cmp4 = icmp ne %struct._object* (%struct._object*)* %11, null, !dbg !13961
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !13962

if.then.5:                                        ; preds = %land.lhs.true
  %12 = bitcast i64* %i to i8*, !dbg !13963
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !13963
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2131, metadata !2526), !dbg !13964
  %13 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !13965, !tbaa !2522
  %14 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !13966, !tbaa !2522
  %call = call i64 @PyNumber_AsSsize_t(%struct._object* %13, %struct._object* %14), !dbg !13967
  store i64 %call, i64* %i, align 8, !dbg !13964, !tbaa !2704
  %15 = load i64, i64* %i, align 8, !dbg !13968, !tbaa !2704
  %cmp6 = icmp eq i64 %15, -1, !dbg !13970
  br i1 %cmp6, label %land.lhs.true.7, label %if.end.10, !dbg !13971

land.lhs.true.7:                                  ; preds = %if.then.5
  %call8 = call %struct._object* @PyErr_Occurred(), !dbg !13972
  %tobool = icmp ne %struct._object* %call8, null, !dbg !13972
  br i1 %tobool, label %if.then.9, label %if.end.10, !dbg !13974

if.then.9:                                        ; preds = %land.lhs.true.7
  store i32 -1, i32* %retval, !dbg !13975
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13975

if.end.10:                                        ; preds = %land.lhs.true.7, %if.then.5
  %16 = load i64, i64* %i, align 8, !dbg !13976, !tbaa !2704
  %cmp11 = icmp slt i64 %16, 0, !dbg !13978
  br i1 %cmp11, label %if.then.12, label %if.end.13, !dbg !13979

if.then.12:                                       ; preds = %if.end.10
  %17 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !13980, !tbaa !2522
  %b_length = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %17, i32 0, i32 5, !dbg !13981
  %18 = load i64, i64* %b_length, align 8, !dbg !13981, !tbaa !4912
  %19 = load i64, i64* %i, align 8, !dbg !13982, !tbaa !2704
  %add = add i64 %19, %18, !dbg !13982
  store i64 %add, i64* %i, align 8, !dbg !13982, !tbaa !2704
  br label %if.end.13, !dbg !13983

if.end.13:                                        ; preds = %if.then.12, %if.end.10
  %20 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !13984, !tbaa !2522
  %21 = load i64, i64* %i, align 8, !dbg !13985, !tbaa !2704
  %22 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !13986, !tbaa !2522
  %call14 = call i32 @Array_ass_item(%struct._object* %20, i64 %21, %struct._object* %22), !dbg !13987
  store i32 %call14, i32* %retval, !dbg !13988
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !13988

cleanup:                                          ; preds = %if.end.13, %if.then.9
  %23 = bitcast i64* %i to i8*, !dbg !13989
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !13989
  br label %cleanup.62

if.else:                                          ; preds = %land.lhs.true, %if.end
  %24 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !13990, !tbaa !2522
  %ob_type15 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !13991
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type15, align 8, !dbg !13991, !tbaa !2588
  %cmp16 = icmp eq %struct._typeobject* %25, @PySlice_Type, !dbg !13992
  br i1 %cmp16, label %if.then.17, label %if.else.61, !dbg !13993

if.then.17:                                       ; preds = %if.else
  %26 = bitcast i64* %start to i8*, !dbg !13994
  call void @llvm.lifetime.start(i64 8, i8* %26) #2, !dbg !13994
  call void @llvm.dbg.declare(metadata i64* %start, metadata !2134, metadata !2526), !dbg !13995
  %27 = bitcast i64* %stop to i8*, !dbg !13994
  call void @llvm.lifetime.start(i64 8, i8* %27) #2, !dbg !13994
  call void @llvm.dbg.declare(metadata i64* %stop, metadata !2137, metadata !2526), !dbg !13996
  %28 = bitcast i64* %step to i8*, !dbg !13994
  call void @llvm.lifetime.start(i64 8, i8* %28) #2, !dbg !13994
  call void @llvm.dbg.declare(metadata i64* %step, metadata !2138, metadata !2526), !dbg !13997
  %29 = bitcast i64* %slicelen to i8*, !dbg !13994
  call void @llvm.lifetime.start(i64 8, i8* %29) #2, !dbg !13994
  call void @llvm.dbg.declare(metadata i64* %slicelen, metadata !2139, metadata !2526), !dbg !13998
  %30 = bitcast i64* %otherlen to i8*, !dbg !13994
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !13994
  call void @llvm.dbg.declare(metadata i64* %otherlen, metadata !2140, metadata !2526), !dbg !13999
  %31 = bitcast i64* %i18 to i8*, !dbg !13994
  call void @llvm.lifetime.start(i64 8, i8* %31) #2, !dbg !13994
  call void @llvm.dbg.declare(metadata i64* %i18, metadata !2141, metadata !2526), !dbg !14000
  %32 = bitcast i64* %cur to i8*, !dbg !13994
  call void @llvm.lifetime.start(i64 8, i8* %32) #2, !dbg !13994
  call void @llvm.dbg.declare(metadata i64* %cur, metadata !2142, metadata !2526), !dbg !14001
  %33 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !14002, !tbaa !2522
  %34 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !14004, !tbaa !2522
  %b_length19 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %34, i32 0, i32 5, !dbg !14005
  %35 = load i64, i64* %b_length19, align 8, !dbg !14005, !tbaa !4912
  %call20 = call i32 @PySlice_GetIndicesEx(%struct._object* %33, i64 %35, i64* %start, i64* %stop, i64* %step, i64* %slicelen), !dbg !14006
  %cmp21 = icmp slt i32 %call20, 0, !dbg !14007
  br i1 %cmp21, label %if.then.22, label %if.end.23, !dbg !14008

if.then.22:                                       ; preds = %if.then.17
  store i32 -1, i32* %retval, !dbg !14009
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.54, !dbg !14009

if.end.23:                                        ; preds = %if.then.17
  %36 = load i64, i64* %step, align 8, !dbg !14011, !tbaa !2704
  %cmp24 = icmp slt i64 %36, 0, !dbg !14013
  br i1 %cmp24, label %land.lhs.true.25, label %lor.lhs.false, !dbg !14014

land.lhs.true.25:                                 ; preds = %if.end.23
  %37 = load i64, i64* %start, align 8, !dbg !14015, !tbaa !2704
  %38 = load i64, i64* %stop, align 8, !dbg !14017, !tbaa !2704
  %cmp26 = icmp slt i64 %37, %38, !dbg !14018
  br i1 %cmp26, label %if.then.30, label %lor.lhs.false, !dbg !14019

lor.lhs.false:                                    ; preds = %land.lhs.true.25, %if.end.23
  %39 = load i64, i64* %step, align 8, !dbg !14020, !tbaa !2704
  %cmp27 = icmp sgt i64 %39, 0, !dbg !14021
  br i1 %cmp27, label %land.lhs.true.28, label %if.end.31, !dbg !14022

land.lhs.true.28:                                 ; preds = %lor.lhs.false
  %40 = load i64, i64* %start, align 8, !dbg !14023, !tbaa !2704
  %41 = load i64, i64* %stop, align 8, !dbg !14024, !tbaa !2704
  %cmp29 = icmp sgt i64 %40, %41, !dbg !14025
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !14026

if.then.30:                                       ; preds = %land.lhs.true.28, %land.lhs.true.25
  %42 = load i64, i64* %start, align 8, !dbg !14027, !tbaa !2704
  store i64 %42, i64* %stop, align 8, !dbg !14028, !tbaa !2704
  br label %if.end.31, !dbg !14029

if.end.31:                                        ; preds = %if.then.30, %land.lhs.true.28, %lor.lhs.false
  %43 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !14030, !tbaa !2522
  %call32 = call i64 @PySequence_Size(%struct._object* %43), !dbg !14031
  store i64 %call32, i64* %otherlen, align 8, !dbg !14032, !tbaa !2704
  %44 = load i64, i64* %otherlen, align 8, !dbg !14033, !tbaa !2704
  %45 = load i64, i64* %slicelen, align 8, !dbg !14035, !tbaa !2704
  %cmp33 = icmp ne i64 %44, %45, !dbg !14036
  br i1 %cmp33, label %if.then.34, label %if.end.35, !dbg !14037

if.then.34:                                       ; preds = %if.end.31
  %46 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !14038, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %46, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.169, i32 0, i32 0)), !dbg !14040
  store i32 -1, i32* %retval, !dbg !14041
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.54, !dbg !14041

if.end.35:                                        ; preds = %if.end.31
  %47 = load i64, i64* %start, align 8, !dbg !14042, !tbaa !2704
  store i64 %47, i64* %cur, align 8, !dbg !14043, !tbaa !2704
  store i64 0, i64* %i18, align 8, !dbg !14044, !tbaa !2704
  br label %for.cond, !dbg !14045

for.cond:                                         ; preds = %for.inc, %if.end.35
  %48 = load i64, i64* %i18, align 8, !dbg !14046, !tbaa !2704
  %49 = load i64, i64* %otherlen, align 8, !dbg !14049, !tbaa !2704
  %cmp36 = icmp slt i64 %48, %49, !dbg !14050
  br i1 %cmp36, label %for.body, label %for.end, !dbg !14051

for.body:                                         ; preds = %for.cond
  %50 = bitcast %struct._object** %item37 to i8*, !dbg !14052
  call void @llvm.lifetime.start(i64 8, i8* %50) #2, !dbg !14052
  call void @llvm.dbg.declare(metadata %struct._object** %item37, metadata !2143, metadata !2526), !dbg !14053
  %51 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !14054, !tbaa !2522
  %52 = load i64, i64* %i18, align 8, !dbg !14055, !tbaa !2704
  %call38 = call %struct._object* @PySequence_GetItem(%struct._object* %51, i64 %52), !dbg !14056
  store %struct._object* %call38, %struct._object** %item37, align 8, !dbg !14053, !tbaa !2522
  %53 = bitcast i32* %result to i8*, !dbg !14057
  call void @llvm.lifetime.start(i64 4, i8* %53) #2, !dbg !14057
  call void @llvm.dbg.declare(metadata i32* %result, metadata !2147, metadata !2526), !dbg !14058
  %54 = load %struct._object*, %struct._object** %item37, align 8, !dbg !14059, !tbaa !2522
  %cmp39 = icmp eq %struct._object* %54, null, !dbg !14061
  br i1 %cmp39, label %if.then.40, label %if.end.41, !dbg !14062

if.then.40:                                       ; preds = %for.body
  store i32 -1, i32* %retval, !dbg !14063
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.51, !dbg !14063

if.end.41:                                        ; preds = %for.body
  %55 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !14064, !tbaa !2522
  %56 = load i64, i64* %cur, align 8, !dbg !14065, !tbaa !2704
  %57 = load %struct._object*, %struct._object** %item37, align 8, !dbg !14066, !tbaa !2522
  %call42 = call i32 @Array_ass_item(%struct._object* %55, i64 %56, %struct._object* %57), !dbg !14067
  store i32 %call42, i32* %result, align 4, !dbg !14068, !tbaa !2611
  br label %do.body, !dbg !14069

do.body:                                          ; preds = %if.end.41
  %58 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14070
  call void @llvm.lifetime.start(i64 8, i8* %58) #2, !dbg !14070
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2148, metadata !2526), !dbg !14072
  %59 = load %struct._object*, %struct._object** %item37, align 8, !dbg !14073, !tbaa !2522
  store %struct._object* %59, %struct._object** %_py_decref_tmp, align 8, !dbg !14072, !tbaa !2522
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14074, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0, !dbg !14076
  %61 = load i64, i64* %ob_refcnt, align 8, !dbg !14077, !tbaa !2551
  %dec = add i64 %61, -1, !dbg !14077
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !14077, !tbaa !2551
  %cmp43 = icmp ne i64 %dec, 0, !dbg !14078
  br i1 %cmp43, label %if.then.44, label %if.else.45, !dbg !14079

if.then.44:                                       ; preds = %do.body
  br label %if.end.47, !dbg !14080

if.else.45:                                       ; preds = %do.body
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14082, !tbaa !2522
  %ob_type46 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1, !dbg !14084
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type46, align 8, !dbg !14084, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4, !dbg !14085
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14085, !tbaa !2590
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14086, !tbaa !2522
  call void %64(%struct._object* %65), !dbg !14087
  br label %if.end.47

if.end.47:                                        ; preds = %if.else.45, %if.then.44
  %66 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14088
  call void @llvm.lifetime.end(i64 8, i8* %66) #2, !dbg !14088
  br label %do.cond, !dbg !14090

do.cond:                                          ; preds = %if.end.47
  br label %do.end, !dbg !14091

do.end:                                           ; preds = %do.cond
  %67 = load i32, i32* %result, align 4, !dbg !14093, !tbaa !2611
  %cmp48 = icmp eq i32 %67, -1, !dbg !14095
  br i1 %cmp48, label %if.then.49, label %if.end.50, !dbg !14096

if.then.49:                                       ; preds = %do.end
  store i32 -1, i32* %retval, !dbg !14097
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.51, !dbg !14097

if.end.50:                                        ; preds = %do.end
  store i32 0, i32* %cleanup.dest.slot, !dbg !14098
  br label %cleanup.51, !dbg !14098

cleanup.51:                                       ; preds = %if.end.50, %if.then.49, %if.then.40
  %68 = bitcast i32* %result to i8*, !dbg !14099
  call void @llvm.lifetime.end(i64 4, i8* %68) #2, !dbg !14099
  %69 = bitcast %struct._object** %item37 to i8*, !dbg !14099
  call void @llvm.lifetime.end(i64 8, i8* %69) #2, !dbg !14099
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup.51
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !14100

for.inc:                                          ; preds = %cleanup.cont
  %70 = load i64, i64* %step, align 8, !dbg !14101, !tbaa !2704
  %71 = load i64, i64* %cur, align 8, !dbg !14102, !tbaa !2704
  %add53 = add i64 %71, %70, !dbg !14102
  store i64 %add53, i64* %cur, align 8, !dbg !14102, !tbaa !2704
  %72 = load i64, i64* %i18, align 8, !dbg !14103, !tbaa !2704
  %inc = add i64 %72, 1, !dbg !14103
  store i64 %inc, i64* %i18, align 8, !dbg !14103, !tbaa !2704
  br label %for.cond, !dbg !14104

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, !dbg !14105
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.54, !dbg !14105

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.54

cleanup.54:                                       ; preds = %NewDefault, %for.end, %if.then.34, %if.then.22
  %73 = bitcast i64* %cur to i8*, !dbg !14106
  call void @llvm.lifetime.end(i64 8, i8* %73) #2, !dbg !14106
  %74 = bitcast i64* %i18 to i8*, !dbg !14106
  call void @llvm.lifetime.end(i64 8, i8* %74) #2, !dbg !14106
  %75 = bitcast i64* %otherlen to i8*, !dbg !14106
  call void @llvm.lifetime.end(i64 8, i8* %75) #2, !dbg !14106
  %76 = bitcast i64* %slicelen to i8*, !dbg !14106
  call void @llvm.lifetime.end(i64 8, i8* %76) #2, !dbg !14106
  %77 = bitcast i64* %step to i8*, !dbg !14106
  call void @llvm.lifetime.end(i64 8, i8* %77) #2, !dbg !14106
  %78 = bitcast i64* %stop to i8*, !dbg !14106
  call void @llvm.lifetime.end(i64 8, i8* %78) #2, !dbg !14106
  %79 = bitcast i64* %start to i8*, !dbg !14106
  call void @llvm.lifetime.end(i64 8, i8* %79) #2, !dbg !14106
  br label %cleanup.62

if.else.61:                                       ; preds = %if.else
  %80 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !14107, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %80, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.170, i32 0, i32 0)), !dbg !14109
  store i32 -1, i32* %retval, !dbg !14110
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.62, !dbg !14110

cleanup.62:                                       ; preds = %if.else.61, %cleanup.54, %cleanup, %if.then
  %81 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !14111
  call void @llvm.lifetime.end(i64 8, i8* %81) #2, !dbg !14111
  %82 = load i32, i32* %retval, !dbg !14111
  ret i32 %82, !dbg !14111
}

declare i64 @PyNumber_AsSsize_t(%struct._object*, %struct._object*) #3

declare i32 @PySlice_GetIndicesEx(%struct._object*, i64, i64*, i64*, i64*, i64*) #3

declare %struct._object* @PyUnicode_New(i64, i32) #3

declare %struct._object* @PyList_New(i64) #3

declare i64 @PySequence_Size(%struct._object*) #3

declare %struct._object* @PySequence_GetItem(%struct._object*, i64) #3

declare i32 @PySequence_SetItem(%struct._object*, i64, %struct._object*) #3

; Function Attrs: uwtable
define internal %struct._object* @Simple_repr(%struct.tagCDataObject* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %val = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !2176, metadata !2526), !dbg !14112
  %0 = bitcast %struct._object** %val to i8*, !dbg !14113
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !14113
  call void @llvm.dbg.declare(metadata %struct._object** %val, metadata !2177, metadata !2526), !dbg !14114
  %1 = bitcast %struct._object** %result to i8*, !dbg !14113
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !14113
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !2178, metadata !2526), !dbg !14115
  %2 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14116, !tbaa !2522
  %3 = bitcast %struct.tagCDataObject* %2 to %struct._object*, !dbg !14118
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !14119
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14119, !tbaa !2588
  %tp_base = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 30, !dbg !14120
  %5 = load %struct._typeobject*, %struct._typeobject** %tp_base, align 8, !dbg !14120, !tbaa !4225
  %cmp = icmp ne %struct._typeobject* %5, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Simple_Type to %struct._typeobject*), !dbg !14121
  br i1 %cmp, label %if.then, label %if.end, !dbg !14122

if.then:                                          ; preds = %entry
  %6 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14123, !tbaa !2522
  %7 = bitcast %struct.tagCDataObject* %6 to %struct._object*, !dbg !14125
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !14126
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !14126, !tbaa !2588
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 1, !dbg !14127
  %9 = load i8*, i8** %tp_name, align 8, !dbg !14127, !tbaa !5264
  %10 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14128, !tbaa !2522
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.134, i32 0, i32 0), i8* %9, %struct.tagCDataObject* %10), !dbg !14129
  store %struct._object* %call, %struct._object** %retval, !dbg !14130
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14130

if.end:                                           ; preds = %entry
  %11 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14131, !tbaa !2522
  %call2 = call %struct._object* @Simple_get_value(%struct.tagCDataObject* %11), !dbg !14132
  store %struct._object* %call2, %struct._object** %val, align 8, !dbg !14133, !tbaa !2522
  %12 = load %struct._object*, %struct._object** %val, align 8, !dbg !14134, !tbaa !2522
  %cmp3 = icmp eq %struct._object* %12, null, !dbg !14136
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !14137

if.then.4:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !14138
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14138

if.end.5:                                         ; preds = %if.end
  %13 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14139, !tbaa !2522
  %14 = bitcast %struct.tagCDataObject* %13 to %struct._object*, !dbg !14140
  %ob_type6 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !14141
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type6, align 8, !dbg !14141, !tbaa !2588
  %tp_name7 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 1, !dbg !14142
  %16 = load i8*, i8** %tp_name7, align 8, !dbg !14142, !tbaa !5264
  %17 = load %struct._object*, %struct._object** %val, align 8, !dbg !14143, !tbaa !2522
  %call8 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.173, i32 0, i32 0), i8* %16, %struct._object* %17), !dbg !14144
  store %struct._object* %call8, %struct._object** %result, align 8, !dbg !14145, !tbaa !2522
  br label %do.body, !dbg !14146

do.body:                                          ; preds = %if.end.5
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14147
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !14147
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2179, metadata !2526), !dbg !14149
  %19 = load %struct._object*, %struct._object** %val, align 8, !dbg !14150, !tbaa !2522
  store %struct._object* %19, %struct._object** %_py_decref_tmp, align 8, !dbg !14149, !tbaa !2522
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14151, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0, !dbg !14153
  %21 = load i64, i64* %ob_refcnt, align 8, !dbg !14154, !tbaa !2551
  %dec = add i64 %21, -1, !dbg !14154
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !14154, !tbaa !2551
  %cmp9 = icmp ne i64 %dec, 0, !dbg !14155
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !14156

if.then.10:                                       ; preds = %do.body
  br label %if.end.12, !dbg !14157

if.else:                                          ; preds = %do.body
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14159, !tbaa !2522
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !14161
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !14161, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4, !dbg !14162
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !14162, !tbaa !2590
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !14163, !tbaa !2522
  call void %24(%struct._object* %25), !dbg !14164
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.10
  %26 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !14165
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !14165
  br label %do.cond, !dbg !14167

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !14168

do.end:                                           ; preds = %do.cond
  %27 = load %struct._object*, %struct._object** %result, align 8, !dbg !14170, !tbaa !2522
  store %struct._object* %27, %struct._object** %retval, !dbg !14171
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14171

cleanup:                                          ; preds = %do.end, %if.then.4, %if.then
  %28 = bitcast %struct._object** %result to i8*, !dbg !14172
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !14172
  %29 = bitcast %struct._object** %val to i8*, !dbg !14172
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !14172
  %30 = load %struct._object*, %struct._object** %retval, !dbg !14172
  ret %struct._object* %30, !dbg !14172
}

; Function Attrs: uwtable
define internal i32 @Simple_init(%struct.tagCDataObject* %self, %struct._object* %args, %struct._object* %kw) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kw.addr = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !2200, metadata !2526), !dbg !14173
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2201, metadata !2526), !dbg !14174
  store %struct._object* %kw, %struct._object** %kw.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kw.addr, metadata !2202, metadata !2526), !dbg !14175
  %0 = bitcast %struct._object** %value to i8*, !dbg !14176
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !14176
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !2203, metadata !2526), !dbg !14177
  store %struct._object* null, %struct._object** %value, align 8, !dbg !14177, !tbaa !2522
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !14178, !tbaa !2522
  %call = call i32 (%struct._object*, i8*, i64, i64, ...) @PyArg_UnpackTuple(%struct._object* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.176, i32 0, i32 0), i64 0, i64 1, %struct._object** %value), !dbg !14180
  %tobool = icmp ne i32 %call, 0, !dbg !14180
  br i1 %tobool, label %if.end, label %if.then, !dbg !14181

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !14182
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14182

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %value, align 8, !dbg !14183, !tbaa !2522
  %tobool1 = icmp ne %struct._object* %2, null, !dbg !14183
  br i1 %tobool1, label %if.then.2, label %if.end.4, !dbg !14185

if.then.2:                                        ; preds = %if.end
  %3 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14186, !tbaa !2522
  %4 = load %struct._object*, %struct._object** %value, align 8, !dbg !14187, !tbaa !2522
  %call3 = call i32 @Simple_set_value(%struct.tagCDataObject* %3, %struct._object* %4), !dbg !14188
  store i32 %call3, i32* %retval, !dbg !14189
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14189

if.end.4:                                         ; preds = %if.end
  store i32 0, i32* %retval, !dbg !14190
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14190

cleanup:                                          ; preds = %if.end.4, %if.then.2, %if.then
  %5 = bitcast %struct._object** %value to i8*, !dbg !14191
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !14191
  %6 = load i32, i32* %retval, !dbg !14191
  ret i32 %6, !dbg !14191
}

; Function Attrs: uwtable
define internal %struct._object* @Simple_get_value(%struct.tagCDataObject* %self) #0 {
entry:
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !2183, metadata !2526), !dbg !14192
  %0 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !14193
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !14193
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !2184, metadata !2526), !dbg !14194
  %1 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14195, !tbaa !2522
  %2 = bitcast %struct.tagCDataObject* %1 to %struct._object*, !dbg !14196
  %call = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %2), !dbg !14197
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !14198, !tbaa !2522
  %3 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !14199, !tbaa !2522
  %getfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %3, i32 0, i32 7, !dbg !14200
  %4 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc, align 8, !dbg !14200, !tbaa !3683
  %5 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14201, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %5, i32 0, i32 1, !dbg !14202
  %6 = load i8*, i8** %b_ptr, align 8, !dbg !14202, !tbaa !4817
  %7 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14203, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %7, i32 0, i32 4, !dbg !14204
  %8 = load i64, i64* %b_size, align 8, !dbg !14204, !tbaa !4918
  %call1 = call %struct._object* %4(i8* %6, i64 %8), !dbg !14199
  %9 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !14205
  call void @llvm.lifetime.end(i64 8, i8* %9) #2, !dbg !14205
  ret %struct._object* %call1, !dbg !14206
}

; Function Attrs: nounwind uwtable
define internal i32 @Simple_bool(%struct.tagCDataObject* %self) #7 {
entry:
  %self.addr = alloca %struct.tagCDataObject*, align 8
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !2187, metadata !2526), !dbg !14207
  %0 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14208, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %0, i32 0, i32 1, !dbg !14209
  %1 = load i8*, i8** %b_ptr, align 8, !dbg !14209, !tbaa !4817
  %2 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14210, !tbaa !2522
  %b_size = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %2, i32 0, i32 4, !dbg !14211
  %3 = load i64, i64* %b_size, align 8, !dbg !14211, !tbaa !4918
  %call = call i32 @memcmp(i8* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.174, i32 0, i32 0), i64 %3) #8, !dbg !14212
  ret i32 %call, !dbg !14213
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: uwtable
define internal %struct._object* @Simple_from_outparm(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !2190, metadata !2526), !dbg !14214
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2191, metadata !2526), !dbg !14215
  %0 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14216, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1, !dbg !14218
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14218, !tbaa !2588
  %2 = bitcast %struct._typeobject* %1 to %struct._object*, !dbg !14219
  %call = call i32 @_ctypes_simple_instance(%struct._object* %2), !dbg !14220
  %tobool = icmp ne i32 %call, 0, !dbg !14220
  br i1 %tobool, label %if.then, label %if.end, !dbg !14221

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14222, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 0, !dbg !14224
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !14225, !tbaa !2551
  %inc = add i64 %4, 1, !dbg !14225
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !14225, !tbaa !2551
  %5 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14226, !tbaa !2522
  store %struct._object* %5, %struct._object** %retval, !dbg !14227
  br label %return, !dbg !14227

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14228, !tbaa !2522
  %7 = bitcast %struct._object* %6 to %struct.tagCDataObject*, !dbg !14229
  %call1 = call %struct._object* @Simple_get_value(%struct.tagCDataObject* %7), !dbg !14230
  store %struct._object* %call1, %struct._object** %retval, !dbg !14231
  br label %return, !dbg !14231

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct._object*, %struct._object** %retval, !dbg !14232
  ret %struct._object* %8, !dbg !14232
}

; Function Attrs: uwtable
define internal i32 @Simple_set_value(%struct.tagCDataObject* %self, %struct._object* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %value.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !2194, metadata !2526), !dbg !14233
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !2195, metadata !2526), !dbg !14234
  %0 = bitcast %struct._object** %result to i8*, !dbg !14235
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !14235
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !2196, metadata !2526), !dbg !14236
  %1 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !14237
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !14237
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !2197, metadata !2526), !dbg !14238
  %2 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14239, !tbaa !2522
  %3 = bitcast %struct.tagCDataObject* %2 to %struct._object*, !dbg !14240
  %call = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %3), !dbg !14241
  store %struct.StgDictObject* %call, %struct.StgDictObject** %dict, align 8, !dbg !14238, !tbaa !2522
  %4 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !14242, !tbaa !2522
  %cmp = icmp eq %struct._object* %4, null, !dbg !14244
  br i1 %cmp, label %if.then, label %if.end, !dbg !14245

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !14246, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.88, i32 0, i32 0)), !dbg !14248
  store i32 -1, i32* %retval, !dbg !14249
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14249

if.end:                                           ; preds = %entry
  %6 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !14250, !tbaa !2522
  %setfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %6, i32 0, i32 6, !dbg !14251
  %7 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc, align 8, !dbg !14251, !tbaa !4041
  %8 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14252, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %8, i32 0, i32 1, !dbg !14253
  %9 = load i8*, i8** %b_ptr, align 8, !dbg !14253, !tbaa !4817
  %10 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !14254, !tbaa !2522
  %11 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !14255, !tbaa !2522
  %size = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %11, i32 0, i32 1, !dbg !14256
  %12 = load i64, i64* %size, align 8, !dbg !14256, !tbaa !3101
  %call1 = call %struct._object* %7(i8* %9, %struct._object* %10, i64 %12), !dbg !14250
  store %struct._object* %call1, %struct._object** %result, align 8, !dbg !14257, !tbaa !2522
  %13 = load %struct._object*, %struct._object** %result, align 8, !dbg !14258, !tbaa !2522
  %tobool = icmp ne %struct._object* %13, null, !dbg !14258
  br i1 %tobool, label %if.end.3, label %if.then.2, !dbg !14260

if.then.2:                                        ; preds = %if.end
  store i32 -1, i32* %retval, !dbg !14261
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14261

if.end.3:                                         ; preds = %if.end
  %14 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14262, !tbaa !2522
  %15 = load %struct._object*, %struct._object** %result, align 8, !dbg !14263, !tbaa !2522
  %call4 = call i32 @KeepRef(%struct.tagCDataObject* %14, i64 0, %struct._object* %15), !dbg !14264
  store i32 %call4, i32* %retval, !dbg !14265
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14265

cleanup:                                          ; preds = %if.end.3, %if.then.2, %if.then
  %16 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !14266
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !14266
  %17 = bitcast %struct._object** %result to i8*, !dbg !14266
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !14266
  %18 = load i32, i32* %retval, !dbg !14266
  ret i32 %18, !dbg !14266
}

declare i32 @PyArg_UnpackTuple(%struct._object*, i8*, i64, i64, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @Pointer_bool(%struct.tagCDataObject* %self) #7 {
entry:
  %self.addr = alloca %struct.tagCDataObject*, align 8
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !2206, metadata !2526), !dbg !14267
  %0 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14268, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %0, i32 0, i32 1, !dbg !14269
  %1 = load i8*, i8** %b_ptr, align 8, !dbg !14269, !tbaa !4817
  %2 = bitcast i8* %1 to i8**, !dbg !14270
  %3 = load i8*, i8** %2, align 8, !dbg !14271, !tbaa !2522
  %cmp = icmp ne i8* %3, null, !dbg !14272
  %conv = zext i1 %cmp to i32, !dbg !14272
  ret i32 %conv, !dbg !14273
}

; Function Attrs: uwtable
define internal %struct._object* @Pointer_item(%struct._object* %myself, i64 %index) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %myself.addr = alloca %struct._object*, align 8
  %index.addr = alloca i64, align 8
  %self = alloca %struct.tagCDataObject*, align 8
  %size = alloca i64, align 8
  %offset = alloca i64, align 8
  %stgdict = alloca %struct.StgDictObject*, align 8
  %itemdict = alloca %struct.StgDictObject*, align 8
  %proto = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !2209, metadata !2526), !dbg !14274
  store i64 %index, i64* %index.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !2210, metadata !2526), !dbg !14275
  %0 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !14276
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !14276
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self, metadata !2211, metadata !2526), !dbg !14277
  %1 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !14278, !tbaa !2522
  %2 = bitcast %struct._object* %1 to %struct.tagCDataObject*, !dbg !14279
  store %struct.tagCDataObject* %2, %struct.tagCDataObject** %self, align 8, !dbg !14277, !tbaa !2522
  %3 = bitcast i64* %size to i8*, !dbg !14280
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !14280
  call void @llvm.dbg.declare(metadata i64* %size, metadata !2212, metadata !2526), !dbg !14281
  %4 = bitcast i64* %offset to i8*, !dbg !14282
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !14282
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !2213, metadata !2526), !dbg !14283
  %5 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !14284
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !14284
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict, metadata !2214, metadata !2526), !dbg !14285
  %6 = bitcast %struct.StgDictObject** %itemdict to i8*, !dbg !14284
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !14284
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %itemdict, metadata !2215, metadata !2526), !dbg !14286
  %7 = bitcast %struct._object** %proto to i8*, !dbg !14287
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !14287
  call void @llvm.dbg.declare(metadata %struct._object** %proto, metadata !2216, metadata !2526), !dbg !14288
  %8 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !14289, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %8, i32 0, i32 1, !dbg !14291
  %9 = load i8*, i8** %b_ptr, align 8, !dbg !14291, !tbaa !4817
  %10 = bitcast i8* %9 to i8**, !dbg !14292
  %11 = load i8*, i8** %10, align 8, !dbg !14293, !tbaa !2522
  %cmp = icmp eq i8* %11, null, !dbg !14294
  br i1 %cmp, label %if.then, label %if.end, !dbg !14295

if.then:                                          ; preds = %entry
  %12 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !14296, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.177, i32 0, i32 0)), !dbg !14298
  store %struct._object* null, %struct._object** %retval, !dbg !14299
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14299

if.end:                                           ; preds = %entry
  %13 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !14300, !tbaa !2522
  %14 = bitcast %struct.tagCDataObject* %13 to %struct._object*, !dbg !14301
  %call = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %14), !dbg !14302
  store %struct.StgDictObject* %call, %struct.StgDictObject** %stgdict, align 8, !dbg !14303, !tbaa !2522
  %15 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !14304, !tbaa !2522
  %proto1 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %15, i32 0, i32 5, !dbg !14305
  %16 = load %struct._object*, %struct._object** %proto1, align 8, !dbg !14305, !tbaa !2961
  store %struct._object* %16, %struct._object** %proto, align 8, !dbg !14306, !tbaa !2522
  %17 = load %struct._object*, %struct._object** %proto, align 8, !dbg !14307, !tbaa !2522
  %call2 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %17), !dbg !14308
  store %struct.StgDictObject* %call2, %struct.StgDictObject** %itemdict, align 8, !dbg !14309, !tbaa !2522
  %18 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !14310, !tbaa !2522
  %size3 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %18, i32 0, i32 1, !dbg !14311
  %19 = load i64, i64* %size3, align 8, !dbg !14311, !tbaa !3101
  store i64 %19, i64* %size, align 8, !dbg !14312, !tbaa !2704
  %20 = load i64, i64* %index.addr, align 8, !dbg !14313, !tbaa !2704
  %21 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !14314, !tbaa !2522
  %size4 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %21, i32 0, i32 1, !dbg !14315
  %22 = load i64, i64* %size4, align 8, !dbg !14315, !tbaa !3101
  %mul = mul i64 %20, %22, !dbg !14316
  store i64 %mul, i64* %offset, align 8, !dbg !14317, !tbaa !2704
  %23 = load %struct._object*, %struct._object** %proto, align 8, !dbg !14318, !tbaa !2522
  %24 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !14319, !tbaa !2522
  %getfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %24, i32 0, i32 7, !dbg !14320
  %25 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc, align 8, !dbg !14320, !tbaa !3683
  %26 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !14321, !tbaa !2522
  %27 = bitcast %struct.tagCDataObject* %26 to %struct._object*, !dbg !14322
  %28 = load i64, i64* %index.addr, align 8, !dbg !14323, !tbaa !2704
  %29 = load i64, i64* %size, align 8, !dbg !14324, !tbaa !2704
  %30 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !14325, !tbaa !2522
  %b_ptr5 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %30, i32 0, i32 1, !dbg !14326
  %31 = load i8*, i8** %b_ptr5, align 8, !dbg !14326, !tbaa !4817
  %32 = bitcast i8* %31 to i8**, !dbg !14327
  %33 = load i8*, i8** %32, align 8, !dbg !14328, !tbaa !2522
  %34 = load i64, i64* %offset, align 8, !dbg !14329, !tbaa !2704
  %add.ptr = getelementptr i8, i8* %33, i64 %34, !dbg !14330
  %call6 = call %struct._object* @PyCData_get(%struct._object* %23, %struct._object* (i8*, i64)* %25, %struct._object* %27, i64 %28, i64 %29, i8* %add.ptr), !dbg !14331
  store %struct._object* %call6, %struct._object** %retval, !dbg !14332
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14332

cleanup:                                          ; preds = %if.end, %if.then
  %35 = bitcast %struct._object** %proto to i8*, !dbg !14333
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !14333
  %36 = bitcast %struct.StgDictObject** %itemdict to i8*, !dbg !14333
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !14333
  %37 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !14333
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !14333
  %38 = bitcast i64* %offset to i8*, !dbg !14333
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !14333
  %39 = bitcast i64* %size to i8*, !dbg !14333
  call void @llvm.lifetime.end(i64 8, i8* %39) #2, !dbg !14333
  %40 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !14333
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !14333
  %41 = load %struct._object*, %struct._object** %retval, !dbg !14333
  ret %struct._object* %41, !dbg !14333
}

; Function Attrs: uwtable
define internal i32 @Pointer_ass_item(%struct._object* %myself, i64 %index, %struct._object* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %myself.addr = alloca %struct._object*, align 8
  %index.addr = alloca i64, align 8
  %value.addr = alloca %struct._object*, align 8
  %self = alloca %struct.tagCDataObject*, align 8
  %size = alloca i64, align 8
  %offset = alloca i64, align 8
  %stgdict = alloca %struct.StgDictObject*, align 8
  %itemdict = alloca %struct.StgDictObject*, align 8
  %proto = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !2219, metadata !2526), !dbg !14334
  store i64 %index, i64* %index.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !2220, metadata !2526), !dbg !14335
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !2221, metadata !2526), !dbg !14336
  %0 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !14337
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !14337
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self, metadata !2222, metadata !2526), !dbg !14338
  %1 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !14339, !tbaa !2522
  %2 = bitcast %struct._object* %1 to %struct.tagCDataObject*, !dbg !14340
  store %struct.tagCDataObject* %2, %struct.tagCDataObject** %self, align 8, !dbg !14338, !tbaa !2522
  %3 = bitcast i64* %size to i8*, !dbg !14341
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !14341
  call void @llvm.dbg.declare(metadata i64* %size, metadata !2223, metadata !2526), !dbg !14342
  %4 = bitcast i64* %offset to i8*, !dbg !14343
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !14343
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !2224, metadata !2526), !dbg !14344
  %5 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !14345
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !14345
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict, metadata !2225, metadata !2526), !dbg !14346
  %6 = bitcast %struct.StgDictObject** %itemdict to i8*, !dbg !14345
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !14345
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %itemdict, metadata !2226, metadata !2526), !dbg !14347
  %7 = bitcast %struct._object** %proto to i8*, !dbg !14348
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !14348
  call void @llvm.dbg.declare(metadata %struct._object** %proto, metadata !2227, metadata !2526), !dbg !14349
  %8 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !14350, !tbaa !2522
  %cmp = icmp eq %struct._object* %8, null, !dbg !14352
  br i1 %cmp, label %if.then, label %if.end, !dbg !14353

if.then:                                          ; preds = %entry
  %9 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !14354, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.178, i32 0, i32 0)), !dbg !14356
  store i32 -1, i32* %retval, !dbg !14357
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14357

if.end:                                           ; preds = %entry
  %10 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !14358, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %10, i32 0, i32 1, !dbg !14360
  %11 = load i8*, i8** %b_ptr, align 8, !dbg !14360, !tbaa !4817
  %12 = bitcast i8* %11 to i8**, !dbg !14361
  %13 = load i8*, i8** %12, align 8, !dbg !14362, !tbaa !2522
  %cmp1 = icmp eq i8* %13, null, !dbg !14363
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !14364

if.then.2:                                        ; preds = %if.end
  %14 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !14365, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.177, i32 0, i32 0)), !dbg !14367
  store i32 -1, i32* %retval, !dbg !14368
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14368

if.end.3:                                         ; preds = %if.end
  %15 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !14369, !tbaa !2522
  %16 = bitcast %struct.tagCDataObject* %15 to %struct._object*, !dbg !14370
  %call = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %16), !dbg !14371
  store %struct.StgDictObject* %call, %struct.StgDictObject** %stgdict, align 8, !dbg !14372, !tbaa !2522
  %17 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !14373, !tbaa !2522
  %proto4 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %17, i32 0, i32 5, !dbg !14374
  %18 = load %struct._object*, %struct._object** %proto4, align 8, !dbg !14374, !tbaa !2961
  store %struct._object* %18, %struct._object** %proto, align 8, !dbg !14375, !tbaa !2522
  %19 = load %struct._object*, %struct._object** %proto, align 8, !dbg !14376, !tbaa !2522
  %call5 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %19), !dbg !14377
  store %struct.StgDictObject* %call5, %struct.StgDictObject** %itemdict, align 8, !dbg !14378, !tbaa !2522
  %20 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !14379, !tbaa !2522
  %size6 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %20, i32 0, i32 1, !dbg !14380
  %21 = load i64, i64* %size6, align 8, !dbg !14380, !tbaa !3101
  store i64 %21, i64* %size, align 8, !dbg !14381, !tbaa !2704
  %22 = load i64, i64* %index.addr, align 8, !dbg !14382, !tbaa !2704
  %23 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !14383, !tbaa !2522
  %size7 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %23, i32 0, i32 1, !dbg !14384
  %24 = load i64, i64* %size7, align 8, !dbg !14384, !tbaa !3101
  %mul = mul i64 %22, %24, !dbg !14385
  store i64 %mul, i64* %offset, align 8, !dbg !14386, !tbaa !2704
  %25 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !14387, !tbaa !2522
  %26 = bitcast %struct.tagCDataObject* %25 to %struct._object*, !dbg !14388
  %27 = load %struct._object*, %struct._object** %proto, align 8, !dbg !14389, !tbaa !2522
  %28 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !14390, !tbaa !2522
  %setfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %28, i32 0, i32 6, !dbg !14391
  %29 = load %struct._object* (i8*, %struct._object*, i64)*, %struct._object* (i8*, %struct._object*, i64)** %setfunc, align 8, !dbg !14391, !tbaa !4041
  %30 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !14392, !tbaa !2522
  %31 = load i64, i64* %index.addr, align 8, !dbg !14393, !tbaa !2704
  %32 = load i64, i64* %size, align 8, !dbg !14394, !tbaa !2704
  %33 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !14395, !tbaa !2522
  %b_ptr8 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %33, i32 0, i32 1, !dbg !14396
  %34 = load i8*, i8** %b_ptr8, align 8, !dbg !14396, !tbaa !4817
  %35 = bitcast i8* %34 to i8**, !dbg !14397
  %36 = load i8*, i8** %35, align 8, !dbg !14398, !tbaa !2522
  %37 = load i64, i64* %offset, align 8, !dbg !14399, !tbaa !2704
  %add.ptr = getelementptr i8, i8* %36, i64 %37, !dbg !14400
  %call9 = call i32 @PyCData_set(%struct._object* %26, %struct._object* %27, %struct._object* (i8*, %struct._object*, i64)* %29, %struct._object* %30, i64 %31, i64 %32, i8* %add.ptr), !dbg !14401
  store i32 %call9, i32* %retval, !dbg !14402
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14402

cleanup:                                          ; preds = %if.end.3, %if.then.2, %if.then
  %38 = bitcast %struct._object** %proto to i8*, !dbg !14403
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !14403
  %39 = bitcast %struct.StgDictObject** %itemdict to i8*, !dbg !14403
  call void @llvm.lifetime.end(i64 8, i8* %39) #2, !dbg !14403
  %40 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !14403
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !14403
  %41 = bitcast i64* %offset to i8*, !dbg !14403
  call void @llvm.lifetime.end(i64 8, i8* %41) #2, !dbg !14403
  %42 = bitcast i64* %size to i8*, !dbg !14403
  call void @llvm.lifetime.end(i64 8, i8* %42) #2, !dbg !14403
  %43 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !14403
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !14403
  %44 = load i32, i32* %retval, !dbg !14403
  ret i32 %44, !dbg !14403
}

; Function Attrs: uwtable
define internal %struct._object* @Pointer_subscript(%struct._object* %myself, %struct._object* %item) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %myself.addr = alloca %struct._object*, align 8
  %item.addr = alloca %struct._object*, align 8
  %self = alloca %struct.tagCDataObject*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %slice = alloca %struct.PySliceObject*, align 8
  %start = alloca i64, align 8
  %stop = alloca i64, align 8
  %step = alloca i64, align 8
  %np = alloca %struct._object*, align 8
  %stgdict = alloca %struct.StgDictObject*, align 8
  %itemdict = alloca %struct.StgDictObject*, align 8
  %proto = alloca %struct._object*, align 8
  %i12 = alloca i64, align 8
  %len = alloca i64, align 8
  %cur = alloca i64, align 8
  %ptr = alloca i8*, align 8
  %dest = alloca i8*, align 8
  %ptr107 = alloca i32*, align 8
  %dest109 = alloca i32*, align 8
  %v = alloca %struct._object*, align 8
  store %struct._object* %myself, %struct._object** %myself.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %myself.addr, metadata !2230, metadata !2526), !dbg !14404
  store %struct._object* %item, %struct._object** %item.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %item.addr, metadata !2231, metadata !2526), !dbg !14405
  %0 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !14406
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !14406
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self, metadata !2232, metadata !2526), !dbg !14407
  %1 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !14408, !tbaa !2522
  %2 = bitcast %struct._object* %1 to %struct.tagCDataObject*, !dbg !14409
  store %struct.tagCDataObject* %2, %struct.tagCDataObject** %self, align 8, !dbg !14407, !tbaa !2522
  %3 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !14410, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !14411
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14411, !tbaa !2588
  %tp_as_number = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 10, !dbg !14412
  %5 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number, align 8, !dbg !14412, !tbaa !13649
  %cmp = icmp ne %struct.PyNumberMethods* %5, null, !dbg !14413
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !14414

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !14415, !tbaa !2522
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !14417
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !14417, !tbaa !2588
  %tp_as_number2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i32 0, i32 10, !dbg !14418
  %8 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number2, align 8, !dbg !14418, !tbaa !13649
  %nb_index = getelementptr inbounds %struct.PyNumberMethods, %struct.PyNumberMethods* %8, i32 0, i32 33, !dbg !14419
  %9 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %nb_index, align 8, !dbg !14419, !tbaa !13657
  %cmp3 = icmp ne %struct._object* (%struct._object*)* %9, null, !dbg !14420
  br i1 %cmp3, label %if.then, label %if.else, !dbg !14421

if.then:                                          ; preds = %land.lhs.true
  %10 = bitcast i64* %i to i8*, !dbg !14422
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !14422
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2233, metadata !2526), !dbg !14423
  %11 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !14424, !tbaa !2522
  %12 = load %struct._object*, %struct._object** @PyExc_IndexError, align 8, !dbg !14425, !tbaa !2522
  %call = call i64 @PyNumber_AsSsize_t(%struct._object* %11, %struct._object* %12), !dbg !14426
  store i64 %call, i64* %i, align 8, !dbg !14423, !tbaa !2704
  %13 = load i64, i64* %i, align 8, !dbg !14427, !tbaa !2704
  %cmp4 = icmp eq i64 %13, -1, !dbg !14429
  br i1 %cmp4, label %land.lhs.true.5, label %if.end, !dbg !14430

land.lhs.true.5:                                  ; preds = %if.then
  %call6 = call %struct._object* @PyErr_Occurred(), !dbg !14431
  %tobool = icmp ne %struct._object* %call6, null, !dbg !14431
  br i1 %tobool, label %if.then.7, label %if.end, !dbg !14433

if.then.7:                                        ; preds = %land.lhs.true.5
  store %struct._object* null, %struct._object** %retval, !dbg !14434
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14434

if.end:                                           ; preds = %land.lhs.true.5, %if.then
  %14 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !14435, !tbaa !2522
  %15 = load i64, i64* %i, align 8, !dbg !14436, !tbaa !2704
  %call8 = call %struct._object* @Pointer_item(%struct._object* %14, i64 %15), !dbg !14437
  store %struct._object* %call8, %struct._object** %retval, !dbg !14438
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14438

cleanup:                                          ; preds = %if.end, %if.then.7
  %16 = bitcast i64* %i to i8*, !dbg !14439
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !14439
  br label %cleanup.162

if.else:                                          ; preds = %land.lhs.true, %entry
  %17 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !14440, !tbaa !2522
  %ob_type9 = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1, !dbg !14441
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type9, align 8, !dbg !14441, !tbaa !2588
  %cmp10 = icmp eq %struct._typeobject* %18, @PySlice_Type, !dbg !14442
  br i1 %cmp10, label %if.then.11, label %if.else.161, !dbg !14443

if.then.11:                                       ; preds = %if.else
  %19 = bitcast %struct.PySliceObject** %slice to i8*, !dbg !14444
  call void @llvm.lifetime.start(i64 8, i8* %19) #2, !dbg !14444
  call void @llvm.dbg.declare(metadata %struct.PySliceObject** %slice, metadata !2236, metadata !2526), !dbg !14445
  %20 = load %struct._object*, %struct._object** %item.addr, align 8, !dbg !14446, !tbaa !2522
  %21 = bitcast %struct._object* %20 to %struct.PySliceObject*, !dbg !14447
  store %struct.PySliceObject* %21, %struct.PySliceObject** %slice, align 8, !dbg !14445, !tbaa !2522
  %22 = bitcast i64* %start to i8*, !dbg !14448
  call void @llvm.lifetime.start(i64 8, i8* %22) #2, !dbg !14448
  call void @llvm.dbg.declare(metadata i64* %start, metadata !2239, metadata !2526), !dbg !14449
  %23 = bitcast i64* %stop to i8*, !dbg !14448
  call void @llvm.lifetime.start(i64 8, i8* %23) #2, !dbg !14448
  call void @llvm.dbg.declare(metadata i64* %stop, metadata !2240, metadata !2526), !dbg !14450
  %24 = bitcast i64* %step to i8*, !dbg !14448
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !14448
  call void @llvm.dbg.declare(metadata i64* %step, metadata !2241, metadata !2526), !dbg !14451
  %25 = bitcast %struct._object** %np to i8*, !dbg !14452
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !14452
  call void @llvm.dbg.declare(metadata %struct._object** %np, metadata !2242, metadata !2526), !dbg !14453
  %26 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !14454
  call void @llvm.lifetime.start(i64 8, i8* %26) #2, !dbg !14454
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict, metadata !2243, metadata !2526), !dbg !14455
  %27 = bitcast %struct.StgDictObject** %itemdict to i8*, !dbg !14454
  call void @llvm.lifetime.start(i64 8, i8* %27) #2, !dbg !14454
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %itemdict, metadata !2244, metadata !2526), !dbg !14456
  %28 = bitcast %struct._object** %proto to i8*, !dbg !14457
  call void @llvm.lifetime.start(i64 8, i8* %28) #2, !dbg !14457
  call void @llvm.dbg.declare(metadata %struct._object** %proto, metadata !2245, metadata !2526), !dbg !14458
  %29 = bitcast i64* %i12 to i8*, !dbg !14459
  call void @llvm.lifetime.start(i64 8, i8* %29) #2, !dbg !14459
  call void @llvm.dbg.declare(metadata i64* %i12, metadata !2246, metadata !2526), !dbg !14460
  %30 = bitcast i64* %len to i8*, !dbg !14459
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !14459
  call void @llvm.dbg.declare(metadata i64* %len, metadata !2247, metadata !2526), !dbg !14461
  %31 = bitcast i64* %cur to i8*, !dbg !14459
  call void @llvm.lifetime.start(i64 8, i8* %31) #2, !dbg !14459
  call void @llvm.dbg.declare(metadata i64* %cur, metadata !2248, metadata !2526), !dbg !14462
  %32 = load %struct.PySliceObject*, %struct.PySliceObject** %slice, align 8, !dbg !14463, !tbaa !2522
  %step13 = getelementptr inbounds %struct.PySliceObject, %struct.PySliceObject* %32, i32 0, i32 3, !dbg !14465
  %33 = load %struct._object*, %struct._object** %step13, align 8, !dbg !14465, !tbaa !14466
  %cmp14 = icmp eq %struct._object* %33, @_Py_NoneStruct, !dbg !14468
  br i1 %cmp14, label %if.then.15, label %if.else.16, !dbg !14469

if.then.15:                                       ; preds = %if.then.11
  store i64 1, i64* %step, align 8, !dbg !14470, !tbaa !2704
  br label %if.end.28, !dbg !14472

if.else.16:                                       ; preds = %if.then.11
  %34 = load %struct.PySliceObject*, %struct.PySliceObject** %slice, align 8, !dbg !14473, !tbaa !2522
  %step17 = getelementptr inbounds %struct.PySliceObject, %struct.PySliceObject* %34, i32 0, i32 3, !dbg !14475
  %35 = load %struct._object*, %struct._object** %step17, align 8, !dbg !14475, !tbaa !14466
  %36 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !14476, !tbaa !2522
  %call18 = call i64 @PyNumber_AsSsize_t(%struct._object* %35, %struct._object* %36), !dbg !14477
  store i64 %call18, i64* %step, align 8, !dbg !14478, !tbaa !2704
  %37 = load i64, i64* %step, align 8, !dbg !14479, !tbaa !2704
  %cmp19 = icmp eq i64 %37, -1, !dbg !14481
  br i1 %cmp19, label %land.lhs.true.20, label %if.end.24, !dbg !14482

land.lhs.true.20:                                 ; preds = %if.else.16
  %call21 = call %struct._object* @PyErr_Occurred(), !dbg !14483
  %tobool22 = icmp ne %struct._object* %call21, null, !dbg !14483
  br i1 %tobool22, label %if.then.23, label %if.end.24, !dbg !14485

if.then.23:                                       ; preds = %land.lhs.true.20
  store %struct._object* null, %struct._object** %retval, !dbg !14486
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.150, !dbg !14486

if.end.24:                                        ; preds = %land.lhs.true.20, %if.else.16
  %38 = load i64, i64* %step, align 8, !dbg !14487, !tbaa !2704
  %cmp25 = icmp eq i64 %38, 0, !dbg !14489
  br i1 %cmp25, label %if.then.26, label %if.end.27, !dbg !14490

if.then.26:                                       ; preds = %if.end.24
  %39 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !14491, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %39, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.179, i32 0, i32 0)), !dbg !14493
  store %struct._object* null, %struct._object** %retval, !dbg !14494
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.150, !dbg !14494

if.end.27:                                        ; preds = %if.end.24
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.then.15
  %40 = load %struct.PySliceObject*, %struct.PySliceObject** %slice, align 8, !dbg !14495, !tbaa !2522
  %start29 = getelementptr inbounds %struct.PySliceObject, %struct.PySliceObject* %40, i32 0, i32 1, !dbg !14497
  %41 = load %struct._object*, %struct._object** %start29, align 8, !dbg !14497, !tbaa !14498
  %cmp30 = icmp eq %struct._object* %41, @_Py_NoneStruct, !dbg !14499
  br i1 %cmp30, label %if.then.31, label %if.else.35, !dbg !14500

if.then.31:                                       ; preds = %if.end.28
  %42 = load i64, i64* %step, align 8, !dbg !14501, !tbaa !2704
  %cmp32 = icmp slt i64 %42, 0, !dbg !14504
  br i1 %cmp32, label %if.then.33, label %if.end.34, !dbg !14505

if.then.33:                                       ; preds = %if.then.31
  %43 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !14506, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %43, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.180, i32 0, i32 0)), !dbg !14508
  store %struct._object* null, %struct._object** %retval, !dbg !14509
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.150, !dbg !14509

if.end.34:                                        ; preds = %if.then.31
  store i64 0, i64* %start, align 8, !dbg !14510, !tbaa !2704
  br label %if.end.44, !dbg !14511

if.else.35:                                       ; preds = %if.end.28
  %44 = load %struct.PySliceObject*, %struct.PySliceObject** %slice, align 8, !dbg !14512, !tbaa !2522
  %start36 = getelementptr inbounds %struct.PySliceObject, %struct.PySliceObject* %44, i32 0, i32 1, !dbg !14514
  %45 = load %struct._object*, %struct._object** %start36, align 8, !dbg !14514, !tbaa !14498
  %46 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !14515, !tbaa !2522
  %call37 = call i64 @PyNumber_AsSsize_t(%struct._object* %45, %struct._object* %46), !dbg !14516
  store i64 %call37, i64* %start, align 8, !dbg !14517, !tbaa !2704
  %47 = load i64, i64* %start, align 8, !dbg !14518, !tbaa !2704
  %cmp38 = icmp eq i64 %47, -1, !dbg !14520
  br i1 %cmp38, label %land.lhs.true.39, label %if.end.43, !dbg !14521

land.lhs.true.39:                                 ; preds = %if.else.35
  %call40 = call %struct._object* @PyErr_Occurred(), !dbg !14522
  %tobool41 = icmp ne %struct._object* %call40, null, !dbg !14522
  br i1 %tobool41, label %if.then.42, label %if.end.43, !dbg !14524

if.then.42:                                       ; preds = %land.lhs.true.39
  store %struct._object* null, %struct._object** %retval, !dbg !14525
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.150, !dbg !14525

if.end.43:                                        ; preds = %land.lhs.true.39, %if.else.35
  br label %if.end.44

if.end.44:                                        ; preds = %if.end.43, %if.end.34
  %48 = load %struct.PySliceObject*, %struct.PySliceObject** %slice, align 8, !dbg !14526, !tbaa !2522
  %stop45 = getelementptr inbounds %struct.PySliceObject, %struct.PySliceObject* %48, i32 0, i32 2, !dbg !14528
  %49 = load %struct._object*, %struct._object** %stop45, align 8, !dbg !14528, !tbaa !14529
  %cmp46 = icmp eq %struct._object* %49, @_Py_NoneStruct, !dbg !14530
  br i1 %cmp46, label %if.then.47, label %if.end.48, !dbg !14531

if.then.47:                                       ; preds = %if.end.44
  %50 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !14532, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %50, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.181, i32 0, i32 0)), !dbg !14534
  store %struct._object* null, %struct._object** %retval, !dbg !14535
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.150, !dbg !14535

if.end.48:                                        ; preds = %if.end.44
  %51 = load %struct.PySliceObject*, %struct.PySliceObject** %slice, align 8, !dbg !14536, !tbaa !2522
  %stop49 = getelementptr inbounds %struct.PySliceObject, %struct.PySliceObject* %51, i32 0, i32 2, !dbg !14537
  %52 = load %struct._object*, %struct._object** %stop49, align 8, !dbg !14537, !tbaa !14529
  %53 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !14538, !tbaa !2522
  %call50 = call i64 @PyNumber_AsSsize_t(%struct._object* %52, %struct._object* %53), !dbg !14539
  store i64 %call50, i64* %stop, align 8, !dbg !14540, !tbaa !2704
  %54 = load i64, i64* %stop, align 8, !dbg !14541, !tbaa !2704
  %cmp51 = icmp eq i64 %54, -1, !dbg !14543
  br i1 %cmp51, label %land.lhs.true.52, label %if.end.56, !dbg !14544

land.lhs.true.52:                                 ; preds = %if.end.48
  %call53 = call %struct._object* @PyErr_Occurred(), !dbg !14545
  %tobool54 = icmp ne %struct._object* %call53, null, !dbg !14545
  br i1 %tobool54, label %if.then.55, label %if.end.56, !dbg !14547

if.then.55:                                       ; preds = %land.lhs.true.52
  store %struct._object* null, %struct._object** %retval, !dbg !14548
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.150, !dbg !14548

if.end.56:                                        ; preds = %land.lhs.true.52, %if.end.48
  %55 = load i64, i64* %step, align 8, !dbg !14549, !tbaa !2704
  %cmp57 = icmp sgt i64 %55, 0, !dbg !14551
  br i1 %cmp57, label %land.lhs.true.58, label %lor.lhs.false, !dbg !14552

land.lhs.true.58:                                 ; preds = %if.end.56
  %56 = load i64, i64* %start, align 8, !dbg !14553, !tbaa !2704
  %57 = load i64, i64* %stop, align 8, !dbg !14555, !tbaa !2704
  %cmp59 = icmp sgt i64 %56, %57, !dbg !14556
  br i1 %cmp59, label %if.then.63, label %lor.lhs.false, !dbg !14557

lor.lhs.false:                                    ; preds = %land.lhs.true.58, %if.end.56
  %58 = load i64, i64* %step, align 8, !dbg !14558, !tbaa !2704
  %cmp60 = icmp slt i64 %58, 0, !dbg !14559
  br i1 %cmp60, label %land.lhs.true.61, label %if.else.64, !dbg !14560

land.lhs.true.61:                                 ; preds = %lor.lhs.false
  %59 = load i64, i64* %start, align 8, !dbg !14561, !tbaa !2704
  %60 = load i64, i64* %stop, align 8, !dbg !14562, !tbaa !2704
  %cmp62 = icmp slt i64 %59, %60, !dbg !14563
  br i1 %cmp62, label %if.then.63, label %if.else.64, !dbg !14564

if.then.63:                                       ; preds = %land.lhs.true.61, %land.lhs.true.58
  store i64 0, i64* %len, align 8, !dbg !14565, !tbaa !2704
  br label %if.end.74, !dbg !14566

if.else.64:                                       ; preds = %land.lhs.true.61, %lor.lhs.false
  %61 = load i64, i64* %step, align 8, !dbg !14567, !tbaa !2704
  %cmp65 = icmp sgt i64 %61, 0, !dbg !14569
  br i1 %cmp65, label %if.then.66, label %if.else.68, !dbg !14570

if.then.66:                                       ; preds = %if.else.64
  %62 = load i64, i64* %stop, align 8, !dbg !14571, !tbaa !2704
  %63 = load i64, i64* %start, align 8, !dbg !14572, !tbaa !2704
  %sub = sub i64 %62, %63, !dbg !14573
  %sub67 = sub i64 %sub, 1, !dbg !14574
  %64 = load i64, i64* %step, align 8, !dbg !14575, !tbaa !2704
  %div = sdiv i64 %sub67, %64, !dbg !14576
  %add = add i64 %div, 1, !dbg !14577
  store i64 %add, i64* %len, align 8, !dbg !14578, !tbaa !2704
  br label %if.end.73, !dbg !14579

if.else.68:                                       ; preds = %if.else.64
  %65 = load i64, i64* %stop, align 8, !dbg !14580, !tbaa !2704
  %66 = load i64, i64* %start, align 8, !dbg !14581, !tbaa !2704
  %sub69 = sub i64 %65, %66, !dbg !14582
  %add70 = add i64 %sub69, 1, !dbg !14583
  %67 = load i64, i64* %step, align 8, !dbg !14584, !tbaa !2704
  %div71 = sdiv i64 %add70, %67, !dbg !14585
  %add72 = add i64 %div71, 1, !dbg !14586
  store i64 %add72, i64* %len, align 8, !dbg !14587, !tbaa !2704
  br label %if.end.73

if.end.73:                                        ; preds = %if.else.68, %if.then.66
  br label %if.end.74

if.end.74:                                        ; preds = %if.end.73, %if.then.63
  %68 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !14588, !tbaa !2522
  %69 = bitcast %struct.tagCDataObject* %68 to %struct._object*, !dbg !14589
  %call75 = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %69), !dbg !14590
  store %struct.StgDictObject* %call75, %struct.StgDictObject** %stgdict, align 8, !dbg !14591, !tbaa !2522
  %70 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !14592, !tbaa !2522
  %proto76 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %70, i32 0, i32 5, !dbg !14593
  %71 = load %struct._object*, %struct._object** %proto76, align 8, !dbg !14593, !tbaa !2961
  store %struct._object* %71, %struct._object** %proto, align 8, !dbg !14594, !tbaa !2522
  %72 = load %struct._object*, %struct._object** %proto, align 8, !dbg !14595, !tbaa !2522
  %call77 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %72), !dbg !14596
  store %struct.StgDictObject* %call77, %struct.StgDictObject** %itemdict, align 8, !dbg !14597, !tbaa !2522
  %73 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !14598, !tbaa !2522
  %getfunc = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %73, i32 0, i32 7, !dbg !14599
  %74 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc, align 8, !dbg !14599, !tbaa !3683
  %call78 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i32 0, i32 0)), !dbg !14600
  %getfunc79 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %call78, i32 0, i32 2, !dbg !14601
  %75 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc79, align 8, !dbg !14601, !tbaa !3686
  %cmp80 = icmp eq %struct._object* (i8*, i64)* %74, %75, !dbg !14602
  br i1 %cmp80, label %if.then.81, label %if.end.101, !dbg !14603

if.then.81:                                       ; preds = %if.end.74
  %76 = bitcast i8** %ptr to i8*, !dbg !14604
  call void @llvm.lifetime.start(i64 8, i8* %76) #2, !dbg !14604
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !2249, metadata !2526), !dbg !14605
  %77 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !14606, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %77, i32 0, i32 1, !dbg !14607
  %78 = load i8*, i8** %b_ptr, align 8, !dbg !14607, !tbaa !4817
  %79 = bitcast i8* %78 to i8**, !dbg !14608
  %80 = load i8*, i8** %79, align 8, !dbg !14609, !tbaa !2522
  store i8* %80, i8** %ptr, align 8, !dbg !14605, !tbaa !2522
  %81 = bitcast i8** %dest to i8*, !dbg !14610
  call void @llvm.lifetime.start(i64 8, i8* %81) #2, !dbg !14610
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !2252, metadata !2526), !dbg !14611
  %82 = load i64, i64* %len, align 8, !dbg !14612, !tbaa !2704
  %cmp82 = icmp sle i64 %82, 0, !dbg !14614
  br i1 %cmp82, label %if.then.83, label %if.end.85, !dbg !14615

if.then.83:                                       ; preds = %if.then.81
  %call84 = call %struct._object* @PyBytes_FromStringAndSize(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.136, i32 0, i32 0), i64 0), !dbg !14616
  store %struct._object* %call84, %struct._object** %retval, !dbg !14617
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.99, !dbg !14617

if.end.85:                                        ; preds = %if.then.81
  %83 = load i64, i64* %step, align 8, !dbg !14618, !tbaa !2704
  %cmp86 = icmp eq i64 %83, 1, !dbg !14620
  br i1 %cmp86, label %if.then.87, label %if.end.89, !dbg !14621

if.then.87:                                       ; preds = %if.end.85
  %84 = load i8*, i8** %ptr, align 8, !dbg !14622, !tbaa !2522
  %85 = load i64, i64* %start, align 8, !dbg !14624, !tbaa !2704
  %add.ptr = getelementptr i8, i8* %84, i64 %85, !dbg !14625
  %86 = load i64, i64* %len, align 8, !dbg !14626, !tbaa !2704
  %call88 = call %struct._object* @PyBytes_FromStringAndSize(i8* %add.ptr, i64 %86), !dbg !14627
  store %struct._object* %call88, %struct._object** %retval, !dbg !14628
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.99, !dbg !14628

if.end.89:                                        ; preds = %if.end.85
  %87 = load i64, i64* %len, align 8, !dbg !14629, !tbaa !2704
  %call90 = call i8* @PyMem_Malloc(i64 %87), !dbg !14630
  store i8* %call90, i8** %dest, align 8, !dbg !14631, !tbaa !2522
  %88 = load i8*, i8** %dest, align 8, !dbg !14632, !tbaa !2522
  %cmp91 = icmp eq i8* %88, null, !dbg !14634
  br i1 %cmp91, label %if.then.92, label %if.end.94, !dbg !14635

if.then.92:                                       ; preds = %if.end.89
  %call93 = call %struct._object* @PyErr_NoMemory(), !dbg !14636
  store %struct._object* %call93, %struct._object** %retval, !dbg !14637
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.99, !dbg !14637

if.end.94:                                        ; preds = %if.end.89
  %89 = load i64, i64* %start, align 8, !dbg !14638, !tbaa !2704
  store i64 %89, i64* %cur, align 8, !dbg !14640, !tbaa !2704
  store i64 0, i64* %i12, align 8, !dbg !14641, !tbaa !2704
  br label %for.cond, !dbg !14642

for.cond:                                         ; preds = %for.inc, %if.end.94
  %90 = load i64, i64* %i12, align 8, !dbg !14643, !tbaa !2704
  %91 = load i64, i64* %len, align 8, !dbg !14647, !tbaa !2704
  %cmp95 = icmp slt i64 %90, %91, !dbg !14648
  br i1 %cmp95, label %for.body, label %for.end, !dbg !14649

for.body:                                         ; preds = %for.cond
  %92 = load i64, i64* %cur, align 8, !dbg !14650, !tbaa !2704
  %93 = load i8*, i8** %ptr, align 8, !dbg !14652, !tbaa !2522
  %arrayidx = getelementptr i8, i8* %93, i64 %92, !dbg !14652
  %94 = load i8, i8* %arrayidx, align 1, !dbg !14652, !tbaa !2731
  %95 = load i64, i64* %i12, align 8, !dbg !14653, !tbaa !2704
  %96 = load i8*, i8** %dest, align 8, !dbg !14654, !tbaa !2522
  %arrayidx96 = getelementptr i8, i8* %96, i64 %95, !dbg !14654
  store i8 %94, i8* %arrayidx96, align 1, !dbg !14655, !tbaa !2731
  br label %for.inc, !dbg !14656

for.inc:                                          ; preds = %for.body
  %97 = load i64, i64* %step, align 8, !dbg !14657, !tbaa !2704
  %98 = load i64, i64* %cur, align 8, !dbg !14658, !tbaa !2704
  %add97 = add i64 %98, %97, !dbg !14658
  store i64 %add97, i64* %cur, align 8, !dbg !14658, !tbaa !2704
  %99 = load i64, i64* %i12, align 8, !dbg !14659, !tbaa !2704
  %inc = add i64 %99, 1, !dbg !14659
  store i64 %inc, i64* %i12, align 8, !dbg !14659, !tbaa !2704
  br label %for.cond, !dbg !14660

for.end:                                          ; preds = %for.cond
  %100 = load i8*, i8** %dest, align 8, !dbg !14661, !tbaa !2522
  %101 = load i64, i64* %len, align 8, !dbg !14662, !tbaa !2704
  %call98 = call %struct._object* @PyBytes_FromStringAndSize(i8* %100, i64 %101), !dbg !14663
  store %struct._object* %call98, %struct._object** %np, align 8, !dbg !14664, !tbaa !2522
  %102 = load i8*, i8** %dest, align 8, !dbg !14665, !tbaa !2522
  call void @PyMem_Free(i8* %102), !dbg !14666
  %103 = load %struct._object*, %struct._object** %np, align 8, !dbg !14667, !tbaa !2522
  store %struct._object* %103, %struct._object** %retval, !dbg !14668
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.99, !dbg !14668

cleanup.99:                                       ; preds = %for.end, %if.then.92, %if.then.87, %if.then.83
  %104 = bitcast i8** %dest to i8*, !dbg !14669
  call void @llvm.lifetime.end(i64 8, i8* %104) #2, !dbg !14669
  %105 = bitcast i8** %ptr to i8*, !dbg !14669
  call void @llvm.lifetime.end(i64 8, i8* %105) #2, !dbg !14669
  br label %cleanup.150

if.end.101:                                       ; preds = %if.end.74
  %106 = load %struct.StgDictObject*, %struct.StgDictObject** %itemdict, align 8, !dbg !14670, !tbaa !2522
  %getfunc102 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %106, i32 0, i32 7, !dbg !14671
  %107 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc102, align 8, !dbg !14671, !tbaa !3683
  %call103 = call %struct.fielddesc* @_ctypes_get_fielddesc(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0)), !dbg !14672
  %getfunc104 = getelementptr inbounds %struct.fielddesc, %struct.fielddesc* %call103, i32 0, i32 2, !dbg !14673
  %108 = load %struct._object* (i8*, i64)*, %struct._object* (i8*, i64)** %getfunc104, align 8, !dbg !14673, !tbaa !3686
  %cmp105 = icmp eq %struct._object* (i8*, i64)* %107, %108, !dbg !14674
  br i1 %cmp105, label %if.then.106, label %if.end.136, !dbg !14675

if.then.106:                                      ; preds = %if.end.101
  %109 = bitcast i32** %ptr107 to i8*, !dbg !14676
  call void @llvm.lifetime.start(i64 8, i8* %109) #2, !dbg !14676
  call void @llvm.dbg.declare(metadata i32** %ptr107, metadata !2253, metadata !2526), !dbg !14677
  %110 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self, align 8, !dbg !14678, !tbaa !2522
  %b_ptr108 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %110, i32 0, i32 1, !dbg !14679
  %111 = load i8*, i8** %b_ptr108, align 8, !dbg !14679, !tbaa !4817
  %112 = bitcast i8* %111 to i32**, !dbg !14680
  %113 = load i32*, i32** %112, align 8, !dbg !14681, !tbaa !2522
  store i32* %113, i32** %ptr107, align 8, !dbg !14677, !tbaa !2522
  %114 = bitcast i32** %dest109 to i8*, !dbg !14682
  call void @llvm.lifetime.start(i64 8, i8* %114) #2, !dbg !14682
  call void @llvm.dbg.declare(metadata i32** %dest109, metadata !2256, metadata !2526), !dbg !14683
  %115 = load i64, i64* %len, align 8, !dbg !14684, !tbaa !2704
  %cmp110 = icmp sle i64 %115, 0, !dbg !14686
  br i1 %cmp110, label %if.then.111, label %if.end.113, !dbg !14687

if.then.111:                                      ; preds = %if.then.106
  %call112 = call %struct._object* @PyUnicode_New(i64 0, i32 0), !dbg !14688
  store %struct._object* %call112, %struct._object** %retval, !dbg !14689
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.134, !dbg !14689

if.end.113:                                       ; preds = %if.then.106
  %116 = load i64, i64* %step, align 8, !dbg !14690, !tbaa !2704
  %cmp114 = icmp eq i64 %116, 1, !dbg !14692
  br i1 %cmp114, label %if.then.115, label %if.end.118, !dbg !14693

if.then.115:                                      ; preds = %if.end.113
  %117 = load i32*, i32** %ptr107, align 8, !dbg !14694, !tbaa !2522
  %118 = load i64, i64* %start, align 8, !dbg !14696, !tbaa !2704
  %add.ptr116 = getelementptr i32, i32* %117, i64 %118, !dbg !14697
  %119 = load i64, i64* %len, align 8, !dbg !14698, !tbaa !2704
  %call117 = call %struct._object* @PyUnicode_FromWideChar(i32* %add.ptr116, i64 %119), !dbg !14699
  store %struct._object* %call117, %struct._object** %retval, !dbg !14700
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.134, !dbg !14700

if.end.118:                                       ; preds = %if.end.113
  %120 = load i64, i64* %len, align 8, !dbg !14701, !tbaa !2704
  %mul = mul i64 %120, 4, !dbg !14702
  %call119 = call i8* @PyMem_Malloc(i64 %mul), !dbg !14703
  %121 = bitcast i8* %call119 to i32*, !dbg !14704
  store i32* %121, i32** %dest109, align 8, !dbg !14705, !tbaa !2522
  %122 = load i32*, i32** %dest109, align 8, !dbg !14706, !tbaa !2522
  %cmp120 = icmp eq i32* %122, null, !dbg !14708
  br i1 %cmp120, label %if.then.121, label %if.end.123, !dbg !14709

if.then.121:                                      ; preds = %if.end.118
  %call122 = call %struct._object* @PyErr_NoMemory(), !dbg !14710
  store %struct._object* %call122, %struct._object** %retval, !dbg !14711
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.134, !dbg !14711

if.end.123:                                       ; preds = %if.end.118
  %123 = load i64, i64* %start, align 8, !dbg !14712, !tbaa !2704
  store i64 %123, i64* %cur, align 8, !dbg !14714, !tbaa !2704
  store i64 0, i64* %i12, align 8, !dbg !14715, !tbaa !2704
  br label %for.cond.124, !dbg !14716

for.cond.124:                                     ; preds = %for.inc.129, %if.end.123
  %124 = load i64, i64* %i12, align 8, !dbg !14717, !tbaa !2704
  %125 = load i64, i64* %len, align 8, !dbg !14721, !tbaa !2704
  %cmp125 = icmp slt i64 %124, %125, !dbg !14722
  br i1 %cmp125, label %for.body.126, label %for.end.132, !dbg !14723

for.body.126:                                     ; preds = %for.cond.124
  %126 = load i64, i64* %cur, align 8, !dbg !14724, !tbaa !2704
  %127 = load i32*, i32** %ptr107, align 8, !dbg !14726, !tbaa !2522
  %arrayidx127 = getelementptr i32, i32* %127, i64 %126, !dbg !14726
  %128 = load i32, i32* %arrayidx127, align 4, !dbg !14726, !tbaa !2611
  %129 = load i64, i64* %i12, align 8, !dbg !14727, !tbaa !2704
  %130 = load i32*, i32** %dest109, align 8, !dbg !14728, !tbaa !2522
  %arrayidx128 = getelementptr i32, i32* %130, i64 %129, !dbg !14728
  store i32 %128, i32* %arrayidx128, align 4, !dbg !14729, !tbaa !2611
  br label %for.inc.129, !dbg !14730

for.inc.129:                                      ; preds = %for.body.126
  %131 = load i64, i64* %step, align 8, !dbg !14731, !tbaa !2704
  %132 = load i64, i64* %cur, align 8, !dbg !14732, !tbaa !2704
  %add130 = add i64 %132, %131, !dbg !14732
  store i64 %add130, i64* %cur, align 8, !dbg !14732, !tbaa !2704
  %133 = load i64, i64* %i12, align 8, !dbg !14733, !tbaa !2704
  %inc131 = add i64 %133, 1, !dbg !14733
  store i64 %inc131, i64* %i12, align 8, !dbg !14733, !tbaa !2704
  br label %for.cond.124, !dbg !14734

for.end.132:                                      ; preds = %for.cond.124
  %134 = load i32*, i32** %dest109, align 8, !dbg !14735, !tbaa !2522
  %135 = load i64, i64* %len, align 8, !dbg !14736, !tbaa !2704
  %call133 = call %struct._object* @PyUnicode_FromWideChar(i32* %134, i64 %135), !dbg !14737
  store %struct._object* %call133, %struct._object** %np, align 8, !dbg !14738, !tbaa !2522
  %136 = load i32*, i32** %dest109, align 8, !dbg !14739, !tbaa !2522
  %137 = bitcast i32* %136 to i8*, !dbg !14739
  call void @PyMem_Free(i8* %137), !dbg !14740
  %138 = load %struct._object*, %struct._object** %np, align 8, !dbg !14741, !tbaa !2522
  store %struct._object* %138, %struct._object** %retval, !dbg !14742
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.134, !dbg !14742

cleanup.134:                                      ; preds = %for.end.132, %if.then.121, %if.then.115, %if.then.111
  %139 = bitcast i32** %dest109 to i8*, !dbg !14743
  call void @llvm.lifetime.end(i64 8, i8* %139) #2, !dbg !14743
  %140 = bitcast i32** %ptr107 to i8*, !dbg !14743
  call void @llvm.lifetime.end(i64 8, i8* %140) #2, !dbg !14743
  br label %cleanup.150

if.end.136:                                       ; preds = %if.end.101
  %141 = load i64, i64* %len, align 8, !dbg !14744, !tbaa !2704
  %call137 = call %struct._object* @PyList_New(i64 %141), !dbg !14745
  store %struct._object* %call137, %struct._object** %np, align 8, !dbg !14746, !tbaa !2522
  %142 = load %struct._object*, %struct._object** %np, align 8, !dbg !14747, !tbaa !2522
  %cmp138 = icmp eq %struct._object* %142, null, !dbg !14749
  br i1 %cmp138, label %if.then.139, label %if.end.140, !dbg !14750

if.then.139:                                      ; preds = %if.end.136
  store %struct._object* null, %struct._object** %retval, !dbg !14751
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.150, !dbg !14751

if.end.140:                                       ; preds = %if.end.136
  %143 = load i64, i64* %start, align 8, !dbg !14752, !tbaa !2704
  store i64 %143, i64* %cur, align 8, !dbg !14753, !tbaa !2704
  store i64 0, i64* %i12, align 8, !dbg !14754, !tbaa !2704
  br label %for.cond.141, !dbg !14755

for.cond.141:                                     ; preds = %for.inc.146, %if.end.140
  %144 = load i64, i64* %i12, align 8, !dbg !14756, !tbaa !2704
  %145 = load i64, i64* %len, align 8, !dbg !14759, !tbaa !2704
  %cmp142 = icmp slt i64 %144, %145, !dbg !14760
  br i1 %cmp142, label %for.body.143, label %for.end.149, !dbg !14761

for.body.143:                                     ; preds = %for.cond.141
  %146 = bitcast %struct._object** %v to i8*, !dbg !14762
  call void @llvm.lifetime.start(i64 8, i8* %146) #2, !dbg !14762
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !2257, metadata !2526), !dbg !14763
  %147 = load %struct._object*, %struct._object** %myself.addr, align 8, !dbg !14764, !tbaa !2522
  %148 = load i64, i64* %cur, align 8, !dbg !14765, !tbaa !2704
  %call144 = call %struct._object* @Pointer_item(%struct._object* %147, i64 %148), !dbg !14766
  store %struct._object* %call144, %struct._object** %v, align 8, !dbg !14763, !tbaa !2522
  %149 = load %struct._object*, %struct._object** %v, align 8, !dbg !14767, !tbaa !2522
  %150 = load i64, i64* %i12, align 8, !dbg !14768, !tbaa !2704
  %151 = load %struct._object*, %struct._object** %np, align 8, !dbg !14769, !tbaa !2522
  %152 = bitcast %struct._object* %151 to %struct.PyListObject*, !dbg !14770
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %152, i32 0, i32 1, !dbg !14771
  %153 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !14771, !tbaa !13917
  %arrayidx145 = getelementptr %struct._object*, %struct._object** %153, i64 %150, !dbg !14772
  store %struct._object* %149, %struct._object** %arrayidx145, align 8, !dbg !14773, !tbaa !2522
  %154 = bitcast %struct._object** %v to i8*, !dbg !14774
  call void @llvm.lifetime.end(i64 8, i8* %154) #2, !dbg !14774
  br label %for.inc.146, !dbg !14775

for.inc.146:                                      ; preds = %for.body.143
  %155 = load i64, i64* %step, align 8, !dbg !14776, !tbaa !2704
  %156 = load i64, i64* %cur, align 8, !dbg !14777, !tbaa !2704
  %add147 = add i64 %156, %155, !dbg !14777
  store i64 %add147, i64* %cur, align 8, !dbg !14777, !tbaa !2704
  %157 = load i64, i64* %i12, align 8, !dbg !14778, !tbaa !2704
  %inc148 = add i64 %157, 1, !dbg !14778
  store i64 %inc148, i64* %i12, align 8, !dbg !14778, !tbaa !2704
  br label %for.cond.141, !dbg !14779

for.end.149:                                      ; preds = %for.cond.141
  %158 = load %struct._object*, %struct._object** %np, align 8, !dbg !14780, !tbaa !2522
  store %struct._object* %158, %struct._object** %retval, !dbg !14781
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.150, !dbg !14781

cleanup.150:                                      ; preds = %for.end.149, %if.then.139, %cleanup.134, %cleanup.99, %if.then.55, %if.then.47, %if.then.42, %if.then.33, %if.then.26, %if.then.23
  %159 = bitcast i64* %cur to i8*, !dbg !14782
  call void @llvm.lifetime.end(i64 8, i8* %159) #2, !dbg !14782
  %160 = bitcast i64* %len to i8*, !dbg !14782
  call void @llvm.lifetime.end(i64 8, i8* %160) #2, !dbg !14782
  %161 = bitcast i64* %i12 to i8*, !dbg !14782
  call void @llvm.lifetime.end(i64 8, i8* %161) #2, !dbg !14782
  %162 = bitcast %struct._object** %proto to i8*, !dbg !14782
  call void @llvm.lifetime.end(i64 8, i8* %162) #2, !dbg !14782
  %163 = bitcast %struct.StgDictObject** %itemdict to i8*, !dbg !14782
  call void @llvm.lifetime.end(i64 8, i8* %163) #2, !dbg !14782
  %164 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !14782
  call void @llvm.lifetime.end(i64 8, i8* %164) #2, !dbg !14782
  %165 = bitcast %struct._object** %np to i8*, !dbg !14782
  call void @llvm.lifetime.end(i64 8, i8* %165) #2, !dbg !14782
  %166 = bitcast i64* %step to i8*, !dbg !14782
  call void @llvm.lifetime.end(i64 8, i8* %166) #2, !dbg !14782
  %167 = bitcast i64* %stop to i8*, !dbg !14782
  call void @llvm.lifetime.end(i64 8, i8* %167) #2, !dbg !14782
  %168 = bitcast i64* %start to i8*, !dbg !14782
  call void @llvm.lifetime.end(i64 8, i8* %168) #2, !dbg !14782
  %169 = bitcast %struct.PySliceObject** %slice to i8*, !dbg !14782
  call void @llvm.lifetime.end(i64 8, i8* %169) #2, !dbg !14782
  br label %cleanup.162

if.else.161:                                      ; preds = %if.else
  %170 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !14783, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %170, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.182, i32 0, i32 0)), !dbg !14785
  store %struct._object* null, %struct._object** %retval, !dbg !14786
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.162, !dbg !14786

cleanup.162:                                      ; preds = %if.else.161, %cleanup.150, %cleanup
  %171 = bitcast %struct.tagCDataObject** %self to i8*, !dbg !14787
  call void @llvm.lifetime.end(i64 8, i8* %171) #2, !dbg !14787
  %172 = load %struct._object*, %struct._object** %retval, !dbg !14787
  ret %struct._object* %172, !dbg !14787
}

; Function Attrs: uwtable
define internal %struct._object* @Pointer_get_contents(%struct.tagCDataObject* %self, i8* %closure) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %closure.addr = alloca i8*, align 8
  %stgdict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !2265, metadata !2526), !dbg !14788
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !2266, metadata !2526), !dbg !14789
  %0 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !14790
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !14790
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict, metadata !2267, metadata !2526), !dbg !14791
  %1 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14792, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %1, i32 0, i32 1, !dbg !14794
  %2 = load i8*, i8** %b_ptr, align 8, !dbg !14794, !tbaa !4817
  %3 = bitcast i8* %2 to i8**, !dbg !14795
  %4 = load i8*, i8** %3, align 8, !dbg !14796, !tbaa !2522
  %cmp = icmp eq i8* %4, null, !dbg !14797
  br i1 %cmp, label %if.then, label %if.end, !dbg !14798

if.then:                                          ; preds = %entry
  %5 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !14799, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.177, i32 0, i32 0)), !dbg !14801
  store %struct._object* null, %struct._object** %retval, !dbg !14802
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14802

if.end:                                           ; preds = %entry
  %6 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14803, !tbaa !2522
  %7 = bitcast %struct.tagCDataObject* %6 to %struct._object*, !dbg !14804
  %call = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %7), !dbg !14805
  store %struct.StgDictObject* %call, %struct.StgDictObject** %stgdict, align 8, !dbg !14806, !tbaa !2522
  %8 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !14807, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %8, i32 0, i32 5, !dbg !14808
  %9 = load %struct._object*, %struct._object** %proto, align 8, !dbg !14808, !tbaa !2961
  %10 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14809, !tbaa !2522
  %11 = bitcast %struct.tagCDataObject* %10 to %struct._object*, !dbg !14810
  %12 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14811, !tbaa !2522
  %b_ptr1 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %12, i32 0, i32 1, !dbg !14812
  %13 = load i8*, i8** %b_ptr1, align 8, !dbg !14812, !tbaa !4817
  %14 = bitcast i8* %13 to i8**, !dbg !14813
  %15 = load i8*, i8** %14, align 8, !dbg !14814, !tbaa !2522
  %call2 = call %struct._object* @PyCData_FromBaseObj(%struct._object* %9, %struct._object* %11, i64 0, i8* %15), !dbg !14815
  store %struct._object* %call2, %struct._object** %retval, !dbg !14816
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14816

cleanup:                                          ; preds = %if.end, %if.then
  %16 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !14817
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !14817
  %17 = load %struct._object*, %struct._object** %retval, !dbg !14817
  ret %struct._object* %17, !dbg !14817
}

; Function Attrs: uwtable
define internal i32 @Pointer_set_contents(%struct.tagCDataObject* %self, %struct._object* %value, i8* %closure) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct.tagCDataObject*, align 8
  %value.addr = alloca %struct._object*, align 8
  %closure.addr = alloca i8*, align 8
  %stgdict = alloca %struct.StgDictObject*, align 8
  %dst = alloca %struct.tagCDataObject*, align 8
  %keep = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %res = alloca i32, align 4
  store %struct.tagCDataObject* %self, %struct.tagCDataObject** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %self.addr, metadata !2272, metadata !2526), !dbg !14818
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !2273, metadata !2526), !dbg !14819
  store i8* %closure, i8** %closure.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !2274, metadata !2526), !dbg !14820
  %0 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !14821
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !14821
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %stgdict, metadata !2275, metadata !2526), !dbg !14822
  %1 = bitcast %struct.tagCDataObject** %dst to i8*, !dbg !14823
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !14823
  call void @llvm.dbg.declare(metadata %struct.tagCDataObject** %dst, metadata !2276, metadata !2526), !dbg !14824
  %2 = bitcast %struct._object** %keep to i8*, !dbg !14825
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !14825
  call void @llvm.dbg.declare(metadata %struct._object** %keep, metadata !2277, metadata !2526), !dbg !14826
  %3 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !14827, !tbaa !2522
  %cmp = icmp eq %struct._object* %3, null, !dbg !14829
  br i1 %cmp, label %if.then, label %if.end, !dbg !14830

if.then:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !14831, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.178, i32 0, i32 0)), !dbg !14833
  store i32 -1, i32* %retval, !dbg !14834
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.29, !dbg !14834

if.end:                                           ; preds = %entry
  %5 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14835, !tbaa !2522
  %6 = bitcast %struct.tagCDataObject* %5 to %struct._object*, !dbg !14836
  %call = call %struct.StgDictObject* @PyObject_stgdict(%struct._object* %6), !dbg !14837
  store %struct.StgDictObject* %call, %struct.StgDictObject** %stgdict, align 8, !dbg !14838, !tbaa !2522
  %7 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !14839, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !14840
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14840, !tbaa !2588
  %cmp1 = icmp eq %struct._typeobject* %8, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*), !dbg !14841
  br i1 %cmp1, label %if.end.16, label %lor.lhs.false, !dbg !14842

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !14843, !tbaa !2522
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !14845
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !14845, !tbaa !2588
  %call3 = call i32 @PyType_IsSubtype(%struct._typeobject* %10, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type to %struct._typeobject*)), !dbg !14846
  %tobool = icmp ne i32 %call3, 0, !dbg !14846
  br i1 %tobool, label %if.end.16, label %if.then.4, !dbg !14847

if.then.4:                                        ; preds = %lor.lhs.false
  %11 = bitcast i32* %res to i8*, !dbg !14848
  call void @llvm.lifetime.start(i64 4, i8* %11) #2, !dbg !14848
  call void @llvm.dbg.declare(metadata i32* %res, metadata !2278, metadata !2526), !dbg !14849
  %12 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !14850, !tbaa !2522
  %13 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !14851, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %13, i32 0, i32 5, !dbg !14852
  %14 = load %struct._object*, %struct._object** %proto, align 8, !dbg !14852, !tbaa !2961
  %call5 = call i32 @PyObject_IsInstance(%struct._object* %12, %struct._object* %14), !dbg !14853
  store i32 %call5, i32* %res, align 4, !dbg !14849, !tbaa !2611
  %15 = load i32, i32* %res, align 4, !dbg !14854, !tbaa !2611
  %cmp6 = icmp eq i32 %15, -1, !dbg !14856
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !14857

if.then.7:                                        ; preds = %if.then.4
  store i32 -1, i32* %retval, !dbg !14858
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14858

if.end.8:                                         ; preds = %if.then.4
  %16 = load i32, i32* %res, align 4, !dbg !14859, !tbaa !2611
  %tobool9 = icmp ne i32 %16, 0, !dbg !14859
  br i1 %tobool9, label %if.end.15, label %if.then.10, !dbg !14861

if.then.10:                                       ; preds = %if.end.8
  %17 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !14862, !tbaa !2522
  %18 = load %struct.StgDictObject*, %struct.StgDictObject** %stgdict, align 8, !dbg !14864, !tbaa !2522
  %proto11 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %18, i32 0, i32 5, !dbg !14865
  %19 = load %struct._object*, %struct._object** %proto11, align 8, !dbg !14865, !tbaa !2961
  %20 = bitcast %struct._object* %19 to %struct._typeobject*, !dbg !14866
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 1, !dbg !14867
  %21 = load i8*, i8** %tp_name, align 8, !dbg !14867, !tbaa !5264
  %22 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !14868, !tbaa !2522
  %ob_type12 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1, !dbg !14869
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type12, align 8, !dbg !14869, !tbaa !2588
  %tp_name13 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 1, !dbg !14870
  %24 = load i8*, i8** %tp_name13, align 8, !dbg !14870, !tbaa !5264
  %call14 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %17, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.185, i32 0, i32 0), i8* %21, i8* %24), !dbg !14871
  store i32 -1, i32* %retval, !dbg !14872
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !14872

if.end.15:                                        ; preds = %if.end.8
  store i32 0, i32* %cleanup.dest.slot, !dbg !14873
  br label %cleanup, !dbg !14873

cleanup:                                          ; preds = %if.end.15, %if.then.10, %if.then.7
  %25 = bitcast i32* %res to i8*, !dbg !14874
  call void @llvm.lifetime.end(i64 4, i8* %25) #2, !dbg !14874
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %if.end.16, !dbg !14875

if.end.16:                                        ; preds = %cleanup.cont, %lor.lhs.false, %if.end
  %26 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !14876, !tbaa !2522
  %27 = bitcast %struct._object* %26 to %struct.tagCDataObject*, !dbg !14877
  store %struct.tagCDataObject* %27, %struct.tagCDataObject** %dst, align 8, !dbg !14878, !tbaa !2522
  %28 = load %struct.tagCDataObject*, %struct.tagCDataObject** %dst, align 8, !dbg !14879, !tbaa !2522
  %b_ptr = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %28, i32 0, i32 1, !dbg !14880
  %29 = load i8*, i8** %b_ptr, align 8, !dbg !14880, !tbaa !4817
  %30 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14881, !tbaa !2522
  %b_ptr17 = getelementptr inbounds %struct.tagCDataObject, %struct.tagCDataObject* %30, i32 0, i32 1, !dbg !14882
  %31 = load i8*, i8** %b_ptr17, align 8, !dbg !14882, !tbaa !4817
  %32 = bitcast i8* %31 to i8**, !dbg !14883
  store i8* %29, i8** %32, align 8, !dbg !14884, !tbaa !2522
  %33 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !14885, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 0, !dbg !14886
  %34 = load i64, i64* %ob_refcnt, align 8, !dbg !14887, !tbaa !2551
  %inc = add i64 %34, 1, !dbg !14887
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !14887, !tbaa !2551
  %35 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14888, !tbaa !2522
  %36 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !14890, !tbaa !2522
  %call18 = call i32 @KeepRef(%struct.tagCDataObject* %35, i64 1, %struct._object* %36), !dbg !14891
  %cmp19 = icmp eq i32 -1, %call18, !dbg !14892
  br i1 %cmp19, label %if.then.20, label %if.end.21, !dbg !14893

if.then.20:                                       ; preds = %if.end.16
  store i32 -1, i32* %retval, !dbg !14894
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.29, !dbg !14894

if.end.21:                                        ; preds = %if.end.16
  %37 = load %struct.tagCDataObject*, %struct.tagCDataObject** %dst, align 8, !dbg !14895, !tbaa !2522
  %call22 = call %struct._object* @GetKeepedObjects(%struct.tagCDataObject* %37), !dbg !14896
  store %struct._object* %call22, %struct._object** %keep, align 8, !dbg !14897, !tbaa !2522
  %38 = load %struct._object*, %struct._object** %keep, align 8, !dbg !14898, !tbaa !2522
  %cmp23 = icmp eq %struct._object* %38, null, !dbg !14900
  br i1 %cmp23, label %if.then.24, label %if.end.25, !dbg !14901

if.then.24:                                       ; preds = %if.end.21
  store i32 -1, i32* %retval, !dbg !14902
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.29, !dbg !14902

if.end.25:                                        ; preds = %if.end.21
  %39 = load %struct._object*, %struct._object** %keep, align 8, !dbg !14903, !tbaa !2522
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !14904
  %40 = load i64, i64* %ob_refcnt26, align 8, !dbg !14905, !tbaa !2551
  %inc27 = add i64 %40, 1, !dbg !14905
  store i64 %inc27, i64* %ob_refcnt26, align 8, !dbg !14905, !tbaa !2551
  %41 = load %struct.tagCDataObject*, %struct.tagCDataObject** %self.addr, align 8, !dbg !14906, !tbaa !2522
  %42 = load %struct._object*, %struct._object** %keep, align 8, !dbg !14907, !tbaa !2522
  %call28 = call i32 @KeepRef(%struct.tagCDataObject* %41, i64 0, %struct._object* %42), !dbg !14908
  store i32 %call28, i32* %retval, !dbg !14909
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.29, !dbg !14909

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.29

cleanup.29:                                       ; preds = %NewDefault, %if.end.25, %if.then.24, %if.then.20, %if.then
  %43 = bitcast %struct._object** %keep to i8*, !dbg !14910
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !14910
  %44 = bitcast %struct.tagCDataObject** %dst to i8*, !dbg !14910
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !14910
  %45 = bitcast %struct.StgDictObject** %stgdict to i8*, !dbg !14910
  call void @llvm.lifetime.end(i64 8, i8* %45) #2, !dbg !14910
  %46 = load i32, i32* %retval, !dbg !14910
  ret i32 %46, !dbg !14910
}

; Function Attrs: uwtable
define internal i32 @UnionType_setattro(%struct._object* %self, %struct._object* %key, %struct._object* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %key.addr = alloca %struct._object*, align 8
  %value.addr = alloca %struct._object*, align 8
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp41 = alloca i32, align 4
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !2295, metadata !2526), !dbg !14911
  store %struct._object* %key, %struct._object** %key.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %key.addr, metadata !2296, metadata !2526), !dbg !14912
  store %struct._object* %value, %struct._object** %value.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %value.addr, metadata !2297, metadata !2526), !dbg !14913
  %0 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !14914, !tbaa !2522
  %1 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !14916, !tbaa !2522
  %2 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !14917, !tbaa !2522
  %call = call i32 @PyObject_GenericSetAttr(%struct._object* %0, %struct._object* %1, %struct._object* %2), !dbg !14918
  %cmp = icmp eq i32 -1, %call, !dbg !14919
  br i1 %cmp, label %if.then, label %if.end, !dbg !14920

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !14921
  br label %return, !dbg !14921

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !14922, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !14923
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !14923, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19, !dbg !14924
  %5 = load i64, i64* %tp_flags, align 8, !dbg !14924, !tbaa !2849
  %and = and i64 %5, 268435456, !dbg !14925
  %cmp1 = icmp ne i64 %and, 0, !dbg !14926
  br i1 %cmp1, label %land.lhs.true, label %if.end.48, !dbg !14927

land.lhs.true:                                    ; preds = %if.end
  %6 = bitcast i64* %__s1_len to i8*, !dbg !14928
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !14928
  call void @llvm.dbg.declare(metadata i64* %__s1_len, metadata !2298, metadata !2526), !dbg !14929
  %7 = bitcast i64* %__s2_len to i8*, !dbg !14928
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !14928
  call void @llvm.dbg.declare(metadata i64* %__s2_len, metadata !2301, metadata !2526), !dbg !14930
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i64 1) to i64), i64 ptrtoint ([9 x i8]* @.str.52 to i64)), i64 1), label %land.lhs.true.2, label %cond.false, !dbg !14931

land.lhs.true.2:                                  ; preds = %land.lhs.true
  store i64 8, i64* %__s2_len, align 8, !dbg !14932, !tbaa !2704
  %8 = load i64, i64* %__s2_len, align 8, !dbg !14934, !tbaa !2704
  %cmp3 = icmp ult i64 %8, 4, !dbg !14935
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !14936

cond.true:                                        ; preds = %land.lhs.true.2
  %9 = bitcast i8** %__s1 to i8*, !dbg !14937
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !14937
  call void @llvm.dbg.declare(metadata i8** %__s1, metadata !2302, metadata !2526), !dbg !14939
  %10 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !14940, !tbaa !2522
  %call5 = call i8* @PyUnicode_AsUTF8(%struct._object* %10), !dbg !14941
  store i8* %call5, i8** %__s1, align 8, !dbg !14939, !tbaa !2522
  %11 = bitcast i32* %__result to i8*, !dbg !14942
  call void @llvm.lifetime.start(i64 4, i8* %11) #2, !dbg !14942
  call void @llvm.dbg.declare(metadata i32* %__result, metadata !2304, metadata !2526), !dbg !14943
  %12 = load i8*, i8** %__s1, align 8, !dbg !14944, !tbaa !2522
  %arrayidx = getelementptr i8, i8* %12, i64 0, !dbg !14944
  %13 = load i8, i8* %arrayidx, align 1, !dbg !14944, !tbaa !2731
  %conv = zext i8 %13 to i32, !dbg !14944
  %14 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), align 1, !dbg !14945, !tbaa !2731
  %conv7 = zext i8 %14 to i32, !dbg !14945
  %sub = sub i32 %conv, %conv7, !dbg !14946
  store i32 %sub, i32* %__result, align 4, !dbg !14943, !tbaa !2611
  %15 = load i64, i64* %__s2_len, align 8, !dbg !14947, !tbaa !2704
  %cmp8 = icmp ugt i64 %15, 0, !dbg !14949
  br i1 %cmp8, label %land.lhs.true.10, label %if.end.40, !dbg !14950

land.lhs.true.10:                                 ; preds = %cond.true
  %16 = load i32, i32* %__result, align 4, !dbg !14951, !tbaa !2611
  %cmp11 = icmp eq i32 %16, 0, !dbg !14953
  br i1 %cmp11, label %if.then.13, label %if.end.40, !dbg !14954

if.then.13:                                       ; preds = %land.lhs.true.10
  %17 = load i8*, i8** %__s1, align 8, !dbg !14955, !tbaa !2522
  %arrayidx14 = getelementptr i8, i8* %17, i64 1, !dbg !14955
  %18 = load i8, i8* %arrayidx14, align 1, !dbg !14955, !tbaa !2731
  %conv15 = zext i8 %18 to i32, !dbg !14955
  %19 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i64 1), align 1, !dbg !14958, !tbaa !2731
  %conv16 = zext i8 %19 to i32, !dbg !14958
  %sub17 = sub i32 %conv15, %conv16, !dbg !14959
  store i32 %sub17, i32* %__result, align 4, !dbg !14960, !tbaa !2611
  %20 = load i64, i64* %__s2_len, align 8, !dbg !14961, !tbaa !2704
  %cmp18 = icmp ugt i64 %20, 1, !dbg !14963
  br i1 %cmp18, label %land.lhs.true.20, label %if.end.39, !dbg !14964

land.lhs.true.20:                                 ; preds = %if.then.13
  %21 = load i32, i32* %__result, align 4, !dbg !14965, !tbaa !2611
  %cmp21 = icmp eq i32 %21, 0, !dbg !14967
  br i1 %cmp21, label %if.then.23, label %if.end.39, !dbg !14968

if.then.23:                                       ; preds = %land.lhs.true.20
  %22 = load i8*, i8** %__s1, align 8, !dbg !14969, !tbaa !2522
  %arrayidx24 = getelementptr i8, i8* %22, i64 2, !dbg !14969
  %23 = load i8, i8* %arrayidx24, align 1, !dbg !14969, !tbaa !2731
  %conv25 = zext i8 %23 to i32, !dbg !14969
  %24 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i64 2), align 1, !dbg !14972, !tbaa !2731
  %conv26 = zext i8 %24 to i32, !dbg !14972
  %sub27 = sub i32 %conv25, %conv26, !dbg !14973
  store i32 %sub27, i32* %__result, align 4, !dbg !14974, !tbaa !2611
  %25 = load i64, i64* %__s2_len, align 8, !dbg !14975, !tbaa !2704
  %cmp28 = icmp ugt i64 %25, 2, !dbg !14977
  br i1 %cmp28, label %land.lhs.true.30, label %if.end.38, !dbg !14978

land.lhs.true.30:                                 ; preds = %if.then.23
  %26 = load i32, i32* %__result, align 4, !dbg !14979, !tbaa !2611
  %cmp31 = icmp eq i32 %26, 0, !dbg !14981
  br i1 %cmp31, label %if.then.33, label %if.end.38, !dbg !14982

if.then.33:                                       ; preds = %land.lhs.true.30
  %27 = load i8*, i8** %__s1, align 8, !dbg !14983, !tbaa !2522
  %arrayidx34 = getelementptr i8, i8* %27, i64 3, !dbg !14983
  %28 = load i8, i8* %arrayidx34, align 1, !dbg !14983, !tbaa !2731
  %conv35 = zext i8 %28 to i32, !dbg !14983
  %29 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i64 3), align 1, !dbg !14985, !tbaa !2731
  %conv36 = zext i8 %29 to i32, !dbg !14985
  %sub37 = sub i32 %conv35, %conv36, !dbg !14986
  store i32 %sub37, i32* %__result, align 4, !dbg !14987, !tbaa !2611
  br label %if.end.38, !dbg !14988

if.end.38:                                        ; preds = %if.then.33, %land.lhs.true.30, %if.then.23
  br label %if.end.39, !dbg !14989

if.end.39:                                        ; preds = %if.end.38, %land.lhs.true.20, %if.then.13
  br label %if.end.40, !dbg !14993

if.end.40:                                        ; preds = %if.end.39, %land.lhs.true.10, %cond.true
  %30 = load i32, i32* %__result, align 4, !dbg !14997, !tbaa !2611
  store i32 %30, i32* %tmp41, !dbg !15001, !tbaa !2611
  %31 = bitcast i32* %__result to i8*, !dbg !15002
  call void @llvm.lifetime.end(i64 4, i8* %31) #2, !dbg !15002
  %32 = bitcast i8** %__s1 to i8*, !dbg !15002
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !15002
  %33 = load i32, i32* %tmp41, !dbg !15003, !tbaa !2611
  br label %cond.end, !dbg !14936

cond.false:                                       ; preds = %land.lhs.true.2, %land.lhs.true
  %34 = load %struct._object*, %struct._object** %key.addr, align 8, !dbg !15004, !tbaa !2522
  %call42 = call i8* @PyUnicode_AsUTF8(%struct._object* %34), !dbg !15007
  %call43 = call i32 @strcmp(i8* %call42, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0)) #2, !dbg !15008
  br label %cond.end, !dbg !14936

cond.end:                                         ; preds = %cond.false, %if.end.40
  %cond = phi i32 [ %33, %if.end.40 ], [ %call43, %cond.false ], !dbg !14936
  store i32 %cond, i32* %tmp, !dbg !15009, !tbaa !2611
  %35 = bitcast i64* %__s2_len to i8*, !dbg !15012
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !15012
  %36 = bitcast i64* %__s1_len to i8*, !dbg !15012
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !15012
  %37 = load i32, i32* %tmp, !dbg !15013, !tbaa !2611
  %cmp44 = icmp eq i32 0, %37, !dbg !15014
  br i1 %cmp44, label %if.then.46, label %if.end.48, !dbg !15015

if.then.46:                                       ; preds = %cond.end
  %38 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !15016, !tbaa !2522
  %39 = load %struct._object*, %struct._object** %value.addr, align 8, !dbg !15017, !tbaa !2522
  %call47 = call i32 @PyCStructUnionType_update_stgdict(%struct._object* %38, %struct._object* %39, i32 0), !dbg !15018
  store i32 %call47, i32* %retval, !dbg !15019
  br label %return, !dbg !15019

if.end.48:                                        ; preds = %cond.end, %if.end
  store i32 0, i32* %retval, !dbg !15020
  br label %return, !dbg !15020

return:                                           ; preds = %if.end.48, %if.then.46, %if.then
  %40 = load i32, i32* %retval, !dbg !15021
  ret i32 %40, !dbg !15021
}

; Function Attrs: uwtable
define internal %struct._object* @UnionType_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2307, metadata !2526), !dbg !15022
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2308, metadata !2526), !dbg !15023
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !2309, metadata !2526), !dbg !15024
  %0 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !15025, !tbaa !2522
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !15026, !tbaa !2522
  %2 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !15027, !tbaa !2522
  %call = call %struct._object* @StructUnionType_new(%struct._typeobject* %0, %struct._object* %1, %struct._object* %2, i32 0), !dbg !15028
  ret %struct._object* %call, !dbg !15029
}

declare i32 @PyObject_GenericSetAttr(%struct._object*, %struct._object*, %struct._object*) #3

; Function Attrs: uwtable
define internal i32 @Struct_init(%struct._object* %self, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca i32, align 4
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %res = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %key = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %pos = alloca i64, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !2312, metadata !2526), !dbg !15030
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2313, metadata !2526), !dbg !15031
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !2314, metadata !2526), !dbg !15032
  %0 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !15033, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1, !dbg !15035
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !15035, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19, !dbg !15036
  %2 = load i64, i64* %tp_flags, align 8, !dbg !15036, !tbaa !2849
  %and = and i64 %2, 67108864, !dbg !15037
  %cmp = icmp ne i64 %and, 0, !dbg !15038
  br i1 %cmp, label %if.end, label %if.then, !dbg !15039

if.then:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !15040, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.171, i32 0, i32 0)), !dbg !15042
  store i32 -1, i32* %retval, !dbg !15043
  br label %return, !dbg !15043

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !15044, !tbaa !2522
  %5 = bitcast %struct._object* %4 to %struct.PyVarObject*, !dbg !15045
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %5, i32 0, i32 1, !dbg !15046
  %6 = load i64, i64* %ob_size, align 8, !dbg !15046, !tbaa !5784
  %tobool = icmp ne i64 %6, 0, !dbg !15047
  br i1 %tobool, label %if.then.1, label %if.end.10, !dbg !15048

if.then.1:                                        ; preds = %if.end
  %7 = bitcast i64* %res to i8*, !dbg !15049
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !15049
  call void @llvm.dbg.declare(metadata i64* %res, metadata !2315, metadata !2526), !dbg !15050
  %8 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !15051, !tbaa !2522
  %9 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !15052, !tbaa !2522
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !15053
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !15053, !tbaa !2588
  %11 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !15054, !tbaa !2522
  %12 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !15055, !tbaa !2522
  %call = call i64 @_init_pos_args(%struct._object* %8, %struct._typeobject* %10, %struct._object* %11, %struct._object* %12, i64 0), !dbg !15056
  store i64 %call, i64* %res, align 8, !dbg !15050, !tbaa !2704
  %13 = load i64, i64* %res, align 8, !dbg !15057, !tbaa !2704
  %cmp3 = icmp eq i64 %13, -1, !dbg !15059
  br i1 %cmp3, label %if.then.4, label %if.end.5, !dbg !15060

if.then.4:                                        ; preds = %if.then.1
  store i32 -1, i32* %retval, !dbg !15061
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15061

if.end.5:                                         ; preds = %if.then.1
  %14 = load i64, i64* %res, align 8, !dbg !15062, !tbaa !2704
  %15 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !15064, !tbaa !2522
  %16 = bitcast %struct._object* %15 to %struct.PyVarObject*, !dbg !15065
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1, !dbg !15066
  %17 = load i64, i64* %ob_size6, align 8, !dbg !15066, !tbaa !5784
  %cmp7 = icmp slt i64 %14, %17, !dbg !15067
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !15068

if.then.8:                                        ; preds = %if.end.5
  %18 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !15069, !tbaa !2522
  call void @PyErr_SetString(%struct._object* %18, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.192, i32 0, i32 0)), !dbg !15071
  store i32 -1, i32* %retval, !dbg !15072
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15072

if.end.9:                                         ; preds = %if.end.5
  store i32 0, i32* %cleanup.dest.slot, !dbg !15073
  br label %cleanup, !dbg !15073

cleanup:                                          ; preds = %if.end.9, %if.then.8, %if.then.4
  %19 = bitcast i64* %res to i8*, !dbg !15074
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !15074
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 1
  br i1 %SwitchLeaf, label %return, label %NewDefault

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %NewDefault
  br label %if.end.10, !dbg !15076

if.end.10:                                        ; preds = %cleanup.cont, %if.end
  %20 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !15077, !tbaa !2522
  %tobool11 = icmp ne %struct._object* %20, null, !dbg !15077
  br i1 %tobool11, label %if.then.12, label %if.end.24, !dbg !15078

if.then.12:                                       ; preds = %if.end.10
  %21 = bitcast %struct._object** %key to i8*, !dbg !15079
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !15079
  call void @llvm.dbg.declare(metadata %struct._object** %key, metadata !2318, metadata !2526), !dbg !15080
  %22 = bitcast %struct._object** %value to i8*, !dbg !15079
  call void @llvm.lifetime.start(i64 8, i8* %22) #2, !dbg !15079
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !2321, metadata !2526), !dbg !15081
  %23 = bitcast i64* %pos to i8*, !dbg !15082
  call void @llvm.lifetime.start(i64 8, i8* %23) #2, !dbg !15082
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !2322, metadata !2526), !dbg !15083
  store i64 0, i64* %pos, align 8, !dbg !15083, !tbaa !2704
  br label %while.cond, !dbg !15084

while.cond:                                       ; preds = %if.end.18, %if.then.12
  %24 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !15085, !tbaa !2522
  %call13 = call i32 @PyDict_Next(%struct._object* %24, i64* %pos, %struct._object** %key, %struct._object** %value), !dbg !15088
  %tobool14 = icmp ne i32 %call13, 0, !dbg !15084
  br i1 %tobool14, label %while.body, label %while.end, !dbg !15084

while.body:                                       ; preds = %while.cond
  %25 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !15089, !tbaa !2522
  %26 = load %struct._object*, %struct._object** %key, align 8, !dbg !15092, !tbaa !2522
  %27 = load %struct._object*, %struct._object** %value, align 8, !dbg !15093, !tbaa !2522
  %call15 = call i32 @PyObject_SetAttr(%struct._object* %25, %struct._object* %26, %struct._object* %27), !dbg !15094
  %cmp16 = icmp eq i32 -1, %call15, !dbg !15095
  br i1 %cmp16, label %if.then.17, label %if.end.18, !dbg !15096

if.then.17:                                       ; preds = %while.body
  store i32 -1, i32* %retval, !dbg !15097
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.19, !dbg !15097

if.end.18:                                        ; preds = %while.body
  br label %while.cond, !dbg !15084

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %cleanup.dest.slot, !dbg !15098
  br label %cleanup.19, !dbg !15098

cleanup.19:                                       ; preds = %while.end, %if.then.17
  %28 = bitcast i64* %pos to i8*, !dbg !15099
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !15099
  %29 = bitcast %struct._object** %value to i8*, !dbg !15099
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !15099
  %30 = bitcast %struct._object** %key to i8*, !dbg !15099
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !15099
  %cleanup.dest.22 = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock.2

LeafBlock.2:                                      ; preds = %cleanup.19
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.22, 1
  br i1 %SwitchLeaf3, label %return, label %NewDefault.1

NewDefault.1:                                     ; preds = %LeafBlock.2
  br label %cleanup.cont.23

cleanup.cont.23:                                  ; preds = %NewDefault.1
  br label %if.end.24, !dbg !15101

if.end.24:                                        ; preds = %cleanup.cont.23, %if.end.10
  store i32 0, i32* %retval, !dbg !15102
  br label %return, !dbg !15102

return:                                           ; preds = %LeafBlock.2, %LeafBlock, %if.end.24, %if.then
  %31 = load i32, i32* %retval, !dbg !15103
  ret i32 %31, !dbg !15103
}

; Function Attrs: uwtable
define internal i64 @_init_pos_args(%struct._object* %self, %struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds, i64 %index) #0 {
entry:
  %retval = alloca i64, align 8
  %self.addr = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %index.addr = alloca i64, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %fields = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %pair = alloca %struct._object*, align 8
  %name = alloca %struct._object*, align 8
  %val = alloca %struct._object*, align 8
  %res = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  %field = alloca i8*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  %_py_decref_tmp46 = alloca %struct._object*, align 8
  %_py_decref_tmp60 = alloca %struct._object*, align 8
  %_py_decref_tmp72 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !2327, metadata !2526), !dbg !15104
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !2328, metadata !2526), !dbg !15105
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !2329, metadata !2526), !dbg !15106
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %kwds.addr, metadata !2330, metadata !2526), !dbg !15107
  store i64 %index, i64* %index.addr, align 8, !tbaa !2704
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !2331, metadata !2526), !dbg !15108
  %0 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !15109
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !15109
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !2332, metadata !2526), !dbg !15110
  %1 = bitcast %struct._object** %fields to i8*, !dbg !15111
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !15111
  call void @llvm.dbg.declare(metadata %struct._object** %fields, metadata !2333, metadata !2526), !dbg !15112
  %2 = bitcast i64* %i to i8*, !dbg !15113
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !15113
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2334, metadata !2526), !dbg !15114
  %3 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !15115, !tbaa !2522
  %tp_base = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 30, !dbg !15117
  %4 = load %struct._typeobject*, %struct._typeobject** %tp_base, align 8, !dbg !15117, !tbaa !4225
  %5 = bitcast %struct._typeobject* %4 to %struct._object*, !dbg !15118
  %call = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %5), !dbg !15119
  %tobool = icmp ne %struct.StgDictObject* %call, null, !dbg !15119
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !15120

if.then:                                          ; preds = %entry
  %6 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !15121, !tbaa !2522
  %7 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !15123, !tbaa !2522
  %tp_base1 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i32 0, i32 30, !dbg !15124
  %8 = load %struct._typeobject*, %struct._typeobject** %tp_base1, align 8, !dbg !15124, !tbaa !4225
  %9 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !15125, !tbaa !2522
  %10 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !15126, !tbaa !2522
  %11 = load i64, i64* %index.addr, align 8, !dbg !15127, !tbaa !2704
  %call2 = call i64 @_init_pos_args(%struct._object* %6, %struct._typeobject* %8, %struct._object* %9, %struct._object* %10, i64 %11), !dbg !15128
  store i64 %call2, i64* %index.addr, align 8, !dbg !15129, !tbaa !2704
  %12 = load i64, i64* %index.addr, align 8, !dbg !15130, !tbaa !2704
  %cmp = icmp eq i64 %12, -1, !dbg !15132
  br i1 %cmp, label %if.then.3, label %if.end, !dbg !15133

if.then.3:                                        ; preds = %if.then
  store i64 -1, i64* %retval, !dbg !15134
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.91, !dbg !15134

if.end:                                           ; preds = %if.then
  br label %if.end.4, !dbg !15135

if.end.4:                                         ; preds = %if.end, %entry
  %13 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !15136, !tbaa !2522
  %14 = bitcast %struct._typeobject* %13 to %struct._object*, !dbg !15137
  %call5 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %14), !dbg !15138
  store %struct.StgDictObject* %call5, %struct.StgDictObject** %dict, align 8, !dbg !15139, !tbaa !2522
  %15 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !15140, !tbaa !2522
  %16 = bitcast %struct.StgDictObject* %15 to %struct._object*, !dbg !15141
  %call6 = call %struct._object* @PyDict_GetItemString(%struct._object* %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0)), !dbg !15142
  store %struct._object* %call6, %struct._object** %fields, align 8, !dbg !15143, !tbaa !2522
  %17 = load %struct._object*, %struct._object** %fields, align 8, !dbg !15144, !tbaa !2522
  %cmp7 = icmp eq %struct._object* %17, null, !dbg !15146
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !15147

if.then.8:                                        ; preds = %if.end.4
  %18 = load i64, i64* %index.addr, align 8, !dbg !15148, !tbaa !2704
  store i64 %18, i64* %retval, !dbg !15149
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.91, !dbg !15149

if.end.9:                                         ; preds = %if.end.4
  store i64 0, i64* %i, align 8, !dbg !15150, !tbaa !2704
  br label %for.cond, !dbg !15151

for.cond:                                         ; preds = %for.inc, %if.end.9
  %19 = load i64, i64* %i, align 8, !dbg !15152, !tbaa !2704
  %20 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !15153, !tbaa !2522
  %length = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %20, i32 0, i32 3, !dbg !15154
  %21 = load i64, i64* %length, align 8, !dbg !15154, !tbaa !3115
  %cmp10 = icmp slt i64 %19, %21, !dbg !15155
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !15156

land.rhs:                                         ; preds = %for.cond
  %22 = load i64, i64* %i, align 8, !dbg !15157, !tbaa !2704
  %23 = load i64, i64* %index.addr, align 8, !dbg !15159, !tbaa !2704
  %add = add i64 %22, %23, !dbg !15160
  %24 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !15161, !tbaa !2522
  %25 = bitcast %struct._object* %24 to %struct.PyVarObject*, !dbg !15162
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %25, i32 0, i32 1, !dbg !15163
  %26 = load i64, i64* %ob_size, align 8, !dbg !15163, !tbaa !5784
  %cmp11 = icmp slt i64 %add, %26, !dbg !15164
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %27 = phi i1 [ false, %for.cond ], [ %cmp11, %land.rhs ]
  br i1 %27, label %for.body, label %for.end, !dbg !15165

for.body:                                         ; preds = %land.end
  %28 = bitcast %struct._object** %pair to i8*, !dbg !15166
  call void @llvm.lifetime.start(i64 8, i8* %28) #2, !dbg !15166
  call void @llvm.dbg.declare(metadata %struct._object** %pair, metadata !2335, metadata !2526), !dbg !15167
  %29 = load %struct._object*, %struct._object** %fields, align 8, !dbg !15168, !tbaa !2522
  %30 = load i64, i64* %i, align 8, !dbg !15169, !tbaa !2704
  %call12 = call %struct._object* @PySequence_GetItem(%struct._object* %29, i64 %30), !dbg !15170
  store %struct._object* %call12, %struct._object** %pair, align 8, !dbg !15167, !tbaa !2522
  %31 = bitcast %struct._object** %name to i8*, !dbg !15171
  call void @llvm.lifetime.start(i64 8, i8* %31) #2, !dbg !15171
  call void @llvm.dbg.declare(metadata %struct._object** %name, metadata !2339, metadata !2526), !dbg !15172
  %32 = bitcast %struct._object** %val to i8*, !dbg !15171
  call void @llvm.lifetime.start(i64 8, i8* %32) #2, !dbg !15171
  call void @llvm.dbg.declare(metadata %struct._object** %val, metadata !2340, metadata !2526), !dbg !15173
  %33 = bitcast i32* %res to i8*, !dbg !15174
  call void @llvm.lifetime.start(i64 4, i8* %33) #2, !dbg !15174
  call void @llvm.dbg.declare(metadata i32* %res, metadata !2341, metadata !2526), !dbg !15175
  %34 = load %struct._object*, %struct._object** %pair, align 8, !dbg !15176, !tbaa !2522
  %tobool13 = icmp ne %struct._object* %34, null, !dbg !15176
  br i1 %tobool13, label %if.end.15, label %if.then.14, !dbg !15178

if.then.14:                                       ; preds = %for.body
  store i64 -1, i64* %retval, !dbg !15179
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15179

if.end.15:                                        ; preds = %for.body
  %35 = load %struct._object*, %struct._object** %pair, align 8, !dbg !15180, !tbaa !2522
  %call16 = call %struct._object* @PySequence_GetItem(%struct._object* %35, i64 0), !dbg !15181
  store %struct._object* %call16, %struct._object** %name, align 8, !dbg !15182, !tbaa !2522
  %36 = load %struct._object*, %struct._object** %name, align 8, !dbg !15183, !tbaa !2522
  %tobool17 = icmp ne %struct._object* %36, null, !dbg !15183
  br i1 %tobool17, label %if.end.22, label %if.then.18, !dbg !15184

if.then.18:                                       ; preds = %if.end.15
  br label %do.body, !dbg !15185

do.body:                                          ; preds = %if.then.18
  %37 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15186
  call void @llvm.lifetime.start(i64 8, i8* %37) #2, !dbg !15186
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !2342, metadata !2526), !dbg !15188
  %38 = load %struct._object*, %struct._object** %pair, align 8, !dbg !15189, !tbaa !2522
  store %struct._object* %38, %struct._object** %_py_decref_tmp, align 8, !dbg !15188, !tbaa !2522
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15190, !tbaa !2522
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !15192
  %40 = load i64, i64* %ob_refcnt, align 8, !dbg !15193, !tbaa !2551
  %dec = add i64 %40, -1, !dbg !15193
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !15193, !tbaa !2551
  %cmp19 = icmp ne i64 %dec, 0, !dbg !15194
  br i1 %cmp19, label %if.then.20, label %if.else, !dbg !15195

if.then.20:                                       ; preds = %do.body
  br label %if.end.21, !dbg !15196

if.else:                                          ; preds = %do.body
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15198, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !15200
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !15200, !tbaa !2588
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4, !dbg !15201
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !15201, !tbaa !2590
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !15202, !tbaa !2522
  call void %43(%struct._object* %44), !dbg !15203
  br label %if.end.21

if.end.21:                                        ; preds = %if.else, %if.then.20
  %45 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !15204
  call void @llvm.lifetime.end(i64 8, i8* %45) #2, !dbg !15204
  br label %do.cond, !dbg !15206

do.cond:                                          ; preds = %if.end.21
  br label %do.end, !dbg !15207

do.end:                                           ; preds = %do.cond
  store i64 -1, i64* %retval, !dbg !15209
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15209

if.end.22:                                        ; preds = %if.end.15
  %46 = load i64, i64* %i, align 8, !dbg !15210, !tbaa !2704
  %47 = load i64, i64* %index.addr, align 8, !dbg !15211, !tbaa !2704
  %add23 = add i64 %46, %47, !dbg !15212
  %48 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !15213, !tbaa !2522
  %49 = bitcast %struct._object* %48 to %struct.PyTupleObject*, !dbg !15214
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %49, i32 0, i32 1, !dbg !15215
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %add23, !dbg !15216
  %50 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !15216, !tbaa !2522
  store %struct._object* %50, %struct._object** %val, align 8, !dbg !15217, !tbaa !2522
  %51 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !15218, !tbaa !2522
  %tobool24 = icmp ne %struct._object* %51, null, !dbg !15218
  br i1 %tobool24, label %land.lhs.true, label %if.end.57, !dbg !15219

land.lhs.true:                                    ; preds = %if.end.22
  %52 = load %struct._object*, %struct._object** %kwds.addr, align 8, !dbg !15220, !tbaa !2522
  %53 = load %struct._object*, %struct._object** %name, align 8, !dbg !15222, !tbaa !2522
  %call25 = call %struct._object* @PyDict_GetItem(%struct._object* %52, %struct._object* %53), !dbg !15223
  %tobool26 = icmp ne %struct._object* %call25, null, !dbg !15223
  br i1 %tobool26, label %if.then.27, label %if.end.57, !dbg !15224

if.then.27:                                       ; preds = %land.lhs.true
  %54 = bitcast i8** %field to i8*, !dbg !15225
  call void @llvm.lifetime.start(i64 8, i8* %54) #2, !dbg !15225
  call void @llvm.dbg.declare(metadata i8** %field, metadata !2346, metadata !2526), !dbg !15226
  %55 = load %struct._object*, %struct._object** %name, align 8, !dbg !15227, !tbaa !2522
  %call28 = call i8* @PyBytes_AsString(%struct._object* %55), !dbg !15228
  store i8* %call28, i8** %field, align 8, !dbg !15226, !tbaa !2522
  %56 = load i8*, i8** %field, align 8, !dbg !15229, !tbaa !2522
  %cmp29 = icmp eq i8* %56, null, !dbg !15231
  br i1 %cmp29, label %if.then.30, label %if.end.31, !dbg !15232

if.then.30:                                       ; preds = %if.then.27
  call void @PyErr_Clear(), !dbg !15233
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i32 0, i32 0), i8** %field, align 8, !dbg !15235, !tbaa !2522
  br label %if.end.31, !dbg !15236

if.end.31:                                        ; preds = %if.then.30, %if.then.27
  %57 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !15237, !tbaa !2522
  %58 = load i8*, i8** %field, align 8, !dbg !15238, !tbaa !2522
  %call32 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %57, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.193, i32 0, i32 0), i8* %58), !dbg !15239
  br label %do.body.33, !dbg !15240

do.body.33:                                       ; preds = %if.end.31
  %59 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !15241
  call void @llvm.lifetime.start(i64 8, i8* %59) #2, !dbg !15241
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp34, metadata !2349, metadata !2526), !dbg !15243
  %60 = load %struct._object*, %struct._object** %pair, align 8, !dbg !15244, !tbaa !2522
  store %struct._object* %60, %struct._object** %_py_decref_tmp34, align 8, !dbg !15243, !tbaa !2522
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !15245, !tbaa !2522
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 0, !dbg !15247
  %62 = load i64, i64* %ob_refcnt35, align 8, !dbg !15248, !tbaa !2551
  %dec36 = add i64 %62, -1, !dbg !15248
  store i64 %dec36, i64* %ob_refcnt35, align 8, !dbg !15248, !tbaa !2551
  %cmp37 = icmp ne i64 %dec36, 0, !dbg !15249
  br i1 %cmp37, label %if.then.38, label %if.else.39, !dbg !15250

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42, !dbg !15251

if.else.39:                                       ; preds = %do.body.33
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !15253, !tbaa !2522
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 1, !dbg !15255
  %64 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8, !dbg !15255, !tbaa !2588
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i32 0, i32 4, !dbg !15256
  %65 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8, !dbg !15256, !tbaa !2590
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8, !dbg !15257, !tbaa !2522
  call void %65(%struct._object* %66), !dbg !15258
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  %67 = bitcast %struct._object** %_py_decref_tmp34 to i8*, !dbg !15259
  call void @llvm.lifetime.end(i64 8, i8* %67) #2, !dbg !15259
  br label %do.cond.43, !dbg !15261

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !15262

do.end.44:                                        ; preds = %do.cond.43
  br label %do.body.45, !dbg !15264

do.body.45:                                       ; preds = %do.end.44
  %68 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !15265
  call void @llvm.lifetime.start(i64 8, i8* %68) #2, !dbg !15265
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp46, metadata !2351, metadata !2526), !dbg !15267
  %69 = load %struct._object*, %struct._object** %name, align 8, !dbg !15268, !tbaa !2522
  store %struct._object* %69, %struct._object** %_py_decref_tmp46, align 8, !dbg !15267, !tbaa !2522
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !15269, !tbaa !2522
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 0, !dbg !15271
  %71 = load i64, i64* %ob_refcnt47, align 8, !dbg !15272, !tbaa !2551
  %dec48 = add i64 %71, -1, !dbg !15272
  store i64 %dec48, i64* %ob_refcnt47, align 8, !dbg !15272, !tbaa !2551
  %cmp49 = icmp ne i64 %dec48, 0, !dbg !15273
  br i1 %cmp49, label %if.then.50, label %if.else.51, !dbg !15274

if.then.50:                                       ; preds = %do.body.45
  br label %if.end.54, !dbg !15275

if.else.51:                                       ; preds = %do.body.45
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !15277, !tbaa !2522
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 1, !dbg !15279
  %73 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8, !dbg !15279, !tbaa !2588
  %tp_dealloc53 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %73, i32 0, i32 4, !dbg !15280
  %74 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc53, align 8, !dbg !15280, !tbaa !2590
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !15281, !tbaa !2522
  call void %74(%struct._object* %75), !dbg !15282
  br label %if.end.54

if.end.54:                                        ; preds = %if.else.51, %if.then.50
  %76 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !15283
  call void @llvm.lifetime.end(i64 8, i8* %76) #2, !dbg !15283
  br label %do.cond.55, !dbg !15284

do.cond.55:                                       ; preds = %if.end.54
  br label %do.end.56, !dbg !15285

do.end.56:                                        ; preds = %do.cond.55
  store i64 -1, i64* %retval, !dbg !15287
  store i32 1, i32* %cleanup.dest.slot
  %77 = bitcast i8** %field to i8*, !dbg !15288
  call void @llvm.lifetime.end(i64 8, i8* %77) #2, !dbg !15288
  br label %cleanup

if.end.57:                                        ; preds = %land.lhs.true, %if.end.22
  %78 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !15289, !tbaa !2522
  %79 = load %struct._object*, %struct._object** %name, align 8, !dbg !15290, !tbaa !2522
  %80 = load %struct._object*, %struct._object** %val, align 8, !dbg !15291, !tbaa !2522
  %call58 = call i32 @PyObject_SetAttr(%struct._object* %78, %struct._object* %79, %struct._object* %80), !dbg !15292
  store i32 %call58, i32* %res, align 4, !dbg !15293, !tbaa !2611
  br label %do.body.59, !dbg !15294

do.body.59:                                       ; preds = %if.end.57
  %81 = bitcast %struct._object** %_py_decref_tmp60 to i8*, !dbg !15295
  call void @llvm.lifetime.start(i64 8, i8* %81) #2, !dbg !15295
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp60, metadata !2353, metadata !2526), !dbg !15297
  %82 = load %struct._object*, %struct._object** %pair, align 8, !dbg !15298, !tbaa !2522
  store %struct._object* %82, %struct._object** %_py_decref_tmp60, align 8, !dbg !15297, !tbaa !2522
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !15299, !tbaa !2522
  %ob_refcnt61 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 0, !dbg !15301
  %84 = load i64, i64* %ob_refcnt61, align 8, !dbg !15302, !tbaa !2551
  %dec62 = add i64 %84, -1, !dbg !15302
  store i64 %dec62, i64* %ob_refcnt61, align 8, !dbg !15302, !tbaa !2551
  %cmp63 = icmp ne i64 %dec62, 0, !dbg !15303
  br i1 %cmp63, label %if.then.64, label %if.else.65, !dbg !15304

if.then.64:                                       ; preds = %do.body.59
  br label %if.end.68, !dbg !15305

if.else.65:                                       ; preds = %do.body.59
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !15307, !tbaa !2522
  %ob_type66 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 1, !dbg !15309
  %86 = load %struct._typeobject*, %struct._typeobject** %ob_type66, align 8, !dbg !15309, !tbaa !2588
  %tp_dealloc67 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %86, i32 0, i32 4, !dbg !15310
  %87 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc67, align 8, !dbg !15310, !tbaa !2590
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !15311, !tbaa !2522
  call void %87(%struct._object* %88), !dbg !15312
  br label %if.end.68

if.end.68:                                        ; preds = %if.else.65, %if.then.64
  %89 = bitcast %struct._object** %_py_decref_tmp60 to i8*, !dbg !15313
  call void @llvm.lifetime.end(i64 8, i8* %89) #2, !dbg !15313
  br label %do.cond.69, !dbg !15315

do.cond.69:                                       ; preds = %if.end.68
  br label %do.end.70, !dbg !15316

do.end.70:                                        ; preds = %do.cond.69
  br label %do.body.71, !dbg !15318

do.body.71:                                       ; preds = %do.end.70
  %90 = bitcast %struct._object** %_py_decref_tmp72 to i8*, !dbg !15319
  call void @llvm.lifetime.start(i64 8, i8* %90) #2, !dbg !15319
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp72, metadata !2355, metadata !2526), !dbg !15321
  %91 = load %struct._object*, %struct._object** %name, align 8, !dbg !15322, !tbaa !2522
  store %struct._object* %91, %struct._object** %_py_decref_tmp72, align 8, !dbg !15321, !tbaa !2522
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8, !dbg !15323, !tbaa !2522
  %ob_refcnt73 = getelementptr inbounds %struct._object, %struct._object* %92, i32 0, i32 0, !dbg !15325
  %93 = load i64, i64* %ob_refcnt73, align 8, !dbg !15326, !tbaa !2551
  %dec74 = add i64 %93, -1, !dbg !15326
  store i64 %dec74, i64* %ob_refcnt73, align 8, !dbg !15326, !tbaa !2551
  %cmp75 = icmp ne i64 %dec74, 0, !dbg !15327
  br i1 %cmp75, label %if.then.76, label %if.else.77, !dbg !15328

if.then.76:                                       ; preds = %do.body.71
  br label %if.end.80, !dbg !15329

if.else.77:                                       ; preds = %do.body.71
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8, !dbg !15331, !tbaa !2522
  %ob_type78 = getelementptr inbounds %struct._object, %struct._object* %94, i32 0, i32 1, !dbg !15333
  %95 = load %struct._typeobject*, %struct._typeobject** %ob_type78, align 8, !dbg !15333, !tbaa !2588
  %tp_dealloc79 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %95, i32 0, i32 4, !dbg !15334
  %96 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc79, align 8, !dbg !15334, !tbaa !2590
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp72, align 8, !dbg !15335, !tbaa !2522
  call void %96(%struct._object* %97), !dbg !15336
  br label %if.end.80

if.end.80:                                        ; preds = %if.else.77, %if.then.76
  %98 = bitcast %struct._object** %_py_decref_tmp72 to i8*, !dbg !15337
  call void @llvm.lifetime.end(i64 8, i8* %98) #2, !dbg !15337
  br label %do.cond.81, !dbg !15338

do.cond.81:                                       ; preds = %if.end.80
  br label %do.end.82, !dbg !15339

do.end.82:                                        ; preds = %do.cond.81
  %99 = load i32, i32* %res, align 4, !dbg !15341, !tbaa !2611
  %cmp83 = icmp eq i32 %99, -1, !dbg !15343
  br i1 %cmp83, label %if.then.84, label %if.end.85, !dbg !15344

if.then.84:                                       ; preds = %do.end.82
  store i64 -1, i64* %retval, !dbg !15345
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15345

if.end.85:                                        ; preds = %do.end.82
  store i32 0, i32* %cleanup.dest.slot, !dbg !15346
  br label %cleanup, !dbg !15346

cleanup:                                          ; preds = %if.end.85, %if.then.84, %do.end.56, %do.end, %if.then.14
  %100 = bitcast i32* %res to i8*, !dbg !15347
  call void @llvm.lifetime.end(i64 4, i8* %100) #2, !dbg !15347
  %101 = bitcast %struct._object** %val to i8*, !dbg !15347
  call void @llvm.lifetime.end(i64 8, i8* %101) #2, !dbg !15347
  %102 = bitcast %struct._object** %name to i8*, !dbg !15347
  call void @llvm.lifetime.end(i64 8, i8* %102) #2, !dbg !15347
  %103 = bitcast %struct._object** %pair to i8*, !dbg !15347
  call void @llvm.lifetime.end(i64 8, i8* %103) #2, !dbg !15347
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  br label %LeafBlock

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.inc, !dbg !15348

for.inc:                                          ; preds = %cleanup.cont
  %104 = load i64, i64* %i, align 8, !dbg !15349, !tbaa !2704
  %inc = add i64 %104, 1, !dbg !15349
  store i64 %inc, i64* %i, align 8, !dbg !15349, !tbaa !2704
  br label %for.cond, !dbg !15350

for.end:                                          ; preds = %land.end
  %105 = load i64, i64* %index.addr, align 8, !dbg !15351, !tbaa !2704
  %106 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !15352, !tbaa !2522
  %length89 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %106, i32 0, i32 3, !dbg !15353
  %107 = load i64, i64* %length89, align 8, !dbg !15353, !tbaa !3115
  %add90 = add i64 %105, %107, !dbg !15354
  store i64 %add90, i64* %retval, !dbg !15355
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.91, !dbg !15355

NewDefault:                                       ; preds = %LeafBlock
  br label %cleanup.91

cleanup.91:                                       ; preds = %NewDefault, %for.end, %if.then.8, %if.then.3
  %108 = bitcast i64* %i to i8*, !dbg !15356
  call void @llvm.lifetime.end(i64 8, i8* %108) #2, !dbg !15356
  %109 = bitcast %struct._object** %fields to i8*, !dbg !15356
  call void @llvm.lifetime.end(i64 8, i8* %109) #2, !dbg !15356
  %110 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !15356
  call void @llvm.lifetime.end(i64 8, i8* %110) #2, !dbg !15356
  %111 = load i64, i64* %retval, !dbg !15356
  ret i64 %111, !dbg !15356
}

declare i32 @PyDict_Next(%struct._object*, i64*, %struct._object**, %struct._object**) #3

declare i32 @PyObject_SetAttr(%struct._object*, %struct._object*, %struct._object*) #3

declare i8* @PyBytes_AsString(%struct._object*) #3

; Function Attrs: uwtable
define internal i32 @cast_check_pointertype(%struct._object* %arg) #0 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca %struct._object*, align 8
  %dict = alloca %struct.StgDictObject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !2522
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !2391, metadata !2526), !dbg !15357
  %0 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !15358
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !15358
  call void @llvm.dbg.declare(metadata %struct.StgDictObject** %dict, metadata !2392, metadata !2526), !dbg !15359
  %1 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !15360, !tbaa !2522
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1, !dbg !15362
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !15362, !tbaa !2588
  %cmp = icmp eq %struct._typeobject* %2, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointerType_Type to %struct._typeobject*), !dbg !15363
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15364

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !15365, !tbaa !2522
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !15367
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !15367, !tbaa !2588
  %call = call i32 @PyType_IsSubtype(%struct._typeobject* %4, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointerType_Type to %struct._typeobject*)), !dbg !15368
  %tobool = icmp ne i32 %call, 0, !dbg !15368
  br i1 %tobool, label %if.then, label %if.end, !dbg !15369

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval, !dbg !15370
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15370

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !15371, !tbaa !2522
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !15373
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8, !dbg !15373, !tbaa !2588
  %cmp3 = icmp eq %struct._typeobject* %6, bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCFuncPtrType_Type to %struct._typeobject*), !dbg !15374
  br i1 %cmp3, label %if.then.8, label %lor.lhs.false.4, !dbg !15375

lor.lhs.false.4:                                  ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !15376, !tbaa !2522
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !15378
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !15378, !tbaa !2588
  %call6 = call i32 @PyType_IsSubtype(%struct._typeobject* %8, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCFuncPtrType_Type to %struct._typeobject*)), !dbg !15379
  %tobool7 = icmp ne i32 %call6, 0, !dbg !15379
  br i1 %tobool7, label %if.then.8, label %if.end.9, !dbg !15380

if.then.8:                                        ; preds = %lor.lhs.false.4, %if.end
  store i32 1, i32* %retval, !dbg !15381
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15381

if.end.9:                                         ; preds = %lor.lhs.false.4
  %9 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !15382, !tbaa !2522
  %call10 = call %struct.StgDictObject* @PyType_stgdict(%struct._object* %9), !dbg !15383
  store %struct.StgDictObject* %call10, %struct.StgDictObject** %dict, align 8, !dbg !15384, !tbaa !2522
  %10 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !15385, !tbaa !2522
  %tobool11 = icmp ne %struct.StgDictObject* %10, null, !dbg !15385
  br i1 %tobool11, label %if.then.12, label %if.end.35, !dbg !15387

if.then.12:                                       ; preds = %if.end.9
  %11 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !15388, !tbaa !2522
  %proto = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %11, i32 0, i32 5, !dbg !15391
  %12 = load %struct._object*, %struct._object** %proto, align 8, !dbg !15391, !tbaa !2961
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !15392
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type13, align 8, !dbg !15392, !tbaa !2588
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 19, !dbg !15393
  %14 = load i64, i64* %tp_flags, align 8, !dbg !15393, !tbaa !2849
  %and = and i64 %14, 268435456, !dbg !15394
  %cmp14 = icmp ne i64 %and, 0, !dbg !15395
  br i1 %cmp14, label %land.lhs.true, label %if.end.34, !dbg !15396

land.lhs.true:                                    ; preds = %if.then.12
  br i1 false, label %land.lhs.true.15, label %cond.false, !dbg !15397

land.lhs.true.15:                                 ; preds = %land.lhs.true
  br i1 true, label %cond.false, label %land.lhs.true.16, !dbg !15399

land.lhs.true.16:                                 ; preds = %land.lhs.true.15
  %15 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !15401, !tbaa !2522
  %proto17 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %15, i32 0, i32 5, !dbg !15403
  %16 = load %struct._object*, %struct._object** %proto17, align 8, !dbg !15403, !tbaa !2961
  %call18 = call i8* @PyUnicode_AsUTF8(%struct._object* %16), !dbg !15404
  %arrayidx = getelementptr i8, i8* %call18, i64 0, !dbg !15404
  %17 = load i8, i8* %arrayidx, align 1, !dbg !15404, !tbaa !2731
  %conv = sext i8 %17 to i32, !dbg !15405
  %cmp19 = icmp eq i32 %conv, 0, !dbg !15406
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !15407

cond.true:                                        ; preds = %land.lhs.true.16
  %18 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !15408, !tbaa !2522
  %proto21 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %18, i32 0, i32 5, !dbg !15409
  %19 = load %struct._object*, %struct._object** %proto21, align 8, !dbg !15409, !tbaa !2961
  %call22 = call i8* @PyUnicode_AsUTF8(%struct._object* %19), !dbg !15410
  %arrayidx23 = getelementptr i8, i8* %call22, i64 0, !dbg !15410
  %20 = load i8, i8* %arrayidx23, align 1, !dbg !15410, !tbaa !2731
  %conv24 = sext i8 %20 to i32, !dbg !15410
  %call25 = call i8* @__rawmemchr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.196, i32 0, i32 0), i32 %conv24), !dbg !15411
  %tobool26 = icmp ne i8* %call25, null, !dbg !15412
  br i1 %tobool26, label %if.then.33, label %if.end.34, !dbg !15413

cond.false:                                       ; preds = %land.lhs.true.16, %land.lhs.true.15, %land.lhs.true
  %21 = load %struct.StgDictObject*, %struct.StgDictObject** %dict, align 8, !dbg !15414, !tbaa !2522
  %proto27 = getelementptr inbounds %struct.StgDictObject, %struct.StgDictObject* %21, i32 0, i32 5, !dbg !15417
  %22 = load %struct._object*, %struct._object** %proto27, align 8, !dbg !15417, !tbaa !2961
  %call28 = call i8* @PyUnicode_AsUTF8(%struct._object* %22), !dbg !15418
  %arrayidx29 = getelementptr i8, i8* %call28, i64 0, !dbg !15418
  %23 = load i8, i8* %arrayidx29, align 1, !dbg !15418, !tbaa !2731
  %conv30 = sext i8 %23 to i32, !dbg !15418
  %call31 = call i8* @strchr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.196, i32 0, i32 0), i32 %conv30) #2, !dbg !15419
  %tobool32 = icmp ne i8* %call31, null, !dbg !15419
  br i1 %tobool32, label %if.then.33, label %if.end.34, !dbg !15407

if.then.33:                                       ; preds = %cond.false, %cond.true
  store i32 1, i32* %retval, !dbg !15420
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15420

if.end.34:                                        ; preds = %cond.false, %cond.true, %if.then.12
  br label %if.end.35, !dbg !15422

if.end.35:                                        ; preds = %if.end.34, %if.end.9
  %24 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !15423, !tbaa !2522
  %25 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !15424, !tbaa !2522
  %ob_type36 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !15425
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type36, align 8, !dbg !15425, !tbaa !2588
  %tp_flags37 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 19, !dbg !15426
  %27 = load i64, i64* %tp_flags37, align 8, !dbg !15426, !tbaa !2849
  %and38 = and i64 %27, 2147483648, !dbg !15427
  %cmp39 = icmp ne i64 %and38, 0, !dbg !15428
  br i1 %cmp39, label %cond.true.41, label %cond.false.42, !dbg !15429

cond.true.41:                                     ; preds = %if.end.35
  %28 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !15430, !tbaa !2522
  %29 = bitcast %struct._object* %28 to %struct._typeobject*, !dbg !15431
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 1, !dbg !15432
  %30 = load i8*, i8** %tp_name, align 8, !dbg !15432, !tbaa !5264
  br label %cond.end, !dbg !15429

cond.false.42:                                    ; preds = %if.end.35
  %31 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !15433, !tbaa !2522
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !15434
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8, !dbg !15434, !tbaa !2588
  %tp_name44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 1, !dbg !15435
  %33 = load i8*, i8** %tp_name44, align 8, !dbg !15435, !tbaa !5264
  br label %cond.end, !dbg !15429

cond.end:                                         ; preds = %cond.false.42, %cond.true.41
  %cond = phi i8* [ %30, %cond.true.41 ], [ %33, %cond.false.42 ], !dbg !15429
  %call45 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %24, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.197, i32 0, i32 0), i8* %cond), !dbg !15436
  store i32 0, i32* %retval, !dbg !15437
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !15437

cleanup:                                          ; preds = %cond.end, %if.then.33, %if.then.8, %if.then
  %34 = bitcast %struct.StgDictObject** %dict to i8*, !dbg !15438
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !15438
  %35 = load i32, i32* %retval, !dbg !15438
  ret i32 %35, !dbg !15438
}

; Function Attrs: nounwind readonly
declare i64 @wcslen(i32*) #4

attributes #0 = { uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2518, !2519, !2520}
!llvm.ident = !{!2521}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !19, subprograms: !667, globals: !2402)
!1 = !DIFile(filename: "_ctypes.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{!3, !11}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_Py_memory_order", file: !4, line: 23, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./Include/pyatomic.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!5 = !{!6, !7, !8, !9, !10}
!6 = !DIEnumerator(name: "_Py_memory_order_relaxed", value: 0)
!7 = !DIEnumerator(name: "_Py_memory_order_acquire", value: 1)
!8 = !DIEnumerator(name: "_Py_memory_order_release", value: 2)
!9 = !DIEnumerator(name: "_Py_memory_order_acq_rel", value: 3)
!10 = !DIEnumerator(name: "_Py_memory_order_seq_cst", value: 4)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ffi_abi", file: !12, line: 75, size: 32, align: 32, elements: !13)
!12 = !DIFile(filename: "build/temp.linux-x86_64-3.4/libffi/include/ffitarget.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!13 = !{!14, !15, !16, !17, !18}
!14 = !DIEnumerator(name: "FFI_FIRST_ABI", value: 0)
!15 = !DIEnumerator(name: "FFI_SYSV", value: 1)
!16 = !DIEnumerator(name: "FFI_UNIX64", value: 2)
!17 = !DIEnumerator(name: "FFI_LAST_ABI", value: 3)
!18 = !DIEnumerator(name: "FFI_DEFAULT_ABI", value: 2)
!19 = !{!20, !105, !366, !374, !385, !417, !67, !32, !110, !419, !421, !44, !424, !457, !458, !503, !504, !505, !513, !514, !364, !515, !573, !636, !59, !644, !648, !656, !657, !666}
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64, align: 64)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !22, line: 109, baseType: !23)
!22 = !DIFile(filename: "./Include/object.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!23 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !22, line: 105, size: 128, align: 64, elements: !24)
!24 = !{!25, !33}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !23, file: !22, line: 107, baseType: !26, size: 64, align: 64)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !27, line: 177, baseType: !28)
!27 = !DIFile(filename: "./Include/pyport.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !29, line: 102, baseType: !30)
!29 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !31, line: 181, baseType: !32)
!31 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!32 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !23, file: !22, line: 108, baseType: !34, size: 64, align: 64, offset: 64)
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64, align: 64)
!35 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !22, line: 334, size: 3200, align: 64, elements: !36)
!36 = !{!37, !43, !47, !48, !49, !54, !118, !123, !128, !129, !134, !186, !217, !229, !235, !236, !237, !239, !241, !272, !273, !274, !283, !284, !289, !290, !292, !294, !304, !314, !332, !333, !334, !336, !338, !339, !341, !346, !351, !356, !357, !358, !359, !360, !361, !362, !363, !365}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !35, file: !22, line: 335, baseType: !38, size: 192, align: 64)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !22, line: 114, baseType: !39)
!39 = !DICompositeType(tag: DW_TAG_structure_type, file: !22, line: 111, size: 192, align: 64, elements: !40)
!40 = !{!41, !42}
!41 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !39, file: !22, line: 112, baseType: !21, size: 128, align: 64)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !39, file: !22, line: 113, baseType: !26, size: 64, align: 64, offset: 128)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !35, file: !22, line: 336, baseType: !44, size: 64, align: 64, offset: 192)
!44 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64, align: 64)
!45 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !46)
!46 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !35, file: !22, line: 337, baseType: !26, size: 64, align: 64, offset: 256)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !35, file: !22, line: 337, baseType: !26, size: 64, align: 64, offset: 320)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !35, file: !22, line: 341, baseType: !50, size: 64, align: 64, offset: 384)
!50 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !22, line: 308, baseType: !51)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64, align: 64)
!52 = !DISubroutineType(types: !53)
!53 = !{null, !20}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !35, file: !22, line: 342, baseType: !55, size: 64, align: 64, offset: 448)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !22, line: 314, baseType: !56)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64, align: 64)
!57 = !DISubroutineType(types: !58)
!58 = !{!59, !20, !60, !59}
!59 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64, align: 64)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !29, line: 48, baseType: !62)
!62 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !63, line: 246, size: 1728, align: 64, elements: !64)
!63 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!64 = !{!65, !66, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !86, !87, !88, !89, !91, !93, !95, !99, !102, !104, !106, !107, !108, !109, !113, !114}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !62, file: !63, line: 247, baseType: !59, size: 32, align: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !62, file: !63, line: 252, baseType: !67, size: 64, align: 64, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64, align: 64)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !62, file: !63, line: 253, baseType: !67, size: 64, align: 64, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !62, file: !63, line: 254, baseType: !67, size: 64, align: 64, offset: 192)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !62, file: !63, line: 255, baseType: !67, size: 64, align: 64, offset: 256)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !62, file: !63, line: 256, baseType: !67, size: 64, align: 64, offset: 320)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !62, file: !63, line: 257, baseType: !67, size: 64, align: 64, offset: 384)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !62, file: !63, line: 258, baseType: !67, size: 64, align: 64, offset: 448)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !62, file: !63, line: 259, baseType: !67, size: 64, align: 64, offset: 512)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !62, file: !63, line: 261, baseType: !67, size: 64, align: 64, offset: 576)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !62, file: !63, line: 262, baseType: !67, size: 64, align: 64, offset: 640)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !62, file: !63, line: 263, baseType: !67, size: 64, align: 64, offset: 704)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !62, file: !63, line: 265, baseType: !79, size: 64, align: 64, offset: 768)
!79 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64, align: 64)
!80 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !63, line: 161, size: 192, align: 64, elements: !81)
!81 = !{!82, !83, !85}
!82 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !80, file: !63, line: 162, baseType: !79, size: 64, align: 64)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !80, file: !63, line: 163, baseType: !84, size: 64, align: 64, offset: 64)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64, align: 64)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !80, file: !63, line: 167, baseType: !59, size: 32, align: 32, offset: 128)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !62, file: !63, line: 267, baseType: !84, size: 64, align: 64, offset: 832)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !62, file: !63, line: 269, baseType: !59, size: 32, align: 32, offset: 896)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !62, file: !63, line: 273, baseType: !59, size: 32, align: 32, offset: 928)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !62, file: !63, line: 275, baseType: !90, size: 64, align: 64, offset: 960)
!90 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !31, line: 140, baseType: !32)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !62, file: !63, line: 279, baseType: !92, size: 16, align: 16, offset: 1024)
!92 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !62, file: !63, line: 280, baseType: !94, size: 8, align: 8, offset: 1040)
!94 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !62, file: !63, line: 281, baseType: !96, size: 8, align: 8, offset: 1048)
!96 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 8, align: 8, elements: !97)
!97 = !{!98}
!98 = !DISubrange(count: 1)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !62, file: !63, line: 285, baseType: !100, size: 64, align: 64, offset: 1088)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64, align: 64)
!101 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !63, line: 155, baseType: null)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !62, file: !63, line: 294, baseType: !103, size: 64, align: 64, offset: 1152)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !31, line: 141, baseType: !32)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !62, file: !63, line: 303, baseType: !105, size: 64, align: 64, offset: 1216)
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !62, file: !63, line: 304, baseType: !105, size: 64, align: 64, offset: 1280)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !62, file: !63, line: 305, baseType: !105, size: 64, align: 64, offset: 1344)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !62, file: !63, line: 306, baseType: !105, size: 64, align: 64, offset: 1408)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !62, file: !63, line: 307, baseType: !110, size: 64, align: 64, offset: 1472)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !111, line: 62, baseType: !112)
!111 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!112 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !62, file: !63, line: 309, baseType: !59, size: 32, align: 32, offset: 1536)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !62, file: !63, line: 311, baseType: !115, size: 160, align: 8, offset: 1568)
!115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 160, align: 8, elements: !116)
!116 = !{!117}
!117 = !DISubrange(count: 20)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !35, file: !22, line: 343, baseType: !119, size: 64, align: 64, offset: 512)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !22, line: 316, baseType: !120)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64, align: 64)
!121 = !DISubroutineType(types: !122)
!122 = !{!20, !20, !67}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !35, file: !22, line: 344, baseType: !124, size: 64, align: 64, offset: 576)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !22, line: 318, baseType: !125)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64, align: 64)
!126 = !DISubroutineType(types: !127)
!127 = !{!59, !20, !67, !20}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !35, file: !22, line: 345, baseType: !105, size: 64, align: 64, offset: 640)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !35, file: !22, line: 346, baseType: !130, size: 64, align: 64, offset: 704)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !22, line: 320, baseType: !131)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64, align: 64)
!132 = !DISubroutineType(types: !133)
!133 = !{!20, !20}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !35, file: !22, line: 350, baseType: !135, size: 64, align: 64, offset: 768)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64, align: 64)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !22, line: 278, baseType: !137)
!137 = !DICompositeType(tag: DW_TAG_structure_type, file: !22, line: 236, size: 2176, align: 64, elements: !138)
!138 = !{!139, !144, !145, !146, !147, !148, !153, !155, !156, !157, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !137, file: !22, line: 241, baseType: !140, size: 64, align: 64)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !22, line: 166, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64, align: 64)
!142 = !DISubroutineType(types: !143)
!143 = !{!20, !20, !20}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !137, file: !22, line: 242, baseType: !140, size: 64, align: 64, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !137, file: !22, line: 243, baseType: !140, size: 64, align: 64, offset: 128)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !137, file: !22, line: 244, baseType: !140, size: 64, align: 64, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !137, file: !22, line: 245, baseType: !140, size: 64, align: 64, offset: 256)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !137, file: !22, line: 246, baseType: !149, size: 64, align: 64, offset: 320)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !22, line: 167, baseType: !150)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64, align: 64)
!151 = !DISubroutineType(types: !152)
!152 = !{!20, !20, !20, !20}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !137, file: !22, line: 247, baseType: !154, size: 64, align: 64, offset: 384)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !22, line: 165, baseType: !131)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !137, file: !22, line: 248, baseType: !154, size: 64, align: 64, offset: 448)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !137, file: !22, line: 249, baseType: !154, size: 64, align: 64, offset: 512)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !137, file: !22, line: 250, baseType: !158, size: 64, align: 64, offset: 576)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !22, line: 168, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64, align: 64)
!160 = !DISubroutineType(types: !161)
!161 = !{!59, !20}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !137, file: !22, line: 251, baseType: !154, size: 64, align: 64, offset: 640)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !137, file: !22, line: 252, baseType: !140, size: 64, align: 64, offset: 704)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !137, file: !22, line: 253, baseType: !140, size: 64, align: 64, offset: 768)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !137, file: !22, line: 254, baseType: !140, size: 64, align: 64, offset: 832)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !137, file: !22, line: 255, baseType: !140, size: 64, align: 64, offset: 896)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !137, file: !22, line: 256, baseType: !140, size: 64, align: 64, offset: 960)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !137, file: !22, line: 257, baseType: !154, size: 64, align: 64, offset: 1024)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !137, file: !22, line: 258, baseType: !105, size: 64, align: 64, offset: 1088)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !137, file: !22, line: 259, baseType: !154, size: 64, align: 64, offset: 1152)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !137, file: !22, line: 261, baseType: !140, size: 64, align: 64, offset: 1216)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !137, file: !22, line: 262, baseType: !140, size: 64, align: 64, offset: 1280)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !137, file: !22, line: 263, baseType: !140, size: 64, align: 64, offset: 1344)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !137, file: !22, line: 264, baseType: !140, size: 64, align: 64, offset: 1408)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !137, file: !22, line: 265, baseType: !149, size: 64, align: 64, offset: 1472)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !137, file: !22, line: 266, baseType: !140, size: 64, align: 64, offset: 1536)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !137, file: !22, line: 267, baseType: !140, size: 64, align: 64, offset: 1600)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !137, file: !22, line: 268, baseType: !140, size: 64, align: 64, offset: 1664)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !137, file: !22, line: 269, baseType: !140, size: 64, align: 64, offset: 1728)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !137, file: !22, line: 270, baseType: !140, size: 64, align: 64, offset: 1792)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !137, file: !22, line: 272, baseType: !140, size: 64, align: 64, offset: 1856)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !137, file: !22, line: 273, baseType: !140, size: 64, align: 64, offset: 1920)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !137, file: !22, line: 274, baseType: !140, size: 64, align: 64, offset: 1984)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !137, file: !22, line: 275, baseType: !140, size: 64, align: 64, offset: 2048)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !137, file: !22, line: 277, baseType: !154, size: 64, align: 64, offset: 2112)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !35, file: !22, line: 351, baseType: !187, size: 64, align: 64, offset: 832)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64, align: 64)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !22, line: 292, baseType: !189)
!189 = !DICompositeType(tag: DW_TAG_structure_type, file: !22, line: 280, size: 640, align: 64, elements: !190)
!190 = !{!191, !196, !197, !202, !203, !204, !209, !210, !215, !216}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !189, file: !22, line: 281, baseType: !192, size: 64, align: 64)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !22, line: 169, baseType: !193)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64, align: 64)
!194 = !DISubroutineType(types: !195)
!195 = !{!26, !20}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !189, file: !22, line: 282, baseType: !140, size: 64, align: 64, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !189, file: !22, line: 283, baseType: !198, size: 64, align: 64, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !22, line: 170, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64, align: 64)
!200 = !DISubroutineType(types: !201)
!201 = !{!20, !20, !26}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !189, file: !22, line: 284, baseType: !198, size: 64, align: 64, offset: 192)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !189, file: !22, line: 285, baseType: !105, size: 64, align: 64, offset: 256)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !189, file: !22, line: 286, baseType: !205, size: 64, align: 64, offset: 320)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !22, line: 172, baseType: !206)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64, align: 64)
!207 = !DISubroutineType(types: !208)
!208 = !{!59, !20, !26, !20}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !189, file: !22, line: 287, baseType: !105, size: 64, align: 64, offset: 384)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !189, file: !22, line: 288, baseType: !211, size: 64, align: 64, offset: 448)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !22, line: 231, baseType: !212)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64, align: 64)
!213 = !DISubroutineType(types: !214)
!214 = !{!59, !20, !20}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !189, file: !22, line: 290, baseType: !140, size: 64, align: 64, offset: 512)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !189, file: !22, line: 291, baseType: !198, size: 64, align: 64, offset: 576)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !35, file: !22, line: 352, baseType: !218, size: 64, align: 64, offset: 896)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64, align: 64)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !22, line: 298, baseType: !220)
!220 = !DICompositeType(tag: DW_TAG_structure_type, file: !22, line: 294, size: 192, align: 64, elements: !221)
!221 = !{!222, !223, !224}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !220, file: !22, line: 295, baseType: !192, size: 64, align: 64)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !220, file: !22, line: 296, baseType: !140, size: 64, align: 64, offset: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !220, file: !22, line: 297, baseType: !225, size: 64, align: 64, offset: 128)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !22, line: 174, baseType: !226)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64, align: 64)
!227 = !DISubroutineType(types: !228)
!228 = !{!59, !20, !20, !20}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !35, file: !22, line: 356, baseType: !230, size: 64, align: 64, offset: 960)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !22, line: 321, baseType: !231)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64, align: 64)
!232 = !DISubroutineType(types: !233)
!233 = !{!234, !20}
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !27, line: 186, baseType: !26)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !35, file: !22, line: 357, baseType: !149, size: 64, align: 64, offset: 1024)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !35, file: !22, line: 358, baseType: !130, size: 64, align: 64, offset: 1088)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !35, file: !22, line: 359, baseType: !238, size: 64, align: 64, offset: 1152)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !22, line: 317, baseType: !141)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !35, file: !22, line: 360, baseType: !240, size: 64, align: 64, offset: 1216)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !22, line: 319, baseType: !226)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !35, file: !22, line: 363, baseType: !242, size: 64, align: 64, offset: 1280)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64, align: 64)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !22, line: 304, baseType: !244)
!244 = !DICompositeType(tag: DW_TAG_structure_type, file: !22, line: 301, size: 128, align: 64, elements: !245)
!245 = !{!246, !267}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !244, file: !22, line: 302, baseType: !247, size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !22, line: 193, baseType: !248)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64, align: 64)
!249 = !DISubroutineType(types: !250)
!250 = !{!59, !20, !251, !59}
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64, align: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !22, line: 191, baseType: !253)
!253 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !22, line: 178, size: 640, align: 64, elements: !254)
!254 = !{!255, !256, !257, !258, !259, !260, !261, !262, !264, !265, !266}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !253, file: !22, line: 179, baseType: !105, size: 64, align: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !253, file: !22, line: 180, baseType: !20, size: 64, align: 64, offset: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !253, file: !22, line: 181, baseType: !26, size: 64, align: 64, offset: 128)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !253, file: !22, line: 182, baseType: !26, size: 64, align: 64, offset: 192)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !253, file: !22, line: 184, baseType: !59, size: 32, align: 32, offset: 256)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !253, file: !22, line: 185, baseType: !59, size: 32, align: 32, offset: 288)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !253, file: !22, line: 186, baseType: !67, size: 64, align: 64, offset: 320)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !253, file: !22, line: 187, baseType: !263, size: 64, align: 64, offset: 384)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64, align: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !253, file: !22, line: 188, baseType: !263, size: 64, align: 64, offset: 448)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !253, file: !22, line: 189, baseType: !263, size: 64, align: 64, offset: 512)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !253, file: !22, line: 190, baseType: !105, size: 64, align: 64, offset: 576)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !244, file: !22, line: 303, baseType: !268, size: 64, align: 64, offset: 64)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !22, line: 194, baseType: !269)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64, align: 64)
!270 = !DISubroutineType(types: !271)
!271 = !{null, !20, !251}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !35, file: !22, line: 366, baseType: !112, size: 64, align: 64, offset: 1344)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !35, file: !22, line: 368, baseType: !44, size: 64, align: 64, offset: 1408)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !35, file: !22, line: 372, baseType: !275, size: 64, align: 64, offset: 1472)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !22, line: 233, baseType: !276)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64, align: 64)
!277 = !DISubroutineType(types: !278)
!278 = !{!59, !20, !279, !105}
!279 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !22, line: 232, baseType: !280)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64, align: 64)
!281 = !DISubroutineType(types: !282)
!282 = !{!59, !20, !105}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !35, file: !22, line: 375, baseType: !158, size: 64, align: 64, offset: 1536)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !35, file: !22, line: 379, baseType: !285, size: 64, align: 64, offset: 1600)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !22, line: 322, baseType: !286)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64, align: 64)
!287 = !DISubroutineType(types: !288)
!288 = !{!20, !20, !20, !59}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !35, file: !22, line: 382, baseType: !26, size: 64, align: 64, offset: 1664)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !35, file: !22, line: 385, baseType: !291, size: 64, align: 64, offset: 1728)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !22, line: 323, baseType: !131)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !35, file: !22, line: 386, baseType: !293, size: 64, align: 64, offset: 1792)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !22, line: 324, baseType: !131)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !35, file: !22, line: 389, baseType: !295, size: 64, align: 64, offset: 1856)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64, align: 64)
!296 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !297, line: 40, size: 256, align: 64, elements: !298)
!297 = !DIFile(filename: "./Include/methodobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!298 = !{!299, !300, !302, !303}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !296, file: !297, line: 41, baseType: !44, size: 64, align: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !296, file: !297, line: 42, baseType: !301, size: 64, align: 64, offset: 64)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !297, line: 18, baseType: !141)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !296, file: !297, line: 43, baseType: !59, size: 32, align: 32, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !296, file: !297, line: 45, baseType: !44, size: 64, align: 64, offset: 192)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !35, file: !22, line: 390, baseType: !305, size: 64, align: 64, offset: 1920)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64, align: 64)
!306 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !307, line: 18, size: 320, align: 64, elements: !308)
!307 = !DIFile(filename: "./Include/structmember.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!308 = !{!309, !310, !311, !312, !313}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !306, file: !307, line: 19, baseType: !67, size: 64, align: 64)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !306, file: !307, line: 20, baseType: !59, size: 32, align: 32, offset: 64)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !306, file: !307, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !306, file: !307, line: 22, baseType: !59, size: 32, align: 32, offset: 192)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !306, file: !307, line: 23, baseType: !67, size: 64, align: 64, offset: 256)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !35, file: !22, line: 391, baseType: !315, size: 64, align: 64, offset: 1984)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64, align: 64)
!316 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !317, line: 11, size: 320, align: 64, elements: !318)
!317 = !DIFile(filename: "./Include/descrobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!318 = !{!319, !320, !325, !330, !331}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !316, file: !317, line: 12, baseType: !67, size: 64, align: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !316, file: !317, line: 13, baseType: !321, size: 64, align: 64, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !317, line: 8, baseType: !322)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64, align: 64)
!323 = !DISubroutineType(types: !324)
!324 = !{!20, !20, !105}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !316, file: !317, line: 14, baseType: !326, size: 64, align: 64, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !317, line: 9, baseType: !327)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64, align: 64)
!328 = !DISubroutineType(types: !329)
!329 = !{!59, !20, !20, !105}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !316, file: !317, line: 15, baseType: !67, size: 64, align: 64, offset: 192)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !316, file: !317, line: 16, baseType: !105, size: 64, align: 64, offset: 256)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !35, file: !22, line: 392, baseType: !34, size: 64, align: 64, offset: 2048)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !35, file: !22, line: 393, baseType: !20, size: 64, align: 64, offset: 2112)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !35, file: !22, line: 394, baseType: !335, size: 64, align: 64, offset: 2176)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !22, line: 325, baseType: !150)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !35, file: !22, line: 395, baseType: !337, size: 64, align: 64, offset: 2240)
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !22, line: 326, baseType: !226)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !35, file: !22, line: 396, baseType: !26, size: 64, align: 64, offset: 2304)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !35, file: !22, line: 397, baseType: !340, size: 64, align: 64, offset: 2368)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !22, line: 327, baseType: !226)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !35, file: !22, line: 398, baseType: !342, size: 64, align: 64, offset: 2432)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !22, line: 329, baseType: !343)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64, align: 64)
!344 = !DISubroutineType(types: !345)
!345 = !{!20, !34, !26}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !35, file: !22, line: 399, baseType: !347, size: 64, align: 64, offset: 2496)
!347 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !22, line: 328, baseType: !348)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64, align: 64)
!349 = !DISubroutineType(types: !350)
!350 = !{!20, !34, !20, !20}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !35, file: !22, line: 400, baseType: !352, size: 64, align: 64, offset: 2560)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !22, line: 307, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64, align: 64)
!354 = !DISubroutineType(types: !355)
!355 = !{null, !105}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !35, file: !22, line: 401, baseType: !158, size: 64, align: 64, offset: 2624)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !35, file: !22, line: 402, baseType: !20, size: 64, align: 64, offset: 2688)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !35, file: !22, line: 403, baseType: !20, size: 64, align: 64, offset: 2752)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !35, file: !22, line: 404, baseType: !20, size: 64, align: 64, offset: 2816)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !35, file: !22, line: 405, baseType: !20, size: 64, align: 64, offset: 2880)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !35, file: !22, line: 406, baseType: !20, size: 64, align: 64, offset: 2944)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !35, file: !22, line: 407, baseType: !50, size: 64, align: 64, offset: 3008)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !35, file: !22, line: 410, baseType: !364, size: 32, align: 32, offset: 3072)
!364 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !35, file: !22, line: 412, baseType: !50, size: 64, align: 64, offset: 3136)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64, align: 64)
!367 = !DIDerivedType(tag: DW_TAG_typedef, name: "DictRemoverObject", file: !368, line: 143, baseType: !369)
!368 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_ctypes/_ctypes.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!369 = !DICompositeType(tag: DW_TAG_structure_type, file: !368, line: 139, size: 256, align: 64, elements: !370)
!370 = !{!371, !372, !373}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !369, file: !368, line: 140, baseType: !21, size: 128, align: 64)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !369, file: !368, line: 141, baseType: !20, size: 64, align: 64, offset: 128)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !369, file: !368, line: 142, baseType: !20, size: 64, align: 64, offset: 192)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64, align: 64)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyWeakReference", file: !376, line: 10, baseType: !377)
!376 = !DIFile(filename: "./Include/weakrefobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!377 = !DICompositeType(tag: DW_TAG_structure_type, name: "_PyWeakReference", file: !376, line: 16, size: 448, align: 64, elements: !378)
!378 = !{!379, !380, !381, !382, !383, !384}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !377, file: !376, line: 17, baseType: !21, size: 128, align: 64)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "wr_object", scope: !377, file: !376, line: 23, baseType: !20, size: 64, align: 64, offset: 128)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "wr_callback", scope: !377, file: !376, line: 26, baseType: !20, size: 64, align: 64, offset: 192)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !377, file: !376, line: 31, baseType: !234, size: 64, align: 64, offset: 256)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "wr_prev", scope: !377, file: !376, line: 38, baseType: !374, size: 64, align: 64, offset: 320)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "wr_next", scope: !377, file: !376, line: 39, baseType: !374, size: 64, align: 64, offset: 384)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64, align: 64)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "CDataObject", file: !387, line: 15, baseType: !388)
!387 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_ctypes/ctypes.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!388 = !DICompositeType(tag: DW_TAG_structure_type, name: "tagCDataObject", file: !387, line: 46, size: 768, align: 128, elements: !389)
!389 = !{!390, !391, !392, !393, !394, !395, !396, !397, !398}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !388, file: !387, line: 47, baseType: !21, size: 128, align: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "b_ptr", scope: !388, file: !387, line: 48, baseType: !67, size: 64, align: 64, offset: 128)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "b_needsfree", scope: !388, file: !387, line: 49, baseType: !59, size: 32, align: 32, offset: 192)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "b_base", scope: !388, file: !387, line: 50, baseType: !385, size: 64, align: 64, offset: 256)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "b_size", scope: !388, file: !387, line: 51, baseType: !26, size: 64, align: 64, offset: 320)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "b_length", scope: !388, file: !387, line: 52, baseType: !26, size: 64, align: 64, offset: 384)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "b_index", scope: !388, file: !387, line: 53, baseType: !26, size: 64, align: 64, offset: 448)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "b_objects", scope: !388, file: !387, line: 55, baseType: !20, size: 64, align: 64, offset: 512)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "b_value", scope: !388, file: !387, line: 56, baseType: !399, size: 128, align: 128, offset: 640)
!399 = !DICompositeType(tag: DW_TAG_union_type, name: "value", file: !387, line: 27, size: 128, align: 128, elements: !400)
!400 = !{!401, !405, !407, !408, !409, !411, !413, !415}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !399, file: !387, line: 28, baseType: !402, size: 128, align: 8)
!402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 128, align: 8, elements: !403)
!403 = !{!404}
!404 = !DISubrange(count: 16)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !399, file: !387, line: 29, baseType: !406, size: 16, align: 16)
!406 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !399, file: !387, line: 30, baseType: !59, size: 32, align: 32)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !399, file: !387, line: 31, baseType: !32, size: 64, align: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !399, file: !387, line: 32, baseType: !410, size: 32, align: 32)
!410 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !399, file: !387, line: 33, baseType: !412, size: 64, align: 64)
!412 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "ll", scope: !399, file: !387, line: 35, baseType: !414, size: 64, align: 64)
!414 = !DIBasicType(name: "long long int", size: 64, align: 64, encoding: DW_ATE_signed)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "D", scope: !399, file: !387, line: 37, baseType: !416, size: 128, align: 128)
!416 = !DIBasicType(name: "long double", size: 128, align: 128, encoding: DW_ATE_float)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64, align: 64)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !22, line: 422, baseType: !35)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64, align: 64)
!420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64, align: 64)
!422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !423)
!423 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64, align: 64)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCArgObject", file: !387, line: 14, baseType: !426)
!426 = !DICompositeType(tag: DW_TAG_structure_type, name: "tagPyCArgObject", file: !387, line: 296, size: 512, align: 128, elements: !427)
!427 = !{!428, !429, !441, !442, !455, !456}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !426, file: !387, line: 297, baseType: !21, size: 128, align: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "pffi_type", scope: !426, file: !387, line: 298, baseType: !430, size: 64, align: 64, offset: 128)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64, align: 64)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "ffi_type", file: !432, line: 118, baseType: !433)
!432 = !DIFile(filename: "build/temp.linux-x86_64-3.4/libffi/include/ffi.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!433 = !DICompositeType(tag: DW_TAG_structure_type, name: "_ffi_type", file: !432, line: 112, size: 192, align: 64, elements: !434)
!434 = !{!435, !436, !437, !438}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !433, file: !432, line: 114, baseType: !110, size: 64, align: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !433, file: !432, line: 115, baseType: !92, size: 16, align: 16, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !433, file: !432, line: 116, baseType: !92, size: 16, align: 16, offset: 80)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !433, file: !432, line: 117, baseType: !439, size: 64, align: 64, offset: 128)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64, align: 64)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64, align: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !426, file: !387, line: 299, baseType: !46, size: 8, align: 8, offset: 192)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !426, file: !387, line: 313, baseType: !443, size: 128, align: 128, offset: 256)
!443 = !DICompositeType(tag: DW_TAG_union_type, scope: !426, file: !387, line: 300, size: 128, align: 128, elements: !444)
!444 = !{!445, !446, !447, !448, !449, !450, !451, !452, !453, !454}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !443, file: !387, line: 301, baseType: !46, size: 8, align: 8)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !443, file: !387, line: 302, baseType: !46, size: 8, align: 8)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !443, file: !387, line: 303, baseType: !406, size: 16, align: 16)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !443, file: !387, line: 304, baseType: !59, size: 32, align: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !443, file: !387, line: 305, baseType: !32, size: 64, align: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !443, file: !387, line: 307, baseType: !414, size: 64, align: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "D", scope: !443, file: !387, line: 309, baseType: !416, size: 128, align: 128)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !443, file: !387, line: 310, baseType: !412, size: 64, align: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !443, file: !387, line: 311, baseType: !410, size: 32, align: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !443, file: !387, line: 312, baseType: !105, size: 64, align: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !426, file: !387, line: 314, baseType: !20, size: 64, align: 64, offset: 384)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !426, file: !387, line: 315, baseType: !26, size: 64, align: 64, offset: 448)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64, align: 64)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64, align: 64)
!459 = !DIDerivedType(tag: DW_TAG_typedef, name: "StgDictObject", file: !387, line: 220, baseType: !460)
!460 = !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 187, size: 1472, align: 64, elements: !461)
!461 = !{!462, !475, !476, !477, !478, !479, !480, !485, !490, !495, !496, !497, !498, !499, !500, !501, !502}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !460, file: !387, line: 188, baseType: !463, size: 320, align: 64)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDictObject", file: !464, line: 28, baseType: !465)
!464 = !DIFile(filename: "./Include/dictobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!465 = !DICompositeType(tag: DW_TAG_structure_type, file: !464, line: 23, size: 320, align: 64, elements: !466)
!466 = !{!467, !468, !469, !473}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !465, file: !464, line: 24, baseType: !21, size: 128, align: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "ma_used", scope: !465, file: !464, line: 25, baseType: !26, size: 64, align: 64, offset: 128)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "ma_keys", scope: !465, file: !464, line: 26, baseType: !470, size: 64, align: 64, offset: 192)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64, align: 64)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDictKeysObject", file: !464, line: 18, baseType: !472)
!472 = !DICompositeType(tag: DW_TAG_structure_type, name: "_dictkeysobject", file: !22, line: 461, flags: DIFlagFwdDecl)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "ma_values", scope: !465, file: !464, line: 27, baseType: !474, size: 64, align: 64, offset: 256)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64, align: 64)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !460, file: !387, line: 197, baseType: !26, size: 64, align: 64, offset: 320)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !460, file: !387, line: 198, baseType: !26, size: 64, align: 64, offset: 384)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !460, file: !387, line: 199, baseType: !26, size: 64, align: 64, offset: 448)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "ffi_type_pointer", scope: !460, file: !387, line: 200, baseType: !431, size: 192, align: 64, offset: 512)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !460, file: !387, line: 201, baseType: !20, size: 64, align: 64, offset: 704)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "setfunc", scope: !460, file: !387, line: 202, baseType: !481, size: 64, align: 64, offset: 768)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "SETFUNC", file: !387, line: 17, baseType: !482)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64, align: 64)
!483 = !DISubroutineType(types: !484)
!484 = !{!20, !105, !20, !26}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "getfunc", scope: !460, file: !387, line: 203, baseType: !486, size: 64, align: 64, offset: 832)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "GETFUNC", file: !387, line: 16, baseType: !487)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64, align: 64)
!488 = !DISubroutineType(types: !489)
!489 = !{!20, !105, !26}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "paramfunc", scope: !460, file: !387, line: 204, baseType: !491, size: 64, align: 64, offset: 896)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "PARAMFUNC", file: !387, line: 18, baseType: !492)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64, align: 64)
!493 = !DISubroutineType(types: !494)
!494 = !{!424, !385}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "argtypes", scope: !460, file: !387, line: 207, baseType: !20, size: 64, align: 64, offset: 960)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "converters", scope: !460, file: !387, line: 208, baseType: !20, size: 64, align: 64, offset: 1024)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "restype", scope: !460, file: !387, line: 209, baseType: !20, size: 64, align: 64, offset: 1088)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "checker", scope: !460, file: !387, line: 210, baseType: !20, size: 64, align: 64, offset: 1152)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !460, file: !387, line: 211, baseType: !59, size: 32, align: 32, offset: 1216)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !460, file: !387, line: 214, baseType: !67, size: 64, align: 64, offset: 1280)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !460, file: !387, line: 215, baseType: !59, size: 32, align: 32, offset: 1344)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !460, file: !387, line: 216, baseType: !263, size: 64, align: 64, offset: 1408)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64, align: 64)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64, align: 64)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64, align: 64)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBytesObject", file: !507, line: 41, baseType: !508)
!507 = !DIFile(filename: "./Include/bytesobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!508 = !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 31, size: 320, align: 64, elements: !509)
!509 = !{!510, !511, !512}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !508, file: !507, line: 32, baseType: !38, size: 192, align: 64)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "ob_shash", scope: !508, file: !507, line: 33, baseType: !234, size: 64, align: 64, offset: 192)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "ob_sval", scope: !508, file: !507, line: 34, baseType: !96, size: 8, align: 8, offset: 256)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64, align: 64)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !111, line: 90, baseType: !59)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64, align: 64)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyThreadState", file: !517, line: 139, baseType: !518)
!517 = !DIFile(filename: "./Include/pystate.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!518 = !DICompositeType(tag: DW_TAG_structure_type, name: "_ts", file: !517, line: 69, size: 1536, align: 64, elements: !519)
!519 = !{!520, !522, !523, !543, !546, !547, !548, !549, !550, !551, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !518, file: !517, line: 72, baseType: !521, size: 64, align: 64)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64, align: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !518, file: !517, line: 73, baseType: !521, size: 64, align: 64, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "interp", scope: !518, file: !517, line: 74, baseType: !524, size: 64, align: 64, offset: 128)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64, align: 64)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyInterpreterState", file: !517, line: 44, baseType: !526)
!526 = !DICompositeType(tag: DW_TAG_structure_type, name: "_is", file: !517, line: 19, size: 832, align: 64, elements: !527)
!527 = !{!528, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !526, file: !517, line: 21, baseType: !529, size: 64, align: 64)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64, align: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "tstate_head", scope: !526, file: !517, line: 22, baseType: !521, size: 64, align: 64, offset: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "modules", scope: !526, file: !517, line: 24, baseType: !20, size: 64, align: 64, offset: 128)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "modules_by_index", scope: !526, file: !517, line: 25, baseType: !20, size: 64, align: 64, offset: 192)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "sysdict", scope: !526, file: !517, line: 26, baseType: !20, size: 64, align: 64, offset: 256)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "builtins", scope: !526, file: !517, line: 27, baseType: !20, size: 64, align: 64, offset: 320)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "importlib", scope: !526, file: !517, line: 28, baseType: !20, size: 64, align: 64, offset: 384)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "codec_search_path", scope: !526, file: !517, line: 30, baseType: !20, size: 64, align: 64, offset: 448)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "codec_search_cache", scope: !526, file: !517, line: 31, baseType: !20, size: 64, align: 64, offset: 512)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "codec_error_registry", scope: !526, file: !517, line: 32, baseType: !20, size: 64, align: 64, offset: 576)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "codecs_initialized", scope: !526, file: !517, line: 33, baseType: !59, size: 32, align: 32, offset: 640)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "fscodec_initialized", scope: !526, file: !517, line: 34, baseType: !59, size: 32, align: 32, offset: 672)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "dlopenflags", scope: !526, file: !517, line: 37, baseType: !59, size: 32, align: 32, offset: 704)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "builtins_copy", scope: !526, file: !517, line: 43, baseType: !20, size: 64, align: 64, offset: 768)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !518, file: !517, line: 76, baseType: !544, size: 64, align: 64, offset: 192)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64, align: 64)
!545 = !DICompositeType(tag: DW_TAG_structure_type, name: "_frame", file: !517, line: 50, flags: DIFlagFwdDecl)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_depth", scope: !518, file: !517, line: 77, baseType: !59, size: 32, align: 32, offset: 256)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "overflowed", scope: !518, file: !517, line: 78, baseType: !46, size: 8, align: 8, offset: 288)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_critical", scope: !518, file: !517, line: 80, baseType: !46, size: 8, align: 8, offset: 296)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "tracing", scope: !518, file: !517, line: 85, baseType: !59, size: 32, align: 32, offset: 320)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "use_tracing", scope: !518, file: !517, line: 86, baseType: !59, size: 32, align: 32, offset: 352)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "c_profilefunc", scope: !518, file: !517, line: 88, baseType: !552, size: 64, align: 64, offset: 384)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_tracefunc", file: !517, line: 54, baseType: !553)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64, align: 64)
!554 = !DISubroutineType(types: !555)
!555 = !{!59, !20, !544, !59, !20}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "c_tracefunc", scope: !518, file: !517, line: 89, baseType: !552, size: 64, align: 64, offset: 448)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "c_profileobj", scope: !518, file: !517, line: 90, baseType: !20, size: 64, align: 64, offset: 512)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "c_traceobj", scope: !518, file: !517, line: 91, baseType: !20, size: 64, align: 64, offset: 576)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_type", scope: !518, file: !517, line: 93, baseType: !20, size: 64, align: 64, offset: 640)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_value", scope: !518, file: !517, line: 94, baseType: !20, size: 64, align: 64, offset: 704)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_traceback", scope: !518, file: !517, line: 95, baseType: !20, size: 64, align: 64, offset: 768)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "exc_type", scope: !518, file: !517, line: 97, baseType: !20, size: 64, align: 64, offset: 832)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "exc_value", scope: !518, file: !517, line: 98, baseType: !20, size: 64, align: 64, offset: 896)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "exc_traceback", scope: !518, file: !517, line: 99, baseType: !20, size: 64, align: 64, offset: 960)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !518, file: !517, line: 101, baseType: !20, size: 64, align: 64, offset: 1024)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "gilstate_counter", scope: !518, file: !517, line: 103, baseType: !59, size: 32, align: 32, offset: 1088)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "async_exc", scope: !518, file: !517, line: 105, baseType: !20, size: 64, align: 64, offset: 1152)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "thread_id", scope: !518, file: !517, line: 106, baseType: !32, size: 64, align: 64, offset: 1216)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_nesting", scope: !518, file: !517, line: 108, baseType: !59, size: 32, align: 32, offset: 1280)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_later", scope: !518, file: !517, line: 109, baseType: !20, size: 64, align: 64, offset: 1344)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete", scope: !518, file: !517, line: 134, baseType: !353, size: 64, align: 64, offset: 1408)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete_data", scope: !518, file: !517, line: 135, baseType: !105, size: 64, align: 64, offset: 1472)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64, align: 64)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFuncPtrObject", file: !387, line: 104, baseType: !575)
!575 = !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 75, size: 1280, align: 128, elements: !576)
!576 = !{!577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !629, !630, !631, !632, !633, !634, !635}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !575, file: !387, line: 77, baseType: !21, size: 128, align: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "b_ptr", scope: !575, file: !387, line: 78, baseType: !67, size: 64, align: 64, offset: 128)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "b_needsfree", scope: !575, file: !387, line: 79, baseType: !59, size: 32, align: 32, offset: 192)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "b_base", scope: !575, file: !387, line: 80, baseType: !385, size: 64, align: 64, offset: 256)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "b_size", scope: !575, file: !387, line: 81, baseType: !26, size: 64, align: 64, offset: 320)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "b_length", scope: !575, file: !387, line: 82, baseType: !26, size: 64, align: 64, offset: 384)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "b_index", scope: !575, file: !387, line: 83, baseType: !26, size: 64, align: 64, offset: 448)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "b_objects", scope: !575, file: !387, line: 85, baseType: !20, size: 64, align: 64, offset: 512)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "b_value", scope: !575, file: !387, line: 86, baseType: !399, size: 128, align: 128, offset: 640)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "thunk", scope: !575, file: !387, line: 89, baseType: !587, size: 64, align: 64, offset: 768)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64, align: 64)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "CThunkObject", file: !387, line: 71, baseType: !589)
!589 = !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 59, size: 1024, align: 64, elements: !590)
!590 = !{!591, !592, !619, !620, !621, !622, !623, !624, !625, !626, !627}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !589, file: !387, line: 60, baseType: !38, size: 192, align: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "pcl_write", scope: !589, file: !387, line: 61, baseType: !593, size: 64, align: 64, offset: 192)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64, align: 64)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "ffi_closure", file: !432, line: 310, baseType: !595)
!595 = !DICompositeType(tag: DW_TAG_structure_type, file: !432, line: 299, size: 384, align: 64, elements: !596)
!596 = !{!597, !601, !614, !618}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "tramp", scope: !595, file: !432, line: 304, baseType: !598, size: 192, align: 8)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 192, align: 8, elements: !599)
!599 = !{!600}
!600 = !DISubrange(count: 24)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "cif", scope: !595, file: !432, line: 306, baseType: !602, size: 64, align: 64, offset: 192)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64, align: 64)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "ffi_cif", file: !432, line: 222, baseType: !604)
!604 = !DICompositeType(tag: DW_TAG_structure_type, file: !432, line: 212, size: 256, align: 64, elements: !605)
!605 = !{!606, !608, !609, !611, !612, !613}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "abi", scope: !604, file: !432, line: 213, baseType: !607, size: 32, align: 32)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "ffi_abi", file: !12, line: 108, baseType: !11)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !604, file: !432, line: 214, baseType: !364, size: 32, align: 32, offset: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "arg_types", scope: !604, file: !432, line: 215, baseType: !610, size: 64, align: 64, offset: 64)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64, align: 64)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "rtype", scope: !604, file: !432, line: 216, baseType: !430, size: 64, align: 64, offset: 128)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !604, file: !432, line: 217, baseType: !364, size: 32, align: 32, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !604, file: !432, line: 218, baseType: !364, size: 32, align: 32, offset: 224)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "fun", scope: !595, file: !432, line: 307, baseType: !615, size: 64, align: 64, offset: 256)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64, align: 64)
!616 = !DISubroutineType(types: !617)
!617 = !{null, !602, !105, !503, !105}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !595, file: !432, line: 308, baseType: !105, size: 64, align: 64, offset: 320)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "pcl_exec", scope: !589, file: !387, line: 62, baseType: !105, size: 64, align: 64, offset: 256)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "cif", scope: !589, file: !387, line: 63, baseType: !603, size: 256, align: 64, offset: 320)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !589, file: !387, line: 64, baseType: !59, size: 32, align: 32, offset: 576)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "converters", scope: !589, file: !387, line: 65, baseType: !20, size: 64, align: 64, offset: 640)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "callable", scope: !589, file: !387, line: 66, baseType: !20, size: 64, align: 64, offset: 704)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "restype", scope: !589, file: !387, line: 67, baseType: !20, size: 64, align: 64, offset: 768)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "setfunc", scope: !589, file: !387, line: 68, baseType: !481, size: 64, align: 64, offset: 832)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ffi_restype", scope: !589, file: !387, line: 69, baseType: !430, size: 64, align: 64, offset: 896)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "atypes", scope: !589, file: !387, line: 70, baseType: !628, size: 64, align: 64, offset: 960)
!628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, size: 64, align: 64, elements: !97)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "callable", scope: !575, file: !387, line: 90, baseType: !20, size: 64, align: 64, offset: 832)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "converters", scope: !575, file: !387, line: 94, baseType: !20, size: 64, align: 64, offset: 896)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "argtypes", scope: !575, file: !387, line: 95, baseType: !20, size: 64, align: 64, offset: 960)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "restype", scope: !575, file: !387, line: 96, baseType: !20, size: 64, align: 64, offset: 1024)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "checker", scope: !575, file: !387, line: 97, baseType: !20, size: 64, align: 64, offset: 1088)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "errcheck", scope: !575, file: !387, line: 98, baseType: !20, size: 64, align: 64, offset: 1152)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "paramflags", scope: !575, file: !387, line: 103, baseType: !20, size: 64, align: 64, offset: 1216)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64, align: 64)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !638, line: 33, baseType: !639)
!638 = !DIFile(filename: "./Include/tupleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!639 = !DICompositeType(tag: DW_TAG_structure_type, file: !638, line: 25, size: 256, align: 64, elements: !640)
!640 = !{!641, !642}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !639, file: !638, line: 26, baseType: !38, size: 192, align: 64)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !639, file: !638, line: 27, baseType: !643, size: 64, align: 64, offset: 192)
!643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 64, align: 64, elements: !97)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "PPROC", file: !387, line: 270, baseType: !645)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64, align: 64)
!646 = !DISubroutineType(types: !647)
!647 = !{!59}
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64, align: 64)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyListObject", file: !650, line: 40, baseType: !651)
!650 = !DIFile(filename: "./Include/listobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!651 = !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 23, size: 320, align: 64, elements: !652)
!652 = !{!653, !654, !655}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !651, file: !650, line: 24, baseType: !38, size: 192, align: 64)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !651, file: !650, line: 26, baseType: !474, size: 64, align: 64, offset: 192)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !651, file: !650, line: 39, baseType: !26, size: 64, align: 64, offset: 256)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64, align: 64)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64, align: 64)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySliceObject", file: !659, line: 25, baseType: !660)
!659 = !DIFile(filename: "./Include/sliceobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!660 = !DICompositeType(tag: DW_TAG_structure_type, file: !659, line: 22, size: 320, align: 64, elements: !661)
!661 = !{!662, !663, !664, !665}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !660, file: !659, line: 23, baseType: !21, size: 128, align: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !660, file: !659, line: 24, baseType: !20, size: 64, align: 64, offset: 128)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !660, file: !659, line: 24, baseType: !20, size: 64, align: 64, offset: 192)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !660, file: !659, line: 24, baseType: !20, size: 64, align: 64, offset: 256)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64, align: 64)
!667 = !{!668, !681, !687, !695, !713, !729, !735, !739, !750, !763, !796, !801, !815, !835, !839, !851, !864, !877, !893, !898, !908, !918, !933, !940, !978, !983, !991, !999, !1006, !1017, !1050, !1054, !1095, !1099, !1114, !1119, !1128, !1133, !1145, !1150, !1162, !1216, !1225, !1230, !1233, !1301, !1308, !1334, !1360, !1413, !1442, !1469, !1473, !1485, !1505, !1508, !1511, !1519, !1534, !1551, !1555, !1560, !1572, !1578, !1604, !1608, !1613, !1646, !1655, !1660, !1665, !1670, !1714, !1745, !1755, !1798, !1837, !1888, !1891, !1904, !1908, !1936, !1940, !1970, !1991, !2036, !2042, !2060, !2067, !2071, !2079, !2089, !2125, !2150, !2163, !2174, !2181, !2185, !2188, !2192, !2198, !2204, !2207, !2217, !2228, !2261, !2268, !2281, !2287, !2293, !2305, !2310, !2323, !2357, !2363, !2389, !2393}
!668 = !DISubprogram(name: "PyDict_SetItemProxy", scope: !368, file: !368, line: 213, type: !227, isLocal: false, isDefinition: true, scopeLine: 214, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @PyDict_SetItemProxy, variables: !669)
!669 = !{!670, !671, !672, !673, !674, !675, !676, !677, !679}
!670 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dict", arg: 1, scope: !668, file: !368, line: 213, type: !20)
!671 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 2, scope: !668, file: !368, line: 213, type: !20)
!672 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 3, scope: !668, file: !368, line: 213, type: !20)
!673 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !668, file: !368, line: 215, type: !20)
!674 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "remover", scope: !668, file: !368, line: 216, type: !366)
!675 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "proxy", scope: !668, file: !368, line: 217, type: !20)
!676 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !668, file: !368, line: 218, type: !59)
!677 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !678, file: !368, line: 233, type: !20)
!678 = distinct !DILexicalBlock(scope: !668, file: !368, line: 233, column: 8)
!679 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !680, file: !368, line: 238, type: !20)
!680 = distinct !DILexicalBlock(scope: !668, file: !368, line: 238, column: 8)
!681 = !DISubprogram(name: "PyDict_GetItemProxy", scope: !368, file: !368, line: 243, type: !142, isLocal: false, isDefinition: true, scopeLine: 244, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @PyDict_GetItemProxy, variables: !682)
!682 = !{!683, !684, !685, !686}
!683 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dict", arg: 1, scope: !681, file: !368, line: 243, type: !20)
!684 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 2, scope: !681, file: !368, line: 243, type: !20)
!685 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !681, file: !368, line: 245, type: !20)
!686 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !681, file: !368, line: 246, type: !20)
!687 = !DISubprogram(name: "_ctypes_alloc_format_string", scope: !368, file: !368, line: 266, type: !688, isLocal: false, isDefinition: true, scopeLine: 267, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*, i8*)* @_ctypes_alloc_format_string, variables: !690)
!688 = !DISubroutineType(types: !689)
!689 = !{!67, !44, !44}
!690 = !{!691, !692, !693, !694}
!691 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "prefix", arg: 1, scope: !687, file: !368, line: 266, type: !44)
!692 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "suffix", arg: 2, scope: !687, file: !368, line: 266, type: !44)
!693 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !687, file: !368, line: 268, type: !110)
!694 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !687, file: !368, line: 269, type: !67)
!695 = !DISubprogram(name: "_ctypes_alloc_format_string_with_shape", scope: !368, file: !368, line: 298, type: !696, isLocal: false, isDefinition: true, scopeLine: 300, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i32, i64*, i8*, i8*)* @_ctypes_alloc_format_string_with_shape, variables: !700)
!696 = !DISubroutineType(types: !697)
!697 = !{!67, !59, !698, !44, !44}
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64, align: 64)
!699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!700 = !{!701, !702, !703, !704, !705, !706, !707, !711, !712}
!701 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndim", arg: 1, scope: !695, file: !368, line: 298, type: !59)
!702 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "shape", arg: 2, scope: !695, file: !368, line: 298, type: !698)
!703 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "prefix", arg: 3, scope: !695, file: !368, line: 299, type: !44)
!704 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "suffix", arg: 4, scope: !695, file: !368, line: 299, type: !44)
!705 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_prefix", scope: !695, file: !368, line: 301, type: !67)
!706 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !695, file: !368, line: 302, type: !67)
!707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !695, file: !368, line: 303, type: !708)
!708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 256, align: 8, elements: !709)
!709 = !{!710}
!710 = !DISubrange(count: 32)
!711 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prefix_len", scope: !695, file: !368, line: 304, type: !59)
!712 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !695, file: !368, line: 305, type: !59)
!713 = !DISubprogram(name: "PyCData_FromBaseObj", scope: !368, file: !368, line: 2683, type: !714, isLocal: false, isDefinition: true, scopeLine: 2684, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, i64, i8*)* @PyCData_FromBaseObj, variables: !716)
!714 = !DISubroutineType(types: !715)
!715 = !{!20, !20, !20, !26, !67}
!716 = !{!717, !718, !719, !720, !721, !722, !723}
!717 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !713, file: !368, line: 2683, type: !20)
!718 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "base", arg: 2, scope: !713, file: !368, line: 2683, type: !20)
!719 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 3, scope: !713, file: !368, line: 2683, type: !26)
!720 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "adr", arg: 4, scope: !713, file: !368, line: 2683, type: !67)
!721 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cmem", scope: !713, file: !368, line: 2685, type: !385)
!722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !713, file: !368, line: 2686, type: !458)
!723 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !724, file: !368, line: 2712, type: !20)
!724 = distinct !DILexicalBlock(scope: !725, file: !368, line: 2712, column: 16)
!725 = distinct !DILexicalBlock(scope: !726, file: !368, line: 2711, column: 53)
!726 = distinct !DILexicalBlock(scope: !727, file: !368, line: 2711, column: 13)
!727 = distinct !DILexicalBlock(scope: !728, file: !368, line: 2710, column: 12)
!728 = distinct !DILexicalBlock(scope: !713, file: !368, line: 2703, column: 9)
!729 = !DISubprogram(name: "PyCData_AtAddress", scope: !368, file: !368, line: 2725, type: !323, isLocal: false, isDefinition: true, scopeLine: 2726, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i8*)* @PyCData_AtAddress, variables: !730)
!730 = !{!731, !732, !733, !734}
!731 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !729, file: !368, line: 2725, type: !20)
!732 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 2, scope: !729, file: !368, line: 2725, type: !105)
!733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pd", scope: !729, file: !368, line: 2727, type: !385)
!734 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !729, file: !368, line: 2728, type: !458)
!735 = !DISubprogram(name: "_ctypes_simple_instance", scope: !368, file: !368, line: 2754, type: !160, isLocal: false, isDefinition: true, scopeLine: 2755, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*)* @_ctypes_simple_instance, variables: !736)
!736 = !{!737, !738}
!737 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 1, scope: !735, file: !368, line: 2754, type: !20)
!738 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "type", scope: !735, file: !368, line: 2756, type: !417)
!739 = !DISubprogram(name: "PyCData_get", scope: !368, file: !368, line: 2764, type: !740, isLocal: false, isDefinition: true, scopeLine: 2766, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object* (i8*, i64)*, %struct._object*, i64, i64, i8*)* @PyCData_get, variables: !742)
!740 = !DISubroutineType(types: !741)
!741 = !{!20, !20, !486, !20, !26, !26, !67}
!742 = !{!743, !744, !745, !746, !747, !748, !749}
!743 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !739, file: !368, line: 2764, type: !20)
!744 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "getfunc", arg: 2, scope: !739, file: !368, line: 2764, type: !486)
!745 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 3, scope: !739, file: !368, line: 2764, type: !20)
!746 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 4, scope: !739, file: !368, line: 2765, type: !26)
!747 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 5, scope: !739, file: !368, line: 2765, type: !26)
!748 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "adr", arg: 6, scope: !739, file: !368, line: 2765, type: !67)
!749 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !739, file: !368, line: 2767, type: !458)
!750 = !DISubprogram(name: "PyCData_set", scope: !368, file: !368, line: 2889, type: !751, isLocal: false, isDefinition: true, scopeLine: 2891, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object* (i8*, %struct._object*, i64)*, %struct._object*, i64, i64, i8*)* @PyCData_set, variables: !753)
!751 = !DISubroutineType(types: !752)
!752 = !{!59, !20, !20, !481, !20, !26, !26, !67}
!753 = !{!754, !755, !756, !757, !758, !759, !760, !761, !762}
!754 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dst", arg: 1, scope: !750, file: !368, line: 2889, type: !20)
!755 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 2, scope: !750, file: !368, line: 2889, type: !20)
!756 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "setfunc", arg: 3, scope: !750, file: !368, line: 2889, type: !481)
!757 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 4, scope: !750, file: !368, line: 2889, type: !20)
!758 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 5, scope: !750, file: !368, line: 2890, type: !26)
!759 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 6, scope: !750, file: !368, line: 2890, type: !26)
!760 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 7, scope: !750, file: !368, line: 2890, type: !67)
!761 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mem", scope: !750, file: !368, line: 2892, type: !385)
!762 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !750, file: !368, line: 2893, type: !20)
!763 = !DISubprogram(name: "PyCArrayType_from_ctype", scope: !368, file: !368, line: 4513, type: !200, isLocal: false, isDefinition: true, scopeLine: 4514, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i64)* @PyCArrayType_from_ctype, variables: !764)
!764 = !{!765, !766, !767, !768, !769, !773, !774, !776, !780, !784, !788, !792, !794}
!765 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "itemtype", arg: 1, scope: !763, file: !368, line: 4513, type: !20)
!766 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "length", arg: 2, scope: !763, file: !368, line: 4513, type: !26)
!767 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key", scope: !763, file: !368, line: 4516, type: !20)
!768 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !763, file: !368, line: 4517, type: !20)
!769 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !763, file: !368, line: 4518, type: !770)
!770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 2048, align: 8, elements: !771)
!771 = !{!772}
!772 = !DISubrange(count: 256)
!773 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !763, file: !368, line: 4519, type: !20)
!774 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !775, file: !368, line: 4530, type: !20)
!775 = distinct !DILexicalBlock(scope: !763, file: !368, line: 4530, column: 8)
!776 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !777, file: !368, line: 4536, type: !20)
!777 = distinct !DILexicalBlock(scope: !778, file: !368, line: 4536, column: 12)
!778 = distinct !DILexicalBlock(scope: !779, file: !368, line: 4534, column: 17)
!779 = distinct !DILexicalBlock(scope: !763, file: !368, line: 4534, column: 9)
!780 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !781, file: !368, line: 4543, type: !20)
!781 = distinct !DILexicalBlock(scope: !782, file: !368, line: 4543, column: 12)
!782 = distinct !DILexicalBlock(scope: !783, file: !368, line: 4540, column: 83)
!783 = distinct !DILexicalBlock(scope: !763, file: !368, line: 4540, column: 9)
!784 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !785, file: !368, line: 4564, type: !20)
!785 = distinct !DILexicalBlock(scope: !786, file: !368, line: 4564, column: 12)
!786 = distinct !DILexicalBlock(scope: !787, file: !368, line: 4563, column: 31)
!787 = distinct !DILexicalBlock(scope: !763, file: !368, line: 4563, column: 9)
!788 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !789, file: !368, line: 4568, type: !20)
!789 = distinct !DILexicalBlock(scope: !790, file: !368, line: 4568, column: 12)
!790 = distinct !DILexicalBlock(scope: !791, file: !368, line: 4567, column: 56)
!791 = distinct !DILexicalBlock(scope: !763, file: !368, line: 4567, column: 9)
!792 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !793, file: !368, line: 4569, type: !20)
!793 = distinct !DILexicalBlock(scope: !790, file: !368, line: 4569, column: 12)
!794 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !795, file: !368, line: 4572, type: !20)
!795 = distinct !DILexicalBlock(scope: !763, file: !368, line: 4572, column: 8)
!796 = !DISubprogram(name: "PyInit__ctypes", scope: !368, file: !368, line: 5331, type: !797, isLocal: false, isDefinition: true, scopeLine: 5332, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* ()* @PyInit__ctypes, variables: !799)
!797 = !DISubroutineType(types: !798)
!798 = !{!20}
!799 = !{!800}
!800 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !796, file: !368, line: 5333, type: !20)
!801 = !DISubprogram(name: "_DictRemover_dealloc", scope: !368, file: !368, line: 146, type: !52, isLocal: true, isDefinition: true, scopeLine: 147, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._object*)* @_DictRemover_dealloc, variables: !802)
!802 = !{!803, !804, !805, !807, !810, !812}
!803 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !801, file: !368, line: 146, type: !20)
!804 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !801, file: !368, line: 148, type: !366)
!805 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !806, file: !368, line: 149, type: !20)
!806 = distinct !DILexicalBlock(scope: !801, file: !368, line: 149, column: 8)
!807 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !808, file: !368, line: 149, type: !20)
!808 = distinct !DILexicalBlock(scope: !809, file: !368, line: 149, column: 101)
!809 = distinct !DILexicalBlock(scope: !806, file: !368, line: 149, column: 67)
!810 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !811, file: !368, line: 150, type: !20)
!811 = distinct !DILexicalBlock(scope: !801, file: !368, line: 150, column: 8)
!812 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !813, file: !368, line: 150, type: !20)
!813 = distinct !DILexicalBlock(scope: !814, file: !368, line: 150, column: 102)
!814 = distinct !DILexicalBlock(scope: !811, file: !368, line: 150, column: 68)
!815 = !DISubprogram(name: "_DictRemover_call", scope: !368, file: !368, line: 155, type: !151, isLocal: true, isDefinition: true, scopeLine: 156, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @_DictRemover_call, variables: !816)
!816 = !{!817, !818, !819, !820, !821, !825, !829, !831}
!817 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !815, file: !368, line: 155, type: !20)
!818 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !815, file: !368, line: 155, type: !20)
!819 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !815, file: !368, line: 155, type: !20)
!820 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !815, file: !368, line: 157, type: !366)
!821 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !822, file: !368, line: 162, type: !20)
!822 = distinct !DILexicalBlock(scope: !823, file: !368, line: 162, column: 12)
!823 = distinct !DILexicalBlock(scope: !824, file: !368, line: 158, column: 34)
!824 = distinct !DILexicalBlock(scope: !815, file: !368, line: 158, column: 9)
!825 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !826, file: !368, line: 162, type: !20)
!826 = distinct !DILexicalBlock(scope: !827, file: !368, line: 162, column: 117)
!827 = distinct !DILexicalBlock(scope: !828, file: !368, line: 162, column: 86)
!828 = distinct !DILexicalBlock(scope: !822, file: !368, line: 162, column: 63)
!829 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !830, file: !368, line: 163, type: !20)
!830 = distinct !DILexicalBlock(scope: !823, file: !368, line: 163, column: 12)
!831 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !832, file: !368, line: 163, type: !20)
!832 = distinct !DILexicalBlock(scope: !833, file: !368, line: 163, column: 119)
!833 = distinct !DILexicalBlock(scope: !834, file: !368, line: 163, column: 87)
!834 = distinct !DILexicalBlock(scope: !830, file: !368, line: 163, column: 64)
!835 = !DISubprogram(name: "CDataType_repeat", scope: !368, file: !368, line: 664, type: !200, isLocal: true, isDefinition: true, scopeLine: 665, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i64)* @CDataType_repeat, variables: !836)
!836 = !{!837, !838}
!837 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !835, file: !368, line: 664, type: !20)
!838 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "length", arg: 2, scope: !835, file: !368, line: 664, type: !26)
!839 = !DISubprogram(name: "PyCStructType_setattro", scope: !368, file: !368, line: 706, type: !227, isLocal: true, isDefinition: true, scopeLine: 707, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @PyCStructType_setattro, variables: !840)
!840 = !{!841, !842, !843, !844, !847, !848, !850}
!841 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !839, file: !368, line: 706, type: !20)
!842 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 2, scope: !839, file: !368, line: 706, type: !20)
!843 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 3, scope: !839, file: !368, line: 706, type: !20)
!844 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !845, file: !368, line: 714, type: !110)
!845 = distinct !DILexicalBlock(scope: !846, file: !368, line: 714, column: 29)
!846 = distinct !DILexicalBlock(scope: !839, file: !368, line: 712, column: 9)
!847 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !845, file: !368, line: 714, type: !110)
!848 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !849, file: !368, line: 714, type: !421)
!849 = distinct !DILexicalBlock(scope: !845, file: !368, line: 714, column: 1926)
!850 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !849, file: !368, line: 714, type: !59)
!851 = !DISubprogram(name: "CDataType_traverse", scope: !368, file: !368, line: 697, type: !852, isLocal: true, isDefinition: true, scopeLine: 698, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._typeobject*, i32 (%struct._object*, i8*)*, i8*)* @CDataType_traverse, variables: !854)
!852 = !DISubroutineType(types: !853)
!853 = !{!59, !417, !279, !105}
!854 = !{!855, !856, !857, !858, !859}
!855 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !851, file: !368, line: 697, type: !417)
!856 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !851, file: !368, line: 697, type: !279)
!857 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !851, file: !368, line: 697, type: !105)
!858 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !851, file: !368, line: 699, type: !458)
!859 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !860, file: !368, line: 701, type: !59)
!860 = distinct !DILexicalBlock(scope: !861, file: !368, line: 701, column: 31)
!861 = distinct !DILexicalBlock(scope: !862, file: !368, line: 701, column: 18)
!862 = distinct !DILexicalBlock(scope: !863, file: !368, line: 701, column: 12)
!863 = distinct !DILexicalBlock(scope: !851, file: !368, line: 700, column: 9)
!864 = !DISubprogram(name: "CDataType_clear", scope: !368, file: !368, line: 688, type: !865, isLocal: true, isDefinition: true, scopeLine: 689, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._typeobject*)* @CDataType_clear, variables: !867)
!865 = !DISubroutineType(types: !866)
!866 = !{!59, !417}
!867 = !{!868, !869, !870, !873}
!868 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !864, file: !368, line: 688, type: !417)
!869 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !864, file: !368, line: 690, type: !458)
!870 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !871, file: !368, line: 692, type: !20)
!871 = distinct !DILexicalBlock(scope: !872, file: !368, line: 692, column: 12)
!872 = distinct !DILexicalBlock(scope: !864, file: !368, line: 691, column: 9)
!873 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !874, file: !368, line: 692, type: !20)
!874 = distinct !DILexicalBlock(scope: !875, file: !368, line: 692, column: 121)
!875 = distinct !DILexicalBlock(scope: !876, file: !368, line: 692, column: 88)
!876 = distinct !DILexicalBlock(scope: !871, file: !368, line: 692, column: 65)
!877 = !DISubprogram(name: "CDataType_from_param", scope: !368, file: !368, line: 606, type: !142, isLocal: true, isDefinition: true, scopeLine: 607, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @CDataType_from_param, variables: !878)
!878 = !{!879, !880, !881, !882, !883, !886, !887, !888, !889}
!879 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !877, file: !368, line: 606, type: !20)
!880 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !877, file: !368, line: 606, type: !20)
!881 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "as_parameter", scope: !877, file: !368, line: 608, type: !20)
!882 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !877, file: !368, line: 609, type: !59)
!883 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !884, file: !368, line: 617, type: !424)
!884 = distinct !DILexicalBlock(scope: !885, file: !368, line: 616, column: 45)
!885 = distinct !DILexicalBlock(scope: !877, file: !368, line: 616, column: 9)
!886 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ob", scope: !884, file: !368, line: 618, type: !20)
!887 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ob_name", scope: !884, file: !368, line: 619, type: !44)
!888 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !884, file: !368, line: 620, type: !458)
!889 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !890, file: !368, line: 644, type: !20)
!890 = distinct !DILexicalBlock(scope: !891, file: !368, line: 644, column: 12)
!891 = distinct !DILexicalBlock(scope: !892, file: !368, line: 642, column: 23)
!892 = distinct !DILexicalBlock(scope: !877, file: !368, line: 642, column: 9)
!893 = !DISubprogram(name: "CDataType_from_address", scope: !368, file: !368, line: 443, type: !142, isLocal: true, isDefinition: true, scopeLine: 444, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @CDataType_from_address, variables: !894)
!894 = !{!895, !896, !897}
!895 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !893, file: !368, line: 443, type: !20)
!896 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !893, file: !368, line: 443, type: !20)
!897 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !893, file: !368, line: 445, type: !105)
!898 = !DISubprogram(name: "CDataType_from_buffer", scope: !368, file: !368, line: 464, type: !142, isLocal: true, isDefinition: true, scopeLine: 465, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @CDataType_from_buffer, variables: !899)
!899 = !{!900, !901, !902, !903, !904, !905, !906, !907}
!900 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !898, file: !368, line: 464, type: !20)
!901 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !898, file: !368, line: 464, type: !20)
!902 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !898, file: !368, line: 466, type: !105)
!903 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer_len", scope: !898, file: !368, line: 467, type: !26)
!904 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !898, file: !368, line: 468, type: !26)
!905 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !898, file: !368, line: 469, type: !20)
!906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !898, file: !368, line: 469, type: !20)
!907 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !898, file: !368, line: 470, type: !458)
!908 = !DISubprogram(name: "CDataType_from_buffer_copy", scope: !368, file: !368, line: 509, type: !142, isLocal: true, isDefinition: true, scopeLine: 510, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @CDataType_from_buffer_copy, variables: !909)
!909 = !{!910, !911, !912, !913, !914, !915, !916, !917}
!910 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !908, file: !368, line: 509, type: !20)
!911 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !908, file: !368, line: 509, type: !20)
!912 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !908, file: !368, line: 511, type: !419)
!913 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer_len", scope: !908, file: !368, line: 512, type: !26)
!914 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !908, file: !368, line: 513, type: !26)
!915 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !908, file: !368, line: 514, type: !20)
!916 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !908, file: !368, line: 514, type: !20)
!917 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !908, file: !368, line: 515, type: !458)
!918 = !DISubprogram(name: "CDataType_in_dll", scope: !368, file: !368, line: 549, type: !142, isLocal: true, isDefinition: true, scopeLine: 550, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @CDataType_in_dll, variables: !919)
!919 = !{!920, !921, !922, !923, !924, !925, !926, !927, !931}
!920 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !918, file: !368, line: 549, type: !20)
!921 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !918, file: !368, line: 549, type: !20)
!922 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dll", scope: !918, file: !368, line: 551, type: !20)
!923 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !918, file: !368, line: 552, type: !67)
!924 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !918, file: !368, line: 553, type: !20)
!925 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "handle", scope: !918, file: !368, line: 554, type: !105)
!926 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "address", scope: !918, file: !368, line: 555, type: !105)
!927 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !928, file: !368, line: 566, type: !20)
!928 = distinct !DILexicalBlock(scope: !929, file: !368, line: 566, column: 12)
!929 = distinct !DILexicalBlock(scope: !930, file: !368, line: 563, column: 78)
!930 = distinct !DILexicalBlock(scope: !918, file: !368, line: 563, column: 9)
!931 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !932, file: !368, line: 570, type: !20)
!932 = distinct !DILexicalBlock(scope: !918, file: !368, line: 570, column: 8)
!933 = !DISubprogram(name: "PyCStructType_new", scope: !368, file: !368, line: 428, type: !934, isLocal: true, isDefinition: true, scopeLine: 429, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyCStructType_new, variables: !936)
!934 = !DISubroutineType(types: !935)
!935 = !{!20, !417, !20, !20}
!936 = !{!937, !938, !939}
!937 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !933, file: !368, line: 428, type: !417)
!938 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !933, file: !368, line: 428, type: !20)
!939 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !933, file: !368, line: 428, type: !20)
!940 = !DISubprogram(name: "StructUnionType_new", scope: !368, file: !368, line: 366, type: !941, isLocal: true, isDefinition: true, scopeLine: 367, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*, i32)* @StructUnionType_new, variables: !943)
!941 = !DISubroutineType(types: !942)
!942 = !{!20, !417, !20, !20, !59}
!943 = !{!944, !945, !946, !947, !948, !949, !950, !951, !955, !959, !961, !963, !967, !970, !974}
!944 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !940, file: !368, line: 366, type: !417)
!945 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !940, file: !368, line: 366, type: !20)
!946 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !940, file: !368, line: 366, type: !20)
!947 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "isStruct", arg: 4, scope: !940, file: !368, line: 366, type: !59)
!948 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !940, file: !368, line: 368, type: !417)
!949 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fields", scope: !940, file: !368, line: 369, type: !20)
!950 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !940, file: !368, line: 370, type: !458)
!951 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !952, file: !368, line: 384, type: !20)
!952 = distinct !DILexicalBlock(scope: !953, file: !368, line: 384, column: 12)
!953 = distinct !DILexicalBlock(scope: !954, file: !368, line: 383, column: 16)
!954 = distinct !DILexicalBlock(scope: !940, file: !368, line: 383, column: 9)
!955 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !956, file: !368, line: 390, type: !20)
!956 = distinct !DILexicalBlock(scope: !957, file: !368, line: 390, column: 12)
!957 = distinct !DILexicalBlock(scope: !958, file: !368, line: 389, column: 65)
!958 = distinct !DILexicalBlock(scope: !940, file: !368, line: 389, column: 9)
!959 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !960, file: !368, line: 391, type: !20)
!960 = distinct !DILexicalBlock(scope: !957, file: !368, line: 391, column: 12)
!961 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !962, file: !368, line: 394, type: !20)
!962 = distinct !DILexicalBlock(scope: !940, file: !368, line: 394, column: 8)
!963 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !964, file: !368, line: 398, type: !20)
!964 = distinct !DILexicalBlock(scope: !965, file: !368, line: 398, column: 12)
!965 = distinct !DILexicalBlock(scope: !966, file: !368, line: 397, column: 37)
!966 = distinct !DILexicalBlock(scope: !940, file: !368, line: 397, column: 9)
!967 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "basedict", scope: !968, file: !368, line: 406, type: !458)
!968 = distinct !DILexicalBlock(scope: !969, file: !368, line: 405, column: 18)
!969 = distinct !DILexicalBlock(scope: !940, file: !368, line: 405, column: 9)
!970 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !971, file: !368, line: 412, type: !20)
!971 = distinct !DILexicalBlock(scope: !972, file: !368, line: 412, column: 16)
!972 = distinct !DILexicalBlock(scope: !973, file: !368, line: 411, column: 53)
!973 = distinct !DILexicalBlock(scope: !968, file: !368, line: 411, column: 13)
!974 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !975, file: !368, line: 421, type: !20)
!975 = distinct !DILexicalBlock(scope: !976, file: !368, line: 421, column: 12)
!976 = distinct !DILexicalBlock(scope: !977, file: !368, line: 420, column: 79)
!977 = distinct !DILexicalBlock(scope: !940, file: !368, line: 420, column: 9)
!978 = !DISubprogram(name: "StructUnionType_paramfunc", scope: !368, file: !368, line: 341, type: !493, isLocal: true, isDefinition: true, scopeLine: 342, flags: DIFlagPrototyped, isOptimized: true, function: %struct.tagPyCArgObject* (%struct.tagCDataObject*)* @StructUnionType_paramfunc, variables: !979)
!979 = !{!980, !981, !982}
!980 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !978, file: !368, line: 341, type: !385)
!981 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parg", scope: !978, file: !368, line: 343, type: !424)
!982 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stgdict", scope: !978, file: !368, line: 344, type: !458)
!983 = !DISubprogram(name: "PyCPointerType_from_param", scope: !368, file: !368, line: 968, type: !142, isLocal: true, isDefinition: true, scopeLine: 969, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @PyCPointerType_from_param, variables: !984)
!984 = !{!985, !986, !987, !988}
!985 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !983, file: !368, line: 968, type: !20)
!986 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !983, file: !368, line: 968, type: !20)
!987 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "typedict", scope: !983, file: !368, line: 970, type: !458)
!988 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !989, file: !368, line: 998, type: !458)
!989 = distinct !DILexicalBlock(scope: !990, file: !368, line: 994, column: 267)
!990 = distinct !DILexicalBlock(scope: !983, file: !368, line: 994, column: 9)
!991 = !DISubprogram(name: "_byref", scope: !368, file: !368, line: 3463, type: !132, isLocal: true, isDefinition: true, scopeLine: 3464, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @_byref, variables: !992)
!992 = !{!993, !994, !995}
!993 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 1, scope: !991, file: !368, line: 3463, type: !20)
!994 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parg", scope: !991, file: !368, line: 3465, type: !424)
!995 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !996, file: !368, line: 3474, type: !20)
!996 = distinct !DILexicalBlock(scope: !997, file: !368, line: 3474, column: 12)
!997 = distinct !DILexicalBlock(scope: !998, file: !368, line: 3473, column: 29)
!998 = distinct !DILexicalBlock(scope: !991, file: !368, line: 3473, column: 9)
!999 = !DISubprogram(name: "PyCPointerType_set_type", scope: !368, file: !368, line: 948, type: !1000, isLocal: true, isDefinition: true, scopeLine: 949, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*)* @PyCPointerType_set_type, variables: !1002)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!20, !417, !20}
!1002 = !{!1003, !1004, !1005}
!1003 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !999, file: !368, line: 948, type: !417)
!1004 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 2, scope: !999, file: !368, line: 948, type: !20)
!1005 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !999, file: !368, line: 950, type: !458)
!1006 = !DISubprogram(name: "PyCPointerType_SetProto", scope: !368, file: !368, line: 836, type: !1007, isLocal: true, isDefinition: true, scopeLine: 837, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.StgDictObject*, %struct._object*)* @PyCPointerType_SetProto, variables: !1009)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!59, !458, !20}
!1009 = !{!1010, !1011, !1012, !1014}
!1010 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "stgdict", arg: 1, scope: !1006, file: !368, line: 836, type: !458)
!1011 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "proto", arg: 2, scope: !1006, file: !368, line: 836, type: !20)
!1012 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1013, file: !368, line: 849, type: !20)
!1013 = distinct !DILexicalBlock(scope: !1006, file: !368, line: 849, column: 8)
!1014 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1015, file: !368, line: 849, type: !20)
!1015 = distinct !DILexicalBlock(scope: !1016, file: !368, line: 849, column: 106)
!1016 = distinct !DILexicalBlock(scope: !1013, file: !368, line: 849, column: 72)
!1017 = !DISubprogram(name: "PyCPointerType_new", scope: !368, file: !368, line: 872, type: !934, isLocal: true, isDefinition: true, scopeLine: 873, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyCPointerType_new, variables: !1018)
!1018 = !{!1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1030, !1033, !1034, !1038, !1042, !1046, !1048}
!1019 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1017, file: !368, line: 872, type: !417)
!1020 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1017, file: !368, line: 872, type: !20)
!1021 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1017, file: !368, line: 872, type: !20)
!1022 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1017, file: !368, line: 874, type: !417)
!1023 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stgdict", scope: !1017, file: !368, line: 875, type: !458)
!1024 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "proto", scope: !1017, file: !368, line: 876, type: !20)
!1025 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "typedict", scope: !1017, file: !368, line: 877, type: !20)
!1026 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1027, file: !368, line: 899, type: !20)
!1027 = distinct !DILexicalBlock(scope: !1028, file: !368, line: 899, column: 12)
!1028 = distinct !DILexicalBlock(scope: !1029, file: !368, line: 898, column: 65)
!1029 = distinct !DILexicalBlock(scope: !1017, file: !368, line: 898, column: 9)
!1030 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "itemdict", scope: !1031, file: !368, line: 904, type: !458)
!1031 = distinct !DILexicalBlock(scope: !1032, file: !368, line: 903, column: 16)
!1032 = distinct !DILexicalBlock(scope: !1017, file: !368, line: 903, column: 9)
!1033 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "current_format", scope: !1031, file: !368, line: 905, type: !44)
!1034 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1035, file: !368, line: 921, type: !20)
!1035 = distinct !DILexicalBlock(scope: !1036, file: !368, line: 921, column: 16)
!1036 = distinct !DILexicalBlock(scope: !1037, file: !368, line: 920, column: 44)
!1037 = distinct !DILexicalBlock(scope: !1031, file: !368, line: 920, column: 13)
!1038 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1039, file: !368, line: 930, type: !20)
!1039 = distinct !DILexicalBlock(scope: !1040, file: !368, line: 930, column: 12)
!1040 = distinct !DILexicalBlock(scope: !1041, file: !368, line: 929, column: 31)
!1041 = distinct !DILexicalBlock(scope: !1017, file: !368, line: 929, column: 9)
!1042 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1043, file: !368, line: 936, type: !20)
!1043 = distinct !DILexicalBlock(scope: !1044, file: !368, line: 936, column: 12)
!1044 = distinct !DILexicalBlock(scope: !1045, file: !368, line: 935, column: 68)
!1045 = distinct !DILexicalBlock(scope: !1017, file: !368, line: 935, column: 9)
!1046 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1047, file: !368, line: 937, type: !20)
!1047 = distinct !DILexicalBlock(scope: !1044, file: !368, line: 937, column: 12)
!1048 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1049, file: !368, line: 940, type: !20)
!1049 = distinct !DILexicalBlock(scope: !1017, file: !368, line: 940, column: 8)
!1050 = !DISubprogram(name: "PyCPointerType_paramfunc", scope: !368, file: !368, line: 855, type: !493, isLocal: true, isDefinition: true, scopeLine: 856, flags: DIFlagPrototyped, isOptimized: true, function: %struct.tagPyCArgObject* (%struct.tagCDataObject*)* @PyCPointerType_paramfunc, variables: !1051)
!1051 = !{!1052, !1053}
!1052 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1050, file: !368, line: 855, type: !385)
!1053 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parg", scope: !1050, file: !368, line: 857, type: !424)
!1054 = !DISubprogram(name: "PyCArrayType_new", scope: !368, file: !368, line: 1288, type: !934, isLocal: true, isDefinition: true, scopeLine: 1289, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyCArrayType_new, variables: !1055)
!1055 = !{!1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1072, !1075, !1079, !1081, !1083, !1085, !1088, !1090, !1093}
!1056 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1054, file: !368, line: 1288, type: !417)
!1057 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1054, file: !368, line: 1288, type: !20)
!1058 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1054, file: !368, line: 1288, type: !20)
!1059 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1054, file: !368, line: 1290, type: !417)
!1060 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stgdict", scope: !1054, file: !368, line: 1291, type: !458)
!1061 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "itemdict", scope: !1054, file: !368, line: 1292, type: !458)
!1062 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "length_attr", scope: !1054, file: !368, line: 1293, type: !20)
!1063 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "type_attr", scope: !1054, file: !368, line: 1293, type: !20)
!1064 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "length", scope: !1054, file: !368, line: 1294, type: !32)
!1065 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "overflow", scope: !1054, file: !368, line: 1295, type: !59)
!1066 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "itemsize", scope: !1054, file: !368, line: 1296, type: !26)
!1067 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "itemalign", scope: !1054, file: !368, line: 1296, type: !26)
!1068 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1069, file: !368, line: 1314, type: !20)
!1069 = distinct !DILexicalBlock(scope: !1070, file: !368, line: 1314, column: 12)
!1070 = distinct !DILexicalBlock(scope: !1071, file: !368, line: 1310, column: 102)
!1071 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1310, column: 9)
!1072 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1073, file: !368, line: 1314, type: !20)
!1073 = distinct !DILexicalBlock(scope: !1074, file: !368, line: 1314, column: 107)
!1074 = distinct !DILexicalBlock(scope: !1069, file: !368, line: 1314, column: 73)
!1075 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1076, file: !368, line: 1321, type: !20)
!1076 = distinct !DILexicalBlock(scope: !1077, file: !368, line: 1321, column: 12)
!1077 = distinct !DILexicalBlock(scope: !1078, file: !368, line: 1318, column: 19)
!1078 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1318, column: 9)
!1079 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1080, file: !368, line: 1324, type: !20)
!1080 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1324, column: 8)
!1081 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1082, file: !368, line: 1384, type: !20)
!1082 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1384, column: 8)
!1083 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1084, file: !368, line: 1403, type: !20)
!1084 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1403, column: 8)
!1085 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1086, file: !368, line: 1403, type: !20)
!1086 = distinct !DILexicalBlock(scope: !1087, file: !368, line: 1403, column: 110)
!1087 = distinct !DILexicalBlock(scope: !1084, file: !368, line: 1403, column: 76)
!1088 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1089, file: !368, line: 1404, type: !20)
!1089 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1404, column: 8)
!1090 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1091, file: !368, line: 1404, type: !20)
!1091 = distinct !DILexicalBlock(scope: !1092, file: !368, line: 1404, column: 101)
!1092 = distinct !DILexicalBlock(scope: !1089, file: !368, line: 1404, column: 67)
!1093 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1094, file: !368, line: 1405, type: !20)
!1094 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1405, column: 8)
!1095 = !DISubprogram(name: "PyCArrayType_paramfunc", scope: !368, file: !368, line: 1274, type: !493, isLocal: true, isDefinition: true, scopeLine: 1275, flags: DIFlagPrototyped, isOptimized: true, function: %struct.tagPyCArgObject* (%struct.tagCDataObject*)* @PyCArrayType_paramfunc, variables: !1096)
!1096 = !{!1097, !1098}
!1097 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1095, file: !368, line: 1274, type: !385)
!1098 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !1095, file: !368, line: 1276, type: !424)
!1099 = !DISubprogram(name: "add_getset", scope: !368, file: !368, line: 1258, type: !1100, isLocal: true, isDefinition: true, scopeLine: 1259, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._typeobject*, %struct.PyGetSetDef*)* @add_getset, variables: !1104)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!59, !417, !1102}
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64, align: 64)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGetSetDef", file: !317, line: 17, baseType: !316)
!1104 = !{!1105, !1106, !1107, !1108, !1112}
!1105 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1099, file: !368, line: 1258, type: !417)
!1106 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "gsp", arg: 2, scope: !1099, file: !368, line: 1258, type: !1102)
!1107 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1099, file: !368, line: 1260, type: !20)
!1108 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "descr", scope: !1109, file: !368, line: 1262, type: !20)
!1109 = distinct !DILexicalBlock(scope: !1110, file: !368, line: 1261, column: 44)
!1110 = distinct !DILexicalBlock(scope: !1111, file: !368, line: 1261, column: 5)
!1111 = distinct !DILexicalBlock(scope: !1099, file: !368, line: 1261, column: 5)
!1112 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1113, file: !368, line: 1268, type: !20)
!1113 = distinct !DILexicalBlock(scope: !1109, file: !368, line: 1268, column: 12)
!1114 = !DISubprogram(name: "CharArray_get_raw", scope: !368, file: !368, line: 1097, type: !1115, isLocal: true, isDefinition: true, scopeLine: 1098, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.tagCDataObject*)* @CharArray_get_raw, variables: !1117)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!20, !385}
!1117 = !{!1118}
!1118 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1114, file: !368, line: 1097, type: !385)
!1119 = !DISubprogram(name: "CharArray_set_raw", scope: !368, file: !368, line: 1071, type: !1120, isLocal: true, isDefinition: true, scopeLine: 1072, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.tagCDataObject*, %struct._object*)* @CharArray_set_raw, variables: !1122)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!59, !385, !20}
!1122 = !{!1123, !1124, !1125, !1126, !1127}
!1123 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1119, file: !368, line: 1071, type: !385)
!1124 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !1119, file: !368, line: 1071, type: !20)
!1125 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !1119, file: !368, line: 1073, type: !67)
!1126 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1119, file: !368, line: 1074, type: !26)
!1127 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "view", scope: !1119, file: !368, line: 1075, type: !252)
!1128 = !DISubprogram(name: "CharArray_get_value", scope: !368, file: !368, line: 1103, type: !1115, isLocal: true, isDefinition: true, scopeLine: 1104, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.tagCDataObject*)* @CharArray_get_value, variables: !1129)
!1129 = !{!1130, !1131, !1132}
!1130 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1128, file: !368, line: 1103, type: !385)
!1131 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1128, file: !368, line: 1105, type: !59)
!1132 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !1128, file: !368, line: 1106, type: !67)
!1133 = !DISubprogram(name: "CharArray_set_value", scope: !368, file: !368, line: 1114, type: !1120, isLocal: true, isDefinition: true, scopeLine: 1115, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.tagCDataObject*, %struct._object*)* @CharArray_set_value, variables: !1134)
!1134 = !{!1135, !1136, !1137, !1138, !1139, !1143}
!1135 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1133, file: !368, line: 1114, type: !385)
!1136 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !1133, file: !368, line: 1114, type: !20)
!1137 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !1133, file: !368, line: 1116, type: !67)
!1138 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1133, file: !368, line: 1117, type: !26)
!1139 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1140, file: !368, line: 1136, type: !20)
!1140 = distinct !DILexicalBlock(scope: !1141, file: !368, line: 1136, column: 12)
!1141 = distinct !DILexicalBlock(scope: !1142, file: !368, line: 1133, column: 30)
!1142 = distinct !DILexicalBlock(scope: !1133, file: !368, line: 1133, column: 9)
!1143 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1144, file: !368, line: 1144, type: !20)
!1144 = distinct !DILexicalBlock(scope: !1133, file: !368, line: 1144, column: 8)
!1145 = !DISubprogram(name: "WCharArray_get_value", scope: !368, file: !368, line: 1159, type: !1115, isLocal: true, isDefinition: true, scopeLine: 1160, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.tagCDataObject*)* @WCharArray_get_value, variables: !1146)
!1146 = !{!1147, !1148, !1149}
!1147 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1145, file: !368, line: 1159, type: !385)
!1148 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1145, file: !368, line: 1161, type: !364)
!1149 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !1145, file: !368, line: 1162, type: !513)
!1150 = !DISubprogram(name: "WCharArray_set_value", scope: !368, file: !368, line: 1170, type: !1120, isLocal: true, isDefinition: true, scopeLine: 1171, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.tagCDataObject*, %struct._object*)* @WCharArray_set_value, variables: !1151)
!1151 = !{!1152, !1153, !1154, !1155, !1159, !1160}
!1152 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1150, file: !368, line: 1170, type: !385)
!1153 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !1150, file: !368, line: 1170, type: !20)
!1154 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1150, file: !368, line: 1172, type: !26)
!1155 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wstr", scope: !1150, file: !368, line: 1173, type: !1156)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64, align: 64)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UNICODE", file: !1158, line: 93, baseType: !514)
!1158 = !DIFile(filename: "./Include/unicodeobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1159 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1150, file: !368, line: 1174, type: !26)
!1160 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1161, file: !368, line: 1204, type: !20)
!1161 = distinct !DILexicalBlock(scope: !1150, file: !368, line: 1204, column: 8)
!1162 = !DISubprogram(name: "PyCSimpleType_from_param", scope: !368, file: !368, line: 2031, type: !142, isLocal: true, isDefinition: true, scopeLine: 2032, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @PyCSimpleType_from_param, variables: !1163)
!1163 = !{!1164, !1165, !1166, !1167, !1168, !1169, !1179, !1180, !1181, !1183, !1193, !1194, !1197, !1199, !1202, !1206, !1207, !1208, !1209, !1211, !1212, !1213, !1214}
!1164 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1162, file: !368, line: 2031, type: !20)
!1165 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !1162, file: !368, line: 2031, type: !20)
!1166 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1162, file: !368, line: 2033, type: !458)
!1167 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !1162, file: !368, line: 2034, type: !67)
!1168 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parg", scope: !1162, file: !368, line: 2035, type: !424)
!1169 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !1162, file: !368, line: 2036, type: !1170)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64, align: 64)
!1171 = !DICompositeType(tag: DW_TAG_structure_type, name: "fielddesc", file: !387, line: 164, size: 384, align: 64, elements: !1172)
!1172 = !{!1173, !1174, !1175, !1176, !1177, !1178}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1171, file: !387, line: 165, baseType: !46, size: 8, align: 8)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "setfunc", scope: !1171, file: !387, line: 166, baseType: !481, size: 64, align: 64, offset: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "getfunc", scope: !1171, file: !387, line: 167, baseType: !486, size: 64, align: 64, offset: 128)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "pffi_type", scope: !1171, file: !387, line: 168, baseType: !430, size: 64, align: 64, offset: 192)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "setfunc_swapped", scope: !1171, file: !387, line: 169, baseType: !481, size: 64, align: 64, offset: 256)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "getfunc_swapped", scope: !1171, file: !387, line: 170, baseType: !486, size: 64, align: 64, offset: 320)
!1179 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "as_parameter", scope: !1162, file: !368, line: 2037, type: !20)
!1180 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1162, file: !368, line: 2038, type: !59)
!1181 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1182, file: !368, line: 2070, type: !20)
!1182 = distinct !DILexicalBlock(scope: !1162, file: !368, line: 2070, column: 8)
!1183 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "atomic_val", scope: !1184, file: !368, line: 2074, type: !1188)
!1184 = distinct !DILexicalBlock(scope: !1185, file: !368, line: 2074, column: 50)
!1185 = distinct !DILexicalBlock(scope: !1186, file: !368, line: 2074, column: 13)
!1186 = distinct !DILexicalBlock(scope: !1187, file: !368, line: 2073, column: 23)
!1187 = distinct !DILexicalBlock(scope: !1162, file: !368, line: 2073, column: 9)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64, align: 64)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_atomic_address", file: !4, line: 33, baseType: !1190)
!1190 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Py_atomic_address", file: !4, line: 31, size: 64, align: 64, elements: !1191)
!1191 = !{!1192}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "_value", scope: !1190, file: !4, line: 32, baseType: !105, size: 64, align: 64)
!1193 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1184, file: !368, line: 2074, type: !105)
!1194 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "volatile_data", scope: !1184, file: !368, line: 2074, type: !1195)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64, align: 64)
!1196 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !105)
!1197 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "order", scope: !1184, file: !368, line: 2074, type: !1198)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_memory_order", file: !4, line: 29, baseType: !3)
!1199 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1200, file: !368, line: 2075, type: !20)
!1200 = distinct !DILexicalBlock(scope: !1201, file: !368, line: 2075, column: 16)
!1201 = distinct !DILexicalBlock(scope: !1185, file: !368, line: 2074, column: 847)
!1202 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "atomic_val", scope: !1203, file: !368, line: 2079, type: !1188)
!1203 = distinct !DILexicalBlock(scope: !1204, file: !368, line: 2079, column: 52)
!1204 = distinct !DILexicalBlock(scope: !1205, file: !368, line: 2079, column: 16)
!1205 = distinct !DILexicalBlock(scope: !1186, file: !368, line: 2079, column: 11)
!1206 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1203, file: !368, line: 2079, type: !105)
!1207 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "volatile_data", scope: !1203, file: !368, line: 2079, type: !1195)
!1208 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "order", scope: !1203, file: !368, line: 2079, type: !1198)
!1209 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "atomic_val", scope: !1210, file: !368, line: 2079, type: !1188)
!1210 = distinct !DILexicalBlock(scope: !1204, file: !368, line: 2079, column: 901)
!1211 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1210, file: !368, line: 2079, type: !105)
!1212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "volatile_data", scope: !1210, file: !368, line: 2079, type: !1195)
!1213 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "order", scope: !1210, file: !368, line: 2079, type: !1198)
!1214 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1215, file: !368, line: 2080, type: !20)
!1215 = distinct !DILexicalBlock(scope: !1186, file: !368, line: 2080, column: 12)
!1216 = !DISubprogram(name: "_Py_ANNOTATE_MEMORY_ORDER", scope: !4, file: !4, line: 59, type: !1217, isLocal: true, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, i32)* @_Py_ANNOTATE_MEMORY_ORDER, variables: !1222)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{null, !1219, !1198}
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64, align: 64)
!1220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1221)
!1221 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!1222 = !{!1223, !1224}
!1223 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "address", arg: 1, scope: !1216, file: !4, line: 59, type: !1219)
!1224 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "order", arg: 2, scope: !1216, file: !4, line: 59, type: !1198)
!1225 = !DISubprogram(name: "_Py_atomic_thread_fence", scope: !4, file: !4, line: 51, type: !1226, isLocal: true, isDefinition: true, scopeLine: 52, flags: DIFlagPrototyped, isOptimized: true, function: void (i32)* @_Py_atomic_thread_fence, variables: !1228)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{null, !1198}
!1228 = !{!1229}
!1229 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "order", arg: 1, scope: !1225, file: !4, line: 51, type: !1198)
!1230 = !DISubprogram(name: "_Py_atomic_signal_fence", scope: !4, file: !4, line: 44, type: !1226, isLocal: true, isDefinition: true, scopeLine: 45, flags: DIFlagPrototyped, isOptimized: true, function: void (i32)* @_Py_atomic_signal_fence, variables: !1231)
!1231 = !{!1232}
!1232 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "order", arg: 1, scope: !1230, file: !4, line: 44, type: !1198)
!1233 = !DISubprogram(name: "PyCSimpleType_new", scope: !368, file: !368, line: 1850, type: !934, isLocal: true, isDefinition: true, scopeLine: 1851, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyCSimpleType_new, variables: !1234)
!1234 = !{!1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1246, !1247, !1251, !1254, !1256, !1259, !1263, !1265, !1267, !1271, !1273, !1275, !1280, !1281, !1283, !1287, !1290, !1291, !1295, !1297}
!1235 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1233, file: !368, line: 1850, type: !417)
!1236 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1233, file: !368, line: 1850, type: !20)
!1237 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1233, file: !368, line: 1850, type: !20)
!1238 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1233, file: !368, line: 1852, type: !417)
!1239 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stgdict", scope: !1233, file: !368, line: 1853, type: !458)
!1240 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "proto", scope: !1233, file: !368, line: 1854, type: !20)
!1241 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "proto_str", scope: !1233, file: !368, line: 1855, type: !44)
!1242 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "proto_len", scope: !1233, file: !368, line: 1856, type: !26)
!1243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ml", scope: !1233, file: !368, line: 1857, type: !1244)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64, align: 64)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !297, line: 47, baseType: !296)
!1246 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !1233, file: !368, line: 1858, type: !1170)
!1247 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1248, file: !368, line: 1871, type: !20)
!1248 = distinct !DILexicalBlock(scope: !1249, file: !368, line: 1871, column: 12)
!1249 = distinct !DILexicalBlock(scope: !1250, file: !368, line: 1867, column: 17)
!1250 = distinct !DILexicalBlock(scope: !1233, file: !368, line: 1867, column: 9)
!1251 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1252, file: !368, line: 1871, type: !20)
!1252 = distinct !DILexicalBlock(scope: !1253, file: !368, line: 1871, column: 101)
!1253 = distinct !DILexicalBlock(scope: !1248, file: !368, line: 1871, column: 67)
!1254 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1255, file: !368, line: 1872, type: !20)
!1255 = distinct !DILexicalBlock(scope: !1249, file: !368, line: 1872, column: 12)
!1256 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1257, file: !368, line: 1872, type: !20)
!1257 = distinct !DILexicalBlock(scope: !1258, file: !368, line: 1872, column: 102)
!1258 = distinct !DILexicalBlock(scope: !1255, file: !368, line: 1872, column: 68)
!1259 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1260, file: !368, line: 1921, type: !20)
!1260 = distinct !DILexicalBlock(scope: !1261, file: !368, line: 1921, column: 12)
!1261 = distinct !DILexicalBlock(scope: !1262, file: !368, line: 1920, column: 40)
!1262 = distinct !DILexicalBlock(scope: !1233, file: !368, line: 1920, column: 9)
!1263 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1264, file: !368, line: 1922, type: !20)
!1264 = distinct !DILexicalBlock(scope: !1261, file: !368, line: 1922, column: 12)
!1265 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1266, file: !368, line: 1923, type: !20)
!1266 = distinct !DILexicalBlock(scope: !1261, file: !368, line: 1923, column: 12)
!1267 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1268, file: !368, line: 1940, type: !20)
!1268 = distinct !DILexicalBlock(scope: !1269, file: !368, line: 1940, column: 12)
!1269 = distinct !DILexicalBlock(scope: !1270, file: !368, line: 1939, column: 68)
!1270 = distinct !DILexicalBlock(scope: !1233, file: !368, line: 1939, column: 9)
!1271 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1272, file: !368, line: 1941, type: !20)
!1272 = distinct !DILexicalBlock(scope: !1269, file: !368, line: 1941, column: 12)
!1273 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1274, file: !368, line: 1944, type: !20)
!1274 = distinct !DILexicalBlock(scope: !1233, file: !368, line: 1944, column: 8)
!1275 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "meth", scope: !1276, file: !368, line: 1976, type: !20)
!1276 = distinct !DILexicalBlock(scope: !1277, file: !368, line: 1975, column: 17)
!1277 = distinct !DILexicalBlock(scope: !1278, file: !368, line: 1975, column: 13)
!1278 = distinct !DILexicalBlock(scope: !1279, file: !368, line: 1950, column: 42)
!1279 = distinct !DILexicalBlock(scope: !1233, file: !368, line: 1950, column: 9)
!1280 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1276, file: !368, line: 1977, type: !59)
!1281 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1282, file: !368, line: 1984, type: !20)
!1282 = distinct !DILexicalBlock(scope: !1276, file: !368, line: 1984, column: 16)
!1283 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1284, file: !368, line: 1986, type: !20)
!1284 = distinct !DILexicalBlock(scope: !1285, file: !368, line: 1986, column: 20)
!1285 = distinct !DILexicalBlock(scope: !1286, file: !368, line: 1985, column: 26)
!1286 = distinct !DILexicalBlock(scope: !1276, file: !368, line: 1985, column: 17)
!1287 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "swapped", scope: !1288, file: !368, line: 1993, type: !20)
!1288 = distinct !DILexicalBlock(scope: !1289, file: !368, line: 1992, column: 86)
!1289 = distinct !DILexicalBlock(scope: !1233, file: !368, line: 1992, column: 9)
!1290 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sw_dict", scope: !1288, file: !368, line: 1995, type: !458)
!1291 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1292, file: !368, line: 1997, type: !20)
!1292 = distinct !DILexicalBlock(scope: !1293, file: !368, line: 1997, column: 16)
!1293 = distinct !DILexicalBlock(scope: !1294, file: !368, line: 1996, column: 36)
!1294 = distinct !DILexicalBlock(scope: !1288, file: !368, line: 1996, column: 13)
!1295 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1296, file: !368, line: 2016, type: !20)
!1296 = distinct !DILexicalBlock(scope: !1288, file: !368, line: 2016, column: 12)
!1297 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1298, file: !368, line: 2018, type: !20)
!1298 = distinct !DILexicalBlock(scope: !1299, file: !368, line: 2018, column: 16)
!1299 = distinct !DILexicalBlock(scope: !1300, file: !368, line: 2017, column: 31)
!1300 = distinct !DILexicalBlock(scope: !1288, file: !368, line: 2017, column: 13)
!1301 = !DISubprogram(name: "PyCSimpleType_paramfunc", scope: !368, file: !368, line: 1822, type: !493, isLocal: true, isDefinition: true, scopeLine: 1823, flags: DIFlagPrototyped, isOptimized: true, function: %struct.tagPyCArgObject* (%struct.tagCDataObject*)* @PyCSimpleType_paramfunc, variables: !1302)
!1302 = !{!1303, !1304, !1305, !1306, !1307}
!1303 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1301, file: !368, line: 1822, type: !385)
!1304 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1301, file: !368, line: 1824, type: !458)
!1305 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fmt", scope: !1301, file: !368, line: 1825, type: !67)
!1306 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parg", scope: !1301, file: !368, line: 1826, type: !424)
!1307 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !1301, file: !368, line: 1827, type: !1170)
!1308 = !DISubprogram(name: "c_char_p_from_param", scope: !368, file: !368, line: 1531, type: !142, isLocal: true, isDefinition: true, scopeLine: 1532, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @c_char_p_from_param, variables: !1309)
!1309 = !{!1310, !1311, !1312, !1313, !1314, !1317, !1318, !1322, !1325, !1326, !1329, !1330}
!1310 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1308, file: !368, line: 1531, type: !20)
!1311 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !1308, file: !368, line: 1531, type: !20)
!1312 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "as_parameter", scope: !1308, file: !368, line: 1533, type: !20)
!1313 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1308, file: !368, line: 1534, type: !59)
!1314 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parg", scope: !1315, file: !368, line: 1540, type: !424)
!1315 = distinct !DILexicalBlock(scope: !1316, file: !368, line: 1539, column: 79)
!1316 = distinct !DILexicalBlock(scope: !1308, file: !368, line: 1539, column: 9)
!1317 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !1315, file: !368, line: 1541, type: !1170)
!1318 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1319, file: !368, line: 1550, type: !20)
!1319 = distinct !DILexicalBlock(scope: !1320, file: !368, line: 1550, column: 16)
!1320 = distinct !DILexicalBlock(scope: !1321, file: !368, line: 1549, column: 38)
!1321 = distinct !DILexicalBlock(scope: !1315, file: !368, line: 1549, column: 13)
!1322 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dt", scope: !1323, file: !368, line: 1564, type: !458)
!1323 = distinct !DILexicalBlock(scope: !1324, file: !368, line: 1562, column: 267)
!1324 = distinct !DILexicalBlock(scope: !1308, file: !368, line: 1562, column: 9)
!1325 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1323, file: !368, line: 1565, type: !458)
!1326 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !1327, file: !368, line: 1575, type: !424)
!1327 = distinct !DILexicalBlock(scope: !1328, file: !368, line: 1573, column: 45)
!1328 = distinct !DILexicalBlock(scope: !1308, file: !368, line: 1573, column: 9)
!1329 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1327, file: !368, line: 1576, type: !458)
!1330 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1331, file: !368, line: 1586, type: !20)
!1331 = distinct !DILexicalBlock(scope: !1332, file: !368, line: 1586, column: 12)
!1332 = distinct !DILexicalBlock(scope: !1333, file: !368, line: 1584, column: 23)
!1333 = distinct !DILexicalBlock(scope: !1308, file: !368, line: 1584, column: 9)
!1334 = !DISubprogram(name: "c_wchar_p_from_param", scope: !368, file: !368, line: 1466, type: !142, isLocal: true, isDefinition: true, scopeLine: 1467, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @c_wchar_p_from_param, variables: !1335)
!1335 = !{!1336, !1337, !1338, !1339, !1340, !1343, !1344, !1348, !1351, !1352, !1355, !1356}
!1336 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1334, file: !368, line: 1466, type: !20)
!1337 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !1334, file: !368, line: 1466, type: !20)
!1338 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "as_parameter", scope: !1334, file: !368, line: 1468, type: !20)
!1339 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1334, file: !368, line: 1469, type: !59)
!1340 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parg", scope: !1341, file: !368, line: 1475, type: !424)
!1341 = distinct !DILexicalBlock(scope: !1342, file: !368, line: 1474, column: 151)
!1342 = distinct !DILexicalBlock(scope: !1334, file: !368, line: 1474, column: 9)
!1343 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !1341, file: !368, line: 1476, type: !1170)
!1344 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1345, file: !368, line: 1485, type: !20)
!1345 = distinct !DILexicalBlock(scope: !1346, file: !368, line: 1485, column: 16)
!1346 = distinct !DILexicalBlock(scope: !1347, file: !368, line: 1484, column: 38)
!1347 = distinct !DILexicalBlock(scope: !1341, file: !368, line: 1484, column: 13)
!1348 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dt", scope: !1349, file: !368, line: 1499, type: !458)
!1349 = distinct !DILexicalBlock(scope: !1350, file: !368, line: 1497, column: 267)
!1350 = distinct !DILexicalBlock(scope: !1334, file: !368, line: 1497, column: 9)
!1351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1349, file: !368, line: 1500, type: !458)
!1352 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !1353, file: !368, line: 1510, type: !424)
!1353 = distinct !DILexicalBlock(scope: !1354, file: !368, line: 1508, column: 45)
!1354 = distinct !DILexicalBlock(scope: !1334, file: !368, line: 1508, column: 9)
!1355 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1353, file: !368, line: 1511, type: !458)
!1356 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1357, file: !368, line: 1521, type: !20)
!1357 = distinct !DILexicalBlock(scope: !1358, file: !368, line: 1521, column: 12)
!1358 = distinct !DILexicalBlock(scope: !1359, file: !368, line: 1519, column: 23)
!1359 = distinct !DILexicalBlock(scope: !1334, file: !368, line: 1519, column: 9)
!1360 = !DISubprogram(name: "c_void_p_from_param", scope: !368, file: !368, line: 1596, type: !142, isLocal: true, isDefinition: true, scopeLine: 1597, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @c_void_p_from_param, variables: !1361)
!1361 = !{!1362, !1363, !1364, !1365, !1366, !1367, !1370, !1371, !1375, !1378, !1379, !1383, !1386, !1387, !1391, !1394, !1395, !1399, !1402, !1405, !1406, !1409}
!1362 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1360, file: !368, line: 1596, type: !20)
!1363 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !1360, file: !368, line: 1596, type: !20)
!1364 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stgd", scope: !1360, file: !368, line: 1598, type: !458)
!1365 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "as_parameter", scope: !1360, file: !368, line: 1599, type: !20)
!1366 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1360, file: !368, line: 1600, type: !59)
!1367 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parg", scope: !1368, file: !368, line: 1610, type: !424)
!1368 = distinct !DILexicalBlock(scope: !1369, file: !368, line: 1609, column: 79)
!1369 = distinct !DILexicalBlock(scope: !1360, file: !368, line: 1609, column: 9)
!1370 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !1368, file: !368, line: 1611, type: !1170)
!1371 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1372, file: !368, line: 1620, type: !20)
!1372 = distinct !DILexicalBlock(scope: !1373, file: !368, line: 1620, column: 16)
!1373 = distinct !DILexicalBlock(scope: !1374, file: !368, line: 1619, column: 38)
!1374 = distinct !DILexicalBlock(scope: !1368, file: !368, line: 1619, column: 13)
!1375 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parg", scope: !1376, file: !368, line: 1628, type: !424)
!1376 = distinct !DILexicalBlock(scope: !1377, file: !368, line: 1627, column: 79)
!1377 = distinct !DILexicalBlock(scope: !1360, file: !368, line: 1627, column: 9)
!1378 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !1376, file: !368, line: 1629, type: !1170)
!1379 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1380, file: !368, line: 1638, type: !20)
!1380 = distinct !DILexicalBlock(scope: !1381, file: !368, line: 1638, column: 16)
!1381 = distinct !DILexicalBlock(scope: !1382, file: !368, line: 1637, column: 38)
!1382 = distinct !DILexicalBlock(scope: !1376, file: !368, line: 1637, column: 13)
!1383 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parg", scope: !1384, file: !368, line: 1645, type: !424)
!1384 = distinct !DILexicalBlock(scope: !1385, file: !368, line: 1644, column: 141)
!1385 = distinct !DILexicalBlock(scope: !1360, file: !368, line: 1644, column: 9)
!1386 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !1384, file: !368, line: 1646, type: !1170)
!1387 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1388, file: !368, line: 1655, type: !20)
!1388 = distinct !DILexicalBlock(scope: !1389, file: !368, line: 1655, column: 16)
!1389 = distinct !DILexicalBlock(scope: !1390, file: !368, line: 1654, column: 38)
!1390 = distinct !DILexicalBlock(scope: !1384, file: !368, line: 1654, column: 13)
!1391 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parg", scope: !1392, file: !368, line: 1662, type: !424)
!1392 = distinct !DILexicalBlock(scope: !1393, file: !368, line: 1661, column: 79)
!1393 = distinct !DILexicalBlock(scope: !1360, file: !368, line: 1661, column: 9)
!1394 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !1392, file: !368, line: 1663, type: !1170)
!1395 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1396, file: !368, line: 1672, type: !20)
!1396 = distinct !DILexicalBlock(scope: !1397, file: !368, line: 1672, column: 16)
!1397 = distinct !DILexicalBlock(scope: !1398, file: !368, line: 1671, column: 38)
!1398 = distinct !DILexicalBlock(scope: !1392, file: !368, line: 1671, column: 13)
!1399 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !1400, file: !368, line: 1695, type: !424)
!1400 = distinct !DILexicalBlock(scope: !1401, file: !368, line: 1693, column: 45)
!1401 = distinct !DILexicalBlock(scope: !1360, file: !368, line: 1693, column: 9)
!1402 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parg", scope: !1403, file: !368, line: 1703, type: !424)
!1403 = distinct !DILexicalBlock(scope: !1404, file: !368, line: 1702, column: 139)
!1404 = distinct !DILexicalBlock(scope: !1360, file: !368, line: 1702, column: 9)
!1405 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "func", scope: !1403, file: !368, line: 1704, type: !573)
!1406 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parg", scope: !1407, file: !368, line: 1719, type: !424)
!1407 = distinct !DILexicalBlock(scope: !1408, file: !368, line: 1718, column: 234)
!1408 = distinct !DILexicalBlock(scope: !1360, file: !368, line: 1718, column: 9)
!1409 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1410, file: !368, line: 1740, type: !20)
!1410 = distinct !DILexicalBlock(scope: !1411, file: !368, line: 1740, column: 12)
!1411 = distinct !DILexicalBlock(scope: !1412, file: !368, line: 1738, column: 23)
!1412 = distinct !DILexicalBlock(scope: !1360, file: !368, line: 1738, column: 9)
!1413 = !DISubprogram(name: "CreateSwappedType", scope: !368, file: !368, line: 1753, type: !1414, isLocal: true, isDefinition: true, scopeLine: 1755, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*, %struct._object*, %struct.fielddesc*)* @CreateSwappedType, variables: !1416)
!1414 = !DISubroutineType(types: !1415)
!1415 = !{!20, !417, !20, !20, !20, !1170}
!1416 = !{!1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1432, !1434, !1438, !1440}
!1417 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1413, file: !368, line: 1753, type: !417)
!1418 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1413, file: !368, line: 1753, type: !20)
!1419 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1413, file: !368, line: 1753, type: !20)
!1420 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "proto", arg: 4, scope: !1413, file: !368, line: 1754, type: !20)
!1421 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fmt", arg: 5, scope: !1413, file: !368, line: 1754, type: !1170)
!1422 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1413, file: !368, line: 1756, type: !417)
!1423 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stgdict", scope: !1413, file: !368, line: 1757, type: !458)
!1424 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1413, file: !368, line: 1758, type: !20)
!1425 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newname", scope: !1413, file: !368, line: 1759, type: !20)
!1426 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "swapped_args", scope: !1413, file: !368, line: 1760, type: !20)
!1427 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1413, file: !368, line: 1762, type: !26)
!1428 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !1429, file: !368, line: 1782, type: !20)
!1429 = distinct !DILexicalBlock(scope: !1430, file: !368, line: 1781, column: 57)
!1430 = distinct !DILexicalBlock(scope: !1431, file: !368, line: 1781, column: 5)
!1431 = distinct !DILexicalBlock(scope: !1413, file: !368, line: 1781, column: 5)
!1432 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1433, file: !368, line: 1790, type: !20)
!1433 = distinct !DILexicalBlock(scope: !1413, file: !368, line: 1790, column: 8)
!1434 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1435, file: !368, line: 1811, type: !20)
!1435 = distinct !DILexicalBlock(scope: !1436, file: !368, line: 1811, column: 12)
!1436 = distinct !DILexicalBlock(scope: !1437, file: !368, line: 1810, column: 68)
!1437 = distinct !DILexicalBlock(scope: !1413, file: !368, line: 1810, column: 9)
!1438 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1439, file: !368, line: 1812, type: !20)
!1439 = distinct !DILexicalBlock(scope: !1436, file: !368, line: 1812, column: 12)
!1440 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1441, file: !368, line: 1815, type: !20)
!1441 = distinct !DILexicalBlock(scope: !1413, file: !368, line: 1815, column: 8)
!1442 = !DISubprogram(name: "PyCFuncPtrType_new", scope: !368, file: !368, line: 2270, type: !934, isLocal: true, isDefinition: true, scopeLine: 2271, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyCFuncPtrType_new, variables: !1443)
!1443 = !{!1444, !1445, !1446, !1447, !1448, !1449, !1453, !1457, !1461, !1463, !1465}
!1444 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1442, file: !368, line: 2270, type: !417)
!1445 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1442, file: !368, line: 2270, type: !20)
!1446 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1442, file: !368, line: 2270, type: !20)
!1447 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1442, file: !368, line: 2272, type: !417)
!1448 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stgdict", scope: !1442, file: !368, line: 2273, type: !458)
!1449 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1450, file: !368, line: 2289, type: !20)
!1450 = distinct !DILexicalBlock(scope: !1451, file: !368, line: 2289, column: 12)
!1451 = distinct !DILexicalBlock(scope: !1452, file: !368, line: 2288, column: 40)
!1452 = distinct !DILexicalBlock(scope: !1442, file: !368, line: 2288, column: 9)
!1453 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1454, file: !368, line: 2298, type: !20)
!1454 = distinct !DILexicalBlock(scope: !1455, file: !368, line: 2298, column: 12)
!1455 = distinct !DILexicalBlock(scope: !1456, file: !368, line: 2297, column: 31)
!1456 = distinct !DILexicalBlock(scope: !1442, file: !368, line: 2297, column: 9)
!1457 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1458, file: !368, line: 2304, type: !20)
!1458 = distinct !DILexicalBlock(scope: !1459, file: !368, line: 2304, column: 12)
!1459 = distinct !DILexicalBlock(scope: !1460, file: !368, line: 2303, column: 68)
!1460 = distinct !DILexicalBlock(scope: !1442, file: !368, line: 2303, column: 9)
!1461 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1462, file: !368, line: 2305, type: !20)
!1462 = distinct !DILexicalBlock(scope: !1459, file: !368, line: 2305, column: 12)
!1463 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1464, file: !368, line: 2308, type: !20)
!1464 = distinct !DILexicalBlock(scope: !1442, file: !368, line: 2308, column: 8)
!1465 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1466, file: !368, line: 2312, type: !20)
!1466 = distinct !DILexicalBlock(scope: !1467, file: !368, line: 2312, column: 12)
!1467 = distinct !DILexicalBlock(scope: !1468, file: !368, line: 2311, column: 47)
!1468 = distinct !DILexicalBlock(scope: !1442, file: !368, line: 2311, column: 9)
!1469 = !DISubprogram(name: "PyCFuncPtrType_paramfunc", scope: !368, file: !368, line: 2253, type: !493, isLocal: true, isDefinition: true, scopeLine: 2254, flags: DIFlagPrototyped, isOptimized: true, function: %struct.tagPyCArgObject* (%struct.tagCDataObject*)* @PyCFuncPtrType_paramfunc, variables: !1470)
!1470 = !{!1471, !1472}
!1471 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1469, file: !368, line: 2253, type: !385)
!1472 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "parg", scope: !1469, file: !368, line: 2255, type: !424)
!1473 = !DISubprogram(name: "make_funcptrtype_dict", scope: !368, file: !368, line: 2188, type: !1474, isLocal: true, isDefinition: true, scopeLine: 2189, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.StgDictObject*)* @make_funcptrtype_dict, variables: !1476)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!59, !458}
!1476 = !{!1477, !1478, !1479, !1480, !1482}
!1477 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "stgdict", arg: 1, scope: !1473, file: !368, line: 2188, type: !458)
!1478 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ob", scope: !1473, file: !368, line: 2190, type: !20)
!1479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "converters", scope: !1473, file: !368, line: 2191, type: !20)
!1480 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1481, file: !368, line: 2247, type: !20)
!1481 = distinct !DILexicalBlock(scope: !1473, file: !368, line: 2247, column: 8)
!1482 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1483, file: !368, line: 2247, type: !20)
!1483 = distinct !DILexicalBlock(scope: !1484, file: !368, line: 2247, column: 102)
!1484 = distinct !DILexicalBlock(scope: !1481, file: !368, line: 2247, column: 68)
!1485 = !DISubprogram(name: "converters_from_argtypes", scope: !368, file: !368, line: 2145, type: !132, isLocal: true, isDefinition: true, scopeLine: 2146, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @converters_from_argtypes, variables: !1486)
!1486 = !{!1487, !1488, !1489, !1490, !1491, !1495, !1496, !1498, !1500, !1503}
!1487 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ob", arg: 1, scope: !1485, file: !368, line: 2145, type: !20)
!1488 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "converters", scope: !1485, file: !368, line: 2147, type: !20)
!1489 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1485, file: !368, line: 2148, type: !26)
!1490 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nArgs", scope: !1485, file: !368, line: 2149, type: !26)
!1491 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tp", scope: !1492, file: !368, line: 2169, type: !20)
!1492 = distinct !DILexicalBlock(scope: !1493, file: !368, line: 2168, column: 33)
!1493 = distinct !DILexicalBlock(scope: !1494, file: !368, line: 2168, column: 5)
!1494 = distinct !DILexicalBlock(scope: !1485, file: !368, line: 2168, column: 5)
!1495 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cnv", scope: !1492, file: !368, line: 2170, type: !20)
!1496 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1497, file: !368, line: 2175, type: !20)
!1497 = distinct !DILexicalBlock(scope: !1485, file: !368, line: 2175, column: 8)
!1498 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1499, file: !368, line: 2179, type: !20)
!1499 = distinct !DILexicalBlock(scope: !1485, file: !368, line: 2179, column: 8)
!1500 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1501, file: !368, line: 2179, type: !20)
!1501 = distinct !DILexicalBlock(scope: !1502, file: !368, line: 2179, column: 102)
!1502 = distinct !DILexicalBlock(scope: !1499, file: !368, line: 2179, column: 68)
!1503 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1504, file: !368, line: 2180, type: !20)
!1504 = distinct !DILexicalBlock(scope: !1485, file: !368, line: 2180, column: 8)
!1505 = !DISubprogram(name: "PyCData_dealloc", scope: !368, file: !368, line: 2493, type: !52, isLocal: true, isDefinition: true, scopeLine: 2494, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._object*)* @PyCData_dealloc, variables: !1506)
!1506 = !{!1507}
!1507 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1505, file: !368, line: 2493, type: !20)
!1508 = !DISubprogram(name: "PyCData_nohash", scope: !368, file: !368, line: 2550, type: !232, isLocal: true, isDefinition: true, scopeLine: 2551, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct._object*)* @PyCData_nohash, variables: !1509)
!1509 = !{!1510}
!1510 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1508, file: !368, line: 2550, type: !20)
!1511 = !DISubprogram(name: "PyCData_NewGetBuffer", scope: !368, file: !368, line: 2512, type: !249, isLocal: true, isDefinition: true, scopeLine: 2513, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct.bufferinfo*, i32)* @PyCData_NewGetBuffer, variables: !1512)
!1512 = !{!1513, !1514, !1515, !1516, !1517, !1518}
!1513 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !1511, file: !368, line: 2512, type: !20)
!1514 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "view", arg: 2, scope: !1511, file: !368, line: 2512, type: !251)
!1515 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "flags", arg: 3, scope: !1511, file: !368, line: 2512, type: !59)
!1516 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1511, file: !368, line: 2514, type: !385)
!1517 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1511, file: !368, line: 2515, type: !458)
!1518 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1511, file: !368, line: 2516, type: !26)
!1519 = !DISubprogram(name: "PyCData_traverse", scope: !368, file: !368, line: 2473, type: !1520, isLocal: true, isDefinition: true, scopeLine: 2474, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.tagCDataObject*, i32 (%struct._object*, i8*)*, i8*)* @PyCData_traverse, variables: !1522)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{!59, !385, !279, !105}
!1522 = !{!1523, !1524, !1525, !1526, !1530}
!1523 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1519, file: !368, line: 2473, type: !385)
!1524 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1519, file: !368, line: 2473, type: !279)
!1525 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1519, file: !368, line: 2473, type: !105)
!1526 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1527, file: !368, line: 2475, type: !59)
!1527 = distinct !DILexicalBlock(scope: !1528, file: !368, line: 2475, column: 31)
!1528 = distinct !DILexicalBlock(scope: !1529, file: !368, line: 2475, column: 14)
!1529 = distinct !DILexicalBlock(scope: !1519, file: !368, line: 2475, column: 8)
!1530 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1531, file: !368, line: 2476, type: !59)
!1531 = distinct !DILexicalBlock(scope: !1532, file: !368, line: 2476, column: 40)
!1532 = distinct !DILexicalBlock(scope: !1533, file: !368, line: 2476, column: 14)
!1533 = distinct !DILexicalBlock(scope: !1519, file: !368, line: 2476, column: 8)
!1534 = !DISubprogram(name: "PyCData_clear", scope: !368, file: !368, line: 2481, type: !1535, isLocal: true, isDefinition: true, scopeLine: 2482, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.tagCDataObject*)* @PyCData_clear, variables: !1537)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!59, !385}
!1537 = !{!1538, !1539, !1541, !1545, !1547}
!1538 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1534, file: !368, line: 2481, type: !385)
!1539 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1540, file: !368, line: 2483, type: !20)
!1540 = distinct !DILexicalBlock(scope: !1534, file: !368, line: 2483, column: 8)
!1541 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1542, file: !368, line: 2483, type: !20)
!1542 = distinct !DILexicalBlock(scope: !1543, file: !368, line: 2483, column: 125)
!1543 = distinct !DILexicalBlock(scope: !1544, file: !368, line: 2483, column: 88)
!1544 = distinct !DILexicalBlock(scope: !1540, file: !368, line: 2483, column: 65)
!1545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1546, file: !368, line: 2488, type: !20)
!1546 = distinct !DILexicalBlock(scope: !1534, file: !368, line: 2488, column: 8)
!1547 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1548, file: !368, line: 2488, type: !20)
!1548 = distinct !DILexicalBlock(scope: !1549, file: !368, line: 2488, column: 119)
!1549 = distinct !DILexicalBlock(scope: !1550, file: !368, line: 2488, column: 85)
!1550 = distinct !DILexicalBlock(scope: !1546, file: !368, line: 2488, column: 62)
!1551 = !DISubprogram(name: "PyCData_from_outparam", scope: !368, file: !368, line: 2599, type: !142, isLocal: true, isDefinition: true, scopeLine: 2600, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @PyCData_from_outparam, variables: !1552)
!1552 = !{!1553, !1554}
!1553 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1551, file: !368, line: 2599, type: !20)
!1554 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1551, file: !368, line: 2599, type: !20)
!1555 = !DISubprogram(name: "PyCData_reduce", scope: !368, file: !368, line: 2557, type: !142, isLocal: true, isDefinition: true, scopeLine: 2558, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @PyCData_reduce, variables: !1556)
!1556 = !{!1557, !1558, !1559}
!1557 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !1555, file: !368, line: 2557, type: !20)
!1558 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1555, file: !368, line: 2557, type: !20)
!1559 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1555, file: !368, line: 2559, type: !385)
!1560 = !DISubprogram(name: "PyCData_setstate", scope: !368, file: !368, line: 2574, type: !142, isLocal: true, isDefinition: true, scopeLine: 2575, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @PyCData_setstate, variables: !1561)
!1561 = !{!1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570}
!1562 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !1560, file: !368, line: 2574, type: !20)
!1563 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1560, file: !368, line: 2574, type: !20)
!1564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1560, file: !368, line: 2576, type: !105)
!1565 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1560, file: !368, line: 2577, type: !26)
!1566 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1560, file: !368, line: 2578, type: !59)
!1567 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1560, file: !368, line: 2579, type: !20)
!1568 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mydict", scope: !1560, file: !368, line: 2579, type: !20)
!1569 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1560, file: !368, line: 2580, type: !385)
!1570 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1571, file: !368, line: 2588, type: !20)
!1571 = distinct !DILexicalBlock(scope: !1560, file: !368, line: 2588, column: 8)
!1572 = !DISubprogram(name: "PyCData_MallocBuffer", scope: !368, file: !368, line: 2654, type: !1573, isLocal: true, isDefinition: true, scopeLine: 2655, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.tagCDataObject*, %struct.StgDictObject*)* @PyCData_MallocBuffer, variables: !1575)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!59, !385, !458}
!1575 = !{!1576, !1577}
!1576 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 1, scope: !1572, file: !368, line: 2654, type: !385)
!1577 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dict", arg: 2, scope: !1572, file: !368, line: 2654, type: !458)
!1578 = !DISubprogram(name: "_PyCData_set", scope: !368, file: !368, line: 2781, type: !1579, isLocal: true, isDefinition: true, scopeLine: 2783, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.tagCDataObject*, %struct._object*, %struct._object* (i8*, %struct._object*, i64)*, %struct._object*, i64, i8*)* @_PyCData_set, variables: !1581)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!20, !385, !20, !481, !20, !26, !67}
!1581 = !{!1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1593, !1596, !1597, !1599, !1602, !1603}
!1582 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dst", arg: 1, scope: !1578, file: !368, line: 2781, type: !385)
!1583 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 2, scope: !1578, file: !368, line: 2781, type: !20)
!1584 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "setfunc", arg: 3, scope: !1578, file: !368, line: 2781, type: !481)
!1585 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 4, scope: !1578, file: !368, line: 2781, type: !20)
!1586 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 5, scope: !1578, file: !368, line: 2782, type: !26)
!1587 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 6, scope: !1578, file: !368, line: 2782, type: !67)
!1588 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "src", scope: !1578, file: !368, line: 2784, type: !385)
!1589 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "err", scope: !1578, file: !368, line: 2785, type: !59)
!1590 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1591, file: !368, line: 2791, type: !458)
!1591 = distinct !DILexicalBlock(scope: !1592, file: !368, line: 2790, column: 134)
!1592 = distinct !DILexicalBlock(scope: !1578, file: !368, line: 2790, column: 9)
!1593 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ob", scope: !1594, file: !368, line: 2800, type: !20)
!1594 = distinct !DILexicalBlock(scope: !1595, file: !368, line: 2799, column: 83)
!1595 = distinct !DILexicalBlock(scope: !1591, file: !368, line: 2799, column: 13)
!1596 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1594, file: !368, line: 2801, type: !20)
!1597 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1598, file: !368, line: 2810, type: !20)
!1598 = distinct !DILexicalBlock(scope: !1594, file: !368, line: 2810, column: 16)
!1599 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p1", scope: !1600, file: !368, line: 2847, type: !458)
!1600 = distinct !DILexicalBlock(scope: !1601, file: !368, line: 2846, column: 138)
!1601 = distinct !DILexicalBlock(scope: !1578, file: !368, line: 2845, column: 9)
!1602 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p2", scope: !1600, file: !368, line: 2847, type: !458)
!1603 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "keep", scope: !1600, file: !368, line: 2848, type: !20)
!1604 = !DISubprogram(name: "GetKeepedObjects", scope: !368, file: !368, line: 2385, type: !1115, isLocal: true, isDefinition: true, scopeLine: 2386, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.tagCDataObject*)* @GetKeepedObjects, variables: !1605)
!1605 = !{!1606, !1607}
!1606 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "target", arg: 1, scope: !1604, file: !368, line: 2385, type: !385)
!1607 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "container", scope: !1604, file: !368, line: 2387, type: !385)
!1608 = !DISubprogram(name: "PyCData_GetContainer", scope: !368, file: !368, line: 2367, type: !1609, isLocal: true, isDefinition: true, scopeLine: 2368, flags: DIFlagPrototyped, isOptimized: true, function: %struct.tagCDataObject* (%struct.tagCDataObject*)* @PyCData_GetContainer, variables: !1611)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!385, !385}
!1611 = !{!1612}
!1612 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1608, file: !368, line: 2367, type: !385)
!1613 = !DISubprogram(name: "KeepRef", scope: !368, file: !368, line: 2436, type: !1614, isLocal: true, isDefinition: true, scopeLine: 2437, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.tagCDataObject*, i64, %struct._object*)* @KeepRef, variables: !1616)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!59, !385, !26, !20}
!1616 = !{!1617, !1618, !1619, !1620, !1621, !1622, !1623, !1627, !1631, !1635, !1638, !1642, !1644}
!1617 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "target", arg: 1, scope: !1613, file: !368, line: 2436, type: !385)
!1618 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !1613, file: !368, line: 2436, type: !26)
!1619 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "keep", arg: 3, scope: !1613, file: !368, line: 2436, type: !20)
!1620 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1613, file: !368, line: 2438, type: !59)
!1621 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ob", scope: !1613, file: !368, line: 2439, type: !385)
!1622 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key", scope: !1613, file: !368, line: 2440, type: !20)
!1623 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1624, file: !368, line: 2444, type: !20)
!1624 = distinct !DILexicalBlock(scope: !1625, file: !368, line: 2444, column: 12)
!1625 = distinct !DILexicalBlock(scope: !1626, file: !368, line: 2443, column: 36)
!1626 = distinct !DILexicalBlock(scope: !1613, file: !368, line: 2443, column: 9)
!1627 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1628, file: !368, line: 2449, type: !20)
!1628 = distinct !DILexicalBlock(scope: !1629, file: !368, line: 2449, column: 12)
!1629 = distinct !DILexicalBlock(scope: !1630, file: !368, line: 2448, column: 27)
!1630 = distinct !DILexicalBlock(scope: !1613, file: !368, line: 2448, column: 9)
!1631 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1632, file: !368, line: 2453, type: !20)
!1632 = distinct !DILexicalBlock(scope: !1633, file: !368, line: 2453, column: 12)
!1633 = distinct !DILexicalBlock(scope: !1634, file: !368, line: 2452, column: 100)
!1634 = distinct !DILexicalBlock(scope: !1613, file: !368, line: 2452, column: 9)
!1635 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1636, file: !368, line: 2453, type: !20)
!1636 = distinct !DILexicalBlock(scope: !1637, file: !368, line: 2453, column: 109)
!1637 = distinct !DILexicalBlock(scope: !1632, file: !368, line: 2453, column: 75)
!1638 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1639, file: !368, line: 2459, type: !20)
!1639 = distinct !DILexicalBlock(scope: !1640, file: !368, line: 2459, column: 12)
!1640 = distinct !DILexicalBlock(scope: !1641, file: !368, line: 2458, column: 28)
!1641 = distinct !DILexicalBlock(scope: !1613, file: !368, line: 2458, column: 9)
!1642 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1643, file: !368, line: 2463, type: !20)
!1643 = distinct !DILexicalBlock(scope: !1613, file: !368, line: 2463, column: 8)
!1644 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1645, file: !368, line: 2464, type: !20)
!1645 = distinct !DILexicalBlock(scope: !1613, file: !368, line: 2464, column: 8)
!1646 = !DISubprogram(name: "unique_key", scope: !368, file: !368, line: 2395, type: !1647, isLocal: true, isDefinition: true, scopeLine: 2396, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.tagCDataObject*, i64)* @unique_key, variables: !1649)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{!20, !385, !26}
!1649 = !{!1650, !1651, !1652, !1653, !1654}
!1650 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "target", arg: 1, scope: !1646, file: !368, line: 2395, type: !385)
!1651 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !1646, file: !368, line: 2395, type: !26)
!1652 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "string", scope: !1646, file: !368, line: 2397, type: !770)
!1653 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cp", scope: !1646, file: !368, line: 2398, type: !67)
!1654 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes_left", scope: !1646, file: !368, line: 2399, type: !110)
!1655 = !DISubprogram(name: "PyCFuncPtr_dealloc", scope: !368, file: !368, line: 3924, type: !1656, isLocal: true, isDefinition: true, scopeLine: 3925, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct.PyCFuncPtrObject*)* @PyCFuncPtr_dealloc, variables: !1658)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{null, !573}
!1658 = !{!1659}
!1659 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1655, file: !368, line: 3924, type: !573)
!1660 = !DISubprogram(name: "PyCFuncPtr_repr", scope: !368, file: !368, line: 3931, type: !1661, isLocal: true, isDefinition: true, scopeLine: 3932, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyCFuncPtrObject*)* @PyCFuncPtr_repr, variables: !1663)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{!20, !573}
!1663 = !{!1664}
!1664 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1660, file: !368, line: 3931, type: !573)
!1665 = !DISubprogram(name: "PyCFuncPtr_bool", scope: !368, file: !368, line: 3946, type: !1666, isLocal: true, isDefinition: true, scopeLine: 3947, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyCFuncPtrObject*)* @PyCFuncPtr_bool, variables: !1668)
!1666 = !DISubroutineType(types: !1667)
!1667 = !{!59, !573}
!1668 = !{!1669}
!1669 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1665, file: !368, line: 3946, type: !573)
!1670 = !DISubprogram(name: "PyCFuncPtr_call", scope: !368, file: !368, line: 3764, type: !1671, isLocal: true, isDefinition: true, scopeLine: 3765, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyCFuncPtrObject*, %struct._object*, %struct._object*)* @PyCFuncPtr_call, variables: !1673)
!1671 = !DISubroutineType(types: !1672)
!1672 = !{!20, !573, !20, !20}
!1673 = !{!1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1692, !1693, !1699, !1703, !1706, !1710, !1712}
!1674 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1670, file: !368, line: 3764, type: !573)
!1675 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "inargs", arg: 2, scope: !1670, file: !368, line: 3764, type: !20)
!1676 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1670, file: !368, line: 3764, type: !20)
!1677 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "restype", scope: !1670, file: !368, line: 3766, type: !20)
!1678 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "converters", scope: !1670, file: !368, line: 3767, type: !20)
!1679 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "checker", scope: !1670, file: !368, line: 3768, type: !20)
!1680 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "argtypes", scope: !1670, file: !368, line: 3769, type: !20)
!1681 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1670, file: !368, line: 3770, type: !458)
!1682 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1670, file: !368, line: 3771, type: !20)
!1683 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "callargs", scope: !1670, file: !368, line: 3772, type: !20)
!1684 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errcheck", scope: !1670, file: !368, line: 3773, type: !20)
!1685 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pProc", scope: !1670, file: !368, line: 3777, type: !105)
!1686 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inoutmask", scope: !1670, file: !368, line: 3779, type: !59)
!1687 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "outmask", scope: !1670, file: !368, line: 3780, type: !59)
!1688 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "numretvals", scope: !1670, file: !368, line: 3781, type: !364)
!1689 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "required", scope: !1690, file: !368, line: 3831, type: !59)
!1690 = distinct !DILexicalBlock(scope: !1691, file: !368, line: 3830, column: 21)
!1691 = distinct !DILexicalBlock(scope: !1670, file: !368, line: 3830, column: 9)
!1692 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "actual", scope: !1690, file: !368, line: 3833, type: !59)
!1693 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1694, file: !368, line: 3841, type: !20)
!1694 = distinct !DILexicalBlock(scope: !1695, file: !368, line: 3841, column: 20)
!1695 = distinct !DILexicalBlock(scope: !1696, file: !368, line: 3840, column: 36)
!1696 = distinct !DILexicalBlock(scope: !1697, file: !368, line: 3840, column: 17)
!1697 = distinct !DILexicalBlock(scope: !1698, file: !368, line: 3836, column: 41)
!1698 = distinct !DILexicalBlock(scope: !1690, file: !368, line: 3836, column: 13)
!1699 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1700, file: !368, line: 3850, type: !20)
!1700 = distinct !DILexicalBlock(scope: !1701, file: !368, line: 3850, column: 16)
!1701 = distinct !DILexicalBlock(scope: !1702, file: !368, line: 3849, column: 40)
!1702 = distinct !DILexicalBlock(scope: !1698, file: !368, line: 3849, column: 20)
!1703 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !1704, file: !368, line: 3872, type: !20)
!1704 = distinct !DILexicalBlock(scope: !1705, file: !368, line: 3871, column: 43)
!1705 = distinct !DILexicalBlock(scope: !1670, file: !368, line: 3871, column: 9)
!1706 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1707, file: !368, line: 3884, type: !20)
!1707 = distinct !DILexicalBlock(scope: !1708, file: !368, line: 3884, column: 16)
!1708 = distinct !DILexicalBlock(scope: !1709, file: !368, line: 3883, column: 47)
!1709 = distinct !DILexicalBlock(scope: !1704, file: !368, line: 3883, column: 13)
!1710 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1711, file: !368, line: 3885, type: !20)
!1711 = distinct !DILexicalBlock(scope: !1708, file: !368, line: 3885, column: 16)
!1712 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1713, file: !368, line: 3888, type: !20)
!1713 = distinct !DILexicalBlock(scope: !1704, file: !368, line: 3888, column: 12)
!1714 = !DISubprogram(name: "_build_callargs", scope: !368, file: !368, line: 3534, type: !1715, isLocal: true, isDefinition: true, scopeLine: 3537, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyCFuncPtrObject*, %struct._object*, %struct._object*, %struct._object*, i32*, i32*, i32*)* @_build_callargs, variables: !1719)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!20, !573, !20, !20, !20, !1717, !1717, !1718}
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64, align: 64)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64, align: 64)
!1719 = !{!1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1738, !1739, !1740, !1741, !1742, !1743}
!1720 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1714, file: !368, line: 3534, type: !573)
!1721 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argtypes", arg: 2, scope: !1714, file: !368, line: 3534, type: !20)
!1722 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "inargs", arg: 3, scope: !1714, file: !368, line: 3535, type: !20)
!1723 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 4, scope: !1714, file: !368, line: 3535, type: !20)
!1724 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "poutmask", arg: 5, scope: !1714, file: !368, line: 3536, type: !1717)
!1725 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pinoutmask", arg: 6, scope: !1714, file: !368, line: 3536, type: !1717)
!1726 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pnumretvals", arg: 7, scope: !1714, file: !368, line: 3536, type: !1718)
!1727 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "paramflags", scope: !1714, file: !368, line: 3538, type: !20)
!1728 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "callargs", scope: !1714, file: !368, line: 3539, type: !20)
!1729 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1714, file: !368, line: 3540, type: !458)
!1730 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1714, file: !368, line: 3541, type: !26)
!1731 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1714, file: !368, line: 3541, type: !26)
!1732 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inargs_index", scope: !1714, file: !368, line: 3542, type: !59)
!1733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "actual_args", scope: !1714, file: !368, line: 3546, type: !26)
!1734 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !1735, file: !368, line: 3574, type: !20)
!1735 = distinct !DILexicalBlock(scope: !1736, file: !368, line: 3573, column: 31)
!1736 = distinct !DILexicalBlock(scope: !1737, file: !368, line: 3573, column: 5)
!1737 = distinct !DILexicalBlock(scope: !1714, file: !368, line: 3573, column: 5)
!1738 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ob", scope: !1735, file: !368, line: 3575, type: !20)
!1739 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flag", scope: !1735, file: !368, line: 3576, type: !59)
!1740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1735, file: !368, line: 3577, type: !20)
!1741 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "defval", scope: !1735, file: !368, line: 3578, type: !20)
!1742 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tsize", scope: !1735, file: !368, line: 3583, type: !26)
!1743 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1744, file: !368, line: 3693, type: !20)
!1744 = distinct !DILexicalBlock(scope: !1714, file: !368, line: 3693, column: 8)
!1745 = !DISubprogram(name: "_get_arg", scope: !368, file: !368, line: 3486, type: !1746, isLocal: true, isDefinition: true, scopeLine: 3487, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32*, %struct._object*, %struct._object*, %struct._object*, %struct._object*)* @_get_arg, variables: !1748)
!1746 = !DISubroutineType(types: !1747)
!1747 = !{!20, !1717, !20, !20, !20, !20}
!1748 = !{!1749, !1750, !1751, !1752, !1753, !1754}
!1749 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pindex", arg: 1, scope: !1745, file: !368, line: 3486, type: !1717)
!1750 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 2, scope: !1745, file: !368, line: 3486, type: !20)
!1751 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "defval", arg: 3, scope: !1745, file: !368, line: 3486, type: !20)
!1752 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "inargs", arg: 4, scope: !1745, file: !368, line: 3486, type: !20)
!1753 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 5, scope: !1745, file: !368, line: 3486, type: !20)
!1754 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !1745, file: !368, line: 3488, type: !20)
!1755 = !DISubprogram(name: "_build_result", scope: !368, file: !368, line: 3706, type: !1756, isLocal: true, isDefinition: true, scopeLine: 3708, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, i32, i32, i32)* @_build_result, variables: !1758)
!1756 = !DISubroutineType(types: !1757)
!1757 = !{!20, !20, !20, !59, !59, !364}
!1758 = !{!1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1772, !1774, !1780, !1784, !1790, !1796}
!1759 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "result", arg: 1, scope: !1755, file: !368, line: 3706, type: !20)
!1760 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "callargs", arg: 2, scope: !1755, file: !368, line: 3706, type: !20)
!1761 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "outmask", arg: 3, scope: !1755, file: !368, line: 3707, type: !59)
!1762 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "inoutmask", arg: 4, scope: !1755, file: !368, line: 3707, type: !59)
!1763 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "numretvals", arg: 5, scope: !1755, file: !368, line: 3707, type: !364)
!1764 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1755, file: !368, line: 3709, type: !364)
!1765 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !1755, file: !368, line: 3709, type: !364)
!1766 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bit", scope: !1755, file: !368, line: 3710, type: !59)
!1767 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tup", scope: !1755, file: !368, line: 3711, type: !20)
!1768 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1769, file: !368, line: 3716, type: !20)
!1769 = distinct !DILexicalBlock(scope: !1770, file: !368, line: 3716, column: 12)
!1770 = distinct !DILexicalBlock(scope: !1771, file: !368, line: 3715, column: 50)
!1771 = distinct !DILexicalBlock(scope: !1755, file: !368, line: 3715, column: 9)
!1772 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1773, file: !368, line: 3719, type: !20)
!1773 = distinct !DILexicalBlock(scope: !1755, file: !368, line: 3719, column: 8)
!1774 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1775, file: !368, line: 3726, type: !20)
!1775 = distinct !DILexicalBlock(scope: !1776, file: !368, line: 3726, column: 16)
!1776 = distinct !DILexicalBlock(scope: !1777, file: !368, line: 3725, column: 32)
!1777 = distinct !DILexicalBlock(scope: !1778, file: !368, line: 3725, column: 13)
!1778 = distinct !DILexicalBlock(scope: !1779, file: !368, line: 3723, column: 25)
!1779 = distinct !DILexicalBlock(scope: !1755, file: !368, line: 3723, column: 9)
!1780 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !1781, file: !368, line: 3733, type: !20)
!1781 = distinct !DILexicalBlock(scope: !1782, file: !368, line: 3732, column: 50)
!1782 = distinct !DILexicalBlock(scope: !1783, file: !368, line: 3732, column: 5)
!1783 = distinct !DILexicalBlock(scope: !1755, file: !368, line: 3732, column: 5)
!1784 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1785, file: !368, line: 3738, type: !20)
!1785 = distinct !DILexicalBlock(scope: !1786, file: !368, line: 3738, column: 20)
!1786 = distinct !DILexicalBlock(scope: !1787, file: !368, line: 3737, column: 34)
!1787 = distinct !DILexicalBlock(scope: !1788, file: !368, line: 3737, column: 17)
!1788 = distinct !DILexicalBlock(scope: !1789, file: !368, line: 3734, column: 30)
!1789 = distinct !DILexicalBlock(scope: !1781, file: !368, line: 3734, column: 13)
!1790 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1791, file: !368, line: 3749, type: !20)
!1791 = distinct !DILexicalBlock(scope: !1792, file: !368, line: 3749, column: 20)
!1792 = distinct !DILexicalBlock(scope: !1793, file: !368, line: 3748, column: 53)
!1793 = distinct !DILexicalBlock(scope: !1794, file: !368, line: 3748, column: 17)
!1794 = distinct !DILexicalBlock(scope: !1795, file: !368, line: 3743, column: 35)
!1795 = distinct !DILexicalBlock(scope: !1789, file: !368, line: 3743, column: 20)
!1796 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1797, file: !368, line: 3759, type: !20)
!1797 = distinct !DILexicalBlock(scope: !1755, file: !368, line: 3759, column: 8)
!1798 = !DISubprogram(name: "PyCFuncPtr_traverse", scope: !368, file: !368, line: 3896, type: !1799, isLocal: true, isDefinition: true, scopeLine: 3897, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyCFuncPtrObject*, i32 (%struct._object*, i8*)*, i8*)* @PyCFuncPtr_traverse, variables: !1801)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!59, !573, !279, !105}
!1801 = !{!1802, !1803, !1804, !1805, !1809, !1813, !1817, !1821, !1825, !1829, !1833}
!1802 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1798, file: !368, line: 3896, type: !573)
!1803 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "visit", arg: 2, scope: !1798, file: !368, line: 3896, type: !279)
!1804 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 3, scope: !1798, file: !368, line: 3896, type: !105)
!1805 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1806, file: !368, line: 3898, type: !59)
!1806 = distinct !DILexicalBlock(scope: !1807, file: !368, line: 3898, column: 30)
!1807 = distinct !DILexicalBlock(scope: !1808, file: !368, line: 3898, column: 14)
!1808 = distinct !DILexicalBlock(scope: !1798, file: !368, line: 3898, column: 8)
!1809 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1810, file: !368, line: 3899, type: !59)
!1810 = distinct !DILexicalBlock(scope: !1811, file: !368, line: 3899, column: 29)
!1811 = distinct !DILexicalBlock(scope: !1812, file: !368, line: 3899, column: 14)
!1812 = distinct !DILexicalBlock(scope: !1798, file: !368, line: 3899, column: 8)
!1813 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1814, file: !368, line: 3900, type: !59)
!1814 = distinct !DILexicalBlock(scope: !1815, file: !368, line: 3900, column: 29)
!1815 = distinct !DILexicalBlock(scope: !1816, file: !368, line: 3900, column: 14)
!1816 = distinct !DILexicalBlock(scope: !1798, file: !368, line: 3900, column: 8)
!1817 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1818, file: !368, line: 3901, type: !59)
!1818 = distinct !DILexicalBlock(scope: !1819, file: !368, line: 3901, column: 30)
!1819 = distinct !DILexicalBlock(scope: !1820, file: !368, line: 3901, column: 14)
!1820 = distinct !DILexicalBlock(scope: !1798, file: !368, line: 3901, column: 8)
!1821 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1822, file: !368, line: 3902, type: !59)
!1822 = distinct !DILexicalBlock(scope: !1823, file: !368, line: 3902, column: 30)
!1823 = distinct !DILexicalBlock(scope: !1824, file: !368, line: 3902, column: 14)
!1824 = distinct !DILexicalBlock(scope: !1798, file: !368, line: 3902, column: 8)
!1825 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1826, file: !368, line: 3903, type: !59)
!1826 = distinct !DILexicalBlock(scope: !1827, file: !368, line: 3903, column: 32)
!1827 = distinct !DILexicalBlock(scope: !1828, file: !368, line: 3903, column: 14)
!1828 = distinct !DILexicalBlock(scope: !1798, file: !368, line: 3903, column: 8)
!1829 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1830, file: !368, line: 3904, type: !59)
!1830 = distinct !DILexicalBlock(scope: !1831, file: !368, line: 3904, column: 32)
!1831 = distinct !DILexicalBlock(scope: !1832, file: !368, line: 3904, column: 14)
!1832 = distinct !DILexicalBlock(scope: !1798, file: !368, line: 3904, column: 8)
!1833 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vret", scope: !1834, file: !368, line: 3905, type: !59)
!1834 = distinct !DILexicalBlock(scope: !1835, file: !368, line: 3905, column: 27)
!1835 = distinct !DILexicalBlock(scope: !1836, file: !368, line: 3905, column: 14)
!1836 = distinct !DILexicalBlock(scope: !1798, file: !368, line: 3905, column: 8)
!1837 = !DISubprogram(name: "PyCFuncPtr_clear", scope: !368, file: !368, line: 3910, type: !1666, isLocal: true, isDefinition: true, scopeLine: 3911, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyCFuncPtrObject*)* @PyCFuncPtr_clear, variables: !1838)
!1838 = !{!1839, !1840, !1842, !1846, !1848, !1852, !1854, !1858, !1860, !1864, !1866, !1870, !1872, !1876, !1878, !1882, !1884}
!1839 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1837, file: !368, line: 3910, type: !573)
!1840 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1841, file: !368, line: 3912, type: !20)
!1841 = distinct !DILexicalBlock(scope: !1837, file: !368, line: 3912, column: 8)
!1842 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1843, file: !368, line: 3912, type: !20)
!1843 = distinct !DILexicalBlock(scope: !1844, file: !368, line: 3912, column: 123)
!1844 = distinct !DILexicalBlock(scope: !1845, file: !368, line: 3912, column: 87)
!1845 = distinct !DILexicalBlock(scope: !1841, file: !368, line: 3912, column: 64)
!1846 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1847, file: !368, line: 3913, type: !20)
!1847 = distinct !DILexicalBlock(scope: !1837, file: !368, line: 3913, column: 8)
!1848 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1849, file: !368, line: 3913, type: !20)
!1849 = distinct !DILexicalBlock(scope: !1850, file: !368, line: 3913, column: 121)
!1850 = distinct !DILexicalBlock(scope: !1851, file: !368, line: 3913, column: 86)
!1851 = distinct !DILexicalBlock(scope: !1847, file: !368, line: 3913, column: 63)
!1852 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1853, file: !368, line: 3914, type: !20)
!1853 = distinct !DILexicalBlock(scope: !1837, file: !368, line: 3914, column: 8)
!1854 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1855, file: !368, line: 3914, type: !20)
!1855 = distinct !DILexicalBlock(scope: !1856, file: !368, line: 3914, column: 121)
!1856 = distinct !DILexicalBlock(scope: !1857, file: !368, line: 3914, column: 86)
!1857 = distinct !DILexicalBlock(scope: !1853, file: !368, line: 3914, column: 63)
!1858 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1859, file: !368, line: 3915, type: !20)
!1859 = distinct !DILexicalBlock(scope: !1837, file: !368, line: 3915, column: 8)
!1860 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1861, file: !368, line: 3915, type: !20)
!1861 = distinct !DILexicalBlock(scope: !1862, file: !368, line: 3915, column: 123)
!1862 = distinct !DILexicalBlock(scope: !1863, file: !368, line: 3915, column: 87)
!1863 = distinct !DILexicalBlock(scope: !1859, file: !368, line: 3915, column: 64)
!1864 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1865, file: !368, line: 3916, type: !20)
!1865 = distinct !DILexicalBlock(scope: !1837, file: !368, line: 3916, column: 8)
!1866 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1867, file: !368, line: 3916, type: !20)
!1867 = distinct !DILexicalBlock(scope: !1868, file: !368, line: 3916, column: 123)
!1868 = distinct !DILexicalBlock(scope: !1869, file: !368, line: 3916, column: 87)
!1869 = distinct !DILexicalBlock(scope: !1865, file: !368, line: 3916, column: 64)
!1870 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1871, file: !368, line: 3917, type: !20)
!1871 = distinct !DILexicalBlock(scope: !1837, file: !368, line: 3917, column: 8)
!1872 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1873, file: !368, line: 3917, type: !20)
!1873 = distinct !DILexicalBlock(scope: !1874, file: !368, line: 3917, column: 127)
!1874 = distinct !DILexicalBlock(scope: !1875, file: !368, line: 3917, column: 89)
!1875 = distinct !DILexicalBlock(scope: !1871, file: !368, line: 3917, column: 66)
!1876 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1877, file: !368, line: 3918, type: !20)
!1877 = distinct !DILexicalBlock(scope: !1837, file: !368, line: 3918, column: 8)
!1878 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1879, file: !368, line: 3918, type: !20)
!1879 = distinct !DILexicalBlock(scope: !1880, file: !368, line: 3918, column: 127)
!1880 = distinct !DILexicalBlock(scope: !1881, file: !368, line: 3918, column: 89)
!1881 = distinct !DILexicalBlock(scope: !1877, file: !368, line: 3918, column: 66)
!1882 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1883, file: !368, line: 3919, type: !20)
!1883 = distinct !DILexicalBlock(scope: !1837, file: !368, line: 3919, column: 8)
!1884 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1885, file: !368, line: 3919, type: !20)
!1885 = distinct !DILexicalBlock(scope: !1886, file: !368, line: 3919, column: 117)
!1886 = distinct !DILexicalBlock(scope: !1887, file: !368, line: 3919, column: 84)
!1887 = distinct !DILexicalBlock(scope: !1883, file: !368, line: 3919, column: 61)
!1888 = !DISubprogram(name: "PyCFuncPtr_get_errcheck", scope: !368, file: !368, line: 2963, type: !1661, isLocal: true, isDefinition: true, scopeLine: 2964, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyCFuncPtrObject*)* @PyCFuncPtr_get_errcheck, variables: !1889)
!1889 = !{!1890}
!1890 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1888, file: !368, line: 2963, type: !573)
!1891 = !DISubprogram(name: "PyCFuncPtr_set_errcheck", scope: !368, file: !368, line: 2949, type: !1892, isLocal: true, isDefinition: true, scopeLine: 2950, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyCFuncPtrObject*, %struct._object*)* @PyCFuncPtr_set_errcheck, variables: !1894)
!1892 = !DISubroutineType(types: !1893)
!1893 = !{!59, !573, !20}
!1894 = !{!1895, !1896, !1897, !1899, !1902}
!1895 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1891, file: !368, line: 2949, type: !573)
!1896 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ob", arg: 2, scope: !1891, file: !368, line: 2949, type: !20)
!1897 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1898, file: !368, line: 2956, type: !20)
!1898 = distinct !DILexicalBlock(scope: !1891, file: !368, line: 2956, column: 8)
!1899 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1900, file: !368, line: 2956, type: !20)
!1900 = distinct !DILexicalBlock(scope: !1901, file: !368, line: 2956, column: 106)
!1901 = distinct !DILexicalBlock(scope: !1898, file: !368, line: 2956, column: 72)
!1902 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !1903, file: !368, line: 2957, type: !20)
!1903 = distinct !DILexicalBlock(scope: !1891, file: !368, line: 2957, column: 8)
!1904 = !DISubprogram(name: "PyCFuncPtr_get_restype", scope: !368, file: !368, line: 2997, type: !1661, isLocal: true, isDefinition: true, scopeLine: 2998, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyCFuncPtrObject*)* @PyCFuncPtr_get_restype, variables: !1905)
!1905 = !{!1906, !1907}
!1906 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1904, file: !368, line: 2997, type: !573)
!1907 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1904, file: !368, line: 2999, type: !458)
!1908 = !DISubprogram(name: "PyCFuncPtr_set_restype", scope: !368, file: !368, line: 2974, type: !1892, isLocal: true, isDefinition: true, scopeLine: 2975, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyCFuncPtrObject*, %struct._object*)* @PyCFuncPtr_set_restype, variables: !1909)
!1909 = !{!1910, !1911, !1912, !1916, !1920, !1922, !1926, !1928, !1931, !1933}
!1910 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1908, file: !368, line: 2974, type: !573)
!1911 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ob", arg: 2, scope: !1908, file: !368, line: 2974, type: !20)
!1912 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1913, file: !368, line: 2977, type: !20)
!1913 = distinct !DILexicalBlock(scope: !1914, file: !368, line: 2977, column: 12)
!1914 = distinct !DILexicalBlock(scope: !1915, file: !368, line: 2976, column: 27)
!1915 = distinct !DILexicalBlock(scope: !1908, file: !368, line: 2976, column: 9)
!1916 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1917, file: !368, line: 2977, type: !20)
!1917 = distinct !DILexicalBlock(scope: !1918, file: !368, line: 2977, column: 125)
!1918 = distinct !DILexicalBlock(scope: !1919, file: !368, line: 2977, column: 90)
!1919 = distinct !DILexicalBlock(scope: !1913, file: !368, line: 2977, column: 67)
!1920 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1921, file: !368, line: 2978, type: !20)
!1921 = distinct !DILexicalBlock(scope: !1914, file: !368, line: 2978, column: 12)
!1922 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1923, file: !368, line: 2978, type: !20)
!1923 = distinct !DILexicalBlock(scope: !1924, file: !368, line: 2978, column: 125)
!1924 = distinct !DILexicalBlock(scope: !1925, file: !368, line: 2978, column: 90)
!1925 = distinct !DILexicalBlock(scope: !1921, file: !368, line: 2978, column: 67)
!1926 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1927, file: !368, line: 2986, type: !20)
!1927 = distinct !DILexicalBlock(scope: !1908, file: !368, line: 2986, column: 8)
!1928 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1929, file: !368, line: 2986, type: !20)
!1929 = distinct !DILexicalBlock(scope: !1930, file: !368, line: 2986, column: 105)
!1930 = distinct !DILexicalBlock(scope: !1927, file: !368, line: 2986, column: 71)
!1931 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1932, file: !368, line: 2987, type: !20)
!1932 = distinct !DILexicalBlock(scope: !1908, file: !368, line: 2987, column: 8)
!1933 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1934, file: !368, line: 2987, type: !20)
!1934 = distinct !DILexicalBlock(scope: !1935, file: !368, line: 2987, column: 105)
!1935 = distinct !DILexicalBlock(scope: !1932, file: !368, line: 2987, column: 71)
!1936 = !DISubprogram(name: "PyCFuncPtr_get_argtypes", scope: !368, file: !368, line: 3037, type: !1661, isLocal: true, isDefinition: true, scopeLine: 3038, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.PyCFuncPtrObject*)* @PyCFuncPtr_get_argtypes, variables: !1937)
!1937 = !{!1938, !1939}
!1938 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1936, file: !368, line: 3037, type: !573)
!1939 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1936, file: !368, line: 3039, type: !458)
!1940 = !DISubprogram(name: "PyCFuncPtr_set_argtypes", scope: !368, file: !368, line: 3016, type: !1892, isLocal: true, isDefinition: true, scopeLine: 3017, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.PyCFuncPtrObject*, %struct._object*)* @PyCFuncPtr_set_argtypes, variables: !1941)
!1941 = !{!1942, !1943, !1944, !1945, !1949, !1953, !1955, !1959, !1962, !1965, !1967}
!1942 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1940, file: !368, line: 3016, type: !573)
!1943 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ob", arg: 2, scope: !1940, file: !368, line: 3016, type: !20)
!1944 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "converters", scope: !1940, file: !368, line: 3018, type: !20)
!1945 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1946, file: !368, line: 3021, type: !20)
!1946 = distinct !DILexicalBlock(scope: !1947, file: !368, line: 3021, column: 12)
!1947 = distinct !DILexicalBlock(scope: !1948, file: !368, line: 3020, column: 54)
!1948 = distinct !DILexicalBlock(scope: !1940, file: !368, line: 3020, column: 9)
!1949 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1950, file: !368, line: 3021, type: !20)
!1950 = distinct !DILexicalBlock(scope: !1951, file: !368, line: 3021, column: 131)
!1951 = distinct !DILexicalBlock(scope: !1952, file: !368, line: 3021, column: 93)
!1952 = distinct !DILexicalBlock(scope: !1946, file: !368, line: 3021, column: 70)
!1953 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1954, file: !368, line: 3022, type: !20)
!1954 = distinct !DILexicalBlock(scope: !1947, file: !368, line: 3022, column: 12)
!1955 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1956, file: !368, line: 3022, type: !20)
!1956 = distinct !DILexicalBlock(scope: !1957, file: !368, line: 3022, column: 127)
!1957 = distinct !DILexicalBlock(scope: !1958, file: !368, line: 3022, column: 91)
!1958 = distinct !DILexicalBlock(scope: !1954, file: !368, line: 3022, column: 68)
!1959 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1960, file: !368, line: 3027, type: !20)
!1960 = distinct !DILexicalBlock(scope: !1961, file: !368, line: 3027, column: 12)
!1961 = distinct !DILexicalBlock(scope: !1948, file: !368, line: 3023, column: 12)
!1962 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1963, file: !368, line: 3027, type: !20)
!1963 = distinct !DILexicalBlock(scope: !1964, file: !368, line: 3027, column: 112)
!1964 = distinct !DILexicalBlock(scope: !1960, file: !368, line: 3027, column: 78)
!1965 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1966, file: !368, line: 3029, type: !20)
!1966 = distinct !DILexicalBlock(scope: !1961, file: !368, line: 3029, column: 12)
!1967 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1968, file: !368, line: 3029, type: !20)
!1968 = distinct !DILexicalBlock(scope: !1969, file: !368, line: 3029, column: 110)
!1969 = distinct !DILexicalBlock(scope: !1966, file: !368, line: 3029, column: 76)
!1970 = !DISubprogram(name: "PyCFuncPtr_new", scope: !368, file: !368, line: 3370, type: !934, isLocal: true, isDefinition: true, scopeLine: 3371, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyCFuncPtr_new, variables: !1971)
!1971 = !{!1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1982, !1983, !1987}
!1972 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1970, file: !368, line: 3370, type: !417)
!1973 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1970, file: !368, line: 3370, type: !20)
!1974 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1970, file: !368, line: 3370, type: !20)
!1975 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1970, file: !368, line: 3372, type: !573)
!1976 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "callable", scope: !1970, file: !368, line: 3373, type: !20)
!1977 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1970, file: !368, line: 3374, type: !458)
!1978 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "thunk", scope: !1970, file: !368, line: 3375, type: !587)
!1979 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ob", scope: !1980, file: !368, line: 3390, type: !385)
!1980 = distinct !DILexicalBlock(scope: !1981, file: !368, line: 3389, column: 118)
!1981 = distinct !DILexicalBlock(scope: !1970, file: !368, line: 3388, column: 9)
!1982 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !1980, file: !368, line: 3391, type: !105)
!1983 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1984, file: !368, line: 3440, type: !20)
!1984 = distinct !DILexicalBlock(scope: !1985, file: !368, line: 3440, column: 12)
!1985 = distinct !DILexicalBlock(scope: !1986, file: !368, line: 3439, column: 29)
!1986 = distinct !DILexicalBlock(scope: !1970, file: !368, line: 3439, column: 9)
!1987 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1988, file: !368, line: 3452, type: !20)
!1988 = distinct !DILexicalBlock(scope: !1989, file: !368, line: 3452, column: 12)
!1989 = distinct !DILexicalBlock(scope: !1990, file: !368, line: 3451, column: 67)
!1990 = distinct !DILexicalBlock(scope: !1970, file: !368, line: 3451, column: 9)
!1991 = !DISubprogram(name: "PyCFuncPtr_FromDll", scope: !368, file: !368, line: 3227, type: !934, isLocal: true, isDefinition: true, scopeLine: 3228, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyCFuncPtr_FromDll, variables: !1992)
!1992 = !{!1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2008, !2012, !2016, !2018, !2020, !2024, !2028, !2030, !2032}
!1993 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1991, file: !368, line: 3227, type: !417)
!1994 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1991, file: !368, line: 3227, type: !20)
!1995 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !1991, file: !368, line: 3227, type: !20)
!1996 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1991, file: !368, line: 3229, type: !67)
!1997 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "address", scope: !1991, file: !368, line: 3230, type: !645)
!1998 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ftuple", scope: !1991, file: !368, line: 3231, type: !20)
!1999 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dll", scope: !1991, file: !368, line: 3232, type: !20)
!2000 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !1991, file: !368, line: 3233, type: !20)
!2001 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !1991, file: !368, line: 3234, type: !573)
!2002 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "handle", scope: !1991, file: !368, line: 3235, type: !105)
!2003 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "paramflags", scope: !1991, file: !368, line: 3236, type: !20)
!2004 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2005, file: !368, line: 3249, type: !20)
!2005 = distinct !DILexicalBlock(scope: !2006, file: !368, line: 3249, column: 12)
!2006 = distinct !DILexicalBlock(scope: !2007, file: !368, line: 3248, column: 74)
!2007 = distinct !DILexicalBlock(scope: !1991, file: !368, line: 3248, column: 9)
!2008 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2009, file: !368, line: 3255, type: !20)
!2009 = distinct !DILexicalBlock(scope: !2010, file: !368, line: 3255, column: 12)
!2010 = distinct !DILexicalBlock(scope: !2011, file: !368, line: 3254, column: 15)
!2011 = distinct !DILexicalBlock(scope: !1991, file: !368, line: 3254, column: 9)
!2012 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2013, file: !368, line: 3261, type: !20)
!2013 = distinct !DILexicalBlock(scope: !2014, file: !368, line: 3261, column: 12)
!2014 = distinct !DILexicalBlock(scope: !2015, file: !368, line: 3258, column: 78)
!2015 = distinct !DILexicalBlock(scope: !1991, file: !368, line: 3258, column: 9)
!2016 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2017, file: !368, line: 3262, type: !20)
!2017 = distinct !DILexicalBlock(scope: !2014, file: !368, line: 3262, column: 12)
!2018 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2019, file: !368, line: 3266, type: !20)
!2019 = distinct !DILexicalBlock(scope: !1991, file: !368, line: 3266, column: 8)
!2020 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2021, file: !368, line: 3270, type: !20)
!2021 = distinct !DILexicalBlock(scope: !2022, file: !368, line: 3270, column: 12)
!2022 = distinct !DILexicalBlock(scope: !2023, file: !368, line: 3267, column: 27)
!2023 = distinct !DILexicalBlock(scope: !1991, file: !368, line: 3267, column: 9)
!2024 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2025, file: !368, line: 3299, type: !20)
!2025 = distinct !DILexicalBlock(scope: !2026, file: !368, line: 3299, column: 12)
!2026 = distinct !DILexicalBlock(scope: !2027, file: !368, line: 3290, column: 19)
!2027 = distinct !DILexicalBlock(scope: !1991, file: !368, line: 3290, column: 9)
!2028 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2029, file: !368, line: 3304, type: !20)
!2029 = distinct !DILexicalBlock(scope: !1991, file: !368, line: 3304, column: 8)
!2030 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !2031, file: !368, line: 3312, type: !20)
!2031 = distinct !DILexicalBlock(scope: !1991, file: !368, line: 3312, column: 8)
!2032 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2033, file: !368, line: 3318, type: !20)
!2033 = distinct !DILexicalBlock(scope: !2034, file: !368, line: 3318, column: 12)
!2034 = distinct !DILexicalBlock(scope: !2035, file: !368, line: 3317, column: 53)
!2035 = distinct !DILexicalBlock(scope: !1991, file: !368, line: 3317, column: 9)
!2036 = !DISubprogram(name: "_get_name", scope: !368, file: !368, line: 3201, type: !2037, isLocal: true, isDefinition: true, scopeLine: 3202, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i8**)* @_get_name, variables: !2039)
!2037 = !DISubroutineType(types: !2038)
!2038 = !{!59, !20, !656}
!2039 = !{!2040, !2041}
!2040 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 1, scope: !2036, file: !368, line: 3201, type: !20)
!2041 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pname", arg: 2, scope: !2036, file: !368, line: 3201, type: !656)
!2042 = !DISubprogram(name: "_validate_paramflags", scope: !368, file: !368, line: 3142, type: !2043, isLocal: true, isDefinition: true, scopeLine: 3143, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._typeobject*, %struct._object*)* @_validate_paramflags, variables: !2045)
!2043 = !DISubroutineType(types: !2044)
!2044 = !{!59, !417, !20}
!2045 = !{!2046, !2047, !2048, !2049, !2050, !2051, !2052, !2056, !2057, !2058, !2059}
!2046 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2042, file: !368, line: 3142, type: !417)
!2047 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "paramflags", arg: 2, scope: !2042, file: !368, line: 3142, type: !20)
!2048 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2042, file: !368, line: 3144, type: !26)
!2049 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !2042, file: !368, line: 3144, type: !26)
!2050 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !2042, file: !368, line: 3145, type: !458)
!2051 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "argtypes", scope: !2042, file: !368, line: 3146, type: !20)
!2052 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !2053, file: !368, line: 3169, type: !20)
!2053 = distinct !DILexicalBlock(scope: !2054, file: !368, line: 3168, column: 31)
!2054 = distinct !DILexicalBlock(scope: !2055, file: !368, line: 3168, column: 5)
!2055 = distinct !DILexicalBlock(scope: !2042, file: !368, line: 3168, column: 5)
!2056 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flag", scope: !2053, file: !368, line: 3170, type: !59)
!2057 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2053, file: !368, line: 3171, type: !67)
!2058 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "defval", scope: !2053, file: !368, line: 3172, type: !20)
!2059 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "typ", scope: !2053, file: !368, line: 3173, type: !20)
!2060 = !DISubprogram(name: "_check_outarg_type", scope: !368, file: !368, line: 3112, type: !2061, isLocal: true, isDefinition: true, scopeLine: 3113, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64)* @_check_outarg_type, variables: !2063)
!2061 = !DISubroutineType(types: !2062)
!2062 = !{!59, !20, !26}
!2063 = !{!2064, !2065, !2066}
!2064 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 1, scope: !2060, file: !368, line: 3112, type: !20)
!2065 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !2060, file: !368, line: 3112, type: !26)
!2066 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !2060, file: !368, line: 3114, type: !458)
!2067 = !DISubprogram(name: "Array_length", scope: !368, file: !368, line: 4444, type: !194, isLocal: true, isDefinition: true, scopeLine: 4445, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct._object*)* @Array_length, variables: !2068)
!2068 = !{!2069, !2070}
!2069 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !2067, file: !368, line: 4444, type: !20)
!2070 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2067, file: !368, line: 4446, type: !385)
!2071 = !DISubprogram(name: "Array_item", scope: !368, file: !368, line: 4226, type: !200, isLocal: true, isDefinition: true, scopeLine: 4227, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i64)* @Array_item, variables: !2072)
!2072 = !{!2073, !2074, !2075, !2076, !2077, !2078}
!2073 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !2071, file: !368, line: 4226, type: !20)
!2074 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !2071, file: !368, line: 4226, type: !26)
!2075 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2071, file: !368, line: 4228, type: !385)
!2076 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !2071, file: !368, line: 4229, type: !26)
!2077 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !2071, file: !368, line: 4229, type: !26)
!2078 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stgdict", scope: !2071, file: !368, line: 4230, type: !458)
!2079 = !DISubprogram(name: "Array_ass_item", scope: !368, file: !368, line: 4358, type: !207, isLocal: true, isDefinition: true, scopeLine: 4359, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64, %struct._object*)* @Array_ass_item, variables: !2080)
!2080 = !{!2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088}
!2081 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !2079, file: !368, line: 4358, type: !20)
!2082 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !2079, file: !368, line: 4358, type: !26)
!2083 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 3, scope: !2079, file: !368, line: 4358, type: !20)
!2084 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2079, file: !368, line: 4360, type: !385)
!2085 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !2079, file: !368, line: 4361, type: !26)
!2086 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !2079, file: !368, line: 4361, type: !26)
!2087 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stgdict", scope: !2079, file: !368, line: 4362, type: !458)
!2088 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !2079, file: !368, line: 4363, type: !67)
!2089 = !DISubprogram(name: "Array_subscript", scope: !368, file: !368, line: 4252, type: !142, isLocal: true, isDefinition: true, scopeLine: 4253, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @Array_subscript, variables: !2090)
!2090 = !{!2091, !2092, !2093, !2094, !2097, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2112, !2113, !2116, !2117, !2121}
!2091 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !2089, file: !368, line: 4252, type: !20)
!2092 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 2, scope: !2089, file: !368, line: 4252, type: !20)
!2093 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2089, file: !368, line: 4254, type: !385)
!2094 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2095, file: !368, line: 4257, type: !26)
!2095 = distinct !DILexicalBlock(scope: !2096, file: !368, line: 4256, column: 113)
!2096 = distinct !DILexicalBlock(scope: !2089, file: !368, line: 4256, column: 9)
!2097 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stgdict", scope: !2098, file: !368, line: 4266, type: !458)
!2098 = distinct !DILexicalBlock(scope: !2099, file: !368, line: 4265, column: 65)
!2099 = distinct !DILexicalBlock(scope: !2096, file: !368, line: 4265, column: 14)
!2100 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "itemdict", scope: !2098, file: !368, line: 4266, type: !458)
!2101 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "proto", scope: !2098, file: !368, line: 4267, type: !20)
!2102 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "np", scope: !2098, file: !368, line: 4268, type: !20)
!2103 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !2098, file: !368, line: 4269, type: !26)
!2104 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !2098, file: !368, line: 4269, type: !26)
!2105 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !2098, file: !368, line: 4269, type: !26)
!2106 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "slicelen", scope: !2098, file: !368, line: 4269, type: !26)
!2107 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cur", scope: !2098, file: !368, line: 4269, type: !26)
!2108 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2098, file: !368, line: 4269, type: !26)
!2109 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !2110, file: !368, line: 4285, type: !67)
!2110 = distinct !DILexicalBlock(scope: !2111, file: !368, line: 4284, column: 71)
!2111 = distinct !DILexicalBlock(scope: !2098, file: !368, line: 4284, column: 13)
!2112 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dest", scope: !2110, file: !368, line: 4286, type: !67)
!2113 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !2114, file: !368, line: 4310, type: !513)
!2114 = distinct !DILexicalBlock(scope: !2115, file: !368, line: 4309, column: 71)
!2115 = distinct !DILexicalBlock(scope: !2098, file: !368, line: 4309, column: 13)
!2116 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dest", scope: !2114, file: !368, line: 4311, type: !513)
!2117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !2118, file: !368, line: 4340, type: !20)
!2118 = distinct !DILexicalBlock(scope: !2119, file: !368, line: 4339, column: 32)
!2119 = distinct !DILexicalBlock(scope: !2120, file: !368, line: 4338, column: 9)
!2120 = distinct !DILexicalBlock(scope: !2098, file: !368, line: 4338, column: 9)
!2121 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2122, file: !368, line: 4342, type: !20)
!2122 = distinct !DILexicalBlock(scope: !2123, file: !368, line: 4342, column: 20)
!2123 = distinct !DILexicalBlock(scope: !2124, file: !368, line: 4341, column: 34)
!2124 = distinct !DILexicalBlock(scope: !2118, file: !368, line: 4341, column: 17)
!2125 = !DISubprogram(name: "Array_ass_subscript", scope: !368, file: !368, line: 4387, type: !227, isLocal: true, isDefinition: true, scopeLine: 4388, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @Array_ass_subscript, variables: !2126)
!2126 = !{!2127, !2128, !2129, !2130, !2131, !2134, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2147, !2148}
!2127 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !2125, file: !368, line: 4387, type: !20)
!2128 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 2, scope: !2125, file: !368, line: 4387, type: !20)
!2129 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 3, scope: !2125, file: !368, line: 4387, type: !20)
!2130 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2125, file: !368, line: 4389, type: !385)
!2131 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2132, file: !368, line: 4398, type: !26)
!2132 = distinct !DILexicalBlock(scope: !2133, file: !368, line: 4397, column: 113)
!2133 = distinct !DILexicalBlock(scope: !2125, file: !368, line: 4397, column: 9)
!2134 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !2135, file: !368, line: 4407, type: !26)
!2135 = distinct !DILexicalBlock(scope: !2136, file: !368, line: 4406, column: 65)
!2136 = distinct !DILexicalBlock(scope: !2133, file: !368, line: 4406, column: 14)
!2137 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !2135, file: !368, line: 4407, type: !26)
!2138 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !2135, file: !368, line: 4407, type: !26)
!2139 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "slicelen", scope: !2135, file: !368, line: 4407, type: !26)
!2140 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "otherlen", scope: !2135, file: !368, line: 4407, type: !26)
!2141 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2135, file: !368, line: 4407, type: !26)
!2142 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cur", scope: !2135, file: !368, line: 4407, type: !26)
!2143 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "item", scope: !2144, file: !368, line: 4425, type: !20)
!2144 = distinct !DILexicalBlock(scope: !2145, file: !368, line: 4424, column: 66)
!2145 = distinct !DILexicalBlock(scope: !2146, file: !368, line: 4424, column: 9)
!2146 = distinct !DILexicalBlock(scope: !2135, file: !368, line: 4424, column: 9)
!2147 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2144, file: !368, line: 4426, type: !59)
!2148 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2149, file: !368, line: 4430, type: !20)
!2149 = distinct !DILexicalBlock(scope: !2144, file: !368, line: 4430, column: 16)
!2150 = !DISubprogram(name: "Array_init", scope: !368, file: !368, line: 4205, type: !2151, isLocal: true, isDefinition: true, scopeLine: 4206, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.tagCDataObject*, %struct._object*, %struct._object*)* @Array_init, variables: !2153)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{!59, !385, !20, !20}
!2153 = !{!2154, !2155, !2156, !2157, !2158, !2159}
!2154 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2150, file: !368, line: 4205, type: !385)
!2155 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2150, file: !368, line: 4205, type: !20)
!2156 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !2150, file: !368, line: 4205, type: !20)
!2157 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2150, file: !368, line: 4207, type: !26)
!2158 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !2150, file: !368, line: 4208, type: !26)
!2159 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !2160, file: !368, line: 4217, type: !20)
!2160 = distinct !DILexicalBlock(scope: !2161, file: !368, line: 4216, column: 29)
!2161 = distinct !DILexicalBlock(scope: !2162, file: !368, line: 4216, column: 5)
!2162 = distinct !DILexicalBlock(scope: !2150, file: !368, line: 4216, column: 5)
!2163 = !DISubprogram(name: "GenericPyCData_new", scope: !368, file: !368, line: 2915, type: !934, isLocal: true, isDefinition: true, scopeLine: 2916, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @GenericPyCData_new, variables: !2164)
!2164 = !{!2165, !2166, !2167, !2168, !2169, !2170}
!2165 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2163, file: !368, line: 2915, type: !417)
!2166 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2163, file: !368, line: 2915, type: !20)
!2167 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !2163, file: !368, line: 2915, type: !20)
!2168 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !2163, file: !368, line: 2917, type: !385)
!2169 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !2163, file: !368, line: 2918, type: !458)
!2170 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2171, file: !368, line: 2938, type: !20)
!2171 = distinct !DILexicalBlock(scope: !2172, file: !368, line: 2938, column: 12)
!2172 = distinct !DILexicalBlock(scope: !2173, file: !368, line: 2937, column: 48)
!2173 = distinct !DILexicalBlock(scope: !2163, file: !368, line: 2937, column: 9)
!2174 = !DISubprogram(name: "Simple_repr", scope: !368, file: !368, line: 4666, type: !1115, isLocal: true, isDefinition: true, scopeLine: 4667, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.tagCDataObject*)* @Simple_repr, variables: !2175)
!2175 = !{!2176, !2177, !2178, !2179}
!2176 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2174, file: !368, line: 4666, type: !385)
!2177 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !2174, file: !368, line: 4668, type: !20)
!2178 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2174, file: !368, line: 4668, type: !20)
!2179 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2180, file: !368, line: 4681, type: !20)
!2180 = distinct !DILexicalBlock(scope: !2174, file: !368, line: 4681, column: 8)
!2181 = !DISubprogram(name: "Simple_get_value", scope: !368, file: !368, line: 4615, type: !1115, isLocal: true, isDefinition: true, scopeLine: 4616, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.tagCDataObject*)* @Simple_get_value, variables: !2182)
!2182 = !{!2183, !2184}
!2183 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2181, file: !368, line: 4615, type: !385)
!2184 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !2181, file: !368, line: 4617, type: !458)
!2185 = !DISubprogram(name: "Simple_bool", scope: !368, file: !368, line: 4646, type: !1535, isLocal: true, isDefinition: true, scopeLine: 4647, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.tagCDataObject*)* @Simple_bool, variables: !2186)
!2186 = !{!2187}
!2187 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2185, file: !368, line: 4646, type: !385)
!2188 = !DISubprogram(name: "Simple_from_outparm", scope: !368, file: !368, line: 4631, type: !142, isLocal: true, isDefinition: true, scopeLine: 4632, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @Simple_from_outparm, variables: !2189)
!2189 = !{!2190, !2191}
!2190 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2188, file: !368, line: 4631, type: !20)
!2191 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2188, file: !368, line: 4631, type: !20)
!2192 = !DISubprogram(name: "Simple_set_value", scope: !368, file: !368, line: 4583, type: !1120, isLocal: true, isDefinition: true, scopeLine: 4584, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.tagCDataObject*, %struct._object*)* @Simple_set_value, variables: !2193)
!2193 = !{!2194, !2195, !2196, !2197}
!2194 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2192, file: !368, line: 4583, type: !385)
!2195 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !2192, file: !368, line: 4583, type: !20)
!2196 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2192, file: !368, line: 4585, type: !20)
!2197 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !2192, file: !368, line: 4586, type: !458)
!2198 = !DISubprogram(name: "Simple_init", scope: !368, file: !368, line: 4604, type: !2151, isLocal: true, isDefinition: true, scopeLine: 4605, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.tagCDataObject*, %struct._object*, %struct._object*)* @Simple_init, variables: !2199)
!2199 = !{!2200, !2201, !2202, !2203}
!2200 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2198, file: !368, line: 4604, type: !385)
!2201 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2198, file: !368, line: 4604, type: !20)
!2202 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !2198, file: !368, line: 4604, type: !20)
!2203 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2198, file: !368, line: 4606, type: !20)
!2204 = !DISubprogram(name: "Pointer_bool", scope: !368, file: !368, line: 5050, type: !1535, isLocal: true, isDefinition: true, scopeLine: 5051, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.tagCDataObject*)* @Pointer_bool, variables: !2205)
!2205 = !{!2206}
!2206 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2204, file: !368, line: 5050, type: !385)
!2207 = !DISubprogram(name: "Pointer_item", scope: !368, file: !368, line: 4732, type: !200, isLocal: true, isDefinition: true, scopeLine: 4733, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, i64)* @Pointer_item, variables: !2208)
!2208 = !{!2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216}
!2209 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !2207, file: !368, line: 4732, type: !20)
!2210 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !2207, file: !368, line: 4732, type: !26)
!2211 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2207, file: !368, line: 4734, type: !385)
!2212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !2207, file: !368, line: 4735, type: !26)
!2213 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !2207, file: !368, line: 4736, type: !26)
!2214 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stgdict", scope: !2207, file: !368, line: 4737, type: !458)
!2215 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "itemdict", scope: !2207, file: !368, line: 4737, type: !458)
!2216 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "proto", scope: !2207, file: !368, line: 4738, type: !20)
!2217 = !DISubprogram(name: "Pointer_ass_item", scope: !368, file: !368, line: 4763, type: !207, isLocal: true, isDefinition: true, scopeLine: 4764, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i64, %struct._object*)* @Pointer_ass_item, variables: !2218)
!2218 = !{!2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227}
!2219 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !2217, file: !368, line: 4763, type: !20)
!2220 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 2, scope: !2217, file: !368, line: 4763, type: !26)
!2221 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 3, scope: !2217, file: !368, line: 4763, type: !20)
!2222 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2217, file: !368, line: 4765, type: !385)
!2223 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !2217, file: !368, line: 4766, type: !26)
!2224 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !2217, file: !368, line: 4767, type: !26)
!2225 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stgdict", scope: !2217, file: !368, line: 4768, type: !458)
!2226 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "itemdict", scope: !2217, file: !368, line: 4768, type: !458)
!2227 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "proto", scope: !2217, file: !368, line: 4769, type: !20)
!2228 = !DISubprogram(name: "Pointer_subscript", scope: !368, file: !368, line: 4898, type: !142, isLocal: true, isDefinition: true, scopeLine: 4899, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @Pointer_subscript, variables: !2229)
!2229 = !{!2230, !2231, !2232, !2233, !2236, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2252, !2253, !2256, !2257}
!2230 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "myself", arg: 1, scope: !2228, file: !368, line: 4898, type: !20)
!2231 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "item", arg: 2, scope: !2228, file: !368, line: 4898, type: !20)
!2232 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "self", scope: !2228, file: !368, line: 4900, type: !385)
!2233 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2234, file: !368, line: 4902, type: !26)
!2234 = distinct !DILexicalBlock(scope: !2235, file: !368, line: 4901, column: 113)
!2235 = distinct !DILexicalBlock(scope: !2228, file: !368, line: 4901, column: 9)
!2236 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "slice", scope: !2237, file: !368, line: 4908, type: !657)
!2237 = distinct !DILexicalBlock(scope: !2238, file: !368, line: 4907, column: 65)
!2238 = distinct !DILexicalBlock(scope: !2235, file: !368, line: 4907, column: 14)
!2239 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !2237, file: !368, line: 4909, type: !26)
!2240 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !2237, file: !368, line: 4909, type: !26)
!2241 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "step", scope: !2237, file: !368, line: 4909, type: !26)
!2242 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "np", scope: !2237, file: !368, line: 4910, type: !20)
!2243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stgdict", scope: !2237, file: !368, line: 4911, type: !458)
!2244 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "itemdict", scope: !2237, file: !368, line: 4911, type: !458)
!2245 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "proto", scope: !2237, file: !368, line: 4912, type: !20)
!2246 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2237, file: !368, line: 4913, type: !26)
!2247 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !2237, file: !368, line: 4913, type: !26)
!2248 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cur", scope: !2237, file: !368, line: 4913, type: !26)
!2249 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !2250, file: !368, line: 4971, type: !67)
!2250 = distinct !DILexicalBlock(scope: !2251, file: !368, line: 4970, column: 71)
!2251 = distinct !DILexicalBlock(scope: !2237, file: !368, line: 4970, column: 13)
!2252 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dest", scope: !2250, file: !368, line: 4972, type: !67)
!2253 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !2254, file: !368, line: 4992, type: !513)
!2254 = distinct !DILexicalBlock(scope: !2255, file: !368, line: 4991, column: 71)
!2255 = distinct !DILexicalBlock(scope: !2237, file: !368, line: 4991, column: 13)
!2256 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dest", scope: !2254, file: !368, line: 4993, type: !513)
!2257 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !2258, file: !368, line: 5018, type: !20)
!2258 = distinct !DILexicalBlock(scope: !2259, file: !368, line: 5017, column: 61)
!2259 = distinct !DILexicalBlock(scope: !2260, file: !368, line: 5017, column: 9)
!2260 = distinct !DILexicalBlock(scope: !2237, file: !368, line: 5017, column: 9)
!2261 = !DISubprogram(name: "Pointer_get_contents", scope: !368, file: !368, line: 4801, type: !2262, isLocal: true, isDefinition: true, scopeLine: 4802, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct.tagCDataObject*, i8*)* @Pointer_get_contents, variables: !2264)
!2262 = !DISubroutineType(types: !2263)
!2263 = !{!20, !385, !105}
!2264 = !{!2265, !2266, !2267}
!2265 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2261, file: !368, line: 4801, type: !385)
!2266 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 2, scope: !2261, file: !368, line: 4801, type: !105)
!2267 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stgdict", scope: !2261, file: !368, line: 4803, type: !458)
!2268 = !DISubprogram(name: "Pointer_set_contents", scope: !368, file: !368, line: 4819, type: !2269, isLocal: true, isDefinition: true, scopeLine: 4820, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.tagCDataObject*, %struct._object*, i8*)* @Pointer_set_contents, variables: !2271)
!2269 = !DISubroutineType(types: !2270)
!2270 = !{!59, !385, !20, !105}
!2271 = !{!2272, !2273, !2274, !2275, !2276, !2277, !2278}
!2272 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2268, file: !368, line: 4819, type: !385)
!2273 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !2268, file: !368, line: 4819, type: !20)
!2274 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "closure", arg: 3, scope: !2268, file: !368, line: 4819, type: !105)
!2275 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stgdict", scope: !2268, file: !368, line: 4821, type: !458)
!2276 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dst", scope: !2268, file: !368, line: 4822, type: !385)
!2277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "keep", scope: !2268, file: !368, line: 4823, type: !20)
!2278 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2279, file: !368, line: 4834, type: !59)
!2279 = distinct !DILexicalBlock(scope: !2280, file: !368, line: 4833, column: 134)
!2280 = distinct !DILexicalBlock(scope: !2268, file: !368, line: 4833, column: 9)
!2281 = !DISubprogram(name: "Pointer_init", scope: !368, file: !368, line: 4874, type: !2151, isLocal: true, isDefinition: true, scopeLine: 4875, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct.tagCDataObject*, %struct._object*, %struct._object*)* @Pointer_init, variables: !2282)
!2282 = !{!2283, !2284, !2285, !2286}
!2283 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2281, file: !368, line: 4874, type: !385)
!2284 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2281, file: !368, line: 4874, type: !20)
!2285 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !2281, file: !368, line: 4874, type: !20)
!2286 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2281, file: !368, line: 4876, type: !20)
!2287 = !DISubprogram(name: "Pointer_new", scope: !368, file: !368, line: 4886, type: !934, isLocal: true, isDefinition: true, scopeLine: 4887, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @Pointer_new, variables: !2288)
!2288 = !{!2289, !2290, !2291, !2292}
!2289 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2287, file: !368, line: 4886, type: !417)
!2290 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2287, file: !368, line: 4886, type: !20)
!2291 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kw", arg: 3, scope: !2287, file: !368, line: 4886, type: !20)
!2292 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !2287, file: !368, line: 4888, type: !458)
!2293 = !DISubprogram(name: "UnionType_setattro", scope: !368, file: !368, line: 721, type: !227, isLocal: true, isDefinition: true, scopeLine: 722, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @UnionType_setattro, variables: !2294)
!2294 = !{!2295, !2296, !2297, !2298, !2301, !2302, !2304}
!2295 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2293, file: !368, line: 721, type: !20)
!2296 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 2, scope: !2293, file: !368, line: 721, type: !20)
!2297 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 3, scope: !2293, file: !368, line: 721, type: !20)
!2298 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1_len", scope: !2299, file: !368, line: 728, type: !110)
!2299 = distinct !DILexicalBlock(scope: !2300, file: !368, line: 728, column: 29)
!2300 = distinct !DILexicalBlock(scope: !2293, file: !368, line: 727, column: 9)
!2301 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s2_len", scope: !2299, file: !368, line: 728, type: !110)
!2302 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__s1", scope: !2303, file: !368, line: 728, type: !421)
!2303 = distinct !DILexicalBlock(scope: !2299, file: !368, line: 728, column: 1926)
!2304 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "__result", scope: !2303, file: !368, line: 728, type: !59)
!2305 = !DISubprogram(name: "UnionType_new", scope: !368, file: !368, line: 434, type: !934, isLocal: true, isDefinition: true, scopeLine: 435, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @UnionType_new, variables: !2306)
!2306 = !{!2307, !2308, !2309}
!2307 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !2305, file: !368, line: 434, type: !417)
!2308 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2305, file: !368, line: 434, type: !20)
!2309 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !2305, file: !368, line: 434, type: !20)
!2310 = !DISubprogram(name: "Struct_init", scope: !368, file: !368, line: 4082, type: !227, isLocal: true, isDefinition: true, scopeLine: 4083, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, %struct._object*, %struct._object*)* @Struct_init, variables: !2311)
!2311 = !{!2312, !2313, !2314, !2315, !2318, !2321, !2322}
!2312 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2310, file: !368, line: 4082, type: !20)
!2313 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !2310, file: !368, line: 4082, type: !20)
!2314 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 3, scope: !2310, file: !368, line: 4082, type: !20)
!2315 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2316, file: !368, line: 4093, type: !26)
!2316 = distinct !DILexicalBlock(scope: !2317, file: !368, line: 4092, column: 44)
!2317 = distinct !DILexicalBlock(scope: !2310, file: !368, line: 4092, column: 9)
!2318 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key", scope: !2319, file: !368, line: 4105, type: !20)
!2319 = distinct !DILexicalBlock(scope: !2320, file: !368, line: 4104, column: 15)
!2320 = distinct !DILexicalBlock(scope: !2310, file: !368, line: 4104, column: 9)
!2321 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !2319, file: !368, line: 4105, type: !20)
!2322 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !2319, file: !368, line: 4106, type: !26)
!2323 = !DISubprogram(name: "_init_pos_args", scope: !368, file: !368, line: 4023, type: !2324, isLocal: true, isDefinition: true, scopeLine: 4026, flags: DIFlagPrototyped, isOptimized: true, function: i64 (%struct._object*, %struct._typeobject*, %struct._object*, %struct._object*, i64)* @_init_pos_args, variables: !2326)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{!26, !20, !417, !20, !20, !26}
!2326 = !{!2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2339, !2340, !2341, !2342, !2346, !2349, !2351, !2353, !2355}
!2327 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !2323, file: !368, line: 4023, type: !20)
!2328 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 2, scope: !2323, file: !368, line: 4023, type: !417)
!2329 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 3, scope: !2323, file: !368, line: 4024, type: !20)
!2330 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwds", arg: 4, scope: !2323, file: !368, line: 4024, type: !20)
!2331 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "index", arg: 5, scope: !2323, file: !368, line: 4025, type: !26)
!2332 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !2323, file: !368, line: 4027, type: !458)
!2333 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fields", scope: !2323, file: !368, line: 4028, type: !20)
!2334 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !2323, file: !368, line: 4029, type: !26)
!2335 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pair", scope: !2336, file: !368, line: 4047, type: !20)
!2336 = distinct !DILexicalBlock(scope: !2337, file: !368, line: 4046, column: 15)
!2337 = distinct !DILexicalBlock(scope: !2338, file: !368, line: 4044, column: 5)
!2338 = distinct !DILexicalBlock(scope: !2323, file: !368, line: 4044, column: 5)
!2339 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !2336, file: !368, line: 4048, type: !20)
!2340 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !2336, file: !368, line: 4048, type: !20)
!2341 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !2336, file: !368, line: 4049, type: !59)
!2342 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2343, file: !368, line: 4054, type: !20)
!2343 = distinct !DILexicalBlock(scope: !2344, file: !368, line: 4054, column: 16)
!2344 = distinct !DILexicalBlock(scope: !2345, file: !368, line: 4053, column: 20)
!2345 = distinct !DILexicalBlock(scope: !2336, file: !368, line: 4053, column: 13)
!2346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "field", scope: !2347, file: !368, line: 4059, type: !67)
!2347 = distinct !DILexicalBlock(scope: !2348, file: !368, line: 4058, column: 49)
!2348 = distinct !DILexicalBlock(scope: !2336, file: !368, line: 4058, column: 13)
!2349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2350, file: !368, line: 4067, type: !20)
!2350 = distinct !DILexicalBlock(scope: !2347, file: !368, line: 4067, column: 16)
!2351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2352, file: !368, line: 4068, type: !20)
!2352 = distinct !DILexicalBlock(scope: !2347, file: !368, line: 4068, column: 16)
!2353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2354, file: !368, line: 4073, type: !20)
!2354 = distinct !DILexicalBlock(scope: !2336, file: !368, line: 4073, column: 12)
!2355 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2356, file: !368, line: 4074, type: !20)
!2356 = distinct !DILexicalBlock(scope: !2336, file: !368, line: 4074, column: 12)
!2357 = !DISubprogram(name: "string_at", scope: !368, file: !368, line: 5218, type: !2358, isLocal: true, isDefinition: true, scopeLine: 5219, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, i32)* @string_at, variables: !2360)
!2358 = !DISubroutineType(types: !2359)
!2359 = !{!20, !44, !59}
!2360 = !{!2361, !2362}
!2361 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 1, scope: !2357, file: !368, line: 5218, type: !44)
!2362 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 2, scope: !2357, file: !368, line: 5218, type: !59)
!2363 = !DISubprogram(name: "cast", scope: !368, file: !368, line: 5251, type: !2364, isLocal: true, isDefinition: true, scopeLine: 5252, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, %struct._object*, %struct._object*)* @cast, variables: !2366)
!2364 = !DISubroutineType(types: !2365)
!2365 = !{!20, !105, !20, !20}
!2366 = !{!2367, !2368, !2369, !2370, !2371, !2374, !2375, !2379, !2381, !2384, !2385, !2387}
!2367 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 1, scope: !2363, file: !368, line: 5251, type: !105)
!2368 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !2363, file: !368, line: 5251, type: !20)
!2369 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctype", arg: 3, scope: !2363, file: !368, line: 5251, type: !20)
!2370 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !2363, file: !368, line: 5253, type: !385)
!2371 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !2372, file: !368, line: 5267, type: !385)
!2372 = distinct !DILexicalBlock(scope: !2373, file: !368, line: 5266, column: 129)
!2373 = distinct !DILexicalBlock(scope: !2363, file: !368, line: 5266, column: 9)
!2374 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "container", scope: !2372, file: !368, line: 5268, type: !385)
!2375 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2376, file: !368, line: 5278, type: !20)
!2376 = distinct !DILexicalBlock(scope: !2377, file: !368, line: 5278, column: 16)
!2377 = distinct !DILexicalBlock(scope: !2378, file: !368, line: 5277, column: 50)
!2378 = distinct !DILexicalBlock(scope: !2372, file: !368, line: 5277, column: 13)
!2379 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !2380, file: !368, line: 5283, type: !20)
!2380 = distinct !DILexicalBlock(scope: !2372, file: !368, line: 5283, column: 12)
!2381 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "index", scope: !2382, file: !368, line: 5286, type: !20)
!2382 = distinct !DILexicalBlock(scope: !2383, file: !368, line: 5285, column: 97)
!2383 = distinct !DILexicalBlock(scope: !2372, file: !368, line: 5285, column: 13)
!2384 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rc", scope: !2382, file: !368, line: 5287, type: !59)
!2385 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2386, file: !368, line: 5292, type: !20)
!2386 = distinct !DILexicalBlock(scope: !2382, file: !368, line: 5292, column: 16)
!2387 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !2388, file: !368, line: 5302, type: !20)
!2388 = distinct !DILexicalBlock(scope: !2363, file: !368, line: 5302, column: 8)
!2389 = !DISubprogram(name: "cast_check_pointertype", scope: !368, file: !368, line: 5226, type: !160, isLocal: true, isDefinition: true, scopeLine: 5227, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*)* @cast_check_pointertype, variables: !2390)
!2390 = !{!2391, !2392}
!2391 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 1, scope: !2389, file: !368, line: 5226, type: !20)
!2392 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !2389, file: !368, line: 5228, type: !458)
!2393 = !DISubprogram(name: "wstring_at", scope: !368, file: !368, line: 5308, type: !2394, isLocal: true, isDefinition: true, scopeLine: 5309, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32*, i32)* @wstring_at, variables: !2398)
!2394 = !DISubroutineType(types: !2395)
!2395 = !{!20, !2396, !59}
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64, align: 64)
!2397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!2398 = !{!2399, !2400, !2401}
!2399 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 1, scope: !2393, file: !368, line: 5308, type: !2396)
!2400 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 2, scope: !2393, file: !368, line: 5308, type: !59)
!2401 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ssize", scope: !2393, file: !368, line: 5310, type: !26)
!2402 = !{!2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2422, !2426, !2430, !2434, !2438, !2442, !2446, !2450, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2465, !2468, !2469, !2477, !2479, !2480, !2481, !2482, !2483, !2485, !2486, !2487, !2488, !2489, !2490, !2511, !2515, !2516, !2517}
!2403 = !DIGlobalVariable(name: "PyCStructType_Type", scope: !0, file: !368, line: 734, type: !418, isLocal: false, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCStructType_Type)
!2404 = !DIGlobalVariable(name: "PyCPointerType_Type", scope: !0, file: !368, line: 1018, type: !418, isLocal: false, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointerType_Type)
!2405 = !DIGlobalVariable(name: "PyCArrayType_Type", scope: !0, file: !368, line: 1409, type: !418, isLocal: false, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArrayType_Type)
!2406 = !DIGlobalVariable(name: "PyCSimpleType_Type", scope: !0, file: !368, line: 2097, type: !418, isLocal: false, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCSimpleType_Type)
!2407 = !DIGlobalVariable(name: "PyCFuncPtrType_Type", scope: !0, file: !368, line: 2319, type: !418, isLocal: false, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCFuncPtrType_Type)
!2408 = !DIGlobalVariable(name: "PyCData_Type", scope: !0, file: !368, line: 2612, type: !418, isLocal: false, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCData_Type)
!2409 = !DIGlobalVariable(name: "PyCFuncPtr_Type", scope: !0, file: !368, line: 3968, type: !418, isLocal: false, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCFuncPtr_Type)
!2410 = !DIGlobalVariable(name: "PyCArray_Type", scope: !0, file: !368, line: 4470, type: !418, isLocal: false, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCArray_Type)
!2411 = !DIGlobalVariable(name: "cache", scope: !763, file: !368, line: 4515, type: !20, isLocal: true, isDefinition: true, variable: %struct._object** @PyCArrayType_from_ctype.cache)
!2412 = !DIGlobalVariable(name: "PyCPointer_Type", scope: !0, file: !368, line: 5068, type: !418, isLocal: false, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @PyCPointer_Type)
!2413 = !DIGlobalVariable(name: "PyExc_ArgError", scope: !0, file: !368, line: 125, type: !20, isLocal: false, isDefinition: true, variable: %struct._object** @PyExc_ArgError)
!2414 = !DIGlobalVariable(name: "_ctypes_ptrtype_cache", scope: !0, file: !368, line: 128, type: !20, isLocal: false, isDefinition: true, variable: %struct._object** @_ctypes_ptrtype_cache)
!2415 = !DIGlobalVariable(name: "_unpickle", scope: !0, file: !368, line: 133, type: !20, isLocal: true, isDefinition: true, variable: %struct._object** @_unpickle)
!2416 = !DIGlobalVariable(name: "DictRemover_Type", scope: !0, file: !368, line: 169, type: !418, isLocal: true, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @DictRemover_Type)
!2417 = !DIGlobalVariable(name: "CDataType_as_sequence", scope: !0, file: !368, line: 673, type: !188, isLocal: true, isDefinition: true, variable: %struct.PySequenceMethods* @CDataType_as_sequence)
!2418 = !DIGlobalVariable(name: "CDataType_methods", scope: !0, file: !368, line: 654, type: !2419, isLocal: true, isDefinition: true, variable: [6 x %struct.PyMethodDef]* @CDataType_methods)
!2419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1245, size: 1536, align: 64, elements: !2420)
!2420 = !{!2421}
!2421 = !DISubrange(count: 6)
!2422 = !DIGlobalVariable(name: "from_param_doc", scope: !0, file: !368, line: 602, type: !2423, isLocal: true, isDefinition: true, variable: [56 x i8]* @from_param_doc)
!2423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 448, align: 8, elements: !2424)
!2424 = !{!2425}
!2425 = !DISubrange(count: 56)
!2426 = !DIGlobalVariable(name: "from_address_doc", scope: !0, file: !368, line: 439, type: !2427, isLocal: true, isDefinition: true, variable: [83 x i8]* @from_address_doc)
!2427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 664, align: 8, elements: !2428)
!2428 = !{!2429}
!2429 = !DISubrange(count: 83)
!2430 = !DIGlobalVariable(name: "from_buffer_doc", scope: !0, file: !368, line: 457, type: !2431, isLocal: true, isDefinition: true, variable: [90 x i8]* @from_buffer_doc)
!2431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 720, align: 8, elements: !2432)
!2432 = !{!2433}
!2433 = !DISubrange(count: 90)
!2434 = !DIGlobalVariable(name: "from_buffer_copy_doc", scope: !0, file: !368, line: 502, type: !2435, isLocal: true, isDefinition: true, variable: [94 x i8]* @from_buffer_copy_doc)
!2435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 752, align: 8, elements: !2436)
!2436 = !{!2437}
!2437 = !DISubrange(count: 94)
!2438 = !DIGlobalVariable(name: "in_dll_doc", scope: !0, file: !368, line: 545, type: !2439, isLocal: true, isDefinition: true, variable: [63 x i8]* @in_dll_doc)
!2439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 504, align: 8, elements: !2440)
!2440 = !{!2441}
!2441 = !DISubrange(count: 63)
!2442 = !DIGlobalVariable(name: "PyCPointerType_methods", scope: !0, file: !368, line: 1008, type: !2443, isLocal: true, isDefinition: true, variable: [7 x %struct.PyMethodDef]* @PyCPointerType_methods)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1245, size: 1792, align: 64, elements: !2444)
!2444 = !{!2445}
!2445 = !DISubrange(count: 7)
!2446 = !DIGlobalVariable(name: "CharArray_getsets", scope: !0, file: !368, line: 1149, type: !2447, isLocal: true, isDefinition: true, variable: [3 x %struct.PyGetSetDef]* @CharArray_getsets)
!2447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1103, size: 960, align: 64, elements: !2448)
!2448 = !{!2449}
!2449 = !DISubrange(count: 3)
!2450 = !DIGlobalVariable(name: "WCharArray_getsets", scope: !0, file: !368, line: 1209, type: !2451, isLocal: true, isDefinition: true, variable: [2 x %struct.PyGetSetDef]* @WCharArray_getsets)
!2451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1103, size: 640, align: 64, elements: !2452)
!2452 = !{!2453}
!2453 = !DISubrange(count: 2)
!2454 = !DIGlobalVariable(name: "PyCSimpleType_methods", scope: !0, file: !368, line: 2088, type: !2419, isLocal: true, isDefinition: true, variable: [6 x %struct.PyMethodDef]* @PyCSimpleType_methods)
!2455 = !DIGlobalVariable(name: "SIMPLE_TYPE_CHARS", scope: !0, file: !368, line: 1463, type: !67, isLocal: true, isDefinition: true, variable: i8** @SIMPLE_TYPE_CHARS)
!2456 = !DIGlobalVariable(name: "c_char_p_method", scope: !0, file: !368, line: 1750, type: !1245, isLocal: true, isDefinition: true, variable: %struct.PyMethodDef* @c_char_p_method)
!2457 = !DIGlobalVariable(name: "c_wchar_p_method", scope: !0, file: !368, line: 1751, type: !1245, isLocal: true, isDefinition: true, variable: %struct.PyMethodDef* @c_wchar_p_method)
!2458 = !DIGlobalVariable(name: "c_void_p_method", scope: !0, file: !368, line: 1749, type: !1245, isLocal: true, isDefinition: true, variable: %struct.PyMethodDef* @c_void_p_method)
!2459 = !DIGlobalVariable(name: "suffix", scope: !1413, file: !368, line: 1761, type: !20, isLocal: true, isDefinition: true, variable: %struct._object** @CreateSwappedType.suffix)
!2460 = !DIGlobalVariable(name: "PyCData_as_buffer", scope: !0, file: !368, line: 2541, type: !243, isLocal: true, isDefinition: true, variable: %struct.PyBufferProcs* @PyCData_as_buffer)
!2461 = !DIGlobalVariable(name: "PyCData_methods", scope: !0, file: !368, line: 2605, type: !2462, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMethodDef]* @PyCData_methods)
!2462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1245, size: 1024, align: 64, elements: !2463)
!2463 = !{!2464}
!2464 = !DISubrange(count: 4)
!2465 = !DIGlobalVariable(name: "PyCData_members", scope: !0, file: !368, line: 2499, type: !2466, isLocal: true, isDefinition: true, variable: [4 x %struct.PyMemberDef]* @PyCData_members)
!2466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2467, size: 1280, align: 64, elements: !2463)
!2467 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMemberDef", file: !307, line: 24, baseType: !306)
!2468 = !DIGlobalVariable(name: "PyCFuncPtr_as_number", scope: !0, file: !368, line: 3955, type: !136, isLocal: true, isDefinition: true, variable: %struct.PyNumberMethods* @PyCFuncPtr_as_number)
!2469 = !DIGlobalVariable(name: "PyId___ctypes_from_outparam__", scope: !1755, file: !368, line: 3744, type: !2470, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @_build_result.PyId___ctypes_from_outparam__)
!2470 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_Identifier", file: !22, line: 144, baseType: !2471)
!2471 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Py_Identifier", file: !22, line: 140, size: 192, align: 64, elements: !2472)
!2472 = !{!2473, !2475, !2476}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2471, file: !22, line: 141, baseType: !2474, size: 64, align: 64)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64, align: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2471, file: !22, line: 142, baseType: !44, size: 64, align: 64, offset: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2471, file: !22, line: 143, baseType: !20, size: 64, align: 64, offset: 128)
!2477 = !DIGlobalVariable(name: "PyCFuncPtr_getsets", scope: !0, file: !368, line: 3055, type: !2478, isLocal: true, isDefinition: true, variable: [4 x %struct.PyGetSetDef]* @PyCFuncPtr_getsets)
!2478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1103, size: 1280, align: 64, elements: !2463)
!2479 = !DIGlobalVariable(name: "Array_as_sequence", scope: !0, file: !368, line: 4450, type: !188, isLocal: true, isDefinition: true, variable: %struct.PySequenceMethods* @Array_as_sequence)
!2480 = !DIGlobalVariable(name: "Array_as_mapping", scope: !0, file: !368, line: 4464, type: !219, isLocal: true, isDefinition: true, variable: { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }* @Array_as_mapping)
!2481 = !DIGlobalVariable(name: "Simple_Type", scope: !0, file: !368, line: 4685, type: !418, isLocal: true, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Simple_Type)
!2482 = !DIGlobalVariable(name: "Simple_as_number", scope: !0, file: !368, line: 4651, type: !136, isLocal: true, isDefinition: true, variable: %struct.PyNumberMethods* @Simple_as_number)
!2483 = !DIGlobalVariable(name: "Simple_methods", scope: !0, file: !368, line: 4641, type: !2484, isLocal: true, isDefinition: true, variable: [2 x %struct.PyMethodDef]* @Simple_methods)
!2484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1245, size: 512, align: 64, elements: !2452)
!2485 = !DIGlobalVariable(name: "Simple_getsets", scope: !0, file: !368, line: 4624, type: !2451, isLocal: true, isDefinition: true, variable: [2 x %struct.PyGetSetDef]* @Simple_getsets)
!2486 = !DIGlobalVariable(name: "Pointer_as_number", scope: !0, file: !368, line: 5055, type: !136, isLocal: true, isDefinition: true, variable: %struct.PyNumberMethods* @Pointer_as_number)
!2487 = !DIGlobalVariable(name: "Pointer_as_sequence", scope: !0, file: !368, line: 5030, type: !188, isLocal: true, isDefinition: true, variable: %struct.PySequenceMethods* @Pointer_as_sequence)
!2488 = !DIGlobalVariable(name: "Pointer_as_mapping", scope: !0, file: !368, line: 5044, type: !219, isLocal: true, isDefinition: true, variable: { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }* @Pointer_as_mapping)
!2489 = !DIGlobalVariable(name: "Pointer_getsets", scope: !0, file: !368, line: 4866, type: !2451, isLocal: true, isDefinition: true, variable: [2 x %struct.PyGetSetDef]* @Pointer_getsets)
!2490 = !DIGlobalVariable(name: "_ctypesmodule", scope: !0, file: !368, line: 5318, type: !2491, isLocal: true, isDefinition: true, variable: %struct.PyModuleDef* @_ctypesmodule)
!2491 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef", file: !2492, line: 47, size: 832, align: 64, elements: !2493)
!2492 = !DIFile(filename: "./Include/moduleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2493 = !{!2494, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "m_base", scope: !2491, file: !2492, line: 48, baseType: !2495, size: 320, align: 64)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Base", file: !2492, line: 38, baseType: !2496)
!2496 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Base", file: !2492, line: 33, size: 320, align: 64, elements: !2497)
!2497 = !{!2498, !2499, !2501, !2502}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !2496, file: !2492, line: 34, baseType: !21, size: 128, align: 64)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "m_init", scope: !2496, file: !2492, line: 35, baseType: !2500, size: 64, align: 64, offset: 128)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64, align: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "m_index", scope: !2496, file: !2492, line: 36, baseType: !26, size: 64, align: 64, offset: 192)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "m_copy", scope: !2496, file: !2492, line: 37, baseType: !20, size: 64, align: 64, offset: 256)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "m_name", scope: !2491, file: !2492, line: 49, baseType: !44, size: 64, align: 64, offset: 320)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "m_doc", scope: !2491, file: !2492, line: 50, baseType: !44, size: 64, align: 64, offset: 384)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !2491, file: !2492, line: 51, baseType: !26, size: 64, align: 64, offset: 448)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "m_methods", scope: !2491, file: !2492, line: 52, baseType: !1244, size: 64, align: 64, offset: 512)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "m_reload", scope: !2491, file: !2492, line: 53, baseType: !158, size: 64, align: 64, offset: 576)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "m_traverse", scope: !2491, file: !2492, line: 54, baseType: !275, size: 64, align: 64, offset: 640)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "m_clear", scope: !2491, file: !2492, line: 55, baseType: !158, size: 64, align: 64, offset: 704)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "m_free", scope: !2491, file: !2492, line: 56, baseType: !352, size: 64, align: 64, offset: 768)
!2511 = !DIGlobalVariable(name: "module_docs", scope: !0, file: !368, line: 5116, type: !2512, isLocal: true, isDefinition: true, variable: [57 x i8]* @module_docs)
!2512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 456, align: 8, elements: !2513)
!2513 = !{!2514}
!2514 = !DISubrange(count: 57)
!2515 = !DIGlobalVariable(name: "UnionType_Type", scope: !0, file: !368, line: 776, type: !418, isLocal: true, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @UnionType_Type)
!2516 = !DIGlobalVariable(name: "Struct_Type", scope: !0, file: !368, line: 4115, type: !418, isLocal: true, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Struct_Type)
!2517 = !DIGlobalVariable(name: "Union_Type", scope: !0, file: !368, line: 4157, type: !418, isLocal: true, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @Union_Type)
!2518 = !{i32 2, !"Dwarf Version", i32 4}
!2519 = !{i32 2, !"Debug Info Version", i32 3}
!2520 = !{i32 1, !"PIC Level", i32 2}
!2521 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!2522 = !{!2523, !2523, i64 0}
!2523 = !{!"any pointer", !2524, i64 0}
!2524 = !{!"omnipotent char", !2525, i64 0}
!2525 = !{!"Simple C/C++ TBAA"}
!2526 = !DIExpression()
!2527 = !DILocation(line: 213, column: 31, scope: !668)
!2528 = !DILocation(line: 213, column: 47, scope: !668)
!2529 = !DILocation(line: 213, column: 62, scope: !668)
!2530 = !DILocation(line: 215, column: 5, scope: !668)
!2531 = !DILocation(line: 215, column: 15, scope: !668)
!2532 = !DILocation(line: 216, column: 5, scope: !668)
!2533 = !DILocation(line: 216, column: 24, scope: !668)
!2534 = !DILocation(line: 217, column: 5, scope: !668)
!2535 = !DILocation(line: 217, column: 15, scope: !668)
!2536 = !DILocation(line: 218, column: 5, scope: !668)
!2537 = !DILocation(line: 218, column: 9, scope: !668)
!2538 = !DILocation(line: 220, column: 11, scope: !668)
!2539 = !DILocation(line: 220, column: 9, scope: !668)
!2540 = !DILocation(line: 221, column: 9, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !668, file: !368, line: 221, column: 9)
!2542 = !DILocation(line: 221, column: 13, scope: !2541)
!2543 = !DILocation(line: 221, column: 9, scope: !668)
!2544 = !DILocation(line: 222, column: 9, scope: !2541)
!2545 = !DILocation(line: 224, column: 36, scope: !668)
!2546 = !DILocation(line: 224, column: 15, scope: !668)
!2547 = !DILocation(line: 224, column: 13, scope: !668)
!2548 = !DILocation(line: 227, column: 21, scope: !668)
!2549 = !DILocation(line: 227, column: 28, scope: !668)
!2550 = !DILocation(line: 227, column: 37, scope: !668)
!2551 = !{!2552, !2553, i64 0}
!2552 = !{!"_object", !2553, i64 0, !2523, i64 8}
!2553 = !{!"long", !2524, i64 0}
!2554 = !DILocation(line: 228, column: 20, scope: !668)
!2555 = !DILocation(line: 228, column: 5, scope: !668)
!2556 = !DILocation(line: 228, column: 14, scope: !668)
!2557 = !DILocation(line: 228, column: 18, scope: !668)
!2558 = !{!2559, !2523, i64 16}
!2559 = !{!"", !2552, i64 0, !2523, i64 16, !2523, i64 24}
!2560 = !DILocation(line: 229, column: 21, scope: !668)
!2561 = !DILocation(line: 229, column: 29, scope: !668)
!2562 = !DILocation(line: 229, column: 38, scope: !668)
!2563 = !DILocation(line: 230, column: 21, scope: !668)
!2564 = !DILocation(line: 230, column: 5, scope: !668)
!2565 = !DILocation(line: 230, column: 14, scope: !668)
!2566 = !DILocation(line: 230, column: 19, scope: !668)
!2567 = !{!2559, !2523, i64 24}
!2568 = !DILocation(line: 232, column: 32, scope: !668)
!2569 = !DILocation(line: 232, column: 38, scope: !668)
!2570 = !DILocation(line: 232, column: 13, scope: !668)
!2571 = !DILocation(line: 232, column: 11, scope: !668)
!2572 = !DILocation(line: 233, column: 5, scope: !668)
!2573 = !DILocation(line: 233, column: 10, scope: !2574)
!2574 = !DILexicalBlockFile(scope: !678, file: !368, discriminator: 1)
!2575 = !DILocation(line: 233, column: 20, scope: !678)
!2576 = !DILocation(line: 233, column: 50, scope: !678)
!2577 = !DILocation(line: 233, column: 64, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !678, file: !368, line: 233, column: 61)
!2579 = !DILocation(line: 233, column: 81, scope: !2578)
!2580 = !DILocation(line: 233, column: 61, scope: !2578)
!2581 = !DILocation(line: 233, column: 91, scope: !2578)
!2582 = !DILocation(line: 233, column: 61, scope: !678)
!2583 = !DILocation(line: 233, column: 61, scope: !2584)
!2584 = !DILexicalBlockFile(scope: !678, file: !368, discriminator: 2)
!2585 = !DILocation(line: 233, column: 122, scope: !2586)
!2586 = !DILexicalBlockFile(scope: !2578, file: !368, discriminator: 3)
!2587 = !DILocation(line: 233, column: 140, scope: !2578)
!2588 = !{!2552, !2523, i64 8}
!2589 = !DILocation(line: 233, column: 150, scope: !2578)
!2590 = !{!2591, !2523, i64 48}
!2591 = !{!"_typeobject", !2592, i64 0, !2523, i64 24, !2553, i64 32, !2553, i64 40, !2523, i64 48, !2523, i64 56, !2523, i64 64, !2523, i64 72, !2523, i64 80, !2523, i64 88, !2523, i64 96, !2523, i64 104, !2523, i64 112, !2523, i64 120, !2523, i64 128, !2523, i64 136, !2523, i64 144, !2523, i64 152, !2523, i64 160, !2553, i64 168, !2523, i64 176, !2523, i64 184, !2523, i64 192, !2523, i64 200, !2553, i64 208, !2523, i64 216, !2523, i64 224, !2523, i64 232, !2523, i64 240, !2523, i64 248, !2523, i64 256, !2523, i64 264, !2523, i64 272, !2523, i64 280, !2553, i64 288, !2523, i64 296, !2523, i64 304, !2523, i64 312, !2523, i64 320, !2523, i64 328, !2523, i64 336, !2523, i64 344, !2523, i64 352, !2523, i64 360, !2523, i64 368, !2523, i64 376, !2593, i64 384, !2523, i64 392}
!2592 = !{!"", !2552, i64 0, !2553, i64 16}
!2593 = !{!"int", !2524, i64 0}
!2594 = !DILocation(line: 233, column: 175, scope: !2578)
!2595 = !DILocation(line: 233, column: 106, scope: !2578)
!2596 = !DILocation(line: 233, column: 194, scope: !2597)
!2597 = !DILexicalBlockFile(scope: !668, file: !368, discriminator: 4)
!2598 = !DILocation(line: 233, column: 194, scope: !678)
!2599 = !DILocation(line: 233, column: 194, scope: !2600)
!2600 = !DILexicalBlockFile(scope: !678, file: !368, discriminator: 5)
!2601 = !DILocation(line: 234, column: 9, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !668, file: !368, line: 234, column: 9)
!2603 = !DILocation(line: 234, column: 15, scope: !2602)
!2604 = !DILocation(line: 234, column: 9, scope: !668)
!2605 = !DILocation(line: 235, column: 9, scope: !2602)
!2606 = !DILocation(line: 237, column: 29, scope: !668)
!2607 = !DILocation(line: 237, column: 35, scope: !668)
!2608 = !DILocation(line: 237, column: 40, scope: !668)
!2609 = !DILocation(line: 237, column: 14, scope: !668)
!2610 = !DILocation(line: 237, column: 12, scope: !668)
!2611 = !{!2593, !2593, i64 0}
!2612 = !DILocation(line: 238, column: 5, scope: !668)
!2613 = !DILocation(line: 238, column: 10, scope: !2614)
!2614 = !DILexicalBlockFile(scope: !680, file: !368, discriminator: 1)
!2615 = !DILocation(line: 238, column: 20, scope: !680)
!2616 = !DILocation(line: 238, column: 50, scope: !680)
!2617 = !DILocation(line: 238, column: 66, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !680, file: !368, line: 238, column: 63)
!2619 = !DILocation(line: 238, column: 83, scope: !2618)
!2620 = !DILocation(line: 238, column: 63, scope: !2618)
!2621 = !DILocation(line: 238, column: 93, scope: !2618)
!2622 = !DILocation(line: 238, column: 63, scope: !680)
!2623 = !DILocation(line: 238, column: 63, scope: !2624)
!2624 = !DILexicalBlockFile(scope: !680, file: !368, discriminator: 2)
!2625 = !DILocation(line: 238, column: 124, scope: !2626)
!2626 = !DILexicalBlockFile(scope: !2618, file: !368, discriminator: 3)
!2627 = !DILocation(line: 238, column: 142, scope: !2618)
!2628 = !DILocation(line: 238, column: 152, scope: !2618)
!2629 = !DILocation(line: 238, column: 177, scope: !2618)
!2630 = !DILocation(line: 238, column: 108, scope: !2618)
!2631 = !DILocation(line: 238, column: 196, scope: !2597)
!2632 = !DILocation(line: 238, column: 196, scope: !680)
!2633 = !DILocation(line: 238, column: 196, scope: !2634)
!2634 = !DILexicalBlockFile(scope: !680, file: !368, discriminator: 5)
!2635 = !DILocation(line: 239, column: 12, scope: !668)
!2636 = !DILocation(line: 239, column: 5, scope: !668)
!2637 = !DILocation(line: 240, column: 1, scope: !668)
!2638 = !DILocation(line: 243, column: 31, scope: !681)
!2639 = !DILocation(line: 243, column: 47, scope: !681)
!2640 = !DILocation(line: 245, column: 5, scope: !681)
!2641 = !DILocation(line: 245, column: 15, scope: !681)
!2642 = !DILocation(line: 246, column: 5, scope: !681)
!2643 = !DILocation(line: 246, column: 15, scope: !681)
!2644 = !DILocation(line: 246, column: 37, scope: !681)
!2645 = !DILocation(line: 246, column: 43, scope: !681)
!2646 = !DILocation(line: 246, column: 22, scope: !681)
!2647 = !DILocation(line: 248, column: 9, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !681, file: !368, line: 248, column: 9)
!2649 = !DILocation(line: 248, column: 14, scope: !2648)
!2650 = !DILocation(line: 248, column: 9, scope: !681)
!2651 = !DILocation(line: 249, column: 9, scope: !2648)
!2652 = !DILocation(line: 250, column: 26, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !681, file: !368, line: 250, column: 9)
!2654 = !DILocation(line: 250, column: 34, scope: !2653)
!2655 = !DILocation(line: 250, column: 43, scope: !2653)
!2656 = !DILocation(line: 250, column: 69, scope: !2653)
!2657 = !DILocation(line: 250, column: 87, scope: !2658)
!2658 = !DILexicalBlockFile(scope: !2653, file: !368, discriminator: 1)
!2659 = !DILocation(line: 250, column: 95, scope: !2653)
!2660 = !DILocation(line: 250, column: 104, scope: !2653)
!2661 = !DILocation(line: 250, column: 9, scope: !681)
!2662 = !DILocation(line: 251, column: 16, scope: !2653)
!2663 = !DILocation(line: 251, column: 9, scope: !2653)
!2664 = !DILocation(line: 252, column: 50, scope: !681)
!2665 = !DILocation(line: 252, column: 30, scope: !681)
!2666 = !DILocation(line: 252, column: 58, scope: !681)
!2667 = !{!2668, !2523, i64 16}
!2668 = !{!"_PyWeakReference", !2552, i64 0, !2523, i64 16, !2523, i64 24, !2553, i64 32, !2523, i64 40, !2523, i64 48}
!2669 = !DILocation(line: 252, column: 71, scope: !681)
!2670 = !DILocation(line: 252, column: 82, scope: !681)
!2671 = !DILocation(line: 252, column: 15, scope: !681)
!2672 = !DILocation(line: 252, column: 109, scope: !2673)
!2673 = !DILexicalBlockFile(scope: !681, file: !368, discriminator: 1)
!2674 = !DILocation(line: 252, column: 89, scope: !681)
!2675 = !DILocation(line: 252, column: 117, scope: !681)
!2676 = !DILocation(line: 252, column: 15, scope: !2677)
!2677 = !DILexicalBlockFile(scope: !681, file: !368, discriminator: 2)
!2678 = !DILocation(line: 252, column: 12, scope: !2679)
!2679 = !DILexicalBlockFile(scope: !2680, file: !368, discriminator: 4)
!2680 = !DILexicalBlockFile(scope: !681, file: !368, discriminator: 3)
!2681 = !DILocation(line: 253, column: 9, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !681, file: !368, line: 253, column: 9)
!2683 = !DILocation(line: 253, column: 16, scope: !2682)
!2684 = !DILocation(line: 253, column: 9, scope: !681)
!2685 = !DILocation(line: 254, column: 9, scope: !2682)
!2686 = !DILocation(line: 255, column: 12, scope: !681)
!2687 = !DILocation(line: 255, column: 5, scope: !681)
!2688 = !DILocation(line: 256, column: 1, scope: !681)
!2689 = !DILocation(line: 266, column: 41, scope: !687)
!2690 = !DILocation(line: 266, column: 61, scope: !687)
!2691 = !DILocation(line: 268, column: 5, scope: !687)
!2692 = !DILocation(line: 268, column: 12, scope: !687)
!2693 = !DILocation(line: 269, column: 5, scope: !687)
!2694 = !DILocation(line: 269, column: 11, scope: !687)
!2695 = !DILocation(line: 271, column: 9, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !687, file: !368, line: 271, column: 9)
!2697 = !DILocation(line: 271, column: 16, scope: !2696)
!2698 = !DILocation(line: 271, column: 9, scope: !687)
!2699 = !DILocation(line: 273, column: 9, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2696, file: !368, line: 271, column: 31)
!2701 = !DILocation(line: 275, column: 18, scope: !687)
!2702 = !DILocation(line: 275, column: 11, scope: !687)
!2703 = !DILocation(line: 275, column: 9, scope: !687)
!2704 = !{!2553, !2553, i64 0}
!2705 = !DILocation(line: 276, column: 9, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !687, file: !368, line: 276, column: 9)
!2707 = !DILocation(line: 276, column: 9, scope: !687)
!2708 = !DILocation(line: 277, column: 23, scope: !2706)
!2709 = !DILocation(line: 277, column: 16, scope: !2706)
!2710 = !DILocation(line: 277, column: 13, scope: !2706)
!2711 = !DILocation(line: 277, column: 9, scope: !2706)
!2712 = !DILocation(line: 278, column: 27, scope: !687)
!2713 = !DILocation(line: 278, column: 31, scope: !687)
!2714 = !DILocation(line: 278, column: 14, scope: !687)
!2715 = !DILocation(line: 278, column: 12, scope: !687)
!2716 = !DILocation(line: 279, column: 9, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !687, file: !368, line: 279, column: 9)
!2718 = !DILocation(line: 279, column: 16, scope: !2717)
!2719 = !DILocation(line: 279, column: 9, scope: !687)
!2720 = !DILocation(line: 280, column: 9, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2717, file: !368, line: 279, column: 31)
!2722 = !DILocation(line: 281, column: 9, scope: !2721)
!2723 = !DILocation(line: 283, column: 9, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !687, file: !368, line: 283, column: 9)
!2725 = !DILocation(line: 283, column: 9, scope: !687)
!2726 = !DILocation(line: 284, column: 16, scope: !2724)
!2727 = !DILocation(line: 284, column: 24, scope: !2724)
!2728 = !DILocation(line: 284, column: 9, scope: !2724)
!2729 = !DILocation(line: 286, column: 9, scope: !2724)
!2730 = !DILocation(line: 286, column: 19, scope: !2724)
!2731 = !{!2524, !2524, i64 0}
!2732 = !DILocation(line: 287, column: 12, scope: !687)
!2733 = !DILocation(line: 287, column: 20, scope: !687)
!2734 = !DILocation(line: 287, column: 5, scope: !687)
!2735 = !DILocation(line: 288, column: 12, scope: !687)
!2736 = !DILocation(line: 288, column: 5, scope: !687)
!2737 = !DILocation(line: 289, column: 1, scope: !687)
!2738 = !DILocation(line: 298, column: 44, scope: !695)
!2739 = !DILocation(line: 298, column: 68, scope: !695)
!2740 = !DILocation(line: 299, column: 52, scope: !695)
!2741 = !DILocation(line: 299, column: 72, scope: !695)
!2742 = !DILocation(line: 301, column: 5, scope: !695)
!2743 = !DILocation(line: 301, column: 11, scope: !695)
!2744 = !DILocation(line: 302, column: 5, scope: !695)
!2745 = !DILocation(line: 302, column: 11, scope: !695)
!2746 = !DILocation(line: 303, column: 5, scope: !695)
!2747 = !DILocation(line: 303, column: 10, scope: !695)
!2748 = !DILocation(line: 304, column: 5, scope: !695)
!2749 = !DILocation(line: 304, column: 9, scope: !695)
!2750 = !DILocation(line: 305, column: 5, scope: !695)
!2751 = !DILocation(line: 305, column: 9, scope: !695)
!2752 = !DILocation(line: 307, column: 23, scope: !695)
!2753 = !DILocation(line: 307, column: 21, scope: !695)
!2754 = !DILocation(line: 307, column: 28, scope: !695)
!2755 = !DILocation(line: 307, column: 16, scope: !695)
!2756 = !DILocation(line: 308, column: 9, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !695, file: !368, line: 308, column: 9)
!2758 = !DILocation(line: 308, column: 9, scope: !695)
!2759 = !DILocation(line: 309, column: 30, scope: !2757)
!2760 = !DILocation(line: 309, column: 23, scope: !2757)
!2761 = !DILocation(line: 309, column: 20, scope: !2757)
!2762 = !DILocation(line: 309, column: 9, scope: !2757)
!2763 = !DILocation(line: 310, column: 31, scope: !695)
!2764 = !DILocation(line: 310, column: 18, scope: !695)
!2765 = !DILocation(line: 310, column: 16, scope: !695)
!2766 = !DILocation(line: 311, column: 9, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !695, file: !368, line: 311, column: 9)
!2768 = !DILocation(line: 311, column: 20, scope: !2767)
!2769 = !DILocation(line: 311, column: 9, scope: !695)
!2770 = !DILocation(line: 312, column: 9, scope: !2767)
!2771 = !DILocation(line: 313, column: 5, scope: !695)
!2772 = !DILocation(line: 313, column: 19, scope: !695)
!2773 = !DILocation(line: 314, column: 9, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !695, file: !368, line: 314, column: 9)
!2775 = !DILocation(line: 314, column: 9, scope: !695)
!2776 = !DILocation(line: 315, column: 16, scope: !2774)
!2777 = !DILocation(line: 315, column: 28, scope: !2774)
!2778 = !DILocation(line: 315, column: 9, scope: !2774)
!2779 = !DILocation(line: 316, column: 9, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !695, file: !368, line: 316, column: 9)
!2781 = !DILocation(line: 316, column: 14, scope: !2780)
!2782 = !DILocation(line: 316, column: 9, scope: !695)
!2783 = !DILocation(line: 318, column: 16, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2780, file: !368, line: 316, column: 19)
!2785 = !DILocation(line: 318, column: 9, scope: !2784)
!2786 = !DILocation(line: 319, column: 16, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2784, file: !368, line: 319, column: 9)
!2788 = !DILocation(line: 319, column: 14, scope: !2787)
!2789 = !DILocation(line: 319, column: 21, scope: !2790)
!2790 = !DILexicalBlockFile(scope: !2791, file: !368, discriminator: 2)
!2791 = !DILexicalBlockFile(scope: !2792, file: !368, discriminator: 1)
!2792 = distinct !DILexicalBlock(scope: !2787, file: !368, line: 319, column: 9)
!2793 = !DILocation(line: 319, column: 25, scope: !2792)
!2794 = !DILocation(line: 319, column: 23, scope: !2792)
!2795 = !DILocation(line: 319, column: 9, scope: !2787)
!2796 = !DILocation(line: 320, column: 17, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2798, file: !368, line: 320, column: 17)
!2798 = distinct !DILexicalBlock(scope: !2792, file: !368, line: 319, column: 36)
!2799 = !DILocation(line: 320, column: 21, scope: !2797)
!2800 = !DILocation(line: 320, column: 25, scope: !2797)
!2801 = !DILocation(line: 320, column: 19, scope: !2797)
!2802 = !DILocation(line: 320, column: 17, scope: !2798)
!2803 = !DILocation(line: 321, column: 25, scope: !2804)
!2804 = distinct !DILexicalBlock(scope: !2797, file: !368, line: 320, column: 29)
!2805 = !DILocation(line: 321, column: 48, scope: !2804)
!2806 = !DILocation(line: 321, column: 42, scope: !2804)
!2807 = !DILocation(line: 321, column: 17, scope: !2804)
!2808 = !DILocation(line: 322, column: 13, scope: !2804)
!2809 = !DILocation(line: 323, column: 25, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2797, file: !368, line: 322, column: 20)
!2811 = !DILocation(line: 323, column: 48, scope: !2810)
!2812 = !DILocation(line: 323, column: 42, scope: !2810)
!2813 = !DILocation(line: 323, column: 17, scope: !2810)
!2814 = !DILocation(line: 325, column: 20, scope: !2798)
!2815 = !DILocation(line: 325, column: 32, scope: !2798)
!2816 = !DILocation(line: 325, column: 13, scope: !2798)
!2817 = !DILocation(line: 326, column: 9, scope: !2798)
!2818 = !DILocation(line: 319, column: 31, scope: !2792)
!2819 = !DILocation(line: 319, column: 9, scope: !2792)
!2820 = !DILocation(line: 327, column: 5, scope: !2784)
!2821 = !DILocation(line: 328, column: 42, scope: !695)
!2822 = !DILocation(line: 328, column: 54, scope: !695)
!2823 = !DILocation(line: 328, column: 14, scope: !695)
!2824 = !DILocation(line: 328, column: 12, scope: !695)
!2825 = !DILocation(line: 329, column: 16, scope: !695)
!2826 = !DILocation(line: 329, column: 5, scope: !695)
!2827 = !DILocation(line: 330, column: 12, scope: !695)
!2828 = !DILocation(line: 330, column: 5, scope: !695)
!2829 = !DILocation(line: 331, column: 1, scope: !695)
!2830 = !DILocation(line: 706, column: 34, scope: !839)
!2831 = !DILocation(line: 706, column: 50, scope: !839)
!2832 = !DILocation(line: 706, column: 65, scope: !839)
!2833 = !DILocation(line: 709, column: 27, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !839, file: !368, line: 709, column: 9)
!2835 = !{!2591, !2523, i64 152}
!2836 = !DILocation(line: 709, column: 39, scope: !2834)
!2837 = !DILocation(line: 709, column: 45, scope: !2834)
!2838 = !DILocation(line: 709, column: 50, scope: !2834)
!2839 = !DILocation(line: 709, column: 15, scope: !2834)
!2840 = !DILocation(line: 709, column: 12, scope: !2834)
!2841 = !DILocation(line: 709, column: 9, scope: !839)
!2842 = !DILocation(line: 710, column: 9, scope: !2834)
!2843 = !DILocation(line: 712, column: 9, scope: !846)
!2844 = !DILocation(line: 712, column: 15, scope: !846)
!2845 = !DILocation(line: 712, column: 35, scope: !2846)
!2846 = !DILexicalBlockFile(scope: !846, file: !368, discriminator: 1)
!2847 = !DILocation(line: 712, column: 42, scope: !846)
!2848 = !DILocation(line: 712, column: 53, scope: !846)
!2849 = !{!2591, !2553, i64 168}
!2850 = !DILocation(line: 712, column: 62, scope: !846)
!2851 = !DILocation(line: 712, column: 79, scope: !846)
!2852 = !DILocation(line: 712, column: 85, scope: !846)
!2853 = !DILocation(line: 714, column: 31, scope: !845)
!2854 = !DILocation(line: 714, column: 38, scope: !845)
!2855 = !DILocation(line: 714, column: 48, scope: !845)
!2856 = !DILocation(line: 714, column: 1645, scope: !845)
!2857 = !DILocation(line: 714, column: 1658, scope: !2858)
!2858 = !DILexicalBlockFile(scope: !845, file: !368, discriminator: 1)
!2859 = !DILocation(line: 714, column: 1681, scope: !845)
!2860 = !DILocation(line: 714, column: 1690, scope: !845)
!2861 = !DILocation(line: 714, column: 1523, scope: !845)
!2862 = !DILocation(line: 714, column: 1928, scope: !2863)
!2863 = !DILexicalBlockFile(scope: !849, file: !368, discriminator: 3)
!2864 = !DILocation(line: 714, column: 1949, scope: !849)
!2865 = !DILocation(line: 714, column: 2013, scope: !849)
!2866 = !DILocation(line: 714, column: 1996, scope: !849)
!2867 = !DILocation(line: 714, column: 2020, scope: !849)
!2868 = !DILocation(line: 714, column: 2033, scope: !849)
!2869 = !DILocation(line: 714, column: 2044, scope: !849)
!2870 = !DILocation(line: 714, column: 2054, scope: !849)
!2871 = !DILocation(line: 714, column: 2052, scope: !849)
!2872 = !DILocation(line: 714, column: 2116, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !849, file: !368, line: 714, column: 2116)
!2874 = !DILocation(line: 714, column: 2125, scope: !2873)
!2875 = !DILocation(line: 714, column: 2129, scope: !2873)
!2876 = !DILocation(line: 714, column: 2132, scope: !2877)
!2877 = !DILexicalBlockFile(scope: !2873, file: !368, discriminator: 5)
!2878 = !DILocation(line: 714, column: 2141, scope: !2873)
!2879 = !DILocation(line: 714, column: 2116, scope: !849)
!2880 = !DILocation(line: 714, column: 2161, scope: !2881)
!2881 = !DILexicalBlockFile(scope: !2882, file: !368, discriminator: 7)
!2882 = distinct !DILexicalBlock(scope: !2873, file: !368, line: 714, column: 2147)
!2883 = !DILocation(line: 714, column: 2171, scope: !2882)
!2884 = !DILocation(line: 714, column: 2169, scope: !2882)
!2885 = !DILocation(line: 714, column: 2158, scope: !2882)
!2886 = !DILocation(line: 714, column: 2234, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2882, file: !368, line: 714, column: 2234)
!2888 = !DILocation(line: 714, column: 2243, scope: !2887)
!2889 = !DILocation(line: 714, column: 2247, scope: !2887)
!2890 = !DILocation(line: 714, column: 2250, scope: !2891)
!2891 = !DILexicalBlockFile(scope: !2887, file: !368, discriminator: 9)
!2892 = !DILocation(line: 714, column: 2259, scope: !2887)
!2893 = !DILocation(line: 714, column: 2234, scope: !2882)
!2894 = !DILocation(line: 714, column: 2279, scope: !2895)
!2895 = !DILexicalBlockFile(scope: !2896, file: !368, discriminator: 11)
!2896 = distinct !DILexicalBlock(scope: !2887, file: !368, line: 714, column: 2265)
!2897 = !DILocation(line: 714, column: 2289, scope: !2896)
!2898 = !DILocation(line: 714, column: 2287, scope: !2896)
!2899 = !DILocation(line: 714, column: 2276, scope: !2896)
!2900 = !DILocation(line: 714, column: 2352, scope: !2901)
!2901 = distinct !DILexicalBlock(scope: !2896, file: !368, line: 714, column: 2352)
!2902 = !DILocation(line: 714, column: 2361, scope: !2901)
!2903 = !DILocation(line: 714, column: 2365, scope: !2901)
!2904 = !DILocation(line: 714, column: 2368, scope: !2905)
!2905 = !DILexicalBlockFile(scope: !2901, file: !368, discriminator: 13)
!2906 = !DILocation(line: 714, column: 2377, scope: !2901)
!2907 = !DILocation(line: 714, column: 2352, scope: !2896)
!2908 = !DILocation(line: 714, column: 2395, scope: !2909)
!2909 = !DILexicalBlockFile(scope: !2901, file: !368, discriminator: 15)
!2910 = !DILocation(line: 714, column: 2405, scope: !2901)
!2911 = !DILocation(line: 714, column: 2403, scope: !2901)
!2912 = !DILocation(line: 714, column: 2392, scope: !2901)
!2913 = !DILocation(line: 714, column: 2383, scope: !2901)
!2914 = !DILocation(line: 714, column: 2464, scope: !2915)
!2915 = !DILexicalBlockFile(scope: !2916, file: !368, discriminator: 17)
!2916 = !DILexicalBlockFile(scope: !2917, file: !368, discriminator: 16)
!2917 = !DILexicalBlockFile(scope: !2896, file: !368, discriminator: 14)
!2918 = !DILocation(line: 714, column: 2466, scope: !2919)
!2919 = !DILexicalBlockFile(scope: !2920, file: !368, discriminator: 18)
!2920 = !DILexicalBlockFile(scope: !2921, file: !368, discriminator: 12)
!2921 = !DILexicalBlockFile(scope: !2882, file: !368, discriminator: 10)
!2922 = !DILocation(line: 714, column: 2468, scope: !2923)
!2923 = !DILexicalBlockFile(scope: !2924, file: !368, discriminator: 19)
!2924 = !DILexicalBlockFile(scope: !2925, file: !368, discriminator: 8)
!2925 = !DILexicalBlockFile(scope: !849, file: !368, discriminator: 6)
!2926 = !DILocation(line: 714, column: 2144, scope: !2873)
!2927 = !DILocation(line: 714, column: 2478, scope: !845)
!2928 = !DILocation(line: 714, column: 2478, scope: !849)
!2929 = !DILocation(line: 714, column: 2520, scope: !2930)
!2930 = !DILexicalBlockFile(scope: !2931, file: !368, discriminator: 4)
!2931 = !DILexicalBlockFile(scope: !845, file: !368, discriminator: 2)
!2932 = !DILocation(line: 714, column: 2503, scope: !845)
!2933 = !DILocation(line: 714, column: 2485, scope: !845)
!2934 = !DILocation(line: 714, column: 31, scope: !2935)
!2935 = !DILexicalBlockFile(scope: !2936, file: !368, discriminator: 21)
!2936 = !DILexicalBlockFile(scope: !845, file: !368, discriminator: 20)
!2937 = !DILocation(line: 714, column: 2542, scope: !846)
!2938 = !DILocation(line: 714, column: 2542, scope: !845)
!2939 = !DILocation(line: 714, column: 11, scope: !846)
!2940 = !DILocation(line: 712, column: 9, scope: !839)
!2941 = !DILocation(line: 715, column: 50, scope: !846)
!2942 = !DILocation(line: 715, column: 56, scope: !846)
!2943 = !DILocation(line: 715, column: 16, scope: !846)
!2944 = !DILocation(line: 715, column: 9, scope: !846)
!2945 = !DILocation(line: 716, column: 5, scope: !839)
!2946 = !DILocation(line: 717, column: 1, scope: !839)
!2947 = !DILocation(line: 697, column: 34, scope: !851)
!2948 = !DILocation(line: 697, column: 50, scope: !851)
!2949 = !DILocation(line: 697, column: 63, scope: !851)
!2950 = !DILocation(line: 699, column: 5, scope: !851)
!2951 = !DILocation(line: 699, column: 20, scope: !851)
!2952 = !DILocation(line: 699, column: 54, scope: !851)
!2953 = !DILocation(line: 699, column: 42, scope: !851)
!2954 = !DILocation(line: 699, column: 27, scope: !851)
!2955 = !DILocation(line: 700, column: 9, scope: !863)
!2956 = !DILocation(line: 700, column: 9, scope: !851)
!2957 = !DILocation(line: 701, column: 9, scope: !863)
!2958 = !DILocation(line: 701, column: 18, scope: !2959)
!2959 = !DILexicalBlockFile(scope: !861, file: !368, discriminator: 1)
!2960 = !DILocation(line: 701, column: 24, scope: !861)
!2961 = !{!2962, !2523, i64 88}
!2962 = !{!"", !2963, i64 0, !2553, i64 40, !2553, i64 48, !2553, i64 56, !2964, i64 64, !2523, i64 88, !2523, i64 96, !2523, i64 104, !2523, i64 112, !2523, i64 120, !2523, i64 128, !2523, i64 136, !2523, i64 144, !2593, i64 152, !2523, i64 160, !2593, i64 168, !2523, i64 176}
!2963 = !{!"", !2552, i64 0, !2553, i64 16, !2523, i64 24, !2523, i64 32}
!2964 = !{!"_ffi_type", !2553, i64 0, !2965, i64 8, !2965, i64 10, !2523, i64 16}
!2965 = !{!"short", !2524, i64 0}
!2966 = !DILocation(line: 701, column: 18, scope: !861)
!2967 = !DILocation(line: 701, column: 18, scope: !862)
!2968 = !DILocation(line: 701, column: 33, scope: !2969)
!2969 = !DILexicalBlockFile(scope: !860, file: !368, discriminator: 2)
!2970 = !DILocation(line: 701, column: 37, scope: !860)
!2971 = !DILocation(line: 701, column: 44, scope: !860)
!2972 = !DILocation(line: 701, column: 63, scope: !860)
!2973 = !DILocation(line: 701, column: 69, scope: !860)
!2974 = !DILocation(line: 701, column: 77, scope: !860)
!2975 = !DILocation(line: 701, column: 87, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !860, file: !368, line: 701, column: 87)
!2977 = !DILocation(line: 701, column: 87, scope: !860)
!2978 = !DILocation(line: 701, column: 100, scope: !2979)
!2979 = !DILexicalBlockFile(scope: !2976, file: !368, discriminator: 4)
!2980 = !DILocation(line: 701, column: 93, scope: !2976)
!2981 = !DILocation(line: 701, column: 106, scope: !2982)
!2982 = !DILexicalBlockFile(scope: !861, file: !368, discriminator: 5)
!2983 = !DILocation(line: 701, column: 106, scope: !2984)
!2984 = !DILexicalBlockFile(scope: !2985, file: !368, discriminator: 7)
!2985 = !DILexicalBlockFile(scope: !861, file: !368, discriminator: 6)
!2986 = !DILocation(line: 701, column: 106, scope: !860)
!2987 = !DILocation(line: 701, column: 108, scope: !2988)
!2988 = !DILexicalBlockFile(scope: !2989, file: !368, discriminator: 8)
!2989 = !DILexicalBlockFile(scope: !862, file: !368, discriminator: 3)
!2990 = !DILocation(line: 701, column: 108, scope: !2991)
!2991 = !DILexicalBlockFile(scope: !862, file: !368, discriminator: 9)
!2992 = !DILocation(line: 701, column: 108, scope: !2993)
!2993 = !DILexicalBlockFile(scope: !862, file: !368, discriminator: 10)
!2994 = !DILocation(line: 702, column: 24, scope: !851)
!2995 = !{!2591, !2523, i64 184}
!2996 = !DILocation(line: 702, column: 48, scope: !851)
!2997 = !DILocation(line: 702, column: 36, scope: !851)
!2998 = !DILocation(line: 702, column: 54, scope: !851)
!2999 = !DILocation(line: 702, column: 61, scope: !851)
!3000 = !DILocation(line: 702, column: 12, scope: !851)
!3001 = !DILocation(line: 702, column: 5, scope: !851)
!3002 = !DILocation(line: 703, column: 1, scope: !851)
!3003 = !DILocation(line: 688, column: 31, scope: !864)
!3004 = !DILocation(line: 690, column: 5, scope: !864)
!3005 = !DILocation(line: 690, column: 20, scope: !864)
!3006 = !DILocation(line: 690, column: 54, scope: !864)
!3007 = !DILocation(line: 690, column: 42, scope: !864)
!3008 = !DILocation(line: 690, column: 27, scope: !864)
!3009 = !DILocation(line: 691, column: 9, scope: !872)
!3010 = !DILocation(line: 691, column: 9, scope: !864)
!3011 = !DILocation(line: 692, column: 9, scope: !872)
!3012 = !DILocation(line: 692, column: 14, scope: !3013)
!3013 = !DILexicalBlockFile(scope: !871, file: !368, discriminator: 1)
!3014 = !DILocation(line: 692, column: 24, scope: !871)
!3015 = !DILocation(line: 692, column: 47, scope: !871)
!3016 = !DILocation(line: 692, column: 53, scope: !871)
!3017 = !DILocation(line: 692, column: 65, scope: !876)
!3018 = !DILocation(line: 692, column: 73, scope: !876)
!3019 = !DILocation(line: 692, column: 65, scope: !871)
!3020 = !DILocation(line: 692, column: 91, scope: !3021)
!3021 = !DILexicalBlockFile(scope: !875, file: !368, discriminator: 2)
!3022 = !DILocation(line: 692, column: 97, scope: !875)
!3023 = !DILocation(line: 692, column: 104, scope: !875)
!3024 = !DILocation(line: 692, column: 118, scope: !875)
!3025 = !DILocation(line: 692, column: 123, scope: !3026)
!3026 = !DILexicalBlockFile(scope: !874, file: !368, discriminator: 4)
!3027 = !DILocation(line: 692, column: 133, scope: !874)
!3028 = !DILocation(line: 692, column: 163, scope: !874)
!3029 = !DILocation(line: 692, column: 181, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !874, file: !368, line: 692, column: 178)
!3031 = !DILocation(line: 692, column: 198, scope: !3030)
!3032 = !DILocation(line: 692, column: 178, scope: !3030)
!3033 = !DILocation(line: 692, column: 208, scope: !3030)
!3034 = !DILocation(line: 692, column: 178, scope: !874)
!3035 = !DILocation(line: 692, column: 178, scope: !3036)
!3036 = !DILexicalBlockFile(scope: !874, file: !368, discriminator: 5)
!3037 = !DILocation(line: 692, column: 239, scope: !3038)
!3038 = !DILexicalBlockFile(scope: !3030, file: !368, discriminator: 6)
!3039 = !DILocation(line: 692, column: 257, scope: !3030)
!3040 = !DILocation(line: 692, column: 267, scope: !3030)
!3041 = !DILocation(line: 692, column: 292, scope: !3030)
!3042 = !DILocation(line: 692, column: 223, scope: !3030)
!3043 = !DILocation(line: 692, column: 311, scope: !3044)
!3044 = !DILexicalBlockFile(scope: !875, file: !368, discriminator: 7)
!3045 = !DILocation(line: 692, column: 311, scope: !874)
!3046 = !DILocation(line: 692, column: 311, scope: !3047)
!3047 = !DILexicalBlockFile(scope: !874, file: !368, discriminator: 8)
!3048 = !DILocation(line: 692, column: 324, scope: !3049)
!3049 = !DILexicalBlockFile(scope: !875, file: !368, discriminator: 9)
!3050 = !DILocation(line: 692, column: 326, scope: !3051)
!3051 = !DILexicalBlockFile(scope: !3052, file: !368, discriminator: 10)
!3052 = !DILexicalBlockFile(scope: !872, file: !368, discriminator: 3)
!3053 = !DILocation(line: 692, column: 326, scope: !871)
!3054 = !DILocation(line: 692, column: 326, scope: !3055)
!3055 = !DILexicalBlockFile(scope: !871, file: !368, discriminator: 11)
!3056 = !DILocation(line: 692, column: 326, scope: !3057)
!3057 = !DILexicalBlockFile(scope: !871, file: !368, discriminator: 12)
!3058 = !DILocation(line: 693, column: 24, scope: !864)
!3059 = !{!2591, !2523, i64 192}
!3060 = !DILocation(line: 693, column: 45, scope: !864)
!3061 = !DILocation(line: 693, column: 33, scope: !864)
!3062 = !DILocation(line: 693, column: 12, scope: !864)
!3063 = !DILocation(line: 694, column: 1, scope: !864)
!3064 = !DILocation(line: 693, column: 5, scope: !864)
!3065 = !DILocation(line: 428, column: 33, scope: !933)
!3066 = !DILocation(line: 428, column: 49, scope: !933)
!3067 = !DILocation(line: 428, column: 65, scope: !933)
!3068 = !DILocation(line: 430, column: 32, scope: !933)
!3069 = !DILocation(line: 430, column: 38, scope: !933)
!3070 = !DILocation(line: 430, column: 44, scope: !933)
!3071 = !DILocation(line: 430, column: 12, scope: !933)
!3072 = !DILocation(line: 430, column: 5, scope: !933)
!3073 = !DILocation(line: 872, column: 34, scope: !1017)
!3074 = !DILocation(line: 872, column: 50, scope: !1017)
!3075 = !DILocation(line: 872, column: 66, scope: !1017)
!3076 = !DILocation(line: 874, column: 5, scope: !1017)
!3077 = !DILocation(line: 874, column: 19, scope: !1017)
!3078 = !DILocation(line: 875, column: 5, scope: !1017)
!3079 = !DILocation(line: 875, column: 20, scope: !1017)
!3080 = !DILocation(line: 876, column: 5, scope: !1017)
!3081 = !DILocation(line: 876, column: 15, scope: !1017)
!3082 = !DILocation(line: 877, column: 5, scope: !1017)
!3083 = !DILocation(line: 877, column: 15, scope: !1017)
!3084 = !DILocation(line: 879, column: 32, scope: !1017)
!3085 = !DILocation(line: 879, column: 16, scope: !1017)
!3086 = !DILocation(line: 879, column: 14, scope: !1017)
!3087 = !DILocation(line: 880, column: 10, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !1017, file: !368, line: 880, column: 9)
!3089 = !DILocation(line: 880, column: 9, scope: !1017)
!3090 = !DILocation(line: 881, column: 9, scope: !3088)
!3091 = !DILocation(line: 886, column: 32, scope: !1017)
!3092 = !DILocation(line: 886, column: 15, scope: !1017)
!3093 = !DILocation(line: 886, column: 13, scope: !1017)
!3094 = !DILocation(line: 888, column: 10, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !1017, file: !368, line: 888, column: 9)
!3096 = !DILocation(line: 888, column: 9, scope: !1017)
!3097 = !DILocation(line: 889, column: 9, scope: !3095)
!3098 = !DILocation(line: 890, column: 5, scope: !1017)
!3099 = !DILocation(line: 890, column: 14, scope: !1017)
!3100 = !DILocation(line: 890, column: 19, scope: !1017)
!3101 = !{!2962, !2553, i64 40}
!3102 = !DILocation(line: 891, column: 22, scope: !1017)
!3103 = !DILocation(line: 891, column: 50, scope: !1017)
!3104 = !{!3105, !2523, i64 24}
!3105 = !{!"fielddesc", !2524, i64 0, !2523, i64 8, !2523, i64 16, !2523, i64 24, !2523, i64 32, !2523, i64 40}
!3106 = !DILocation(line: 891, column: 61, scope: !1017)
!3107 = !{!2964, !2965, i64 8}
!3108 = !DILocation(line: 891, column: 5, scope: !1017)
!3109 = !DILocation(line: 891, column: 14, scope: !1017)
!3110 = !DILocation(line: 891, column: 20, scope: !1017)
!3111 = !{!2962, !2553, i64 48}
!3112 = !DILocation(line: 892, column: 5, scope: !1017)
!3113 = !DILocation(line: 892, column: 14, scope: !1017)
!3114 = !DILocation(line: 892, column: 21, scope: !1017)
!3115 = !{!2962, !2553, i64 56}
!3116 = !DILocation(line: 893, column: 5, scope: !1017)
!3117 = !DILocation(line: 893, column: 14, scope: !1017)
!3118 = !DILocation(line: 893, column: 33, scope: !1017)
!3119 = !{i64 0, i64 8, !2704, i64 8, i64 2, !3120, i64 10, i64 2, !3120, i64 16, i64 8, !2522}
!3120 = !{!2965, !2965, i64 0}
!3121 = !DILocation(line: 894, column: 5, scope: !1017)
!3122 = !DILocation(line: 894, column: 14, scope: !1017)
!3123 = !DILocation(line: 894, column: 24, scope: !1017)
!3124 = !{!2962, !2523, i64 112}
!3125 = !DILocation(line: 895, column: 5, scope: !1017)
!3126 = !DILocation(line: 895, column: 14, scope: !1017)
!3127 = !DILocation(line: 895, column: 20, scope: !1017)
!3128 = !{!2962, !2593, i64 152}
!3129 = !DILocation(line: 897, column: 34, scope: !1017)
!3130 = !DILocation(line: 897, column: 13, scope: !1017)
!3131 = !DILocation(line: 897, column: 11, scope: !1017)
!3132 = !DILocation(line: 898, column: 9, scope: !1029)
!3133 = !DILocation(line: 898, column: 15, scope: !1029)
!3134 = !DILocation(line: 898, column: 48, scope: !3135)
!3135 = !DILexicalBlockFile(scope: !1029, file: !368, discriminator: 1)
!3136 = !DILocation(line: 898, column: 57, scope: !1029)
!3137 = !DILocation(line: 898, column: 24, scope: !1029)
!3138 = !DILocation(line: 898, column: 21, scope: !1029)
!3139 = !DILocation(line: 898, column: 9, scope: !1017)
!3140 = !DILocation(line: 899, column: 9, scope: !1028)
!3141 = !DILocation(line: 899, column: 14, scope: !3142)
!3142 = !DILexicalBlockFile(scope: !1027, file: !368, discriminator: 1)
!3143 = !DILocation(line: 899, column: 24, scope: !1027)
!3144 = !DILocation(line: 899, column: 66, scope: !1027)
!3145 = !DILocation(line: 899, column: 54, scope: !1027)
!3146 = !DILocation(line: 899, column: 84, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !1027, file: !368, line: 899, column: 81)
!3148 = !DILocation(line: 899, column: 101, scope: !3147)
!3149 = !DILocation(line: 899, column: 81, scope: !3147)
!3150 = !DILocation(line: 899, column: 111, scope: !3147)
!3151 = !DILocation(line: 899, column: 81, scope: !1027)
!3152 = !DILocation(line: 899, column: 81, scope: !3153)
!3153 = !DILexicalBlockFile(scope: !1027, file: !368, discriminator: 2)
!3154 = !DILocation(line: 899, column: 142, scope: !3155)
!3155 = !DILexicalBlockFile(scope: !3147, file: !368, discriminator: 3)
!3156 = !DILocation(line: 899, column: 160, scope: !3147)
!3157 = !DILocation(line: 899, column: 170, scope: !3147)
!3158 = !DILocation(line: 899, column: 195, scope: !3147)
!3159 = !DILocation(line: 899, column: 126, scope: !3147)
!3160 = !DILocation(line: 899, column: 214, scope: !3161)
!3161 = !DILexicalBlockFile(scope: !1028, file: !368, discriminator: 4)
!3162 = !DILocation(line: 899, column: 214, scope: !1027)
!3163 = !DILocation(line: 899, column: 214, scope: !3164)
!3164 = !DILexicalBlockFile(scope: !1027, file: !368, discriminator: 5)
!3165 = !DILocation(line: 900, column: 9, scope: !1028)
!3166 = !DILocation(line: 903, column: 9, scope: !1032)
!3167 = !DILocation(line: 903, column: 9, scope: !1017)
!3168 = !DILocation(line: 904, column: 9, scope: !1031)
!3169 = !DILocation(line: 904, column: 24, scope: !1031)
!3170 = !DILocation(line: 904, column: 50, scope: !1031)
!3171 = !DILocation(line: 904, column: 35, scope: !1031)
!3172 = !DILocation(line: 905, column: 9, scope: !1031)
!3173 = !DILocation(line: 905, column: 21, scope: !1031)
!3174 = !DILocation(line: 912, column: 26, scope: !1031)
!3175 = !DILocation(line: 912, column: 36, scope: !1031)
!3176 = !{!2962, !2523, i64 160}
!3177 = !DILocation(line: 912, column: 45, scope: !3178)
!3178 = !DILexicalBlockFile(scope: !1031, file: !368, discriminator: 1)
!3179 = !DILocation(line: 912, column: 55, scope: !1031)
!3180 = !DILocation(line: 912, column: 26, scope: !3181)
!3181 = !DILexicalBlockFile(scope: !1031, file: !368, discriminator: 2)
!3182 = !DILocation(line: 912, column: 24, scope: !3183)
!3183 = !DILexicalBlockFile(scope: !3184, file: !368, discriminator: 4)
!3184 = !DILexicalBlockFile(scope: !1031, file: !368, discriminator: 3)
!3185 = !DILocation(line: 913, column: 13, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !1031, file: !368, line: 913, column: 13)
!3187 = !DILocation(line: 913, column: 23, scope: !3186)
!3188 = !{!2962, !2523, i64 176}
!3189 = !DILocation(line: 913, column: 29, scope: !3186)
!3190 = !DILocation(line: 913, column: 13, scope: !1031)
!3191 = !DILocation(line: 916, column: 17, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3186, file: !368, line: 913, column: 44)
!3193 = !DILocation(line: 916, column: 27, scope: !3192)
!3194 = !{!2962, !2593, i64 168}
!3195 = !DILocation(line: 916, column: 33, scope: !3192)
!3196 = !DILocation(line: 916, column: 43, scope: !3192)
!3197 = !DILocation(line: 916, column: 55, scope: !3192)
!3198 = !DILocation(line: 915, column: 31, scope: !3192)
!3199 = !DILocation(line: 915, column: 13, scope: !3192)
!3200 = !DILocation(line: 915, column: 22, scope: !3192)
!3201 = !DILocation(line: 915, column: 29, scope: !3192)
!3202 = !DILocation(line: 917, column: 9, scope: !3192)
!3203 = !DILocation(line: 918, column: 64, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3186, file: !368, line: 917, column: 16)
!3205 = !DILocation(line: 918, column: 31, scope: !3204)
!3206 = !DILocation(line: 918, column: 13, scope: !3204)
!3207 = !DILocation(line: 918, column: 22, scope: !3204)
!3208 = !DILocation(line: 918, column: 29, scope: !3204)
!3209 = !DILocation(line: 920, column: 13, scope: !1037)
!3210 = !DILocation(line: 920, column: 22, scope: !1037)
!3211 = !DILocation(line: 920, column: 29, scope: !1037)
!3212 = !DILocation(line: 920, column: 13, scope: !1031)
!3213 = !DILocation(line: 921, column: 13, scope: !1036)
!3214 = !DILocation(line: 921, column: 18, scope: !3215)
!3215 = !DILexicalBlockFile(scope: !1035, file: !368, discriminator: 1)
!3216 = !DILocation(line: 921, column: 28, scope: !1035)
!3217 = !DILocation(line: 921, column: 70, scope: !1035)
!3218 = !DILocation(line: 921, column: 58, scope: !1035)
!3219 = !DILocation(line: 921, column: 88, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !1035, file: !368, line: 921, column: 85)
!3221 = !DILocation(line: 921, column: 105, scope: !3220)
!3222 = !DILocation(line: 921, column: 85, scope: !3220)
!3223 = !DILocation(line: 921, column: 115, scope: !3220)
!3224 = !DILocation(line: 921, column: 85, scope: !1035)
!3225 = !DILocation(line: 921, column: 85, scope: !3226)
!3226 = !DILexicalBlockFile(scope: !1035, file: !368, discriminator: 2)
!3227 = !DILocation(line: 921, column: 146, scope: !3228)
!3228 = !DILexicalBlockFile(scope: !3220, file: !368, discriminator: 3)
!3229 = !DILocation(line: 921, column: 164, scope: !3220)
!3230 = !DILocation(line: 921, column: 174, scope: !3220)
!3231 = !DILocation(line: 921, column: 199, scope: !3220)
!3232 = !DILocation(line: 921, column: 130, scope: !3220)
!3233 = !DILocation(line: 921, column: 218, scope: !3234)
!3234 = !DILexicalBlockFile(scope: !1036, file: !368, discriminator: 4)
!3235 = !DILocation(line: 921, column: 218, scope: !1035)
!3236 = !DILocation(line: 921, column: 218, scope: !3237)
!3237 = !DILexicalBlockFile(scope: !1035, file: !368, discriminator: 5)
!3238 = !DILocation(line: 922, column: 13, scope: !1036)
!3239 = !DILocation(line: 924, column: 5, scope: !1032)
!3240 = !DILocation(line: 924, column: 5, scope: !3241)
!3241 = !DILexicalBlockFile(scope: !1032, file: !368, discriminator: 1)
!3242 = !DILocation(line: 924, column: 5, scope: !1031)
!3243 = !DILocation(line: 928, column: 42, scope: !1017)
!3244 = !{!2591, !2523, i64 312}
!3245 = !DILocation(line: 928, column: 49, scope: !1017)
!3246 = !DILocation(line: 928, column: 55, scope: !1017)
!3247 = !DILocation(line: 928, column: 61, scope: !1017)
!3248 = !DILocation(line: 928, column: 30, scope: !1017)
!3249 = !DILocation(line: 928, column: 14, scope: !1017)
!3250 = !DILocation(line: 928, column: 12, scope: !1017)
!3251 = !DILocation(line: 929, column: 9, scope: !1041)
!3252 = !DILocation(line: 929, column: 16, scope: !1041)
!3253 = !DILocation(line: 929, column: 9, scope: !1017)
!3254 = !DILocation(line: 930, column: 9, scope: !1040)
!3255 = !DILocation(line: 930, column: 14, scope: !3256)
!3256 = !DILexicalBlockFile(scope: !1039, file: !368, discriminator: 1)
!3257 = !DILocation(line: 930, column: 24, scope: !1039)
!3258 = !DILocation(line: 930, column: 66, scope: !1039)
!3259 = !DILocation(line: 930, column: 54, scope: !1039)
!3260 = !DILocation(line: 930, column: 84, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !1039, file: !368, line: 930, column: 81)
!3262 = !DILocation(line: 930, column: 101, scope: !3261)
!3263 = !DILocation(line: 930, column: 81, scope: !3261)
!3264 = !DILocation(line: 930, column: 111, scope: !3261)
!3265 = !DILocation(line: 930, column: 81, scope: !1039)
!3266 = !DILocation(line: 930, column: 81, scope: !3267)
!3267 = !DILexicalBlockFile(scope: !1039, file: !368, discriminator: 2)
!3268 = !DILocation(line: 930, column: 142, scope: !3269)
!3269 = !DILexicalBlockFile(scope: !3261, file: !368, discriminator: 3)
!3270 = !DILocation(line: 930, column: 160, scope: !3261)
!3271 = !DILocation(line: 930, column: 170, scope: !3261)
!3272 = !DILocation(line: 930, column: 195, scope: !3261)
!3273 = !DILocation(line: 930, column: 126, scope: !3261)
!3274 = !DILocation(line: 930, column: 214, scope: !3275)
!3275 = !DILexicalBlockFile(scope: !1040, file: !368, discriminator: 4)
!3276 = !DILocation(line: 930, column: 214, scope: !1039)
!3277 = !DILocation(line: 930, column: 214, scope: !3278)
!3278 = !DILexicalBlockFile(scope: !1039, file: !368, discriminator: 5)
!3279 = !DILocation(line: 931, column: 9, scope: !1040)
!3280 = !DILocation(line: 935, column: 41, scope: !1045)
!3281 = !DILocation(line: 935, column: 29, scope: !1045)
!3282 = !DILocation(line: 935, column: 50, scope: !1045)
!3283 = !DILocation(line: 935, column: 58, scope: !1045)
!3284 = !{!2591, !2523, i64 264}
!3285 = !DILocation(line: 935, column: 15, scope: !1045)
!3286 = !DILocation(line: 935, column: 12, scope: !1045)
!3287 = !DILocation(line: 935, column: 9, scope: !1017)
!3288 = !DILocation(line: 936, column: 9, scope: !1044)
!3289 = !DILocation(line: 936, column: 14, scope: !3290)
!3290 = !DILexicalBlockFile(scope: !1043, file: !368, discriminator: 1)
!3291 = !DILocation(line: 936, column: 24, scope: !1043)
!3292 = !DILocation(line: 936, column: 54, scope: !1043)
!3293 = !DILocation(line: 936, column: 41, scope: !1043)
!3294 = !DILocation(line: 936, column: 71, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !1043, file: !368, line: 936, column: 68)
!3296 = !DILocation(line: 936, column: 88, scope: !3295)
!3297 = !DILocation(line: 936, column: 68, scope: !3295)
!3298 = !DILocation(line: 936, column: 98, scope: !3295)
!3299 = !DILocation(line: 936, column: 68, scope: !1043)
!3300 = !DILocation(line: 936, column: 68, scope: !3301)
!3301 = !DILexicalBlockFile(scope: !1043, file: !368, discriminator: 2)
!3302 = !DILocation(line: 936, column: 129, scope: !3303)
!3303 = !DILexicalBlockFile(scope: !3295, file: !368, discriminator: 3)
!3304 = !DILocation(line: 936, column: 147, scope: !3295)
!3305 = !DILocation(line: 936, column: 157, scope: !3295)
!3306 = !DILocation(line: 936, column: 182, scope: !3295)
!3307 = !DILocation(line: 936, column: 113, scope: !3295)
!3308 = !DILocation(line: 936, column: 201, scope: !3309)
!3309 = !DILexicalBlockFile(scope: !1044, file: !368, discriminator: 4)
!3310 = !DILocation(line: 936, column: 201, scope: !1043)
!3311 = !DILocation(line: 936, column: 201, scope: !3312)
!3312 = !DILexicalBlockFile(scope: !1043, file: !368, discriminator: 5)
!3313 = !DILocation(line: 937, column: 9, scope: !1044)
!3314 = !DILocation(line: 937, column: 14, scope: !3315)
!3315 = !DILexicalBlockFile(scope: !1047, file: !368, discriminator: 1)
!3316 = !DILocation(line: 937, column: 24, scope: !1047)
!3317 = !DILocation(line: 937, column: 66, scope: !1047)
!3318 = !DILocation(line: 937, column: 54, scope: !1047)
!3319 = !DILocation(line: 937, column: 84, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !1047, file: !368, line: 937, column: 81)
!3321 = !DILocation(line: 937, column: 101, scope: !3320)
!3322 = !DILocation(line: 937, column: 81, scope: !3320)
!3323 = !DILocation(line: 937, column: 111, scope: !3320)
!3324 = !DILocation(line: 937, column: 81, scope: !1047)
!3325 = !DILocation(line: 937, column: 81, scope: !3326)
!3326 = !DILexicalBlockFile(scope: !1047, file: !368, discriminator: 2)
!3327 = !DILocation(line: 937, column: 142, scope: !3328)
!3328 = !DILexicalBlockFile(scope: !3320, file: !368, discriminator: 3)
!3329 = !DILocation(line: 937, column: 160, scope: !3320)
!3330 = !DILocation(line: 937, column: 170, scope: !3320)
!3331 = !DILocation(line: 937, column: 195, scope: !3320)
!3332 = !DILocation(line: 937, column: 126, scope: !3320)
!3333 = !DILocation(line: 937, column: 214, scope: !3309)
!3334 = !DILocation(line: 937, column: 214, scope: !1047)
!3335 = !DILocation(line: 937, column: 214, scope: !3336)
!3336 = !DILexicalBlockFile(scope: !1047, file: !368, discriminator: 5)
!3337 = !DILocation(line: 938, column: 9, scope: !1044)
!3338 = !DILocation(line: 940, column: 5, scope: !1017)
!3339 = !DILocation(line: 940, column: 10, scope: !3340)
!3340 = !DILexicalBlockFile(scope: !1049, file: !368, discriminator: 1)
!3341 = !DILocation(line: 940, column: 20, scope: !1049)
!3342 = !DILocation(line: 940, column: 50, scope: !1049)
!3343 = !DILocation(line: 940, column: 58, scope: !1049)
!3344 = !DILocation(line: 940, column: 76, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !1049, file: !368, line: 940, column: 73)
!3346 = !DILocation(line: 940, column: 93, scope: !3345)
!3347 = !DILocation(line: 940, column: 73, scope: !3345)
!3348 = !DILocation(line: 940, column: 103, scope: !3345)
!3349 = !DILocation(line: 940, column: 73, scope: !1049)
!3350 = !DILocation(line: 940, column: 73, scope: !3351)
!3351 = !DILexicalBlockFile(scope: !1049, file: !368, discriminator: 2)
!3352 = !DILocation(line: 940, column: 134, scope: !3353)
!3353 = !DILexicalBlockFile(scope: !3345, file: !368, discriminator: 3)
!3354 = !DILocation(line: 940, column: 152, scope: !3345)
!3355 = !DILocation(line: 940, column: 162, scope: !3345)
!3356 = !DILocation(line: 940, column: 187, scope: !3345)
!3357 = !DILocation(line: 940, column: 118, scope: !3345)
!3358 = !DILocation(line: 940, column: 206, scope: !3359)
!3359 = !DILexicalBlockFile(scope: !1017, file: !368, discriminator: 4)
!3360 = !DILocation(line: 940, column: 206, scope: !1049)
!3361 = !DILocation(line: 940, column: 206, scope: !3362)
!3362 = !DILexicalBlockFile(scope: !1049, file: !368, discriminator: 5)
!3363 = !DILocation(line: 941, column: 35, scope: !1017)
!3364 = !DILocation(line: 941, column: 23, scope: !1017)
!3365 = !DILocation(line: 941, column: 5, scope: !1017)
!3366 = !DILocation(line: 941, column: 13, scope: !1017)
!3367 = !DILocation(line: 941, column: 21, scope: !1017)
!3368 = !DILocation(line: 943, column: 24, scope: !1017)
!3369 = !DILocation(line: 943, column: 12, scope: !1017)
!3370 = !DILocation(line: 943, column: 5, scope: !1017)
!3371 = !DILocation(line: 944, column: 1, scope: !1017)
!3372 = !DILocation(line: 1288, column: 32, scope: !1054)
!3373 = !DILocation(line: 1288, column: 48, scope: !1054)
!3374 = !DILocation(line: 1288, column: 64, scope: !1054)
!3375 = !DILocation(line: 1290, column: 5, scope: !1054)
!3376 = !DILocation(line: 1290, column: 19, scope: !1054)
!3377 = !DILocation(line: 1291, column: 5, scope: !1054)
!3378 = !DILocation(line: 1291, column: 20, scope: !1054)
!3379 = !DILocation(line: 1292, column: 5, scope: !1054)
!3380 = !DILocation(line: 1292, column: 20, scope: !1054)
!3381 = !DILocation(line: 1293, column: 5, scope: !1054)
!3382 = !DILocation(line: 1293, column: 15, scope: !1054)
!3383 = !DILocation(line: 1293, column: 29, scope: !1054)
!3384 = !DILocation(line: 1294, column: 5, scope: !1054)
!3385 = !DILocation(line: 1294, column: 10, scope: !1054)
!3386 = !DILocation(line: 1295, column: 5, scope: !1054)
!3387 = !DILocation(line: 1295, column: 9, scope: !1054)
!3388 = !DILocation(line: 1296, column: 5, scope: !1054)
!3389 = !DILocation(line: 1296, column: 16, scope: !1054)
!3390 = !DILocation(line: 1296, column: 26, scope: !1054)
!3391 = !DILocation(line: 1300, column: 42, scope: !1054)
!3392 = !DILocation(line: 1300, column: 49, scope: !1054)
!3393 = !DILocation(line: 1300, column: 55, scope: !1054)
!3394 = !DILocation(line: 1300, column: 61, scope: !1054)
!3395 = !DILocation(line: 1300, column: 30, scope: !1054)
!3396 = !DILocation(line: 1300, column: 14, scope: !1054)
!3397 = !DILocation(line: 1300, column: 12, scope: !1054)
!3398 = !DILocation(line: 1301, column: 9, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1301, column: 9)
!3400 = !DILocation(line: 1301, column: 16, scope: !3399)
!3401 = !DILocation(line: 1301, column: 9, scope: !1054)
!3402 = !DILocation(line: 1302, column: 9, scope: !3399)
!3403 = !DILocation(line: 1306, column: 13, scope: !1054)
!3404 = !DILocation(line: 1307, column: 15, scope: !1054)
!3405 = !DILocation(line: 1309, column: 54, scope: !1054)
!3406 = !DILocation(line: 1309, column: 42, scope: !1054)
!3407 = !DILocation(line: 1309, column: 19, scope: !1054)
!3408 = !DILocation(line: 1309, column: 17, scope: !1054)
!3409 = !DILocation(line: 1310, column: 10, scope: !1071)
!3410 = !DILocation(line: 1310, column: 22, scope: !1071)
!3411 = !DILocation(line: 1310, column: 43, scope: !3412)
!3412 = !DILexicalBlockFile(scope: !1071, file: !368, discriminator: 1)
!3413 = !DILocation(line: 1310, column: 58, scope: !1071)
!3414 = !DILocation(line: 1310, column: 69, scope: !1071)
!3415 = !DILocation(line: 1310, column: 78, scope: !1071)
!3416 = !DILocation(line: 1310, column: 95, scope: !1071)
!3417 = !DILocation(line: 1310, column: 9, scope: !1054)
!3418 = !DILocation(line: 1311, column: 25, scope: !1070)
!3419 = !DILocation(line: 1311, column: 9, scope: !1070)
!3420 = !DILocation(line: 1314, column: 9, scope: !1070)
!3421 = !DILocation(line: 1314, column: 14, scope: !3422)
!3422 = !DILexicalBlockFile(scope: !1069, file: !368, discriminator: 1)
!3423 = !DILocation(line: 1314, column: 24, scope: !1069)
!3424 = !DILocation(line: 1314, column: 55, scope: !1069)
!3425 = !DILocation(line: 1314, column: 73, scope: !1074)
!3426 = !DILocation(line: 1314, column: 89, scope: !1074)
!3427 = !DILocation(line: 1314, column: 73, scope: !1069)
!3428 = !DILocation(line: 1314, column: 104, scope: !3429)
!3429 = !DILexicalBlockFile(scope: !1074, file: !368, discriminator: 2)
!3430 = !DILocation(line: 1314, column: 109, scope: !3431)
!3431 = !DILexicalBlockFile(scope: !1073, file: !368, discriminator: 4)
!3432 = !DILocation(line: 1314, column: 119, scope: !1073)
!3433 = !DILocation(line: 1314, column: 149, scope: !1073)
!3434 = !DILocation(line: 1314, column: 175, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !1073, file: !368, line: 1314, column: 172)
!3436 = !DILocation(line: 1314, column: 192, scope: !3435)
!3437 = !DILocation(line: 1314, column: 172, scope: !3435)
!3438 = !DILocation(line: 1314, column: 202, scope: !3435)
!3439 = !DILocation(line: 1314, column: 172, scope: !1073)
!3440 = !DILocation(line: 1314, column: 172, scope: !3441)
!3441 = !DILexicalBlockFile(scope: !1073, file: !368, discriminator: 5)
!3442 = !DILocation(line: 1314, column: 233, scope: !3443)
!3443 = !DILexicalBlockFile(scope: !3435, file: !368, discriminator: 6)
!3444 = !DILocation(line: 1314, column: 251, scope: !3435)
!3445 = !DILocation(line: 1314, column: 261, scope: !3435)
!3446 = !DILocation(line: 1314, column: 286, scope: !3435)
!3447 = !DILocation(line: 1314, column: 217, scope: !3435)
!3448 = !DILocation(line: 1314, column: 305, scope: !3449)
!3449 = !DILexicalBlockFile(scope: !1074, file: !368, discriminator: 7)
!3450 = !DILocation(line: 1314, column: 305, scope: !1073)
!3451 = !DILocation(line: 1314, column: 305, scope: !3452)
!3452 = !DILexicalBlockFile(scope: !1073, file: !368, discriminator: 8)
!3453 = !DILocation(line: 1314, column: 305, scope: !3454)
!3454 = !DILexicalBlockFile(scope: !1073, file: !368, discriminator: 9)
!3455 = !DILocation(line: 1314, column: 318, scope: !3456)
!3456 = !DILexicalBlockFile(scope: !3457, file: !368, discriminator: 10)
!3457 = !DILexicalBlockFile(scope: !1070, file: !368, discriminator: 3)
!3458 = !DILocation(line: 1314, column: 318, scope: !1069)
!3459 = !DILocation(line: 1314, column: 318, scope: !3460)
!3460 = !DILexicalBlockFile(scope: !1069, file: !368, discriminator: 11)
!3461 = !DILocation(line: 1315, column: 9, scope: !1070)
!3462 = !DILocation(line: 1317, column: 39, scope: !1054)
!3463 = !DILocation(line: 1317, column: 14, scope: !1054)
!3464 = !DILocation(line: 1317, column: 12, scope: !1054)
!3465 = !DILocation(line: 1318, column: 9, scope: !1078)
!3466 = !DILocation(line: 1318, column: 9, scope: !1054)
!3467 = !DILocation(line: 1319, column: 25, scope: !1077)
!3468 = !DILocation(line: 1319, column: 9, scope: !1077)
!3469 = !DILocation(line: 1321, column: 9, scope: !1077)
!3470 = !DILocation(line: 1321, column: 14, scope: !3471)
!3471 = !DILexicalBlockFile(scope: !1076, file: !368, discriminator: 1)
!3472 = !DILocation(line: 1321, column: 24, scope: !1076)
!3473 = !DILocation(line: 1321, column: 54, scope: !1076)
!3474 = !DILocation(line: 1321, column: 76, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !1076, file: !368, line: 1321, column: 73)
!3476 = !DILocation(line: 1321, column: 93, scope: !3475)
!3477 = !DILocation(line: 1321, column: 73, scope: !3475)
!3478 = !DILocation(line: 1321, column: 103, scope: !3475)
!3479 = !DILocation(line: 1321, column: 73, scope: !1076)
!3480 = !DILocation(line: 1321, column: 73, scope: !3481)
!3481 = !DILexicalBlockFile(scope: !1076, file: !368, discriminator: 2)
!3482 = !DILocation(line: 1321, column: 134, scope: !3483)
!3483 = !DILexicalBlockFile(scope: !3475, file: !368, discriminator: 3)
!3484 = !DILocation(line: 1321, column: 152, scope: !3475)
!3485 = !DILocation(line: 1321, column: 162, scope: !3475)
!3486 = !DILocation(line: 1321, column: 187, scope: !3475)
!3487 = !DILocation(line: 1321, column: 118, scope: !3475)
!3488 = !DILocation(line: 1321, column: 206, scope: !3489)
!3489 = !DILexicalBlockFile(scope: !1077, file: !368, discriminator: 4)
!3490 = !DILocation(line: 1321, column: 206, scope: !1076)
!3491 = !DILocation(line: 1321, column: 206, scope: !3492)
!3492 = !DILexicalBlockFile(scope: !1076, file: !368, discriminator: 5)
!3493 = !DILocation(line: 1322, column: 9, scope: !1077)
!3494 = !DILocation(line: 1324, column: 5, scope: !1054)
!3495 = !DILocation(line: 1324, column: 10, scope: !3496)
!3496 = !DILexicalBlockFile(scope: !1080, file: !368, discriminator: 1)
!3497 = !DILocation(line: 1324, column: 20, scope: !1080)
!3498 = !DILocation(line: 1324, column: 50, scope: !1080)
!3499 = !DILocation(line: 1324, column: 72, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !1080, file: !368, line: 1324, column: 69)
!3501 = !DILocation(line: 1324, column: 89, scope: !3500)
!3502 = !DILocation(line: 1324, column: 69, scope: !3500)
!3503 = !DILocation(line: 1324, column: 99, scope: !3500)
!3504 = !DILocation(line: 1324, column: 69, scope: !1080)
!3505 = !DILocation(line: 1324, column: 69, scope: !3506)
!3506 = !DILexicalBlockFile(scope: !1080, file: !368, discriminator: 2)
!3507 = !DILocation(line: 1324, column: 130, scope: !3508)
!3508 = !DILexicalBlockFile(scope: !3500, file: !368, discriminator: 3)
!3509 = !DILocation(line: 1324, column: 148, scope: !3500)
!3510 = !DILocation(line: 1324, column: 158, scope: !3500)
!3511 = !DILocation(line: 1324, column: 183, scope: !3500)
!3512 = !DILocation(line: 1324, column: 114, scope: !3500)
!3513 = !DILocation(line: 1324, column: 202, scope: !3514)
!3514 = !DILexicalBlockFile(scope: !1054, file: !368, discriminator: 4)
!3515 = !DILocation(line: 1324, column: 202, scope: !1080)
!3516 = !DILocation(line: 1324, column: 202, scope: !3517)
!3517 = !DILexicalBlockFile(scope: !1080, file: !368, discriminator: 5)
!3518 = !DILocation(line: 1326, column: 52, scope: !1054)
!3519 = !DILocation(line: 1326, column: 40, scope: !1054)
!3520 = !DILocation(line: 1326, column: 17, scope: !1054)
!3521 = !DILocation(line: 1326, column: 15, scope: !1054)
!3522 = !DILocation(line: 1327, column: 10, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1327, column: 9)
!3524 = !DILocation(line: 1327, column: 9, scope: !1054)
!3525 = !DILocation(line: 1328, column: 25, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3523, file: !368, line: 1327, column: 21)
!3527 = !DILocation(line: 1328, column: 9, scope: !3526)
!3528 = !DILocation(line: 1330, column: 9, scope: !3526)
!3529 = !DILocation(line: 1333, column: 32, scope: !1054)
!3530 = !DILocation(line: 1333, column: 15, scope: !1054)
!3531 = !DILocation(line: 1333, column: 13, scope: !1054)
!3532 = !DILocation(line: 1335, column: 10, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1335, column: 9)
!3534 = !DILocation(line: 1335, column: 9, scope: !1054)
!3535 = !DILocation(line: 1336, column: 9, scope: !3533)
!3536 = !DILocation(line: 1338, column: 31, scope: !1054)
!3537 = !DILocation(line: 1338, column: 16, scope: !1054)
!3538 = !DILocation(line: 1338, column: 14, scope: !1054)
!3539 = !DILocation(line: 1339, column: 10, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1339, column: 9)
!3541 = !DILocation(line: 1339, column: 9, scope: !1054)
!3542 = !DILocation(line: 1340, column: 25, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3540, file: !368, line: 1339, column: 20)
!3544 = !DILocation(line: 1340, column: 9, scope: !3543)
!3545 = !DILocation(line: 1342, column: 9, scope: !3543)
!3546 = !DILocation(line: 1346, column: 63, scope: !1054)
!3547 = !DILocation(line: 1346, column: 73, scope: !1054)
!3548 = !DILocation(line: 1346, column: 23, scope: !1054)
!3549 = !DILocation(line: 1346, column: 5, scope: !1054)
!3550 = !DILocation(line: 1346, column: 14, scope: !1054)
!3551 = !DILocation(line: 1346, column: 21, scope: !1054)
!3552 = !DILocation(line: 1347, column: 9, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1347, column: 9)
!3554 = !DILocation(line: 1347, column: 18, scope: !3553)
!3555 = !DILocation(line: 1347, column: 25, scope: !3553)
!3556 = !DILocation(line: 1347, column: 9, scope: !1054)
!3557 = !DILocation(line: 1348, column: 9, scope: !3553)
!3558 = !DILocation(line: 1349, column: 21, scope: !1054)
!3559 = !DILocation(line: 1349, column: 31, scope: !1054)
!3560 = !DILocation(line: 1349, column: 36, scope: !1054)
!3561 = !DILocation(line: 1349, column: 5, scope: !1054)
!3562 = !DILocation(line: 1349, column: 14, scope: !1054)
!3563 = !DILocation(line: 1349, column: 19, scope: !1054)
!3564 = !DILocation(line: 1350, column: 56, scope: !1054)
!3565 = !DILocation(line: 1350, column: 65, scope: !1054)
!3566 = !DILocation(line: 1350, column: 54, scope: !1054)
!3567 = !DILocation(line: 1350, column: 22, scope: !1054)
!3568 = !DILocation(line: 1350, column: 5, scope: !1054)
!3569 = !DILocation(line: 1350, column: 14, scope: !1054)
!3570 = !DILocation(line: 1350, column: 20, scope: !1054)
!3571 = !DILocation(line: 1351, column: 9, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1351, column: 9)
!3573 = !DILocation(line: 1351, column: 18, scope: !3572)
!3574 = !DILocation(line: 1351, column: 24, scope: !3572)
!3575 = !DILocation(line: 1351, column: 9, scope: !1054)
!3576 = !DILocation(line: 1352, column: 9, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3572, file: !368, line: 1351, column: 39)
!3578 = !DILocation(line: 1353, column: 9, scope: !3577)
!3579 = !DILocation(line: 1355, column: 25, scope: !1054)
!3580 = !DILocation(line: 1355, column: 5, scope: !1054)
!3581 = !DILocation(line: 1355, column: 14, scope: !1054)
!3582 = !DILocation(line: 1355, column: 23, scope: !1054)
!3583 = !DILocation(line: 1356, column: 14, scope: !1054)
!3584 = !DILocation(line: 1356, column: 23, scope: !1054)
!3585 = !DILocation(line: 1356, column: 5, scope: !1054)
!3586 = !DILocation(line: 1356, column: 33, scope: !1054)
!3587 = !DILocation(line: 1356, column: 43, scope: !1054)
!3588 = !DILocation(line: 1357, column: 31, scope: !1054)
!3589 = !DILocation(line: 1357, column: 40, scope: !1054)
!3590 = !DILocation(line: 1357, column: 45, scope: !1054)
!3591 = !DILocation(line: 1357, column: 30, scope: !1054)
!3592 = !DILocation(line: 1357, column: 28, scope: !1054)
!3593 = !DILocation(line: 1359, column: 16, scope: !1054)
!3594 = !DILocation(line: 1359, column: 26, scope: !1054)
!3595 = !DILocation(line: 1359, column: 14, scope: !1054)
!3596 = !DILocation(line: 1360, column: 9, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1360, column: 9)
!3598 = !DILocation(line: 1360, column: 18, scope: !3597)
!3599 = !DILocation(line: 1360, column: 16, scope: !3597)
!3600 = !DILocation(line: 1360, column: 27, scope: !3597)
!3601 = !DILocation(line: 1360, column: 9, scope: !1054)
!3602 = !DILocation(line: 1361, column: 25, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3597, file: !368, line: 1360, column: 32)
!3604 = !DILocation(line: 1361, column: 9, scope: !3603)
!3605 = !DILocation(line: 1363, column: 9, scope: !3603)
!3606 = !DILocation(line: 1366, column: 17, scope: !1054)
!3607 = !DILocation(line: 1366, column: 27, scope: !1054)
!3608 = !DILocation(line: 1366, column: 15, scope: !1054)
!3609 = !DILocation(line: 1368, column: 9, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1368, column: 9)
!3611 = !DILocation(line: 1368, column: 19, scope: !3610)
!3612 = !DILocation(line: 1368, column: 25, scope: !3610)
!3613 = !DILocation(line: 1368, column: 9, scope: !1054)
!3614 = !DILocation(line: 1369, column: 9, scope: !3610)
!3615 = !DILocation(line: 1369, column: 18, scope: !3610)
!3616 = !DILocation(line: 1369, column: 24, scope: !3610)
!3617 = !DILocation(line: 1371, column: 21, scope: !1054)
!3618 = !DILocation(line: 1371, column: 32, scope: !1054)
!3619 = !DILocation(line: 1371, column: 30, scope: !1054)
!3620 = !DILocation(line: 1371, column: 5, scope: !1054)
!3621 = !DILocation(line: 1371, column: 14, scope: !1054)
!3622 = !DILocation(line: 1371, column: 19, scope: !1054)
!3623 = !DILocation(line: 1372, column: 22, scope: !1054)
!3624 = !DILocation(line: 1372, column: 5, scope: !1054)
!3625 = !DILocation(line: 1372, column: 14, scope: !1054)
!3626 = !DILocation(line: 1372, column: 20, scope: !1054)
!3627 = !DILocation(line: 1373, column: 23, scope: !1054)
!3628 = !DILocation(line: 1373, column: 5, scope: !1054)
!3629 = !DILocation(line: 1373, column: 14, scope: !1054)
!3630 = !DILocation(line: 1373, column: 21, scope: !1054)
!3631 = !DILocation(line: 1374, column: 22, scope: !1054)
!3632 = !DILocation(line: 1374, column: 5, scope: !1054)
!3633 = !DILocation(line: 1374, column: 14, scope: !1054)
!3634 = !DILocation(line: 1374, column: 20, scope: !1054)
!3635 = !DILocation(line: 1376, column: 5, scope: !1054)
!3636 = !DILocation(line: 1376, column: 14, scope: !1054)
!3637 = !DILocation(line: 1376, column: 24, scope: !1054)
!3638 = !DILocation(line: 1379, column: 5, scope: !1054)
!3639 = !DILocation(line: 1379, column: 14, scope: !1054)
!3640 = !DILocation(line: 1379, column: 33, scope: !1054)
!3641 = !DILocation(line: 1382, column: 41, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1382, column: 9)
!3643 = !DILocation(line: 1382, column: 29, scope: !3642)
!3644 = !DILocation(line: 1382, column: 50, scope: !3642)
!3645 = !DILocation(line: 1382, column: 58, scope: !3642)
!3646 = !DILocation(line: 1382, column: 15, scope: !3642)
!3647 = !DILocation(line: 1382, column: 12, scope: !3642)
!3648 = !DILocation(line: 1382, column: 9, scope: !1054)
!3649 = !DILocation(line: 1383, column: 9, scope: !3642)
!3650 = !DILocation(line: 1384, column: 5, scope: !1054)
!3651 = !DILocation(line: 1384, column: 10, scope: !3652)
!3652 = !DILexicalBlockFile(scope: !1082, file: !368, discriminator: 1)
!3653 = !DILocation(line: 1384, column: 20, scope: !1082)
!3654 = !DILocation(line: 1384, column: 50, scope: !1082)
!3655 = !DILocation(line: 1384, column: 58, scope: !1082)
!3656 = !DILocation(line: 1384, column: 76, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !1082, file: !368, line: 1384, column: 73)
!3658 = !DILocation(line: 1384, column: 93, scope: !3657)
!3659 = !DILocation(line: 1384, column: 73, scope: !3657)
!3660 = !DILocation(line: 1384, column: 103, scope: !3657)
!3661 = !DILocation(line: 1384, column: 73, scope: !1082)
!3662 = !DILocation(line: 1384, column: 73, scope: !3663)
!3663 = !DILexicalBlockFile(scope: !1082, file: !368, discriminator: 2)
!3664 = !DILocation(line: 1384, column: 134, scope: !3665)
!3665 = !DILexicalBlockFile(scope: !3657, file: !368, discriminator: 3)
!3666 = !DILocation(line: 1384, column: 152, scope: !3657)
!3667 = !DILocation(line: 1384, column: 162, scope: !3657)
!3668 = !DILocation(line: 1384, column: 187, scope: !3657)
!3669 = !DILocation(line: 1384, column: 118, scope: !3657)
!3670 = !DILocation(line: 1384, column: 206, scope: !3514)
!3671 = !DILocation(line: 1384, column: 206, scope: !1082)
!3672 = !DILocation(line: 1384, column: 206, scope: !3673)
!3673 = !DILexicalBlockFile(scope: !1082, file: !368, discriminator: 5)
!3674 = !DILocation(line: 1385, column: 35, scope: !1054)
!3675 = !DILocation(line: 1385, column: 23, scope: !1054)
!3676 = !DILocation(line: 1385, column: 5, scope: !1054)
!3677 = !DILocation(line: 1385, column: 13, scope: !1054)
!3678 = !DILocation(line: 1385, column: 21, scope: !1054)
!3679 = !DILocation(line: 1386, column: 13, scope: !1054)
!3680 = !DILocation(line: 1391, column: 9, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !1054, file: !368, line: 1391, column: 9)
!3682 = !DILocation(line: 1391, column: 19, scope: !3681)
!3683 = !{!2962, !2523, i64 104}
!3684 = !DILocation(line: 1391, column: 30, scope: !3681)
!3685 = !DILocation(line: 1391, column: 58, scope: !3681)
!3686 = !{!3105, !2523, i64 16}
!3687 = !DILocation(line: 1391, column: 27, scope: !3681)
!3688 = !DILocation(line: 1391, column: 9, scope: !1054)
!3689 = !DILocation(line: 1392, column: 30, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3691, file: !368, line: 1392, column: 13)
!3691 = distinct !DILexicalBlock(scope: !3681, file: !368, line: 1391, column: 67)
!3692 = !DILocation(line: 1392, column: 19, scope: !3690)
!3693 = !DILocation(line: 1392, column: 16, scope: !3690)
!3694 = !DILocation(line: 1392, column: 13, scope: !3691)
!3695 = !DILocation(line: 1393, column: 13, scope: !3690)
!3696 = !DILocation(line: 1395, column: 5, scope: !3691)
!3697 = !DILocation(line: 1395, column: 16, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3681, file: !368, line: 1395, column: 16)
!3699 = !DILocation(line: 1395, column: 26, scope: !3698)
!3700 = !DILocation(line: 1395, column: 37, scope: !3698)
!3701 = !DILocation(line: 1395, column: 65, scope: !3698)
!3702 = !DILocation(line: 1395, column: 34, scope: !3698)
!3703 = !DILocation(line: 1395, column: 16, scope: !3681)
!3704 = !DILocation(line: 1396, column: 30, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3706, file: !368, line: 1396, column: 13)
!3706 = distinct !DILexicalBlock(scope: !3698, file: !368, line: 1395, column: 74)
!3707 = !DILocation(line: 1396, column: 19, scope: !3705)
!3708 = !DILocation(line: 1396, column: 16, scope: !3705)
!3709 = !DILocation(line: 1396, column: 13, scope: !3706)
!3710 = !DILocation(line: 1397, column: 13, scope: !3705)
!3711 = !DILocation(line: 1399, column: 5, scope: !3706)
!3712 = !DILocation(line: 1401, column: 24, scope: !1054)
!3713 = !DILocation(line: 1401, column: 12, scope: !1054)
!3714 = !DILocation(line: 1401, column: 5, scope: !1054)
!3715 = !DILocation(line: 1403, column: 5, scope: !1054)
!3716 = !DILocation(line: 1403, column: 10, scope: !3717)
!3717 = !DILexicalBlockFile(scope: !1084, file: !368, discriminator: 1)
!3718 = !DILocation(line: 1403, column: 20, scope: !1084)
!3719 = !DILocation(line: 1403, column: 62, scope: !1084)
!3720 = !DILocation(line: 1403, column: 51, scope: !1084)
!3721 = !DILocation(line: 1403, column: 76, scope: !1087)
!3722 = !DILocation(line: 1403, column: 92, scope: !1087)
!3723 = !DILocation(line: 1403, column: 76, scope: !1084)
!3724 = !DILocation(line: 1403, column: 107, scope: !3725)
!3725 = !DILexicalBlockFile(scope: !1087, file: !368, discriminator: 2)
!3726 = !DILocation(line: 1403, column: 112, scope: !3727)
!3727 = !DILexicalBlockFile(scope: !1086, file: !368, discriminator: 4)
!3728 = !DILocation(line: 1403, column: 122, scope: !1086)
!3729 = !DILocation(line: 1403, column: 152, scope: !1086)
!3730 = !DILocation(line: 1403, column: 178, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !1086, file: !368, line: 1403, column: 175)
!3732 = !DILocation(line: 1403, column: 195, scope: !3731)
!3733 = !DILocation(line: 1403, column: 175, scope: !3731)
!3734 = !DILocation(line: 1403, column: 205, scope: !3731)
!3735 = !DILocation(line: 1403, column: 175, scope: !1086)
!3736 = !DILocation(line: 1403, column: 175, scope: !3737)
!3737 = !DILexicalBlockFile(scope: !1086, file: !368, discriminator: 5)
!3738 = !DILocation(line: 1403, column: 236, scope: !3739)
!3739 = !DILexicalBlockFile(scope: !3731, file: !368, discriminator: 6)
!3740 = !DILocation(line: 1403, column: 254, scope: !3731)
!3741 = !DILocation(line: 1403, column: 264, scope: !3731)
!3742 = !DILocation(line: 1403, column: 289, scope: !3731)
!3743 = !DILocation(line: 1403, column: 220, scope: !3731)
!3744 = !DILocation(line: 1403, column: 308, scope: !3745)
!3745 = !DILexicalBlockFile(scope: !1087, file: !368, discriminator: 7)
!3746 = !DILocation(line: 1403, column: 308, scope: !1086)
!3747 = !DILocation(line: 1403, column: 308, scope: !3748)
!3748 = !DILexicalBlockFile(scope: !1086, file: !368, discriminator: 8)
!3749 = !DILocation(line: 1403, column: 308, scope: !3750)
!3750 = !DILexicalBlockFile(scope: !1086, file: !368, discriminator: 9)
!3751 = !DILocation(line: 1403, column: 321, scope: !3752)
!3752 = !DILexicalBlockFile(scope: !3753, file: !368, discriminator: 10)
!3753 = !DILexicalBlockFile(scope: !1054, file: !368, discriminator: 3)
!3754 = !DILocation(line: 1403, column: 321, scope: !1084)
!3755 = !DILocation(line: 1403, column: 321, scope: !3756)
!3756 = !DILexicalBlockFile(scope: !1084, file: !368, discriminator: 11)
!3757 = !DILocation(line: 1404, column: 5, scope: !1054)
!3758 = !DILocation(line: 1404, column: 10, scope: !3759)
!3759 = !DILexicalBlockFile(scope: !1089, file: !368, discriminator: 1)
!3760 = !DILocation(line: 1404, column: 20, scope: !1089)
!3761 = !DILocation(line: 1404, column: 51, scope: !1089)
!3762 = !DILocation(line: 1404, column: 67, scope: !1092)
!3763 = !DILocation(line: 1404, column: 83, scope: !1092)
!3764 = !DILocation(line: 1404, column: 67, scope: !1089)
!3765 = !DILocation(line: 1404, column: 98, scope: !3766)
!3766 = !DILexicalBlockFile(scope: !1092, file: !368, discriminator: 2)
!3767 = !DILocation(line: 1404, column: 103, scope: !3768)
!3768 = !DILexicalBlockFile(scope: !1091, file: !368, discriminator: 4)
!3769 = !DILocation(line: 1404, column: 113, scope: !1091)
!3770 = !DILocation(line: 1404, column: 143, scope: !1091)
!3771 = !DILocation(line: 1404, column: 169, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !1091, file: !368, line: 1404, column: 166)
!3773 = !DILocation(line: 1404, column: 186, scope: !3772)
!3774 = !DILocation(line: 1404, column: 166, scope: !3772)
!3775 = !DILocation(line: 1404, column: 196, scope: !3772)
!3776 = !DILocation(line: 1404, column: 166, scope: !1091)
!3777 = !DILocation(line: 1404, column: 166, scope: !3778)
!3778 = !DILexicalBlockFile(scope: !1091, file: !368, discriminator: 5)
!3779 = !DILocation(line: 1404, column: 227, scope: !3780)
!3780 = !DILexicalBlockFile(scope: !3772, file: !368, discriminator: 6)
!3781 = !DILocation(line: 1404, column: 245, scope: !3772)
!3782 = !DILocation(line: 1404, column: 255, scope: !3772)
!3783 = !DILocation(line: 1404, column: 280, scope: !3772)
!3784 = !DILocation(line: 1404, column: 211, scope: !3772)
!3785 = !DILocation(line: 1404, column: 299, scope: !3786)
!3786 = !DILexicalBlockFile(scope: !1092, file: !368, discriminator: 7)
!3787 = !DILocation(line: 1404, column: 299, scope: !1091)
!3788 = !DILocation(line: 1404, column: 299, scope: !3789)
!3789 = !DILexicalBlockFile(scope: !1091, file: !368, discriminator: 8)
!3790 = !DILocation(line: 1404, column: 299, scope: !3791)
!3791 = !DILexicalBlockFile(scope: !1091, file: !368, discriminator: 9)
!3792 = !DILocation(line: 1404, column: 312, scope: !3752)
!3793 = !DILocation(line: 1404, column: 312, scope: !1089)
!3794 = !DILocation(line: 1404, column: 312, scope: !3795)
!3795 = !DILexicalBlockFile(scope: !1089, file: !368, discriminator: 11)
!3796 = !DILocation(line: 1405, column: 5, scope: !1054)
!3797 = !DILocation(line: 1405, column: 10, scope: !3798)
!3798 = !DILexicalBlockFile(scope: !1094, file: !368, discriminator: 1)
!3799 = !DILocation(line: 1405, column: 20, scope: !1094)
!3800 = !DILocation(line: 1405, column: 50, scope: !1094)
!3801 = !DILocation(line: 1405, column: 37, scope: !1094)
!3802 = !DILocation(line: 1405, column: 67, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !1094, file: !368, line: 1405, column: 64)
!3804 = !DILocation(line: 1405, column: 84, scope: !3803)
!3805 = !DILocation(line: 1405, column: 64, scope: !3803)
!3806 = !DILocation(line: 1405, column: 94, scope: !3803)
!3807 = !DILocation(line: 1405, column: 64, scope: !1094)
!3808 = !DILocation(line: 1405, column: 64, scope: !3809)
!3809 = !DILexicalBlockFile(scope: !1094, file: !368, discriminator: 2)
!3810 = !DILocation(line: 1405, column: 125, scope: !3811)
!3811 = !DILexicalBlockFile(scope: !3803, file: !368, discriminator: 3)
!3812 = !DILocation(line: 1405, column: 143, scope: !3803)
!3813 = !DILocation(line: 1405, column: 153, scope: !3803)
!3814 = !DILocation(line: 1405, column: 178, scope: !3803)
!3815 = !DILocation(line: 1405, column: 109, scope: !3803)
!3816 = !DILocation(line: 1405, column: 197, scope: !3514)
!3817 = !DILocation(line: 1405, column: 197, scope: !1094)
!3818 = !DILocation(line: 1405, column: 197, scope: !3819)
!3819 = !DILexicalBlockFile(scope: !1094, file: !368, discriminator: 5)
!3820 = !DILocation(line: 1406, column: 5, scope: !1054)
!3821 = !DILocation(line: 1407, column: 1, scope: !1054)
!3822 = !DILocation(line: 1850, column: 33, scope: !1233)
!3823 = !DILocation(line: 1850, column: 49, scope: !1233)
!3824 = !DILocation(line: 1850, column: 65, scope: !1233)
!3825 = !DILocation(line: 1852, column: 5, scope: !1233)
!3826 = !DILocation(line: 1852, column: 19, scope: !1233)
!3827 = !DILocation(line: 1853, column: 5, scope: !1233)
!3828 = !DILocation(line: 1853, column: 20, scope: !1233)
!3829 = !DILocation(line: 1854, column: 5, scope: !1233)
!3830 = !DILocation(line: 1854, column: 15, scope: !1233)
!3831 = !DILocation(line: 1855, column: 5, scope: !1233)
!3832 = !DILocation(line: 1855, column: 17, scope: !1233)
!3833 = !DILocation(line: 1856, column: 5, scope: !1233)
!3834 = !DILocation(line: 1856, column: 16, scope: !1233)
!3835 = !DILocation(line: 1857, column: 5, scope: !1233)
!3836 = !DILocation(line: 1857, column: 18, scope: !1233)
!3837 = !DILocation(line: 1858, column: 5, scope: !1233)
!3838 = !DILocation(line: 1858, column: 23, scope: !1233)
!3839 = !DILocation(line: 1862, column: 42, scope: !1233)
!3840 = !DILocation(line: 1862, column: 49, scope: !1233)
!3841 = !DILocation(line: 1862, column: 55, scope: !1233)
!3842 = !DILocation(line: 1862, column: 61, scope: !1233)
!3843 = !DILocation(line: 1862, column: 30, scope: !1233)
!3844 = !DILocation(line: 1862, column: 14, scope: !1233)
!3845 = !DILocation(line: 1862, column: 12, scope: !1233)
!3846 = !DILocation(line: 1863, column: 9, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !1233, file: !368, line: 1863, column: 9)
!3848 = !DILocation(line: 1863, column: 16, scope: !3847)
!3849 = !DILocation(line: 1863, column: 9, scope: !1233)
!3850 = !DILocation(line: 1864, column: 9, scope: !3847)
!3851 = !DILocation(line: 1866, column: 48, scope: !1233)
!3852 = !DILocation(line: 1866, column: 36, scope: !1233)
!3853 = !DILocation(line: 1866, column: 13, scope: !1233)
!3854 = !DILocation(line: 1866, column: 11, scope: !1233)
!3855 = !DILocation(line: 1867, column: 10, scope: !1250)
!3856 = !DILocation(line: 1867, column: 9, scope: !1233)
!3857 = !DILocation(line: 1868, column: 25, scope: !1249)
!3858 = !DILocation(line: 1868, column: 9, scope: !1249)
!3859 = !DILocation(line: 1871, column: 9, scope: !1249)
!3860 = !DILocation(line: 1871, column: 14, scope: !3861)
!3861 = !DILexicalBlockFile(scope: !1248, file: !368, discriminator: 1)
!3862 = !DILocation(line: 1871, column: 24, scope: !1248)
!3863 = !DILocation(line: 1871, column: 55, scope: !1248)
!3864 = !DILocation(line: 1871, column: 67, scope: !1253)
!3865 = !DILocation(line: 1871, column: 83, scope: !1253)
!3866 = !DILocation(line: 1871, column: 67, scope: !1248)
!3867 = !DILocation(line: 1871, column: 98, scope: !3868)
!3868 = !DILexicalBlockFile(scope: !1253, file: !368, discriminator: 2)
!3869 = !DILocation(line: 1871, column: 103, scope: !3870)
!3870 = !DILexicalBlockFile(scope: !1252, file: !368, discriminator: 4)
!3871 = !DILocation(line: 1871, column: 113, scope: !1252)
!3872 = !DILocation(line: 1871, column: 143, scope: !1252)
!3873 = !DILocation(line: 1871, column: 169, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !1252, file: !368, line: 1871, column: 166)
!3875 = !DILocation(line: 1871, column: 186, scope: !3874)
!3876 = !DILocation(line: 1871, column: 166, scope: !3874)
!3877 = !DILocation(line: 1871, column: 196, scope: !3874)
!3878 = !DILocation(line: 1871, column: 166, scope: !1252)
!3879 = !DILocation(line: 1871, column: 166, scope: !3880)
!3880 = !DILexicalBlockFile(scope: !1252, file: !368, discriminator: 5)
!3881 = !DILocation(line: 1871, column: 227, scope: !3882)
!3882 = !DILexicalBlockFile(scope: !3874, file: !368, discriminator: 6)
!3883 = !DILocation(line: 1871, column: 245, scope: !3874)
!3884 = !DILocation(line: 1871, column: 255, scope: !3874)
!3885 = !DILocation(line: 1871, column: 280, scope: !3874)
!3886 = !DILocation(line: 1871, column: 211, scope: !3874)
!3887 = !DILocation(line: 1871, column: 299, scope: !3888)
!3888 = !DILexicalBlockFile(scope: !1253, file: !368, discriminator: 7)
!3889 = !DILocation(line: 1871, column: 299, scope: !1252)
!3890 = !DILocation(line: 1871, column: 299, scope: !3891)
!3891 = !DILexicalBlockFile(scope: !1252, file: !368, discriminator: 8)
!3892 = !DILocation(line: 1871, column: 299, scope: !3893)
!3893 = !DILexicalBlockFile(scope: !1252, file: !368, discriminator: 9)
!3894 = !DILocation(line: 1871, column: 312, scope: !3895)
!3895 = !DILexicalBlockFile(scope: !3896, file: !368, discriminator: 10)
!3896 = !DILexicalBlockFile(scope: !1249, file: !368, discriminator: 3)
!3897 = !DILocation(line: 1871, column: 312, scope: !1248)
!3898 = !DILocation(line: 1871, column: 312, scope: !3899)
!3899 = !DILexicalBlockFile(scope: !1248, file: !368, discriminator: 11)
!3900 = !DILocation(line: 1872, column: 9, scope: !1249)
!3901 = !DILocation(line: 1872, column: 14, scope: !3902)
!3902 = !DILexicalBlockFile(scope: !1255, file: !368, discriminator: 1)
!3903 = !DILocation(line: 1872, column: 24, scope: !1255)
!3904 = !DILocation(line: 1872, column: 55, scope: !1255)
!3905 = !DILocation(line: 1872, column: 42, scope: !1255)
!3906 = !DILocation(line: 1872, column: 68, scope: !1258)
!3907 = !DILocation(line: 1872, column: 84, scope: !1258)
!3908 = !DILocation(line: 1872, column: 68, scope: !1255)
!3909 = !DILocation(line: 1872, column: 99, scope: !3910)
!3910 = !DILexicalBlockFile(scope: !1258, file: !368, discriminator: 2)
!3911 = !DILocation(line: 1872, column: 104, scope: !3912)
!3912 = !DILexicalBlockFile(scope: !1257, file: !368, discriminator: 4)
!3913 = !DILocation(line: 1872, column: 114, scope: !1257)
!3914 = !DILocation(line: 1872, column: 144, scope: !1257)
!3915 = !DILocation(line: 1872, column: 170, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !1257, file: !368, line: 1872, column: 167)
!3917 = !DILocation(line: 1872, column: 187, scope: !3916)
!3918 = !DILocation(line: 1872, column: 167, scope: !3916)
!3919 = !DILocation(line: 1872, column: 197, scope: !3916)
!3920 = !DILocation(line: 1872, column: 167, scope: !1257)
!3921 = !DILocation(line: 1872, column: 167, scope: !3922)
!3922 = !DILexicalBlockFile(scope: !1257, file: !368, discriminator: 5)
!3923 = !DILocation(line: 1872, column: 228, scope: !3924)
!3924 = !DILexicalBlockFile(scope: !3916, file: !368, discriminator: 6)
!3925 = !DILocation(line: 1872, column: 246, scope: !3916)
!3926 = !DILocation(line: 1872, column: 256, scope: !3916)
!3927 = !DILocation(line: 1872, column: 281, scope: !3916)
!3928 = !DILocation(line: 1872, column: 212, scope: !3916)
!3929 = !DILocation(line: 1872, column: 300, scope: !3930)
!3930 = !DILexicalBlockFile(scope: !1258, file: !368, discriminator: 7)
!3931 = !DILocation(line: 1872, column: 300, scope: !1257)
!3932 = !DILocation(line: 1872, column: 300, scope: !3933)
!3933 = !DILexicalBlockFile(scope: !1257, file: !368, discriminator: 8)
!3934 = !DILocation(line: 1872, column: 300, scope: !3935)
!3935 = !DILexicalBlockFile(scope: !1257, file: !368, discriminator: 9)
!3936 = !DILocation(line: 1872, column: 313, scope: !3895)
!3937 = !DILocation(line: 1872, column: 313, scope: !1255)
!3938 = !DILocation(line: 1872, column: 313, scope: !3939)
!3939 = !DILexicalBlockFile(scope: !1255, file: !368, discriminator: 11)
!3940 = !DILocation(line: 1873, column: 9, scope: !1249)
!3941 = !DILocation(line: 1875, column: 26, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !1233, file: !368, line: 1875, column: 9)
!3943 = !DILocation(line: 1875, column: 35, scope: !3942)
!3944 = !DILocation(line: 1875, column: 46, scope: !3942)
!3945 = !DILocation(line: 1875, column: 55, scope: !3942)
!3946 = !DILocation(line: 1875, column: 72, scope: !3942)
!3947 = !DILocation(line: 1875, column: 9, scope: !1233)
!3948 = !DILocation(line: 1876, column: 45, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3942, file: !368, line: 1875, column: 79)
!3950 = !DILocation(line: 1876, column: 21, scope: !3949)
!3951 = !DILocation(line: 1876, column: 19, scope: !3949)
!3952 = !DILocation(line: 1877, column: 14, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3949, file: !368, line: 1877, column: 13)
!3954 = !DILocation(line: 1877, column: 13, scope: !3949)
!3955 = !DILocation(line: 1878, column: 13, scope: !3953)
!3956 = !DILocation(line: 1879, column: 5, scope: !3949)
!3957 = !DILocation(line: 1880, column: 25, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3942, file: !368, line: 1879, column: 12)
!3959 = !DILocation(line: 1880, column: 9, scope: !3958)
!3960 = !DILocation(line: 1882, column: 9, scope: !3958)
!3961 = !DILocation(line: 1884, column: 9, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !1233, file: !368, line: 1884, column: 9)
!3963 = !DILocation(line: 1884, column: 19, scope: !3962)
!3964 = !DILocation(line: 1884, column: 9, scope: !1233)
!3965 = !DILocation(line: 1885, column: 25, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3962, file: !368, line: 1884, column: 25)
!3967 = !DILocation(line: 1885, column: 9, scope: !3966)
!3968 = !DILocation(line: 1888, column: 9, scope: !3966)
!3969 = !DILocation(line: 1890, column: 105, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !1233, file: !368, line: 1890, column: 9)
!3971 = !DILocation(line: 1890, column: 110, scope: !3972)
!3972 = !DILexicalBlockFile(scope: !3970, file: !368, discriminator: 1)
!3973 = !DILocation(line: 1890, column: 109, scope: !3970)
!3974 = !DILocation(line: 1890, column: 108, scope: !3970)
!3975 = !DILocation(line: 1890, column: 121, scope: !3970)
!3976 = !DILocation(line: 1890, column: 9, scope: !1233)
!3977 = !DILocation(line: 1890, column: 153, scope: !3978)
!3978 = !DILexicalBlockFile(scope: !3970, file: !368, discriminator: 3)
!3979 = !DILocation(line: 1890, column: 173, scope: !3970)
!3980 = !DILocation(line: 1890, column: 172, scope: !3970)
!3981 = !DILocation(line: 1890, column: 140, scope: !3970)
!3982 = !DILocation(line: 1890, column: 131, scope: !3970)
!3983 = !DILocation(line: 1890, column: 26, scope: !3970)
!3984 = !DILocation(line: 1890, column: 204, scope: !3985)
!3985 = !DILexicalBlockFile(scope: !3986, file: !368, discriminator: 4)
!3986 = !DILexicalBlockFile(scope: !3970, file: !368, discriminator: 2)
!3987 = !DILocation(line: 1890, column: 224, scope: !3970)
!3988 = !DILocation(line: 1890, column: 223, scope: !3970)
!3989 = !DILocation(line: 1890, column: 186, scope: !3970)
!3990 = !DILocation(line: 1891, column: 22, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3970, file: !368, line: 1890, column: 238)
!3992 = !DILocation(line: 1894, column: 22, scope: !3991)
!3993 = !DILocation(line: 1891, column: 9, scope: !3991)
!3994 = !DILocation(line: 1895, column: 9, scope: !3991)
!3995 = !DILocation(line: 1897, column: 33, scope: !1233)
!3996 = !DILocation(line: 1897, column: 11, scope: !1233)
!3997 = !DILocation(line: 1897, column: 9, scope: !1233)
!3998 = !DILocation(line: 1898, column: 9, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !1233, file: !368, line: 1898, column: 9)
!4000 = !DILocation(line: 1898, column: 13, scope: !3999)
!4001 = !DILocation(line: 1898, column: 9, scope: !1233)
!4002 = !DILocation(line: 1899, column: 22, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3999, file: !368, line: 1898, column: 28)
!4004 = !DILocation(line: 1900, column: 51, scope: !4003)
!4005 = !DILocation(line: 1899, column: 9, scope: !4003)
!4006 = !DILocation(line: 1901, column: 9, scope: !4003)
!4007 = !DILocation(line: 1904, column: 32, scope: !1233)
!4008 = !DILocation(line: 1904, column: 15, scope: !1233)
!4009 = !DILocation(line: 1904, column: 13, scope: !1233)
!4010 = !DILocation(line: 1906, column: 10, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !1233, file: !368, line: 1906, column: 9)
!4012 = !DILocation(line: 1906, column: 9, scope: !1233)
!4013 = !DILocation(line: 1907, column: 9, scope: !4011)
!4014 = !DILocation(line: 1909, column: 5, scope: !1233)
!4015 = !DILocation(line: 1909, column: 14, scope: !1233)
!4016 = !DILocation(line: 1909, column: 34, scope: !1233)
!4017 = !DILocation(line: 1909, column: 39, scope: !1233)
!4018 = !DILocation(line: 1909, column: 33, scope: !1233)
!4019 = !DILocation(line: 1910, column: 22, scope: !1233)
!4020 = !DILocation(line: 1910, column: 27, scope: !1233)
!4021 = !DILocation(line: 1910, column: 38, scope: !1233)
!4022 = !DILocation(line: 1910, column: 5, scope: !1233)
!4023 = !DILocation(line: 1910, column: 14, scope: !1233)
!4024 = !DILocation(line: 1910, column: 20, scope: !1233)
!4025 = !DILocation(line: 1911, column: 5, scope: !1233)
!4026 = !DILocation(line: 1911, column: 14, scope: !1233)
!4027 = !DILocation(line: 1911, column: 21, scope: !1233)
!4028 = !DILocation(line: 1912, column: 21, scope: !1233)
!4029 = !DILocation(line: 1912, column: 26, scope: !1233)
!4030 = !DILocation(line: 1912, column: 37, scope: !1233)
!4031 = !{!2964, !2553, i64 0}
!4032 = !DILocation(line: 1912, column: 5, scope: !1233)
!4033 = !DILocation(line: 1912, column: 14, scope: !1233)
!4034 = !DILocation(line: 1912, column: 19, scope: !1233)
!4035 = !DILocation(line: 1913, column: 24, scope: !1233)
!4036 = !DILocation(line: 1913, column: 29, scope: !1233)
!4037 = !{!3105, !2523, i64 8}
!4038 = !DILocation(line: 1913, column: 5, scope: !1233)
!4039 = !DILocation(line: 1913, column: 14, scope: !1233)
!4040 = !DILocation(line: 1913, column: 22, scope: !1233)
!4041 = !{!2962, !2523, i64 96}
!4042 = !DILocation(line: 1914, column: 24, scope: !1233)
!4043 = !DILocation(line: 1914, column: 29, scope: !1233)
!4044 = !DILocation(line: 1914, column: 5, scope: !1233)
!4045 = !DILocation(line: 1914, column: 14, scope: !1233)
!4046 = !DILocation(line: 1914, column: 22, scope: !1233)
!4047 = !DILocation(line: 1918, column: 56, scope: !1233)
!4048 = !DILocation(line: 1918, column: 23, scope: !1233)
!4049 = !DILocation(line: 1918, column: 5, scope: !1233)
!4050 = !DILocation(line: 1918, column: 14, scope: !1233)
!4051 = !DILocation(line: 1918, column: 21, scope: !1233)
!4052 = !DILocation(line: 1920, column: 9, scope: !1262)
!4053 = !DILocation(line: 1920, column: 18, scope: !1262)
!4054 = !DILocation(line: 1920, column: 25, scope: !1262)
!4055 = !DILocation(line: 1920, column: 9, scope: !1233)
!4056 = !DILocation(line: 1921, column: 9, scope: !1261)
!4057 = !DILocation(line: 1921, column: 14, scope: !4058)
!4058 = !DILexicalBlockFile(scope: !1260, file: !368, discriminator: 1)
!4059 = !DILocation(line: 1921, column: 24, scope: !1260)
!4060 = !DILocation(line: 1921, column: 54, scope: !1260)
!4061 = !DILocation(line: 1921, column: 41, scope: !1260)
!4062 = !DILocation(line: 1921, column: 71, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !1260, file: !368, line: 1921, column: 68)
!4064 = !DILocation(line: 1921, column: 88, scope: !4063)
!4065 = !DILocation(line: 1921, column: 68, scope: !4063)
!4066 = !DILocation(line: 1921, column: 98, scope: !4063)
!4067 = !DILocation(line: 1921, column: 68, scope: !1260)
!4068 = !DILocation(line: 1921, column: 68, scope: !4069)
!4069 = !DILexicalBlockFile(scope: !1260, file: !368, discriminator: 2)
!4070 = !DILocation(line: 1921, column: 129, scope: !4071)
!4071 = !DILexicalBlockFile(scope: !4063, file: !368, discriminator: 3)
!4072 = !DILocation(line: 1921, column: 147, scope: !4063)
!4073 = !DILocation(line: 1921, column: 157, scope: !4063)
!4074 = !DILocation(line: 1921, column: 182, scope: !4063)
!4075 = !DILocation(line: 1921, column: 113, scope: !4063)
!4076 = !DILocation(line: 1921, column: 201, scope: !4077)
!4077 = !DILexicalBlockFile(scope: !1261, file: !368, discriminator: 4)
!4078 = !DILocation(line: 1921, column: 201, scope: !1260)
!4079 = !DILocation(line: 1921, column: 201, scope: !4080)
!4080 = !DILexicalBlockFile(scope: !1260, file: !368, discriminator: 5)
!4081 = !DILocation(line: 1922, column: 9, scope: !1261)
!4082 = !DILocation(line: 1922, column: 14, scope: !4083)
!4083 = !DILexicalBlockFile(scope: !1264, file: !368, discriminator: 1)
!4084 = !DILocation(line: 1922, column: 24, scope: !1264)
!4085 = !DILocation(line: 1922, column: 54, scope: !1264)
!4086 = !DILocation(line: 1922, column: 70, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !1264, file: !368, line: 1922, column: 67)
!4088 = !DILocation(line: 1922, column: 87, scope: !4087)
!4089 = !DILocation(line: 1922, column: 67, scope: !4087)
!4090 = !DILocation(line: 1922, column: 97, scope: !4087)
!4091 = !DILocation(line: 1922, column: 67, scope: !1264)
!4092 = !DILocation(line: 1922, column: 67, scope: !4093)
!4093 = !DILexicalBlockFile(scope: !1264, file: !368, discriminator: 2)
!4094 = !DILocation(line: 1922, column: 128, scope: !4095)
!4095 = !DILexicalBlockFile(scope: !4087, file: !368, discriminator: 3)
!4096 = !DILocation(line: 1922, column: 146, scope: !4087)
!4097 = !DILocation(line: 1922, column: 156, scope: !4087)
!4098 = !DILocation(line: 1922, column: 181, scope: !4087)
!4099 = !DILocation(line: 1922, column: 112, scope: !4087)
!4100 = !DILocation(line: 1922, column: 200, scope: !4077)
!4101 = !DILocation(line: 1922, column: 200, scope: !1264)
!4102 = !DILocation(line: 1922, column: 200, scope: !4103)
!4103 = !DILexicalBlockFile(scope: !1264, file: !368, discriminator: 5)
!4104 = !DILocation(line: 1923, column: 9, scope: !1261)
!4105 = !DILocation(line: 1923, column: 14, scope: !4106)
!4106 = !DILexicalBlockFile(scope: !1266, file: !368, discriminator: 1)
!4107 = !DILocation(line: 1923, column: 24, scope: !1266)
!4108 = !DILocation(line: 1923, column: 66, scope: !1266)
!4109 = !DILocation(line: 1923, column: 54, scope: !1266)
!4110 = !DILocation(line: 1923, column: 84, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !1266, file: !368, line: 1923, column: 81)
!4112 = !DILocation(line: 1923, column: 101, scope: !4111)
!4113 = !DILocation(line: 1923, column: 81, scope: !4111)
!4114 = !DILocation(line: 1923, column: 111, scope: !4111)
!4115 = !DILocation(line: 1923, column: 81, scope: !1266)
!4116 = !DILocation(line: 1923, column: 81, scope: !4117)
!4117 = !DILexicalBlockFile(scope: !1266, file: !368, discriminator: 2)
!4118 = !DILocation(line: 1923, column: 142, scope: !4119)
!4119 = !DILexicalBlockFile(scope: !4111, file: !368, discriminator: 3)
!4120 = !DILocation(line: 1923, column: 160, scope: !4111)
!4121 = !DILocation(line: 1923, column: 170, scope: !4111)
!4122 = !DILocation(line: 1923, column: 195, scope: !4111)
!4123 = !DILocation(line: 1923, column: 126, scope: !4111)
!4124 = !DILocation(line: 1923, column: 214, scope: !4077)
!4125 = !DILocation(line: 1923, column: 214, scope: !1266)
!4126 = !DILocation(line: 1923, column: 214, scope: !4127)
!4127 = !DILexicalBlockFile(scope: !1266, file: !368, discriminator: 5)
!4128 = !DILocation(line: 1924, column: 9, scope: !1261)
!4129 = !DILocation(line: 1927, column: 5, scope: !1233)
!4130 = !DILocation(line: 1927, column: 14, scope: !1233)
!4131 = !DILocation(line: 1927, column: 24, scope: !1233)
!4132 = !DILocation(line: 1936, column: 22, scope: !1233)
!4133 = !DILocation(line: 1936, column: 5, scope: !1233)
!4134 = !DILocation(line: 1936, column: 14, scope: !1233)
!4135 = !DILocation(line: 1936, column: 20, scope: !1233)
!4136 = !DILocation(line: 1939, column: 41, scope: !1270)
!4137 = !DILocation(line: 1939, column: 29, scope: !1270)
!4138 = !DILocation(line: 1939, column: 50, scope: !1270)
!4139 = !DILocation(line: 1939, column: 58, scope: !1270)
!4140 = !DILocation(line: 1939, column: 15, scope: !1270)
!4141 = !DILocation(line: 1939, column: 12, scope: !1270)
!4142 = !DILocation(line: 1939, column: 9, scope: !1233)
!4143 = !DILocation(line: 1940, column: 9, scope: !1269)
!4144 = !DILocation(line: 1940, column: 14, scope: !4145)
!4145 = !DILexicalBlockFile(scope: !1268, file: !368, discriminator: 1)
!4146 = !DILocation(line: 1940, column: 24, scope: !1268)
!4147 = !DILocation(line: 1940, column: 54, scope: !1268)
!4148 = !DILocation(line: 1940, column: 41, scope: !1268)
!4149 = !DILocation(line: 1940, column: 71, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !1268, file: !368, line: 1940, column: 68)
!4151 = !DILocation(line: 1940, column: 88, scope: !4150)
!4152 = !DILocation(line: 1940, column: 68, scope: !4150)
!4153 = !DILocation(line: 1940, column: 98, scope: !4150)
!4154 = !DILocation(line: 1940, column: 68, scope: !1268)
!4155 = !DILocation(line: 1940, column: 68, scope: !4156)
!4156 = !DILexicalBlockFile(scope: !1268, file: !368, discriminator: 2)
!4157 = !DILocation(line: 1940, column: 129, scope: !4158)
!4158 = !DILexicalBlockFile(scope: !4150, file: !368, discriminator: 3)
!4159 = !DILocation(line: 1940, column: 147, scope: !4150)
!4160 = !DILocation(line: 1940, column: 157, scope: !4150)
!4161 = !DILocation(line: 1940, column: 182, scope: !4150)
!4162 = !DILocation(line: 1940, column: 113, scope: !4150)
!4163 = !DILocation(line: 1940, column: 201, scope: !4164)
!4164 = !DILexicalBlockFile(scope: !1269, file: !368, discriminator: 4)
!4165 = !DILocation(line: 1940, column: 201, scope: !1268)
!4166 = !DILocation(line: 1940, column: 201, scope: !4167)
!4167 = !DILexicalBlockFile(scope: !1268, file: !368, discriminator: 5)
!4168 = !DILocation(line: 1941, column: 9, scope: !1269)
!4169 = !DILocation(line: 1941, column: 14, scope: !4170)
!4170 = !DILexicalBlockFile(scope: !1272, file: !368, discriminator: 1)
!4171 = !DILocation(line: 1941, column: 24, scope: !1272)
!4172 = !DILocation(line: 1941, column: 66, scope: !1272)
!4173 = !DILocation(line: 1941, column: 54, scope: !1272)
!4174 = !DILocation(line: 1941, column: 84, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !1272, file: !368, line: 1941, column: 81)
!4176 = !DILocation(line: 1941, column: 101, scope: !4175)
!4177 = !DILocation(line: 1941, column: 81, scope: !4175)
!4178 = !DILocation(line: 1941, column: 111, scope: !4175)
!4179 = !DILocation(line: 1941, column: 81, scope: !1272)
!4180 = !DILocation(line: 1941, column: 81, scope: !4181)
!4181 = !DILexicalBlockFile(scope: !1272, file: !368, discriminator: 2)
!4182 = !DILocation(line: 1941, column: 142, scope: !4183)
!4183 = !DILexicalBlockFile(scope: !4175, file: !368, discriminator: 3)
!4184 = !DILocation(line: 1941, column: 160, scope: !4175)
!4185 = !DILocation(line: 1941, column: 170, scope: !4175)
!4186 = !DILocation(line: 1941, column: 195, scope: !4175)
!4187 = !DILocation(line: 1941, column: 126, scope: !4175)
!4188 = !DILocation(line: 1941, column: 214, scope: !4164)
!4189 = !DILocation(line: 1941, column: 214, scope: !1272)
!4190 = !DILocation(line: 1941, column: 214, scope: !4191)
!4191 = !DILexicalBlockFile(scope: !1272, file: !368, discriminator: 5)
!4192 = !DILocation(line: 1942, column: 9, scope: !1269)
!4193 = !DILocation(line: 1944, column: 5, scope: !1233)
!4194 = !DILocation(line: 1944, column: 10, scope: !4195)
!4195 = !DILexicalBlockFile(scope: !1274, file: !368, discriminator: 1)
!4196 = !DILocation(line: 1944, column: 20, scope: !1274)
!4197 = !DILocation(line: 1944, column: 50, scope: !1274)
!4198 = !DILocation(line: 1944, column: 58, scope: !1274)
!4199 = !DILocation(line: 1944, column: 76, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !1274, file: !368, line: 1944, column: 73)
!4201 = !DILocation(line: 1944, column: 93, scope: !4200)
!4202 = !DILocation(line: 1944, column: 73, scope: !4200)
!4203 = !DILocation(line: 1944, column: 103, scope: !4200)
!4204 = !DILocation(line: 1944, column: 73, scope: !1274)
!4205 = !DILocation(line: 1944, column: 73, scope: !4206)
!4206 = !DILexicalBlockFile(scope: !1274, file: !368, discriminator: 2)
!4207 = !DILocation(line: 1944, column: 134, scope: !4208)
!4208 = !DILexicalBlockFile(scope: !4200, file: !368, discriminator: 3)
!4209 = !DILocation(line: 1944, column: 152, scope: !4200)
!4210 = !DILocation(line: 1944, column: 162, scope: !4200)
!4211 = !DILocation(line: 1944, column: 187, scope: !4200)
!4212 = !DILocation(line: 1944, column: 118, scope: !4200)
!4213 = !DILocation(line: 1944, column: 206, scope: !4214)
!4214 = !DILexicalBlockFile(scope: !1233, file: !368, discriminator: 4)
!4215 = !DILocation(line: 1944, column: 206, scope: !1274)
!4216 = !DILocation(line: 1944, column: 206, scope: !4217)
!4217 = !DILexicalBlockFile(scope: !1274, file: !368, discriminator: 5)
!4218 = !DILocation(line: 1945, column: 35, scope: !1233)
!4219 = !DILocation(line: 1945, column: 23, scope: !1233)
!4220 = !DILocation(line: 1945, column: 5, scope: !1233)
!4221 = !DILocation(line: 1945, column: 13, scope: !1233)
!4222 = !DILocation(line: 1945, column: 21, scope: !1233)
!4223 = !DILocation(line: 1950, column: 9, scope: !1279)
!4224 = !DILocation(line: 1950, column: 17, scope: !1279)
!4225 = !{!2591, !2523, i64 256}
!4226 = !DILocation(line: 1950, column: 25, scope: !1279)
!4227 = !DILocation(line: 1950, column: 9, scope: !1233)
!4228 = !DILocation(line: 1951, column: 18, scope: !1278)
!4229 = !DILocation(line: 1951, column: 17, scope: !1278)
!4230 = !DILocation(line: 1953, column: 16, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !1278, file: !368, line: 1951, column: 29)
!4232 = !DILocation(line: 1954, column: 13, scope: !4231)
!4233 = !DILocation(line: 1954, column: 22, scope: !4231)
!4234 = !DILocation(line: 1954, column: 28, scope: !4231)
!4235 = !DILocation(line: 1955, column: 13, scope: !4231)
!4236 = !DILocation(line: 1957, column: 16, scope: !4231)
!4237 = !DILocation(line: 1958, column: 13, scope: !4231)
!4238 = !DILocation(line: 1958, column: 22, scope: !4231)
!4239 = !DILocation(line: 1958, column: 28, scope: !4231)
!4240 = !DILocation(line: 1959, column: 13, scope: !4231)
!4241 = !DILocation(line: 1961, column: 16, scope: !4231)
!4242 = !DILocation(line: 1962, column: 13, scope: !4231)
!4243 = !DILocation(line: 1962, column: 22, scope: !4231)
!4244 = !DILocation(line: 1962, column: 28, scope: !4231)
!4245 = !DILocation(line: 1963, column: 13, scope: !4231)
!4246 = !DILocation(line: 1967, column: 16, scope: !4231)
!4247 = !DILocation(line: 1968, column: 13, scope: !4231)
!4248 = !DILocation(line: 1968, column: 22, scope: !4231)
!4249 = !DILocation(line: 1968, column: 28, scope: !4231)
!4250 = !DILocation(line: 1969, column: 13, scope: !4231)
!4251 = !DILocation(line: 1971, column: 16, scope: !4231)
!4252 = !DILocation(line: 1972, column: 13, scope: !4231)
!4253 = !DILocation(line: 1975, column: 13, scope: !1277)
!4254 = !DILocation(line: 1975, column: 13, scope: !1278)
!4255 = !DILocation(line: 1976, column: 13, scope: !1276)
!4256 = !DILocation(line: 1976, column: 23, scope: !1276)
!4257 = !DILocation(line: 1977, column: 13, scope: !1276)
!4258 = !DILocation(line: 1977, column: 17, scope: !1276)
!4259 = !DILocation(line: 1978, column: 43, scope: !1276)
!4260 = !DILocation(line: 1978, column: 51, scope: !1276)
!4261 = !DILocation(line: 1978, column: 20, scope: !1276)
!4262 = !DILocation(line: 1978, column: 18, scope: !1276)
!4263 = !DILocation(line: 1979, column: 18, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !1276, file: !368, line: 1979, column: 17)
!4265 = !DILocation(line: 1979, column: 17, scope: !1276)
!4266 = !DILocation(line: 1980, column: 17, scope: !4264)
!4267 = !DILocation(line: 1981, column: 38, scope: !1276)
!4268 = !DILocation(line: 1981, column: 46, scope: !1276)
!4269 = !DILocation(line: 1982, column: 38, scope: !1276)
!4270 = !DILocation(line: 1982, column: 42, scope: !1276)
!4271 = !{!4272, !2523, i64 0}
!4272 = !{!"PyMethodDef", !2523, i64 0, !2523, i64 8, !2593, i64 16, !2523, i64 24}
!4273 = !DILocation(line: 1983, column: 38, scope: !1276)
!4274 = !DILocation(line: 1981, column: 17, scope: !1276)
!4275 = !DILocation(line: 1981, column: 15, scope: !1276)
!4276 = !DILocation(line: 1984, column: 13, scope: !1276)
!4277 = !DILocation(line: 1984, column: 18, scope: !4278)
!4278 = !DILexicalBlockFile(scope: !1282, file: !368, discriminator: 1)
!4279 = !DILocation(line: 1984, column: 28, scope: !1282)
!4280 = !DILocation(line: 1984, column: 58, scope: !1282)
!4281 = !DILocation(line: 1984, column: 73, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !1282, file: !368, line: 1984, column: 70)
!4283 = !DILocation(line: 1984, column: 90, scope: !4282)
!4284 = !DILocation(line: 1984, column: 70, scope: !4282)
!4285 = !DILocation(line: 1984, column: 100, scope: !4282)
!4286 = !DILocation(line: 1984, column: 70, scope: !1282)
!4287 = !DILocation(line: 1984, column: 70, scope: !4288)
!4288 = !DILexicalBlockFile(scope: !1282, file: !368, discriminator: 2)
!4289 = !DILocation(line: 1984, column: 131, scope: !4290)
!4290 = !DILexicalBlockFile(scope: !4282, file: !368, discriminator: 3)
!4291 = !DILocation(line: 1984, column: 149, scope: !4282)
!4292 = !DILocation(line: 1984, column: 159, scope: !4282)
!4293 = !DILocation(line: 1984, column: 184, scope: !4282)
!4294 = !DILocation(line: 1984, column: 115, scope: !4282)
!4295 = !DILocation(line: 1984, column: 203, scope: !4296)
!4296 = !DILexicalBlockFile(scope: !1276, file: !368, discriminator: 4)
!4297 = !DILocation(line: 1984, column: 203, scope: !1282)
!4298 = !DILocation(line: 1984, column: 203, scope: !4299)
!4299 = !DILexicalBlockFile(scope: !1282, file: !368, discriminator: 5)
!4300 = !DILocation(line: 1985, column: 17, scope: !1286)
!4301 = !DILocation(line: 1985, column: 19, scope: !1286)
!4302 = !DILocation(line: 1985, column: 17, scope: !1276)
!4303 = !DILocation(line: 1986, column: 17, scope: !1285)
!4304 = !DILocation(line: 1986, column: 22, scope: !4305)
!4305 = !DILexicalBlockFile(scope: !1284, file: !368, discriminator: 1)
!4306 = !DILocation(line: 1986, column: 32, scope: !1284)
!4307 = !DILocation(line: 1986, column: 62, scope: !1284)
!4308 = !DILocation(line: 1986, column: 49, scope: !1284)
!4309 = !DILocation(line: 1986, column: 79, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !1284, file: !368, line: 1986, column: 76)
!4311 = !DILocation(line: 1986, column: 96, scope: !4310)
!4312 = !DILocation(line: 1986, column: 76, scope: !4310)
!4313 = !DILocation(line: 1986, column: 106, scope: !4310)
!4314 = !DILocation(line: 1986, column: 76, scope: !1284)
!4315 = !DILocation(line: 1986, column: 76, scope: !4316)
!4316 = !DILexicalBlockFile(scope: !1284, file: !368, discriminator: 2)
!4317 = !DILocation(line: 1986, column: 137, scope: !4318)
!4318 = !DILexicalBlockFile(scope: !4310, file: !368, discriminator: 3)
!4319 = !DILocation(line: 1986, column: 155, scope: !4310)
!4320 = !DILocation(line: 1986, column: 165, scope: !4310)
!4321 = !DILocation(line: 1986, column: 190, scope: !4310)
!4322 = !DILocation(line: 1986, column: 121, scope: !4310)
!4323 = !DILocation(line: 1986, column: 209, scope: !4324)
!4324 = !DILexicalBlockFile(scope: !1285, file: !368, discriminator: 4)
!4325 = !DILocation(line: 1986, column: 209, scope: !1284)
!4326 = !DILocation(line: 1986, column: 209, scope: !4327)
!4327 = !DILexicalBlockFile(scope: !1284, file: !368, discriminator: 5)
!4328 = !DILocation(line: 1987, column: 17, scope: !1285)
!4329 = !DILocation(line: 1989, column: 9, scope: !1277)
!4330 = !DILocation(line: 1989, column: 9, scope: !4331)
!4331 = !DILexicalBlockFile(scope: !1277, file: !368, discriminator: 1)
!4332 = !DILocation(line: 1989, column: 9, scope: !1276)
!4333 = !DILocation(line: 1990, column: 5, scope: !1278)
!4334 = !DILocation(line: 1992, column: 9, scope: !1289)
!4335 = !DILocation(line: 1992, column: 14, scope: !1289)
!4336 = !DILocation(line: 1992, column: 37, scope: !1289)
!4337 = !DILocation(line: 1992, column: 40, scope: !4338)
!4338 = !DILexicalBlockFile(scope: !1289, file: !368, discriminator: 1)
!4339 = !DILocation(line: 1992, column: 45, scope: !1289)
!4340 = !{!3105, !2523, i64 32}
!4341 = !DILocation(line: 1992, column: 40, scope: !1289)
!4342 = !DILocation(line: 1992, column: 61, scope: !1289)
!4343 = !DILocation(line: 1992, column: 64, scope: !4344)
!4344 = !DILexicalBlockFile(scope: !1289, file: !368, discriminator: 2)
!4345 = !DILocation(line: 1992, column: 69, scope: !1289)
!4346 = !{!3105, !2523, i64 40}
!4347 = !DILocation(line: 1992, column: 64, scope: !1289)
!4348 = !DILocation(line: 1992, column: 9, scope: !1233)
!4349 = !DILocation(line: 1993, column: 9, scope: !1288)
!4350 = !DILocation(line: 1993, column: 19, scope: !1288)
!4351 = !DILocation(line: 1993, column: 47, scope: !1288)
!4352 = !DILocation(line: 1993, column: 53, scope: !1288)
!4353 = !DILocation(line: 1993, column: 59, scope: !1288)
!4354 = !DILocation(line: 1994, column: 47, scope: !1288)
!4355 = !DILocation(line: 1994, column: 54, scope: !1288)
!4356 = !DILocation(line: 1993, column: 29, scope: !1288)
!4357 = !DILocation(line: 1995, column: 9, scope: !1288)
!4358 = !DILocation(line: 1995, column: 24, scope: !1288)
!4359 = !DILocation(line: 1996, column: 13, scope: !1294)
!4360 = !DILocation(line: 1996, column: 21, scope: !1294)
!4361 = !DILocation(line: 1996, column: 13, scope: !1288)
!4362 = !DILocation(line: 1997, column: 13, scope: !1293)
!4363 = !DILocation(line: 1997, column: 18, scope: !4364)
!4364 = !DILexicalBlockFile(scope: !1292, file: !368, discriminator: 1)
!4365 = !DILocation(line: 1997, column: 28, scope: !1292)
!4366 = !DILocation(line: 1997, column: 58, scope: !1292)
!4367 = !DILocation(line: 1997, column: 45, scope: !1292)
!4368 = !DILocation(line: 1997, column: 75, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !1292, file: !368, line: 1997, column: 72)
!4370 = !DILocation(line: 1997, column: 92, scope: !4369)
!4371 = !DILocation(line: 1997, column: 72, scope: !4369)
!4372 = !DILocation(line: 1997, column: 102, scope: !4369)
!4373 = !DILocation(line: 1997, column: 72, scope: !1292)
!4374 = !DILocation(line: 1997, column: 72, scope: !4375)
!4375 = !DILexicalBlockFile(scope: !1292, file: !368, discriminator: 2)
!4376 = !DILocation(line: 1997, column: 133, scope: !4377)
!4377 = !DILexicalBlockFile(scope: !4369, file: !368, discriminator: 3)
!4378 = !DILocation(line: 1997, column: 151, scope: !4369)
!4379 = !DILocation(line: 1997, column: 161, scope: !4369)
!4380 = !DILocation(line: 1997, column: 186, scope: !4369)
!4381 = !DILocation(line: 1997, column: 117, scope: !4369)
!4382 = !DILocation(line: 1997, column: 205, scope: !4383)
!4383 = !DILexicalBlockFile(scope: !1293, file: !368, discriminator: 4)
!4384 = !DILocation(line: 1997, column: 205, scope: !1292)
!4385 = !DILocation(line: 1997, column: 205, scope: !4386)
!4386 = !DILexicalBlockFile(scope: !1292, file: !368, discriminator: 5)
!4387 = !DILocation(line: 1998, column: 13, scope: !1293)
!4388 = !DILocation(line: 2000, column: 34, scope: !1288)
!4389 = !DILocation(line: 2000, column: 19, scope: !1288)
!4390 = !DILocation(line: 2000, column: 17, scope: !1288)
!4391 = !DILocation(line: 2009, column: 44, scope: !1288)
!4392 = !DILocation(line: 2009, column: 32, scope: !1288)
!4393 = !DILocation(line: 2009, column: 68, scope: !1288)
!4394 = !DILocation(line: 2009, column: 9, scope: !1288)
!4395 = !DILocation(line: 2010, column: 44, scope: !1288)
!4396 = !DILocation(line: 2010, column: 32, scope: !1288)
!4397 = !DILocation(line: 2010, column: 80, scope: !1288)
!4398 = !DILocation(line: 2010, column: 68, scope: !1288)
!4399 = !DILocation(line: 2010, column: 9, scope: !1288)
!4400 = !DILocation(line: 2011, column: 32, scope: !1288)
!4401 = !DILocation(line: 2011, column: 69, scope: !1288)
!4402 = !DILocation(line: 2011, column: 57, scope: !1288)
!4403 = !DILocation(line: 2011, column: 9, scope: !1288)
!4404 = !DILocation(line: 2012, column: 32, scope: !1288)
!4405 = !DILocation(line: 2012, column: 57, scope: !1288)
!4406 = !DILocation(line: 2012, column: 9, scope: !1288)
!4407 = !DILocation(line: 2014, column: 60, scope: !1288)
!4408 = !DILocation(line: 2014, column: 69, scope: !1288)
!4409 = !DILocation(line: 2014, column: 75, scope: !1288)
!4410 = !DILocation(line: 2014, column: 27, scope: !1288)
!4411 = !DILocation(line: 2014, column: 9, scope: !1288)
!4412 = !DILocation(line: 2014, column: 18, scope: !1288)
!4413 = !DILocation(line: 2014, column: 25, scope: !1288)
!4414 = !DILocation(line: 2016, column: 9, scope: !1288)
!4415 = !DILocation(line: 2016, column: 14, scope: !4416)
!4416 = !DILexicalBlockFile(scope: !1296, file: !368, discriminator: 1)
!4417 = !DILocation(line: 2016, column: 24, scope: !1296)
!4418 = !DILocation(line: 2016, column: 54, scope: !1296)
!4419 = !DILocation(line: 2016, column: 72, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !1296, file: !368, line: 2016, column: 69)
!4421 = !DILocation(line: 2016, column: 89, scope: !4420)
!4422 = !DILocation(line: 2016, column: 69, scope: !4420)
!4423 = !DILocation(line: 2016, column: 99, scope: !4420)
!4424 = !DILocation(line: 2016, column: 69, scope: !1296)
!4425 = !DILocation(line: 2016, column: 69, scope: !4426)
!4426 = !DILexicalBlockFile(scope: !1296, file: !368, discriminator: 2)
!4427 = !DILocation(line: 2016, column: 130, scope: !4428)
!4428 = !DILexicalBlockFile(scope: !4420, file: !368, discriminator: 3)
!4429 = !DILocation(line: 2016, column: 148, scope: !4420)
!4430 = !DILocation(line: 2016, column: 158, scope: !4420)
!4431 = !DILocation(line: 2016, column: 183, scope: !4420)
!4432 = !DILocation(line: 2016, column: 114, scope: !4420)
!4433 = !DILocation(line: 2016, column: 202, scope: !4434)
!4434 = !DILexicalBlockFile(scope: !1288, file: !368, discriminator: 4)
!4435 = !DILocation(line: 2016, column: 202, scope: !1296)
!4436 = !DILocation(line: 2016, column: 202, scope: !4437)
!4437 = !DILexicalBlockFile(scope: !1296, file: !368, discriminator: 5)
!4438 = !DILocation(line: 2017, column: 13, scope: !1300)
!4439 = !DILocation(line: 2017, column: 13, scope: !1288)
!4440 = !DILocation(line: 2018, column: 13, scope: !1299)
!4441 = !DILocation(line: 2018, column: 18, scope: !4442)
!4442 = !DILexicalBlockFile(scope: !1298, file: !368, discriminator: 1)
!4443 = !DILocation(line: 2018, column: 28, scope: !1298)
!4444 = !DILocation(line: 2018, column: 58, scope: !1298)
!4445 = !DILocation(line: 2018, column: 45, scope: !1298)
!4446 = !DILocation(line: 2018, column: 75, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !1298, file: !368, line: 2018, column: 72)
!4448 = !DILocation(line: 2018, column: 92, scope: !4447)
!4449 = !DILocation(line: 2018, column: 72, scope: !4447)
!4450 = !DILocation(line: 2018, column: 102, scope: !4447)
!4451 = !DILocation(line: 2018, column: 72, scope: !1298)
!4452 = !DILocation(line: 2018, column: 72, scope: !4453)
!4453 = !DILexicalBlockFile(scope: !1298, file: !368, discriminator: 2)
!4454 = !DILocation(line: 2018, column: 133, scope: !4455)
!4455 = !DILexicalBlockFile(scope: !4447, file: !368, discriminator: 3)
!4456 = !DILocation(line: 2018, column: 151, scope: !4447)
!4457 = !DILocation(line: 2018, column: 161, scope: !4447)
!4458 = !DILocation(line: 2018, column: 186, scope: !4447)
!4459 = !DILocation(line: 2018, column: 117, scope: !4447)
!4460 = !DILocation(line: 2018, column: 205, scope: !4461)
!4461 = !DILexicalBlockFile(scope: !1299, file: !368, discriminator: 4)
!4462 = !DILocation(line: 2018, column: 205, scope: !1298)
!4463 = !DILocation(line: 2018, column: 205, scope: !4464)
!4464 = !DILexicalBlockFile(scope: !1298, file: !368, discriminator: 5)
!4465 = !DILocation(line: 2019, column: 13, scope: !1299)
!4466 = !DILocation(line: 2021, column: 5, scope: !1289)
!4467 = !DILocation(line: 2021, column: 5, scope: !4338)
!4468 = !DILocation(line: 2021, column: 5, scope: !1288)
!4469 = !DILocation(line: 2023, column: 24, scope: !1233)
!4470 = !DILocation(line: 2023, column: 12, scope: !1233)
!4471 = !DILocation(line: 2023, column: 5, scope: !1233)
!4472 = !DILocation(line: 2024, column: 1, scope: !1233)
!4473 = !DILocation(line: 2270, column: 34, scope: !1442)
!4474 = !DILocation(line: 2270, column: 50, scope: !1442)
!4475 = !DILocation(line: 2270, column: 66, scope: !1442)
!4476 = !DILocation(line: 2272, column: 5, scope: !1442)
!4477 = !DILocation(line: 2272, column: 19, scope: !1442)
!4478 = !DILocation(line: 2273, column: 5, scope: !1442)
!4479 = !DILocation(line: 2273, column: 20, scope: !1442)
!4480 = !DILocation(line: 2275, column: 32, scope: !1442)
!4481 = !DILocation(line: 2275, column: 15, scope: !1442)
!4482 = !DILocation(line: 2275, column: 13, scope: !1442)
!4483 = !DILocation(line: 2277, column: 10, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !1442, file: !368, line: 2277, column: 9)
!4485 = !DILocation(line: 2277, column: 9, scope: !1442)
!4486 = !DILocation(line: 2278, column: 9, scope: !4484)
!4487 = !DILocation(line: 2280, column: 5, scope: !1442)
!4488 = !DILocation(line: 2280, column: 14, scope: !1442)
!4489 = !DILocation(line: 2280, column: 24, scope: !1442)
!4490 = !DILocation(line: 2287, column: 23, scope: !1442)
!4491 = !DILocation(line: 2287, column: 5, scope: !1442)
!4492 = !DILocation(line: 2287, column: 14, scope: !1442)
!4493 = !DILocation(line: 2287, column: 21, scope: !1442)
!4494 = !DILocation(line: 2288, column: 9, scope: !1452)
!4495 = !DILocation(line: 2288, column: 18, scope: !1452)
!4496 = !DILocation(line: 2288, column: 25, scope: !1452)
!4497 = !DILocation(line: 2288, column: 9, scope: !1442)
!4498 = !DILocation(line: 2289, column: 9, scope: !1451)
!4499 = !DILocation(line: 2289, column: 14, scope: !4500)
!4500 = !DILexicalBlockFile(scope: !1450, file: !368, discriminator: 1)
!4501 = !DILocation(line: 2289, column: 24, scope: !1450)
!4502 = !DILocation(line: 2289, column: 66, scope: !1450)
!4503 = !DILocation(line: 2289, column: 54, scope: !1450)
!4504 = !DILocation(line: 2289, column: 84, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !1450, file: !368, line: 2289, column: 81)
!4506 = !DILocation(line: 2289, column: 101, scope: !4505)
!4507 = !DILocation(line: 2289, column: 81, scope: !4505)
!4508 = !DILocation(line: 2289, column: 111, scope: !4505)
!4509 = !DILocation(line: 2289, column: 81, scope: !1450)
!4510 = !DILocation(line: 2289, column: 81, scope: !4511)
!4511 = !DILexicalBlockFile(scope: !1450, file: !368, discriminator: 2)
!4512 = !DILocation(line: 2289, column: 142, scope: !4513)
!4513 = !DILexicalBlockFile(scope: !4505, file: !368, discriminator: 3)
!4514 = !DILocation(line: 2289, column: 160, scope: !4505)
!4515 = !DILocation(line: 2289, column: 170, scope: !4505)
!4516 = !DILocation(line: 2289, column: 195, scope: !4505)
!4517 = !DILocation(line: 2289, column: 126, scope: !4505)
!4518 = !DILocation(line: 2289, column: 214, scope: !4519)
!4519 = !DILexicalBlockFile(scope: !1451, file: !368, discriminator: 4)
!4520 = !DILocation(line: 2289, column: 214, scope: !1450)
!4521 = !DILocation(line: 2289, column: 214, scope: !4522)
!4522 = !DILexicalBlockFile(scope: !1450, file: !368, discriminator: 5)
!4523 = !DILocation(line: 2290, column: 9, scope: !1451)
!4524 = !DILocation(line: 2292, column: 5, scope: !1442)
!4525 = !DILocation(line: 2292, column: 14, scope: !1442)
!4526 = !DILocation(line: 2292, column: 20, scope: !1442)
!4527 = !DILocation(line: 2296, column: 42, scope: !1442)
!4528 = !DILocation(line: 2296, column: 49, scope: !1442)
!4529 = !DILocation(line: 2296, column: 55, scope: !1442)
!4530 = !DILocation(line: 2296, column: 61, scope: !1442)
!4531 = !DILocation(line: 2296, column: 30, scope: !1442)
!4532 = !DILocation(line: 2296, column: 14, scope: !1442)
!4533 = !DILocation(line: 2296, column: 12, scope: !1442)
!4534 = !DILocation(line: 2297, column: 9, scope: !1456)
!4535 = !DILocation(line: 2297, column: 16, scope: !1456)
!4536 = !DILocation(line: 2297, column: 9, scope: !1442)
!4537 = !DILocation(line: 2298, column: 9, scope: !1455)
!4538 = !DILocation(line: 2298, column: 14, scope: !4539)
!4539 = !DILexicalBlockFile(scope: !1454, file: !368, discriminator: 1)
!4540 = !DILocation(line: 2298, column: 24, scope: !1454)
!4541 = !DILocation(line: 2298, column: 66, scope: !1454)
!4542 = !DILocation(line: 2298, column: 54, scope: !1454)
!4543 = !DILocation(line: 2298, column: 84, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !1454, file: !368, line: 2298, column: 81)
!4545 = !DILocation(line: 2298, column: 101, scope: !4544)
!4546 = !DILocation(line: 2298, column: 81, scope: !4544)
!4547 = !DILocation(line: 2298, column: 111, scope: !4544)
!4548 = !DILocation(line: 2298, column: 81, scope: !1454)
!4549 = !DILocation(line: 2298, column: 81, scope: !4550)
!4550 = !DILexicalBlockFile(scope: !1454, file: !368, discriminator: 2)
!4551 = !DILocation(line: 2298, column: 142, scope: !4552)
!4552 = !DILexicalBlockFile(scope: !4544, file: !368, discriminator: 3)
!4553 = !DILocation(line: 2298, column: 160, scope: !4544)
!4554 = !DILocation(line: 2298, column: 170, scope: !4544)
!4555 = !DILocation(line: 2298, column: 195, scope: !4544)
!4556 = !DILocation(line: 2298, column: 126, scope: !4544)
!4557 = !DILocation(line: 2298, column: 214, scope: !4558)
!4558 = !DILexicalBlockFile(scope: !1455, file: !368, discriminator: 4)
!4559 = !DILocation(line: 2298, column: 214, scope: !1454)
!4560 = !DILocation(line: 2298, column: 214, scope: !4561)
!4561 = !DILexicalBlockFile(scope: !1454, file: !368, discriminator: 5)
!4562 = !DILocation(line: 2299, column: 9, scope: !1455)
!4563 = !DILocation(line: 2303, column: 41, scope: !1460)
!4564 = !DILocation(line: 2303, column: 29, scope: !1460)
!4565 = !DILocation(line: 2303, column: 50, scope: !1460)
!4566 = !DILocation(line: 2303, column: 58, scope: !1460)
!4567 = !DILocation(line: 2303, column: 15, scope: !1460)
!4568 = !DILocation(line: 2303, column: 12, scope: !1460)
!4569 = !DILocation(line: 2303, column: 9, scope: !1442)
!4570 = !DILocation(line: 2304, column: 9, scope: !1459)
!4571 = !DILocation(line: 2304, column: 14, scope: !4572)
!4572 = !DILexicalBlockFile(scope: !1458, file: !368, discriminator: 1)
!4573 = !DILocation(line: 2304, column: 24, scope: !1458)
!4574 = !DILocation(line: 2304, column: 54, scope: !1458)
!4575 = !DILocation(line: 2304, column: 41, scope: !1458)
!4576 = !DILocation(line: 2304, column: 71, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !1458, file: !368, line: 2304, column: 68)
!4578 = !DILocation(line: 2304, column: 88, scope: !4577)
!4579 = !DILocation(line: 2304, column: 68, scope: !4577)
!4580 = !DILocation(line: 2304, column: 98, scope: !4577)
!4581 = !DILocation(line: 2304, column: 68, scope: !1458)
!4582 = !DILocation(line: 2304, column: 68, scope: !4583)
!4583 = !DILexicalBlockFile(scope: !1458, file: !368, discriminator: 2)
!4584 = !DILocation(line: 2304, column: 129, scope: !4585)
!4585 = !DILexicalBlockFile(scope: !4577, file: !368, discriminator: 3)
!4586 = !DILocation(line: 2304, column: 147, scope: !4577)
!4587 = !DILocation(line: 2304, column: 157, scope: !4577)
!4588 = !DILocation(line: 2304, column: 182, scope: !4577)
!4589 = !DILocation(line: 2304, column: 113, scope: !4577)
!4590 = !DILocation(line: 2304, column: 201, scope: !4591)
!4591 = !DILexicalBlockFile(scope: !1459, file: !368, discriminator: 4)
!4592 = !DILocation(line: 2304, column: 201, scope: !1458)
!4593 = !DILocation(line: 2304, column: 201, scope: !4594)
!4594 = !DILexicalBlockFile(scope: !1458, file: !368, discriminator: 5)
!4595 = !DILocation(line: 2305, column: 9, scope: !1459)
!4596 = !DILocation(line: 2305, column: 14, scope: !4597)
!4597 = !DILexicalBlockFile(scope: !1462, file: !368, discriminator: 1)
!4598 = !DILocation(line: 2305, column: 24, scope: !1462)
!4599 = !DILocation(line: 2305, column: 66, scope: !1462)
!4600 = !DILocation(line: 2305, column: 54, scope: !1462)
!4601 = !DILocation(line: 2305, column: 84, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !1462, file: !368, line: 2305, column: 81)
!4603 = !DILocation(line: 2305, column: 101, scope: !4602)
!4604 = !DILocation(line: 2305, column: 81, scope: !4602)
!4605 = !DILocation(line: 2305, column: 111, scope: !4602)
!4606 = !DILocation(line: 2305, column: 81, scope: !1462)
!4607 = !DILocation(line: 2305, column: 81, scope: !4608)
!4608 = !DILexicalBlockFile(scope: !1462, file: !368, discriminator: 2)
!4609 = !DILocation(line: 2305, column: 142, scope: !4610)
!4610 = !DILexicalBlockFile(scope: !4602, file: !368, discriminator: 3)
!4611 = !DILocation(line: 2305, column: 160, scope: !4602)
!4612 = !DILocation(line: 2305, column: 170, scope: !4602)
!4613 = !DILocation(line: 2305, column: 195, scope: !4602)
!4614 = !DILocation(line: 2305, column: 126, scope: !4602)
!4615 = !DILocation(line: 2305, column: 214, scope: !4591)
!4616 = !DILocation(line: 2305, column: 214, scope: !1462)
!4617 = !DILocation(line: 2305, column: 214, scope: !4618)
!4618 = !DILexicalBlockFile(scope: !1462, file: !368, discriminator: 5)
!4619 = !DILocation(line: 2306, column: 9, scope: !1459)
!4620 = !DILocation(line: 2308, column: 5, scope: !1442)
!4621 = !DILocation(line: 2308, column: 10, scope: !4622)
!4622 = !DILexicalBlockFile(scope: !1464, file: !368, discriminator: 1)
!4623 = !DILocation(line: 2308, column: 20, scope: !1464)
!4624 = !DILocation(line: 2308, column: 50, scope: !1464)
!4625 = !DILocation(line: 2308, column: 58, scope: !1464)
!4626 = !DILocation(line: 2308, column: 76, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !1464, file: !368, line: 2308, column: 73)
!4628 = !DILocation(line: 2308, column: 93, scope: !4627)
!4629 = !DILocation(line: 2308, column: 73, scope: !4627)
!4630 = !DILocation(line: 2308, column: 103, scope: !4627)
!4631 = !DILocation(line: 2308, column: 73, scope: !1464)
!4632 = !DILocation(line: 2308, column: 73, scope: !4633)
!4633 = !DILexicalBlockFile(scope: !1464, file: !368, discriminator: 2)
!4634 = !DILocation(line: 2308, column: 134, scope: !4635)
!4635 = !DILexicalBlockFile(scope: !4627, file: !368, discriminator: 3)
!4636 = !DILocation(line: 2308, column: 152, scope: !4627)
!4637 = !DILocation(line: 2308, column: 162, scope: !4627)
!4638 = !DILocation(line: 2308, column: 187, scope: !4627)
!4639 = !DILocation(line: 2308, column: 118, scope: !4627)
!4640 = !DILocation(line: 2308, column: 206, scope: !4641)
!4641 = !DILexicalBlockFile(scope: !1442, file: !368, discriminator: 4)
!4642 = !DILocation(line: 2308, column: 206, scope: !1464)
!4643 = !DILocation(line: 2308, column: 206, scope: !4644)
!4644 = !DILexicalBlockFile(scope: !1464, file: !368, discriminator: 5)
!4645 = !DILocation(line: 2309, column: 35, scope: !1442)
!4646 = !DILocation(line: 2309, column: 23, scope: !1442)
!4647 = !DILocation(line: 2309, column: 5, scope: !1442)
!4648 = !DILocation(line: 2309, column: 13, scope: !1442)
!4649 = !DILocation(line: 2309, column: 21, scope: !1442)
!4650 = !DILocation(line: 2311, column: 37, scope: !1468)
!4651 = !DILocation(line: 2311, column: 15, scope: !1468)
!4652 = !DILocation(line: 2311, column: 12, scope: !1468)
!4653 = !DILocation(line: 2311, column: 9, scope: !1442)
!4654 = !DILocation(line: 2312, column: 9, scope: !1467)
!4655 = !DILocation(line: 2312, column: 14, scope: !4656)
!4656 = !DILexicalBlockFile(scope: !1466, file: !368, discriminator: 1)
!4657 = !DILocation(line: 2312, column: 24, scope: !1466)
!4658 = !DILocation(line: 2312, column: 54, scope: !1466)
!4659 = !DILocation(line: 2312, column: 41, scope: !1466)
!4660 = !DILocation(line: 2312, column: 71, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !1466, file: !368, line: 2312, column: 68)
!4662 = !DILocation(line: 2312, column: 88, scope: !4661)
!4663 = !DILocation(line: 2312, column: 68, scope: !4661)
!4664 = !DILocation(line: 2312, column: 98, scope: !4661)
!4665 = !DILocation(line: 2312, column: 68, scope: !1466)
!4666 = !DILocation(line: 2312, column: 68, scope: !4667)
!4667 = !DILexicalBlockFile(scope: !1466, file: !368, discriminator: 2)
!4668 = !DILocation(line: 2312, column: 129, scope: !4669)
!4669 = !DILexicalBlockFile(scope: !4661, file: !368, discriminator: 3)
!4670 = !DILocation(line: 2312, column: 147, scope: !4661)
!4671 = !DILocation(line: 2312, column: 157, scope: !4661)
!4672 = !DILocation(line: 2312, column: 182, scope: !4661)
!4673 = !DILocation(line: 2312, column: 113, scope: !4661)
!4674 = !DILocation(line: 2312, column: 201, scope: !4675)
!4675 = !DILexicalBlockFile(scope: !1467, file: !368, discriminator: 4)
!4676 = !DILocation(line: 2312, column: 201, scope: !1466)
!4677 = !DILocation(line: 2312, column: 201, scope: !4678)
!4678 = !DILexicalBlockFile(scope: !1466, file: !368, discriminator: 5)
!4679 = !DILocation(line: 2313, column: 9, scope: !1467)
!4680 = !DILocation(line: 2316, column: 24, scope: !1442)
!4681 = !DILocation(line: 2316, column: 12, scope: !1442)
!4682 = !DILocation(line: 2316, column: 5, scope: !1442)
!4683 = !DILocation(line: 2317, column: 1, scope: !1442)
!4684 = !DILocation(line: 2493, column: 27, scope: !1505)
!4685 = !DILocation(line: 2495, column: 34, scope: !1505)
!4686 = !DILocation(line: 2495, column: 19, scope: !1505)
!4687 = !DILocation(line: 2495, column: 5, scope: !1505)
!4688 = !DILocation(line: 2496, column: 19, scope: !1505)
!4689 = !DILocation(line: 2496, column: 27, scope: !1505)
!4690 = !DILocation(line: 2496, column: 37, scope: !1505)
!4691 = !{!2591, !2523, i64 320}
!4692 = !DILocation(line: 2496, column: 45, scope: !1505)
!4693 = !DILocation(line: 2496, column: 5, scope: !1505)
!4694 = !DILocation(line: 2497, column: 1, scope: !1505)
!4695 = !DILocation(line: 2550, column: 26, scope: !1508)
!4696 = !DILocation(line: 2552, column: 21, scope: !1508)
!4697 = !DILocation(line: 2552, column: 5, scope: !1508)
!4698 = !DILocation(line: 2553, column: 5, scope: !1508)
!4699 = !DILocation(line: 2473, column: 31, scope: !1519)
!4700 = !DILocation(line: 2473, column: 47, scope: !1519)
!4701 = !DILocation(line: 2473, column: 60, scope: !1519)
!4702 = !DILocation(line: 2475, column: 5, scope: !1519)
!4703 = !DILocation(line: 2475, column: 14, scope: !4704)
!4704 = !DILexicalBlockFile(scope: !1528, file: !368, discriminator: 1)
!4705 = !DILocation(line: 2475, column: 20, scope: !1528)
!4706 = !{!4707, !2523, i64 64}
!4707 = !{!"tagCDataObject", !2552, i64 0, !2523, i64 16, !2593, i64 24, !2523, i64 32, !2553, i64 40, !2553, i64 48, !2553, i64 56, !2523, i64 64, !2524, i64 80}
!4708 = !DILocation(line: 2475, column: 14, scope: !1528)
!4709 = !DILocation(line: 2475, column: 14, scope: !1529)
!4710 = !DILocation(line: 2475, column: 33, scope: !4711)
!4711 = !DILexicalBlockFile(scope: !1527, file: !368, discriminator: 2)
!4712 = !DILocation(line: 2475, column: 37, scope: !1527)
!4713 = !DILocation(line: 2475, column: 44, scope: !1527)
!4714 = !DILocation(line: 2475, column: 63, scope: !1527)
!4715 = !DILocation(line: 2475, column: 69, scope: !1527)
!4716 = !DILocation(line: 2475, column: 81, scope: !1527)
!4717 = !DILocation(line: 2475, column: 91, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !1527, file: !368, line: 2475, column: 91)
!4719 = !DILocation(line: 2475, column: 91, scope: !1527)
!4720 = !DILocation(line: 2475, column: 104, scope: !4721)
!4721 = !DILexicalBlockFile(scope: !4718, file: !368, discriminator: 4)
!4722 = !DILocation(line: 2475, column: 97, scope: !4718)
!4723 = !DILocation(line: 2475, column: 110, scope: !4724)
!4724 = !DILexicalBlockFile(scope: !1528, file: !368, discriminator: 5)
!4725 = !DILocation(line: 2475, column: 110, scope: !4726)
!4726 = !DILexicalBlockFile(scope: !4727, file: !368, discriminator: 7)
!4727 = !DILexicalBlockFile(scope: !1528, file: !368, discriminator: 6)
!4728 = !DILocation(line: 2475, column: 110, scope: !1527)
!4729 = !DILocation(line: 2475, column: 112, scope: !4730)
!4730 = !DILexicalBlockFile(scope: !4731, file: !368, discriminator: 8)
!4731 = !DILexicalBlockFile(scope: !1529, file: !368, discriminator: 3)
!4732 = !DILocation(line: 2476, column: 5, scope: !1519)
!4733 = !DILocation(line: 2476, column: 26, scope: !4734)
!4734 = !DILexicalBlockFile(scope: !1532, file: !368, discriminator: 1)
!4735 = !DILocation(line: 2476, column: 32, scope: !1532)
!4736 = !{!4707, !2523, i64 32}
!4737 = !DILocation(line: 2476, column: 14, scope: !1532)
!4738 = !DILocation(line: 2476, column: 14, scope: !1533)
!4739 = !DILocation(line: 2476, column: 42, scope: !4740)
!4740 = !DILexicalBlockFile(scope: !1531, file: !368, discriminator: 2)
!4741 = !DILocation(line: 2476, column: 46, scope: !1531)
!4742 = !DILocation(line: 2476, column: 53, scope: !1531)
!4743 = !DILocation(line: 2476, column: 84, scope: !1531)
!4744 = !DILocation(line: 2476, column: 90, scope: !1531)
!4745 = !DILocation(line: 2476, column: 72, scope: !1531)
!4746 = !DILocation(line: 2476, column: 99, scope: !1531)
!4747 = !DILocation(line: 2476, column: 109, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !1531, file: !368, line: 2476, column: 109)
!4749 = !DILocation(line: 2476, column: 109, scope: !1531)
!4750 = !DILocation(line: 2476, column: 122, scope: !4751)
!4751 = !DILexicalBlockFile(scope: !4748, file: !368, discriminator: 4)
!4752 = !DILocation(line: 2476, column: 115, scope: !4748)
!4753 = !DILocation(line: 2476, column: 128, scope: !4754)
!4754 = !DILexicalBlockFile(scope: !1532, file: !368, discriminator: 5)
!4755 = !DILocation(line: 2476, column: 128, scope: !4756)
!4756 = !DILexicalBlockFile(scope: !4757, file: !368, discriminator: 7)
!4757 = !DILexicalBlockFile(scope: !1532, file: !368, discriminator: 6)
!4758 = !DILocation(line: 2476, column: 128, scope: !1531)
!4759 = !DILocation(line: 2476, column: 130, scope: !4760)
!4760 = !DILexicalBlockFile(scope: !4761, file: !368, discriminator: 8)
!4761 = !DILexicalBlockFile(scope: !1533, file: !368, discriminator: 3)
!4762 = !DILocation(line: 2477, column: 5, scope: !1519)
!4763 = !DILocation(line: 2478, column: 1, scope: !1519)
!4764 = !DILocation(line: 2481, column: 28, scope: !1534)
!4765 = !DILocation(line: 2483, column: 5, scope: !1534)
!4766 = !DILocation(line: 2483, column: 10, scope: !4767)
!4767 = !DILexicalBlockFile(scope: !1540, file: !368, discriminator: 1)
!4768 = !DILocation(line: 2483, column: 20, scope: !1540)
!4769 = !DILocation(line: 2483, column: 43, scope: !1540)
!4770 = !DILocation(line: 2483, column: 49, scope: !1540)
!4771 = !DILocation(line: 2483, column: 65, scope: !1544)
!4772 = !DILocation(line: 2483, column: 73, scope: !1544)
!4773 = !DILocation(line: 2483, column: 65, scope: !1540)
!4774 = !DILocation(line: 2483, column: 91, scope: !4775)
!4775 = !DILexicalBlockFile(scope: !1543, file: !368, discriminator: 2)
!4776 = !DILocation(line: 2483, column: 97, scope: !1543)
!4777 = !DILocation(line: 2483, column: 108, scope: !1543)
!4778 = !DILocation(line: 2483, column: 122, scope: !1543)
!4779 = !DILocation(line: 2483, column: 127, scope: !4780)
!4780 = !DILexicalBlockFile(scope: !1542, file: !368, discriminator: 4)
!4781 = !DILocation(line: 2483, column: 137, scope: !1542)
!4782 = !DILocation(line: 2483, column: 167, scope: !1542)
!4783 = !DILocation(line: 2483, column: 185, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !1542, file: !368, line: 2483, column: 182)
!4785 = !DILocation(line: 2483, column: 202, scope: !4784)
!4786 = !DILocation(line: 2483, column: 182, scope: !4784)
!4787 = !DILocation(line: 2483, column: 212, scope: !4784)
!4788 = !DILocation(line: 2483, column: 182, scope: !1542)
!4789 = !DILocation(line: 2483, column: 182, scope: !4790)
!4790 = !DILexicalBlockFile(scope: !1542, file: !368, discriminator: 5)
!4791 = !DILocation(line: 2483, column: 243, scope: !4792)
!4792 = !DILexicalBlockFile(scope: !4784, file: !368, discriminator: 6)
!4793 = !DILocation(line: 2483, column: 261, scope: !4784)
!4794 = !DILocation(line: 2483, column: 271, scope: !4784)
!4795 = !DILocation(line: 2483, column: 296, scope: !4784)
!4796 = !DILocation(line: 2483, column: 227, scope: !4784)
!4797 = !DILocation(line: 2483, column: 315, scope: !4798)
!4798 = !DILexicalBlockFile(scope: !1543, file: !368, discriminator: 7)
!4799 = !DILocation(line: 2483, column: 315, scope: !1542)
!4800 = !DILocation(line: 2483, column: 315, scope: !4801)
!4801 = !DILexicalBlockFile(scope: !1542, file: !368, discriminator: 8)
!4802 = !DILocation(line: 2483, column: 328, scope: !4803)
!4803 = !DILexicalBlockFile(scope: !1543, file: !368, discriminator: 9)
!4804 = !DILocation(line: 2483, column: 330, scope: !4805)
!4805 = !DILexicalBlockFile(scope: !4806, file: !368, discriminator: 10)
!4806 = !DILexicalBlockFile(scope: !1534, file: !368, discriminator: 3)
!4807 = !DILocation(line: 2483, column: 330, scope: !1540)
!4808 = !DILocation(line: 2484, column: 10, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !1534, file: !368, line: 2484, column: 9)
!4810 = !DILocation(line: 2484, column: 16, scope: !4809)
!4811 = !{!4707, !2593, i64 24}
!4812 = !DILocation(line: 2484, column: 9, scope: !4809)
!4813 = !DILocation(line: 2485, column: 9, scope: !4809)
!4814 = !DILocation(line: 2485, column: 14, scope: !4815)
!4815 = !DILexicalBlockFile(scope: !4809, file: !368, discriminator: 1)
!4816 = !DILocation(line: 2485, column: 21, scope: !4809)
!4817 = !{!4707, !2523, i64 16}
!4818 = !DILocation(line: 2485, column: 40, scope: !4809)
!4819 = !DILocation(line: 2485, column: 47, scope: !4809)
!4820 = !DILocation(line: 2485, column: 30, scope: !4809)
!4821 = !DILocation(line: 2485, column: 27, scope: !4809)
!4822 = !DILocation(line: 2484, column: 9, scope: !1534)
!4823 = !DILocation(line: 2486, column: 20, scope: !4809)
!4824 = !DILocation(line: 2486, column: 26, scope: !4809)
!4825 = !DILocation(line: 2486, column: 9, scope: !4809)
!4826 = !DILocation(line: 2487, column: 5, scope: !1534)
!4827 = !DILocation(line: 2487, column: 11, scope: !1534)
!4828 = !DILocation(line: 2487, column: 17, scope: !1534)
!4829 = !DILocation(line: 2488, column: 5, scope: !1534)
!4830 = !DILocation(line: 2488, column: 10, scope: !4831)
!4831 = !DILexicalBlockFile(scope: !1546, file: !368, discriminator: 1)
!4832 = !DILocation(line: 2488, column: 20, scope: !1546)
!4833 = !DILocation(line: 2488, column: 43, scope: !1546)
!4834 = !DILocation(line: 2488, column: 49, scope: !1546)
!4835 = !DILocation(line: 2488, column: 30, scope: !1546)
!4836 = !DILocation(line: 2488, column: 62, scope: !1550)
!4837 = !DILocation(line: 2488, column: 70, scope: !1550)
!4838 = !DILocation(line: 2488, column: 62, scope: !1546)
!4839 = !DILocation(line: 2488, column: 88, scope: !4840)
!4840 = !DILexicalBlockFile(scope: !1549, file: !368, discriminator: 2)
!4841 = !DILocation(line: 2488, column: 94, scope: !1549)
!4842 = !DILocation(line: 2488, column: 102, scope: !1549)
!4843 = !DILocation(line: 2488, column: 116, scope: !1549)
!4844 = !DILocation(line: 2488, column: 121, scope: !4845)
!4845 = !DILexicalBlockFile(scope: !1548, file: !368, discriminator: 4)
!4846 = !DILocation(line: 2488, column: 131, scope: !1548)
!4847 = !DILocation(line: 2488, column: 161, scope: !1548)
!4848 = !DILocation(line: 2488, column: 179, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !1548, file: !368, line: 2488, column: 176)
!4850 = !DILocation(line: 2488, column: 196, scope: !4849)
!4851 = !DILocation(line: 2488, column: 176, scope: !4849)
!4852 = !DILocation(line: 2488, column: 206, scope: !4849)
!4853 = !DILocation(line: 2488, column: 176, scope: !1548)
!4854 = !DILocation(line: 2488, column: 176, scope: !4855)
!4855 = !DILexicalBlockFile(scope: !1548, file: !368, discriminator: 5)
!4856 = !DILocation(line: 2488, column: 237, scope: !4857)
!4857 = !DILexicalBlockFile(scope: !4849, file: !368, discriminator: 6)
!4858 = !DILocation(line: 2488, column: 255, scope: !4849)
!4859 = !DILocation(line: 2488, column: 265, scope: !4849)
!4860 = !DILocation(line: 2488, column: 290, scope: !4849)
!4861 = !DILocation(line: 2488, column: 221, scope: !4849)
!4862 = !DILocation(line: 2488, column: 309, scope: !4863)
!4863 = !DILexicalBlockFile(scope: !1549, file: !368, discriminator: 7)
!4864 = !DILocation(line: 2488, column: 309, scope: !1548)
!4865 = !DILocation(line: 2488, column: 309, scope: !4866)
!4866 = !DILexicalBlockFile(scope: !1548, file: !368, discriminator: 8)
!4867 = !DILocation(line: 2488, column: 322, scope: !4868)
!4868 = !DILexicalBlockFile(scope: !1549, file: !368, discriminator: 9)
!4869 = !DILocation(line: 2488, column: 324, scope: !4805)
!4870 = !DILocation(line: 2488, column: 324, scope: !1546)
!4871 = !DILocation(line: 2489, column: 5, scope: !1534)
!4872 = !DILocation(line: 2683, column: 31, scope: !713)
!4873 = !DILocation(line: 2683, column: 47, scope: !713)
!4874 = !DILocation(line: 2683, column: 64, scope: !713)
!4875 = !DILocation(line: 2683, column: 77, scope: !713)
!4876 = !DILocation(line: 2685, column: 5, scope: !713)
!4877 = !DILocation(line: 2685, column: 18, scope: !713)
!4878 = !DILocation(line: 2686, column: 5, scope: !713)
!4879 = !DILocation(line: 2686, column: 20, scope: !713)
!4880 = !DILocation(line: 2689, column: 27, scope: !713)
!4881 = !DILocation(line: 2689, column: 12, scope: !713)
!4882 = !DILocation(line: 2689, column: 10, scope: !713)
!4883 = !DILocation(line: 2690, column: 10, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !713, file: !368, line: 2690, column: 9)
!4885 = !DILocation(line: 2690, column: 9, scope: !713)
!4886 = !DILocation(line: 2691, column: 25, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4884, file: !368, line: 2690, column: 16)
!4888 = !DILocation(line: 2691, column: 9, scope: !4887)
!4889 = !DILocation(line: 2693, column: 9, scope: !4887)
!4890 = !DILocation(line: 2695, column: 5, scope: !713)
!4891 = !DILocation(line: 2695, column: 11, scope: !713)
!4892 = !DILocation(line: 2695, column: 17, scope: !713)
!4893 = !DILocation(line: 2696, column: 44, scope: !713)
!4894 = !DILocation(line: 2696, column: 28, scope: !713)
!4895 = !DILocation(line: 2696, column: 51, scope: !713)
!4896 = !{!2591, !2523, i64 304}
!4897 = !DILocation(line: 2696, column: 76, scope: !713)
!4898 = !DILocation(line: 2696, column: 60, scope: !713)
!4899 = !DILocation(line: 2696, column: 27, scope: !713)
!4900 = !DILocation(line: 2696, column: 12, scope: !713)
!4901 = !DILocation(line: 2696, column: 10, scope: !713)
!4902 = !DILocation(line: 2697, column: 9, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !713, file: !368, line: 2697, column: 9)
!4904 = !DILocation(line: 2697, column: 14, scope: !4903)
!4905 = !DILocation(line: 2697, column: 9, scope: !713)
!4906 = !DILocation(line: 2698, column: 9, scope: !4903)
!4907 = !DILocation(line: 2701, column: 22, scope: !713)
!4908 = !DILocation(line: 2701, column: 28, scope: !713)
!4909 = !DILocation(line: 2701, column: 5, scope: !713)
!4910 = !DILocation(line: 2701, column: 11, scope: !713)
!4911 = !DILocation(line: 2701, column: 20, scope: !713)
!4912 = !{!4707, !2553, i64 48}
!4913 = !DILocation(line: 2702, column: 20, scope: !713)
!4914 = !DILocation(line: 2702, column: 26, scope: !713)
!4915 = !DILocation(line: 2702, column: 5, scope: !713)
!4916 = !DILocation(line: 2702, column: 11, scope: !713)
!4917 = !DILocation(line: 2702, column: 18, scope: !713)
!4918 = !{!4707, !2553, i64 40}
!4919 = !DILocation(line: 2703, column: 9, scope: !728)
!4920 = !DILocation(line: 2703, column: 9, scope: !713)
!4921 = !DILocation(line: 2705, column: 23, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !728, file: !368, line: 2703, column: 15)
!4923 = !DILocation(line: 2705, column: 9, scope: !4922)
!4924 = !DILocation(line: 2705, column: 15, scope: !4922)
!4925 = !DILocation(line: 2705, column: 21, scope: !4922)
!4926 = !DILocation(line: 2706, column: 9, scope: !4922)
!4927 = !DILocation(line: 2706, column: 15, scope: !4922)
!4928 = !DILocation(line: 2706, column: 27, scope: !4922)
!4929 = !DILocation(line: 2707, column: 25, scope: !4922)
!4930 = !DILocation(line: 2707, column: 33, scope: !4922)
!4931 = !DILocation(line: 2707, column: 42, scope: !4922)
!4932 = !DILocation(line: 2708, column: 39, scope: !4922)
!4933 = !DILocation(line: 2708, column: 24, scope: !4922)
!4934 = !DILocation(line: 2708, column: 9, scope: !4922)
!4935 = !DILocation(line: 2708, column: 15, scope: !4922)
!4936 = !DILocation(line: 2708, column: 22, scope: !4922)
!4937 = !DILocation(line: 2709, column: 25, scope: !4922)
!4938 = !DILocation(line: 2709, column: 9, scope: !4922)
!4939 = !DILocation(line: 2709, column: 15, scope: !4922)
!4940 = !DILocation(line: 2709, column: 23, scope: !4922)
!4941 = !{!4707, !2553, i64 56}
!4942 = !DILocation(line: 2710, column: 5, scope: !4922)
!4943 = !DILocation(line: 2711, column: 40, scope: !726)
!4944 = !DILocation(line: 2711, column: 46, scope: !726)
!4945 = !DILocation(line: 2711, column: 19, scope: !726)
!4946 = !DILocation(line: 2711, column: 16, scope: !726)
!4947 = !DILocation(line: 2711, column: 13, scope: !727)
!4948 = !DILocation(line: 2712, column: 13, scope: !725)
!4949 = !DILocation(line: 2712, column: 18, scope: !4950)
!4950 = !DILexicalBlockFile(scope: !724, file: !368, discriminator: 1)
!4951 = !DILocation(line: 2712, column: 28, scope: !724)
!4952 = !DILocation(line: 2712, column: 58, scope: !724)
!4953 = !DILocation(line: 2712, column: 45, scope: !724)
!4954 = !DILocation(line: 2712, column: 73, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !724, file: !368, line: 2712, column: 70)
!4956 = !DILocation(line: 2712, column: 90, scope: !4955)
!4957 = !DILocation(line: 2712, column: 70, scope: !4955)
!4958 = !DILocation(line: 2712, column: 100, scope: !4955)
!4959 = !DILocation(line: 2712, column: 70, scope: !724)
!4960 = !DILocation(line: 2712, column: 70, scope: !4961)
!4961 = !DILexicalBlockFile(scope: !724, file: !368, discriminator: 2)
!4962 = !DILocation(line: 2712, column: 131, scope: !4963)
!4963 = !DILexicalBlockFile(scope: !4955, file: !368, discriminator: 3)
!4964 = !DILocation(line: 2712, column: 149, scope: !4955)
!4965 = !DILocation(line: 2712, column: 159, scope: !4955)
!4966 = !DILocation(line: 2712, column: 184, scope: !4955)
!4967 = !DILocation(line: 2712, column: 115, scope: !4955)
!4968 = !DILocation(line: 2712, column: 203, scope: !4969)
!4969 = !DILexicalBlockFile(scope: !725, file: !368, discriminator: 4)
!4970 = !DILocation(line: 2712, column: 203, scope: !724)
!4971 = !DILocation(line: 2712, column: 203, scope: !4972)
!4972 = !DILexicalBlockFile(scope: !724, file: !368, discriminator: 5)
!4973 = !DILocation(line: 2713, column: 13, scope: !725)
!4974 = !DILocation(line: 2715, column: 16, scope: !727)
!4975 = !DILocation(line: 2715, column: 22, scope: !727)
!4976 = !DILocation(line: 2715, column: 29, scope: !727)
!4977 = !DILocation(line: 2715, column: 34, scope: !727)
!4978 = !DILocation(line: 2715, column: 40, scope: !727)
!4979 = !DILocation(line: 2715, column: 9, scope: !727)
!4980 = !DILocation(line: 2716, column: 25, scope: !727)
!4981 = !DILocation(line: 2716, column: 9, scope: !727)
!4982 = !DILocation(line: 2716, column: 15, scope: !727)
!4983 = !DILocation(line: 2716, column: 23, scope: !727)
!4984 = !DILocation(line: 2718, column: 24, scope: !713)
!4985 = !DILocation(line: 2718, column: 12, scope: !713)
!4986 = !DILocation(line: 2718, column: 5, scope: !713)
!4987 = !DILocation(line: 2719, column: 1, scope: !713)
!4988 = !DILocation(line: 2654, column: 46, scope: !1572)
!4989 = !DILocation(line: 2654, column: 66, scope: !1572)
!4990 = !DILocation(line: 2656, column: 17, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !1572, file: !368, line: 2656, column: 9)
!4992 = !DILocation(line: 2656, column: 23, scope: !4991)
!4993 = !DILocation(line: 2656, column: 28, scope: !4991)
!4994 = !DILocation(line: 2656, column: 9, scope: !1572)
!4995 = !DILocation(line: 2658, column: 31, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4991, file: !368, line: 2656, column: 53)
!4997 = !DILocation(line: 2658, column: 36, scope: !4996)
!4998 = !DILocation(line: 2658, column: 22, scope: !4996)
!4999 = !DILocation(line: 2658, column: 9, scope: !4996)
!5000 = !DILocation(line: 2658, column: 14, scope: !4996)
!5001 = !DILocation(line: 2658, column: 20, scope: !4996)
!5002 = !DILocation(line: 2665, column: 9, scope: !4996)
!5003 = !DILocation(line: 2665, column: 14, scope: !4996)
!5004 = !DILocation(line: 2665, column: 26, scope: !4996)
!5005 = !DILocation(line: 2666, column: 5, scope: !4996)
!5006 = !DILocation(line: 2670, column: 43, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4991, file: !368, line: 2666, column: 12)
!5008 = !DILocation(line: 2670, column: 49, scope: !5007)
!5009 = !DILocation(line: 2670, column: 30, scope: !5007)
!5010 = !DILocation(line: 2670, column: 9, scope: !5007)
!5011 = !DILocation(line: 2670, column: 14, scope: !5007)
!5012 = !DILocation(line: 2670, column: 20, scope: !5007)
!5013 = !DILocation(line: 2671, column: 13, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5007, file: !368, line: 2671, column: 13)
!5015 = !DILocation(line: 2671, column: 18, scope: !5014)
!5016 = !DILocation(line: 2671, column: 24, scope: !5014)
!5017 = !DILocation(line: 2671, column: 13, scope: !5007)
!5018 = !DILocation(line: 2672, column: 13, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5014, file: !368, line: 2671, column: 39)
!5020 = !DILocation(line: 2673, column: 13, scope: !5019)
!5021 = !DILocation(line: 2675, column: 9, scope: !5007)
!5022 = !DILocation(line: 2675, column: 14, scope: !5007)
!5023 = !DILocation(line: 2675, column: 26, scope: !5007)
!5024 = !DILocation(line: 2676, column: 16, scope: !5007)
!5025 = !DILocation(line: 2676, column: 21, scope: !5007)
!5026 = !DILocation(line: 2676, column: 31, scope: !5007)
!5027 = !DILocation(line: 2676, column: 37, scope: !5007)
!5028 = !DILocation(line: 2676, column: 9, scope: !5007)
!5029 = !DILocation(line: 2678, column: 19, scope: !1572)
!5030 = !DILocation(line: 2678, column: 25, scope: !1572)
!5031 = !DILocation(line: 2678, column: 5, scope: !1572)
!5032 = !DILocation(line: 2678, column: 10, scope: !1572)
!5033 = !DILocation(line: 2678, column: 17, scope: !1572)
!5034 = !DILocation(line: 2679, column: 5, scope: !1572)
!5035 = !DILocation(line: 2680, column: 1, scope: !1572)
!5036 = !DILocation(line: 2725, column: 29, scope: !729)
!5037 = !DILocation(line: 2725, column: 41, scope: !729)
!5038 = !DILocation(line: 2727, column: 5, scope: !729)
!5039 = !DILocation(line: 2727, column: 18, scope: !729)
!5040 = !DILocation(line: 2728, column: 5, scope: !729)
!5041 = !DILocation(line: 2728, column: 20, scope: !729)
!5042 = !DILocation(line: 2731, column: 27, scope: !729)
!5043 = !DILocation(line: 2731, column: 12, scope: !729)
!5044 = !DILocation(line: 2731, column: 10, scope: !729)
!5045 = !DILocation(line: 2732, column: 10, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !729, file: !368, line: 2732, column: 9)
!5047 = !DILocation(line: 2732, column: 9, scope: !729)
!5048 = !DILocation(line: 2733, column: 25, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5046, file: !368, line: 2732, column: 16)
!5050 = !DILocation(line: 2733, column: 9, scope: !5049)
!5051 = !DILocation(line: 2735, column: 9, scope: !5049)
!5052 = !DILocation(line: 2737, column: 5, scope: !729)
!5053 = !DILocation(line: 2737, column: 11, scope: !729)
!5054 = !DILocation(line: 2737, column: 17, scope: !729)
!5055 = !DILocation(line: 2739, column: 42, scope: !729)
!5056 = !DILocation(line: 2739, column: 26, scope: !729)
!5057 = !DILocation(line: 2739, column: 49, scope: !729)
!5058 = !DILocation(line: 2739, column: 74, scope: !729)
!5059 = !DILocation(line: 2739, column: 58, scope: !729)
!5060 = !DILocation(line: 2739, column: 25, scope: !729)
!5061 = !DILocation(line: 2739, column: 10, scope: !729)
!5062 = !DILocation(line: 2739, column: 8, scope: !729)
!5063 = !DILocation(line: 2740, column: 10, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !729, file: !368, line: 2740, column: 9)
!5065 = !DILocation(line: 2740, column: 9, scope: !729)
!5066 = !DILocation(line: 2741, column: 9, scope: !5064)
!5067 = !DILocation(line: 2743, column: 25, scope: !729)
!5068 = !DILocation(line: 2743, column: 5, scope: !729)
!5069 = !DILocation(line: 2743, column: 9, scope: !729)
!5070 = !DILocation(line: 2743, column: 15, scope: !729)
!5071 = !DILocation(line: 2744, column: 20, scope: !729)
!5072 = !DILocation(line: 2744, column: 26, scope: !729)
!5073 = !DILocation(line: 2744, column: 5, scope: !729)
!5074 = !DILocation(line: 2744, column: 9, scope: !729)
!5075 = !DILocation(line: 2744, column: 18, scope: !729)
!5076 = !DILocation(line: 2745, column: 18, scope: !729)
!5077 = !DILocation(line: 2745, column: 24, scope: !729)
!5078 = !DILocation(line: 2745, column: 5, scope: !729)
!5079 = !DILocation(line: 2745, column: 9, scope: !729)
!5080 = !DILocation(line: 2745, column: 16, scope: !729)
!5081 = !DILocation(line: 2746, column: 24, scope: !729)
!5082 = !DILocation(line: 2746, column: 12, scope: !729)
!5083 = !DILocation(line: 2746, column: 5, scope: !729)
!5084 = !DILocation(line: 2747, column: 1, scope: !729)
!5085 = !DILocation(line: 2754, column: 39, scope: !735)
!5086 = !DILocation(line: 2756, column: 5, scope: !735)
!5087 = !DILocation(line: 2756, column: 19, scope: !735)
!5088 = !DILocation(line: 2756, column: 42, scope: !735)
!5089 = !DILocation(line: 2756, column: 26, scope: !735)
!5090 = !DILocation(line: 2758, column: 24, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !735, file: !368, line: 2758, column: 9)
!5092 = !DILocation(line: 2758, column: 12, scope: !5091)
!5093 = !DILocation(line: 2758, column: 32, scope: !5091)
!5094 = !DILocation(line: 2758, column: 41, scope: !5091)
!5095 = !DILocation(line: 2758, column: 66, scope: !5091)
!5096 = !DILocation(line: 2758, column: 100, scope: !5097)
!5097 = !DILexicalBlockFile(scope: !5091, file: !368, discriminator: 1)
!5098 = !DILocation(line: 2758, column: 88, scope: !5091)
!5099 = !DILocation(line: 2758, column: 108, scope: !5091)
!5100 = !DILocation(line: 2758, column: 69, scope: !5091)
!5101 = !DILocation(line: 2758, column: 9, scope: !735)
!5102 = !DILocation(line: 2759, column: 16, scope: !5091)
!5103 = !DILocation(line: 2759, column: 22, scope: !5091)
!5104 = !DILocation(line: 2759, column: 30, scope: !5091)
!5105 = !DILocation(line: 2759, column: 9, scope: !5091)
!5106 = !DILocation(line: 2760, column: 5, scope: !735)
!5107 = !DILocation(line: 2761, column: 1, scope: !735)
!5108 = !DILocation(line: 2764, column: 23, scope: !739)
!5109 = !DILocation(line: 2764, column: 37, scope: !739)
!5110 = !DILocation(line: 2764, column: 56, scope: !739)
!5111 = !DILocation(line: 2765, column: 22, scope: !739)
!5112 = !DILocation(line: 2765, column: 40, scope: !739)
!5113 = !DILocation(line: 2765, column: 52, scope: !739)
!5114 = !DILocation(line: 2767, column: 5, scope: !739)
!5115 = !DILocation(line: 2767, column: 20, scope: !739)
!5116 = !DILocation(line: 2768, column: 9, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !739, file: !368, line: 2768, column: 9)
!5118 = !DILocation(line: 2768, column: 9, scope: !739)
!5119 = !DILocation(line: 2769, column: 16, scope: !5117)
!5120 = !DILocation(line: 2769, column: 24, scope: !5117)
!5121 = !DILocation(line: 2769, column: 29, scope: !5117)
!5122 = !DILocation(line: 2769, column: 9, scope: !5117)
!5123 = !DILocation(line: 2771, column: 27, scope: !739)
!5124 = !DILocation(line: 2771, column: 12, scope: !739)
!5125 = !DILocation(line: 2771, column: 10, scope: !739)
!5126 = !DILocation(line: 2772, column: 9, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !739, file: !368, line: 2772, column: 9)
!5128 = !DILocation(line: 2772, column: 14, scope: !5127)
!5129 = !DILocation(line: 2772, column: 17, scope: !5130)
!5130 = !DILexicalBlockFile(scope: !5127, file: !368, discriminator: 1)
!5131 = !DILocation(line: 2772, column: 23, scope: !5127)
!5132 = !DILocation(line: 2772, column: 17, scope: !5127)
!5133 = !DILocation(line: 2772, column: 31, scope: !5127)
!5134 = !DILocation(line: 2772, column: 59, scope: !5135)
!5135 = !DILexicalBlockFile(scope: !5127, file: !368, discriminator: 2)
!5136 = !DILocation(line: 2772, column: 35, scope: !5127)
!5137 = !DILocation(line: 2772, column: 9, scope: !739)
!5138 = !DILocation(line: 2773, column: 16, scope: !5127)
!5139 = !DILocation(line: 2773, column: 22, scope: !5127)
!5140 = !DILocation(line: 2773, column: 30, scope: !5127)
!5141 = !DILocation(line: 2773, column: 35, scope: !5127)
!5142 = !DILocation(line: 2773, column: 9, scope: !5127)
!5143 = !DILocation(line: 2774, column: 32, scope: !739)
!5144 = !DILocation(line: 2774, column: 38, scope: !739)
!5145 = !DILocation(line: 2774, column: 43, scope: !739)
!5146 = !DILocation(line: 2774, column: 50, scope: !739)
!5147 = !DILocation(line: 2774, column: 12, scope: !739)
!5148 = !DILocation(line: 2774, column: 5, scope: !739)
!5149 = !DILocation(line: 2775, column: 1, scope: !739)
!5150 = !DILocation(line: 2889, column: 23, scope: !750)
!5151 = !DILocation(line: 2889, column: 38, scope: !750)
!5152 = !DILocation(line: 2889, column: 52, scope: !750)
!5153 = !DILocation(line: 2889, column: 71, scope: !750)
!5154 = !DILocation(line: 2890, column: 22, scope: !750)
!5155 = !DILocation(line: 2890, column: 40, scope: !750)
!5156 = !DILocation(line: 2890, column: 52, scope: !750)
!5157 = !DILocation(line: 2892, column: 5, scope: !750)
!5158 = !DILocation(line: 2892, column: 18, scope: !750)
!5159 = !DILocation(line: 2892, column: 39, scope: !750)
!5160 = !DILocation(line: 2892, column: 24, scope: !750)
!5161 = !DILocation(line: 2893, column: 5, scope: !750)
!5162 = !DILocation(line: 2893, column: 15, scope: !750)
!5163 = !DILocation(line: 2895, column: 25, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !750, file: !368, line: 2895, column: 9)
!5165 = !DILocation(line: 2895, column: 32, scope: !5164)
!5166 = !DILocation(line: 2895, column: 41, scope: !5164)
!5167 = !DILocation(line: 2895, column: 60, scope: !5164)
!5168 = !DILocation(line: 2895, column: 94, scope: !5169)
!5169 = !DILexicalBlockFile(scope: !5164, file: !368, discriminator: 1)
!5170 = !DILocation(line: 2895, column: 101, scope: !5164)
!5171 = !DILocation(line: 2895, column: 63, scope: !5164)
!5172 = !DILocation(line: 2895, column: 9, scope: !750)
!5173 = !DILocation(line: 2896, column: 25, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5164, file: !368, line: 2895, column: 130)
!5175 = !DILocation(line: 2896, column: 9, scope: !5174)
!5176 = !DILocation(line: 2898, column: 9, scope: !5174)
!5177 = !DILocation(line: 2901, column: 27, scope: !750)
!5178 = !DILocation(line: 2901, column: 32, scope: !750)
!5179 = !DILocation(line: 2901, column: 38, scope: !750)
!5180 = !DILocation(line: 2901, column: 47, scope: !750)
!5181 = !DILocation(line: 2902, column: 25, scope: !750)
!5182 = !DILocation(line: 2902, column: 31, scope: !750)
!5183 = !DILocation(line: 2901, column: 14, scope: !750)
!5184 = !DILocation(line: 2901, column: 12, scope: !750)
!5185 = !DILocation(line: 2903, column: 9, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !750, file: !368, line: 2903, column: 9)
!5187 = !DILocation(line: 2903, column: 16, scope: !5186)
!5188 = !DILocation(line: 2903, column: 9, scope: !750)
!5189 = !DILocation(line: 2904, column: 9, scope: !5186)
!5190 = !DILocation(line: 2909, column: 20, scope: !750)
!5191 = !DILocation(line: 2909, column: 25, scope: !750)
!5192 = !DILocation(line: 2909, column: 32, scope: !750)
!5193 = !DILocation(line: 2909, column: 12, scope: !750)
!5194 = !DILocation(line: 2909, column: 5, scope: !750)
!5195 = !DILocation(line: 2910, column: 1, scope: !750)
!5196 = !DILocation(line: 2781, column: 27, scope: !1578)
!5197 = !DILocation(line: 2781, column: 42, scope: !1578)
!5198 = !DILocation(line: 2781, column: 56, scope: !1578)
!5199 = !DILocation(line: 2781, column: 75, scope: !1578)
!5200 = !DILocation(line: 2782, column: 23, scope: !1578)
!5201 = !DILocation(line: 2782, column: 35, scope: !1578)
!5202 = !DILocation(line: 2784, column: 5, scope: !1578)
!5203 = !DILocation(line: 2784, column: 18, scope: !1578)
!5204 = !DILocation(line: 2785, column: 5, scope: !1578)
!5205 = !DILocation(line: 2785, column: 9, scope: !1578)
!5206 = !DILocation(line: 2787, column: 9, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !1578, file: !368, line: 2787, column: 9)
!5208 = !DILocation(line: 2787, column: 9, scope: !1578)
!5209 = !DILocation(line: 2788, column: 16, scope: !5207)
!5210 = !DILocation(line: 2788, column: 24, scope: !5207)
!5211 = !DILocation(line: 2788, column: 29, scope: !5207)
!5212 = !DILocation(line: 2788, column: 36, scope: !5207)
!5213 = !DILocation(line: 2788, column: 9, scope: !5207)
!5214 = !DILocation(line: 2790, column: 25, scope: !1592)
!5215 = !DILocation(line: 2790, column: 34, scope: !1592)
!5216 = !DILocation(line: 2790, column: 43, scope: !1592)
!5217 = !DILocation(line: 2790, column: 62, scope: !1592)
!5218 = !DILocation(line: 2790, column: 96, scope: !5219)
!5219 = !DILexicalBlockFile(scope: !1592, file: !368, discriminator: 1)
!5220 = !DILocation(line: 2790, column: 105, scope: !1592)
!5221 = !DILocation(line: 2790, column: 65, scope: !1592)
!5222 = !DILocation(line: 2790, column: 9, scope: !1578)
!5223 = !DILocation(line: 2791, column: 9, scope: !1591)
!5224 = !DILocation(line: 2791, column: 24, scope: !1591)
!5225 = !DILocation(line: 2791, column: 46, scope: !1591)
!5226 = !DILocation(line: 2791, column: 31, scope: !1591)
!5227 = !DILocation(line: 2792, column: 13, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !1591, file: !368, line: 2792, column: 13)
!5229 = !DILocation(line: 2792, column: 18, scope: !5228)
!5230 = !DILocation(line: 2792, column: 21, scope: !5231)
!5231 = !DILexicalBlockFile(scope: !5228, file: !368, discriminator: 1)
!5232 = !DILocation(line: 2792, column: 27, scope: !5228)
!5233 = !DILocation(line: 2792, column: 21, scope: !5228)
!5234 = !DILocation(line: 2792, column: 13, scope: !1591)
!5235 = !DILocation(line: 2793, column: 20, scope: !5228)
!5236 = !DILocation(line: 2793, column: 26, scope: !5228)
!5237 = !DILocation(line: 2793, column: 34, scope: !5228)
!5238 = !DILocation(line: 2793, column: 39, scope: !5228)
!5239 = !DILocation(line: 2793, column: 46, scope: !5228)
!5240 = !DILocation(line: 2793, column: 13, scope: !5228)
!5241 = !DILocation(line: 2799, column: 30, scope: !1595)
!5242 = !DILocation(line: 2799, column: 39, scope: !1595)
!5243 = !DILocation(line: 2799, column: 50, scope: !1595)
!5244 = !DILocation(line: 2799, column: 59, scope: !1595)
!5245 = !DILocation(line: 2799, column: 76, scope: !1595)
!5246 = !DILocation(line: 2799, column: 13, scope: !1591)
!5247 = !DILocation(line: 2800, column: 13, scope: !1594)
!5248 = !DILocation(line: 2800, column: 23, scope: !1594)
!5249 = !DILocation(line: 2801, column: 13, scope: !1594)
!5250 = !DILocation(line: 2801, column: 23, scope: !1594)
!5251 = !DILocation(line: 2802, column: 38, scope: !1594)
!5252 = !DILocation(line: 2802, column: 44, scope: !1594)
!5253 = !DILocation(line: 2802, column: 18, scope: !1594)
!5254 = !DILocation(line: 2802, column: 16, scope: !1594)
!5255 = !DILocation(line: 2803, column: 17, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !1594, file: !368, line: 2803, column: 17)
!5257 = !DILocation(line: 2803, column: 20, scope: !5256)
!5258 = !DILocation(line: 2803, column: 17, scope: !1594)
!5259 = !DILocation(line: 2804, column: 38, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5256, file: !368, line: 2803, column: 35)
!5261 = !DILocation(line: 2805, column: 52, scope: !5260)
!5262 = !DILocation(line: 2805, column: 36, scope: !5260)
!5263 = !DILocation(line: 2805, column: 59, scope: !5260)
!5264 = !{!2591, !2523, i64 24}
!5265 = !DILocation(line: 2804, column: 17, scope: !5260)
!5266 = !DILocation(line: 2806, column: 17, scope: !5260)
!5267 = !DILocation(line: 2808, column: 35, scope: !1594)
!5268 = !DILocation(line: 2808, column: 40, scope: !1594)
!5269 = !DILocation(line: 2808, column: 46, scope: !1594)
!5270 = !DILocation(line: 2808, column: 55, scope: !1594)
!5271 = !DILocation(line: 2809, column: 33, scope: !1594)
!5272 = !DILocation(line: 2809, column: 39, scope: !1594)
!5273 = !DILocation(line: 2808, column: 22, scope: !1594)
!5274 = !DILocation(line: 2808, column: 20, scope: !1594)
!5275 = !DILocation(line: 2810, column: 13, scope: !1594)
!5276 = !DILocation(line: 2810, column: 18, scope: !5277)
!5277 = !DILexicalBlockFile(scope: !1598, file: !368, discriminator: 1)
!5278 = !DILocation(line: 2810, column: 28, scope: !1598)
!5279 = !DILocation(line: 2810, column: 58, scope: !1598)
!5280 = !DILocation(line: 2810, column: 71, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !1598, file: !368, line: 2810, column: 68)
!5282 = !DILocation(line: 2810, column: 88, scope: !5281)
!5283 = !DILocation(line: 2810, column: 68, scope: !5281)
!5284 = !DILocation(line: 2810, column: 98, scope: !5281)
!5285 = !DILocation(line: 2810, column: 68, scope: !1598)
!5286 = !DILocation(line: 2810, column: 68, scope: !5287)
!5287 = !DILexicalBlockFile(scope: !1598, file: !368, discriminator: 2)
!5288 = !DILocation(line: 2810, column: 129, scope: !5289)
!5289 = !DILexicalBlockFile(scope: !5281, file: !368, discriminator: 3)
!5290 = !DILocation(line: 2810, column: 147, scope: !5281)
!5291 = !DILocation(line: 2810, column: 157, scope: !5281)
!5292 = !DILocation(line: 2810, column: 182, scope: !5281)
!5293 = !DILocation(line: 2810, column: 113, scope: !5281)
!5294 = !DILocation(line: 2810, column: 201, scope: !5295)
!5295 = !DILexicalBlockFile(scope: !1594, file: !368, discriminator: 4)
!5296 = !DILocation(line: 2810, column: 201, scope: !1598)
!5297 = !DILocation(line: 2810, column: 201, scope: !5298)
!5298 = !DILexicalBlockFile(scope: !1598, file: !368, discriminator: 5)
!5299 = !DILocation(line: 2811, column: 20, scope: !1594)
!5300 = !DILocation(line: 2811, column: 13, scope: !1594)
!5301 = !DILocation(line: 2812, column: 9, scope: !1595)
!5302 = !DILocation(line: 2812, column: 20, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !1595, file: !368, line: 2812, column: 20)
!5304 = !DILocation(line: 2812, column: 26, scope: !5303)
!5305 = !DILocation(line: 2812, column: 47, scope: !5303)
!5306 = !DILocation(line: 2812, column: 65, scope: !5307)
!5307 = !DILexicalBlockFile(scope: !5303, file: !368, discriminator: 1)
!5308 = !DILocation(line: 2812, column: 73, scope: !5303)
!5309 = !DILocation(line: 2812, column: 82, scope: !5303)
!5310 = !DILocation(line: 2812, column: 108, scope: !5303)
!5311 = !DILocation(line: 2812, column: 142, scope: !5312)
!5312 = !DILexicalBlockFile(scope: !5303, file: !368, discriminator: 2)
!5313 = !DILocation(line: 2812, column: 150, scope: !5303)
!5314 = !DILocation(line: 2812, column: 111, scope: !5303)
!5315 = !DILocation(line: 2812, column: 20, scope: !1595)
!5316 = !DILocation(line: 2813, column: 23, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5303, file: !368, line: 2812, column: 186)
!5318 = !DILocation(line: 2813, column: 14, scope: !5317)
!5319 = !DILocation(line: 2813, column: 27, scope: !5317)
!5320 = !DILocation(line: 2814, column: 59, scope: !5317)
!5321 = !DILocation(line: 2815, column: 13, scope: !5317)
!5322 = !DILocation(line: 2817, column: 26, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5303, file: !368, line: 2816, column: 16)
!5324 = !DILocation(line: 2819, column: 43, scope: !5323)
!5325 = !DILocation(line: 2819, column: 27, scope: !5323)
!5326 = !DILocation(line: 2819, column: 50, scope: !5323)
!5327 = !DILocation(line: 2820, column: 40, scope: !5323)
!5328 = !DILocation(line: 2820, column: 49, scope: !5323)
!5329 = !DILocation(line: 2820, column: 59, scope: !5323)
!5330 = !DILocation(line: 2817, column: 13, scope: !5323)
!5331 = !DILocation(line: 2821, column: 13, scope: !5323)
!5332 = !DILocation(line: 2823, column: 5, scope: !1592)
!5333 = !DILocation(line: 2824, column: 26, scope: !1578)
!5334 = !DILocation(line: 2824, column: 11, scope: !1578)
!5335 = !DILocation(line: 2824, column: 9, scope: !1578)
!5336 = !DILocation(line: 2826, column: 31, scope: !1578)
!5337 = !DILocation(line: 2826, column: 38, scope: !1578)
!5338 = !DILocation(line: 2826, column: 11, scope: !1578)
!5339 = !DILocation(line: 2826, column: 9, scope: !1578)
!5340 = !DILocation(line: 2827, column: 9, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !1578, file: !368, line: 2827, column: 9)
!5342 = !DILocation(line: 2827, column: 13, scope: !5341)
!5343 = !DILocation(line: 2827, column: 9, scope: !1578)
!5344 = !DILocation(line: 2828, column: 9, scope: !5341)
!5345 = !DILocation(line: 2829, column: 9, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !1578, file: !368, line: 2829, column: 9)
!5347 = !DILocation(line: 2829, column: 9, scope: !1578)
!5348 = !DILocation(line: 2830, column: 16, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5346, file: !368, line: 2829, column: 14)
!5350 = !DILocation(line: 2831, column: 16, scope: !5349)
!5351 = !DILocation(line: 2831, column: 21, scope: !5349)
!5352 = !DILocation(line: 2832, column: 16, scope: !5349)
!5353 = !DILocation(line: 2830, column: 9, scope: !5349)
!5354 = !DILocation(line: 2834, column: 28, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5349, file: !368, line: 2834, column: 13)
!5356 = !DILocation(line: 2834, column: 36, scope: !5355)
!5357 = !DILocation(line: 2834, column: 45, scope: !5355)
!5358 = !DILocation(line: 2834, column: 71, scope: !5355)
!5359 = !DILocation(line: 2834, column: 105, scope: !5360)
!5360 = !DILexicalBlockFile(scope: !5355, file: !368, discriminator: 2)
!5361 = !DILocation(line: 2834, column: 113, scope: !5355)
!5362 = !DILocation(line: 2834, column: 74, scope: !5355)
!5363 = !DILocation(line: 2834, column: 13, scope: !5349)
!5364 = !DILocation(line: 2834, column: 13, scope: !5365)
!5365 = !DILexicalBlockFile(scope: !5366, file: !368, discriminator: 3)
!5366 = !DILexicalBlockFile(scope: !5349, file: !368, discriminator: 1)
!5367 = !DILocation(line: 2837, column: 34, scope: !5349)
!5368 = !DILocation(line: 2837, column: 17, scope: !5349)
!5369 = !DILocation(line: 2837, column: 15, scope: !5349)
!5370 = !DILocation(line: 2838, column: 13, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5349, file: !368, line: 2838, column: 13)
!5372 = !DILocation(line: 2838, column: 19, scope: !5371)
!5373 = !DILocation(line: 2838, column: 13, scope: !5349)
!5374 = !DILocation(line: 2839, column: 13, scope: !5371)
!5375 = !DILocation(line: 2841, column: 25, scope: !5349)
!5376 = !DILocation(line: 2841, column: 34, scope: !5349)
!5377 = !DILocation(line: 2841, column: 43, scope: !5349)
!5378 = !DILocation(line: 2842, column: 16, scope: !5349)
!5379 = !DILocation(line: 2842, column: 9, scope: !5349)
!5380 = !DILocation(line: 2845, column: 24, scope: !1601)
!5381 = !DILocation(line: 2845, column: 32, scope: !1601)
!5382 = !DILocation(line: 2845, column: 41, scope: !1601)
!5383 = !DILocation(line: 2845, column: 67, scope: !1601)
!5384 = !DILocation(line: 2845, column: 101, scope: !5385)
!5385 = !DILexicalBlockFile(scope: !1601, file: !368, discriminator: 1)
!5386 = !DILocation(line: 2845, column: 109, scope: !1601)
!5387 = !DILocation(line: 2845, column: 70, scope: !1601)
!5388 = !DILocation(line: 2846, column: 9, scope: !1601)
!5389 = !DILocation(line: 2846, column: 27, scope: !5385)
!5390 = !DILocation(line: 2846, column: 36, scope: !1601)
!5391 = !DILocation(line: 2846, column: 45, scope: !1601)
!5392 = !DILocation(line: 2846, column: 65, scope: !1601)
!5393 = !DILocation(line: 2846, column: 99, scope: !5394)
!5394 = !DILexicalBlockFile(scope: !1601, file: !368, discriminator: 2)
!5395 = !DILocation(line: 2846, column: 108, scope: !1601)
!5396 = !DILocation(line: 2846, column: 68, scope: !1601)
!5397 = !DILocation(line: 2845, column: 9, scope: !1578)
!5398 = !DILocation(line: 2847, column: 9, scope: !1600)
!5399 = !DILocation(line: 2847, column: 24, scope: !1600)
!5400 = !DILocation(line: 2847, column: 29, scope: !1600)
!5401 = !DILocation(line: 2848, column: 9, scope: !1600)
!5402 = !DILocation(line: 2848, column: 19, scope: !1600)
!5403 = !DILocation(line: 2849, column: 31, scope: !1600)
!5404 = !DILocation(line: 2849, column: 14, scope: !1600)
!5405 = !DILocation(line: 2849, column: 12, scope: !1600)
!5406 = !DILocation(line: 2851, column: 29, scope: !1600)
!5407 = !DILocation(line: 2851, column: 14, scope: !1600)
!5408 = !DILocation(line: 2851, column: 12, scope: !1600)
!5409 = !DILocation(line: 2854, column: 13, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !1600, file: !368, line: 2854, column: 13)
!5411 = !DILocation(line: 2854, column: 17, scope: !5410)
!5412 = !DILocation(line: 2854, column: 26, scope: !5410)
!5413 = !DILocation(line: 2854, column: 30, scope: !5410)
!5414 = !DILocation(line: 2854, column: 23, scope: !5410)
!5415 = !DILocation(line: 2854, column: 13, scope: !1600)
!5416 = !DILocation(line: 2855, column: 26, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5410, file: !368, line: 2854, column: 37)
!5418 = !DILocation(line: 2857, column: 40, scope: !5417)
!5419 = !DILocation(line: 2857, column: 49, scope: !5417)
!5420 = !DILocation(line: 2857, column: 59, scope: !5417)
!5421 = !DILocation(line: 2858, column: 43, scope: !5417)
!5422 = !DILocation(line: 2858, column: 27, scope: !5417)
!5423 = !DILocation(line: 2858, column: 50, scope: !5417)
!5424 = !DILocation(line: 2855, column: 13, scope: !5417)
!5425 = !DILocation(line: 2859, column: 13, scope: !5417)
!5426 = !DILocation(line: 2861, column: 25, scope: !1600)
!5427 = !DILocation(line: 2861, column: 30, scope: !1600)
!5428 = !DILocation(line: 2861, column: 19, scope: !1600)
!5429 = !DILocation(line: 2861, column: 10, scope: !1600)
!5430 = !DILocation(line: 2861, column: 23, scope: !1600)
!5431 = !DILocation(line: 2863, column: 33, scope: !1600)
!5432 = !DILocation(line: 2863, column: 16, scope: !1600)
!5433 = !DILocation(line: 2863, column: 14, scope: !1600)
!5434 = !DILocation(line: 2864, column: 13, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !1600, file: !368, line: 2864, column: 13)
!5436 = !DILocation(line: 2864, column: 18, scope: !5435)
!5437 = !DILocation(line: 2864, column: 13, scope: !1600)
!5438 = !DILocation(line: 2865, column: 13, scope: !5435)
!5439 = !DILocation(line: 2875, column: 32, scope: !1600)
!5440 = !DILocation(line: 2875, column: 38, scope: !1600)
!5441 = !DILocation(line: 2875, column: 16, scope: !1600)
!5442 = !DILocation(line: 2875, column: 9, scope: !1600)
!5443 = !DILocation(line: 2876, column: 5, scope: !1601)
!5444 = !DILocation(line: 2877, column: 18, scope: !1578)
!5445 = !DILocation(line: 2879, column: 32, scope: !1578)
!5446 = !DILocation(line: 2879, column: 41, scope: !1578)
!5447 = !DILocation(line: 2879, column: 51, scope: !1578)
!5448 = !DILocation(line: 2880, column: 35, scope: !1578)
!5449 = !DILocation(line: 2880, column: 19, scope: !1578)
!5450 = !DILocation(line: 2880, column: 42, scope: !1578)
!5451 = !DILocation(line: 2877, column: 5, scope: !1578)
!5452 = !DILocation(line: 2881, column: 5, scope: !1578)
!5453 = !DILocation(line: 2882, column: 1, scope: !1578)
!5454 = !DILocation(line: 2436, column: 22, scope: !1613)
!5455 = !DILocation(line: 2436, column: 41, scope: !1613)
!5456 = !DILocation(line: 2436, column: 58, scope: !1613)
!5457 = !DILocation(line: 2438, column: 5, scope: !1613)
!5458 = !DILocation(line: 2438, column: 9, scope: !1613)
!5459 = !DILocation(line: 2439, column: 5, scope: !1613)
!5460 = !DILocation(line: 2439, column: 18, scope: !1613)
!5461 = !DILocation(line: 2440, column: 5, scope: !1613)
!5462 = !DILocation(line: 2440, column: 15, scope: !1613)
!5463 = !DILocation(line: 2443, column: 9, scope: !1626)
!5464 = !DILocation(line: 2443, column: 14, scope: !1626)
!5465 = !DILocation(line: 2443, column: 9, scope: !1613)
!5466 = !DILocation(line: 2444, column: 9, scope: !1625)
!5467 = !DILocation(line: 2444, column: 14, scope: !5468)
!5468 = !DILexicalBlockFile(scope: !1624, file: !368, discriminator: 1)
!5469 = !DILocation(line: 2444, column: 24, scope: !1624)
!5470 = !DILocation(line: 2444, column: 82, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !1624, file: !368, line: 2444, column: 79)
!5472 = !DILocation(line: 2444, column: 99, scope: !5471)
!5473 = !DILocation(line: 2444, column: 79, scope: !5471)
!5474 = !DILocation(line: 2444, column: 109, scope: !5471)
!5475 = !DILocation(line: 2444, column: 79, scope: !1624)
!5476 = !DILocation(line: 2444, column: 79, scope: !5477)
!5477 = !DILexicalBlockFile(scope: !1624, file: !368, discriminator: 2)
!5478 = !DILocation(line: 2444, column: 140, scope: !5479)
!5479 = !DILexicalBlockFile(scope: !5471, file: !368, discriminator: 3)
!5480 = !DILocation(line: 2444, column: 158, scope: !5471)
!5481 = !DILocation(line: 2444, column: 168, scope: !5471)
!5482 = !DILocation(line: 2444, column: 193, scope: !5471)
!5483 = !DILocation(line: 2444, column: 124, scope: !5471)
!5484 = !DILocation(line: 2444, column: 212, scope: !5485)
!5485 = !DILexicalBlockFile(scope: !1625, file: !368, discriminator: 4)
!5486 = !DILocation(line: 2444, column: 212, scope: !1624)
!5487 = !DILocation(line: 2444, column: 212, scope: !5488)
!5488 = !DILexicalBlockFile(scope: !1624, file: !368, discriminator: 5)
!5489 = !DILocation(line: 2445, column: 9, scope: !1625)
!5490 = !DILocation(line: 2447, column: 31, scope: !1613)
!5491 = !DILocation(line: 2447, column: 10, scope: !1613)
!5492 = !DILocation(line: 2447, column: 8, scope: !1613)
!5493 = !DILocation(line: 2448, column: 9, scope: !1630)
!5494 = !DILocation(line: 2448, column: 12, scope: !1630)
!5495 = !DILocation(line: 2448, column: 9, scope: !1613)
!5496 = !DILocation(line: 2449, column: 9, scope: !1629)
!5497 = !DILocation(line: 2449, column: 14, scope: !5498)
!5498 = !DILexicalBlockFile(scope: !1628, file: !368, discriminator: 1)
!5499 = !DILocation(line: 2449, column: 24, scope: !1628)
!5500 = !DILocation(line: 2449, column: 54, scope: !1628)
!5501 = !DILocation(line: 2449, column: 69, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !1628, file: !368, line: 2449, column: 66)
!5503 = !DILocation(line: 2449, column: 86, scope: !5502)
!5504 = !DILocation(line: 2449, column: 66, scope: !5502)
!5505 = !DILocation(line: 2449, column: 96, scope: !5502)
!5506 = !DILocation(line: 2449, column: 66, scope: !1628)
!5507 = !DILocation(line: 2449, column: 66, scope: !5508)
!5508 = !DILexicalBlockFile(scope: !1628, file: !368, discriminator: 2)
!5509 = !DILocation(line: 2449, column: 127, scope: !5510)
!5510 = !DILexicalBlockFile(scope: !5502, file: !368, discriminator: 3)
!5511 = !DILocation(line: 2449, column: 145, scope: !5502)
!5512 = !DILocation(line: 2449, column: 155, scope: !5502)
!5513 = !DILocation(line: 2449, column: 180, scope: !5502)
!5514 = !DILocation(line: 2449, column: 111, scope: !5502)
!5515 = !DILocation(line: 2449, column: 199, scope: !5516)
!5516 = !DILexicalBlockFile(scope: !1629, file: !368, discriminator: 4)
!5517 = !DILocation(line: 2449, column: 199, scope: !1628)
!5518 = !DILocation(line: 2449, column: 199, scope: !5519)
!5519 = !DILexicalBlockFile(scope: !1628, file: !368, discriminator: 5)
!5520 = !DILocation(line: 2450, column: 9, scope: !1629)
!5521 = !DILocation(line: 2452, column: 9, scope: !1634)
!5522 = !DILocation(line: 2452, column: 13, scope: !1634)
!5523 = !DILocation(line: 2452, column: 23, scope: !1634)
!5524 = !DILocation(line: 2452, column: 37, scope: !1634)
!5525 = !DILocation(line: 2452, column: 56, scope: !5526)
!5526 = !DILexicalBlockFile(scope: !1634, file: !368, discriminator: 1)
!5527 = !DILocation(line: 2452, column: 60, scope: !1634)
!5528 = !DILocation(line: 2452, column: 73, scope: !1634)
!5529 = !DILocation(line: 2452, column: 82, scope: !1634)
!5530 = !DILocation(line: 2452, column: 9, scope: !1613)
!5531 = !DILocation(line: 2453, column: 9, scope: !1633)
!5532 = !DILocation(line: 2453, column: 14, scope: !5533)
!5533 = !DILexicalBlockFile(scope: !1632, file: !368, discriminator: 1)
!5534 = !DILocation(line: 2453, column: 24, scope: !1632)
!5535 = !DILocation(line: 2453, column: 55, scope: !1632)
!5536 = !DILocation(line: 2453, column: 59, scope: !1632)
!5537 = !DILocation(line: 2453, column: 75, scope: !1637)
!5538 = !DILocation(line: 2453, column: 91, scope: !1637)
!5539 = !DILocation(line: 2453, column: 75, scope: !1632)
!5540 = !DILocation(line: 2453, column: 106, scope: !5541)
!5541 = !DILexicalBlockFile(scope: !1637, file: !368, discriminator: 2)
!5542 = !DILocation(line: 2453, column: 111, scope: !5543)
!5543 = !DILexicalBlockFile(scope: !1636, file: !368, discriminator: 4)
!5544 = !DILocation(line: 2453, column: 121, scope: !1636)
!5545 = !DILocation(line: 2453, column: 151, scope: !1636)
!5546 = !DILocation(line: 2453, column: 177, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !1636, file: !368, line: 2453, column: 174)
!5548 = !DILocation(line: 2453, column: 194, scope: !5547)
!5549 = !DILocation(line: 2453, column: 174, scope: !5547)
!5550 = !DILocation(line: 2453, column: 204, scope: !5547)
!5551 = !DILocation(line: 2453, column: 174, scope: !1636)
!5552 = !DILocation(line: 2453, column: 174, scope: !5553)
!5553 = !DILexicalBlockFile(scope: !1636, file: !368, discriminator: 5)
!5554 = !DILocation(line: 2453, column: 235, scope: !5555)
!5555 = !DILexicalBlockFile(scope: !5547, file: !368, discriminator: 6)
!5556 = !DILocation(line: 2453, column: 253, scope: !5547)
!5557 = !DILocation(line: 2453, column: 263, scope: !5547)
!5558 = !DILocation(line: 2453, column: 288, scope: !5547)
!5559 = !DILocation(line: 2453, column: 219, scope: !5547)
!5560 = !DILocation(line: 2453, column: 307, scope: !5561)
!5561 = !DILexicalBlockFile(scope: !1637, file: !368, discriminator: 7)
!5562 = !DILocation(line: 2453, column: 307, scope: !1636)
!5563 = !DILocation(line: 2453, column: 307, scope: !5564)
!5564 = !DILexicalBlockFile(scope: !1636, file: !368, discriminator: 8)
!5565 = !DILocation(line: 2453, column: 307, scope: !5566)
!5566 = !DILexicalBlockFile(scope: !1636, file: !368, discriminator: 9)
!5567 = !DILocation(line: 2453, column: 320, scope: !5568)
!5568 = !DILexicalBlockFile(scope: !5569, file: !368, discriminator: 10)
!5569 = !DILexicalBlockFile(scope: !1633, file: !368, discriminator: 3)
!5570 = !DILocation(line: 2453, column: 320, scope: !1632)
!5571 = !DILocation(line: 2453, column: 320, scope: !5572)
!5572 = !DILexicalBlockFile(scope: !1632, file: !368, discriminator: 11)
!5573 = !DILocation(line: 2454, column: 25, scope: !1633)
!5574 = !DILocation(line: 2454, column: 9, scope: !1633)
!5575 = !DILocation(line: 2454, column: 13, scope: !1633)
!5576 = !DILocation(line: 2454, column: 23, scope: !1633)
!5577 = !DILocation(line: 2455, column: 9, scope: !1633)
!5578 = !DILocation(line: 2457, column: 22, scope: !1613)
!5579 = !DILocation(line: 2457, column: 30, scope: !1613)
!5580 = !DILocation(line: 2457, column: 11, scope: !1613)
!5581 = !DILocation(line: 2457, column: 9, scope: !1613)
!5582 = !DILocation(line: 2458, column: 9, scope: !1641)
!5583 = !DILocation(line: 2458, column: 13, scope: !1641)
!5584 = !DILocation(line: 2458, column: 9, scope: !1613)
!5585 = !DILocation(line: 2459, column: 9, scope: !1640)
!5586 = !DILocation(line: 2459, column: 14, scope: !5587)
!5587 = !DILexicalBlockFile(scope: !1639, file: !368, discriminator: 1)
!5588 = !DILocation(line: 2459, column: 24, scope: !1639)
!5589 = !DILocation(line: 2459, column: 54, scope: !1639)
!5590 = !DILocation(line: 2459, column: 69, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !1639, file: !368, line: 2459, column: 66)
!5592 = !DILocation(line: 2459, column: 86, scope: !5591)
!5593 = !DILocation(line: 2459, column: 66, scope: !5591)
!5594 = !DILocation(line: 2459, column: 96, scope: !5591)
!5595 = !DILocation(line: 2459, column: 66, scope: !1639)
!5596 = !DILocation(line: 2459, column: 66, scope: !5597)
!5597 = !DILexicalBlockFile(scope: !1639, file: !368, discriminator: 2)
!5598 = !DILocation(line: 2459, column: 127, scope: !5599)
!5599 = !DILexicalBlockFile(scope: !5591, file: !368, discriminator: 3)
!5600 = !DILocation(line: 2459, column: 145, scope: !5591)
!5601 = !DILocation(line: 2459, column: 155, scope: !5591)
!5602 = !DILocation(line: 2459, column: 180, scope: !5591)
!5603 = !DILocation(line: 2459, column: 111, scope: !5591)
!5604 = !DILocation(line: 2459, column: 199, scope: !5605)
!5605 = !DILexicalBlockFile(scope: !1640, file: !368, discriminator: 4)
!5606 = !DILocation(line: 2459, column: 199, scope: !1639)
!5607 = !DILocation(line: 2459, column: 199, scope: !5608)
!5608 = !DILexicalBlockFile(scope: !1639, file: !368, discriminator: 5)
!5609 = !DILocation(line: 2460, column: 9, scope: !1640)
!5610 = !DILocation(line: 2462, column: 29, scope: !1613)
!5611 = !DILocation(line: 2462, column: 33, scope: !1613)
!5612 = !DILocation(line: 2462, column: 44, scope: !1613)
!5613 = !DILocation(line: 2462, column: 49, scope: !1613)
!5614 = !DILocation(line: 2462, column: 14, scope: !1613)
!5615 = !DILocation(line: 2462, column: 12, scope: !1613)
!5616 = !DILocation(line: 2463, column: 5, scope: !1613)
!5617 = !DILocation(line: 2463, column: 10, scope: !5618)
!5618 = !DILexicalBlockFile(scope: !1643, file: !368, discriminator: 1)
!5619 = !DILocation(line: 2463, column: 20, scope: !1643)
!5620 = !DILocation(line: 2463, column: 50, scope: !1643)
!5621 = !DILocation(line: 2463, column: 64, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !1643, file: !368, line: 2463, column: 61)
!5623 = !DILocation(line: 2463, column: 81, scope: !5622)
!5624 = !DILocation(line: 2463, column: 61, scope: !5622)
!5625 = !DILocation(line: 2463, column: 91, scope: !5622)
!5626 = !DILocation(line: 2463, column: 61, scope: !1643)
!5627 = !DILocation(line: 2463, column: 61, scope: !5628)
!5628 = !DILexicalBlockFile(scope: !1643, file: !368, discriminator: 2)
!5629 = !DILocation(line: 2463, column: 122, scope: !5630)
!5630 = !DILexicalBlockFile(scope: !5622, file: !368, discriminator: 3)
!5631 = !DILocation(line: 2463, column: 140, scope: !5622)
!5632 = !DILocation(line: 2463, column: 150, scope: !5622)
!5633 = !DILocation(line: 2463, column: 175, scope: !5622)
!5634 = !DILocation(line: 2463, column: 106, scope: !5622)
!5635 = !DILocation(line: 2463, column: 194, scope: !5636)
!5636 = !DILexicalBlockFile(scope: !1613, file: !368, discriminator: 4)
!5637 = !DILocation(line: 2463, column: 194, scope: !1643)
!5638 = !DILocation(line: 2463, column: 194, scope: !5639)
!5639 = !DILexicalBlockFile(scope: !1643, file: !368, discriminator: 5)
!5640 = !DILocation(line: 2464, column: 5, scope: !1613)
!5641 = !DILocation(line: 2464, column: 10, scope: !5642)
!5642 = !DILexicalBlockFile(scope: !1645, file: !368, discriminator: 1)
!5643 = !DILocation(line: 2464, column: 20, scope: !1645)
!5644 = !DILocation(line: 2464, column: 50, scope: !1645)
!5645 = !DILocation(line: 2464, column: 65, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !1645, file: !368, line: 2464, column: 62)
!5647 = !DILocation(line: 2464, column: 82, scope: !5646)
!5648 = !DILocation(line: 2464, column: 62, scope: !5646)
!5649 = !DILocation(line: 2464, column: 92, scope: !5646)
!5650 = !DILocation(line: 2464, column: 62, scope: !1645)
!5651 = !DILocation(line: 2464, column: 62, scope: !5652)
!5652 = !DILexicalBlockFile(scope: !1645, file: !368, discriminator: 2)
!5653 = !DILocation(line: 2464, column: 123, scope: !5654)
!5654 = !DILexicalBlockFile(scope: !5646, file: !368, discriminator: 3)
!5655 = !DILocation(line: 2464, column: 141, scope: !5646)
!5656 = !DILocation(line: 2464, column: 151, scope: !5646)
!5657 = !DILocation(line: 2464, column: 176, scope: !5646)
!5658 = !DILocation(line: 2464, column: 107, scope: !5646)
!5659 = !DILocation(line: 2464, column: 195, scope: !5636)
!5660 = !DILocation(line: 2464, column: 195, scope: !1645)
!5661 = !DILocation(line: 2464, column: 195, scope: !5662)
!5662 = !DILexicalBlockFile(scope: !1645, file: !368, discriminator: 5)
!5663 = !DILocation(line: 2465, column: 12, scope: !1613)
!5664 = !DILocation(line: 2465, column: 5, scope: !1613)
!5665 = !DILocation(line: 2466, column: 1, scope: !1613)
!5666 = !DILocation(line: 3924, column: 38, scope: !1655)
!5667 = !DILocation(line: 3926, column: 22, scope: !1655)
!5668 = !DILocation(line: 3926, column: 5, scope: !1655)
!5669 = !DILocation(line: 3927, column: 19, scope: !1655)
!5670 = !DILocation(line: 3927, column: 7, scope: !1655)
!5671 = !DILocation(line: 3927, column: 27, scope: !1655)
!5672 = !DILocation(line: 3927, column: 37, scope: !1655)
!5673 = !DILocation(line: 3927, column: 57, scope: !1655)
!5674 = !DILocation(line: 3927, column: 45, scope: !1655)
!5675 = !DILocation(line: 3927, column: 5, scope: !1655)
!5676 = !DILocation(line: 3928, column: 1, scope: !1655)
!5677 = !DILocation(line: 3931, column: 35, scope: !1660)
!5678 = !DILocation(line: 3941, column: 46, scope: !1660)
!5679 = !DILocation(line: 3941, column: 34, scope: !1660)
!5680 = !DILocation(line: 3941, column: 54, scope: !1660)
!5681 = !DILocation(line: 3941, column: 64, scope: !1660)
!5682 = !DILocation(line: 3942, column: 32, scope: !1660)
!5683 = !DILocation(line: 3940, column: 12, scope: !1660)
!5684 = !DILocation(line: 3940, column: 5, scope: !1660)
!5685 = !DILocation(line: 3764, column: 35, scope: !1670)
!5686 = !DILocation(line: 3764, column: 51, scope: !1670)
!5687 = !DILocation(line: 3764, column: 69, scope: !1670)
!5688 = !DILocation(line: 3766, column: 5, scope: !1670)
!5689 = !DILocation(line: 3766, column: 15, scope: !1670)
!5690 = !DILocation(line: 3767, column: 5, scope: !1670)
!5691 = !DILocation(line: 3767, column: 15, scope: !1670)
!5692 = !DILocation(line: 3768, column: 5, scope: !1670)
!5693 = !DILocation(line: 3768, column: 15, scope: !1670)
!5694 = !DILocation(line: 3769, column: 5, scope: !1670)
!5695 = !DILocation(line: 3769, column: 15, scope: !1670)
!5696 = !DILocation(line: 3770, column: 5, scope: !1670)
!5697 = !DILocation(line: 3770, column: 20, scope: !1670)
!5698 = !DILocation(line: 3770, column: 56, scope: !1670)
!5699 = !DILocation(line: 3770, column: 44, scope: !1670)
!5700 = !DILocation(line: 3770, column: 27, scope: !1670)
!5701 = !DILocation(line: 3771, column: 5, scope: !1670)
!5702 = !DILocation(line: 3771, column: 15, scope: !1670)
!5703 = !DILocation(line: 3772, column: 5, scope: !1670)
!5704 = !DILocation(line: 3772, column: 15, scope: !1670)
!5705 = !DILocation(line: 3773, column: 5, scope: !1670)
!5706 = !DILocation(line: 3773, column: 15, scope: !1670)
!5707 = !DILocation(line: 3777, column: 5, scope: !1670)
!5708 = !DILocation(line: 3777, column: 11, scope: !1670)
!5709 = !DILocation(line: 3779, column: 5, scope: !1670)
!5710 = !DILocation(line: 3779, column: 9, scope: !1670)
!5711 = !DILocation(line: 3780, column: 5, scope: !1670)
!5712 = !DILocation(line: 3780, column: 9, scope: !1670)
!5713 = !DILocation(line: 3781, column: 5, scope: !1670)
!5714 = !DILocation(line: 3781, column: 18, scope: !1670)
!5715 = !DILocation(line: 3784, column: 15, scope: !1670)
!5716 = !DILocation(line: 3784, column: 21, scope: !1670)
!5717 = !{!5718, !2523, i64 128}
!5718 = !{!"", !2552, i64 0, !2523, i64 16, !2593, i64 24, !2523, i64 32, !2553, i64 40, !2553, i64 48, !2553, i64 56, !2523, i64 64, !2524, i64 80, !2523, i64 96, !2523, i64 104, !2523, i64 112, !2523, i64 120, !2523, i64 128, !2523, i64 136, !2523, i64 144, !2523, i64 152}
!5719 = !DILocation(line: 3784, column: 31, scope: !5720)
!5720 = !DILexicalBlockFile(scope: !1670, file: !368, discriminator: 1)
!5721 = !DILocation(line: 3784, column: 37, scope: !1670)
!5722 = !DILocation(line: 3784, column: 47, scope: !5723)
!5723 = !DILexicalBlockFile(scope: !1670, file: !368, discriminator: 2)
!5724 = !DILocation(line: 3784, column: 53, scope: !1670)
!5725 = !{!2962, !2523, i64 136}
!5726 = !DILocation(line: 3784, column: 13, scope: !5727)
!5727 = !DILexicalBlockFile(scope: !5728, file: !368, discriminator: 4)
!5728 = !DILexicalBlockFile(scope: !1670, file: !368, discriminator: 3)
!5729 = !DILocation(line: 3785, column: 18, scope: !1670)
!5730 = !DILocation(line: 3785, column: 24, scope: !1670)
!5731 = !{!5718, !2523, i64 112}
!5732 = !DILocation(line: 3785, column: 37, scope: !5720)
!5733 = !DILocation(line: 3785, column: 43, scope: !1670)
!5734 = !DILocation(line: 3785, column: 56, scope: !5723)
!5735 = !DILocation(line: 3785, column: 62, scope: !1670)
!5736 = !{!2962, !2523, i64 128}
!5737 = !DILocation(line: 3785, column: 16, scope: !5727)
!5738 = !DILocation(line: 3786, column: 15, scope: !1670)
!5739 = !DILocation(line: 3786, column: 21, scope: !1670)
!5740 = !{!5718, !2523, i64 136}
!5741 = !DILocation(line: 3786, column: 31, scope: !5720)
!5742 = !DILocation(line: 3786, column: 37, scope: !1670)
!5743 = !DILocation(line: 3786, column: 47, scope: !5723)
!5744 = !DILocation(line: 3786, column: 53, scope: !1670)
!5745 = !{!2962, !2523, i64 144}
!5746 = !DILocation(line: 3786, column: 13, scope: !5727)
!5747 = !DILocation(line: 3787, column: 16, scope: !1670)
!5748 = !DILocation(line: 3787, column: 22, scope: !1670)
!5749 = !{!5718, !2523, i64 120}
!5750 = !DILocation(line: 3787, column: 33, scope: !5720)
!5751 = !DILocation(line: 3787, column: 39, scope: !1670)
!5752 = !DILocation(line: 3787, column: 50, scope: !5723)
!5753 = !DILocation(line: 3787, column: 56, scope: !1670)
!5754 = !{!2962, !2523, i64 120}
!5755 = !DILocation(line: 3787, column: 14, scope: !5727)
!5756 = !DILocation(line: 3789, column: 16, scope: !1670)
!5757 = !DILocation(line: 3789, column: 22, scope: !1670)
!5758 = !{!5718, !2523, i64 144}
!5759 = !DILocation(line: 3789, column: 14, scope: !1670)
!5760 = !DILocation(line: 3792, column: 23, scope: !1670)
!5761 = !DILocation(line: 3792, column: 29, scope: !1670)
!5762 = !{!5718, !2523, i64 16}
!5763 = !DILocation(line: 3792, column: 14, scope: !1670)
!5764 = !DILocation(line: 3792, column: 13, scope: !1670)
!5765 = !DILocation(line: 3792, column: 11, scope: !1670)
!5766 = !DILocation(line: 3824, column: 32, scope: !1670)
!5767 = !DILocation(line: 3824, column: 38, scope: !1670)
!5768 = !DILocation(line: 3825, column: 32, scope: !1670)
!5769 = !DILocation(line: 3825, column: 40, scope: !1670)
!5770 = !DILocation(line: 3824, column: 16, scope: !1670)
!5771 = !DILocation(line: 3824, column: 14, scope: !1670)
!5772 = !DILocation(line: 3827, column: 9, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !1670, file: !368, line: 3827, column: 9)
!5774 = !DILocation(line: 3827, column: 18, scope: !5773)
!5775 = !DILocation(line: 3827, column: 9, scope: !1670)
!5776 = !DILocation(line: 3828, column: 9, scope: !5773)
!5777 = !DILocation(line: 3830, column: 9, scope: !1691)
!5778 = !DILocation(line: 3830, column: 9, scope: !1670)
!5779 = !DILocation(line: 3831, column: 9, scope: !1690)
!5780 = !DILocation(line: 3831, column: 13, scope: !1690)
!5781 = !DILocation(line: 3831, column: 47, scope: !1690)
!5782 = !DILocation(line: 3831, column: 32, scope: !1690)
!5783 = !DILocation(line: 3831, column: 61, scope: !1690)
!5784 = !{!2592, !2553, i64 16}
!5785 = !DILocation(line: 3831, column: 24, scope: !1690)
!5786 = !DILocation(line: 3833, column: 9, scope: !1690)
!5787 = !DILocation(line: 3833, column: 13, scope: !1690)
!5788 = !DILocation(line: 3833, column: 45, scope: !1690)
!5789 = !DILocation(line: 3833, column: 30, scope: !1690)
!5790 = !DILocation(line: 3833, column: 57, scope: !1690)
!5791 = !DILocation(line: 3833, column: 22, scope: !1690)
!5792 = !DILocation(line: 3836, column: 14, scope: !1698)
!5793 = !DILocation(line: 3836, column: 20, scope: !1698)
!5794 = !DILocation(line: 3836, column: 26, scope: !1698)
!5795 = !DILocation(line: 3836, column: 33, scope: !1698)
!5796 = !DILocation(line: 3836, column: 13, scope: !1690)
!5797 = !DILocation(line: 3840, column: 17, scope: !1696)
!5798 = !DILocation(line: 3840, column: 28, scope: !1696)
!5799 = !DILocation(line: 3840, column: 26, scope: !1696)
!5800 = !DILocation(line: 3840, column: 17, scope: !1697)
!5801 = !DILocation(line: 3841, column: 17, scope: !1695)
!5802 = !DILocation(line: 3841, column: 22, scope: !5803)
!5803 = !DILexicalBlockFile(scope: !1694, file: !368, discriminator: 1)
!5804 = !DILocation(line: 3841, column: 32, scope: !1694)
!5805 = !DILocation(line: 3841, column: 62, scope: !1694)
!5806 = !DILocation(line: 3841, column: 81, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !1694, file: !368, line: 3841, column: 78)
!5808 = !DILocation(line: 3841, column: 98, scope: !5807)
!5809 = !DILocation(line: 3841, column: 78, scope: !5807)
!5810 = !DILocation(line: 3841, column: 108, scope: !5807)
!5811 = !DILocation(line: 3841, column: 78, scope: !1694)
!5812 = !DILocation(line: 3841, column: 78, scope: !5813)
!5813 = !DILexicalBlockFile(scope: !1694, file: !368, discriminator: 2)
!5814 = !DILocation(line: 3841, column: 139, scope: !5815)
!5815 = !DILexicalBlockFile(scope: !5807, file: !368, discriminator: 3)
!5816 = !DILocation(line: 3841, column: 157, scope: !5807)
!5817 = !DILocation(line: 3841, column: 167, scope: !5807)
!5818 = !DILocation(line: 3841, column: 192, scope: !5807)
!5819 = !DILocation(line: 3841, column: 123, scope: !5807)
!5820 = !DILocation(line: 3841, column: 211, scope: !5821)
!5821 = !DILexicalBlockFile(scope: !1695, file: !368, discriminator: 4)
!5822 = !DILocation(line: 3841, column: 211, scope: !1694)
!5823 = !DILocation(line: 3841, column: 211, scope: !5824)
!5824 = !DILexicalBlockFile(scope: !1694, file: !368, discriminator: 5)
!5825 = !DILocation(line: 3842, column: 30, scope: !1695)
!5826 = !DILocation(line: 3844, column: 34, scope: !1695)
!5827 = !DILocation(line: 3845, column: 34, scope: !1695)
!5828 = !DILocation(line: 3845, column: 43, scope: !1695)
!5829 = !DILocation(line: 3846, column: 34, scope: !1695)
!5830 = !DILocation(line: 3842, column: 17, scope: !1695)
!5831 = !DILocation(line: 3847, column: 17, scope: !1695)
!5832 = !DILocation(line: 3849, column: 9, scope: !1697)
!5833 = !DILocation(line: 3849, column: 20, scope: !1702)
!5834 = !DILocation(line: 3849, column: 32, scope: !1702)
!5835 = !DILocation(line: 3849, column: 29, scope: !1702)
!5836 = !DILocation(line: 3849, column: 20, scope: !1698)
!5837 = !DILocation(line: 3850, column: 13, scope: !1701)
!5838 = !DILocation(line: 3850, column: 18, scope: !5839)
!5839 = !DILexicalBlockFile(scope: !1700, file: !368, discriminator: 1)
!5840 = !DILocation(line: 3850, column: 28, scope: !1700)
!5841 = !DILocation(line: 3850, column: 58, scope: !1700)
!5842 = !DILocation(line: 3850, column: 77, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !1700, file: !368, line: 3850, column: 74)
!5844 = !DILocation(line: 3850, column: 94, scope: !5843)
!5845 = !DILocation(line: 3850, column: 74, scope: !5843)
!5846 = !DILocation(line: 3850, column: 104, scope: !5843)
!5847 = !DILocation(line: 3850, column: 74, scope: !1700)
!5848 = !DILocation(line: 3850, column: 74, scope: !5849)
!5849 = !DILexicalBlockFile(scope: !1700, file: !368, discriminator: 2)
!5850 = !DILocation(line: 3850, column: 135, scope: !5851)
!5851 = !DILexicalBlockFile(scope: !5843, file: !368, discriminator: 3)
!5852 = !DILocation(line: 3850, column: 153, scope: !5843)
!5853 = !DILocation(line: 3850, column: 163, scope: !5843)
!5854 = !DILocation(line: 3850, column: 188, scope: !5843)
!5855 = !DILocation(line: 3850, column: 119, scope: !5843)
!5856 = !DILocation(line: 3850, column: 207, scope: !5857)
!5857 = !DILexicalBlockFile(scope: !1701, file: !368, discriminator: 4)
!5858 = !DILocation(line: 3850, column: 207, scope: !1700)
!5859 = !DILocation(line: 3850, column: 207, scope: !5860)
!5860 = !DILexicalBlockFile(scope: !1700, file: !368, discriminator: 5)
!5861 = !DILocation(line: 3851, column: 26, scope: !1701)
!5862 = !DILocation(line: 3853, column: 22, scope: !1701)
!5863 = !DILocation(line: 3854, column: 22, scope: !1701)
!5864 = !DILocation(line: 3854, column: 31, scope: !1701)
!5865 = !DILocation(line: 3855, column: 22, scope: !1701)
!5866 = !DILocation(line: 3851, column: 13, scope: !1701)
!5867 = !DILocation(line: 3856, column: 13, scope: !1701)
!5868 = !DILocation(line: 3858, column: 5, scope: !1691)
!5869 = !DILocation(line: 3858, column: 5, scope: !5870)
!5870 = !DILexicalBlockFile(scope: !1691, file: !368, discriminator: 1)
!5871 = !DILocation(line: 3858, column: 5, scope: !1690)
!5872 = !DILocation(line: 3860, column: 31, scope: !1670)
!5873 = !DILocation(line: 3861, column: 24, scope: !1670)
!5874 = !DILocation(line: 3866, column: 24, scope: !1670)
!5875 = !DILocation(line: 3866, column: 30, scope: !1670)
!5876 = !DILocation(line: 3867, column: 24, scope: !1670)
!5877 = !DILocation(line: 3868, column: 24, scope: !1670)
!5878 = !DILocation(line: 3869, column: 24, scope: !1670)
!5879 = !DILocation(line: 3860, column: 14, scope: !1670)
!5880 = !DILocation(line: 3860, column: 12, scope: !1670)
!5881 = !DILocation(line: 3871, column: 9, scope: !1705)
!5882 = !DILocation(line: 3871, column: 16, scope: !1705)
!5883 = !DILocation(line: 3871, column: 30, scope: !1705)
!5884 = !DILocation(line: 3871, column: 33, scope: !5885)
!5885 = !DILexicalBlockFile(scope: !1705, file: !368, discriminator: 1)
!5886 = !DILocation(line: 3871, column: 9, scope: !1670)
!5887 = !DILocation(line: 3872, column: 9, scope: !1704)
!5888 = !DILocation(line: 3872, column: 19, scope: !1704)
!5889 = !DILocation(line: 3872, column: 52, scope: !1704)
!5890 = !DILocation(line: 3873, column: 52, scope: !1704)
!5891 = !DILocation(line: 3874, column: 52, scope: !1704)
!5892 = !DILocation(line: 3875, column: 52, scope: !1704)
!5893 = !DILocation(line: 3872, column: 23, scope: !1704)
!5894 = !DILocation(line: 3883, column: 13, scope: !1709)
!5895 = !DILocation(line: 3883, column: 15, scope: !1709)
!5896 = !DILocation(line: 3883, column: 29, scope: !1709)
!5897 = !DILocation(line: 3883, column: 32, scope: !5898)
!5898 = !DILexicalBlockFile(scope: !1709, file: !368, discriminator: 1)
!5899 = !DILocation(line: 3883, column: 37, scope: !1709)
!5900 = !DILocation(line: 3883, column: 34, scope: !1709)
!5901 = !DILocation(line: 3883, column: 13, scope: !1704)
!5902 = !DILocation(line: 3884, column: 13, scope: !1708)
!5903 = !DILocation(line: 3884, column: 18, scope: !5904)
!5904 = !DILexicalBlockFile(scope: !1707, file: !368, discriminator: 1)
!5905 = !DILocation(line: 3884, column: 28, scope: !1707)
!5906 = !DILocation(line: 3884, column: 58, scope: !1707)
!5907 = !DILocation(line: 3884, column: 75, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !1707, file: !368, line: 3884, column: 72)
!5909 = !DILocation(line: 3884, column: 92, scope: !5908)
!5910 = !DILocation(line: 3884, column: 72, scope: !5908)
!5911 = !DILocation(line: 3884, column: 102, scope: !5908)
!5912 = !DILocation(line: 3884, column: 72, scope: !1707)
!5913 = !DILocation(line: 3884, column: 72, scope: !5914)
!5914 = !DILexicalBlockFile(scope: !1707, file: !368, discriminator: 2)
!5915 = !DILocation(line: 3884, column: 133, scope: !5916)
!5916 = !DILexicalBlockFile(scope: !5908, file: !368, discriminator: 3)
!5917 = !DILocation(line: 3884, column: 151, scope: !5908)
!5918 = !DILocation(line: 3884, column: 161, scope: !5908)
!5919 = !DILocation(line: 3884, column: 186, scope: !5908)
!5920 = !DILocation(line: 3884, column: 117, scope: !5908)
!5921 = !DILocation(line: 3884, column: 205, scope: !5922)
!5922 = !DILexicalBlockFile(scope: !1708, file: !368, discriminator: 4)
!5923 = !DILocation(line: 3884, column: 205, scope: !1707)
!5924 = !DILocation(line: 3884, column: 205, scope: !5925)
!5925 = !DILexicalBlockFile(scope: !1707, file: !368, discriminator: 5)
!5926 = !DILocation(line: 3885, column: 13, scope: !1708)
!5927 = !DILocation(line: 3885, column: 18, scope: !5928)
!5928 = !DILexicalBlockFile(scope: !1711, file: !368, discriminator: 1)
!5929 = !DILocation(line: 3885, column: 28, scope: !1711)
!5930 = !DILocation(line: 3885, column: 58, scope: !1711)
!5931 = !DILocation(line: 3885, column: 77, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !1711, file: !368, line: 3885, column: 74)
!5933 = !DILocation(line: 3885, column: 94, scope: !5932)
!5934 = !DILocation(line: 3885, column: 74, scope: !5932)
!5935 = !DILocation(line: 3885, column: 104, scope: !5932)
!5936 = !DILocation(line: 3885, column: 74, scope: !1711)
!5937 = !DILocation(line: 3885, column: 74, scope: !5938)
!5938 = !DILexicalBlockFile(scope: !1711, file: !368, discriminator: 2)
!5939 = !DILocation(line: 3885, column: 135, scope: !5940)
!5940 = !DILexicalBlockFile(scope: !5932, file: !368, discriminator: 3)
!5941 = !DILocation(line: 3885, column: 153, scope: !5932)
!5942 = !DILocation(line: 3885, column: 163, scope: !5932)
!5943 = !DILocation(line: 3885, column: 188, scope: !5932)
!5944 = !DILocation(line: 3885, column: 119, scope: !5932)
!5945 = !DILocation(line: 3885, column: 207, scope: !5922)
!5946 = !DILocation(line: 3885, column: 207, scope: !1711)
!5947 = !DILocation(line: 3885, column: 207, scope: !5948)
!5948 = !DILexicalBlockFile(scope: !1711, file: !368, discriminator: 5)
!5949 = !DILocation(line: 3886, column: 20, scope: !1708)
!5950 = !DILocation(line: 3886, column: 13, scope: !1708)
!5951 = !DILocation(line: 3888, column: 9, scope: !1704)
!5952 = !DILocation(line: 3888, column: 14, scope: !5953)
!5953 = !DILexicalBlockFile(scope: !1713, file: !368, discriminator: 1)
!5954 = !DILocation(line: 3888, column: 24, scope: !1713)
!5955 = !DILocation(line: 3888, column: 54, scope: !1713)
!5956 = !DILocation(line: 3888, column: 66, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !1713, file: !368, line: 3888, column: 63)
!5958 = !DILocation(line: 3888, column: 83, scope: !5957)
!5959 = !DILocation(line: 3888, column: 63, scope: !5957)
!5960 = !DILocation(line: 3888, column: 93, scope: !5957)
!5961 = !DILocation(line: 3888, column: 63, scope: !1713)
!5962 = !DILocation(line: 3888, column: 63, scope: !5963)
!5963 = !DILexicalBlockFile(scope: !1713, file: !368, discriminator: 2)
!5964 = !DILocation(line: 3888, column: 124, scope: !5965)
!5965 = !DILexicalBlockFile(scope: !5957, file: !368, discriminator: 3)
!5966 = !DILocation(line: 3888, column: 142, scope: !5957)
!5967 = !DILocation(line: 3888, column: 152, scope: !5957)
!5968 = !DILocation(line: 3888, column: 177, scope: !5957)
!5969 = !DILocation(line: 3888, column: 108, scope: !5957)
!5970 = !DILocation(line: 3888, column: 196, scope: !5971)
!5971 = !DILexicalBlockFile(scope: !1704, file: !368, discriminator: 4)
!5972 = !DILocation(line: 3888, column: 196, scope: !1713)
!5973 = !DILocation(line: 3888, column: 196, scope: !5974)
!5974 = !DILexicalBlockFile(scope: !1713, file: !368, discriminator: 5)
!5975 = !DILocation(line: 3889, column: 5, scope: !1705)
!5976 = !DILocation(line: 3889, column: 5, scope: !5885)
!5977 = !DILocation(line: 3889, column: 5, scope: !1704)
!5978 = !DILocation(line: 3891, column: 26, scope: !1670)
!5979 = !DILocation(line: 3891, column: 34, scope: !1670)
!5980 = !DILocation(line: 3892, column: 26, scope: !1670)
!5981 = !DILocation(line: 3892, column: 35, scope: !1670)
!5982 = !DILocation(line: 3892, column: 46, scope: !1670)
!5983 = !DILocation(line: 3891, column: 12, scope: !1670)
!5984 = !DILocation(line: 3891, column: 5, scope: !1670)
!5985 = !DILocation(line: 3893, column: 1, scope: !1670)
!5986 = !DILocation(line: 3896, column: 39, scope: !1798)
!5987 = !DILocation(line: 3896, column: 55, scope: !1798)
!5988 = !DILocation(line: 3896, column: 68, scope: !1798)
!5989 = !DILocation(line: 3898, column: 5, scope: !1798)
!5990 = !DILocation(line: 3898, column: 14, scope: !5991)
!5991 = !DILexicalBlockFile(scope: !1807, file: !368, discriminator: 1)
!5992 = !DILocation(line: 3898, column: 20, scope: !1807)
!5993 = !{!5718, !2523, i64 104}
!5994 = !DILocation(line: 3898, column: 14, scope: !1807)
!5995 = !DILocation(line: 3898, column: 14, scope: !1808)
!5996 = !DILocation(line: 3898, column: 32, scope: !5997)
!5997 = !DILexicalBlockFile(scope: !1806, file: !368, discriminator: 2)
!5998 = !DILocation(line: 3898, column: 36, scope: !1806)
!5999 = !DILocation(line: 3898, column: 43, scope: !1806)
!6000 = !DILocation(line: 3898, column: 62, scope: !1806)
!6001 = !DILocation(line: 3898, column: 68, scope: !1806)
!6002 = !DILocation(line: 3898, column: 79, scope: !1806)
!6003 = !DILocation(line: 3898, column: 89, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !1806, file: !368, line: 3898, column: 89)
!6005 = !DILocation(line: 3898, column: 89, scope: !1806)
!6006 = !DILocation(line: 3898, column: 102, scope: !6007)
!6007 = !DILexicalBlockFile(scope: !6004, file: !368, discriminator: 4)
!6008 = !DILocation(line: 3898, column: 95, scope: !6004)
!6009 = !DILocation(line: 3898, column: 108, scope: !6010)
!6010 = !DILexicalBlockFile(scope: !1807, file: !368, discriminator: 5)
!6011 = !DILocation(line: 3898, column: 108, scope: !6012)
!6012 = !DILexicalBlockFile(scope: !6013, file: !368, discriminator: 7)
!6013 = !DILexicalBlockFile(scope: !1807, file: !368, discriminator: 6)
!6014 = !DILocation(line: 3898, column: 108, scope: !1806)
!6015 = !DILocation(line: 3898, column: 110, scope: !6016)
!6016 = !DILexicalBlockFile(scope: !6017, file: !368, discriminator: 8)
!6017 = !DILexicalBlockFile(scope: !1808, file: !368, discriminator: 3)
!6018 = !DILocation(line: 3899, column: 5, scope: !1798)
!6019 = !DILocation(line: 3899, column: 14, scope: !6020)
!6020 = !DILexicalBlockFile(scope: !1811, file: !368, discriminator: 1)
!6021 = !DILocation(line: 3899, column: 20, scope: !1811)
!6022 = !DILocation(line: 3899, column: 14, scope: !1811)
!6023 = !DILocation(line: 3899, column: 14, scope: !1812)
!6024 = !DILocation(line: 3899, column: 31, scope: !6025)
!6025 = !DILexicalBlockFile(scope: !1810, file: !368, discriminator: 2)
!6026 = !DILocation(line: 3899, column: 35, scope: !1810)
!6027 = !DILocation(line: 3899, column: 42, scope: !1810)
!6028 = !DILocation(line: 3899, column: 61, scope: !1810)
!6029 = !DILocation(line: 3899, column: 67, scope: !1810)
!6030 = !DILocation(line: 3899, column: 77, scope: !1810)
!6031 = !DILocation(line: 3899, column: 87, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !1810, file: !368, line: 3899, column: 87)
!6033 = !DILocation(line: 3899, column: 87, scope: !1810)
!6034 = !DILocation(line: 3899, column: 100, scope: !6035)
!6035 = !DILexicalBlockFile(scope: !6032, file: !368, discriminator: 4)
!6036 = !DILocation(line: 3899, column: 93, scope: !6032)
!6037 = !DILocation(line: 3899, column: 106, scope: !6038)
!6038 = !DILexicalBlockFile(scope: !1811, file: !368, discriminator: 5)
!6039 = !DILocation(line: 3899, column: 106, scope: !6040)
!6040 = !DILexicalBlockFile(scope: !6041, file: !368, discriminator: 7)
!6041 = !DILexicalBlockFile(scope: !1811, file: !368, discriminator: 6)
!6042 = !DILocation(line: 3899, column: 106, scope: !1810)
!6043 = !DILocation(line: 3899, column: 108, scope: !6044)
!6044 = !DILexicalBlockFile(scope: !6045, file: !368, discriminator: 8)
!6045 = !DILexicalBlockFile(scope: !1812, file: !368, discriminator: 3)
!6046 = !DILocation(line: 3900, column: 5, scope: !1798)
!6047 = !DILocation(line: 3900, column: 14, scope: !6048)
!6048 = !DILexicalBlockFile(scope: !1815, file: !368, discriminator: 1)
!6049 = !DILocation(line: 3900, column: 20, scope: !1815)
!6050 = !DILocation(line: 3900, column: 14, scope: !1815)
!6051 = !DILocation(line: 3900, column: 14, scope: !1816)
!6052 = !DILocation(line: 3900, column: 31, scope: !6053)
!6053 = !DILexicalBlockFile(scope: !1814, file: !368, discriminator: 2)
!6054 = !DILocation(line: 3900, column: 35, scope: !1814)
!6055 = !DILocation(line: 3900, column: 42, scope: !1814)
!6056 = !DILocation(line: 3900, column: 61, scope: !1814)
!6057 = !DILocation(line: 3900, column: 67, scope: !1814)
!6058 = !DILocation(line: 3900, column: 77, scope: !1814)
!6059 = !DILocation(line: 3900, column: 87, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !1814, file: !368, line: 3900, column: 87)
!6061 = !DILocation(line: 3900, column: 87, scope: !1814)
!6062 = !DILocation(line: 3900, column: 100, scope: !6063)
!6063 = !DILexicalBlockFile(scope: !6060, file: !368, discriminator: 4)
!6064 = !DILocation(line: 3900, column: 93, scope: !6060)
!6065 = !DILocation(line: 3900, column: 106, scope: !6066)
!6066 = !DILexicalBlockFile(scope: !1815, file: !368, discriminator: 5)
!6067 = !DILocation(line: 3900, column: 106, scope: !6068)
!6068 = !DILexicalBlockFile(scope: !6069, file: !368, discriminator: 7)
!6069 = !DILexicalBlockFile(scope: !1815, file: !368, discriminator: 6)
!6070 = !DILocation(line: 3900, column: 106, scope: !1814)
!6071 = !DILocation(line: 3900, column: 108, scope: !6072)
!6072 = !DILexicalBlockFile(scope: !6073, file: !368, discriminator: 8)
!6073 = !DILexicalBlockFile(scope: !1816, file: !368, discriminator: 3)
!6074 = !DILocation(line: 3901, column: 5, scope: !1798)
!6075 = !DILocation(line: 3901, column: 14, scope: !6076)
!6076 = !DILexicalBlockFile(scope: !1819, file: !368, discriminator: 1)
!6077 = !DILocation(line: 3901, column: 20, scope: !1819)
!6078 = !DILocation(line: 3901, column: 14, scope: !1819)
!6079 = !DILocation(line: 3901, column: 14, scope: !1820)
!6080 = !DILocation(line: 3901, column: 32, scope: !6081)
!6081 = !DILexicalBlockFile(scope: !1818, file: !368, discriminator: 2)
!6082 = !DILocation(line: 3901, column: 36, scope: !1818)
!6083 = !DILocation(line: 3901, column: 43, scope: !1818)
!6084 = !DILocation(line: 3901, column: 62, scope: !1818)
!6085 = !DILocation(line: 3901, column: 68, scope: !1818)
!6086 = !DILocation(line: 3901, column: 79, scope: !1818)
!6087 = !DILocation(line: 3901, column: 89, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !1818, file: !368, line: 3901, column: 89)
!6089 = !DILocation(line: 3901, column: 89, scope: !1818)
!6090 = !DILocation(line: 3901, column: 102, scope: !6091)
!6091 = !DILexicalBlockFile(scope: !6088, file: !368, discriminator: 4)
!6092 = !DILocation(line: 3901, column: 95, scope: !6088)
!6093 = !DILocation(line: 3901, column: 108, scope: !6094)
!6094 = !DILexicalBlockFile(scope: !1819, file: !368, discriminator: 5)
!6095 = !DILocation(line: 3901, column: 108, scope: !6096)
!6096 = !DILexicalBlockFile(scope: !6097, file: !368, discriminator: 7)
!6097 = !DILexicalBlockFile(scope: !1819, file: !368, discriminator: 6)
!6098 = !DILocation(line: 3901, column: 108, scope: !1818)
!6099 = !DILocation(line: 3901, column: 110, scope: !6100)
!6100 = !DILexicalBlockFile(scope: !6101, file: !368, discriminator: 8)
!6101 = !DILexicalBlockFile(scope: !1820, file: !368, discriminator: 3)
!6102 = !DILocation(line: 3902, column: 5, scope: !1798)
!6103 = !DILocation(line: 3902, column: 14, scope: !6104)
!6104 = !DILexicalBlockFile(scope: !1823, file: !368, discriminator: 1)
!6105 = !DILocation(line: 3902, column: 20, scope: !1823)
!6106 = !DILocation(line: 3902, column: 14, scope: !1823)
!6107 = !DILocation(line: 3902, column: 14, scope: !1824)
!6108 = !DILocation(line: 3902, column: 32, scope: !6109)
!6109 = !DILexicalBlockFile(scope: !1822, file: !368, discriminator: 2)
!6110 = !DILocation(line: 3902, column: 36, scope: !1822)
!6111 = !DILocation(line: 3902, column: 43, scope: !1822)
!6112 = !DILocation(line: 3902, column: 62, scope: !1822)
!6113 = !DILocation(line: 3902, column: 68, scope: !1822)
!6114 = !DILocation(line: 3902, column: 79, scope: !1822)
!6115 = !DILocation(line: 3902, column: 89, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !1822, file: !368, line: 3902, column: 89)
!6117 = !DILocation(line: 3902, column: 89, scope: !1822)
!6118 = !DILocation(line: 3902, column: 102, scope: !6119)
!6119 = !DILexicalBlockFile(scope: !6116, file: !368, discriminator: 4)
!6120 = !DILocation(line: 3902, column: 95, scope: !6116)
!6121 = !DILocation(line: 3902, column: 108, scope: !6122)
!6122 = !DILexicalBlockFile(scope: !1823, file: !368, discriminator: 5)
!6123 = !DILocation(line: 3902, column: 108, scope: !6124)
!6124 = !DILexicalBlockFile(scope: !6125, file: !368, discriminator: 7)
!6125 = !DILexicalBlockFile(scope: !1823, file: !368, discriminator: 6)
!6126 = !DILocation(line: 3902, column: 108, scope: !1822)
!6127 = !DILocation(line: 3902, column: 110, scope: !6128)
!6128 = !DILexicalBlockFile(scope: !6129, file: !368, discriminator: 8)
!6129 = !DILexicalBlockFile(scope: !1824, file: !368, discriminator: 3)
!6130 = !DILocation(line: 3903, column: 5, scope: !1798)
!6131 = !DILocation(line: 3903, column: 14, scope: !6132)
!6132 = !DILexicalBlockFile(scope: !1827, file: !368, discriminator: 1)
!6133 = !DILocation(line: 3903, column: 20, scope: !1827)
!6134 = !DILocation(line: 3903, column: 14, scope: !1827)
!6135 = !DILocation(line: 3903, column: 14, scope: !1828)
!6136 = !DILocation(line: 3903, column: 34, scope: !6137)
!6137 = !DILexicalBlockFile(scope: !1826, file: !368, discriminator: 2)
!6138 = !DILocation(line: 3903, column: 38, scope: !1826)
!6139 = !DILocation(line: 3903, column: 45, scope: !1826)
!6140 = !DILocation(line: 3903, column: 64, scope: !1826)
!6141 = !DILocation(line: 3903, column: 70, scope: !1826)
!6142 = !DILocation(line: 3903, column: 83, scope: !1826)
!6143 = !DILocation(line: 3903, column: 93, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !1826, file: !368, line: 3903, column: 93)
!6145 = !DILocation(line: 3903, column: 93, scope: !1826)
!6146 = !DILocation(line: 3903, column: 106, scope: !6147)
!6147 = !DILexicalBlockFile(scope: !6144, file: !368, discriminator: 4)
!6148 = !DILocation(line: 3903, column: 99, scope: !6144)
!6149 = !DILocation(line: 3903, column: 112, scope: !6150)
!6150 = !DILexicalBlockFile(scope: !1827, file: !368, discriminator: 5)
!6151 = !DILocation(line: 3903, column: 112, scope: !6152)
!6152 = !DILexicalBlockFile(scope: !6153, file: !368, discriminator: 7)
!6153 = !DILexicalBlockFile(scope: !1827, file: !368, discriminator: 6)
!6154 = !DILocation(line: 3903, column: 112, scope: !1826)
!6155 = !DILocation(line: 3903, column: 114, scope: !6156)
!6156 = !DILexicalBlockFile(scope: !6157, file: !368, discriminator: 8)
!6157 = !DILexicalBlockFile(scope: !1828, file: !368, discriminator: 3)
!6158 = !DILocation(line: 3904, column: 5, scope: !1798)
!6159 = !DILocation(line: 3904, column: 14, scope: !6160)
!6160 = !DILexicalBlockFile(scope: !1831, file: !368, discriminator: 1)
!6161 = !DILocation(line: 3904, column: 20, scope: !1831)
!6162 = !{!5718, !2523, i64 152}
!6163 = !DILocation(line: 3904, column: 14, scope: !1831)
!6164 = !DILocation(line: 3904, column: 14, scope: !1832)
!6165 = !DILocation(line: 3904, column: 34, scope: !6166)
!6166 = !DILexicalBlockFile(scope: !1830, file: !368, discriminator: 2)
!6167 = !DILocation(line: 3904, column: 38, scope: !1830)
!6168 = !DILocation(line: 3904, column: 45, scope: !1830)
!6169 = !DILocation(line: 3904, column: 64, scope: !1830)
!6170 = !DILocation(line: 3904, column: 70, scope: !1830)
!6171 = !DILocation(line: 3904, column: 83, scope: !1830)
!6172 = !DILocation(line: 3904, column: 93, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !1830, file: !368, line: 3904, column: 93)
!6174 = !DILocation(line: 3904, column: 93, scope: !1830)
!6175 = !DILocation(line: 3904, column: 106, scope: !6176)
!6176 = !DILexicalBlockFile(scope: !6173, file: !368, discriminator: 4)
!6177 = !DILocation(line: 3904, column: 99, scope: !6173)
!6178 = !DILocation(line: 3904, column: 112, scope: !6179)
!6179 = !DILexicalBlockFile(scope: !1831, file: !368, discriminator: 5)
!6180 = !DILocation(line: 3904, column: 112, scope: !6181)
!6181 = !DILexicalBlockFile(scope: !6182, file: !368, discriminator: 7)
!6182 = !DILexicalBlockFile(scope: !1831, file: !368, discriminator: 6)
!6183 = !DILocation(line: 3904, column: 112, scope: !1830)
!6184 = !DILocation(line: 3904, column: 114, scope: !6185)
!6185 = !DILexicalBlockFile(scope: !6186, file: !368, discriminator: 8)
!6186 = !DILexicalBlockFile(scope: !1832, file: !368, discriminator: 3)
!6187 = !DILocation(line: 3905, column: 5, scope: !1798)
!6188 = !DILocation(line: 3905, column: 14, scope: !6189)
!6189 = !DILexicalBlockFile(scope: !1835, file: !368, discriminator: 1)
!6190 = !DILocation(line: 3905, column: 20, scope: !1835)
!6191 = !{!5718, !2523, i64 96}
!6192 = !DILocation(line: 3905, column: 14, scope: !1835)
!6193 = !DILocation(line: 3905, column: 14, scope: !1836)
!6194 = !DILocation(line: 3905, column: 29, scope: !6195)
!6195 = !DILexicalBlockFile(scope: !1834, file: !368, discriminator: 2)
!6196 = !DILocation(line: 3905, column: 33, scope: !1834)
!6197 = !DILocation(line: 3905, column: 40, scope: !1834)
!6198 = !DILocation(line: 3905, column: 59, scope: !1834)
!6199 = !DILocation(line: 3905, column: 65, scope: !1834)
!6200 = !DILocation(line: 3905, column: 46, scope: !1834)
!6201 = !DILocation(line: 3905, column: 73, scope: !1834)
!6202 = !DILocation(line: 3905, column: 83, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !1834, file: !368, line: 3905, column: 83)
!6204 = !DILocation(line: 3905, column: 83, scope: !1834)
!6205 = !DILocation(line: 3905, column: 96, scope: !6206)
!6206 = !DILexicalBlockFile(scope: !6203, file: !368, discriminator: 4)
!6207 = !DILocation(line: 3905, column: 89, scope: !6203)
!6208 = !DILocation(line: 3905, column: 102, scope: !6209)
!6209 = !DILexicalBlockFile(scope: !1835, file: !368, discriminator: 5)
!6210 = !DILocation(line: 3905, column: 102, scope: !6211)
!6211 = !DILexicalBlockFile(scope: !6212, file: !368, discriminator: 7)
!6212 = !DILexicalBlockFile(scope: !1835, file: !368, discriminator: 6)
!6213 = !DILocation(line: 3905, column: 102, scope: !1834)
!6214 = !DILocation(line: 3905, column: 104, scope: !6215)
!6215 = !DILexicalBlockFile(scope: !6216, file: !368, discriminator: 8)
!6216 = !DILexicalBlockFile(scope: !1836, file: !368, discriminator: 3)
!6217 = !DILocation(line: 3906, column: 44, scope: !1798)
!6218 = !DILocation(line: 3906, column: 29, scope: !1798)
!6219 = !DILocation(line: 3906, column: 50, scope: !1798)
!6220 = !DILocation(line: 3906, column: 57, scope: !1798)
!6221 = !DILocation(line: 3906, column: 12, scope: !1798)
!6222 = !DILocation(line: 3906, column: 5, scope: !1798)
!6223 = !DILocation(line: 3907, column: 1, scope: !1798)
!6224 = !DILocation(line: 3910, column: 36, scope: !1837)
!6225 = !DILocation(line: 3912, column: 5, scope: !1837)
!6226 = !DILocation(line: 3912, column: 10, scope: !6227)
!6227 = !DILexicalBlockFile(scope: !1841, file: !368, discriminator: 1)
!6228 = !DILocation(line: 3912, column: 20, scope: !1841)
!6229 = !DILocation(line: 3912, column: 43, scope: !1841)
!6230 = !DILocation(line: 3912, column: 49, scope: !1841)
!6231 = !DILocation(line: 3912, column: 64, scope: !1845)
!6232 = !DILocation(line: 3912, column: 72, scope: !1845)
!6233 = !DILocation(line: 3912, column: 64, scope: !1841)
!6234 = !DILocation(line: 3912, column: 90, scope: !6235)
!6235 = !DILexicalBlockFile(scope: !1844, file: !368, discriminator: 2)
!6236 = !DILocation(line: 3912, column: 96, scope: !1844)
!6237 = !DILocation(line: 3912, column: 106, scope: !1844)
!6238 = !DILocation(line: 3912, column: 120, scope: !1844)
!6239 = !DILocation(line: 3912, column: 125, scope: !6240)
!6240 = !DILexicalBlockFile(scope: !1843, file: !368, discriminator: 4)
!6241 = !DILocation(line: 3912, column: 135, scope: !1843)
!6242 = !DILocation(line: 3912, column: 165, scope: !1843)
!6243 = !DILocation(line: 3912, column: 183, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !1843, file: !368, line: 3912, column: 180)
!6245 = !DILocation(line: 3912, column: 200, scope: !6244)
!6246 = !DILocation(line: 3912, column: 180, scope: !6244)
!6247 = !DILocation(line: 3912, column: 210, scope: !6244)
!6248 = !DILocation(line: 3912, column: 180, scope: !1843)
!6249 = !DILocation(line: 3912, column: 180, scope: !6250)
!6250 = !DILexicalBlockFile(scope: !1843, file: !368, discriminator: 5)
!6251 = !DILocation(line: 3912, column: 241, scope: !6252)
!6252 = !DILexicalBlockFile(scope: !6244, file: !368, discriminator: 6)
!6253 = !DILocation(line: 3912, column: 259, scope: !6244)
!6254 = !DILocation(line: 3912, column: 269, scope: !6244)
!6255 = !DILocation(line: 3912, column: 294, scope: !6244)
!6256 = !DILocation(line: 3912, column: 225, scope: !6244)
!6257 = !DILocation(line: 3912, column: 313, scope: !6258)
!6258 = !DILexicalBlockFile(scope: !1844, file: !368, discriminator: 7)
!6259 = !DILocation(line: 3912, column: 313, scope: !1843)
!6260 = !DILocation(line: 3912, column: 313, scope: !6261)
!6261 = !DILexicalBlockFile(scope: !1843, file: !368, discriminator: 8)
!6262 = !DILocation(line: 3912, column: 326, scope: !6263)
!6263 = !DILexicalBlockFile(scope: !1844, file: !368, discriminator: 9)
!6264 = !DILocation(line: 3912, column: 328, scope: !6265)
!6265 = !DILexicalBlockFile(scope: !6266, file: !368, discriminator: 10)
!6266 = !DILexicalBlockFile(scope: !1837, file: !368, discriminator: 3)
!6267 = !DILocation(line: 3912, column: 328, scope: !1841)
!6268 = !DILocation(line: 3913, column: 5, scope: !1837)
!6269 = !DILocation(line: 3913, column: 10, scope: !6270)
!6270 = !DILexicalBlockFile(scope: !1847, file: !368, discriminator: 1)
!6271 = !DILocation(line: 3913, column: 20, scope: !1847)
!6272 = !DILocation(line: 3913, column: 43, scope: !1847)
!6273 = !DILocation(line: 3913, column: 49, scope: !1847)
!6274 = !DILocation(line: 3913, column: 63, scope: !1851)
!6275 = !DILocation(line: 3913, column: 71, scope: !1851)
!6276 = !DILocation(line: 3913, column: 63, scope: !1847)
!6277 = !DILocation(line: 3913, column: 89, scope: !6278)
!6278 = !DILexicalBlockFile(scope: !1850, file: !368, discriminator: 2)
!6279 = !DILocation(line: 3913, column: 95, scope: !1850)
!6280 = !DILocation(line: 3913, column: 104, scope: !1850)
!6281 = !DILocation(line: 3913, column: 118, scope: !1850)
!6282 = !DILocation(line: 3913, column: 123, scope: !6283)
!6283 = !DILexicalBlockFile(scope: !1849, file: !368, discriminator: 4)
!6284 = !DILocation(line: 3913, column: 133, scope: !1849)
!6285 = !DILocation(line: 3913, column: 163, scope: !1849)
!6286 = !DILocation(line: 3913, column: 181, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !1849, file: !368, line: 3913, column: 178)
!6288 = !DILocation(line: 3913, column: 198, scope: !6287)
!6289 = !DILocation(line: 3913, column: 178, scope: !6287)
!6290 = !DILocation(line: 3913, column: 208, scope: !6287)
!6291 = !DILocation(line: 3913, column: 178, scope: !1849)
!6292 = !DILocation(line: 3913, column: 178, scope: !6293)
!6293 = !DILexicalBlockFile(scope: !1849, file: !368, discriminator: 5)
!6294 = !DILocation(line: 3913, column: 239, scope: !6295)
!6295 = !DILexicalBlockFile(scope: !6287, file: !368, discriminator: 6)
!6296 = !DILocation(line: 3913, column: 257, scope: !6287)
!6297 = !DILocation(line: 3913, column: 267, scope: !6287)
!6298 = !DILocation(line: 3913, column: 292, scope: !6287)
!6299 = !DILocation(line: 3913, column: 223, scope: !6287)
!6300 = !DILocation(line: 3913, column: 311, scope: !6301)
!6301 = !DILexicalBlockFile(scope: !1850, file: !368, discriminator: 7)
!6302 = !DILocation(line: 3913, column: 311, scope: !1849)
!6303 = !DILocation(line: 3913, column: 311, scope: !6304)
!6304 = !DILexicalBlockFile(scope: !1849, file: !368, discriminator: 8)
!6305 = !DILocation(line: 3913, column: 324, scope: !6306)
!6306 = !DILexicalBlockFile(scope: !1850, file: !368, discriminator: 9)
!6307 = !DILocation(line: 3913, column: 326, scope: !6265)
!6308 = !DILocation(line: 3913, column: 326, scope: !1847)
!6309 = !DILocation(line: 3914, column: 5, scope: !1837)
!6310 = !DILocation(line: 3914, column: 10, scope: !6311)
!6311 = !DILexicalBlockFile(scope: !1853, file: !368, discriminator: 1)
!6312 = !DILocation(line: 3914, column: 20, scope: !1853)
!6313 = !DILocation(line: 3914, column: 43, scope: !1853)
!6314 = !DILocation(line: 3914, column: 49, scope: !1853)
!6315 = !DILocation(line: 3914, column: 63, scope: !1857)
!6316 = !DILocation(line: 3914, column: 71, scope: !1857)
!6317 = !DILocation(line: 3914, column: 63, scope: !1853)
!6318 = !DILocation(line: 3914, column: 89, scope: !6319)
!6319 = !DILexicalBlockFile(scope: !1856, file: !368, discriminator: 2)
!6320 = !DILocation(line: 3914, column: 95, scope: !1856)
!6321 = !DILocation(line: 3914, column: 104, scope: !1856)
!6322 = !DILocation(line: 3914, column: 118, scope: !1856)
!6323 = !DILocation(line: 3914, column: 123, scope: !6324)
!6324 = !DILexicalBlockFile(scope: !1855, file: !368, discriminator: 4)
!6325 = !DILocation(line: 3914, column: 133, scope: !1855)
!6326 = !DILocation(line: 3914, column: 163, scope: !1855)
!6327 = !DILocation(line: 3914, column: 181, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !1855, file: !368, line: 3914, column: 178)
!6329 = !DILocation(line: 3914, column: 198, scope: !6328)
!6330 = !DILocation(line: 3914, column: 178, scope: !6328)
!6331 = !DILocation(line: 3914, column: 208, scope: !6328)
!6332 = !DILocation(line: 3914, column: 178, scope: !1855)
!6333 = !DILocation(line: 3914, column: 178, scope: !6334)
!6334 = !DILexicalBlockFile(scope: !1855, file: !368, discriminator: 5)
!6335 = !DILocation(line: 3914, column: 239, scope: !6336)
!6336 = !DILexicalBlockFile(scope: !6328, file: !368, discriminator: 6)
!6337 = !DILocation(line: 3914, column: 257, scope: !6328)
!6338 = !DILocation(line: 3914, column: 267, scope: !6328)
!6339 = !DILocation(line: 3914, column: 292, scope: !6328)
!6340 = !DILocation(line: 3914, column: 223, scope: !6328)
!6341 = !DILocation(line: 3914, column: 311, scope: !6342)
!6342 = !DILexicalBlockFile(scope: !1856, file: !368, discriminator: 7)
!6343 = !DILocation(line: 3914, column: 311, scope: !1855)
!6344 = !DILocation(line: 3914, column: 311, scope: !6345)
!6345 = !DILexicalBlockFile(scope: !1855, file: !368, discriminator: 8)
!6346 = !DILocation(line: 3914, column: 324, scope: !6347)
!6347 = !DILexicalBlockFile(scope: !1856, file: !368, discriminator: 9)
!6348 = !DILocation(line: 3914, column: 326, scope: !6265)
!6349 = !DILocation(line: 3914, column: 326, scope: !1853)
!6350 = !DILocation(line: 3915, column: 5, scope: !1837)
!6351 = !DILocation(line: 3915, column: 10, scope: !6352)
!6352 = !DILexicalBlockFile(scope: !1859, file: !368, discriminator: 1)
!6353 = !DILocation(line: 3915, column: 20, scope: !1859)
!6354 = !DILocation(line: 3915, column: 43, scope: !1859)
!6355 = !DILocation(line: 3915, column: 49, scope: !1859)
!6356 = !DILocation(line: 3915, column: 64, scope: !1863)
!6357 = !DILocation(line: 3915, column: 72, scope: !1863)
!6358 = !DILocation(line: 3915, column: 64, scope: !1859)
!6359 = !DILocation(line: 3915, column: 90, scope: !6360)
!6360 = !DILexicalBlockFile(scope: !1862, file: !368, discriminator: 2)
!6361 = !DILocation(line: 3915, column: 96, scope: !1862)
!6362 = !DILocation(line: 3915, column: 106, scope: !1862)
!6363 = !DILocation(line: 3915, column: 120, scope: !1862)
!6364 = !DILocation(line: 3915, column: 125, scope: !6365)
!6365 = !DILexicalBlockFile(scope: !1861, file: !368, discriminator: 4)
!6366 = !DILocation(line: 3915, column: 135, scope: !1861)
!6367 = !DILocation(line: 3915, column: 165, scope: !1861)
!6368 = !DILocation(line: 3915, column: 183, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !1861, file: !368, line: 3915, column: 180)
!6370 = !DILocation(line: 3915, column: 200, scope: !6369)
!6371 = !DILocation(line: 3915, column: 180, scope: !6369)
!6372 = !DILocation(line: 3915, column: 210, scope: !6369)
!6373 = !DILocation(line: 3915, column: 180, scope: !1861)
!6374 = !DILocation(line: 3915, column: 180, scope: !6375)
!6375 = !DILexicalBlockFile(scope: !1861, file: !368, discriminator: 5)
!6376 = !DILocation(line: 3915, column: 241, scope: !6377)
!6377 = !DILexicalBlockFile(scope: !6369, file: !368, discriminator: 6)
!6378 = !DILocation(line: 3915, column: 259, scope: !6369)
!6379 = !DILocation(line: 3915, column: 269, scope: !6369)
!6380 = !DILocation(line: 3915, column: 294, scope: !6369)
!6381 = !DILocation(line: 3915, column: 225, scope: !6369)
!6382 = !DILocation(line: 3915, column: 313, scope: !6383)
!6383 = !DILexicalBlockFile(scope: !1862, file: !368, discriminator: 7)
!6384 = !DILocation(line: 3915, column: 313, scope: !1861)
!6385 = !DILocation(line: 3915, column: 313, scope: !6386)
!6386 = !DILexicalBlockFile(scope: !1861, file: !368, discriminator: 8)
!6387 = !DILocation(line: 3915, column: 326, scope: !6388)
!6388 = !DILexicalBlockFile(scope: !1862, file: !368, discriminator: 9)
!6389 = !DILocation(line: 3915, column: 328, scope: !6265)
!6390 = !DILocation(line: 3915, column: 328, scope: !1859)
!6391 = !DILocation(line: 3916, column: 5, scope: !1837)
!6392 = !DILocation(line: 3916, column: 10, scope: !6393)
!6393 = !DILexicalBlockFile(scope: !1865, file: !368, discriminator: 1)
!6394 = !DILocation(line: 3916, column: 20, scope: !1865)
!6395 = !DILocation(line: 3916, column: 43, scope: !1865)
!6396 = !DILocation(line: 3916, column: 49, scope: !1865)
!6397 = !DILocation(line: 3916, column: 64, scope: !1869)
!6398 = !DILocation(line: 3916, column: 72, scope: !1869)
!6399 = !DILocation(line: 3916, column: 64, scope: !1865)
!6400 = !DILocation(line: 3916, column: 90, scope: !6401)
!6401 = !DILexicalBlockFile(scope: !1868, file: !368, discriminator: 2)
!6402 = !DILocation(line: 3916, column: 96, scope: !1868)
!6403 = !DILocation(line: 3916, column: 106, scope: !1868)
!6404 = !DILocation(line: 3916, column: 120, scope: !1868)
!6405 = !DILocation(line: 3916, column: 125, scope: !6406)
!6406 = !DILexicalBlockFile(scope: !1867, file: !368, discriminator: 4)
!6407 = !DILocation(line: 3916, column: 135, scope: !1867)
!6408 = !DILocation(line: 3916, column: 165, scope: !1867)
!6409 = !DILocation(line: 3916, column: 183, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !1867, file: !368, line: 3916, column: 180)
!6411 = !DILocation(line: 3916, column: 200, scope: !6410)
!6412 = !DILocation(line: 3916, column: 180, scope: !6410)
!6413 = !DILocation(line: 3916, column: 210, scope: !6410)
!6414 = !DILocation(line: 3916, column: 180, scope: !1867)
!6415 = !DILocation(line: 3916, column: 180, scope: !6416)
!6416 = !DILexicalBlockFile(scope: !1867, file: !368, discriminator: 5)
!6417 = !DILocation(line: 3916, column: 241, scope: !6418)
!6418 = !DILexicalBlockFile(scope: !6410, file: !368, discriminator: 6)
!6419 = !DILocation(line: 3916, column: 259, scope: !6410)
!6420 = !DILocation(line: 3916, column: 269, scope: !6410)
!6421 = !DILocation(line: 3916, column: 294, scope: !6410)
!6422 = !DILocation(line: 3916, column: 225, scope: !6410)
!6423 = !DILocation(line: 3916, column: 313, scope: !6424)
!6424 = !DILexicalBlockFile(scope: !1868, file: !368, discriminator: 7)
!6425 = !DILocation(line: 3916, column: 313, scope: !1867)
!6426 = !DILocation(line: 3916, column: 313, scope: !6427)
!6427 = !DILexicalBlockFile(scope: !1867, file: !368, discriminator: 8)
!6428 = !DILocation(line: 3916, column: 326, scope: !6429)
!6429 = !DILexicalBlockFile(scope: !1868, file: !368, discriminator: 9)
!6430 = !DILocation(line: 3916, column: 328, scope: !6265)
!6431 = !DILocation(line: 3916, column: 328, scope: !1865)
!6432 = !DILocation(line: 3917, column: 5, scope: !1837)
!6433 = !DILocation(line: 3917, column: 10, scope: !6434)
!6434 = !DILexicalBlockFile(scope: !1871, file: !368, discriminator: 1)
!6435 = !DILocation(line: 3917, column: 20, scope: !1871)
!6436 = !DILocation(line: 3917, column: 43, scope: !1871)
!6437 = !DILocation(line: 3917, column: 49, scope: !1871)
!6438 = !DILocation(line: 3917, column: 66, scope: !1875)
!6439 = !DILocation(line: 3917, column: 74, scope: !1875)
!6440 = !DILocation(line: 3917, column: 66, scope: !1871)
!6441 = !DILocation(line: 3917, column: 92, scope: !6442)
!6442 = !DILexicalBlockFile(scope: !1874, file: !368, discriminator: 2)
!6443 = !DILocation(line: 3917, column: 98, scope: !1874)
!6444 = !DILocation(line: 3917, column: 110, scope: !1874)
!6445 = !DILocation(line: 3917, column: 124, scope: !1874)
!6446 = !DILocation(line: 3917, column: 129, scope: !6447)
!6447 = !DILexicalBlockFile(scope: !1873, file: !368, discriminator: 4)
!6448 = !DILocation(line: 3917, column: 139, scope: !1873)
!6449 = !DILocation(line: 3917, column: 169, scope: !1873)
!6450 = !DILocation(line: 3917, column: 187, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !1873, file: !368, line: 3917, column: 184)
!6452 = !DILocation(line: 3917, column: 204, scope: !6451)
!6453 = !DILocation(line: 3917, column: 184, scope: !6451)
!6454 = !DILocation(line: 3917, column: 214, scope: !6451)
!6455 = !DILocation(line: 3917, column: 184, scope: !1873)
!6456 = !DILocation(line: 3917, column: 184, scope: !6457)
!6457 = !DILexicalBlockFile(scope: !1873, file: !368, discriminator: 5)
!6458 = !DILocation(line: 3917, column: 245, scope: !6459)
!6459 = !DILexicalBlockFile(scope: !6451, file: !368, discriminator: 6)
!6460 = !DILocation(line: 3917, column: 263, scope: !6451)
!6461 = !DILocation(line: 3917, column: 273, scope: !6451)
!6462 = !DILocation(line: 3917, column: 298, scope: !6451)
!6463 = !DILocation(line: 3917, column: 229, scope: !6451)
!6464 = !DILocation(line: 3917, column: 317, scope: !6465)
!6465 = !DILexicalBlockFile(scope: !1874, file: !368, discriminator: 7)
!6466 = !DILocation(line: 3917, column: 317, scope: !1873)
!6467 = !DILocation(line: 3917, column: 317, scope: !6468)
!6468 = !DILexicalBlockFile(scope: !1873, file: !368, discriminator: 8)
!6469 = !DILocation(line: 3917, column: 330, scope: !6470)
!6470 = !DILexicalBlockFile(scope: !1874, file: !368, discriminator: 9)
!6471 = !DILocation(line: 3917, column: 332, scope: !6265)
!6472 = !DILocation(line: 3917, column: 332, scope: !1871)
!6473 = !DILocation(line: 3918, column: 5, scope: !1837)
!6474 = !DILocation(line: 3918, column: 10, scope: !6475)
!6475 = !DILexicalBlockFile(scope: !1877, file: !368, discriminator: 1)
!6476 = !DILocation(line: 3918, column: 20, scope: !1877)
!6477 = !DILocation(line: 3918, column: 43, scope: !1877)
!6478 = !DILocation(line: 3918, column: 49, scope: !1877)
!6479 = !DILocation(line: 3918, column: 66, scope: !1881)
!6480 = !DILocation(line: 3918, column: 74, scope: !1881)
!6481 = !DILocation(line: 3918, column: 66, scope: !1877)
!6482 = !DILocation(line: 3918, column: 92, scope: !6483)
!6483 = !DILexicalBlockFile(scope: !1880, file: !368, discriminator: 2)
!6484 = !DILocation(line: 3918, column: 98, scope: !1880)
!6485 = !DILocation(line: 3918, column: 110, scope: !1880)
!6486 = !DILocation(line: 3918, column: 124, scope: !1880)
!6487 = !DILocation(line: 3918, column: 129, scope: !6488)
!6488 = !DILexicalBlockFile(scope: !1879, file: !368, discriminator: 4)
!6489 = !DILocation(line: 3918, column: 139, scope: !1879)
!6490 = !DILocation(line: 3918, column: 169, scope: !1879)
!6491 = !DILocation(line: 3918, column: 187, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !1879, file: !368, line: 3918, column: 184)
!6493 = !DILocation(line: 3918, column: 204, scope: !6492)
!6494 = !DILocation(line: 3918, column: 184, scope: !6492)
!6495 = !DILocation(line: 3918, column: 214, scope: !6492)
!6496 = !DILocation(line: 3918, column: 184, scope: !1879)
!6497 = !DILocation(line: 3918, column: 184, scope: !6498)
!6498 = !DILexicalBlockFile(scope: !1879, file: !368, discriminator: 5)
!6499 = !DILocation(line: 3918, column: 245, scope: !6500)
!6500 = !DILexicalBlockFile(scope: !6492, file: !368, discriminator: 6)
!6501 = !DILocation(line: 3918, column: 263, scope: !6492)
!6502 = !DILocation(line: 3918, column: 273, scope: !6492)
!6503 = !DILocation(line: 3918, column: 298, scope: !6492)
!6504 = !DILocation(line: 3918, column: 229, scope: !6492)
!6505 = !DILocation(line: 3918, column: 317, scope: !6506)
!6506 = !DILexicalBlockFile(scope: !1880, file: !368, discriminator: 7)
!6507 = !DILocation(line: 3918, column: 317, scope: !1879)
!6508 = !DILocation(line: 3918, column: 317, scope: !6509)
!6509 = !DILexicalBlockFile(scope: !1879, file: !368, discriminator: 8)
!6510 = !DILocation(line: 3918, column: 330, scope: !6511)
!6511 = !DILexicalBlockFile(scope: !1880, file: !368, discriminator: 9)
!6512 = !DILocation(line: 3918, column: 332, scope: !6265)
!6513 = !DILocation(line: 3918, column: 332, scope: !1877)
!6514 = !DILocation(line: 3919, column: 5, scope: !1837)
!6515 = !DILocation(line: 3919, column: 10, scope: !6516)
!6516 = !DILexicalBlockFile(scope: !1883, file: !368, discriminator: 1)
!6517 = !DILocation(line: 3919, column: 20, scope: !1883)
!6518 = !DILocation(line: 3919, column: 43, scope: !1883)
!6519 = !DILocation(line: 3919, column: 49, scope: !1883)
!6520 = !DILocation(line: 3919, column: 30, scope: !1883)
!6521 = !DILocation(line: 3919, column: 61, scope: !1887)
!6522 = !DILocation(line: 3919, column: 69, scope: !1887)
!6523 = !DILocation(line: 3919, column: 61, scope: !1883)
!6524 = !DILocation(line: 3919, column: 87, scope: !6525)
!6525 = !DILexicalBlockFile(scope: !1886, file: !368, discriminator: 2)
!6526 = !DILocation(line: 3919, column: 93, scope: !1886)
!6527 = !DILocation(line: 3919, column: 100, scope: !1886)
!6528 = !DILocation(line: 3919, column: 114, scope: !1886)
!6529 = !DILocation(line: 3919, column: 119, scope: !6530)
!6530 = !DILexicalBlockFile(scope: !1885, file: !368, discriminator: 4)
!6531 = !DILocation(line: 3919, column: 129, scope: !1885)
!6532 = !DILocation(line: 3919, column: 159, scope: !1885)
!6533 = !DILocation(line: 3919, column: 177, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !1885, file: !368, line: 3919, column: 174)
!6535 = !DILocation(line: 3919, column: 194, scope: !6534)
!6536 = !DILocation(line: 3919, column: 174, scope: !6534)
!6537 = !DILocation(line: 3919, column: 204, scope: !6534)
!6538 = !DILocation(line: 3919, column: 174, scope: !1885)
!6539 = !DILocation(line: 3919, column: 174, scope: !6540)
!6540 = !DILexicalBlockFile(scope: !1885, file: !368, discriminator: 5)
!6541 = !DILocation(line: 3919, column: 235, scope: !6542)
!6542 = !DILexicalBlockFile(scope: !6534, file: !368, discriminator: 6)
!6543 = !DILocation(line: 3919, column: 253, scope: !6534)
!6544 = !DILocation(line: 3919, column: 263, scope: !6534)
!6545 = !DILocation(line: 3919, column: 288, scope: !6534)
!6546 = !DILocation(line: 3919, column: 219, scope: !6534)
!6547 = !DILocation(line: 3919, column: 307, scope: !6548)
!6548 = !DILexicalBlockFile(scope: !1886, file: !368, discriminator: 7)
!6549 = !DILocation(line: 3919, column: 307, scope: !1885)
!6550 = !DILocation(line: 3919, column: 307, scope: !6551)
!6551 = !DILexicalBlockFile(scope: !1885, file: !368, discriminator: 8)
!6552 = !DILocation(line: 3919, column: 320, scope: !6553)
!6553 = !DILexicalBlockFile(scope: !1886, file: !368, discriminator: 9)
!6554 = !DILocation(line: 3919, column: 322, scope: !6265)
!6555 = !DILocation(line: 3919, column: 322, scope: !1883)
!6556 = !DILocation(line: 3920, column: 41, scope: !1837)
!6557 = !DILocation(line: 3920, column: 26, scope: !1837)
!6558 = !DILocation(line: 3920, column: 12, scope: !1837)
!6559 = !DILocation(line: 3920, column: 5, scope: !1837)
!6560 = !DILocation(line: 3370, column: 30, scope: !1970)
!6561 = !DILocation(line: 3370, column: 46, scope: !1970)
!6562 = !DILocation(line: 3370, column: 62, scope: !1970)
!6563 = !DILocation(line: 3372, column: 5, scope: !1970)
!6564 = !DILocation(line: 3372, column: 23, scope: !1970)
!6565 = !DILocation(line: 3373, column: 5, scope: !1970)
!6566 = !DILocation(line: 3373, column: 15, scope: !1970)
!6567 = !DILocation(line: 3374, column: 5, scope: !1970)
!6568 = !DILocation(line: 3374, column: 20, scope: !1970)
!6569 = !DILocation(line: 3375, column: 5, scope: !1970)
!6570 = !DILocation(line: 3375, column: 19, scope: !1970)
!6571 = !DILocation(line: 3377, column: 26, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !1970, file: !368, line: 3377, column: 9)
!6573 = !DILocation(line: 3377, column: 11, scope: !6572)
!6574 = !DILocation(line: 3377, column: 34, scope: !6572)
!6575 = !DILocation(line: 3377, column: 43, scope: !6572)
!6576 = !DILocation(line: 3377, column: 9, scope: !1970)
!6577 = !DILocation(line: 3378, column: 35, scope: !6572)
!6578 = !DILocation(line: 3378, column: 41, scope: !6572)
!6579 = !DILocation(line: 3378, column: 47, scope: !6572)
!6580 = !DILocation(line: 3378, column: 16, scope: !6572)
!6581 = !DILocation(line: 3378, column: 9, scope: !6572)
!6582 = !DILocation(line: 3380, column: 31, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !1970, file: !368, line: 3380, column: 9)
!6584 = !DILocation(line: 3380, column: 16, scope: !6583)
!6585 = !DILocation(line: 3380, column: 39, scope: !6583)
!6586 = !DILocation(line: 3380, column: 11, scope: !6583)
!6587 = !DILocation(line: 3380, column: 48, scope: !6583)
!6588 = !DILocation(line: 3380, column: 88, scope: !6589)
!6589 = !DILexicalBlockFile(scope: !6583, file: !368, discriminator: 1)
!6590 = !DILocation(line: 3380, column: 70, scope: !6583)
!6591 = !DILocation(line: 3380, column: 96, scope: !6583)
!6592 = !DILocation(line: 3380, column: 69, scope: !6583)
!6593 = !DILocation(line: 3380, column: 111, scope: !6583)
!6594 = !DILocation(line: 3380, column: 122, scope: !6583)
!6595 = !DILocation(line: 3380, column: 131, scope: !6583)
!6596 = !DILocation(line: 3380, column: 148, scope: !6583)
!6597 = !DILocation(line: 3380, column: 9, scope: !1970)
!6598 = !DILocation(line: 3381, column: 35, scope: !6583)
!6599 = !DILocation(line: 3381, column: 41, scope: !6583)
!6600 = !DILocation(line: 3381, column: 47, scope: !6583)
!6601 = !DILocation(line: 3381, column: 16, scope: !6583)
!6602 = !DILocation(line: 3381, column: 9, scope: !6583)
!6603 = !DILocation(line: 3388, column: 31, scope: !1981)
!6604 = !DILocation(line: 3388, column: 16, scope: !1981)
!6605 = !DILocation(line: 3388, column: 39, scope: !1981)
!6606 = !DILocation(line: 3388, column: 11, scope: !1981)
!6607 = !DILocation(line: 3389, column: 9, scope: !1981)
!6608 = !DILocation(line: 3389, column: 50, scope: !6609)
!6609 = !DILexicalBlockFile(scope: !1981, file: !368, discriminator: 1)
!6610 = !DILocation(line: 3389, column: 32, scope: !1981)
!6611 = !DILocation(line: 3389, column: 58, scope: !1981)
!6612 = !DILocation(line: 3389, column: 31, scope: !1981)
!6613 = !DILocation(line: 3389, column: 73, scope: !1981)
!6614 = !DILocation(line: 3389, column: 84, scope: !1981)
!6615 = !DILocation(line: 3389, column: 93, scope: !1981)
!6616 = !DILocation(line: 3389, column: 110, scope: !1981)
!6617 = !DILocation(line: 3388, column: 9, scope: !1970)
!6618 = !DILocation(line: 3390, column: 9, scope: !1980)
!6619 = !DILocation(line: 3390, column: 22, scope: !1980)
!6620 = !DILocation(line: 3391, column: 9, scope: !1980)
!6621 = !DILocation(line: 3391, column: 15, scope: !1980)
!6622 = !DILocation(line: 3391, column: 58, scope: !1980)
!6623 = !DILocation(line: 3391, column: 40, scope: !1980)
!6624 = !DILocation(line: 3391, column: 66, scope: !1980)
!6625 = !DILocation(line: 3391, column: 39, scope: !1980)
!6626 = !DILocation(line: 3391, column: 21, scope: !1980)
!6627 = !DILocation(line: 3392, column: 13, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !1980, file: !368, line: 3392, column: 13)
!6629 = !DILocation(line: 3392, column: 17, scope: !6628)
!6630 = !DILocation(line: 3392, column: 31, scope: !6628)
!6631 = !DILocation(line: 3392, column: 34, scope: !6632)
!6632 = !DILexicalBlockFile(scope: !6628, file: !368, discriminator: 1)
!6633 = !DILocation(line: 3392, column: 13, scope: !1980)
!6634 = !DILocation(line: 3393, column: 13, scope: !6628)
!6635 = !DILocation(line: 3394, column: 48, scope: !1980)
!6636 = !DILocation(line: 3394, column: 54, scope: !1980)
!6637 = !DILocation(line: 3394, column: 60, scope: !1980)
!6638 = !DILocation(line: 3394, column: 29, scope: !1980)
!6639 = !DILocation(line: 3394, column: 14, scope: !1980)
!6640 = !DILocation(line: 3394, column: 12, scope: !1980)
!6641 = !DILocation(line: 3395, column: 13, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !1980, file: !368, line: 3395, column: 13)
!6643 = !DILocation(line: 3395, column: 16, scope: !6642)
!6644 = !DILocation(line: 3395, column: 13, scope: !1980)
!6645 = !DILocation(line: 3396, column: 13, scope: !6642)
!6646 = !DILocation(line: 3397, column: 31, scope: !1980)
!6647 = !DILocation(line: 3397, column: 19, scope: !1980)
!6648 = !DILocation(line: 3397, column: 23, scope: !1980)
!6649 = !DILocation(line: 3397, column: 10, scope: !1980)
!6650 = !DILocation(line: 3397, column: 29, scope: !1980)
!6651 = !DILocation(line: 3398, column: 28, scope: !1980)
!6652 = !DILocation(line: 3398, column: 16, scope: !1980)
!6653 = !DILocation(line: 3398, column: 9, scope: !1980)
!6654 = !DILocation(line: 3399, column: 5, scope: !1981)
!6655 = !DILocation(line: 3401, column: 34, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !1970, file: !368, line: 3401, column: 9)
!6657 = !DILocation(line: 3401, column: 10, scope: !6656)
!6658 = !DILocation(line: 3401, column: 9, scope: !1970)
!6659 = !DILocation(line: 3402, column: 9, scope: !6656)
!6660 = !DILocation(line: 3403, column: 27, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !1970, file: !368, line: 3403, column: 9)
!6662 = !DILocation(line: 3403, column: 10, scope: !6661)
!6663 = !DILocation(line: 3403, column: 9, scope: !1970)
!6664 = !DILocation(line: 3404, column: 25, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6661, file: !368, line: 3403, column: 38)
!6666 = !DILocation(line: 3404, column: 9, scope: !6665)
!6667 = !DILocation(line: 3406, column: 9, scope: !6665)
!6668 = !DILocation(line: 3422, column: 39, scope: !1970)
!6669 = !DILocation(line: 3422, column: 27, scope: !1970)
!6670 = !DILocation(line: 3422, column: 12, scope: !1970)
!6671 = !DILocation(line: 3422, column: 10, scope: !1970)
!6672 = !DILocation(line: 3424, column: 10, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !1970, file: !368, line: 3424, column: 9)
!6674 = !DILocation(line: 3424, column: 15, scope: !6673)
!6675 = !DILocation(line: 3424, column: 19, scope: !6676)
!6676 = !DILexicalBlockFile(scope: !6673, file: !368, discriminator: 1)
!6677 = !DILocation(line: 3424, column: 25, scope: !6673)
!6678 = !DILocation(line: 3424, column: 19, scope: !6673)
!6679 = !DILocation(line: 3424, column: 9, scope: !1970)
!6680 = !DILocation(line: 3425, column: 25, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6673, file: !368, line: 3424, column: 35)
!6682 = !DILocation(line: 3425, column: 9, scope: !6681)
!6683 = !DILocation(line: 3428, column: 9, scope: !6681)
!6684 = !DILocation(line: 3431, column: 36, scope: !1970)
!6685 = !DILocation(line: 3432, column: 35, scope: !1970)
!6686 = !DILocation(line: 3432, column: 41, scope: !1970)
!6687 = !DILocation(line: 3433, column: 35, scope: !1970)
!6688 = !DILocation(line: 3433, column: 41, scope: !1970)
!6689 = !DILocation(line: 3434, column: 35, scope: !1970)
!6690 = !DILocation(line: 3434, column: 41, scope: !1970)
!6691 = !DILocation(line: 3431, column: 13, scope: !1970)
!6692 = !DILocation(line: 3431, column: 11, scope: !1970)
!6693 = !DILocation(line: 3435, column: 10, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !1970, file: !368, line: 3435, column: 9)
!6695 = !DILocation(line: 3435, column: 9, scope: !1970)
!6696 = !DILocation(line: 3436, column: 9, scope: !6694)
!6697 = !DILocation(line: 3438, column: 51, scope: !1970)
!6698 = !DILocation(line: 3438, column: 57, scope: !1970)
!6699 = !DILocation(line: 3438, column: 63, scope: !1970)
!6700 = !DILocation(line: 3438, column: 32, scope: !1970)
!6701 = !DILocation(line: 3438, column: 12, scope: !1970)
!6702 = !DILocation(line: 3438, column: 10, scope: !1970)
!6703 = !DILocation(line: 3439, column: 9, scope: !1986)
!6704 = !DILocation(line: 3439, column: 14, scope: !1986)
!6705 = !DILocation(line: 3439, column: 9, scope: !1970)
!6706 = !DILocation(line: 3440, column: 9, scope: !1985)
!6707 = !DILocation(line: 3440, column: 14, scope: !6708)
!6708 = !DILexicalBlockFile(scope: !1984, file: !368, discriminator: 1)
!6709 = !DILocation(line: 3440, column: 24, scope: !1984)
!6710 = !DILocation(line: 3440, column: 54, scope: !1984)
!6711 = !DILocation(line: 3440, column: 41, scope: !1984)
!6712 = !DILocation(line: 3440, column: 70, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !1984, file: !368, line: 3440, column: 67)
!6714 = !DILocation(line: 3440, column: 87, scope: !6713)
!6715 = !DILocation(line: 3440, column: 67, scope: !6713)
!6716 = !DILocation(line: 3440, column: 97, scope: !6713)
!6717 = !DILocation(line: 3440, column: 67, scope: !1984)
!6718 = !DILocation(line: 3440, column: 67, scope: !6719)
!6719 = !DILexicalBlockFile(scope: !1984, file: !368, discriminator: 2)
!6720 = !DILocation(line: 3440, column: 128, scope: !6721)
!6721 = !DILexicalBlockFile(scope: !6713, file: !368, discriminator: 3)
!6722 = !DILocation(line: 3440, column: 146, scope: !6713)
!6723 = !DILocation(line: 3440, column: 156, scope: !6713)
!6724 = !DILocation(line: 3440, column: 181, scope: !6713)
!6725 = !DILocation(line: 3440, column: 112, scope: !6713)
!6726 = !DILocation(line: 3440, column: 200, scope: !6727)
!6727 = !DILexicalBlockFile(scope: !1985, file: !368, discriminator: 4)
!6728 = !DILocation(line: 3440, column: 200, scope: !1984)
!6729 = !DILocation(line: 3440, column: 200, scope: !6730)
!6730 = !DILexicalBlockFile(scope: !1984, file: !368, discriminator: 5)
!6731 = !DILocation(line: 3441, column: 9, scope: !1985)
!6732 = !DILocation(line: 3444, column: 21, scope: !1970)
!6733 = !DILocation(line: 3444, column: 33, scope: !1970)
!6734 = !DILocation(line: 3444, column: 42, scope: !1970)
!6735 = !DILocation(line: 3445, column: 22, scope: !1970)
!6736 = !DILocation(line: 3445, column: 5, scope: !1970)
!6737 = !DILocation(line: 3445, column: 11, scope: !1970)
!6738 = !DILocation(line: 3445, column: 20, scope: !1970)
!6739 = !DILocation(line: 3447, column: 19, scope: !1970)
!6740 = !DILocation(line: 3447, column: 5, scope: !1970)
!6741 = !DILocation(line: 3447, column: 11, scope: !1970)
!6742 = !DILocation(line: 3447, column: 17, scope: !1970)
!6743 = !DILocation(line: 3448, column: 37, scope: !1970)
!6744 = !DILocation(line: 3448, column: 44, scope: !1970)
!6745 = !{!6746, !2523, i64 32}
!6746 = !{!"", !2592, i64 0, !2523, i64 24, !2523, i64 32, !6747, i64 40, !2593, i64 72, !2523, i64 80, !2523, i64 88, !2523, i64 96, !2523, i64 104, !2523, i64 112, !2524, i64 120}
!6747 = !{!"", !2524, i64 0, !2593, i64 4, !2523, i64 8, !2523, i64 16, !2593, i64 24, !2593, i64 28}
!6748 = !DILocation(line: 3448, column: 15, scope: !1970)
!6749 = !DILocation(line: 3448, column: 21, scope: !1970)
!6750 = !DILocation(line: 3448, column: 6, scope: !1970)
!6751 = !DILocation(line: 3448, column: 27, scope: !1970)
!6752 = !DILocation(line: 3450, column: 33, scope: !1970)
!6753 = !DILocation(line: 3450, column: 21, scope: !1970)
!6754 = !DILocation(line: 3450, column: 42, scope: !1970)
!6755 = !DILocation(line: 3450, column: 51, scope: !1970)
!6756 = !DILocation(line: 3451, column: 38, scope: !1990)
!6757 = !DILocation(line: 3451, column: 23, scope: !1990)
!6758 = !DILocation(line: 3451, column: 59, scope: !1990)
!6759 = !DILocation(line: 3451, column: 47, scope: !1990)
!6760 = !DILocation(line: 3451, column: 15, scope: !1990)
!6761 = !DILocation(line: 3451, column: 12, scope: !1990)
!6762 = !DILocation(line: 3451, column: 9, scope: !1970)
!6763 = !DILocation(line: 3452, column: 9, scope: !1989)
!6764 = !DILocation(line: 3452, column: 14, scope: !6765)
!6765 = !DILexicalBlockFile(scope: !1988, file: !368, discriminator: 1)
!6766 = !DILocation(line: 3452, column: 24, scope: !1988)
!6767 = !DILocation(line: 3452, column: 66, scope: !1988)
!6768 = !DILocation(line: 3452, column: 54, scope: !1988)
!6769 = !DILocation(line: 3452, column: 81, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !1988, file: !368, line: 3452, column: 78)
!6771 = !DILocation(line: 3452, column: 98, scope: !6770)
!6772 = !DILocation(line: 3452, column: 78, scope: !6770)
!6773 = !DILocation(line: 3452, column: 108, scope: !6770)
!6774 = !DILocation(line: 3452, column: 78, scope: !1988)
!6775 = !DILocation(line: 3452, column: 78, scope: !6776)
!6776 = !DILexicalBlockFile(scope: !1988, file: !368, discriminator: 2)
!6777 = !DILocation(line: 3452, column: 139, scope: !6778)
!6778 = !DILexicalBlockFile(scope: !6770, file: !368, discriminator: 3)
!6779 = !DILocation(line: 3452, column: 157, scope: !6770)
!6780 = !DILocation(line: 3452, column: 167, scope: !6770)
!6781 = !DILocation(line: 3452, column: 192, scope: !6770)
!6782 = !DILocation(line: 3452, column: 123, scope: !6770)
!6783 = !DILocation(line: 3452, column: 211, scope: !6784)
!6784 = !DILexicalBlockFile(scope: !1989, file: !368, discriminator: 4)
!6785 = !DILocation(line: 3452, column: 211, scope: !1988)
!6786 = !DILocation(line: 3452, column: 211, scope: !6787)
!6787 = !DILexicalBlockFile(scope: !1988, file: !368, discriminator: 5)
!6788 = !DILocation(line: 3453, column: 9, scope: !1989)
!6789 = !DILocation(line: 3455, column: 24, scope: !1970)
!6790 = !DILocation(line: 3455, column: 12, scope: !1970)
!6791 = !DILocation(line: 3455, column: 5, scope: !1970)
!6792 = !DILocation(line: 3456, column: 1, scope: !1970)
!6793 = !DILocation(line: 4205, column: 25, scope: !2150)
!6794 = !DILocation(line: 4205, column: 41, scope: !2150)
!6795 = !DILocation(line: 4205, column: 57, scope: !2150)
!6796 = !DILocation(line: 4207, column: 5, scope: !2150)
!6797 = !DILocation(line: 4207, column: 16, scope: !2150)
!6798 = !DILocation(line: 4208, column: 5, scope: !2150)
!6799 = !DILocation(line: 4208, column: 16, scope: !2150)
!6800 = !DILocation(line: 4210, column: 27, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !2150, file: !368, line: 4210, column: 9)
!6802 = !DILocation(line: 4210, column: 35, scope: !6801)
!6803 = !DILocation(line: 4210, column: 46, scope: !6801)
!6804 = !DILocation(line: 4210, column: 55, scope: !6801)
!6805 = !DILocation(line: 4210, column: 72, scope: !6801)
!6806 = !DILocation(line: 4210, column: 9, scope: !2150)
!6807 = !DILocation(line: 4211, column: 25, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6801, file: !368, line: 4210, column: 79)
!6809 = !DILocation(line: 4211, column: 9, scope: !6808)
!6810 = !DILocation(line: 4213, column: 9, scope: !6808)
!6811 = !DILocation(line: 4215, column: 26, scope: !2150)
!6812 = !DILocation(line: 4215, column: 11, scope: !2150)
!6813 = !DILocation(line: 4215, column: 34, scope: !2150)
!6814 = !DILocation(line: 4215, column: 7, scope: !2150)
!6815 = !DILocation(line: 4216, column: 12, scope: !2162)
!6816 = !DILocation(line: 4216, column: 10, scope: !2162)
!6817 = !DILocation(line: 4216, column: 17, scope: !6818)
!6818 = !DILexicalBlockFile(scope: !6819, file: !368, discriminator: 2)
!6819 = !DILexicalBlockFile(scope: !2161, file: !368, discriminator: 1)
!6820 = !DILocation(line: 4216, column: 21, scope: !2161)
!6821 = !DILocation(line: 4216, column: 19, scope: !2161)
!6822 = !DILocation(line: 4216, column: 5, scope: !2162)
!6823 = !DILocation(line: 4217, column: 9, scope: !2160)
!6824 = !DILocation(line: 4217, column: 19, scope: !2160)
!6825 = !DILocation(line: 4218, column: 49, scope: !2160)
!6826 = !DILocation(line: 4218, column: 33, scope: !2160)
!6827 = !DILocation(line: 4218, column: 15, scope: !2160)
!6828 = !DILocation(line: 4218, column: 41, scope: !2160)
!6829 = !DILocation(line: 4218, column: 14, scope: !2160)
!6830 = !DILocation(line: 4218, column: 11, scope: !2160)
!6831 = !DILocation(line: 4219, column: 50, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !2160, file: !368, line: 4219, column: 13)
!6833 = !DILocation(line: 4219, column: 38, scope: !6832)
!6834 = !DILocation(line: 4219, column: 56, scope: !6832)
!6835 = !DILocation(line: 4219, column: 59, scope: !6832)
!6836 = !DILocation(line: 4219, column: 19, scope: !6832)
!6837 = !DILocation(line: 4219, column: 16, scope: !6832)
!6838 = !DILocation(line: 4219, column: 13, scope: !2160)
!6839 = !DILocation(line: 4220, column: 13, scope: !6832)
!6840 = !DILocation(line: 4221, column: 5, scope: !2161)
!6841 = !DILocation(line: 4221, column: 5, scope: !6819)
!6842 = !DILocation(line: 4221, column: 5, scope: !2160)
!6843 = !DILocation(line: 4216, column: 24, scope: !2161)
!6844 = !DILocation(line: 4216, column: 5, scope: !2161)
!6845 = !DILocation(line: 4222, column: 5, scope: !2150)
!6846 = !DILocation(line: 4223, column: 1, scope: !2150)
!6847 = !DILocation(line: 2915, column: 34, scope: !2163)
!6848 = !DILocation(line: 2915, column: 50, scope: !2163)
!6849 = !DILocation(line: 2915, column: 66, scope: !2163)
!6850 = !DILocation(line: 2917, column: 5, scope: !2163)
!6851 = !DILocation(line: 2917, column: 18, scope: !2163)
!6852 = !DILocation(line: 2918, column: 5, scope: !2163)
!6853 = !DILocation(line: 2918, column: 20, scope: !2163)
!6854 = !DILocation(line: 2920, column: 39, scope: !2163)
!6855 = !DILocation(line: 2920, column: 27, scope: !2163)
!6856 = !DILocation(line: 2920, column: 12, scope: !2163)
!6857 = !DILocation(line: 2920, column: 10, scope: !2163)
!6858 = !DILocation(line: 2921, column: 10, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !2163, file: !368, line: 2921, column: 9)
!6860 = !DILocation(line: 2921, column: 9, scope: !2163)
!6861 = !DILocation(line: 2922, column: 25, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6859, file: !368, line: 2921, column: 16)
!6863 = !DILocation(line: 2922, column: 9, scope: !6862)
!6864 = !DILocation(line: 2924, column: 9, scope: !6862)
!6865 = !DILocation(line: 2926, column: 5, scope: !2163)
!6866 = !DILocation(line: 2926, column: 11, scope: !2163)
!6867 = !DILocation(line: 2926, column: 17, scope: !2163)
!6868 = !DILocation(line: 2928, column: 26, scope: !2163)
!6869 = !DILocation(line: 2928, column: 32, scope: !2163)
!6870 = !DILocation(line: 2928, column: 41, scope: !2163)
!6871 = !DILocation(line: 2928, column: 11, scope: !2163)
!6872 = !DILocation(line: 2928, column: 9, scope: !2163)
!6873 = !DILocation(line: 2929, column: 10, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !2163, file: !368, line: 2929, column: 9)
!6875 = !DILocation(line: 2929, column: 9, scope: !2163)
!6876 = !DILocation(line: 2930, column: 9, scope: !6874)
!6877 = !DILocation(line: 2932, column: 5, scope: !2163)
!6878 = !DILocation(line: 2932, column: 10, scope: !2163)
!6879 = !DILocation(line: 2932, column: 17, scope: !2163)
!6880 = !DILocation(line: 2933, column: 5, scope: !2163)
!6881 = !DILocation(line: 2933, column: 10, scope: !2163)
!6882 = !DILocation(line: 2933, column: 18, scope: !2163)
!6883 = !DILocation(line: 2934, column: 5, scope: !2163)
!6884 = !DILocation(line: 2934, column: 10, scope: !2163)
!6885 = !DILocation(line: 2934, column: 20, scope: !2163)
!6886 = !DILocation(line: 2935, column: 21, scope: !2163)
!6887 = !DILocation(line: 2935, column: 27, scope: !2163)
!6888 = !DILocation(line: 2935, column: 5, scope: !2163)
!6889 = !DILocation(line: 2935, column: 10, scope: !2163)
!6890 = !DILocation(line: 2935, column: 19, scope: !2163)
!6891 = !DILocation(line: 2937, column: 36, scope: !2173)
!6892 = !DILocation(line: 2937, column: 41, scope: !2173)
!6893 = !DILocation(line: 2937, column: 15, scope: !2173)
!6894 = !DILocation(line: 2937, column: 12, scope: !2173)
!6895 = !DILocation(line: 2937, column: 9, scope: !2163)
!6896 = !DILocation(line: 2938, column: 9, scope: !2172)
!6897 = !DILocation(line: 2938, column: 14, scope: !6898)
!6898 = !DILexicalBlockFile(scope: !2171, file: !368, discriminator: 1)
!6899 = !DILocation(line: 2938, column: 24, scope: !2171)
!6900 = !DILocation(line: 2938, column: 54, scope: !2171)
!6901 = !DILocation(line: 2938, column: 41, scope: !2171)
!6902 = !DILocation(line: 2938, column: 68, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !2171, file: !368, line: 2938, column: 65)
!6904 = !DILocation(line: 2938, column: 85, scope: !6903)
!6905 = !DILocation(line: 2938, column: 65, scope: !6903)
!6906 = !DILocation(line: 2938, column: 95, scope: !6903)
!6907 = !DILocation(line: 2938, column: 65, scope: !2171)
!6908 = !DILocation(line: 2938, column: 65, scope: !6909)
!6909 = !DILexicalBlockFile(scope: !2171, file: !368, discriminator: 2)
!6910 = !DILocation(line: 2938, column: 126, scope: !6911)
!6911 = !DILexicalBlockFile(scope: !6903, file: !368, discriminator: 3)
!6912 = !DILocation(line: 2938, column: 144, scope: !6903)
!6913 = !DILocation(line: 2938, column: 154, scope: !6903)
!6914 = !DILocation(line: 2938, column: 179, scope: !6903)
!6915 = !DILocation(line: 2938, column: 110, scope: !6903)
!6916 = !DILocation(line: 2938, column: 198, scope: !6917)
!6917 = !DILexicalBlockFile(scope: !2172, file: !368, discriminator: 4)
!6918 = !DILocation(line: 2938, column: 198, scope: !2171)
!6919 = !DILocation(line: 2938, column: 198, scope: !6920)
!6920 = !DILexicalBlockFile(scope: !2171, file: !368, discriminator: 5)
!6921 = !DILocation(line: 2939, column: 9, scope: !2172)
!6922 = !DILocation(line: 2941, column: 24, scope: !2163)
!6923 = !DILocation(line: 2941, column: 12, scope: !2163)
!6924 = !DILocation(line: 2941, column: 5, scope: !2163)
!6925 = !DILocation(line: 2942, column: 1, scope: !2163)
!6926 = !DILocation(line: 4513, column: 35, scope: !763)
!6927 = !DILocation(line: 4513, column: 56, scope: !763)
!6928 = !DILocation(line: 4516, column: 5, scope: !763)
!6929 = !DILocation(line: 4516, column: 15, scope: !763)
!6930 = !DILocation(line: 4517, column: 5, scope: !763)
!6931 = !DILocation(line: 4517, column: 15, scope: !763)
!6932 = !DILocation(line: 4518, column: 5, scope: !763)
!6933 = !DILocation(line: 4518, column: 10, scope: !763)
!6934 = !DILocation(line: 4519, column: 5, scope: !763)
!6935 = !DILocation(line: 4519, column: 15, scope: !763)
!6936 = !DILocation(line: 4521, column: 9, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !763, file: !368, line: 4521, column: 9)
!6938 = !DILocation(line: 4521, column: 15, scope: !6937)
!6939 = !DILocation(line: 4521, column: 9, scope: !763)
!6940 = !DILocation(line: 4522, column: 17, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6937, file: !368, line: 4521, column: 30)
!6942 = !DILocation(line: 4522, column: 15, scope: !6941)
!6943 = !DILocation(line: 4523, column: 13, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6941, file: !368, line: 4523, column: 13)
!6945 = !DILocation(line: 4523, column: 19, scope: !6944)
!6946 = !DILocation(line: 4523, column: 13, scope: !6941)
!6947 = !DILocation(line: 4524, column: 13, scope: !6944)
!6948 = !DILocation(line: 4525, column: 5, scope: !6941)
!6949 = !DILocation(line: 4526, column: 30, scope: !763)
!6950 = !DILocation(line: 4526, column: 11, scope: !763)
!6951 = !DILocation(line: 4526, column: 9, scope: !763)
!6952 = !DILocation(line: 4527, column: 9, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !763, file: !368, line: 4527, column: 9)
!6954 = !DILocation(line: 4527, column: 13, scope: !6953)
!6955 = !DILocation(line: 4527, column: 9, scope: !763)
!6956 = !DILocation(line: 4528, column: 9, scope: !6953)
!6957 = !DILocation(line: 4529, column: 27, scope: !763)
!6958 = !DILocation(line: 4529, column: 37, scope: !763)
!6959 = !DILocation(line: 4529, column: 11, scope: !763)
!6960 = !DILocation(line: 4529, column: 9, scope: !763)
!6961 = !DILocation(line: 4530, column: 5, scope: !763)
!6962 = !DILocation(line: 4530, column: 10, scope: !6963)
!6963 = !DILexicalBlockFile(scope: !775, file: !368, discriminator: 1)
!6964 = !DILocation(line: 4530, column: 20, scope: !775)
!6965 = !DILocation(line: 4530, column: 50, scope: !775)
!6966 = !DILocation(line: 4530, column: 64, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !775, file: !368, line: 4530, column: 61)
!6968 = !DILocation(line: 4530, column: 81, scope: !6967)
!6969 = !DILocation(line: 4530, column: 61, scope: !6967)
!6970 = !DILocation(line: 4530, column: 91, scope: !6967)
!6971 = !DILocation(line: 4530, column: 61, scope: !775)
!6972 = !DILocation(line: 4530, column: 61, scope: !6973)
!6973 = !DILexicalBlockFile(scope: !775, file: !368, discriminator: 2)
!6974 = !DILocation(line: 4530, column: 122, scope: !6975)
!6975 = !DILexicalBlockFile(scope: !6967, file: !368, discriminator: 3)
!6976 = !DILocation(line: 4530, column: 140, scope: !6967)
!6977 = !DILocation(line: 4530, column: 150, scope: !6967)
!6978 = !DILocation(line: 4530, column: 175, scope: !6967)
!6979 = !DILocation(line: 4530, column: 106, scope: !6967)
!6980 = !DILocation(line: 4530, column: 194, scope: !6981)
!6981 = !DILexicalBlockFile(scope: !763, file: !368, discriminator: 4)
!6982 = !DILocation(line: 4530, column: 194, scope: !775)
!6983 = !DILocation(line: 4530, column: 194, scope: !6984)
!6984 = !DILexicalBlockFile(scope: !775, file: !368, discriminator: 5)
!6985 = !DILocation(line: 4531, column: 10, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !763, file: !368, line: 4531, column: 9)
!6987 = !DILocation(line: 4531, column: 9, scope: !763)
!6988 = !DILocation(line: 4532, column: 9, scope: !6986)
!6989 = !DILocation(line: 4533, column: 34, scope: !763)
!6990 = !DILocation(line: 4533, column: 41, scope: !763)
!6991 = !DILocation(line: 4533, column: 14, scope: !763)
!6992 = !DILocation(line: 4533, column: 12, scope: !763)
!6993 = !DILocation(line: 4534, column: 9, scope: !779)
!6994 = !DILocation(line: 4534, column: 9, scope: !763)
!6995 = !DILocation(line: 4535, column: 25, scope: !778)
!6996 = !DILocation(line: 4535, column: 35, scope: !778)
!6997 = !DILocation(line: 4535, column: 44, scope: !778)
!6998 = !DILocation(line: 4536, column: 9, scope: !778)
!6999 = !DILocation(line: 4536, column: 14, scope: !7000)
!7000 = !DILexicalBlockFile(scope: !777, file: !368, discriminator: 1)
!7001 = !DILocation(line: 4536, column: 24, scope: !777)
!7002 = !DILocation(line: 4536, column: 54, scope: !777)
!7003 = !DILocation(line: 4536, column: 68, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !777, file: !368, line: 4536, column: 65)
!7005 = !DILocation(line: 4536, column: 85, scope: !7004)
!7006 = !DILocation(line: 4536, column: 65, scope: !7004)
!7007 = !DILocation(line: 4536, column: 95, scope: !7004)
!7008 = !DILocation(line: 4536, column: 65, scope: !777)
!7009 = !DILocation(line: 4536, column: 65, scope: !7010)
!7010 = !DILexicalBlockFile(scope: !777, file: !368, discriminator: 2)
!7011 = !DILocation(line: 4536, column: 126, scope: !7012)
!7012 = !DILexicalBlockFile(scope: !7004, file: !368, discriminator: 3)
!7013 = !DILocation(line: 4536, column: 144, scope: !7004)
!7014 = !DILocation(line: 4536, column: 154, scope: !7004)
!7015 = !DILocation(line: 4536, column: 179, scope: !7004)
!7016 = !DILocation(line: 4536, column: 110, scope: !7004)
!7017 = !DILocation(line: 4536, column: 198, scope: !7018)
!7018 = !DILexicalBlockFile(scope: !778, file: !368, discriminator: 4)
!7019 = !DILocation(line: 4536, column: 198, scope: !777)
!7020 = !DILocation(line: 4536, column: 198, scope: !7021)
!7021 = !DILexicalBlockFile(scope: !777, file: !368, discriminator: 5)
!7022 = !DILocation(line: 4537, column: 16, scope: !778)
!7023 = !DILocation(line: 4537, column: 9, scope: !778)
!7024 = !DILocation(line: 4540, column: 27, scope: !783)
!7025 = !DILocation(line: 4540, column: 39, scope: !783)
!7026 = !DILocation(line: 4540, column: 50, scope: !783)
!7027 = !DILocation(line: 4540, column: 59, scope: !783)
!7028 = !DILocation(line: 4540, column: 76, scope: !783)
!7029 = !DILocation(line: 4540, column: 9, scope: !763)
!7030 = !DILocation(line: 4541, column: 25, scope: !782)
!7031 = !DILocation(line: 4541, column: 9, scope: !782)
!7032 = !DILocation(line: 4543, column: 9, scope: !782)
!7033 = !DILocation(line: 4543, column: 14, scope: !7034)
!7034 = !DILexicalBlockFile(scope: !781, file: !368, discriminator: 1)
!7035 = !DILocation(line: 4543, column: 24, scope: !781)
!7036 = !DILocation(line: 4543, column: 54, scope: !781)
!7037 = !DILocation(line: 4543, column: 68, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !781, file: !368, line: 4543, column: 65)
!7039 = !DILocation(line: 4543, column: 85, scope: !7038)
!7040 = !DILocation(line: 4543, column: 65, scope: !7038)
!7041 = !DILocation(line: 4543, column: 95, scope: !7038)
!7042 = !DILocation(line: 4543, column: 65, scope: !781)
!7043 = !DILocation(line: 4543, column: 65, scope: !7044)
!7044 = !DILexicalBlockFile(scope: !781, file: !368, discriminator: 2)
!7045 = !DILocation(line: 4543, column: 126, scope: !7046)
!7046 = !DILexicalBlockFile(scope: !7038, file: !368, discriminator: 3)
!7047 = !DILocation(line: 4543, column: 144, scope: !7038)
!7048 = !DILocation(line: 4543, column: 154, scope: !7038)
!7049 = !DILocation(line: 4543, column: 179, scope: !7038)
!7050 = !DILocation(line: 4543, column: 110, scope: !7038)
!7051 = !DILocation(line: 4543, column: 198, scope: !7052)
!7052 = !DILexicalBlockFile(scope: !782, file: !368, discriminator: 4)
!7053 = !DILocation(line: 4543, column: 198, scope: !781)
!7054 = !DILocation(line: 4543, column: 198, scope: !7055)
!7055 = !DILexicalBlockFile(scope: !781, file: !368, discriminator: 5)
!7056 = !DILocation(line: 4544, column: 9, scope: !782)
!7057 = !DILocation(line: 4550, column: 13, scope: !763)
!7058 = !DILocation(line: 4551, column: 26, scope: !763)
!7059 = !DILocation(line: 4551, column: 10, scope: !763)
!7060 = !DILocation(line: 4551, column: 37, scope: !763)
!7061 = !DILocation(line: 4551, column: 52, scope: !763)
!7062 = !DILocation(line: 4550, column: 5, scope: !763)
!7063 = !DILocation(line: 4556, column: 36, scope: !763)
!7064 = !DILocation(line: 4559, column: 36, scope: !763)
!7065 = !DILocation(line: 4561, column: 36, scope: !763)
!7066 = !DILocation(line: 4554, column: 14, scope: !763)
!7067 = !DILocation(line: 4554, column: 12, scope: !763)
!7068 = !DILocation(line: 4563, column: 9, scope: !787)
!7069 = !DILocation(line: 4563, column: 16, scope: !787)
!7070 = !DILocation(line: 4563, column: 9, scope: !763)
!7071 = !DILocation(line: 4564, column: 9, scope: !786)
!7072 = !DILocation(line: 4564, column: 14, scope: !7073)
!7073 = !DILexicalBlockFile(scope: !785, file: !368, discriminator: 1)
!7074 = !DILocation(line: 4564, column: 24, scope: !785)
!7075 = !DILocation(line: 4564, column: 54, scope: !785)
!7076 = !DILocation(line: 4564, column: 68, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !785, file: !368, line: 4564, column: 65)
!7078 = !DILocation(line: 4564, column: 85, scope: !7077)
!7079 = !DILocation(line: 4564, column: 65, scope: !7077)
!7080 = !DILocation(line: 4564, column: 95, scope: !7077)
!7081 = !DILocation(line: 4564, column: 65, scope: !785)
!7082 = !DILocation(line: 4564, column: 65, scope: !7083)
!7083 = !DILexicalBlockFile(scope: !785, file: !368, discriminator: 2)
!7084 = !DILocation(line: 4564, column: 126, scope: !7085)
!7085 = !DILexicalBlockFile(scope: !7077, file: !368, discriminator: 3)
!7086 = !DILocation(line: 4564, column: 144, scope: !7077)
!7087 = !DILocation(line: 4564, column: 154, scope: !7077)
!7088 = !DILocation(line: 4564, column: 179, scope: !7077)
!7089 = !DILocation(line: 4564, column: 110, scope: !7077)
!7090 = !DILocation(line: 4564, column: 198, scope: !7091)
!7091 = !DILexicalBlockFile(scope: !786, file: !368, discriminator: 4)
!7092 = !DILocation(line: 4564, column: 198, scope: !785)
!7093 = !DILocation(line: 4564, column: 198, scope: !7094)
!7094 = !DILexicalBlockFile(scope: !785, file: !368, discriminator: 5)
!7095 = !DILocation(line: 4565, column: 9, scope: !786)
!7096 = !DILocation(line: 4567, column: 35, scope: !791)
!7097 = !DILocation(line: 4567, column: 42, scope: !791)
!7098 = !DILocation(line: 4567, column: 47, scope: !791)
!7099 = !DILocation(line: 4567, column: 15, scope: !791)
!7100 = !DILocation(line: 4567, column: 12, scope: !791)
!7101 = !DILocation(line: 4567, column: 9, scope: !763)
!7102 = !DILocation(line: 4568, column: 9, scope: !790)
!7103 = !DILocation(line: 4568, column: 14, scope: !7104)
!7104 = !DILexicalBlockFile(scope: !789, file: !368, discriminator: 1)
!7105 = !DILocation(line: 4568, column: 24, scope: !789)
!7106 = !DILocation(line: 4568, column: 54, scope: !789)
!7107 = !DILocation(line: 4568, column: 68, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !789, file: !368, line: 4568, column: 65)
!7109 = !DILocation(line: 4568, column: 85, scope: !7108)
!7110 = !DILocation(line: 4568, column: 65, scope: !7108)
!7111 = !DILocation(line: 4568, column: 95, scope: !7108)
!7112 = !DILocation(line: 4568, column: 65, scope: !789)
!7113 = !DILocation(line: 4568, column: 65, scope: !7114)
!7114 = !DILexicalBlockFile(scope: !789, file: !368, discriminator: 2)
!7115 = !DILocation(line: 4568, column: 126, scope: !7116)
!7116 = !DILexicalBlockFile(scope: !7108, file: !368, discriminator: 3)
!7117 = !DILocation(line: 4568, column: 144, scope: !7108)
!7118 = !DILocation(line: 4568, column: 154, scope: !7108)
!7119 = !DILocation(line: 4568, column: 179, scope: !7108)
!7120 = !DILocation(line: 4568, column: 110, scope: !7108)
!7121 = !DILocation(line: 4568, column: 198, scope: !7122)
!7122 = !DILexicalBlockFile(scope: !790, file: !368, discriminator: 4)
!7123 = !DILocation(line: 4568, column: 198, scope: !789)
!7124 = !DILocation(line: 4568, column: 198, scope: !7125)
!7125 = !DILexicalBlockFile(scope: !789, file: !368, discriminator: 5)
!7126 = !DILocation(line: 4569, column: 9, scope: !790)
!7127 = !DILocation(line: 4569, column: 14, scope: !7128)
!7128 = !DILexicalBlockFile(scope: !793, file: !368, discriminator: 1)
!7129 = !DILocation(line: 4569, column: 24, scope: !793)
!7130 = !DILocation(line: 4569, column: 54, scope: !793)
!7131 = !DILocation(line: 4569, column: 71, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !793, file: !368, line: 4569, column: 68)
!7133 = !DILocation(line: 4569, column: 88, scope: !7132)
!7134 = !DILocation(line: 4569, column: 68, scope: !7132)
!7135 = !DILocation(line: 4569, column: 98, scope: !7132)
!7136 = !DILocation(line: 4569, column: 68, scope: !793)
!7137 = !DILocation(line: 4569, column: 68, scope: !7138)
!7138 = !DILexicalBlockFile(scope: !793, file: !368, discriminator: 2)
!7139 = !DILocation(line: 4569, column: 129, scope: !7140)
!7140 = !DILexicalBlockFile(scope: !7132, file: !368, discriminator: 3)
!7141 = !DILocation(line: 4569, column: 147, scope: !7132)
!7142 = !DILocation(line: 4569, column: 157, scope: !7132)
!7143 = !DILocation(line: 4569, column: 182, scope: !7132)
!7144 = !DILocation(line: 4569, column: 113, scope: !7132)
!7145 = !DILocation(line: 4569, column: 201, scope: !7122)
!7146 = !DILocation(line: 4569, column: 201, scope: !793)
!7147 = !DILocation(line: 4569, column: 201, scope: !7148)
!7148 = !DILexicalBlockFile(scope: !793, file: !368, discriminator: 5)
!7149 = !DILocation(line: 4570, column: 9, scope: !790)
!7150 = !DILocation(line: 4572, column: 5, scope: !763)
!7151 = !DILocation(line: 4572, column: 10, scope: !7152)
!7152 = !DILexicalBlockFile(scope: !795, file: !368, discriminator: 1)
!7153 = !DILocation(line: 4572, column: 20, scope: !795)
!7154 = !DILocation(line: 4572, column: 50, scope: !795)
!7155 = !DILocation(line: 4572, column: 64, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !795, file: !368, line: 4572, column: 61)
!7157 = !DILocation(line: 4572, column: 81, scope: !7156)
!7158 = !DILocation(line: 4572, column: 61, scope: !7156)
!7159 = !DILocation(line: 4572, column: 91, scope: !7156)
!7160 = !DILocation(line: 4572, column: 61, scope: !795)
!7161 = !DILocation(line: 4572, column: 61, scope: !7162)
!7162 = !DILexicalBlockFile(scope: !795, file: !368, discriminator: 2)
!7163 = !DILocation(line: 4572, column: 122, scope: !7164)
!7164 = !DILexicalBlockFile(scope: !7156, file: !368, discriminator: 3)
!7165 = !DILocation(line: 4572, column: 140, scope: !7156)
!7166 = !DILocation(line: 4572, column: 150, scope: !7156)
!7167 = !DILocation(line: 4572, column: 175, scope: !7156)
!7168 = !DILocation(line: 4572, column: 106, scope: !7156)
!7169 = !DILocation(line: 4572, column: 194, scope: !6981)
!7170 = !DILocation(line: 4572, column: 194, scope: !795)
!7171 = !DILocation(line: 4572, column: 194, scope: !7172)
!7172 = !DILexicalBlockFile(scope: !795, file: !368, discriminator: 5)
!7173 = !DILocation(line: 4573, column: 12, scope: !763)
!7174 = !DILocation(line: 4573, column: 5, scope: !763)
!7175 = !DILocation(line: 4574, column: 1, scope: !763)
!7176 = !DILocation(line: 4874, column: 27, scope: !2281)
!7177 = !DILocation(line: 4874, column: 43, scope: !2281)
!7178 = !DILocation(line: 4874, column: 59, scope: !2281)
!7179 = !DILocation(line: 4876, column: 5, scope: !2281)
!7180 = !DILocation(line: 4876, column: 15, scope: !2281)
!7181 = !DILocation(line: 4878, column: 28, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !2281, file: !368, line: 4878, column: 9)
!7183 = !DILocation(line: 4878, column: 10, scope: !7182)
!7184 = !DILocation(line: 4878, column: 9, scope: !2281)
!7185 = !DILocation(line: 4879, column: 9, scope: !7182)
!7186 = !DILocation(line: 4880, column: 9, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !2281, file: !368, line: 4880, column: 9)
!7188 = !DILocation(line: 4880, column: 15, scope: !7187)
!7189 = !DILocation(line: 4880, column: 9, scope: !2281)
!7190 = !DILocation(line: 4881, column: 9, scope: !7187)
!7191 = !DILocation(line: 4882, column: 33, scope: !2281)
!7192 = !DILocation(line: 4882, column: 39, scope: !2281)
!7193 = !DILocation(line: 4882, column: 12, scope: !2281)
!7194 = !DILocation(line: 4882, column: 5, scope: !2281)
!7195 = !DILocation(line: 4883, column: 1, scope: !2281)
!7196 = !DILocation(line: 4886, column: 27, scope: !2287)
!7197 = !DILocation(line: 4886, column: 43, scope: !2287)
!7198 = !DILocation(line: 4886, column: 59, scope: !2287)
!7199 = !DILocation(line: 4888, column: 5, scope: !2287)
!7200 = !DILocation(line: 4888, column: 20, scope: !2287)
!7201 = !DILocation(line: 4888, column: 54, scope: !2287)
!7202 = !DILocation(line: 4888, column: 42, scope: !2287)
!7203 = !DILocation(line: 4888, column: 27, scope: !2287)
!7204 = !DILocation(line: 4889, column: 10, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !2287, file: !368, line: 4889, column: 9)
!7206 = !DILocation(line: 4889, column: 15, scope: !7205)
!7207 = !DILocation(line: 4889, column: 19, scope: !7208)
!7208 = !DILexicalBlockFile(scope: !7205, file: !368, discriminator: 1)
!7209 = !DILocation(line: 4889, column: 25, scope: !7205)
!7210 = !DILocation(line: 4889, column: 19, scope: !7205)
!7211 = !DILocation(line: 4889, column: 9, scope: !2287)
!7212 = !DILocation(line: 4890, column: 25, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7205, file: !368, line: 4889, column: 32)
!7214 = !DILocation(line: 4890, column: 9, scope: !7213)
!7215 = !DILocation(line: 4892, column: 9, scope: !7213)
!7216 = !DILocation(line: 4894, column: 31, scope: !2287)
!7217 = !DILocation(line: 4894, column: 37, scope: !2287)
!7218 = !DILocation(line: 4894, column: 43, scope: !2287)
!7219 = !DILocation(line: 4894, column: 12, scope: !2287)
!7220 = !DILocation(line: 4894, column: 5, scope: !2287)
!7221 = !DILocation(line: 4895, column: 1, scope: !2287)
!7222 = !DILocation(line: 5333, column: 5, scope: !796)
!7223 = !DILocation(line: 5333, column: 15, scope: !796)
!7224 = !DILocation(line: 5340, column: 5, scope: !796)
!7225 = !DILocation(line: 5342, column: 9, scope: !796)
!7226 = !DILocation(line: 5342, column: 7, scope: !796)
!7227 = !DILocation(line: 5343, column: 10, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5343, column: 9)
!7229 = !DILocation(line: 5343, column: 9, scope: !796)
!7230 = !DILocation(line: 5344, column: 9, scope: !7228)
!7231 = !DILocation(line: 5346, column: 29, scope: !796)
!7232 = !DILocation(line: 5346, column: 27, scope: !796)
!7233 = !DILocation(line: 5347, column: 9, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5347, column: 9)
!7235 = !DILocation(line: 5347, column: 31, scope: !7234)
!7236 = !DILocation(line: 5347, column: 9, scope: !796)
!7237 = !DILocation(line: 5348, column: 9, scope: !7234)
!7238 = !DILocation(line: 5350, column: 24, scope: !796)
!7239 = !DILocation(line: 5350, column: 62, scope: !796)
!7240 = !DILocation(line: 5350, column: 5, scope: !796)
!7241 = !DILocation(line: 5352, column: 40, scope: !796)
!7242 = !DILocation(line: 5352, column: 17, scope: !796)
!7243 = !DILocation(line: 5352, column: 15, scope: !796)
!7244 = !DILocation(line: 5353, column: 9, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5353, column: 9)
!7246 = !DILocation(line: 5353, column: 19, scope: !7245)
!7247 = !DILocation(line: 5353, column: 9, scope: !796)
!7248 = !DILocation(line: 5354, column: 9, scope: !7245)
!7249 = !DILocation(line: 5356, column: 9, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5356, column: 9)
!7251 = !DILocation(line: 5356, column: 36, scope: !7250)
!7252 = !DILocation(line: 5356, column: 9, scope: !796)
!7253 = !DILocation(line: 5357, column: 9, scope: !7250)
!7254 = !DILocation(line: 5359, column: 9, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5359, column: 9)
!7256 = !DILocation(line: 5359, column: 38, scope: !7255)
!7257 = !DILocation(line: 5359, column: 9, scope: !796)
!7258 = !DILocation(line: 5360, column: 9, scope: !7255)
!7259 = !DILocation(line: 5363, column: 29, scope: !796)
!7260 = !DILocation(line: 5364, column: 9, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5364, column: 9)
!7262 = !DILocation(line: 5364, column: 40, scope: !7261)
!7263 = !DILocation(line: 5364, column: 9, scope: !796)
!7264 = !DILocation(line: 5365, column: 9, scope: !7261)
!7265 = !DILocation(line: 5372, column: 32, scope: !796)
!7266 = !DILocation(line: 5373, column: 9, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5373, column: 9)
!7268 = !DILocation(line: 5373, column: 43, scope: !7267)
!7269 = !DILocation(line: 5373, column: 9, scope: !796)
!7270 = !DILocation(line: 5374, column: 9, scope: !7267)
!7271 = !DILocation(line: 5376, column: 28, scope: !796)
!7272 = !DILocation(line: 5377, column: 9, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5377, column: 9)
!7274 = !DILocation(line: 5377, column: 39, scope: !7273)
!7275 = !DILocation(line: 5377, column: 9, scope: !796)
!7276 = !DILocation(line: 5378, column: 9, scope: !7273)
!7277 = !DILocation(line: 5380, column: 33, scope: !796)
!7278 = !DILocation(line: 5381, column: 9, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5381, column: 9)
!7280 = !DILocation(line: 5381, column: 44, scope: !7279)
!7281 = !DILocation(line: 5381, column: 9, scope: !796)
!7282 = !DILocation(line: 5382, column: 9, scope: !7279)
!7283 = !DILocation(line: 5384, column: 31, scope: !796)
!7284 = !DILocation(line: 5385, column: 9, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5385, column: 9)
!7286 = !DILocation(line: 5385, column: 42, scope: !7285)
!7287 = !DILocation(line: 5385, column: 9, scope: !796)
!7288 = !DILocation(line: 5386, column: 9, scope: !7285)
!7289 = !DILocation(line: 5388, column: 32, scope: !796)
!7290 = !DILocation(line: 5389, column: 9, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5389, column: 9)
!7292 = !DILocation(line: 5389, column: 43, scope: !7291)
!7293 = !DILocation(line: 5389, column: 9, scope: !796)
!7294 = !DILocation(line: 5390, column: 9, scope: !7291)
!7295 = !DILocation(line: 5392, column: 33, scope: !796)
!7296 = !DILocation(line: 5393, column: 9, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5393, column: 9)
!7298 = !DILocation(line: 5393, column: 44, scope: !7297)
!7299 = !DILocation(line: 5393, column: 9, scope: !796)
!7300 = !DILocation(line: 5394, column: 9, scope: !7297)
!7301 = !DILocation(line: 5401, column: 9, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5401, column: 9)
!7303 = !DILocation(line: 5401, column: 37, scope: !7302)
!7304 = !DILocation(line: 5401, column: 9, scope: !796)
!7305 = !DILocation(line: 5402, column: 9, scope: !7302)
!7306 = !DILocation(line: 5404, column: 44, scope: !796)
!7307 = !DILocation(line: 5405, column: 25, scope: !796)
!7308 = !DILocation(line: 5406, column: 9, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5406, column: 9)
!7310 = !DILocation(line: 5406, column: 36, scope: !7309)
!7311 = !DILocation(line: 5406, column: 9, scope: !796)
!7312 = !DILocation(line: 5407, column: 9, scope: !7309)
!7313 = !DILocation(line: 5408, column: 46, scope: !796)
!7314 = !DILocation(line: 5409, column: 24, scope: !796)
!7315 = !DILocation(line: 5409, column: 5, scope: !796)
!7316 = !DILocation(line: 5411, column: 43, scope: !796)
!7317 = !DILocation(line: 5412, column: 24, scope: !796)
!7318 = !DILocation(line: 5413, column: 9, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5413, column: 9)
!7320 = !DILocation(line: 5413, column: 35, scope: !7319)
!7321 = !DILocation(line: 5413, column: 9, scope: !796)
!7322 = !DILocation(line: 5414, column: 9, scope: !7319)
!7323 = !DILocation(line: 5415, column: 45, scope: !796)
!7324 = !DILocation(line: 5416, column: 24, scope: !796)
!7325 = !DILocation(line: 5416, column: 5, scope: !796)
!7326 = !DILocation(line: 5418, column: 48, scope: !796)
!7327 = !DILocation(line: 5419, column: 29, scope: !796)
!7328 = !DILocation(line: 5420, column: 9, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5420, column: 9)
!7330 = !DILocation(line: 5420, column: 40, scope: !7329)
!7331 = !DILocation(line: 5420, column: 9, scope: !796)
!7332 = !DILocation(line: 5421, column: 9, scope: !7329)
!7333 = !DILocation(line: 5422, column: 50, scope: !796)
!7334 = !DILocation(line: 5423, column: 24, scope: !796)
!7335 = !DILocation(line: 5423, column: 5, scope: !796)
!7336 = !DILocation(line: 5425, column: 46, scope: !796)
!7337 = !DILocation(line: 5426, column: 27, scope: !796)
!7338 = !DILocation(line: 5427, column: 9, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5427, column: 9)
!7340 = !DILocation(line: 5427, column: 38, scope: !7339)
!7341 = !DILocation(line: 5427, column: 9, scope: !796)
!7342 = !DILocation(line: 5428, column: 9, scope: !7339)
!7343 = !DILocation(line: 5429, column: 48, scope: !796)
!7344 = !DILocation(line: 5430, column: 24, scope: !796)
!7345 = !DILocation(line: 5430, column: 5, scope: !796)
!7346 = !DILocation(line: 5432, column: 44, scope: !796)
!7347 = !DILocation(line: 5433, column: 25, scope: !796)
!7348 = !DILocation(line: 5434, column: 9, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5434, column: 9)
!7350 = !DILocation(line: 5434, column: 36, scope: !7349)
!7351 = !DILocation(line: 5434, column: 9, scope: !796)
!7352 = !DILocation(line: 5435, column: 9, scope: !7349)
!7353 = !DILocation(line: 5436, column: 46, scope: !796)
!7354 = !DILocation(line: 5437, column: 24, scope: !796)
!7355 = !DILocation(line: 5437, column: 5, scope: !796)
!7356 = !DILocation(line: 5439, column: 48, scope: !796)
!7357 = !DILocation(line: 5440, column: 29, scope: !796)
!7358 = !DILocation(line: 5441, column: 9, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5441, column: 9)
!7360 = !DILocation(line: 5441, column: 40, scope: !7359)
!7361 = !DILocation(line: 5441, column: 9, scope: !796)
!7362 = !DILocation(line: 5442, column: 9, scope: !7359)
!7363 = !DILocation(line: 5443, column: 50, scope: !796)
!7364 = !DILocation(line: 5444, column: 24, scope: !796)
!7365 = !DILocation(line: 5444, column: 5, scope: !796)
!7366 = !DILocation(line: 5452, column: 9, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5452, column: 9)
!7368 = !DILocation(line: 5452, column: 38, scope: !7367)
!7369 = !DILocation(line: 5452, column: 9, scope: !796)
!7370 = !DILocation(line: 5453, column: 9, scope: !7367)
!7371 = !DILocation(line: 5460, column: 29, scope: !796)
!7372 = !DILocation(line: 5461, column: 9, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5461, column: 9)
!7374 = !DILocation(line: 5461, column: 41, scope: !7373)
!7375 = !DILocation(line: 5461, column: 9, scope: !796)
!7376 = !DILocation(line: 5462, column: 9, scope: !7373)
!7377 = !DILocation(line: 5472, column: 24, scope: !796)
!7378 = !DILocation(line: 5472, column: 45, scope: !796)
!7379 = !DILocation(line: 5472, column: 5, scope: !796)
!7380 = !DILocation(line: 5473, column: 24, scope: !796)
!7381 = !DILocation(line: 5473, column: 49, scope: !796)
!7382 = !DILocation(line: 5473, column: 5, scope: !796)
!7383 = !DILocation(line: 5474, column: 24, scope: !796)
!7384 = !DILocation(line: 5474, column: 53, scope: !796)
!7385 = !DILocation(line: 5474, column: 5, scope: !796)
!7386 = !DILocation(line: 5475, column: 24, scope: !796)
!7387 = !DILocation(line: 5475, column: 49, scope: !796)
!7388 = !DILocation(line: 5475, column: 5, scope: !796)
!7389 = !DILocation(line: 5476, column: 32, scope: !796)
!7390 = !DILocation(line: 5476, column: 5, scope: !796)
!7391 = !DILocation(line: 5478, column: 24, scope: !796)
!7392 = !DILocation(line: 5478, column: 44, scope: !796)
!7393 = !DILocation(line: 5478, column: 5, scope: !796)
!7394 = !DILocation(line: 5479, column: 24, scope: !796)
!7395 = !DILocation(line: 5479, column: 43, scope: !796)
!7396 = !DILocation(line: 5479, column: 5, scope: !796)
!7397 = !DILocation(line: 5480, column: 24, scope: !796)
!7398 = !DILocation(line: 5480, column: 46, scope: !796)
!7399 = !DILocation(line: 5480, column: 5, scope: !796)
!7400 = !DILocation(line: 5481, column: 24, scope: !796)
!7401 = !DILocation(line: 5481, column: 41, scope: !796)
!7402 = !DILocation(line: 5481, column: 5, scope: !796)
!7403 = !DILocation(line: 5483, column: 24, scope: !796)
!7404 = !DILocation(line: 5483, column: 47, scope: !796)
!7405 = !DILocation(line: 5483, column: 5, scope: !796)
!7406 = !DILocation(line: 5498, column: 24, scope: !796)
!7407 = !DILocation(line: 5498, column: 41, scope: !796)
!7408 = !DILocation(line: 5498, column: 5, scope: !796)
!7409 = !DILocation(line: 5499, column: 24, scope: !796)
!7410 = !DILocation(line: 5499, column: 42, scope: !796)
!7411 = !DILocation(line: 5499, column: 5, scope: !796)
!7412 = !DILocation(line: 5501, column: 22, scope: !796)
!7413 = !DILocation(line: 5501, column: 20, scope: !796)
!7414 = !DILocation(line: 5502, column: 9, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !796, file: !368, line: 5502, column: 9)
!7416 = !DILocation(line: 5502, column: 9, scope: !796)
!7417 = !DILocation(line: 5503, column: 25, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7415, file: !368, line: 5502, column: 25)
!7419 = !DILocation(line: 5503, column: 43, scope: !7418)
!7420 = !DILocation(line: 5503, column: 52, scope: !7418)
!7421 = !DILocation(line: 5504, column: 28, scope: !7418)
!7422 = !DILocation(line: 5504, column: 48, scope: !7418)
!7423 = !DILocation(line: 5504, column: 9, scope: !7418)
!7424 = !DILocation(line: 5505, column: 5, scope: !7418)
!7425 = !DILocation(line: 5506, column: 12, scope: !796)
!7426 = !DILocation(line: 5506, column: 5, scope: !796)
!7427 = !DILocation(line: 5507, column: 1, scope: !796)
!7428 = !DILocation(line: 5218, column: 23, scope: !2357)
!7429 = !DILocation(line: 5218, column: 32, scope: !2357)
!7430 = !DILocation(line: 5220, column: 9, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !2357, file: !368, line: 5220, column: 9)
!7432 = !DILocation(line: 5220, column: 14, scope: !7431)
!7433 = !DILocation(line: 5220, column: 9, scope: !2357)
!7434 = !DILocation(line: 5221, column: 42, scope: !7431)
!7435 = !DILocation(line: 5221, column: 54, scope: !7431)
!7436 = !DILocation(line: 5221, column: 47, scope: !7431)
!7437 = !DILocation(line: 5221, column: 16, scope: !7431)
!7438 = !DILocation(line: 5221, column: 9, scope: !7431)
!7439 = !DILocation(line: 5222, column: 38, scope: !2357)
!7440 = !DILocation(line: 5222, column: 43, scope: !2357)
!7441 = !DILocation(line: 5222, column: 12, scope: !2357)
!7442 = !DILocation(line: 5222, column: 5, scope: !2357)
!7443 = !DILocation(line: 5223, column: 1, scope: !2357)
!7444 = !DILocation(line: 5251, column: 12, scope: !2363)
!7445 = !DILocation(line: 5251, column: 27, scope: !2363)
!7446 = !DILocation(line: 5251, column: 42, scope: !2363)
!7447 = !DILocation(line: 5253, column: 5, scope: !2363)
!7448 = !DILocation(line: 5253, column: 18, scope: !2363)
!7449 = !DILocation(line: 5254, column: 37, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !2363, file: !368, line: 5254, column: 9)
!7451 = !DILocation(line: 5254, column: 14, scope: !7450)
!7452 = !DILocation(line: 5254, column: 11, scope: !7450)
!7453 = !DILocation(line: 5254, column: 9, scope: !2363)
!7454 = !DILocation(line: 5255, column: 9, scope: !7450)
!7455 = !DILocation(line: 5256, column: 58, scope: !2363)
!7456 = !DILocation(line: 5256, column: 29, scope: !2363)
!7457 = !DILocation(line: 5256, column: 14, scope: !2363)
!7458 = !DILocation(line: 5256, column: 12, scope: !2363)
!7459 = !DILocation(line: 5257, column: 9, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !2363, file: !368, line: 5257, column: 9)
!7461 = !DILocation(line: 5257, column: 16, scope: !7460)
!7462 = !DILocation(line: 5257, column: 9, scope: !2363)
!7463 = !DILocation(line: 5258, column: 9, scope: !7460)
!7464 = !DILocation(line: 5266, column: 24, scope: !2373)
!7465 = !DILocation(line: 5266, column: 31, scope: !2373)
!7466 = !DILocation(line: 5266, column: 40, scope: !2373)
!7467 = !DILocation(line: 5266, column: 59, scope: !2373)
!7468 = !DILocation(line: 5266, column: 93, scope: !7469)
!7469 = !DILexicalBlockFile(scope: !2373, file: !368, discriminator: 1)
!7470 = !DILocation(line: 5266, column: 100, scope: !2373)
!7471 = !DILocation(line: 5266, column: 62, scope: !2373)
!7472 = !DILocation(line: 5266, column: 9, scope: !2363)
!7473 = !DILocation(line: 5267, column: 9, scope: !2372)
!7474 = !DILocation(line: 5267, column: 22, scope: !2372)
!7475 = !DILocation(line: 5267, column: 43, scope: !2372)
!7476 = !DILocation(line: 5267, column: 28, scope: !2372)
!7477 = !DILocation(line: 5268, column: 9, scope: !2372)
!7478 = !DILocation(line: 5268, column: 22, scope: !2372)
!7479 = !DILocation(line: 5272, column: 42, scope: !2372)
!7480 = !DILocation(line: 5272, column: 21, scope: !2372)
!7481 = !DILocation(line: 5272, column: 19, scope: !2372)
!7482 = !DILocation(line: 5273, column: 13, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !2372, file: !368, line: 5273, column: 13)
!7484 = !DILocation(line: 5273, column: 23, scope: !7483)
!7485 = !DILocation(line: 5273, column: 13, scope: !2372)
!7486 = !DILocation(line: 5274, column: 13, scope: !7483)
!7487 = !DILocation(line: 5277, column: 13, scope: !2378)
!7488 = !DILocation(line: 5277, column: 18, scope: !2378)
!7489 = !DILocation(line: 5277, column: 28, scope: !2378)
!7490 = !DILocation(line: 5277, column: 13, scope: !2372)
!7491 = !DILocation(line: 5278, column: 13, scope: !2377)
!7492 = !DILocation(line: 5278, column: 18, scope: !7493)
!7493 = !DILexicalBlockFile(scope: !2376, file: !368, discriminator: 1)
!7494 = !DILocation(line: 5278, column: 28, scope: !2376)
!7495 = !DILocation(line: 5278, column: 86, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !2376, file: !368, line: 5278, column: 83)
!7497 = !DILocation(line: 5278, column: 103, scope: !7496)
!7498 = !DILocation(line: 5278, column: 83, scope: !7496)
!7499 = !DILocation(line: 5278, column: 113, scope: !7496)
!7500 = !DILocation(line: 5278, column: 83, scope: !2376)
!7501 = !DILocation(line: 5278, column: 83, scope: !7502)
!7502 = !DILexicalBlockFile(scope: !2376, file: !368, discriminator: 2)
!7503 = !DILocation(line: 5278, column: 144, scope: !7504)
!7504 = !DILexicalBlockFile(scope: !7496, file: !368, discriminator: 3)
!7505 = !DILocation(line: 5278, column: 162, scope: !7496)
!7506 = !DILocation(line: 5278, column: 172, scope: !7496)
!7507 = !DILocation(line: 5278, column: 197, scope: !7496)
!7508 = !DILocation(line: 5278, column: 128, scope: !7496)
!7509 = !DILocation(line: 5278, column: 216, scope: !7510)
!7510 = !DILexicalBlockFile(scope: !2377, file: !368, discriminator: 4)
!7511 = !DILocation(line: 5278, column: 216, scope: !2376)
!7512 = !DILocation(line: 5278, column: 216, scope: !7513)
!7513 = !DILexicalBlockFile(scope: !2376, file: !368, discriminator: 5)
!7514 = !DILocation(line: 5279, column: 30, scope: !2377)
!7515 = !DILocation(line: 5279, column: 13, scope: !2377)
!7516 = !DILocation(line: 5279, column: 18, scope: !2377)
!7517 = !DILocation(line: 5279, column: 28, scope: !2377)
!7518 = !DILocation(line: 5280, column: 17, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !2377, file: !368, line: 5280, column: 17)
!7520 = !DILocation(line: 5280, column: 22, scope: !7519)
!7521 = !DILocation(line: 5280, column: 32, scope: !7519)
!7522 = !DILocation(line: 5280, column: 17, scope: !2377)
!7523 = !DILocation(line: 5281, column: 17, scope: !7519)
!7524 = !DILocation(line: 5282, column: 9, scope: !2377)
!7525 = !DILocation(line: 5283, column: 9, scope: !2372)
!7526 = !DILocation(line: 5283, column: 14, scope: !7527)
!7527 = !DILexicalBlockFile(scope: !2380, file: !368, discriminator: 1)
!7528 = !DILocation(line: 5283, column: 24, scope: !2380)
!7529 = !DILocation(line: 5283, column: 55, scope: !2380)
!7530 = !DILocation(line: 5283, column: 60, scope: !2380)
!7531 = !DILocation(line: 5283, column: 76, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !2380, file: !368, line: 5283, column: 76)
!7533 = !DILocation(line: 5283, column: 92, scope: !7532)
!7534 = !DILocation(line: 5283, column: 76, scope: !2380)
!7535 = !DILocation(line: 5283, column: 123, scope: !7536)
!7536 = !DILexicalBlockFile(scope: !7532, file: !368, discriminator: 2)
!7537 = !DILocation(line: 5283, column: 142, scope: !7532)
!7538 = !DILocation(line: 5283, column: 151, scope: !7532)
!7539 = !DILocation(line: 5283, column: 107, scope: !7532)
!7540 = !DILocation(line: 5283, column: 156, scope: !7541)
!7541 = !DILexicalBlockFile(scope: !7542, file: !368, discriminator: 4)
!7542 = !DILexicalBlockFile(scope: !2372, file: !368, discriminator: 3)
!7543 = !DILocation(line: 5283, column: 156, scope: !2380)
!7544 = !DILocation(line: 5283, column: 156, scope: !7545)
!7545 = !DILexicalBlockFile(scope: !2380, file: !368, discriminator: 5)
!7546 = !DILocation(line: 5284, column: 29, scope: !2372)
!7547 = !DILocation(line: 5284, column: 34, scope: !2372)
!7548 = !DILocation(line: 5284, column: 9, scope: !2372)
!7549 = !DILocation(line: 5284, column: 17, scope: !2372)
!7550 = !DILocation(line: 5284, column: 27, scope: !2372)
!7551 = !DILocation(line: 5285, column: 13, scope: !2383)
!7552 = !DILocation(line: 5285, column: 21, scope: !2383)
!7553 = !DILocation(line: 5285, column: 31, scope: !2383)
!7554 = !DILocation(line: 5285, column: 49, scope: !7555)
!7555 = !DILexicalBlockFile(scope: !2383, file: !368, discriminator: 1)
!7556 = !DILocation(line: 5285, column: 57, scope: !2383)
!7557 = !DILocation(line: 5285, column: 70, scope: !2383)
!7558 = !DILocation(line: 5285, column: 79, scope: !2383)
!7559 = !DILocation(line: 5285, column: 13, scope: !2372)
!7560 = !DILocation(line: 5286, column: 13, scope: !2382)
!7561 = !DILocation(line: 5286, column: 23, scope: !2382)
!7562 = !DILocation(line: 5287, column: 13, scope: !2382)
!7563 = !DILocation(line: 5287, column: 17, scope: !2382)
!7564 = !DILocation(line: 5288, column: 48, scope: !2382)
!7565 = !DILocation(line: 5288, column: 40, scope: !2382)
!7566 = !DILocation(line: 5288, column: 21, scope: !2382)
!7567 = !DILocation(line: 5288, column: 19, scope: !2382)
!7568 = !DILocation(line: 5289, column: 17, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !2382, file: !368, line: 5289, column: 17)
!7570 = !DILocation(line: 5289, column: 23, scope: !7569)
!7571 = !DILocation(line: 5289, column: 17, scope: !2382)
!7572 = !DILocation(line: 5290, column: 17, scope: !7569)
!7573 = !DILocation(line: 5291, column: 33, scope: !2382)
!7574 = !DILocation(line: 5291, column: 41, scope: !2382)
!7575 = !DILocation(line: 5291, column: 52, scope: !2382)
!7576 = !DILocation(line: 5291, column: 59, scope: !2382)
!7577 = !DILocation(line: 5291, column: 18, scope: !2382)
!7578 = !DILocation(line: 5291, column: 16, scope: !2382)
!7579 = !DILocation(line: 5292, column: 13, scope: !2382)
!7580 = !DILocation(line: 5292, column: 18, scope: !7581)
!7581 = !DILexicalBlockFile(scope: !2386, file: !368, discriminator: 1)
!7582 = !DILocation(line: 5292, column: 28, scope: !2386)
!7583 = !DILocation(line: 5292, column: 58, scope: !2386)
!7584 = !DILocation(line: 5292, column: 74, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !2386, file: !368, line: 5292, column: 71)
!7586 = !DILocation(line: 5292, column: 91, scope: !7585)
!7587 = !DILocation(line: 5292, column: 71, scope: !7585)
!7588 = !DILocation(line: 5292, column: 101, scope: !7585)
!7589 = !DILocation(line: 5292, column: 71, scope: !2386)
!7590 = !DILocation(line: 5292, column: 71, scope: !7591)
!7591 = !DILexicalBlockFile(scope: !2386, file: !368, discriminator: 2)
!7592 = !DILocation(line: 5292, column: 132, scope: !7593)
!7593 = !DILexicalBlockFile(scope: !7585, file: !368, discriminator: 3)
!7594 = !DILocation(line: 5292, column: 150, scope: !7585)
!7595 = !DILocation(line: 5292, column: 160, scope: !7585)
!7596 = !DILocation(line: 5292, column: 185, scope: !7585)
!7597 = !DILocation(line: 5292, column: 116, scope: !7585)
!7598 = !DILocation(line: 5292, column: 204, scope: !7599)
!7599 = !DILexicalBlockFile(scope: !2382, file: !368, discriminator: 4)
!7600 = !DILocation(line: 5292, column: 204, scope: !2386)
!7601 = !DILocation(line: 5292, column: 204, scope: !7602)
!7602 = !DILexicalBlockFile(scope: !2386, file: !368, discriminator: 5)
!7603 = !DILocation(line: 5293, column: 17, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !2382, file: !368, line: 5293, column: 17)
!7605 = !DILocation(line: 5293, column: 20, scope: !7604)
!7606 = !DILocation(line: 5293, column: 17, scope: !2382)
!7607 = !DILocation(line: 5294, column: 17, scope: !7604)
!7608 = !DILocation(line: 5295, column: 9, scope: !2383)
!7609 = !DILocation(line: 5295, column: 9, scope: !7555)
!7610 = !DILocation(line: 5295, column: 9, scope: !2382)
!7611 = !DILocation(line: 5296, column: 5, scope: !2373)
!7612 = !DILocation(line: 5296, column: 5, scope: !7469)
!7613 = !DILocation(line: 5296, column: 5, scope: !2372)
!7614 = !DILocation(line: 5298, column: 12, scope: !2363)
!7615 = !DILocation(line: 5298, column: 20, scope: !2363)
!7616 = !DILocation(line: 5298, column: 5, scope: !2363)
!7617 = !DILocation(line: 5299, column: 24, scope: !2363)
!7618 = !DILocation(line: 5299, column: 12, scope: !2363)
!7619 = !DILocation(line: 5299, column: 5, scope: !2363)
!7620 = !DILocation(line: 5302, column: 5, scope: !2363)
!7621 = !DILocation(line: 5302, column: 10, scope: !7622)
!7622 = !DILexicalBlockFile(scope: !2388, file: !368, discriminator: 1)
!7623 = !DILocation(line: 5302, column: 20, scope: !2388)
!7624 = !DILocation(line: 5302, column: 50, scope: !2388)
!7625 = !DILocation(line: 5302, column: 37, scope: !2388)
!7626 = !DILocation(line: 5302, column: 67, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !2388, file: !368, line: 5302, column: 64)
!7628 = !DILocation(line: 5302, column: 84, scope: !7627)
!7629 = !DILocation(line: 5302, column: 64, scope: !7627)
!7630 = !DILocation(line: 5302, column: 94, scope: !7627)
!7631 = !DILocation(line: 5302, column: 64, scope: !2388)
!7632 = !DILocation(line: 5302, column: 64, scope: !7633)
!7633 = !DILexicalBlockFile(scope: !2388, file: !368, discriminator: 2)
!7634 = !DILocation(line: 5302, column: 125, scope: !7635)
!7635 = !DILexicalBlockFile(scope: !7627, file: !368, discriminator: 3)
!7636 = !DILocation(line: 5302, column: 143, scope: !7627)
!7637 = !DILocation(line: 5302, column: 153, scope: !7627)
!7638 = !DILocation(line: 5302, column: 178, scope: !7627)
!7639 = !DILocation(line: 5302, column: 109, scope: !7627)
!7640 = !DILocation(line: 5302, column: 197, scope: !7641)
!7641 = !DILexicalBlockFile(scope: !2363, file: !368, discriminator: 4)
!7642 = !DILocation(line: 5302, column: 197, scope: !2388)
!7643 = !DILocation(line: 5302, column: 197, scope: !7644)
!7644 = !DILexicalBlockFile(scope: !2388, file: !368, discriminator: 5)
!7645 = !DILocation(line: 5303, column: 5, scope: !2363)
!7646 = !DILocation(line: 5304, column: 1, scope: !2363)
!7647 = !DILocation(line: 5308, column: 27, scope: !2393)
!7648 = !DILocation(line: 5308, column: 36, scope: !2393)
!7649 = !DILocation(line: 5310, column: 5, scope: !2393)
!7650 = !DILocation(line: 5310, column: 16, scope: !2393)
!7651 = !DILocation(line: 5310, column: 24, scope: !2393)
!7652 = !DILocation(line: 5311, column: 9, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !2393, file: !368, line: 5311, column: 9)
!7654 = !DILocation(line: 5311, column: 15, scope: !7653)
!7655 = !DILocation(line: 5311, column: 9, scope: !2393)
!7656 = !DILocation(line: 5312, column: 24, scope: !7653)
!7657 = !DILocation(line: 5312, column: 17, scope: !7653)
!7658 = !DILocation(line: 5312, column: 15, scope: !7653)
!7659 = !DILocation(line: 5312, column: 9, scope: !7653)
!7660 = !DILocation(line: 5313, column: 35, scope: !2393)
!7661 = !DILocation(line: 5313, column: 40, scope: !2393)
!7662 = !DILocation(line: 5313, column: 12, scope: !2393)
!7663 = !DILocation(line: 5314, column: 1, scope: !2393)
!7664 = !DILocation(line: 5313, column: 5, scope: !2393)
!7665 = !DILocation(line: 146, column: 32, scope: !801)
!7666 = !DILocation(line: 148, column: 5, scope: !801)
!7667 = !DILocation(line: 148, column: 24, scope: !801)
!7668 = !DILocation(line: 148, column: 52, scope: !801)
!7669 = !DILocation(line: 148, column: 31, scope: !801)
!7670 = !DILocation(line: 149, column: 5, scope: !801)
!7671 = !DILocation(line: 149, column: 10, scope: !7672)
!7672 = !DILexicalBlockFile(scope: !806, file: !368, discriminator: 1)
!7673 = !DILocation(line: 149, column: 20, scope: !806)
!7674 = !DILocation(line: 149, column: 51, scope: !806)
!7675 = !DILocation(line: 149, column: 57, scope: !806)
!7676 = !DILocation(line: 149, column: 67, scope: !809)
!7677 = !DILocation(line: 149, column: 83, scope: !809)
!7678 = !DILocation(line: 149, column: 67, scope: !806)
!7679 = !DILocation(line: 149, column: 98, scope: !7680)
!7680 = !DILexicalBlockFile(scope: !809, file: !368, discriminator: 2)
!7681 = !DILocation(line: 149, column: 103, scope: !7682)
!7682 = !DILexicalBlockFile(scope: !808, file: !368, discriminator: 4)
!7683 = !DILocation(line: 149, column: 113, scope: !808)
!7684 = !DILocation(line: 149, column: 143, scope: !808)
!7685 = !DILocation(line: 149, column: 169, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !808, file: !368, line: 149, column: 166)
!7687 = !DILocation(line: 149, column: 186, scope: !7686)
!7688 = !DILocation(line: 149, column: 166, scope: !7686)
!7689 = !DILocation(line: 149, column: 196, scope: !7686)
!7690 = !DILocation(line: 149, column: 166, scope: !808)
!7691 = !DILocation(line: 149, column: 166, scope: !7692)
!7692 = !DILexicalBlockFile(scope: !808, file: !368, discriminator: 5)
!7693 = !DILocation(line: 149, column: 227, scope: !7694)
!7694 = !DILexicalBlockFile(scope: !7686, file: !368, discriminator: 6)
!7695 = !DILocation(line: 149, column: 245, scope: !7686)
!7696 = !DILocation(line: 149, column: 255, scope: !7686)
!7697 = !DILocation(line: 149, column: 280, scope: !7686)
!7698 = !DILocation(line: 149, column: 211, scope: !7686)
!7699 = !DILocation(line: 149, column: 299, scope: !7700)
!7700 = !DILexicalBlockFile(scope: !809, file: !368, discriminator: 7)
!7701 = !DILocation(line: 149, column: 299, scope: !808)
!7702 = !DILocation(line: 149, column: 299, scope: !7703)
!7703 = !DILexicalBlockFile(scope: !808, file: !368, discriminator: 8)
!7704 = !DILocation(line: 149, column: 299, scope: !7705)
!7705 = !DILexicalBlockFile(scope: !808, file: !368, discriminator: 9)
!7706 = !DILocation(line: 149, column: 312, scope: !7707)
!7707 = !DILexicalBlockFile(scope: !7708, file: !368, discriminator: 10)
!7708 = !DILexicalBlockFile(scope: !801, file: !368, discriminator: 3)
!7709 = !DILocation(line: 149, column: 312, scope: !806)
!7710 = !DILocation(line: 149, column: 312, scope: !7711)
!7711 = !DILexicalBlockFile(scope: !806, file: !368, discriminator: 11)
!7712 = !DILocation(line: 150, column: 5, scope: !801)
!7713 = !DILocation(line: 150, column: 10, scope: !7714)
!7714 = !DILexicalBlockFile(scope: !811, file: !368, discriminator: 1)
!7715 = !DILocation(line: 150, column: 20, scope: !811)
!7716 = !DILocation(line: 150, column: 51, scope: !811)
!7717 = !DILocation(line: 150, column: 57, scope: !811)
!7718 = !DILocation(line: 150, column: 68, scope: !814)
!7719 = !DILocation(line: 150, column: 84, scope: !814)
!7720 = !DILocation(line: 150, column: 68, scope: !811)
!7721 = !DILocation(line: 150, column: 99, scope: !7722)
!7722 = !DILexicalBlockFile(scope: !814, file: !368, discriminator: 2)
!7723 = !DILocation(line: 150, column: 104, scope: !7724)
!7724 = !DILexicalBlockFile(scope: !813, file: !368, discriminator: 4)
!7725 = !DILocation(line: 150, column: 114, scope: !813)
!7726 = !DILocation(line: 150, column: 144, scope: !813)
!7727 = !DILocation(line: 150, column: 170, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !813, file: !368, line: 150, column: 167)
!7729 = !DILocation(line: 150, column: 187, scope: !7728)
!7730 = !DILocation(line: 150, column: 167, scope: !7728)
!7731 = !DILocation(line: 150, column: 197, scope: !7728)
!7732 = !DILocation(line: 150, column: 167, scope: !813)
!7733 = !DILocation(line: 150, column: 167, scope: !7734)
!7734 = !DILexicalBlockFile(scope: !813, file: !368, discriminator: 5)
!7735 = !DILocation(line: 150, column: 228, scope: !7736)
!7736 = !DILexicalBlockFile(scope: !7728, file: !368, discriminator: 6)
!7737 = !DILocation(line: 150, column: 246, scope: !7728)
!7738 = !DILocation(line: 150, column: 256, scope: !7728)
!7739 = !DILocation(line: 150, column: 281, scope: !7728)
!7740 = !DILocation(line: 150, column: 212, scope: !7728)
!7741 = !DILocation(line: 150, column: 300, scope: !7742)
!7742 = !DILexicalBlockFile(scope: !814, file: !368, discriminator: 7)
!7743 = !DILocation(line: 150, column: 300, scope: !813)
!7744 = !DILocation(line: 150, column: 300, scope: !7745)
!7745 = !DILexicalBlockFile(scope: !813, file: !368, discriminator: 8)
!7746 = !DILocation(line: 150, column: 300, scope: !7747)
!7747 = !DILexicalBlockFile(scope: !813, file: !368, discriminator: 9)
!7748 = !DILocation(line: 150, column: 313, scope: !7707)
!7749 = !DILocation(line: 150, column: 313, scope: !811)
!7750 = !DILocation(line: 150, column: 313, scope: !7751)
!7751 = !DILexicalBlockFile(scope: !811, file: !368, discriminator: 11)
!7752 = !DILocation(line: 151, column: 19, scope: !801)
!7753 = !DILocation(line: 151, column: 7, scope: !801)
!7754 = !DILocation(line: 151, column: 27, scope: !801)
!7755 = !DILocation(line: 151, column: 37, scope: !801)
!7756 = !DILocation(line: 151, column: 45, scope: !801)
!7757 = !DILocation(line: 151, column: 5, scope: !801)
!7758 = !DILocation(line: 152, column: 1, scope: !801)
!7759 = !DILocation(line: 155, column: 29, scope: !815)
!7760 = !DILocation(line: 155, column: 47, scope: !815)
!7761 = !DILocation(line: 155, column: 63, scope: !815)
!7762 = !DILocation(line: 157, column: 5, scope: !815)
!7763 = !DILocation(line: 157, column: 24, scope: !815)
!7764 = !DILocation(line: 157, column: 52, scope: !815)
!7765 = !DILocation(line: 157, column: 31, scope: !815)
!7766 = !DILocation(line: 158, column: 9, scope: !824)
!7767 = !DILocation(line: 158, column: 15, scope: !824)
!7768 = !DILocation(line: 158, column: 19, scope: !824)
!7769 = !DILocation(line: 158, column: 22, scope: !7770)
!7770 = !DILexicalBlockFile(scope: !824, file: !368, discriminator: 1)
!7771 = !DILocation(line: 158, column: 28, scope: !824)
!7772 = !DILocation(line: 158, column: 22, scope: !824)
!7773 = !DILocation(line: 158, column: 9, scope: !815)
!7774 = !DILocation(line: 159, column: 34, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !823, file: !368, line: 159, column: 13)
!7776 = !DILocation(line: 159, column: 40, scope: !7775)
!7777 = !DILocation(line: 159, column: 46, scope: !7775)
!7778 = !DILocation(line: 159, column: 52, scope: !7775)
!7779 = !DILocation(line: 159, column: 19, scope: !7775)
!7780 = !DILocation(line: 159, column: 16, scope: !7775)
!7781 = !DILocation(line: 159, column: 13, scope: !823)
!7782 = !DILocation(line: 161, column: 13, scope: !7775)
!7783 = !DILocation(line: 162, column: 9, scope: !823)
!7784 = !DILocation(line: 162, column: 14, scope: !7785)
!7785 = !DILexicalBlockFile(scope: !822, file: !368, discriminator: 1)
!7786 = !DILocation(line: 162, column: 24, scope: !822)
!7787 = !DILocation(line: 162, column: 47, scope: !822)
!7788 = !DILocation(line: 162, column: 53, scope: !822)
!7789 = !DILocation(line: 162, column: 63, scope: !828)
!7790 = !DILocation(line: 162, column: 71, scope: !828)
!7791 = !DILocation(line: 162, column: 63, scope: !822)
!7792 = !DILocation(line: 162, column: 89, scope: !7793)
!7793 = !DILexicalBlockFile(scope: !827, file: !368, discriminator: 2)
!7794 = !DILocation(line: 162, column: 95, scope: !827)
!7795 = !DILocation(line: 162, column: 100, scope: !827)
!7796 = !DILocation(line: 162, column: 114, scope: !827)
!7797 = !DILocation(line: 162, column: 119, scope: !7798)
!7798 = !DILexicalBlockFile(scope: !826, file: !368, discriminator: 4)
!7799 = !DILocation(line: 162, column: 129, scope: !826)
!7800 = !DILocation(line: 162, column: 159, scope: !826)
!7801 = !DILocation(line: 162, column: 177, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !826, file: !368, line: 162, column: 174)
!7803 = !DILocation(line: 162, column: 194, scope: !7802)
!7804 = !DILocation(line: 162, column: 174, scope: !7802)
!7805 = !DILocation(line: 162, column: 204, scope: !7802)
!7806 = !DILocation(line: 162, column: 174, scope: !826)
!7807 = !DILocation(line: 162, column: 174, scope: !7808)
!7808 = !DILexicalBlockFile(scope: !826, file: !368, discriminator: 5)
!7809 = !DILocation(line: 162, column: 235, scope: !7810)
!7810 = !DILexicalBlockFile(scope: !7802, file: !368, discriminator: 6)
!7811 = !DILocation(line: 162, column: 253, scope: !7802)
!7812 = !DILocation(line: 162, column: 263, scope: !7802)
!7813 = !DILocation(line: 162, column: 288, scope: !7802)
!7814 = !DILocation(line: 162, column: 219, scope: !7802)
!7815 = !DILocation(line: 162, column: 307, scope: !7816)
!7816 = !DILexicalBlockFile(scope: !827, file: !368, discriminator: 7)
!7817 = !DILocation(line: 162, column: 307, scope: !826)
!7818 = !DILocation(line: 162, column: 307, scope: !7819)
!7819 = !DILexicalBlockFile(scope: !826, file: !368, discriminator: 8)
!7820 = !DILocation(line: 162, column: 320, scope: !7821)
!7821 = !DILexicalBlockFile(scope: !827, file: !368, discriminator: 9)
!7822 = !DILocation(line: 162, column: 322, scope: !7823)
!7823 = !DILexicalBlockFile(scope: !7824, file: !368, discriminator: 10)
!7824 = !DILexicalBlockFile(scope: !823, file: !368, discriminator: 3)
!7825 = !DILocation(line: 162, column: 322, scope: !822)
!7826 = !DILocation(line: 162, column: 322, scope: !7827)
!7827 = !DILexicalBlockFile(scope: !822, file: !368, discriminator: 11)
!7828 = !DILocation(line: 163, column: 9, scope: !823)
!7829 = !DILocation(line: 163, column: 14, scope: !7830)
!7830 = !DILexicalBlockFile(scope: !830, file: !368, discriminator: 1)
!7831 = !DILocation(line: 163, column: 24, scope: !830)
!7832 = !DILocation(line: 163, column: 47, scope: !830)
!7833 = !DILocation(line: 163, column: 53, scope: !830)
!7834 = !DILocation(line: 163, column: 64, scope: !834)
!7835 = !DILocation(line: 163, column: 72, scope: !834)
!7836 = !DILocation(line: 163, column: 64, scope: !830)
!7837 = !DILocation(line: 163, column: 90, scope: !7838)
!7838 = !DILexicalBlockFile(scope: !833, file: !368, discriminator: 2)
!7839 = !DILocation(line: 163, column: 96, scope: !833)
!7840 = !DILocation(line: 163, column: 102, scope: !833)
!7841 = !DILocation(line: 163, column: 116, scope: !833)
!7842 = !DILocation(line: 163, column: 121, scope: !7843)
!7843 = !DILexicalBlockFile(scope: !832, file: !368, discriminator: 4)
!7844 = !DILocation(line: 163, column: 131, scope: !832)
!7845 = !DILocation(line: 163, column: 161, scope: !832)
!7846 = !DILocation(line: 163, column: 179, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !832, file: !368, line: 163, column: 176)
!7848 = !DILocation(line: 163, column: 196, scope: !7847)
!7849 = !DILocation(line: 163, column: 176, scope: !7847)
!7850 = !DILocation(line: 163, column: 206, scope: !7847)
!7851 = !DILocation(line: 163, column: 176, scope: !832)
!7852 = !DILocation(line: 163, column: 176, scope: !7853)
!7853 = !DILexicalBlockFile(scope: !832, file: !368, discriminator: 5)
!7854 = !DILocation(line: 163, column: 237, scope: !7855)
!7855 = !DILexicalBlockFile(scope: !7847, file: !368, discriminator: 6)
!7856 = !DILocation(line: 163, column: 255, scope: !7847)
!7857 = !DILocation(line: 163, column: 265, scope: !7847)
!7858 = !DILocation(line: 163, column: 290, scope: !7847)
!7859 = !DILocation(line: 163, column: 221, scope: !7847)
!7860 = !DILocation(line: 163, column: 309, scope: !7861)
!7861 = !DILexicalBlockFile(scope: !833, file: !368, discriminator: 7)
!7862 = !DILocation(line: 163, column: 309, scope: !832)
!7863 = !DILocation(line: 163, column: 309, scope: !7864)
!7864 = !DILexicalBlockFile(scope: !832, file: !368, discriminator: 8)
!7865 = !DILocation(line: 163, column: 322, scope: !7866)
!7866 = !DILexicalBlockFile(scope: !833, file: !368, discriminator: 9)
!7867 = !DILocation(line: 163, column: 324, scope: !7823)
!7868 = !DILocation(line: 163, column: 324, scope: !830)
!7869 = !DILocation(line: 163, column: 324, scope: !7870)
!7870 = !DILexicalBlockFile(scope: !830, file: !368, discriminator: 11)
!7871 = !DILocation(line: 164, column: 5, scope: !823)
!7872 = !DILocation(line: 165, column: 51, scope: !815)
!7873 = !DILocation(line: 167, column: 1, scope: !815)
!7874 = !DILocation(line: 166, column: 5, scope: !815)
!7875 = !DILocation(line: 664, column: 28, scope: !835)
!7876 = !DILocation(line: 664, column: 45, scope: !835)
!7877 = !DILocation(line: 666, column: 9, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !835, file: !368, line: 666, column: 9)
!7879 = !DILocation(line: 666, column: 16, scope: !7878)
!7880 = !DILocation(line: 666, column: 9, scope: !835)
!7881 = !DILocation(line: 667, column: 29, scope: !7878)
!7882 = !DILocation(line: 669, column: 29, scope: !7878)
!7883 = !DILocation(line: 667, column: 16, scope: !7878)
!7884 = !DILocation(line: 667, column: 9, scope: !7878)
!7885 = !DILocation(line: 670, column: 36, scope: !835)
!7886 = !DILocation(line: 670, column: 42, scope: !835)
!7887 = !DILocation(line: 670, column: 12, scope: !835)
!7888 = !DILocation(line: 670, column: 5, scope: !835)
!7889 = !DILocation(line: 671, column: 1, scope: !835)
!7890 = !DILocation(line: 606, column: 32, scope: !877)
!7891 = !DILocation(line: 606, column: 48, scope: !877)
!7892 = !DILocation(line: 608, column: 5, scope: !877)
!7893 = !DILocation(line: 608, column: 15, scope: !877)
!7894 = !DILocation(line: 609, column: 5, scope: !877)
!7895 = !DILocation(line: 609, column: 9, scope: !877)
!7896 = !DILocation(line: 609, column: 35, scope: !877)
!7897 = !DILocation(line: 609, column: 42, scope: !877)
!7898 = !DILocation(line: 609, column: 15, scope: !877)
!7899 = !DILocation(line: 610, column: 9, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !877, file: !368, line: 610, column: 9)
!7901 = !DILocation(line: 610, column: 13, scope: !7900)
!7902 = !DILocation(line: 610, column: 9, scope: !877)
!7903 = !DILocation(line: 611, column: 9, scope: !7900)
!7904 = !DILocation(line: 612, column: 9, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !877, file: !368, line: 612, column: 9)
!7906 = !DILocation(line: 612, column: 9, scope: !877)
!7907 = !DILocation(line: 613, column: 25, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7905, file: !368, line: 612, column: 14)
!7909 = !DILocation(line: 613, column: 34, scope: !7908)
!7910 = !DILocation(line: 613, column: 43, scope: !7908)
!7911 = !DILocation(line: 614, column: 16, scope: !7908)
!7912 = !DILocation(line: 614, column: 9, scope: !7908)
!7913 = !DILocation(line: 616, column: 11, scope: !885)
!7914 = !DILocation(line: 616, column: 19, scope: !885)
!7915 = !DILocation(line: 616, column: 27, scope: !885)
!7916 = !DILocation(line: 616, column: 9, scope: !877)
!7917 = !DILocation(line: 617, column: 9, scope: !884)
!7918 = !DILocation(line: 617, column: 23, scope: !884)
!7919 = !DILocation(line: 617, column: 43, scope: !884)
!7920 = !DILocation(line: 617, column: 27, scope: !884)
!7921 = !DILocation(line: 618, column: 9, scope: !884)
!7922 = !DILocation(line: 618, column: 19, scope: !884)
!7923 = !DILocation(line: 618, column: 24, scope: !884)
!7924 = !DILocation(line: 618, column: 27, scope: !884)
!7925 = !{!7926, !2523, i64 48}
!7926 = !{!"tagPyCArgObject", !2552, i64 0, !2523, i64 16, !2524, i64 24, !2524, i64 32, !2523, i64 48, !2553, i64 56}
!7927 = !DILocation(line: 619, column: 9, scope: !884)
!7928 = !DILocation(line: 619, column: 21, scope: !884)
!7929 = !DILocation(line: 620, column: 9, scope: !884)
!7930 = !DILocation(line: 620, column: 24, scope: !884)
!7931 = !DILocation(line: 621, column: 31, scope: !884)
!7932 = !DILocation(line: 621, column: 16, scope: !884)
!7933 = !DILocation(line: 621, column: 14, scope: !884)
!7934 = !DILocation(line: 625, column: 12, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !884, file: !368, line: 625, column: 12)
!7936 = !DILocation(line: 625, column: 17, scope: !7935)
!7937 = !DILocation(line: 625, column: 20, scope: !7938)
!7938 = !DILexicalBlockFile(scope: !7935, file: !368, discriminator: 1)
!7939 = !DILocation(line: 625, column: 12, scope: !884)
!7940 = !DILocation(line: 626, column: 39, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7935, file: !368, line: 625, column: 24)
!7942 = !DILocation(line: 626, column: 43, scope: !7941)
!7943 = !DILocation(line: 626, column: 49, scope: !7941)
!7944 = !DILocation(line: 626, column: 19, scope: !7941)
!7945 = !DILocation(line: 626, column: 17, scope: !7941)
!7946 = !DILocation(line: 627, column: 17, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7941, file: !368, line: 627, column: 17)
!7948 = !DILocation(line: 627, column: 21, scope: !7947)
!7949 = !DILocation(line: 627, column: 17, scope: !7941)
!7950 = !DILocation(line: 628, column: 17, scope: !7947)
!7951 = !DILocation(line: 629, column: 17, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7941, file: !368, line: 629, column: 17)
!7953 = !DILocation(line: 629, column: 17, scope: !7941)
!7954 = !DILocation(line: 630, column: 33, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7952, file: !368, line: 629, column: 22)
!7956 = !DILocation(line: 630, column: 42, scope: !7955)
!7957 = !DILocation(line: 630, column: 51, scope: !7955)
!7958 = !DILocation(line: 631, column: 24, scope: !7955)
!7959 = !DILocation(line: 631, column: 17, scope: !7955)
!7960 = !DILocation(line: 633, column: 9, scope: !7941)
!7961 = !DILocation(line: 634, column: 20, scope: !884)
!7962 = !DILocation(line: 634, column: 19, scope: !884)
!7963 = !DILocation(line: 634, column: 40, scope: !7964)
!7964 = !DILexicalBlockFile(scope: !884, file: !368, discriminator: 1)
!7965 = !DILocation(line: 634, column: 46, scope: !884)
!7966 = !DILocation(line: 634, column: 56, scope: !884)
!7967 = !DILocation(line: 634, column: 19, scope: !7968)
!7968 = !DILexicalBlockFile(scope: !884, file: !368, discriminator: 2)
!7969 = !DILocation(line: 634, column: 17, scope: !7970)
!7970 = !DILexicalBlockFile(scope: !7971, file: !368, discriminator: 4)
!7971 = !DILexicalBlockFile(scope: !884, file: !368, discriminator: 3)
!7972 = !DILocation(line: 635, column: 22, scope: !884)
!7973 = !DILocation(line: 637, column: 39, scope: !884)
!7974 = !DILocation(line: 637, column: 23, scope: !884)
!7975 = !DILocation(line: 637, column: 46, scope: !884)
!7976 = !DILocation(line: 637, column: 55, scope: !884)
!7977 = !DILocation(line: 635, column: 9, scope: !884)
!7978 = !DILocation(line: 638, column: 9, scope: !884)
!7979 = !DILocation(line: 639, column: 5, scope: !885)
!7980 = !DILocation(line: 641, column: 43, scope: !877)
!7981 = !DILocation(line: 641, column: 20, scope: !877)
!7982 = !DILocation(line: 641, column: 18, scope: !877)
!7983 = !DILocation(line: 642, column: 9, scope: !892)
!7984 = !DILocation(line: 642, column: 9, scope: !877)
!7985 = !DILocation(line: 643, column: 38, scope: !891)
!7986 = !DILocation(line: 643, column: 44, scope: !891)
!7987 = !DILocation(line: 643, column: 17, scope: !891)
!7988 = !DILocation(line: 643, column: 15, scope: !891)
!7989 = !DILocation(line: 644, column: 9, scope: !891)
!7990 = !DILocation(line: 644, column: 14, scope: !7991)
!7991 = !DILexicalBlockFile(scope: !890, file: !368, discriminator: 1)
!7992 = !DILocation(line: 644, column: 24, scope: !890)
!7993 = !DILocation(line: 644, column: 54, scope: !890)
!7994 = !DILocation(line: 644, column: 77, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !890, file: !368, line: 644, column: 74)
!7996 = !DILocation(line: 644, column: 94, scope: !7995)
!7997 = !DILocation(line: 644, column: 74, scope: !7995)
!7998 = !DILocation(line: 644, column: 104, scope: !7995)
!7999 = !DILocation(line: 644, column: 74, scope: !890)
!8000 = !DILocation(line: 644, column: 74, scope: !8001)
!8001 = !DILexicalBlockFile(scope: !890, file: !368, discriminator: 2)
!8002 = !DILocation(line: 644, column: 135, scope: !8003)
!8003 = !DILexicalBlockFile(scope: !7995, file: !368, discriminator: 3)
!8004 = !DILocation(line: 644, column: 153, scope: !7995)
!8005 = !DILocation(line: 644, column: 163, scope: !7995)
!8006 = !DILocation(line: 644, column: 188, scope: !7995)
!8007 = !DILocation(line: 644, column: 119, scope: !7995)
!8008 = !DILocation(line: 644, column: 207, scope: !8009)
!8009 = !DILexicalBlockFile(scope: !891, file: !368, discriminator: 4)
!8010 = !DILocation(line: 644, column: 207, scope: !890)
!8011 = !DILocation(line: 644, column: 207, scope: !8012)
!8012 = !DILexicalBlockFile(scope: !890, file: !368, discriminator: 5)
!8013 = !DILocation(line: 645, column: 16, scope: !891)
!8014 = !DILocation(line: 645, column: 9, scope: !891)
!8015 = !DILocation(line: 647, column: 18, scope: !877)
!8016 = !DILocation(line: 649, column: 35, scope: !877)
!8017 = !DILocation(line: 649, column: 19, scope: !877)
!8018 = !DILocation(line: 649, column: 42, scope: !877)
!8019 = !DILocation(line: 650, column: 32, scope: !877)
!8020 = !DILocation(line: 650, column: 41, scope: !877)
!8021 = !DILocation(line: 650, column: 51, scope: !877)
!8022 = !DILocation(line: 647, column: 5, scope: !877)
!8023 = !DILocation(line: 651, column: 5, scope: !877)
!8024 = !DILocation(line: 652, column: 1, scope: !877)
!8025 = !DILocation(line: 443, column: 34, scope: !893)
!8026 = !DILocation(line: 443, column: 50, scope: !893)
!8027 = !DILocation(line: 445, column: 5, scope: !893)
!8028 = !DILocation(line: 445, column: 11, scope: !893)
!8029 = !DILocation(line: 446, column: 27, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !893, file: !368, line: 446, column: 9)
!8031 = !DILocation(line: 446, column: 36, scope: !8030)
!8032 = !DILocation(line: 446, column: 47, scope: !8030)
!8033 = !DILocation(line: 446, column: 56, scope: !8030)
!8034 = !DILocation(line: 446, column: 73, scope: !8030)
!8035 = !DILocation(line: 446, column: 9, scope: !893)
!8036 = !DILocation(line: 447, column: 25, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8030, file: !368, line: 446, column: 80)
!8038 = !DILocation(line: 447, column: 9, scope: !8037)
!8039 = !DILocation(line: 449, column: 9, scope: !8037)
!8040 = !DILocation(line: 451, column: 36, scope: !893)
!8041 = !DILocation(line: 451, column: 19, scope: !893)
!8042 = !DILocation(line: 451, column: 9, scope: !893)
!8043 = !DILocation(line: 452, column: 9, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !893, file: !368, line: 452, column: 9)
!8045 = !DILocation(line: 452, column: 9, scope: !893)
!8046 = !DILocation(line: 453, column: 9, scope: !8044)
!8047 = !DILocation(line: 454, column: 30, scope: !893)
!8048 = !DILocation(line: 454, column: 36, scope: !893)
!8049 = !DILocation(line: 454, column: 12, scope: !893)
!8050 = !DILocation(line: 454, column: 5, scope: !893)
!8051 = !DILocation(line: 455, column: 1, scope: !893)
!8052 = !DILocation(line: 464, column: 33, scope: !898)
!8053 = !DILocation(line: 464, column: 49, scope: !898)
!8054 = !DILocation(line: 466, column: 5, scope: !898)
!8055 = !DILocation(line: 466, column: 11, scope: !898)
!8056 = !DILocation(line: 467, column: 5, scope: !898)
!8057 = !DILocation(line: 467, column: 16, scope: !898)
!8058 = !DILocation(line: 468, column: 5, scope: !898)
!8059 = !DILocation(line: 468, column: 16, scope: !898)
!8060 = !DILocation(line: 469, column: 5, scope: !898)
!8061 = !DILocation(line: 469, column: 15, scope: !898)
!8062 = !DILocation(line: 469, column: 21, scope: !898)
!8063 = !DILocation(line: 470, column: 5, scope: !898)
!8064 = !DILocation(line: 470, column: 20, scope: !898)
!8065 = !DILocation(line: 470, column: 42, scope: !898)
!8066 = !DILocation(line: 470, column: 27, scope: !898)
!8067 = !DILocation(line: 473, column: 34, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !898, file: !368, line: 473, column: 9)
!8069 = !DILocation(line: 473, column: 10, scope: !8068)
!8070 = !DILocation(line: 473, column: 9, scope: !898)
!8071 = !DILocation(line: 474, column: 9, scope: !8068)
!8072 = !DILocation(line: 476, column: 38, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !898, file: !368, line: 476, column: 9)
!8074 = !DILocation(line: 476, column: 15, scope: !8073)
!8075 = !DILocation(line: 476, column: 12, scope: !8073)
!8076 = !DILocation(line: 476, column: 9, scope: !898)
!8077 = !DILocation(line: 477, column: 9, scope: !8073)
!8078 = !DILocation(line: 479, column: 9, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !898, file: !368, line: 479, column: 9)
!8080 = !DILocation(line: 479, column: 16, scope: !8079)
!8081 = !DILocation(line: 479, column: 9, scope: !898)
!8082 = !DILocation(line: 480, column: 25, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8079, file: !368, line: 479, column: 21)
!8084 = !DILocation(line: 480, column: 9, scope: !8083)
!8085 = !DILocation(line: 482, column: 9, scope: !8083)
!8086 = !DILocation(line: 484, column: 9, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !898, file: !368, line: 484, column: 9)
!8088 = !DILocation(line: 484, column: 15, scope: !8087)
!8089 = !DILocation(line: 484, column: 22, scope: !8087)
!8090 = !DILocation(line: 484, column: 35, scope: !8087)
!8091 = !DILocation(line: 484, column: 33, scope: !8087)
!8092 = !DILocation(line: 484, column: 20, scope: !8087)
!8093 = !DILocation(line: 484, column: 9, scope: !898)
!8094 = !DILocation(line: 485, column: 22, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8087, file: !368, line: 484, column: 43)
!8096 = !DILocation(line: 487, column: 22, scope: !8095)
!8097 = !DILocation(line: 487, column: 34, scope: !8095)
!8098 = !DILocation(line: 487, column: 40, scope: !8095)
!8099 = !DILocation(line: 487, column: 47, scope: !8095)
!8100 = !DILocation(line: 487, column: 45, scope: !8095)
!8101 = !DILocation(line: 485, column: 9, scope: !8095)
!8102 = !DILocation(line: 488, column: 9, scope: !8095)
!8103 = !DILocation(line: 491, column: 32, scope: !898)
!8104 = !DILocation(line: 491, column: 46, scope: !898)
!8105 = !DILocation(line: 491, column: 55, scope: !898)
!8106 = !DILocation(line: 491, column: 53, scope: !898)
!8107 = !DILocation(line: 491, column: 14, scope: !898)
!8108 = !DILocation(line: 491, column: 12, scope: !898)
!8109 = !DILocation(line: 492, column: 9, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !898, file: !368, line: 492, column: 9)
!8111 = !DILocation(line: 492, column: 16, scope: !8110)
!8112 = !DILocation(line: 492, column: 9, scope: !898)
!8113 = !DILocation(line: 493, column: 9, scope: !8110)
!8114 = !DILocation(line: 495, column: 21, scope: !898)
!8115 = !DILocation(line: 495, column: 28, scope: !898)
!8116 = !DILocation(line: 495, column: 37, scope: !898)
!8117 = !DILocation(line: 496, column: 38, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !898, file: !368, line: 496, column: 9)
!8119 = !DILocation(line: 496, column: 23, scope: !8118)
!8120 = !DILocation(line: 496, column: 50, scope: !8118)
!8121 = !DILocation(line: 496, column: 15, scope: !8118)
!8122 = !DILocation(line: 496, column: 12, scope: !8118)
!8123 = !DILocation(line: 496, column: 9, scope: !898)
!8124 = !DILocation(line: 497, column: 9, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8118, file: !368, line: 496, column: 56)
!8126 = !DILocation(line: 499, column: 12, scope: !898)
!8127 = !DILocation(line: 499, column: 5, scope: !898)
!8128 = !DILocation(line: 500, column: 1, scope: !898)
!8129 = !DILocation(line: 509, column: 38, scope: !908)
!8130 = !DILocation(line: 509, column: 54, scope: !908)
!8131 = !DILocation(line: 511, column: 5, scope: !908)
!8132 = !DILocation(line: 511, column: 17, scope: !908)
!8133 = !DILocation(line: 512, column: 5, scope: !908)
!8134 = !DILocation(line: 512, column: 16, scope: !908)
!8135 = !DILocation(line: 513, column: 5, scope: !908)
!8136 = !DILocation(line: 513, column: 16, scope: !908)
!8137 = !DILocation(line: 514, column: 5, scope: !908)
!8138 = !DILocation(line: 514, column: 15, scope: !908)
!8139 = !DILocation(line: 514, column: 21, scope: !908)
!8140 = !DILocation(line: 515, column: 5, scope: !908)
!8141 = !DILocation(line: 515, column: 20, scope: !908)
!8142 = !DILocation(line: 515, column: 42, scope: !908)
!8143 = !DILocation(line: 515, column: 27, scope: !908)
!8144 = !DILocation(line: 518, column: 34, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !908, file: !368, line: 518, column: 9)
!8146 = !DILocation(line: 518, column: 10, scope: !8145)
!8147 = !DILocation(line: 518, column: 9, scope: !908)
!8148 = !DILocation(line: 519, column: 9, scope: !8145)
!8149 = !DILocation(line: 521, column: 37, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !908, file: !368, line: 521, column: 9)
!8151 = !DILocation(line: 521, column: 15, scope: !8150)
!8152 = !DILocation(line: 521, column: 12, scope: !8150)
!8153 = !DILocation(line: 521, column: 9, scope: !908)
!8154 = !DILocation(line: 522, column: 9, scope: !8150)
!8155 = !DILocation(line: 524, column: 9, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !908, file: !368, line: 524, column: 9)
!8157 = !DILocation(line: 524, column: 16, scope: !8156)
!8158 = !DILocation(line: 524, column: 9, scope: !908)
!8159 = !DILocation(line: 525, column: 25, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8156, file: !368, line: 524, column: 21)
!8161 = !DILocation(line: 525, column: 9, scope: !8160)
!8162 = !DILocation(line: 527, column: 9, scope: !8160)
!8163 = !DILocation(line: 530, column: 9, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !908, file: !368, line: 530, column: 9)
!8165 = !DILocation(line: 530, column: 15, scope: !8164)
!8166 = !DILocation(line: 530, column: 22, scope: !8164)
!8167 = !DILocation(line: 530, column: 35, scope: !8164)
!8168 = !DILocation(line: 530, column: 33, scope: !8164)
!8169 = !DILocation(line: 530, column: 20, scope: !8164)
!8170 = !DILocation(line: 530, column: 9, scope: !908)
!8171 = !DILocation(line: 531, column: 22, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8164, file: !368, line: 530, column: 43)
!8173 = !DILocation(line: 533, column: 22, scope: !8172)
!8174 = !DILocation(line: 533, column: 34, scope: !8172)
!8175 = !DILocation(line: 533, column: 40, scope: !8172)
!8176 = !DILocation(line: 533, column: 47, scope: !8172)
!8177 = !DILocation(line: 533, column: 45, scope: !8172)
!8178 = !DILocation(line: 531, column: 9, scope: !8172)
!8179 = !DILocation(line: 534, column: 9, scope: !8172)
!8180 = !DILocation(line: 537, column: 49, scope: !908)
!8181 = !DILocation(line: 537, column: 33, scope: !908)
!8182 = !DILocation(line: 537, column: 14, scope: !908)
!8183 = !DILocation(line: 537, column: 12, scope: !908)
!8184 = !DILocation(line: 538, column: 9, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !908, file: !368, line: 538, column: 9)
!8186 = !DILocation(line: 538, column: 16, scope: !8185)
!8187 = !DILocation(line: 538, column: 9, scope: !908)
!8188 = !DILocation(line: 539, column: 9, scope: !8185)
!8189 = !DILocation(line: 540, column: 28, scope: !908)
!8190 = !DILocation(line: 540, column: 13, scope: !908)
!8191 = !DILocation(line: 540, column: 37, scope: !908)
!8192 = !DILocation(line: 541, column: 20, scope: !908)
!8193 = !DILocation(line: 541, column: 27, scope: !908)
!8194 = !DILocation(line: 541, column: 26, scope: !908)
!8195 = !DILocation(line: 541, column: 35, scope: !908)
!8196 = !DILocation(line: 541, column: 41, scope: !908)
!8197 = !DILocation(line: 540, column: 5, scope: !908)
!8198 = !DILocation(line: 542, column: 12, scope: !908)
!8199 = !DILocation(line: 542, column: 5, scope: !908)
!8200 = !DILocation(line: 543, column: 1, scope: !908)
!8201 = !DILocation(line: 549, column: 28, scope: !918)
!8202 = !DILocation(line: 549, column: 44, scope: !918)
!8203 = !DILocation(line: 551, column: 5, scope: !918)
!8204 = !DILocation(line: 551, column: 15, scope: !918)
!8205 = !DILocation(line: 552, column: 5, scope: !918)
!8206 = !DILocation(line: 552, column: 11, scope: !918)
!8207 = !DILocation(line: 553, column: 5, scope: !918)
!8208 = !DILocation(line: 553, column: 15, scope: !918)
!8209 = !DILocation(line: 554, column: 5, scope: !918)
!8210 = !DILocation(line: 554, column: 11, scope: !918)
!8211 = !DILocation(line: 555, column: 5, scope: !918)
!8212 = !DILocation(line: 555, column: 11, scope: !918)
!8213 = !DILocation(line: 557, column: 34, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !918, file: !368, line: 557, column: 9)
!8215 = !DILocation(line: 557, column: 10, scope: !8214)
!8216 = !DILocation(line: 557, column: 9, scope: !918)
!8217 = !DILocation(line: 558, column: 9, scope: !8214)
!8218 = !DILocation(line: 560, column: 34, scope: !918)
!8219 = !DILocation(line: 560, column: 11, scope: !918)
!8220 = !DILocation(line: 560, column: 9, scope: !918)
!8221 = !DILocation(line: 561, column: 10, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !918, file: !368, line: 561, column: 9)
!8223 = !DILocation(line: 561, column: 9, scope: !918)
!8224 = !DILocation(line: 562, column: 9, scope: !8222)
!8225 = !DILocation(line: 563, column: 27, scope: !930)
!8226 = !DILocation(line: 563, column: 34, scope: !930)
!8227 = !DILocation(line: 563, column: 45, scope: !930)
!8228 = !DILocation(line: 563, column: 54, scope: !930)
!8229 = !DILocation(line: 563, column: 71, scope: !930)
!8230 = !DILocation(line: 563, column: 9, scope: !918)
!8231 = !DILocation(line: 564, column: 25, scope: !929)
!8232 = !DILocation(line: 564, column: 9, scope: !929)
!8233 = !DILocation(line: 566, column: 9, scope: !929)
!8234 = !DILocation(line: 566, column: 14, scope: !8235)
!8235 = !DILexicalBlockFile(scope: !928, file: !368, discriminator: 1)
!8236 = !DILocation(line: 566, column: 24, scope: !928)
!8237 = !DILocation(line: 566, column: 54, scope: !928)
!8238 = !DILocation(line: 566, column: 68, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !928, file: !368, line: 566, column: 65)
!8240 = !DILocation(line: 566, column: 85, scope: !8239)
!8241 = !DILocation(line: 566, column: 65, scope: !8239)
!8242 = !DILocation(line: 566, column: 95, scope: !8239)
!8243 = !DILocation(line: 566, column: 65, scope: !928)
!8244 = !DILocation(line: 566, column: 65, scope: !8245)
!8245 = !DILexicalBlockFile(scope: !928, file: !368, discriminator: 2)
!8246 = !DILocation(line: 566, column: 126, scope: !8247)
!8247 = !DILexicalBlockFile(scope: !8239, file: !368, discriminator: 3)
!8248 = !DILocation(line: 566, column: 144, scope: !8239)
!8249 = !DILocation(line: 566, column: 154, scope: !8239)
!8250 = !DILocation(line: 566, column: 179, scope: !8239)
!8251 = !DILocation(line: 566, column: 110, scope: !8239)
!8252 = !DILocation(line: 566, column: 198, scope: !8253)
!8253 = !DILexicalBlockFile(scope: !929, file: !368, discriminator: 4)
!8254 = !DILocation(line: 566, column: 198, scope: !928)
!8255 = !DILocation(line: 566, column: 198, scope: !8256)
!8256 = !DILexicalBlockFile(scope: !928, file: !368, discriminator: 5)
!8257 = !DILocation(line: 567, column: 9, scope: !929)
!8258 = !DILocation(line: 569, column: 39, scope: !918)
!8259 = !DILocation(line: 569, column: 22, scope: !918)
!8260 = !DILocation(line: 569, column: 12, scope: !918)
!8261 = !DILocation(line: 570, column: 5, scope: !918)
!8262 = !DILocation(line: 570, column: 10, scope: !8263)
!8263 = !DILexicalBlockFile(scope: !932, file: !368, discriminator: 1)
!8264 = !DILocation(line: 570, column: 20, scope: !932)
!8265 = !DILocation(line: 570, column: 50, scope: !932)
!8266 = !DILocation(line: 570, column: 64, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !932, file: !368, line: 570, column: 61)
!8268 = !DILocation(line: 570, column: 81, scope: !8267)
!8269 = !DILocation(line: 570, column: 61, scope: !8267)
!8270 = !DILocation(line: 570, column: 91, scope: !8267)
!8271 = !DILocation(line: 570, column: 61, scope: !932)
!8272 = !DILocation(line: 570, column: 61, scope: !8273)
!8273 = !DILexicalBlockFile(scope: !932, file: !368, discriminator: 2)
!8274 = !DILocation(line: 570, column: 122, scope: !8275)
!8275 = !DILexicalBlockFile(scope: !8267, file: !368, discriminator: 3)
!8276 = !DILocation(line: 570, column: 140, scope: !8267)
!8277 = !DILocation(line: 570, column: 150, scope: !8267)
!8278 = !DILocation(line: 570, column: 175, scope: !8267)
!8279 = !DILocation(line: 570, column: 106, scope: !8267)
!8280 = !DILocation(line: 570, column: 194, scope: !8281)
!8281 = !DILexicalBlockFile(scope: !918, file: !368, discriminator: 4)
!8282 = !DILocation(line: 570, column: 194, scope: !932)
!8283 = !DILocation(line: 570, column: 194, scope: !8284)
!8284 = !DILexicalBlockFile(scope: !932, file: !368, discriminator: 5)
!8285 = !DILocation(line: 571, column: 9, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !918, file: !368, line: 571, column: 9)
!8287 = !DILocation(line: 571, column: 9, scope: !918)
!8288 = !DILocation(line: 572, column: 25, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8286, file: !368, line: 571, column: 27)
!8290 = !DILocation(line: 572, column: 9, scope: !8289)
!8291 = !DILocation(line: 574, column: 9, scope: !8289)
!8292 = !DILocation(line: 586, column: 29, scope: !918)
!8293 = !DILocation(line: 586, column: 37, scope: !918)
!8294 = !DILocation(line: 586, column: 23, scope: !918)
!8295 = !DILocation(line: 586, column: 13, scope: !918)
!8296 = !DILocation(line: 587, column: 10, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !918, file: !368, line: 587, column: 9)
!8298 = !DILocation(line: 587, column: 9, scope: !918)
!8299 = !DILocation(line: 594, column: 25, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8297, file: !368, line: 587, column: 19)
!8301 = !DILocation(line: 594, column: 43, scope: !8300)
!8302 = !DILocation(line: 594, column: 9, scope: !8300)
!8303 = !DILocation(line: 596, column: 9, scope: !8300)
!8304 = !DILocation(line: 599, column: 30, scope: !918)
!8305 = !DILocation(line: 599, column: 36, scope: !918)
!8306 = !DILocation(line: 599, column: 12, scope: !918)
!8307 = !DILocation(line: 599, column: 5, scope: !918)
!8308 = !DILocation(line: 600, column: 1, scope: !918)
!8309 = !DILocation(line: 366, column: 35, scope: !940)
!8310 = !DILocation(line: 366, column: 51, scope: !940)
!8311 = !DILocation(line: 366, column: 67, scope: !940)
!8312 = !DILocation(line: 366, column: 77, scope: !940)
!8313 = !DILocation(line: 368, column: 5, scope: !940)
!8314 = !DILocation(line: 368, column: 19, scope: !940)
!8315 = !DILocation(line: 369, column: 5, scope: !940)
!8316 = !DILocation(line: 369, column: 15, scope: !940)
!8317 = !DILocation(line: 370, column: 5, scope: !940)
!8318 = !DILocation(line: 370, column: 20, scope: !940)
!8319 = !DILocation(line: 374, column: 42, scope: !940)
!8320 = !DILocation(line: 374, column: 49, scope: !940)
!8321 = !DILocation(line: 374, column: 55, scope: !940)
!8322 = !DILocation(line: 374, column: 61, scope: !940)
!8323 = !DILocation(line: 374, column: 30, scope: !940)
!8324 = !DILocation(line: 374, column: 14, scope: !940)
!8325 = !DILocation(line: 374, column: 12, scope: !940)
!8326 = !DILocation(line: 375, column: 10, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !940, file: !368, line: 375, column: 9)
!8328 = !DILocation(line: 375, column: 9, scope: !940)
!8329 = !DILocation(line: 376, column: 9, scope: !8327)
!8330 = !DILocation(line: 379, column: 30, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !940, file: !368, line: 379, column: 9)
!8332 = !DILocation(line: 379, column: 38, scope: !8331)
!8333 = !DILocation(line: 379, column: 9, scope: !8331)
!8334 = !DILocation(line: 379, column: 9, scope: !940)
!8335 = !DILocation(line: 380, column: 28, scope: !8331)
!8336 = !DILocation(line: 380, column: 16, scope: !8331)
!8337 = !DILocation(line: 380, column: 9, scope: !8331)
!8338 = !DILocation(line: 382, column: 29, scope: !940)
!8339 = !DILocation(line: 382, column: 12, scope: !940)
!8340 = !DILocation(line: 382, column: 10, scope: !940)
!8341 = !DILocation(line: 383, column: 10, scope: !954)
!8342 = !DILocation(line: 383, column: 9, scope: !940)
!8343 = !DILocation(line: 384, column: 9, scope: !953)
!8344 = !DILocation(line: 384, column: 14, scope: !8345)
!8345 = !DILexicalBlockFile(scope: !952, file: !368, discriminator: 1)
!8346 = !DILocation(line: 384, column: 24, scope: !952)
!8347 = !DILocation(line: 384, column: 54, scope: !952)
!8348 = !DILocation(line: 384, column: 41, scope: !952)
!8349 = !DILocation(line: 384, column: 71, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !952, file: !368, line: 384, column: 68)
!8351 = !DILocation(line: 384, column: 88, scope: !8350)
!8352 = !DILocation(line: 384, column: 68, scope: !8350)
!8353 = !DILocation(line: 384, column: 98, scope: !8350)
!8354 = !DILocation(line: 384, column: 68, scope: !952)
!8355 = !DILocation(line: 384, column: 68, scope: !8356)
!8356 = !DILexicalBlockFile(scope: !952, file: !368, discriminator: 2)
!8357 = !DILocation(line: 384, column: 129, scope: !8358)
!8358 = !DILexicalBlockFile(scope: !8350, file: !368, discriminator: 3)
!8359 = !DILocation(line: 384, column: 147, scope: !8350)
!8360 = !DILocation(line: 384, column: 157, scope: !8350)
!8361 = !DILocation(line: 384, column: 182, scope: !8350)
!8362 = !DILocation(line: 384, column: 113, scope: !8350)
!8363 = !DILocation(line: 384, column: 201, scope: !8364)
!8364 = !DILexicalBlockFile(scope: !953, file: !368, discriminator: 4)
!8365 = !DILocation(line: 384, column: 201, scope: !952)
!8366 = !DILocation(line: 384, column: 201, scope: !8367)
!8367 = !DILexicalBlockFile(scope: !952, file: !368, discriminator: 5)
!8368 = !DILocation(line: 385, column: 9, scope: !953)
!8369 = !DILocation(line: 389, column: 41, scope: !958)
!8370 = !DILocation(line: 389, column: 29, scope: !958)
!8371 = !DILocation(line: 389, column: 47, scope: !958)
!8372 = !DILocation(line: 389, column: 55, scope: !958)
!8373 = !DILocation(line: 389, column: 15, scope: !958)
!8374 = !DILocation(line: 389, column: 12, scope: !958)
!8375 = !DILocation(line: 389, column: 9, scope: !940)
!8376 = !DILocation(line: 390, column: 9, scope: !957)
!8377 = !DILocation(line: 390, column: 14, scope: !8378)
!8378 = !DILexicalBlockFile(scope: !956, file: !368, discriminator: 1)
!8379 = !DILocation(line: 390, column: 24, scope: !956)
!8380 = !DILocation(line: 390, column: 54, scope: !956)
!8381 = !DILocation(line: 390, column: 41, scope: !956)
!8382 = !DILocation(line: 390, column: 71, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !956, file: !368, line: 390, column: 68)
!8384 = !DILocation(line: 390, column: 88, scope: !8383)
!8385 = !DILocation(line: 390, column: 68, scope: !8383)
!8386 = !DILocation(line: 390, column: 98, scope: !8383)
!8387 = !DILocation(line: 390, column: 68, scope: !956)
!8388 = !DILocation(line: 390, column: 68, scope: !8389)
!8389 = !DILexicalBlockFile(scope: !956, file: !368, discriminator: 2)
!8390 = !DILocation(line: 390, column: 129, scope: !8391)
!8391 = !DILexicalBlockFile(scope: !8383, file: !368, discriminator: 3)
!8392 = !DILocation(line: 390, column: 147, scope: !8383)
!8393 = !DILocation(line: 390, column: 157, scope: !8383)
!8394 = !DILocation(line: 390, column: 182, scope: !8383)
!8395 = !DILocation(line: 390, column: 113, scope: !8383)
!8396 = !DILocation(line: 390, column: 201, scope: !8397)
!8397 = !DILexicalBlockFile(scope: !957, file: !368, discriminator: 4)
!8398 = !DILocation(line: 390, column: 201, scope: !956)
!8399 = !DILocation(line: 390, column: 201, scope: !8400)
!8400 = !DILexicalBlockFile(scope: !956, file: !368, discriminator: 5)
!8401 = !DILocation(line: 391, column: 9, scope: !957)
!8402 = !DILocation(line: 391, column: 14, scope: !8403)
!8403 = !DILexicalBlockFile(scope: !960, file: !368, discriminator: 1)
!8404 = !DILocation(line: 391, column: 24, scope: !960)
!8405 = !DILocation(line: 391, column: 66, scope: !960)
!8406 = !DILocation(line: 391, column: 54, scope: !960)
!8407 = !DILocation(line: 391, column: 81, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !960, file: !368, line: 391, column: 78)
!8409 = !DILocation(line: 391, column: 98, scope: !8408)
!8410 = !DILocation(line: 391, column: 78, scope: !8408)
!8411 = !DILocation(line: 391, column: 108, scope: !8408)
!8412 = !DILocation(line: 391, column: 78, scope: !960)
!8413 = !DILocation(line: 391, column: 78, scope: !8414)
!8414 = !DILexicalBlockFile(scope: !960, file: !368, discriminator: 2)
!8415 = !DILocation(line: 391, column: 139, scope: !8416)
!8416 = !DILexicalBlockFile(scope: !8408, file: !368, discriminator: 3)
!8417 = !DILocation(line: 391, column: 157, scope: !8408)
!8418 = !DILocation(line: 391, column: 167, scope: !8408)
!8419 = !DILocation(line: 391, column: 192, scope: !8408)
!8420 = !DILocation(line: 391, column: 123, scope: !8408)
!8421 = !DILocation(line: 391, column: 211, scope: !8397)
!8422 = !DILocation(line: 391, column: 211, scope: !960)
!8423 = !DILocation(line: 391, column: 211, scope: !8424)
!8424 = !DILexicalBlockFile(scope: !960, file: !368, discriminator: 5)
!8425 = !DILocation(line: 392, column: 9, scope: !957)
!8426 = !DILocation(line: 394, column: 5, scope: !940)
!8427 = !DILocation(line: 394, column: 10, scope: !8428)
!8428 = !DILexicalBlockFile(scope: !962, file: !368, discriminator: 1)
!8429 = !DILocation(line: 394, column: 20, scope: !962)
!8430 = !DILocation(line: 394, column: 50, scope: !962)
!8431 = !DILocation(line: 394, column: 58, scope: !962)
!8432 = !DILocation(line: 394, column: 76, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !962, file: !368, line: 394, column: 73)
!8434 = !DILocation(line: 394, column: 93, scope: !8433)
!8435 = !DILocation(line: 394, column: 73, scope: !8433)
!8436 = !DILocation(line: 394, column: 103, scope: !8433)
!8437 = !DILocation(line: 394, column: 73, scope: !962)
!8438 = !DILocation(line: 394, column: 73, scope: !8439)
!8439 = !DILexicalBlockFile(scope: !962, file: !368, discriminator: 2)
!8440 = !DILocation(line: 394, column: 134, scope: !8441)
!8441 = !DILexicalBlockFile(scope: !8433, file: !368, discriminator: 3)
!8442 = !DILocation(line: 394, column: 152, scope: !8433)
!8443 = !DILocation(line: 394, column: 162, scope: !8433)
!8444 = !DILocation(line: 394, column: 187, scope: !8433)
!8445 = !DILocation(line: 394, column: 118, scope: !8433)
!8446 = !DILocation(line: 394, column: 206, scope: !8447)
!8447 = !DILexicalBlockFile(scope: !940, file: !368, discriminator: 4)
!8448 = !DILocation(line: 394, column: 206, scope: !962)
!8449 = !DILocation(line: 394, column: 206, scope: !8450)
!8450 = !DILexicalBlockFile(scope: !962, file: !368, discriminator: 5)
!8451 = !DILocation(line: 395, column: 35, scope: !940)
!8452 = !DILocation(line: 395, column: 23, scope: !940)
!8453 = !DILocation(line: 395, column: 5, scope: !940)
!8454 = !DILocation(line: 395, column: 13, scope: !940)
!8455 = !DILocation(line: 395, column: 21, scope: !940)
!8456 = !DILocation(line: 396, column: 20, scope: !940)
!8457 = !DILocation(line: 396, column: 5, scope: !940)
!8458 = !DILocation(line: 396, column: 11, scope: !940)
!8459 = !DILocation(line: 396, column: 18, scope: !940)
!8460 = !DILocation(line: 397, column: 9, scope: !966)
!8461 = !DILocation(line: 397, column: 15, scope: !966)
!8462 = !DILocation(line: 397, column: 22, scope: !966)
!8463 = !DILocation(line: 397, column: 9, scope: !940)
!8464 = !DILocation(line: 398, column: 9, scope: !965)
!8465 = !DILocation(line: 398, column: 14, scope: !8466)
!8466 = !DILexicalBlockFile(scope: !964, file: !368, discriminator: 1)
!8467 = !DILocation(line: 398, column: 24, scope: !964)
!8468 = !DILocation(line: 398, column: 54, scope: !964)
!8469 = !DILocation(line: 398, column: 41, scope: !964)
!8470 = !DILocation(line: 398, column: 71, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !964, file: !368, line: 398, column: 68)
!8472 = !DILocation(line: 398, column: 88, scope: !8471)
!8473 = !DILocation(line: 398, column: 68, scope: !8471)
!8474 = !DILocation(line: 398, column: 98, scope: !8471)
!8475 = !DILocation(line: 398, column: 68, scope: !964)
!8476 = !DILocation(line: 398, column: 68, scope: !8477)
!8477 = !DILexicalBlockFile(scope: !964, file: !368, discriminator: 2)
!8478 = !DILocation(line: 398, column: 129, scope: !8479)
!8479 = !DILexicalBlockFile(scope: !8471, file: !368, discriminator: 3)
!8480 = !DILocation(line: 398, column: 147, scope: !8471)
!8481 = !DILocation(line: 398, column: 157, scope: !8471)
!8482 = !DILocation(line: 398, column: 182, scope: !8471)
!8483 = !DILocation(line: 398, column: 113, scope: !8471)
!8484 = !DILocation(line: 398, column: 201, scope: !8485)
!8485 = !DILexicalBlockFile(scope: !965, file: !368, discriminator: 4)
!8486 = !DILocation(line: 398, column: 201, scope: !964)
!8487 = !DILocation(line: 398, column: 201, scope: !8488)
!8488 = !DILexicalBlockFile(scope: !964, file: !368, discriminator: 5)
!8489 = !DILocation(line: 399, column: 9, scope: !965)
!8490 = !DILocation(line: 402, column: 5, scope: !940)
!8491 = !DILocation(line: 402, column: 11, scope: !940)
!8492 = !DILocation(line: 402, column: 21, scope: !940)
!8493 = !DILocation(line: 404, column: 47, scope: !940)
!8494 = !DILocation(line: 404, column: 35, scope: !940)
!8495 = !DILocation(line: 404, column: 14, scope: !940)
!8496 = !DILocation(line: 404, column: 12, scope: !940)
!8497 = !DILocation(line: 405, column: 10, scope: !969)
!8498 = !DILocation(line: 405, column: 9, scope: !940)
!8499 = !DILocation(line: 406, column: 9, scope: !968)
!8500 = !DILocation(line: 406, column: 24, scope: !968)
!8501 = !DILocation(line: 406, column: 62, scope: !968)
!8502 = !DILocation(line: 406, column: 70, scope: !968)
!8503 = !DILocation(line: 406, column: 50, scope: !968)
!8504 = !DILocation(line: 406, column: 35, scope: !968)
!8505 = !DILocation(line: 408, column: 13, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !968, file: !368, line: 408, column: 13)
!8507 = !DILocation(line: 408, column: 22, scope: !8506)
!8508 = !DILocation(line: 408, column: 13, scope: !968)
!8509 = !DILocation(line: 409, column: 32, scope: !8506)
!8510 = !DILocation(line: 409, column: 20, scope: !8506)
!8511 = !DILocation(line: 409, column: 13, scope: !8506)
!8512 = !DILocation(line: 411, column: 36, scope: !973)
!8513 = !DILocation(line: 411, column: 42, scope: !973)
!8514 = !DILocation(line: 411, column: 19, scope: !973)
!8515 = !DILocation(line: 411, column: 16, scope: !973)
!8516 = !DILocation(line: 411, column: 13, scope: !968)
!8517 = !DILocation(line: 412, column: 13, scope: !972)
!8518 = !DILocation(line: 412, column: 18, scope: !8519)
!8519 = !DILexicalBlockFile(scope: !971, file: !368, discriminator: 1)
!8520 = !DILocation(line: 412, column: 28, scope: !971)
!8521 = !DILocation(line: 412, column: 58, scope: !971)
!8522 = !DILocation(line: 412, column: 45, scope: !971)
!8523 = !DILocation(line: 412, column: 75, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !971, file: !368, line: 412, column: 72)
!8525 = !DILocation(line: 412, column: 92, scope: !8524)
!8526 = !DILocation(line: 412, column: 72, scope: !8524)
!8527 = !DILocation(line: 412, column: 102, scope: !8524)
!8528 = !DILocation(line: 412, column: 72, scope: !971)
!8529 = !DILocation(line: 412, column: 72, scope: !8530)
!8530 = !DILexicalBlockFile(scope: !971, file: !368, discriminator: 2)
!8531 = !DILocation(line: 412, column: 133, scope: !8532)
!8532 = !DILexicalBlockFile(scope: !8524, file: !368, discriminator: 3)
!8533 = !DILocation(line: 412, column: 151, scope: !8524)
!8534 = !DILocation(line: 412, column: 161, scope: !8524)
!8535 = !DILocation(line: 412, column: 186, scope: !8524)
!8536 = !DILocation(line: 412, column: 117, scope: !8524)
!8537 = !DILocation(line: 412, column: 205, scope: !8538)
!8538 = !DILexicalBlockFile(scope: !972, file: !368, discriminator: 4)
!8539 = !DILocation(line: 412, column: 205, scope: !971)
!8540 = !DILocation(line: 412, column: 205, scope: !8541)
!8541 = !DILexicalBlockFile(scope: !971, file: !368, discriminator: 5)
!8542 = !DILocation(line: 413, column: 13, scope: !972)
!8543 = !DILocation(line: 415, column: 9, scope: !968)
!8544 = !DILocation(line: 415, column: 15, scope: !968)
!8545 = !DILocation(line: 415, column: 21, scope: !968)
!8546 = !DILocation(line: 416, column: 9, scope: !968)
!8547 = !DILocation(line: 416, column: 19, scope: !968)
!8548 = !DILocation(line: 416, column: 25, scope: !968)
!8549 = !DILocation(line: 417, column: 28, scope: !968)
!8550 = !DILocation(line: 417, column: 16, scope: !968)
!8551 = !DILocation(line: 417, column: 9, scope: !968)
!8552 = !DILocation(line: 418, column: 5, scope: !969)
!8553 = !DILocation(line: 420, column: 50, scope: !977)
!8554 = !DILocation(line: 420, column: 38, scope: !977)
!8555 = !DILocation(line: 420, column: 70, scope: !977)
!8556 = !DILocation(line: 420, column: 15, scope: !977)
!8557 = !DILocation(line: 420, column: 12, scope: !977)
!8558 = !DILocation(line: 420, column: 9, scope: !940)
!8559 = !DILocation(line: 421, column: 9, scope: !976)
!8560 = !DILocation(line: 421, column: 14, scope: !8561)
!8561 = !DILexicalBlockFile(scope: !975, file: !368, discriminator: 1)
!8562 = !DILocation(line: 421, column: 24, scope: !975)
!8563 = !DILocation(line: 421, column: 54, scope: !975)
!8564 = !DILocation(line: 421, column: 41, scope: !975)
!8565 = !DILocation(line: 421, column: 71, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !975, file: !368, line: 421, column: 68)
!8567 = !DILocation(line: 421, column: 88, scope: !8566)
!8568 = !DILocation(line: 421, column: 68, scope: !8566)
!8569 = !DILocation(line: 421, column: 98, scope: !8566)
!8570 = !DILocation(line: 421, column: 68, scope: !975)
!8571 = !DILocation(line: 421, column: 68, scope: !8572)
!8572 = !DILexicalBlockFile(scope: !975, file: !368, discriminator: 2)
!8573 = !DILocation(line: 421, column: 129, scope: !8574)
!8574 = !DILexicalBlockFile(scope: !8566, file: !368, discriminator: 3)
!8575 = !DILocation(line: 421, column: 147, scope: !8566)
!8576 = !DILocation(line: 421, column: 157, scope: !8566)
!8577 = !DILocation(line: 421, column: 182, scope: !8566)
!8578 = !DILocation(line: 421, column: 113, scope: !8566)
!8579 = !DILocation(line: 421, column: 201, scope: !8580)
!8580 = !DILexicalBlockFile(scope: !976, file: !368, discriminator: 4)
!8581 = !DILocation(line: 421, column: 201, scope: !975)
!8582 = !DILocation(line: 421, column: 201, scope: !8583)
!8583 = !DILexicalBlockFile(scope: !975, file: !368, discriminator: 5)
!8584 = !DILocation(line: 422, column: 9, scope: !976)
!8585 = !DILocation(line: 424, column: 24, scope: !940)
!8586 = !DILocation(line: 424, column: 12, scope: !940)
!8587 = !DILocation(line: 424, column: 5, scope: !940)
!8588 = !DILocation(line: 425, column: 1, scope: !940)
!8589 = !DILocation(line: 341, column: 40, scope: !978)
!8590 = !DILocation(line: 343, column: 5, scope: !978)
!8591 = !DILocation(line: 343, column: 19, scope: !978)
!8592 = !DILocation(line: 344, column: 5, scope: !978)
!8593 = !DILocation(line: 344, column: 20, scope: !978)
!8594 = !DILocation(line: 346, column: 12, scope: !978)
!8595 = !DILocation(line: 346, column: 10, scope: !978)
!8596 = !DILocation(line: 347, column: 9, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !978, file: !368, line: 347, column: 9)
!8598 = !DILocation(line: 347, column: 14, scope: !8597)
!8599 = !DILocation(line: 347, column: 9, scope: !978)
!8600 = !DILocation(line: 348, column: 9, scope: !8597)
!8601 = !DILocation(line: 350, column: 5, scope: !978)
!8602 = !DILocation(line: 350, column: 11, scope: !978)
!8603 = !DILocation(line: 350, column: 15, scope: !978)
!8604 = !{!7926, !2524, i64 24}
!8605 = !DILocation(line: 351, column: 44, scope: !978)
!8606 = !DILocation(line: 351, column: 32, scope: !978)
!8607 = !DILocation(line: 351, column: 15, scope: !978)
!8608 = !DILocation(line: 351, column: 13, scope: !978)
!8609 = !DILocation(line: 353, column: 24, scope: !978)
!8610 = !DILocation(line: 353, column: 33, scope: !978)
!8611 = !DILocation(line: 353, column: 5, scope: !978)
!8612 = !DILocation(line: 353, column: 11, scope: !978)
!8613 = !DILocation(line: 353, column: 21, scope: !978)
!8614 = !{!7926, !2523, i64 16}
!8615 = !DILocation(line: 358, column: 21, scope: !978)
!8616 = !DILocation(line: 358, column: 27, scope: !978)
!8617 = !DILocation(line: 358, column: 5, scope: !978)
!8618 = !DILocation(line: 358, column: 11, scope: !978)
!8619 = !DILocation(line: 358, column: 17, scope: !978)
!8620 = !DILocation(line: 358, column: 19, scope: !978)
!8621 = !DILocation(line: 359, column: 18, scope: !978)
!8622 = !DILocation(line: 359, column: 24, scope: !978)
!8623 = !DILocation(line: 359, column: 5, scope: !978)
!8624 = !DILocation(line: 359, column: 11, scope: !978)
!8625 = !DILocation(line: 359, column: 16, scope: !978)
!8626 = !{!7926, !2553, i64 56}
!8627 = !DILocation(line: 360, column: 21, scope: !978)
!8628 = !DILocation(line: 360, column: 8, scope: !978)
!8629 = !DILocation(line: 360, column: 29, scope: !978)
!8630 = !DILocation(line: 360, column: 38, scope: !978)
!8631 = !DILocation(line: 361, column: 29, scope: !978)
!8632 = !DILocation(line: 361, column: 17, scope: !978)
!8633 = !DILocation(line: 361, column: 5, scope: !978)
!8634 = !DILocation(line: 361, column: 11, scope: !978)
!8635 = !DILocation(line: 361, column: 15, scope: !978)
!8636 = !DILocation(line: 362, column: 12, scope: !978)
!8637 = !DILocation(line: 362, column: 5, scope: !978)
!8638 = !DILocation(line: 363, column: 1, scope: !978)
!8639 = !DILocation(line: 968, column: 37, scope: !983)
!8640 = !DILocation(line: 968, column: 53, scope: !983)
!8641 = !DILocation(line: 970, column: 5, scope: !983)
!8642 = !DILocation(line: 970, column: 20, scope: !983)
!8643 = !DILocation(line: 972, column: 9, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !983, file: !368, line: 972, column: 9)
!8645 = !DILocation(line: 972, column: 15, scope: !8644)
!8646 = !DILocation(line: 972, column: 9, scope: !983)
!8647 = !DILocation(line: 974, column: 25, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8644, file: !368, line: 972, column: 37)
!8649 = !DILocation(line: 974, column: 34, scope: !8648)
!8650 = !DILocation(line: 974, column: 43, scope: !8648)
!8651 = !DILocation(line: 975, column: 16, scope: !8648)
!8652 = !DILocation(line: 975, column: 9, scope: !8648)
!8653 = !DILocation(line: 978, column: 31, scope: !983)
!8654 = !DILocation(line: 978, column: 16, scope: !983)
!8655 = !DILocation(line: 978, column: 14, scope: !983)
!8656 = !DILocation(line: 984, column: 33, scope: !983)
!8657 = !DILocation(line: 984, column: 40, scope: !983)
!8658 = !DILocation(line: 984, column: 50, scope: !983)
!8659 = !DILocation(line: 984, column: 13, scope: !983)
!8660 = !DILocation(line: 986, column: 25, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !983, file: !368, line: 984, column: 58)
!8662 = !DILocation(line: 986, column: 34, scope: !8661)
!8663 = !DILocation(line: 986, column: 43, scope: !8661)
!8664 = !DILocation(line: 987, column: 23, scope: !8661)
!8665 = !DILocation(line: 987, column: 16, scope: !8661)
!8666 = !DILocation(line: 987, column: 9, scope: !8661)
!8667 = !DILocation(line: 989, column: 9, scope: !8661)
!8668 = !DILocation(line: 991, column: 9, scope: !8661)
!8669 = !DILocation(line: 994, column: 24, scope: !990)
!8670 = !DILocation(line: 994, column: 33, scope: !990)
!8671 = !DILocation(line: 994, column: 42, scope: !990)
!8672 = !DILocation(line: 994, column: 64, scope: !990)
!8673 = !DILocation(line: 994, column: 98, scope: !8674)
!8674 = !DILexicalBlockFile(scope: !990, file: !368, discriminator: 1)
!8675 = !DILocation(line: 994, column: 107, scope: !990)
!8676 = !DILocation(line: 994, column: 67, scope: !990)
!8677 = !DILocation(line: 994, column: 138, scope: !990)
!8678 = !DILocation(line: 994, column: 156, scope: !8679)
!8679 = !DILexicalBlockFile(scope: !990, file: !368, discriminator: 2)
!8680 = !DILocation(line: 994, column: 165, scope: !990)
!8681 = !DILocation(line: 994, column: 174, scope: !990)
!8682 = !DILocation(line: 994, column: 194, scope: !990)
!8683 = !DILocation(line: 994, column: 228, scope: !8684)
!8684 = !DILexicalBlockFile(scope: !990, file: !368, discriminator: 3)
!8685 = !DILocation(line: 994, column: 237, scope: !990)
!8686 = !DILocation(line: 994, column: 197, scope: !990)
!8687 = !DILocation(line: 994, column: 9, scope: !983)
!8688 = !DILocation(line: 998, column: 9, scope: !989)
!8689 = !DILocation(line: 998, column: 24, scope: !989)
!8690 = !DILocation(line: 998, column: 45, scope: !989)
!8691 = !DILocation(line: 998, column: 28, scope: !989)
!8692 = !DILocation(line: 1000, column: 33, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !989, file: !368, line: 1000, column: 13)
!8694 = !DILocation(line: 1000, column: 36, scope: !8693)
!8695 = !DILocation(line: 1000, column: 43, scope: !8693)
!8696 = !DILocation(line: 1000, column: 53, scope: !8693)
!8697 = !DILocation(line: 1000, column: 13, scope: !8693)
!8698 = !DILocation(line: 1000, column: 13, scope: !989)
!8699 = !DILocation(line: 1001, column: 29, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8693, file: !368, line: 1000, column: 61)
!8701 = !DILocation(line: 1001, column: 38, scope: !8700)
!8702 = !DILocation(line: 1001, column: 47, scope: !8700)
!8703 = !DILocation(line: 1002, column: 20, scope: !8700)
!8704 = !DILocation(line: 1002, column: 13, scope: !8700)
!8705 = !DILocation(line: 1004, column: 5, scope: !990)
!8706 = !DILocation(line: 1004, column: 5, scope: !8674)
!8707 = !DILocation(line: 1004, column: 5, scope: !989)
!8708 = !DILocation(line: 1005, column: 33, scope: !983)
!8709 = !DILocation(line: 1005, column: 39, scope: !983)
!8710 = !DILocation(line: 1005, column: 12, scope: !983)
!8711 = !DILocation(line: 1005, column: 5, scope: !983)
!8712 = !DILocation(line: 1006, column: 1, scope: !983)
!8713 = !DILocation(line: 948, column: 39, scope: !999)
!8714 = !DILocation(line: 948, column: 55, scope: !999)
!8715 = !DILocation(line: 950, column: 5, scope: !999)
!8716 = !DILocation(line: 950, column: 20, scope: !999)
!8717 = !DILocation(line: 952, column: 39, scope: !999)
!8718 = !DILocation(line: 952, column: 27, scope: !999)
!8719 = !DILocation(line: 952, column: 12, scope: !999)
!8720 = !DILocation(line: 952, column: 10, scope: !999)
!8721 = !DILocation(line: 955, column: 39, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !999, file: !368, line: 955, column: 9)
!8723 = !DILocation(line: 955, column: 45, scope: !8722)
!8724 = !DILocation(line: 955, column: 15, scope: !8722)
!8725 = !DILocation(line: 955, column: 12, scope: !8722)
!8726 = !DILocation(line: 955, column: 9, scope: !999)
!8727 = !DILocation(line: 956, column: 9, scope: !8722)
!8728 = !DILocation(line: 958, column: 48, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !999, file: !368, line: 958, column: 9)
!8730 = !DILocation(line: 958, column: 36, scope: !8729)
!8731 = !DILocation(line: 958, column: 64, scope: !8729)
!8732 = !DILocation(line: 958, column: 15, scope: !8729)
!8733 = !DILocation(line: 958, column: 12, scope: !8729)
!8734 = !DILocation(line: 958, column: 9, scope: !999)
!8735 = !DILocation(line: 959, column: 9, scope: !8729)
!8736 = !DILocation(line: 961, column: 51, scope: !999)
!8737 = !DILocation(line: 962, column: 5, scope: !999)
!8738 = !DILocation(line: 963, column: 1, scope: !999)
!8739 = !DILocation(line: 3463, column: 18, scope: !991)
!8740 = !DILocation(line: 3465, column: 5, scope: !991)
!8741 = !DILocation(line: 3465, column: 19, scope: !991)
!8742 = !DILocation(line: 3466, column: 25, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !991, file: !368, line: 3466, column: 9)
!8744 = !DILocation(line: 3466, column: 32, scope: !8743)
!8745 = !DILocation(line: 3466, column: 41, scope: !8743)
!8746 = !DILocation(line: 3466, column: 60, scope: !8743)
!8747 = !DILocation(line: 3466, column: 94, scope: !8748)
!8748 = !DILexicalBlockFile(scope: !8743, file: !368, discriminator: 1)
!8749 = !DILocation(line: 3466, column: 101, scope: !8743)
!8750 = !DILocation(line: 3466, column: 63, scope: !8743)
!8751 = !DILocation(line: 3466, column: 9, scope: !991)
!8752 = !DILocation(line: 3467, column: 25, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8743, file: !368, line: 3466, column: 130)
!8754 = !DILocation(line: 3467, column: 9, scope: !8753)
!8755 = !DILocation(line: 3469, column: 9, scope: !8753)
!8756 = !DILocation(line: 3472, column: 12, scope: !991)
!8757 = !DILocation(line: 3472, column: 10, scope: !991)
!8758 = !DILocation(line: 3473, column: 9, scope: !998)
!8759 = !DILocation(line: 3473, column: 14, scope: !998)
!8760 = !DILocation(line: 3473, column: 9, scope: !991)
!8761 = !DILocation(line: 3474, column: 9, scope: !997)
!8762 = !DILocation(line: 3474, column: 14, scope: !8763)
!8763 = !DILexicalBlockFile(scope: !996, file: !368, discriminator: 1)
!8764 = !DILocation(line: 3474, column: 24, scope: !996)
!8765 = !DILocation(line: 3474, column: 54, scope: !996)
!8766 = !DILocation(line: 3474, column: 68, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !996, file: !368, line: 3474, column: 65)
!8768 = !DILocation(line: 3474, column: 85, scope: !8767)
!8769 = !DILocation(line: 3474, column: 65, scope: !8767)
!8770 = !DILocation(line: 3474, column: 95, scope: !8767)
!8771 = !DILocation(line: 3474, column: 65, scope: !996)
!8772 = !DILocation(line: 3474, column: 65, scope: !8773)
!8773 = !DILexicalBlockFile(scope: !996, file: !368, discriminator: 2)
!8774 = !DILocation(line: 3474, column: 126, scope: !8775)
!8775 = !DILexicalBlockFile(scope: !8767, file: !368, discriminator: 3)
!8776 = !DILocation(line: 3474, column: 144, scope: !8767)
!8777 = !DILocation(line: 3474, column: 154, scope: !8767)
!8778 = !DILocation(line: 3474, column: 179, scope: !8767)
!8779 = !DILocation(line: 3474, column: 110, scope: !8767)
!8780 = !DILocation(line: 3474, column: 198, scope: !8781)
!8781 = !DILexicalBlockFile(scope: !997, file: !368, discriminator: 4)
!8782 = !DILocation(line: 3474, column: 198, scope: !996)
!8783 = !DILocation(line: 3474, column: 198, scope: !8784)
!8784 = !DILexicalBlockFile(scope: !996, file: !368, discriminator: 5)
!8785 = !DILocation(line: 3475, column: 9, scope: !997)
!8786 = !DILocation(line: 3478, column: 5, scope: !991)
!8787 = !DILocation(line: 3478, column: 11, scope: !991)
!8788 = !DILocation(line: 3478, column: 15, scope: !991)
!8789 = !DILocation(line: 3479, column: 5, scope: !991)
!8790 = !DILocation(line: 3479, column: 11, scope: !991)
!8791 = !DILocation(line: 3479, column: 21, scope: !991)
!8792 = !DILocation(line: 3480, column: 17, scope: !991)
!8793 = !DILocation(line: 3480, column: 5, scope: !991)
!8794 = !DILocation(line: 3480, column: 11, scope: !991)
!8795 = !DILocation(line: 3480, column: 15, scope: !991)
!8796 = !DILocation(line: 3481, column: 37, scope: !991)
!8797 = !DILocation(line: 3481, column: 22, scope: !991)
!8798 = !DILocation(line: 3481, column: 43, scope: !991)
!8799 = !DILocation(line: 3481, column: 5, scope: !991)
!8800 = !DILocation(line: 3481, column: 11, scope: !991)
!8801 = !DILocation(line: 3481, column: 17, scope: !991)
!8802 = !DILocation(line: 3481, column: 19, scope: !991)
!8803 = !DILocation(line: 3482, column: 24, scope: !991)
!8804 = !DILocation(line: 3482, column: 12, scope: !991)
!8805 = !DILocation(line: 3482, column: 5, scope: !991)
!8806 = !DILocation(line: 3483, column: 1, scope: !991)
!8807 = !DILocation(line: 836, column: 40, scope: !1006)
!8808 = !DILocation(line: 836, column: 59, scope: !1006)
!8809 = !DILocation(line: 838, column: 10, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !1006, file: !368, line: 838, column: 9)
!8811 = !DILocation(line: 838, column: 16, scope: !8810)
!8812 = !DILocation(line: 838, column: 37, scope: !8813)
!8813 = !DILexicalBlockFile(scope: !8810, file: !368, discriminator: 1)
!8814 = !DILocation(line: 838, column: 46, scope: !8810)
!8815 = !DILocation(line: 838, column: 57, scope: !8810)
!8816 = !DILocation(line: 838, column: 66, scope: !8810)
!8817 = !DILocation(line: 838, column: 83, scope: !8810)
!8818 = !DILocation(line: 838, column: 9, scope: !1006)
!8819 = !DILocation(line: 839, column: 25, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8810, file: !368, line: 838, column: 90)
!8821 = !DILocation(line: 839, column: 9, scope: !8820)
!8822 = !DILocation(line: 841, column: 9, scope: !8820)
!8823 = !DILocation(line: 843, column: 25, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !1006, file: !368, line: 843, column: 9)
!8825 = !DILocation(line: 843, column: 10, scope: !8824)
!8826 = !DILocation(line: 843, column: 9, scope: !1006)
!8827 = !DILocation(line: 844, column: 25, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8824, file: !368, line: 843, column: 33)
!8829 = !DILocation(line: 844, column: 9, scope: !8828)
!8830 = !DILocation(line: 846, column: 9, scope: !8828)
!8831 = !DILocation(line: 848, column: 21, scope: !1006)
!8832 = !DILocation(line: 848, column: 30, scope: !1006)
!8833 = !DILocation(line: 848, column: 39, scope: !1006)
!8834 = !DILocation(line: 849, column: 5, scope: !1006)
!8835 = !DILocation(line: 849, column: 10, scope: !8836)
!8836 = !DILexicalBlockFile(scope: !1013, file: !368, discriminator: 1)
!8837 = !DILocation(line: 849, column: 20, scope: !1013)
!8838 = !DILocation(line: 849, column: 51, scope: !1013)
!8839 = !DILocation(line: 849, column: 60, scope: !1013)
!8840 = !DILocation(line: 849, column: 72, scope: !1016)
!8841 = !DILocation(line: 849, column: 88, scope: !1016)
!8842 = !DILocation(line: 849, column: 72, scope: !1013)
!8843 = !DILocation(line: 849, column: 103, scope: !8844)
!8844 = !DILexicalBlockFile(scope: !1016, file: !368, discriminator: 2)
!8845 = !DILocation(line: 849, column: 108, scope: !8846)
!8846 = !DILexicalBlockFile(scope: !1015, file: !368, discriminator: 4)
!8847 = !DILocation(line: 849, column: 118, scope: !1015)
!8848 = !DILocation(line: 849, column: 148, scope: !1015)
!8849 = !DILocation(line: 849, column: 174, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !1015, file: !368, line: 849, column: 171)
!8851 = !DILocation(line: 849, column: 191, scope: !8850)
!8852 = !DILocation(line: 849, column: 171, scope: !8850)
!8853 = !DILocation(line: 849, column: 201, scope: !8850)
!8854 = !DILocation(line: 849, column: 171, scope: !1015)
!8855 = !DILocation(line: 849, column: 171, scope: !8856)
!8856 = !DILexicalBlockFile(scope: !1015, file: !368, discriminator: 5)
!8857 = !DILocation(line: 849, column: 232, scope: !8858)
!8858 = !DILexicalBlockFile(scope: !8850, file: !368, discriminator: 6)
!8859 = !DILocation(line: 849, column: 250, scope: !8850)
!8860 = !DILocation(line: 849, column: 260, scope: !8850)
!8861 = !DILocation(line: 849, column: 285, scope: !8850)
!8862 = !DILocation(line: 849, column: 216, scope: !8850)
!8863 = !DILocation(line: 849, column: 304, scope: !8864)
!8864 = !DILexicalBlockFile(scope: !1016, file: !368, discriminator: 7)
!8865 = !DILocation(line: 849, column: 304, scope: !1015)
!8866 = !DILocation(line: 849, column: 304, scope: !8867)
!8867 = !DILexicalBlockFile(scope: !1015, file: !368, discriminator: 8)
!8868 = !DILocation(line: 849, column: 304, scope: !8869)
!8869 = !DILexicalBlockFile(scope: !1015, file: !368, discriminator: 9)
!8870 = !DILocation(line: 849, column: 317, scope: !8871)
!8871 = !DILexicalBlockFile(scope: !8872, file: !368, discriminator: 10)
!8872 = !DILexicalBlockFile(scope: !1006, file: !368, discriminator: 3)
!8873 = !DILocation(line: 849, column: 317, scope: !1013)
!8874 = !DILocation(line: 850, column: 22, scope: !1006)
!8875 = !DILocation(line: 850, column: 5, scope: !1006)
!8876 = !DILocation(line: 850, column: 14, scope: !1006)
!8877 = !DILocation(line: 850, column: 20, scope: !1006)
!8878 = !DILocation(line: 851, column: 5, scope: !1006)
!8879 = !DILocation(line: 852, column: 1, scope: !1006)
!8880 = !DILocation(line: 855, column: 39, scope: !1050)
!8881 = !DILocation(line: 857, column: 5, scope: !1050)
!8882 = !DILocation(line: 857, column: 19, scope: !1050)
!8883 = !DILocation(line: 859, column: 12, scope: !1050)
!8884 = !DILocation(line: 859, column: 10, scope: !1050)
!8885 = !DILocation(line: 860, column: 9, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !1050, file: !368, line: 860, column: 9)
!8887 = !DILocation(line: 860, column: 14, scope: !8886)
!8888 = !DILocation(line: 860, column: 9, scope: !1050)
!8889 = !DILocation(line: 861, column: 9, scope: !8886)
!8890 = !DILocation(line: 863, column: 5, scope: !1050)
!8891 = !DILocation(line: 863, column: 11, scope: !1050)
!8892 = !DILocation(line: 863, column: 15, scope: !1050)
!8893 = !DILocation(line: 864, column: 5, scope: !1050)
!8894 = !DILocation(line: 864, column: 11, scope: !1050)
!8895 = !DILocation(line: 864, column: 21, scope: !1050)
!8896 = !DILocation(line: 865, column: 21, scope: !1050)
!8897 = !DILocation(line: 865, column: 8, scope: !1050)
!8898 = !DILocation(line: 865, column: 29, scope: !1050)
!8899 = !DILocation(line: 865, column: 38, scope: !1050)
!8900 = !DILocation(line: 866, column: 29, scope: !1050)
!8901 = !DILocation(line: 866, column: 17, scope: !1050)
!8902 = !DILocation(line: 866, column: 5, scope: !1050)
!8903 = !DILocation(line: 866, column: 11, scope: !1050)
!8904 = !DILocation(line: 866, column: 15, scope: !1050)
!8905 = !DILocation(line: 867, column: 31, scope: !1050)
!8906 = !DILocation(line: 867, column: 37, scope: !1050)
!8907 = !DILocation(line: 867, column: 22, scope: !1050)
!8908 = !DILocation(line: 867, column: 21, scope: !1050)
!8909 = !DILocation(line: 867, column: 5, scope: !1050)
!8910 = !DILocation(line: 867, column: 11, scope: !1050)
!8911 = !DILocation(line: 867, column: 17, scope: !1050)
!8912 = !DILocation(line: 867, column: 19, scope: !1050)
!8913 = !DILocation(line: 868, column: 12, scope: !1050)
!8914 = !DILocation(line: 868, column: 5, scope: !1050)
!8915 = !DILocation(line: 869, column: 1, scope: !1050)
!8916 = !DILocation(line: 1274, column: 37, scope: !1095)
!8917 = !DILocation(line: 1276, column: 5, scope: !1095)
!8918 = !DILocation(line: 1276, column: 19, scope: !1095)
!8919 = !DILocation(line: 1276, column: 23, scope: !1095)
!8920 = !DILocation(line: 1277, column: 9, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !1095, file: !368, line: 1277, column: 9)
!8922 = !DILocation(line: 1277, column: 11, scope: !8921)
!8923 = !DILocation(line: 1277, column: 9, scope: !1095)
!8924 = !DILocation(line: 1278, column: 9, scope: !8921)
!8925 = !DILocation(line: 1279, column: 5, scope: !1095)
!8926 = !DILocation(line: 1279, column: 8, scope: !1095)
!8927 = !DILocation(line: 1279, column: 12, scope: !1095)
!8928 = !DILocation(line: 1280, column: 5, scope: !1095)
!8929 = !DILocation(line: 1280, column: 8, scope: !1095)
!8930 = !DILocation(line: 1280, column: 18, scope: !1095)
!8931 = !DILocation(line: 1281, column: 26, scope: !1095)
!8932 = !DILocation(line: 1281, column: 32, scope: !1095)
!8933 = !DILocation(line: 1281, column: 5, scope: !1095)
!8934 = !DILocation(line: 1281, column: 8, scope: !1095)
!8935 = !DILocation(line: 1281, column: 14, scope: !1095)
!8936 = !DILocation(line: 1281, column: 16, scope: !1095)
!8937 = !DILocation(line: 1282, column: 21, scope: !1095)
!8938 = !DILocation(line: 1282, column: 8, scope: !1095)
!8939 = !DILocation(line: 1282, column: 29, scope: !1095)
!8940 = !DILocation(line: 1282, column: 38, scope: !1095)
!8941 = !DILocation(line: 1283, column: 26, scope: !1095)
!8942 = !DILocation(line: 1283, column: 14, scope: !1095)
!8943 = !DILocation(line: 1283, column: 5, scope: !1095)
!8944 = !DILocation(line: 1283, column: 8, scope: !1095)
!8945 = !DILocation(line: 1283, column: 12, scope: !1095)
!8946 = !DILocation(line: 1284, column: 12, scope: !1095)
!8947 = !DILocation(line: 1284, column: 5, scope: !1095)
!8948 = !DILocation(line: 1285, column: 1, scope: !1095)
!8949 = !DILocation(line: 1258, column: 26, scope: !1099)
!8950 = !DILocation(line: 1258, column: 45, scope: !1099)
!8951 = !DILocation(line: 1260, column: 5, scope: !1099)
!8952 = !DILocation(line: 1260, column: 15, scope: !1099)
!8953 = !DILocation(line: 1260, column: 22, scope: !1099)
!8954 = !DILocation(line: 1260, column: 28, scope: !1099)
!8955 = !DILocation(line: 1261, column: 5, scope: !1099)
!8956 = !DILocation(line: 1261, column: 12, scope: !8957)
!8957 = !DILexicalBlockFile(scope: !8958, file: !368, discriminator: 2)
!8958 = !DILexicalBlockFile(scope: !1110, file: !368, discriminator: 1)
!8959 = !DILocation(line: 1261, column: 17, scope: !1110)
!8960 = !{!8961, !2523, i64 0}
!8961 = !{!"PyGetSetDef", !2523, i64 0, !2523, i64 8, !2523, i64 16, !2523, i64 24, !2523, i64 32}
!8962 = !DILocation(line: 1261, column: 22, scope: !1110)
!8963 = !DILocation(line: 1261, column: 5, scope: !1111)
!8964 = !DILocation(line: 1262, column: 9, scope: !1109)
!8965 = !DILocation(line: 1262, column: 19, scope: !1109)
!8966 = !DILocation(line: 1263, column: 35, scope: !1109)
!8967 = !DILocation(line: 1263, column: 41, scope: !1109)
!8968 = !DILocation(line: 1263, column: 17, scope: !1109)
!8969 = !DILocation(line: 1263, column: 15, scope: !1109)
!8970 = !DILocation(line: 1264, column: 13, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !1109, file: !368, line: 1264, column: 13)
!8972 = !DILocation(line: 1264, column: 19, scope: !8971)
!8973 = !DILocation(line: 1264, column: 13, scope: !1109)
!8974 = !DILocation(line: 1265, column: 13, scope: !8971)
!8975 = !DILocation(line: 1266, column: 34, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !1109, file: !368, line: 1266, column: 13)
!8977 = !DILocation(line: 1266, column: 40, scope: !8976)
!8978 = !DILocation(line: 1266, column: 45, scope: !8976)
!8979 = !DILocation(line: 1266, column: 51, scope: !8976)
!8980 = !DILocation(line: 1266, column: 13, scope: !8976)
!8981 = !DILocation(line: 1266, column: 58, scope: !8976)
!8982 = !DILocation(line: 1266, column: 13, scope: !1109)
!8983 = !DILocation(line: 1267, column: 13, scope: !8976)
!8984 = !DILocation(line: 1268, column: 9, scope: !1109)
!8985 = !DILocation(line: 1268, column: 14, scope: !8986)
!8986 = !DILexicalBlockFile(scope: !1113, file: !368, discriminator: 1)
!8987 = !DILocation(line: 1268, column: 24, scope: !1113)
!8988 = !DILocation(line: 1268, column: 54, scope: !1113)
!8989 = !DILocation(line: 1268, column: 70, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !1113, file: !368, line: 1268, column: 67)
!8991 = !DILocation(line: 1268, column: 87, scope: !8990)
!8992 = !DILocation(line: 1268, column: 67, scope: !8990)
!8993 = !DILocation(line: 1268, column: 97, scope: !8990)
!8994 = !DILocation(line: 1268, column: 67, scope: !1113)
!8995 = !DILocation(line: 1268, column: 67, scope: !8996)
!8996 = !DILexicalBlockFile(scope: !1113, file: !368, discriminator: 2)
!8997 = !DILocation(line: 1268, column: 128, scope: !8998)
!8998 = !DILexicalBlockFile(scope: !8990, file: !368, discriminator: 3)
!8999 = !DILocation(line: 1268, column: 146, scope: !8990)
!9000 = !DILocation(line: 1268, column: 156, scope: !8990)
!9001 = !DILocation(line: 1268, column: 181, scope: !8990)
!9002 = !DILocation(line: 1268, column: 112, scope: !8990)
!9003 = !DILocation(line: 1268, column: 200, scope: !9004)
!9004 = !DILexicalBlockFile(scope: !1109, file: !368, discriminator: 4)
!9005 = !DILocation(line: 1268, column: 200, scope: !1113)
!9006 = !DILocation(line: 1268, column: 200, scope: !9007)
!9007 = !DILexicalBlockFile(scope: !1113, file: !368, discriminator: 5)
!9008 = !DILocation(line: 1269, column: 5, scope: !1110)
!9009 = !DILocation(line: 1269, column: 5, scope: !8958)
!9010 = !DILocation(line: 1269, column: 5, scope: !1109)
!9011 = !DILocation(line: 1261, column: 40, scope: !1110)
!9012 = !DILocation(line: 1261, column: 5, scope: !1110)
!9013 = !DILocation(line: 1270, column: 5, scope: !1099)
!9014 = !DILocation(line: 1271, column: 1, scope: !1099)
!9015 = !DILocation(line: 1097, column: 32, scope: !1114)
!9016 = !DILocation(line: 1099, column: 38, scope: !1114)
!9017 = !DILocation(line: 1099, column: 44, scope: !1114)
!9018 = !DILocation(line: 1099, column: 51, scope: !1114)
!9019 = !DILocation(line: 1099, column: 57, scope: !1114)
!9020 = !DILocation(line: 1099, column: 12, scope: !1114)
!9021 = !DILocation(line: 1099, column: 5, scope: !1114)
!9022 = !DILocation(line: 1071, column: 32, scope: !1119)
!9023 = !DILocation(line: 1071, column: 48, scope: !1119)
!9024 = !DILocation(line: 1073, column: 5, scope: !1119)
!9025 = !DILocation(line: 1073, column: 11, scope: !1119)
!9026 = !DILocation(line: 1074, column: 5, scope: !1119)
!9027 = !DILocation(line: 1074, column: 16, scope: !1119)
!9028 = !DILocation(line: 1075, column: 5, scope: !1119)
!9029 = !DILocation(line: 1075, column: 15, scope: !1119)
!9030 = !DILocation(line: 1077, column: 28, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !1119, file: !368, line: 1077, column: 9)
!9032 = !DILocation(line: 1077, column: 9, scope: !9031)
!9033 = !DILocation(line: 1077, column: 45, scope: !9031)
!9034 = !DILocation(line: 1077, column: 9, scope: !1119)
!9035 = !DILocation(line: 1078, column: 9, scope: !9031)
!9036 = !DILocation(line: 1079, column: 17, scope: !1119)
!9037 = !{!9038, !2553, i64 16}
!9038 = !{!"bufferinfo", !2523, i64 0, !2523, i64 8, !2553, i64 16, !2553, i64 24, !2593, i64 32, !2593, i64 36, !2523, i64 40, !2523, i64 48, !2523, i64 56, !2523, i64 64, !2523, i64 72}
!9039 = !DILocation(line: 1079, column: 10, scope: !1119)
!9040 = !DILocation(line: 1080, column: 16, scope: !1119)
!9041 = !{!9038, !2523, i64 0}
!9042 = !DILocation(line: 1080, column: 9, scope: !1119)
!9043 = !DILocation(line: 1081, column: 9, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !1119, file: !368, line: 1081, column: 9)
!9045 = !DILocation(line: 1081, column: 16, scope: !9044)
!9046 = !DILocation(line: 1081, column: 22, scope: !9044)
!9047 = !DILocation(line: 1081, column: 14, scope: !9044)
!9048 = !DILocation(line: 1081, column: 9, scope: !1119)
!9049 = !DILocation(line: 1082, column: 25, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9044, file: !368, line: 1081, column: 30)
!9051 = !DILocation(line: 1082, column: 9, scope: !9050)
!9052 = !DILocation(line: 1084, column: 9, scope: !9050)
!9053 = !DILocation(line: 1087, column: 12, scope: !1119)
!9054 = !DILocation(line: 1087, column: 18, scope: !1119)
!9055 = !DILocation(line: 1087, column: 25, scope: !1119)
!9056 = !DILocation(line: 1087, column: 30, scope: !1119)
!9057 = !DILocation(line: 1087, column: 5, scope: !1119)
!9058 = !DILocation(line: 1089, column: 5, scope: !1119)
!9059 = !DILocation(line: 1090, column: 5, scope: !1119)
!9060 = !DILocation(line: 1092, column: 5, scope: !1119)
!9061 = !DILocation(line: 1093, column: 5, scope: !1119)
!9062 = !DILocation(line: 1094, column: 1, scope: !1119)
!9063 = !DILocation(line: 1103, column: 34, scope: !1128)
!9064 = !DILocation(line: 1105, column: 5, scope: !1128)
!9065 = !DILocation(line: 1105, column: 9, scope: !1128)
!9066 = !DILocation(line: 1106, column: 5, scope: !1128)
!9067 = !DILocation(line: 1106, column: 11, scope: !1128)
!9068 = !DILocation(line: 1106, column: 17, scope: !1128)
!9069 = !DILocation(line: 1106, column: 23, scope: !1128)
!9070 = !DILocation(line: 1107, column: 12, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !1128, file: !368, line: 1107, column: 5)
!9072 = !DILocation(line: 1107, column: 10, scope: !9071)
!9073 = !DILocation(line: 1107, column: 17, scope: !9074)
!9074 = !DILexicalBlockFile(scope: !9075, file: !368, discriminator: 2)
!9075 = !DILexicalBlockFile(scope: !9076, file: !368, discriminator: 1)
!9076 = distinct !DILexicalBlock(scope: !9071, file: !368, line: 1107, column: 5)
!9077 = !DILocation(line: 1107, column: 21, scope: !9076)
!9078 = !DILocation(line: 1107, column: 27, scope: !9076)
!9079 = !DILocation(line: 1107, column: 19, scope: !9076)
!9080 = !DILocation(line: 1107, column: 5, scope: !9071)
!9081 = !DILocation(line: 1108, column: 17, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9076, file: !368, line: 1108, column: 13)
!9083 = !DILocation(line: 1108, column: 13, scope: !9082)
!9084 = !DILocation(line: 1108, column: 20, scope: !9082)
!9085 = !DILocation(line: 1108, column: 13, scope: !9076)
!9086 = !DILocation(line: 1109, column: 13, scope: !9082)
!9087 = !DILocation(line: 1108, column: 23, scope: !9088)
!9088 = !DILexicalBlockFile(scope: !9082, file: !368, discriminator: 1)
!9089 = !DILocation(line: 1107, column: 35, scope: !9076)
!9090 = !DILocation(line: 1107, column: 5, scope: !9076)
!9091 = !DILocation(line: 1110, column: 38, scope: !1128)
!9092 = !DILocation(line: 1110, column: 44, scope: !1128)
!9093 = !DILocation(line: 1110, column: 51, scope: !1128)
!9094 = !DILocation(line: 1110, column: 12, scope: !1128)
!9095 = !DILocation(line: 1111, column: 1, scope: !1128)
!9096 = !DILocation(line: 1110, column: 5, scope: !1128)
!9097 = !DILocation(line: 1114, column: 34, scope: !1133)
!9098 = !DILocation(line: 1114, column: 50, scope: !1133)
!9099 = !DILocation(line: 1116, column: 5, scope: !1133)
!9100 = !DILocation(line: 1116, column: 11, scope: !1133)
!9101 = !DILocation(line: 1117, column: 5, scope: !1133)
!9102 = !DILocation(line: 1117, column: 16, scope: !1133)
!9103 = !DILocation(line: 1119, column: 9, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !1133, file: !368, line: 1119, column: 9)
!9105 = !DILocation(line: 1119, column: 15, scope: !9104)
!9106 = !DILocation(line: 1119, column: 9, scope: !1133)
!9107 = !DILocation(line: 1120, column: 25, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9104, file: !368, line: 1119, column: 30)
!9109 = !DILocation(line: 1120, column: 9, scope: !9108)
!9110 = !DILocation(line: 1122, column: 9, scope: !9108)
!9111 = !DILocation(line: 1125, column: 27, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !1133, file: !368, line: 1125, column: 9)
!9113 = !DILocation(line: 1125, column: 36, scope: !9112)
!9114 = !DILocation(line: 1125, column: 47, scope: !9112)
!9115 = !DILocation(line: 1125, column: 56, scope: !9112)
!9116 = !DILocation(line: 1125, column: 73, scope: !9112)
!9117 = !DILocation(line: 1125, column: 9, scope: !1133)
!9118 = !DILocation(line: 1126, column: 22, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9112, file: !368, line: 1125, column: 80)
!9120 = !DILocation(line: 1128, column: 36, scope: !9119)
!9121 = !DILocation(line: 1128, column: 45, scope: !9119)
!9122 = !DILocation(line: 1128, column: 55, scope: !9119)
!9123 = !DILocation(line: 1126, column: 9, scope: !9119)
!9124 = !DILocation(line: 1129, column: 9, scope: !9119)
!9125 = !DILocation(line: 1131, column: 25, scope: !9112)
!9126 = !DILocation(line: 1131, column: 34, scope: !9112)
!9127 = !DILocation(line: 1131, column: 43, scope: !9112)
!9128 = !DILocation(line: 1132, column: 43, scope: !1133)
!9129 = !DILocation(line: 1132, column: 28, scope: !1133)
!9130 = !DILocation(line: 1132, column: 52, scope: !1133)
!9131 = !DILocation(line: 1132, column: 10, scope: !1133)
!9132 = !DILocation(line: 1133, column: 9, scope: !1142)
!9133 = !DILocation(line: 1133, column: 16, scope: !1142)
!9134 = !DILocation(line: 1133, column: 22, scope: !1142)
!9135 = !DILocation(line: 1133, column: 14, scope: !1142)
!9136 = !DILocation(line: 1133, column: 9, scope: !1133)
!9137 = !DILocation(line: 1134, column: 25, scope: !1141)
!9138 = !DILocation(line: 1134, column: 9, scope: !1141)
!9139 = !DILocation(line: 1136, column: 9, scope: !1141)
!9140 = !DILocation(line: 1136, column: 14, scope: !9141)
!9141 = !DILexicalBlockFile(scope: !1140, file: !368, discriminator: 1)
!9142 = !DILocation(line: 1136, column: 24, scope: !1140)
!9143 = !DILocation(line: 1136, column: 54, scope: !1140)
!9144 = !DILocation(line: 1136, column: 70, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !1140, file: !368, line: 1136, column: 67)
!9146 = !DILocation(line: 1136, column: 87, scope: !9145)
!9147 = !DILocation(line: 1136, column: 67, scope: !9145)
!9148 = !DILocation(line: 1136, column: 97, scope: !9145)
!9149 = !DILocation(line: 1136, column: 67, scope: !1140)
!9150 = !DILocation(line: 1136, column: 67, scope: !9151)
!9151 = !DILexicalBlockFile(scope: !1140, file: !368, discriminator: 2)
!9152 = !DILocation(line: 1136, column: 128, scope: !9153)
!9153 = !DILexicalBlockFile(scope: !9145, file: !368, discriminator: 3)
!9154 = !DILocation(line: 1136, column: 146, scope: !9145)
!9155 = !DILocation(line: 1136, column: 156, scope: !9145)
!9156 = !DILocation(line: 1136, column: 181, scope: !9145)
!9157 = !DILocation(line: 1136, column: 112, scope: !9145)
!9158 = !DILocation(line: 1136, column: 200, scope: !9159)
!9159 = !DILexicalBlockFile(scope: !1141, file: !368, discriminator: 4)
!9160 = !DILocation(line: 1136, column: 200, scope: !1140)
!9161 = !DILocation(line: 1136, column: 200, scope: !9162)
!9162 = !DILexicalBlockFile(scope: !1140, file: !368, discriminator: 5)
!9163 = !DILocation(line: 1137, column: 9, scope: !1141)
!9164 = !DILocation(line: 1140, column: 46, scope: !1133)
!9165 = !DILocation(line: 1140, column: 28, scope: !1133)
!9166 = !DILocation(line: 1140, column: 55, scope: !1133)
!9167 = !DILocation(line: 1140, column: 26, scope: !1133)
!9168 = !DILocation(line: 1140, column: 9, scope: !1133)
!9169 = !DILocation(line: 1141, column: 12, scope: !1133)
!9170 = !DILocation(line: 1141, column: 18, scope: !1133)
!9171 = !DILocation(line: 1141, column: 25, scope: !1133)
!9172 = !DILocation(line: 1141, column: 30, scope: !1133)
!9173 = !DILocation(line: 1141, column: 5, scope: !1133)
!9174 = !DILocation(line: 1142, column: 9, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !1133, file: !368, line: 1142, column: 9)
!9176 = !DILocation(line: 1142, column: 16, scope: !9175)
!9177 = !DILocation(line: 1142, column: 22, scope: !9175)
!9178 = !DILocation(line: 1142, column: 14, scope: !9175)
!9179 = !DILocation(line: 1142, column: 9, scope: !1133)
!9180 = !DILocation(line: 1143, column: 21, scope: !9175)
!9181 = !DILocation(line: 1143, column: 9, scope: !9175)
!9182 = !DILocation(line: 1143, column: 15, scope: !9175)
!9183 = !DILocation(line: 1143, column: 27, scope: !9175)
!9184 = !DILocation(line: 1144, column: 5, scope: !1133)
!9185 = !DILocation(line: 1144, column: 10, scope: !9186)
!9186 = !DILexicalBlockFile(scope: !1144, file: !368, discriminator: 1)
!9187 = !DILocation(line: 1144, column: 20, scope: !1144)
!9188 = !DILocation(line: 1144, column: 50, scope: !1144)
!9189 = !DILocation(line: 1144, column: 66, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !1144, file: !368, line: 1144, column: 63)
!9191 = !DILocation(line: 1144, column: 83, scope: !9190)
!9192 = !DILocation(line: 1144, column: 63, scope: !9190)
!9193 = !DILocation(line: 1144, column: 93, scope: !9190)
!9194 = !DILocation(line: 1144, column: 63, scope: !1144)
!9195 = !DILocation(line: 1144, column: 63, scope: !9196)
!9196 = !DILexicalBlockFile(scope: !1144, file: !368, discriminator: 2)
!9197 = !DILocation(line: 1144, column: 124, scope: !9198)
!9198 = !DILexicalBlockFile(scope: !9190, file: !368, discriminator: 3)
!9199 = !DILocation(line: 1144, column: 142, scope: !9190)
!9200 = !DILocation(line: 1144, column: 152, scope: !9190)
!9201 = !DILocation(line: 1144, column: 177, scope: !9190)
!9202 = !DILocation(line: 1144, column: 108, scope: !9190)
!9203 = !DILocation(line: 1144, column: 196, scope: !9204)
!9204 = !DILexicalBlockFile(scope: !1133, file: !368, discriminator: 4)
!9205 = !DILocation(line: 1144, column: 196, scope: !1144)
!9206 = !DILocation(line: 1144, column: 196, scope: !9207)
!9207 = !DILexicalBlockFile(scope: !1144, file: !368, discriminator: 5)
!9208 = !DILocation(line: 1146, column: 5, scope: !1133)
!9209 = !DILocation(line: 1147, column: 1, scope: !1133)
!9210 = !DILocation(line: 1159, column: 35, scope: !1145)
!9211 = !DILocation(line: 1161, column: 5, scope: !1145)
!9212 = !DILocation(line: 1161, column: 18, scope: !1145)
!9213 = !DILocation(line: 1162, column: 5, scope: !1145)
!9214 = !DILocation(line: 1162, column: 14, scope: !1145)
!9215 = !DILocation(line: 1162, column: 31, scope: !1145)
!9216 = !DILocation(line: 1162, column: 37, scope: !1145)
!9217 = !DILocation(line: 1162, column: 20, scope: !1145)
!9218 = !DILocation(line: 1163, column: 12, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !1145, file: !368, line: 1163, column: 5)
!9220 = !DILocation(line: 1163, column: 10, scope: !9219)
!9221 = !DILocation(line: 1163, column: 17, scope: !9222)
!9222 = !DILexicalBlockFile(scope: !9223, file: !368, discriminator: 2)
!9223 = !DILexicalBlockFile(scope: !9224, file: !368, discriminator: 1)
!9224 = distinct !DILexicalBlock(scope: !9219, file: !368, line: 1163, column: 5)
!9225 = !DILocation(line: 1163, column: 21, scope: !9224)
!9226 = !DILocation(line: 1163, column: 27, scope: !9224)
!9227 = !DILocation(line: 1163, column: 33, scope: !9224)
!9228 = !DILocation(line: 1163, column: 19, scope: !9224)
!9229 = !DILocation(line: 1163, column: 5, scope: !9219)
!9230 = !DILocation(line: 1164, column: 17, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9224, file: !368, line: 1164, column: 13)
!9232 = !DILocation(line: 1164, column: 13, scope: !9231)
!9233 = !DILocation(line: 1164, column: 20, scope: !9231)
!9234 = !DILocation(line: 1164, column: 13, scope: !9224)
!9235 = !DILocation(line: 1165, column: 13, scope: !9231)
!9236 = !DILocation(line: 1164, column: 32, scope: !9237)
!9237 = !DILexicalBlockFile(scope: !9231, file: !368, discriminator: 1)
!9238 = !DILocation(line: 1163, column: 51, scope: !9224)
!9239 = !DILocation(line: 1163, column: 5, scope: !9224)
!9240 = !DILocation(line: 1166, column: 46, scope: !1145)
!9241 = !DILocation(line: 1166, column: 52, scope: !1145)
!9242 = !DILocation(line: 1166, column: 35, scope: !1145)
!9243 = !DILocation(line: 1166, column: 59, scope: !1145)
!9244 = !DILocation(line: 1166, column: 12, scope: !1145)
!9245 = !DILocation(line: 1167, column: 1, scope: !1145)
!9246 = !DILocation(line: 1166, column: 5, scope: !1145)
!9247 = !DILocation(line: 1170, column: 35, scope: !1150)
!9248 = !DILocation(line: 1170, column: 51, scope: !1150)
!9249 = !DILocation(line: 1172, column: 5, scope: !1150)
!9250 = !DILocation(line: 1172, column: 16, scope: !1150)
!9251 = !DILocation(line: 1173, column: 5, scope: !1150)
!9252 = !DILocation(line: 1173, column: 17, scope: !1150)
!9253 = !DILocation(line: 1174, column: 5, scope: !1150)
!9254 = !DILocation(line: 1174, column: 16, scope: !1150)
!9255 = !DILocation(line: 1176, column: 9, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !1150, file: !368, line: 1176, column: 9)
!9257 = !DILocation(line: 1176, column: 15, scope: !9256)
!9258 = !DILocation(line: 1176, column: 9, scope: !1150)
!9259 = !DILocation(line: 1177, column: 25, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9256, file: !368, line: 1176, column: 30)
!9261 = !DILocation(line: 1177, column: 9, scope: !9260)
!9262 = !DILocation(line: 1179, column: 9, scope: !9260)
!9263 = !DILocation(line: 1181, column: 27, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !1150, file: !368, line: 1181, column: 9)
!9265 = !DILocation(line: 1181, column: 36, scope: !9264)
!9266 = !DILocation(line: 1181, column: 47, scope: !9264)
!9267 = !DILocation(line: 1181, column: 56, scope: !9264)
!9268 = !DILocation(line: 1181, column: 73, scope: !9264)
!9269 = !DILocation(line: 1181, column: 9, scope: !1150)
!9270 = !DILocation(line: 1182, column: 22, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9264, file: !368, line: 1181, column: 80)
!9272 = !DILocation(line: 1184, column: 39, scope: !9271)
!9273 = !DILocation(line: 1184, column: 48, scope: !9271)
!9274 = !DILocation(line: 1184, column: 58, scope: !9271)
!9275 = !DILocation(line: 1182, column: 9, scope: !9271)
!9276 = !DILocation(line: 1185, column: 9, scope: !9271)
!9277 = !DILocation(line: 1187, column: 25, scope: !9264)
!9278 = !DILocation(line: 1187, column: 34, scope: !9264)
!9279 = !DILocation(line: 1187, column: 43, scope: !9264)
!9280 = !DILocation(line: 1189, column: 39, scope: !1150)
!9281 = !DILocation(line: 1189, column: 12, scope: !1150)
!9282 = !DILocation(line: 1189, column: 10, scope: !1150)
!9283 = !DILocation(line: 1190, column: 9, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !1150, file: !368, line: 1190, column: 9)
!9285 = !DILocation(line: 1190, column: 14, scope: !9284)
!9286 = !DILocation(line: 1190, column: 9, scope: !1150)
!9287 = !DILocation(line: 1191, column: 9, scope: !9284)
!9288 = !DILocation(line: 1192, column: 19, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !1150, file: !368, line: 1192, column: 9)
!9290 = !DILocation(line: 1192, column: 9, scope: !9289)
!9291 = !DILocation(line: 1192, column: 25, scope: !9289)
!9292 = !DILocation(line: 1192, column: 31, scope: !9289)
!9293 = !DILocation(line: 1192, column: 37, scope: !9289)
!9294 = !DILocation(line: 1192, column: 23, scope: !9289)
!9295 = !DILocation(line: 1192, column: 9, scope: !1150)
!9296 = !DILocation(line: 1193, column: 25, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9289, file: !368, line: 1192, column: 55)
!9298 = !DILocation(line: 1193, column: 9, scope: !9297)
!9299 = !DILocation(line: 1195, column: 16, scope: !9297)
!9300 = !DILocation(line: 1196, column: 9, scope: !9297)
!9301 = !DILocation(line: 1198, column: 35, scope: !1150)
!9302 = !DILocation(line: 1199, column: 46, scope: !1150)
!9303 = !DILocation(line: 1199, column: 52, scope: !1150)
!9304 = !DILocation(line: 1199, column: 35, scope: !1150)
!9305 = !DILocation(line: 1200, column: 35, scope: !1150)
!9306 = !DILocation(line: 1200, column: 41, scope: !1150)
!9307 = !DILocation(line: 1200, column: 47, scope: !1150)
!9308 = !DILocation(line: 1198, column: 14, scope: !1150)
!9309 = !DILocation(line: 1198, column: 12, scope: !1150)
!9310 = !DILocation(line: 1201, column: 9, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !1150, file: !368, line: 1201, column: 9)
!9312 = !DILocation(line: 1201, column: 16, scope: !9311)
!9313 = !DILocation(line: 1201, column: 21, scope: !9311)
!9314 = !DILocation(line: 1201, column: 32, scope: !9315)
!9315 = !DILexicalBlockFile(scope: !9311, file: !368, discriminator: 1)
!9316 = !DILocation(line: 1201, column: 41, scope: !9311)
!9317 = !DILocation(line: 1201, column: 47, scope: !9311)
!9318 = !DILocation(line: 1201, column: 53, scope: !9311)
!9319 = !DILocation(line: 1201, column: 39, scope: !9311)
!9320 = !DILocation(line: 1201, column: 9, scope: !1150)
!9321 = !DILocation(line: 1202, column: 34, scope: !9311)
!9322 = !DILocation(line: 1202, column: 21, scope: !9311)
!9323 = !DILocation(line: 1202, column: 27, scope: !9311)
!9324 = !DILocation(line: 1202, column: 10, scope: !9311)
!9325 = !DILocation(line: 1202, column: 9, scope: !9311)
!9326 = !DILocation(line: 1202, column: 42, scope: !9311)
!9327 = !DILocation(line: 1201, column: 68, scope: !9328)
!9328 = !DILexicalBlockFile(scope: !9329, file: !368, discriminator: 3)
!9329 = !DILexicalBlockFile(scope: !9311, file: !368, discriminator: 2)
!9330 = !DILocation(line: 1204, column: 5, scope: !1150)
!9331 = !DILocation(line: 1204, column: 10, scope: !9332)
!9332 = !DILexicalBlockFile(scope: !1161, file: !368, discriminator: 1)
!9333 = !DILocation(line: 1204, column: 20, scope: !1161)
!9334 = !DILocation(line: 1204, column: 50, scope: !1161)
!9335 = !DILocation(line: 1204, column: 66, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !1161, file: !368, line: 1204, column: 63)
!9337 = !DILocation(line: 1204, column: 83, scope: !9336)
!9338 = !DILocation(line: 1204, column: 63, scope: !9336)
!9339 = !DILocation(line: 1204, column: 93, scope: !9336)
!9340 = !DILocation(line: 1204, column: 63, scope: !1161)
!9341 = !DILocation(line: 1204, column: 63, scope: !9342)
!9342 = !DILexicalBlockFile(scope: !1161, file: !368, discriminator: 2)
!9343 = !DILocation(line: 1204, column: 124, scope: !9344)
!9344 = !DILexicalBlockFile(scope: !9336, file: !368, discriminator: 3)
!9345 = !DILocation(line: 1204, column: 142, scope: !9336)
!9346 = !DILocation(line: 1204, column: 152, scope: !9336)
!9347 = !DILocation(line: 1204, column: 177, scope: !9336)
!9348 = !DILocation(line: 1204, column: 108, scope: !9336)
!9349 = !DILocation(line: 1204, column: 196, scope: !9350)
!9350 = !DILexicalBlockFile(scope: !1150, file: !368, discriminator: 4)
!9351 = !DILocation(line: 1204, column: 196, scope: !1161)
!9352 = !DILocation(line: 1204, column: 196, scope: !9353)
!9353 = !DILexicalBlockFile(scope: !1161, file: !368, discriminator: 5)
!9354 = !DILocation(line: 1206, column: 12, scope: !1150)
!9355 = !DILocation(line: 1206, column: 19, scope: !1150)
!9356 = !DILocation(line: 1206, column: 5, scope: !1150)
!9357 = !DILocation(line: 1207, column: 1, scope: !1150)
!9358 = !DILocation(line: 2031, column: 36, scope: !1162)
!9359 = !DILocation(line: 2031, column: 52, scope: !1162)
!9360 = !DILocation(line: 2033, column: 5, scope: !1162)
!9361 = !DILocation(line: 2033, column: 20, scope: !1162)
!9362 = !DILocation(line: 2034, column: 5, scope: !1162)
!9363 = !DILocation(line: 2034, column: 11, scope: !1162)
!9364 = !DILocation(line: 2035, column: 5, scope: !1162)
!9365 = !DILocation(line: 2035, column: 19, scope: !1162)
!9366 = !DILocation(line: 2036, column: 5, scope: !1162)
!9367 = !DILocation(line: 2036, column: 23, scope: !1162)
!9368 = !DILocation(line: 2037, column: 5, scope: !1162)
!9369 = !DILocation(line: 2037, column: 15, scope: !1162)
!9370 = !DILocation(line: 2038, column: 5, scope: !1162)
!9371 = !DILocation(line: 2038, column: 9, scope: !1162)
!9372 = !DILocation(line: 2042, column: 31, scope: !1162)
!9373 = !DILocation(line: 2042, column: 38, scope: !1162)
!9374 = !DILocation(line: 2042, column: 11, scope: !1162)
!9375 = !DILocation(line: 2042, column: 9, scope: !1162)
!9376 = !DILocation(line: 2043, column: 9, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !1162, file: !368, line: 2043, column: 9)
!9378 = !DILocation(line: 2043, column: 13, scope: !9377)
!9379 = !DILocation(line: 2043, column: 9, scope: !1162)
!9380 = !DILocation(line: 2044, column: 9, scope: !9377)
!9381 = !DILocation(line: 2045, column: 9, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !1162, file: !368, line: 2045, column: 9)
!9383 = !DILocation(line: 2045, column: 9, scope: !1162)
!9384 = !DILocation(line: 2046, column: 25, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9382, file: !368, line: 2045, column: 14)
!9386 = !DILocation(line: 2046, column: 34, scope: !9385)
!9387 = !DILocation(line: 2046, column: 43, scope: !9385)
!9388 = !DILocation(line: 2047, column: 16, scope: !9385)
!9389 = !DILocation(line: 2047, column: 9, scope: !9385)
!9390 = !DILocation(line: 2050, column: 27, scope: !1162)
!9391 = !DILocation(line: 2050, column: 12, scope: !1162)
!9392 = !DILocation(line: 2050, column: 10, scope: !1162)
!9393 = !DILocation(line: 2054, column: 28, scope: !1162)
!9394 = !DILocation(line: 2054, column: 34, scope: !1162)
!9395 = !DILocation(line: 2054, column: 11, scope: !1162)
!9396 = !DILocation(line: 2054, column: 9, scope: !1162)
!9397 = !DILocation(line: 2057, column: 32, scope: !1162)
!9398 = !DILocation(line: 2057, column: 10, scope: !1162)
!9399 = !DILocation(line: 2057, column: 8, scope: !1162)
!9400 = !DILocation(line: 2060, column: 12, scope: !1162)
!9401 = !DILocation(line: 2060, column: 10, scope: !1162)
!9402 = !DILocation(line: 2061, column: 9, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !1162, file: !368, line: 2061, column: 9)
!9404 = !DILocation(line: 2061, column: 14, scope: !9403)
!9405 = !DILocation(line: 2061, column: 9, scope: !1162)
!9406 = !DILocation(line: 2062, column: 9, scope: !9403)
!9407 = !DILocation(line: 2064, column: 17, scope: !1162)
!9408 = !DILocation(line: 2064, column: 5, scope: !1162)
!9409 = !DILocation(line: 2064, column: 11, scope: !1162)
!9410 = !DILocation(line: 2064, column: 15, scope: !1162)
!9411 = !DILocation(line: 2065, column: 23, scope: !1162)
!9412 = !DILocation(line: 2065, column: 27, scope: !1162)
!9413 = !DILocation(line: 2065, column: 5, scope: !1162)
!9414 = !DILocation(line: 2065, column: 11, scope: !1162)
!9415 = !DILocation(line: 2065, column: 21, scope: !1162)
!9416 = !DILocation(line: 2066, column: 17, scope: !1162)
!9417 = !DILocation(line: 2066, column: 21, scope: !1162)
!9418 = !DILocation(line: 2066, column: 30, scope: !1162)
!9419 = !DILocation(line: 2066, column: 36, scope: !1162)
!9420 = !DILocation(line: 2066, column: 29, scope: !1162)
!9421 = !DILocation(line: 2066, column: 43, scope: !1162)
!9422 = !DILocation(line: 2066, column: 5, scope: !1162)
!9423 = !DILocation(line: 2066, column: 11, scope: !1162)
!9424 = !DILocation(line: 2066, column: 15, scope: !1162)
!9425 = !DILocation(line: 2067, column: 9, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !1162, file: !368, line: 2067, column: 9)
!9427 = !DILocation(line: 2067, column: 15, scope: !9426)
!9428 = !DILocation(line: 2067, column: 9, scope: !1162)
!9429 = !DILocation(line: 2068, column: 28, scope: !9426)
!9430 = !DILocation(line: 2068, column: 16, scope: !9426)
!9431 = !DILocation(line: 2068, column: 9, scope: !9426)
!9432 = !DILocation(line: 2069, column: 5, scope: !1162)
!9433 = !DILocation(line: 2070, column: 5, scope: !1162)
!9434 = !DILocation(line: 2070, column: 10, scope: !9435)
!9435 = !DILexicalBlockFile(scope: !1182, file: !368, discriminator: 1)
!9436 = !DILocation(line: 2070, column: 20, scope: !1182)
!9437 = !DILocation(line: 2070, column: 50, scope: !1182)
!9438 = !DILocation(line: 2070, column: 37, scope: !1182)
!9439 = !DILocation(line: 2070, column: 65, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !1182, file: !368, line: 2070, column: 62)
!9441 = !DILocation(line: 2070, column: 82, scope: !9440)
!9442 = !DILocation(line: 2070, column: 62, scope: !9440)
!9443 = !DILocation(line: 2070, column: 92, scope: !9440)
!9444 = !DILocation(line: 2070, column: 62, scope: !1182)
!9445 = !DILocation(line: 2070, column: 62, scope: !9446)
!9446 = !DILexicalBlockFile(scope: !1182, file: !368, discriminator: 2)
!9447 = !DILocation(line: 2070, column: 123, scope: !9448)
!9448 = !DILexicalBlockFile(scope: !9440, file: !368, discriminator: 3)
!9449 = !DILocation(line: 2070, column: 141, scope: !9440)
!9450 = !DILocation(line: 2070, column: 151, scope: !9440)
!9451 = !DILocation(line: 2070, column: 176, scope: !9440)
!9452 = !DILocation(line: 2070, column: 107, scope: !9440)
!9453 = !DILocation(line: 2070, column: 195, scope: !9454)
!9454 = !DILexicalBlockFile(scope: !1162, file: !368, discriminator: 4)
!9455 = !DILocation(line: 2070, column: 195, scope: !1182)
!9456 = !DILocation(line: 2070, column: 195, scope: !9457)
!9457 = !DILexicalBlockFile(scope: !1182, file: !368, discriminator: 5)
!9458 = !DILocation(line: 2072, column: 43, scope: !1162)
!9459 = !DILocation(line: 2072, column: 20, scope: !1162)
!9460 = !DILocation(line: 2072, column: 18, scope: !1162)
!9461 = !DILocation(line: 2073, column: 9, scope: !1187)
!9462 = !DILocation(line: 2073, column: 9, scope: !1162)
!9463 = !DILocation(line: 2074, column: 52, scope: !1184)
!9464 = !DILocation(line: 2074, column: 88, scope: !1184)
!9465 = !DILocation(line: 2074, column: 126, scope: !1184)
!9466 = !DILocation(line: 2074, column: 157, scope: !1184)
!9467 = !DILocation(line: 2074, column: 165, scope: !1184)
!9468 = !DILocation(line: 2074, column: 194, scope: !1184)
!9469 = !DILocation(line: 2074, column: 211, scope: !1184)
!9470 = !DILocation(line: 2074, column: 223, scope: !1184)
!9471 = !DILocation(line: 2074, column: 231, scope: !1184)
!9472 = !DILocation(line: 2074, column: 248, scope: !1184)
!9473 = !DILocation(line: 2074, column: 308, scope: !1184)
!9474 = !DILocation(line: 2074, column: 320, scope: !1184)
!9475 = !DILocation(line: 2074, column: 282, scope: !1184)
!9476 = !DILocation(line: 2074, column: 337, scope: !1184)
!9477 = !DILocation(line: 2074, column: 439, scope: !9478)
!9478 = !DILexicalBlockFile(scope: !9479, file: !368, discriminator: 4)
!9479 = !DILexicalBlockFile(scope: !9480, file: !368, discriminator: 3)
!9480 = !DILexicalBlockFile(scope: !9481, file: !368, discriminator: 2)
!9481 = distinct !DILexicalBlock(scope: !1184, file: !368, line: 2074, column: 344)
!9482 = !DILocation(line: 2074, column: 490, scope: !9481)
!9483 = !DILocation(line: 2074, column: 506, scope: !9484)
!9484 = !DILexicalBlockFile(scope: !9481, file: !368, discriminator: 1)
!9485 = !DILocation(line: 2074, column: 525, scope: !9486)
!9486 = !DILexicalBlockFile(scope: !9487, file: !368, discriminator: 6)
!9487 = !DILexicalBlockFile(scope: !1184, file: !368, discriminator: 5)
!9488 = !DILocation(line: 2074, column: 524, scope: !1184)
!9489 = !DILocation(line: 2074, column: 522, scope: !1184)
!9490 = !DILocation(line: 2074, column: 547, scope: !1184)
!9491 = !DILocation(line: 2074, column: 649, scope: !9492)
!9492 = !DILexicalBlockFile(scope: !9493, file: !368, discriminator: 10)
!9493 = !DILexicalBlockFile(scope: !9494, file: !368, discriminator: 9)
!9494 = !DILexicalBlockFile(scope: !9495, file: !368, discriminator: 8)
!9495 = distinct !DILexicalBlock(scope: !1184, file: !368, line: 2074, column: 554)
!9496 = !DILocation(line: 2074, column: 700, scope: !9495)
!9497 = !DILocation(line: 2074, column: 716, scope: !9498)
!9498 = !DILexicalBlockFile(scope: !9495, file: !368, discriminator: 7)
!9499 = !DILocation(line: 2074, column: 727, scope: !9500)
!9500 = !DILexicalBlockFile(scope: !9501, file: !368, discriminator: 12)
!9501 = !DILexicalBlockFile(scope: !1184, file: !368, discriminator: 11)
!9502 = !DILocation(line: 2074, column: 723, scope: !9495)
!9503 = !DILocation(line: 2074, column: 735, scope: !1185)
!9504 = !DILocation(line: 2074, column: 735, scope: !1184)
!9505 = !DILocation(line: 2074, column: 19, scope: !1185)
!9506 = !DILocation(line: 2074, column: 740, scope: !1185)
!9507 = !DILocation(line: 2074, column: 15, scope: !1185)
!9508 = !{!9509, !2593, i64 32}
!9509 = !{!"_ts", !2523, i64 0, !2523, i64 8, !2523, i64 16, !2523, i64 24, !2593, i64 32, !2524, i64 36, !2524, i64 37, !2593, i64 40, !2593, i64 44, !2523, i64 48, !2523, i64 56, !2523, i64 64, !2523, i64 72, !2523, i64 80, !2523, i64 88, !2523, i64 96, !2523, i64 104, !2523, i64 112, !2523, i64 120, !2523, i64 128, !2593, i64 136, !2523, i64 144, !2553, i64 152, !2593, i64 160, !2523, i64 168, !2523, i64 176, !2523, i64 184}
!9510 = !DILocation(line: 2074, column: 759, scope: !1185)
!9511 = !DILocation(line: 2074, column: 757, scope: !1185)
!9512 = !DILocation(line: 2074, column: 784, scope: !1185)
!9513 = !DILocation(line: 2074, column: 787, scope: !9514)
!9514 = !DILexicalBlockFile(scope: !1185, file: !368, discriminator: 13)
!9515 = !DILocation(line: 2074, column: 13, scope: !1186)
!9516 = !DILocation(line: 2075, column: 13, scope: !1201)
!9517 = !DILocation(line: 2075, column: 18, scope: !9518)
!9518 = !DILexicalBlockFile(scope: !1200, file: !368, discriminator: 1)
!9519 = !DILocation(line: 2075, column: 28, scope: !1200)
!9520 = !DILocation(line: 2075, column: 58, scope: !1200)
!9521 = !DILocation(line: 2075, column: 81, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !1200, file: !368, line: 2075, column: 78)
!9523 = !DILocation(line: 2075, column: 98, scope: !9522)
!9524 = !DILocation(line: 2075, column: 78, scope: !9522)
!9525 = !DILocation(line: 2075, column: 108, scope: !9522)
!9526 = !DILocation(line: 2075, column: 78, scope: !1200)
!9527 = !DILocation(line: 2075, column: 78, scope: !9528)
!9528 = !DILexicalBlockFile(scope: !1200, file: !368, discriminator: 2)
!9529 = !DILocation(line: 2075, column: 139, scope: !9530)
!9530 = !DILexicalBlockFile(scope: !9522, file: !368, discriminator: 3)
!9531 = !DILocation(line: 2075, column: 157, scope: !9522)
!9532 = !DILocation(line: 2075, column: 167, scope: !9522)
!9533 = !DILocation(line: 2075, column: 192, scope: !9522)
!9534 = !DILocation(line: 2075, column: 123, scope: !9522)
!9535 = !DILocation(line: 2075, column: 211, scope: !9536)
!9536 = !DILexicalBlockFile(scope: !1201, file: !368, discriminator: 4)
!9537 = !DILocation(line: 2075, column: 211, scope: !1200)
!9538 = !DILocation(line: 2075, column: 211, scope: !9539)
!9539 = !DILexicalBlockFile(scope: !1200, file: !368, discriminator: 5)
!9540 = !DILocation(line: 2076, column: 13, scope: !1201)
!9541 = !DILocation(line: 2078, column: 42, scope: !1186)
!9542 = !DILocation(line: 2078, column: 48, scope: !1186)
!9543 = !DILocation(line: 2078, column: 17, scope: !1186)
!9544 = !DILocation(line: 2078, column: 15, scope: !1186)
!9545 = !DILocation(line: 2079, column: 9, scope: !1186)
!9546 = !DILocation(line: 2079, column: 54, scope: !9547)
!9547 = !DILexicalBlockFile(scope: !1203, file: !368, discriminator: 1)
!9548 = !DILocation(line: 2079, column: 90, scope: !1203)
!9549 = !DILocation(line: 2079, column: 128, scope: !1203)
!9550 = !DILocation(line: 2079, column: 159, scope: !1203)
!9551 = !DILocation(line: 2079, column: 167, scope: !1203)
!9552 = !DILocation(line: 2079, column: 196, scope: !1203)
!9553 = !DILocation(line: 2079, column: 213, scope: !1203)
!9554 = !DILocation(line: 2079, column: 225, scope: !1203)
!9555 = !DILocation(line: 2079, column: 233, scope: !1203)
!9556 = !DILocation(line: 2079, column: 250, scope: !1203)
!9557 = !DILocation(line: 2079, column: 310, scope: !1203)
!9558 = !DILocation(line: 2079, column: 322, scope: !1203)
!9559 = !DILocation(line: 2079, column: 284, scope: !1203)
!9560 = !DILocation(line: 2079, column: 339, scope: !1203)
!9561 = !DILocation(line: 2079, column: 441, scope: !9562)
!9562 = !DILexicalBlockFile(scope: !9563, file: !368, discriminator: 5)
!9563 = !DILexicalBlockFile(scope: !9564, file: !368, discriminator: 4)
!9564 = !DILexicalBlockFile(scope: !9565, file: !368, discriminator: 3)
!9565 = distinct !DILexicalBlock(scope: !1203, file: !368, line: 2079, column: 346)
!9566 = !DILocation(line: 2079, column: 492, scope: !9565)
!9567 = !DILocation(line: 2079, column: 508, scope: !9568)
!9568 = !DILexicalBlockFile(scope: !9565, file: !368, discriminator: 2)
!9569 = !DILocation(line: 2079, column: 527, scope: !9570)
!9570 = !DILexicalBlockFile(scope: !9571, file: !368, discriminator: 7)
!9571 = !DILexicalBlockFile(scope: !1203, file: !368, discriminator: 6)
!9572 = !DILocation(line: 2079, column: 526, scope: !1203)
!9573 = !DILocation(line: 2079, column: 524, scope: !1203)
!9574 = !DILocation(line: 2079, column: 549, scope: !1203)
!9575 = !DILocation(line: 2079, column: 651, scope: !9576)
!9576 = !DILexicalBlockFile(scope: !9577, file: !368, discriminator: 11)
!9577 = !DILexicalBlockFile(scope: !9578, file: !368, discriminator: 10)
!9578 = !DILexicalBlockFile(scope: !9579, file: !368, discriminator: 9)
!9579 = distinct !DILexicalBlock(scope: !1203, file: !368, line: 2079, column: 556)
!9580 = !DILocation(line: 2079, column: 702, scope: !9579)
!9581 = !DILocation(line: 2079, column: 718, scope: !9582)
!9582 = !DILexicalBlockFile(scope: !9579, file: !368, discriminator: 8)
!9583 = !DILocation(line: 2079, column: 729, scope: !9584)
!9584 = !DILexicalBlockFile(scope: !9585, file: !368, discriminator: 13)
!9585 = !DILexicalBlockFile(scope: !1203, file: !368, discriminator: 12)
!9586 = !DILocation(line: 2079, column: 725, scope: !9579)
!9587 = !DILocation(line: 2079, column: 737, scope: !1204)
!9588 = !DILocation(line: 2079, column: 737, scope: !1203)
!9589 = !DILocation(line: 2079, column: 21, scope: !1204)
!9590 = !DILocation(line: 2079, column: 742, scope: !1204)
!9591 = !DILocation(line: 2079, column: 17, scope: !1204)
!9592 = !DILocation(line: 2079, column: 763, scope: !1204)
!9593 = !DILocation(line: 2079, column: 787, scope: !1204)
!9594 = !DILocation(line: 2079, column: 762, scope: !1204)
!9595 = !DILocation(line: 2079, column: 797, scope: !9596)
!9596 = !DILexicalBlockFile(scope: !1204, file: !368, discriminator: 14)
!9597 = !DILocation(line: 2079, column: 821, scope: !1204)
!9598 = !DILocation(line: 2079, column: 835, scope: !9599)
!9599 = !DILexicalBlockFile(scope: !1204, file: !368, discriminator: 15)
!9600 = !DILocation(line: 2079, column: 859, scope: !1204)
!9601 = !DILocation(line: 2079, column: 832, scope: !1204)
!9602 = !DILocation(line: 2079, column: 759, scope: !9603)
!9603 = !DILexicalBlockFile(scope: !9604, file: !368, discriminator: 17)
!9604 = !DILexicalBlockFile(scope: !1204, file: !368, discriminator: 16)
!9605 = !DILocation(line: 2079, column: 16, scope: !1205)
!9606 = !DILocation(line: 2079, column: 903, scope: !9607)
!9607 = !DILexicalBlockFile(scope: !1210, file: !368, discriminator: 18)
!9608 = !DILocation(line: 2079, column: 939, scope: !1210)
!9609 = !DILocation(line: 2079, column: 977, scope: !1210)
!9610 = !DILocation(line: 2079, column: 1008, scope: !1210)
!9611 = !DILocation(line: 2079, column: 1016, scope: !1210)
!9612 = !DILocation(line: 2079, column: 1045, scope: !1210)
!9613 = !DILocation(line: 2079, column: 1062, scope: !1210)
!9614 = !DILocation(line: 2079, column: 1074, scope: !1210)
!9615 = !DILocation(line: 2079, column: 1082, scope: !1210)
!9616 = !DILocation(line: 2079, column: 1099, scope: !1210)
!9617 = !DILocation(line: 2079, column: 1159, scope: !1210)
!9618 = !DILocation(line: 2079, column: 1171, scope: !1210)
!9619 = !DILocation(line: 2079, column: 1133, scope: !1210)
!9620 = !DILocation(line: 2079, column: 1188, scope: !1210)
!9621 = !DILocation(line: 2079, column: 1290, scope: !9622)
!9622 = !DILexicalBlockFile(scope: !9623, file: !368, discriminator: 23)
!9623 = !DILexicalBlockFile(scope: !9624, file: !368, discriminator: 22)
!9624 = !DILexicalBlockFile(scope: !9625, file: !368, discriminator: 21)
!9625 = distinct !DILexicalBlock(scope: !1210, file: !368, line: 2079, column: 1195)
!9626 = !DILocation(line: 2079, column: 1341, scope: !9625)
!9627 = !DILocation(line: 2079, column: 1357, scope: !9628)
!9628 = !DILexicalBlockFile(scope: !9625, file: !368, discriminator: 20)
!9629 = !DILocation(line: 2079, column: 1376, scope: !9630)
!9630 = !DILexicalBlockFile(scope: !9631, file: !368, discriminator: 25)
!9631 = !DILexicalBlockFile(scope: !1210, file: !368, discriminator: 24)
!9632 = !DILocation(line: 2079, column: 1375, scope: !1210)
!9633 = !DILocation(line: 2079, column: 1373, scope: !1210)
!9634 = !DILocation(line: 2079, column: 1398, scope: !1210)
!9635 = !DILocation(line: 2079, column: 1500, scope: !9636)
!9636 = !DILexicalBlockFile(scope: !9637, file: !368, discriminator: 29)
!9637 = !DILexicalBlockFile(scope: !9638, file: !368, discriminator: 28)
!9638 = !DILexicalBlockFile(scope: !9639, file: !368, discriminator: 27)
!9639 = distinct !DILexicalBlock(scope: !1210, file: !368, line: 2079, column: 1405)
!9640 = !DILocation(line: 2079, column: 1551, scope: !9639)
!9641 = !DILocation(line: 2079, column: 1567, scope: !9642)
!9642 = !DILexicalBlockFile(scope: !9639, file: !368, discriminator: 26)
!9643 = !DILocation(line: 2079, column: 1578, scope: !9644)
!9644 = !DILexicalBlockFile(scope: !9645, file: !368, discriminator: 31)
!9645 = !DILexicalBlockFile(scope: !1210, file: !368, discriminator: 30)
!9646 = !DILocation(line: 2079, column: 1574, scope: !9639)
!9647 = !DILocation(line: 2079, column: 1586, scope: !1204)
!9648 = !DILocation(line: 2079, column: 1586, scope: !1210)
!9649 = !DILocation(line: 2079, column: 870, scope: !1204)
!9650 = !DILocation(line: 2079, column: 1591, scope: !1204)
!9651 = !DILocation(line: 2079, column: 1602, scope: !1204)
!9652 = !{!9509, !2524, i64 36}
!9653 = !DILocation(line: 2079, column: 869, scope: !1204)
!9654 = !DILocation(line: 2079, column: 1607, scope: !9655)
!9655 = !DILexicalBlockFile(scope: !9656, file: !368, discriminator: 32)
!9656 = !DILexicalBlockFile(scope: !1205, file: !368, discriminator: 19)
!9657 = !DILocation(line: 2079, column: 1607, scope: !9658)
!9658 = !DILexicalBlockFile(scope: !1205, file: !368, discriminator: 33)
!9659 = !DILocation(line: 2080, column: 9, scope: !1186)
!9660 = !DILocation(line: 2080, column: 14, scope: !9661)
!9661 = !DILexicalBlockFile(scope: !1215, file: !368, discriminator: 1)
!9662 = !DILocation(line: 2080, column: 24, scope: !1215)
!9663 = !DILocation(line: 2080, column: 54, scope: !1215)
!9664 = !DILocation(line: 2080, column: 77, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !1215, file: !368, line: 2080, column: 74)
!9666 = !DILocation(line: 2080, column: 94, scope: !9665)
!9667 = !DILocation(line: 2080, column: 74, scope: !9665)
!9668 = !DILocation(line: 2080, column: 104, scope: !9665)
!9669 = !DILocation(line: 2080, column: 74, scope: !1215)
!9670 = !DILocation(line: 2080, column: 74, scope: !9671)
!9671 = !DILexicalBlockFile(scope: !1215, file: !368, discriminator: 2)
!9672 = !DILocation(line: 2080, column: 135, scope: !9673)
!9673 = !DILexicalBlockFile(scope: !9665, file: !368, discriminator: 3)
!9674 = !DILocation(line: 2080, column: 153, scope: !9665)
!9675 = !DILocation(line: 2080, column: 163, scope: !9665)
!9676 = !DILocation(line: 2080, column: 188, scope: !9665)
!9677 = !DILocation(line: 2080, column: 119, scope: !9665)
!9678 = !DILocation(line: 2080, column: 207, scope: !9679)
!9679 = !DILexicalBlockFile(scope: !1186, file: !368, discriminator: 4)
!9680 = !DILocation(line: 2080, column: 207, scope: !1215)
!9681 = !DILocation(line: 2080, column: 207, scope: !9682)
!9682 = !DILexicalBlockFile(scope: !1215, file: !368, discriminator: 5)
!9683 = !DILocation(line: 2081, column: 16, scope: !1186)
!9684 = !DILocation(line: 2081, column: 9, scope: !1186)
!9685 = !DILocation(line: 2083, column: 21, scope: !1162)
!9686 = !DILocation(line: 2083, column: 5, scope: !1162)
!9687 = !DILocation(line: 2085, column: 5, scope: !1162)
!9688 = !DILocation(line: 2086, column: 1, scope: !1162)
!9689 = !DILocation(line: 59, column: 48, scope: !1216)
!9690 = !DILocation(line: 59, column: 74, scope: !1216)
!9691 = !DILocation(line: 61, column: 11, scope: !1216)
!9692 = !DILocation(line: 62, column: 12, scope: !1216)
!9693 = !DILocation(line: 67, column: 9, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !1216, file: !4, line: 62, column: 19)
!9695 = !DILocation(line: 70, column: 9, scope: !9694)
!9696 = !DILocation(line: 72, column: 12, scope: !1216)
!9697 = !DILocation(line: 77, column: 9, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !1216, file: !4, line: 72, column: 19)
!9699 = !DILocation(line: 80, column: 9, scope: !9698)
!9700 = !DILocation(line: 82, column: 1, scope: !1216)
!9701 = !DILocation(line: 51, column: 42, scope: !1225)
!9702 = !DILocation(line: 53, column: 9, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !1225, file: !4, line: 53, column: 9)
!9704 = !DILocation(line: 53, column: 15, scope: !9703)
!9705 = !DILocation(line: 53, column: 9, scope: !1225)
!9706 = !DILocation(line: 54, column: 9, scope: !9703)
!9707 = !{i32 155252}
!9708 = !DILocation(line: 55, column: 1, scope: !1225)
!9709 = !DILocation(line: 44, column: 42, scope: !1230)
!9710 = !DILocation(line: 46, column: 9, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !1230, file: !4, line: 46, column: 9)
!9712 = !DILocation(line: 46, column: 15, scope: !9711)
!9713 = !DILocation(line: 46, column: 9, scope: !1230)
!9714 = !DILocation(line: 47, column: 9, scope: !9711)
!9715 = !{i32 155092}
!9716 = !DILocation(line: 48, column: 1, scope: !1230)
!9717 = !DILocation(line: 1822, column: 38, scope: !1301)
!9718 = !DILocation(line: 1824, column: 5, scope: !1301)
!9719 = !DILocation(line: 1824, column: 20, scope: !1301)
!9720 = !DILocation(line: 1825, column: 5, scope: !1301)
!9721 = !DILocation(line: 1825, column: 11, scope: !1301)
!9722 = !DILocation(line: 1826, column: 5, scope: !1301)
!9723 = !DILocation(line: 1826, column: 19, scope: !1301)
!9724 = !DILocation(line: 1827, column: 5, scope: !1301)
!9725 = !DILocation(line: 1827, column: 23, scope: !1301)
!9726 = !DILocation(line: 1829, column: 41, scope: !1301)
!9727 = !DILocation(line: 1829, column: 29, scope: !1301)
!9728 = !DILocation(line: 1829, column: 12, scope: !1301)
!9729 = !DILocation(line: 1829, column: 10, scope: !1301)
!9730 = !DILocation(line: 1831, column: 28, scope: !1301)
!9731 = !DILocation(line: 1831, column: 34, scope: !1301)
!9732 = !DILocation(line: 1831, column: 11, scope: !1301)
!9733 = !DILocation(line: 1831, column: 9, scope: !1301)
!9734 = !DILocation(line: 1834, column: 32, scope: !1301)
!9735 = !DILocation(line: 1834, column: 10, scope: !1301)
!9736 = !DILocation(line: 1834, column: 8, scope: !1301)
!9737 = !DILocation(line: 1837, column: 12, scope: !1301)
!9738 = !DILocation(line: 1837, column: 10, scope: !1301)
!9739 = !DILocation(line: 1838, column: 9, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !1301, file: !368, line: 1838, column: 9)
!9741 = !DILocation(line: 1838, column: 14, scope: !9740)
!9742 = !DILocation(line: 1838, column: 9, scope: !1301)
!9743 = !DILocation(line: 1839, column: 9, scope: !9740)
!9744 = !DILocation(line: 1841, column: 17, scope: !1301)
!9745 = !DILocation(line: 1841, column: 5, scope: !1301)
!9746 = !DILocation(line: 1841, column: 11, scope: !1301)
!9747 = !DILocation(line: 1841, column: 15, scope: !1301)
!9748 = !DILocation(line: 1842, column: 23, scope: !1301)
!9749 = !DILocation(line: 1842, column: 27, scope: !1301)
!9750 = !DILocation(line: 1842, column: 5, scope: !1301)
!9751 = !DILocation(line: 1842, column: 11, scope: !1301)
!9752 = !DILocation(line: 1842, column: 21, scope: !1301)
!9753 = !DILocation(line: 1843, column: 21, scope: !1301)
!9754 = !DILocation(line: 1843, column: 8, scope: !1301)
!9755 = !DILocation(line: 1843, column: 29, scope: !1301)
!9756 = !DILocation(line: 1843, column: 38, scope: !1301)
!9757 = !DILocation(line: 1844, column: 29, scope: !1301)
!9758 = !DILocation(line: 1844, column: 17, scope: !1301)
!9759 = !DILocation(line: 1844, column: 5, scope: !1301)
!9760 = !DILocation(line: 1844, column: 11, scope: !1301)
!9761 = !DILocation(line: 1844, column: 15, scope: !1301)
!9762 = !DILocation(line: 1845, column: 13, scope: !1301)
!9763 = !DILocation(line: 1845, column: 19, scope: !1301)
!9764 = !DILocation(line: 1845, column: 5, scope: !1301)
!9765 = !DILocation(line: 1845, column: 26, scope: !1301)
!9766 = !DILocation(line: 1845, column: 32, scope: !1301)
!9767 = !DILocation(line: 1845, column: 39, scope: !1301)
!9768 = !DILocation(line: 1845, column: 45, scope: !1301)
!9769 = !DILocation(line: 1846, column: 12, scope: !1301)
!9770 = !DILocation(line: 1846, column: 5, scope: !1301)
!9771 = !DILocation(line: 1847, column: 1, scope: !1301)
!9772 = !DILocation(line: 1753, column: 50, scope: !1413)
!9773 = !DILocation(line: 1753, column: 66, scope: !1413)
!9774 = !DILocation(line: 1753, column: 82, scope: !1413)
!9775 = !DILocation(line: 1754, column: 46, scope: !1413)
!9776 = !DILocation(line: 1754, column: 71, scope: !1413)
!9777 = !DILocation(line: 1756, column: 5, scope: !1413)
!9778 = !DILocation(line: 1756, column: 19, scope: !1413)
!9779 = !DILocation(line: 1757, column: 5, scope: !1413)
!9780 = !DILocation(line: 1757, column: 20, scope: !1413)
!9781 = !DILocation(line: 1758, column: 5, scope: !1413)
!9782 = !DILocation(line: 1758, column: 15, scope: !1413)
!9783 = !DILocation(line: 1758, column: 42, scope: !1413)
!9784 = !DILocation(line: 1758, column: 24, scope: !1413)
!9785 = !DILocation(line: 1758, column: 50, scope: !1413)
!9786 = !DILocation(line: 1758, column: 23, scope: !1413)
!9787 = !DILocation(line: 1759, column: 5, scope: !1413)
!9788 = !DILocation(line: 1759, column: 15, scope: !1413)
!9789 = !DILocation(line: 1760, column: 5, scope: !1413)
!9790 = !DILocation(line: 1760, column: 15, scope: !1413)
!9791 = !DILocation(line: 1762, column: 5, scope: !1413)
!9792 = !DILocation(line: 1762, column: 16, scope: !1413)
!9793 = !DILocation(line: 1764, column: 49, scope: !1413)
!9794 = !DILocation(line: 1764, column: 34, scope: !1413)
!9795 = !DILocation(line: 1764, column: 57, scope: !1413)
!9796 = !DILocation(line: 1764, column: 20, scope: !1413)
!9797 = !DILocation(line: 1764, column: 18, scope: !1413)
!9798 = !DILocation(line: 1765, column: 10, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !1413, file: !368, line: 1765, column: 9)
!9800 = !DILocation(line: 1765, column: 9, scope: !1413)
!9801 = !DILocation(line: 1766, column: 9, scope: !9799)
!9802 = !DILocation(line: 1768, column: 9, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !1413, file: !368, line: 1768, column: 9)
!9804 = !DILocation(line: 1768, column: 16, scope: !9803)
!9805 = !DILocation(line: 1768, column: 9, scope: !1413)
!9806 = !DILocation(line: 1772, column: 18, scope: !9803)
!9807 = !DILocation(line: 1772, column: 16, scope: !9803)
!9808 = !DILocation(line: 1772, column: 9, scope: !9803)
!9809 = !DILocation(line: 1775, column: 32, scope: !1413)
!9810 = !DILocation(line: 1775, column: 38, scope: !1413)
!9811 = !DILocation(line: 1775, column: 15, scope: !1413)
!9812 = !DILocation(line: 1775, column: 13, scope: !1413)
!9813 = !DILocation(line: 1776, column: 9, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !1413, file: !368, line: 1776, column: 9)
!9815 = !DILocation(line: 1776, column: 17, scope: !9814)
!9816 = !DILocation(line: 1776, column: 9, scope: !1413)
!9817 = !DILocation(line: 1777, column: 9, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9814, file: !368, line: 1776, column: 32)
!9819 = !DILocation(line: 1780, column: 54, scope: !1413)
!9820 = !DILocation(line: 1780, column: 25, scope: !1413)
!9821 = !DILocation(line: 1780, column: 7, scope: !1413)
!9822 = !DILocation(line: 1780, column: 41, scope: !1413)
!9823 = !DILocation(line: 1780, column: 6, scope: !1413)
!9824 = !DILocation(line: 1780, column: 52, scope: !1413)
!9825 = !DILocation(line: 1781, column: 11, scope: !1431)
!9826 = !DILocation(line: 1781, column: 10, scope: !1431)
!9827 = !DILocation(line: 1781, column: 15, scope: !9828)
!9828 = !DILexicalBlockFile(scope: !9829, file: !368, discriminator: 2)
!9829 = !DILexicalBlockFile(scope: !1430, file: !368, discriminator: 1)
!9830 = !DILocation(line: 1781, column: 34, scope: !1430)
!9831 = !DILocation(line: 1781, column: 19, scope: !1430)
!9832 = !DILocation(line: 1781, column: 42, scope: !1430)
!9833 = !DILocation(line: 1781, column: 16, scope: !1430)
!9834 = !DILocation(line: 1781, column: 5, scope: !1431)
!9835 = !DILocation(line: 1782, column: 9, scope: !1429)
!9836 = !DILocation(line: 1782, column: 19, scope: !1429)
!9837 = !DILocation(line: 1782, column: 59, scope: !1429)
!9838 = !DILocation(line: 1782, column: 43, scope: !1429)
!9839 = !DILocation(line: 1782, column: 25, scope: !1429)
!9840 = !DILocation(line: 1782, column: 51, scope: !1429)
!9841 = !DILocation(line: 1782, column: 24, scope: !1429)
!9842 = !DILocation(line: 1783, column: 25, scope: !1429)
!9843 = !DILocation(line: 1783, column: 30, scope: !1429)
!9844 = !DILocation(line: 1783, column: 39, scope: !1429)
!9845 = !DILocation(line: 1784, column: 58, scope: !1429)
!9846 = !DILocation(line: 1784, column: 53, scope: !1429)
!9847 = !DILocation(line: 1784, column: 29, scope: !1429)
!9848 = !DILocation(line: 1784, column: 11, scope: !1429)
!9849 = !DILocation(line: 1784, column: 45, scope: !1429)
!9850 = !DILocation(line: 1784, column: 10, scope: !1429)
!9851 = !DILocation(line: 1784, column: 56, scope: !1429)
!9852 = !DILocation(line: 1785, column: 5, scope: !1430)
!9853 = !DILocation(line: 1785, column: 5, scope: !1429)
!9854 = !DILocation(line: 1781, column: 52, scope: !1430)
!9855 = !DILocation(line: 1781, column: 5, scope: !1430)
!9856 = !DILocation(line: 1789, column: 42, scope: !1413)
!9857 = !DILocation(line: 1789, column: 49, scope: !1413)
!9858 = !DILocation(line: 1789, column: 55, scope: !1413)
!9859 = !DILocation(line: 1789, column: 69, scope: !1413)
!9860 = !DILocation(line: 1789, column: 30, scope: !1413)
!9861 = !DILocation(line: 1789, column: 14, scope: !1413)
!9862 = !DILocation(line: 1789, column: 12, scope: !1413)
!9863 = !DILocation(line: 1790, column: 5, scope: !1413)
!9864 = !DILocation(line: 1790, column: 10, scope: !9865)
!9865 = !DILexicalBlockFile(scope: !1433, file: !368, discriminator: 1)
!9866 = !DILocation(line: 1790, column: 20, scope: !1433)
!9867 = !DILocation(line: 1790, column: 50, scope: !1433)
!9868 = !DILocation(line: 1790, column: 73, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !1433, file: !368, line: 1790, column: 70)
!9870 = !DILocation(line: 1790, column: 90, scope: !9869)
!9871 = !DILocation(line: 1790, column: 70, scope: !9869)
!9872 = !DILocation(line: 1790, column: 100, scope: !9869)
!9873 = !DILocation(line: 1790, column: 70, scope: !1433)
!9874 = !DILocation(line: 1790, column: 70, scope: !9875)
!9875 = !DILexicalBlockFile(scope: !1433, file: !368, discriminator: 2)
!9876 = !DILocation(line: 1790, column: 131, scope: !9877)
!9877 = !DILexicalBlockFile(scope: !9869, file: !368, discriminator: 3)
!9878 = !DILocation(line: 1790, column: 149, scope: !9869)
!9879 = !DILocation(line: 1790, column: 159, scope: !9869)
!9880 = !DILocation(line: 1790, column: 184, scope: !9869)
!9881 = !DILocation(line: 1790, column: 115, scope: !9869)
!9882 = !DILocation(line: 1790, column: 203, scope: !9883)
!9883 = !DILexicalBlockFile(scope: !1413, file: !368, discriminator: 4)
!9884 = !DILocation(line: 1790, column: 203, scope: !1433)
!9885 = !DILocation(line: 1790, column: 203, scope: !9886)
!9886 = !DILexicalBlockFile(scope: !1433, file: !368, discriminator: 5)
!9887 = !DILocation(line: 1791, column: 9, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !1413, file: !368, line: 1791, column: 9)
!9889 = !DILocation(line: 1791, column: 16, scope: !9888)
!9890 = !DILocation(line: 1791, column: 9, scope: !1413)
!9891 = !DILocation(line: 1792, column: 9, scope: !9888)
!9892 = !DILocation(line: 1794, column: 32, scope: !1413)
!9893 = !DILocation(line: 1794, column: 15, scope: !1413)
!9894 = !DILocation(line: 1794, column: 13, scope: !1413)
!9895 = !DILocation(line: 1796, column: 10, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !1413, file: !368, line: 1796, column: 9)
!9897 = !DILocation(line: 1796, column: 9, scope: !1413)
!9898 = !DILocation(line: 1797, column: 9, scope: !9896)
!9899 = !DILocation(line: 1799, column: 5, scope: !1413)
!9900 = !DILocation(line: 1799, column: 14, scope: !1413)
!9901 = !DILocation(line: 1799, column: 34, scope: !1413)
!9902 = !DILocation(line: 1799, column: 39, scope: !1413)
!9903 = !DILocation(line: 1799, column: 33, scope: !1413)
!9904 = !DILocation(line: 1800, column: 22, scope: !1413)
!9905 = !DILocation(line: 1800, column: 27, scope: !1413)
!9906 = !DILocation(line: 1800, column: 38, scope: !1413)
!9907 = !DILocation(line: 1800, column: 5, scope: !1413)
!9908 = !DILocation(line: 1800, column: 14, scope: !1413)
!9909 = !DILocation(line: 1800, column: 20, scope: !1413)
!9910 = !DILocation(line: 1801, column: 5, scope: !1413)
!9911 = !DILocation(line: 1801, column: 14, scope: !1413)
!9912 = !DILocation(line: 1801, column: 21, scope: !1413)
!9913 = !DILocation(line: 1802, column: 21, scope: !1413)
!9914 = !DILocation(line: 1802, column: 26, scope: !1413)
!9915 = !DILocation(line: 1802, column: 37, scope: !1413)
!9916 = !DILocation(line: 1802, column: 5, scope: !1413)
!9917 = !DILocation(line: 1802, column: 14, scope: !1413)
!9918 = !DILocation(line: 1802, column: 19, scope: !1413)
!9919 = !DILocation(line: 1803, column: 24, scope: !1413)
!9920 = !DILocation(line: 1803, column: 29, scope: !1413)
!9921 = !DILocation(line: 1803, column: 5, scope: !1413)
!9922 = !DILocation(line: 1803, column: 14, scope: !1413)
!9923 = !DILocation(line: 1803, column: 22, scope: !1413)
!9924 = !DILocation(line: 1804, column: 24, scope: !1413)
!9925 = !DILocation(line: 1804, column: 29, scope: !1413)
!9926 = !DILocation(line: 1804, column: 5, scope: !1413)
!9927 = !DILocation(line: 1804, column: 14, scope: !1413)
!9928 = !DILocation(line: 1804, column: 22, scope: !1413)
!9929 = !DILocation(line: 1806, column: 21, scope: !1413)
!9930 = !DILocation(line: 1806, column: 30, scope: !1413)
!9931 = !DILocation(line: 1806, column: 39, scope: !1413)
!9932 = !DILocation(line: 1807, column: 22, scope: !1413)
!9933 = !DILocation(line: 1807, column: 5, scope: !1413)
!9934 = !DILocation(line: 1807, column: 14, scope: !1413)
!9935 = !DILocation(line: 1807, column: 20, scope: !1413)
!9936 = !DILocation(line: 1810, column: 41, scope: !1437)
!9937 = !DILocation(line: 1810, column: 29, scope: !1437)
!9938 = !DILocation(line: 1810, column: 50, scope: !1437)
!9939 = !DILocation(line: 1810, column: 58, scope: !1437)
!9940 = !DILocation(line: 1810, column: 15, scope: !1437)
!9941 = !DILocation(line: 1810, column: 12, scope: !1437)
!9942 = !DILocation(line: 1810, column: 9, scope: !1413)
!9943 = !DILocation(line: 1811, column: 9, scope: !1436)
!9944 = !DILocation(line: 1811, column: 14, scope: !9945)
!9945 = !DILexicalBlockFile(scope: !1435, file: !368, discriminator: 1)
!9946 = !DILocation(line: 1811, column: 24, scope: !1435)
!9947 = !DILocation(line: 1811, column: 54, scope: !1435)
!9948 = !DILocation(line: 1811, column: 41, scope: !1435)
!9949 = !DILocation(line: 1811, column: 71, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !1435, file: !368, line: 1811, column: 68)
!9951 = !DILocation(line: 1811, column: 88, scope: !9950)
!9952 = !DILocation(line: 1811, column: 68, scope: !9950)
!9953 = !DILocation(line: 1811, column: 98, scope: !9950)
!9954 = !DILocation(line: 1811, column: 68, scope: !1435)
!9955 = !DILocation(line: 1811, column: 68, scope: !9956)
!9956 = !DILexicalBlockFile(scope: !1435, file: !368, discriminator: 2)
!9957 = !DILocation(line: 1811, column: 129, scope: !9958)
!9958 = !DILexicalBlockFile(scope: !9950, file: !368, discriminator: 3)
!9959 = !DILocation(line: 1811, column: 147, scope: !9950)
!9960 = !DILocation(line: 1811, column: 157, scope: !9950)
!9961 = !DILocation(line: 1811, column: 182, scope: !9950)
!9962 = !DILocation(line: 1811, column: 113, scope: !9950)
!9963 = !DILocation(line: 1811, column: 201, scope: !9964)
!9964 = !DILexicalBlockFile(scope: !1436, file: !368, discriminator: 4)
!9965 = !DILocation(line: 1811, column: 201, scope: !1435)
!9966 = !DILocation(line: 1811, column: 201, scope: !9967)
!9967 = !DILexicalBlockFile(scope: !1435, file: !368, discriminator: 5)
!9968 = !DILocation(line: 1812, column: 9, scope: !1436)
!9969 = !DILocation(line: 1812, column: 14, scope: !9970)
!9970 = !DILexicalBlockFile(scope: !1439, file: !368, discriminator: 1)
!9971 = !DILocation(line: 1812, column: 24, scope: !1439)
!9972 = !DILocation(line: 1812, column: 66, scope: !1439)
!9973 = !DILocation(line: 1812, column: 54, scope: !1439)
!9974 = !DILocation(line: 1812, column: 84, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !1439, file: !368, line: 1812, column: 81)
!9976 = !DILocation(line: 1812, column: 101, scope: !9975)
!9977 = !DILocation(line: 1812, column: 81, scope: !9975)
!9978 = !DILocation(line: 1812, column: 111, scope: !9975)
!9979 = !DILocation(line: 1812, column: 81, scope: !1439)
!9980 = !DILocation(line: 1812, column: 81, scope: !9981)
!9981 = !DILexicalBlockFile(scope: !1439, file: !368, discriminator: 2)
!9982 = !DILocation(line: 1812, column: 142, scope: !9983)
!9983 = !DILexicalBlockFile(scope: !9975, file: !368, discriminator: 3)
!9984 = !DILocation(line: 1812, column: 160, scope: !9975)
!9985 = !DILocation(line: 1812, column: 170, scope: !9975)
!9986 = !DILocation(line: 1812, column: 195, scope: !9975)
!9987 = !DILocation(line: 1812, column: 126, scope: !9975)
!9988 = !DILocation(line: 1812, column: 214, scope: !9964)
!9989 = !DILocation(line: 1812, column: 214, scope: !1439)
!9990 = !DILocation(line: 1812, column: 214, scope: !9991)
!9991 = !DILexicalBlockFile(scope: !1439, file: !368, discriminator: 5)
!9992 = !DILocation(line: 1813, column: 9, scope: !1436)
!9993 = !DILocation(line: 1815, column: 5, scope: !1413)
!9994 = !DILocation(line: 1815, column: 10, scope: !9995)
!9995 = !DILexicalBlockFile(scope: !1441, file: !368, discriminator: 1)
!9996 = !DILocation(line: 1815, column: 20, scope: !1441)
!9997 = !DILocation(line: 1815, column: 50, scope: !1441)
!9998 = !DILocation(line: 1815, column: 58, scope: !1441)
!9999 = !DILocation(line: 1815, column: 76, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !1441, file: !368, line: 1815, column: 73)
!10001 = !DILocation(line: 1815, column: 93, scope: !10000)
!10002 = !DILocation(line: 1815, column: 73, scope: !10000)
!10003 = !DILocation(line: 1815, column: 103, scope: !10000)
!10004 = !DILocation(line: 1815, column: 73, scope: !1441)
!10005 = !DILocation(line: 1815, column: 73, scope: !10006)
!10006 = !DILexicalBlockFile(scope: !1441, file: !368, discriminator: 2)
!10007 = !DILocation(line: 1815, column: 134, scope: !10008)
!10008 = !DILexicalBlockFile(scope: !10000, file: !368, discriminator: 3)
!10009 = !DILocation(line: 1815, column: 152, scope: !10000)
!10010 = !DILocation(line: 1815, column: 162, scope: !10000)
!10011 = !DILocation(line: 1815, column: 187, scope: !10000)
!10012 = !DILocation(line: 1815, column: 118, scope: !10000)
!10013 = !DILocation(line: 1815, column: 206, scope: !9883)
!10014 = !DILocation(line: 1815, column: 206, scope: !1441)
!10015 = !DILocation(line: 1815, column: 206, scope: !10016)
!10016 = !DILexicalBlockFile(scope: !1441, file: !368, discriminator: 5)
!10017 = !DILocation(line: 1816, column: 35, scope: !1413)
!10018 = !DILocation(line: 1816, column: 23, scope: !1413)
!10019 = !DILocation(line: 1816, column: 5, scope: !1413)
!10020 = !DILocation(line: 1816, column: 13, scope: !1413)
!10021 = !DILocation(line: 1816, column: 21, scope: !1413)
!10022 = !DILocation(line: 1818, column: 24, scope: !1413)
!10023 = !DILocation(line: 1818, column: 12, scope: !1413)
!10024 = !DILocation(line: 1818, column: 5, scope: !1413)
!10025 = !DILocation(line: 1819, column: 1, scope: !1413)
!10026 = !DILocation(line: 1531, column: 31, scope: !1308)
!10027 = !DILocation(line: 1531, column: 47, scope: !1308)
!10028 = !DILocation(line: 1533, column: 5, scope: !1308)
!10029 = !DILocation(line: 1533, column: 15, scope: !1308)
!10030 = !DILocation(line: 1534, column: 5, scope: !1308)
!10031 = !DILocation(line: 1534, column: 9, scope: !1308)
!10032 = !DILocation(line: 1535, column: 9, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !1308, file: !368, line: 1535, column: 9)
!10034 = !DILocation(line: 1535, column: 15, scope: !10033)
!10035 = !DILocation(line: 1535, column: 9, scope: !1308)
!10036 = !DILocation(line: 1536, column: 55, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10033, file: !368, line: 1535, column: 37)
!10038 = !DILocation(line: 1537, column: 9, scope: !10037)
!10039 = !DILocation(line: 1539, column: 26, scope: !1316)
!10040 = !DILocation(line: 1539, column: 35, scope: !1316)
!10041 = !DILocation(line: 1539, column: 46, scope: !1316)
!10042 = !DILocation(line: 1539, column: 55, scope: !1316)
!10043 = !DILocation(line: 1539, column: 72, scope: !1316)
!10044 = !DILocation(line: 1539, column: 9, scope: !1308)
!10045 = !DILocation(line: 1540, column: 9, scope: !1315)
!10046 = !DILocation(line: 1540, column: 23, scope: !1315)
!10047 = !DILocation(line: 1541, column: 9, scope: !1315)
!10048 = !DILocation(line: 1541, column: 27, scope: !1315)
!10049 = !DILocation(line: 1541, column: 32, scope: !1315)
!10050 = !DILocation(line: 1543, column: 16, scope: !1315)
!10051 = !DILocation(line: 1543, column: 14, scope: !1315)
!10052 = !DILocation(line: 1544, column: 13, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !1315, file: !368, line: 1544, column: 13)
!10054 = !DILocation(line: 1544, column: 18, scope: !10053)
!10055 = !DILocation(line: 1544, column: 13, scope: !1315)
!10056 = !DILocation(line: 1545, column: 13, scope: !10053)
!10057 = !DILocation(line: 1546, column: 9, scope: !1315)
!10058 = !DILocation(line: 1546, column: 15, scope: !1315)
!10059 = !DILocation(line: 1546, column: 25, scope: !1315)
!10060 = !DILocation(line: 1547, column: 9, scope: !1315)
!10061 = !DILocation(line: 1547, column: 15, scope: !1315)
!10062 = !DILocation(line: 1547, column: 19, scope: !1315)
!10063 = !DILocation(line: 1548, column: 21, scope: !1315)
!10064 = !DILocation(line: 1548, column: 25, scope: !1315)
!10065 = !DILocation(line: 1548, column: 34, scope: !1315)
!10066 = !DILocation(line: 1548, column: 40, scope: !1315)
!10067 = !DILocation(line: 1548, column: 33, scope: !1315)
!10068 = !DILocation(line: 1548, column: 47, scope: !1315)
!10069 = !DILocation(line: 1548, column: 9, scope: !1315)
!10070 = !DILocation(line: 1548, column: 15, scope: !1315)
!10071 = !DILocation(line: 1548, column: 19, scope: !1315)
!10072 = !DILocation(line: 1549, column: 13, scope: !1321)
!10073 = !DILocation(line: 1549, column: 19, scope: !1321)
!10074 = !DILocation(line: 1549, column: 23, scope: !1321)
!10075 = !DILocation(line: 1549, column: 13, scope: !1315)
!10076 = !DILocation(line: 1550, column: 13, scope: !1320)
!10077 = !DILocation(line: 1550, column: 18, scope: !10078)
!10078 = !DILexicalBlockFile(scope: !1319, file: !368, discriminator: 1)
!10079 = !DILocation(line: 1550, column: 28, scope: !1319)
!10080 = !DILocation(line: 1550, column: 58, scope: !1319)
!10081 = !DILocation(line: 1550, column: 45, scope: !1319)
!10082 = !DILocation(line: 1550, column: 73, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !1319, file: !368, line: 1550, column: 70)
!10084 = !DILocation(line: 1550, column: 90, scope: !10083)
!10085 = !DILocation(line: 1550, column: 70, scope: !10083)
!10086 = !DILocation(line: 1550, column: 100, scope: !10083)
!10087 = !DILocation(line: 1550, column: 70, scope: !1319)
!10088 = !DILocation(line: 1550, column: 70, scope: !10089)
!10089 = !DILexicalBlockFile(scope: !1319, file: !368, discriminator: 2)
!10090 = !DILocation(line: 1550, column: 131, scope: !10091)
!10091 = !DILexicalBlockFile(scope: !10083, file: !368, discriminator: 3)
!10092 = !DILocation(line: 1550, column: 149, scope: !10083)
!10093 = !DILocation(line: 1550, column: 159, scope: !10083)
!10094 = !DILocation(line: 1550, column: 184, scope: !10083)
!10095 = !DILocation(line: 1550, column: 115, scope: !10083)
!10096 = !DILocation(line: 1550, column: 203, scope: !10097)
!10097 = !DILexicalBlockFile(scope: !1320, file: !368, discriminator: 4)
!10098 = !DILocation(line: 1550, column: 203, scope: !1319)
!10099 = !DILocation(line: 1550, column: 203, scope: !10100)
!10100 = !DILexicalBlockFile(scope: !1319, file: !368, discriminator: 5)
!10101 = !DILocation(line: 1551, column: 13, scope: !1320)
!10102 = !DILocation(line: 1553, column: 28, scope: !1315)
!10103 = !DILocation(line: 1553, column: 16, scope: !1315)
!10104 = !DILocation(line: 1553, column: 9, scope: !1315)
!10105 = !DILocation(line: 1554, column: 5, scope: !1316)
!10106 = !DILocation(line: 1555, column: 31, scope: !1308)
!10107 = !DILocation(line: 1555, column: 38, scope: !1308)
!10108 = !DILocation(line: 1555, column: 11, scope: !1308)
!10109 = !DILocation(line: 1555, column: 9, scope: !1308)
!10110 = !DILocation(line: 1556, column: 9, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !1308, file: !368, line: 1556, column: 9)
!10112 = !DILocation(line: 1556, column: 13, scope: !10111)
!10113 = !DILocation(line: 1556, column: 9, scope: !1308)
!10114 = !DILocation(line: 1557, column: 9, scope: !10111)
!10115 = !DILocation(line: 1558, column: 9, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !1308, file: !368, line: 1558, column: 9)
!10117 = !DILocation(line: 1558, column: 9, scope: !1308)
!10118 = !DILocation(line: 1559, column: 25, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10116, file: !368, line: 1558, column: 14)
!10120 = !DILocation(line: 1559, column: 34, scope: !10119)
!10121 = !DILocation(line: 1559, column: 43, scope: !10119)
!10122 = !DILocation(line: 1560, column: 16, scope: !10119)
!10123 = !DILocation(line: 1560, column: 9, scope: !10119)
!10124 = !DILocation(line: 1562, column: 24, scope: !1324)
!10125 = !DILocation(line: 1562, column: 33, scope: !1324)
!10126 = !DILocation(line: 1562, column: 42, scope: !1324)
!10127 = !DILocation(line: 1562, column: 62, scope: !1324)
!10128 = !DILocation(line: 1562, column: 96, scope: !10129)
!10129 = !DILexicalBlockFile(scope: !1324, file: !368, discriminator: 1)
!10130 = !DILocation(line: 1562, column: 105, scope: !1324)
!10131 = !DILocation(line: 1562, column: 65, scope: !1324)
!10132 = !DILocation(line: 1562, column: 134, scope: !1324)
!10133 = !DILocation(line: 1562, column: 152, scope: !10134)
!10134 = !DILexicalBlockFile(scope: !1324, file: !368, discriminator: 2)
!10135 = !DILocation(line: 1562, column: 161, scope: !1324)
!10136 = !DILocation(line: 1562, column: 170, scope: !1324)
!10137 = !DILocation(line: 1562, column: 192, scope: !1324)
!10138 = !DILocation(line: 1562, column: 226, scope: !10139)
!10139 = !DILexicalBlockFile(scope: !1324, file: !368, discriminator: 3)
!10140 = !DILocation(line: 1562, column: 235, scope: !1324)
!10141 = !DILocation(line: 1562, column: 195, scope: !1324)
!10142 = !DILocation(line: 1562, column: 9, scope: !1308)
!10143 = !DILocation(line: 1564, column: 9, scope: !1323)
!10144 = !DILocation(line: 1564, column: 24, scope: !1323)
!10145 = !DILocation(line: 1564, column: 46, scope: !1323)
!10146 = !DILocation(line: 1564, column: 29, scope: !1323)
!10147 = !DILocation(line: 1565, column: 9, scope: !1323)
!10148 = !DILocation(line: 1565, column: 24, scope: !1323)
!10149 = !DILocation(line: 1567, column: 16, scope: !1323)
!10150 = !DILocation(line: 1567, column: 19, scope: !1323)
!10151 = !DILocation(line: 1567, column: 22, scope: !10152)
!10152 = !DILexicalBlockFile(scope: !1323, file: !368, discriminator: 1)
!10153 = !DILocation(line: 1567, column: 26, scope: !1323)
!10154 = !DILocation(line: 1567, column: 22, scope: !1323)
!10155 = !DILocation(line: 1567, column: 49, scope: !10156)
!10156 = !DILexicalBlockFile(scope: !1323, file: !368, discriminator: 3)
!10157 = !DILocation(line: 1567, column: 53, scope: !1323)
!10158 = !DILocation(line: 1567, column: 34, scope: !1323)
!10159 = !DILocation(line: 1567, column: 16, scope: !10160)
!10160 = !DILexicalBlockFile(scope: !10161, file: !368, discriminator: 4)
!10161 = !DILexicalBlockFile(scope: !1323, file: !368, discriminator: 2)
!10162 = !DILocation(line: 1567, column: 14, scope: !10163)
!10163 = !DILexicalBlockFile(scope: !10164, file: !368, discriminator: 6)
!10164 = !DILexicalBlockFile(scope: !1323, file: !368, discriminator: 5)
!10165 = !DILocation(line: 1568, column: 13, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !1323, file: !368, line: 1568, column: 13)
!10167 = !DILocation(line: 1568, column: 18, scope: !10166)
!10168 = !DILocation(line: 1568, column: 22, scope: !10169)
!10169 = !DILexicalBlockFile(scope: !10166, file: !368, discriminator: 1)
!10170 = !DILocation(line: 1568, column: 28, scope: !10166)
!10171 = !DILocation(line: 1568, column: 39, scope: !10166)
!10172 = !DILocation(line: 1568, column: 67, scope: !10166)
!10173 = !DILocation(line: 1568, column: 36, scope: !10166)
!10174 = !DILocation(line: 1568, column: 13, scope: !1323)
!10175 = !DILocation(line: 1569, column: 29, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10166, file: !368, line: 1568, column: 77)
!10177 = !DILocation(line: 1569, column: 38, scope: !10176)
!10178 = !DILocation(line: 1569, column: 47, scope: !10176)
!10179 = !DILocation(line: 1570, column: 20, scope: !10176)
!10180 = !DILocation(line: 1570, column: 13, scope: !10176)
!10181 = !DILocation(line: 1572, column: 5, scope: !1324)
!10182 = !DILocation(line: 1572, column: 5, scope: !10129)
!10183 = !DILocation(line: 1572, column: 5, scope: !1323)
!10184 = !DILocation(line: 1573, column: 11, scope: !1328)
!10185 = !DILocation(line: 1573, column: 19, scope: !1328)
!10186 = !DILocation(line: 1573, column: 27, scope: !1328)
!10187 = !DILocation(line: 1573, column: 9, scope: !1308)
!10188 = !DILocation(line: 1575, column: 9, scope: !1327)
!10189 = !DILocation(line: 1575, column: 23, scope: !1327)
!10190 = !DILocation(line: 1575, column: 43, scope: !1327)
!10191 = !DILocation(line: 1575, column: 27, scope: !1327)
!10192 = !DILocation(line: 1576, column: 9, scope: !1327)
!10193 = !DILocation(line: 1576, column: 24, scope: !1327)
!10194 = !DILocation(line: 1576, column: 48, scope: !1327)
!10195 = !DILocation(line: 1576, column: 51, scope: !1327)
!10196 = !DILocation(line: 1576, column: 31, scope: !1327)
!10197 = !DILocation(line: 1577, column: 13, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !1327, file: !368, line: 1577, column: 13)
!10199 = !DILocation(line: 1577, column: 18, scope: !10198)
!10200 = !DILocation(line: 1577, column: 22, scope: !10201)
!10201 = !DILexicalBlockFile(scope: !10198, file: !368, discriminator: 1)
!10202 = !DILocation(line: 1577, column: 28, scope: !10198)
!10203 = !DILocation(line: 1577, column: 39, scope: !10198)
!10204 = !DILocation(line: 1577, column: 67, scope: !10198)
!10205 = !DILocation(line: 1577, column: 36, scope: !10198)
!10206 = !DILocation(line: 1577, column: 13, scope: !1327)
!10207 = !DILocation(line: 1578, column: 29, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10198, file: !368, line: 1577, column: 77)
!10209 = !DILocation(line: 1578, column: 38, scope: !10208)
!10210 = !DILocation(line: 1578, column: 47, scope: !10208)
!10211 = !DILocation(line: 1579, column: 20, scope: !10208)
!10212 = !DILocation(line: 1579, column: 13, scope: !10208)
!10213 = !DILocation(line: 1581, column: 5, scope: !1328)
!10214 = !DILocation(line: 1581, column: 5, scope: !10215)
!10215 = !DILexicalBlockFile(scope: !1328, file: !368, discriminator: 1)
!10216 = !DILocation(line: 1581, column: 5, scope: !1327)
!10217 = !DILocation(line: 1583, column: 43, scope: !1308)
!10218 = !DILocation(line: 1583, column: 20, scope: !1308)
!10219 = !DILocation(line: 1583, column: 18, scope: !1308)
!10220 = !DILocation(line: 1584, column: 9, scope: !1333)
!10221 = !DILocation(line: 1584, column: 9, scope: !1308)
!10222 = !DILocation(line: 1585, column: 37, scope: !1332)
!10223 = !DILocation(line: 1585, column: 43, scope: !1332)
!10224 = !DILocation(line: 1585, column: 17, scope: !1332)
!10225 = !DILocation(line: 1585, column: 15, scope: !1332)
!10226 = !DILocation(line: 1586, column: 9, scope: !1332)
!10227 = !DILocation(line: 1586, column: 14, scope: !10228)
!10228 = !DILexicalBlockFile(scope: !1331, file: !368, discriminator: 1)
!10229 = !DILocation(line: 1586, column: 24, scope: !1331)
!10230 = !DILocation(line: 1586, column: 54, scope: !1331)
!10231 = !DILocation(line: 1586, column: 77, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !1331, file: !368, line: 1586, column: 74)
!10233 = !DILocation(line: 1586, column: 94, scope: !10232)
!10234 = !DILocation(line: 1586, column: 74, scope: !10232)
!10235 = !DILocation(line: 1586, column: 104, scope: !10232)
!10236 = !DILocation(line: 1586, column: 74, scope: !1331)
!10237 = !DILocation(line: 1586, column: 74, scope: !10238)
!10238 = !DILexicalBlockFile(scope: !1331, file: !368, discriminator: 2)
!10239 = !DILocation(line: 1586, column: 135, scope: !10240)
!10240 = !DILexicalBlockFile(scope: !10232, file: !368, discriminator: 3)
!10241 = !DILocation(line: 1586, column: 153, scope: !10232)
!10242 = !DILocation(line: 1586, column: 163, scope: !10232)
!10243 = !DILocation(line: 1586, column: 188, scope: !10232)
!10244 = !DILocation(line: 1586, column: 119, scope: !10232)
!10245 = !DILocation(line: 1586, column: 207, scope: !10246)
!10246 = !DILexicalBlockFile(scope: !1332, file: !368, discriminator: 4)
!10247 = !DILocation(line: 1586, column: 207, scope: !1331)
!10248 = !DILocation(line: 1586, column: 207, scope: !10249)
!10249 = !DILexicalBlockFile(scope: !1331, file: !368, discriminator: 5)
!10250 = !DILocation(line: 1587, column: 16, scope: !1332)
!10251 = !DILocation(line: 1587, column: 9, scope: !1332)
!10252 = !DILocation(line: 1590, column: 21, scope: !1308)
!10253 = !DILocation(line: 1590, column: 5, scope: !1308)
!10254 = !DILocation(line: 1592, column: 5, scope: !1308)
!10255 = !DILocation(line: 1593, column: 1, scope: !1308)
!10256 = !DILocation(line: 1466, column: 32, scope: !1334)
!10257 = !DILocation(line: 1466, column: 48, scope: !1334)
!10258 = !DILocation(line: 1468, column: 5, scope: !1334)
!10259 = !DILocation(line: 1468, column: 15, scope: !1334)
!10260 = !DILocation(line: 1469, column: 5, scope: !1334)
!10261 = !DILocation(line: 1469, column: 9, scope: !1334)
!10262 = !DILocation(line: 1470, column: 9, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !1334, file: !368, line: 1470, column: 9)
!10264 = !DILocation(line: 1470, column: 15, scope: !10263)
!10265 = !DILocation(line: 1470, column: 9, scope: !1334)
!10266 = !DILocation(line: 1471, column: 55, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10263, file: !368, line: 1470, column: 37)
!10268 = !DILocation(line: 1472, column: 9, scope: !10267)
!10269 = !DILocation(line: 1474, column: 26, scope: !1342)
!10270 = !DILocation(line: 1474, column: 35, scope: !1342)
!10271 = !DILocation(line: 1474, column: 46, scope: !1342)
!10272 = !DILocation(line: 1474, column: 55, scope: !1342)
!10273 = !DILocation(line: 1474, column: 72, scope: !1342)
!10274 = !DILocation(line: 1474, column: 78, scope: !1342)
!10275 = !DILocation(line: 1474, column: 98, scope: !10276)
!10276 = !DILexicalBlockFile(scope: !1342, file: !368, discriminator: 1)
!10277 = !DILocation(line: 1474, column: 107, scope: !1342)
!10278 = !DILocation(line: 1474, column: 118, scope: !1342)
!10279 = !DILocation(line: 1474, column: 127, scope: !1342)
!10280 = !DILocation(line: 1474, column: 144, scope: !1342)
!10281 = !DILocation(line: 1474, column: 9, scope: !1334)
!10282 = !DILocation(line: 1475, column: 9, scope: !1341)
!10283 = !DILocation(line: 1475, column: 23, scope: !1341)
!10284 = !DILocation(line: 1476, column: 9, scope: !1341)
!10285 = !DILocation(line: 1476, column: 27, scope: !1341)
!10286 = !DILocation(line: 1476, column: 32, scope: !1341)
!10287 = !DILocation(line: 1478, column: 16, scope: !1341)
!10288 = !DILocation(line: 1478, column: 14, scope: !1341)
!10289 = !DILocation(line: 1479, column: 13, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !1341, file: !368, line: 1479, column: 13)
!10291 = !DILocation(line: 1479, column: 18, scope: !10290)
!10292 = !DILocation(line: 1479, column: 13, scope: !1341)
!10293 = !DILocation(line: 1480, column: 13, scope: !10290)
!10294 = !DILocation(line: 1481, column: 9, scope: !1341)
!10295 = !DILocation(line: 1481, column: 15, scope: !1341)
!10296 = !DILocation(line: 1481, column: 25, scope: !1341)
!10297 = !DILocation(line: 1482, column: 9, scope: !1341)
!10298 = !DILocation(line: 1482, column: 15, scope: !1341)
!10299 = !DILocation(line: 1482, column: 19, scope: !1341)
!10300 = !DILocation(line: 1483, column: 21, scope: !1341)
!10301 = !DILocation(line: 1483, column: 25, scope: !1341)
!10302 = !DILocation(line: 1483, column: 34, scope: !1341)
!10303 = !DILocation(line: 1483, column: 40, scope: !1341)
!10304 = !DILocation(line: 1483, column: 33, scope: !1341)
!10305 = !DILocation(line: 1483, column: 47, scope: !1341)
!10306 = !DILocation(line: 1483, column: 9, scope: !1341)
!10307 = !DILocation(line: 1483, column: 15, scope: !1341)
!10308 = !DILocation(line: 1483, column: 19, scope: !1341)
!10309 = !DILocation(line: 1484, column: 13, scope: !1347)
!10310 = !DILocation(line: 1484, column: 19, scope: !1347)
!10311 = !DILocation(line: 1484, column: 23, scope: !1347)
!10312 = !DILocation(line: 1484, column: 13, scope: !1341)
!10313 = !DILocation(line: 1485, column: 13, scope: !1346)
!10314 = !DILocation(line: 1485, column: 18, scope: !10315)
!10315 = !DILexicalBlockFile(scope: !1345, file: !368, discriminator: 1)
!10316 = !DILocation(line: 1485, column: 28, scope: !1345)
!10317 = !DILocation(line: 1485, column: 58, scope: !1345)
!10318 = !DILocation(line: 1485, column: 45, scope: !1345)
!10319 = !DILocation(line: 1485, column: 73, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !1345, file: !368, line: 1485, column: 70)
!10321 = !DILocation(line: 1485, column: 90, scope: !10320)
!10322 = !DILocation(line: 1485, column: 70, scope: !10320)
!10323 = !DILocation(line: 1485, column: 100, scope: !10320)
!10324 = !DILocation(line: 1485, column: 70, scope: !1345)
!10325 = !DILocation(line: 1485, column: 70, scope: !10326)
!10326 = !DILexicalBlockFile(scope: !1345, file: !368, discriminator: 2)
!10327 = !DILocation(line: 1485, column: 131, scope: !10328)
!10328 = !DILexicalBlockFile(scope: !10320, file: !368, discriminator: 3)
!10329 = !DILocation(line: 1485, column: 149, scope: !10320)
!10330 = !DILocation(line: 1485, column: 159, scope: !10320)
!10331 = !DILocation(line: 1485, column: 184, scope: !10320)
!10332 = !DILocation(line: 1485, column: 115, scope: !10320)
!10333 = !DILocation(line: 1485, column: 203, scope: !10334)
!10334 = !DILexicalBlockFile(scope: !1346, file: !368, discriminator: 4)
!10335 = !DILocation(line: 1485, column: 203, scope: !1345)
!10336 = !DILocation(line: 1485, column: 203, scope: !10337)
!10337 = !DILexicalBlockFile(scope: !1345, file: !368, discriminator: 5)
!10338 = !DILocation(line: 1486, column: 13, scope: !1346)
!10339 = !DILocation(line: 1488, column: 28, scope: !1341)
!10340 = !DILocation(line: 1488, column: 16, scope: !1341)
!10341 = !DILocation(line: 1488, column: 9, scope: !1341)
!10342 = !DILocation(line: 1489, column: 5, scope: !1342)
!10343 = !DILocation(line: 1490, column: 31, scope: !1334)
!10344 = !DILocation(line: 1490, column: 38, scope: !1334)
!10345 = !DILocation(line: 1490, column: 11, scope: !1334)
!10346 = !DILocation(line: 1490, column: 9, scope: !1334)
!10347 = !DILocation(line: 1491, column: 9, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !1334, file: !368, line: 1491, column: 9)
!10349 = !DILocation(line: 1491, column: 13, scope: !10348)
!10350 = !DILocation(line: 1491, column: 9, scope: !1334)
!10351 = !DILocation(line: 1492, column: 9, scope: !10348)
!10352 = !DILocation(line: 1493, column: 9, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !1334, file: !368, line: 1493, column: 9)
!10354 = !DILocation(line: 1493, column: 9, scope: !1334)
!10355 = !DILocation(line: 1494, column: 25, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10353, file: !368, line: 1493, column: 14)
!10357 = !DILocation(line: 1494, column: 34, scope: !10356)
!10358 = !DILocation(line: 1494, column: 43, scope: !10356)
!10359 = !DILocation(line: 1495, column: 16, scope: !10356)
!10360 = !DILocation(line: 1495, column: 9, scope: !10356)
!10361 = !DILocation(line: 1497, column: 24, scope: !1350)
!10362 = !DILocation(line: 1497, column: 33, scope: !1350)
!10363 = !DILocation(line: 1497, column: 42, scope: !1350)
!10364 = !DILocation(line: 1497, column: 62, scope: !1350)
!10365 = !DILocation(line: 1497, column: 96, scope: !10366)
!10366 = !DILexicalBlockFile(scope: !1350, file: !368, discriminator: 1)
!10367 = !DILocation(line: 1497, column: 105, scope: !1350)
!10368 = !DILocation(line: 1497, column: 65, scope: !1350)
!10369 = !DILocation(line: 1497, column: 134, scope: !1350)
!10370 = !DILocation(line: 1497, column: 152, scope: !10371)
!10371 = !DILexicalBlockFile(scope: !1350, file: !368, discriminator: 2)
!10372 = !DILocation(line: 1497, column: 161, scope: !1350)
!10373 = !DILocation(line: 1497, column: 170, scope: !1350)
!10374 = !DILocation(line: 1497, column: 192, scope: !1350)
!10375 = !DILocation(line: 1497, column: 226, scope: !10376)
!10376 = !DILexicalBlockFile(scope: !1350, file: !368, discriminator: 3)
!10377 = !DILocation(line: 1497, column: 235, scope: !1350)
!10378 = !DILocation(line: 1497, column: 195, scope: !1350)
!10379 = !DILocation(line: 1497, column: 9, scope: !1334)
!10380 = !DILocation(line: 1499, column: 9, scope: !1349)
!10381 = !DILocation(line: 1499, column: 24, scope: !1349)
!10382 = !DILocation(line: 1499, column: 46, scope: !1349)
!10383 = !DILocation(line: 1499, column: 29, scope: !1349)
!10384 = !DILocation(line: 1500, column: 9, scope: !1349)
!10385 = !DILocation(line: 1500, column: 24, scope: !1349)
!10386 = !DILocation(line: 1502, column: 16, scope: !1349)
!10387 = !DILocation(line: 1502, column: 19, scope: !1349)
!10388 = !DILocation(line: 1502, column: 22, scope: !10389)
!10389 = !DILexicalBlockFile(scope: !1349, file: !368, discriminator: 1)
!10390 = !DILocation(line: 1502, column: 26, scope: !1349)
!10391 = !DILocation(line: 1502, column: 22, scope: !1349)
!10392 = !DILocation(line: 1502, column: 49, scope: !10393)
!10393 = !DILexicalBlockFile(scope: !1349, file: !368, discriminator: 3)
!10394 = !DILocation(line: 1502, column: 53, scope: !1349)
!10395 = !DILocation(line: 1502, column: 34, scope: !1349)
!10396 = !DILocation(line: 1502, column: 16, scope: !10397)
!10397 = !DILexicalBlockFile(scope: !10398, file: !368, discriminator: 4)
!10398 = !DILexicalBlockFile(scope: !1349, file: !368, discriminator: 2)
!10399 = !DILocation(line: 1502, column: 14, scope: !10400)
!10400 = !DILexicalBlockFile(scope: !10401, file: !368, discriminator: 6)
!10401 = !DILexicalBlockFile(scope: !1349, file: !368, discriminator: 5)
!10402 = !DILocation(line: 1503, column: 13, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !1349, file: !368, line: 1503, column: 13)
!10404 = !DILocation(line: 1503, column: 18, scope: !10403)
!10405 = !DILocation(line: 1503, column: 22, scope: !10406)
!10406 = !DILexicalBlockFile(scope: !10403, file: !368, discriminator: 1)
!10407 = !DILocation(line: 1503, column: 28, scope: !10403)
!10408 = !DILocation(line: 1503, column: 39, scope: !10403)
!10409 = !DILocation(line: 1503, column: 67, scope: !10403)
!10410 = !DILocation(line: 1503, column: 36, scope: !10403)
!10411 = !DILocation(line: 1503, column: 13, scope: !1349)
!10412 = !DILocation(line: 1504, column: 29, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10403, file: !368, line: 1503, column: 77)
!10414 = !DILocation(line: 1504, column: 38, scope: !10413)
!10415 = !DILocation(line: 1504, column: 47, scope: !10413)
!10416 = !DILocation(line: 1505, column: 20, scope: !10413)
!10417 = !DILocation(line: 1505, column: 13, scope: !10413)
!10418 = !DILocation(line: 1507, column: 5, scope: !1350)
!10419 = !DILocation(line: 1507, column: 5, scope: !10366)
!10420 = !DILocation(line: 1507, column: 5, scope: !1349)
!10421 = !DILocation(line: 1508, column: 11, scope: !1354)
!10422 = !DILocation(line: 1508, column: 19, scope: !1354)
!10423 = !DILocation(line: 1508, column: 27, scope: !1354)
!10424 = !DILocation(line: 1508, column: 9, scope: !1334)
!10425 = !DILocation(line: 1510, column: 9, scope: !1353)
!10426 = !DILocation(line: 1510, column: 23, scope: !1353)
!10427 = !DILocation(line: 1510, column: 43, scope: !1353)
!10428 = !DILocation(line: 1510, column: 27, scope: !1353)
!10429 = !DILocation(line: 1511, column: 9, scope: !1353)
!10430 = !DILocation(line: 1511, column: 24, scope: !1353)
!10431 = !DILocation(line: 1511, column: 48, scope: !1353)
!10432 = !DILocation(line: 1511, column: 51, scope: !1353)
!10433 = !DILocation(line: 1511, column: 31, scope: !1353)
!10434 = !DILocation(line: 1512, column: 13, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !1353, file: !368, line: 1512, column: 13)
!10436 = !DILocation(line: 1512, column: 18, scope: !10435)
!10437 = !DILocation(line: 1512, column: 22, scope: !10438)
!10438 = !DILexicalBlockFile(scope: !10435, file: !368, discriminator: 1)
!10439 = !DILocation(line: 1512, column: 28, scope: !10435)
!10440 = !DILocation(line: 1512, column: 39, scope: !10435)
!10441 = !DILocation(line: 1512, column: 67, scope: !10435)
!10442 = !DILocation(line: 1512, column: 36, scope: !10435)
!10443 = !DILocation(line: 1512, column: 13, scope: !1353)
!10444 = !DILocation(line: 1513, column: 29, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10435, file: !368, line: 1512, column: 77)
!10446 = !DILocation(line: 1513, column: 38, scope: !10445)
!10447 = !DILocation(line: 1513, column: 47, scope: !10445)
!10448 = !DILocation(line: 1514, column: 20, scope: !10445)
!10449 = !DILocation(line: 1514, column: 13, scope: !10445)
!10450 = !DILocation(line: 1516, column: 5, scope: !1354)
!10451 = !DILocation(line: 1516, column: 5, scope: !10452)
!10452 = !DILexicalBlockFile(scope: !1354, file: !368, discriminator: 1)
!10453 = !DILocation(line: 1516, column: 5, scope: !1353)
!10454 = !DILocation(line: 1518, column: 43, scope: !1334)
!10455 = !DILocation(line: 1518, column: 20, scope: !1334)
!10456 = !DILocation(line: 1518, column: 18, scope: !1334)
!10457 = !DILocation(line: 1519, column: 9, scope: !1359)
!10458 = !DILocation(line: 1519, column: 9, scope: !1334)
!10459 = !DILocation(line: 1520, column: 38, scope: !1358)
!10460 = !DILocation(line: 1520, column: 44, scope: !1358)
!10461 = !DILocation(line: 1520, column: 17, scope: !1358)
!10462 = !DILocation(line: 1520, column: 15, scope: !1358)
!10463 = !DILocation(line: 1521, column: 9, scope: !1358)
!10464 = !DILocation(line: 1521, column: 14, scope: !10465)
!10465 = !DILexicalBlockFile(scope: !1357, file: !368, discriminator: 1)
!10466 = !DILocation(line: 1521, column: 24, scope: !1357)
!10467 = !DILocation(line: 1521, column: 54, scope: !1357)
!10468 = !DILocation(line: 1521, column: 77, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !1357, file: !368, line: 1521, column: 74)
!10470 = !DILocation(line: 1521, column: 94, scope: !10469)
!10471 = !DILocation(line: 1521, column: 74, scope: !10469)
!10472 = !DILocation(line: 1521, column: 104, scope: !10469)
!10473 = !DILocation(line: 1521, column: 74, scope: !1357)
!10474 = !DILocation(line: 1521, column: 74, scope: !10475)
!10475 = !DILexicalBlockFile(scope: !1357, file: !368, discriminator: 2)
!10476 = !DILocation(line: 1521, column: 135, scope: !10477)
!10477 = !DILexicalBlockFile(scope: !10469, file: !368, discriminator: 3)
!10478 = !DILocation(line: 1521, column: 153, scope: !10469)
!10479 = !DILocation(line: 1521, column: 163, scope: !10469)
!10480 = !DILocation(line: 1521, column: 188, scope: !10469)
!10481 = !DILocation(line: 1521, column: 119, scope: !10469)
!10482 = !DILocation(line: 1521, column: 207, scope: !10483)
!10483 = !DILexicalBlockFile(scope: !1358, file: !368, discriminator: 4)
!10484 = !DILocation(line: 1521, column: 207, scope: !1357)
!10485 = !DILocation(line: 1521, column: 207, scope: !10486)
!10486 = !DILexicalBlockFile(scope: !1357, file: !368, discriminator: 5)
!10487 = !DILocation(line: 1522, column: 16, scope: !1358)
!10488 = !DILocation(line: 1522, column: 9, scope: !1358)
!10489 = !DILocation(line: 1525, column: 21, scope: !1334)
!10490 = !DILocation(line: 1525, column: 5, scope: !1334)
!10491 = !DILocation(line: 1527, column: 5, scope: !1334)
!10492 = !DILocation(line: 1528, column: 1, scope: !1334)
!10493 = !DILocation(line: 1596, column: 31, scope: !1360)
!10494 = !DILocation(line: 1596, column: 47, scope: !1360)
!10495 = !DILocation(line: 1598, column: 5, scope: !1360)
!10496 = !DILocation(line: 1598, column: 20, scope: !1360)
!10497 = !DILocation(line: 1599, column: 5, scope: !1360)
!10498 = !DILocation(line: 1599, column: 15, scope: !1360)
!10499 = !DILocation(line: 1600, column: 5, scope: !1360)
!10500 = !DILocation(line: 1600, column: 9, scope: !1360)
!10501 = !DILocation(line: 1603, column: 9, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !1360, file: !368, line: 1603, column: 9)
!10503 = !DILocation(line: 1603, column: 15, scope: !10502)
!10504 = !DILocation(line: 1603, column: 9, scope: !1360)
!10505 = !DILocation(line: 1604, column: 55, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10502, file: !368, line: 1603, column: 37)
!10507 = !DILocation(line: 1605, column: 9, scope: !10506)
!10508 = !DILocation(line: 1609, column: 26, scope: !1369)
!10509 = !DILocation(line: 1609, column: 35, scope: !1369)
!10510 = !DILocation(line: 1609, column: 46, scope: !1369)
!10511 = !DILocation(line: 1609, column: 55, scope: !1369)
!10512 = !DILocation(line: 1609, column: 72, scope: !1369)
!10513 = !DILocation(line: 1609, column: 9, scope: !1360)
!10514 = !DILocation(line: 1610, column: 9, scope: !1368)
!10515 = !DILocation(line: 1610, column: 23, scope: !1368)
!10516 = !DILocation(line: 1611, column: 9, scope: !1368)
!10517 = !DILocation(line: 1611, column: 27, scope: !1368)
!10518 = !DILocation(line: 1611, column: 32, scope: !1368)
!10519 = !DILocation(line: 1613, column: 16, scope: !1368)
!10520 = !DILocation(line: 1613, column: 14, scope: !1368)
!10521 = !DILocation(line: 1614, column: 13, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !1368, file: !368, line: 1614, column: 13)
!10523 = !DILocation(line: 1614, column: 18, scope: !10522)
!10524 = !DILocation(line: 1614, column: 13, scope: !1368)
!10525 = !DILocation(line: 1615, column: 13, scope: !10522)
!10526 = !DILocation(line: 1616, column: 9, scope: !1368)
!10527 = !DILocation(line: 1616, column: 15, scope: !1368)
!10528 = !DILocation(line: 1616, column: 25, scope: !1368)
!10529 = !DILocation(line: 1617, column: 9, scope: !1368)
!10530 = !DILocation(line: 1617, column: 15, scope: !1368)
!10531 = !DILocation(line: 1617, column: 19, scope: !1368)
!10532 = !DILocation(line: 1618, column: 21, scope: !1368)
!10533 = !DILocation(line: 1618, column: 25, scope: !1368)
!10534 = !DILocation(line: 1618, column: 34, scope: !1368)
!10535 = !DILocation(line: 1618, column: 40, scope: !1368)
!10536 = !DILocation(line: 1618, column: 33, scope: !1368)
!10537 = !DILocation(line: 1618, column: 47, scope: !1368)
!10538 = !DILocation(line: 1618, column: 9, scope: !1368)
!10539 = !DILocation(line: 1618, column: 15, scope: !1368)
!10540 = !DILocation(line: 1618, column: 19, scope: !1368)
!10541 = !DILocation(line: 1619, column: 13, scope: !1374)
!10542 = !DILocation(line: 1619, column: 19, scope: !1374)
!10543 = !DILocation(line: 1619, column: 23, scope: !1374)
!10544 = !DILocation(line: 1619, column: 13, scope: !1368)
!10545 = !DILocation(line: 1620, column: 13, scope: !1373)
!10546 = !DILocation(line: 1620, column: 18, scope: !10547)
!10547 = !DILexicalBlockFile(scope: !1372, file: !368, discriminator: 1)
!10548 = !DILocation(line: 1620, column: 28, scope: !1372)
!10549 = !DILocation(line: 1620, column: 58, scope: !1372)
!10550 = !DILocation(line: 1620, column: 45, scope: !1372)
!10551 = !DILocation(line: 1620, column: 73, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !1372, file: !368, line: 1620, column: 70)
!10553 = !DILocation(line: 1620, column: 90, scope: !10552)
!10554 = !DILocation(line: 1620, column: 70, scope: !10552)
!10555 = !DILocation(line: 1620, column: 100, scope: !10552)
!10556 = !DILocation(line: 1620, column: 70, scope: !1372)
!10557 = !DILocation(line: 1620, column: 70, scope: !10558)
!10558 = !DILexicalBlockFile(scope: !1372, file: !368, discriminator: 2)
!10559 = !DILocation(line: 1620, column: 131, scope: !10560)
!10560 = !DILexicalBlockFile(scope: !10552, file: !368, discriminator: 3)
!10561 = !DILocation(line: 1620, column: 149, scope: !10552)
!10562 = !DILocation(line: 1620, column: 159, scope: !10552)
!10563 = !DILocation(line: 1620, column: 184, scope: !10552)
!10564 = !DILocation(line: 1620, column: 115, scope: !10552)
!10565 = !DILocation(line: 1620, column: 203, scope: !10566)
!10566 = !DILexicalBlockFile(scope: !1373, file: !368, discriminator: 4)
!10567 = !DILocation(line: 1620, column: 203, scope: !1372)
!10568 = !DILocation(line: 1620, column: 203, scope: !10569)
!10569 = !DILexicalBlockFile(scope: !1372, file: !368, discriminator: 5)
!10570 = !DILocation(line: 1621, column: 13, scope: !1373)
!10571 = !DILocation(line: 1623, column: 28, scope: !1368)
!10572 = !DILocation(line: 1623, column: 16, scope: !1368)
!10573 = !DILocation(line: 1623, column: 9, scope: !1368)
!10574 = !DILocation(line: 1624, column: 5, scope: !1369)
!10575 = !DILocation(line: 1627, column: 26, scope: !1377)
!10576 = !DILocation(line: 1627, column: 35, scope: !1377)
!10577 = !DILocation(line: 1627, column: 46, scope: !1377)
!10578 = !DILocation(line: 1627, column: 55, scope: !1377)
!10579 = !DILocation(line: 1627, column: 72, scope: !1377)
!10580 = !DILocation(line: 1627, column: 9, scope: !1360)
!10581 = !DILocation(line: 1628, column: 9, scope: !1376)
!10582 = !DILocation(line: 1628, column: 23, scope: !1376)
!10583 = !DILocation(line: 1629, column: 9, scope: !1376)
!10584 = !DILocation(line: 1629, column: 27, scope: !1376)
!10585 = !DILocation(line: 1629, column: 32, scope: !1376)
!10586 = !DILocation(line: 1631, column: 16, scope: !1376)
!10587 = !DILocation(line: 1631, column: 14, scope: !1376)
!10588 = !DILocation(line: 1632, column: 13, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !1376, file: !368, line: 1632, column: 13)
!10590 = !DILocation(line: 1632, column: 18, scope: !10589)
!10591 = !DILocation(line: 1632, column: 13, scope: !1376)
!10592 = !DILocation(line: 1633, column: 13, scope: !10589)
!10593 = !DILocation(line: 1634, column: 9, scope: !1376)
!10594 = !DILocation(line: 1634, column: 15, scope: !1376)
!10595 = !DILocation(line: 1634, column: 25, scope: !1376)
!10596 = !DILocation(line: 1635, column: 9, scope: !1376)
!10597 = !DILocation(line: 1635, column: 15, scope: !1376)
!10598 = !DILocation(line: 1635, column: 19, scope: !1376)
!10599 = !DILocation(line: 1636, column: 21, scope: !1376)
!10600 = !DILocation(line: 1636, column: 25, scope: !1376)
!10601 = !DILocation(line: 1636, column: 34, scope: !1376)
!10602 = !DILocation(line: 1636, column: 40, scope: !1376)
!10603 = !DILocation(line: 1636, column: 33, scope: !1376)
!10604 = !DILocation(line: 1636, column: 47, scope: !1376)
!10605 = !DILocation(line: 1636, column: 9, scope: !1376)
!10606 = !DILocation(line: 1636, column: 15, scope: !1376)
!10607 = !DILocation(line: 1636, column: 19, scope: !1376)
!10608 = !DILocation(line: 1637, column: 13, scope: !1382)
!10609 = !DILocation(line: 1637, column: 19, scope: !1382)
!10610 = !DILocation(line: 1637, column: 23, scope: !1382)
!10611 = !DILocation(line: 1637, column: 13, scope: !1376)
!10612 = !DILocation(line: 1638, column: 13, scope: !1381)
!10613 = !DILocation(line: 1638, column: 18, scope: !10614)
!10614 = !DILexicalBlockFile(scope: !1380, file: !368, discriminator: 1)
!10615 = !DILocation(line: 1638, column: 28, scope: !1380)
!10616 = !DILocation(line: 1638, column: 58, scope: !1380)
!10617 = !DILocation(line: 1638, column: 45, scope: !1380)
!10618 = !DILocation(line: 1638, column: 73, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !1380, file: !368, line: 1638, column: 70)
!10620 = !DILocation(line: 1638, column: 90, scope: !10619)
!10621 = !DILocation(line: 1638, column: 70, scope: !10619)
!10622 = !DILocation(line: 1638, column: 100, scope: !10619)
!10623 = !DILocation(line: 1638, column: 70, scope: !1380)
!10624 = !DILocation(line: 1638, column: 70, scope: !10625)
!10625 = !DILexicalBlockFile(scope: !1380, file: !368, discriminator: 2)
!10626 = !DILocation(line: 1638, column: 131, scope: !10627)
!10627 = !DILexicalBlockFile(scope: !10619, file: !368, discriminator: 3)
!10628 = !DILocation(line: 1638, column: 149, scope: !10619)
!10629 = !DILocation(line: 1638, column: 159, scope: !10619)
!10630 = !DILocation(line: 1638, column: 184, scope: !10619)
!10631 = !DILocation(line: 1638, column: 115, scope: !10619)
!10632 = !DILocation(line: 1638, column: 203, scope: !10633)
!10633 = !DILexicalBlockFile(scope: !1381, file: !368, discriminator: 4)
!10634 = !DILocation(line: 1638, column: 203, scope: !1380)
!10635 = !DILocation(line: 1638, column: 203, scope: !10636)
!10636 = !DILexicalBlockFile(scope: !1380, file: !368, discriminator: 5)
!10637 = !DILocation(line: 1639, column: 13, scope: !1381)
!10638 = !DILocation(line: 1641, column: 28, scope: !1376)
!10639 = !DILocation(line: 1641, column: 16, scope: !1376)
!10640 = !DILocation(line: 1641, column: 9, scope: !1376)
!10641 = !DILocation(line: 1642, column: 5, scope: !1377)
!10642 = !DILocation(line: 1644, column: 24, scope: !1385)
!10643 = !DILocation(line: 1644, column: 33, scope: !1385)
!10644 = !DILocation(line: 1644, column: 42, scope: !1385)
!10645 = !DILocation(line: 1644, column: 65, scope: !1385)
!10646 = !DILocation(line: 1644, column: 99, scope: !10647)
!10647 = !DILexicalBlockFile(scope: !1385, file: !368, discriminator: 1)
!10648 = !DILocation(line: 1644, column: 108, scope: !1385)
!10649 = !DILocation(line: 1644, column: 68, scope: !1385)
!10650 = !DILocation(line: 1644, column: 9, scope: !1360)
!10651 = !DILocation(line: 1645, column: 9, scope: !1384)
!10652 = !DILocation(line: 1645, column: 23, scope: !1384)
!10653 = !DILocation(line: 1646, column: 9, scope: !1384)
!10654 = !DILocation(line: 1646, column: 27, scope: !1384)
!10655 = !DILocation(line: 1646, column: 32, scope: !1384)
!10656 = !DILocation(line: 1648, column: 16, scope: !1384)
!10657 = !DILocation(line: 1648, column: 14, scope: !1384)
!10658 = !DILocation(line: 1649, column: 13, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !1384, file: !368, line: 1649, column: 13)
!10660 = !DILocation(line: 1649, column: 18, scope: !10659)
!10661 = !DILocation(line: 1649, column: 13, scope: !1384)
!10662 = !DILocation(line: 1650, column: 13, scope: !10659)
!10663 = !DILocation(line: 1651, column: 9, scope: !1384)
!10664 = !DILocation(line: 1651, column: 15, scope: !1384)
!10665 = !DILocation(line: 1651, column: 25, scope: !1384)
!10666 = !DILocation(line: 1652, column: 9, scope: !1384)
!10667 = !DILocation(line: 1652, column: 15, scope: !1384)
!10668 = !DILocation(line: 1652, column: 19, scope: !1384)
!10669 = !DILocation(line: 1653, column: 21, scope: !1384)
!10670 = !DILocation(line: 1653, column: 25, scope: !1384)
!10671 = !DILocation(line: 1653, column: 34, scope: !1384)
!10672 = !DILocation(line: 1653, column: 40, scope: !1384)
!10673 = !DILocation(line: 1653, column: 33, scope: !1384)
!10674 = !DILocation(line: 1653, column: 47, scope: !1384)
!10675 = !DILocation(line: 1653, column: 9, scope: !1384)
!10676 = !DILocation(line: 1653, column: 15, scope: !1384)
!10677 = !DILocation(line: 1653, column: 19, scope: !1384)
!10678 = !DILocation(line: 1654, column: 13, scope: !1390)
!10679 = !DILocation(line: 1654, column: 19, scope: !1390)
!10680 = !DILocation(line: 1654, column: 23, scope: !1390)
!10681 = !DILocation(line: 1654, column: 13, scope: !1384)
!10682 = !DILocation(line: 1655, column: 13, scope: !1389)
!10683 = !DILocation(line: 1655, column: 18, scope: !10684)
!10684 = !DILexicalBlockFile(scope: !1388, file: !368, discriminator: 1)
!10685 = !DILocation(line: 1655, column: 28, scope: !1388)
!10686 = !DILocation(line: 1655, column: 58, scope: !1388)
!10687 = !DILocation(line: 1655, column: 45, scope: !1388)
!10688 = !DILocation(line: 1655, column: 73, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !1388, file: !368, line: 1655, column: 70)
!10690 = !DILocation(line: 1655, column: 90, scope: !10689)
!10691 = !DILocation(line: 1655, column: 70, scope: !10689)
!10692 = !DILocation(line: 1655, column: 100, scope: !10689)
!10693 = !DILocation(line: 1655, column: 70, scope: !1388)
!10694 = !DILocation(line: 1655, column: 70, scope: !10695)
!10695 = !DILexicalBlockFile(scope: !1388, file: !368, discriminator: 2)
!10696 = !DILocation(line: 1655, column: 131, scope: !10697)
!10697 = !DILexicalBlockFile(scope: !10689, file: !368, discriminator: 3)
!10698 = !DILocation(line: 1655, column: 149, scope: !10689)
!10699 = !DILocation(line: 1655, column: 159, scope: !10689)
!10700 = !DILocation(line: 1655, column: 184, scope: !10689)
!10701 = !DILocation(line: 1655, column: 115, scope: !10689)
!10702 = !DILocation(line: 1655, column: 203, scope: !10703)
!10703 = !DILexicalBlockFile(scope: !1389, file: !368, discriminator: 4)
!10704 = !DILocation(line: 1655, column: 203, scope: !1388)
!10705 = !DILocation(line: 1655, column: 203, scope: !10706)
!10706 = !DILexicalBlockFile(scope: !1388, file: !368, discriminator: 5)
!10707 = !DILocation(line: 1656, column: 13, scope: !1389)
!10708 = !DILocation(line: 1658, column: 28, scope: !1384)
!10709 = !DILocation(line: 1658, column: 16, scope: !1384)
!10710 = !DILocation(line: 1658, column: 9, scope: !1384)
!10711 = !DILocation(line: 1659, column: 5, scope: !1385)
!10712 = !DILocation(line: 1661, column: 26, scope: !1393)
!10713 = !DILocation(line: 1661, column: 35, scope: !1393)
!10714 = !DILocation(line: 1661, column: 46, scope: !1393)
!10715 = !DILocation(line: 1661, column: 55, scope: !1393)
!10716 = !DILocation(line: 1661, column: 72, scope: !1393)
!10717 = !DILocation(line: 1661, column: 9, scope: !1360)
!10718 = !DILocation(line: 1662, column: 9, scope: !1392)
!10719 = !DILocation(line: 1662, column: 23, scope: !1392)
!10720 = !DILocation(line: 1663, column: 9, scope: !1392)
!10721 = !DILocation(line: 1663, column: 27, scope: !1392)
!10722 = !DILocation(line: 1663, column: 32, scope: !1392)
!10723 = !DILocation(line: 1665, column: 16, scope: !1392)
!10724 = !DILocation(line: 1665, column: 14, scope: !1392)
!10725 = !DILocation(line: 1666, column: 13, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !1392, file: !368, line: 1666, column: 13)
!10727 = !DILocation(line: 1666, column: 18, scope: !10726)
!10728 = !DILocation(line: 1666, column: 13, scope: !1392)
!10729 = !DILocation(line: 1667, column: 13, scope: !10726)
!10730 = !DILocation(line: 1668, column: 9, scope: !1392)
!10731 = !DILocation(line: 1668, column: 15, scope: !1392)
!10732 = !DILocation(line: 1668, column: 25, scope: !1392)
!10733 = !DILocation(line: 1669, column: 9, scope: !1392)
!10734 = !DILocation(line: 1669, column: 15, scope: !1392)
!10735 = !DILocation(line: 1669, column: 19, scope: !1392)
!10736 = !DILocation(line: 1670, column: 21, scope: !1392)
!10737 = !DILocation(line: 1670, column: 25, scope: !1392)
!10738 = !DILocation(line: 1670, column: 34, scope: !1392)
!10739 = !DILocation(line: 1670, column: 40, scope: !1392)
!10740 = !DILocation(line: 1670, column: 33, scope: !1392)
!10741 = !DILocation(line: 1670, column: 47, scope: !1392)
!10742 = !DILocation(line: 1670, column: 9, scope: !1392)
!10743 = !DILocation(line: 1670, column: 15, scope: !1392)
!10744 = !DILocation(line: 1670, column: 19, scope: !1392)
!10745 = !DILocation(line: 1671, column: 13, scope: !1398)
!10746 = !DILocation(line: 1671, column: 19, scope: !1398)
!10747 = !DILocation(line: 1671, column: 23, scope: !1398)
!10748 = !DILocation(line: 1671, column: 13, scope: !1392)
!10749 = !DILocation(line: 1672, column: 13, scope: !1397)
!10750 = !DILocation(line: 1672, column: 18, scope: !10751)
!10751 = !DILexicalBlockFile(scope: !1396, file: !368, discriminator: 1)
!10752 = !DILocation(line: 1672, column: 28, scope: !1396)
!10753 = !DILocation(line: 1672, column: 58, scope: !1396)
!10754 = !DILocation(line: 1672, column: 45, scope: !1396)
!10755 = !DILocation(line: 1672, column: 73, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !1396, file: !368, line: 1672, column: 70)
!10757 = !DILocation(line: 1672, column: 90, scope: !10756)
!10758 = !DILocation(line: 1672, column: 70, scope: !10756)
!10759 = !DILocation(line: 1672, column: 100, scope: !10756)
!10760 = !DILocation(line: 1672, column: 70, scope: !1396)
!10761 = !DILocation(line: 1672, column: 70, scope: !10762)
!10762 = !DILexicalBlockFile(scope: !1396, file: !368, discriminator: 2)
!10763 = !DILocation(line: 1672, column: 131, scope: !10764)
!10764 = !DILexicalBlockFile(scope: !10756, file: !368, discriminator: 3)
!10765 = !DILocation(line: 1672, column: 149, scope: !10756)
!10766 = !DILocation(line: 1672, column: 159, scope: !10756)
!10767 = !DILocation(line: 1672, column: 184, scope: !10756)
!10768 = !DILocation(line: 1672, column: 115, scope: !10756)
!10769 = !DILocation(line: 1672, column: 203, scope: !10770)
!10770 = !DILexicalBlockFile(scope: !1397, file: !368, discriminator: 4)
!10771 = !DILocation(line: 1672, column: 203, scope: !1396)
!10772 = !DILocation(line: 1672, column: 203, scope: !10773)
!10773 = !DILexicalBlockFile(scope: !1396, file: !368, discriminator: 5)
!10774 = !DILocation(line: 1673, column: 13, scope: !1397)
!10775 = !DILocation(line: 1675, column: 28, scope: !1392)
!10776 = !DILocation(line: 1675, column: 16, scope: !1392)
!10777 = !DILocation(line: 1675, column: 9, scope: !1392)
!10778 = !DILocation(line: 1676, column: 5, scope: !1393)
!10779 = !DILocation(line: 1678, column: 31, scope: !1360)
!10780 = !DILocation(line: 1678, column: 38, scope: !1360)
!10781 = !DILocation(line: 1678, column: 11, scope: !1360)
!10782 = !DILocation(line: 1678, column: 9, scope: !1360)
!10783 = !DILocation(line: 1679, column: 9, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !1360, file: !368, line: 1679, column: 9)
!10785 = !DILocation(line: 1679, column: 13, scope: !10784)
!10786 = !DILocation(line: 1679, column: 9, scope: !1360)
!10787 = !DILocation(line: 1680, column: 9, scope: !10784)
!10788 = !DILocation(line: 1681, column: 9, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !1360, file: !368, line: 1681, column: 9)
!10790 = !DILocation(line: 1681, column: 9, scope: !1360)
!10791 = !DILocation(line: 1683, column: 25, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10789, file: !368, line: 1681, column: 14)
!10793 = !DILocation(line: 1683, column: 34, scope: !10792)
!10794 = !DILocation(line: 1683, column: 43, scope: !10792)
!10795 = !DILocation(line: 1684, column: 16, scope: !10792)
!10796 = !DILocation(line: 1684, column: 9, scope: !10792)
!10797 = !DILocation(line: 1687, column: 24, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !1360, file: !368, line: 1687, column: 9)
!10799 = !DILocation(line: 1687, column: 33, scope: !10798)
!10800 = !DILocation(line: 1687, column: 42, scope: !10798)
!10801 = !DILocation(line: 1687, column: 62, scope: !10798)
!10802 = !DILocation(line: 1687, column: 96, scope: !10803)
!10803 = !DILexicalBlockFile(scope: !10798, file: !368, discriminator: 1)
!10804 = !DILocation(line: 1687, column: 105, scope: !10798)
!10805 = !DILocation(line: 1687, column: 65, scope: !10798)
!10806 = !DILocation(line: 1687, column: 134, scope: !10798)
!10807 = !DILocation(line: 1687, column: 152, scope: !10808)
!10808 = !DILexicalBlockFile(scope: !10798, file: !368, discriminator: 2)
!10809 = !DILocation(line: 1687, column: 161, scope: !10798)
!10810 = !DILocation(line: 1687, column: 170, scope: !10798)
!10811 = !DILocation(line: 1687, column: 192, scope: !10798)
!10812 = !DILocation(line: 1687, column: 226, scope: !10813)
!10813 = !DILexicalBlockFile(scope: !10798, file: !368, discriminator: 3)
!10814 = !DILocation(line: 1687, column: 235, scope: !10798)
!10815 = !DILocation(line: 1687, column: 195, scope: !10798)
!10816 = !DILocation(line: 1687, column: 9, scope: !1360)
!10817 = !DILocation(line: 1689, column: 25, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10798, file: !368, line: 1687, column: 267)
!10819 = !DILocation(line: 1689, column: 34, scope: !10818)
!10820 = !DILocation(line: 1689, column: 43, scope: !10818)
!10821 = !DILocation(line: 1690, column: 16, scope: !10818)
!10822 = !DILocation(line: 1690, column: 9, scope: !10818)
!10823 = !DILocation(line: 1693, column: 11, scope: !1401)
!10824 = !DILocation(line: 1693, column: 19, scope: !1401)
!10825 = !DILocation(line: 1693, column: 27, scope: !1401)
!10826 = !DILocation(line: 1693, column: 9, scope: !1360)
!10827 = !DILocation(line: 1695, column: 9, scope: !1400)
!10828 = !DILocation(line: 1695, column: 23, scope: !1400)
!10829 = !DILocation(line: 1695, column: 43, scope: !1400)
!10830 = !DILocation(line: 1695, column: 27, scope: !1400)
!10831 = !DILocation(line: 1696, column: 13, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !1400, file: !368, line: 1696, column: 13)
!10833 = !DILocation(line: 1696, column: 16, scope: !10832)
!10834 = !DILocation(line: 1696, column: 20, scope: !10832)
!10835 = !DILocation(line: 1696, column: 13, scope: !1400)
!10836 = !DILocation(line: 1697, column: 29, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10832, file: !368, line: 1696, column: 28)
!10838 = !DILocation(line: 1697, column: 38, scope: !10837)
!10839 = !DILocation(line: 1697, column: 47, scope: !10837)
!10840 = !DILocation(line: 1698, column: 20, scope: !10837)
!10841 = !DILocation(line: 1698, column: 13, scope: !10837)
!10842 = !DILocation(line: 1700, column: 5, scope: !1401)
!10843 = !DILocation(line: 1700, column: 5, scope: !10844)
!10844 = !DILexicalBlockFile(scope: !1401, file: !368, discriminator: 1)
!10845 = !DILocation(line: 1700, column: 5, scope: !1400)
!10846 = !DILocation(line: 1702, column: 24, scope: !1404)
!10847 = !DILocation(line: 1702, column: 33, scope: !1404)
!10848 = !DILocation(line: 1702, column: 42, scope: !1404)
!10849 = !DILocation(line: 1702, column: 64, scope: !1404)
!10850 = !DILocation(line: 1702, column: 98, scope: !10851)
!10851 = !DILexicalBlockFile(scope: !1404, file: !368, discriminator: 1)
!10852 = !DILocation(line: 1702, column: 107, scope: !1404)
!10853 = !DILocation(line: 1702, column: 67, scope: !1404)
!10854 = !DILocation(line: 1702, column: 9, scope: !1360)
!10855 = !DILocation(line: 1703, column: 9, scope: !1403)
!10856 = !DILocation(line: 1703, column: 23, scope: !1403)
!10857 = !DILocation(line: 1704, column: 9, scope: !1403)
!10858 = !DILocation(line: 1704, column: 27, scope: !1403)
!10859 = !DILocation(line: 1705, column: 36, scope: !1403)
!10860 = !DILocation(line: 1705, column: 16, scope: !1403)
!10861 = !DILocation(line: 1705, column: 14, scope: !1403)
!10862 = !DILocation(line: 1706, column: 16, scope: !1403)
!10863 = !DILocation(line: 1706, column: 14, scope: !1403)
!10864 = !DILocation(line: 1707, column: 13, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !1403, file: !368, line: 1707, column: 13)
!10866 = !DILocation(line: 1707, column: 18, scope: !10865)
!10867 = !DILocation(line: 1707, column: 13, scope: !1403)
!10868 = !DILocation(line: 1708, column: 13, scope: !10865)
!10869 = !DILocation(line: 1709, column: 9, scope: !1403)
!10870 = !DILocation(line: 1709, column: 15, scope: !1403)
!10871 = !DILocation(line: 1709, column: 25, scope: !1403)
!10872 = !DILocation(line: 1710, column: 9, scope: !1403)
!10873 = !DILocation(line: 1710, column: 15, scope: !1403)
!10874 = !DILocation(line: 1710, column: 19, scope: !1403)
!10875 = !DILocation(line: 1711, column: 25, scope: !1403)
!10876 = !DILocation(line: 1711, column: 34, scope: !1403)
!10877 = !DILocation(line: 1711, column: 43, scope: !1403)
!10878 = !DILocation(line: 1712, column: 35, scope: !1403)
!10879 = !DILocation(line: 1712, column: 41, scope: !1403)
!10880 = !DILocation(line: 1712, column: 26, scope: !1403)
!10881 = !DILocation(line: 1712, column: 25, scope: !1403)
!10882 = !DILocation(line: 1712, column: 9, scope: !1403)
!10883 = !DILocation(line: 1712, column: 15, scope: !1403)
!10884 = !DILocation(line: 1712, column: 21, scope: !1403)
!10885 = !DILocation(line: 1712, column: 23, scope: !1403)
!10886 = !DILocation(line: 1713, column: 21, scope: !1403)
!10887 = !DILocation(line: 1713, column: 9, scope: !1403)
!10888 = !DILocation(line: 1713, column: 15, scope: !1403)
!10889 = !DILocation(line: 1713, column: 19, scope: !1403)
!10890 = !DILocation(line: 1714, column: 28, scope: !1403)
!10891 = !DILocation(line: 1714, column: 16, scope: !1403)
!10892 = !DILocation(line: 1714, column: 9, scope: !1403)
!10893 = !DILocation(line: 1715, column: 5, scope: !1404)
!10894 = !DILocation(line: 1717, column: 29, scope: !1360)
!10895 = !DILocation(line: 1717, column: 12, scope: !1360)
!10896 = !DILocation(line: 1717, column: 10, scope: !1360)
!10897 = !DILocation(line: 1718, column: 9, scope: !1408)
!10898 = !DILocation(line: 1718, column: 14, scope: !1408)
!10899 = !DILocation(line: 1718, column: 32, scope: !10900)
!10900 = !DILexicalBlockFile(scope: !1408, file: !368, discriminator: 1)
!10901 = !DILocation(line: 1718, column: 41, scope: !1408)
!10902 = !DILocation(line: 1718, column: 50, scope: !1408)
!10903 = !DILocation(line: 1718, column: 69, scope: !1408)
!10904 = !DILocation(line: 1718, column: 103, scope: !10905)
!10905 = !DILexicalBlockFile(scope: !1408, file: !368, discriminator: 3)
!10906 = !DILocation(line: 1718, column: 112, scope: !1408)
!10907 = !DILocation(line: 1718, column: 72, scope: !1408)
!10908 = !DILocation(line: 1718, column: 140, scope: !1408)
!10909 = !DILocation(line: 1718, column: 143, scope: !10910)
!10910 = !DILexicalBlockFile(scope: !10911, file: !368, discriminator: 4)
!10911 = !DILexicalBlockFile(scope: !1408, file: !368, discriminator: 2)
!10912 = !DILocation(line: 1718, column: 149, scope: !1408)
!10913 = !DILocation(line: 1718, column: 143, scope: !1408)
!10914 = !DILocation(line: 1718, column: 155, scope: !1408)
!10915 = !DILocation(line: 1718, column: 175, scope: !10916)
!10916 = !DILexicalBlockFile(scope: !1408, file: !368, discriminator: 5)
!10917 = !DILocation(line: 1718, column: 181, scope: !1408)
!10918 = !DILocation(line: 1718, column: 190, scope: !1408)
!10919 = !DILocation(line: 1718, column: 201, scope: !1408)
!10920 = !DILocation(line: 1718, column: 210, scope: !1408)
!10921 = !DILocation(line: 1718, column: 227, scope: !1408)
!10922 = !DILocation(line: 1718, column: 9, scope: !1360)
!10923 = !DILocation(line: 1719, column: 9, scope: !1407)
!10924 = !DILocation(line: 1719, column: 23, scope: !1407)
!10925 = !DILocation(line: 1721, column: 34, scope: !1407)
!10926 = !DILocation(line: 1721, column: 40, scope: !1407)
!10927 = !DILocation(line: 1721, column: 17, scope: !1407)
!10928 = !DILocation(line: 1724, column: 20, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !1407, file: !368, line: 1721, column: 51)
!10930 = !DILocation(line: 1724, column: 18, scope: !10929)
!10931 = !DILocation(line: 1725, column: 17, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10929, file: !368, line: 1725, column: 17)
!10933 = !DILocation(line: 1725, column: 22, scope: !10932)
!10934 = !DILocation(line: 1725, column: 17, scope: !10929)
!10935 = !DILocation(line: 1726, column: 17, scope: !10932)
!10936 = !DILocation(line: 1727, column: 13, scope: !10929)
!10937 = !DILocation(line: 1727, column: 19, scope: !10929)
!10938 = !DILocation(line: 1727, column: 29, scope: !10929)
!10939 = !DILocation(line: 1728, column: 13, scope: !10929)
!10940 = !DILocation(line: 1728, column: 19, scope: !10929)
!10941 = !DILocation(line: 1728, column: 23, scope: !10929)
!10942 = !DILocation(line: 1729, column: 29, scope: !10929)
!10943 = !DILocation(line: 1729, column: 38, scope: !10929)
!10944 = !DILocation(line: 1729, column: 47, scope: !10929)
!10945 = !DILocation(line: 1730, column: 25, scope: !10929)
!10946 = !DILocation(line: 1730, column: 13, scope: !10929)
!10947 = !DILocation(line: 1730, column: 19, scope: !10929)
!10948 = !DILocation(line: 1730, column: 23, scope: !10929)
!10949 = !DILocation(line: 1732, column: 56, scope: !10929)
!10950 = !DILocation(line: 1732, column: 41, scope: !10929)
!10951 = !DILocation(line: 1732, column: 64, scope: !10929)
!10952 = !DILocation(line: 1732, column: 30, scope: !10929)
!10953 = !DILocation(line: 1732, column: 29, scope: !10929)
!10954 = !DILocation(line: 1732, column: 13, scope: !10929)
!10955 = !DILocation(line: 1732, column: 19, scope: !10929)
!10956 = !DILocation(line: 1732, column: 25, scope: !10929)
!10957 = !DILocation(line: 1732, column: 27, scope: !10929)
!10958 = !DILocation(line: 1733, column: 32, scope: !10929)
!10959 = !DILocation(line: 1733, column: 20, scope: !10929)
!10960 = !DILocation(line: 1733, column: 13, scope: !10929)
!10961 = !DILocation(line: 1735, column: 5, scope: !1408)
!10962 = !DILocation(line: 1735, column: 5, scope: !10900)
!10963 = !DILocation(line: 1735, column: 5, scope: !1407)
!10964 = !DILocation(line: 1737, column: 43, scope: !1360)
!10965 = !DILocation(line: 1737, column: 20, scope: !1360)
!10966 = !DILocation(line: 1737, column: 18, scope: !1360)
!10967 = !DILocation(line: 1738, column: 9, scope: !1412)
!10968 = !DILocation(line: 1738, column: 9, scope: !1360)
!10969 = !DILocation(line: 1739, column: 37, scope: !1411)
!10970 = !DILocation(line: 1739, column: 43, scope: !1411)
!10971 = !DILocation(line: 1739, column: 17, scope: !1411)
!10972 = !DILocation(line: 1739, column: 15, scope: !1411)
!10973 = !DILocation(line: 1740, column: 9, scope: !1411)
!10974 = !DILocation(line: 1740, column: 14, scope: !10975)
!10975 = !DILexicalBlockFile(scope: !1410, file: !368, discriminator: 1)
!10976 = !DILocation(line: 1740, column: 24, scope: !1410)
!10977 = !DILocation(line: 1740, column: 54, scope: !1410)
!10978 = !DILocation(line: 1740, column: 77, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !1410, file: !368, line: 1740, column: 74)
!10980 = !DILocation(line: 1740, column: 94, scope: !10979)
!10981 = !DILocation(line: 1740, column: 74, scope: !10979)
!10982 = !DILocation(line: 1740, column: 104, scope: !10979)
!10983 = !DILocation(line: 1740, column: 74, scope: !1410)
!10984 = !DILocation(line: 1740, column: 74, scope: !10985)
!10985 = !DILexicalBlockFile(scope: !1410, file: !368, discriminator: 2)
!10986 = !DILocation(line: 1740, column: 135, scope: !10987)
!10987 = !DILexicalBlockFile(scope: !10979, file: !368, discriminator: 3)
!10988 = !DILocation(line: 1740, column: 153, scope: !10979)
!10989 = !DILocation(line: 1740, column: 163, scope: !10979)
!10990 = !DILocation(line: 1740, column: 188, scope: !10979)
!10991 = !DILocation(line: 1740, column: 119, scope: !10979)
!10992 = !DILocation(line: 1740, column: 207, scope: !10993)
!10993 = !DILexicalBlockFile(scope: !1411, file: !368, discriminator: 4)
!10994 = !DILocation(line: 1740, column: 207, scope: !1410)
!10995 = !DILocation(line: 1740, column: 207, scope: !10996)
!10996 = !DILexicalBlockFile(scope: !1410, file: !368, discriminator: 5)
!10997 = !DILocation(line: 1741, column: 16, scope: !1411)
!10998 = !DILocation(line: 1741, column: 9, scope: !1411)
!10999 = !DILocation(line: 1744, column: 21, scope: !1360)
!11000 = !DILocation(line: 1744, column: 5, scope: !1360)
!11001 = !DILocation(line: 1746, column: 5, scope: !1360)
!11002 = !DILocation(line: 1747, column: 1, scope: !1360)
!11003 = !DILocation(line: 2253, column: 39, scope: !1469)
!11004 = !DILocation(line: 2255, column: 5, scope: !1469)
!11005 = !DILocation(line: 2255, column: 19, scope: !1469)
!11006 = !DILocation(line: 2257, column: 12, scope: !1469)
!11007 = !DILocation(line: 2257, column: 10, scope: !1469)
!11008 = !DILocation(line: 2258, column: 9, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !1469, file: !368, line: 2258, column: 9)
!11010 = !DILocation(line: 2258, column: 14, scope: !11009)
!11011 = !DILocation(line: 2258, column: 9, scope: !1469)
!11012 = !DILocation(line: 2259, column: 9, scope: !11009)
!11013 = !DILocation(line: 2261, column: 5, scope: !1469)
!11014 = !DILocation(line: 2261, column: 11, scope: !1469)
!11015 = !DILocation(line: 2261, column: 15, scope: !1469)
!11016 = !DILocation(line: 2262, column: 5, scope: !1469)
!11017 = !DILocation(line: 2262, column: 11, scope: !1469)
!11018 = !DILocation(line: 2262, column: 21, scope: !1469)
!11019 = !DILocation(line: 2263, column: 21, scope: !1469)
!11020 = !DILocation(line: 2263, column: 8, scope: !1469)
!11021 = !DILocation(line: 2263, column: 29, scope: !1469)
!11022 = !DILocation(line: 2263, column: 38, scope: !1469)
!11023 = !DILocation(line: 2264, column: 29, scope: !1469)
!11024 = !DILocation(line: 2264, column: 17, scope: !1469)
!11025 = !DILocation(line: 2264, column: 5, scope: !1469)
!11026 = !DILocation(line: 2264, column: 11, scope: !1469)
!11027 = !DILocation(line: 2264, column: 15, scope: !1469)
!11028 = !DILocation(line: 2265, column: 31, scope: !1469)
!11029 = !DILocation(line: 2265, column: 37, scope: !1469)
!11030 = !DILocation(line: 2265, column: 22, scope: !1469)
!11031 = !DILocation(line: 2265, column: 21, scope: !1469)
!11032 = !DILocation(line: 2265, column: 5, scope: !1469)
!11033 = !DILocation(line: 2265, column: 11, scope: !1469)
!11034 = !DILocation(line: 2265, column: 17, scope: !1469)
!11035 = !DILocation(line: 2265, column: 19, scope: !1469)
!11036 = !DILocation(line: 2266, column: 12, scope: !1469)
!11037 = !DILocation(line: 2266, column: 5, scope: !1469)
!11038 = !DILocation(line: 2267, column: 1, scope: !1469)
!11039 = !DILocation(line: 2188, column: 38, scope: !1473)
!11040 = !DILocation(line: 2190, column: 5, scope: !1473)
!11041 = !DILocation(line: 2190, column: 15, scope: !1473)
!11042 = !DILocation(line: 2191, column: 5, scope: !1473)
!11043 = !DILocation(line: 2191, column: 15, scope: !1473)
!11044 = !DILocation(line: 2193, column: 22, scope: !1473)
!11045 = !DILocation(line: 2193, column: 50, scope: !1473)
!11046 = !DILocation(line: 2193, column: 61, scope: !1473)
!11047 = !DILocation(line: 2193, column: 5, scope: !1473)
!11048 = !DILocation(line: 2193, column: 14, scope: !1473)
!11049 = !DILocation(line: 2193, column: 20, scope: !1473)
!11050 = !DILocation(line: 2194, column: 5, scope: !1473)
!11051 = !DILocation(line: 2194, column: 14, scope: !1473)
!11052 = !DILocation(line: 2194, column: 21, scope: !1473)
!11053 = !DILocation(line: 2195, column: 5, scope: !1473)
!11054 = !DILocation(line: 2195, column: 14, scope: !1473)
!11055 = !DILocation(line: 2195, column: 19, scope: !1473)
!11056 = !DILocation(line: 2196, column: 5, scope: !1473)
!11057 = !DILocation(line: 2196, column: 14, scope: !1473)
!11058 = !DILocation(line: 2196, column: 22, scope: !1473)
!11059 = !DILocation(line: 2197, column: 5, scope: !1473)
!11060 = !DILocation(line: 2197, column: 14, scope: !1473)
!11061 = !DILocation(line: 2197, column: 22, scope: !1473)
!11062 = !DILocation(line: 2198, column: 5, scope: !1473)
!11063 = !DILocation(line: 2198, column: 14, scope: !1473)
!11064 = !DILocation(line: 2198, column: 33, scope: !1473)
!11065 = !DILocation(line: 2200, column: 43, scope: !1473)
!11066 = !DILocation(line: 2200, column: 31, scope: !1473)
!11067 = !DILocation(line: 2200, column: 10, scope: !1473)
!11068 = !DILocation(line: 2200, column: 8, scope: !1473)
!11069 = !DILocation(line: 2201, column: 10, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !1473, file: !368, line: 2201, column: 9)
!11071 = !DILocation(line: 2201, column: 13, scope: !11070)
!11072 = !DILocation(line: 2201, column: 34, scope: !11073)
!11073 = !DILexicalBlockFile(scope: !11070, file: !368, discriminator: 1)
!11074 = !DILocation(line: 2201, column: 40, scope: !11070)
!11075 = !DILocation(line: 2201, column: 51, scope: !11070)
!11076 = !DILocation(line: 2201, column: 60, scope: !11070)
!11077 = !DILocation(line: 2201, column: 77, scope: !11070)
!11078 = !DILocation(line: 2201, column: 9, scope: !1473)
!11079 = !DILocation(line: 2202, column: 25, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11070, file: !368, line: 2201, column: 84)
!11081 = !DILocation(line: 2202, column: 9, scope: !11080)
!11082 = !DILocation(line: 2204, column: 9, scope: !11080)
!11083 = !DILocation(line: 2206, column: 36, scope: !1473)
!11084 = !DILocation(line: 2206, column: 22, scope: !1473)
!11085 = !DILocation(line: 2206, column: 40, scope: !1473)
!11086 = !DILocation(line: 2206, column: 5, scope: !1473)
!11087 = !DILocation(line: 2206, column: 14, scope: !1473)
!11088 = !DILocation(line: 2206, column: 20, scope: !1473)
!11089 = !DILocation(line: 2209, column: 43, scope: !1473)
!11090 = !DILocation(line: 2209, column: 31, scope: !1473)
!11091 = !DILocation(line: 2209, column: 10, scope: !1473)
!11092 = !DILocation(line: 2209, column: 8, scope: !1473)
!11093 = !DILocation(line: 2210, column: 9, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !1473, file: !368, line: 2210, column: 9)
!11095 = !DILocation(line: 2210, column: 9, scope: !1473)
!11096 = !DILocation(line: 2211, column: 47, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11094, file: !368, line: 2210, column: 13)
!11098 = !DILocation(line: 2211, column: 22, scope: !11097)
!11099 = !DILocation(line: 2211, column: 20, scope: !11097)
!11100 = !DILocation(line: 2212, column: 14, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11097, file: !368, line: 2212, column: 13)
!11102 = !DILocation(line: 2212, column: 13, scope: !11097)
!11103 = !DILocation(line: 2213, column: 13, scope: !11101)
!11104 = !DILocation(line: 2214, column: 25, scope: !11097)
!11105 = !DILocation(line: 2214, column: 31, scope: !11097)
!11106 = !DILocation(line: 2214, column: 40, scope: !11097)
!11107 = !DILocation(line: 2215, column: 29, scope: !11097)
!11108 = !DILocation(line: 2215, column: 9, scope: !11097)
!11109 = !DILocation(line: 2215, column: 18, scope: !11097)
!11110 = !DILocation(line: 2215, column: 27, scope: !11097)
!11111 = !DILocation(line: 2216, column: 31, scope: !11097)
!11112 = !DILocation(line: 2216, column: 9, scope: !11097)
!11113 = !DILocation(line: 2216, column: 18, scope: !11097)
!11114 = !DILocation(line: 2216, column: 29, scope: !11097)
!11115 = !DILocation(line: 2217, column: 5, scope: !11097)
!11116 = !DILocation(line: 2219, column: 43, scope: !1473)
!11117 = !DILocation(line: 2219, column: 31, scope: !1473)
!11118 = !DILocation(line: 2219, column: 10, scope: !1473)
!11119 = !DILocation(line: 2219, column: 8, scope: !1473)
!11120 = !DILocation(line: 2220, column: 9, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !1473, file: !368, line: 2220, column: 9)
!11122 = !DILocation(line: 2220, column: 9, scope: !1473)
!11123 = !DILocation(line: 2221, column: 13, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11125, file: !368, line: 2221, column: 13)
!11125 = distinct !DILexicalBlock(scope: !11121, file: !368, line: 2220, column: 13)
!11126 = !DILocation(line: 2221, column: 16, scope: !11124)
!11127 = !DILocation(line: 2221, column: 37, scope: !11124)
!11128 = !DILocation(line: 2221, column: 56, scope: !11129)
!11129 = !DILexicalBlockFile(scope: !11124, file: !368, discriminator: 1)
!11130 = !DILocation(line: 2221, column: 41, scope: !11124)
!11131 = !DILocation(line: 2221, column: 60, scope: !11124)
!11132 = !DILocation(line: 2221, column: 81, scope: !11133)
!11133 = !DILexicalBlockFile(scope: !11124, file: !368, discriminator: 2)
!11134 = !DILocation(line: 2221, column: 64, scope: !11124)
!11135 = !DILocation(line: 2221, column: 13, scope: !11125)
!11136 = !DILocation(line: 2222, column: 29, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11124, file: !368, line: 2221, column: 86)
!11138 = !DILocation(line: 2222, column: 13, scope: !11137)
!11139 = !DILocation(line: 2224, column: 13, scope: !11137)
!11140 = !DILocation(line: 2226, column: 25, scope: !11125)
!11141 = !DILocation(line: 2226, column: 31, scope: !11125)
!11142 = !DILocation(line: 2226, column: 40, scope: !11125)
!11143 = !DILocation(line: 2227, column: 28, scope: !11125)
!11144 = !DILocation(line: 2227, column: 9, scope: !11125)
!11145 = !DILocation(line: 2227, column: 18, scope: !11125)
!11146 = !DILocation(line: 2227, column: 26, scope: !11125)
!11147 = !DILocation(line: 2228, column: 51, scope: !11125)
!11148 = !DILocation(line: 2228, column: 28, scope: !11125)
!11149 = !DILocation(line: 2228, column: 9, scope: !11125)
!11150 = !DILocation(line: 2228, column: 18, scope: !11125)
!11151 = !DILocation(line: 2228, column: 26, scope: !11125)
!11152 = !DILocation(line: 2229, column: 13, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11125, file: !368, line: 2229, column: 13)
!11154 = !DILocation(line: 2229, column: 22, scope: !11153)
!11155 = !DILocation(line: 2229, column: 30, scope: !11153)
!11156 = !DILocation(line: 2229, column: 13, scope: !11125)
!11157 = !DILocation(line: 2230, column: 13, scope: !11153)
!11158 = !DILocation(line: 2231, column: 5, scope: !11125)
!11159 = !DILocation(line: 2244, column: 5, scope: !1473)
!11160 = !DILocation(line: 2247, column: 5, scope: !1473)
!11161 = !DILocation(line: 2247, column: 10, scope: !11162)
!11162 = !DILexicalBlockFile(scope: !1481, file: !368, discriminator: 1)
!11163 = !DILocation(line: 2247, column: 20, scope: !1481)
!11164 = !DILocation(line: 2247, column: 51, scope: !1481)
!11165 = !DILocation(line: 2247, column: 68, scope: !1484)
!11166 = !DILocation(line: 2247, column: 84, scope: !1484)
!11167 = !DILocation(line: 2247, column: 68, scope: !1481)
!11168 = !DILocation(line: 2247, column: 99, scope: !11169)
!11169 = !DILexicalBlockFile(scope: !1484, file: !368, discriminator: 2)
!11170 = !DILocation(line: 2247, column: 104, scope: !11171)
!11171 = !DILexicalBlockFile(scope: !1483, file: !368, discriminator: 4)
!11172 = !DILocation(line: 2247, column: 114, scope: !1483)
!11173 = !DILocation(line: 2247, column: 144, scope: !1483)
!11174 = !DILocation(line: 2247, column: 170, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !1483, file: !368, line: 2247, column: 167)
!11176 = !DILocation(line: 2247, column: 187, scope: !11175)
!11177 = !DILocation(line: 2247, column: 167, scope: !11175)
!11178 = !DILocation(line: 2247, column: 197, scope: !11175)
!11179 = !DILocation(line: 2247, column: 167, scope: !1483)
!11180 = !DILocation(line: 2247, column: 167, scope: !11181)
!11181 = !DILexicalBlockFile(scope: !1483, file: !368, discriminator: 5)
!11182 = !DILocation(line: 2247, column: 228, scope: !11183)
!11183 = !DILexicalBlockFile(scope: !11175, file: !368, discriminator: 6)
!11184 = !DILocation(line: 2247, column: 246, scope: !11175)
!11185 = !DILocation(line: 2247, column: 256, scope: !11175)
!11186 = !DILocation(line: 2247, column: 281, scope: !11175)
!11187 = !DILocation(line: 2247, column: 212, scope: !11175)
!11188 = !DILocation(line: 2247, column: 300, scope: !11189)
!11189 = !DILexicalBlockFile(scope: !1484, file: !368, discriminator: 7)
!11190 = !DILocation(line: 2247, column: 300, scope: !1483)
!11191 = !DILocation(line: 2247, column: 300, scope: !11192)
!11192 = !DILexicalBlockFile(scope: !1483, file: !368, discriminator: 8)
!11193 = !DILocation(line: 2247, column: 300, scope: !11194)
!11194 = !DILexicalBlockFile(scope: !1483, file: !368, discriminator: 9)
!11195 = !DILocation(line: 2247, column: 313, scope: !11196)
!11196 = !DILexicalBlockFile(scope: !11197, file: !368, discriminator: 10)
!11197 = !DILexicalBlockFile(scope: !1473, file: !368, discriminator: 3)
!11198 = !DILocation(line: 2247, column: 313, scope: !1481)
!11199 = !DILocation(line: 2247, column: 313, scope: !11200)
!11200 = !DILexicalBlockFile(scope: !1481, file: !368, discriminator: 11)
!11201 = !DILocation(line: 2248, column: 5, scope: !1473)
!11202 = !DILocation(line: 2250, column: 1, scope: !1473)
!11203 = !DILocation(line: 2145, column: 36, scope: !1485)
!11204 = !DILocation(line: 2147, column: 5, scope: !1485)
!11205 = !DILocation(line: 2147, column: 15, scope: !1485)
!11206 = !DILocation(line: 2148, column: 5, scope: !1485)
!11207 = !DILocation(line: 2148, column: 16, scope: !1485)
!11208 = !DILocation(line: 2149, column: 5, scope: !1485)
!11209 = !DILocation(line: 2149, column: 16, scope: !1485)
!11210 = !DILocation(line: 2151, column: 27, scope: !1485)
!11211 = !DILocation(line: 2151, column: 10, scope: !1485)
!11212 = !DILocation(line: 2151, column: 8, scope: !1485)
!11213 = !DILocation(line: 2152, column: 10, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !1485, file: !368, line: 2152, column: 9)
!11215 = !DILocation(line: 2152, column: 9, scope: !1485)
!11216 = !DILocation(line: 2153, column: 25, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11214, file: !368, line: 2152, column: 14)
!11218 = !DILocation(line: 2153, column: 9, scope: !11217)
!11219 = !DILocation(line: 2155, column: 9, scope: !11217)
!11220 = !DILocation(line: 2158, column: 30, scope: !1485)
!11221 = !DILocation(line: 2158, column: 15, scope: !1485)
!11222 = !DILocation(line: 2158, column: 36, scope: !1485)
!11223 = !DILocation(line: 2158, column: 11, scope: !1485)
!11224 = !DILocation(line: 2159, column: 30, scope: !1485)
!11225 = !DILocation(line: 2159, column: 18, scope: !1485)
!11226 = !DILocation(line: 2159, column: 16, scope: !1485)
!11227 = !DILocation(line: 2160, column: 10, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !1485, file: !368, line: 2160, column: 9)
!11229 = !DILocation(line: 2160, column: 9, scope: !1485)
!11230 = !DILocation(line: 2161, column: 9, scope: !11228)
!11231 = !DILocation(line: 2168, column: 12, scope: !1494)
!11232 = !DILocation(line: 2168, column: 10, scope: !1494)
!11233 = !DILocation(line: 2168, column: 17, scope: !11234)
!11234 = !DILexicalBlockFile(scope: !11235, file: !368, discriminator: 2)
!11235 = !DILexicalBlockFile(scope: !1493, file: !368, discriminator: 1)
!11236 = !DILocation(line: 2168, column: 21, scope: !1493)
!11237 = !DILocation(line: 2168, column: 19, scope: !1493)
!11238 = !DILocation(line: 2168, column: 5, scope: !1494)
!11239 = !DILocation(line: 2169, column: 9, scope: !1492)
!11240 = !DILocation(line: 2169, column: 19, scope: !1492)
!11241 = !DILocation(line: 2169, column: 58, scope: !1492)
!11242 = !DILocation(line: 2169, column: 44, scope: !1492)
!11243 = !DILocation(line: 2169, column: 26, scope: !1492)
!11244 = !DILocation(line: 2169, column: 50, scope: !1492)
!11245 = !DILocation(line: 2169, column: 25, scope: !1492)
!11246 = !DILocation(line: 2170, column: 9, scope: !1492)
!11247 = !DILocation(line: 2170, column: 19, scope: !1492)
!11248 = !DILocation(line: 2170, column: 48, scope: !1492)
!11249 = !DILocation(line: 2170, column: 25, scope: !1492)
!11250 = !DILocation(line: 2171, column: 14, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !1492, file: !368, line: 2171, column: 13)
!11252 = !DILocation(line: 2171, column: 13, scope: !1492)
!11253 = !DILocation(line: 2172, column: 13, scope: !11251)
!11254 = !DILocation(line: 2173, column: 56, scope: !1492)
!11255 = !DILocation(line: 2173, column: 51, scope: !1492)
!11256 = !DILocation(line: 2173, column: 29, scope: !1492)
!11257 = !DILocation(line: 2173, column: 11, scope: !1492)
!11258 = !DILocation(line: 2173, column: 43, scope: !1492)
!11259 = !DILocation(line: 2173, column: 10, scope: !1492)
!11260 = !DILocation(line: 2173, column: 54, scope: !1492)
!11261 = !DILocation(line: 2174, column: 5, scope: !1493)
!11262 = !DILocation(line: 2174, column: 5, scope: !11235)
!11263 = !DILocation(line: 2174, column: 5, scope: !1492)
!11264 = !DILocation(line: 2168, column: 28, scope: !1493)
!11265 = !DILocation(line: 2168, column: 5, scope: !1493)
!11266 = !DILocation(line: 2175, column: 5, scope: !1485)
!11267 = !DILocation(line: 2175, column: 10, scope: !11268)
!11268 = !DILexicalBlockFile(scope: !1497, file: !368, discriminator: 1)
!11269 = !DILocation(line: 2175, column: 20, scope: !1497)
!11270 = !DILocation(line: 2175, column: 50, scope: !1497)
!11271 = !DILocation(line: 2175, column: 63, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !1497, file: !368, line: 2175, column: 60)
!11273 = !DILocation(line: 2175, column: 80, scope: !11272)
!11274 = !DILocation(line: 2175, column: 60, scope: !11272)
!11275 = !DILocation(line: 2175, column: 90, scope: !11272)
!11276 = !DILocation(line: 2175, column: 60, scope: !1497)
!11277 = !DILocation(line: 2175, column: 60, scope: !11278)
!11278 = !DILexicalBlockFile(scope: !1497, file: !368, discriminator: 2)
!11279 = !DILocation(line: 2175, column: 121, scope: !11280)
!11280 = !DILexicalBlockFile(scope: !11272, file: !368, discriminator: 3)
!11281 = !DILocation(line: 2175, column: 139, scope: !11272)
!11282 = !DILocation(line: 2175, column: 149, scope: !11272)
!11283 = !DILocation(line: 2175, column: 174, scope: !11272)
!11284 = !DILocation(line: 2175, column: 105, scope: !11272)
!11285 = !DILocation(line: 2175, column: 193, scope: !11286)
!11286 = !DILexicalBlockFile(scope: !1485, file: !368, discriminator: 4)
!11287 = !DILocation(line: 2175, column: 193, scope: !1497)
!11288 = !DILocation(line: 2175, column: 193, scope: !11289)
!11289 = !DILexicalBlockFile(scope: !1497, file: !368, discriminator: 5)
!11290 = !DILocation(line: 2176, column: 12, scope: !1485)
!11291 = !DILocation(line: 2176, column: 5, scope: !1485)
!11292 = !DILocation(line: 2179, column: 5, scope: !1485)
!11293 = !DILocation(line: 2179, column: 10, scope: !11294)
!11294 = !DILexicalBlockFile(scope: !1499, file: !368, discriminator: 1)
!11295 = !DILocation(line: 2179, column: 20, scope: !1499)
!11296 = !DILocation(line: 2179, column: 51, scope: !1499)
!11297 = !DILocation(line: 2179, column: 68, scope: !1502)
!11298 = !DILocation(line: 2179, column: 84, scope: !1502)
!11299 = !DILocation(line: 2179, column: 68, scope: !1499)
!11300 = !DILocation(line: 2179, column: 99, scope: !11301)
!11301 = !DILexicalBlockFile(scope: !1502, file: !368, discriminator: 2)
!11302 = !DILocation(line: 2179, column: 104, scope: !11303)
!11303 = !DILexicalBlockFile(scope: !1501, file: !368, discriminator: 4)
!11304 = !DILocation(line: 2179, column: 114, scope: !1501)
!11305 = !DILocation(line: 2179, column: 144, scope: !1501)
!11306 = !DILocation(line: 2179, column: 170, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !1501, file: !368, line: 2179, column: 167)
!11308 = !DILocation(line: 2179, column: 187, scope: !11307)
!11309 = !DILocation(line: 2179, column: 167, scope: !11307)
!11310 = !DILocation(line: 2179, column: 197, scope: !11307)
!11311 = !DILocation(line: 2179, column: 167, scope: !1501)
!11312 = !DILocation(line: 2179, column: 167, scope: !11313)
!11313 = !DILexicalBlockFile(scope: !1501, file: !368, discriminator: 5)
!11314 = !DILocation(line: 2179, column: 228, scope: !11315)
!11315 = !DILexicalBlockFile(scope: !11307, file: !368, discriminator: 6)
!11316 = !DILocation(line: 2179, column: 246, scope: !11307)
!11317 = !DILocation(line: 2179, column: 256, scope: !11307)
!11318 = !DILocation(line: 2179, column: 281, scope: !11307)
!11319 = !DILocation(line: 2179, column: 212, scope: !11307)
!11320 = !DILocation(line: 2179, column: 300, scope: !11321)
!11321 = !DILexicalBlockFile(scope: !1502, file: !368, discriminator: 7)
!11322 = !DILocation(line: 2179, column: 300, scope: !1501)
!11323 = !DILocation(line: 2179, column: 300, scope: !11324)
!11324 = !DILexicalBlockFile(scope: !1501, file: !368, discriminator: 8)
!11325 = !DILocation(line: 2179, column: 300, scope: !11326)
!11326 = !DILexicalBlockFile(scope: !1501, file: !368, discriminator: 9)
!11327 = !DILocation(line: 2179, column: 313, scope: !11328)
!11328 = !DILexicalBlockFile(scope: !11329, file: !368, discriminator: 10)
!11329 = !DILexicalBlockFile(scope: !1485, file: !368, discriminator: 3)
!11330 = !DILocation(line: 2179, column: 313, scope: !1499)
!11331 = !DILocation(line: 2179, column: 313, scope: !11332)
!11332 = !DILexicalBlockFile(scope: !1499, file: !368, discriminator: 11)
!11333 = !DILocation(line: 2180, column: 5, scope: !1485)
!11334 = !DILocation(line: 2180, column: 10, scope: !11335)
!11335 = !DILexicalBlockFile(scope: !1504, file: !368, discriminator: 1)
!11336 = !DILocation(line: 2180, column: 20, scope: !1504)
!11337 = !DILocation(line: 2180, column: 50, scope: !1504)
!11338 = !DILocation(line: 2180, column: 63, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !1504, file: !368, line: 2180, column: 60)
!11340 = !DILocation(line: 2180, column: 80, scope: !11339)
!11341 = !DILocation(line: 2180, column: 60, scope: !11339)
!11342 = !DILocation(line: 2180, column: 90, scope: !11339)
!11343 = !DILocation(line: 2180, column: 60, scope: !1504)
!11344 = !DILocation(line: 2180, column: 60, scope: !11345)
!11345 = !DILexicalBlockFile(scope: !1504, file: !368, discriminator: 2)
!11346 = !DILocation(line: 2180, column: 121, scope: !11347)
!11347 = !DILexicalBlockFile(scope: !11339, file: !368, discriminator: 3)
!11348 = !DILocation(line: 2180, column: 139, scope: !11339)
!11349 = !DILocation(line: 2180, column: 149, scope: !11339)
!11350 = !DILocation(line: 2180, column: 174, scope: !11339)
!11351 = !DILocation(line: 2180, column: 105, scope: !11339)
!11352 = !DILocation(line: 2180, column: 193, scope: !11286)
!11353 = !DILocation(line: 2180, column: 193, scope: !1504)
!11354 = !DILocation(line: 2180, column: 193, scope: !11355)
!11355 = !DILexicalBlockFile(scope: !1504, file: !368, discriminator: 5)
!11356 = !DILocation(line: 2181, column: 18, scope: !1485)
!11357 = !DILocation(line: 2183, column: 18, scope: !1485)
!11358 = !DILocation(line: 2183, column: 19, scope: !1485)
!11359 = !DILocation(line: 2181, column: 5, scope: !1485)
!11360 = !DILocation(line: 2184, column: 5, scope: !1485)
!11361 = !DILocation(line: 2185, column: 1, scope: !1485)
!11362 = !DILocation(line: 2512, column: 43, scope: !1511)
!11363 = !DILocation(line: 2512, column: 62, scope: !1511)
!11364 = !DILocation(line: 2512, column: 72, scope: !1511)
!11365 = !DILocation(line: 2514, column: 5, scope: !1511)
!11366 = !DILocation(line: 2514, column: 18, scope: !1511)
!11367 = !DILocation(line: 2514, column: 40, scope: !1511)
!11368 = !DILocation(line: 2514, column: 25, scope: !1511)
!11369 = !DILocation(line: 2515, column: 5, scope: !1511)
!11370 = !DILocation(line: 2515, column: 20, scope: !1511)
!11371 = !DILocation(line: 2515, column: 44, scope: !1511)
!11372 = !DILocation(line: 2515, column: 27, scope: !1511)
!11373 = !DILocation(line: 2516, column: 5, scope: !1511)
!11374 = !DILocation(line: 2516, column: 16, scope: !1511)
!11375 = !DILocation(line: 2518, column: 9, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !1511, file: !368, line: 2518, column: 9)
!11377 = !DILocation(line: 2518, column: 14, scope: !11376)
!11378 = !DILocation(line: 2518, column: 9, scope: !1511)
!11379 = !DILocation(line: 2518, column: 29, scope: !11380)
!11380 = !DILexicalBlockFile(scope: !11376, file: !368, discriminator: 1)
!11381 = !DILocation(line: 2518, column: 29, scope: !11376)
!11382 = !DILocation(line: 2520, column: 17, scope: !1511)
!11383 = !DILocation(line: 2520, column: 23, scope: !1511)
!11384 = !DILocation(line: 2520, column: 5, scope: !1511)
!11385 = !DILocation(line: 2520, column: 11, scope: !1511)
!11386 = !DILocation(line: 2520, column: 15, scope: !1511)
!11387 = !DILocation(line: 2521, column: 17, scope: !1511)
!11388 = !DILocation(line: 2521, column: 5, scope: !1511)
!11389 = !DILocation(line: 2521, column: 11, scope: !1511)
!11390 = !DILocation(line: 2521, column: 15, scope: !1511)
!11391 = !{!9038, !2523, i64 8}
!11392 = !DILocation(line: 2522, column: 21, scope: !1511)
!11393 = !DILocation(line: 2522, column: 31, scope: !1511)
!11394 = !DILocation(line: 2522, column: 40, scope: !1511)
!11395 = !DILocation(line: 2523, column: 17, scope: !1511)
!11396 = !DILocation(line: 2523, column: 23, scope: !1511)
!11397 = !DILocation(line: 2523, column: 5, scope: !1511)
!11398 = !DILocation(line: 2523, column: 11, scope: !1511)
!11399 = !DILocation(line: 2523, column: 15, scope: !1511)
!11400 = !DILocation(line: 2524, column: 5, scope: !1511)
!11401 = !DILocation(line: 2524, column: 11, scope: !1511)
!11402 = !DILocation(line: 2524, column: 20, scope: !1511)
!11403 = !{!9038, !2593, i64 32}
!11404 = !DILocation(line: 2526, column: 20, scope: !1511)
!11405 = !DILocation(line: 2526, column: 26, scope: !1511)
!11406 = !DILocation(line: 2526, column: 35, scope: !11407)
!11407 = !DILexicalBlockFile(scope: !1511, file: !368, discriminator: 1)
!11408 = !DILocation(line: 2526, column: 41, scope: !1511)
!11409 = !DILocation(line: 2526, column: 20, scope: !11410)
!11410 = !DILexicalBlockFile(scope: !1511, file: !368, discriminator: 2)
!11411 = !DILocation(line: 2526, column: 5, scope: !11412)
!11412 = !DILexicalBlockFile(scope: !11413, file: !368, discriminator: 4)
!11413 = !DILexicalBlockFile(scope: !1511, file: !368, discriminator: 3)
!11414 = !DILocation(line: 2526, column: 11, scope: !1511)
!11415 = !DILocation(line: 2526, column: 18, scope: !1511)
!11416 = !{!9038, !2523, i64 40}
!11417 = !DILocation(line: 2527, column: 18, scope: !1511)
!11418 = !DILocation(line: 2527, column: 24, scope: !1511)
!11419 = !DILocation(line: 2527, column: 5, scope: !1511)
!11420 = !DILocation(line: 2527, column: 11, scope: !1511)
!11421 = !DILocation(line: 2527, column: 16, scope: !1511)
!11422 = !{!9038, !2593, i64 36}
!11423 = !DILocation(line: 2528, column: 19, scope: !1511)
!11424 = !DILocation(line: 2528, column: 25, scope: !1511)
!11425 = !DILocation(line: 2528, column: 5, scope: !1511)
!11426 = !DILocation(line: 2528, column: 11, scope: !1511)
!11427 = !DILocation(line: 2528, column: 17, scope: !1511)
!11428 = !{!9038, !2523, i64 48}
!11429 = !DILocation(line: 2529, column: 22, scope: !1511)
!11430 = !DILocation(line: 2529, column: 28, scope: !1511)
!11431 = !DILocation(line: 2529, column: 5, scope: !1511)
!11432 = !DILocation(line: 2529, column: 11, scope: !1511)
!11433 = !DILocation(line: 2529, column: 20, scope: !1511)
!11434 = !{!9038, !2553, i64 24}
!11435 = !DILocation(line: 2530, column: 9, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !1511, file: !368, line: 2530, column: 9)
!11437 = !DILocation(line: 2530, column: 15, scope: !11436)
!11438 = !DILocation(line: 2530, column: 9, scope: !1511)
!11439 = !DILocation(line: 2531, column: 16, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11441, file: !368, line: 2531, column: 9)
!11441 = distinct !DILexicalBlock(scope: !11436, file: !368, line: 2530, column: 25)
!11442 = !DILocation(line: 2531, column: 14, scope: !11440)
!11443 = !DILocation(line: 2531, column: 21, scope: !11444)
!11444 = !DILexicalBlockFile(scope: !11445, file: !368, discriminator: 2)
!11445 = !DILexicalBlockFile(scope: !11446, file: !368, discriminator: 1)
!11446 = distinct !DILexicalBlock(scope: !11440, file: !368, line: 2531, column: 9)
!11447 = !DILocation(line: 2531, column: 25, scope: !11446)
!11448 = !DILocation(line: 2531, column: 31, scope: !11446)
!11449 = !DILocation(line: 2531, column: 23, scope: !11446)
!11450 = !DILocation(line: 2531, column: 9, scope: !11440)
!11451 = !DILocation(line: 2532, column: 43, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11446, file: !368, line: 2531, column: 42)
!11453 = !DILocation(line: 2532, column: 31, scope: !11452)
!11454 = !DILocation(line: 2532, column: 37, scope: !11452)
!11455 = !DILocation(line: 2532, column: 13, scope: !11452)
!11456 = !DILocation(line: 2532, column: 19, scope: !11452)
!11457 = !DILocation(line: 2532, column: 28, scope: !11452)
!11458 = !DILocation(line: 2533, column: 9, scope: !11452)
!11459 = !DILocation(line: 2531, column: 37, scope: !11446)
!11460 = !DILocation(line: 2531, column: 9, scope: !11446)
!11461 = !DILocation(line: 2534, column: 5, scope: !11441)
!11462 = !DILocation(line: 2535, column: 5, scope: !1511)
!11463 = !DILocation(line: 2535, column: 11, scope: !1511)
!11464 = !DILocation(line: 2535, column: 19, scope: !1511)
!11465 = !{!9038, !2523, i64 56}
!11466 = !DILocation(line: 2536, column: 5, scope: !1511)
!11467 = !DILocation(line: 2536, column: 11, scope: !1511)
!11468 = !DILocation(line: 2536, column: 22, scope: !1511)
!11469 = !{!9038, !2523, i64 64}
!11470 = !DILocation(line: 2537, column: 5, scope: !1511)
!11471 = !DILocation(line: 2537, column: 11, scope: !1511)
!11472 = !DILocation(line: 2537, column: 20, scope: !1511)
!11473 = !{!9038, !2523, i64 72}
!11474 = !DILocation(line: 2538, column: 5, scope: !1511)
!11475 = !DILocation(line: 2539, column: 1, scope: !1511)
!11476 = !DILocation(line: 2599, column: 33, scope: !1551)
!11477 = !DILocation(line: 2599, column: 49, scope: !1551)
!11478 = !DILocation(line: 2601, column: 21, scope: !1551)
!11479 = !DILocation(line: 2601, column: 29, scope: !1551)
!11480 = !DILocation(line: 2601, column: 38, scope: !1551)
!11481 = !DILocation(line: 2602, column: 12, scope: !1551)
!11482 = !DILocation(line: 2602, column: 5, scope: !1551)
!11483 = !DILocation(line: 2557, column: 26, scope: !1555)
!11484 = !DILocation(line: 2557, column: 44, scope: !1555)
!11485 = !DILocation(line: 2559, column: 5, scope: !1555)
!11486 = !DILocation(line: 2559, column: 18, scope: !1555)
!11487 = !DILocation(line: 2559, column: 40, scope: !1555)
!11488 = !DILocation(line: 2559, column: 25, scope: !1555)
!11489 = !DILocation(line: 2561, column: 26, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !1555, file: !368, line: 2561, column: 9)
!11491 = !DILocation(line: 2561, column: 9, scope: !11490)
!11492 = !DILocation(line: 2561, column: 35, scope: !11490)
!11493 = !DILocation(line: 2561, column: 41, scope: !11490)
!11494 = !DILocation(line: 2561, column: 9, scope: !1555)
!11495 = !DILocation(line: 2562, column: 25, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11490, file: !368, line: 2561, column: 58)
!11497 = !DILocation(line: 2562, column: 9, scope: !11496)
!11498 = !DILocation(line: 2564, column: 9, scope: !11496)
!11499 = !DILocation(line: 2567, column: 26, scope: !1555)
!11500 = !DILocation(line: 2568, column: 40, scope: !1555)
!11501 = !DILocation(line: 2568, column: 50, scope: !1555)
!11502 = !DILocation(line: 2569, column: 49, scope: !1555)
!11503 = !DILocation(line: 2569, column: 26, scope: !1555)
!11504 = !DILocation(line: 2570, column: 52, scope: !1555)
!11505 = !DILocation(line: 2570, column: 58, scope: !1555)
!11506 = !DILocation(line: 2570, column: 65, scope: !1555)
!11507 = !DILocation(line: 2570, column: 71, scope: !1555)
!11508 = !DILocation(line: 2570, column: 26, scope: !1555)
!11509 = !DILocation(line: 2566, column: 12, scope: !1555)
!11510 = !DILocation(line: 2566, column: 5, scope: !1555)
!11511 = !DILocation(line: 2571, column: 1, scope: !1555)
!11512 = !DILocation(line: 2574, column: 28, scope: !1560)
!11513 = !DILocation(line: 2574, column: 46, scope: !1560)
!11514 = !DILocation(line: 2576, column: 5, scope: !1560)
!11515 = !DILocation(line: 2576, column: 11, scope: !1560)
!11516 = !DILocation(line: 2577, column: 5, scope: !1560)
!11517 = !DILocation(line: 2577, column: 16, scope: !1560)
!11518 = !DILocation(line: 2578, column: 5, scope: !1560)
!11519 = !DILocation(line: 2578, column: 9, scope: !1560)
!11520 = !DILocation(line: 2579, column: 5, scope: !1560)
!11521 = !DILocation(line: 2579, column: 15, scope: !1560)
!11522 = !DILocation(line: 2579, column: 22, scope: !1560)
!11523 = !DILocation(line: 2580, column: 5, scope: !1560)
!11524 = !DILocation(line: 2580, column: 18, scope: !1560)
!11525 = !DILocation(line: 2580, column: 40, scope: !1560)
!11526 = !DILocation(line: 2580, column: 25, scope: !1560)
!11527 = !DILocation(line: 2581, column: 34, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !1560, file: !368, line: 2581, column: 9)
!11529 = !DILocation(line: 2581, column: 10, scope: !11528)
!11530 = !DILocation(line: 2581, column: 9, scope: !1560)
!11531 = !DILocation(line: 2582, column: 9, scope: !11528)
!11532 = !DILocation(line: 2583, column: 9, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !1560, file: !368, line: 2583, column: 9)
!11534 = !DILocation(line: 2583, column: 15, scope: !11533)
!11535 = !DILocation(line: 2583, column: 21, scope: !11533)
!11536 = !DILocation(line: 2583, column: 13, scope: !11533)
!11537 = !DILocation(line: 2583, column: 9, scope: !1560)
!11538 = !DILocation(line: 2584, column: 15, scope: !11533)
!11539 = !DILocation(line: 2584, column: 21, scope: !11533)
!11540 = !DILocation(line: 2584, column: 13, scope: !11533)
!11541 = !DILocation(line: 2584, column: 9, scope: !11533)
!11542 = !DILocation(line: 2585, column: 13, scope: !1560)
!11543 = !DILocation(line: 2585, column: 19, scope: !1560)
!11544 = !DILocation(line: 2585, column: 26, scope: !1560)
!11545 = !DILocation(line: 2585, column: 32, scope: !1560)
!11546 = !DILocation(line: 2585, column: 5, scope: !1560)
!11547 = !DILocation(line: 2586, column: 37, scope: !1560)
!11548 = !DILocation(line: 2586, column: 14, scope: !1560)
!11549 = !DILocation(line: 2586, column: 12, scope: !1560)
!11550 = !DILocation(line: 2587, column: 25, scope: !1560)
!11551 = !DILocation(line: 2587, column: 33, scope: !1560)
!11552 = !DILocation(line: 2587, column: 11, scope: !1560)
!11553 = !DILocation(line: 2587, column: 9, scope: !1560)
!11554 = !DILocation(line: 2588, column: 5, scope: !1560)
!11555 = !DILocation(line: 2588, column: 10, scope: !11556)
!11556 = !DILexicalBlockFile(scope: !1571, file: !368, discriminator: 1)
!11557 = !DILocation(line: 2588, column: 20, scope: !1571)
!11558 = !DILocation(line: 2588, column: 50, scope: !1571)
!11559 = !DILocation(line: 2588, column: 67, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !1571, file: !368, line: 2588, column: 64)
!11561 = !DILocation(line: 2588, column: 84, scope: !11560)
!11562 = !DILocation(line: 2588, column: 64, scope: !11560)
!11563 = !DILocation(line: 2588, column: 94, scope: !11560)
!11564 = !DILocation(line: 2588, column: 64, scope: !1571)
!11565 = !DILocation(line: 2588, column: 64, scope: !11566)
!11566 = !DILexicalBlockFile(scope: !1571, file: !368, discriminator: 2)
!11567 = !DILocation(line: 2588, column: 125, scope: !11568)
!11568 = !DILexicalBlockFile(scope: !11560, file: !368, discriminator: 3)
!11569 = !DILocation(line: 2588, column: 143, scope: !11560)
!11570 = !DILocation(line: 2588, column: 153, scope: !11560)
!11571 = !DILocation(line: 2588, column: 178, scope: !11560)
!11572 = !DILocation(line: 2588, column: 109, scope: !11560)
!11573 = !DILocation(line: 2588, column: 197, scope: !11574)
!11574 = !DILexicalBlockFile(scope: !1560, file: !368, discriminator: 4)
!11575 = !DILocation(line: 2588, column: 197, scope: !1571)
!11576 = !DILocation(line: 2588, column: 197, scope: !11577)
!11577 = !DILexicalBlockFile(scope: !1571, file: !368, discriminator: 5)
!11578 = !DILocation(line: 2589, column: 9, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !1560, file: !368, line: 2589, column: 9)
!11580 = !DILocation(line: 2589, column: 13, scope: !11579)
!11581 = !DILocation(line: 2589, column: 9, scope: !1560)
!11582 = !DILocation(line: 2590, column: 9, scope: !11579)
!11583 = !DILocation(line: 2591, column: 51, scope: !1560)
!11584 = !DILocation(line: 2592, column: 5, scope: !1560)
!11585 = !DILocation(line: 2593, column: 1, scope: !1560)
!11586 = !DILocation(line: 2385, column: 31, scope: !1604)
!11587 = !DILocation(line: 2387, column: 5, scope: !1604)
!11588 = !DILocation(line: 2387, column: 18, scope: !1604)
!11589 = !DILocation(line: 2388, column: 38, scope: !1604)
!11590 = !DILocation(line: 2388, column: 17, scope: !1604)
!11591 = !DILocation(line: 2388, column: 15, scope: !1604)
!11592 = !DILocation(line: 2389, column: 9, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !1604, file: !368, line: 2389, column: 9)
!11594 = !DILocation(line: 2389, column: 19, scope: !11593)
!11595 = !DILocation(line: 2389, column: 9, scope: !1604)
!11596 = !DILocation(line: 2390, column: 9, scope: !11593)
!11597 = !DILocation(line: 2391, column: 12, scope: !1604)
!11598 = !DILocation(line: 2391, column: 23, scope: !1604)
!11599 = !DILocation(line: 2391, column: 5, scope: !1604)
!11600 = !DILocation(line: 2392, column: 1, scope: !1604)
!11601 = !DILocation(line: 2367, column: 35, scope: !1608)
!11602 = !DILocation(line: 2369, column: 5, scope: !1608)
!11603 = !DILocation(line: 2369, column: 12, scope: !11604)
!11604 = !DILexicalBlockFile(scope: !11605, file: !368, discriminator: 2)
!11605 = !DILexicalBlockFile(scope: !1608, file: !368, discriminator: 1)
!11606 = !DILocation(line: 2369, column: 18, scope: !1608)
!11607 = !DILocation(line: 2370, column: 16, scope: !1608)
!11608 = !DILocation(line: 2370, column: 22, scope: !1608)
!11609 = !DILocation(line: 2370, column: 14, scope: !1608)
!11610 = !DILocation(line: 2371, column: 9, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !1608, file: !368, line: 2371, column: 9)
!11612 = !DILocation(line: 2371, column: 15, scope: !11611)
!11613 = !DILocation(line: 2371, column: 25, scope: !11611)
!11614 = !DILocation(line: 2371, column: 9, scope: !1608)
!11615 = !DILocation(line: 2372, column: 13, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11617, file: !368, line: 2372, column: 13)
!11617 = distinct !DILexicalBlock(scope: !11611, file: !368, line: 2371, column: 40)
!11618 = !DILocation(line: 2372, column: 19, scope: !11616)
!11619 = !DILocation(line: 2372, column: 13, scope: !11617)
!11620 = !DILocation(line: 2373, column: 31, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11616, file: !368, line: 2372, column: 29)
!11622 = !DILocation(line: 2373, column: 13, scope: !11621)
!11623 = !DILocation(line: 2373, column: 19, scope: !11621)
!11624 = !DILocation(line: 2373, column: 29, scope: !11621)
!11625 = !DILocation(line: 2374, column: 17, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11621, file: !368, line: 2374, column: 17)
!11627 = !DILocation(line: 2374, column: 23, scope: !11626)
!11628 = !DILocation(line: 2374, column: 33, scope: !11626)
!11629 = !DILocation(line: 2374, column: 17, scope: !11621)
!11630 = !DILocation(line: 2375, column: 17, scope: !11626)
!11631 = !DILocation(line: 2376, column: 9, scope: !11621)
!11632 = !DILocation(line: 2377, column: 59, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11616, file: !368, line: 2376, column: 16)
!11634 = !DILocation(line: 2378, column: 13, scope: !11633)
!11635 = !DILocation(line: 2378, column: 19, scope: !11633)
!11636 = !DILocation(line: 2378, column: 29, scope: !11633)
!11637 = !DILocation(line: 2380, column: 5, scope: !11617)
!11638 = !DILocation(line: 2381, column: 12, scope: !1608)
!11639 = !DILocation(line: 2381, column: 5, scope: !1608)
!11640 = !DILocation(line: 2382, column: 1, scope: !1608)
!11641 = !DILocation(line: 2395, column: 25, scope: !1646)
!11642 = !DILocation(line: 2395, column: 44, scope: !1646)
!11643 = !DILocation(line: 2397, column: 5, scope: !1646)
!11644 = !DILocation(line: 2397, column: 10, scope: !1646)
!11645 = !DILocation(line: 2398, column: 5, scope: !1646)
!11646 = !DILocation(line: 2398, column: 11, scope: !1646)
!11647 = !DILocation(line: 2398, column: 16, scope: !1646)
!11648 = !DILocation(line: 2399, column: 5, scope: !1646)
!11649 = !DILocation(line: 2399, column: 12, scope: !1646)
!11650 = !DILocation(line: 2402, column: 19, scope: !1646)
!11651 = !DILocation(line: 2402, column: 35, scope: !1646)
!11652 = !DILocation(line: 2402, column: 29, scope: !1646)
!11653 = !DILocation(line: 2402, column: 11, scope: !1646)
!11654 = !DILocation(line: 2402, column: 8, scope: !1646)
!11655 = !DILocation(line: 2403, column: 5, scope: !1646)
!11656 = !DILocation(line: 2403, column: 12, scope: !11657)
!11657 = !DILexicalBlockFile(scope: !11658, file: !368, discriminator: 2)
!11658 = !DILexicalBlockFile(scope: !1646, file: !368, discriminator: 1)
!11659 = !DILocation(line: 2403, column: 20, scope: !1646)
!11660 = !DILocation(line: 2404, column: 40, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !1646, file: !368, line: 2403, column: 28)
!11662 = !DILocation(line: 2404, column: 45, scope: !11661)
!11663 = !DILocation(line: 2404, column: 43, scope: !11661)
!11664 = !DILocation(line: 2404, column: 37, scope: !11661)
!11665 = !DILocation(line: 2404, column: 53, scope: !11661)
!11666 = !DILocation(line: 2404, column: 20, scope: !11661)
!11667 = !DILocation(line: 2406, column: 13, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11661, file: !368, line: 2406, column: 13)
!11669 = !DILocation(line: 2406, column: 24, scope: !11668)
!11670 = !DILocation(line: 2406, column: 13, scope: !11661)
!11671 = !DILocation(line: 2407, column: 29, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11668, file: !368, line: 2406, column: 50)
!11673 = !DILocation(line: 2407, column: 13, scope: !11672)
!11674 = !DILocation(line: 2409, column: 13, scope: !11672)
!11675 = !DILocation(line: 2411, column: 23, scope: !11661)
!11676 = !DILocation(line: 2411, column: 40, scope: !11661)
!11677 = !DILocation(line: 2411, column: 48, scope: !11661)
!11678 = !DILocation(line: 2411, column: 34, scope: !11661)
!11679 = !DILocation(line: 2411, column: 15, scope: !11661)
!11680 = !DILocation(line: 2411, column: 12, scope: !11661)
!11681 = !DILocation(line: 2412, column: 18, scope: !11661)
!11682 = !DILocation(line: 2412, column: 26, scope: !11661)
!11683 = !DILocation(line: 2412, column: 16, scope: !11661)
!11684 = !DILocation(line: 2414, column: 40, scope: !1646)
!11685 = !DILocation(line: 2414, column: 48, scope: !1646)
!11686 = !DILocation(line: 2414, column: 51, scope: !1646)
!11687 = !DILocation(line: 2414, column: 50, scope: !1646)
!11688 = !DILocation(line: 2414, column: 12, scope: !1646)
!11689 = !DILocation(line: 2414, column: 5, scope: !1646)
!11690 = !DILocation(line: 2415, column: 1, scope: !1646)
!11691 = !DILocation(line: 3946, column: 35, scope: !1665)
!11692 = !DILocation(line: 3948, column: 24, scope: !1665)
!11693 = !DILocation(line: 3948, column: 30, scope: !1665)
!11694 = !DILocation(line: 3948, column: 15, scope: !1665)
!11695 = !DILocation(line: 3948, column: 14, scope: !1665)
!11696 = !DILocation(line: 3948, column: 36, scope: !1665)
!11697 = !DILocation(line: 3948, column: 5, scope: !1665)
!11698 = !DILocation(line: 3534, column: 35, scope: !1714)
!11699 = !DILocation(line: 3534, column: 51, scope: !1714)
!11700 = !DILocation(line: 3535, column: 27, scope: !1714)
!11701 = !DILocation(line: 3535, column: 45, scope: !1714)
!11702 = !DILocation(line: 3536, column: 22, scope: !1714)
!11703 = !DILocation(line: 3536, column: 37, scope: !1714)
!11704 = !DILocation(line: 3536, column: 63, scope: !1714)
!11705 = !DILocation(line: 3538, column: 5, scope: !1714)
!11706 = !DILocation(line: 3538, column: 15, scope: !1714)
!11707 = !DILocation(line: 3538, column: 28, scope: !1714)
!11708 = !DILocation(line: 3538, column: 34, scope: !1714)
!11709 = !DILocation(line: 3539, column: 5, scope: !1714)
!11710 = !DILocation(line: 3539, column: 15, scope: !1714)
!11711 = !DILocation(line: 3540, column: 5, scope: !1714)
!11712 = !DILocation(line: 3540, column: 20, scope: !1714)
!11713 = !DILocation(line: 3541, column: 5, scope: !1714)
!11714 = !DILocation(line: 3541, column: 16, scope: !1714)
!11715 = !DILocation(line: 3541, column: 19, scope: !1714)
!11716 = !DILocation(line: 3542, column: 5, scope: !1714)
!11717 = !DILocation(line: 3542, column: 9, scope: !1714)
!11718 = !DILocation(line: 3546, column: 5, scope: !1714)
!11719 = !DILocation(line: 3546, column: 16, scope: !1714)
!11720 = !DILocation(line: 3548, column: 6, scope: !1714)
!11721 = !DILocation(line: 3548, column: 15, scope: !1714)
!11722 = !DILocation(line: 3549, column: 6, scope: !1714)
!11723 = !DILocation(line: 3549, column: 17, scope: !1714)
!11724 = !DILocation(line: 3550, column: 6, scope: !1714)
!11725 = !DILocation(line: 3550, column: 18, scope: !1714)
!11726 = !DILocation(line: 3553, column: 9, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !1714, file: !368, line: 3553, column: 9)
!11728 = !DILocation(line: 3553, column: 18, scope: !11727)
!11729 = !DILocation(line: 3553, column: 32, scope: !11727)
!11730 = !DILocation(line: 3553, column: 35, scope: !11731)
!11731 = !DILexicalBlockFile(scope: !11727, file: !368, discriminator: 1)
!11732 = !DILocation(line: 3553, column: 46, scope: !11727)
!11733 = !DILocation(line: 3553, column: 60, scope: !11727)
!11734 = !DILocation(line: 3553, column: 80, scope: !11735)
!11735 = !DILexicalBlockFile(scope: !11727, file: !368, discriminator: 2)
!11736 = !DILocation(line: 3553, column: 65, scope: !11727)
!11737 = !DILocation(line: 3553, column: 92, scope: !11727)
!11738 = !DILocation(line: 3553, column: 101, scope: !11727)
!11739 = !DILocation(line: 3553, column: 9, scope: !1714)
!11740 = !DILocation(line: 3558, column: 25, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11727, file: !368, line: 3553, column: 107)
!11742 = !DILocation(line: 3558, column: 35, scope: !11741)
!11743 = !DILocation(line: 3558, column: 44, scope: !11741)
!11744 = !DILocation(line: 3559, column: 16, scope: !11741)
!11745 = !DILocation(line: 3559, column: 9, scope: !11741)
!11746 = !DILocation(line: 3562, column: 28, scope: !1714)
!11747 = !DILocation(line: 3562, column: 13, scope: !1714)
!11748 = !DILocation(line: 3562, column: 40, scope: !1714)
!11749 = !DILocation(line: 3562, column: 9, scope: !1714)
!11750 = !DILocation(line: 3563, column: 28, scope: !1714)
!11751 = !DILocation(line: 3563, column: 16, scope: !1714)
!11752 = !DILocation(line: 3563, column: 14, scope: !1714)
!11753 = !DILocation(line: 3564, column: 9, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !1714, file: !368, line: 3564, column: 9)
!11755 = !DILocation(line: 3564, column: 18, scope: !11754)
!11756 = !DILocation(line: 3564, column: 9, scope: !1714)
!11757 = !DILocation(line: 3565, column: 9, scope: !11754)
!11758 = !DILocation(line: 3573, column: 12, scope: !1737)
!11759 = !DILocation(line: 3573, column: 10, scope: !1737)
!11760 = !DILocation(line: 3573, column: 17, scope: !11761)
!11761 = !DILexicalBlockFile(scope: !11762, file: !368, discriminator: 2)
!11762 = !DILexicalBlockFile(scope: !1736, file: !368, discriminator: 1)
!11763 = !DILocation(line: 3573, column: 21, scope: !1736)
!11764 = !DILocation(line: 3573, column: 19, scope: !1736)
!11765 = !DILocation(line: 3573, column: 5, scope: !1737)
!11766 = !DILocation(line: 3574, column: 9, scope: !1735)
!11767 = !DILocation(line: 3574, column: 19, scope: !1735)
!11768 = !DILocation(line: 3574, column: 68, scope: !1735)
!11769 = !DILocation(line: 3574, column: 46, scope: !1735)
!11770 = !DILocation(line: 3574, column: 28, scope: !1735)
!11771 = !DILocation(line: 3574, column: 60, scope: !1735)
!11772 = !DILocation(line: 3574, column: 27, scope: !1735)
!11773 = !DILocation(line: 3575, column: 9, scope: !1735)
!11774 = !DILocation(line: 3575, column: 19, scope: !1735)
!11775 = !DILocation(line: 3576, column: 9, scope: !1735)
!11776 = !DILocation(line: 3576, column: 13, scope: !1735)
!11777 = !DILocation(line: 3577, column: 9, scope: !1735)
!11778 = !DILocation(line: 3577, column: 19, scope: !1735)
!11779 = !DILocation(line: 3578, column: 9, scope: !1735)
!11780 = !DILocation(line: 3578, column: 19, scope: !1735)
!11781 = !DILocation(line: 3583, column: 9, scope: !1735)
!11782 = !DILocation(line: 3583, column: 20, scope: !1735)
!11783 = !DILocation(line: 3583, column: 45, scope: !1735)
!11784 = !DILocation(line: 3583, column: 30, scope: !1735)
!11785 = !DILocation(line: 3583, column: 53, scope: !1735)
!11786 = !DILocation(line: 3584, column: 50, scope: !1735)
!11787 = !DILocation(line: 3584, column: 32, scope: !1735)
!11788 = !DILocation(line: 3584, column: 58, scope: !1735)
!11789 = !DILocation(line: 3584, column: 31, scope: !1735)
!11790 = !DILocation(line: 3584, column: 16, scope: !1735)
!11791 = !DILocation(line: 3584, column: 14, scope: !1735)
!11792 = !DILocation(line: 3585, column: 16, scope: !1735)
!11793 = !DILocation(line: 3585, column: 22, scope: !1735)
!11794 = !DILocation(line: 3585, column: 48, scope: !11795)
!11795 = !DILexicalBlockFile(scope: !1735, file: !368, discriminator: 1)
!11796 = !DILocation(line: 3585, column: 30, scope: !1735)
!11797 = !DILocation(line: 3585, column: 56, scope: !1735)
!11798 = !DILocation(line: 3585, column: 29, scope: !1735)
!11799 = !DILocation(line: 3585, column: 16, scope: !11800)
!11800 = !DILexicalBlockFile(scope: !1735, file: !368, discriminator: 2)
!11801 = !DILocation(line: 3585, column: 14, scope: !11802)
!11802 = !DILexicalBlockFile(scope: !11803, file: !368, discriminator: 4)
!11803 = !DILexicalBlockFile(scope: !1735, file: !368, discriminator: 3)
!11804 = !DILocation(line: 3586, column: 18, scope: !1735)
!11805 = !DILocation(line: 3586, column: 24, scope: !1735)
!11806 = !DILocation(line: 3586, column: 50, scope: !11795)
!11807 = !DILocation(line: 3586, column: 32, scope: !1735)
!11808 = !DILocation(line: 3586, column: 58, scope: !1735)
!11809 = !DILocation(line: 3586, column: 31, scope: !1735)
!11810 = !DILocation(line: 3586, column: 18, scope: !11800)
!11811 = !DILocation(line: 3586, column: 16, scope: !11802)
!11812 = !DILocation(line: 3588, column: 17, scope: !1735)
!11813 = !DILocation(line: 3588, column: 22, scope: !1735)
!11814 = !DILocation(line: 3592, column: 17, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11816, file: !368, line: 3592, column: 17)
!11816 = distinct !DILexicalBlock(scope: !1735, file: !368, line: 3588, column: 43)
!11817 = !DILocation(line: 3592, column: 24, scope: !11815)
!11818 = !DILocation(line: 3592, column: 17, scope: !11816)
!11819 = !DILocation(line: 3593, column: 26, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11815, file: !368, line: 3592, column: 39)
!11821 = !DILocation(line: 3593, column: 24, scope: !11820)
!11822 = !DILocation(line: 3594, column: 21, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11820, file: !368, line: 3594, column: 21)
!11824 = !DILocation(line: 3594, column: 28, scope: !11823)
!11825 = !DILocation(line: 3594, column: 21, scope: !11820)
!11826 = !DILocation(line: 3595, column: 21, scope: !11823)
!11827 = !DILocation(line: 3596, column: 13, scope: !11820)
!11828 = !DILocation(line: 3597, column: 33, scope: !11815)
!11829 = !DILocation(line: 3597, column: 43, scope: !11815)
!11830 = !DILocation(line: 3597, column: 52, scope: !11815)
!11831 = !DILocation(line: 3598, column: 58, scope: !11816)
!11832 = !DILocation(line: 3598, column: 53, scope: !11816)
!11833 = !DILocation(line: 3598, column: 33, scope: !11816)
!11834 = !DILocation(line: 3598, column: 15, scope: !11816)
!11835 = !DILocation(line: 3598, column: 45, scope: !11816)
!11836 = !DILocation(line: 3598, column: 14, scope: !11816)
!11837 = !DILocation(line: 3598, column: 56, scope: !11816)
!11838 = !DILocation(line: 3599, column: 13, scope: !11816)
!11839 = !DILocation(line: 3601, column: 34, scope: !11816)
!11840 = !DILocation(line: 3601, column: 31, scope: !11816)
!11841 = !DILocation(line: 3601, column: 14, scope: !11816)
!11842 = !DILocation(line: 3601, column: 25, scope: !11816)
!11843 = !DILocation(line: 3602, column: 15, scope: !11816)
!11844 = !DILocation(line: 3602, column: 27, scope: !11816)
!11845 = !DILocation(line: 3602, column: 13, scope: !11816)
!11846 = !DILocation(line: 3607, column: 41, scope: !11816)
!11847 = !DILocation(line: 3607, column: 47, scope: !11816)
!11848 = !DILocation(line: 3607, column: 55, scope: !11816)
!11849 = !DILocation(line: 3607, column: 63, scope: !11816)
!11850 = !DILocation(line: 3607, column: 17, scope: !11816)
!11851 = !DILocation(line: 3607, column: 16, scope: !11816)
!11852 = !DILocation(line: 3608, column: 17, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11816, file: !368, line: 3608, column: 17)
!11854 = !DILocation(line: 3608, column: 20, scope: !11853)
!11855 = !DILocation(line: 3608, column: 17, scope: !11816)
!11856 = !DILocation(line: 3609, column: 17, scope: !11853)
!11857 = !DILocation(line: 3610, column: 58, scope: !11816)
!11858 = !DILocation(line: 3610, column: 53, scope: !11816)
!11859 = !DILocation(line: 3610, column: 33, scope: !11816)
!11860 = !DILocation(line: 3610, column: 15, scope: !11816)
!11861 = !DILocation(line: 3610, column: 45, scope: !11816)
!11862 = !DILocation(line: 3610, column: 14, scope: !11816)
!11863 = !DILocation(line: 3610, column: 56, scope: !11816)
!11864 = !DILocation(line: 3611, column: 13, scope: !11816)
!11865 = !DILocation(line: 3620, column: 17, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11816, file: !368, line: 3620, column: 17)
!11867 = !DILocation(line: 3620, column: 17, scope: !11816)
!11868 = !DILocation(line: 3624, column: 33, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11866, file: !368, line: 3620, column: 25)
!11870 = !DILocation(line: 3624, column: 43, scope: !11869)
!11871 = !DILocation(line: 3624, column: 52, scope: !11869)
!11872 = !DILocation(line: 3625, column: 62, scope: !11869)
!11873 = !DILocation(line: 3625, column: 57, scope: !11869)
!11874 = !DILocation(line: 3625, column: 37, scope: !11869)
!11875 = !DILocation(line: 3625, column: 19, scope: !11869)
!11876 = !DILocation(line: 3625, column: 49, scope: !11869)
!11877 = !DILocation(line: 3625, column: 18, scope: !11869)
!11878 = !DILocation(line: 3625, column: 60, scope: !11869)
!11879 = !DILocation(line: 3626, column: 36, scope: !11869)
!11880 = !DILocation(line: 3626, column: 33, scope: !11869)
!11881 = !DILocation(line: 3626, column: 18, scope: !11869)
!11882 = !DILocation(line: 3626, column: 27, scope: !11869)
!11883 = !DILocation(line: 3627, column: 19, scope: !11869)
!11884 = !DILocation(line: 3627, column: 31, scope: !11869)
!11885 = !DILocation(line: 3628, column: 17, scope: !11869)
!11886 = !DILocation(line: 3630, column: 58, scope: !11816)
!11887 = !DILocation(line: 3630, column: 38, scope: !11816)
!11888 = !DILocation(line: 3630, column: 20, scope: !11816)
!11889 = !DILocation(line: 3630, column: 50, scope: !11816)
!11890 = !DILocation(line: 3630, column: 19, scope: !11816)
!11891 = !DILocation(line: 3630, column: 16, scope: !11816)
!11892 = !DILocation(line: 3631, column: 35, scope: !11816)
!11893 = !DILocation(line: 3631, column: 20, scope: !11816)
!11894 = !DILocation(line: 3631, column: 18, scope: !11816)
!11895 = !DILocation(line: 3632, column: 17, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11816, file: !368, line: 3632, column: 17)
!11897 = !DILocation(line: 3632, column: 22, scope: !11896)
!11898 = !DILocation(line: 3632, column: 17, scope: !11816)
!11899 = !DILocation(line: 3635, column: 30, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11896, file: !368, line: 3632, column: 37)
!11901 = !DILocation(line: 3635, column: 17, scope: !11900)
!11902 = !DILocation(line: 3637, column: 17, scope: !11900)
!11903 = !DILocation(line: 3639, column: 34, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11816, file: !368, line: 3639, column: 17)
!11905 = !DILocation(line: 3639, column: 40, scope: !11904)
!11906 = !DILocation(line: 3639, column: 49, scope: !11904)
!11907 = !DILocation(line: 3639, column: 60, scope: !11904)
!11908 = !DILocation(line: 3639, column: 69, scope: !11904)
!11909 = !DILocation(line: 3639, column: 86, scope: !11904)
!11910 = !DILocation(line: 3639, column: 17, scope: !11816)
!11911 = !DILocation(line: 3641, column: 21, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11904, file: !368, line: 3639, column: 93)
!11913 = !DILocation(line: 3643, column: 38, scope: !11912)
!11914 = !DILocation(line: 3643, column: 22, scope: !11912)
!11915 = !DILocation(line: 3643, column: 43, scope: !11912)
!11916 = !DILocation(line: 3640, column: 17, scope: !11912)
!11917 = !DILocation(line: 3644, column: 17, scope: !11912)
!11918 = !DILocation(line: 3646, column: 32, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11816, file: !368, line: 3646, column: 17)
!11920 = !DILocation(line: 3646, column: 38, scope: !11919)
!11921 = !DILocation(line: 3646, column: 47, scope: !11919)
!11922 = !DILocation(line: 3646, column: 71, scope: !11919)
!11923 = !DILocation(line: 3646, column: 105, scope: !11924)
!11924 = !DILexicalBlockFile(scope: !11919, file: !368, discriminator: 1)
!11925 = !DILocation(line: 3646, column: 111, scope: !11919)
!11926 = !DILocation(line: 3646, column: 74, scope: !11919)
!11927 = !DILocation(line: 3646, column: 17, scope: !11816)
!11928 = !DILocation(line: 3647, column: 42, scope: !11919)
!11929 = !DILocation(line: 3647, column: 22, scope: !11919)
!11930 = !DILocation(line: 3647, column: 20, scope: !11919)
!11931 = !DILocation(line: 3647, column: 17, scope: !11919)
!11932 = !DILocation(line: 3650, column: 42, scope: !11919)
!11933 = !DILocation(line: 3650, column: 48, scope: !11919)
!11934 = !DILocation(line: 3650, column: 22, scope: !11919)
!11935 = !DILocation(line: 3650, column: 20, scope: !11919)
!11936 = !DILocation(line: 3657, column: 17, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11816, file: !368, line: 3657, column: 17)
!11938 = !DILocation(line: 3657, column: 20, scope: !11937)
!11939 = !DILocation(line: 3657, column: 17, scope: !11816)
!11940 = !DILocation(line: 3658, column: 17, scope: !11937)
!11941 = !DILocation(line: 3661, column: 58, scope: !11816)
!11942 = !DILocation(line: 3661, column: 53, scope: !11816)
!11943 = !DILocation(line: 3661, column: 33, scope: !11816)
!11944 = !DILocation(line: 3661, column: 15, scope: !11816)
!11945 = !DILocation(line: 3661, column: 45, scope: !11816)
!11946 = !DILocation(line: 3661, column: 14, scope: !11816)
!11947 = !DILocation(line: 3661, column: 56, scope: !11816)
!11948 = !DILocation(line: 3662, column: 32, scope: !11816)
!11949 = !DILocation(line: 3662, column: 29, scope: !11816)
!11950 = !DILocation(line: 3662, column: 14, scope: !11816)
!11951 = !DILocation(line: 3662, column: 23, scope: !11816)
!11952 = !DILocation(line: 3663, column: 15, scope: !11816)
!11953 = !DILocation(line: 3663, column: 27, scope: !11816)
!11954 = !DILocation(line: 3664, column: 13, scope: !11816)
!11955 = !DILocation(line: 3666, column: 26, scope: !11816)
!11956 = !DILocation(line: 3667, column: 62, scope: !11816)
!11957 = !DILocation(line: 3666, column: 13, scope: !11816)
!11958 = !DILocation(line: 3668, column: 13, scope: !11816)
!11959 = !DILocation(line: 3671, column: 5, scope: !1736)
!11960 = !DILocation(line: 3671, column: 5, scope: !11762)
!11961 = !DILocation(line: 3671, column: 5, scope: !1735)
!11962 = !DILocation(line: 3573, column: 26, scope: !1736)
!11963 = !DILocation(line: 3573, column: 5, scope: !1736)
!11964 = !DILocation(line: 3677, column: 36, scope: !1714)
!11965 = !DILocation(line: 3677, column: 21, scope: !1714)
!11966 = !DILocation(line: 3677, column: 46, scope: !1714)
!11967 = !DILocation(line: 3677, column: 58, scope: !1714)
!11968 = !DILocation(line: 3677, column: 77, scope: !11969)
!11969 = !DILexicalBlockFile(scope: !1714, file: !368, discriminator: 1)
!11970 = !DILocation(line: 3677, column: 65, scope: !1714)
!11971 = !DILocation(line: 3677, column: 58, scope: !11972)
!11972 = !DILexicalBlockFile(scope: !1714, file: !368, discriminator: 2)
!11973 = !DILocation(line: 3677, column: 55, scope: !11974)
!11974 = !DILexicalBlockFile(scope: !11975, file: !368, discriminator: 4)
!11975 = !DILexicalBlockFile(scope: !1714, file: !368, discriminator: 3)
!11976 = !DILocation(line: 3677, column: 17, scope: !1714)
!11977 = !DILocation(line: 3678, column: 9, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !1714, file: !368, line: 3678, column: 9)
!11979 = !DILocation(line: 3678, column: 24, scope: !11978)
!11980 = !DILocation(line: 3678, column: 21, scope: !11978)
!11981 = !DILocation(line: 3678, column: 9, scope: !1714)
!11982 = !DILocation(line: 3682, column: 22, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11978, file: !368, line: 3678, column: 38)
!11984 = !DILocation(line: 3684, column: 22, scope: !11983)
!11985 = !DILocation(line: 3684, column: 36, scope: !11983)
!11986 = !DILocation(line: 3682, column: 9, scope: !11983)
!11987 = !DILocation(line: 3685, column: 9, scope: !11983)
!11988 = !DILocation(line: 3691, column: 12, scope: !1714)
!11989 = !DILocation(line: 3691, column: 5, scope: !1714)
!11990 = !DILocation(line: 3693, column: 5, scope: !1714)
!11991 = !DILocation(line: 3693, column: 10, scope: !11992)
!11992 = !DILexicalBlockFile(scope: !1744, file: !368, discriminator: 1)
!11993 = !DILocation(line: 3693, column: 20, scope: !1744)
!11994 = !DILocation(line: 3693, column: 50, scope: !1744)
!11995 = !DILocation(line: 3693, column: 69, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !1744, file: !368, line: 3693, column: 66)
!11997 = !DILocation(line: 3693, column: 86, scope: !11996)
!11998 = !DILocation(line: 3693, column: 66, scope: !11996)
!11999 = !DILocation(line: 3693, column: 96, scope: !11996)
!12000 = !DILocation(line: 3693, column: 66, scope: !1744)
!12001 = !DILocation(line: 3693, column: 66, scope: !12002)
!12002 = !DILexicalBlockFile(scope: !1744, file: !368, discriminator: 2)
!12003 = !DILocation(line: 3693, column: 127, scope: !12004)
!12004 = !DILexicalBlockFile(scope: !11996, file: !368, discriminator: 3)
!12005 = !DILocation(line: 3693, column: 145, scope: !11996)
!12006 = !DILocation(line: 3693, column: 155, scope: !11996)
!12007 = !DILocation(line: 3693, column: 180, scope: !11996)
!12008 = !DILocation(line: 3693, column: 111, scope: !11996)
!12009 = !DILocation(line: 3693, column: 199, scope: !12010)
!12010 = !DILexicalBlockFile(scope: !1714, file: !368, discriminator: 4)
!12011 = !DILocation(line: 3693, column: 199, scope: !1744)
!12012 = !DILocation(line: 3693, column: 199, scope: !12013)
!12013 = !DILexicalBlockFile(scope: !1744, file: !368, discriminator: 5)
!12014 = !DILocation(line: 3694, column: 5, scope: !1714)
!12015 = !DILocation(line: 3695, column: 1, scope: !1714)
!12016 = !DILocation(line: 3706, column: 25, scope: !1755)
!12017 = !DILocation(line: 3706, column: 43, scope: !1755)
!12018 = !DILocation(line: 3707, column: 19, scope: !1755)
!12019 = !DILocation(line: 3707, column: 32, scope: !1755)
!12020 = !DILocation(line: 3707, column: 56, scope: !1755)
!12021 = !DILocation(line: 3709, column: 5, scope: !1755)
!12022 = !DILocation(line: 3709, column: 18, scope: !1755)
!12023 = !DILocation(line: 3709, column: 21, scope: !1755)
!12024 = !DILocation(line: 3710, column: 5, scope: !1755)
!12025 = !DILocation(line: 3710, column: 9, scope: !1755)
!12026 = !DILocation(line: 3711, column: 5, scope: !1755)
!12027 = !DILocation(line: 3711, column: 15, scope: !1755)
!12028 = !DILocation(line: 3713, column: 9, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !1755, file: !368, line: 3713, column: 9)
!12030 = !DILocation(line: 3713, column: 18, scope: !12029)
!12031 = !DILocation(line: 3713, column: 9, scope: !1755)
!12032 = !DILocation(line: 3714, column: 16, scope: !12029)
!12033 = !DILocation(line: 3714, column: 9, scope: !12029)
!12034 = !DILocation(line: 3715, column: 9, scope: !1771)
!12035 = !DILocation(line: 3715, column: 16, scope: !1771)
!12036 = !DILocation(line: 3715, column: 30, scope: !1771)
!12037 = !DILocation(line: 3715, column: 33, scope: !12038)
!12038 = !DILexicalBlockFile(scope: !1771, file: !368, discriminator: 1)
!12039 = !DILocation(line: 3715, column: 44, scope: !1771)
!12040 = !DILocation(line: 3715, column: 9, scope: !1755)
!12041 = !DILocation(line: 3716, column: 9, scope: !1770)
!12042 = !DILocation(line: 3716, column: 14, scope: !12043)
!12043 = !DILexicalBlockFile(scope: !1769, file: !368, discriminator: 1)
!12044 = !DILocation(line: 3716, column: 24, scope: !1769)
!12045 = !DILocation(line: 3716, column: 54, scope: !1769)
!12046 = !DILocation(line: 3716, column: 73, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !1769, file: !368, line: 3716, column: 70)
!12048 = !DILocation(line: 3716, column: 90, scope: !12047)
!12049 = !DILocation(line: 3716, column: 70, scope: !12047)
!12050 = !DILocation(line: 3716, column: 100, scope: !12047)
!12051 = !DILocation(line: 3716, column: 70, scope: !1769)
!12052 = !DILocation(line: 3716, column: 70, scope: !12053)
!12053 = !DILexicalBlockFile(scope: !1769, file: !368, discriminator: 2)
!12054 = !DILocation(line: 3716, column: 131, scope: !12055)
!12055 = !DILexicalBlockFile(scope: !12047, file: !368, discriminator: 3)
!12056 = !DILocation(line: 3716, column: 149, scope: !12047)
!12057 = !DILocation(line: 3716, column: 159, scope: !12047)
!12058 = !DILocation(line: 3716, column: 184, scope: !12047)
!12059 = !DILocation(line: 3716, column: 115, scope: !12047)
!12060 = !DILocation(line: 3716, column: 203, scope: !12061)
!12061 = !DILexicalBlockFile(scope: !1770, file: !368, discriminator: 4)
!12062 = !DILocation(line: 3716, column: 203, scope: !1769)
!12063 = !DILocation(line: 3716, column: 203, scope: !12064)
!12064 = !DILexicalBlockFile(scope: !1769, file: !368, discriminator: 5)
!12065 = !DILocation(line: 3717, column: 16, scope: !1770)
!12066 = !DILocation(line: 3717, column: 9, scope: !1770)
!12067 = !DILocation(line: 3719, column: 5, scope: !1755)
!12068 = !DILocation(line: 3719, column: 10, scope: !12069)
!12069 = !DILexicalBlockFile(scope: !1773, file: !368, discriminator: 1)
!12070 = !DILocation(line: 3719, column: 20, scope: !1773)
!12071 = !DILocation(line: 3719, column: 50, scope: !1773)
!12072 = !DILocation(line: 3719, column: 67, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !1773, file: !368, line: 3719, column: 64)
!12074 = !DILocation(line: 3719, column: 84, scope: !12073)
!12075 = !DILocation(line: 3719, column: 64, scope: !12073)
!12076 = !DILocation(line: 3719, column: 94, scope: !12073)
!12077 = !DILocation(line: 3719, column: 64, scope: !1773)
!12078 = !DILocation(line: 3719, column: 64, scope: !12079)
!12079 = !DILexicalBlockFile(scope: !1773, file: !368, discriminator: 2)
!12080 = !DILocation(line: 3719, column: 125, scope: !12081)
!12081 = !DILexicalBlockFile(scope: !12073, file: !368, discriminator: 3)
!12082 = !DILocation(line: 3719, column: 143, scope: !12073)
!12083 = !DILocation(line: 3719, column: 153, scope: !12073)
!12084 = !DILocation(line: 3719, column: 178, scope: !12073)
!12085 = !DILocation(line: 3719, column: 109, scope: !12073)
!12086 = !DILocation(line: 3719, column: 197, scope: !12087)
!12087 = !DILexicalBlockFile(scope: !1755, file: !368, discriminator: 4)
!12088 = !DILocation(line: 3719, column: 197, scope: !1773)
!12089 = !DILocation(line: 3719, column: 197, scope: !12090)
!12090 = !DILexicalBlockFile(scope: !1773, file: !368, discriminator: 5)
!12091 = !DILocation(line: 3723, column: 9, scope: !1779)
!12092 = !DILocation(line: 3723, column: 20, scope: !1779)
!12093 = !DILocation(line: 3723, column: 9, scope: !1755)
!12094 = !DILocation(line: 3724, column: 27, scope: !1778)
!12095 = !DILocation(line: 3724, column: 15, scope: !1778)
!12096 = !DILocation(line: 3724, column: 13, scope: !1778)
!12097 = !DILocation(line: 3725, column: 13, scope: !1777)
!12098 = !DILocation(line: 3725, column: 17, scope: !1777)
!12099 = !DILocation(line: 3725, column: 13, scope: !1778)
!12100 = !DILocation(line: 3726, column: 13, scope: !1776)
!12101 = !DILocation(line: 3726, column: 18, scope: !12102)
!12102 = !DILexicalBlockFile(scope: !1775, file: !368, discriminator: 1)
!12103 = !DILocation(line: 3726, column: 28, scope: !1775)
!12104 = !DILocation(line: 3726, column: 58, scope: !1775)
!12105 = !DILocation(line: 3726, column: 77, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !1775, file: !368, line: 3726, column: 74)
!12107 = !DILocation(line: 3726, column: 94, scope: !12106)
!12108 = !DILocation(line: 3726, column: 74, scope: !12106)
!12109 = !DILocation(line: 3726, column: 104, scope: !12106)
!12110 = !DILocation(line: 3726, column: 74, scope: !1775)
!12111 = !DILocation(line: 3726, column: 74, scope: !12112)
!12112 = !DILexicalBlockFile(scope: !1775, file: !368, discriminator: 2)
!12113 = !DILocation(line: 3726, column: 135, scope: !12114)
!12114 = !DILexicalBlockFile(scope: !12106, file: !368, discriminator: 3)
!12115 = !DILocation(line: 3726, column: 153, scope: !12106)
!12116 = !DILocation(line: 3726, column: 163, scope: !12106)
!12117 = !DILocation(line: 3726, column: 188, scope: !12106)
!12118 = !DILocation(line: 3726, column: 119, scope: !12106)
!12119 = !DILocation(line: 3726, column: 207, scope: !12120)
!12120 = !DILexicalBlockFile(scope: !1776, file: !368, discriminator: 4)
!12121 = !DILocation(line: 3726, column: 207, scope: !1775)
!12122 = !DILocation(line: 3726, column: 207, scope: !12123)
!12123 = !DILexicalBlockFile(scope: !1775, file: !368, discriminator: 5)
!12124 = !DILocation(line: 3727, column: 13, scope: !1776)
!12125 = !DILocation(line: 3729, column: 5, scope: !1778)
!12126 = !DILocation(line: 3731, column: 11, scope: !1755)
!12127 = !DILocation(line: 3732, column: 14, scope: !1783)
!12128 = !DILocation(line: 3732, column: 21, scope: !1783)
!12129 = !DILocation(line: 3732, column: 10, scope: !1783)
!12130 = !DILocation(line: 3732, column: 26, scope: !12131)
!12131 = !DILexicalBlockFile(scope: !12132, file: !368, discriminator: 2)
!12132 = !DILexicalBlockFile(scope: !1782, file: !368, discriminator: 1)
!12133 = !DILocation(line: 3732, column: 28, scope: !1782)
!12134 = !DILocation(line: 3732, column: 5, scope: !1783)
!12135 = !DILocation(line: 3733, column: 9, scope: !1781)
!12136 = !DILocation(line: 3733, column: 19, scope: !1781)
!12137 = !DILocation(line: 3734, column: 13, scope: !1789)
!12138 = !DILocation(line: 3734, column: 19, scope: !1789)
!12139 = !DILocation(line: 3734, column: 17, scope: !1789)
!12140 = !DILocation(line: 3734, column: 13, scope: !1781)
!12141 = !DILocation(line: 3735, column: 57, scope: !1788)
!12142 = !DILocation(line: 3735, column: 18, scope: !1788)
!12143 = !DILocation(line: 3735, column: 37, scope: !1788)
!12144 = !DILocation(line: 3735, column: 19, scope: !1788)
!12145 = !DILocation(line: 3735, column: 49, scope: !1788)
!12146 = !DILocation(line: 3735, column: 15, scope: !1788)
!12147 = !DILocation(line: 3736, column: 29, scope: !1788)
!12148 = !DILocation(line: 3736, column: 34, scope: !1788)
!12149 = !DILocation(line: 3736, column: 43, scope: !1788)
!12150 = !DILocation(line: 3737, column: 17, scope: !1787)
!12151 = !DILocation(line: 3737, column: 28, scope: !1787)
!12152 = !DILocation(line: 3737, column: 17, scope: !1788)
!12153 = !DILocation(line: 3738, column: 17, scope: !1786)
!12154 = !DILocation(line: 3738, column: 22, scope: !12155)
!12155 = !DILexicalBlockFile(scope: !1785, file: !368, discriminator: 1)
!12156 = !DILocation(line: 3738, column: 32, scope: !1785)
!12157 = !DILocation(line: 3738, column: 62, scope: !1785)
!12158 = !DILocation(line: 3738, column: 81, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !1785, file: !368, line: 3738, column: 78)
!12160 = !DILocation(line: 3738, column: 98, scope: !12159)
!12161 = !DILocation(line: 3738, column: 78, scope: !12159)
!12162 = !DILocation(line: 3738, column: 108, scope: !12159)
!12163 = !DILocation(line: 3738, column: 78, scope: !1785)
!12164 = !DILocation(line: 3738, column: 78, scope: !12165)
!12165 = !DILexicalBlockFile(scope: !1785, file: !368, discriminator: 2)
!12166 = !DILocation(line: 3738, column: 139, scope: !12167)
!12167 = !DILexicalBlockFile(scope: !12159, file: !368, discriminator: 3)
!12168 = !DILocation(line: 3738, column: 157, scope: !12159)
!12169 = !DILocation(line: 3738, column: 167, scope: !12159)
!12170 = !DILocation(line: 3738, column: 192, scope: !12159)
!12171 = !DILocation(line: 3738, column: 123, scope: !12159)
!12172 = !DILocation(line: 3738, column: 211, scope: !12173)
!12173 = !DILexicalBlockFile(scope: !1786, file: !368, discriminator: 4)
!12174 = !DILocation(line: 3738, column: 211, scope: !1785)
!12175 = !DILocation(line: 3738, column: 211, scope: !12176)
!12176 = !DILexicalBlockFile(scope: !1785, file: !368, discriminator: 5)
!12177 = !DILocation(line: 3739, column: 24, scope: !1786)
!12178 = !DILocation(line: 3739, column: 17, scope: !1786)
!12179 = !DILocation(line: 3741, column: 57, scope: !1788)
!12180 = !DILocation(line: 3741, column: 48, scope: !1788)
!12181 = !DILocation(line: 3741, column: 14, scope: !1788)
!12182 = !DILocation(line: 3741, column: 33, scope: !1788)
!12183 = !DILocation(line: 3741, column: 15, scope: !1788)
!12184 = !DILocation(line: 3741, column: 40, scope: !1788)
!12185 = !DILocation(line: 3741, column: 55, scope: !1788)
!12186 = !DILocation(line: 3742, column: 18, scope: !1788)
!12187 = !DILocation(line: 3743, column: 9, scope: !1788)
!12188 = !DILocation(line: 3743, column: 20, scope: !1795)
!12189 = !DILocation(line: 3743, column: 26, scope: !1795)
!12190 = !DILocation(line: 3743, column: 24, scope: !1795)
!12191 = !DILocation(line: 3743, column: 20, scope: !1789)
!12192 = !DILocation(line: 3746, column: 57, scope: !1794)
!12193 = !DILocation(line: 3746, column: 18, scope: !1794)
!12194 = !DILocation(line: 3746, column: 37, scope: !1794)
!12195 = !DILocation(line: 3746, column: 19, scope: !1794)
!12196 = !DILocation(line: 3746, column: 49, scope: !1794)
!12197 = !DILocation(line: 3746, column: 15, scope: !1794)
!12198 = !DILocation(line: 3747, column: 46, scope: !1794)
!12199 = !DILocation(line: 3747, column: 17, scope: !1794)
!12200 = !DILocation(line: 3747, column: 15, scope: !1794)
!12201 = !DILocation(line: 3748, column: 17, scope: !1793)
!12202 = !DILocation(line: 3748, column: 19, scope: !1793)
!12203 = !DILocation(line: 3748, column: 33, scope: !1793)
!12204 = !DILocation(line: 3748, column: 36, scope: !12205)
!12205 = !DILexicalBlockFile(scope: !1793, file: !368, discriminator: 1)
!12206 = !DILocation(line: 3748, column: 47, scope: !1793)
!12207 = !DILocation(line: 3748, column: 17, scope: !1794)
!12208 = !DILocation(line: 3749, column: 17, scope: !1792)
!12209 = !DILocation(line: 3749, column: 22, scope: !12210)
!12210 = !DILexicalBlockFile(scope: !1791, file: !368, discriminator: 1)
!12211 = !DILocation(line: 3749, column: 32, scope: !1791)
!12212 = !DILocation(line: 3749, column: 62, scope: !1791)
!12213 = !DILocation(line: 3749, column: 81, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !1791, file: !368, line: 3749, column: 78)
!12215 = !DILocation(line: 3749, column: 98, scope: !12214)
!12216 = !DILocation(line: 3749, column: 78, scope: !12214)
!12217 = !DILocation(line: 3749, column: 108, scope: !12214)
!12218 = !DILocation(line: 3749, column: 78, scope: !1791)
!12219 = !DILocation(line: 3749, column: 78, scope: !12220)
!12220 = !DILexicalBlockFile(scope: !1791, file: !368, discriminator: 2)
!12221 = !DILocation(line: 3749, column: 139, scope: !12222)
!12222 = !DILexicalBlockFile(scope: !12214, file: !368, discriminator: 3)
!12223 = !DILocation(line: 3749, column: 157, scope: !12214)
!12224 = !DILocation(line: 3749, column: 167, scope: !12214)
!12225 = !DILocation(line: 3749, column: 192, scope: !12214)
!12226 = !DILocation(line: 3749, column: 123, scope: !12214)
!12227 = !DILocation(line: 3749, column: 211, scope: !12228)
!12228 = !DILexicalBlockFile(scope: !1792, file: !368, discriminator: 4)
!12229 = !DILocation(line: 3749, column: 211, scope: !1791)
!12230 = !DILocation(line: 3749, column: 211, scope: !12231)
!12231 = !DILexicalBlockFile(scope: !1791, file: !368, discriminator: 5)
!12232 = !DILocation(line: 3750, column: 24, scope: !1792)
!12233 = !DILocation(line: 3750, column: 17, scope: !1792)
!12234 = !DILocation(line: 3752, column: 57, scope: !1794)
!12235 = !DILocation(line: 3752, column: 48, scope: !1794)
!12236 = !DILocation(line: 3752, column: 14, scope: !1794)
!12237 = !DILocation(line: 3752, column: 33, scope: !1794)
!12238 = !DILocation(line: 3752, column: 15, scope: !1794)
!12239 = !DILocation(line: 3752, column: 40, scope: !1794)
!12240 = !DILocation(line: 3752, column: 55, scope: !1794)
!12241 = !DILocation(line: 3753, column: 18, scope: !1794)
!12242 = !DILocation(line: 3754, column: 9, scope: !1794)
!12243 = !DILocation(line: 3755, column: 13, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !1781, file: !368, line: 3755, column: 13)
!12245 = !DILocation(line: 3755, column: 22, scope: !12244)
!12246 = !DILocation(line: 3755, column: 19, scope: !12244)
!12247 = !DILocation(line: 3755, column: 13, scope: !1781)
!12248 = !DILocation(line: 3756, column: 13, scope: !12244)
!12249 = !DILocation(line: 3757, column: 5, scope: !1782)
!12250 = !DILocation(line: 3757, column: 5, scope: !12132)
!12251 = !DILocation(line: 3757, column: 5, scope: !1781)
!12252 = !DILocation(line: 3732, column: 34, scope: !1782)
!12253 = !DILocation(line: 3732, column: 43, scope: !1782)
!12254 = !DILocation(line: 3732, column: 5, scope: !1782)
!12255 = !DILocation(line: 3759, column: 5, scope: !1755)
!12256 = !DILocation(line: 3759, column: 10, scope: !12257)
!12257 = !DILexicalBlockFile(scope: !1797, file: !368, discriminator: 1)
!12258 = !DILocation(line: 3759, column: 20, scope: !1797)
!12259 = !DILocation(line: 3759, column: 50, scope: !1797)
!12260 = !DILocation(line: 3759, column: 69, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !1797, file: !368, line: 3759, column: 66)
!12262 = !DILocation(line: 3759, column: 86, scope: !12261)
!12263 = !DILocation(line: 3759, column: 66, scope: !12261)
!12264 = !DILocation(line: 3759, column: 96, scope: !12261)
!12265 = !DILocation(line: 3759, column: 66, scope: !1797)
!12266 = !DILocation(line: 3759, column: 66, scope: !12267)
!12267 = !DILexicalBlockFile(scope: !1797, file: !368, discriminator: 2)
!12268 = !DILocation(line: 3759, column: 127, scope: !12269)
!12269 = !DILexicalBlockFile(scope: !12261, file: !368, discriminator: 3)
!12270 = !DILocation(line: 3759, column: 145, scope: !12261)
!12271 = !DILocation(line: 3759, column: 155, scope: !12261)
!12272 = !DILocation(line: 3759, column: 180, scope: !12261)
!12273 = !DILocation(line: 3759, column: 111, scope: !12261)
!12274 = !DILocation(line: 3759, column: 199, scope: !12087)
!12275 = !DILocation(line: 3759, column: 199, scope: !1797)
!12276 = !DILocation(line: 3759, column: 199, scope: !12277)
!12277 = !DILexicalBlockFile(scope: !1797, file: !368, discriminator: 5)
!12278 = !DILocation(line: 3760, column: 12, scope: !1755)
!12279 = !DILocation(line: 3760, column: 5, scope: !1755)
!12280 = !DILocation(line: 3761, column: 1, scope: !1755)
!12281 = !DILocation(line: 3486, column: 15, scope: !1745)
!12282 = !DILocation(line: 3486, column: 33, scope: !1745)
!12283 = !DILocation(line: 3486, column: 49, scope: !1745)
!12284 = !DILocation(line: 3486, column: 67, scope: !1745)
!12285 = !DILocation(line: 3486, column: 85, scope: !1745)
!12286 = !DILocation(line: 3488, column: 5, scope: !1745)
!12287 = !DILocation(line: 3488, column: 15, scope: !1745)
!12288 = !DILocation(line: 3490, column: 10, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !1745, file: !368, line: 3490, column: 9)
!12290 = !DILocation(line: 3490, column: 9, scope: !12289)
!12291 = !DILocation(line: 3490, column: 36, scope: !12289)
!12292 = !DILocation(line: 3490, column: 21, scope: !12289)
!12293 = !DILocation(line: 3490, column: 46, scope: !12289)
!12294 = !DILocation(line: 3490, column: 17, scope: !12289)
!12295 = !DILocation(line: 3490, column: 9, scope: !1745)
!12296 = !DILocation(line: 3491, column: 52, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12289, file: !368, line: 3490, column: 56)
!12298 = !DILocation(line: 3491, column: 51, scope: !12297)
!12299 = !DILocation(line: 3491, column: 14, scope: !12297)
!12300 = !DILocation(line: 3491, column: 33, scope: !12297)
!12301 = !DILocation(line: 3491, column: 15, scope: !12297)
!12302 = !DILocation(line: 3491, column: 43, scope: !12297)
!12303 = !DILocation(line: 3491, column: 11, scope: !12297)
!12304 = !DILocation(line: 3492, column: 12, scope: !12297)
!12305 = !DILocation(line: 3492, column: 9, scope: !12297)
!12306 = !DILocation(line: 3493, column: 25, scope: !12297)
!12307 = !DILocation(line: 3493, column: 30, scope: !12297)
!12308 = !DILocation(line: 3493, column: 39, scope: !12297)
!12309 = !DILocation(line: 3494, column: 16, scope: !12297)
!12310 = !DILocation(line: 3494, column: 9, scope: !12297)
!12311 = !DILocation(line: 3496, column: 9, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !1745, file: !368, line: 3496, column: 9)
!12313 = !DILocation(line: 3496, column: 14, scope: !12312)
!12314 = !DILocation(line: 3496, column: 17, scope: !12315)
!12315 = !DILexicalBlockFile(scope: !12312, file: !368, discriminator: 1)
!12316 = !DILocation(line: 3496, column: 22, scope: !12312)
!12317 = !DILocation(line: 3496, column: 45, scope: !12318)
!12318 = !DILexicalBlockFile(scope: !12312, file: !368, discriminator: 2)
!12319 = !DILocation(line: 3496, column: 51, scope: !12312)
!12320 = !DILocation(line: 3496, column: 30, scope: !12312)
!12321 = !DILocation(line: 3496, column: 28, scope: !12312)
!12322 = !DILocation(line: 3496, column: 9, scope: !1745)
!12323 = !DILocation(line: 3497, column: 12, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12312, file: !368, line: 3496, column: 59)
!12325 = !DILocation(line: 3497, column: 9, scope: !12324)
!12326 = !DILocation(line: 3498, column: 25, scope: !12324)
!12327 = !DILocation(line: 3498, column: 30, scope: !12324)
!12328 = !DILocation(line: 3498, column: 39, scope: !12324)
!12329 = !DILocation(line: 3499, column: 16, scope: !12324)
!12330 = !DILocation(line: 3499, column: 9, scope: !12324)
!12331 = !DILocation(line: 3501, column: 9, scope: !12332)
!12332 = distinct !DILexicalBlock(scope: !1745, file: !368, line: 3501, column: 9)
!12333 = !DILocation(line: 3501, column: 9, scope: !1745)
!12334 = !DILocation(line: 3502, column: 25, scope: !12335)
!12335 = distinct !DILexicalBlock(scope: !12332, file: !368, line: 3501, column: 17)
!12336 = !DILocation(line: 3502, column: 35, scope: !12335)
!12337 = !DILocation(line: 3502, column: 44, scope: !12335)
!12338 = !DILocation(line: 3503, column: 16, scope: !12335)
!12339 = !DILocation(line: 3503, column: 9, scope: !12335)
!12340 = !DILocation(line: 3506, column: 9, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !1745, file: !368, line: 3506, column: 9)
!12342 = !DILocation(line: 3506, column: 9, scope: !1745)
!12343 = !DILocation(line: 3507, column: 22, scope: !12341)
!12344 = !DILocation(line: 3508, column: 56, scope: !12341)
!12345 = !DILocation(line: 3507, column: 9, scope: !12341)
!12346 = !DILocation(line: 3510, column: 22, scope: !12341)
!12347 = !DILocation(line: 3510, column: 9, scope: !12341)
!12348 = !DILocation(line: 3512, column: 5, scope: !1745)
!12349 = !DILocation(line: 3513, column: 1, scope: !1745)
!12350 = !DILocation(line: 2963, column: 43, scope: !1888)
!12351 = !DILocation(line: 2965, column: 9, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !1888, file: !368, line: 2965, column: 9)
!12353 = !DILocation(line: 2965, column: 15, scope: !12352)
!12354 = !DILocation(line: 2965, column: 9, scope: !1888)
!12355 = !DILocation(line: 2966, column: 25, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12352, file: !368, line: 2965, column: 25)
!12357 = !DILocation(line: 2966, column: 31, scope: !12356)
!12358 = !DILocation(line: 2966, column: 43, scope: !12356)
!12359 = !DILocation(line: 2966, column: 52, scope: !12356)
!12360 = !DILocation(line: 2967, column: 16, scope: !12356)
!12361 = !DILocation(line: 2967, column: 22, scope: !12356)
!12362 = !DILocation(line: 2967, column: 9, scope: !12356)
!12363 = !DILocation(line: 2969, column: 51, scope: !1888)
!12364 = !DILocation(line: 2970, column: 5, scope: !1888)
!12365 = !DILocation(line: 2971, column: 1, scope: !1888)
!12366 = !DILocation(line: 2949, column: 43, scope: !1891)
!12367 = !DILocation(line: 2949, column: 59, scope: !1891)
!12368 = !DILocation(line: 2951, column: 9, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !1891, file: !368, line: 2951, column: 9)
!12370 = !DILocation(line: 2951, column: 12, scope: !12369)
!12371 = !DILocation(line: 2951, column: 33, scope: !12372)
!12372 = !DILexicalBlockFile(scope: !12369, file: !368, discriminator: 1)
!12373 = !DILocation(line: 2951, column: 16, scope: !12369)
!12374 = !DILocation(line: 2951, column: 9, scope: !1891)
!12375 = !DILocation(line: 2952, column: 25, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12369, file: !368, line: 2951, column: 38)
!12377 = !DILocation(line: 2952, column: 9, scope: !12376)
!12378 = !DILocation(line: 2954, column: 9, scope: !12376)
!12379 = !DILocation(line: 2956, column: 5, scope: !1891)
!12380 = !DILocation(line: 2956, column: 10, scope: !12381)
!12381 = !DILexicalBlockFile(scope: !1898, file: !368, discriminator: 1)
!12382 = !DILocation(line: 2956, column: 20, scope: !1898)
!12383 = !DILocation(line: 2956, column: 51, scope: !1898)
!12384 = !DILocation(line: 2956, column: 57, scope: !1898)
!12385 = !DILocation(line: 2956, column: 72, scope: !1901)
!12386 = !DILocation(line: 2956, column: 88, scope: !1901)
!12387 = !DILocation(line: 2956, column: 72, scope: !1898)
!12388 = !DILocation(line: 2956, column: 103, scope: !12389)
!12389 = !DILexicalBlockFile(scope: !1901, file: !368, discriminator: 2)
!12390 = !DILocation(line: 2956, column: 108, scope: !12391)
!12391 = !DILexicalBlockFile(scope: !1900, file: !368, discriminator: 4)
!12392 = !DILocation(line: 2956, column: 118, scope: !1900)
!12393 = !DILocation(line: 2956, column: 148, scope: !1900)
!12394 = !DILocation(line: 2956, column: 174, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !1900, file: !368, line: 2956, column: 171)
!12396 = !DILocation(line: 2956, column: 191, scope: !12395)
!12397 = !DILocation(line: 2956, column: 171, scope: !12395)
!12398 = !DILocation(line: 2956, column: 201, scope: !12395)
!12399 = !DILocation(line: 2956, column: 171, scope: !1900)
!12400 = !DILocation(line: 2956, column: 171, scope: !12401)
!12401 = !DILexicalBlockFile(scope: !1900, file: !368, discriminator: 5)
!12402 = !DILocation(line: 2956, column: 232, scope: !12403)
!12403 = !DILexicalBlockFile(scope: !12395, file: !368, discriminator: 6)
!12404 = !DILocation(line: 2956, column: 250, scope: !12395)
!12405 = !DILocation(line: 2956, column: 260, scope: !12395)
!12406 = !DILocation(line: 2956, column: 285, scope: !12395)
!12407 = !DILocation(line: 2956, column: 216, scope: !12395)
!12408 = !DILocation(line: 2956, column: 304, scope: !12409)
!12409 = !DILexicalBlockFile(scope: !1901, file: !368, discriminator: 7)
!12410 = !DILocation(line: 2956, column: 304, scope: !1900)
!12411 = !DILocation(line: 2956, column: 304, scope: !12412)
!12412 = !DILexicalBlockFile(scope: !1900, file: !368, discriminator: 8)
!12413 = !DILocation(line: 2956, column: 304, scope: !12414)
!12414 = !DILexicalBlockFile(scope: !1900, file: !368, discriminator: 9)
!12415 = !DILocation(line: 2956, column: 317, scope: !12416)
!12416 = !DILexicalBlockFile(scope: !12417, file: !368, discriminator: 10)
!12417 = !DILexicalBlockFile(scope: !1891, file: !368, discriminator: 3)
!12418 = !DILocation(line: 2956, column: 317, scope: !1898)
!12419 = !DILocation(line: 2957, column: 5, scope: !1891)
!12420 = !DILocation(line: 2957, column: 10, scope: !12421)
!12421 = !DILexicalBlockFile(scope: !1903, file: !368, discriminator: 1)
!12422 = !DILocation(line: 2957, column: 20, scope: !1903)
!12423 = !DILocation(line: 2957, column: 51, scope: !1903)
!12424 = !DILocation(line: 2957, column: 60, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !1903, file: !368, line: 2957, column: 60)
!12426 = !DILocation(line: 2957, column: 76, scope: !12425)
!12427 = !DILocation(line: 2957, column: 60, scope: !1903)
!12428 = !DILocation(line: 2957, column: 107, scope: !12429)
!12429 = !DILexicalBlockFile(scope: !12425, file: !368, discriminator: 2)
!12430 = !DILocation(line: 2957, column: 126, scope: !12425)
!12431 = !DILocation(line: 2957, column: 135, scope: !12425)
!12432 = !DILocation(line: 2957, column: 91, scope: !12425)
!12433 = !DILocation(line: 2957, column: 140, scope: !12434)
!12434 = !DILexicalBlockFile(scope: !12417, file: !368, discriminator: 4)
!12435 = !DILocation(line: 2957, column: 140, scope: !1903)
!12436 = !DILocation(line: 2958, column: 22, scope: !1891)
!12437 = !DILocation(line: 2958, column: 5, scope: !1891)
!12438 = !DILocation(line: 2958, column: 11, scope: !1891)
!12439 = !DILocation(line: 2958, column: 20, scope: !1891)
!12440 = !DILocation(line: 2959, column: 5, scope: !1891)
!12441 = !DILocation(line: 2960, column: 1, scope: !1891)
!12442 = !DILocation(line: 2997, column: 42, scope: !1904)
!12443 = !DILocation(line: 2999, column: 5, scope: !1904)
!12444 = !DILocation(line: 2999, column: 20, scope: !1904)
!12445 = !DILocation(line: 3000, column: 9, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !1904, file: !368, line: 3000, column: 9)
!12447 = !DILocation(line: 3000, column: 15, scope: !12446)
!12448 = !DILocation(line: 3000, column: 9, scope: !1904)
!12449 = !DILocation(line: 3001, column: 25, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12446, file: !368, line: 3000, column: 24)
!12451 = !DILocation(line: 3001, column: 31, scope: !12450)
!12452 = !DILocation(line: 3001, column: 42, scope: !12450)
!12453 = !DILocation(line: 3001, column: 51, scope: !12450)
!12454 = !DILocation(line: 3002, column: 16, scope: !12450)
!12455 = !DILocation(line: 3002, column: 22, scope: !12450)
!12456 = !DILocation(line: 3002, column: 9, scope: !12450)
!12457 = !DILocation(line: 3004, column: 41, scope: !1904)
!12458 = !DILocation(line: 3004, column: 29, scope: !1904)
!12459 = !DILocation(line: 3004, column: 12, scope: !1904)
!12460 = !DILocation(line: 3004, column: 10, scope: !1904)
!12461 = !DILocation(line: 3006, column: 9, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !1904, file: !368, line: 3006, column: 9)
!12463 = !DILocation(line: 3006, column: 15, scope: !12462)
!12464 = !DILocation(line: 3006, column: 9, scope: !1904)
!12465 = !DILocation(line: 3007, column: 25, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12462, file: !368, line: 3006, column: 24)
!12467 = !DILocation(line: 3007, column: 31, scope: !12466)
!12468 = !DILocation(line: 3007, column: 42, scope: !12466)
!12469 = !DILocation(line: 3007, column: 51, scope: !12466)
!12470 = !DILocation(line: 3008, column: 16, scope: !12466)
!12471 = !DILocation(line: 3008, column: 22, scope: !12466)
!12472 = !DILocation(line: 3008, column: 9, scope: !12466)
!12473 = !DILocation(line: 3010, column: 55, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12462, file: !368, line: 3009, column: 12)
!12475 = !DILocation(line: 3011, column: 9, scope: !12474)
!12476 = !DILocation(line: 3013, column: 1, scope: !1904)
!12477 = !DILocation(line: 2974, column: 42, scope: !1908)
!12478 = !DILocation(line: 2974, column: 58, scope: !1908)
!12479 = !DILocation(line: 2976, column: 9, scope: !1915)
!12480 = !DILocation(line: 2976, column: 12, scope: !1915)
!12481 = !DILocation(line: 2976, column: 9, scope: !1908)
!12482 = !DILocation(line: 2977, column: 9, scope: !1914)
!12483 = !DILocation(line: 2977, column: 14, scope: !12484)
!12484 = !DILexicalBlockFile(scope: !1913, file: !368, discriminator: 1)
!12485 = !DILocation(line: 2977, column: 24, scope: !1913)
!12486 = !DILocation(line: 2977, column: 47, scope: !1913)
!12487 = !DILocation(line: 2977, column: 53, scope: !1913)
!12488 = !DILocation(line: 2977, column: 67, scope: !1919)
!12489 = !DILocation(line: 2977, column: 75, scope: !1919)
!12490 = !DILocation(line: 2977, column: 67, scope: !1913)
!12491 = !DILocation(line: 2977, column: 93, scope: !12492)
!12492 = !DILexicalBlockFile(scope: !1918, file: !368, discriminator: 2)
!12493 = !DILocation(line: 2977, column: 99, scope: !1918)
!12494 = !DILocation(line: 2977, column: 108, scope: !1918)
!12495 = !DILocation(line: 2977, column: 122, scope: !1918)
!12496 = !DILocation(line: 2977, column: 127, scope: !12497)
!12497 = !DILexicalBlockFile(scope: !1917, file: !368, discriminator: 4)
!12498 = !DILocation(line: 2977, column: 137, scope: !1917)
!12499 = !DILocation(line: 2977, column: 167, scope: !1917)
!12500 = !DILocation(line: 2977, column: 185, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !1917, file: !368, line: 2977, column: 182)
!12502 = !DILocation(line: 2977, column: 202, scope: !12501)
!12503 = !DILocation(line: 2977, column: 182, scope: !12501)
!12504 = !DILocation(line: 2977, column: 212, scope: !12501)
!12505 = !DILocation(line: 2977, column: 182, scope: !1917)
!12506 = !DILocation(line: 2977, column: 182, scope: !12507)
!12507 = !DILexicalBlockFile(scope: !1917, file: !368, discriminator: 5)
!12508 = !DILocation(line: 2977, column: 243, scope: !12509)
!12509 = !DILexicalBlockFile(scope: !12501, file: !368, discriminator: 6)
!12510 = !DILocation(line: 2977, column: 261, scope: !12501)
!12511 = !DILocation(line: 2977, column: 271, scope: !12501)
!12512 = !DILocation(line: 2977, column: 296, scope: !12501)
!12513 = !DILocation(line: 2977, column: 227, scope: !12501)
!12514 = !DILocation(line: 2977, column: 315, scope: !12515)
!12515 = !DILexicalBlockFile(scope: !1918, file: !368, discriminator: 7)
!12516 = !DILocation(line: 2977, column: 315, scope: !1917)
!12517 = !DILocation(line: 2977, column: 315, scope: !12518)
!12518 = !DILexicalBlockFile(scope: !1917, file: !368, discriminator: 8)
!12519 = !DILocation(line: 2977, column: 328, scope: !12520)
!12520 = !DILexicalBlockFile(scope: !1918, file: !368, discriminator: 9)
!12521 = !DILocation(line: 2977, column: 330, scope: !12522)
!12522 = !DILexicalBlockFile(scope: !12523, file: !368, discriminator: 10)
!12523 = !DILexicalBlockFile(scope: !1914, file: !368, discriminator: 3)
!12524 = !DILocation(line: 2977, column: 330, scope: !1913)
!12525 = !DILocation(line: 2978, column: 9, scope: !1914)
!12526 = !DILocation(line: 2978, column: 14, scope: !12527)
!12527 = !DILexicalBlockFile(scope: !1921, file: !368, discriminator: 1)
!12528 = !DILocation(line: 2978, column: 24, scope: !1921)
!12529 = !DILocation(line: 2978, column: 47, scope: !1921)
!12530 = !DILocation(line: 2978, column: 53, scope: !1921)
!12531 = !DILocation(line: 2978, column: 67, scope: !1925)
!12532 = !DILocation(line: 2978, column: 75, scope: !1925)
!12533 = !DILocation(line: 2978, column: 67, scope: !1921)
!12534 = !DILocation(line: 2978, column: 93, scope: !12535)
!12535 = !DILexicalBlockFile(scope: !1924, file: !368, discriminator: 2)
!12536 = !DILocation(line: 2978, column: 99, scope: !1924)
!12537 = !DILocation(line: 2978, column: 108, scope: !1924)
!12538 = !DILocation(line: 2978, column: 122, scope: !1924)
!12539 = !DILocation(line: 2978, column: 127, scope: !12540)
!12540 = !DILexicalBlockFile(scope: !1923, file: !368, discriminator: 4)
!12541 = !DILocation(line: 2978, column: 137, scope: !1923)
!12542 = !DILocation(line: 2978, column: 167, scope: !1923)
!12543 = !DILocation(line: 2978, column: 185, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !1923, file: !368, line: 2978, column: 182)
!12545 = !DILocation(line: 2978, column: 202, scope: !12544)
!12546 = !DILocation(line: 2978, column: 182, scope: !12544)
!12547 = !DILocation(line: 2978, column: 212, scope: !12544)
!12548 = !DILocation(line: 2978, column: 182, scope: !1923)
!12549 = !DILocation(line: 2978, column: 182, scope: !12550)
!12550 = !DILexicalBlockFile(scope: !1923, file: !368, discriminator: 5)
!12551 = !DILocation(line: 2978, column: 243, scope: !12552)
!12552 = !DILexicalBlockFile(scope: !12544, file: !368, discriminator: 6)
!12553 = !DILocation(line: 2978, column: 261, scope: !12544)
!12554 = !DILocation(line: 2978, column: 271, scope: !12544)
!12555 = !DILocation(line: 2978, column: 296, scope: !12544)
!12556 = !DILocation(line: 2978, column: 227, scope: !12544)
!12557 = !DILocation(line: 2978, column: 315, scope: !12558)
!12558 = !DILexicalBlockFile(scope: !1924, file: !368, discriminator: 7)
!12559 = !DILocation(line: 2978, column: 315, scope: !1923)
!12560 = !DILocation(line: 2978, column: 315, scope: !12561)
!12561 = !DILexicalBlockFile(scope: !1923, file: !368, discriminator: 8)
!12562 = !DILocation(line: 2978, column: 328, scope: !12563)
!12563 = !DILexicalBlockFile(scope: !1924, file: !368, discriminator: 9)
!12564 = !DILocation(line: 2978, column: 330, scope: !12522)
!12565 = !DILocation(line: 2978, column: 330, scope: !1921)
!12566 = !DILocation(line: 2979, column: 9, scope: !1914)
!12567 = !DILocation(line: 2981, column: 9, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !1908, file: !368, line: 2981, column: 9)
!12569 = !DILocation(line: 2981, column: 12, scope: !12568)
!12570 = !DILocation(line: 2981, column: 33, scope: !12568)
!12571 = !DILocation(line: 2981, column: 52, scope: !12572)
!12572 = !DILexicalBlockFile(scope: !12568, file: !368, discriminator: 1)
!12573 = !DILocation(line: 2981, column: 37, scope: !12568)
!12574 = !DILocation(line: 2981, column: 56, scope: !12568)
!12575 = !DILocation(line: 2981, column: 77, scope: !12576)
!12576 = !DILexicalBlockFile(scope: !12568, file: !368, discriminator: 2)
!12577 = !DILocation(line: 2981, column: 60, scope: !12568)
!12578 = !DILocation(line: 2981, column: 9, scope: !1908)
!12579 = !DILocation(line: 2982, column: 25, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12568, file: !368, line: 2981, column: 82)
!12581 = !DILocation(line: 2982, column: 9, scope: !12580)
!12582 = !DILocation(line: 2984, column: 9, scope: !12580)
!12583 = !DILocation(line: 2986, column: 5, scope: !1908)
!12584 = !DILocation(line: 2986, column: 10, scope: !12585)
!12585 = !DILexicalBlockFile(scope: !1927, file: !368, discriminator: 1)
!12586 = !DILocation(line: 2986, column: 20, scope: !1927)
!12587 = !DILocation(line: 2986, column: 51, scope: !1927)
!12588 = !DILocation(line: 2986, column: 57, scope: !1927)
!12589 = !DILocation(line: 2986, column: 71, scope: !1930)
!12590 = !DILocation(line: 2986, column: 87, scope: !1930)
!12591 = !DILocation(line: 2986, column: 71, scope: !1927)
!12592 = !DILocation(line: 2986, column: 102, scope: !12593)
!12593 = !DILexicalBlockFile(scope: !1930, file: !368, discriminator: 2)
!12594 = !DILocation(line: 2986, column: 107, scope: !12595)
!12595 = !DILexicalBlockFile(scope: !1929, file: !368, discriminator: 4)
!12596 = !DILocation(line: 2986, column: 117, scope: !1929)
!12597 = !DILocation(line: 2986, column: 147, scope: !1929)
!12598 = !DILocation(line: 2986, column: 173, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !1929, file: !368, line: 2986, column: 170)
!12600 = !DILocation(line: 2986, column: 190, scope: !12599)
!12601 = !DILocation(line: 2986, column: 170, scope: !12599)
!12602 = !DILocation(line: 2986, column: 200, scope: !12599)
!12603 = !DILocation(line: 2986, column: 170, scope: !1929)
!12604 = !DILocation(line: 2986, column: 170, scope: !12605)
!12605 = !DILexicalBlockFile(scope: !1929, file: !368, discriminator: 5)
!12606 = !DILocation(line: 2986, column: 231, scope: !12607)
!12607 = !DILexicalBlockFile(scope: !12599, file: !368, discriminator: 6)
!12608 = !DILocation(line: 2986, column: 249, scope: !12599)
!12609 = !DILocation(line: 2986, column: 259, scope: !12599)
!12610 = !DILocation(line: 2986, column: 284, scope: !12599)
!12611 = !DILocation(line: 2986, column: 215, scope: !12599)
!12612 = !DILocation(line: 2986, column: 303, scope: !12613)
!12613 = !DILexicalBlockFile(scope: !1930, file: !368, discriminator: 7)
!12614 = !DILocation(line: 2986, column: 303, scope: !1929)
!12615 = !DILocation(line: 2986, column: 303, scope: !12616)
!12616 = !DILexicalBlockFile(scope: !1929, file: !368, discriminator: 8)
!12617 = !DILocation(line: 2986, column: 303, scope: !12618)
!12618 = !DILexicalBlockFile(scope: !1929, file: !368, discriminator: 9)
!12619 = !DILocation(line: 2986, column: 316, scope: !12620)
!12620 = !DILexicalBlockFile(scope: !12621, file: !368, discriminator: 10)
!12621 = !DILexicalBlockFile(scope: !1908, file: !368, discriminator: 3)
!12622 = !DILocation(line: 2986, column: 316, scope: !1927)
!12623 = !DILocation(line: 2987, column: 5, scope: !1908)
!12624 = !DILocation(line: 2987, column: 10, scope: !12625)
!12625 = !DILexicalBlockFile(scope: !1932, file: !368, discriminator: 1)
!12626 = !DILocation(line: 2987, column: 20, scope: !1932)
!12627 = !DILocation(line: 2987, column: 51, scope: !1932)
!12628 = !DILocation(line: 2987, column: 57, scope: !1932)
!12629 = !DILocation(line: 2987, column: 71, scope: !1935)
!12630 = !DILocation(line: 2987, column: 87, scope: !1935)
!12631 = !DILocation(line: 2987, column: 71, scope: !1932)
!12632 = !DILocation(line: 2987, column: 102, scope: !12633)
!12633 = !DILexicalBlockFile(scope: !1935, file: !368, discriminator: 2)
!12634 = !DILocation(line: 2987, column: 107, scope: !12635)
!12635 = !DILexicalBlockFile(scope: !1934, file: !368, discriminator: 4)
!12636 = !DILocation(line: 2987, column: 117, scope: !1934)
!12637 = !DILocation(line: 2987, column: 147, scope: !1934)
!12638 = !DILocation(line: 2987, column: 173, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !1934, file: !368, line: 2987, column: 170)
!12640 = !DILocation(line: 2987, column: 190, scope: !12639)
!12641 = !DILocation(line: 2987, column: 170, scope: !12639)
!12642 = !DILocation(line: 2987, column: 200, scope: !12639)
!12643 = !DILocation(line: 2987, column: 170, scope: !1934)
!12644 = !DILocation(line: 2987, column: 170, scope: !12645)
!12645 = !DILexicalBlockFile(scope: !1934, file: !368, discriminator: 5)
!12646 = !DILocation(line: 2987, column: 231, scope: !12647)
!12647 = !DILexicalBlockFile(scope: !12639, file: !368, discriminator: 6)
!12648 = !DILocation(line: 2987, column: 249, scope: !12639)
!12649 = !DILocation(line: 2987, column: 259, scope: !12639)
!12650 = !DILocation(line: 2987, column: 284, scope: !12639)
!12651 = !DILocation(line: 2987, column: 215, scope: !12639)
!12652 = !DILocation(line: 2987, column: 303, scope: !12653)
!12653 = !DILexicalBlockFile(scope: !1935, file: !368, discriminator: 7)
!12654 = !DILocation(line: 2987, column: 303, scope: !1934)
!12655 = !DILocation(line: 2987, column: 303, scope: !12656)
!12656 = !DILexicalBlockFile(scope: !1934, file: !368, discriminator: 8)
!12657 = !DILocation(line: 2987, column: 303, scope: !12658)
!12658 = !DILexicalBlockFile(scope: !1934, file: !368, discriminator: 9)
!12659 = !DILocation(line: 2987, column: 316, scope: !12620)
!12660 = !DILocation(line: 2987, column: 316, scope: !1932)
!12661 = !DILocation(line: 2988, column: 21, scope: !1908)
!12662 = !DILocation(line: 2988, column: 27, scope: !1908)
!12663 = !DILocation(line: 2988, column: 36, scope: !1908)
!12664 = !DILocation(line: 2989, column: 21, scope: !1908)
!12665 = !DILocation(line: 2989, column: 5, scope: !1908)
!12666 = !DILocation(line: 2989, column: 11, scope: !1908)
!12667 = !DILocation(line: 2989, column: 19, scope: !1908)
!12668 = !DILocation(line: 2990, column: 44, scope: !1908)
!12669 = !DILocation(line: 2990, column: 21, scope: !1908)
!12670 = !DILocation(line: 2990, column: 5, scope: !1908)
!12671 = !DILocation(line: 2990, column: 11, scope: !1908)
!12672 = !DILocation(line: 2990, column: 19, scope: !1908)
!12673 = !DILocation(line: 2991, column: 9, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !1908, file: !368, line: 2991, column: 9)
!12675 = !DILocation(line: 2991, column: 15, scope: !12674)
!12676 = !DILocation(line: 2991, column: 23, scope: !12674)
!12677 = !DILocation(line: 2991, column: 9, scope: !1908)
!12678 = !DILocation(line: 2992, column: 9, scope: !12674)
!12679 = !DILocation(line: 2993, column: 5, scope: !1908)
!12680 = !DILocation(line: 2994, column: 1, scope: !1908)
!12681 = !DILocation(line: 3037, column: 43, scope: !1936)
!12682 = !DILocation(line: 3039, column: 5, scope: !1936)
!12683 = !DILocation(line: 3039, column: 20, scope: !1936)
!12684 = !DILocation(line: 3040, column: 9, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !1936, file: !368, line: 3040, column: 9)
!12686 = !DILocation(line: 3040, column: 15, scope: !12685)
!12687 = !DILocation(line: 3040, column: 9, scope: !1936)
!12688 = !DILocation(line: 3041, column: 25, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12685, file: !368, line: 3040, column: 25)
!12690 = !DILocation(line: 3041, column: 31, scope: !12689)
!12691 = !DILocation(line: 3041, column: 43, scope: !12689)
!12692 = !DILocation(line: 3041, column: 52, scope: !12689)
!12693 = !DILocation(line: 3042, column: 16, scope: !12689)
!12694 = !DILocation(line: 3042, column: 22, scope: !12689)
!12695 = !DILocation(line: 3042, column: 9, scope: !12689)
!12696 = !DILocation(line: 3044, column: 41, scope: !1936)
!12697 = !DILocation(line: 3044, column: 29, scope: !1936)
!12698 = !DILocation(line: 3044, column: 12, scope: !1936)
!12699 = !DILocation(line: 3044, column: 10, scope: !1936)
!12700 = !DILocation(line: 3046, column: 9, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !1936, file: !368, line: 3046, column: 9)
!12702 = !DILocation(line: 3046, column: 15, scope: !12701)
!12703 = !DILocation(line: 3046, column: 9, scope: !1936)
!12704 = !DILocation(line: 3047, column: 25, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12701, file: !368, line: 3046, column: 25)
!12706 = !DILocation(line: 3047, column: 31, scope: !12705)
!12707 = !DILocation(line: 3047, column: 43, scope: !12705)
!12708 = !DILocation(line: 3047, column: 52, scope: !12705)
!12709 = !DILocation(line: 3048, column: 16, scope: !12705)
!12710 = !DILocation(line: 3048, column: 22, scope: !12705)
!12711 = !DILocation(line: 3048, column: 9, scope: !12705)
!12712 = !DILocation(line: 3050, column: 55, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12701, file: !368, line: 3049, column: 12)
!12714 = !DILocation(line: 3051, column: 9, scope: !12713)
!12715 = !DILocation(line: 3053, column: 1, scope: !1936)
!12716 = !DILocation(line: 3016, column: 43, scope: !1940)
!12717 = !DILocation(line: 3016, column: 59, scope: !1940)
!12718 = !DILocation(line: 3018, column: 5, scope: !1940)
!12719 = !DILocation(line: 3018, column: 15, scope: !1940)
!12720 = !DILocation(line: 3020, column: 9, scope: !1948)
!12721 = !DILocation(line: 3020, column: 12, scope: !1948)
!12722 = !DILocation(line: 3020, column: 26, scope: !1948)
!12723 = !DILocation(line: 3020, column: 29, scope: !12724)
!12724 = !DILexicalBlockFile(scope: !1948, file: !368, discriminator: 1)
!12725 = !DILocation(line: 3020, column: 32, scope: !1948)
!12726 = !DILocation(line: 3020, column: 9, scope: !1940)
!12727 = !DILocation(line: 3021, column: 9, scope: !1947)
!12728 = !DILocation(line: 3021, column: 14, scope: !12729)
!12729 = !DILexicalBlockFile(scope: !1946, file: !368, discriminator: 1)
!12730 = !DILocation(line: 3021, column: 24, scope: !1946)
!12731 = !DILocation(line: 3021, column: 47, scope: !1946)
!12732 = !DILocation(line: 3021, column: 53, scope: !1946)
!12733 = !DILocation(line: 3021, column: 70, scope: !1952)
!12734 = !DILocation(line: 3021, column: 78, scope: !1952)
!12735 = !DILocation(line: 3021, column: 70, scope: !1946)
!12736 = !DILocation(line: 3021, column: 96, scope: !12737)
!12737 = !DILexicalBlockFile(scope: !1951, file: !368, discriminator: 2)
!12738 = !DILocation(line: 3021, column: 102, scope: !1951)
!12739 = !DILocation(line: 3021, column: 114, scope: !1951)
!12740 = !DILocation(line: 3021, column: 128, scope: !1951)
!12741 = !DILocation(line: 3021, column: 133, scope: !12742)
!12742 = !DILexicalBlockFile(scope: !1950, file: !368, discriminator: 4)
!12743 = !DILocation(line: 3021, column: 143, scope: !1950)
!12744 = !DILocation(line: 3021, column: 173, scope: !1950)
!12745 = !DILocation(line: 3021, column: 191, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !1950, file: !368, line: 3021, column: 188)
!12747 = !DILocation(line: 3021, column: 208, scope: !12746)
!12748 = !DILocation(line: 3021, column: 188, scope: !12746)
!12749 = !DILocation(line: 3021, column: 218, scope: !12746)
!12750 = !DILocation(line: 3021, column: 188, scope: !1950)
!12751 = !DILocation(line: 3021, column: 188, scope: !12752)
!12752 = !DILexicalBlockFile(scope: !1950, file: !368, discriminator: 5)
!12753 = !DILocation(line: 3021, column: 249, scope: !12754)
!12754 = !DILexicalBlockFile(scope: !12746, file: !368, discriminator: 6)
!12755 = !DILocation(line: 3021, column: 267, scope: !12746)
!12756 = !DILocation(line: 3021, column: 277, scope: !12746)
!12757 = !DILocation(line: 3021, column: 302, scope: !12746)
!12758 = !DILocation(line: 3021, column: 233, scope: !12746)
!12759 = !DILocation(line: 3021, column: 321, scope: !12760)
!12760 = !DILexicalBlockFile(scope: !1951, file: !368, discriminator: 7)
!12761 = !DILocation(line: 3021, column: 321, scope: !1950)
!12762 = !DILocation(line: 3021, column: 321, scope: !12763)
!12763 = !DILexicalBlockFile(scope: !1950, file: !368, discriminator: 8)
!12764 = !DILocation(line: 3021, column: 334, scope: !12765)
!12765 = !DILexicalBlockFile(scope: !1951, file: !368, discriminator: 9)
!12766 = !DILocation(line: 3021, column: 336, scope: !12767)
!12767 = !DILexicalBlockFile(scope: !12768, file: !368, discriminator: 10)
!12768 = !DILexicalBlockFile(scope: !1947, file: !368, discriminator: 3)
!12769 = !DILocation(line: 3021, column: 336, scope: !1946)
!12770 = !DILocation(line: 3021, column: 336, scope: !12771)
!12771 = !DILexicalBlockFile(scope: !1946, file: !368, discriminator: 11)
!12772 = !DILocation(line: 3022, column: 9, scope: !1947)
!12773 = !DILocation(line: 3022, column: 14, scope: !12774)
!12774 = !DILexicalBlockFile(scope: !1954, file: !368, discriminator: 1)
!12775 = !DILocation(line: 3022, column: 24, scope: !1954)
!12776 = !DILocation(line: 3022, column: 47, scope: !1954)
!12777 = !DILocation(line: 3022, column: 53, scope: !1954)
!12778 = !DILocation(line: 3022, column: 68, scope: !1958)
!12779 = !DILocation(line: 3022, column: 76, scope: !1958)
!12780 = !DILocation(line: 3022, column: 68, scope: !1954)
!12781 = !DILocation(line: 3022, column: 94, scope: !12782)
!12782 = !DILexicalBlockFile(scope: !1957, file: !368, discriminator: 2)
!12783 = !DILocation(line: 3022, column: 100, scope: !1957)
!12784 = !DILocation(line: 3022, column: 110, scope: !1957)
!12785 = !DILocation(line: 3022, column: 124, scope: !1957)
!12786 = !DILocation(line: 3022, column: 129, scope: !12787)
!12787 = !DILexicalBlockFile(scope: !1956, file: !368, discriminator: 4)
!12788 = !DILocation(line: 3022, column: 139, scope: !1956)
!12789 = !DILocation(line: 3022, column: 169, scope: !1956)
!12790 = !DILocation(line: 3022, column: 187, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !1956, file: !368, line: 3022, column: 184)
!12792 = !DILocation(line: 3022, column: 204, scope: !12791)
!12793 = !DILocation(line: 3022, column: 184, scope: !12791)
!12794 = !DILocation(line: 3022, column: 214, scope: !12791)
!12795 = !DILocation(line: 3022, column: 184, scope: !1956)
!12796 = !DILocation(line: 3022, column: 184, scope: !12797)
!12797 = !DILexicalBlockFile(scope: !1956, file: !368, discriminator: 5)
!12798 = !DILocation(line: 3022, column: 245, scope: !12799)
!12799 = !DILexicalBlockFile(scope: !12791, file: !368, discriminator: 6)
!12800 = !DILocation(line: 3022, column: 263, scope: !12791)
!12801 = !DILocation(line: 3022, column: 273, scope: !12791)
!12802 = !DILocation(line: 3022, column: 298, scope: !12791)
!12803 = !DILocation(line: 3022, column: 229, scope: !12791)
!12804 = !DILocation(line: 3022, column: 317, scope: !12805)
!12805 = !DILexicalBlockFile(scope: !1957, file: !368, discriminator: 7)
!12806 = !DILocation(line: 3022, column: 317, scope: !1956)
!12807 = !DILocation(line: 3022, column: 317, scope: !12808)
!12808 = !DILexicalBlockFile(scope: !1956, file: !368, discriminator: 8)
!12809 = !DILocation(line: 3022, column: 330, scope: !12810)
!12810 = !DILexicalBlockFile(scope: !1957, file: !368, discriminator: 9)
!12811 = !DILocation(line: 3022, column: 332, scope: !12767)
!12812 = !DILocation(line: 3022, column: 332, scope: !1954)
!12813 = !DILocation(line: 3022, column: 332, scope: !12814)
!12814 = !DILexicalBlockFile(scope: !1954, file: !368, discriminator: 11)
!12815 = !DILocation(line: 3023, column: 5, scope: !1947)
!12816 = !DILocation(line: 3024, column: 47, scope: !1961)
!12817 = !DILocation(line: 3024, column: 22, scope: !1961)
!12818 = !DILocation(line: 3024, column: 20, scope: !1961)
!12819 = !DILocation(line: 3025, column: 14, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !1961, file: !368, line: 3025, column: 13)
!12821 = !DILocation(line: 3025, column: 13, scope: !1961)
!12822 = !DILocation(line: 3026, column: 13, scope: !12820)
!12823 = !DILocation(line: 3027, column: 9, scope: !1961)
!12824 = !DILocation(line: 3027, column: 14, scope: !12825)
!12825 = !DILexicalBlockFile(scope: !1960, file: !368, discriminator: 1)
!12826 = !DILocation(line: 3027, column: 24, scope: !1960)
!12827 = !DILocation(line: 3027, column: 55, scope: !1960)
!12828 = !DILocation(line: 3027, column: 61, scope: !1960)
!12829 = !DILocation(line: 3027, column: 78, scope: !1964)
!12830 = !DILocation(line: 3027, column: 94, scope: !1964)
!12831 = !DILocation(line: 3027, column: 78, scope: !1960)
!12832 = !DILocation(line: 3027, column: 109, scope: !12833)
!12833 = !DILexicalBlockFile(scope: !1964, file: !368, discriminator: 2)
!12834 = !DILocation(line: 3027, column: 114, scope: !12835)
!12835 = !DILexicalBlockFile(scope: !1963, file: !368, discriminator: 4)
!12836 = !DILocation(line: 3027, column: 124, scope: !1963)
!12837 = !DILocation(line: 3027, column: 154, scope: !1963)
!12838 = !DILocation(line: 3027, column: 180, scope: !12839)
!12839 = distinct !DILexicalBlock(scope: !1963, file: !368, line: 3027, column: 177)
!12840 = !DILocation(line: 3027, column: 197, scope: !12839)
!12841 = !DILocation(line: 3027, column: 177, scope: !12839)
!12842 = !DILocation(line: 3027, column: 207, scope: !12839)
!12843 = !DILocation(line: 3027, column: 177, scope: !1963)
!12844 = !DILocation(line: 3027, column: 177, scope: !12845)
!12845 = !DILexicalBlockFile(scope: !1963, file: !368, discriminator: 5)
!12846 = !DILocation(line: 3027, column: 238, scope: !12847)
!12847 = !DILexicalBlockFile(scope: !12839, file: !368, discriminator: 6)
!12848 = !DILocation(line: 3027, column: 256, scope: !12839)
!12849 = !DILocation(line: 3027, column: 266, scope: !12839)
!12850 = !DILocation(line: 3027, column: 291, scope: !12839)
!12851 = !DILocation(line: 3027, column: 222, scope: !12839)
!12852 = !DILocation(line: 3027, column: 310, scope: !12853)
!12853 = !DILexicalBlockFile(scope: !1964, file: !368, discriminator: 7)
!12854 = !DILocation(line: 3027, column: 310, scope: !1963)
!12855 = !DILocation(line: 3027, column: 310, scope: !12856)
!12856 = !DILexicalBlockFile(scope: !1963, file: !368, discriminator: 8)
!12857 = !DILocation(line: 3027, column: 310, scope: !12858)
!12858 = !DILexicalBlockFile(scope: !1963, file: !368, discriminator: 9)
!12859 = !DILocation(line: 3027, column: 323, scope: !12860)
!12860 = !DILexicalBlockFile(scope: !12861, file: !368, discriminator: 10)
!12861 = !DILexicalBlockFile(scope: !1961, file: !368, discriminator: 3)
!12862 = !DILocation(line: 3027, column: 323, scope: !1960)
!12863 = !DILocation(line: 3027, column: 323, scope: !12864)
!12864 = !DILexicalBlockFile(scope: !1960, file: !368, discriminator: 11)
!12865 = !DILocation(line: 3028, column: 28, scope: !1961)
!12866 = !DILocation(line: 3028, column: 9, scope: !1961)
!12867 = !DILocation(line: 3028, column: 15, scope: !1961)
!12868 = !DILocation(line: 3028, column: 26, scope: !1961)
!12869 = !DILocation(line: 3029, column: 9, scope: !1961)
!12870 = !DILocation(line: 3029, column: 14, scope: !12871)
!12871 = !DILexicalBlockFile(scope: !1966, file: !368, discriminator: 1)
!12872 = !DILocation(line: 3029, column: 24, scope: !1966)
!12873 = !DILocation(line: 3029, column: 55, scope: !1966)
!12874 = !DILocation(line: 3029, column: 61, scope: !1966)
!12875 = !DILocation(line: 3029, column: 76, scope: !1969)
!12876 = !DILocation(line: 3029, column: 92, scope: !1969)
!12877 = !DILocation(line: 3029, column: 76, scope: !1966)
!12878 = !DILocation(line: 3029, column: 107, scope: !12879)
!12879 = !DILexicalBlockFile(scope: !1969, file: !368, discriminator: 2)
!12880 = !DILocation(line: 3029, column: 112, scope: !12881)
!12881 = !DILexicalBlockFile(scope: !1968, file: !368, discriminator: 4)
!12882 = !DILocation(line: 3029, column: 122, scope: !1968)
!12883 = !DILocation(line: 3029, column: 152, scope: !1968)
!12884 = !DILocation(line: 3029, column: 178, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !1968, file: !368, line: 3029, column: 175)
!12886 = !DILocation(line: 3029, column: 195, scope: !12885)
!12887 = !DILocation(line: 3029, column: 175, scope: !12885)
!12888 = !DILocation(line: 3029, column: 205, scope: !12885)
!12889 = !DILocation(line: 3029, column: 175, scope: !1968)
!12890 = !DILocation(line: 3029, column: 175, scope: !12891)
!12891 = !DILexicalBlockFile(scope: !1968, file: !368, discriminator: 5)
!12892 = !DILocation(line: 3029, column: 236, scope: !12893)
!12893 = !DILexicalBlockFile(scope: !12885, file: !368, discriminator: 6)
!12894 = !DILocation(line: 3029, column: 254, scope: !12885)
!12895 = !DILocation(line: 3029, column: 264, scope: !12885)
!12896 = !DILocation(line: 3029, column: 289, scope: !12885)
!12897 = !DILocation(line: 3029, column: 220, scope: !12885)
!12898 = !DILocation(line: 3029, column: 308, scope: !12899)
!12899 = !DILexicalBlockFile(scope: !1969, file: !368, discriminator: 7)
!12900 = !DILocation(line: 3029, column: 308, scope: !1968)
!12901 = !DILocation(line: 3029, column: 308, scope: !12902)
!12902 = !DILexicalBlockFile(scope: !1968, file: !368, discriminator: 8)
!12903 = !DILocation(line: 3029, column: 308, scope: !12904)
!12904 = !DILexicalBlockFile(scope: !1968, file: !368, discriminator: 9)
!12905 = !DILocation(line: 3029, column: 321, scope: !12860)
!12906 = !DILocation(line: 3029, column: 321, scope: !1966)
!12907 = !DILocation(line: 3029, column: 321, scope: !12908)
!12908 = !DILexicalBlockFile(scope: !1966, file: !368, discriminator: 11)
!12909 = !DILocation(line: 3030, column: 25, scope: !1961)
!12910 = !DILocation(line: 3030, column: 31, scope: !1961)
!12911 = !DILocation(line: 3030, column: 40, scope: !1961)
!12912 = !DILocation(line: 3031, column: 26, scope: !1961)
!12913 = !DILocation(line: 3031, column: 9, scope: !1961)
!12914 = !DILocation(line: 3031, column: 15, scope: !1961)
!12915 = !DILocation(line: 3031, column: 24, scope: !1961)
!12916 = !DILocation(line: 3033, column: 5, scope: !1940)
!12917 = !DILocation(line: 3034, column: 1, scope: !1940)
!12918 = !DILocation(line: 3227, column: 34, scope: !1991)
!12919 = !DILocation(line: 3227, column: 50, scope: !1991)
!12920 = !DILocation(line: 3227, column: 66, scope: !1991)
!12921 = !DILocation(line: 3229, column: 5, scope: !1991)
!12922 = !DILocation(line: 3229, column: 11, scope: !1991)
!12923 = !DILocation(line: 3230, column: 5, scope: !1991)
!12924 = !DILocation(line: 3230, column: 12, scope: !1991)
!12925 = !DILocation(line: 3231, column: 5, scope: !1991)
!12926 = !DILocation(line: 3231, column: 15, scope: !1991)
!12927 = !DILocation(line: 3232, column: 5, scope: !1991)
!12928 = !DILocation(line: 3232, column: 15, scope: !1991)
!12929 = !DILocation(line: 3233, column: 5, scope: !1991)
!12930 = !DILocation(line: 3233, column: 15, scope: !1991)
!12931 = !DILocation(line: 3234, column: 5, scope: !1991)
!12932 = !DILocation(line: 3234, column: 23, scope: !1991)
!12933 = !DILocation(line: 3235, column: 5, scope: !1991)
!12934 = !DILocation(line: 3235, column: 11, scope: !1991)
!12935 = !DILocation(line: 3236, column: 5, scope: !1991)
!12936 = !DILocation(line: 3236, column: 15, scope: !1991)
!12937 = !DILocation(line: 3238, column: 34, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !1991, file: !368, line: 3238, column: 9)
!12939 = !DILocation(line: 3238, column: 10, scope: !12938)
!12940 = !DILocation(line: 3238, column: 9, scope: !1991)
!12941 = !DILocation(line: 3239, column: 9, scope: !12938)
!12942 = !DILocation(line: 3240, column: 9, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !1991, file: !368, line: 3240, column: 9)
!12944 = !DILocation(line: 3240, column: 20, scope: !12943)
!12945 = !DILocation(line: 3240, column: 9, scope: !1991)
!12946 = !DILocation(line: 3241, column: 20, scope: !12943)
!12947 = !DILocation(line: 3241, column: 9, scope: !12943)
!12948 = !DILocation(line: 3243, column: 31, scope: !1991)
!12949 = !DILocation(line: 3243, column: 14, scope: !1991)
!12950 = !DILocation(line: 3243, column: 12, scope: !1991)
!12951 = !DILocation(line: 3244, column: 10, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !1991, file: !368, line: 3244, column: 9)
!12953 = !DILocation(line: 3244, column: 9, scope: !1991)
!12954 = !DILocation(line: 3246, column: 9, scope: !12952)
!12955 = !DILocation(line: 3248, column: 34, scope: !2007)
!12956 = !DILocation(line: 3248, column: 10, scope: !2007)
!12957 = !DILocation(line: 3248, column: 9, scope: !1991)
!12958 = !DILocation(line: 3249, column: 9, scope: !2006)
!12959 = !DILocation(line: 3249, column: 14, scope: !12960)
!12960 = !DILexicalBlockFile(scope: !2005, file: !368, discriminator: 1)
!12961 = !DILocation(line: 3249, column: 24, scope: !2005)
!12962 = !DILocation(line: 3249, column: 54, scope: !2005)
!12963 = !DILocation(line: 3249, column: 71, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !2005, file: !368, line: 3249, column: 68)
!12965 = !DILocation(line: 3249, column: 88, scope: !12964)
!12966 = !DILocation(line: 3249, column: 68, scope: !12964)
!12967 = !DILocation(line: 3249, column: 98, scope: !12964)
!12968 = !DILocation(line: 3249, column: 68, scope: !2005)
!12969 = !DILocation(line: 3249, column: 68, scope: !12970)
!12970 = !DILexicalBlockFile(scope: !2005, file: !368, discriminator: 2)
!12971 = !DILocation(line: 3249, column: 129, scope: !12972)
!12972 = !DILexicalBlockFile(scope: !12964, file: !368, discriminator: 3)
!12973 = !DILocation(line: 3249, column: 147, scope: !12964)
!12974 = !DILocation(line: 3249, column: 157, scope: !12964)
!12975 = !DILocation(line: 3249, column: 182, scope: !12964)
!12976 = !DILocation(line: 3249, column: 113, scope: !12964)
!12977 = !DILocation(line: 3249, column: 201, scope: !12978)
!12978 = !DILexicalBlockFile(scope: !2006, file: !368, discriminator: 4)
!12979 = !DILocation(line: 3249, column: 201, scope: !2005)
!12980 = !DILocation(line: 3249, column: 201, scope: !12981)
!12981 = !DILexicalBlockFile(scope: !2005, file: !368, discriminator: 5)
!12982 = !DILocation(line: 3250, column: 9, scope: !2006)
!12983 = !DILocation(line: 3253, column: 34, scope: !1991)
!12984 = !DILocation(line: 3253, column: 11, scope: !1991)
!12985 = !DILocation(line: 3253, column: 9, scope: !1991)
!12986 = !DILocation(line: 3254, column: 10, scope: !2011)
!12987 = !DILocation(line: 3254, column: 9, scope: !1991)
!12988 = !DILocation(line: 3255, column: 9, scope: !2010)
!12989 = !DILocation(line: 3255, column: 14, scope: !12990)
!12990 = !DILexicalBlockFile(scope: !2009, file: !368, discriminator: 1)
!12991 = !DILocation(line: 3255, column: 24, scope: !2009)
!12992 = !DILocation(line: 3255, column: 54, scope: !2009)
!12993 = !DILocation(line: 3255, column: 71, scope: !12994)
!12994 = distinct !DILexicalBlock(scope: !2009, file: !368, line: 3255, column: 68)
!12995 = !DILocation(line: 3255, column: 88, scope: !12994)
!12996 = !DILocation(line: 3255, column: 68, scope: !12994)
!12997 = !DILocation(line: 3255, column: 98, scope: !12994)
!12998 = !DILocation(line: 3255, column: 68, scope: !2009)
!12999 = !DILocation(line: 3255, column: 68, scope: !13000)
!13000 = !DILexicalBlockFile(scope: !2009, file: !368, discriminator: 2)
!13001 = !DILocation(line: 3255, column: 129, scope: !13002)
!13002 = !DILexicalBlockFile(scope: !12994, file: !368, discriminator: 3)
!13003 = !DILocation(line: 3255, column: 147, scope: !12994)
!13004 = !DILocation(line: 3255, column: 157, scope: !12994)
!13005 = !DILocation(line: 3255, column: 182, scope: !12994)
!13006 = !DILocation(line: 3255, column: 113, scope: !12994)
!13007 = !DILocation(line: 3255, column: 201, scope: !13008)
!13008 = !DILexicalBlockFile(scope: !2010, file: !368, discriminator: 4)
!13009 = !DILocation(line: 3255, column: 201, scope: !2009)
!13010 = !DILocation(line: 3255, column: 201, scope: !13011)
!13011 = !DILexicalBlockFile(scope: !2009, file: !368, discriminator: 5)
!13012 = !DILocation(line: 3256, column: 9, scope: !2010)
!13013 = !DILocation(line: 3258, column: 27, scope: !2015)
!13014 = !DILocation(line: 3258, column: 34, scope: !2015)
!13015 = !DILocation(line: 3258, column: 45, scope: !2015)
!13016 = !DILocation(line: 3258, column: 54, scope: !2015)
!13017 = !DILocation(line: 3258, column: 71, scope: !2015)
!13018 = !DILocation(line: 3258, column: 9, scope: !1991)
!13019 = !DILocation(line: 3259, column: 25, scope: !2014)
!13020 = !DILocation(line: 3259, column: 9, scope: !2014)
!13021 = !DILocation(line: 3261, column: 9, scope: !2014)
!13022 = !DILocation(line: 3261, column: 14, scope: !13023)
!13023 = !DILexicalBlockFile(scope: !2013, file: !368, discriminator: 1)
!13024 = !DILocation(line: 3261, column: 24, scope: !2013)
!13025 = !DILocation(line: 3261, column: 54, scope: !2013)
!13026 = !DILocation(line: 3261, column: 71, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !2013, file: !368, line: 3261, column: 68)
!13028 = !DILocation(line: 3261, column: 88, scope: !13027)
!13029 = !DILocation(line: 3261, column: 68, scope: !13027)
!13030 = !DILocation(line: 3261, column: 98, scope: !13027)
!13031 = !DILocation(line: 3261, column: 68, scope: !2013)
!13032 = !DILocation(line: 3261, column: 68, scope: !13033)
!13033 = !DILexicalBlockFile(scope: !2013, file: !368, discriminator: 2)
!13034 = !DILocation(line: 3261, column: 129, scope: !13035)
!13035 = !DILexicalBlockFile(scope: !13027, file: !368, discriminator: 3)
!13036 = !DILocation(line: 3261, column: 147, scope: !13027)
!13037 = !DILocation(line: 3261, column: 157, scope: !13027)
!13038 = !DILocation(line: 3261, column: 182, scope: !13027)
!13039 = !DILocation(line: 3261, column: 113, scope: !13027)
!13040 = !DILocation(line: 3261, column: 201, scope: !13041)
!13041 = !DILexicalBlockFile(scope: !2014, file: !368, discriminator: 4)
!13042 = !DILocation(line: 3261, column: 201, scope: !2013)
!13043 = !DILocation(line: 3261, column: 201, scope: !13044)
!13044 = !DILexicalBlockFile(scope: !2013, file: !368, discriminator: 5)
!13045 = !DILocation(line: 3262, column: 9, scope: !2014)
!13046 = !DILocation(line: 3262, column: 14, scope: !13047)
!13047 = !DILexicalBlockFile(scope: !2017, file: !368, discriminator: 1)
!13048 = !DILocation(line: 3262, column: 24, scope: !2017)
!13049 = !DILocation(line: 3262, column: 54, scope: !2017)
!13050 = !DILocation(line: 3262, column: 68, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !2017, file: !368, line: 3262, column: 65)
!13052 = !DILocation(line: 3262, column: 85, scope: !13051)
!13053 = !DILocation(line: 3262, column: 65, scope: !13051)
!13054 = !DILocation(line: 3262, column: 95, scope: !13051)
!13055 = !DILocation(line: 3262, column: 65, scope: !2017)
!13056 = !DILocation(line: 3262, column: 65, scope: !13057)
!13057 = !DILexicalBlockFile(scope: !2017, file: !368, discriminator: 2)
!13058 = !DILocation(line: 3262, column: 126, scope: !13059)
!13059 = !DILexicalBlockFile(scope: !13051, file: !368, discriminator: 3)
!13060 = !DILocation(line: 3262, column: 144, scope: !13051)
!13061 = !DILocation(line: 3262, column: 154, scope: !13051)
!13062 = !DILocation(line: 3262, column: 179, scope: !13051)
!13063 = !DILocation(line: 3262, column: 110, scope: !13051)
!13064 = !DILocation(line: 3262, column: 198, scope: !13041)
!13065 = !DILocation(line: 3262, column: 198, scope: !2017)
!13066 = !DILocation(line: 3262, column: 198, scope: !13067)
!13067 = !DILexicalBlockFile(scope: !2017, file: !368, discriminator: 5)
!13068 = !DILocation(line: 3263, column: 9, scope: !2014)
!13069 = !DILocation(line: 3265, column: 39, scope: !1991)
!13070 = !DILocation(line: 3265, column: 22, scope: !1991)
!13071 = !DILocation(line: 3265, column: 12, scope: !1991)
!13072 = !DILocation(line: 3266, column: 5, scope: !1991)
!13073 = !DILocation(line: 3266, column: 10, scope: !13074)
!13074 = !DILexicalBlockFile(scope: !2019, file: !368, discriminator: 1)
!13075 = !DILocation(line: 3266, column: 20, scope: !2019)
!13076 = !DILocation(line: 3266, column: 50, scope: !2019)
!13077 = !DILocation(line: 3266, column: 64, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !2019, file: !368, line: 3266, column: 61)
!13079 = !DILocation(line: 3266, column: 81, scope: !13078)
!13080 = !DILocation(line: 3266, column: 61, scope: !13078)
!13081 = !DILocation(line: 3266, column: 91, scope: !13078)
!13082 = !DILocation(line: 3266, column: 61, scope: !2019)
!13083 = !DILocation(line: 3266, column: 61, scope: !13084)
!13084 = !DILexicalBlockFile(scope: !2019, file: !368, discriminator: 2)
!13085 = !DILocation(line: 3266, column: 122, scope: !13086)
!13086 = !DILexicalBlockFile(scope: !13078, file: !368, discriminator: 3)
!13087 = !DILocation(line: 3266, column: 140, scope: !13078)
!13088 = !DILocation(line: 3266, column: 150, scope: !13078)
!13089 = !DILocation(line: 3266, column: 175, scope: !13078)
!13090 = !DILocation(line: 3266, column: 106, scope: !13078)
!13091 = !DILocation(line: 3266, column: 194, scope: !13092)
!13092 = !DILexicalBlockFile(scope: !1991, file: !368, discriminator: 4)
!13093 = !DILocation(line: 3266, column: 194, scope: !2019)
!13094 = !DILocation(line: 3266, column: 194, scope: !13095)
!13095 = !DILexicalBlockFile(scope: !2019, file: !368, discriminator: 5)
!13096 = !DILocation(line: 3267, column: 9, scope: !2023)
!13097 = !DILocation(line: 3267, column: 9, scope: !1991)
!13098 = !DILocation(line: 3268, column: 25, scope: !2022)
!13099 = !DILocation(line: 3268, column: 9, scope: !2022)
!13100 = !DILocation(line: 3270, column: 9, scope: !2022)
!13101 = !DILocation(line: 3270, column: 14, scope: !13102)
!13102 = !DILexicalBlockFile(scope: !2021, file: !368, discriminator: 1)
!13103 = !DILocation(line: 3270, column: 24, scope: !2021)
!13104 = !DILocation(line: 3270, column: 54, scope: !2021)
!13105 = !DILocation(line: 3270, column: 71, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !2021, file: !368, line: 3270, column: 68)
!13107 = !DILocation(line: 3270, column: 88, scope: !13106)
!13108 = !DILocation(line: 3270, column: 68, scope: !13106)
!13109 = !DILocation(line: 3270, column: 98, scope: !13106)
!13110 = !DILocation(line: 3270, column: 68, scope: !2021)
!13111 = !DILocation(line: 3270, column: 68, scope: !13112)
!13112 = !DILexicalBlockFile(scope: !2021, file: !368, discriminator: 2)
!13113 = !DILocation(line: 3270, column: 129, scope: !13114)
!13114 = !DILexicalBlockFile(scope: !13106, file: !368, discriminator: 3)
!13115 = !DILocation(line: 3270, column: 147, scope: !13106)
!13116 = !DILocation(line: 3270, column: 157, scope: !13106)
!13117 = !DILocation(line: 3270, column: 182, scope: !13106)
!13118 = !DILocation(line: 3270, column: 113, scope: !13106)
!13119 = !DILocation(line: 3270, column: 201, scope: !13120)
!13120 = !DILexicalBlockFile(scope: !2022, file: !368, discriminator: 4)
!13121 = !DILocation(line: 3270, column: 201, scope: !2021)
!13122 = !DILocation(line: 3270, column: 201, scope: !13123)
!13123 = !DILexicalBlockFile(scope: !2021, file: !368, discriminator: 5)
!13124 = !DILocation(line: 3271, column: 9, scope: !2022)
!13125 = !DILocation(line: 3289, column: 28, scope: !1991)
!13126 = !DILocation(line: 3289, column: 36, scope: !1991)
!13127 = !DILocation(line: 3289, column: 22, scope: !1991)
!13128 = !DILocation(line: 3289, column: 15, scope: !1991)
!13129 = !DILocation(line: 3289, column: 13, scope: !1991)
!13130 = !DILocation(line: 3290, column: 10, scope: !2027)
!13131 = !DILocation(line: 3290, column: 9, scope: !1991)
!13132 = !DILocation(line: 3297, column: 25, scope: !2026)
!13133 = !DILocation(line: 3297, column: 47, scope: !2026)
!13134 = !DILocation(line: 3297, column: 9, scope: !2026)
!13135 = !DILocation(line: 3299, column: 9, scope: !2026)
!13136 = !DILocation(line: 3299, column: 14, scope: !13137)
!13137 = !DILexicalBlockFile(scope: !2025, file: !368, discriminator: 1)
!13138 = !DILocation(line: 3299, column: 24, scope: !2025)
!13139 = !DILocation(line: 3299, column: 54, scope: !2025)
!13140 = !DILocation(line: 3299, column: 71, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !2025, file: !368, line: 3299, column: 68)
!13142 = !DILocation(line: 3299, column: 88, scope: !13141)
!13143 = !DILocation(line: 3299, column: 68, scope: !13141)
!13144 = !DILocation(line: 3299, column: 98, scope: !13141)
!13145 = !DILocation(line: 3299, column: 68, scope: !2025)
!13146 = !DILocation(line: 3299, column: 68, scope: !13147)
!13147 = !DILexicalBlockFile(scope: !2025, file: !368, discriminator: 2)
!13148 = !DILocation(line: 3299, column: 129, scope: !13149)
!13149 = !DILexicalBlockFile(scope: !13141, file: !368, discriminator: 3)
!13150 = !DILocation(line: 3299, column: 147, scope: !13141)
!13151 = !DILocation(line: 3299, column: 157, scope: !13141)
!13152 = !DILocation(line: 3299, column: 182, scope: !13141)
!13153 = !DILocation(line: 3299, column: 113, scope: !13141)
!13154 = !DILocation(line: 3299, column: 201, scope: !13155)
!13155 = !DILexicalBlockFile(scope: !2026, file: !368, discriminator: 4)
!13156 = !DILocation(line: 3299, column: 201, scope: !2025)
!13157 = !DILocation(line: 3299, column: 201, scope: !13158)
!13158 = !DILexicalBlockFile(scope: !2025, file: !368, discriminator: 5)
!13159 = !DILocation(line: 3300, column: 9, scope: !2026)
!13160 = !DILocation(line: 3303, column: 21, scope: !1991)
!13161 = !DILocation(line: 3303, column: 28, scope: !1991)
!13162 = !DILocation(line: 3303, column: 37, scope: !1991)
!13163 = !DILocation(line: 3304, column: 5, scope: !1991)
!13164 = !DILocation(line: 3304, column: 10, scope: !13165)
!13165 = !DILexicalBlockFile(scope: !2029, file: !368, discriminator: 1)
!13166 = !DILocation(line: 3304, column: 20, scope: !2029)
!13167 = !DILocation(line: 3304, column: 50, scope: !2029)
!13168 = !DILocation(line: 3304, column: 67, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !2029, file: !368, line: 3304, column: 64)
!13170 = !DILocation(line: 3304, column: 84, scope: !13169)
!13171 = !DILocation(line: 3304, column: 64, scope: !13169)
!13172 = !DILocation(line: 3304, column: 94, scope: !13169)
!13173 = !DILocation(line: 3304, column: 64, scope: !2029)
!13174 = !DILocation(line: 3304, column: 64, scope: !13175)
!13175 = !DILexicalBlockFile(scope: !2029, file: !368, discriminator: 2)
!13176 = !DILocation(line: 3304, column: 125, scope: !13177)
!13177 = !DILexicalBlockFile(scope: !13169, file: !368, discriminator: 3)
!13178 = !DILocation(line: 3304, column: 143, scope: !13169)
!13179 = !DILocation(line: 3304, column: 153, scope: !13169)
!13180 = !DILocation(line: 3304, column: 178, scope: !13169)
!13181 = !DILocation(line: 3304, column: 109, scope: !13169)
!13182 = !DILocation(line: 3304, column: 197, scope: !13092)
!13183 = !DILocation(line: 3304, column: 197, scope: !2029)
!13184 = !DILocation(line: 3304, column: 197, scope: !13185)
!13185 = !DILexicalBlockFile(scope: !2029, file: !368, discriminator: 5)
!13186 = !DILocation(line: 3305, column: 31, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !1991, file: !368, line: 3305, column: 9)
!13188 = !DILocation(line: 3305, column: 37, scope: !13187)
!13189 = !DILocation(line: 3305, column: 10, scope: !13187)
!13190 = !DILocation(line: 3305, column: 9, scope: !1991)
!13191 = !DILocation(line: 3306, column: 9, scope: !13187)
!13192 = !DILocation(line: 3308, column: 51, scope: !1991)
!13193 = !DILocation(line: 3308, column: 57, scope: !1991)
!13194 = !DILocation(line: 3308, column: 63, scope: !1991)
!13195 = !DILocation(line: 3308, column: 32, scope: !1991)
!13196 = !DILocation(line: 3308, column: 12, scope: !1991)
!13197 = !DILocation(line: 3308, column: 10, scope: !1991)
!13198 = !DILocation(line: 3309, column: 10, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !1991, file: !368, line: 3309, column: 9)
!13200 = !DILocation(line: 3309, column: 9, scope: !1991)
!13201 = !DILocation(line: 3310, column: 9, scope: !13199)
!13202 = !DILocation(line: 3312, column: 5, scope: !1991)
!13203 = !DILocation(line: 3312, column: 10, scope: !13204)
!13204 = !DILexicalBlockFile(scope: !2031, file: !368, discriminator: 1)
!13205 = !DILocation(line: 3312, column: 20, scope: !2031)
!13206 = !DILocation(line: 3312, column: 51, scope: !2031)
!13207 = !DILocation(line: 3312, column: 68, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !2031, file: !368, line: 3312, column: 68)
!13209 = !DILocation(line: 3312, column: 84, scope: !13208)
!13210 = !DILocation(line: 3312, column: 68, scope: !2031)
!13211 = !DILocation(line: 3312, column: 115, scope: !13212)
!13212 = !DILexicalBlockFile(scope: !13208, file: !368, discriminator: 2)
!13213 = !DILocation(line: 3312, column: 134, scope: !13208)
!13214 = !DILocation(line: 3312, column: 143, scope: !13208)
!13215 = !DILocation(line: 3312, column: 99, scope: !13208)
!13216 = !DILocation(line: 3312, column: 148, scope: !13217)
!13217 = !DILexicalBlockFile(scope: !13218, file: !368, discriminator: 4)
!13218 = !DILexicalBlockFile(scope: !1991, file: !368, discriminator: 3)
!13219 = !DILocation(line: 3312, column: 148, scope: !2031)
!13220 = !DILocation(line: 3312, column: 148, scope: !13221)
!13221 = !DILexicalBlockFile(scope: !2031, file: !368, discriminator: 5)
!13222 = !DILocation(line: 3313, column: 24, scope: !1991)
!13223 = !DILocation(line: 3313, column: 5, scope: !1991)
!13224 = !DILocation(line: 3313, column: 11, scope: !1991)
!13225 = !DILocation(line: 3313, column: 22, scope: !1991)
!13226 = !DILocation(line: 3315, column: 29, scope: !1991)
!13227 = !DILocation(line: 3315, column: 15, scope: !1991)
!13228 = !DILocation(line: 3315, column: 21, scope: !1991)
!13229 = !DILocation(line: 3315, column: 6, scope: !1991)
!13230 = !DILocation(line: 3315, column: 27, scope: !1991)
!13231 = !DILocation(line: 3317, column: 38, scope: !2035)
!13232 = !DILocation(line: 3317, column: 23, scope: !2035)
!13233 = !DILocation(line: 3317, column: 47, scope: !2035)
!13234 = !DILocation(line: 3317, column: 15, scope: !2035)
!13235 = !DILocation(line: 3317, column: 12, scope: !2035)
!13236 = !DILocation(line: 3317, column: 9, scope: !1991)
!13237 = !DILocation(line: 3318, column: 9, scope: !2034)
!13238 = !DILocation(line: 3318, column: 14, scope: !13239)
!13239 = !DILexicalBlockFile(scope: !2033, file: !368, discriminator: 1)
!13240 = !DILocation(line: 3318, column: 24, scope: !2033)
!13241 = !DILocation(line: 3318, column: 66, scope: !2033)
!13242 = !DILocation(line: 3318, column: 54, scope: !2033)
!13243 = !DILocation(line: 3318, column: 81, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !2033, file: !368, line: 3318, column: 78)
!13245 = !DILocation(line: 3318, column: 98, scope: !13244)
!13246 = !DILocation(line: 3318, column: 78, scope: !13244)
!13247 = !DILocation(line: 3318, column: 108, scope: !13244)
!13248 = !DILocation(line: 3318, column: 78, scope: !2033)
!13249 = !DILocation(line: 3318, column: 78, scope: !13250)
!13250 = !DILexicalBlockFile(scope: !2033, file: !368, discriminator: 2)
!13251 = !DILocation(line: 3318, column: 139, scope: !13252)
!13252 = !DILexicalBlockFile(scope: !13244, file: !368, discriminator: 3)
!13253 = !DILocation(line: 3318, column: 157, scope: !13244)
!13254 = !DILocation(line: 3318, column: 167, scope: !13244)
!13255 = !DILocation(line: 3318, column: 192, scope: !13244)
!13256 = !DILocation(line: 3318, column: 123, scope: !13244)
!13257 = !DILocation(line: 3318, column: 211, scope: !13258)
!13258 = !DILexicalBlockFile(scope: !2034, file: !368, discriminator: 4)
!13259 = !DILocation(line: 3318, column: 211, scope: !2033)
!13260 = !DILocation(line: 3318, column: 211, scope: !13261)
!13261 = !DILexicalBlockFile(scope: !2033, file: !368, discriminator: 5)
!13262 = !DILocation(line: 3319, column: 9, scope: !2034)
!13263 = !DILocation(line: 3322, column: 21, scope: !1991)
!13264 = !DILocation(line: 3322, column: 8, scope: !1991)
!13265 = !DILocation(line: 3322, column: 29, scope: !1991)
!13266 = !DILocation(line: 3322, column: 38, scope: !1991)
!13267 = !DILocation(line: 3323, column: 34, scope: !1991)
!13268 = !DILocation(line: 3323, column: 22, scope: !1991)
!13269 = !DILocation(line: 3323, column: 5, scope: !1991)
!13270 = !DILocation(line: 3323, column: 11, scope: !1991)
!13271 = !DILocation(line: 3323, column: 20, scope: !1991)
!13272 = !DILocation(line: 3324, column: 24, scope: !1991)
!13273 = !DILocation(line: 3324, column: 12, scope: !1991)
!13274 = !DILocation(line: 3324, column: 5, scope: !1991)
!13275 = !DILocation(line: 3325, column: 1, scope: !1991)
!13276 = !DILocation(line: 3201, column: 21, scope: !2036)
!13277 = !DILocation(line: 3201, column: 33, scope: !2036)
!13278 = !DILocation(line: 3212, column: 26, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !2036, file: !368, line: 3212, column: 9)
!13280 = !DILocation(line: 3212, column: 33, scope: !13279)
!13281 = !DILocation(line: 3212, column: 44, scope: !13279)
!13282 = !DILocation(line: 3212, column: 53, scope: !13279)
!13283 = !DILocation(line: 3212, column: 70, scope: !13279)
!13284 = !DILocation(line: 3212, column: 9, scope: !2036)
!13285 = !DILocation(line: 3213, column: 53, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13279, file: !368, line: 3212, column: 77)
!13287 = !DILocation(line: 3213, column: 35, scope: !13286)
!13288 = !DILocation(line: 3213, column: 60, scope: !13286)
!13289 = !DILocation(line: 3213, column: 33, scope: !13286)
!13290 = !DILocation(line: 3213, column: 10, scope: !13286)
!13291 = !DILocation(line: 3213, column: 16, scope: !13286)
!13292 = !DILocation(line: 3214, column: 17, scope: !13286)
!13293 = !DILocation(line: 3214, column: 16, scope: !13286)
!13294 = !DILocation(line: 3214, column: 9, scope: !13286)
!13295 = !DILocation(line: 3216, column: 26, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !2036, file: !368, line: 3216, column: 9)
!13297 = !DILocation(line: 3216, column: 33, scope: !13296)
!13298 = !DILocation(line: 3216, column: 44, scope: !13296)
!13299 = !DILocation(line: 3216, column: 53, scope: !13296)
!13300 = !DILocation(line: 3216, column: 70, scope: !13296)
!13301 = !DILocation(line: 3216, column: 9, scope: !2036)
!13302 = !DILocation(line: 3217, column: 35, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13296, file: !368, line: 3216, column: 77)
!13304 = !DILocation(line: 3217, column: 18, scope: !13303)
!13305 = !DILocation(line: 3217, column: 10, scope: !13303)
!13306 = !DILocation(line: 3217, column: 16, scope: !13303)
!13307 = !DILocation(line: 3218, column: 17, scope: !13303)
!13308 = !DILocation(line: 3218, column: 16, scope: !13303)
!13309 = !DILocation(line: 3218, column: 9, scope: !13303)
!13310 = !DILocation(line: 3220, column: 21, scope: !2036)
!13311 = !DILocation(line: 3220, column: 5, scope: !2036)
!13312 = !DILocation(line: 3222, column: 5, scope: !2036)
!13313 = !DILocation(line: 3223, column: 1, scope: !2036)
!13314 = !DILocation(line: 3142, column: 36, scope: !2042)
!13315 = !DILocation(line: 3142, column: 52, scope: !2042)
!13316 = !DILocation(line: 3144, column: 5, scope: !2042)
!13317 = !DILocation(line: 3144, column: 16, scope: !2042)
!13318 = !DILocation(line: 3144, column: 19, scope: !2042)
!13319 = !DILocation(line: 3145, column: 5, scope: !2042)
!13320 = !DILocation(line: 3145, column: 20, scope: !2042)
!13321 = !DILocation(line: 3146, column: 5, scope: !2042)
!13322 = !DILocation(line: 3146, column: 15, scope: !2042)
!13323 = !DILocation(line: 3148, column: 39, scope: !2042)
!13324 = !DILocation(line: 3148, column: 27, scope: !2042)
!13325 = !DILocation(line: 3148, column: 12, scope: !2042)
!13326 = !DILocation(line: 3148, column: 10, scope: !2042)
!13327 = !DILocation(line: 3150, column: 16, scope: !2042)
!13328 = !DILocation(line: 3150, column: 22, scope: !2042)
!13329 = !DILocation(line: 3150, column: 14, scope: !2042)
!13330 = !DILocation(line: 3152, column: 9, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !2042, file: !368, line: 3152, column: 9)
!13332 = !DILocation(line: 3152, column: 20, scope: !13331)
!13333 = !DILocation(line: 3152, column: 34, scope: !13331)
!13334 = !DILocation(line: 3152, column: 37, scope: !13335)
!13335 = !DILexicalBlockFile(scope: !13331, file: !368, discriminator: 1)
!13336 = !DILocation(line: 3152, column: 43, scope: !13331)
!13337 = !DILocation(line: 3152, column: 52, scope: !13331)
!13338 = !DILocation(line: 3152, column: 9, scope: !2042)
!13339 = !DILocation(line: 3153, column: 9, scope: !13331)
!13340 = !DILocation(line: 3155, column: 27, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !2042, file: !368, line: 3155, column: 9)
!13342 = !DILocation(line: 3155, column: 41, scope: !13341)
!13343 = !DILocation(line: 3155, column: 52, scope: !13341)
!13344 = !DILocation(line: 3155, column: 61, scope: !13341)
!13345 = !DILocation(line: 3155, column: 78, scope: !13341)
!13346 = !DILocation(line: 3155, column: 9, scope: !2042)
!13347 = !DILocation(line: 3156, column: 25, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13341, file: !368, line: 3155, column: 85)
!13349 = !DILocation(line: 3156, column: 9, scope: !13348)
!13350 = !DILocation(line: 3158, column: 9, scope: !13348)
!13351 = !DILocation(line: 3161, column: 28, scope: !2042)
!13352 = !DILocation(line: 3161, column: 13, scope: !2042)
!13353 = !DILocation(line: 3161, column: 42, scope: !2042)
!13354 = !DILocation(line: 3161, column: 9, scope: !2042)
!13355 = !DILocation(line: 3162, column: 9, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !2042, file: !368, line: 3162, column: 9)
!13357 = !DILocation(line: 3162, column: 33, scope: !13356)
!13358 = !DILocation(line: 3162, column: 39, scope: !13356)
!13359 = !DILocation(line: 3162, column: 18, scope: !13356)
!13360 = !DILocation(line: 3162, column: 51, scope: !13356)
!13361 = !DILocation(line: 3162, column: 13, scope: !13356)
!13362 = !DILocation(line: 3162, column: 9, scope: !2042)
!13363 = !DILocation(line: 3163, column: 25, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13356, file: !368, line: 3162, column: 61)
!13365 = !DILocation(line: 3163, column: 9, scope: !13364)
!13366 = !DILocation(line: 3165, column: 9, scope: !13364)
!13367 = !DILocation(line: 3168, column: 12, scope: !2055)
!13368 = !DILocation(line: 3168, column: 10, scope: !2055)
!13369 = !DILocation(line: 3168, column: 17, scope: !13370)
!13370 = !DILexicalBlockFile(scope: !13371, file: !368, discriminator: 2)
!13371 = !DILexicalBlockFile(scope: !2054, file: !368, discriminator: 1)
!13372 = !DILocation(line: 3168, column: 21, scope: !2054)
!13373 = !DILocation(line: 3168, column: 19, scope: !2054)
!13374 = !DILocation(line: 3168, column: 5, scope: !2055)
!13375 = !DILocation(line: 3169, column: 9, scope: !2053)
!13376 = !DILocation(line: 3169, column: 19, scope: !2053)
!13377 = !DILocation(line: 3169, column: 68, scope: !2053)
!13378 = !DILocation(line: 3169, column: 46, scope: !2053)
!13379 = !DILocation(line: 3169, column: 28, scope: !2053)
!13380 = !DILocation(line: 3169, column: 60, scope: !2053)
!13381 = !DILocation(line: 3169, column: 27, scope: !2053)
!13382 = !DILocation(line: 3170, column: 9, scope: !2053)
!13383 = !DILocation(line: 3170, column: 13, scope: !2053)
!13384 = !DILocation(line: 3171, column: 9, scope: !2053)
!13385 = !DILocation(line: 3171, column: 15, scope: !2053)
!13386 = !DILocation(line: 3172, column: 9, scope: !2053)
!13387 = !DILocation(line: 3172, column: 19, scope: !2053)
!13388 = !DILocation(line: 3173, column: 9, scope: !2053)
!13389 = !DILocation(line: 3173, column: 19, scope: !2053)
!13390 = !DILocation(line: 3174, column: 38, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !2053, file: !368, line: 3174, column: 13)
!13392 = !DILocation(line: 3174, column: 14, scope: !13391)
!13393 = !DILocation(line: 3174, column: 13, scope: !2053)
!13394 = !DILocation(line: 3175, column: 29, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13391, file: !368, line: 3174, column: 76)
!13396 = !DILocation(line: 3175, column: 13, scope: !13395)
!13397 = !DILocation(line: 3177, column: 13, scope: !13395)
!13398 = !DILocation(line: 3179, column: 55, scope: !2053)
!13399 = !DILocation(line: 3179, column: 35, scope: !2053)
!13400 = !DILocation(line: 3179, column: 17, scope: !2053)
!13401 = !DILocation(line: 3179, column: 47, scope: !2053)
!13402 = !DILocation(line: 3179, column: 16, scope: !2053)
!13403 = !DILocation(line: 3179, column: 13, scope: !2053)
!13404 = !DILocation(line: 3180, column: 17, scope: !2053)
!13405 = !DILocation(line: 3180, column: 22, scope: !2053)
!13406 = !DILocation(line: 3185, column: 13, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !2053, file: !368, line: 3180, column: 43)
!13408 = !DILocation(line: 3187, column: 37, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13407, file: !368, line: 3187, column: 17)
!13410 = !DILocation(line: 3187, column: 42, scope: !13409)
!13411 = !DILocation(line: 3187, column: 43, scope: !13409)
!13412 = !DILocation(line: 3187, column: 18, scope: !13409)
!13413 = !DILocation(line: 3187, column: 17, scope: !13407)
!13414 = !DILocation(line: 3188, column: 17, scope: !13409)
!13415 = !DILocation(line: 3189, column: 13, scope: !13407)
!13416 = !DILocation(line: 3191, column: 26, scope: !13407)
!13417 = !DILocation(line: 3193, column: 26, scope: !13407)
!13418 = !DILocation(line: 3191, column: 13, scope: !13407)
!13419 = !DILocation(line: 3194, column: 13, scope: !13407)
!13420 = !DILocation(line: 3196, column: 5, scope: !2054)
!13421 = !DILocation(line: 3196, column: 5, scope: !13371)
!13422 = !DILocation(line: 3196, column: 5, scope: !2053)
!13423 = !DILocation(line: 3168, column: 26, scope: !2054)
!13424 = !DILocation(line: 3168, column: 5, scope: !2054)
!13425 = !DILocation(line: 3197, column: 5, scope: !2042)
!13426 = !DILocation(line: 3198, column: 1, scope: !2042)
!13427 = !DILocation(line: 3112, column: 30, scope: !2060)
!13428 = !DILocation(line: 3112, column: 46, scope: !2060)
!13429 = !DILocation(line: 3114, column: 5, scope: !2060)
!13430 = !DILocation(line: 3114, column: 20, scope: !2060)
!13431 = !DILocation(line: 3116, column: 24, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !2060, file: !368, line: 3116, column: 9)
!13433 = !DILocation(line: 3116, column: 31, scope: !13432)
!13434 = !DILocation(line: 3116, column: 40, scope: !13432)
!13435 = !DILocation(line: 3116, column: 66, scope: !13432)
!13436 = !DILocation(line: 3116, column: 100, scope: !13437)
!13437 = !DILexicalBlockFile(scope: !13432, file: !368, discriminator: 1)
!13438 = !DILocation(line: 3116, column: 107, scope: !13432)
!13439 = !DILocation(line: 3116, column: 69, scope: !13432)
!13440 = !DILocation(line: 3116, column: 9, scope: !2060)
!13441 = !DILocation(line: 3117, column: 9, scope: !13432)
!13442 = !DILocation(line: 3119, column: 24, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !2060, file: !368, line: 3119, column: 9)
!13444 = !DILocation(line: 3119, column: 31, scope: !13443)
!13445 = !DILocation(line: 3119, column: 40, scope: !13443)
!13446 = !DILocation(line: 3119, column: 64, scope: !13443)
!13447 = !DILocation(line: 3119, column: 98, scope: !13448)
!13448 = !DILexicalBlockFile(scope: !13443, file: !368, discriminator: 1)
!13449 = !DILocation(line: 3119, column: 105, scope: !13443)
!13450 = !DILocation(line: 3119, column: 67, scope: !13443)
!13451 = !DILocation(line: 3119, column: 9, scope: !2060)
!13452 = !DILocation(line: 3120, column: 9, scope: !13443)
!13453 = !DILocation(line: 3122, column: 27, scope: !2060)
!13454 = !DILocation(line: 3122, column: 12, scope: !2060)
!13455 = !DILocation(line: 3122, column: 10, scope: !2060)
!13456 = !DILocation(line: 3123, column: 9, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !2060, file: !368, line: 3123, column: 9)
!13458 = !DILocation(line: 3125, column: 9, scope: !13457)
!13459 = !DILocation(line: 3125, column: 29, scope: !13460)
!13460 = !DILexicalBlockFile(scope: !13457, file: !368, discriminator: 1)
!13461 = !DILocation(line: 3125, column: 35, scope: !13457)
!13462 = !DILocation(line: 3125, column: 44, scope: !13457)
!13463 = !DILocation(line: 3125, column: 55, scope: !13457)
!13464 = !DILocation(line: 3125, column: 64, scope: !13457)
!13465 = !DILocation(line: 3125, column: 81, scope: !13457)
!13466 = !DILocation(line: 3127, column: 9, scope: !13457)
!13467 = !DILocation(line: 3127, column: 85, scope: !13460)
!13468 = !DILocation(line: 3127, column: 118, scope: !13469)
!13469 = !DILexicalBlockFile(scope: !13457, file: !368, discriminator: 2)
!13470 = !DILocation(line: 3127, column: 139, scope: !13471)
!13471 = !DILexicalBlockFile(scope: !13457, file: !368, discriminator: 5)
!13472 = !DILocation(line: 3127, column: 145, scope: !13457)
!13473 = !DILocation(line: 3127, column: 122, scope: !13457)
!13474 = !DILocation(line: 3127, column: 121, scope: !13457)
!13475 = !DILocation(line: 3127, column: 156, scope: !13457)
!13476 = !DILocation(line: 3123, column: 9, scope: !2060)
!13477 = !DILocation(line: 3127, column: 212, scope: !13457)
!13478 = !DILocation(line: 3127, column: 218, scope: !13457)
!13479 = !DILocation(line: 3127, column: 195, scope: !13457)
!13480 = !DILocation(line: 3127, column: 175, scope: !13457)
!13481 = !DILocation(line: 3127, column: 166, scope: !13457)
!13482 = !DILocation(line: 3127, column: 29, scope: !13457)
!13483 = !DILocation(line: 3127, column: 273, scope: !13484)
!13484 = !DILexicalBlockFile(scope: !13485, file: !368, discriminator: 4)
!13485 = !DILexicalBlockFile(scope: !13457, file: !368, discriminator: 3)
!13486 = !DILocation(line: 3127, column: 279, scope: !13457)
!13487 = !DILocation(line: 3127, column: 256, scope: !13457)
!13488 = !DILocation(line: 3127, column: 231, scope: !13457)
!13489 = !DILocation(line: 3128, column: 9, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13457, file: !368, line: 3127, column: 294)
!13491 = !DILocation(line: 3131, column: 18, scope: !2060)
!13492 = !DILocation(line: 3133, column: 24, scope: !2060)
!13493 = !DILocation(line: 3133, column: 18, scope: !2060)
!13494 = !DILocation(line: 3134, column: 35, scope: !2060)
!13495 = !DILocation(line: 3134, column: 42, scope: !2060)
!13496 = !DILocation(line: 3134, column: 53, scope: !2060)
!13497 = !DILocation(line: 3134, column: 62, scope: !2060)
!13498 = !DILocation(line: 3134, column: 79, scope: !2060)
!13499 = !DILocation(line: 3134, column: 18, scope: !2060)
!13500 = !DILocation(line: 3135, column: 35, scope: !2060)
!13501 = !DILocation(line: 3135, column: 19, scope: !2060)
!13502 = !DILocation(line: 3135, column: 41, scope: !2060)
!13503 = !DILocation(line: 3136, column: 28, scope: !2060)
!13504 = !DILocation(line: 3136, column: 35, scope: !2060)
!13505 = !DILocation(line: 3136, column: 45, scope: !2060)
!13506 = !DILocation(line: 3131, column: 5, scope: !2060)
!13507 = !DILocation(line: 3137, column: 5, scope: !2060)
!13508 = !DILocation(line: 3138, column: 1, scope: !2060)
!13509 = !DILocation(line: 4444, column: 24, scope: !2067)
!13510 = !DILocation(line: 4446, column: 5, scope: !2067)
!13511 = !DILocation(line: 4446, column: 18, scope: !2067)
!13512 = !DILocation(line: 4446, column: 40, scope: !2067)
!13513 = !DILocation(line: 4446, column: 25, scope: !2067)
!13514 = !DILocation(line: 4447, column: 12, scope: !2067)
!13515 = !DILocation(line: 4447, column: 18, scope: !2067)
!13516 = !DILocation(line: 4448, column: 1, scope: !2067)
!13517 = !DILocation(line: 4447, column: 5, scope: !2067)
!13518 = !DILocation(line: 4226, column: 22, scope: !2071)
!13519 = !DILocation(line: 4226, column: 41, scope: !2071)
!13520 = !DILocation(line: 4228, column: 5, scope: !2071)
!13521 = !DILocation(line: 4228, column: 18, scope: !2071)
!13522 = !DILocation(line: 4228, column: 40, scope: !2071)
!13523 = !DILocation(line: 4228, column: 25, scope: !2071)
!13524 = !DILocation(line: 4229, column: 5, scope: !2071)
!13525 = !DILocation(line: 4229, column: 16, scope: !2071)
!13526 = !DILocation(line: 4229, column: 24, scope: !2071)
!13527 = !DILocation(line: 4230, column: 5, scope: !2071)
!13528 = !DILocation(line: 4230, column: 20, scope: !2071)
!13529 = !DILocation(line: 4233, column: 9, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !2071, file: !368, line: 4233, column: 9)
!13531 = !DILocation(line: 4233, column: 15, scope: !13530)
!13532 = !DILocation(line: 4233, column: 19, scope: !13530)
!13533 = !DILocation(line: 4233, column: 22, scope: !13534)
!13534 = !DILexicalBlockFile(scope: !13530, file: !368, discriminator: 1)
!13535 = !DILocation(line: 4233, column: 31, scope: !13530)
!13536 = !DILocation(line: 4233, column: 37, scope: !13530)
!13537 = !DILocation(line: 4233, column: 28, scope: !13530)
!13538 = !DILocation(line: 4233, column: 9, scope: !2071)
!13539 = !DILocation(line: 4234, column: 25, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13530, file: !368, line: 4233, column: 47)
!13541 = !DILocation(line: 4234, column: 9, scope: !13540)
!13542 = !DILocation(line: 4236, column: 9, scope: !13540)
!13543 = !DILocation(line: 4239, column: 44, scope: !2071)
!13544 = !DILocation(line: 4239, column: 32, scope: !2071)
!13545 = !DILocation(line: 4239, column: 15, scope: !2071)
!13546 = !DILocation(line: 4239, column: 13, scope: !2071)
!13547 = !DILocation(line: 4244, column: 12, scope: !2071)
!13548 = !DILocation(line: 4244, column: 21, scope: !2071)
!13549 = !DILocation(line: 4244, column: 28, scope: !2071)
!13550 = !DILocation(line: 4244, column: 37, scope: !2071)
!13551 = !DILocation(line: 4244, column: 26, scope: !2071)
!13552 = !DILocation(line: 4244, column: 10, scope: !2071)
!13553 = !DILocation(line: 4245, column: 14, scope: !2071)
!13554 = !DILocation(line: 4245, column: 22, scope: !2071)
!13555 = !DILocation(line: 4245, column: 20, scope: !2071)
!13556 = !DILocation(line: 4245, column: 12, scope: !2071)
!13557 = !DILocation(line: 4247, column: 24, scope: !2071)
!13558 = !DILocation(line: 4247, column: 33, scope: !2071)
!13559 = !DILocation(line: 4247, column: 40, scope: !2071)
!13560 = !DILocation(line: 4247, column: 49, scope: !2071)
!13561 = !DILocation(line: 4247, column: 70, scope: !2071)
!13562 = !DILocation(line: 4247, column: 58, scope: !2071)
!13563 = !DILocation(line: 4248, column: 22, scope: !2071)
!13564 = !DILocation(line: 4248, column: 29, scope: !2071)
!13565 = !DILocation(line: 4248, column: 35, scope: !2071)
!13566 = !DILocation(line: 4248, column: 41, scope: !2071)
!13567 = !DILocation(line: 4248, column: 49, scope: !2071)
!13568 = !DILocation(line: 4248, column: 47, scope: !2071)
!13569 = !DILocation(line: 4247, column: 12, scope: !2071)
!13570 = !DILocation(line: 4247, column: 5, scope: !2071)
!13571 = !DILocation(line: 4249, column: 1, scope: !2071)
!13572 = !DILocation(line: 4358, column: 26, scope: !2079)
!13573 = !DILocation(line: 4358, column: 45, scope: !2079)
!13574 = !DILocation(line: 4358, column: 62, scope: !2079)
!13575 = !DILocation(line: 4360, column: 5, scope: !2079)
!13576 = !DILocation(line: 4360, column: 18, scope: !2079)
!13577 = !DILocation(line: 4360, column: 40, scope: !2079)
!13578 = !DILocation(line: 4360, column: 25, scope: !2079)
!13579 = !DILocation(line: 4361, column: 5, scope: !2079)
!13580 = !DILocation(line: 4361, column: 16, scope: !2079)
!13581 = !DILocation(line: 4361, column: 22, scope: !2079)
!13582 = !DILocation(line: 4362, column: 5, scope: !2079)
!13583 = !DILocation(line: 4362, column: 20, scope: !2079)
!13584 = !DILocation(line: 4363, column: 5, scope: !2079)
!13585 = !DILocation(line: 4363, column: 11, scope: !2079)
!13586 = !DILocation(line: 4365, column: 9, scope: !13587)
!13587 = distinct !DILexicalBlock(scope: !2079, file: !368, line: 4365, column: 9)
!13588 = !DILocation(line: 4365, column: 15, scope: !13587)
!13589 = !DILocation(line: 4365, column: 9, scope: !2079)
!13590 = !DILocation(line: 4366, column: 25, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13587, file: !368, line: 4365, column: 30)
!13592 = !DILocation(line: 4366, column: 9, scope: !13591)
!13593 = !DILocation(line: 4368, column: 9, scope: !13591)
!13594 = !DILocation(line: 4371, column: 44, scope: !2079)
!13595 = !DILocation(line: 4371, column: 32, scope: !2079)
!13596 = !DILocation(line: 4371, column: 15, scope: !2079)
!13597 = !DILocation(line: 4371, column: 13, scope: !2079)
!13598 = !DILocation(line: 4373, column: 9, scope: !13599)
!13599 = distinct !DILexicalBlock(scope: !2079, file: !368, line: 4373, column: 9)
!13600 = !DILocation(line: 4373, column: 15, scope: !13599)
!13601 = !DILocation(line: 4373, column: 19, scope: !13599)
!13602 = !DILocation(line: 4373, column: 22, scope: !13603)
!13603 = !DILexicalBlockFile(scope: !13599, file: !368, discriminator: 1)
!13604 = !DILocation(line: 4373, column: 31, scope: !13599)
!13605 = !DILocation(line: 4373, column: 40, scope: !13599)
!13606 = !DILocation(line: 4373, column: 28, scope: !13599)
!13607 = !DILocation(line: 4373, column: 9, scope: !2079)
!13608 = !DILocation(line: 4374, column: 25, scope: !13609)
!13609 = distinct !DILexicalBlock(scope: !13599, file: !368, line: 4373, column: 48)
!13610 = !DILocation(line: 4374, column: 9, scope: !13609)
!13611 = !DILocation(line: 4376, column: 9, scope: !13609)
!13612 = !DILocation(line: 4378, column: 12, scope: !2079)
!13613 = !DILocation(line: 4378, column: 21, scope: !2079)
!13614 = !DILocation(line: 4378, column: 28, scope: !2079)
!13615 = !DILocation(line: 4378, column: 37, scope: !2079)
!13616 = !DILocation(line: 4378, column: 26, scope: !2079)
!13617 = !DILocation(line: 4378, column: 10, scope: !2079)
!13618 = !DILocation(line: 4379, column: 14, scope: !2079)
!13619 = !DILocation(line: 4379, column: 22, scope: !2079)
!13620 = !DILocation(line: 4379, column: 20, scope: !2079)
!13621 = !DILocation(line: 4379, column: 12, scope: !2079)
!13622 = !DILocation(line: 4380, column: 11, scope: !2079)
!13623 = !DILocation(line: 4380, column: 17, scope: !2079)
!13624 = !DILocation(line: 4380, column: 25, scope: !2079)
!13625 = !DILocation(line: 4380, column: 23, scope: !2079)
!13626 = !DILocation(line: 4380, column: 9, scope: !2079)
!13627 = !DILocation(line: 4382, column: 36, scope: !2079)
!13628 = !DILocation(line: 4382, column: 24, scope: !2079)
!13629 = !DILocation(line: 4382, column: 42, scope: !2079)
!13630 = !DILocation(line: 4382, column: 51, scope: !2079)
!13631 = !DILocation(line: 4382, column: 58, scope: !2079)
!13632 = !DILocation(line: 4382, column: 67, scope: !2079)
!13633 = !DILocation(line: 4382, column: 76, scope: !2079)
!13634 = !DILocation(line: 4383, column: 22, scope: !2079)
!13635 = !DILocation(line: 4383, column: 29, scope: !2079)
!13636 = !DILocation(line: 4383, column: 35, scope: !2079)
!13637 = !DILocation(line: 4382, column: 12, scope: !2079)
!13638 = !DILocation(line: 4382, column: 5, scope: !2079)
!13639 = !DILocation(line: 4384, column: 1, scope: !2079)
!13640 = !DILocation(line: 4252, column: 27, scope: !2089)
!13641 = !DILocation(line: 4252, column: 45, scope: !2089)
!13642 = !DILocation(line: 4254, column: 5, scope: !2089)
!13643 = !DILocation(line: 4254, column: 18, scope: !2089)
!13644 = !DILocation(line: 4254, column: 40, scope: !2089)
!13645 = !DILocation(line: 4254, column: 25, scope: !2089)
!13646 = !DILocation(line: 4256, column: 11, scope: !2096)
!13647 = !DILocation(line: 4256, column: 18, scope: !2096)
!13648 = !DILocation(line: 4256, column: 27, scope: !2096)
!13649 = !{!2591, !2523, i64 96}
!13650 = !DILocation(line: 4256, column: 40, scope: !2096)
!13651 = !DILocation(line: 4256, column: 54, scope: !2096)
!13652 = !DILocation(line: 4256, column: 58, scope: !13653)
!13653 = !DILexicalBlockFile(scope: !2096, file: !368, discriminator: 1)
!13654 = !DILocation(line: 4256, column: 65, scope: !2096)
!13655 = !DILocation(line: 4256, column: 74, scope: !2096)
!13656 = !DILocation(line: 4256, column: 88, scope: !2096)
!13657 = !{!13658, !2523, i64 264}
!13658 = !{!"", !2523, i64 0, !2523, i64 8, !2523, i64 16, !2523, i64 24, !2523, i64 32, !2523, i64 40, !2523, i64 48, !2523, i64 56, !2523, i64 64, !2523, i64 72, !2523, i64 80, !2523, i64 88, !2523, i64 96, !2523, i64 104, !2523, i64 112, !2523, i64 120, !2523, i64 128, !2523, i64 136, !2523, i64 144, !2523, i64 152, !2523, i64 160, !2523, i64 168, !2523, i64 176, !2523, i64 184, !2523, i64 192, !2523, i64 200, !2523, i64 208, !2523, i64 216, !2523, i64 224, !2523, i64 232, !2523, i64 240, !2523, i64 248, !2523, i64 256, !2523, i64 264}
!13659 = !DILocation(line: 4256, column: 97, scope: !2096)
!13660 = !DILocation(line: 4256, column: 9, scope: !2089)
!13661 = !DILocation(line: 4257, column: 9, scope: !2095)
!13662 = !DILocation(line: 4257, column: 20, scope: !2095)
!13663 = !DILocation(line: 4257, column: 43, scope: !2095)
!13664 = !DILocation(line: 4257, column: 49, scope: !2095)
!13665 = !DILocation(line: 4257, column: 24, scope: !2095)
!13666 = !DILocation(line: 4259, column: 13, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !2095, file: !368, line: 4259, column: 13)
!13668 = !DILocation(line: 4259, column: 15, scope: !13667)
!13669 = !DILocation(line: 4259, column: 21, scope: !13667)
!13670 = !DILocation(line: 4259, column: 24, scope: !13671)
!13671 = !DILexicalBlockFile(scope: !13667, file: !368, discriminator: 1)
!13672 = !DILocation(line: 4259, column: 13, scope: !2095)
!13673 = !DILocation(line: 4260, column: 13, scope: !13667)
!13674 = !DILocation(line: 4261, column: 13, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !2095, file: !368, line: 4261, column: 13)
!13676 = !DILocation(line: 4261, column: 15, scope: !13675)
!13677 = !DILocation(line: 4261, column: 13, scope: !2095)
!13678 = !DILocation(line: 4262, column: 18, scope: !13675)
!13679 = !DILocation(line: 4262, column: 24, scope: !13675)
!13680 = !DILocation(line: 4262, column: 15, scope: !13675)
!13681 = !DILocation(line: 4262, column: 13, scope: !13675)
!13682 = !DILocation(line: 4263, column: 27, scope: !2095)
!13683 = !DILocation(line: 4263, column: 35, scope: !2095)
!13684 = !DILocation(line: 4263, column: 16, scope: !2095)
!13685 = !DILocation(line: 4263, column: 9, scope: !2095)
!13686 = !DILocation(line: 4264, column: 5, scope: !2096)
!13687 = !DILocation(line: 4265, column: 29, scope: !2099)
!13688 = !DILocation(line: 4265, column: 37, scope: !2099)
!13689 = !DILocation(line: 4265, column: 46, scope: !2099)
!13690 = !DILocation(line: 4265, column: 14, scope: !2096)
!13691 = !DILocation(line: 4266, column: 9, scope: !2098)
!13692 = !DILocation(line: 4266, column: 24, scope: !2098)
!13693 = !DILocation(line: 4266, column: 34, scope: !2098)
!13694 = !DILocation(line: 4267, column: 9, scope: !2098)
!13695 = !DILocation(line: 4267, column: 19, scope: !2098)
!13696 = !DILocation(line: 4268, column: 9, scope: !2098)
!13697 = !DILocation(line: 4268, column: 19, scope: !2098)
!13698 = !DILocation(line: 4269, column: 9, scope: !2098)
!13699 = !DILocation(line: 4269, column: 20, scope: !2098)
!13700 = !DILocation(line: 4269, column: 27, scope: !2098)
!13701 = !DILocation(line: 4269, column: 33, scope: !2098)
!13702 = !DILocation(line: 4269, column: 39, scope: !2098)
!13703 = !DILocation(line: 4269, column: 49, scope: !2098)
!13704 = !DILocation(line: 4269, column: 54, scope: !2098)
!13705 = !DILocation(line: 4271, column: 34, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !2098, file: !368, line: 4271, column: 13)
!13707 = !DILocation(line: 4272, column: 34, scope: !13706)
!13708 = !DILocation(line: 4272, column: 40, scope: !13706)
!13709 = !DILocation(line: 4271, column: 13, scope: !13706)
!13710 = !DILocation(line: 4273, column: 52, scope: !13706)
!13711 = !DILocation(line: 4271, column: 13, scope: !2098)
!13712 = !DILocation(line: 4274, column: 13, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13706, file: !368, line: 4273, column: 57)
!13714 = !DILocation(line: 4277, column: 48, scope: !2098)
!13715 = !DILocation(line: 4277, column: 36, scope: !2098)
!13716 = !DILocation(line: 4277, column: 19, scope: !2098)
!13717 = !DILocation(line: 4277, column: 17, scope: !2098)
!13718 = !DILocation(line: 4279, column: 17, scope: !2098)
!13719 = !DILocation(line: 4279, column: 26, scope: !2098)
!13720 = !DILocation(line: 4279, column: 15, scope: !2098)
!13721 = !DILocation(line: 4280, column: 35, scope: !2098)
!13722 = !DILocation(line: 4280, column: 20, scope: !2098)
!13723 = !DILocation(line: 4280, column: 18, scope: !2098)
!13724 = !DILocation(line: 4284, column: 13, scope: !2111)
!13725 = !DILocation(line: 4284, column: 23, scope: !2111)
!13726 = !DILocation(line: 4284, column: 34, scope: !2111)
!13727 = !DILocation(line: 4284, column: 62, scope: !2111)
!13728 = !DILocation(line: 4284, column: 31, scope: !2111)
!13729 = !DILocation(line: 4284, column: 13, scope: !2098)
!13730 = !DILocation(line: 4285, column: 13, scope: !2110)
!13731 = !DILocation(line: 4285, column: 19, scope: !2110)
!13732 = !DILocation(line: 4285, column: 33, scope: !2110)
!13733 = !DILocation(line: 4285, column: 39, scope: !2110)
!13734 = !DILocation(line: 4286, column: 13, scope: !2110)
!13735 = !DILocation(line: 4286, column: 19, scope: !2110)
!13736 = !DILocation(line: 4288, column: 17, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !2110, file: !368, line: 4288, column: 17)
!13738 = !DILocation(line: 4288, column: 26, scope: !13737)
!13739 = !DILocation(line: 4288, column: 17, scope: !2110)
!13740 = !DILocation(line: 4289, column: 24, scope: !13737)
!13741 = !DILocation(line: 4289, column: 17, scope: !13737)
!13742 = !DILocation(line: 4290, column: 17, scope: !13743)
!13743 = distinct !DILexicalBlock(scope: !2110, file: !368, line: 4290, column: 17)
!13744 = !DILocation(line: 4290, column: 22, scope: !13743)
!13745 = !DILocation(line: 4290, column: 17, scope: !2110)
!13746 = !DILocation(line: 4291, column: 50, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13743, file: !368, line: 4290, column: 28)
!13748 = !DILocation(line: 4291, column: 56, scope: !13747)
!13749 = !DILocation(line: 4291, column: 54, scope: !13747)
!13750 = !DILocation(line: 4292, column: 50, scope: !13747)
!13751 = !DILocation(line: 4291, column: 24, scope: !13747)
!13752 = !DILocation(line: 4291, column: 17, scope: !13747)
!13753 = !DILocation(line: 4294, column: 41, scope: !2110)
!13754 = !DILocation(line: 4294, column: 28, scope: !2110)
!13755 = !DILocation(line: 4294, column: 18, scope: !2110)
!13756 = !DILocation(line: 4296, column: 17, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !2110, file: !368, line: 4296, column: 17)
!13758 = !DILocation(line: 4296, column: 22, scope: !13757)
!13759 = !DILocation(line: 4296, column: 17, scope: !2110)
!13760 = !DILocation(line: 4297, column: 24, scope: !13757)
!13761 = !DILocation(line: 4297, column: 17, scope: !13757)
!13762 = !DILocation(line: 4299, column: 24, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !2110, file: !368, line: 4299, column: 13)
!13764 = !DILocation(line: 4299, column: 22, scope: !13763)
!13765 = !DILocation(line: 4299, column: 33, scope: !13763)
!13766 = !DILocation(line: 4299, column: 18, scope: !13763)
!13767 = !DILocation(line: 4299, column: 38, scope: !13768)
!13768 = !DILexicalBlockFile(scope: !13769, file: !368, discriminator: 2)
!13769 = !DILexicalBlockFile(scope: !13770, file: !368, discriminator: 1)
!13770 = distinct !DILexicalBlock(scope: !13763, file: !368, line: 4299, column: 13)
!13771 = !DILocation(line: 4299, column: 42, scope: !13770)
!13772 = !DILocation(line: 4299, column: 40, scope: !13770)
!13773 = !DILocation(line: 4299, column: 13, scope: !13763)
!13774 = !DILocation(line: 4301, column: 31, scope: !13775)
!13775 = distinct !DILexicalBlock(scope: !13770, file: !368, line: 4300, column: 36)
!13776 = !DILocation(line: 4301, column: 27, scope: !13775)
!13777 = !DILocation(line: 4301, column: 22, scope: !13775)
!13778 = !DILocation(line: 4301, column: 17, scope: !13775)
!13779 = !DILocation(line: 4301, column: 25, scope: !13775)
!13780 = !DILocation(line: 4302, column: 13, scope: !13775)
!13781 = !DILocation(line: 4300, column: 25, scope: !13770)
!13782 = !DILocation(line: 4300, column: 22, scope: !13770)
!13783 = !DILocation(line: 4300, column: 32, scope: !13770)
!13784 = !DILocation(line: 4299, column: 13, scope: !13770)
!13785 = !DILocation(line: 4304, column: 44, scope: !2110)
!13786 = !DILocation(line: 4304, column: 50, scope: !2110)
!13787 = !DILocation(line: 4304, column: 18, scope: !2110)
!13788 = !DILocation(line: 4304, column: 16, scope: !2110)
!13789 = !DILocation(line: 4305, column: 24, scope: !2110)
!13790 = !DILocation(line: 4305, column: 13, scope: !2110)
!13791 = !DILocation(line: 4306, column: 20, scope: !2110)
!13792 = !DILocation(line: 4306, column: 13, scope: !2110)
!13793 = !DILocation(line: 4307, column: 9, scope: !2111)
!13794 = !DILocation(line: 4309, column: 13, scope: !2115)
!13795 = !DILocation(line: 4309, column: 23, scope: !2115)
!13796 = !DILocation(line: 4309, column: 34, scope: !2115)
!13797 = !DILocation(line: 4309, column: 62, scope: !2115)
!13798 = !DILocation(line: 4309, column: 31, scope: !2115)
!13799 = !DILocation(line: 4309, column: 13, scope: !2098)
!13800 = !DILocation(line: 4310, column: 13, scope: !2114)
!13801 = !DILocation(line: 4310, column: 22, scope: !2114)
!13802 = !DILocation(line: 4310, column: 39, scope: !2114)
!13803 = !DILocation(line: 4310, column: 45, scope: !2114)
!13804 = !DILocation(line: 4310, column: 28, scope: !2114)
!13805 = !DILocation(line: 4311, column: 13, scope: !2114)
!13806 = !DILocation(line: 4311, column: 22, scope: !2114)
!13807 = !DILocation(line: 4313, column: 17, scope: !13808)
!13808 = distinct !DILexicalBlock(scope: !2114, file: !368, line: 4313, column: 17)
!13809 = !DILocation(line: 4313, column: 26, scope: !13808)
!13810 = !DILocation(line: 4313, column: 17, scope: !2114)
!13811 = !DILocation(line: 4314, column: 24, scope: !13808)
!13812 = !DILocation(line: 4314, column: 17, scope: !13808)
!13813 = !DILocation(line: 4315, column: 17, scope: !13814)
!13814 = distinct !DILexicalBlock(scope: !2114, file: !368, line: 4315, column: 17)
!13815 = !DILocation(line: 4315, column: 22, scope: !13814)
!13816 = !DILocation(line: 4315, column: 17, scope: !2114)
!13817 = !DILocation(line: 4316, column: 47, scope: !13818)
!13818 = distinct !DILexicalBlock(scope: !13814, file: !368, line: 4315, column: 28)
!13819 = !DILocation(line: 4316, column: 53, scope: !13818)
!13820 = !DILocation(line: 4316, column: 51, scope: !13818)
!13821 = !DILocation(line: 4317, column: 47, scope: !13818)
!13822 = !DILocation(line: 4316, column: 24, scope: !13818)
!13823 = !DILocation(line: 4316, column: 17, scope: !13818)
!13824 = !DILocation(line: 4321, column: 37, scope: !2114)
!13825 = !DILocation(line: 4321, column: 46, scope: !2114)
!13826 = !DILocation(line: 4320, column: 31, scope: !2114)
!13827 = !DILocation(line: 4320, column: 20, scope: !2114)
!13828 = !DILocation(line: 4320, column: 18, scope: !2114)
!13829 = !DILocation(line: 4323, column: 24, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !2114, file: !368, line: 4323, column: 13)
!13831 = !DILocation(line: 4323, column: 22, scope: !13830)
!13832 = !DILocation(line: 4323, column: 33, scope: !13830)
!13833 = !DILocation(line: 4323, column: 18, scope: !13830)
!13834 = !DILocation(line: 4323, column: 38, scope: !13835)
!13835 = !DILexicalBlockFile(scope: !13836, file: !368, discriminator: 2)
!13836 = !DILexicalBlockFile(scope: !13837, file: !368, discriminator: 1)
!13837 = distinct !DILexicalBlock(scope: !13830, file: !368, line: 4323, column: 13)
!13838 = !DILocation(line: 4323, column: 42, scope: !13837)
!13839 = !DILocation(line: 4323, column: 40, scope: !13837)
!13840 = !DILocation(line: 4323, column: 13, scope: !13830)
!13841 = !DILocation(line: 4325, column: 31, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13837, file: !368, line: 4324, column: 36)
!13843 = !DILocation(line: 4325, column: 27, scope: !13842)
!13844 = !DILocation(line: 4325, column: 22, scope: !13842)
!13845 = !DILocation(line: 4325, column: 17, scope: !13842)
!13846 = !DILocation(line: 4325, column: 25, scope: !13842)
!13847 = !DILocation(line: 4326, column: 13, scope: !13842)
!13848 = !DILocation(line: 4324, column: 25, scope: !13837)
!13849 = !DILocation(line: 4324, column: 22, scope: !13837)
!13850 = !DILocation(line: 4324, column: 32, scope: !13837)
!13851 = !DILocation(line: 4323, column: 13, scope: !13837)
!13852 = !DILocation(line: 4328, column: 41, scope: !2114)
!13853 = !DILocation(line: 4328, column: 47, scope: !2114)
!13854 = !DILocation(line: 4328, column: 18, scope: !2114)
!13855 = !DILocation(line: 4328, column: 16, scope: !2114)
!13856 = !DILocation(line: 4329, column: 24, scope: !2114)
!13857 = !DILocation(line: 4329, column: 13, scope: !2114)
!13858 = !DILocation(line: 4330, column: 20, scope: !2114)
!13859 = !DILocation(line: 4330, column: 13, scope: !2114)
!13860 = !DILocation(line: 4331, column: 9, scope: !2115)
!13861 = !DILocation(line: 4334, column: 25, scope: !2098)
!13862 = !DILocation(line: 4334, column: 14, scope: !2098)
!13863 = !DILocation(line: 4334, column: 12, scope: !2098)
!13864 = !DILocation(line: 4335, column: 13, scope: !13865)
!13865 = distinct !DILexicalBlock(scope: !2098, file: !368, line: 4335, column: 13)
!13866 = !DILocation(line: 4335, column: 16, scope: !13865)
!13867 = !DILocation(line: 4335, column: 13, scope: !2098)
!13868 = !DILocation(line: 4336, column: 13, scope: !13865)
!13869 = !DILocation(line: 4338, column: 20, scope: !2120)
!13870 = !DILocation(line: 4338, column: 18, scope: !2120)
!13871 = !DILocation(line: 4338, column: 29, scope: !2120)
!13872 = !DILocation(line: 4338, column: 14, scope: !2120)
!13873 = !DILocation(line: 4338, column: 34, scope: !13874)
!13874 = !DILexicalBlockFile(scope: !13875, file: !368, discriminator: 2)
!13875 = !DILexicalBlockFile(scope: !2119, file: !368, discriminator: 1)
!13876 = !DILocation(line: 4338, column: 38, scope: !2119)
!13877 = !DILocation(line: 4338, column: 36, scope: !2119)
!13878 = !DILocation(line: 4338, column: 9, scope: !2120)
!13879 = !DILocation(line: 4340, column: 13, scope: !2118)
!13880 = !DILocation(line: 4340, column: 23, scope: !2118)
!13881 = !DILocation(line: 4340, column: 38, scope: !2118)
!13882 = !DILocation(line: 4340, column: 46, scope: !2118)
!13883 = !DILocation(line: 4340, column: 27, scope: !2118)
!13884 = !DILocation(line: 4341, column: 17, scope: !2124)
!13885 = !DILocation(line: 4341, column: 19, scope: !2124)
!13886 = !DILocation(line: 4341, column: 17, scope: !2118)
!13887 = !DILocation(line: 4342, column: 17, scope: !2123)
!13888 = !DILocation(line: 4342, column: 22, scope: !13889)
!13889 = !DILexicalBlockFile(scope: !2122, file: !368, discriminator: 1)
!13890 = !DILocation(line: 4342, column: 32, scope: !2122)
!13891 = !DILocation(line: 4342, column: 62, scope: !2122)
!13892 = !DILocation(line: 4342, column: 75, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !2122, file: !368, line: 4342, column: 72)
!13894 = !DILocation(line: 4342, column: 92, scope: !13893)
!13895 = !DILocation(line: 4342, column: 72, scope: !13893)
!13896 = !DILocation(line: 4342, column: 102, scope: !13893)
!13897 = !DILocation(line: 4342, column: 72, scope: !2122)
!13898 = !DILocation(line: 4342, column: 72, scope: !13899)
!13899 = !DILexicalBlockFile(scope: !2122, file: !368, discriminator: 2)
!13900 = !DILocation(line: 4342, column: 133, scope: !13901)
!13901 = !DILexicalBlockFile(scope: !13893, file: !368, discriminator: 3)
!13902 = !DILocation(line: 4342, column: 151, scope: !13893)
!13903 = !DILocation(line: 4342, column: 161, scope: !13893)
!13904 = !DILocation(line: 4342, column: 186, scope: !13893)
!13905 = !DILocation(line: 4342, column: 117, scope: !13893)
!13906 = !DILocation(line: 4342, column: 205, scope: !13907)
!13907 = !DILexicalBlockFile(scope: !2123, file: !368, discriminator: 4)
!13908 = !DILocation(line: 4342, column: 205, scope: !2122)
!13909 = !DILocation(line: 4342, column: 205, scope: !13910)
!13910 = !DILexicalBlockFile(scope: !2122, file: !368, discriminator: 5)
!13911 = !DILocation(line: 4343, column: 17, scope: !2123)
!13912 = !DILocation(line: 4345, column: 52, scope: !2118)
!13913 = !DILocation(line: 4345, column: 46, scope: !2118)
!13914 = !DILocation(line: 4345, column: 32, scope: !2118)
!13915 = !DILocation(line: 4345, column: 15, scope: !2118)
!13916 = !DILocation(line: 4345, column: 38, scope: !2118)
!13917 = !{!13918, !2523, i64 24}
!13918 = !{!"", !2592, i64 0, !2523, i64 24, !2553, i64 32}
!13919 = !DILocation(line: 4345, column: 14, scope: !2118)
!13920 = !DILocation(line: 4345, column: 49, scope: !2118)
!13921 = !DILocation(line: 4346, column: 9, scope: !2119)
!13922 = !DILocation(line: 4346, column: 9, scope: !13875)
!13923 = !DILocation(line: 4346, column: 9, scope: !2118)
!13924 = !DILocation(line: 4339, column: 21, scope: !2119)
!13925 = !DILocation(line: 4339, column: 18, scope: !2119)
!13926 = !DILocation(line: 4339, column: 28, scope: !2119)
!13927 = !DILocation(line: 4338, column: 9, scope: !2119)
!13928 = !DILocation(line: 4347, column: 16, scope: !2098)
!13929 = !DILocation(line: 4347, column: 9, scope: !2098)
!13930 = !DILocation(line: 4348, column: 5, scope: !2099)
!13931 = !DILocation(line: 4350, column: 25, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !2099, file: !368, line: 4349, column: 10)
!13933 = !DILocation(line: 4350, column: 9, scope: !13932)
!13934 = !DILocation(line: 4352, column: 9, scope: !13932)
!13935 = !DILocation(line: 4355, column: 1, scope: !2089)
!13936 = !DILocation(line: 4387, column: 31, scope: !2125)
!13937 = !DILocation(line: 4387, column: 49, scope: !2125)
!13938 = !DILocation(line: 4387, column: 65, scope: !2125)
!13939 = !DILocation(line: 4389, column: 5, scope: !2125)
!13940 = !DILocation(line: 4389, column: 18, scope: !2125)
!13941 = !DILocation(line: 4389, column: 40, scope: !2125)
!13942 = !DILocation(line: 4389, column: 25, scope: !2125)
!13943 = !DILocation(line: 4391, column: 9, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !2125, file: !368, line: 4391, column: 9)
!13945 = !DILocation(line: 4391, column: 15, scope: !13944)
!13946 = !DILocation(line: 4391, column: 9, scope: !2125)
!13947 = !DILocation(line: 4392, column: 25, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13944, file: !368, line: 4391, column: 30)
!13949 = !DILocation(line: 4392, column: 9, scope: !13948)
!13950 = !DILocation(line: 4394, column: 9, scope: !13948)
!13951 = !DILocation(line: 4397, column: 11, scope: !2133)
!13952 = !DILocation(line: 4397, column: 18, scope: !2133)
!13953 = !DILocation(line: 4397, column: 27, scope: !2133)
!13954 = !DILocation(line: 4397, column: 40, scope: !2133)
!13955 = !DILocation(line: 4397, column: 54, scope: !2133)
!13956 = !DILocation(line: 4397, column: 58, scope: !13957)
!13957 = !DILexicalBlockFile(scope: !2133, file: !368, discriminator: 1)
!13958 = !DILocation(line: 4397, column: 65, scope: !2133)
!13959 = !DILocation(line: 4397, column: 74, scope: !2133)
!13960 = !DILocation(line: 4397, column: 88, scope: !2133)
!13961 = !DILocation(line: 4397, column: 97, scope: !2133)
!13962 = !DILocation(line: 4397, column: 9, scope: !2125)
!13963 = !DILocation(line: 4398, column: 9, scope: !2132)
!13964 = !DILocation(line: 4398, column: 20, scope: !2132)
!13965 = !DILocation(line: 4398, column: 43, scope: !2132)
!13966 = !DILocation(line: 4398, column: 49, scope: !2132)
!13967 = !DILocation(line: 4398, column: 24, scope: !2132)
!13968 = !DILocation(line: 4400, column: 13, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !2132, file: !368, line: 4400, column: 13)
!13970 = !DILocation(line: 4400, column: 15, scope: !13969)
!13971 = !DILocation(line: 4400, column: 21, scope: !13969)
!13972 = !DILocation(line: 4400, column: 24, scope: !13973)
!13973 = !DILexicalBlockFile(scope: !13969, file: !368, discriminator: 1)
!13974 = !DILocation(line: 4400, column: 13, scope: !2132)
!13975 = !DILocation(line: 4401, column: 13, scope: !13969)
!13976 = !DILocation(line: 4402, column: 13, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !2132, file: !368, line: 4402, column: 13)
!13978 = !DILocation(line: 4402, column: 15, scope: !13977)
!13979 = !DILocation(line: 4402, column: 13, scope: !2132)
!13980 = !DILocation(line: 4403, column: 18, scope: !13977)
!13981 = !DILocation(line: 4403, column: 24, scope: !13977)
!13982 = !DILocation(line: 4403, column: 15, scope: !13977)
!13983 = !DILocation(line: 4403, column: 13, scope: !13977)
!13984 = !DILocation(line: 4404, column: 31, scope: !2132)
!13985 = !DILocation(line: 4404, column: 39, scope: !2132)
!13986 = !DILocation(line: 4404, column: 42, scope: !2132)
!13987 = !DILocation(line: 4404, column: 16, scope: !2132)
!13988 = !DILocation(line: 4404, column: 9, scope: !2132)
!13989 = !DILocation(line: 4405, column: 5, scope: !2133)
!13990 = !DILocation(line: 4406, column: 29, scope: !2136)
!13991 = !DILocation(line: 4406, column: 37, scope: !2136)
!13992 = !DILocation(line: 4406, column: 46, scope: !2136)
!13993 = !DILocation(line: 4406, column: 14, scope: !2133)
!13994 = !DILocation(line: 4407, column: 9, scope: !2135)
!13995 = !DILocation(line: 4407, column: 20, scope: !2135)
!13996 = !DILocation(line: 4407, column: 27, scope: !2135)
!13997 = !DILocation(line: 4407, column: 33, scope: !2135)
!13998 = !DILocation(line: 4407, column: 39, scope: !2135)
!13999 = !DILocation(line: 4407, column: 49, scope: !2135)
!14000 = !DILocation(line: 4407, column: 59, scope: !2135)
!14001 = !DILocation(line: 4407, column: 62, scope: !2135)
!14002 = !DILocation(line: 4409, column: 34, scope: !14003)
!14003 = distinct !DILexicalBlock(scope: !2135, file: !368, line: 4409, column: 13)
!14004 = !DILocation(line: 4410, column: 34, scope: !14003)
!14005 = !DILocation(line: 4410, column: 40, scope: !14003)
!14006 = !DILocation(line: 4409, column: 13, scope: !14003)
!14007 = !DILocation(line: 4411, column: 52, scope: !14003)
!14008 = !DILocation(line: 4409, column: 13, scope: !2135)
!14009 = !DILocation(line: 4412, column: 13, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !14003, file: !368, line: 4411, column: 57)
!14011 = !DILocation(line: 4414, column: 14, scope: !14012)
!14012 = distinct !DILexicalBlock(scope: !2135, file: !368, line: 4414, column: 13)
!14013 = !DILocation(line: 4414, column: 19, scope: !14012)
!14014 = !DILocation(line: 4414, column: 23, scope: !14012)
!14015 = !DILocation(line: 4414, column: 26, scope: !14016)
!14016 = !DILexicalBlockFile(scope: !14012, file: !368, discriminator: 1)
!14017 = !DILocation(line: 4414, column: 34, scope: !14012)
!14018 = !DILocation(line: 4414, column: 32, scope: !14012)
!14019 = !DILocation(line: 4414, column: 40, scope: !14012)
!14020 = !DILocation(line: 4415, column: 14, scope: !14012)
!14021 = !DILocation(line: 4415, column: 19, scope: !14012)
!14022 = !DILocation(line: 4415, column: 23, scope: !14012)
!14023 = !DILocation(line: 4415, column: 26, scope: !14016)
!14024 = !DILocation(line: 4415, column: 34, scope: !14012)
!14025 = !DILocation(line: 4415, column: 32, scope: !14012)
!14026 = !DILocation(line: 4414, column: 13, scope: !2135)
!14027 = !DILocation(line: 4416, column: 20, scope: !14012)
!14028 = !DILocation(line: 4416, column: 18, scope: !14012)
!14029 = !DILocation(line: 4416, column: 13, scope: !14012)
!14030 = !DILocation(line: 4418, column: 36, scope: !2135)
!14031 = !DILocation(line: 4418, column: 20, scope: !2135)
!14032 = !DILocation(line: 4418, column: 18, scope: !2135)
!14033 = !DILocation(line: 4419, column: 13, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !2135, file: !368, line: 4419, column: 13)
!14035 = !DILocation(line: 4419, column: 25, scope: !14034)
!14036 = !DILocation(line: 4419, column: 22, scope: !14034)
!14037 = !DILocation(line: 4419, column: 13, scope: !2135)
!14038 = !DILocation(line: 4420, column: 29, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14034, file: !368, line: 4419, column: 35)
!14040 = !DILocation(line: 4420, column: 13, scope: !14039)
!14041 = !DILocation(line: 4422, column: 13, scope: !14039)
!14042 = !DILocation(line: 4424, column: 20, scope: !2146)
!14043 = !DILocation(line: 4424, column: 18, scope: !2146)
!14044 = !DILocation(line: 4424, column: 29, scope: !2146)
!14045 = !DILocation(line: 4424, column: 14, scope: !2146)
!14046 = !DILocation(line: 4424, column: 34, scope: !14047)
!14047 = !DILexicalBlockFile(scope: !14048, file: !368, discriminator: 2)
!14048 = !DILexicalBlockFile(scope: !2145, file: !368, discriminator: 1)
!14049 = !DILocation(line: 4424, column: 38, scope: !2145)
!14050 = !DILocation(line: 4424, column: 36, scope: !2145)
!14051 = !DILocation(line: 4424, column: 9, scope: !2146)
!14052 = !DILocation(line: 4425, column: 13, scope: !2144)
!14053 = !DILocation(line: 4425, column: 23, scope: !2144)
!14054 = !DILocation(line: 4425, column: 49, scope: !2144)
!14055 = !DILocation(line: 4425, column: 56, scope: !2144)
!14056 = !DILocation(line: 4425, column: 30, scope: !2144)
!14057 = !DILocation(line: 4426, column: 13, scope: !2144)
!14058 = !DILocation(line: 4426, column: 17, scope: !2144)
!14059 = !DILocation(line: 4427, column: 17, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !2144, file: !368, line: 4427, column: 17)
!14061 = !DILocation(line: 4427, column: 22, scope: !14060)
!14062 = !DILocation(line: 4427, column: 17, scope: !2144)
!14063 = !DILocation(line: 4428, column: 17, scope: !14060)
!14064 = !DILocation(line: 4429, column: 37, scope: !2144)
!14065 = !DILocation(line: 4429, column: 45, scope: !2144)
!14066 = !DILocation(line: 4429, column: 50, scope: !2144)
!14067 = !DILocation(line: 4429, column: 22, scope: !2144)
!14068 = !DILocation(line: 4429, column: 20, scope: !2144)
!14069 = !DILocation(line: 4430, column: 13, scope: !2144)
!14070 = !DILocation(line: 4430, column: 18, scope: !14071)
!14071 = !DILexicalBlockFile(scope: !2149, file: !368, discriminator: 1)
!14072 = !DILocation(line: 4430, column: 28, scope: !2149)
!14073 = !DILocation(line: 4430, column: 58, scope: !2149)
!14074 = !DILocation(line: 4430, column: 73, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !2149, file: !368, line: 4430, column: 70)
!14076 = !DILocation(line: 4430, column: 90, scope: !14075)
!14077 = !DILocation(line: 4430, column: 70, scope: !14075)
!14078 = !DILocation(line: 4430, column: 100, scope: !14075)
!14079 = !DILocation(line: 4430, column: 70, scope: !2149)
!14080 = !DILocation(line: 4430, column: 70, scope: !14081)
!14081 = !DILexicalBlockFile(scope: !2149, file: !368, discriminator: 2)
!14082 = !DILocation(line: 4430, column: 131, scope: !14083)
!14083 = !DILexicalBlockFile(scope: !14075, file: !368, discriminator: 3)
!14084 = !DILocation(line: 4430, column: 149, scope: !14075)
!14085 = !DILocation(line: 4430, column: 159, scope: !14075)
!14086 = !DILocation(line: 4430, column: 184, scope: !14075)
!14087 = !DILocation(line: 4430, column: 115, scope: !14075)
!14088 = !DILocation(line: 4430, column: 203, scope: !14089)
!14089 = !DILexicalBlockFile(scope: !2144, file: !368, discriminator: 4)
!14090 = !DILocation(line: 4430, column: 203, scope: !2149)
!14091 = !DILocation(line: 4430, column: 203, scope: !14092)
!14092 = !DILexicalBlockFile(scope: !2149, file: !368, discriminator: 5)
!14093 = !DILocation(line: 4431, column: 17, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !2144, file: !368, line: 4431, column: 17)
!14095 = !DILocation(line: 4431, column: 24, scope: !14094)
!14096 = !DILocation(line: 4431, column: 17, scope: !2144)
!14097 = !DILocation(line: 4432, column: 17, scope: !14094)
!14098 = !DILocation(line: 4433, column: 9, scope: !2145)
!14099 = !DILocation(line: 4433, column: 9, scope: !14048)
!14100 = !DILocation(line: 4433, column: 9, scope: !2144)
!14101 = !DILocation(line: 4424, column: 55, scope: !2145)
!14102 = !DILocation(line: 4424, column: 52, scope: !2145)
!14103 = !DILocation(line: 4424, column: 62, scope: !2145)
!14104 = !DILocation(line: 4424, column: 9, scope: !2145)
!14105 = !DILocation(line: 4434, column: 9, scope: !2135)
!14106 = !DILocation(line: 4435, column: 5, scope: !2136)
!14107 = !DILocation(line: 4437, column: 25, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !2136, file: !368, line: 4436, column: 10)
!14109 = !DILocation(line: 4437, column: 9, scope: !14108)
!14110 = !DILocation(line: 4439, column: 9, scope: !14108)
!14111 = !DILocation(line: 4441, column: 1, scope: !2125)
!14112 = !DILocation(line: 4666, column: 26, scope: !2174)
!14113 = !DILocation(line: 4668, column: 5, scope: !2174)
!14114 = !DILocation(line: 4668, column: 15, scope: !2174)
!14115 = !DILocation(line: 4668, column: 21, scope: !2174)
!14116 = !DILocation(line: 4670, column: 23, scope: !14117)
!14117 = distinct !DILexicalBlock(scope: !2174, file: !368, line: 4670, column: 9)
!14118 = !DILocation(line: 4670, column: 11, scope: !14117)
!14119 = !DILocation(line: 4670, column: 31, scope: !14117)
!14120 = !DILocation(line: 4670, column: 41, scope: !14117)
!14121 = !DILocation(line: 4670, column: 49, scope: !14117)
!14122 = !DILocation(line: 4670, column: 9, scope: !2174)
!14123 = !DILocation(line: 4672, column: 50, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !14117, file: !368, line: 4670, column: 66)
!14125 = !DILocation(line: 4672, column: 38, scope: !14124)
!14126 = !DILocation(line: 4672, column: 58, scope: !14124)
!14127 = !DILocation(line: 4672, column: 68, scope: !14124)
!14128 = !DILocation(line: 4672, column: 77, scope: !14124)
!14129 = !DILocation(line: 4671, column: 16, scope: !14124)
!14130 = !DILocation(line: 4671, column: 9, scope: !14124)
!14131 = !DILocation(line: 4675, column: 28, scope: !2174)
!14132 = !DILocation(line: 4675, column: 11, scope: !2174)
!14133 = !DILocation(line: 4675, column: 9, scope: !2174)
!14134 = !DILocation(line: 4676, column: 9, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !2174, file: !368, line: 4676, column: 9)
!14136 = !DILocation(line: 4676, column: 13, scope: !14135)
!14137 = !DILocation(line: 4676, column: 9, scope: !2174)
!14138 = !DILocation(line: 4677, column: 9, scope: !14135)
!14139 = !DILocation(line: 4680, column: 49, scope: !2174)
!14140 = !DILocation(line: 4680, column: 37, scope: !2174)
!14141 = !DILocation(line: 4680, column: 57, scope: !2174)
!14142 = !DILocation(line: 4680, column: 67, scope: !2174)
!14143 = !DILocation(line: 4680, column: 76, scope: !2174)
!14144 = !DILocation(line: 4679, column: 14, scope: !2174)
!14145 = !DILocation(line: 4679, column: 12, scope: !2174)
!14146 = !DILocation(line: 4681, column: 5, scope: !2174)
!14147 = !DILocation(line: 4681, column: 10, scope: !14148)
!14148 = !DILexicalBlockFile(scope: !2180, file: !368, discriminator: 1)
!14149 = !DILocation(line: 4681, column: 20, scope: !2180)
!14150 = !DILocation(line: 4681, column: 50, scope: !2180)
!14151 = !DILocation(line: 4681, column: 64, scope: !14152)
!14152 = distinct !DILexicalBlock(scope: !2180, file: !368, line: 4681, column: 61)
!14153 = !DILocation(line: 4681, column: 81, scope: !14152)
!14154 = !DILocation(line: 4681, column: 61, scope: !14152)
!14155 = !DILocation(line: 4681, column: 91, scope: !14152)
!14156 = !DILocation(line: 4681, column: 61, scope: !2180)
!14157 = !DILocation(line: 4681, column: 61, scope: !14158)
!14158 = !DILexicalBlockFile(scope: !2180, file: !368, discriminator: 2)
!14159 = !DILocation(line: 4681, column: 122, scope: !14160)
!14160 = !DILexicalBlockFile(scope: !14152, file: !368, discriminator: 3)
!14161 = !DILocation(line: 4681, column: 140, scope: !14152)
!14162 = !DILocation(line: 4681, column: 150, scope: !14152)
!14163 = !DILocation(line: 4681, column: 175, scope: !14152)
!14164 = !DILocation(line: 4681, column: 106, scope: !14152)
!14165 = !DILocation(line: 4681, column: 194, scope: !14166)
!14166 = !DILexicalBlockFile(scope: !2174, file: !368, discriminator: 4)
!14167 = !DILocation(line: 4681, column: 194, scope: !2180)
!14168 = !DILocation(line: 4681, column: 194, scope: !14169)
!14169 = !DILexicalBlockFile(scope: !2180, file: !368, discriminator: 5)
!14170 = !DILocation(line: 4682, column: 12, scope: !2174)
!14171 = !DILocation(line: 4682, column: 5, scope: !2174)
!14172 = !DILocation(line: 4683, column: 1, scope: !2174)
!14173 = !DILocation(line: 4604, column: 26, scope: !2198)
!14174 = !DILocation(line: 4604, column: 42, scope: !2198)
!14175 = !DILocation(line: 4604, column: 58, scope: !2198)
!14176 = !DILocation(line: 4606, column: 5, scope: !2198)
!14177 = !DILocation(line: 4606, column: 15, scope: !2198)
!14178 = !DILocation(line: 4607, column: 28, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !2198, file: !368, line: 4607, column: 9)
!14180 = !DILocation(line: 4607, column: 10, scope: !14179)
!14181 = !DILocation(line: 4607, column: 9, scope: !2198)
!14182 = !DILocation(line: 4608, column: 9, scope: !14179)
!14183 = !DILocation(line: 4609, column: 9, scope: !14184)
!14184 = distinct !DILexicalBlock(scope: !2198, file: !368, line: 4609, column: 9)
!14185 = !DILocation(line: 4609, column: 9, scope: !2198)
!14186 = !DILocation(line: 4610, column: 33, scope: !14184)
!14187 = !DILocation(line: 4610, column: 39, scope: !14184)
!14188 = !DILocation(line: 4610, column: 16, scope: !14184)
!14189 = !DILocation(line: 4610, column: 9, scope: !14184)
!14190 = !DILocation(line: 4611, column: 5, scope: !2198)
!14191 = !DILocation(line: 4612, column: 1, scope: !2198)
!14192 = !DILocation(line: 4615, column: 31, scope: !2181)
!14193 = !DILocation(line: 4617, column: 5, scope: !2181)
!14194 = !DILocation(line: 4617, column: 20, scope: !2181)
!14195 = !DILocation(line: 4618, column: 41, scope: !2181)
!14196 = !DILocation(line: 4618, column: 29, scope: !2181)
!14197 = !DILocation(line: 4618, column: 12, scope: !2181)
!14198 = !DILocation(line: 4618, column: 10, scope: !2181)
!14199 = !DILocation(line: 4621, column: 12, scope: !2181)
!14200 = !DILocation(line: 4621, column: 18, scope: !2181)
!14201 = !DILocation(line: 4621, column: 26, scope: !2181)
!14202 = !DILocation(line: 4621, column: 32, scope: !2181)
!14203 = !DILocation(line: 4621, column: 39, scope: !2181)
!14204 = !DILocation(line: 4621, column: 45, scope: !2181)
!14205 = !DILocation(line: 4622, column: 1, scope: !2181)
!14206 = !DILocation(line: 4621, column: 5, scope: !2181)
!14207 = !DILocation(line: 4646, column: 37, scope: !2185)
!14208 = !DILocation(line: 4648, column: 19, scope: !2185)
!14209 = !DILocation(line: 4648, column: 25, scope: !2185)
!14210 = !DILocation(line: 4648, column: 68, scope: !2185)
!14211 = !DILocation(line: 4648, column: 74, scope: !2185)
!14212 = !DILocation(line: 4648, column: 12, scope: !2185)
!14213 = !DILocation(line: 4648, column: 5, scope: !2185)
!14214 = !DILocation(line: 4631, column: 31, scope: !2188)
!14215 = !DILocation(line: 4631, column: 47, scope: !2188)
!14216 = !DILocation(line: 4633, column: 59, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !2188, file: !368, line: 4633, column: 9)
!14218 = !DILocation(line: 4633, column: 67, scope: !14217)
!14219 = !DILocation(line: 4633, column: 33, scope: !14217)
!14220 = !DILocation(line: 4633, column: 9, scope: !14217)
!14221 = !DILocation(line: 4633, column: 9, scope: !2188)
!14222 = !DILocation(line: 4634, column: 25, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14217, file: !368, line: 4633, column: 78)
!14224 = !DILocation(line: 4634, column: 33, scope: !14223)
!14225 = !DILocation(line: 4634, column: 42, scope: !14223)
!14226 = !DILocation(line: 4635, column: 16, scope: !14223)
!14227 = !DILocation(line: 4635, column: 9, scope: !14223)
!14228 = !DILocation(line: 4638, column: 44, scope: !2188)
!14229 = !DILocation(line: 4638, column: 29, scope: !2188)
!14230 = !DILocation(line: 4638, column: 12, scope: !2188)
!14231 = !DILocation(line: 4638, column: 5, scope: !2188)
!14232 = !DILocation(line: 4639, column: 1, scope: !2188)
!14233 = !DILocation(line: 4583, column: 31, scope: !2192)
!14234 = !DILocation(line: 4583, column: 47, scope: !2192)
!14235 = !DILocation(line: 4585, column: 5, scope: !2192)
!14236 = !DILocation(line: 4585, column: 15, scope: !2192)
!14237 = !DILocation(line: 4586, column: 5, scope: !2192)
!14238 = !DILocation(line: 4586, column: 20, scope: !2192)
!14239 = !DILocation(line: 4586, column: 56, scope: !2192)
!14240 = !DILocation(line: 4586, column: 44, scope: !2192)
!14241 = !DILocation(line: 4586, column: 27, scope: !2192)
!14242 = !DILocation(line: 4588, column: 9, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !2192, file: !368, line: 4588, column: 9)
!14244 = !DILocation(line: 4588, column: 15, scope: !14243)
!14245 = !DILocation(line: 4588, column: 9, scope: !2192)
!14246 = !DILocation(line: 4589, column: 25, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14243, file: !368, line: 4588, column: 30)
!14248 = !DILocation(line: 4589, column: 9, scope: !14247)
!14249 = !DILocation(line: 4591, column: 9, scope: !14247)
!14250 = !DILocation(line: 4595, column: 14, scope: !2192)
!14251 = !DILocation(line: 4595, column: 20, scope: !2192)
!14252 = !DILocation(line: 4595, column: 28, scope: !2192)
!14253 = !DILocation(line: 4595, column: 34, scope: !2192)
!14254 = !DILocation(line: 4595, column: 41, scope: !2192)
!14255 = !DILocation(line: 4595, column: 48, scope: !2192)
!14256 = !DILocation(line: 4595, column: 54, scope: !2192)
!14257 = !DILocation(line: 4595, column: 12, scope: !2192)
!14258 = !DILocation(line: 4596, column: 10, scope: !14259)
!14259 = distinct !DILexicalBlock(scope: !2192, file: !368, line: 4596, column: 9)
!14260 = !DILocation(line: 4596, column: 9, scope: !2192)
!14261 = !DILocation(line: 4597, column: 9, scope: !14259)
!14262 = !DILocation(line: 4600, column: 20, scope: !2192)
!14263 = !DILocation(line: 4600, column: 29, scope: !2192)
!14264 = !DILocation(line: 4600, column: 12, scope: !2192)
!14265 = !DILocation(line: 4600, column: 5, scope: !2192)
!14266 = !DILocation(line: 4601, column: 1, scope: !2192)
!14267 = !DILocation(line: 5050, column: 27, scope: !2204)
!14268 = !DILocation(line: 5052, column: 23, scope: !2204)
!14269 = !DILocation(line: 5052, column: 29, scope: !2204)
!14270 = !DILocation(line: 5052, column: 14, scope: !2204)
!14271 = !DILocation(line: 5052, column: 13, scope: !2204)
!14272 = !DILocation(line: 5052, column: 35, scope: !2204)
!14273 = !DILocation(line: 5052, column: 5, scope: !2204)
!14274 = !DILocation(line: 4732, column: 24, scope: !2207)
!14275 = !DILocation(line: 4732, column: 43, scope: !2207)
!14276 = !DILocation(line: 4734, column: 5, scope: !2207)
!14277 = !DILocation(line: 4734, column: 18, scope: !2207)
!14278 = !DILocation(line: 4734, column: 40, scope: !2207)
!14279 = !DILocation(line: 4734, column: 25, scope: !2207)
!14280 = !DILocation(line: 4735, column: 5, scope: !2207)
!14281 = !DILocation(line: 4735, column: 16, scope: !2207)
!14282 = !DILocation(line: 4736, column: 5, scope: !2207)
!14283 = !DILocation(line: 4736, column: 16, scope: !2207)
!14284 = !DILocation(line: 4737, column: 5, scope: !2207)
!14285 = !DILocation(line: 4737, column: 20, scope: !2207)
!14286 = !DILocation(line: 4737, column: 30, scope: !2207)
!14287 = !DILocation(line: 4738, column: 5, scope: !2207)
!14288 = !DILocation(line: 4738, column: 15, scope: !2207)
!14289 = !DILocation(line: 4740, column: 19, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !2207, file: !368, line: 4740, column: 9)
!14291 = !DILocation(line: 4740, column: 25, scope: !14290)
!14292 = !DILocation(line: 4740, column: 10, scope: !14290)
!14293 = !DILocation(line: 4740, column: 9, scope: !14290)
!14294 = !DILocation(line: 4740, column: 31, scope: !14290)
!14295 = !DILocation(line: 4740, column: 9, scope: !2207)
!14296 = !DILocation(line: 4741, column: 25, scope: !14297)
!14297 = distinct !DILexicalBlock(scope: !14290, file: !368, line: 4740, column: 46)
!14298 = !DILocation(line: 4741, column: 9, scope: !14297)
!14299 = !DILocation(line: 4743, column: 9, scope: !14297)
!14300 = !DILocation(line: 4746, column: 44, scope: !2207)
!14301 = !DILocation(line: 4746, column: 32, scope: !2207)
!14302 = !DILocation(line: 4746, column: 15, scope: !2207)
!14303 = !DILocation(line: 4746, column: 13, scope: !2207)
!14304 = !DILocation(line: 4749, column: 13, scope: !2207)
!14305 = !DILocation(line: 4749, column: 22, scope: !2207)
!14306 = !DILocation(line: 4749, column: 11, scope: !2207)
!14307 = !DILocation(line: 4751, column: 31, scope: !2207)
!14308 = !DILocation(line: 4751, column: 16, scope: !2207)
!14309 = !DILocation(line: 4751, column: 14, scope: !2207)
!14310 = !DILocation(line: 4755, column: 12, scope: !2207)
!14311 = !DILocation(line: 4755, column: 22, scope: !2207)
!14312 = !DILocation(line: 4755, column: 10, scope: !2207)
!14313 = !DILocation(line: 4756, column: 14, scope: !2207)
!14314 = !DILocation(line: 4756, column: 22, scope: !2207)
!14315 = !DILocation(line: 4756, column: 32, scope: !2207)
!14316 = !DILocation(line: 4756, column: 20, scope: !2207)
!14317 = !DILocation(line: 4756, column: 12, scope: !2207)
!14318 = !DILocation(line: 4758, column: 24, scope: !2207)
!14319 = !DILocation(line: 4758, column: 31, scope: !2207)
!14320 = !DILocation(line: 4758, column: 40, scope: !2207)
!14321 = !DILocation(line: 4758, column: 61, scope: !2207)
!14322 = !DILocation(line: 4758, column: 49, scope: !2207)
!14323 = !DILocation(line: 4759, column: 22, scope: !2207)
!14324 = !DILocation(line: 4759, column: 29, scope: !2207)
!14325 = !DILocation(line: 4759, column: 46, scope: !2207)
!14326 = !DILocation(line: 4759, column: 52, scope: !2207)
!14327 = !DILocation(line: 4759, column: 37, scope: !2207)
!14328 = !DILocation(line: 4759, column: 36, scope: !2207)
!14329 = !DILocation(line: 4759, column: 61, scope: !2207)
!14330 = !DILocation(line: 4759, column: 59, scope: !2207)
!14331 = !DILocation(line: 4758, column: 12, scope: !2207)
!14332 = !DILocation(line: 4758, column: 5, scope: !2207)
!14333 = !DILocation(line: 4760, column: 1, scope: !2207)
!14334 = !DILocation(line: 4763, column: 28, scope: !2217)
!14335 = !DILocation(line: 4763, column: 47, scope: !2217)
!14336 = !DILocation(line: 4763, column: 64, scope: !2217)
!14337 = !DILocation(line: 4765, column: 5, scope: !2217)
!14338 = !DILocation(line: 4765, column: 18, scope: !2217)
!14339 = !DILocation(line: 4765, column: 40, scope: !2217)
!14340 = !DILocation(line: 4765, column: 25, scope: !2217)
!14341 = !DILocation(line: 4766, column: 5, scope: !2217)
!14342 = !DILocation(line: 4766, column: 16, scope: !2217)
!14343 = !DILocation(line: 4767, column: 5, scope: !2217)
!14344 = !DILocation(line: 4767, column: 16, scope: !2217)
!14345 = !DILocation(line: 4768, column: 5, scope: !2217)
!14346 = !DILocation(line: 4768, column: 20, scope: !2217)
!14347 = !DILocation(line: 4768, column: 30, scope: !2217)
!14348 = !DILocation(line: 4769, column: 5, scope: !2217)
!14349 = !DILocation(line: 4769, column: 15, scope: !2217)
!14350 = !DILocation(line: 4771, column: 9, scope: !14351)
!14351 = distinct !DILexicalBlock(scope: !2217, file: !368, line: 4771, column: 9)
!14352 = !DILocation(line: 4771, column: 15, scope: !14351)
!14353 = !DILocation(line: 4771, column: 9, scope: !2217)
!14354 = !DILocation(line: 4772, column: 25, scope: !14355)
!14355 = distinct !DILexicalBlock(scope: !14351, file: !368, line: 4771, column: 30)
!14356 = !DILocation(line: 4772, column: 9, scope: !14355)
!14357 = !DILocation(line: 4774, column: 9, scope: !14355)
!14358 = !DILocation(line: 4777, column: 19, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !2217, file: !368, line: 4777, column: 9)
!14360 = !DILocation(line: 4777, column: 25, scope: !14359)
!14361 = !DILocation(line: 4777, column: 10, scope: !14359)
!14362 = !DILocation(line: 4777, column: 9, scope: !14359)
!14363 = !DILocation(line: 4777, column: 31, scope: !14359)
!14364 = !DILocation(line: 4777, column: 9, scope: !2217)
!14365 = !DILocation(line: 4778, column: 25, scope: !14366)
!14366 = distinct !DILexicalBlock(scope: !14359, file: !368, line: 4777, column: 46)
!14367 = !DILocation(line: 4778, column: 9, scope: !14366)
!14368 = !DILocation(line: 4780, column: 9, scope: !14366)
!14369 = !DILocation(line: 4783, column: 44, scope: !2217)
!14370 = !DILocation(line: 4783, column: 32, scope: !2217)
!14371 = !DILocation(line: 4783, column: 15, scope: !2217)
!14372 = !DILocation(line: 4783, column: 13, scope: !2217)
!14373 = !DILocation(line: 4786, column: 13, scope: !2217)
!14374 = !DILocation(line: 4786, column: 22, scope: !2217)
!14375 = !DILocation(line: 4786, column: 11, scope: !2217)
!14376 = !DILocation(line: 4789, column: 31, scope: !2217)
!14377 = !DILocation(line: 4789, column: 16, scope: !2217)
!14378 = !DILocation(line: 4789, column: 14, scope: !2217)
!14379 = !DILocation(line: 4793, column: 12, scope: !2217)
!14380 = !DILocation(line: 4793, column: 22, scope: !2217)
!14381 = !DILocation(line: 4793, column: 10, scope: !2217)
!14382 = !DILocation(line: 4794, column: 14, scope: !2217)
!14383 = !DILocation(line: 4794, column: 22, scope: !2217)
!14384 = !DILocation(line: 4794, column: 32, scope: !2217)
!14385 = !DILocation(line: 4794, column: 20, scope: !2217)
!14386 = !DILocation(line: 4794, column: 12, scope: !2217)
!14387 = !DILocation(line: 4796, column: 36, scope: !2217)
!14388 = !DILocation(line: 4796, column: 24, scope: !2217)
!14389 = !DILocation(line: 4796, column: 42, scope: !2217)
!14390 = !DILocation(line: 4796, column: 49, scope: !2217)
!14391 = !DILocation(line: 4796, column: 58, scope: !2217)
!14392 = !DILocation(line: 4796, column: 67, scope: !2217)
!14393 = !DILocation(line: 4797, column: 22, scope: !2217)
!14394 = !DILocation(line: 4797, column: 29, scope: !2217)
!14395 = !DILocation(line: 4797, column: 46, scope: !2217)
!14396 = !DILocation(line: 4797, column: 52, scope: !2217)
!14397 = !DILocation(line: 4797, column: 37, scope: !2217)
!14398 = !DILocation(line: 4797, column: 36, scope: !2217)
!14399 = !DILocation(line: 4797, column: 61, scope: !2217)
!14400 = !DILocation(line: 4797, column: 59, scope: !2217)
!14401 = !DILocation(line: 4796, column: 12, scope: !2217)
!14402 = !DILocation(line: 4796, column: 5, scope: !2217)
!14403 = !DILocation(line: 4798, column: 1, scope: !2217)
!14404 = !DILocation(line: 4898, column: 29, scope: !2228)
!14405 = !DILocation(line: 4898, column: 47, scope: !2228)
!14406 = !DILocation(line: 4900, column: 5, scope: !2228)
!14407 = !DILocation(line: 4900, column: 18, scope: !2228)
!14408 = !DILocation(line: 4900, column: 40, scope: !2228)
!14409 = !DILocation(line: 4900, column: 25, scope: !2228)
!14410 = !DILocation(line: 4901, column: 11, scope: !2235)
!14411 = !DILocation(line: 4901, column: 18, scope: !2235)
!14412 = !DILocation(line: 4901, column: 27, scope: !2235)
!14413 = !DILocation(line: 4901, column: 40, scope: !2235)
!14414 = !DILocation(line: 4901, column: 54, scope: !2235)
!14415 = !DILocation(line: 4901, column: 58, scope: !14416)
!14416 = !DILexicalBlockFile(scope: !2235, file: !368, discriminator: 1)
!14417 = !DILocation(line: 4901, column: 65, scope: !2235)
!14418 = !DILocation(line: 4901, column: 74, scope: !2235)
!14419 = !DILocation(line: 4901, column: 88, scope: !2235)
!14420 = !DILocation(line: 4901, column: 97, scope: !2235)
!14421 = !DILocation(line: 4901, column: 9, scope: !2228)
!14422 = !DILocation(line: 4902, column: 9, scope: !2234)
!14423 = !DILocation(line: 4902, column: 20, scope: !2234)
!14424 = !DILocation(line: 4902, column: 43, scope: !2234)
!14425 = !DILocation(line: 4902, column: 49, scope: !2234)
!14426 = !DILocation(line: 4902, column: 24, scope: !2234)
!14427 = !DILocation(line: 4903, column: 13, scope: !14428)
!14428 = distinct !DILexicalBlock(scope: !2234, file: !368, line: 4903, column: 13)
!14429 = !DILocation(line: 4903, column: 15, scope: !14428)
!14430 = !DILocation(line: 4903, column: 21, scope: !14428)
!14431 = !DILocation(line: 4903, column: 24, scope: !14432)
!14432 = !DILexicalBlockFile(scope: !14428, file: !368, discriminator: 1)
!14433 = !DILocation(line: 4903, column: 13, scope: !2234)
!14434 = !DILocation(line: 4904, column: 13, scope: !14428)
!14435 = !DILocation(line: 4905, column: 29, scope: !2234)
!14436 = !DILocation(line: 4905, column: 37, scope: !2234)
!14437 = !DILocation(line: 4905, column: 16, scope: !2234)
!14438 = !DILocation(line: 4905, column: 9, scope: !2234)
!14439 = !DILocation(line: 4906, column: 5, scope: !2235)
!14440 = !DILocation(line: 4907, column: 29, scope: !2238)
!14441 = !DILocation(line: 4907, column: 37, scope: !2238)
!14442 = !DILocation(line: 4907, column: 46, scope: !2238)
!14443 = !DILocation(line: 4907, column: 14, scope: !2235)
!14444 = !DILocation(line: 4908, column: 9, scope: !2237)
!14445 = !DILocation(line: 4908, column: 24, scope: !2237)
!14446 = !DILocation(line: 4908, column: 49, scope: !2237)
!14447 = !DILocation(line: 4908, column: 32, scope: !2237)
!14448 = !DILocation(line: 4909, column: 9, scope: !2237)
!14449 = !DILocation(line: 4909, column: 20, scope: !2237)
!14450 = !DILocation(line: 4909, column: 27, scope: !2237)
!14451 = !DILocation(line: 4909, column: 33, scope: !2237)
!14452 = !DILocation(line: 4910, column: 9, scope: !2237)
!14453 = !DILocation(line: 4910, column: 19, scope: !2237)
!14454 = !DILocation(line: 4911, column: 9, scope: !2237)
!14455 = !DILocation(line: 4911, column: 24, scope: !2237)
!14456 = !DILocation(line: 4911, column: 34, scope: !2237)
!14457 = !DILocation(line: 4912, column: 9, scope: !2237)
!14458 = !DILocation(line: 4912, column: 19, scope: !2237)
!14459 = !DILocation(line: 4913, column: 9, scope: !2237)
!14460 = !DILocation(line: 4913, column: 20, scope: !2237)
!14461 = !DILocation(line: 4913, column: 23, scope: !2237)
!14462 = !DILocation(line: 4913, column: 28, scope: !2237)
!14463 = !DILocation(line: 4918, column: 13, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !2237, file: !368, line: 4918, column: 13)
!14465 = !DILocation(line: 4918, column: 20, scope: !14464)
!14466 = !{!14467, !2523, i64 32}
!14467 = !{!"", !2552, i64 0, !2523, i64 16, !2523, i64 24, !2523, i64 32}
!14468 = !DILocation(line: 4918, column: 25, scope: !14464)
!14469 = !DILocation(line: 4918, column: 13, scope: !2237)
!14470 = !DILocation(line: 4919, column: 18, scope: !14471)
!14471 = distinct !DILexicalBlock(scope: !14464, file: !368, line: 4918, column: 47)
!14472 = !DILocation(line: 4920, column: 9, scope: !14471)
!14473 = !DILocation(line: 4922, column: 39, scope: !14474)
!14474 = distinct !DILexicalBlock(scope: !14464, file: !368, line: 4921, column: 14)
!14475 = !DILocation(line: 4922, column: 46, scope: !14474)
!14476 = !DILocation(line: 4923, column: 39, scope: !14474)
!14477 = !DILocation(line: 4922, column: 20, scope: !14474)
!14478 = !DILocation(line: 4922, column: 18, scope: !14474)
!14479 = !DILocation(line: 4924, column: 17, scope: !14480)
!14480 = distinct !DILexicalBlock(scope: !14474, file: !368, line: 4924, column: 17)
!14481 = !DILocation(line: 4924, column: 22, scope: !14480)
!14482 = !DILocation(line: 4924, column: 28, scope: !14480)
!14483 = !DILocation(line: 4924, column: 31, scope: !14484)
!14484 = !DILexicalBlockFile(scope: !14480, file: !368, discriminator: 1)
!14485 = !DILocation(line: 4924, column: 17, scope: !14474)
!14486 = !DILocation(line: 4925, column: 17, scope: !14480)
!14487 = !DILocation(line: 4926, column: 17, scope: !14488)
!14488 = distinct !DILexicalBlock(scope: !14474, file: !368, line: 4926, column: 17)
!14489 = !DILocation(line: 4926, column: 22, scope: !14488)
!14490 = !DILocation(line: 4926, column: 17, scope: !14474)
!14491 = !DILocation(line: 4927, column: 33, scope: !14492)
!14492 = distinct !DILexicalBlock(scope: !14488, file: !368, line: 4926, column: 28)
!14493 = !DILocation(line: 4927, column: 17, scope: !14492)
!14494 = !DILocation(line: 4929, column: 17, scope: !14492)
!14495 = !DILocation(line: 4932, column: 13, scope: !14496)
!14496 = distinct !DILexicalBlock(scope: !2237, file: !368, line: 4932, column: 13)
!14497 = !DILocation(line: 4932, column: 20, scope: !14496)
!14498 = !{!14467, !2523, i64 16}
!14499 = !DILocation(line: 4932, column: 26, scope: !14496)
!14500 = !DILocation(line: 4932, column: 13, scope: !2237)
!14501 = !DILocation(line: 4933, column: 17, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !14503, file: !368, line: 4933, column: 17)
!14503 = distinct !DILexicalBlock(scope: !14496, file: !368, line: 4932, column: 48)
!14504 = !DILocation(line: 4933, column: 22, scope: !14502)
!14505 = !DILocation(line: 4933, column: 17, scope: !14503)
!14506 = !DILocation(line: 4934, column: 33, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14502, file: !368, line: 4933, column: 27)
!14508 = !DILocation(line: 4934, column: 17, scope: !14507)
!14509 = !DILocation(line: 4937, column: 17, scope: !14507)
!14510 = !DILocation(line: 4939, column: 19, scope: !14503)
!14511 = !DILocation(line: 4940, column: 9, scope: !14503)
!14512 = !DILocation(line: 4942, column: 40, scope: !14513)
!14513 = distinct !DILexicalBlock(scope: !14496, file: !368, line: 4941, column: 14)
!14514 = !DILocation(line: 4942, column: 47, scope: !14513)
!14515 = !DILocation(line: 4943, column: 40, scope: !14513)
!14516 = !DILocation(line: 4942, column: 21, scope: !14513)
!14517 = !DILocation(line: 4942, column: 19, scope: !14513)
!14518 = !DILocation(line: 4944, column: 17, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !14513, file: !368, line: 4944, column: 17)
!14520 = !DILocation(line: 4944, column: 23, scope: !14519)
!14521 = !DILocation(line: 4944, column: 29, scope: !14519)
!14522 = !DILocation(line: 4944, column: 32, scope: !14523)
!14523 = !DILexicalBlockFile(scope: !14519, file: !368, discriminator: 1)
!14524 = !DILocation(line: 4944, column: 17, scope: !14513)
!14525 = !DILocation(line: 4945, column: 17, scope: !14519)
!14526 = !DILocation(line: 4947, column: 13, scope: !14527)
!14527 = distinct !DILexicalBlock(scope: !2237, file: !368, line: 4947, column: 13)
!14528 = !DILocation(line: 4947, column: 20, scope: !14527)
!14529 = !{!14467, !2523, i64 24}
!14530 = !DILocation(line: 4947, column: 25, scope: !14527)
!14531 = !DILocation(line: 4947, column: 13, scope: !2237)
!14532 = !DILocation(line: 4948, column: 29, scope: !14533)
!14533 = distinct !DILexicalBlock(scope: !14527, file: !368, line: 4947, column: 47)
!14534 = !DILocation(line: 4948, column: 13, scope: !14533)
!14535 = !DILocation(line: 4950, column: 13, scope: !14533)
!14536 = !DILocation(line: 4952, column: 35, scope: !2237)
!14537 = !DILocation(line: 4952, column: 42, scope: !2237)
!14538 = !DILocation(line: 4953, column: 35, scope: !2237)
!14539 = !DILocation(line: 4952, column: 16, scope: !2237)
!14540 = !DILocation(line: 4952, column: 14, scope: !2237)
!14541 = !DILocation(line: 4954, column: 13, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !2237, file: !368, line: 4954, column: 13)
!14543 = !DILocation(line: 4954, column: 18, scope: !14542)
!14544 = !DILocation(line: 4954, column: 24, scope: !14542)
!14545 = !DILocation(line: 4954, column: 27, scope: !14546)
!14546 = !DILexicalBlockFile(scope: !14542, file: !368, discriminator: 1)
!14547 = !DILocation(line: 4954, column: 13, scope: !2237)
!14548 = !DILocation(line: 4955, column: 13, scope: !14542)
!14549 = !DILocation(line: 4956, column: 14, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !2237, file: !368, line: 4956, column: 13)
!14551 = !DILocation(line: 4956, column: 19, scope: !14550)
!14552 = !DILocation(line: 4956, column: 23, scope: !14550)
!14553 = !DILocation(line: 4956, column: 26, scope: !14554)
!14554 = !DILexicalBlockFile(scope: !14550, file: !368, discriminator: 1)
!14555 = !DILocation(line: 4956, column: 34, scope: !14550)
!14556 = !DILocation(line: 4956, column: 32, scope: !14550)
!14557 = !DILocation(line: 4956, column: 40, scope: !14550)
!14558 = !DILocation(line: 4957, column: 14, scope: !14550)
!14559 = !DILocation(line: 4957, column: 19, scope: !14550)
!14560 = !DILocation(line: 4957, column: 23, scope: !14550)
!14561 = !DILocation(line: 4957, column: 26, scope: !14554)
!14562 = !DILocation(line: 4957, column: 34, scope: !14550)
!14563 = !DILocation(line: 4957, column: 32, scope: !14550)
!14564 = !DILocation(line: 4956, column: 13, scope: !2237)
!14565 = !DILocation(line: 4958, column: 17, scope: !14550)
!14566 = !DILocation(line: 4958, column: 13, scope: !14550)
!14567 = !DILocation(line: 4959, column: 18, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14550, file: !368, line: 4959, column: 18)
!14569 = !DILocation(line: 4959, column: 23, scope: !14568)
!14570 = !DILocation(line: 4959, column: 18, scope: !14550)
!14571 = !DILocation(line: 4960, column: 20, scope: !14568)
!14572 = !DILocation(line: 4960, column: 27, scope: !14568)
!14573 = !DILocation(line: 4960, column: 25, scope: !14568)
!14574 = !DILocation(line: 4960, column: 33, scope: !14568)
!14575 = !DILocation(line: 4960, column: 40, scope: !14568)
!14576 = !DILocation(line: 4960, column: 38, scope: !14568)
!14577 = !DILocation(line: 4960, column: 45, scope: !14568)
!14578 = !DILocation(line: 4960, column: 17, scope: !14568)
!14579 = !DILocation(line: 4960, column: 13, scope: !14568)
!14580 = !DILocation(line: 4962, column: 20, scope: !14568)
!14581 = !DILocation(line: 4962, column: 27, scope: !14568)
!14582 = !DILocation(line: 4962, column: 25, scope: !14568)
!14583 = !DILocation(line: 4962, column: 33, scope: !14568)
!14584 = !DILocation(line: 4962, column: 40, scope: !14568)
!14585 = !DILocation(line: 4962, column: 38, scope: !14568)
!14586 = !DILocation(line: 4962, column: 45, scope: !14568)
!14587 = !DILocation(line: 4962, column: 17, scope: !14568)
!14588 = !DILocation(line: 4964, column: 48, scope: !2237)
!14589 = !DILocation(line: 4964, column: 36, scope: !2237)
!14590 = !DILocation(line: 4964, column: 19, scope: !2237)
!14591 = !DILocation(line: 4964, column: 17, scope: !2237)
!14592 = !DILocation(line: 4966, column: 17, scope: !2237)
!14593 = !DILocation(line: 4966, column: 26, scope: !2237)
!14594 = !DILocation(line: 4966, column: 15, scope: !2237)
!14595 = !DILocation(line: 4968, column: 35, scope: !2237)
!14596 = !DILocation(line: 4968, column: 20, scope: !2237)
!14597 = !DILocation(line: 4968, column: 18, scope: !2237)
!14598 = !DILocation(line: 4970, column: 13, scope: !2251)
!14599 = !DILocation(line: 4970, column: 23, scope: !2251)
!14600 = !DILocation(line: 4970, column: 34, scope: !2251)
!14601 = !DILocation(line: 4970, column: 62, scope: !2251)
!14602 = !DILocation(line: 4970, column: 31, scope: !2251)
!14603 = !DILocation(line: 4970, column: 13, scope: !2237)
!14604 = !DILocation(line: 4971, column: 13, scope: !2250)
!14605 = !DILocation(line: 4971, column: 19, scope: !2250)
!14606 = !DILocation(line: 4971, column: 35, scope: !2250)
!14607 = !DILocation(line: 4971, column: 41, scope: !2250)
!14608 = !DILocation(line: 4971, column: 26, scope: !2250)
!14609 = !DILocation(line: 4971, column: 25, scope: !2250)
!14610 = !DILocation(line: 4972, column: 13, scope: !2250)
!14611 = !DILocation(line: 4972, column: 19, scope: !2250)
!14612 = !DILocation(line: 4974, column: 17, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !2250, file: !368, line: 4974, column: 17)
!14614 = !DILocation(line: 4974, column: 21, scope: !14613)
!14615 = !DILocation(line: 4974, column: 17, scope: !2250)
!14616 = !DILocation(line: 4975, column: 24, scope: !14613)
!14617 = !DILocation(line: 4975, column: 17, scope: !14613)
!14618 = !DILocation(line: 4976, column: 17, scope: !14619)
!14619 = distinct !DILexicalBlock(scope: !2250, file: !368, line: 4976, column: 17)
!14620 = !DILocation(line: 4976, column: 22, scope: !14619)
!14621 = !DILocation(line: 4976, column: 17, scope: !2250)
!14622 = !DILocation(line: 4977, column: 50, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14619, file: !368, line: 4976, column: 28)
!14624 = !DILocation(line: 4977, column: 56, scope: !14623)
!14625 = !DILocation(line: 4977, column: 54, scope: !14623)
!14626 = !DILocation(line: 4978, column: 50, scope: !14623)
!14627 = !DILocation(line: 4977, column: 24, scope: !14623)
!14628 = !DILocation(line: 4977, column: 17, scope: !14623)
!14629 = !DILocation(line: 4980, column: 41, scope: !2250)
!14630 = !DILocation(line: 4980, column: 28, scope: !2250)
!14631 = !DILocation(line: 4980, column: 18, scope: !2250)
!14632 = !DILocation(line: 4981, column: 17, scope: !14633)
!14633 = distinct !DILexicalBlock(scope: !2250, file: !368, line: 4981, column: 17)
!14634 = !DILocation(line: 4981, column: 22, scope: !14633)
!14635 = !DILocation(line: 4981, column: 17, scope: !2250)
!14636 = !DILocation(line: 4982, column: 24, scope: !14633)
!14637 = !DILocation(line: 4982, column: 17, scope: !14633)
!14638 = !DILocation(line: 4983, column: 24, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !2250, file: !368, line: 4983, column: 13)
!14640 = !DILocation(line: 4983, column: 22, scope: !14639)
!14641 = !DILocation(line: 4983, column: 33, scope: !14639)
!14642 = !DILocation(line: 4983, column: 18, scope: !14639)
!14643 = !DILocation(line: 4983, column: 38, scope: !14644)
!14644 = !DILexicalBlockFile(scope: !14645, file: !368, discriminator: 2)
!14645 = !DILexicalBlockFile(scope: !14646, file: !368, discriminator: 1)
!14646 = distinct !DILexicalBlock(scope: !14639, file: !368, line: 4983, column: 13)
!14647 = !DILocation(line: 4983, column: 42, scope: !14646)
!14648 = !DILocation(line: 4983, column: 40, scope: !14646)
!14649 = !DILocation(line: 4983, column: 13, scope: !14639)
!14650 = !DILocation(line: 4984, column: 31, scope: !14651)
!14651 = distinct !DILexicalBlock(scope: !14646, file: !368, line: 4983, column: 65)
!14652 = !DILocation(line: 4984, column: 27, scope: !14651)
!14653 = !DILocation(line: 4984, column: 22, scope: !14651)
!14654 = !DILocation(line: 4984, column: 17, scope: !14651)
!14655 = !DILocation(line: 4984, column: 25, scope: !14651)
!14656 = !DILocation(line: 4985, column: 13, scope: !14651)
!14657 = !DILocation(line: 4983, column: 54, scope: !14646)
!14658 = !DILocation(line: 4983, column: 51, scope: !14646)
!14659 = !DILocation(line: 4983, column: 61, scope: !14646)
!14660 = !DILocation(line: 4983, column: 13, scope: !14646)
!14661 = !DILocation(line: 4986, column: 44, scope: !2250)
!14662 = !DILocation(line: 4986, column: 50, scope: !2250)
!14663 = !DILocation(line: 4986, column: 18, scope: !2250)
!14664 = !DILocation(line: 4986, column: 16, scope: !2250)
!14665 = !DILocation(line: 4987, column: 24, scope: !2250)
!14666 = !DILocation(line: 4987, column: 13, scope: !2250)
!14667 = !DILocation(line: 4988, column: 20, scope: !2250)
!14668 = !DILocation(line: 4988, column: 13, scope: !2250)
!14669 = !DILocation(line: 4989, column: 9, scope: !2251)
!14670 = !DILocation(line: 4991, column: 13, scope: !2255)
!14671 = !DILocation(line: 4991, column: 23, scope: !2255)
!14672 = !DILocation(line: 4991, column: 34, scope: !2255)
!14673 = !DILocation(line: 4991, column: 62, scope: !2255)
!14674 = !DILocation(line: 4991, column: 31, scope: !2255)
!14675 = !DILocation(line: 4991, column: 13, scope: !2237)
!14676 = !DILocation(line: 4992, column: 13, scope: !2254)
!14677 = !DILocation(line: 4992, column: 22, scope: !2254)
!14678 = !DILocation(line: 4992, column: 41, scope: !2254)
!14679 = !DILocation(line: 4992, column: 47, scope: !2254)
!14680 = !DILocation(line: 4992, column: 29, scope: !2254)
!14681 = !DILocation(line: 4992, column: 28, scope: !2254)
!14682 = !DILocation(line: 4993, column: 13, scope: !2254)
!14683 = !DILocation(line: 4993, column: 22, scope: !2254)
!14684 = !DILocation(line: 4995, column: 17, scope: !14685)
!14685 = distinct !DILexicalBlock(scope: !2254, file: !368, line: 4995, column: 17)
!14686 = !DILocation(line: 4995, column: 21, scope: !14685)
!14687 = !DILocation(line: 4995, column: 17, scope: !2254)
!14688 = !DILocation(line: 4996, column: 24, scope: !14685)
!14689 = !DILocation(line: 4996, column: 17, scope: !14685)
!14690 = !DILocation(line: 4997, column: 17, scope: !14691)
!14691 = distinct !DILexicalBlock(scope: !2254, file: !368, line: 4997, column: 17)
!14692 = !DILocation(line: 4997, column: 22, scope: !14691)
!14693 = !DILocation(line: 4997, column: 17, scope: !2254)
!14694 = !DILocation(line: 4998, column: 47, scope: !14695)
!14695 = distinct !DILexicalBlock(scope: !14691, file: !368, line: 4997, column: 28)
!14696 = !DILocation(line: 4998, column: 53, scope: !14695)
!14697 = !DILocation(line: 4998, column: 51, scope: !14695)
!14698 = !DILocation(line: 4999, column: 47, scope: !14695)
!14699 = !DILocation(line: 4998, column: 24, scope: !14695)
!14700 = !DILocation(line: 4998, column: 17, scope: !14695)
!14701 = !DILocation(line: 5001, column: 44, scope: !2254)
!14702 = !DILocation(line: 5001, column: 48, scope: !2254)
!14703 = !DILocation(line: 5001, column: 31, scope: !2254)
!14704 = !DILocation(line: 5001, column: 20, scope: !2254)
!14705 = !DILocation(line: 5001, column: 18, scope: !2254)
!14706 = !DILocation(line: 5002, column: 17, scope: !14707)
!14707 = distinct !DILexicalBlock(scope: !2254, file: !368, line: 5002, column: 17)
!14708 = !DILocation(line: 5002, column: 22, scope: !14707)
!14709 = !DILocation(line: 5002, column: 17, scope: !2254)
!14710 = !DILocation(line: 5003, column: 24, scope: !14707)
!14711 = !DILocation(line: 5003, column: 17, scope: !14707)
!14712 = !DILocation(line: 5004, column: 24, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !2254, file: !368, line: 5004, column: 13)
!14714 = !DILocation(line: 5004, column: 22, scope: !14713)
!14715 = !DILocation(line: 5004, column: 33, scope: !14713)
!14716 = !DILocation(line: 5004, column: 18, scope: !14713)
!14717 = !DILocation(line: 5004, column: 38, scope: !14718)
!14718 = !DILexicalBlockFile(scope: !14719, file: !368, discriminator: 2)
!14719 = !DILexicalBlockFile(scope: !14720, file: !368, discriminator: 1)
!14720 = distinct !DILexicalBlock(scope: !14713, file: !368, line: 5004, column: 13)
!14721 = !DILocation(line: 5004, column: 42, scope: !14720)
!14722 = !DILocation(line: 5004, column: 40, scope: !14720)
!14723 = !DILocation(line: 5004, column: 13, scope: !14713)
!14724 = !DILocation(line: 5005, column: 31, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14720, file: !368, line: 5004, column: 65)
!14726 = !DILocation(line: 5005, column: 27, scope: !14725)
!14727 = !DILocation(line: 5005, column: 22, scope: !14725)
!14728 = !DILocation(line: 5005, column: 17, scope: !14725)
!14729 = !DILocation(line: 5005, column: 25, scope: !14725)
!14730 = !DILocation(line: 5006, column: 13, scope: !14725)
!14731 = !DILocation(line: 5004, column: 54, scope: !14720)
!14732 = !DILocation(line: 5004, column: 51, scope: !14720)
!14733 = !DILocation(line: 5004, column: 61, scope: !14720)
!14734 = !DILocation(line: 5004, column: 13, scope: !14720)
!14735 = !DILocation(line: 5007, column: 41, scope: !2254)
!14736 = !DILocation(line: 5007, column: 47, scope: !2254)
!14737 = !DILocation(line: 5007, column: 18, scope: !2254)
!14738 = !DILocation(line: 5007, column: 16, scope: !2254)
!14739 = !DILocation(line: 5008, column: 24, scope: !2254)
!14740 = !DILocation(line: 5008, column: 13, scope: !2254)
!14741 = !DILocation(line: 5009, column: 20, scope: !2254)
!14742 = !DILocation(line: 5009, column: 13, scope: !2254)
!14743 = !DILocation(line: 5010, column: 9, scope: !2255)
!14744 = !DILocation(line: 5013, column: 25, scope: !2237)
!14745 = !DILocation(line: 5013, column: 14, scope: !2237)
!14746 = !DILocation(line: 5013, column: 12, scope: !2237)
!14747 = !DILocation(line: 5014, column: 13, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !2237, file: !368, line: 5014, column: 13)
!14749 = !DILocation(line: 5014, column: 16, scope: !14748)
!14750 = !DILocation(line: 5014, column: 13, scope: !2237)
!14751 = !DILocation(line: 5015, column: 13, scope: !14748)
!14752 = !DILocation(line: 5017, column: 20, scope: !2260)
!14753 = !DILocation(line: 5017, column: 18, scope: !2260)
!14754 = !DILocation(line: 5017, column: 29, scope: !2260)
!14755 = !DILocation(line: 5017, column: 14, scope: !2260)
!14756 = !DILocation(line: 5017, column: 34, scope: !14757)
!14757 = !DILexicalBlockFile(scope: !14758, file: !368, discriminator: 2)
!14758 = !DILexicalBlockFile(scope: !2259, file: !368, discriminator: 1)
!14759 = !DILocation(line: 5017, column: 38, scope: !2259)
!14760 = !DILocation(line: 5017, column: 36, scope: !2259)
!14761 = !DILocation(line: 5017, column: 9, scope: !2260)
!14762 = !DILocation(line: 5018, column: 13, scope: !2258)
!14763 = !DILocation(line: 5018, column: 23, scope: !2258)
!14764 = !DILocation(line: 5018, column: 40, scope: !2258)
!14765 = !DILocation(line: 5018, column: 48, scope: !2258)
!14766 = !DILocation(line: 5018, column: 27, scope: !2258)
!14767 = !DILocation(line: 5019, column: 52, scope: !2258)
!14768 = !DILocation(line: 5019, column: 46, scope: !2258)
!14769 = !DILocation(line: 5019, column: 32, scope: !2258)
!14770 = !DILocation(line: 5019, column: 15, scope: !2258)
!14771 = !DILocation(line: 5019, column: 38, scope: !2258)
!14772 = !DILocation(line: 5019, column: 14, scope: !2258)
!14773 = !DILocation(line: 5019, column: 49, scope: !2258)
!14774 = !DILocation(line: 5020, column: 9, scope: !2259)
!14775 = !DILocation(line: 5020, column: 9, scope: !2258)
!14776 = !DILocation(line: 5017, column: 50, scope: !2259)
!14777 = !DILocation(line: 5017, column: 47, scope: !2259)
!14778 = !DILocation(line: 5017, column: 57, scope: !2259)
!14779 = !DILocation(line: 5017, column: 9, scope: !2259)
!14780 = !DILocation(line: 5021, column: 16, scope: !2237)
!14781 = !DILocation(line: 5021, column: 9, scope: !2237)
!14782 = !DILocation(line: 5022, column: 5, scope: !2238)
!14783 = !DILocation(line: 5024, column: 25, scope: !14784)
!14784 = distinct !DILexicalBlock(scope: !2238, file: !368, line: 5023, column: 10)
!14785 = !DILocation(line: 5024, column: 9, scope: !14784)
!14786 = !DILocation(line: 5026, column: 9, scope: !14784)
!14787 = !DILocation(line: 5028, column: 1, scope: !2228)
!14788 = !DILocation(line: 4801, column: 35, scope: !2261)
!14789 = !DILocation(line: 4801, column: 47, scope: !2261)
!14790 = !DILocation(line: 4803, column: 5, scope: !2261)
!14791 = !DILocation(line: 4803, column: 20, scope: !2261)
!14792 = !DILocation(line: 4805, column: 19, scope: !14793)
!14793 = distinct !DILexicalBlock(scope: !2261, file: !368, line: 4805, column: 9)
!14794 = !DILocation(line: 4805, column: 25, scope: !14793)
!14795 = !DILocation(line: 4805, column: 10, scope: !14793)
!14796 = !DILocation(line: 4805, column: 9, scope: !14793)
!14797 = !DILocation(line: 4805, column: 31, scope: !14793)
!14798 = !DILocation(line: 4805, column: 9, scope: !2261)
!14799 = !DILocation(line: 4806, column: 25, scope: !14800)
!14800 = distinct !DILexicalBlock(scope: !14793, file: !368, line: 4805, column: 46)
!14801 = !DILocation(line: 4806, column: 9, scope: !14800)
!14802 = !DILocation(line: 4808, column: 9, scope: !14800)
!14803 = !DILocation(line: 4811, column: 44, scope: !2261)
!14804 = !DILocation(line: 4811, column: 32, scope: !2261)
!14805 = !DILocation(line: 4811, column: 15, scope: !2261)
!14806 = !DILocation(line: 4811, column: 13, scope: !2261)
!14807 = !DILocation(line: 4813, column: 32, scope: !2261)
!14808 = !DILocation(line: 4813, column: 41, scope: !2261)
!14809 = !DILocation(line: 4814, column: 42, scope: !2261)
!14810 = !DILocation(line: 4814, column: 30, scope: !2261)
!14811 = !DILocation(line: 4815, column: 40, scope: !2261)
!14812 = !DILocation(line: 4815, column: 46, scope: !2261)
!14813 = !DILocation(line: 4815, column: 31, scope: !2261)
!14814 = !DILocation(line: 4815, column: 30, scope: !2261)
!14815 = !DILocation(line: 4813, column: 12, scope: !2261)
!14816 = !DILocation(line: 4813, column: 5, scope: !2261)
!14817 = !DILocation(line: 4816, column: 1, scope: !2261)
!14818 = !DILocation(line: 4819, column: 35, scope: !2268)
!14819 = !DILocation(line: 4819, column: 51, scope: !2268)
!14820 = !DILocation(line: 4819, column: 64, scope: !2268)
!14821 = !DILocation(line: 4821, column: 5, scope: !2268)
!14822 = !DILocation(line: 4821, column: 20, scope: !2268)
!14823 = !DILocation(line: 4822, column: 5, scope: !2268)
!14824 = !DILocation(line: 4822, column: 18, scope: !2268)
!14825 = !DILocation(line: 4823, column: 5, scope: !2268)
!14826 = !DILocation(line: 4823, column: 15, scope: !2268)
!14827 = !DILocation(line: 4825, column: 9, scope: !14828)
!14828 = distinct !DILexicalBlock(scope: !2268, file: !368, line: 4825, column: 9)
!14829 = !DILocation(line: 4825, column: 15, scope: !14828)
!14830 = !DILocation(line: 4825, column: 9, scope: !2268)
!14831 = !DILocation(line: 4826, column: 25, scope: !14832)
!14832 = distinct !DILexicalBlock(scope: !14828, file: !368, line: 4825, column: 30)
!14833 = !DILocation(line: 4826, column: 9, scope: !14832)
!14834 = !DILocation(line: 4828, column: 9, scope: !14832)
!14835 = !DILocation(line: 4830, column: 44, scope: !2268)
!14836 = !DILocation(line: 4830, column: 32, scope: !2268)
!14837 = !DILocation(line: 4830, column: 15, scope: !2268)
!14838 = !DILocation(line: 4830, column: 13, scope: !2268)
!14839 = !DILocation(line: 4833, column: 25, scope: !2280)
!14840 = !DILocation(line: 4833, column: 34, scope: !2280)
!14841 = !DILocation(line: 4833, column: 43, scope: !2280)
!14842 = !DILocation(line: 4833, column: 62, scope: !2280)
!14843 = !DILocation(line: 4833, column: 96, scope: !14844)
!14844 = !DILexicalBlockFile(scope: !2280, file: !368, discriminator: 1)
!14845 = !DILocation(line: 4833, column: 105, scope: !2280)
!14846 = !DILocation(line: 4833, column: 65, scope: !2280)
!14847 = !DILocation(line: 4833, column: 9, scope: !2268)
!14848 = !DILocation(line: 4834, column: 9, scope: !2279)
!14849 = !DILocation(line: 4834, column: 13, scope: !2279)
!14850 = !DILocation(line: 4834, column: 39, scope: !2279)
!14851 = !DILocation(line: 4834, column: 46, scope: !2279)
!14852 = !DILocation(line: 4834, column: 55, scope: !2279)
!14853 = !DILocation(line: 4834, column: 19, scope: !2279)
!14854 = !DILocation(line: 4835, column: 13, scope: !14855)
!14855 = distinct !DILexicalBlock(scope: !2279, file: !368, line: 4835, column: 13)
!14856 = !DILocation(line: 4835, column: 17, scope: !14855)
!14857 = !DILocation(line: 4835, column: 13, scope: !2279)
!14858 = !DILocation(line: 4836, column: 13, scope: !14855)
!14859 = !DILocation(line: 4837, column: 14, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !2279, file: !368, line: 4837, column: 13)
!14861 = !DILocation(line: 4837, column: 13, scope: !2279)
!14862 = !DILocation(line: 4838, column: 26, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14860, file: !368, line: 4837, column: 19)
!14864 = !DILocation(line: 4840, column: 44, scope: !14863)
!14865 = !DILocation(line: 4840, column: 53, scope: !14863)
!14866 = !DILocation(line: 4840, column: 27, scope: !14863)
!14867 = !DILocation(line: 4840, column: 62, scope: !14863)
!14868 = !DILocation(line: 4841, column: 40, scope: !14863)
!14869 = !DILocation(line: 4841, column: 49, scope: !14863)
!14870 = !DILocation(line: 4841, column: 59, scope: !14863)
!14871 = !DILocation(line: 4838, column: 13, scope: !14863)
!14872 = !DILocation(line: 4842, column: 13, scope: !14863)
!14873 = !DILocation(line: 4844, column: 5, scope: !2280)
!14874 = !DILocation(line: 4844, column: 5, scope: !14844)
!14875 = !DILocation(line: 4844, column: 5, scope: !2279)
!14876 = !DILocation(line: 4846, column: 26, scope: !2268)
!14877 = !DILocation(line: 4846, column: 11, scope: !2268)
!14878 = !DILocation(line: 4846, column: 9, scope: !2268)
!14879 = !DILocation(line: 4847, column: 29, scope: !2268)
!14880 = !DILocation(line: 4847, column: 34, scope: !2268)
!14881 = !DILocation(line: 4847, column: 15, scope: !2268)
!14882 = !DILocation(line: 4847, column: 21, scope: !2268)
!14883 = !DILocation(line: 4847, column: 6, scope: !2268)
!14884 = !DILocation(line: 4847, column: 27, scope: !2268)
!14885 = !DILocation(line: 4854, column: 21, scope: !2268)
!14886 = !DILocation(line: 4854, column: 30, scope: !2268)
!14887 = !DILocation(line: 4854, column: 39, scope: !2268)
!14888 = !DILocation(line: 4855, column: 23, scope: !14889)
!14889 = distinct !DILexicalBlock(scope: !2268, file: !368, line: 4855, column: 9)
!14890 = !DILocation(line: 4855, column: 32, scope: !14889)
!14891 = !DILocation(line: 4855, column: 15, scope: !14889)
!14892 = !DILocation(line: 4855, column: 12, scope: !14889)
!14893 = !DILocation(line: 4855, column: 9, scope: !2268)
!14894 = !DILocation(line: 4856, column: 9, scope: !14889)
!14895 = !DILocation(line: 4858, column: 29, scope: !2268)
!14896 = !DILocation(line: 4858, column: 12, scope: !2268)
!14897 = !DILocation(line: 4858, column: 10, scope: !2268)
!14898 = !DILocation(line: 4859, column: 9, scope: !14899)
!14899 = distinct !DILexicalBlock(scope: !2268, file: !368, line: 4859, column: 9)
!14900 = !DILocation(line: 4859, column: 14, scope: !14899)
!14901 = !DILocation(line: 4859, column: 9, scope: !2268)
!14902 = !DILocation(line: 4860, column: 9, scope: !14899)
!14903 = !DILocation(line: 4862, column: 21, scope: !2268)
!14904 = !DILocation(line: 4862, column: 29, scope: !2268)
!14905 = !DILocation(line: 4862, column: 38, scope: !2268)
!14906 = !DILocation(line: 4863, column: 20, scope: !2268)
!14907 = !DILocation(line: 4863, column: 29, scope: !2268)
!14908 = !DILocation(line: 4863, column: 12, scope: !2268)
!14909 = !DILocation(line: 4863, column: 5, scope: !2268)
!14910 = !DILocation(line: 4864, column: 1, scope: !2268)
!14911 = !DILocation(line: 721, column: 30, scope: !2293)
!14912 = !DILocation(line: 721, column: 46, scope: !2293)
!14913 = !DILocation(line: 721, column: 61, scope: !2293)
!14914 = !DILocation(line: 724, column: 39, scope: !14915)
!14915 = distinct !DILexicalBlock(scope: !2293, file: !368, line: 724, column: 9)
!14916 = !DILocation(line: 724, column: 45, scope: !14915)
!14917 = !DILocation(line: 724, column: 50, scope: !14915)
!14918 = !DILocation(line: 724, column: 15, scope: !14915)
!14919 = !DILocation(line: 724, column: 12, scope: !14915)
!14920 = !DILocation(line: 724, column: 9, scope: !2293)
!14921 = !DILocation(line: 725, column: 9, scope: !14915)
!14922 = !DILocation(line: 727, column: 26, scope: !2300)
!14923 = !DILocation(line: 727, column: 33, scope: !2300)
!14924 = !DILocation(line: 727, column: 44, scope: !2300)
!14925 = !DILocation(line: 727, column: 53, scope: !2300)
!14926 = !DILocation(line: 727, column: 70, scope: !2300)
!14927 = !DILocation(line: 727, column: 76, scope: !2300)
!14928 = !DILocation(line: 728, column: 31, scope: !2299)
!14929 = !DILocation(line: 728, column: 38, scope: !2299)
!14930 = !DILocation(line: 728, column: 48, scope: !2299)
!14931 = !DILocation(line: 728, column: 1645, scope: !2299)
!14932 = !DILocation(line: 728, column: 1658, scope: !14933)
!14933 = !DILexicalBlockFile(scope: !2299, file: !368, discriminator: 1)
!14934 = !DILocation(line: 728, column: 1681, scope: !2299)
!14935 = !DILocation(line: 728, column: 1690, scope: !2299)
!14936 = !DILocation(line: 728, column: 1523, scope: !2299)
!14937 = !DILocation(line: 728, column: 1928, scope: !14938)
!14938 = !DILexicalBlockFile(scope: !2303, file: !368, discriminator: 3)
!14939 = !DILocation(line: 728, column: 1949, scope: !2303)
!14940 = !DILocation(line: 728, column: 2013, scope: !2303)
!14941 = !DILocation(line: 728, column: 1996, scope: !2303)
!14942 = !DILocation(line: 728, column: 2020, scope: !2303)
!14943 = !DILocation(line: 728, column: 2033, scope: !2303)
!14944 = !DILocation(line: 728, column: 2044, scope: !2303)
!14945 = !DILocation(line: 728, column: 2054, scope: !2303)
!14946 = !DILocation(line: 728, column: 2052, scope: !2303)
!14947 = !DILocation(line: 728, column: 2116, scope: !14948)
!14948 = distinct !DILexicalBlock(scope: !2303, file: !368, line: 728, column: 2116)
!14949 = !DILocation(line: 728, column: 2125, scope: !14948)
!14950 = !DILocation(line: 728, column: 2129, scope: !14948)
!14951 = !DILocation(line: 728, column: 2132, scope: !14952)
!14952 = !DILexicalBlockFile(scope: !14948, file: !368, discriminator: 5)
!14953 = !DILocation(line: 728, column: 2141, scope: !14948)
!14954 = !DILocation(line: 728, column: 2116, scope: !2303)
!14955 = !DILocation(line: 728, column: 2161, scope: !14956)
!14956 = !DILexicalBlockFile(scope: !14957, file: !368, discriminator: 7)
!14957 = distinct !DILexicalBlock(scope: !14948, file: !368, line: 728, column: 2147)
!14958 = !DILocation(line: 728, column: 2171, scope: !14957)
!14959 = !DILocation(line: 728, column: 2169, scope: !14957)
!14960 = !DILocation(line: 728, column: 2158, scope: !14957)
!14961 = !DILocation(line: 728, column: 2234, scope: !14962)
!14962 = distinct !DILexicalBlock(scope: !14957, file: !368, line: 728, column: 2234)
!14963 = !DILocation(line: 728, column: 2243, scope: !14962)
!14964 = !DILocation(line: 728, column: 2247, scope: !14962)
!14965 = !DILocation(line: 728, column: 2250, scope: !14966)
!14966 = !DILexicalBlockFile(scope: !14962, file: !368, discriminator: 9)
!14967 = !DILocation(line: 728, column: 2259, scope: !14962)
!14968 = !DILocation(line: 728, column: 2234, scope: !14957)
!14969 = !DILocation(line: 728, column: 2279, scope: !14970)
!14970 = !DILexicalBlockFile(scope: !14971, file: !368, discriminator: 11)
!14971 = distinct !DILexicalBlock(scope: !14962, file: !368, line: 728, column: 2265)
!14972 = !DILocation(line: 728, column: 2289, scope: !14971)
!14973 = !DILocation(line: 728, column: 2287, scope: !14971)
!14974 = !DILocation(line: 728, column: 2276, scope: !14971)
!14975 = !DILocation(line: 728, column: 2352, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14971, file: !368, line: 728, column: 2352)
!14977 = !DILocation(line: 728, column: 2361, scope: !14976)
!14978 = !DILocation(line: 728, column: 2365, scope: !14976)
!14979 = !DILocation(line: 728, column: 2368, scope: !14980)
!14980 = !DILexicalBlockFile(scope: !14976, file: !368, discriminator: 13)
!14981 = !DILocation(line: 728, column: 2377, scope: !14976)
!14982 = !DILocation(line: 728, column: 2352, scope: !14971)
!14983 = !DILocation(line: 728, column: 2395, scope: !14984)
!14984 = !DILexicalBlockFile(scope: !14976, file: !368, discriminator: 15)
!14985 = !DILocation(line: 728, column: 2405, scope: !14976)
!14986 = !DILocation(line: 728, column: 2403, scope: !14976)
!14987 = !DILocation(line: 728, column: 2392, scope: !14976)
!14988 = !DILocation(line: 728, column: 2383, scope: !14976)
!14989 = !DILocation(line: 728, column: 2464, scope: !14990)
!14990 = !DILexicalBlockFile(scope: !14991, file: !368, discriminator: 17)
!14991 = !DILexicalBlockFile(scope: !14992, file: !368, discriminator: 16)
!14992 = !DILexicalBlockFile(scope: !14971, file: !368, discriminator: 14)
!14993 = !DILocation(line: 728, column: 2466, scope: !14994)
!14994 = !DILexicalBlockFile(scope: !14995, file: !368, discriminator: 18)
!14995 = !DILexicalBlockFile(scope: !14996, file: !368, discriminator: 12)
!14996 = !DILexicalBlockFile(scope: !14957, file: !368, discriminator: 10)
!14997 = !DILocation(line: 728, column: 2468, scope: !14998)
!14998 = !DILexicalBlockFile(scope: !14999, file: !368, discriminator: 19)
!14999 = !DILexicalBlockFile(scope: !15000, file: !368, discriminator: 8)
!15000 = !DILexicalBlockFile(scope: !2303, file: !368, discriminator: 6)
!15001 = !DILocation(line: 728, column: 2144, scope: !14948)
!15002 = !DILocation(line: 728, column: 2478, scope: !2299)
!15003 = !DILocation(line: 728, column: 2478, scope: !2303)
!15004 = !DILocation(line: 728, column: 2520, scope: !15005)
!15005 = !DILexicalBlockFile(scope: !15006, file: !368, discriminator: 4)
!15006 = !DILexicalBlockFile(scope: !2299, file: !368, discriminator: 2)
!15007 = !DILocation(line: 728, column: 2503, scope: !2299)
!15008 = !DILocation(line: 728, column: 2485, scope: !2299)
!15009 = !DILocation(line: 728, column: 31, scope: !15010)
!15010 = !DILexicalBlockFile(scope: !15011, file: !368, discriminator: 21)
!15011 = !DILexicalBlockFile(scope: !2299, file: !368, discriminator: 20)
!15012 = !DILocation(line: 728, column: 2542, scope: !2300)
!15013 = !DILocation(line: 728, column: 2542, scope: !2299)
!15014 = !DILocation(line: 728, column: 11, scope: !2300)
!15015 = !DILocation(line: 727, column: 9, scope: !2293)
!15016 = !DILocation(line: 729, column: 50, scope: !2300)
!15017 = !DILocation(line: 729, column: 56, scope: !2300)
!15018 = !DILocation(line: 729, column: 16, scope: !2300)
!15019 = !DILocation(line: 729, column: 9, scope: !2300)
!15020 = !DILocation(line: 730, column: 5, scope: !2293)
!15021 = !DILocation(line: 731, column: 1, scope: !2293)
!15022 = !DILocation(line: 434, column: 29, scope: !2305)
!15023 = !DILocation(line: 434, column: 45, scope: !2305)
!15024 = !DILocation(line: 434, column: 61, scope: !2305)
!15025 = !DILocation(line: 436, column: 32, scope: !2305)
!15026 = !DILocation(line: 436, column: 38, scope: !2305)
!15027 = !DILocation(line: 436, column: 44, scope: !2305)
!15028 = !DILocation(line: 436, column: 12, scope: !2305)
!15029 = !DILocation(line: 436, column: 5, scope: !2305)
!15030 = !DILocation(line: 4082, column: 23, scope: !2310)
!15031 = !DILocation(line: 4082, column: 39, scope: !2310)
!15032 = !DILocation(line: 4082, column: 55, scope: !2310)
!15033 = !DILocation(line: 4087, column: 27, scope: !15034)
!15034 = distinct !DILexicalBlock(scope: !2310, file: !368, line: 4087, column: 9)
!15035 = !DILocation(line: 4087, column: 35, scope: !15034)
!15036 = !DILocation(line: 4087, column: 46, scope: !15034)
!15037 = !DILocation(line: 4087, column: 55, scope: !15034)
!15038 = !DILocation(line: 4087, column: 72, scope: !15034)
!15039 = !DILocation(line: 4087, column: 9, scope: !2310)
!15040 = !DILocation(line: 4088, column: 25, scope: !15041)
!15041 = distinct !DILexicalBlock(scope: !15034, file: !368, line: 4087, column: 79)
!15042 = !DILocation(line: 4088, column: 9, scope: !15041)
!15043 = !DILocation(line: 4090, column: 9, scope: !15041)
!15044 = !DILocation(line: 4092, column: 26, scope: !2317)
!15045 = !DILocation(line: 4092, column: 11, scope: !2317)
!15046 = !DILocation(line: 4092, column: 34, scope: !2317)
!15047 = !DILocation(line: 4092, column: 9, scope: !2317)
!15048 = !DILocation(line: 4092, column: 9, scope: !2310)
!15049 = !DILocation(line: 4093, column: 9, scope: !2316)
!15050 = !DILocation(line: 4093, column: 20, scope: !2316)
!15051 = !DILocation(line: 4093, column: 41, scope: !2316)
!15052 = !DILocation(line: 4093, column: 61, scope: !2316)
!15053 = !DILocation(line: 4093, column: 69, scope: !2316)
!15054 = !DILocation(line: 4094, column: 41, scope: !2316)
!15055 = !DILocation(line: 4094, column: 47, scope: !2316)
!15056 = !DILocation(line: 4093, column: 26, scope: !2316)
!15057 = !DILocation(line: 4095, column: 13, scope: !15058)
!15058 = distinct !DILexicalBlock(scope: !2316, file: !368, line: 4095, column: 13)
!15059 = !DILocation(line: 4095, column: 17, scope: !15058)
!15060 = !DILocation(line: 4095, column: 13, scope: !2316)
!15061 = !DILocation(line: 4096, column: 13, scope: !15058)
!15062 = !DILocation(line: 4097, column: 13, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !2316, file: !368, line: 4097, column: 13)
!15064 = !DILocation(line: 4097, column: 36, scope: !15063)
!15065 = !DILocation(line: 4097, column: 21, scope: !15063)
!15066 = !DILocation(line: 4097, column: 44, scope: !15063)
!15067 = !DILocation(line: 4097, column: 17, scope: !15063)
!15068 = !DILocation(line: 4097, column: 13, scope: !2316)
!15069 = !DILocation(line: 4098, column: 29, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !15063, file: !368, line: 4097, column: 54)
!15071 = !DILocation(line: 4098, column: 13, scope: !15070)
!15072 = !DILocation(line: 4100, column: 13, scope: !15070)
!15073 = !DILocation(line: 4102, column: 5, scope: !2317)
!15074 = !DILocation(line: 4102, column: 5, scope: !15075)
!15075 = !DILexicalBlockFile(scope: !2317, file: !368, discriminator: 1)
!15076 = !DILocation(line: 4102, column: 5, scope: !2316)
!15077 = !DILocation(line: 4104, column: 9, scope: !2320)
!15078 = !DILocation(line: 4104, column: 9, scope: !2310)
!15079 = !DILocation(line: 4105, column: 9, scope: !2319)
!15080 = !DILocation(line: 4105, column: 19, scope: !2319)
!15081 = !DILocation(line: 4105, column: 25, scope: !2319)
!15082 = !DILocation(line: 4106, column: 9, scope: !2319)
!15083 = !DILocation(line: 4106, column: 20, scope: !2319)
!15084 = !DILocation(line: 4107, column: 9, scope: !2319)
!15085 = !DILocation(line: 4107, column: 27, scope: !15086)
!15086 = !DILexicalBlockFile(scope: !15087, file: !368, discriminator: 2)
!15087 = !DILexicalBlockFile(scope: !2319, file: !368, discriminator: 1)
!15088 = !DILocation(line: 4107, column: 15, scope: !2319)
!15089 = !DILocation(line: 4108, column: 40, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !15091, file: !368, line: 4108, column: 17)
!15091 = distinct !DILexicalBlock(scope: !2319, file: !368, line: 4107, column: 54)
!15092 = !DILocation(line: 4108, column: 46, scope: !15090)
!15093 = !DILocation(line: 4108, column: 51, scope: !15090)
!15094 = !DILocation(line: 4108, column: 23, scope: !15090)
!15095 = !DILocation(line: 4108, column: 20, scope: !15090)
!15096 = !DILocation(line: 4108, column: 17, scope: !15091)
!15097 = !DILocation(line: 4109, column: 17, scope: !15090)
!15098 = !DILocation(line: 4111, column: 5, scope: !2320)
!15099 = !DILocation(line: 4111, column: 5, scope: !15100)
!15100 = !DILexicalBlockFile(scope: !2320, file: !368, discriminator: 1)
!15101 = !DILocation(line: 4111, column: 5, scope: !2319)
!15102 = !DILocation(line: 4112, column: 5, scope: !2310)
!15103 = !DILocation(line: 4113, column: 1, scope: !2310)
!15104 = !DILocation(line: 4023, column: 26, scope: !2323)
!15105 = !DILocation(line: 4023, column: 46, scope: !2323)
!15106 = !DILocation(line: 4024, column: 26, scope: !2323)
!15107 = !DILocation(line: 4024, column: 42, scope: !2323)
!15108 = !DILocation(line: 4025, column: 27, scope: !2323)
!15109 = !DILocation(line: 4027, column: 5, scope: !2323)
!15110 = !DILocation(line: 4027, column: 20, scope: !2323)
!15111 = !DILocation(line: 4028, column: 5, scope: !2323)
!15112 = !DILocation(line: 4028, column: 15, scope: !2323)
!15113 = !DILocation(line: 4029, column: 5, scope: !2323)
!15114 = !DILocation(line: 4029, column: 16, scope: !2323)
!15115 = !DILocation(line: 4031, column: 36, scope: !15116)
!15116 = distinct !DILexicalBlock(scope: !2323, file: !368, line: 4031, column: 9)
!15117 = !DILocation(line: 4031, column: 42, scope: !15116)
!15118 = !DILocation(line: 4031, column: 24, scope: !15116)
!15119 = !DILocation(line: 4031, column: 9, scope: !15116)
!15120 = !DILocation(line: 4031, column: 9, scope: !2323)
!15121 = !DILocation(line: 4032, column: 32, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15116, file: !368, line: 4031, column: 52)
!15123 = !DILocation(line: 4032, column: 38, scope: !15122)
!15124 = !DILocation(line: 4032, column: 44, scope: !15122)
!15125 = !DILocation(line: 4033, column: 32, scope: !15122)
!15126 = !DILocation(line: 4033, column: 38, scope: !15122)
!15127 = !DILocation(line: 4034, column: 32, scope: !15122)
!15128 = !DILocation(line: 4032, column: 17, scope: !15122)
!15129 = !DILocation(line: 4032, column: 15, scope: !15122)
!15130 = !DILocation(line: 4035, column: 13, scope: !15131)
!15131 = distinct !DILexicalBlock(scope: !15122, file: !368, line: 4035, column: 13)
!15132 = !DILocation(line: 4035, column: 19, scope: !15131)
!15133 = !DILocation(line: 4035, column: 13, scope: !15122)
!15134 = !DILocation(line: 4036, column: 13, scope: !15131)
!15135 = !DILocation(line: 4037, column: 5, scope: !15122)
!15136 = !DILocation(line: 4039, column: 39, scope: !2323)
!15137 = !DILocation(line: 4039, column: 27, scope: !2323)
!15138 = !DILocation(line: 4039, column: 12, scope: !2323)
!15139 = !DILocation(line: 4039, column: 10, scope: !2323)
!15140 = !DILocation(line: 4040, column: 47, scope: !2323)
!15141 = !DILocation(line: 4040, column: 35, scope: !2323)
!15142 = !DILocation(line: 4040, column: 14, scope: !2323)
!15143 = !DILocation(line: 4040, column: 12, scope: !2323)
!15144 = !DILocation(line: 4041, column: 9, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !2323, file: !368, line: 4041, column: 9)
!15146 = !DILocation(line: 4041, column: 16, scope: !15145)
!15147 = !DILocation(line: 4041, column: 9, scope: !2323)
!15148 = !DILocation(line: 4042, column: 16, scope: !15145)
!15149 = !DILocation(line: 4042, column: 9, scope: !15145)
!15150 = !DILocation(line: 4044, column: 12, scope: !2338)
!15151 = !DILocation(line: 4044, column: 10, scope: !2338)
!15152 = !DILocation(line: 4045, column: 10, scope: !2337)
!15153 = !DILocation(line: 4045, column: 14, scope: !2337)
!15154 = !DILocation(line: 4045, column: 20, scope: !2337)
!15155 = !DILocation(line: 4045, column: 12, scope: !2337)
!15156 = !DILocation(line: 4045, column: 27, scope: !2337)
!15157 = !DILocation(line: 4045, column: 31, scope: !15158)
!15158 = !DILexicalBlockFile(scope: !2337, file: !368, discriminator: 1)
!15159 = !DILocation(line: 4045, column: 33, scope: !2337)
!15160 = !DILocation(line: 4045, column: 32, scope: !2337)
!15161 = !DILocation(line: 4045, column: 59, scope: !2337)
!15162 = !DILocation(line: 4045, column: 44, scope: !2337)
!15163 = !DILocation(line: 4045, column: 67, scope: !2337)
!15164 = !DILocation(line: 4045, column: 40, scope: !2337)
!15165 = !DILocation(line: 4044, column: 5, scope: !2338)
!15166 = !DILocation(line: 4047, column: 9, scope: !2336)
!15167 = !DILocation(line: 4047, column: 19, scope: !2336)
!15168 = !DILocation(line: 4047, column: 45, scope: !2336)
!15169 = !DILocation(line: 4047, column: 53, scope: !2336)
!15170 = !DILocation(line: 4047, column: 26, scope: !2336)
!15171 = !DILocation(line: 4048, column: 9, scope: !2336)
!15172 = !DILocation(line: 4048, column: 19, scope: !2336)
!15173 = !DILocation(line: 4048, column: 26, scope: !2336)
!15174 = !DILocation(line: 4049, column: 9, scope: !2336)
!15175 = !DILocation(line: 4049, column: 13, scope: !2336)
!15176 = !DILocation(line: 4050, column: 14, scope: !15177)
!15177 = distinct !DILexicalBlock(scope: !2336, file: !368, line: 4050, column: 13)
!15178 = !DILocation(line: 4050, column: 13, scope: !2336)
!15179 = !DILocation(line: 4051, column: 13, scope: !15177)
!15180 = !DILocation(line: 4052, column: 35, scope: !2336)
!15181 = !DILocation(line: 4052, column: 16, scope: !2336)
!15182 = !DILocation(line: 4052, column: 14, scope: !2336)
!15183 = !DILocation(line: 4053, column: 14, scope: !2345)
!15184 = !DILocation(line: 4053, column: 13, scope: !2336)
!15185 = !DILocation(line: 4054, column: 13, scope: !2344)
!15186 = !DILocation(line: 4054, column: 18, scope: !15187)
!15187 = !DILexicalBlockFile(scope: !2343, file: !368, discriminator: 1)
!15188 = !DILocation(line: 4054, column: 28, scope: !2343)
!15189 = !DILocation(line: 4054, column: 58, scope: !2343)
!15190 = !DILocation(line: 4054, column: 73, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !2343, file: !368, line: 4054, column: 70)
!15192 = !DILocation(line: 4054, column: 90, scope: !15191)
!15193 = !DILocation(line: 4054, column: 70, scope: !15191)
!15194 = !DILocation(line: 4054, column: 100, scope: !15191)
!15195 = !DILocation(line: 4054, column: 70, scope: !2343)
!15196 = !DILocation(line: 4054, column: 70, scope: !15197)
!15197 = !DILexicalBlockFile(scope: !2343, file: !368, discriminator: 2)
!15198 = !DILocation(line: 4054, column: 131, scope: !15199)
!15199 = !DILexicalBlockFile(scope: !15191, file: !368, discriminator: 3)
!15200 = !DILocation(line: 4054, column: 149, scope: !15191)
!15201 = !DILocation(line: 4054, column: 159, scope: !15191)
!15202 = !DILocation(line: 4054, column: 184, scope: !15191)
!15203 = !DILocation(line: 4054, column: 115, scope: !15191)
!15204 = !DILocation(line: 4054, column: 203, scope: !15205)
!15205 = !DILexicalBlockFile(scope: !2344, file: !368, discriminator: 4)
!15206 = !DILocation(line: 4054, column: 203, scope: !2343)
!15207 = !DILocation(line: 4054, column: 203, scope: !15208)
!15208 = !DILexicalBlockFile(scope: !2343, file: !368, discriminator: 5)
!15209 = !DILocation(line: 4055, column: 13, scope: !2344)
!15210 = !DILocation(line: 4057, column: 51, scope: !2336)
!15211 = !DILocation(line: 4057, column: 55, scope: !2336)
!15212 = !DILocation(line: 4057, column: 53, scope: !2336)
!15213 = !DILocation(line: 4057, column: 35, scope: !2336)
!15214 = !DILocation(line: 4057, column: 17, scope: !2336)
!15215 = !DILocation(line: 4057, column: 43, scope: !2336)
!15216 = !DILocation(line: 4057, column: 16, scope: !2336)
!15217 = !DILocation(line: 4057, column: 13, scope: !2336)
!15218 = !DILocation(line: 4058, column: 13, scope: !2348)
!15219 = !DILocation(line: 4058, column: 18, scope: !2348)
!15220 = !DILocation(line: 4058, column: 36, scope: !15221)
!15221 = !DILexicalBlockFile(scope: !2348, file: !368, discriminator: 1)
!15222 = !DILocation(line: 4058, column: 42, scope: !2348)
!15223 = !DILocation(line: 4058, column: 21, scope: !2348)
!15224 = !DILocation(line: 4058, column: 13, scope: !2336)
!15225 = !DILocation(line: 4059, column: 13, scope: !2347)
!15226 = !DILocation(line: 4059, column: 19, scope: !2347)
!15227 = !DILocation(line: 4059, column: 44, scope: !2347)
!15228 = !DILocation(line: 4059, column: 27, scope: !2347)
!15229 = !DILocation(line: 4060, column: 17, scope: !15230)
!15230 = distinct !DILexicalBlock(scope: !2347, file: !368, line: 4060, column: 17)
!15231 = !DILocation(line: 4060, column: 23, scope: !15230)
!15232 = !DILocation(line: 4060, column: 17, scope: !2347)
!15233 = !DILocation(line: 4061, column: 17, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15230, file: !368, line: 4060, column: 38)
!15235 = !DILocation(line: 4062, column: 23, scope: !15234)
!15236 = !DILocation(line: 4063, column: 13, scope: !15234)
!15237 = !DILocation(line: 4064, column: 26, scope: !2347)
!15238 = !DILocation(line: 4066, column: 26, scope: !2347)
!15239 = !DILocation(line: 4064, column: 13, scope: !2347)
!15240 = !DILocation(line: 4067, column: 13, scope: !2347)
!15241 = !DILocation(line: 4067, column: 18, scope: !15242)
!15242 = !DILexicalBlockFile(scope: !2350, file: !368, discriminator: 1)
!15243 = !DILocation(line: 4067, column: 28, scope: !2350)
!15244 = !DILocation(line: 4067, column: 58, scope: !2350)
!15245 = !DILocation(line: 4067, column: 73, scope: !15246)
!15246 = distinct !DILexicalBlock(scope: !2350, file: !368, line: 4067, column: 70)
!15247 = !DILocation(line: 4067, column: 90, scope: !15246)
!15248 = !DILocation(line: 4067, column: 70, scope: !15246)
!15249 = !DILocation(line: 4067, column: 100, scope: !15246)
!15250 = !DILocation(line: 4067, column: 70, scope: !2350)
!15251 = !DILocation(line: 4067, column: 70, scope: !15252)
!15252 = !DILexicalBlockFile(scope: !2350, file: !368, discriminator: 2)
!15253 = !DILocation(line: 4067, column: 131, scope: !15254)
!15254 = !DILexicalBlockFile(scope: !15246, file: !368, discriminator: 3)
!15255 = !DILocation(line: 4067, column: 149, scope: !15246)
!15256 = !DILocation(line: 4067, column: 159, scope: !15246)
!15257 = !DILocation(line: 4067, column: 184, scope: !15246)
!15258 = !DILocation(line: 4067, column: 115, scope: !15246)
!15259 = !DILocation(line: 4067, column: 203, scope: !15260)
!15260 = !DILexicalBlockFile(scope: !2347, file: !368, discriminator: 4)
!15261 = !DILocation(line: 4067, column: 203, scope: !2350)
!15262 = !DILocation(line: 4067, column: 203, scope: !15263)
!15263 = !DILexicalBlockFile(scope: !2350, file: !368, discriminator: 5)
!15264 = !DILocation(line: 4068, column: 13, scope: !2347)
!15265 = !DILocation(line: 4068, column: 18, scope: !15266)
!15266 = !DILexicalBlockFile(scope: !2352, file: !368, discriminator: 1)
!15267 = !DILocation(line: 4068, column: 28, scope: !2352)
!15268 = !DILocation(line: 4068, column: 58, scope: !2352)
!15269 = !DILocation(line: 4068, column: 73, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !2352, file: !368, line: 4068, column: 70)
!15271 = !DILocation(line: 4068, column: 90, scope: !15270)
!15272 = !DILocation(line: 4068, column: 70, scope: !15270)
!15273 = !DILocation(line: 4068, column: 100, scope: !15270)
!15274 = !DILocation(line: 4068, column: 70, scope: !2352)
!15275 = !DILocation(line: 4068, column: 70, scope: !15276)
!15276 = !DILexicalBlockFile(scope: !2352, file: !368, discriminator: 2)
!15277 = !DILocation(line: 4068, column: 131, scope: !15278)
!15278 = !DILexicalBlockFile(scope: !15270, file: !368, discriminator: 3)
!15279 = !DILocation(line: 4068, column: 149, scope: !15270)
!15280 = !DILocation(line: 4068, column: 159, scope: !15270)
!15281 = !DILocation(line: 4068, column: 184, scope: !15270)
!15282 = !DILocation(line: 4068, column: 115, scope: !15270)
!15283 = !DILocation(line: 4068, column: 203, scope: !15260)
!15284 = !DILocation(line: 4068, column: 203, scope: !2352)
!15285 = !DILocation(line: 4068, column: 203, scope: !15286)
!15286 = !DILexicalBlockFile(scope: !2352, file: !368, discriminator: 5)
!15287 = !DILocation(line: 4069, column: 13, scope: !2347)
!15288 = !DILocation(line: 4070, column: 9, scope: !2348)
!15289 = !DILocation(line: 4072, column: 32, scope: !2336)
!15290 = !DILocation(line: 4072, column: 38, scope: !2336)
!15291 = !DILocation(line: 4072, column: 44, scope: !2336)
!15292 = !DILocation(line: 4072, column: 15, scope: !2336)
!15293 = !DILocation(line: 4072, column: 13, scope: !2336)
!15294 = !DILocation(line: 4073, column: 9, scope: !2336)
!15295 = !DILocation(line: 4073, column: 14, scope: !15296)
!15296 = !DILexicalBlockFile(scope: !2354, file: !368, discriminator: 1)
!15297 = !DILocation(line: 4073, column: 24, scope: !2354)
!15298 = !DILocation(line: 4073, column: 54, scope: !2354)
!15299 = !DILocation(line: 4073, column: 69, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !2354, file: !368, line: 4073, column: 66)
!15301 = !DILocation(line: 4073, column: 86, scope: !15300)
!15302 = !DILocation(line: 4073, column: 66, scope: !15300)
!15303 = !DILocation(line: 4073, column: 96, scope: !15300)
!15304 = !DILocation(line: 4073, column: 66, scope: !2354)
!15305 = !DILocation(line: 4073, column: 66, scope: !15306)
!15306 = !DILexicalBlockFile(scope: !2354, file: !368, discriminator: 2)
!15307 = !DILocation(line: 4073, column: 127, scope: !15308)
!15308 = !DILexicalBlockFile(scope: !15300, file: !368, discriminator: 3)
!15309 = !DILocation(line: 4073, column: 145, scope: !15300)
!15310 = !DILocation(line: 4073, column: 155, scope: !15300)
!15311 = !DILocation(line: 4073, column: 180, scope: !15300)
!15312 = !DILocation(line: 4073, column: 111, scope: !15300)
!15313 = !DILocation(line: 4073, column: 199, scope: !15314)
!15314 = !DILexicalBlockFile(scope: !2336, file: !368, discriminator: 4)
!15315 = !DILocation(line: 4073, column: 199, scope: !2354)
!15316 = !DILocation(line: 4073, column: 199, scope: !15317)
!15317 = !DILexicalBlockFile(scope: !2354, file: !368, discriminator: 5)
!15318 = !DILocation(line: 4074, column: 9, scope: !2336)
!15319 = !DILocation(line: 4074, column: 14, scope: !15320)
!15320 = !DILexicalBlockFile(scope: !2356, file: !368, discriminator: 1)
!15321 = !DILocation(line: 4074, column: 24, scope: !2356)
!15322 = !DILocation(line: 4074, column: 54, scope: !2356)
!15323 = !DILocation(line: 4074, column: 69, scope: !15324)
!15324 = distinct !DILexicalBlock(scope: !2356, file: !368, line: 4074, column: 66)
!15325 = !DILocation(line: 4074, column: 86, scope: !15324)
!15326 = !DILocation(line: 4074, column: 66, scope: !15324)
!15327 = !DILocation(line: 4074, column: 96, scope: !15324)
!15328 = !DILocation(line: 4074, column: 66, scope: !2356)
!15329 = !DILocation(line: 4074, column: 66, scope: !15330)
!15330 = !DILexicalBlockFile(scope: !2356, file: !368, discriminator: 2)
!15331 = !DILocation(line: 4074, column: 127, scope: !15332)
!15332 = !DILexicalBlockFile(scope: !15324, file: !368, discriminator: 3)
!15333 = !DILocation(line: 4074, column: 145, scope: !15324)
!15334 = !DILocation(line: 4074, column: 155, scope: !15324)
!15335 = !DILocation(line: 4074, column: 180, scope: !15324)
!15336 = !DILocation(line: 4074, column: 111, scope: !15324)
!15337 = !DILocation(line: 4074, column: 199, scope: !15314)
!15338 = !DILocation(line: 4074, column: 199, scope: !2356)
!15339 = !DILocation(line: 4074, column: 199, scope: !15340)
!15340 = !DILexicalBlockFile(scope: !2356, file: !368, discriminator: 5)
!15341 = !DILocation(line: 4075, column: 13, scope: !15342)
!15342 = distinct !DILexicalBlock(scope: !2336, file: !368, line: 4075, column: 13)
!15343 = !DILocation(line: 4075, column: 17, scope: !15342)
!15344 = !DILocation(line: 4075, column: 13, scope: !2336)
!15345 = !DILocation(line: 4076, column: 13, scope: !15342)
!15346 = !DILocation(line: 4077, column: 5, scope: !2337)
!15347 = !DILocation(line: 4077, column: 5, scope: !15158)
!15348 = !DILocation(line: 4077, column: 5, scope: !2336)
!15349 = !DILocation(line: 4046, column: 10, scope: !2337)
!15350 = !DILocation(line: 4044, column: 5, scope: !2337)
!15351 = !DILocation(line: 4078, column: 12, scope: !2323)
!15352 = !DILocation(line: 4078, column: 20, scope: !2323)
!15353 = !DILocation(line: 4078, column: 26, scope: !2323)
!15354 = !DILocation(line: 4078, column: 18, scope: !2323)
!15355 = !DILocation(line: 4078, column: 5, scope: !2323)
!15356 = !DILocation(line: 4079, column: 1, scope: !2323)
!15357 = !DILocation(line: 5226, column: 34, scope: !2389)
!15358 = !DILocation(line: 5228, column: 5, scope: !2389)
!15359 = !DILocation(line: 5228, column: 20, scope: !2389)
!15360 = !DILocation(line: 5230, column: 24, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !2389, file: !368, line: 5230, column: 9)
!15362 = !DILocation(line: 5230, column: 31, scope: !15361)
!15363 = !DILocation(line: 5230, column: 40, scope: !15361)
!15364 = !DILocation(line: 5230, column: 66, scope: !15361)
!15365 = !DILocation(line: 5230, column: 100, scope: !15366)
!15366 = !DILexicalBlockFile(scope: !15361, file: !368, discriminator: 1)
!15367 = !DILocation(line: 5230, column: 107, scope: !15361)
!15368 = !DILocation(line: 5230, column: 69, scope: !15361)
!15369 = !DILocation(line: 5230, column: 9, scope: !2389)
!15370 = !DILocation(line: 5231, column: 9, scope: !15361)
!15371 = !DILocation(line: 5232, column: 24, scope: !15372)
!15372 = distinct !DILexicalBlock(scope: !2389, file: !368, line: 5232, column: 9)
!15373 = !DILocation(line: 5232, column: 31, scope: !15372)
!15374 = !DILocation(line: 5232, column: 40, scope: !15372)
!15375 = !DILocation(line: 5232, column: 66, scope: !15372)
!15376 = !DILocation(line: 5232, column: 100, scope: !15377)
!15377 = !DILexicalBlockFile(scope: !15372, file: !368, discriminator: 1)
!15378 = !DILocation(line: 5232, column: 107, scope: !15372)
!15379 = !DILocation(line: 5232, column: 69, scope: !15372)
!15380 = !DILocation(line: 5232, column: 9, scope: !2389)
!15381 = !DILocation(line: 5233, column: 9, scope: !15372)
!15382 = !DILocation(line: 5234, column: 27, scope: !2389)
!15383 = !DILocation(line: 5234, column: 12, scope: !2389)
!15384 = !DILocation(line: 5234, column: 10, scope: !2389)
!15385 = !DILocation(line: 5235, column: 9, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !2389, file: !368, line: 5235, column: 9)
!15387 = !DILocation(line: 5235, column: 9, scope: !2389)
!15388 = !DILocation(line: 5236, column: 30, scope: !15389)
!15389 = distinct !DILexicalBlock(scope: !15390, file: !368, line: 5236, column: 13)
!15390 = distinct !DILexicalBlock(scope: !15386, file: !368, line: 5235, column: 15)
!15391 = !DILocation(line: 5236, column: 36, scope: !15389)
!15392 = !DILocation(line: 5236, column: 45, scope: !15389)
!15393 = !DILocation(line: 5236, column: 56, scope: !15389)
!15394 = !DILocation(line: 5236, column: 65, scope: !15389)
!15395 = !DILocation(line: 5236, column: 82, scope: !15389)
!15396 = !DILocation(line: 5237, column: 13, scope: !15389)
!15397 = !DILocation(line: 5237, column: 89, scope: !15398)
!15398 = !DILexicalBlockFile(scope: !15389, file: !368, discriminator: 1)
!15399 = !DILocation(line: 5237, column: 126, scope: !15400)
!15400 = !DILexicalBlockFile(scope: !15389, file: !368, discriminator: 2)
!15401 = !DILocation(line: 5237, column: 147, scope: !15402)
!15402 = !DILexicalBlockFile(scope: !15389, file: !368, discriminator: 5)
!15403 = !DILocation(line: 5237, column: 153, scope: !15389)
!15404 = !DILocation(line: 5237, column: 130, scope: !15389)
!15405 = !DILocation(line: 5237, column: 129, scope: !15389)
!15406 = !DILocation(line: 5237, column: 164, scope: !15389)
!15407 = !DILocation(line: 5236, column: 13, scope: !15390)
!15408 = !DILocation(line: 5237, column: 224, scope: !15389)
!15409 = !DILocation(line: 5237, column: 230, scope: !15389)
!15410 = !DILocation(line: 5237, column: 207, scope: !15389)
!15411 = !DILocation(line: 5237, column: 183, scope: !15389)
!15412 = !DILocation(line: 5237, column: 174, scope: !15389)
!15413 = !DILocation(line: 5237, column: 33, scope: !15389)
!15414 = !DILocation(line: 5237, column: 289, scope: !15415)
!15415 = !DILexicalBlockFile(scope: !15416, file: !368, discriminator: 4)
!15416 = !DILexicalBlockFile(scope: !15389, file: !368, discriminator: 3)
!15417 = !DILocation(line: 5237, column: 295, scope: !15389)
!15418 = !DILocation(line: 5237, column: 272, scope: !15389)
!15419 = !DILocation(line: 5237, column: 243, scope: !15389)
!15420 = !DILocation(line: 5239, column: 13, scope: !15421)
!15421 = distinct !DILexicalBlock(scope: !15389, file: !368, line: 5237, column: 310)
!15422 = !DILocation(line: 5241, column: 5, scope: !15390)
!15423 = !DILocation(line: 5242, column: 18, scope: !2389)
!15424 = !DILocation(line: 5244, column: 35, scope: !2389)
!15425 = !DILocation(line: 5244, column: 42, scope: !2389)
!15426 = !DILocation(line: 5244, column: 53, scope: !2389)
!15427 = !DILocation(line: 5244, column: 62, scope: !2389)
!15428 = !DILocation(line: 5244, column: 79, scope: !2389)
!15429 = !DILocation(line: 5244, column: 18, scope: !2389)
!15430 = !DILocation(line: 5245, column: 37, scope: !2389)
!15431 = !DILocation(line: 5245, column: 21, scope: !2389)
!15432 = !DILocation(line: 5245, column: 43, scope: !2389)
!15433 = !DILocation(line: 5246, column: 34, scope: !2389)
!15434 = !DILocation(line: 5246, column: 41, scope: !2389)
!15435 = !DILocation(line: 5246, column: 51, scope: !2389)
!15436 = !DILocation(line: 5242, column: 5, scope: !2389)
!15437 = !DILocation(line: 5247, column: 5, scope: !2389)
!15438 = !DILocation(line: 5248, column: 1, scope: !2389)
