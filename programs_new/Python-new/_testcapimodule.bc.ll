; ModuleID = 'irs-onlybc/_testcapimodule.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._longobject = type { %struct.PyVarObject, [1 x i32] }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._object = type { i64, %struct._typeobject* }
%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, {}*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { {}*, {}*, {}*, {}*, {}*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, {}*, {}*, {}*, {}*, {}*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, {}*, {}*, {}*, {}*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, {}*, {}*, {}*, {}*, {}*, {}*, {}*, {}*, {}*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, {}*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, {}*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, {}*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMethodDef = type { i8*, {}*, i32, i8* }
%struct.PyMemberDef = type { i8*, i32, i64, i32, i8* }
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct.PyModuleDef = type { %struct.PyModuleDef_Base, i8*, i8*, i64, %struct.PyMethodDef*, i32 (%struct._object*)*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, void (i8*)* }
%struct.PyModuleDef_Base = type { %struct._object, %struct._object* ()*, i64, %struct._object* }
%struct.PyDateTime_CAPI = type { %struct._typeobject*, %struct._typeobject*, %struct._typeobject*, %struct._typeobject*, %struct._typeobject*, %struct._object* (i32, i32, i32, %struct._typeobject*)*, %struct._object* (i32, i32, i32, i32, i32, i32, i32, %struct._object*, %struct._typeobject*)*, %struct._object* (i32, i32, i32, i32, %struct._object*, %struct._typeobject*)*, %struct._object* (i32, i32, i32, i32, %struct._typeobject*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)* }
%struct.triple = type { i64, i64, i32 }
%struct.known_capsule = type { i8*, i8*, i8* }
%struct._Py_Identifier = type { %struct._Py_Identifier*, i8*, %struct._object* }
%struct._ts = type { %struct._ts*, %struct._ts*, %struct._is*, %struct._frame*, i32, i8, i8, i32, i32, i32 (%struct._object*, %struct._frame*, i32, %struct._object*)*, i32 (%struct._object*, %struct._frame*, i32, %struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i32, %struct._object*, i64, i32, %struct._object*, void (i8*)*, i8* }
%struct._is = type { %struct._is*, %struct._ts*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i32, i32, i32, %struct._object* }
%struct._frame = type opaque
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.PyListObject = type { %struct.PyVarObject, %struct._object**, i64 }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }
%struct.PyASCIIObject = type { %struct._object, i64, i64, %struct.anon, i32* }
%struct.anon = type { i32 }
%struct.PyCompactUnicodeObject = type { %struct.PyASCIIObject, i64, i8*, i64 }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }
%struct.PyCodeObject = type { %struct._object, i32, i32, i32, i32, i32, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, i8*, %struct._object*, %struct._object*, i32, %struct._object*, i8*, %struct._object* }
%struct.PyCompilerFlags = type { i32 }
%struct.test_c_thread_t = type { i8*, i8*, %struct._object* }
%struct.alloc_hook_t = type { %struct.PyMemAllocator, i64, i8*, i64, i8* }
%struct.PyMemAllocator = type { i8*, i8* (i8*, i64)*, i8* (i8*, i8*, i64)*, void (i8*, i8*)* }
%struct.test_structmembers = type { %struct._object, %struct.all_structmembers }
%struct.all_structmembers = type { i8, i8, i8, i16, i16, i32, i32, i64, i64, i64, float, double, [6 x i8], i64, i64 }

@.str = private unnamed_addr constant [2 x i8] c"O\00", align 1
@_Py_FalseStruct = external global %struct._longobject, align 8
@_Py_TrueStruct = external global %struct._longobject, align 8
@_testcapimodule = internal global %struct.PyModuleDef { %struct.PyModuleDef_Base { %struct._object { i64 1, %struct._typeobject* null }, %struct._object* ()* null, i64 0, %struct._object* null }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* null, i64 -1, %struct.PyMethodDef* getelementptr inbounds ([101 x %struct.PyMethodDef], [101 x %struct.PyMethodDef]* bitcast (<{ { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } }>* @TestMethods to [101 x %struct.PyMethodDef]*), i32 0, i32 0), i32 (%struct._object*)* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, void (i8*)* null }, align 8
@PyType_Type = external global %struct._typeobject, align 8
@.str.1 = private unnamed_addr constant [24 x i8] c"_test_structmembersType\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"CHAR_MAX\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"CHAR_MIN\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"UCHAR_MAX\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"SHRT_MAX\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"SHRT_MIN\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"USHRT_MAX\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"INT_MAX\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"INT_MIN\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"UINT_MAX\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"LONG_MAX\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"LONG_MIN\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"ULONG_MAX\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"FLT_MAX\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"FLT_MIN\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"DBL_MAX\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"DBL_MIN\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"LLONG_MAX\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"LLONG_MIN\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"ULLONG_MAX\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"PY_SSIZE_T_MAX\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"PY_SSIZE_T_MIN\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"SIZEOF_PYGC_HEAD\00", align 1
@PyInstanceMethod_Type = external global %struct._typeobject, align 8
@.str.24 = private unnamed_addr constant [15 x i8] c"instancemethod\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"the_number_three\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"_testcapi.error\00", align 1
@TestError = internal global %struct._object* null, align 8
@.str.27 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"_testcapi\00", align 1
@.str.29 = private unnamed_addr constant [16 x i8] c"raise_exception\00", align 1
@.str.30 = private unnamed_addr constant [18 x i8] c"raise_memoryerror\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"test_config\00", align 1
@.str.32 = private unnamed_addr constant [20 x i8] c"test_sizeof_c_types\00", align 1
@.str.33 = private unnamed_addr constant [19 x i8] c"test_datetime_capi\00", align 1
@.str.34 = private unnamed_addr constant [14 x i8] c"test_list_api\00", align 1
@.str.35 = private unnamed_addr constant [20 x i8] c"test_dict_iteration\00", align 1
@.str.36 = private unnamed_addr constant [27 x i8] c"test_lazy_hash_inheritance\00", align 1
@.str.37 = private unnamed_addr constant [14 x i8] c"test_long_api\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"test_xincref_doesnt_leak\00", align 1
@.str.39 = private unnamed_addr constant [24 x i8] c"test_incref_doesnt_leak\00", align 1
@.str.40 = private unnamed_addr constant [25 x i8] c"test_xdecref_doesnt_leak\00", align 1
@.str.41 = private unnamed_addr constant [24 x i8] c"test_decref_doesnt_leak\00", align 1
@.str.42 = private unnamed_addr constant [23 x i8] c"test_incref_decref_API\00", align 1
@.str.43 = private unnamed_addr constant [23 x i8] c"test_long_and_overflow\00", align 1
@.str.44 = private unnamed_addr constant [20 x i8] c"test_long_as_double\00", align 1
@.str.45 = private unnamed_addr constant [20 x i8] c"test_long_as_size_t\00", align 1
@.str.46 = private unnamed_addr constant [18 x i8] c"test_long_numbits\00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c"test_k_code\00", align 1
@.str.48 = private unnamed_addr constant [20 x i8] c"test_empty_argparse\00", align 1
@.str.49 = private unnamed_addr constant [25 x i8] c"parse_tuple_and_keywords\00", align 1
@.str.50 = private unnamed_addr constant [18 x i8] c"test_null_strings\00", align 1
@.str.51 = private unnamed_addr constant [24 x i8] c"test_string_from_format\00", align 1
@.str.52 = private unnamed_addr constant [20 x i8] c"test_with_docstring\00", align 1
@.str.53 = private unnamed_addr constant [35 x i8] c"This is a pretty normal docstring.\00", align 1
@.str.54 = private unnamed_addr constant [22 x i8] c"test_string_to_double\00", align 1
@.str.55 = private unnamed_addr constant [32 x i8] c"test_unicode_compare_with_ascii\00", align 1
@.str.56 = private unnamed_addr constant [13 x i8] c"test_capsule\00", align 1
@.str.57 = private unnamed_addr constant [14 x i8] c"getargs_tuple\00", align 1
@.str.58 = private unnamed_addr constant [17 x i8] c"getargs_keywords\00", align 1
@.str.59 = private unnamed_addr constant [21 x i8] c"getargs_keyword_only\00", align 1
@.str.60 = private unnamed_addr constant [10 x i8] c"getargs_b\00", align 1
@.str.61 = private unnamed_addr constant [10 x i8] c"getargs_B\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"getargs_h\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"getargs_H\00", align 1
@.str.64 = private unnamed_addr constant [10 x i8] c"getargs_I\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"getargs_k\00", align 1
@.str.66 = private unnamed_addr constant [10 x i8] c"getargs_i\00", align 1
@.str.67 = private unnamed_addr constant [10 x i8] c"getargs_l\00", align 1
@.str.68 = private unnamed_addr constant [10 x i8] c"getargs_n\00", align 1
@.str.69 = private unnamed_addr constant [10 x i8] c"getargs_p\00", align 1
@.str.70 = private unnamed_addr constant [10 x i8] c"getargs_L\00", align 1
@.str.71 = private unnamed_addr constant [10 x i8] c"getargs_K\00", align 1
@.str.72 = private unnamed_addr constant [18 x i8] c"test_longlong_api\00", align 1
@.str.73 = private unnamed_addr constant [28 x i8] c"test_long_long_and_overflow\00", align 1
@.str.74 = private unnamed_addr constant [12 x i8] c"test_L_code\00", align 1
@.str.75 = private unnamed_addr constant [10 x i8] c"getargs_c\00", align 1
@.str.76 = private unnamed_addr constant [10 x i8] c"getargs_s\00", align 1
@.str.77 = private unnamed_addr constant [15 x i8] c"getargs_s_star\00", align 1
@.str.78 = private unnamed_addr constant [15 x i8] c"getargs_s_hash\00", align 1
@.str.79 = private unnamed_addr constant [10 x i8] c"getargs_z\00", align 1
@.str.80 = private unnamed_addr constant [15 x i8] c"getargs_z_star\00", align 1
@.str.81 = private unnamed_addr constant [15 x i8] c"getargs_z_hash\00", align 1
@.str.82 = private unnamed_addr constant [10 x i8] c"getargs_y\00", align 1
@.str.83 = private unnamed_addr constant [15 x i8] c"getargs_y_star\00", align 1
@.str.84 = private unnamed_addr constant [15 x i8] c"getargs_y_hash\00", align 1
@.str.85 = private unnamed_addr constant [10 x i8] c"getargs_u\00", align 1
@.str.86 = private unnamed_addr constant [15 x i8] c"getargs_u_hash\00", align 1
@.str.87 = private unnamed_addr constant [10 x i8] c"getargs_Z\00", align 1
@.str.88 = private unnamed_addr constant [15 x i8] c"getargs_Z_hash\00", align 1
@.str.89 = private unnamed_addr constant [15 x i8] c"getargs_w_star\00", align 1
@.str.90 = private unnamed_addr constant [25 x i8] c"codec_incrementalencoder\00", align 1
@.str.91 = private unnamed_addr constant [25 x i8] c"codec_incrementaldecoder\00", align 1
@.str.92 = private unnamed_addr constant [12 x i8] c"test_s_code\00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c"test_u_code\00", align 1
@.str.94 = private unnamed_addr constant [12 x i8] c"test_Z_code\00", align 1
@.str.95 = private unnamed_addr constant [14 x i8] c"test_widechar\00", align 1
@.str.96 = private unnamed_addr constant [19 x i8] c"unicode_aswidechar\00", align 1
@.str.97 = private unnamed_addr constant [25 x i8] c"unicode_aswidecharstring\00", align 1
@.str.98 = private unnamed_addr constant [22 x i8] c"unicode_encodedecimal\00", align 1
@.str.99 = private unnamed_addr constant [32 x i8] c"unicode_transformdecimaltoascii\00", align 1
@.str.100 = private unnamed_addr constant [22 x i8] c"unicode_legacy_string\00", align 1
@.str.101 = private unnamed_addr constant [19 x i8] c"_test_thread_state\00", align 1
@.str.102 = private unnamed_addr constant [20 x i8] c"_pending_threadfunc\00", align 1
@.str.103 = private unnamed_addr constant [12 x i8] c"profile_int\00", align 1
@.str.104 = private unnamed_addr constant [16 x i8] c"traceback_print\00", align 1
@.str.105 = private unnamed_addr constant [16 x i8] c"exception_print\00", align 1
@.str.106 = private unnamed_addr constant [13 x i8] c"set_exc_info\00", align 1
@.str.107 = private unnamed_addr constant [11 x i8] c"argparsing\00", align 1
@.str.108 = private unnamed_addr constant [14 x i8] c"code_newempty\00", align 1
@.str.109 = private unnamed_addr constant [24 x i8] c"make_exception_with_doc\00", align 1
@.str.110 = private unnamed_addr constant [34 x i8] c"make_memoryview_from_NULL_pointer\00", align 1
@.str.111 = private unnamed_addr constant [24 x i8] c"crash_no_current_thread\00", align 1
@.str.112 = private unnamed_addr constant [17 x i8] c"run_in_subinterp\00", align 1
@.str.113 = private unnamed_addr constant [24 x i8] c"pytime_object_to_time_t\00", align 1
@.str.114 = private unnamed_addr constant [25 x i8] c"pytime_object_to_timeval\00", align 1
@.str.115 = private unnamed_addr constant [26 x i8] c"pytime_object_to_timespec\00", align 1
@.str.116 = private unnamed_addr constant [12 x i8] c"with_tp_del\00", align 1
@.str.117 = private unnamed_addr constant [11 x i8] c"test_pymem\00", align 1
@.str.118 = private unnamed_addr constant [18 x i8] c"test_pymem_alloc0\00", align 1
@.str.119 = private unnamed_addr constant [25 x i8] c"test_pymem_setallocators\00", align 1
@.str.120 = private unnamed_addr constant [28 x i8] c"test_pyobject_setallocators\00", align 1
@.str.121 = private unnamed_addr constant [13 x i8] c"no_docstring\00", align 1
@.str.122 = private unnamed_addr constant [16 x i8] c"docstring_empty\00", align 1
@docstring_empty = internal global [1 x i8] zeroinitializer, align 1
@.str.123 = private unnamed_addr constant [23 x i8] c"docstring_no_signature\00", align 1
@docstring_no_signature = internal global [33 x i8] c"This docstring has no signature.\00", align 16
@.str.124 = private unnamed_addr constant [33 x i8] c"docstring_with_invalid_signature\00", align 1
@docstring_with_invalid_signature = internal global [92 x i8] c"docstring_with_invalid_signature($module, /, boo)\0A\0AThis docstring has an invalid signature.\00", align 16
@.str.125 = private unnamed_addr constant [34 x i8] c"docstring_with_invalid_signature2\00", align 1
@docstring_with_invalid_signature2 = internal global [102 x i8] c"docstring_with_invalid_signature2($module, /, boo)\0A\0A--\0A\0AThis docstring also has an invalid signature.\00", align 16
@.str.126 = private unnamed_addr constant [25 x i8] c"docstring_with_signature\00", align 1
@docstring_with_signature = internal global [84 x i8] c"docstring_with_signature($module, /, sig)\0A--\0A\0AThis docstring has a valid signature.\00", align 16
@.str.127 = private unnamed_addr constant [44 x i8] c"docstring_with_signature_and_extra_newlines\00", align 1
@docstring_with_signature_and_extra_newlines = internal global [134 x i8] c"docstring_with_signature_and_extra_newlines($module, /, parameter)\0A--\0A\0A\0AThis docstring has a valid signature and some extra newlines.\00", align 16
@.str.128 = private unnamed_addr constant [39 x i8] c"docstring_with_signature_with_defaults\00", align 1
@docstring_with_signature_with_defaults = internal global [308 x i8] c"docstring_with_signature_with_defaults(module, s='avocado',\0A        b=b'bytes', d=3.14, i=35, n=None, t=True, f=False,\0A        local=the_number_three, sys=sys.maxsize,\0A        exp=sys.maxsize - 1)\0A--\0A\0A\0A\0AThis docstring has a valid signature with parameters,\0Aand the parameters take defaults of varying types.\00", align 16
@.str.129 = private unnamed_addr constant [27 x i8] c"call_in_temporary_c_thread\00", align 1
@.str.130 = private unnamed_addr constant [37 x i8] c"set_error_class(error_class) -> None\00", align 1
@TestMethods = internal global <{ { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } }> <{ { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @raise_exception, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @raise_memoryerror to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_config to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.32, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_sizeof_c_types to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.33, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @test_datetime_capi, i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_list_api to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_dict_iteration to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_lazy_hash_inheritance to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_long_api to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_xincref_doesnt_leak to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.39, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_incref_doesnt_leak to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.40, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_xdecref_doesnt_leak to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.41, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_decref_doesnt_leak to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.42, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_incref_decref_API to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_long_and_overflow to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_long_as_double to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_long_as_size_t to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.46, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_long_numbits to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_k_code to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.48, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_empty_argparse to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.49, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @parse_tuple_and_keywords, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.50, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_null_strings to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @test_string_from_format, i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_with_docstring to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.53, i32 0, i32 0) }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.54, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_string_to_double to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.55, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_unicode_compare_with_ascii to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.56, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @test_capsule, i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_tuple, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.58, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @getargs_keywords to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.59, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @getargs_keyword_only to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_b, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_B, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_h, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_H, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_I, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.65, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_k, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_i, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_l, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_n, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_p, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.70, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_L, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_K, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.72, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @test_longlong_api, i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_long_long_and_overflow to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.74, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_L_code to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.75, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_c, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.76, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_s, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.77, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_s_star, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_s_hash, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_z, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_z_star, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.81, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_z_hash, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_y, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.83, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_y_star, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.84, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_y_hash, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.85, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_u, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.86, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_u_hash, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.87, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_Z, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.88, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_Z_hash, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.89, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @getargs_w_star, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.90, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @codec_incrementalencoder, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.91, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @codec_incrementaldecoder, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.92, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_s_code to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_u_code to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_Z_code to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.95, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_widechar to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.96, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @unicode_aswidechar, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.97, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @unicode_aswidecharstring, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.98, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @unicode_encodedecimal, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.99, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @unicode_transformdecimaltoascii, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.100, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @unicode_legacy_string, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.101, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @test_thread_state, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.102, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @pending_threadfunc, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.103, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @profile_int, i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.104, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @traceback_print, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.105, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @exception_print, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.106, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @test_set_exc_info, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.107, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @argparsing, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.108, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @code_newempty, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.109, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*, %struct._object*, %struct._object*)* @make_exception_with_doc to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.110, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @make_memoryview_from_NULL_pointer to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.111, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @crash_no_current_thread to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.112, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @run_in_subinterp, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.113, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @test_pytime_object_to_time_t, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.114, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @test_pytime_object_to_timeval, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.115, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @test_pytime_object_to_timespec, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.116, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @with_tp_del, i32 1, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.117, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_pymem_alloc0 to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.118, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_pymem_setrawallocators to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.119, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_pymem_setallocators to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.120, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_pyobject_setallocators to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.121, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_with_docstring to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.122, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_with_docstring to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @docstring_empty, i32 0, i32 0) }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.123, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_with_docstring to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @docstring_no_signature, i32 0, i32 0) }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.124, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_with_docstring to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @docstring_with_invalid_signature, i32 0, i32 0) }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.125, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_with_docstring to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @docstring_with_invalid_signature2, i32 0, i32 0) }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.126, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_with_docstring to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @docstring_with_signature, i32 0, i32 0) }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_with_docstring to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @docstring_with_signature_and_extra_newlines, i32 0, i32 0) }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.128, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @test_with_docstring to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([308 x i8], [308 x i8]* @docstring_with_signature_with_defaults, i32 0, i32 0) }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.129, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @call_in_temporary_c_thread, i32 8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.130, i32 0, i32 0) }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } zeroinitializer }>, align 16
@.str.131 = private unnamed_addr constant [19 x i8] c"Oi:raise_exception\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@PyDateTimeAPI = internal global %struct.PyDateTime_CAPI* null, align 8
@test_run_counter = internal global i32 0, align 4
@PyExc_AssertionError = external global %struct._object*, align 8
@.str.132 = private unnamed_addr constant [36 x i8] c"PyDateTime_CAPI somehow initialized\00", align 1
@.str.133 = private unnamed_addr constant [23 x i8] c"datetime.datetime_CAPI\00", align 1
@.str.134 = private unnamed_addr constant [34 x i8] c"test_list_api: reverse screwed up\00", align 1
@.str.135 = private unnamed_addr constant [48 x i8] c"test_dict_iteration: dict iteration went wrong \00", align 1
@.str.136 = private unnamed_addr constant [52 x i8] c"test_lazy_hash_inheritance: failed to create object\00", align 1
@.str.137 = private unnamed_addr constant [54 x i8] c"test_lazy_hash_inheritance: type initialised too soon\00", align 1
@.str.138 = private unnamed_addr constant [50 x i8] c"test_lazy_hash_inheritance: could not hash object\00", align 1
@.str.139 = private unnamed_addr constant [59 x i8] c"test_lazy_hash_inheritance: type not initialised by hash()\00", align 1
@.str.140 = private unnamed_addr constant [53 x i8] c"test_lazy_hash_inheritance: unexpected hash function\00", align 1
@.str.141 = private unnamed_addr constant [32 x i8] c"unsigned unexpected null result\00", align 1
@.str.142 = private unnamed_addr constant [30 x i8] c"unsigned unexpected -1 result\00", align 1
@.str.143 = private unnamed_addr constant [25 x i8] c"unsigned output != input\00", align 1
@.str.144 = private unnamed_addr constant [30 x i8] c"signed unexpected null result\00", align 1
@.str.145 = private unnamed_addr constant [28 x i8] c"signed unexpected -1 result\00", align 1
@.str.146 = private unnamed_addr constant [23 x i8] c"signed output != input\00", align 1
@.str.147 = private unnamed_addr constant [37 x i8] c"unexpected NULL from PyLong_FromLong\00", align 1
@.str.148 = private unnamed_addr constant [39 x i8] c"unexpected NULL from PyNumber_Negative\00", align 1
@.str.149 = private unnamed_addr constant [41 x i8] c"PyLong_AsUnsignedXXX(-1) didn't complain\00", align 1
@PyExc_OverflowError = external global %struct._object*, align 8
@.str.150 = private unnamed_addr constant [67 x i8] c"PyLong_AsUnsignedXXX(-1) raised something other than OverflowError\00", align 1
@.str.151 = private unnamed_addr constant [37 x i8] c"unexpected NULL from PyNumber_Lshift\00", align 1
@.str.152 = private unnamed_addr constant [47 x i8] c"PyLong_AsUnsignedXXX(2**NBITS) didn't complain\00", align 1
@.str.153 = private unnamed_addr constant [73 x i8] c"PyLong_AsUnsignedXXX(2**NBITS) raised something other than OverflowError\00", align 1
@.str.154 = private unnamed_addr constant [37 x i8] c"unexpected NULL from PyNumber_Rshift\00", align 1
@.str.155 = private unnamed_addr constant [43 x i8] c"PyLong_AsXXX(2**(NBITS-1)) didn't complain\00", align 1
@.str.156 = private unnamed_addr constant [69 x i8] c"PyLong_AsXXX(2**(NBITS-1)) raised something other than OverflowError\00", align 1
@.str.157 = private unnamed_addr constant [39 x i8] c"unexpected NULL from PyNumber_Subtract\00", align 1
@.str.158 = private unnamed_addr constant [46 x i8] c"PyLong_AsXXX(-2**(NBITS-1)-1) didn't complain\00", align 1
@.str.159 = private unnamed_addr constant [72 x i8] c"PyLong_AsXXX(-2**(NBITS-1)-1) raised something other than OverflowError\00", align 1
@.str.160 = private unnamed_addr constant [35 x i8] c"PyLong_AsXXX(None) didn't complain\00", align 1
@PyExc_TypeError = external global %struct._object*, align 8
@.str.161 = private unnamed_addr constant [57 x i8] c"PyLong_AsXXX(None) raised something other than TypeError\00", align 1
@.str.162 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.163 = private unnamed_addr constant [25 x i8] c"FFFFFFFFFFFFFFFFFFFFFFFF\00", align 1
@.str.164 = private unnamed_addr constant [31 x i8] c"return value was not set to -1\00", align 1
@.str.165 = private unnamed_addr constant [26 x i8] c"overflow was not set to 1\00", align 1
@.str.166 = private unnamed_addr constant [26 x i8] c"-FFFFFFFFFFFFFFFFFFFFFFFF\00", align 1
@.str.167 = private unnamed_addr constant [27 x i8] c"overflow was not set to -1\00", align 1
@.str.168 = private unnamed_addr constant [3 x i8] c"FF\00", align 1
@.str.169 = private unnamed_addr constant [27 x i8] c"expected return value 0xFF\00", align 1
@.str.170 = private unnamed_addr constant [25 x i8] c"overflow was not cleared\00", align 1
@.str.171 = private unnamed_addr constant [4 x i8] c"-FF\00", align 1
@.str.172 = private unnamed_addr constant [29 x i8] c"overflow was set incorrectly\00", align 1
@.str.173 = private unnamed_addr constant [31 x i8] c"expected return value LONG_MAX\00", align 1
@.str.174 = private unnamed_addr constant [31 x i8] c"expected return value LONG_MIN\00", align 1
@.str.175 = private unnamed_addr constant [38 x i8] c"PyLong_AsDouble(None) didn't complain\00", align 1
@.str.176 = private unnamed_addr constant [60 x i8] c"PyLong_AsDouble(None) raised something other than TypeError\00", align 1
@.str.177 = private unnamed_addr constant [38 x i8] c"PyLong_AsSize_t(None) didn't complain\00", align 1
@.str.178 = private unnamed_addr constant [60 x i8] c"PyLong_AsSize_t(None) raised something other than TypeError\00", align 1
@.str.179 = private unnamed_addr constant [39 x i8] c"PyLong_AsSsize_t(None) didn't complain\00", align 1
@.str.180 = private unnamed_addr constant [61 x i8] c"PyLong_AsSsize_t(None) raised something other than TypeError\00", align 1
@test_long_numbits.testcases = private unnamed_addr constant [15 x %struct.triple] [%struct.triple zeroinitializer, %struct.triple { i64 1, i64 1, i32 1 }, %struct.triple { i64 -1, i64 1, i32 -1 }, %struct.triple { i64 2, i64 2, i32 1 }, %struct.triple { i64 -2, i64 2, i32 -1 }, %struct.triple { i64 3, i64 2, i32 1 }, %struct.triple { i64 -3, i64 2, i32 -1 }, %struct.triple { i64 4, i64 3, i32 1 }, %struct.triple { i64 -4, i64 3, i32 -1 }, %struct.triple { i64 32767, i64 15, i32 1 }, %struct.triple { i64 -32767, i64 15, i32 -1 }, %struct.triple { i64 65535, i64 16, i32 1 }, %struct.triple { i64 -65535, i64 16, i32 -1 }, %struct.triple { i64 268435455, i64 28, i32 1 }, %struct.triple { i64 -268435455, i64 28, i32 -1 }], align 16
@.str.181 = private unnamed_addr constant [33 x i8] c"wrong result for _PyLong_NumBits\00", align 1
@.str.182 = private unnamed_addr constant [30 x i8] c"wrong result for _PyLong_Sign\00", align 1
@.str.183 = private unnamed_addr constant [70 x i8] c"PyLong_AsUnsignedLongMask() returned wrong value for long 0xFFF...FFF\00", align 1
@.str.184 = private unnamed_addr constant [14 x i8] c"k:test_k_code\00", align 1
@.str.185 = private unnamed_addr constant [49 x i8] c"k code returned wrong value for long 0xFFF...FFF\00", align 1
@.str.186 = private unnamed_addr constant [28 x i8] c"-FFFFFFFF000000000000000042\00", align 1
@.str.187 = private unnamed_addr constant [52 x i8] c"k code returned wrong value for long -0xFFF..000042\00", align 1
@test_empty_argparse.kwlist = internal global [1 x i8*] zeroinitializer, align 8
@.str.188 = private unnamed_addr constant [22 x i8] c"|:test_empty_argparse\00", align 1
@.str.189 = private unnamed_addr constant [30 x i8] c"OOyO:parse_tuple_and_keywords\00", align 1
@PyList_Type = external global %struct._typeobject, align 8
@PyTuple_Type = external global %struct._typeobject, align 8
@PyExc_ValueError = external global %struct._object*, align 8
@.str.190 = private unnamed_addr constant [68 x i8] c"parse_tuple_and_keywords: sub_keywords must be either list or tuple\00", align 1
@.str.191 = private unnamed_addr constant [60 x i8] c"parse_tuple_and_keywords: too many keywords in sub_keywords\00", align 1
@.str.192 = private unnamed_addr constant [75 x i8] c"parse_tuple_and_keywords: could not convert keywords[%zd] to narrow string\00", align 1
@.str.193 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.194 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.195 = private unnamed_addr constant [15 x i8] c"%d failed at 1\00", align 1
@.str.196 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.197 = private unnamed_addr constant [16 x i8] c"%ld failed at 1\00", align 1
@.str.198 = private unnamed_addr constant [4 x i8] c"%zd\00", align 1
@.str.199 = private unnamed_addr constant [16 x i8] c"%zd failed at 1\00", align 1
@.str.200 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.201 = private unnamed_addr constant [15 x i8] c"%u failed at 1\00", align 1
@.str.202 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.203 = private unnamed_addr constant [16 x i8] c"%lu failed at 1\00", align 1
@.str.204 = private unnamed_addr constant [4 x i8] c"%zu\00", align 1
@.str.205 = private unnamed_addr constant [16 x i8] c"%zu failed at 1\00", align 1
@.str.206 = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.str.207 = private unnamed_addr constant [17 x i8] c"%llu failed at 1\00", align 1
@.str.208 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str.209 = private unnamed_addr constant [17 x i8] c"%lld failed at 1\00", align 1
@.str.210 = private unnamed_addr constant [4 x i8] c"0.1\00", align 1
@.str.211 = private unnamed_addr constant [34 x i8] c"conversion of 0.1 to float failed\00", align 1
@.str.212 = private unnamed_addr constant [6 x i8] c"1.234\00", align 1
@.str.213 = private unnamed_addr constant [36 x i8] c"conversion of 1.234 to float failed\00", align 1
@.str.214 = private unnamed_addr constant [6 x i8] c"-1.35\00", align 1
@.str.215 = private unnamed_addr constant [36 x i8] c"conversion of -1.35 to float failed\00", align 1
@.str.216 = private unnamed_addr constant [6 x i8] c".1e01\00", align 1
@.str.217 = private unnamed_addr constant [36 x i8] c"conversion of .1e01 to float failed\00", align 1
@.str.218 = private unnamed_addr constant [6 x i8] c"2.e-2\00", align 1
@.str.219 = private unnamed_addr constant [36 x i8] c"conversion of 2.e-2 to float failed\00", align 1
@.str.220 = private unnamed_addr constant [5 x i8] c" 0.1\00", align 1
@.str.221 = private unnamed_addr constant [43 x i8] c"conversion of  0.1 didn't raise ValueError\00", align 1
@.str.222 = private unnamed_addr constant [5 x i8] c"\09\0A-3\00", align 1
@.str.223 = private unnamed_addr constant [43 x i8] c"conversion of \09\0A-3 didn't raise ValueError\00", align 1
@.str.224 = private unnamed_addr constant [6 x i8] c".123 \00", align 1
@.str.225 = private unnamed_addr constant [44 x i8] c"conversion of .123  didn't raise ValueError\00", align 1
@.str.226 = private unnamed_addr constant [3 x i8] c"3\0A\00", align 1
@.str.227 = private unnamed_addr constant [41 x i8] c"conversion of 3\0A didn't raise ValueError\00", align 1
@.str.228 = private unnamed_addr constant [7 x i8] c"123abc\00", align 1
@.str.229 = private unnamed_addr constant [45 x i8] c"conversion of 123abc didn't raise ValueError\00", align 1
@.str.230 = private unnamed_addr constant [5 x i8] c"str\00\00", align 1
@.str.231 = private unnamed_addr constant [4 x i8] c"str\00", align 1
@.str.232 = private unnamed_addr constant [67 x i8] c"Python string ending in NULL should not compare equal to c string.\00", align 1
@.str.233 = private unnamed_addr constant [13 x i8] c"_socket.CAPI\00", align 1
@.str.234 = private unnamed_addr constant [8 x i8] c"_socket\00", align 1
@.str.235 = private unnamed_addr constant [5 x i8] c"CAPI\00", align 1
@.str.236 = private unnamed_addr constant [15 x i8] c"_curses._C_API\00", align 1
@.str.237 = private unnamed_addr constant [8 x i8] c"_curses\00", align 1
@.str.238 = private unnamed_addr constant [7 x i8] c"_C_API\00", align 1
@.str.239 = private unnamed_addr constant [9 x i8] c"datetime\00", align 1
@.str.240 = private unnamed_addr constant [14 x i8] c"datetime_CAPI\00", align 1
@test_capsule.known_capsules = private unnamed_addr constant [4 x %struct.known_capsule] [%struct.known_capsule { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.234, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.235, i32 0, i32 0) }, %struct.known_capsule { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.237, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.238, i32 0, i32 0) }, %struct.known_capsule { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.240, i32 0, i32 0) }, %struct.known_capsule zeroinitializer], align 16
@capsule_pointer = internal global i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.252, i32 0, i32 0), align 8
@capsule_name = internal global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.253, i32 0, i32 0), align 8
@capsule_context = internal global i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.258, i32 0, i32 0), align 8
@capsule_error = internal global i8* null, align 8
@capsule_destructor_call_count = internal global i32 0, align 4
@.str.241 = private unnamed_addr constant [23 x i8] c"destructor not called!\00", align 1
@.str.242 = private unnamed_addr constant [8 x i8] c"ignored\00", align 1
@.str.243 = private unnamed_addr constant [15 x i8] c"the wrong name\00", align 1
@.str.244 = private unnamed_addr constant [53 x i8] c"PyCapsule_GetPointer should have failed but did not!\00", align 1
@.str.245 = private unnamed_addr constant [68 x i8] c"PyCapsule_GetPointer should not have returned the internal pointer!\00", align 1
@.str.246 = private unnamed_addr constant [68 x i8] c"PyCapsule_GetPointer should have returned NULL pointer but did not!\00", align 1
@.str.247 = private unnamed_addr constant [48 x i8] c"destructor called when it should not have been!\00", align 1
@test_capsule.buffer = internal global [256 x i8] zeroinitializer, align 16
@.str.248 = private unnamed_addr constant [32 x i8] c"%s module: \22%s\22 attribute: \22%s\22\00", align 1
@.str.249 = private unnamed_addr constant [49 x i8] c"PyCapsule_GetPointer returned NULL unexpectedly!\00", align 1
@.str.250 = private unnamed_addr constant [40 x i8] c"weebles wobble but they don't fall down\00", align 1
@.str.251 = private unnamed_addr constant [68 x i8] c"PyCapsule_GetPointer should not have returned its internal pointer!\00", align 1
@.str.252 = private unnamed_addr constant [16 x i8] c"capsule pointer\00", align 1
@.str.253 = private unnamed_addr constant [13 x i8] c"capsule name\00", align 1
@.str.254 = private unnamed_addr constant [37 x i8] c"context did not match in destructor!\00", align 1
@.str.255 = private unnamed_addr constant [49 x i8] c"destructor did not match in destructor!  (woah!)\00", align 1
@.str.256 = private unnamed_addr constant [34 x i8] c"name did not match in destructor!\00", align 1
@.str.257 = private unnamed_addr constant [37 x i8] c"pointer did not match in destructor!\00", align 1
@.str.258 = private unnamed_addr constant [16 x i8] c"capsule context\00", align 1
@.str.259 = private unnamed_addr constant [6 x i8] c"i(ii)\00", align 1
@.str.260 = private unnamed_addr constant [4 x i8] c"iii\00", align 1
@getargs_keywords.keywords = internal global [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.261, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.262, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.263, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.264, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.265, i32 0, i32 0), i8* null], align 16
@.str.261 = private unnamed_addr constant [5 x i8] c"arg1\00", align 1
@.str.262 = private unnamed_addr constant [5 x i8] c"arg2\00", align 1
@.str.263 = private unnamed_addr constant [5 x i8] c"arg3\00", align 1
@.str.264 = private unnamed_addr constant [5 x i8] c"arg4\00", align 1
@.str.265 = private unnamed_addr constant [5 x i8] c"arg5\00", align 1
@getargs_keywords.fmt = internal global i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.266, i32 0, i32 0), align 8
@.str.266 = private unnamed_addr constant [20 x i8] c"(ii)i|(i(ii))(iii)i\00", align 1
@getargs_keywords.int_args = private unnamed_addr constant [10 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16
@.str.267 = private unnamed_addr constant [11 x i8] c"iiiiiiiiii\00", align 1
@getargs_keyword_only.keywords = internal global [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.268, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.269, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.270, i32 0, i32 0), i8* null], align 16
@.str.268 = private unnamed_addr constant [9 x i8] c"required\00", align 1
@.str.269 = private unnamed_addr constant [9 x i8] c"optional\00", align 1
@.str.270 = private unnamed_addr constant [13 x i8] c"keyword_only\00", align 1
@.str.271 = private unnamed_addr constant [6 x i8] c"i|i$i\00", align 1
@.str.272 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.273 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.274 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.275 = private unnamed_addr constant [2 x i8] c"H\00", align 1
@.str.276 = private unnamed_addr constant [2 x i8] c"I\00", align 1
@.str.277 = private unnamed_addr constant [2 x i8] c"k\00", align 1
@.str.278 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.279 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str.280 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str.281 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.282 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.283 = private unnamed_addr constant [2 x i8] c"K\00", align 1
@.str.284 = private unnamed_addr constant [35 x i8] c"expected return value PY_LLONG_MAX\00", align 1
@.str.285 = private unnamed_addr constant [35 x i8] c"expected return value PY_LLONG_MIN\00", align 1
@.str.286 = private unnamed_addr constant [14 x i8] c"L:test_L_code\00", align 1
@.str.287 = private unnamed_addr constant [40 x i8] c"L code returned wrong value for long 42\00", align 1
@.str.288 = private unnamed_addr constant [39 x i8] c"L code returned wrong value for int 42\00", align 1
@.str.289 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.290 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.291 = private unnamed_addr constant [3 x i8] c"s*\00", align 1
@.str.292 = private unnamed_addr constant [3 x i8] c"s#\00", align 1
@.str.293 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@.str.294 = private unnamed_addr constant [3 x i8] c"z*\00", align 1
@.str.295 = private unnamed_addr constant [3 x i8] c"z#\00", align 1
@.str.296 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.297 = private unnamed_addr constant [3 x i8] c"y*\00", align 1
@.str.298 = private unnamed_addr constant [3 x i8] c"y#\00", align 1
@.str.299 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str.300 = private unnamed_addr constant [3 x i8] c"u#\00", align 1
@.str.301 = private unnamed_addr constant [2 x i8] c"Z\00", align 1
@.str.302 = private unnamed_addr constant [3 x i8] c"Z#\00", align 1
@.str.303 = private unnamed_addr constant [18 x i8] c"w*:getargs_w_star\00", align 1
@.str.304 = private unnamed_addr constant [28 x i8] c"s|s:test_incrementalencoder\00", align 1
@.str.305 = private unnamed_addr constant [28 x i8] c"s|s:test_incrementaldecoder\00", align 1
@.str.306 = private unnamed_addr constant [5 x i8] c"t\EAte\00", align 1
@.str.307 = private unnamed_addr constant [8 x i8] c"latin-1\00", align 1
@.str.308 = private unnamed_addr constant [15 x i8] c"s:test_s_code1\00", align 1
@.str.309 = private unnamed_addr constant [15 x i8] c"z:test_s_code2\00", align 1
@_Py_ascii_whitespace = external constant [0 x i8], align 1
@x = internal global i32 0, align 4
@.str.310 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.311 = private unnamed_addr constant [6 x i8] c"ascii\00", align 1
@.str.312 = private unnamed_addr constant [14 x i8] c"u:test_u_code\00", align 1
@.str.313 = private unnamed_addr constant [40 x i8] c"u code returned wrong value for u'test'\00", align 1
@.str.314 = private unnamed_addr constant [15 x i8] c"u#:test_u_code\00", align 1
@.str.315 = private unnamed_addr constant [42 x i8] c"u# code returned wrong values for u'test'\00", align 1
@.str.316 = private unnamed_addr constant [15 x i8] c"ZZ:test_Z_code\00", align 1
@.str.317 = private unnamed_addr constant [39 x i8] c"Z code returned wrong value for 'test'\00", align 1
@.str.318 = private unnamed_addr constant [37 x i8] c"Z code returned wrong value for None\00", align 1
@.str.319 = private unnamed_addr constant [17 x i8] c"Z#Z#:test_Z_code\00", align 1
@.str.320 = private unnamed_addr constant [41 x i8] c"Z# code returned wrong values for 'test'\00", align 1
@.str.321 = private unnamed_addr constant [40 x i8] c"Z# code returned wrong values for None'\00", align 1
@test_widechar.wtext = internal constant [2 x i32] [i32 1092557, i32 0], align 4
@test_widechar.invalid = internal constant [1 x i32] [i32 1114112], align 4
@.str.322 = private unnamed_addr constant [5 x i8] c"\F4\8A\AF\8D\00", align 1
@.str.323 = private unnamed_addr constant [50 x i8] c"wide string and utf8 string have different length\00", align 1
@.str.324 = private unnamed_addr constant [42 x i8] c"wide string and utf8 string are different\00", align 1
@.str.325 = private unnamed_addr constant [53 x i8] c"PyUnicode_FromWideChar(L\22\5CU00110000\22, 1) didn't fail\00", align 1
@.str.326 = private unnamed_addr constant [52 x i8] c"PyUnicode_FromUnicode(L\22\5CU00110000\22, 1) didn't fail\00", align 1
@.str.327 = private unnamed_addr constant [30 x i8] c"PyUnicode_Ready() didn't fail\00", align 1
@.str.328 = private unnamed_addr constant [3 x i8] c"Un\00", align 1
@.str.329 = private unnamed_addr constant [5 x i8] c"(Nn)\00", align 1
@.str.330 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@.str.331 = private unnamed_addr constant [5 x i8] c"u#|s\00", align 1
@.str.332 = private unnamed_addr constant [20 x i8] c"O:test_thread_state\00", align 1
@.str.333 = private unnamed_addr constant [28 x i8] c"'%s' object is not callable\00", align 1
@thread_done = internal global i8* null, align 8
@.str.334 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.335 = private unnamed_addr constant [19 x i8] c"Test %d: %d.%06ds\0A\00", align 1
@.str.336 = private unnamed_addr constant [19 x i8] c"OO:traceback_print\00", align 1
@.str.337 = private unnamed_addr constant [18 x i8] c"O:exception_print\00", align 1
@.str.338 = private unnamed_addr constant [34 x i8] c"an exception instance is required\00", align 1
@.str.339 = private unnamed_addr constant [22 x i8] c"OOO:test_set_exc_info\00", align 1
@str2 = internal global %struct._object* null, align 8
@str1 = internal global %struct._object* null, align 8
@.str.340 = private unnamed_addr constant [5 x i8] c"O&O&\00", align 1
@.str.341 = private unnamed_addr constant [18 x i8] c"ssi:code_newempty\00", align 1
@make_exception_with_doc.kwlist = internal global [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.342, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.343, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.344, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.345, i32 0, i32 0), i8* null], align 16
@.str.342 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.343 = private unnamed_addr constant [4 x i8] c"doc\00", align 1
@.str.344 = private unnamed_addr constant [5 x i8] c"base\00", align 1
@.str.345 = private unnamed_addr constant [5 x i8] c"dict\00", align 1
@.str.346 = private unnamed_addr constant [30 x i8] c"s|sOO:make_exception_with_doc\00", align 1
@.str.347 = private unnamed_addr constant [19 x i8] c"s:run_in_subinterp\00", align 1
@PyExc_RuntimeError = external global %struct._object*, align 8
@.str.348 = private unnamed_addr constant [32 x i8] c"sub-interpreter creation failed\00", align 1
@.str.349 = private unnamed_addr constant [27 x i8] c"Oi:pytime_object_to_time_t\00", align 1
@.str.350 = private unnamed_addr constant [17 x i8] c"invalid rounding\00", align 1
@.str.351 = private unnamed_addr constant [28 x i8] c"Oi:pytime_object_to_timeval\00", align 1
@.str.352 = private unnamed_addr constant [3 x i8] c"Nl\00", align 1
@.str.353 = private unnamed_addr constant [29 x i8] c"Oi:pytime_object_to_timespec\00", align 1
@.str.354 = private unnamed_addr constant [14 x i8] c"O:with_tp_del\00", align 1
@.str.355 = private unnamed_addr constant [27 x i8] c"heap type expected, got %R\00", align 1
@slot_tp_del.PyId___tp_del__ = internal global %struct._Py_Identifier { %struct._Py_Identifier* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.356, i32 0, i32 0), %struct._object* null }, align 8
@.str.356 = private unnamed_addr constant [11 x i8] c"__tp_del__\00", align 1
@.str.357 = private unnamed_addr constant [29 x i8] c"PyMem_Malloc(0) returns NULL\00", align 1
@.str.358 = private unnamed_addr constant [32 x i8] c"PyObject_Malloc(0) returns NULL\00", align 1
@.str.359 = private unnamed_addr constant [14 x i8] c"malloc failed\00", align 1
@.str.360 = private unnamed_addr constant [20 x i8] c"malloc invalid size\00", align 1
@.str.361 = private unnamed_addr constant [15 x i8] c"realloc failed\00", align 1
@.str.362 = private unnamed_addr constant [27 x i8] c"realloc invalid parameters\00", align 1
@.str.363 = private unnamed_addr constant [21 x i8] c"free invalid pointer\00", align 1
@.str.364 = private unnamed_addr constant [24 x i8] c"could not allocate lock\00", align 1
@.str.365 = private unnamed_addr constant [27 x i8] c"unable to start the thread\00", align 1
@.str.366 = private unnamed_addr constant [22 x i8] c"hashinheritancetester\00", align 1
@_HashInheritanceTester_Type = internal global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.366, i32 0, i32 0), i64 16, i64 0, void (%struct._object*)* bitcast (void (i8*)* @PyObject_Free to void (%struct._object*)*), i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 262144, i8* null, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* null, %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @PyType_GenericNew, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.367 = private unnamed_addr constant [23 x i8] c"test_structmembersType\00", align 1
@.str.368 = private unnamed_addr constant [39 x i8] c"Type containing all structmember types\00", align 1
@test_members = internal global [16 x %struct.PyMemberDef] [%struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.369, i32 0, i32 0), i32 14, i64 16, i32 0, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.370, i32 0, i32 0), i32 8, i64 17, i32 0, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.371, i32 0, i32 0), i32 9, i64 18, i32 0, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.372, i32 0, i32 0), i32 0, i64 20, i32 0, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.373, i32 0, i32 0), i32 10, i64 22, i32 0, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.374, i32 0, i32 0), i32 1, i64 24, i32 0, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.375, i32 0, i32 0), i32 11, i64 28, i32 0, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.376, i32 0, i32 0), i32 2, i64 32, i32 0, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.377, i32 0, i32 0), i32 12, i64 40, i32 0, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.378, i32 0, i32 0), i32 19, i64 48, i32 0, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.379, i32 0, i32 0), i32 3, i64 56, i32 0, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.380, i32 0, i32 0), i32 4, i64 64, i32 0, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.381, i32 0, i32 0), i32 13, i64 72, i32 0, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.382, i32 0, i32 0), i32 17, i64 80, i32 0, i8* null }, %struct.PyMemberDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.383, i32 0, i32 0), i32 18, i64 88, i32 0, i8* null }, %struct.PyMemberDef zeroinitializer], align 16
@test_structmembersType = internal global { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* } { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* null }, i64 0 }, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.367, i32 0, i32 0), i64 96, i64 0, void (%struct._object*)* @test_structmembers_free, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* null, %struct.PyNumberMethods* null, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* @PyObject_GenericSetAttr, %struct.PyBufferProcs* null, i64 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.368, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* null, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* null, %struct.PyMemberDef* getelementptr inbounds ([16 x %struct.PyMemberDef], [16 x %struct.PyMemberDef]* @test_members, i32 0, i32 0), %struct.PyGetSetDef* null, %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @test_structmembers_new, void (i8*)* null, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@.str.369 = private unnamed_addr constant [7 x i8] c"T_BOOL\00", align 1
@.str.370 = private unnamed_addr constant [7 x i8] c"T_BYTE\00", align 1
@.str.371 = private unnamed_addr constant [8 x i8] c"T_UBYTE\00", align 1
@.str.372 = private unnamed_addr constant [8 x i8] c"T_SHORT\00", align 1
@.str.373 = private unnamed_addr constant [9 x i8] c"T_USHORT\00", align 1
@.str.374 = private unnamed_addr constant [6 x i8] c"T_INT\00", align 1
@.str.375 = private unnamed_addr constant [7 x i8] c"T_UINT\00", align 1
@.str.376 = private unnamed_addr constant [7 x i8] c"T_LONG\00", align 1
@.str.377 = private unnamed_addr constant [8 x i8] c"T_ULONG\00", align 1
@.str.378 = private unnamed_addr constant [11 x i8] c"T_PYSSIZET\00", align 1
@.str.379 = private unnamed_addr constant [8 x i8] c"T_FLOAT\00", align 1
@.str.380 = private unnamed_addr constant [9 x i8] c"T_DOUBLE\00", align 1
@.str.381 = private unnamed_addr constant [17 x i8] c"T_STRING_INPLACE\00", align 1
@.str.382 = private unnamed_addr constant [11 x i8] c"T_LONGLONG\00", align 1
@.str.383 = private unnamed_addr constant [12 x i8] c"T_ULONGLONG\00", align 1
@test_structmembers_new.keywords = internal global [16 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.369, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.370, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.371, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.372, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.373, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.374, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.375, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.376, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.377, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.378, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.379, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.380, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.381, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.382, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.383, i32 0, i32 0), i8* null], align 16
@test_structmembers_new.fmt = internal global i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.384, i32 0, i32 0), align 8
@.str.384 = private unnamed_addr constant [18 x i8] c"|bbBhHiIlknfds#LK\00", align 1
@.str.385 = private unnamed_addr constant [16 x i8] c"string too long\00", align 1

; Function Attrs: nounwind uwtable
define %struct._object* @pending_threadfunc(%struct._object* %self, %struct._object* %arg) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %arg.addr = alloca %struct._object*, align 8
  %callable = alloca %struct._object*, align 8
  %r = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_save = alloca %struct._ts*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !511, metadata !1945), !dbg !1946
  store %struct._object* %arg, %struct._object** %arg.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %arg.addr, metadata !512, metadata !1945), !dbg !1947
  %0 = bitcast %struct._object** %callable to i8*, !dbg !1948
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !1948
  call void @llvm.dbg.declare(metadata %struct._object** %callable, metadata !513, metadata !1945), !dbg !1949
  %1 = bitcast i32* %r to i8*, !dbg !1950
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !1950
  call void @llvm.dbg.declare(metadata i32* %r, metadata !514, metadata !1945), !dbg !1951
  %2 = load %struct._object*, %struct._object** %arg.addr, align 8, !dbg !1952, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0), %struct._object** %callable), !dbg !1954
  %cmp = icmp eq i32 %call, 0, !dbg !1955
  br i1 %cmp, label %if.then, label %if.end, !dbg !1956

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !1957
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !1957

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %callable, align 8, !dbg !1958, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 0, !dbg !1959
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !1960, !tbaa !1961
  %inc = add i64 %4, 1, !dbg !1960
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !1960, !tbaa !1961
  %5 = bitcast %struct._ts** %_save to i8*, !dbg !1964
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !1964
  call void @llvm.dbg.declare(metadata %struct._ts** %_save, metadata !515, metadata !1945), !dbg !1965
  %call1 = call %struct._ts* @PyEval_SaveThread(), !dbg !1966
  store %struct._ts* %call1, %struct._ts** %_save, align 8, !dbg !1967, !tbaa !1941
  %6 = load %struct._object*, %struct._object** %callable, align 8, !dbg !1968, !tbaa !1941
  %7 = bitcast %struct._object* %6 to i8*, !dbg !1968
  %call2 = call i32 @Py_AddPendingCall(i32 (i8*)* @_pending_callback, i8* %7), !dbg !1969
  store i32 %call2, i32* %r, align 4, !dbg !1970, !tbaa !1971
  %8 = load %struct._ts*, %struct._ts** %_save, align 8, !dbg !1973, !tbaa !1941
  call void @PyEval_RestoreThread(%struct._ts* %8), !dbg !1974
  %9 = bitcast %struct._ts** %_save to i8*, !dbg !1975
  call void @llvm.lifetime.end(i64 8, i8* %9) #2, !dbg !1975
  %10 = load i32, i32* %r, align 4, !dbg !1976, !tbaa !1971
  %cmp3 = icmp slt i32 %10, 0, !dbg !1977
  br i1 %cmp3, label %if.then.4, label %if.end.10, !dbg !1978

if.then.4:                                        ; preds = %if.end
  br label %do.body, !dbg !1979

do.body:                                          ; preds = %if.then.4
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !1980
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !1980
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !574, metadata !1945), !dbg !1982
  %12 = load %struct._object*, %struct._object** %callable, align 8, !dbg !1983, !tbaa !1941
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8, !dbg !1982, !tbaa !1941
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1984, !tbaa !1941
  %ob_refcnt5 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !1986
  %14 = load i64, i64* %ob_refcnt5, align 8, !dbg !1987, !tbaa !1961
  %dec = add i64 %14, -1, !dbg !1987
  store i64 %dec, i64* %ob_refcnt5, align 8, !dbg !1987, !tbaa !1961
  %cmp6 = icmp ne i64 %dec, 0, !dbg !1988
  br i1 %cmp6, label %if.then.7, label %if.else, !dbg !1989

if.then.7:                                        ; preds = %do.body
  br label %if.end.8, !dbg !1990

if.else:                                          ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !1992, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !1994
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !1994, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4, !dbg !1996
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !1996, !tbaa !1997
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2000, !tbaa !1941
  call void %17(%struct._object* %18), !dbg !2001
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2002
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !2002
  br label %do.cond, !dbg !2004

do.cond:                                          ; preds = %if.end.8
  br label %do.end, !dbg !2005

do.end:                                           ; preds = %do.cond
  %20 = load i64, i64* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !2007, !tbaa !1961
  %inc9 = add i64 %20, 1, !dbg !2007
  store i64 %inc9, i64* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !2007, !tbaa !1961
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0), %struct._object** %retval, !dbg !2008
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2008

if.end.10:                                        ; preds = %if.end
  %21 = load i64, i64* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !2009, !tbaa !1961
  %inc11 = add i64 %21, 1, !dbg !2009
  store i64 %inc11, i64* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !2009, !tbaa !1961
  store %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object** %retval, !dbg !2010
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2010

cleanup:                                          ; preds = %if.end.10, %do.end, %if.then
  %22 = bitcast i32* %r to i8*, !dbg !2011
  call void @llvm.lifetime.end(i64 4, i8* %22) #2, !dbg !2011
  %23 = bitcast %struct._object** %callable to i8*, !dbg !2011
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !2011
  %24 = load %struct._object*, %struct._object** %retval, !dbg !2011
  ret %struct._object* %24, !dbg !2011
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

declare i32 @_PyArg_ParseTuple_SizeT(%struct._object*, i8*, ...) #3

declare %struct._ts* @PyEval_SaveThread() #3

declare i32 @Py_AddPendingCall(i32 (i8*)*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @_pending_callback(i8* %arg) #0 {
entry:
  %arg.addr = alloca i8*, align 8
  %callable = alloca %struct._object*, align 8
  %r = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp5 = alloca %struct._object*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !587, metadata !1945), !dbg !2012
  %0 = bitcast %struct._object** %callable to i8*, !dbg !2013
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2013
  call void @llvm.dbg.declare(metadata %struct._object** %callable, metadata !588, metadata !1945), !dbg !2014
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !2015, !tbaa !1941
  %2 = bitcast i8* %1 to %struct._object*, !dbg !2016
  store %struct._object* %2, %struct._object** %callable, align 8, !dbg !2014, !tbaa !1941
  %3 = bitcast %struct._object** %r to i8*, !dbg !2017
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !2017
  call void @llvm.dbg.declare(metadata %struct._object** %r, metadata !589, metadata !1945), !dbg !2018
  %4 = load %struct._object*, %struct._object** %callable, align 8, !dbg !2019, !tbaa !1941
  %call = call %struct._object* @PyObject_CallObject(%struct._object* %4, %struct._object* null), !dbg !2020
  store %struct._object* %call, %struct._object** %r, align 8, !dbg !2018, !tbaa !1941
  br label %do.body, !dbg !2021

do.body:                                          ; preds = %entry
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2022
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !2022
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !590, metadata !1945), !dbg !2024
  %6 = load %struct._object*, %struct._object** %callable, align 8, !dbg !2025, !tbaa !1941
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !2024, !tbaa !1941
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2026, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !2028
  %8 = load i64, i64* %ob_refcnt, align 8, !dbg !2029, !tbaa !1961
  %dec = add i64 %8, -1, !dbg !2029
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2029, !tbaa !1961
  %cmp = icmp ne i64 %dec, 0, !dbg !2030
  br i1 %cmp, label %if.then, label %if.else, !dbg !2031

if.then:                                          ; preds = %do.body
  br label %if.end, !dbg !2032

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2034, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !2036
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2036, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !2037
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2037, !tbaa !1997
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2038, !tbaa !1941
  call void %11(%struct._object* %12), !dbg !2039
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2040
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !2040
  br label %do.cond, !dbg !2042

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !2043

do.end:                                           ; preds = %do.cond
  br label %do.body.1, !dbg !2045

do.body.1:                                        ; preds = %do.end
  %14 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2046
  call void @llvm.lifetime.start(i64 8, i8* %14) #2, !dbg !2046
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !592, metadata !1945), !dbg !2048
  %15 = load %struct._object*, %struct._object** %r, align 8, !dbg !2049, !tbaa !1941
  store %struct._object* %15, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2048, !tbaa !1941
  %16 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2050, !tbaa !1941
  %cmp2 = icmp ne %struct._object* %16, null, !dbg !2051
  br i1 %cmp2, label %if.then.3, label %if.end.16, !dbg !2052

if.then.3:                                        ; preds = %do.body.1
  br label %do.body.4, !dbg !2053

do.body.4:                                        ; preds = %if.then.3
  %17 = bitcast %struct._object** %_py_decref_tmp5 to i8*, !dbg !2055
  call void @llvm.lifetime.start(i64 8, i8* %17) #2, !dbg !2055
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp5, metadata !594, metadata !1945), !dbg !2057
  %18 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2058, !tbaa !1941
  store %struct._object* %18, %struct._object** %_py_decref_tmp5, align 8, !dbg !2057, !tbaa !1941
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp5, align 8, !dbg !2059, !tbaa !1941
  %ob_refcnt6 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !2061
  %20 = load i64, i64* %ob_refcnt6, align 8, !dbg !2062, !tbaa !1961
  %dec7 = add i64 %20, -1, !dbg !2062
  store i64 %dec7, i64* %ob_refcnt6, align 8, !dbg !2062, !tbaa !1961
  %cmp8 = icmp ne i64 %dec7, 0, !dbg !2063
  br i1 %cmp8, label %if.then.9, label %if.else.10, !dbg !2064

if.then.9:                                        ; preds = %do.body.4
  br label %if.end.13, !dbg !2065

if.else.10:                                       ; preds = %do.body.4
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp5, align 8, !dbg !2067, !tbaa !1941
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !2069
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !2069, !tbaa !1995
  %tp_dealloc12 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !2070
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc12, align 8, !dbg !2070, !tbaa !1997
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp5, align 8, !dbg !2071, !tbaa !1941
  call void %23(%struct._object* %24), !dbg !2072
  br label %if.end.13

if.end.13:                                        ; preds = %if.else.10, %if.then.9
  %25 = bitcast %struct._object** %_py_decref_tmp5 to i8*, !dbg !2073
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !2073
  br label %do.cond.14, !dbg !2075

do.cond.14:                                       ; preds = %if.end.13
  br label %do.end.15, !dbg !2076

do.end.15:                                        ; preds = %do.cond.14
  br label %if.end.16, !dbg !2078

if.end.16:                                        ; preds = %do.end.15, %do.body.1
  %26 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2080
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !2080
  br label %do.cond.17, !dbg !2083

do.cond.17:                                       ; preds = %if.end.16
  br label %do.end.18, !dbg !2084

do.end.18:                                        ; preds = %do.cond.17
  %27 = load %struct._object*, %struct._object** %r, align 8, !dbg !2086, !tbaa !1941
  %cmp19 = icmp ne %struct._object* %27, null, !dbg !2087
  %cond = select i1 %cmp19, i32 0, i32 -1, !dbg !2086
  %28 = bitcast %struct._object** %r to i8*, !dbg !2088
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !2088
  %29 = bitcast %struct._object** %callable to i8*, !dbg !2088
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !2088
  ret i32 %cond, !dbg !2089
}

declare void @PyEval_RestoreThread(%struct._ts*) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define %struct._object* @PyInit__testcapi() #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %m = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %0 = bitcast %struct._object** %m to i8*, !dbg !2090
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2090
  call void @llvm.dbg.declare(metadata %struct._object** %m, metadata !582, metadata !1945), !dbg !2091
  %call = call %struct._object* @PyModule_Create2(%struct.PyModuleDef* @_testcapimodule, i32 1013), !dbg !2092
  store %struct._object* %call, %struct._object** %m, align 8, !dbg !2093, !tbaa !1941
  %1 = load %struct._object*, %struct._object** %m, align 8, !dbg !2094, !tbaa !1941
  %cmp = icmp eq %struct._object* %1, null, !dbg !2096
  br i1 %cmp, label %if.then, label %if.end, !dbg !2097

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2098
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2098

if.end:                                           ; preds = %entry
  store %struct._typeobject* @PyType_Type, %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @_HashInheritanceTester_Type to %struct._typeobject*), i32 0, i32 0, i32 0, i32 1), align 8, !dbg !2099, !tbaa !1995
  store %struct._typeobject* @PyType_Type, %struct._typeobject** getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @test_structmembersType to %struct._typeobject*), i32 0, i32 0, i32 0, i32 1), align 8, !dbg !2100, !tbaa !1995
  %2 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @test_structmembersType to %struct._typeobject*), i32 0, i32 0, i32 0, i32 0), align 8, !dbg !2101, !tbaa !1961
  %inc = add i64 %2, 1, !dbg !2101
  store i64 %inc, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @test_structmembersType to %struct._typeobject*), i32 0, i32 0, i32 0, i32 0), align 8, !dbg !2101, !tbaa !1961
  %3 = load %struct._object*, %struct._object** %m, align 8, !dbg !2102, !tbaa !1941
  %call1 = call i32 @PyModule_AddObject(%struct._object* %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @test_structmembersType to %struct._typeobject*), i32 0, i32 0, i32 0)), !dbg !2103
  %4 = load %struct._object*, %struct._object** %m, align 8, !dbg !2104, !tbaa !1941
  %call2 = call %struct._object* @PyLong_FromLong(i64 127), !dbg !2105
  %call3 = call i32 @PyModule_AddObject(%struct._object* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), %struct._object* %call2), !dbg !2106
  %5 = load %struct._object*, %struct._object** %m, align 8, !dbg !2107, !tbaa !1941
  %call4 = call %struct._object* @PyLong_FromLong(i64 -128), !dbg !2108
  %call5 = call i32 @PyModule_AddObject(%struct._object* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0), %struct._object* %call4), !dbg !2109
  %6 = load %struct._object*, %struct._object** %m, align 8, !dbg !2110, !tbaa !1941
  %call6 = call %struct._object* @PyLong_FromLong(i64 255), !dbg !2111
  %call7 = call i32 @PyModule_AddObject(%struct._object* %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), %struct._object* %call6), !dbg !2112
  %7 = load %struct._object*, %struct._object** %m, align 8, !dbg !2113, !tbaa !1941
  %call8 = call %struct._object* @PyLong_FromLong(i64 32767), !dbg !2114
  %call9 = call i32 @PyModule_AddObject(%struct._object* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), %struct._object* %call8), !dbg !2115
  %8 = load %struct._object*, %struct._object** %m, align 8, !dbg !2116, !tbaa !1941
  %call10 = call %struct._object* @PyLong_FromLong(i64 -32768), !dbg !2117
  %call11 = call i32 @PyModule_AddObject(%struct._object* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), %struct._object* %call10), !dbg !2118
  %9 = load %struct._object*, %struct._object** %m, align 8, !dbg !2119, !tbaa !1941
  %call12 = call %struct._object* @PyLong_FromLong(i64 65535), !dbg !2120
  %call13 = call i32 @PyModule_AddObject(%struct._object* %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), %struct._object* %call12), !dbg !2121
  %10 = load %struct._object*, %struct._object** %m, align 8, !dbg !2122, !tbaa !1941
  %call14 = call %struct._object* @PyLong_FromLong(i64 2147483647), !dbg !2123
  %call15 = call i32 @PyModule_AddObject(%struct._object* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), %struct._object* %call14), !dbg !2124
  %11 = load %struct._object*, %struct._object** %m, align 8, !dbg !2125, !tbaa !1941
  %call16 = call %struct._object* @PyLong_FromLong(i64 -2147483648), !dbg !2126
  %call17 = call i32 @PyModule_AddObject(%struct._object* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), %struct._object* %call16), !dbg !2127
  %12 = load %struct._object*, %struct._object** %m, align 8, !dbg !2128, !tbaa !1941
  %call18 = call %struct._object* @PyLong_FromUnsignedLong(i64 4294967295), !dbg !2129
  %call19 = call i32 @PyModule_AddObject(%struct._object* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i32 0, i32 0), %struct._object* %call18), !dbg !2130
  %13 = load %struct._object*, %struct._object** %m, align 8, !dbg !2131, !tbaa !1941
  %call20 = call %struct._object* @PyLong_FromLong(i64 9223372036854775807), !dbg !2132
  %call21 = call i32 @PyModule_AddObject(%struct._object* %13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), %struct._object* %call20), !dbg !2133
  %14 = load %struct._object*, %struct._object** %m, align 8, !dbg !2134, !tbaa !1941
  %call22 = call %struct._object* @PyLong_FromLong(i64 -9223372036854775808), !dbg !2135
  %call23 = call i32 @PyModule_AddObject(%struct._object* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), %struct._object* %call22), !dbg !2136
  %15 = load %struct._object*, %struct._object** %m, align 8, !dbg !2137, !tbaa !1941
  %call24 = call %struct._object* @PyLong_FromUnsignedLong(i64 -1), !dbg !2138
  %call25 = call i32 @PyModule_AddObject(%struct._object* %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0), %struct._object* %call24), !dbg !2139
  %16 = load %struct._object*, %struct._object** %m, align 8, !dbg !2140, !tbaa !1941
  %call26 = call %struct._object* @PyFloat_FromDouble(double 0x47EFFFFFE0000000), !dbg !2141
  %call27 = call i32 @PyModule_AddObject(%struct._object* %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), %struct._object* %call26), !dbg !2142
  %17 = load %struct._object*, %struct._object** %m, align 8, !dbg !2143, !tbaa !1941
  %call28 = call %struct._object* @PyFloat_FromDouble(double 0x3810000000000000), !dbg !2144
  %call29 = call i32 @PyModule_AddObject(%struct._object* %17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i32 0, i32 0), %struct._object* %call28), !dbg !2145
  %18 = load %struct._object*, %struct._object** %m, align 8, !dbg !2146, !tbaa !1941
  %call30 = call %struct._object* @PyFloat_FromDouble(double 0x7FEFFFFFFFFFFFFF), !dbg !2147
  %call31 = call i32 @PyModule_AddObject(%struct._object* %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), %struct._object* %call30), !dbg !2148
  %19 = load %struct._object*, %struct._object** %m, align 8, !dbg !2149, !tbaa !1941
  %call32 = call %struct._object* @PyFloat_FromDouble(double 0x10000000000000), !dbg !2150
  %call33 = call i32 @PyModule_AddObject(%struct._object* %19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), %struct._object* %call32), !dbg !2151
  %20 = load %struct._object*, %struct._object** %m, align 8, !dbg !2152, !tbaa !1941
  %call34 = call %struct._object* @PyLong_FromLongLong(i64 9223372036854775807), !dbg !2153
  %call35 = call i32 @PyModule_AddObject(%struct._object* %20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), %struct._object* %call34), !dbg !2154
  %21 = load %struct._object*, %struct._object** %m, align 8, !dbg !2155, !tbaa !1941
  %call36 = call %struct._object* @PyLong_FromLongLong(i64 -9223372036854775808), !dbg !2156
  %call37 = call i32 @PyModule_AddObject(%struct._object* %21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0), %struct._object* %call36), !dbg !2157
  %22 = load %struct._object*, %struct._object** %m, align 8, !dbg !2158, !tbaa !1941
  %call38 = call %struct._object* @PyLong_FromUnsignedLongLong(i64 -1), !dbg !2159
  %call39 = call i32 @PyModule_AddObject(%struct._object* %22, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), %struct._object* %call38), !dbg !2160
  %23 = load %struct._object*, %struct._object** %m, align 8, !dbg !2161, !tbaa !1941
  %call40 = call %struct._object* @PyLong_FromSsize_t(i64 9223372036854775807), !dbg !2162
  %call41 = call i32 @PyModule_AddObject(%struct._object* %23, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0), %struct._object* %call40), !dbg !2163
  %24 = load %struct._object*, %struct._object** %m, align 8, !dbg !2164, !tbaa !1941
  %call42 = call %struct._object* @PyLong_FromSsize_t(i64 -9223372036854775808), !dbg !2165
  %call43 = call i32 @PyModule_AddObject(%struct._object* %24, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), %struct._object* %call42), !dbg !2166
  %25 = load %struct._object*, %struct._object** %m, align 8, !dbg !2167, !tbaa !1941
  %call44 = call %struct._object* @PyLong_FromSsize_t(i64 24), !dbg !2168
  %call45 = call i32 @PyModule_AddObject(%struct._object* %25, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0), %struct._object* %call44), !dbg !2169
  %26 = load i64, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyInstanceMethod_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !2170, !tbaa !1961
  %inc46 = add i64 %26, 1, !dbg !2170
  store i64 %inc46, i64* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyInstanceMethod_Type, i32 0, i32 0, i32 0, i32 0), align 8, !dbg !2170, !tbaa !1961
  %27 = load %struct._object*, %struct._object** %m, align 8, !dbg !2171, !tbaa !1941
  %call47 = call i32 @PyModule_AddObject(%struct._object* %27, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyInstanceMethod_Type, i32 0, i32 0, i32 0)), !dbg !2172
  %28 = load %struct._object*, %struct._object** %m, align 8, !dbg !2173, !tbaa !1941
  %call48 = call i32 @PyModule_AddIntConstant(%struct._object* %28, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i64 3), !dbg !2174
  %call49 = call %struct._object* @PyErr_NewException(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0), %struct._object* null, %struct._object* null), !dbg !2175
  store %struct._object* %call49, %struct._object** @TestError, align 8, !dbg !2176, !tbaa !1941
  %29 = load %struct._object*, %struct._object** @TestError, align 8, !dbg !2177, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !2178
  %30 = load i64, i64* %ob_refcnt, align 8, !dbg !2179, !tbaa !1961
  %inc50 = add i64 %30, 1, !dbg !2179
  store i64 %inc50, i64* %ob_refcnt, align 8, !dbg !2179, !tbaa !1961
  %31 = load %struct._object*, %struct._object** %m, align 8, !dbg !2180, !tbaa !1941
  %32 = load %struct._object*, %struct._object** @TestError, align 8, !dbg !2181, !tbaa !1941
  %call51 = call i32 @PyModule_AddObject(%struct._object* %31, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), %struct._object* %32), !dbg !2182
  %33 = load %struct._object*, %struct._object** %m, align 8, !dbg !2183, !tbaa !1941
  store %struct._object* %33, %struct._object** %retval, !dbg !2184
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2184

cleanup:                                          ; preds = %if.end, %if.then
  %34 = bitcast %struct._object** %m to i8*, !dbg !2185
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !2185
  %35 = load %struct._object*, %struct._object** %retval, !dbg !2185
  ret %struct._object* %35, !dbg !2185
}

declare %struct._object* @PyModule_Create2(%struct.PyModuleDef*, i32) #3

declare i32 @PyModule_AddObject(%struct._object*, i8*, %struct._object*) #3

declare %struct._object* @PyLong_FromLong(i64) #3

declare %struct._object* @PyLong_FromUnsignedLong(i64) #3

declare %struct._object* @PyFloat_FromDouble(double) #3

declare %struct._object* @PyLong_FromLongLong(i64) #3

declare %struct._object* @PyLong_FromUnsignedLongLong(i64) #3

declare %struct._object* @PyLong_FromSsize_t(i64) #3

declare i32 @PyModule_AddIntConstant(%struct._object*, i8*, i64) #3

declare %struct._object* @PyErr_NewException(i8*, %struct._object*, %struct._object*) #3

declare %struct._object* @PyObject_CallObject(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @raise_exception(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %exc = alloca %struct._object*, align 8
  %exc_args = alloca %struct._object*, align 8
  %v = alloca %struct._object*, align 8
  %num_args = alloca i32, align 4
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp18 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !599, metadata !1945), !dbg !2186
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !600, metadata !1945), !dbg !2187
  %0 = bitcast %struct._object** %exc to i8*, !dbg !2188
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2188
  call void @llvm.dbg.declare(metadata %struct._object** %exc, metadata !601, metadata !1945), !dbg !2189
  %1 = bitcast %struct._object** %exc_args to i8*, !dbg !2190
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !2190
  call void @llvm.dbg.declare(metadata %struct._object** %exc_args, metadata !602, metadata !1945), !dbg !2191
  %2 = bitcast %struct._object** %v to i8*, !dbg !2190
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !2190
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !603, metadata !1945), !dbg !2192
  %3 = bitcast i32* %num_args to i8*, !dbg !2193
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !2193
  call void @llvm.dbg.declare(metadata i32* %num_args, metadata !604, metadata !1945), !dbg !2194
  %4 = bitcast i32* %i to i8*, !dbg !2193
  call void @llvm.lifetime.start(i64 4, i8* %4) #2, !dbg !2193
  call void @llvm.dbg.declare(metadata i32* %i, metadata !605, metadata !1945), !dbg !2195
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !2196, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.131, i32 0, i32 0), %struct._object** %exc, i32* %num_args), !dbg !2198
  %tobool = icmp ne i32 %call, 0, !dbg !2198
  br i1 %tobool, label %if.end, label %if.then, !dbg !2199

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2200
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2200

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %num_args, align 4, !dbg !2201, !tbaa !1971
  %conv = sext i32 %6 to i64, !dbg !2201
  %call1 = call %struct._object* @PyTuple_New(i64 %conv), !dbg !2202
  store %struct._object* %call1, %struct._object** %exc_args, align 8, !dbg !2203, !tbaa !1941
  %7 = load %struct._object*, %struct._object** %exc_args, align 8, !dbg !2204, !tbaa !1941
  %cmp = icmp eq %struct._object* %7, null, !dbg !2206
  br i1 %cmp, label %if.then.3, label %if.end.4, !dbg !2207

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !2208
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2208

if.end.4:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !2209, !tbaa !1971
  br label %for.cond, !dbg !2210

for.cond:                                         ; preds = %for.inc, %if.end.4
  %8 = load i32, i32* %i, align 4, !dbg !2211, !tbaa !1971
  %9 = load i32, i32* %num_args, align 4, !dbg !2214, !tbaa !1971
  %cmp5 = icmp slt i32 %8, %9, !dbg !2215
  br i1 %cmp5, label %for.body, label %for.end, !dbg !2216

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !2217, !tbaa !1971
  %conv7 = sext i32 %10 to i64, !dbg !2217
  %call8 = call %struct._object* @PyLong_FromLong(i64 %conv7), !dbg !2218
  store %struct._object* %call8, %struct._object** %v, align 8, !dbg !2219, !tbaa !1941
  %11 = load %struct._object*, %struct._object** %v, align 8, !dbg !2220, !tbaa !1941
  %cmp9 = icmp eq %struct._object* %11, null, !dbg !2221
  br i1 %cmp9, label %if.then.11, label %if.end.16, !dbg !2222

if.then.11:                                       ; preds = %for.body
  br label %do.body, !dbg !2223

do.body:                                          ; preds = %if.then.11
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2224
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !2224
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !606, metadata !1945), !dbg !2226
  %13 = load %struct._object*, %struct._object** %exc_args, align 8, !dbg !2227, !tbaa !1941
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !2226, !tbaa !1941
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2228, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !2230
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !2231, !tbaa !1961
  %dec = add i64 %15, -1, !dbg !2231
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2231, !tbaa !1961
  %cmp12 = icmp ne i64 %dec, 0, !dbg !2232
  br i1 %cmp12, label %if.then.14, label %if.else, !dbg !2233

if.then.14:                                       ; preds = %do.body
  br label %if.end.15, !dbg !2234

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2236, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !2238
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2238, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !2239
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2239, !tbaa !1997
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2240, !tbaa !1941
  call void %18(%struct._object* %19), !dbg !2241
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.then.14
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2242
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !2242
  br label %do.cond, !dbg !2244

do.cond:                                          ; preds = %if.end.15
  br label %do.end, !dbg !2245

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !2247
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2247

if.end.16:                                        ; preds = %for.body
  %21 = load %struct._object*, %struct._object** %v, align 8, !dbg !2248, !tbaa !1941
  %22 = load i32, i32* %i, align 4, !dbg !2249, !tbaa !1971
  %idxprom = sext i32 %22 to i64, !dbg !2250
  %23 = load %struct._object*, %struct._object** %exc_args, align 8, !dbg !2251, !tbaa !1941
  %24 = bitcast %struct._object* %23 to %struct.PyTupleObject*, !dbg !2252
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %24, i32 0, i32 1, !dbg !2253
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %idxprom, !dbg !2250
  store %struct._object* %21, %struct._object** %arrayidx, align 8, !dbg !2254, !tbaa !1941
  br label %for.inc, !dbg !2255

for.inc:                                          ; preds = %if.end.16
  %25 = load i32, i32* %i, align 4, !dbg !2256, !tbaa !1971
  %inc = add i32 %25, 1, !dbg !2256
  store i32 %inc, i32* %i, align 4, !dbg !2256, !tbaa !1971
  br label %for.cond, !dbg !2257

for.end:                                          ; preds = %for.cond
  %26 = load %struct._object*, %struct._object** %exc, align 8, !dbg !2258, !tbaa !1941
  %27 = load %struct._object*, %struct._object** %exc_args, align 8, !dbg !2259, !tbaa !1941
  call void @PyErr_SetObject(%struct._object* %26, %struct._object* %27), !dbg !2260
  br label %do.body.17, !dbg !2261

do.body.17:                                       ; preds = %for.end
  %28 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !2262
  call void @llvm.lifetime.start(i64 8, i8* %28) #2, !dbg !2262
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp18, metadata !613, metadata !1945), !dbg !2264
  %29 = load %struct._object*, %struct._object** %exc_args, align 8, !dbg !2265, !tbaa !1941
  store %struct._object* %29, %struct._object** %_py_decref_tmp18, align 8, !dbg !2264, !tbaa !1941
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !2266, !tbaa !1941
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 0, !dbg !2268
  %31 = load i64, i64* %ob_refcnt19, align 8, !dbg !2269, !tbaa !1961
  %dec20 = add i64 %31, -1, !dbg !2269
  store i64 %dec20, i64* %ob_refcnt19, align 8, !dbg !2269, !tbaa !1961
  %cmp21 = icmp ne i64 %dec20, 0, !dbg !2270
  br i1 %cmp21, label %if.then.23, label %if.else.24, !dbg !2271

if.then.23:                                       ; preds = %do.body.17
  br label %if.end.27, !dbg !2272

if.else.24:                                       ; preds = %do.body.17
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !2274, !tbaa !1941
  %ob_type25 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 1, !dbg !2276
  %33 = load %struct._typeobject*, %struct._typeobject** %ob_type25, align 8, !dbg !2276, !tbaa !1995
  %tp_dealloc26 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 4, !dbg !2277
  %34 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc26, align 8, !dbg !2277, !tbaa !1997
  %35 = load %struct._object*, %struct._object** %_py_decref_tmp18, align 8, !dbg !2278, !tbaa !1941
  call void %34(%struct._object* %35), !dbg !2279
  br label %if.end.27

if.end.27:                                        ; preds = %if.else.24, %if.then.23
  %36 = bitcast %struct._object** %_py_decref_tmp18 to i8*, !dbg !2280
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !2280
  br label %do.cond.28, !dbg !2282

do.cond.28:                                       ; preds = %if.end.27
  br label %do.end.29, !dbg !2283

do.end.29:                                        ; preds = %do.cond.28
  store %struct._object* null, %struct._object** %retval, !dbg !2285
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2285

cleanup:                                          ; preds = %do.end.29, %do.end, %if.then.3, %if.then
  %37 = bitcast i32* %i to i8*, !dbg !2286
  call void @llvm.lifetime.end(i64 4, i8* %37) #2, !dbg !2286
  %38 = bitcast i32* %num_args to i8*, !dbg !2286
  call void @llvm.lifetime.end(i64 4, i8* %38) #2, !dbg !2286
  %39 = bitcast %struct._object** %v to i8*, !dbg !2286
  call void @llvm.lifetime.end(i64 8, i8* %39) #2, !dbg !2286
  %40 = bitcast %struct._object** %exc_args to i8*, !dbg !2286
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !2286
  %41 = bitcast %struct._object** %exc to i8*, !dbg !2286
  call void @llvm.lifetime.end(i64 8, i8* %41) #2, !dbg !2286
  %42 = load %struct._object*, %struct._object** %retval, !dbg !2286
  ret %struct._object* %42, !dbg !2286
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @raise_memoryerror(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !617, metadata !1945), !dbg !2287
  %call = call %struct._object* @PyErr_NoMemory(), !dbg !2288
  ret %struct._object* null, !dbg !2289
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_config(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !620, metadata !1945), !dbg !2290
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2291, !tbaa !1961
  %inc = add i64 %0, 1, !dbg !2291
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2291, !tbaa !1961
  ret %struct._object* @_Py_NoneStruct, !dbg !2292
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_sizeof_c_types(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !623, metadata !1945), !dbg !2293
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2294, !tbaa !1961
  %inc = add i64 %0, 1, !dbg !2294
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2294, !tbaa !1961
  ret %struct._object* @_Py_NoneStruct, !dbg !2295
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_datetime_capi(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !626, metadata !1945), !dbg !2296
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !627, metadata !1945), !dbg !2297
  %0 = load %struct.PyDateTime_CAPI*, %struct.PyDateTime_CAPI** @PyDateTimeAPI, align 8, !dbg !2298, !tbaa !1941
  %tobool = icmp ne %struct.PyDateTime_CAPI* %0, null, !dbg !2298
  br i1 %tobool, label %if.then, label %if.end, !dbg !2300

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @test_run_counter, align 4, !dbg !2301, !tbaa !1971
  %tobool1 = icmp ne i32 %1, 0, !dbg !2301
  br i1 %tobool1, label %if.then.2, label %if.else, !dbg !2304

if.then.2:                                        ; preds = %if.then
  %2 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2305, !tbaa !1961
  %inc = add i64 %2, 1, !dbg !2305
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2305, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !2307
  br label %return, !dbg !2307

if.else:                                          ; preds = %if.then
  %3 = load %struct._object*, %struct._object** @PyExc_AssertionError, align 8, !dbg !2308, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.132, i32 0, i32 0)), !dbg !2310
  store %struct._object* null, %struct._object** %retval, !dbg !2311
  br label %return, !dbg !2311

if.end:                                           ; preds = %entry
  %4 = load i32, i32* @test_run_counter, align 4, !dbg !2312, !tbaa !1971
  %inc3 = add i32 %4, 1, !dbg !2312
  store i32 %inc3, i32* @test_run_counter, align 4, !dbg !2312, !tbaa !1971
  %call = call i8* @PyCapsule_Import(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.133, i32 0, i32 0), i32 0), !dbg !2313
  %5 = bitcast i8* %call to %struct.PyDateTime_CAPI*, !dbg !2314
  store %struct.PyDateTime_CAPI* %5, %struct.PyDateTime_CAPI** @PyDateTimeAPI, align 8, !dbg !2315, !tbaa !1941
  %6 = load %struct.PyDateTime_CAPI*, %struct.PyDateTime_CAPI** @PyDateTimeAPI, align 8, !dbg !2316, !tbaa !1941
  %tobool4 = icmp ne %struct.PyDateTime_CAPI* %6, null, !dbg !2316
  br i1 %tobool4, label %if.then.5, label %if.else.7, !dbg !2318

if.then.5:                                        ; preds = %if.end
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2319, !tbaa !1961
  %inc6 = add i64 %7, 1, !dbg !2319
  store i64 %inc6, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2319, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !2320
  br label %return, !dbg !2320

if.else.7:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !2321
  br label %return, !dbg !2321

return:                                           ; preds = %if.else.7, %if.then.5, %if.else, %if.then.2
  %8 = load %struct._object*, %struct._object** %retval, !dbg !2322
  ret %struct._object* %8, !dbg !2322
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_list_api(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %list = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %anint = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp16 = alloca %struct._object*, align 8
  %anint33 = alloca %struct._object*, align 8
  %_py_decref_tmp43 = alloca %struct._object*, align 8
  %_py_decref_tmp63 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !630, metadata !1945), !dbg !2323
  %0 = bitcast %struct._object** %list to i8*, !dbg !2324
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2324
  call void @llvm.dbg.declare(metadata %struct._object** %list, metadata !631, metadata !1945), !dbg !2325
  %1 = bitcast i32* %i to i8*, !dbg !2326
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !2326
  call void @llvm.dbg.declare(metadata i32* %i, metadata !632, metadata !1945), !dbg !2327
  %call = call %struct._object* @PyList_New(i64 30), !dbg !2328
  store %struct._object* %call, %struct._object** %list, align 8, !dbg !2329, !tbaa !1941
  %2 = load %struct._object*, %struct._object** %list, align 8, !dbg !2330, !tbaa !1941
  %cmp = icmp eq %struct._object* %2, null, !dbg !2332
  br i1 %cmp, label %if.then, label %if.end, !dbg !2333

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2334
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76, !dbg !2334

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !2335, !tbaa !1971
  br label %for.cond, !dbg !2336

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !2337, !tbaa !1971
  %cmp1 = icmp slt i32 %3, 30, !dbg !2340
  br i1 %cmp1, label %for.body, label %for.end, !dbg !2341

for.body:                                         ; preds = %for.cond
  %4 = bitcast %struct._object** %anint to i8*, !dbg !2342
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !2342
  call void @llvm.dbg.declare(metadata %struct._object** %anint, metadata !633, metadata !1945), !dbg !2343
  %5 = load i32, i32* %i, align 4, !dbg !2344, !tbaa !1971
  %conv = sext i32 %5 to i64, !dbg !2344
  %call2 = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !2345
  store %struct._object* %call2, %struct._object** %anint, align 8, !dbg !2343, !tbaa !1941
  %6 = load %struct._object*, %struct._object** %anint, align 8, !dbg !2346, !tbaa !1941
  %cmp3 = icmp eq %struct._object* %6, null, !dbg !2347
  br i1 %cmp3, label %if.then.5, label %if.end.10, !dbg !2348

if.then.5:                                        ; preds = %for.body
  br label %do.body, !dbg !2349

do.body:                                          ; preds = %if.then.5
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2350
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !2350
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !637, metadata !1945), !dbg !2352
  %8 = load %struct._object*, %struct._object** %list, align 8, !dbg !2353, !tbaa !1941
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !2352, !tbaa !1941
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2354, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !2356
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !2357, !tbaa !1961
  %dec = add i64 %10, -1, !dbg !2357
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2357, !tbaa !1961
  %cmp6 = icmp ne i64 %dec, 0, !dbg !2358
  br i1 %cmp6, label %if.then.8, label %if.else, !dbg !2359

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !2360

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2362, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !2364
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2364, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !2365
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2365, !tbaa !1997
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2366, !tbaa !1941
  call void %13(%struct._object* %14), !dbg !2367
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2368
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !2368
  br label %do.cond, !dbg !2370

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !2371

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !2373
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2373

if.end.10:                                        ; preds = %for.body
  %16 = load %struct._object*, %struct._object** %anint, align 8, !dbg !2374, !tbaa !1941
  %17 = load i32, i32* %i, align 4, !dbg !2375, !tbaa !1971
  %idxprom = sext i32 %17 to i64, !dbg !2376
  %18 = load %struct._object*, %struct._object** %list, align 8, !dbg !2377, !tbaa !1941
  %19 = bitcast %struct._object* %18 to %struct.PyListObject*, !dbg !2378
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %19, i32 0, i32 1, !dbg !2379
  %20 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !2379, !tbaa !2380
  %arrayidx = getelementptr %struct._object*, %struct._object** %20, i64 %idxprom, !dbg !2376
  store %struct._object* %16, %struct._object** %arrayidx, align 8, !dbg !2382, !tbaa !1941
  store i32 0, i32* %cleanup.dest.slot, !dbg !2383
  br label %cleanup, !dbg !2383

cleanup:                                          ; preds = %if.end.10, %do.end
  %21 = bitcast %struct._object** %anint to i8*, !dbg !2384
  call void @llvm.lifetime.end(i64 8, i8* %21) #2, !dbg !2384
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.76 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !2385

for.inc:                                          ; preds = %cleanup.cont
  %22 = load i32, i32* %i, align 4, !dbg !2386, !tbaa !1971
  %inc = add i32 %22, 1, !dbg !2386
  store i32 %inc, i32* %i, align 4, !dbg !2386, !tbaa !1971
  br label %for.cond, !dbg !2387

for.end:                                          ; preds = %for.cond
  %23 = load %struct._object*, %struct._object** %list, align 8, !dbg !2388, !tbaa !1941
  %call11 = call i32 @PyList_Reverse(%struct._object* %23), !dbg !2389
  store i32 %call11, i32* %i, align 4, !dbg !2390, !tbaa !1971
  %24 = load i32, i32* %i, align 4, !dbg !2391, !tbaa !1971
  %cmp12 = icmp ne i32 %24, 0, !dbg !2392
  br i1 %cmp12, label %if.then.14, label %if.end.28, !dbg !2393

if.then.14:                                       ; preds = %for.end
  br label %do.body.15, !dbg !2394

do.body.15:                                       ; preds = %if.then.14
  %25 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !2395
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !2395
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp16, metadata !641, metadata !1945), !dbg !2397
  %26 = load %struct._object*, %struct._object** %list, align 8, !dbg !2398, !tbaa !1941
  store %struct._object* %26, %struct._object** %_py_decref_tmp16, align 8, !dbg !2397, !tbaa !1941
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !2399, !tbaa !1941
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !2401
  %28 = load i64, i64* %ob_refcnt17, align 8, !dbg !2402, !tbaa !1961
  %dec18 = add i64 %28, -1, !dbg !2402
  store i64 %dec18, i64* %ob_refcnt17, align 8, !dbg !2402, !tbaa !1961
  %cmp19 = icmp ne i64 %dec18, 0, !dbg !2403
  br i1 %cmp19, label %if.then.21, label %if.else.22, !dbg !2404

if.then.21:                                       ; preds = %do.body.15
  br label %if.end.25, !dbg !2405

if.else.22:                                       ; preds = %do.body.15
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !2407, !tbaa !1941
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !2409
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8, !dbg !2409, !tbaa !1995
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !2410
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8, !dbg !2410, !tbaa !1997
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !2411, !tbaa !1941
  call void %31(%struct._object* %32), !dbg !2412
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.22, %if.then.21
  %33 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !2413
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !2413
  br label %do.cond.26, !dbg !2415

do.cond.26:                                       ; preds = %if.end.25
  br label %do.end.27, !dbg !2416

do.end.27:                                        ; preds = %do.cond.26
  store %struct._object* null, %struct._object** %retval, !dbg !2418
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76, !dbg !2418

if.end.28:                                        ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !2419, !tbaa !1971
  br label %for.cond.29, !dbg !2420

for.cond.29:                                      ; preds = %for.inc.59, %if.end.28
  %34 = load i32, i32* %i, align 4, !dbg !2421, !tbaa !1971
  %cmp30 = icmp slt i32 %34, 30, !dbg !2424
  br i1 %cmp30, label %for.body.32, label %for.end.61, !dbg !2425

for.body.32:                                      ; preds = %for.cond.29
  %35 = bitcast %struct._object** %anint33 to i8*, !dbg !2426
  call void @llvm.lifetime.start(i64 8, i8* %35) #2, !dbg !2426
  call void @llvm.dbg.declare(metadata %struct._object** %anint33, metadata !645, metadata !1945), !dbg !2427
  %36 = load i32, i32* %i, align 4, !dbg !2428, !tbaa !1971
  %idxprom34 = sext i32 %36 to i64, !dbg !2429
  %37 = load %struct._object*, %struct._object** %list, align 8, !dbg !2430, !tbaa !1941
  %38 = bitcast %struct._object* %37 to %struct.PyListObject*, !dbg !2431
  %ob_item35 = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %38, i32 0, i32 1, !dbg !2432
  %39 = load %struct._object**, %struct._object*** %ob_item35, align 8, !dbg !2432, !tbaa !2380
  %arrayidx36 = getelementptr %struct._object*, %struct._object** %39, i64 %idxprom34, !dbg !2429
  %40 = load %struct._object*, %struct._object** %arrayidx36, align 8, !dbg !2429, !tbaa !1941
  store %struct._object* %40, %struct._object** %anint33, align 8, !dbg !2427, !tbaa !1941
  %41 = load %struct._object*, %struct._object** %anint33, align 8, !dbg !2433, !tbaa !1941
  %call37 = call i64 @PyLong_AsLong(%struct._object* %41), !dbg !2434
  %42 = load i32, i32* %i, align 4, !dbg !2435, !tbaa !1971
  %sub = sub i32 29, %42, !dbg !2436
  %conv38 = sext i32 %sub to i64, !dbg !2437
  %cmp39 = icmp ne i64 %call37, %conv38, !dbg !2438
  br i1 %cmp39, label %if.then.41, label %if.end.55, !dbg !2439

if.then.41:                                       ; preds = %for.body.32
  %43 = load %struct._object*, %struct._object** @TestError, align 8, !dbg !2440, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %43, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.134, i32 0, i32 0)), !dbg !2441
  br label %do.body.42, !dbg !2442

do.body.42:                                       ; preds = %if.then.41
  %44 = bitcast %struct._object** %_py_decref_tmp43 to i8*, !dbg !2443
  call void @llvm.lifetime.start(i64 8, i8* %44) #2, !dbg !2443
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp43, metadata !649, metadata !1945), !dbg !2445
  %45 = load %struct._object*, %struct._object** %list, align 8, !dbg !2446, !tbaa !1941
  store %struct._object* %45, %struct._object** %_py_decref_tmp43, align 8, !dbg !2445, !tbaa !1941
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !2447, !tbaa !1941
  %ob_refcnt44 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0, !dbg !2449
  %47 = load i64, i64* %ob_refcnt44, align 8, !dbg !2450, !tbaa !1961
  %dec45 = add i64 %47, -1, !dbg !2450
  store i64 %dec45, i64* %ob_refcnt44, align 8, !dbg !2450, !tbaa !1961
  %cmp46 = icmp ne i64 %dec45, 0, !dbg !2451
  br i1 %cmp46, label %if.then.48, label %if.else.49, !dbg !2452

if.then.48:                                       ; preds = %do.body.42
  br label %if.end.52, !dbg !2453

if.else.49:                                       ; preds = %do.body.42
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !2455, !tbaa !1941
  %ob_type50 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !2457
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type50, align 8, !dbg !2457, !tbaa !1995
  %tp_dealloc51 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4, !dbg !2458
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc51, align 8, !dbg !2458, !tbaa !1997
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8, !dbg !2459, !tbaa !1941
  call void %50(%struct._object* %51), !dbg !2460
  br label %if.end.52

if.end.52:                                        ; preds = %if.else.49, %if.then.48
  %52 = bitcast %struct._object** %_py_decref_tmp43 to i8*, !dbg !2461
  call void @llvm.lifetime.end(i64 8, i8* %52) #2, !dbg !2461
  br label %do.cond.53, !dbg !2463

do.cond.53:                                       ; preds = %if.end.52
  br label %do.end.54, !dbg !2464

do.end.54:                                        ; preds = %do.cond.53
  store %struct._object* null, %struct._object** %retval, !dbg !2466
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.56, !dbg !2466

if.end.55:                                        ; preds = %for.body.32
  store i32 0, i32* %cleanup.dest.slot, !dbg !2467
  br label %cleanup.56, !dbg !2467

cleanup.56:                                       ; preds = %if.end.55, %do.end.54
  %53 = bitcast %struct._object** %anint33 to i8*, !dbg !2468
  call void @llvm.lifetime.end(i64 8, i8* %53) #2, !dbg !2468
  %cleanup.dest.57 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.57, label %cleanup.76 [
    i32 0, label %cleanup.cont.58
  ]

cleanup.cont.58:                                  ; preds = %cleanup.56
  br label %for.inc.59, !dbg !2469

for.inc.59:                                       ; preds = %cleanup.cont.58
  %54 = load i32, i32* %i, align 4, !dbg !2470, !tbaa !1971
  %inc60 = add i32 %54, 1, !dbg !2470
  store i32 %inc60, i32* %i, align 4, !dbg !2470, !tbaa !1971
  br label %for.cond.29, !dbg !2471

for.end.61:                                       ; preds = %for.cond.29
  br label %do.body.62, !dbg !2472

do.body.62:                                       ; preds = %for.end.61
  %55 = bitcast %struct._object** %_py_decref_tmp63 to i8*, !dbg !2473
  call void @llvm.lifetime.start(i64 8, i8* %55) #2, !dbg !2473
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp63, metadata !653, metadata !1945), !dbg !2475
  %56 = load %struct._object*, %struct._object** %list, align 8, !dbg !2476, !tbaa !1941
  store %struct._object* %56, %struct._object** %_py_decref_tmp63, align 8, !dbg !2475, !tbaa !1941
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8, !dbg !2477, !tbaa !1941
  %ob_refcnt64 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0, !dbg !2479
  %58 = load i64, i64* %ob_refcnt64, align 8, !dbg !2480, !tbaa !1961
  %dec65 = add i64 %58, -1, !dbg !2480
  store i64 %dec65, i64* %ob_refcnt64, align 8, !dbg !2480, !tbaa !1961
  %cmp66 = icmp ne i64 %dec65, 0, !dbg !2481
  br i1 %cmp66, label %if.then.68, label %if.else.69, !dbg !2482

if.then.68:                                       ; preds = %do.body.62
  br label %if.end.72, !dbg !2483

if.else.69:                                       ; preds = %do.body.62
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8, !dbg !2485, !tbaa !1941
  %ob_type70 = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1, !dbg !2487
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type70, align 8, !dbg !2487, !tbaa !1995
  %tp_dealloc71 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4, !dbg !2488
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc71, align 8, !dbg !2488, !tbaa !1997
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp63, align 8, !dbg !2489, !tbaa !1941
  call void %61(%struct._object* %62), !dbg !2490
  br label %if.end.72

if.end.72:                                        ; preds = %if.else.69, %if.then.68
  %63 = bitcast %struct._object** %_py_decref_tmp63 to i8*, !dbg !2491
  call void @llvm.lifetime.end(i64 8, i8* %63) #2, !dbg !2491
  br label %do.cond.73, !dbg !2493

do.cond.73:                                       ; preds = %if.end.72
  br label %do.end.74, !dbg !2494

do.end.74:                                        ; preds = %do.cond.73
  %64 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2496, !tbaa !1961
  %inc75 = add i64 %64, 1, !dbg !2496
  store i64 %inc75, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2496, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !2497
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76, !dbg !2497

cleanup.76:                                       ; preds = %do.end.74, %cleanup.56, %do.end.27, %cleanup, %if.then
  %65 = bitcast i32* %i to i8*, !dbg !2498
  call void @llvm.lifetime.end(i64 4, i8* %65) #2, !dbg !2498
  %66 = bitcast %struct._object** %list to i8*, !dbg !2498
  call void @llvm.lifetime.end(i64 8, i8* %66) #2, !dbg !2498
  %67 = load %struct._object*, %struct._object** %retval, !dbg !2498
  ret %struct._object* %67, !dbg !2498
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_dict_iteration(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !657, metadata !1945), !dbg !2499
  %0 = bitcast i32* %i to i8*, !dbg !2500
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !2500
  call void @llvm.dbg.declare(metadata i32* %i, metadata !658, metadata !1945), !dbg !2501
  store i32 0, i32* %i, align 4, !dbg !2502, !tbaa !1971
  br label %for.cond, !dbg !2504

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !2505, !tbaa !1971
  %cmp = icmp slt i32 %1, 200, !dbg !2509
  br i1 %cmp, label %for.body, label %for.end, !dbg !2510

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !2511, !tbaa !1971
  %call = call i32 @test_dict_inner(i32 %2), !dbg !2514
  %cmp1 = icmp slt i32 %call, 0, !dbg !2515
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2516

if.then:                                          ; preds = %for.body
  store %struct._object* null, %struct._object** %retval, !dbg !2517
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2517

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !2519

for.inc:                                          ; preds = %if.end
  %3 = load i32, i32* %i, align 4, !dbg !2520, !tbaa !1971
  %inc = add i32 %3, 1, !dbg !2520
  store i32 %inc, i32* %i, align 4, !dbg !2520, !tbaa !1971
  br label %for.cond, !dbg !2521

for.end:                                          ; preds = %for.cond
  %4 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2522, !tbaa !1961
  %inc2 = add i64 %4, 1, !dbg !2522
  store i64 %inc2, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2522, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !2523
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2523

cleanup:                                          ; preds = %for.end, %if.then
  %5 = bitcast i32* %i to i8*, !dbg !2524
  call void @llvm.lifetime.end(i64 4, i8* %5) #2, !dbg !2524
  %6 = load %struct._object*, %struct._object** %retval, !dbg !2524
  ret %struct._object* %6, !dbg !2524
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_lazy_hash_inheritance(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %type = alloca %struct._typeobject*, align 8
  %obj = alloca %struct._object*, align 8
  %hash = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp16 = alloca %struct._object*, align 8
  %_py_decref_tmp32 = alloca %struct._object*, align 8
  %_py_decref_tmp47 = alloca %struct._object*, align 8
  %_py_decref_tmp60 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !691, metadata !1945), !dbg !2525
  %0 = bitcast %struct._typeobject** %type to i8*, !dbg !2526
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2526
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type, metadata !692, metadata !1945), !dbg !2527
  %1 = bitcast %struct._object** %obj to i8*, !dbg !2528
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !2528
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !693, metadata !1945), !dbg !2529
  %2 = bitcast i64* %hash to i8*, !dbg !2530
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !2530
  call void @llvm.dbg.declare(metadata i64* %hash, metadata !694, metadata !1945), !dbg !2531
  store %struct._typeobject* bitcast ({ %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @_HashInheritanceTester_Type to %struct._typeobject*), %struct._typeobject** %type, align 8, !dbg !2532, !tbaa !1941
  %3 = load %struct._typeobject*, %struct._typeobject** %type, align 8, !dbg !2533, !tbaa !1941
  %tp_dict = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 31, !dbg !2535
  %4 = load %struct._object*, %struct._object** %tp_dict, align 8, !dbg !2535, !tbaa !2536
  %cmp = icmp ne %struct._object* %4, null, !dbg !2537
  br i1 %cmp, label %if.then, label %if.end, !dbg !2538

if.then:                                          ; preds = %entry
  %5 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2539, !tbaa !1961
  %inc = add i64 %5, 1, !dbg !2539
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2539, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !2540
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2540

if.end:                                           ; preds = %entry
  %6 = load %struct._typeobject*, %struct._typeobject** %type, align 8, !dbg !2541, !tbaa !1941
  %call = call %struct._object* @_PyObject_New(%struct._typeobject* %6), !dbg !2542
  store %struct._object* %call, %struct._object** %obj, align 8, !dbg !2543, !tbaa !1941
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2544, !tbaa !1941
  %cmp1 = icmp eq %struct._object* %7, null, !dbg !2546
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !2547

if.then.2:                                        ; preds = %if.end
  call void @PyErr_Clear(), !dbg !2548
  %8 = load %struct._object*, %struct._object** @TestError, align 8, !dbg !2550, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.136, i32 0, i32 0)), !dbg !2551
  store %struct._object* null, %struct._object** %retval, !dbg !2552
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2552

if.end.3:                                         ; preds = %if.end
  %9 = load %struct._typeobject*, %struct._typeobject** %type, align 8, !dbg !2553, !tbaa !1941
  %tp_dict4 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 31, !dbg !2554
  %10 = load %struct._object*, %struct._object** %tp_dict4, align 8, !dbg !2554, !tbaa !2536
  %cmp5 = icmp ne %struct._object* %10, null, !dbg !2555
  br i1 %cmp5, label %if.then.6, label %if.end.10, !dbg !2556

if.then.6:                                        ; preds = %if.end.3
  %11 = load %struct._object*, %struct._object** @TestError, align 8, !dbg !2557, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.137, i32 0, i32 0)), !dbg !2558
  br label %do.body, !dbg !2559

do.body:                                          ; preds = %if.then.6
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2560
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !2560
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !695, metadata !1945), !dbg !2562
  %13 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2563, !tbaa !1941
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !2562, !tbaa !1941
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2564, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !2566
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !2567, !tbaa !1961
  %dec = add i64 %15, -1, !dbg !2567
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2567, !tbaa !1961
  %cmp7 = icmp ne i64 %dec, 0, !dbg !2568
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !2569

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !2570

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2572, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !2574
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2574, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !2575
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2575, !tbaa !1997
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2576, !tbaa !1941
  call void %18(%struct._object* %19), !dbg !2577
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2578
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !2578
  br label %do.cond, !dbg !2580

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !2581

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !2583
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2583

if.end.10:                                        ; preds = %if.end.3
  %21 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2584, !tbaa !1941
  %call11 = call i64 @PyObject_Hash(%struct._object* %21), !dbg !2585
  store i64 %call11, i64* %hash, align 8, !dbg !2586, !tbaa !2587
  %22 = load i64, i64* %hash, align 8, !dbg !2588, !tbaa !2587
  %cmp12 = icmp eq i64 %22, -1, !dbg !2589
  br i1 %cmp12, label %land.lhs.true, label %if.end.27, !dbg !2590

land.lhs.true:                                    ; preds = %if.end.10
  %call13 = call %struct._object* @PyErr_Occurred(), !dbg !2591
  %tobool = icmp ne %struct._object* %call13, null, !dbg !2591
  br i1 %tobool, label %if.then.14, label %if.end.27, !dbg !2593

if.then.14:                                       ; preds = %land.lhs.true
  call void @PyErr_Clear(), !dbg !2594
  %23 = load %struct._object*, %struct._object** @TestError, align 8, !dbg !2595, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %23, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.138, i32 0, i32 0)), !dbg !2596
  br label %do.body.15, !dbg !2597

do.body.15:                                       ; preds = %if.then.14
  %24 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !2598
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !2598
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp16, metadata !699, metadata !1945), !dbg !2600
  %25 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2601, !tbaa !1941
  store %struct._object* %25, %struct._object** %_py_decref_tmp16, align 8, !dbg !2600, !tbaa !1941
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !2602, !tbaa !1941
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0, !dbg !2604
  %27 = load i64, i64* %ob_refcnt17, align 8, !dbg !2605, !tbaa !1961
  %dec18 = add i64 %27, -1, !dbg !2605
  store i64 %dec18, i64* %ob_refcnt17, align 8, !dbg !2605, !tbaa !1961
  %cmp19 = icmp ne i64 %dec18, 0, !dbg !2606
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !2607

if.then.20:                                       ; preds = %do.body.15
  br label %if.end.24, !dbg !2608

if.else.21:                                       ; preds = %do.body.15
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !2610, !tbaa !1941
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1, !dbg !2612
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !2612, !tbaa !1995
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4, !dbg !2613
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !2613, !tbaa !1997
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !2614, !tbaa !1941
  call void %30(%struct._object* %31), !dbg !2615
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  %32 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !2616
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !2616
  br label %do.cond.25, !dbg !2618

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !2619

do.end.26:                                        ; preds = %do.cond.25
  store %struct._object* null, %struct._object** %retval, !dbg !2621
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2621

if.end.27:                                        ; preds = %land.lhs.true, %if.end.10
  %33 = load %struct._typeobject*, %struct._typeobject** %type, align 8, !dbg !2622, !tbaa !1941
  %tp_dict28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %33, i32 0, i32 31, !dbg !2623
  %34 = load %struct._object*, %struct._object** %tp_dict28, align 8, !dbg !2623, !tbaa !2536
  %cmp29 = icmp eq %struct._object* %34, null, !dbg !2624
  br i1 %cmp29, label %if.then.30, label %if.end.43, !dbg !2625

if.then.30:                                       ; preds = %if.end.27
  %35 = load %struct._object*, %struct._object** @TestError, align 8, !dbg !2626, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %35, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.139, i32 0, i32 0)), !dbg !2627
  br label %do.body.31, !dbg !2628

do.body.31:                                       ; preds = %if.then.30
  %36 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !2629
  call void @llvm.lifetime.start(i64 8, i8* %36) #2, !dbg !2629
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp32, metadata !703, metadata !1945), !dbg !2631
  %37 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2632, !tbaa !1941
  store %struct._object* %37, %struct._object** %_py_decref_tmp32, align 8, !dbg !2631, !tbaa !1941
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !2633, !tbaa !1941
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0, !dbg !2635
  %39 = load i64, i64* %ob_refcnt33, align 8, !dbg !2636, !tbaa !1961
  %dec34 = add i64 %39, -1, !dbg !2636
  store i64 %dec34, i64* %ob_refcnt33, align 8, !dbg !2636, !tbaa !1961
  %cmp35 = icmp ne i64 %dec34, 0, !dbg !2637
  br i1 %cmp35, label %if.then.36, label %if.else.37, !dbg !2638

if.then.36:                                       ; preds = %do.body.31
  br label %if.end.40, !dbg !2639

if.else.37:                                       ; preds = %do.body.31
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !2641, !tbaa !1941
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1, !dbg !2643
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8, !dbg !2643, !tbaa !1995
  %tp_dealloc39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4, !dbg !2644
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc39, align 8, !dbg !2644, !tbaa !1997
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8, !dbg !2645, !tbaa !1941
  call void %42(%struct._object* %43), !dbg !2646
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.37, %if.then.36
  %44 = bitcast %struct._object** %_py_decref_tmp32 to i8*, !dbg !2647
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !2647
  br label %do.cond.41, !dbg !2649

do.cond.41:                                       ; preds = %if.end.40
  br label %do.end.42, !dbg !2650

do.end.42:                                        ; preds = %do.cond.41
  store %struct._object* null, %struct._object** %retval, !dbg !2652
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2652

if.end.43:                                        ; preds = %if.end.27
  %45 = load %struct._typeobject*, %struct._typeobject** %type, align 8, !dbg !2653, !tbaa !1941
  %tp_hash = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 13, !dbg !2654
  %46 = load i64 (%struct._object*)*, i64 (%struct._object*)** %tp_hash, align 8, !dbg !2654, !tbaa !2655
  %47 = load i64 (%struct._object*)*, i64 (%struct._object*)** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyType_Type, i32 0, i32 13), align 8, !dbg !2656, !tbaa !2655
  %cmp44 = icmp ne i64 (%struct._object*)* %46, %47, !dbg !2657
  br i1 %cmp44, label %if.then.45, label %if.end.58, !dbg !2658

if.then.45:                                       ; preds = %if.end.43
  %48 = load %struct._object*, %struct._object** @TestError, align 8, !dbg !2659, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %48, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.140, i32 0, i32 0)), !dbg !2660
  br label %do.body.46, !dbg !2661

do.body.46:                                       ; preds = %if.then.45
  %49 = bitcast %struct._object** %_py_decref_tmp47 to i8*, !dbg !2662
  call void @llvm.lifetime.start(i64 8, i8* %49) #2, !dbg !2662
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp47, metadata !707, metadata !1945), !dbg !2664
  %50 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2665, !tbaa !1941
  store %struct._object* %50, %struct._object** %_py_decref_tmp47, align 8, !dbg !2664, !tbaa !1941
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8, !dbg !2666, !tbaa !1941
  %ob_refcnt48 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0, !dbg !2668
  %52 = load i64, i64* %ob_refcnt48, align 8, !dbg !2669, !tbaa !1961
  %dec49 = add i64 %52, -1, !dbg !2669
  store i64 %dec49, i64* %ob_refcnt48, align 8, !dbg !2669, !tbaa !1961
  %cmp50 = icmp ne i64 %dec49, 0, !dbg !2670
  br i1 %cmp50, label %if.then.51, label %if.else.52, !dbg !2671

if.then.51:                                       ; preds = %do.body.46
  br label %if.end.55, !dbg !2672

if.else.52:                                       ; preds = %do.body.46
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8, !dbg !2674, !tbaa !1941
  %ob_type53 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 1, !dbg !2676
  %54 = load %struct._typeobject*, %struct._typeobject** %ob_type53, align 8, !dbg !2676, !tbaa !1995
  %tp_dealloc54 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %54, i32 0, i32 4, !dbg !2677
  %55 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc54, align 8, !dbg !2677, !tbaa !1997
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8, !dbg !2678, !tbaa !1941
  call void %55(%struct._object* %56), !dbg !2679
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.52, %if.then.51
  %57 = bitcast %struct._object** %_py_decref_tmp47 to i8*, !dbg !2680
  call void @llvm.lifetime.end(i64 8, i8* %57) #2, !dbg !2680
  br label %do.cond.56, !dbg !2682

do.cond.56:                                       ; preds = %if.end.55
  br label %do.end.57, !dbg !2683

do.end.57:                                        ; preds = %do.cond.56
  store %struct._object* null, %struct._object** %retval, !dbg !2685
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2685

if.end.58:                                        ; preds = %if.end.43
  br label %do.body.59, !dbg !2686

do.body.59:                                       ; preds = %if.end.58
  %58 = bitcast %struct._object** %_py_decref_tmp60 to i8*, !dbg !2687
  call void @llvm.lifetime.start(i64 8, i8* %58) #2, !dbg !2687
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp60, metadata !711, metadata !1945), !dbg !2689
  %59 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2690, !tbaa !1941
  store %struct._object* %59, %struct._object** %_py_decref_tmp60, align 8, !dbg !2689, !tbaa !1941
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !2691, !tbaa !1941
  %ob_refcnt61 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0, !dbg !2693
  %61 = load i64, i64* %ob_refcnt61, align 8, !dbg !2694, !tbaa !1961
  %dec62 = add i64 %61, -1, !dbg !2694
  store i64 %dec62, i64* %ob_refcnt61, align 8, !dbg !2694, !tbaa !1961
  %cmp63 = icmp ne i64 %dec62, 0, !dbg !2695
  br i1 %cmp63, label %if.then.64, label %if.else.65, !dbg !2696

if.then.64:                                       ; preds = %do.body.59
  br label %if.end.68, !dbg !2697

if.else.65:                                       ; preds = %do.body.59
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !2699, !tbaa !1941
  %ob_type66 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1, !dbg !2701
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type66, align 8, !dbg !2701, !tbaa !1995
  %tp_dealloc67 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4, !dbg !2702
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc67, align 8, !dbg !2702, !tbaa !1997
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8, !dbg !2703, !tbaa !1941
  call void %64(%struct._object* %65), !dbg !2704
  br label %if.end.68

if.end.68:                                        ; preds = %if.else.65, %if.then.64
  %66 = bitcast %struct._object** %_py_decref_tmp60 to i8*, !dbg !2705
  call void @llvm.lifetime.end(i64 8, i8* %66) #2, !dbg !2705
  br label %do.cond.69, !dbg !2707

do.cond.69:                                       ; preds = %if.end.68
  br label %do.end.70, !dbg !2708

do.end.70:                                        ; preds = %do.cond.69
  %67 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2710, !tbaa !1961
  %inc71 = add i64 %67, 1, !dbg !2710
  store i64 %inc71, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2710, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !2711
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2711

cleanup:                                          ; preds = %do.end.70, %do.end.57, %do.end.42, %do.end.26, %do.end, %if.then.2, %if.then
  %68 = bitcast i64* %hash to i8*, !dbg !2712
  call void @llvm.lifetime.end(i64 8, i8* %68) #2, !dbg !2712
  %69 = bitcast %struct._object** %obj to i8*, !dbg !2712
  call void @llvm.lifetime.end(i64 8, i8* %69) #2, !dbg !2712
  %70 = bitcast %struct._typeobject** %type to i8*, !dbg !2712
  call void @llvm.lifetime.end(i64 8, i8* %70) #2, !dbg !2712
  %71 = load %struct._object*, %struct._object** %retval, !dbg !2712
  ret %struct._object* %71, !dbg !2712
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_long_api(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !715, metadata !1945), !dbg !2713
  %call = call %struct._object* @test_long_api_inner(%struct._object* (i8*)* @raise_test_long_error), !dbg !2714
  ret %struct._object* %call, !dbg !2715
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_xincref_doesnt_leak(%struct._object* %ob) #0 {
entry:
  %ob.addr = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %_py_xincref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp10 = alloca %struct._object*, align 8
  %_py_decref_tmp22 = alloca %struct._object*, align 8
  store %struct._object* %ob, %struct._object** %ob.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %ob.addr, metadata !791, metadata !1945), !dbg !2716
  %0 = bitcast %struct._object** %obj to i8*, !dbg !2717
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2717
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !792, metadata !1945), !dbg !2718
  %call = call %struct._object* @PyLong_FromLong(i64 0), !dbg !2719
  store %struct._object* %call, %struct._object** %obj, align 8, !dbg !2718, !tbaa !1941
  br label %do.body, !dbg !2720

do.body:                                          ; preds = %entry
  %1 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !2721
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !2721
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xincref_tmp, metadata !793, metadata !1945), !dbg !2723
  %2 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2724, !tbaa !1941
  %call1 = call %struct._object* @_test_incref(%struct._object* %2), !dbg !2725
  store %struct._object* %call1, %struct._object** %_py_xincref_tmp, align 8, !dbg !2723, !tbaa !1941
  %3 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !2726, !tbaa !1941
  %cmp = icmp ne %struct._object* %3, null, !dbg !2728
  br i1 %cmp, label %if.then, label %if.end, !dbg !2729

if.then:                                          ; preds = %do.body
  %4 = load %struct._object*, %struct._object** %_py_xincref_tmp, align 8, !dbg !2730, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0, !dbg !2732
  %5 = load i64, i64* %ob_refcnt, align 8, !dbg !2733, !tbaa !1961
  %inc = add i64 %5, 1, !dbg !2733
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2733, !tbaa !1961
  br label %if.end, !dbg !2734

if.end:                                           ; preds = %if.then, %do.body
  %6 = bitcast %struct._object** %_py_xincref_tmp to i8*, !dbg !2735
  call void @llvm.lifetime.end(i64 8, i8* %6) #2, !dbg !2735
  br label %do.cond, !dbg !2738

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !2739

do.end:                                           ; preds = %do.cond
  br label %do.body.2, !dbg !2741

do.body.2:                                        ; preds = %do.end
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2742
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !2742
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !795, metadata !1945), !dbg !2744
  %8 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2745, !tbaa !1941
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !2744, !tbaa !1941
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2746, !tbaa !1941
  %ob_refcnt3 = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !2748
  %10 = load i64, i64* %ob_refcnt3, align 8, !dbg !2749, !tbaa !1961
  %dec = add i64 %10, -1, !dbg !2749
  store i64 %dec, i64* %ob_refcnt3, align 8, !dbg !2749, !tbaa !1961
  %cmp4 = icmp ne i64 %dec, 0, !dbg !2750
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !2751

if.then.5:                                        ; preds = %do.body.2
  br label %if.end.6, !dbg !2752

if.else:                                          ; preds = %do.body.2
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2754, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !2756
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2756, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !2757
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2757, !tbaa !1997
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2758, !tbaa !1941
  call void %13(%struct._object* %14), !dbg !2759
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2760
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !2760
  br label %do.cond.7, !dbg !2762

do.cond.7:                                        ; preds = %if.end.6
  br label %do.end.8, !dbg !2763

do.end.8:                                         ; preds = %do.cond.7
  br label %do.body.9, !dbg !2765

do.body.9:                                        ; preds = %do.end.8
  %16 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !2766
  call void @llvm.lifetime.start(i64 8, i8* %16) #2, !dbg !2766
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp10, metadata !797, metadata !1945), !dbg !2768
  %17 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2769, !tbaa !1941
  store %struct._object* %17, %struct._object** %_py_decref_tmp10, align 8, !dbg !2768, !tbaa !1941
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !2770, !tbaa !1941
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !2772
  %19 = load i64, i64* %ob_refcnt11, align 8, !dbg !2773, !tbaa !1961
  %dec12 = add i64 %19, -1, !dbg !2773
  store i64 %dec12, i64* %ob_refcnt11, align 8, !dbg !2773, !tbaa !1961
  %cmp13 = icmp ne i64 %dec12, 0, !dbg !2774
  br i1 %cmp13, label %if.then.14, label %if.else.15, !dbg !2775

if.then.14:                                       ; preds = %do.body.9
  br label %if.end.18, !dbg !2776

if.else.15:                                       ; preds = %do.body.9
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !2778, !tbaa !1941
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !2780
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !2780, !tbaa !1995
  %tp_dealloc17 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !2781
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc17, align 8, !dbg !2781, !tbaa !1997
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !2782, !tbaa !1941
  call void %22(%struct._object* %23), !dbg !2783
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.15, %if.then.14
  %24 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !2784
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !2784
  br label %do.cond.19, !dbg !2785

do.cond.19:                                       ; preds = %if.end.18
  br label %do.end.20, !dbg !2786

do.end.20:                                        ; preds = %do.cond.19
  br label %do.body.21, !dbg !2788

do.body.21:                                       ; preds = %do.end.20
  %25 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !2789
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !2789
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp22, metadata !799, metadata !1945), !dbg !2791
  %26 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2792, !tbaa !1941
  store %struct._object* %26, %struct._object** %_py_decref_tmp22, align 8, !dbg !2791, !tbaa !1941
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !2793, !tbaa !1941
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !2795
  %28 = load i64, i64* %ob_refcnt23, align 8, !dbg !2796, !tbaa !1961
  %dec24 = add i64 %28, -1, !dbg !2796
  store i64 %dec24, i64* %ob_refcnt23, align 8, !dbg !2796, !tbaa !1961
  %cmp25 = icmp ne i64 %dec24, 0, !dbg !2797
  br i1 %cmp25, label %if.then.26, label %if.else.27, !dbg !2798

if.then.26:                                       ; preds = %do.body.21
  br label %if.end.30, !dbg !2799

if.else.27:                                       ; preds = %do.body.21
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !2801, !tbaa !1941
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !2803
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8, !dbg !2803, !tbaa !1995
  %tp_dealloc29 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !2804
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc29, align 8, !dbg !2804, !tbaa !1997
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8, !dbg !2805, !tbaa !1941
  call void %31(%struct._object* %32), !dbg !2806
  br label %if.end.30

if.end.30:                                        ; preds = %if.else.27, %if.then.26
  %33 = bitcast %struct._object** %_py_decref_tmp22 to i8*, !dbg !2807
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !2807
  br label %do.cond.31, !dbg !2808

do.cond.31:                                       ; preds = %if.end.30
  br label %do.end.32, !dbg !2809

do.end.32:                                        ; preds = %do.cond.31
  %34 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2811, !tbaa !1961
  %inc33 = add i64 %34, 1, !dbg !2811
  store i64 %inc33, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2811, !tbaa !1961
  %35 = bitcast %struct._object** %obj to i8*, !dbg !2812
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !2812
  ret %struct._object* @_Py_NoneStruct, !dbg !2813
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_incref_doesnt_leak(%struct._object* %ob) #0 {
entry:
  %ob.addr = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp4 = alloca %struct._object*, align 8
  %_py_decref_tmp16 = alloca %struct._object*, align 8
  store %struct._object* %ob, %struct._object** %ob.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %ob.addr, metadata !806, metadata !1945), !dbg !2814
  %0 = bitcast %struct._object** %obj to i8*, !dbg !2815
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2815
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !807, metadata !1945), !dbg !2816
  %call = call %struct._object* @PyLong_FromLong(i64 0), !dbg !2817
  store %struct._object* %call, %struct._object** %obj, align 8, !dbg !2816, !tbaa !1941
  %1 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2818, !tbaa !1941
  %call1 = call %struct._object* @_test_incref(%struct._object* %1), !dbg !2819
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %call1, i32 0, i32 0, !dbg !2820
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !2821, !tbaa !1961
  %inc = add i64 %2, 1, !dbg !2821
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !2821, !tbaa !1961
  br label %do.body, !dbg !2822

do.body:                                          ; preds = %entry
  %3 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2823
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !2823
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !808, metadata !1945), !dbg !2825
  %4 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2826, !tbaa !1941
  store %struct._object* %4, %struct._object** %_py_decref_tmp, align 8, !dbg !2825, !tbaa !1941
  %5 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2827, !tbaa !1941
  %ob_refcnt2 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0, !dbg !2829
  %6 = load i64, i64* %ob_refcnt2, align 8, !dbg !2830, !tbaa !1961
  %dec = add i64 %6, -1, !dbg !2830
  store i64 %dec, i64* %ob_refcnt2, align 8, !dbg !2830, !tbaa !1961
  %cmp = icmp ne i64 %dec, 0, !dbg !2831
  br i1 %cmp, label %if.then, label %if.else, !dbg !2832

if.then:                                          ; preds = %do.body
  br label %if.end, !dbg !2833

if.else:                                          ; preds = %do.body
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2835, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1, !dbg !2837
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2837, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 4, !dbg !2838
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2838, !tbaa !1997
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2839, !tbaa !1941
  call void %9(%struct._object* %10), !dbg !2840
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2841
  call void @llvm.lifetime.end(i64 8, i8* %11) #2, !dbg !2841
  br label %do.cond, !dbg !2843

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !2844

do.end:                                           ; preds = %do.cond
  br label %do.body.3, !dbg !2846

do.body.3:                                        ; preds = %do.end
  %12 = bitcast %struct._object** %_py_decref_tmp4 to i8*, !dbg !2847
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !2847
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp4, metadata !810, metadata !1945), !dbg !2849
  %13 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2850, !tbaa !1941
  store %struct._object* %13, %struct._object** %_py_decref_tmp4, align 8, !dbg !2849, !tbaa !1941
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp4, align 8, !dbg !2851, !tbaa !1941
  %ob_refcnt5 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !2853
  %15 = load i64, i64* %ob_refcnt5, align 8, !dbg !2854, !tbaa !1961
  %dec6 = add i64 %15, -1, !dbg !2854
  store i64 %dec6, i64* %ob_refcnt5, align 8, !dbg !2854, !tbaa !1961
  %cmp7 = icmp ne i64 %dec6, 0, !dbg !2855
  br i1 %cmp7, label %if.then.8, label %if.else.9, !dbg !2856

if.then.8:                                        ; preds = %do.body.3
  br label %if.end.12, !dbg !2857

if.else.9:                                        ; preds = %do.body.3
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp4, align 8, !dbg !2859, !tbaa !1941
  %ob_type10 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !2861
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type10, align 8, !dbg !2861, !tbaa !1995
  %tp_dealloc11 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !2862
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc11, align 8, !dbg !2862, !tbaa !1997
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp4, align 8, !dbg !2863, !tbaa !1941
  call void %18(%struct._object* %19), !dbg !2864
  br label %if.end.12

if.end.12:                                        ; preds = %if.else.9, %if.then.8
  %20 = bitcast %struct._object** %_py_decref_tmp4 to i8*, !dbg !2865
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !2865
  br label %do.cond.13, !dbg !2866

do.cond.13:                                       ; preds = %if.end.12
  br label %do.end.14, !dbg !2867

do.end.14:                                        ; preds = %do.cond.13
  br label %do.body.15, !dbg !2869

do.body.15:                                       ; preds = %do.end.14
  %21 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !2870
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !2870
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp16, metadata !812, metadata !1945), !dbg !2872
  %22 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2873, !tbaa !1941
  store %struct._object* %22, %struct._object** %_py_decref_tmp16, align 8, !dbg !2872, !tbaa !1941
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !2874, !tbaa !1941
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !2876
  %24 = load i64, i64* %ob_refcnt17, align 8, !dbg !2877, !tbaa !1961
  %dec18 = add i64 %24, -1, !dbg !2877
  store i64 %dec18, i64* %ob_refcnt17, align 8, !dbg !2877, !tbaa !1961
  %cmp19 = icmp ne i64 %dec18, 0, !dbg !2878
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !2879

if.then.20:                                       ; preds = %do.body.15
  br label %if.end.24, !dbg !2880

if.else.21:                                       ; preds = %do.body.15
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !2882, !tbaa !1941
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !2884
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !2884, !tbaa !1995
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !2885
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !2885, !tbaa !1997
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !2886, !tbaa !1941
  call void %27(%struct._object* %28), !dbg !2887
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  %29 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !2888
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !2888
  br label %do.cond.25, !dbg !2889

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !2890

do.end.26:                                        ; preds = %do.cond.25
  %30 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2892, !tbaa !1961
  %inc27 = add i64 %30, 1, !dbg !2892
  store i64 %inc27, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2892, !tbaa !1961
  %31 = bitcast %struct._object** %obj to i8*, !dbg !2893
  call void @llvm.lifetime.end(i64 8, i8* %31) #2, !dbg !2893
  ret %struct._object* @_Py_NoneStruct, !dbg !2894
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_xdecref_doesnt_leak(%struct._object* %ob) #0 {
entry:
  %ob.addr = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %ob, %struct._object** %ob.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %ob.addr, metadata !816, metadata !1945), !dbg !2895
  br label %do.body, !dbg !2896

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2897
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2897
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !817, metadata !1945), !dbg !2899
  %call = call %struct._object* @PyLong_FromLong(i64 0), !dbg !2900
  store %struct._object* %call, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2899, !tbaa !1941
  %1 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2901, !tbaa !1941
  %cmp = icmp ne %struct._object* %1, null, !dbg !2902
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !2903

if.then:                                          ; preds = %do.body
  br label %do.body.1, !dbg !2904

do.body.1:                                        ; preds = %if.then
  %2 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2906
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !2906
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !819, metadata !1945), !dbg !2908
  %3 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !2909, !tbaa !1941
  store %struct._object* %3, %struct._object** %_py_decref_tmp, align 8, !dbg !2908, !tbaa !1941
  %4 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2910, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 0, !dbg !2912
  %5 = load i64, i64* %ob_refcnt, align 8, !dbg !2913, !tbaa !1961
  %dec = add i64 %5, -1, !dbg !2913
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2913, !tbaa !1961
  %cmp2 = icmp ne i64 %dec, 0, !dbg !2914
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !2915

if.then.3:                                        ; preds = %do.body.1
  br label %if.end, !dbg !2916

if.else:                                          ; preds = %do.body.1
  %6 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2918, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1, !dbg !2920
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2920, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i32 0, i32 4, !dbg !2921
  %8 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2921, !tbaa !1997
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2922, !tbaa !1941
  call void %8(%struct._object* %9), !dbg !2923
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2924
  call void @llvm.lifetime.end(i64 8, i8* %10) #2, !dbg !2924
  br label %do.cond, !dbg !2926

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !2927

do.end:                                           ; preds = %do.cond
  br label %if.end.4, !dbg !2929

if.end.4:                                         ; preds = %do.end, %do.body
  %11 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !2931
  call void @llvm.lifetime.end(i64 8, i8* %11) #2, !dbg !2931
  br label %do.end.6, !dbg !2934

do.end.6:                                         ; preds = %if.end.4
  %12 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2935, !tbaa !1961
  %inc = add i64 %12, 1, !dbg !2935
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2935, !tbaa !1961
  ret %struct._object* @_Py_NoneStruct, !dbg !2936
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_decref_doesnt_leak(%struct._object* %ob) #0 {
entry:
  %ob.addr = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %ob, %struct._object** %ob.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %ob.addr, metadata !824, metadata !1945), !dbg !2937
  br label %do.body, !dbg !2938

do.body:                                          ; preds = %entry
  %0 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2939
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2939
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !825, metadata !1945), !dbg !2941
  %call = call %struct._object* @PyLong_FromLong(i64 0), !dbg !2942
  store %struct._object* %call, %struct._object** %_py_decref_tmp, align 8, !dbg !2941, !tbaa !1941
  %1 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2943, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 0, !dbg !2945
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !2946, !tbaa !1961
  %dec = add i64 %2, -1, !dbg !2946
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !2946, !tbaa !1961
  %cmp = icmp ne i64 %dec, 0, !dbg !2947
  br i1 %cmp, label %if.then, label %if.else, !dbg !2948

if.then:                                          ; preds = %do.body
  br label %if.end, !dbg !2949

if.else:                                          ; preds = %do.body
  %3 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2951, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !2953
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !2953, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 4, !dbg !2954
  %5 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !2954, !tbaa !1997
  %6 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !2955, !tbaa !1941
  call void %5(%struct._object* %6), !dbg !2956
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2957
  call void @llvm.lifetime.end(i64 8, i8* %7) #2, !dbg !2957
  br label %do.end, !dbg !2959

do.end:                                           ; preds = %if.end
  %8 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2960, !tbaa !1961
  %inc = add i64 %8, 1, !dbg !2960
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2960, !tbaa !1961
  ret %struct._object* @_Py_NoneStruct, !dbg !2961
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_incref_decref_API(%struct._object* %ob) #0 {
entry:
  %ob.addr = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  store %struct._object* %ob, %struct._object** %ob.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %ob.addr, metadata !829, metadata !1945), !dbg !2962
  %0 = bitcast %struct._object** %obj to i8*, !dbg !2963
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2963
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !830, metadata !1945), !dbg !2964
  %call = call %struct._object* @PyLong_FromLong(i64 0), !dbg !2965
  store %struct._object* %call, %struct._object** %obj, align 8, !dbg !2964, !tbaa !1941
  %1 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !2966, !tbaa !1941
  call void @Py_IncRef(%struct._object* %1), !dbg !2967
  %2 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2968, !tbaa !1941
  call void @Py_DecRef(%struct._object* %2), !dbg !2969
  %3 = load %struct._object*, %struct._object** %obj, align 8, !dbg !2970, !tbaa !1941
  call void @Py_DecRef(%struct._object* %3), !dbg !2971
  %4 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2972, !tbaa !1961
  %inc = add i64 %4, 1, !dbg !2972
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !2972, !tbaa !1961
  %5 = bitcast %struct._object** %obj to i8*, !dbg !2973
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !2973
  ret %struct._object* @_Py_NoneStruct, !dbg !2974
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_long_and_overflow(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %num = alloca %struct._object*, align 8
  %one = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %value = alloca i64, align 8
  %overflow = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp25 = alloca %struct._object*, align 8
  %_py_decref_tmp39 = alloca %struct._object*, align 8
  %_py_decref_tmp51 = alloca %struct._object*, align 8
  %_py_decref_tmp67 = alloca %struct._object*, align 8
  %_py_decref_tmp98 = alloca %struct._object*, align 8
  %_py_decref_tmp131 = alloca %struct._object*, align 8
  %_py_decref_tmp145 = alloca %struct._object*, align 8
  %_py_decref_tmp157 = alloca %struct._object*, align 8
  %_py_decref_tmp173 = alloca %struct._object*, align 8
  %_py_decref_tmp204 = alloca %struct._object*, align 8
  %_py_decref_tmp235 = alloca %struct._object*, align 8
  %_py_decref_tmp266 = alloca %struct._object*, align 8
  %_py_decref_tmp297 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !833, metadata !1945), !dbg !2975
  %0 = bitcast %struct._object** %num to i8*, !dbg !2976
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !2976
  call void @llvm.dbg.declare(metadata %struct._object** %num, metadata !834, metadata !1945), !dbg !2977
  %1 = bitcast %struct._object** %one to i8*, !dbg !2976
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !2976
  call void @llvm.dbg.declare(metadata %struct._object** %one, metadata !835, metadata !1945), !dbg !2978
  %2 = bitcast %struct._object** %temp to i8*, !dbg !2976
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !2976
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !836, metadata !1945), !dbg !2979
  %3 = bitcast i64* %value to i8*, !dbg !2980
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !2980
  call void @llvm.dbg.declare(metadata i64* %value, metadata !837, metadata !1945), !dbg !2981
  %4 = bitcast i32* %overflow to i8*, !dbg !2982
  call void @llvm.lifetime.start(i64 4, i8* %4) #2, !dbg !2982
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !838, metadata !1945), !dbg !2983
  %call = call %struct._object* @PyLong_FromString(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.163, i32 0, i32 0), i8** null, i32 16), !dbg !2984
  store %struct._object* %call, %struct._object** %num, align 8, !dbg !2985, !tbaa !1941
  %5 = load %struct._object*, %struct._object** %num, align 8, !dbg !2986, !tbaa !1941
  %cmp = icmp eq %struct._object* %5, null, !dbg !2988
  br i1 %cmp, label %if.then, label %if.end, !dbg !2989

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !2990
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !2990

if.end:                                           ; preds = %entry
  store i32 1234, i32* %overflow, align 4, !dbg !2991, !tbaa !1971
  %6 = load %struct._object*, %struct._object** %num, align 8, !dbg !2992, !tbaa !1941
  %call1 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %6, i32* %overflow), !dbg !2993
  store i64 %call1, i64* %value, align 8, !dbg !2994, !tbaa !2587
  br label %do.body, !dbg !2995

do.body:                                          ; preds = %if.end
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !2996
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !2996
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !839, metadata !1945), !dbg !2998
  %8 = load %struct._object*, %struct._object** %num, align 8, !dbg !2999, !tbaa !1941
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !2998, !tbaa !1941
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3000, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !3002
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !3003, !tbaa !1961
  %dec = add i64 %10, -1, !dbg !3003
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3003, !tbaa !1961
  %cmp2 = icmp ne i64 %dec, 0, !dbg !3004
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !3005

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !3006

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3008, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !3010
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3010, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !3011
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3011, !tbaa !1997
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3012, !tbaa !1941
  call void %13(%struct._object* %14), !dbg !3013
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3014
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !3014
  br label %do.cond, !dbg !3016

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !3017

do.end:                                           ; preds = %do.cond
  %16 = load i64, i64* %value, align 8, !dbg !3019, !tbaa !2587
  %cmp5 = icmp eq i64 %16, -1, !dbg !3021
  br i1 %cmp5, label %land.lhs.true, label %if.end.8, !dbg !3022

land.lhs.true:                                    ; preds = %do.end
  %call6 = call %struct._object* @PyErr_Occurred(), !dbg !3023
  %tobool = icmp ne %struct._object* %call6, null, !dbg !3023
  br i1 %tobool, label %if.then.7, label %if.end.8, !dbg !3025

if.then.7:                                        ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !3026
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3026

if.end.8:                                         ; preds = %land.lhs.true, %do.end
  %17 = load i64, i64* %value, align 8, !dbg !3027, !tbaa !2587
  %cmp9 = icmp ne i64 %17, -1, !dbg !3029
  br i1 %cmp9, label %if.then.10, label %if.end.12, !dbg !3030

if.then.10:                                       ; preds = %if.end.8
  %call11 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.164, i32 0, i32 0)), !dbg !3031
  store %struct._object* %call11, %struct._object** %retval, !dbg !3032
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3032

if.end.12:                                        ; preds = %if.end.8
  %18 = load i32, i32* %overflow, align 4, !dbg !3033, !tbaa !1971
  %cmp13 = icmp ne i32 %18, 1, !dbg !3035
  br i1 %cmp13, label %if.then.14, label %if.end.16, !dbg !3036

if.then.14:                                       ; preds = %if.end.12
  %call15 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.165, i32 0, i32 0)), !dbg !3037
  store %struct._object* %call15, %struct._object** %retval, !dbg !3038
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3038

if.end.16:                                        ; preds = %if.end.12
  %call17 = call %struct._object* @PyLong_FromLong(i64 9223372036854775807), !dbg !3039
  store %struct._object* %call17, %struct._object** %num, align 8, !dbg !3040, !tbaa !1941
  %19 = load %struct._object*, %struct._object** %num, align 8, !dbg !3041, !tbaa !1941
  %cmp18 = icmp eq %struct._object* %19, null, !dbg !3043
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !3044

if.then.19:                                       ; preds = %if.end.16
  store %struct._object* null, %struct._object** %retval, !dbg !3045
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3045

if.end.20:                                        ; preds = %if.end.16
  %call21 = call %struct._object* @PyLong_FromLong(i64 1), !dbg !3046
  store %struct._object* %call21, %struct._object** %one, align 8, !dbg !3047, !tbaa !1941
  %20 = load %struct._object*, %struct._object** %one, align 8, !dbg !3048, !tbaa !1941
  %cmp22 = icmp eq %struct._object* %20, null, !dbg !3049
  br i1 %cmp22, label %if.then.23, label %if.end.36, !dbg !3050

if.then.23:                                       ; preds = %if.end.20
  br label %do.body.24, !dbg !3051

do.body.24:                                       ; preds = %if.then.23
  %21 = bitcast %struct._object** %_py_decref_tmp25 to i8*, !dbg !3052
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !3052
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp25, metadata !841, metadata !1945), !dbg !3054
  %22 = load %struct._object*, %struct._object** %num, align 8, !dbg !3055, !tbaa !1941
  store %struct._object* %22, %struct._object** %_py_decref_tmp25, align 8, !dbg !3054, !tbaa !1941
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !3056, !tbaa !1941
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !3058
  %24 = load i64, i64* %ob_refcnt26, align 8, !dbg !3059, !tbaa !1961
  %dec27 = add i64 %24, -1, !dbg !3059
  store i64 %dec27, i64* %ob_refcnt26, align 8, !dbg !3059, !tbaa !1961
  %cmp28 = icmp ne i64 %dec27, 0, !dbg !3060
  br i1 %cmp28, label %if.then.29, label %if.else.30, !dbg !3061

if.then.29:                                       ; preds = %do.body.24
  br label %if.end.33, !dbg !3062

if.else.30:                                       ; preds = %do.body.24
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !3064, !tbaa !1941
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !3066
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8, !dbg !3066, !tbaa !1995
  %tp_dealloc32 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !3067
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc32, align 8, !dbg !3067, !tbaa !1997
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !3068, !tbaa !1941
  call void %27(%struct._object* %28), !dbg !3069
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.30, %if.then.29
  %29 = bitcast %struct._object** %_py_decref_tmp25 to i8*, !dbg !3070
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !3070
  br label %do.cond.34, !dbg !3072

do.cond.34:                                       ; preds = %if.end.33
  br label %do.end.35, !dbg !3073

do.end.35:                                        ; preds = %do.cond.34
  store %struct._object* null, %struct._object** %retval, !dbg !3075
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3075

if.end.36:                                        ; preds = %if.end.20
  %30 = load %struct._object*, %struct._object** %num, align 8, !dbg !3076, !tbaa !1941
  %31 = load %struct._object*, %struct._object** %one, align 8, !dbg !3077, !tbaa !1941
  %call37 = call %struct._object* @PyNumber_Add(%struct._object* %30, %struct._object* %31), !dbg !3078
  store %struct._object* %call37, %struct._object** %temp, align 8, !dbg !3079, !tbaa !1941
  br label %do.body.38, !dbg !3080

do.body.38:                                       ; preds = %if.end.36
  %32 = bitcast %struct._object** %_py_decref_tmp39 to i8*, !dbg !3081
  call void @llvm.lifetime.start(i64 8, i8* %32) #2, !dbg !3081
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp39, metadata !845, metadata !1945), !dbg !3083
  %33 = load %struct._object*, %struct._object** %one, align 8, !dbg !3084, !tbaa !1941
  store %struct._object* %33, %struct._object** %_py_decref_tmp39, align 8, !dbg !3083, !tbaa !1941
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !3085, !tbaa !1941
  %ob_refcnt40 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0, !dbg !3087
  %35 = load i64, i64* %ob_refcnt40, align 8, !dbg !3088, !tbaa !1961
  %dec41 = add i64 %35, -1, !dbg !3088
  store i64 %dec41, i64* %ob_refcnt40, align 8, !dbg !3088, !tbaa !1961
  %cmp42 = icmp ne i64 %dec41, 0, !dbg !3089
  br i1 %cmp42, label %if.then.43, label %if.else.44, !dbg !3090

if.then.43:                                       ; preds = %do.body.38
  br label %if.end.47, !dbg !3091

if.else.44:                                       ; preds = %do.body.38
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !3093, !tbaa !1941
  %ob_type45 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !3095
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type45, align 8, !dbg !3095, !tbaa !1995
  %tp_dealloc46 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 4, !dbg !3096
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc46, align 8, !dbg !3096, !tbaa !1997
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !3097, !tbaa !1941
  call void %38(%struct._object* %39), !dbg !3098
  br label %if.end.47

if.end.47:                                        ; preds = %if.else.44, %if.then.43
  %40 = bitcast %struct._object** %_py_decref_tmp39 to i8*, !dbg !3099
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !3099
  br label %do.cond.48, !dbg !3100

do.cond.48:                                       ; preds = %if.end.47
  br label %do.end.49, !dbg !3101

do.end.49:                                        ; preds = %do.cond.48
  br label %do.body.50, !dbg !3103

do.body.50:                                       ; preds = %do.end.49
  %41 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !3104
  call void @llvm.lifetime.start(i64 8, i8* %41) #2, !dbg !3104
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp51, metadata !847, metadata !1945), !dbg !3106
  %42 = load %struct._object*, %struct._object** %num, align 8, !dbg !3107, !tbaa !1941
  store %struct._object* %42, %struct._object** %_py_decref_tmp51, align 8, !dbg !3106, !tbaa !1941
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !3108, !tbaa !1941
  %ob_refcnt52 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 0, !dbg !3110
  %44 = load i64, i64* %ob_refcnt52, align 8, !dbg !3111, !tbaa !1961
  %dec53 = add i64 %44, -1, !dbg !3111
  store i64 %dec53, i64* %ob_refcnt52, align 8, !dbg !3111, !tbaa !1961
  %cmp54 = icmp ne i64 %dec53, 0, !dbg !3112
  br i1 %cmp54, label %if.then.55, label %if.else.56, !dbg !3113

if.then.55:                                       ; preds = %do.body.50
  br label %if.end.59, !dbg !3114

if.else.56:                                       ; preds = %do.body.50
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !3116, !tbaa !1941
  %ob_type57 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !3118
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type57, align 8, !dbg !3118, !tbaa !1995
  %tp_dealloc58 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 4, !dbg !3119
  %47 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc58, align 8, !dbg !3119, !tbaa !1997
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !3120, !tbaa !1941
  call void %47(%struct._object* %48), !dbg !3121
  br label %if.end.59

if.end.59:                                        ; preds = %if.else.56, %if.then.55
  %49 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !3122
  call void @llvm.lifetime.end(i64 8, i8* %49) #2, !dbg !3122
  br label %do.cond.60, !dbg !3123

do.cond.60:                                       ; preds = %if.end.59
  br label %do.end.61, !dbg !3124

do.end.61:                                        ; preds = %do.cond.60
  %50 = load %struct._object*, %struct._object** %temp, align 8, !dbg !3126, !tbaa !1941
  store %struct._object* %50, %struct._object** %num, align 8, !dbg !3127, !tbaa !1941
  %51 = load %struct._object*, %struct._object** %num, align 8, !dbg !3128, !tbaa !1941
  %cmp62 = icmp eq %struct._object* %51, null, !dbg !3130
  br i1 %cmp62, label %if.then.63, label %if.end.64, !dbg !3131

if.then.63:                                       ; preds = %do.end.61
  store %struct._object* null, %struct._object** %retval, !dbg !3132
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3132

if.end.64:                                        ; preds = %do.end.61
  store i32 0, i32* %overflow, align 4, !dbg !3133, !tbaa !1971
  %52 = load %struct._object*, %struct._object** %num, align 8, !dbg !3134, !tbaa !1941
  %call65 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %52, i32* %overflow), !dbg !3135
  store i64 %call65, i64* %value, align 8, !dbg !3136, !tbaa !2587
  br label %do.body.66, !dbg !3137

do.body.66:                                       ; preds = %if.end.64
  %53 = bitcast %struct._object** %_py_decref_tmp67 to i8*, !dbg !3138
  call void @llvm.lifetime.start(i64 8, i8* %53) #2, !dbg !3138
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp67, metadata !849, metadata !1945), !dbg !3140
  %54 = load %struct._object*, %struct._object** %num, align 8, !dbg !3141, !tbaa !1941
  store %struct._object* %54, %struct._object** %_py_decref_tmp67, align 8, !dbg !3140, !tbaa !1941
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8, !dbg !3142, !tbaa !1941
  %ob_refcnt68 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 0, !dbg !3144
  %56 = load i64, i64* %ob_refcnt68, align 8, !dbg !3145, !tbaa !1961
  %dec69 = add i64 %56, -1, !dbg !3145
  store i64 %dec69, i64* %ob_refcnt68, align 8, !dbg !3145, !tbaa !1961
  %cmp70 = icmp ne i64 %dec69, 0, !dbg !3146
  br i1 %cmp70, label %if.then.71, label %if.else.72, !dbg !3147

if.then.71:                                       ; preds = %do.body.66
  br label %if.end.75, !dbg !3148

if.else.72:                                       ; preds = %do.body.66
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8, !dbg !3150, !tbaa !1941
  %ob_type73 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 1, !dbg !3152
  %58 = load %struct._typeobject*, %struct._typeobject** %ob_type73, align 8, !dbg !3152, !tbaa !1995
  %tp_dealloc74 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %58, i32 0, i32 4, !dbg !3153
  %59 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc74, align 8, !dbg !3153, !tbaa !1997
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8, !dbg !3154, !tbaa !1941
  call void %59(%struct._object* %60), !dbg !3155
  br label %if.end.75

if.end.75:                                        ; preds = %if.else.72, %if.then.71
  %61 = bitcast %struct._object** %_py_decref_tmp67 to i8*, !dbg !3156
  call void @llvm.lifetime.end(i64 8, i8* %61) #2, !dbg !3156
  br label %do.cond.76, !dbg !3157

do.cond.76:                                       ; preds = %if.end.75
  br label %do.end.77, !dbg !3158

do.end.77:                                        ; preds = %do.cond.76
  %62 = load i64, i64* %value, align 8, !dbg !3160, !tbaa !2587
  %cmp78 = icmp eq i64 %62, -1, !dbg !3162
  br i1 %cmp78, label %land.lhs.true.79, label %if.end.83, !dbg !3163

land.lhs.true.79:                                 ; preds = %do.end.77
  %call80 = call %struct._object* @PyErr_Occurred(), !dbg !3164
  %tobool81 = icmp ne %struct._object* %call80, null, !dbg !3164
  br i1 %tobool81, label %if.then.82, label %if.end.83, !dbg !3166

if.then.82:                                       ; preds = %land.lhs.true.79
  store %struct._object* null, %struct._object** %retval, !dbg !3167
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3167

if.end.83:                                        ; preds = %land.lhs.true.79, %do.end.77
  %63 = load i64, i64* %value, align 8, !dbg !3168, !tbaa !2587
  %cmp84 = icmp ne i64 %63, -1, !dbg !3170
  br i1 %cmp84, label %if.then.85, label %if.end.87, !dbg !3171

if.then.85:                                       ; preds = %if.end.83
  %call86 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.164, i32 0, i32 0)), !dbg !3172
  store %struct._object* %call86, %struct._object** %retval, !dbg !3173
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3173

if.end.87:                                        ; preds = %if.end.83
  %64 = load i32, i32* %overflow, align 4, !dbg !3174, !tbaa !1971
  %cmp88 = icmp ne i32 %64, 1, !dbg !3176
  br i1 %cmp88, label %if.then.89, label %if.end.91, !dbg !3177

if.then.89:                                       ; preds = %if.end.87
  %call90 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.165, i32 0, i32 0)), !dbg !3178
  store %struct._object* %call90, %struct._object** %retval, !dbg !3179
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3179

if.end.91:                                        ; preds = %if.end.87
  %call92 = call %struct._object* @PyLong_FromString(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.166, i32 0, i32 0), i8** null, i32 16), !dbg !3180
  store %struct._object* %call92, %struct._object** %num, align 8, !dbg !3181, !tbaa !1941
  %65 = load %struct._object*, %struct._object** %num, align 8, !dbg !3182, !tbaa !1941
  %cmp93 = icmp eq %struct._object* %65, null, !dbg !3184
  br i1 %cmp93, label %if.then.94, label %if.end.95, !dbg !3185

if.then.94:                                       ; preds = %if.end.91
  store %struct._object* null, %struct._object** %retval, !dbg !3186
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3186

if.end.95:                                        ; preds = %if.end.91
  store i32 1234, i32* %overflow, align 4, !dbg !3187, !tbaa !1971
  %66 = load %struct._object*, %struct._object** %num, align 8, !dbg !3188, !tbaa !1941
  %call96 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %66, i32* %overflow), !dbg !3189
  store i64 %call96, i64* %value, align 8, !dbg !3190, !tbaa !2587
  br label %do.body.97, !dbg !3191

do.body.97:                                       ; preds = %if.end.95
  %67 = bitcast %struct._object** %_py_decref_tmp98 to i8*, !dbg !3192
  call void @llvm.lifetime.start(i64 8, i8* %67) #2, !dbg !3192
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp98, metadata !851, metadata !1945), !dbg !3194
  %68 = load %struct._object*, %struct._object** %num, align 8, !dbg !3195, !tbaa !1941
  store %struct._object* %68, %struct._object** %_py_decref_tmp98, align 8, !dbg !3194, !tbaa !1941
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8, !dbg !3196, !tbaa !1941
  %ob_refcnt99 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0, !dbg !3198
  %70 = load i64, i64* %ob_refcnt99, align 8, !dbg !3199, !tbaa !1961
  %dec100 = add i64 %70, -1, !dbg !3199
  store i64 %dec100, i64* %ob_refcnt99, align 8, !dbg !3199, !tbaa !1961
  %cmp101 = icmp ne i64 %dec100, 0, !dbg !3200
  br i1 %cmp101, label %if.then.102, label %if.else.103, !dbg !3201

if.then.102:                                      ; preds = %do.body.97
  br label %if.end.106, !dbg !3202

if.else.103:                                      ; preds = %do.body.97
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8, !dbg !3204, !tbaa !1941
  %ob_type104 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1, !dbg !3206
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type104, align 8, !dbg !3206, !tbaa !1995
  %tp_dealloc105 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4, !dbg !3207
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc105, align 8, !dbg !3207, !tbaa !1997
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8, !dbg !3208, !tbaa !1941
  call void %73(%struct._object* %74), !dbg !3209
  br label %if.end.106

if.end.106:                                       ; preds = %if.else.103, %if.then.102
  %75 = bitcast %struct._object** %_py_decref_tmp98 to i8*, !dbg !3210
  call void @llvm.lifetime.end(i64 8, i8* %75) #2, !dbg !3210
  br label %do.cond.107, !dbg !3211

do.cond.107:                                      ; preds = %if.end.106
  br label %do.end.108, !dbg !3212

do.end.108:                                       ; preds = %do.cond.107
  %76 = load i64, i64* %value, align 8, !dbg !3214, !tbaa !2587
  %cmp109 = icmp eq i64 %76, -1, !dbg !3216
  br i1 %cmp109, label %land.lhs.true.110, label %if.end.114, !dbg !3217

land.lhs.true.110:                                ; preds = %do.end.108
  %call111 = call %struct._object* @PyErr_Occurred(), !dbg !3218
  %tobool112 = icmp ne %struct._object* %call111, null, !dbg !3218
  br i1 %tobool112, label %if.then.113, label %if.end.114, !dbg !3220

if.then.113:                                      ; preds = %land.lhs.true.110
  store %struct._object* null, %struct._object** %retval, !dbg !3221
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3221

if.end.114:                                       ; preds = %land.lhs.true.110, %do.end.108
  %77 = load i64, i64* %value, align 8, !dbg !3222, !tbaa !2587
  %cmp115 = icmp ne i64 %77, -1, !dbg !3224
  br i1 %cmp115, label %if.then.116, label %if.end.118, !dbg !3225

if.then.116:                                      ; preds = %if.end.114
  %call117 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.164, i32 0, i32 0)), !dbg !3226
  store %struct._object* %call117, %struct._object** %retval, !dbg !3227
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3227

if.end.118:                                       ; preds = %if.end.114
  %78 = load i32, i32* %overflow, align 4, !dbg !3228, !tbaa !1971
  %cmp119 = icmp ne i32 %78, -1, !dbg !3230
  br i1 %cmp119, label %if.then.120, label %if.end.122, !dbg !3231

if.then.120:                                      ; preds = %if.end.118
  %call121 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.167, i32 0, i32 0)), !dbg !3232
  store %struct._object* %call121, %struct._object** %retval, !dbg !3233
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3233

if.end.122:                                       ; preds = %if.end.118
  %call123 = call %struct._object* @PyLong_FromLong(i64 -9223372036854775808), !dbg !3234
  store %struct._object* %call123, %struct._object** %num, align 8, !dbg !3235, !tbaa !1941
  %79 = load %struct._object*, %struct._object** %num, align 8, !dbg !3236, !tbaa !1941
  %cmp124 = icmp eq %struct._object* %79, null, !dbg !3238
  br i1 %cmp124, label %if.then.125, label %if.end.126, !dbg !3239

if.then.125:                                      ; preds = %if.end.122
  store %struct._object* null, %struct._object** %retval, !dbg !3240
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3240

if.end.126:                                       ; preds = %if.end.122
  %call127 = call %struct._object* @PyLong_FromLong(i64 1), !dbg !3241
  store %struct._object* %call127, %struct._object** %one, align 8, !dbg !3242, !tbaa !1941
  %80 = load %struct._object*, %struct._object** %one, align 8, !dbg !3243, !tbaa !1941
  %cmp128 = icmp eq %struct._object* %80, null, !dbg !3244
  br i1 %cmp128, label %if.then.129, label %if.end.142, !dbg !3245

if.then.129:                                      ; preds = %if.end.126
  br label %do.body.130, !dbg !3246

do.body.130:                                      ; preds = %if.then.129
  %81 = bitcast %struct._object** %_py_decref_tmp131 to i8*, !dbg !3247
  call void @llvm.lifetime.start(i64 8, i8* %81) #2, !dbg !3247
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp131, metadata !853, metadata !1945), !dbg !3249
  %82 = load %struct._object*, %struct._object** %num, align 8, !dbg !3250, !tbaa !1941
  store %struct._object* %82, %struct._object** %_py_decref_tmp131, align 8, !dbg !3249, !tbaa !1941
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp131, align 8, !dbg !3251, !tbaa !1941
  %ob_refcnt132 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 0, !dbg !3253
  %84 = load i64, i64* %ob_refcnt132, align 8, !dbg !3254, !tbaa !1961
  %dec133 = add i64 %84, -1, !dbg !3254
  store i64 %dec133, i64* %ob_refcnt132, align 8, !dbg !3254, !tbaa !1961
  %cmp134 = icmp ne i64 %dec133, 0, !dbg !3255
  br i1 %cmp134, label %if.then.135, label %if.else.136, !dbg !3256

if.then.135:                                      ; preds = %do.body.130
  br label %if.end.139, !dbg !3257

if.else.136:                                      ; preds = %do.body.130
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp131, align 8, !dbg !3259, !tbaa !1941
  %ob_type137 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 1, !dbg !3261
  %86 = load %struct._typeobject*, %struct._typeobject** %ob_type137, align 8, !dbg !3261, !tbaa !1995
  %tp_dealloc138 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %86, i32 0, i32 4, !dbg !3262
  %87 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc138, align 8, !dbg !3262, !tbaa !1997
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp131, align 8, !dbg !3263, !tbaa !1941
  call void %87(%struct._object* %88), !dbg !3264
  br label %if.end.139

if.end.139:                                       ; preds = %if.else.136, %if.then.135
  %89 = bitcast %struct._object** %_py_decref_tmp131 to i8*, !dbg !3265
  call void @llvm.lifetime.end(i64 8, i8* %89) #2, !dbg !3265
  br label %do.cond.140, !dbg !3267

do.cond.140:                                      ; preds = %if.end.139
  br label %do.end.141, !dbg !3268

do.end.141:                                       ; preds = %do.cond.140
  store %struct._object* null, %struct._object** %retval, !dbg !3270
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3270

if.end.142:                                       ; preds = %if.end.126
  %90 = load %struct._object*, %struct._object** %num, align 8, !dbg !3271, !tbaa !1941
  %91 = load %struct._object*, %struct._object** %one, align 8, !dbg !3272, !tbaa !1941
  %call143 = call %struct._object* @PyNumber_Subtract(%struct._object* %90, %struct._object* %91), !dbg !3273
  store %struct._object* %call143, %struct._object** %temp, align 8, !dbg !3274, !tbaa !1941
  br label %do.body.144, !dbg !3275

do.body.144:                                      ; preds = %if.end.142
  %92 = bitcast %struct._object** %_py_decref_tmp145 to i8*, !dbg !3276
  call void @llvm.lifetime.start(i64 8, i8* %92) #2, !dbg !3276
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp145, metadata !857, metadata !1945), !dbg !3278
  %93 = load %struct._object*, %struct._object** %one, align 8, !dbg !3279, !tbaa !1941
  store %struct._object* %93, %struct._object** %_py_decref_tmp145, align 8, !dbg !3278, !tbaa !1941
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp145, align 8, !dbg !3280, !tbaa !1941
  %ob_refcnt146 = getelementptr inbounds %struct._object, %struct._object* %94, i32 0, i32 0, !dbg !3282
  %95 = load i64, i64* %ob_refcnt146, align 8, !dbg !3283, !tbaa !1961
  %dec147 = add i64 %95, -1, !dbg !3283
  store i64 %dec147, i64* %ob_refcnt146, align 8, !dbg !3283, !tbaa !1961
  %cmp148 = icmp ne i64 %dec147, 0, !dbg !3284
  br i1 %cmp148, label %if.then.149, label %if.else.150, !dbg !3285

if.then.149:                                      ; preds = %do.body.144
  br label %if.end.153, !dbg !3286

if.else.150:                                      ; preds = %do.body.144
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp145, align 8, !dbg !3288, !tbaa !1941
  %ob_type151 = getelementptr inbounds %struct._object, %struct._object* %96, i32 0, i32 1, !dbg !3290
  %97 = load %struct._typeobject*, %struct._typeobject** %ob_type151, align 8, !dbg !3290, !tbaa !1995
  %tp_dealloc152 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %97, i32 0, i32 4, !dbg !3291
  %98 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc152, align 8, !dbg !3291, !tbaa !1997
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp145, align 8, !dbg !3292, !tbaa !1941
  call void %98(%struct._object* %99), !dbg !3293
  br label %if.end.153

if.end.153:                                       ; preds = %if.else.150, %if.then.149
  %100 = bitcast %struct._object** %_py_decref_tmp145 to i8*, !dbg !3294
  call void @llvm.lifetime.end(i64 8, i8* %100) #2, !dbg !3294
  br label %do.cond.154, !dbg !3295

do.cond.154:                                      ; preds = %if.end.153
  br label %do.end.155, !dbg !3296

do.end.155:                                       ; preds = %do.cond.154
  br label %do.body.156, !dbg !3298

do.body.156:                                      ; preds = %do.end.155
  %101 = bitcast %struct._object** %_py_decref_tmp157 to i8*, !dbg !3299
  call void @llvm.lifetime.start(i64 8, i8* %101) #2, !dbg !3299
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp157, metadata !859, metadata !1945), !dbg !3301
  %102 = load %struct._object*, %struct._object** %num, align 8, !dbg !3302, !tbaa !1941
  store %struct._object* %102, %struct._object** %_py_decref_tmp157, align 8, !dbg !3301, !tbaa !1941
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8, !dbg !3303, !tbaa !1941
  %ob_refcnt158 = getelementptr inbounds %struct._object, %struct._object* %103, i32 0, i32 0, !dbg !3305
  %104 = load i64, i64* %ob_refcnt158, align 8, !dbg !3306, !tbaa !1961
  %dec159 = add i64 %104, -1, !dbg !3306
  store i64 %dec159, i64* %ob_refcnt158, align 8, !dbg !3306, !tbaa !1961
  %cmp160 = icmp ne i64 %dec159, 0, !dbg !3307
  br i1 %cmp160, label %if.then.161, label %if.else.162, !dbg !3308

if.then.161:                                      ; preds = %do.body.156
  br label %if.end.165, !dbg !3309

if.else.162:                                      ; preds = %do.body.156
  %105 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8, !dbg !3311, !tbaa !1941
  %ob_type163 = getelementptr inbounds %struct._object, %struct._object* %105, i32 0, i32 1, !dbg !3313
  %106 = load %struct._typeobject*, %struct._typeobject** %ob_type163, align 8, !dbg !3313, !tbaa !1995
  %tp_dealloc164 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %106, i32 0, i32 4, !dbg !3314
  %107 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc164, align 8, !dbg !3314, !tbaa !1997
  %108 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8, !dbg !3315, !tbaa !1941
  call void %107(%struct._object* %108), !dbg !3316
  br label %if.end.165

if.end.165:                                       ; preds = %if.else.162, %if.then.161
  %109 = bitcast %struct._object** %_py_decref_tmp157 to i8*, !dbg !3317
  call void @llvm.lifetime.end(i64 8, i8* %109) #2, !dbg !3317
  br label %do.cond.166, !dbg !3318

do.cond.166:                                      ; preds = %if.end.165
  br label %do.end.167, !dbg !3319

do.end.167:                                       ; preds = %do.cond.166
  %110 = load %struct._object*, %struct._object** %temp, align 8, !dbg !3321, !tbaa !1941
  store %struct._object* %110, %struct._object** %num, align 8, !dbg !3322, !tbaa !1941
  %111 = load %struct._object*, %struct._object** %num, align 8, !dbg !3323, !tbaa !1941
  %cmp168 = icmp eq %struct._object* %111, null, !dbg !3325
  br i1 %cmp168, label %if.then.169, label %if.end.170, !dbg !3326

if.then.169:                                      ; preds = %do.end.167
  store %struct._object* null, %struct._object** %retval, !dbg !3327
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3327

if.end.170:                                       ; preds = %do.end.167
  store i32 0, i32* %overflow, align 4, !dbg !3328, !tbaa !1971
  %112 = load %struct._object*, %struct._object** %num, align 8, !dbg !3329, !tbaa !1941
  %call171 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %112, i32* %overflow), !dbg !3330
  store i64 %call171, i64* %value, align 8, !dbg !3331, !tbaa !2587
  br label %do.body.172, !dbg !3332

do.body.172:                                      ; preds = %if.end.170
  %113 = bitcast %struct._object** %_py_decref_tmp173 to i8*, !dbg !3333
  call void @llvm.lifetime.start(i64 8, i8* %113) #2, !dbg !3333
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp173, metadata !861, metadata !1945), !dbg !3335
  %114 = load %struct._object*, %struct._object** %num, align 8, !dbg !3336, !tbaa !1941
  store %struct._object* %114, %struct._object** %_py_decref_tmp173, align 8, !dbg !3335, !tbaa !1941
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp173, align 8, !dbg !3337, !tbaa !1941
  %ob_refcnt174 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 0, !dbg !3339
  %116 = load i64, i64* %ob_refcnt174, align 8, !dbg !3340, !tbaa !1961
  %dec175 = add i64 %116, -1, !dbg !3340
  store i64 %dec175, i64* %ob_refcnt174, align 8, !dbg !3340, !tbaa !1961
  %cmp176 = icmp ne i64 %dec175, 0, !dbg !3341
  br i1 %cmp176, label %if.then.177, label %if.else.178, !dbg !3342

if.then.177:                                      ; preds = %do.body.172
  br label %if.end.181, !dbg !3343

if.else.178:                                      ; preds = %do.body.172
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp173, align 8, !dbg !3345, !tbaa !1941
  %ob_type179 = getelementptr inbounds %struct._object, %struct._object* %117, i32 0, i32 1, !dbg !3347
  %118 = load %struct._typeobject*, %struct._typeobject** %ob_type179, align 8, !dbg !3347, !tbaa !1995
  %tp_dealloc180 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %118, i32 0, i32 4, !dbg !3348
  %119 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc180, align 8, !dbg !3348, !tbaa !1997
  %120 = load %struct._object*, %struct._object** %_py_decref_tmp173, align 8, !dbg !3349, !tbaa !1941
  call void %119(%struct._object* %120), !dbg !3350
  br label %if.end.181

if.end.181:                                       ; preds = %if.else.178, %if.then.177
  %121 = bitcast %struct._object** %_py_decref_tmp173 to i8*, !dbg !3351
  call void @llvm.lifetime.end(i64 8, i8* %121) #2, !dbg !3351
  br label %do.cond.182, !dbg !3352

do.cond.182:                                      ; preds = %if.end.181
  br label %do.end.183, !dbg !3353

do.end.183:                                       ; preds = %do.cond.182
  %122 = load i64, i64* %value, align 8, !dbg !3355, !tbaa !2587
  %cmp184 = icmp eq i64 %122, -1, !dbg !3357
  br i1 %cmp184, label %land.lhs.true.185, label %if.end.189, !dbg !3358

land.lhs.true.185:                                ; preds = %do.end.183
  %call186 = call %struct._object* @PyErr_Occurred(), !dbg !3359
  %tobool187 = icmp ne %struct._object* %call186, null, !dbg !3359
  br i1 %tobool187, label %if.then.188, label %if.end.189, !dbg !3361

if.then.188:                                      ; preds = %land.lhs.true.185
  store %struct._object* null, %struct._object** %retval, !dbg !3362
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3362

if.end.189:                                       ; preds = %land.lhs.true.185, %do.end.183
  %123 = load i64, i64* %value, align 8, !dbg !3363, !tbaa !2587
  %cmp190 = icmp ne i64 %123, -1, !dbg !3365
  br i1 %cmp190, label %if.then.191, label %if.end.193, !dbg !3366

if.then.191:                                      ; preds = %if.end.189
  %call192 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.164, i32 0, i32 0)), !dbg !3367
  store %struct._object* %call192, %struct._object** %retval, !dbg !3368
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3368

if.end.193:                                       ; preds = %if.end.189
  %124 = load i32, i32* %overflow, align 4, !dbg !3369, !tbaa !1971
  %cmp194 = icmp ne i32 %124, -1, !dbg !3371
  br i1 %cmp194, label %if.then.195, label %if.end.197, !dbg !3372

if.then.195:                                      ; preds = %if.end.193
  %call196 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.167, i32 0, i32 0)), !dbg !3373
  store %struct._object* %call196, %struct._object** %retval, !dbg !3374
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3374

if.end.197:                                       ; preds = %if.end.193
  %call198 = call %struct._object* @PyLong_FromString(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.168, i32 0, i32 0), i8** null, i32 16), !dbg !3375
  store %struct._object* %call198, %struct._object** %num, align 8, !dbg !3376, !tbaa !1941
  %125 = load %struct._object*, %struct._object** %num, align 8, !dbg !3377, !tbaa !1941
  %cmp199 = icmp eq %struct._object* %125, null, !dbg !3379
  br i1 %cmp199, label %if.then.200, label %if.end.201, !dbg !3380

if.then.200:                                      ; preds = %if.end.197
  store %struct._object* null, %struct._object** %retval, !dbg !3381
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3381

if.end.201:                                       ; preds = %if.end.197
  store i32 1234, i32* %overflow, align 4, !dbg !3382, !tbaa !1971
  %126 = load %struct._object*, %struct._object** %num, align 8, !dbg !3383, !tbaa !1941
  %call202 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %126, i32* %overflow), !dbg !3384
  store i64 %call202, i64* %value, align 8, !dbg !3385, !tbaa !2587
  br label %do.body.203, !dbg !3386

do.body.203:                                      ; preds = %if.end.201
  %127 = bitcast %struct._object** %_py_decref_tmp204 to i8*, !dbg !3387
  call void @llvm.lifetime.start(i64 8, i8* %127) #2, !dbg !3387
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp204, metadata !863, metadata !1945), !dbg !3389
  %128 = load %struct._object*, %struct._object** %num, align 8, !dbg !3390, !tbaa !1941
  store %struct._object* %128, %struct._object** %_py_decref_tmp204, align 8, !dbg !3389, !tbaa !1941
  %129 = load %struct._object*, %struct._object** %_py_decref_tmp204, align 8, !dbg !3391, !tbaa !1941
  %ob_refcnt205 = getelementptr inbounds %struct._object, %struct._object* %129, i32 0, i32 0, !dbg !3393
  %130 = load i64, i64* %ob_refcnt205, align 8, !dbg !3394, !tbaa !1961
  %dec206 = add i64 %130, -1, !dbg !3394
  store i64 %dec206, i64* %ob_refcnt205, align 8, !dbg !3394, !tbaa !1961
  %cmp207 = icmp ne i64 %dec206, 0, !dbg !3395
  br i1 %cmp207, label %if.then.208, label %if.else.209, !dbg !3396

if.then.208:                                      ; preds = %do.body.203
  br label %if.end.212, !dbg !3397

if.else.209:                                      ; preds = %do.body.203
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp204, align 8, !dbg !3399, !tbaa !1941
  %ob_type210 = getelementptr inbounds %struct._object, %struct._object* %131, i32 0, i32 1, !dbg !3401
  %132 = load %struct._typeobject*, %struct._typeobject** %ob_type210, align 8, !dbg !3401, !tbaa !1995
  %tp_dealloc211 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %132, i32 0, i32 4, !dbg !3402
  %133 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc211, align 8, !dbg !3402, !tbaa !1997
  %134 = load %struct._object*, %struct._object** %_py_decref_tmp204, align 8, !dbg !3403, !tbaa !1941
  call void %133(%struct._object* %134), !dbg !3404
  br label %if.end.212

if.end.212:                                       ; preds = %if.else.209, %if.then.208
  %135 = bitcast %struct._object** %_py_decref_tmp204 to i8*, !dbg !3405
  call void @llvm.lifetime.end(i64 8, i8* %135) #2, !dbg !3405
  br label %do.cond.213, !dbg !3406

do.cond.213:                                      ; preds = %if.end.212
  br label %do.end.214, !dbg !3407

do.end.214:                                       ; preds = %do.cond.213
  %136 = load i64, i64* %value, align 8, !dbg !3409, !tbaa !2587
  %cmp215 = icmp eq i64 %136, -1, !dbg !3411
  br i1 %cmp215, label %land.lhs.true.216, label %if.end.220, !dbg !3412

land.lhs.true.216:                                ; preds = %do.end.214
  %call217 = call %struct._object* @PyErr_Occurred(), !dbg !3413
  %tobool218 = icmp ne %struct._object* %call217, null, !dbg !3413
  br i1 %tobool218, label %if.then.219, label %if.end.220, !dbg !3415

if.then.219:                                      ; preds = %land.lhs.true.216
  store %struct._object* null, %struct._object** %retval, !dbg !3416
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3416

if.end.220:                                       ; preds = %land.lhs.true.216, %do.end.214
  %137 = load i64, i64* %value, align 8, !dbg !3417, !tbaa !2587
  %cmp221 = icmp ne i64 %137, 255, !dbg !3419
  br i1 %cmp221, label %if.then.222, label %if.end.224, !dbg !3420

if.then.222:                                      ; preds = %if.end.220
  %call223 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.169, i32 0, i32 0)), !dbg !3421
  store %struct._object* %call223, %struct._object** %retval, !dbg !3422
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3422

if.end.224:                                       ; preds = %if.end.220
  %138 = load i32, i32* %overflow, align 4, !dbg !3423, !tbaa !1971
  %cmp225 = icmp ne i32 %138, 0, !dbg !3425
  br i1 %cmp225, label %if.then.226, label %if.end.228, !dbg !3426

if.then.226:                                      ; preds = %if.end.224
  %call227 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.170, i32 0, i32 0)), !dbg !3427
  store %struct._object* %call227, %struct._object** %retval, !dbg !3428
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3428

if.end.228:                                       ; preds = %if.end.224
  %call229 = call %struct._object* @PyLong_FromString(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i8** null, i32 16), !dbg !3429
  store %struct._object* %call229, %struct._object** %num, align 8, !dbg !3430, !tbaa !1941
  %139 = load %struct._object*, %struct._object** %num, align 8, !dbg !3431, !tbaa !1941
  %cmp230 = icmp eq %struct._object* %139, null, !dbg !3433
  br i1 %cmp230, label %if.then.231, label %if.end.232, !dbg !3434

if.then.231:                                      ; preds = %if.end.228
  store %struct._object* null, %struct._object** %retval, !dbg !3435
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3435

if.end.232:                                       ; preds = %if.end.228
  store i32 0, i32* %overflow, align 4, !dbg !3436, !tbaa !1971
  %140 = load %struct._object*, %struct._object** %num, align 8, !dbg !3437, !tbaa !1941
  %call233 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %140, i32* %overflow), !dbg !3438
  store i64 %call233, i64* %value, align 8, !dbg !3439, !tbaa !2587
  br label %do.body.234, !dbg !3440

do.body.234:                                      ; preds = %if.end.232
  %141 = bitcast %struct._object** %_py_decref_tmp235 to i8*, !dbg !3441
  call void @llvm.lifetime.start(i64 8, i8* %141) #2, !dbg !3441
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp235, metadata !865, metadata !1945), !dbg !3443
  %142 = load %struct._object*, %struct._object** %num, align 8, !dbg !3444, !tbaa !1941
  store %struct._object* %142, %struct._object** %_py_decref_tmp235, align 8, !dbg !3443, !tbaa !1941
  %143 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8, !dbg !3445, !tbaa !1941
  %ob_refcnt236 = getelementptr inbounds %struct._object, %struct._object* %143, i32 0, i32 0, !dbg !3447
  %144 = load i64, i64* %ob_refcnt236, align 8, !dbg !3448, !tbaa !1961
  %dec237 = add i64 %144, -1, !dbg !3448
  store i64 %dec237, i64* %ob_refcnt236, align 8, !dbg !3448, !tbaa !1961
  %cmp238 = icmp ne i64 %dec237, 0, !dbg !3449
  br i1 %cmp238, label %if.then.239, label %if.else.240, !dbg !3450

if.then.239:                                      ; preds = %do.body.234
  br label %if.end.243, !dbg !3451

if.else.240:                                      ; preds = %do.body.234
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8, !dbg !3453, !tbaa !1941
  %ob_type241 = getelementptr inbounds %struct._object, %struct._object* %145, i32 0, i32 1, !dbg !3455
  %146 = load %struct._typeobject*, %struct._typeobject** %ob_type241, align 8, !dbg !3455, !tbaa !1995
  %tp_dealloc242 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %146, i32 0, i32 4, !dbg !3456
  %147 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc242, align 8, !dbg !3456, !tbaa !1997
  %148 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8, !dbg !3457, !tbaa !1941
  call void %147(%struct._object* %148), !dbg !3458
  br label %if.end.243

if.end.243:                                       ; preds = %if.else.240, %if.then.239
  %149 = bitcast %struct._object** %_py_decref_tmp235 to i8*, !dbg !3459
  call void @llvm.lifetime.end(i64 8, i8* %149) #2, !dbg !3459
  br label %do.cond.244, !dbg !3460

do.cond.244:                                      ; preds = %if.end.243
  br label %do.end.245, !dbg !3461

do.end.245:                                       ; preds = %do.cond.244
  %150 = load i64, i64* %value, align 8, !dbg !3463, !tbaa !2587
  %cmp246 = icmp eq i64 %150, -1, !dbg !3465
  br i1 %cmp246, label %land.lhs.true.247, label %if.end.251, !dbg !3466

land.lhs.true.247:                                ; preds = %do.end.245
  %call248 = call %struct._object* @PyErr_Occurred(), !dbg !3467
  %tobool249 = icmp ne %struct._object* %call248, null, !dbg !3467
  br i1 %tobool249, label %if.then.250, label %if.end.251, !dbg !3469

if.then.250:                                      ; preds = %land.lhs.true.247
  store %struct._object* null, %struct._object** %retval, !dbg !3470
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3470

if.end.251:                                       ; preds = %land.lhs.true.247, %do.end.245
  %151 = load i64, i64* %value, align 8, !dbg !3471, !tbaa !2587
  %cmp252 = icmp ne i64 %151, -255, !dbg !3473
  br i1 %cmp252, label %if.then.253, label %if.end.255, !dbg !3474

if.then.253:                                      ; preds = %if.end.251
  %call254 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.169, i32 0, i32 0)), !dbg !3475
  store %struct._object* %call254, %struct._object** %retval, !dbg !3476
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3476

if.end.255:                                       ; preds = %if.end.251
  %152 = load i32, i32* %overflow, align 4, !dbg !3477, !tbaa !1971
  %cmp256 = icmp ne i32 %152, 0, !dbg !3479
  br i1 %cmp256, label %if.then.257, label %if.end.259, !dbg !3480

if.then.257:                                      ; preds = %if.end.255
  %call258 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.172, i32 0, i32 0)), !dbg !3481
  store %struct._object* %call258, %struct._object** %retval, !dbg !3482
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3482

if.end.259:                                       ; preds = %if.end.255
  %call260 = call %struct._object* @PyLong_FromLong(i64 9223372036854775807), !dbg !3483
  store %struct._object* %call260, %struct._object** %num, align 8, !dbg !3484, !tbaa !1941
  %153 = load %struct._object*, %struct._object** %num, align 8, !dbg !3485, !tbaa !1941
  %cmp261 = icmp eq %struct._object* %153, null, !dbg !3487
  br i1 %cmp261, label %if.then.262, label %if.end.263, !dbg !3488

if.then.262:                                      ; preds = %if.end.259
  store %struct._object* null, %struct._object** %retval, !dbg !3489
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3489

if.end.263:                                       ; preds = %if.end.259
  store i32 1234, i32* %overflow, align 4, !dbg !3490, !tbaa !1971
  %154 = load %struct._object*, %struct._object** %num, align 8, !dbg !3491, !tbaa !1941
  %call264 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %154, i32* %overflow), !dbg !3492
  store i64 %call264, i64* %value, align 8, !dbg !3493, !tbaa !2587
  br label %do.body.265, !dbg !3494

do.body.265:                                      ; preds = %if.end.263
  %155 = bitcast %struct._object** %_py_decref_tmp266 to i8*, !dbg !3495
  call void @llvm.lifetime.start(i64 8, i8* %155) #2, !dbg !3495
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp266, metadata !867, metadata !1945), !dbg !3497
  %156 = load %struct._object*, %struct._object** %num, align 8, !dbg !3498, !tbaa !1941
  store %struct._object* %156, %struct._object** %_py_decref_tmp266, align 8, !dbg !3497, !tbaa !1941
  %157 = load %struct._object*, %struct._object** %_py_decref_tmp266, align 8, !dbg !3499, !tbaa !1941
  %ob_refcnt267 = getelementptr inbounds %struct._object, %struct._object* %157, i32 0, i32 0, !dbg !3501
  %158 = load i64, i64* %ob_refcnt267, align 8, !dbg !3502, !tbaa !1961
  %dec268 = add i64 %158, -1, !dbg !3502
  store i64 %dec268, i64* %ob_refcnt267, align 8, !dbg !3502, !tbaa !1961
  %cmp269 = icmp ne i64 %dec268, 0, !dbg !3503
  br i1 %cmp269, label %if.then.270, label %if.else.271, !dbg !3504

if.then.270:                                      ; preds = %do.body.265
  br label %if.end.274, !dbg !3505

if.else.271:                                      ; preds = %do.body.265
  %159 = load %struct._object*, %struct._object** %_py_decref_tmp266, align 8, !dbg !3507, !tbaa !1941
  %ob_type272 = getelementptr inbounds %struct._object, %struct._object* %159, i32 0, i32 1, !dbg !3509
  %160 = load %struct._typeobject*, %struct._typeobject** %ob_type272, align 8, !dbg !3509, !tbaa !1995
  %tp_dealloc273 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %160, i32 0, i32 4, !dbg !3510
  %161 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc273, align 8, !dbg !3510, !tbaa !1997
  %162 = load %struct._object*, %struct._object** %_py_decref_tmp266, align 8, !dbg !3511, !tbaa !1941
  call void %161(%struct._object* %162), !dbg !3512
  br label %if.end.274

if.end.274:                                       ; preds = %if.else.271, %if.then.270
  %163 = bitcast %struct._object** %_py_decref_tmp266 to i8*, !dbg !3513
  call void @llvm.lifetime.end(i64 8, i8* %163) #2, !dbg !3513
  br label %do.cond.275, !dbg !3514

do.cond.275:                                      ; preds = %if.end.274
  br label %do.end.276, !dbg !3515

do.end.276:                                       ; preds = %do.cond.275
  %164 = load i64, i64* %value, align 8, !dbg !3517, !tbaa !2587
  %cmp277 = icmp eq i64 %164, -1, !dbg !3519
  br i1 %cmp277, label %land.lhs.true.278, label %if.end.282, !dbg !3520

land.lhs.true.278:                                ; preds = %do.end.276
  %call279 = call %struct._object* @PyErr_Occurred(), !dbg !3521
  %tobool280 = icmp ne %struct._object* %call279, null, !dbg !3521
  br i1 %tobool280, label %if.then.281, label %if.end.282, !dbg !3523

if.then.281:                                      ; preds = %land.lhs.true.278
  store %struct._object* null, %struct._object** %retval, !dbg !3524
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3524

if.end.282:                                       ; preds = %land.lhs.true.278, %do.end.276
  %165 = load i64, i64* %value, align 8, !dbg !3525, !tbaa !2587
  %cmp283 = icmp ne i64 %165, 9223372036854775807, !dbg !3527
  br i1 %cmp283, label %if.then.284, label %if.end.286, !dbg !3528

if.then.284:                                      ; preds = %if.end.282
  %call285 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.173, i32 0, i32 0)), !dbg !3529
  store %struct._object* %call285, %struct._object** %retval, !dbg !3530
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3530

if.end.286:                                       ; preds = %if.end.282
  %166 = load i32, i32* %overflow, align 4, !dbg !3531, !tbaa !1971
  %cmp287 = icmp ne i32 %166, 0, !dbg !3533
  br i1 %cmp287, label %if.then.288, label %if.end.290, !dbg !3534

if.then.288:                                      ; preds = %if.end.286
  %call289 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.170, i32 0, i32 0)), !dbg !3535
  store %struct._object* %call289, %struct._object** %retval, !dbg !3536
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3536

if.end.290:                                       ; preds = %if.end.286
  %call291 = call %struct._object* @PyLong_FromLong(i64 -9223372036854775808), !dbg !3537
  store %struct._object* %call291, %struct._object** %num, align 8, !dbg !3538, !tbaa !1941
  %167 = load %struct._object*, %struct._object** %num, align 8, !dbg !3539, !tbaa !1941
  %cmp292 = icmp eq %struct._object* %167, null, !dbg !3541
  br i1 %cmp292, label %if.then.293, label %if.end.294, !dbg !3542

if.then.293:                                      ; preds = %if.end.290
  store %struct._object* null, %struct._object** %retval, !dbg !3543
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3543

if.end.294:                                       ; preds = %if.end.290
  store i32 0, i32* %overflow, align 4, !dbg !3544, !tbaa !1971
  %168 = load %struct._object*, %struct._object** %num, align 8, !dbg !3545, !tbaa !1941
  %call295 = call i64 @PyLong_AsLongAndOverflow(%struct._object* %168, i32* %overflow), !dbg !3546
  store i64 %call295, i64* %value, align 8, !dbg !3547, !tbaa !2587
  br label %do.body.296, !dbg !3548

do.body.296:                                      ; preds = %if.end.294
  %169 = bitcast %struct._object** %_py_decref_tmp297 to i8*, !dbg !3549
  call void @llvm.lifetime.start(i64 8, i8* %169) #2, !dbg !3549
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp297, metadata !869, metadata !1945), !dbg !3551
  %170 = load %struct._object*, %struct._object** %num, align 8, !dbg !3552, !tbaa !1941
  store %struct._object* %170, %struct._object** %_py_decref_tmp297, align 8, !dbg !3551, !tbaa !1941
  %171 = load %struct._object*, %struct._object** %_py_decref_tmp297, align 8, !dbg !3553, !tbaa !1941
  %ob_refcnt298 = getelementptr inbounds %struct._object, %struct._object* %171, i32 0, i32 0, !dbg !3555
  %172 = load i64, i64* %ob_refcnt298, align 8, !dbg !3556, !tbaa !1961
  %dec299 = add i64 %172, -1, !dbg !3556
  store i64 %dec299, i64* %ob_refcnt298, align 8, !dbg !3556, !tbaa !1961
  %cmp300 = icmp ne i64 %dec299, 0, !dbg !3557
  br i1 %cmp300, label %if.then.301, label %if.else.302, !dbg !3558

if.then.301:                                      ; preds = %do.body.296
  br label %if.end.305, !dbg !3559

if.else.302:                                      ; preds = %do.body.296
  %173 = load %struct._object*, %struct._object** %_py_decref_tmp297, align 8, !dbg !3561, !tbaa !1941
  %ob_type303 = getelementptr inbounds %struct._object, %struct._object* %173, i32 0, i32 1, !dbg !3563
  %174 = load %struct._typeobject*, %struct._typeobject** %ob_type303, align 8, !dbg !3563, !tbaa !1995
  %tp_dealloc304 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %174, i32 0, i32 4, !dbg !3564
  %175 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc304, align 8, !dbg !3564, !tbaa !1997
  %176 = load %struct._object*, %struct._object** %_py_decref_tmp297, align 8, !dbg !3565, !tbaa !1941
  call void %175(%struct._object* %176), !dbg !3566
  br label %if.end.305

if.end.305:                                       ; preds = %if.else.302, %if.then.301
  %177 = bitcast %struct._object** %_py_decref_tmp297 to i8*, !dbg !3567
  call void @llvm.lifetime.end(i64 8, i8* %177) #2, !dbg !3567
  br label %do.cond.306, !dbg !3568

do.cond.306:                                      ; preds = %if.end.305
  br label %do.end.307, !dbg !3569

do.end.307:                                       ; preds = %do.cond.306
  %178 = load i64, i64* %value, align 8, !dbg !3571, !tbaa !2587
  %cmp308 = icmp eq i64 %178, -1, !dbg !3573
  br i1 %cmp308, label %land.lhs.true.309, label %if.end.313, !dbg !3574

land.lhs.true.309:                                ; preds = %do.end.307
  %call310 = call %struct._object* @PyErr_Occurred(), !dbg !3575
  %tobool311 = icmp ne %struct._object* %call310, null, !dbg !3575
  br i1 %tobool311, label %if.then.312, label %if.end.313, !dbg !3577

if.then.312:                                      ; preds = %land.lhs.true.309
  store %struct._object* null, %struct._object** %retval, !dbg !3578
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3578

if.end.313:                                       ; preds = %land.lhs.true.309, %do.end.307
  %179 = load i64, i64* %value, align 8, !dbg !3579, !tbaa !2587
  %cmp314 = icmp ne i64 %179, -9223372036854775808, !dbg !3581
  br i1 %cmp314, label %if.then.315, label %if.end.317, !dbg !3582

if.then.315:                                      ; preds = %if.end.313
  %call316 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.174, i32 0, i32 0)), !dbg !3583
  store %struct._object* %call316, %struct._object** %retval, !dbg !3584
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3584

if.end.317:                                       ; preds = %if.end.313
  %180 = load i32, i32* %overflow, align 4, !dbg !3585, !tbaa !1971
  %cmp318 = icmp ne i32 %180, 0, !dbg !3587
  br i1 %cmp318, label %if.then.319, label %if.end.321, !dbg !3588

if.then.319:                                      ; preds = %if.end.317
  %call320 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.170, i32 0, i32 0)), !dbg !3589
  store %struct._object* %call320, %struct._object** %retval, !dbg !3590
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3590

if.end.321:                                       ; preds = %if.end.317
  %181 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3591, !tbaa !1961
  %inc = add i64 %181, 1, !dbg !3591
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3591, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !3592
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3592

cleanup:                                          ; preds = %if.end.321, %if.then.319, %if.then.315, %if.then.312, %if.then.293, %if.then.288, %if.then.284, %if.then.281, %if.then.262, %if.then.257, %if.then.253, %if.then.250, %if.then.231, %if.then.226, %if.then.222, %if.then.219, %if.then.200, %if.then.195, %if.then.191, %if.then.188, %if.then.169, %do.end.141, %if.then.125, %if.then.120, %if.then.116, %if.then.113, %if.then.94, %if.then.89, %if.then.85, %if.then.82, %if.then.63, %do.end.35, %if.then.19, %if.then.14, %if.then.10, %if.then.7, %if.then
  %182 = bitcast i32* %overflow to i8*, !dbg !3593
  call void @llvm.lifetime.end(i64 4, i8* %182) #2, !dbg !3593
  %183 = bitcast i64* %value to i8*, !dbg !3593
  call void @llvm.lifetime.end(i64 8, i8* %183) #2, !dbg !3593
  %184 = bitcast %struct._object** %temp to i8*, !dbg !3593
  call void @llvm.lifetime.end(i64 8, i8* %184) #2, !dbg !3593
  %185 = bitcast %struct._object** %one to i8*, !dbg !3593
  call void @llvm.lifetime.end(i64 8, i8* %185) #2, !dbg !3593
  %186 = bitcast %struct._object** %num to i8*, !dbg !3593
  call void @llvm.lifetime.end(i64 8, i8* %186) #2, !dbg !3593
  %187 = load %struct._object*, %struct._object** %retval, !dbg !3593
  ret %struct._object* %187, !dbg !3593
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_long_as_double(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %out = alloca double, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !873, metadata !1945), !dbg !3594
  %0 = bitcast double* %out to i8*, !dbg !3595
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3595
  call void @llvm.dbg.declare(metadata double* %out, metadata !874, metadata !1945), !dbg !3596
  %1 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3597, !tbaa !1961
  %inc = add i64 %1, 1, !dbg !3597
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3597, !tbaa !1961
  %call = call double @PyLong_AsDouble(%struct._object* @_Py_NoneStruct), !dbg !3598
  store double %call, double* %out, align 8, !dbg !3599, !tbaa !3600
  %2 = load double, double* %out, align 8, !dbg !3602, !tbaa !3600
  %cmp = fcmp une double %2, -1.000000e+00, !dbg !3604
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3605

lor.lhs.false:                                    ; preds = %entry
  %call1 = call %struct._object* @PyErr_Occurred(), !dbg !3606
  %tobool = icmp ne %struct._object* %call1, null, !dbg !3606
  br i1 %tobool, label %if.end, label %if.then, !dbg !3608

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call2 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.175, i32 0, i32 0)), !dbg !3609
  store %struct._object* %call2, %struct._object** %retval, !dbg !3610
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3610

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3611, !tbaa !1941
  %call3 = call i32 @PyErr_ExceptionMatches(%struct._object* %3), !dbg !3613
  %tobool4 = icmp ne i32 %call3, 0, !dbg !3613
  br i1 %tobool4, label %if.end.7, label %if.then.5, !dbg !3614

if.then.5:                                        ; preds = %if.end
  %call6 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.176, i32 0, i32 0)), !dbg !3615
  store %struct._object* %call6, %struct._object** %retval, !dbg !3616
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3616

if.end.7:                                         ; preds = %if.end
  call void @PyErr_Clear(), !dbg !3617
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !3618
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3618

cleanup:                                          ; preds = %if.end.7, %if.then.5, %if.then
  %4 = bitcast double* %out to i8*, !dbg !3619
  call void @llvm.lifetime.end(i64 8, i8* %4) #2, !dbg !3619
  %5 = load %struct._object*, %struct._object** %retval, !dbg !3619
  ret %struct._object* %5, !dbg !3619
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_long_as_size_t(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %out_u = alloca i64, align 8
  %out_s = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !877, metadata !1945), !dbg !3620
  %0 = bitcast i64* %out_u to i8*, !dbg !3621
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3621
  call void @llvm.dbg.declare(metadata i64* %out_u, metadata !878, metadata !1945), !dbg !3622
  %1 = bitcast i64* %out_s to i8*, !dbg !3623
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !3623
  call void @llvm.dbg.declare(metadata i64* %out_s, metadata !879, metadata !1945), !dbg !3624
  %2 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3625, !tbaa !1961
  %inc = add i64 %2, 1, !dbg !3625
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3625, !tbaa !1961
  %call = call i64 @PyLong_AsSize_t(%struct._object* @_Py_NoneStruct), !dbg !3626
  store i64 %call, i64* %out_u, align 8, !dbg !3627, !tbaa !2587
  %3 = load i64, i64* %out_u, align 8, !dbg !3628, !tbaa !2587
  %cmp = icmp ne i64 %3, -1, !dbg !3630
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3631

lor.lhs.false:                                    ; preds = %entry
  %call1 = call %struct._object* @PyErr_Occurred(), !dbg !3632
  %tobool = icmp ne %struct._object* %call1, null, !dbg !3632
  br i1 %tobool, label %if.end, label %if.then, !dbg !3634

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call2 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.177, i32 0, i32 0)), !dbg !3635
  store %struct._object* %call2, %struct._object** %retval, !dbg !3636
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3636

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3637, !tbaa !1941
  %call3 = call i32 @PyErr_ExceptionMatches(%struct._object* %4), !dbg !3639
  %tobool4 = icmp ne i32 %call3, 0, !dbg !3639
  br i1 %tobool4, label %if.end.7, label %if.then.5, !dbg !3640

if.then.5:                                        ; preds = %if.end
  %call6 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.178, i32 0, i32 0)), !dbg !3641
  store %struct._object* %call6, %struct._object** %retval, !dbg !3642
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3642

if.end.7:                                         ; preds = %if.end
  call void @PyErr_Clear(), !dbg !3643
  %call8 = call i64 @PyLong_AsSsize_t(%struct._object* @_Py_NoneStruct), !dbg !3644
  store i64 %call8, i64* %out_s, align 8, !dbg !3645, !tbaa !2587
  %5 = load i64, i64* %out_s, align 8, !dbg !3646, !tbaa !2587
  %cmp9 = icmp ne i64 %5, -1, !dbg !3648
  br i1 %cmp9, label %if.then.13, label %lor.lhs.false.10, !dbg !3649

lor.lhs.false.10:                                 ; preds = %if.end.7
  %call11 = call %struct._object* @PyErr_Occurred(), !dbg !3650
  %tobool12 = icmp ne %struct._object* %call11, null, !dbg !3650
  br i1 %tobool12, label %if.end.15, label %if.then.13, !dbg !3652

if.then.13:                                       ; preds = %lor.lhs.false.10, %if.end.7
  %call14 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.179, i32 0, i32 0)), !dbg !3653
  store %struct._object* %call14, %struct._object** %retval, !dbg !3654
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3654

if.end.15:                                        ; preds = %lor.lhs.false.10
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !3655, !tbaa !1941
  %call16 = call i32 @PyErr_ExceptionMatches(%struct._object* %6), !dbg !3657
  %tobool17 = icmp ne i32 %call16, 0, !dbg !3657
  br i1 %tobool17, label %if.end.20, label %if.then.18, !dbg !3658

if.then.18:                                       ; preds = %if.end.15
  %call19 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.180, i32 0, i32 0)), !dbg !3659
  store %struct._object* %call19, %struct._object** %retval, !dbg !3660
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3660

if.end.20:                                        ; preds = %if.end.15
  call void @PyErr_Clear(), !dbg !3661
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !3662
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3662

cleanup:                                          ; preds = %if.end.20, %if.then.18, %if.then.13, %if.then.5, %if.then
  %7 = bitcast i64* %out_s to i8*, !dbg !3663
  call void @llvm.lifetime.end(i64 8, i8* %7) #2, !dbg !3663
  %8 = bitcast i64* %out_u to i8*, !dbg !3663
  call void @llvm.lifetime.end(i64 8, i8* %8) #2, !dbg !3663
  %9 = load %struct._object*, %struct._object** %retval, !dbg !3663
  ret %struct._object* %9, !dbg !3663
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_long_numbits(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %testcases = alloca [15 x %struct.triple], align 16
  %i = alloca i32, align 4
  %nbits = alloca i64, align 8
  %sign = alloca i32, align 4
  %plong = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !882, metadata !1945), !dbg !3664
  %0 = bitcast [15 x %struct.triple]* %testcases to i8*, !dbg !3665
  call void @llvm.lifetime.start(i64 360, i8* %0) #2, !dbg !3665
  call void @llvm.dbg.declare(metadata [15 x %struct.triple]* %testcases, metadata !883, metadata !1945), !dbg !3666
  %1 = bitcast [15 x %struct.triple]* %testcases to i8*, !dbg !3666
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([15 x %struct.triple]* @test_long_numbits.testcases to i8*), i64 360, i32 16, i1 false), !dbg !3666
  %2 = bitcast i32* %i to i8*, !dbg !3667
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !3667
  call void @llvm.dbg.declare(metadata i32* %i, metadata !892, metadata !1945), !dbg !3668
  store i32 0, i32* %i, align 4, !dbg !3669, !tbaa !1971
  br label %for.cond, !dbg !3670

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !3671, !tbaa !1971
  %conv = sext i32 %3 to i64, !dbg !3671
  %cmp = icmp ult i64 %conv, 15, !dbg !3674
  br i1 %cmp, label %for.body, label %for.end, !dbg !3675

for.body:                                         ; preds = %for.cond
  %4 = bitcast i64* %nbits to i8*, !dbg !3676
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !3676
  call void @llvm.dbg.declare(metadata i64* %nbits, metadata !893, metadata !1945), !dbg !3677
  %5 = bitcast i32* %sign to i8*, !dbg !3678
  call void @llvm.lifetime.start(i64 4, i8* %5) #2, !dbg !3678
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !897, metadata !1945), !dbg !3679
  %6 = bitcast %struct._object** %plong to i8*, !dbg !3680
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !3680
  call void @llvm.dbg.declare(metadata %struct._object** %plong, metadata !898, metadata !1945), !dbg !3681
  %7 = load i32, i32* %i, align 4, !dbg !3682, !tbaa !1971
  %idxprom = sext i32 %7 to i64, !dbg !3683
  %arrayidx = getelementptr [15 x %struct.triple], [15 x %struct.triple]* %testcases, i32 0, i64 %idxprom, !dbg !3683
  %input = getelementptr inbounds %struct.triple, %struct.triple* %arrayidx, i32 0, i32 0, !dbg !3684
  %8 = load i64, i64* %input, align 8, !dbg !3684, !tbaa !3685
  %call = call %struct._object* @PyLong_FromLong(i64 %8), !dbg !3687
  store %struct._object* %call, %struct._object** %plong, align 8, !dbg !3688, !tbaa !1941
  %9 = load %struct._object*, %struct._object** %plong, align 8, !dbg !3689, !tbaa !1941
  %cmp2 = icmp eq %struct._object* %9, null, !dbg !3691
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3692

if.then:                                          ; preds = %for.body
  store %struct._object* null, %struct._object** %retval, !dbg !3693
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3693

if.end:                                           ; preds = %for.body
  %10 = load %struct._object*, %struct._object** %plong, align 8, !dbg !3694, !tbaa !1941
  %call4 = call i64 @_PyLong_NumBits(%struct._object* %10), !dbg !3695
  store i64 %call4, i64* %nbits, align 8, !dbg !3696, !tbaa !2587
  %11 = load %struct._object*, %struct._object** %plong, align 8, !dbg !3697, !tbaa !1941
  %call5 = call i32 @_PyLong_Sign(%struct._object* %11), !dbg !3698
  store i32 %call5, i32* %sign, align 4, !dbg !3699, !tbaa !1971
  br label %do.body, !dbg !3700

do.body:                                          ; preds = %if.end
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3701
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !3701
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !899, metadata !1945), !dbg !3703
  %13 = load %struct._object*, %struct._object** %plong, align 8, !dbg !3704, !tbaa !1941
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !3703, !tbaa !1941
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3705, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !3707
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !3708, !tbaa !1961
  %dec = add i64 %15, -1, !dbg !3708
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3708, !tbaa !1961
  %cmp6 = icmp ne i64 %dec, 0, !dbg !3709
  br i1 %cmp6, label %if.then.8, label %if.else, !dbg !3710

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !3711

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3713, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !3715
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3715, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !3716
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3716, !tbaa !1997
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3717, !tbaa !1941
  call void %18(%struct._object* %19), !dbg !3718
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3719
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !3719
  br label %do.cond, !dbg !3721

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !3722

do.end:                                           ; preds = %do.cond
  %21 = load i64, i64* %nbits, align 8, !dbg !3724, !tbaa !2587
  %22 = load i32, i32* %i, align 4, !dbg !3726, !tbaa !1971
  %idxprom10 = sext i32 %22 to i64, !dbg !3727
  %arrayidx11 = getelementptr [15 x %struct.triple], [15 x %struct.triple]* %testcases, i32 0, i64 %idxprom10, !dbg !3727
  %nbits12 = getelementptr inbounds %struct.triple, %struct.triple* %arrayidx11, i32 0, i32 1, !dbg !3728
  %23 = load i64, i64* %nbits12, align 8, !dbg !3728, !tbaa !3729
  %cmp13 = icmp ne i64 %21, %23, !dbg !3730
  br i1 %cmp13, label %if.then.15, label %if.end.17, !dbg !3731

if.then.15:                                       ; preds = %do.end
  %call16 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.181, i32 0, i32 0)), !dbg !3732
  store %struct._object* %call16, %struct._object** %retval, !dbg !3733
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3733

if.end.17:                                        ; preds = %do.end
  %24 = load i32, i32* %sign, align 4, !dbg !3734, !tbaa !1971
  %25 = load i32, i32* %i, align 4, !dbg !3736, !tbaa !1971
  %idxprom18 = sext i32 %25 to i64, !dbg !3737
  %arrayidx19 = getelementptr [15 x %struct.triple], [15 x %struct.triple]* %testcases, i32 0, i64 %idxprom18, !dbg !3737
  %sign20 = getelementptr inbounds %struct.triple, %struct.triple* %arrayidx19, i32 0, i32 2, !dbg !3738
  %26 = load i32, i32* %sign20, align 4, !dbg !3738, !tbaa !3739
  %cmp21 = icmp ne i32 %24, %26, !dbg !3740
  br i1 %cmp21, label %if.then.23, label %if.end.25, !dbg !3741

if.then.23:                                       ; preds = %if.end.17
  %call24 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.182, i32 0, i32 0)), !dbg !3742
  store %struct._object* %call24, %struct._object** %retval, !dbg !3743
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3743

if.end.25:                                        ; preds = %if.end.17
  store i32 0, i32* %cleanup.dest.slot, !dbg !3744
  br label %cleanup, !dbg !3744

cleanup:                                          ; preds = %if.end.25, %if.then.23, %if.then.15, %if.then
  %27 = bitcast %struct._object** %plong to i8*, !dbg !3745
  call void @llvm.lifetime.end(i64 8, i8* %27) #2, !dbg !3745
  %28 = bitcast i32* %sign to i8*, !dbg !3745
  call void @llvm.lifetime.end(i64 4, i8* %28) #2, !dbg !3745
  %29 = bitcast i64* %nbits to i8*, !dbg !3745
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !3745
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.29 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !3746

for.inc:                                          ; preds = %cleanup.cont
  %30 = load i32, i32* %i, align 4, !dbg !3747, !tbaa !1971
  %inc = add i32 %30, 1, !dbg !3747
  store i32 %inc, i32* %i, align 4, !dbg !3747, !tbaa !1971
  br label %for.cond, !dbg !3748

for.end:                                          ; preds = %for.cond
  %31 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3749, !tbaa !1961
  %inc28 = add i64 %31, 1, !dbg !3749
  store i64 %inc28, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3749, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !3750
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.29, !dbg !3750

cleanup.29:                                       ; preds = %for.end, %cleanup
  %32 = bitcast i32* %i to i8*, !dbg !3751
  call void @llvm.lifetime.end(i64 4, i8* %32) #2, !dbg !3751
  %33 = bitcast [15 x %struct.triple]* %testcases to i8*, !dbg !3751
  call void @llvm.lifetime.end(i64 360, i8* %33) #2, !dbg !3751
  %34 = load %struct._object*, %struct._object** %retval, !dbg !3751
  ret %struct._object* %34, !dbg !3751
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_k_code(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %tuple = alloca %struct._object*, align 8
  %num = alloca %struct._object*, align 8
  %value = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp41 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !903, metadata !1945), !dbg !3752
  %0 = bitcast %struct._object** %tuple to i8*, !dbg !3753
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3753
  call void @llvm.dbg.declare(metadata %struct._object** %tuple, metadata !904, metadata !1945), !dbg !3754
  %1 = bitcast %struct._object** %num to i8*, !dbg !3753
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !3753
  call void @llvm.dbg.declare(metadata %struct._object** %num, metadata !905, metadata !1945), !dbg !3755
  %2 = bitcast i64* %value to i8*, !dbg !3756
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !3756
  call void @llvm.dbg.declare(metadata i64* %value, metadata !906, metadata !1945), !dbg !3757
  %call = call %struct._object* @PyTuple_New(i64 1), !dbg !3758
  store %struct._object* %call, %struct._object** %tuple, align 8, !dbg !3759, !tbaa !1941
  %3 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !3760, !tbaa !1941
  %cmp = icmp eq %struct._object* %3, null, !dbg !3762
  br i1 %cmp, label %if.then, label %if.end, !dbg !3763

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3764
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3764

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyLong_FromString(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.163, i32 0, i32 0), i8** null, i32 16), !dbg !3765
  store %struct._object* %call1, %struct._object** %num, align 8, !dbg !3766, !tbaa !1941
  %4 = load %struct._object*, %struct._object** %num, align 8, !dbg !3767, !tbaa !1941
  %cmp2 = icmp eq %struct._object* %4, null, !dbg !3769
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !3770

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !3771
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3771

if.end.4:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %num, align 8, !dbg !3772, !tbaa !1941
  %call5 = call i64 @PyLong_AsUnsignedLongMask(%struct._object* %5), !dbg !3773
  store i64 %call5, i64* %value, align 8, !dbg !3774, !tbaa !2587
  %6 = load i64, i64* %value, align 8, !dbg !3775, !tbaa !2587
  %cmp6 = icmp ne i64 %6, -1, !dbg !3777
  br i1 %cmp6, label %if.then.7, label %if.end.9, !dbg !3778

if.then.7:                                        ; preds = %if.end.4
  %call8 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.183, i32 0, i32 0)), !dbg !3779
  store %struct._object* %call8, %struct._object** %retval, !dbg !3780
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3780

if.end.9:                                         ; preds = %if.end.4
  %7 = load %struct._object*, %struct._object** %num, align 8, !dbg !3781, !tbaa !1941
  %8 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !3782, !tbaa !1941
  %9 = bitcast %struct._object* %8 to %struct.PyTupleObject*, !dbg !3783
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %9, i32 0, i32 1, !dbg !3784
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !3785
  store %struct._object* %7, %struct._object** %arrayidx, align 8, !dbg !3786, !tbaa !1941
  store i64 0, i64* %value, align 8, !dbg !3787, !tbaa !2587
  %10 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !3788, !tbaa !1941
  %call10 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.184, i32 0, i32 0), i64* %value), !dbg !3790
  %cmp11 = icmp slt i32 %call10, 0, !dbg !3791
  br i1 %cmp11, label %if.then.12, label %if.end.13, !dbg !3792

if.then.12:                                       ; preds = %if.end.9
  store %struct._object* null, %struct._object** %retval, !dbg !3793
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3793

if.end.13:                                        ; preds = %if.end.9
  %11 = load i64, i64* %value, align 8, !dbg !3794, !tbaa !2587
  %cmp14 = icmp ne i64 %11, -1, !dbg !3796
  br i1 %cmp14, label %if.then.15, label %if.end.17, !dbg !3797

if.then.15:                                       ; preds = %if.end.13
  %call16 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.185, i32 0, i32 0)), !dbg !3798
  store %struct._object* %call16, %struct._object** %retval, !dbg !3799
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3799

if.end.17:                                        ; preds = %if.end.13
  br label %do.body, !dbg !3800

do.body:                                          ; preds = %if.end.17
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3801
  call void @llvm.lifetime.start(i64 8, i8* %12) #2, !dbg !3801
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !907, metadata !1945), !dbg !3803
  %13 = load %struct._object*, %struct._object** %num, align 8, !dbg !3804, !tbaa !1941
  store %struct._object* %13, %struct._object** %_py_decref_tmp, align 8, !dbg !3803, !tbaa !1941
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3805, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0, !dbg !3807
  %15 = load i64, i64* %ob_refcnt, align 8, !dbg !3808, !tbaa !1961
  %dec = add i64 %15, -1, !dbg !3808
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3808, !tbaa !1961
  %cmp18 = icmp ne i64 %dec, 0, !dbg !3809
  br i1 %cmp18, label %if.then.19, label %if.else, !dbg !3810

if.then.19:                                       ; preds = %do.body
  br label %if.end.20, !dbg !3811

if.else:                                          ; preds = %do.body
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3813, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1, !dbg !3815
  %17 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3815, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %17, i32 0, i32 4, !dbg !3816
  %18 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3816, !tbaa !1997
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3817, !tbaa !1941
  call void %18(%struct._object* %19), !dbg !3818
  br label %if.end.20

if.end.20:                                        ; preds = %if.else, %if.then.19
  %20 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3819
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !3819
  br label %do.cond, !dbg !3821

do.cond:                                          ; preds = %if.end.20
  br label %do.end, !dbg !3822

do.end:                                           ; preds = %do.cond
  %call21 = call %struct._object* @PyLong_FromString(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.186, i32 0, i32 0), i8** null, i32 16), !dbg !3824
  store %struct._object* %call21, %struct._object** %num, align 8, !dbg !3825, !tbaa !1941
  %21 = load %struct._object*, %struct._object** %num, align 8, !dbg !3826, !tbaa !1941
  %cmp22 = icmp eq %struct._object* %21, null, !dbg !3828
  br i1 %cmp22, label %if.then.23, label %if.end.24, !dbg !3829

if.then.23:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !3830
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3830

if.end.24:                                        ; preds = %do.end
  %22 = load %struct._object*, %struct._object** %num, align 8, !dbg !3831, !tbaa !1941
  %call25 = call i64 @PyLong_AsUnsignedLongMask(%struct._object* %22), !dbg !3832
  store i64 %call25, i64* %value, align 8, !dbg !3833, !tbaa !2587
  %23 = load i64, i64* %value, align 8, !dbg !3834, !tbaa !2587
  %cmp26 = icmp ne i64 %23, -66, !dbg !3836
  br i1 %cmp26, label %if.then.27, label %if.end.29, !dbg !3837

if.then.27:                                       ; preds = %if.end.24
  %call28 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.183, i32 0, i32 0)), !dbg !3838
  store %struct._object* %call28, %struct._object** %retval, !dbg !3839
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3839

if.end.29:                                        ; preds = %if.end.24
  %24 = load %struct._object*, %struct._object** %num, align 8, !dbg !3840, !tbaa !1941
  %25 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !3841, !tbaa !1941
  %26 = bitcast %struct._object* %25 to %struct.PyTupleObject*, !dbg !3842
  %ob_item30 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %26, i32 0, i32 1, !dbg !3843
  %arrayidx31 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item30, i32 0, i64 0, !dbg !3844
  store %struct._object* %24, %struct._object** %arrayidx31, align 8, !dbg !3845, !tbaa !1941
  store i64 0, i64* %value, align 8, !dbg !3846, !tbaa !2587
  %27 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !3847, !tbaa !1941
  %call32 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %27, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.184, i32 0, i32 0), i64* %value), !dbg !3849
  %cmp33 = icmp slt i32 %call32, 0, !dbg !3850
  br i1 %cmp33, label %if.then.34, label %if.end.35, !dbg !3851

if.then.34:                                       ; preds = %if.end.29
  store %struct._object* null, %struct._object** %retval, !dbg !3852
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3852

if.end.35:                                        ; preds = %if.end.29
  %28 = load i64, i64* %value, align 8, !dbg !3853, !tbaa !2587
  %cmp36 = icmp ne i64 %28, -66, !dbg !3855
  br i1 %cmp36, label %if.then.37, label %if.end.39, !dbg !3856

if.then.37:                                       ; preds = %if.end.35
  %call38 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.187, i32 0, i32 0)), !dbg !3857
  store %struct._object* %call38, %struct._object** %retval, !dbg !3858
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3858

if.end.39:                                        ; preds = %if.end.35
  br label %do.body.40, !dbg !3859

do.body.40:                                       ; preds = %if.end.39
  %29 = bitcast %struct._object** %_py_decref_tmp41 to i8*, !dbg !3860
  call void @llvm.lifetime.start(i64 8, i8* %29) #2, !dbg !3860
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp41, metadata !909, metadata !1945), !dbg !3862
  %30 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !3863, !tbaa !1941
  store %struct._object* %30, %struct._object** %_py_decref_tmp41, align 8, !dbg !3862, !tbaa !1941
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp41, align 8, !dbg !3864, !tbaa !1941
  %ob_refcnt42 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0, !dbg !3866
  %32 = load i64, i64* %ob_refcnt42, align 8, !dbg !3867, !tbaa !1961
  %dec43 = add i64 %32, -1, !dbg !3867
  store i64 %dec43, i64* %ob_refcnt42, align 8, !dbg !3867, !tbaa !1961
  %cmp44 = icmp ne i64 %dec43, 0, !dbg !3868
  br i1 %cmp44, label %if.then.45, label %if.else.46, !dbg !3869

if.then.45:                                       ; preds = %do.body.40
  br label %if.end.49, !dbg !3870

if.else.46:                                       ; preds = %do.body.40
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp41, align 8, !dbg !3872, !tbaa !1941
  %ob_type47 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1, !dbg !3874
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type47, align 8, !dbg !3874, !tbaa !1995
  %tp_dealloc48 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4, !dbg !3875
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc48, align 8, !dbg !3875, !tbaa !1997
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp41, align 8, !dbg !3876, !tbaa !1941
  call void %35(%struct._object* %36), !dbg !3877
  br label %if.end.49

if.end.49:                                        ; preds = %if.else.46, %if.then.45
  %37 = bitcast %struct._object** %_py_decref_tmp41 to i8*, !dbg !3878
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !3878
  br label %do.cond.50, !dbg !3879

do.cond.50:                                       ; preds = %if.end.49
  br label %do.end.51, !dbg !3880

do.end.51:                                        ; preds = %do.cond.50
  %38 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3882, !tbaa !1961
  %inc = add i64 %38, 1, !dbg !3882
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3882, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !3883
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3883

cleanup:                                          ; preds = %do.end.51, %if.then.37, %if.then.34, %if.then.27, %if.then.23, %if.then.15, %if.then.12, %if.then.7, %if.then.3, %if.then
  %39 = bitcast i64* %value to i8*, !dbg !3884
  call void @llvm.lifetime.end(i64 8, i8* %39) #2, !dbg !3884
  %40 = bitcast %struct._object** %num to i8*, !dbg !3884
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !3884
  %41 = bitcast %struct._object** %tuple to i8*, !dbg !3884
  call void @llvm.lifetime.end(i64 8, i8* %41) #2, !dbg !3884
  %42 = load %struct._object*, %struct._object** %retval, !dbg !3884
  ret %struct._object* %42, !dbg !3884
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_empty_argparse(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %tuple = alloca %struct._object*, align 8
  %dict = alloca %struct._object*, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp16 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !913, metadata !1945), !dbg !3885
  %0 = bitcast %struct._object** %tuple to i8*, !dbg !3886
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3886
  call void @llvm.dbg.declare(metadata %struct._object** %tuple, metadata !914, metadata !1945), !dbg !3887
  %1 = bitcast %struct._object** %dict to i8*, !dbg !3886
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !3886
  call void @llvm.dbg.declare(metadata %struct._object** %dict, metadata !915, metadata !1945), !dbg !3888
  store %struct._object* null, %struct._object** %dict, align 8, !dbg !3888, !tbaa !1941
  %2 = bitcast i32* %result to i8*, !dbg !3889
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !3889
  call void @llvm.dbg.declare(metadata i32* %result, metadata !916, metadata !1945), !dbg !3890
  %call = call %struct._object* @PyTuple_New(i64 0), !dbg !3891
  store %struct._object* %call, %struct._object** %tuple, align 8, !dbg !3892, !tbaa !1941
  %3 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !3893, !tbaa !1941
  %tobool = icmp ne %struct._object* %3, null, !dbg !3893
  br i1 %tobool, label %if.end, label %if.then, !dbg !3895

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !3896
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3896

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !3897, !tbaa !1941
  %call1 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.188, i32 0, i32 0)), !dbg !3899
  store i32 %call1, i32* %result, align 4, !dbg !3900, !tbaa !1971
  %cmp = icmp slt i32 %call1, 0, !dbg !3901
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !3902

if.then.2:                                        ; preds = %if.end
  br label %done, !dbg !3903

if.end.3:                                         ; preds = %if.end
  %call4 = call %struct._object* @PyDict_New(), !dbg !3904
  store %struct._object* %call4, %struct._object** %dict, align 8, !dbg !3905, !tbaa !1941
  %5 = load %struct._object*, %struct._object** %dict, align 8, !dbg !3906, !tbaa !1941
  %tobool5 = icmp ne %struct._object* %5, null, !dbg !3906
  br i1 %tobool5, label %if.end.7, label %if.then.6, !dbg !3908

if.then.6:                                        ; preds = %if.end.3
  br label %done, !dbg !3909

if.end.7:                                         ; preds = %if.end.3
  %6 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !3910, !tbaa !1941
  %7 = load %struct._object*, %struct._object** %dict, align 8, !dbg !3911, !tbaa !1941
  %call8 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %6, %struct._object* %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.188, i32 0, i32 0), i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @test_empty_argparse.kwlist, i32 0, i32 0)), !dbg !3912
  store i32 %call8, i32* %result, align 4, !dbg !3913, !tbaa !1971
  br label %done, !dbg !3914

done:                                             ; preds = %if.end.7, %if.then.6, %if.then.2
  br label %do.body, !dbg !3915

do.body:                                          ; preds = %done
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3916
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !3916
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !917, metadata !1945), !dbg !3918
  %9 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !3919, !tbaa !1941
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !3918, !tbaa !1941
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3920, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !3922
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !3923, !tbaa !1961
  %dec = add i64 %11, -1, !dbg !3923
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !3923, !tbaa !1961
  %cmp9 = icmp ne i64 %dec, 0, !dbg !3924
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !3925

if.then.10:                                       ; preds = %do.body
  br label %if.end.11, !dbg !3926

if.else:                                          ; preds = %do.body
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3928, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !3930
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !3930, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !3931
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !3931, !tbaa !1997
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !3932, !tbaa !1941
  call void %14(%struct._object* %15), !dbg !3933
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.10
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !3934
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !3934
  br label %do.cond, !dbg !3936

do.cond:                                          ; preds = %if.end.11
  br label %do.end, !dbg !3937

do.end:                                           ; preds = %do.cond
  br label %do.body.12, !dbg !3939

do.body.12:                                       ; preds = %do.end
  %17 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3940
  call void @llvm.lifetime.start(i64 8, i8* %17) #2, !dbg !3940
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !919, metadata !1945), !dbg !3942
  %18 = load %struct._object*, %struct._object** %dict, align 8, !dbg !3943, !tbaa !1941
  store %struct._object* %18, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3942, !tbaa !1941
  %19 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3944, !tbaa !1941
  %cmp13 = icmp ne %struct._object* %19, null, !dbg !3945
  br i1 %cmp13, label %if.then.14, label %if.end.27, !dbg !3946

if.then.14:                                       ; preds = %do.body.12
  br label %do.body.15, !dbg !3947

do.body.15:                                       ; preds = %if.then.14
  %20 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !3949
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !3949
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp16, metadata !921, metadata !1945), !dbg !3951
  %21 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !3952, !tbaa !1941
  store %struct._object* %21, %struct._object** %_py_decref_tmp16, align 8, !dbg !3951, !tbaa !1941
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !3953, !tbaa !1941
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !3955
  %23 = load i64, i64* %ob_refcnt17, align 8, !dbg !3956, !tbaa !1961
  %dec18 = add i64 %23, -1, !dbg !3956
  store i64 %dec18, i64* %ob_refcnt17, align 8, !dbg !3956, !tbaa !1961
  %cmp19 = icmp ne i64 %dec18, 0, !dbg !3957
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !3958

if.then.20:                                       ; preds = %do.body.15
  br label %if.end.24, !dbg !3959

if.else.21:                                       ; preds = %do.body.15
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !3961, !tbaa !1941
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !3963
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !3963, !tbaa !1995
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !3964
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !3964, !tbaa !1997
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !3965, !tbaa !1941
  call void %26(%struct._object* %27), !dbg !3966
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  %28 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !3967
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !3967
  br label %do.cond.25, !dbg !3969

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !3970

do.end.26:                                        ; preds = %do.cond.25
  br label %if.end.27, !dbg !3972

if.end.27:                                        ; preds = %do.end.26, %do.body.12
  %29 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !3974
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !3974
  br label %do.cond.28, !dbg !3977

do.cond.28:                                       ; preds = %if.end.27
  br label %do.end.29, !dbg !3978

do.end.29:                                        ; preds = %do.cond.28
  %30 = load i32, i32* %result, align 4, !dbg !3980, !tbaa !1971
  %cmp30 = icmp slt i32 %30, 0, !dbg !3982
  br i1 %cmp30, label %if.then.31, label %if.else.32, !dbg !3983

if.then.31:                                       ; preds = %do.end.29
  store %struct._object* null, %struct._object** %retval, !dbg !3984
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3984

if.else.32:                                       ; preds = %do.end.29
  %31 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3985, !tbaa !1961
  %inc = add i64 %31, 1, !dbg !3985
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !3985, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !3987
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !3987

cleanup:                                          ; preds = %if.else.32, %if.then.31, %if.then
  %32 = bitcast i32* %result to i8*, !dbg !3988
  call void @llvm.lifetime.end(i64 4, i8* %32) #2, !dbg !3988
  %33 = bitcast %struct._object** %dict to i8*, !dbg !3988
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !3988
  %34 = bitcast %struct._object** %tuple to i8*, !dbg !3988
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !3988
  %35 = load %struct._object*, %struct._object** %retval, !dbg !3988
  ret %struct._object* %35, !dbg !3988
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @parse_tuple_and_keywords(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %sub_args = alloca %struct._object*, align 8
  %sub_kwargs = alloca %struct._object*, align 8
  %sub_format = alloca i8*, align 8
  %sub_keywords = alloca %struct._object*, align 8
  %i = alloca i64, align 8
  %size = alloca i64, align 8
  %keywords = alloca [9 x i8*], align 16
  %o = alloca %struct._object*, align 8
  %converted = alloca [8 x %struct._object*], align 16
  %result = alloca i32, align 4
  %return_value = alloca %struct._object*, align 8
  %buffers = alloca [8 x [4 x double]], align 16
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !926, metadata !1945), !dbg !3989
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !927, metadata !1945), !dbg !3990
  %0 = bitcast %struct._object** %sub_args to i8*, !dbg !3991
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !3991
  call void @llvm.dbg.declare(metadata %struct._object** %sub_args, metadata !928, metadata !1945), !dbg !3992
  %1 = bitcast %struct._object** %sub_kwargs to i8*, !dbg !3993
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !3993
  call void @llvm.dbg.declare(metadata %struct._object** %sub_kwargs, metadata !929, metadata !1945), !dbg !3994
  %2 = bitcast i8** %sub_format to i8*, !dbg !3995
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !3995
  call void @llvm.dbg.declare(metadata i8** %sub_format, metadata !930, metadata !1945), !dbg !3996
  %3 = bitcast %struct._object** %sub_keywords to i8*, !dbg !3997
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !3997
  call void @llvm.dbg.declare(metadata %struct._object** %sub_keywords, metadata !931, metadata !1945), !dbg !3998
  %4 = bitcast i64* %i to i8*, !dbg !3999
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !3999
  call void @llvm.dbg.declare(metadata i64* %i, metadata !932, metadata !1945), !dbg !4000
  %5 = bitcast i64* %size to i8*, !dbg !3999
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !3999
  call void @llvm.dbg.declare(metadata i64* %size, metadata !933, metadata !1945), !dbg !4001
  %6 = bitcast [9 x i8*]* %keywords to i8*, !dbg !4002
  call void @llvm.lifetime.start(i64 72, i8* %6) #2, !dbg !4002
  call void @llvm.dbg.declare(metadata [9 x i8*]* %keywords, metadata !934, metadata !1945), !dbg !4003
  %7 = bitcast %struct._object** %o to i8*, !dbg !4004
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !4004
  call void @llvm.dbg.declare(metadata %struct._object** %o, metadata !938, metadata !1945), !dbg !4005
  %8 = bitcast [8 x %struct._object*]* %converted to i8*, !dbg !4006
  call void @llvm.lifetime.start(i64 64, i8* %8) #2, !dbg !4006
  call void @llvm.dbg.declare(metadata [8 x %struct._object*]* %converted, metadata !939, metadata !1945), !dbg !4007
  %9 = bitcast i32* %result to i8*, !dbg !4008
  call void @llvm.lifetime.start(i64 4, i8* %9) #2, !dbg !4008
  call void @llvm.dbg.declare(metadata i32* %result, metadata !943, metadata !1945), !dbg !4009
  %10 = bitcast %struct._object** %return_value to i8*, !dbg !4010
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !4010
  call void @llvm.dbg.declare(metadata %struct._object** %return_value, metadata !944, metadata !1945), !dbg !4011
  store %struct._object* null, %struct._object** %return_value, align 8, !dbg !4011, !tbaa !1941
  %11 = bitcast [8 x [4 x double]]* %buffers to i8*, !dbg !4012
  call void @llvm.lifetime.start(i64 256, i8* %11) #2, !dbg !4012
  call void @llvm.dbg.declare(metadata [8 x [4 x double]]* %buffers, metadata !945, metadata !1945), !dbg !4013
  %12 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !4014, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.189, i32 0, i32 0), %struct._object** %sub_args, %struct._object** %sub_kwargs, i8** %sub_format, %struct._object** %sub_keywords), !dbg !4016
  %tobool = icmp ne i32 %call, 0, !dbg !4016
  br i1 %tobool, label %if.end, label %if.then, !dbg !4017

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4018
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4018

if.end:                                           ; preds = %entry
  %13 = load %struct._object*, %struct._object** %sub_keywords, align 8, !dbg !4019, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !4021
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4021, !tbaa !1995
  %cmp = icmp eq %struct._typeobject* %14, @PyList_Type, !dbg !4022
  br i1 %cmp, label %if.end.4, label %lor.lhs.false, !dbg !4023

lor.lhs.false:                                    ; preds = %if.end
  %15 = load %struct._object*, %struct._object** %sub_keywords, align 8, !dbg !4024, !tbaa !1941
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !4026
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8, !dbg !4026, !tbaa !1995
  %cmp2 = icmp eq %struct._typeobject* %16, @PyTuple_Type, !dbg !4027
  br i1 %cmp2, label %if.end.4, label %if.then.3, !dbg !4028

if.then.3:                                        ; preds = %lor.lhs.false
  %17 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4029, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %17, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.190, i32 0, i32 0)), !dbg !4031
  store %struct._object* null, %struct._object** %retval, !dbg !4032
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4032

if.end.4:                                         ; preds = %lor.lhs.false, %if.end
  %18 = bitcast [8 x [4 x double]]* %buffers to i8*, !dbg !4033
  call void @llvm.memset.p0i8.i64(i8* %18, i8 0, i64 256, i32 16, i1 false), !dbg !4033
  %19 = bitcast [8 x %struct._object*]* %converted to i8*, !dbg !4034
  call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 64, i32 16, i1 false), !dbg !4034
  %20 = bitcast [9 x i8*]* %keywords to i8*, !dbg !4035
  call void @llvm.memset.p0i8.i64(i8* %20, i8 0, i64 72, i32 16, i1 false), !dbg !4035
  %21 = load %struct._object*, %struct._object** %sub_keywords, align 8, !dbg !4036, !tbaa !1941
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !4037
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !4037, !tbaa !1995
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 19, !dbg !4038
  %23 = load i64, i64* %tp_flags, align 8, !dbg !4038, !tbaa !4039
  %and = and i64 %23, 33554432, !dbg !4040
  %cmp6 = icmp ne i64 %and, 0, !dbg !4041
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !4042

cond.true:                                        ; preds = %if.end.4
  %24 = load %struct._object*, %struct._object** %sub_keywords, align 8, !dbg !4043, !tbaa !1941
  %25 = bitcast %struct._object* %24 to %struct.PyVarObject*, !dbg !4045
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %25, i32 0, i32 1, !dbg !4046
  %26 = load i64, i64* %ob_size, align 8, !dbg !4046, !tbaa !4047
  br label %cond.end, !dbg !4042

cond.false:                                       ; preds = %if.end.4
  %27 = load %struct._object*, %struct._object** %sub_keywords, align 8, !dbg !4048, !tbaa !1941
  %28 = bitcast %struct._object* %27 to %struct.PyVarObject*, !dbg !4050
  %ob_size7 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %28, i32 0, i32 1, !dbg !4051
  %29 = load i64, i64* %ob_size7, align 8, !dbg !4051, !tbaa !4047
  br label %cond.end, !dbg !4042

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %26, %cond.true ], [ %29, %cond.false ], !dbg !4042
  store i64 %cond, i64* %size, align 8, !dbg !4052, !tbaa !2587
  %30 = load i64, i64* %size, align 8, !dbg !4055, !tbaa !2587
  %cmp8 = icmp sgt i64 %30, 8, !dbg !4057
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !4058

if.then.9:                                        ; preds = %cond.end
  %31 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4059, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %31, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.191, i32 0, i32 0)), !dbg !4061
  br label %exit, !dbg !4062

if.end.10:                                        ; preds = %cond.end
  store i64 0, i64* %i, align 8, !dbg !4063, !tbaa !2587
  br label %for.cond, !dbg !4065

for.cond:                                         ; preds = %for.inc, %if.end.10
  %32 = load i64, i64* %i, align 8, !dbg !4066, !tbaa !2587
  %33 = load i64, i64* %size, align 8, !dbg !4070, !tbaa !2587
  %cmp11 = icmp slt i64 %32, %33, !dbg !4071
  br i1 %cmp11, label %for.body, label %for.end, !dbg !4072

for.body:                                         ; preds = %for.cond
  %34 = load %struct._object*, %struct._object** %sub_keywords, align 8, !dbg !4073, !tbaa !1941
  %ob_type12 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !4075
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type12, align 8, !dbg !4075, !tbaa !1995
  %tp_flags13 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 19, !dbg !4076
  %36 = load i64, i64* %tp_flags13, align 8, !dbg !4076, !tbaa !4039
  %and14 = and i64 %36, 33554432, !dbg !4077
  %cmp15 = icmp ne i64 %and14, 0, !dbg !4078
  br i1 %cmp15, label %cond.true.16, label %cond.false.17, !dbg !4079

cond.true.16:                                     ; preds = %for.body
  %37 = load i64, i64* %i, align 8, !dbg !4080, !tbaa !2587
  %38 = load %struct._object*, %struct._object** %sub_keywords, align 8, !dbg !4082, !tbaa !1941
  %39 = bitcast %struct._object* %38 to %struct.PyListObject*, !dbg !4083
  %ob_item = getelementptr inbounds %struct.PyListObject, %struct.PyListObject* %39, i32 0, i32 1, !dbg !4084
  %40 = load %struct._object**, %struct._object*** %ob_item, align 8, !dbg !4084, !tbaa !2380
  %arrayidx = getelementptr %struct._object*, %struct._object** %40, i64 %37, !dbg !4085
  %41 = load %struct._object*, %struct._object** %arrayidx, align 8, !dbg !4085, !tbaa !1941
  br label %cond.end.20, !dbg !4079

cond.false.17:                                    ; preds = %for.body
  %42 = load i64, i64* %i, align 8, !dbg !4086, !tbaa !2587
  %43 = load %struct._object*, %struct._object** %sub_keywords, align 8, !dbg !4088, !tbaa !1941
  %44 = bitcast %struct._object* %43 to %struct.PyTupleObject*, !dbg !4089
  %ob_item18 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %44, i32 0, i32 1, !dbg !4090
  %arrayidx19 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item18, i32 0, i64 %42, !dbg !4091
  %45 = load %struct._object*, %struct._object** %arrayidx19, align 8, !dbg !4091, !tbaa !1941
  br label %cond.end.20, !dbg !4079

cond.end.20:                                      ; preds = %cond.false.17, %cond.true.16
  %cond21 = phi %struct._object* [ %41, %cond.true.16 ], [ %45, %cond.false.17 ], !dbg !4079
  store %struct._object* %cond21, %struct._object** %o, align 8, !dbg !4092, !tbaa !1941
  %46 = load %struct._object*, %struct._object** %o, align 8, !dbg !4095, !tbaa !1941
  %arraydecay = getelementptr inbounds [8 x %struct._object*], [8 x %struct._object*]* %converted, i32 0, i32 0, !dbg !4097
  %47 = load i64, i64* %i, align 8, !dbg !4098, !tbaa !2587
  %add.ptr = getelementptr %struct._object*, %struct._object** %arraydecay, i64 %47, !dbg !4099
  %48 = bitcast %struct._object** %add.ptr to i8*, !dbg !4100
  %call22 = call i32 @PyUnicode_FSConverter(%struct._object* %46, i8* %48), !dbg !4101
  %tobool23 = icmp ne i32 %call22, 0, !dbg !4101
  br i1 %tobool23, label %if.end.26, label %if.then.24, !dbg !4102

if.then.24:                                       ; preds = %cond.end.20
  %49 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4103, !tbaa !1941
  %50 = load i64, i64* %i, align 8, !dbg !4105, !tbaa !2587
  %call25 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %49, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.192, i32 0, i32 0), i64 %50), !dbg !4106
  br label %exit, !dbg !4107

if.end.26:                                        ; preds = %cond.end.20
  %51 = load i64, i64* %i, align 8, !dbg !4108, !tbaa !2587
  %arrayidx27 = getelementptr [8 x %struct._object*], [8 x %struct._object*]* %converted, i32 0, i64 %51, !dbg !4109
  %52 = load %struct._object*, %struct._object** %arrayidx27, align 8, !dbg !4109, !tbaa !1941
  %53 = bitcast %struct._object* %52 to %struct.PyBytesObject*, !dbg !4110
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %53, i32 0, i32 2, !dbg !4111
  %arraydecay28 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !4112
  %54 = load i64, i64* %i, align 8, !dbg !4113, !tbaa !2587
  %arrayidx29 = getelementptr [9 x i8*], [9 x i8*]* %keywords, i32 0, i64 %54, !dbg !4114
  store i8* %arraydecay28, i8** %arrayidx29, align 8, !dbg !4115, !tbaa !1941
  br label %for.inc, !dbg !4116

for.inc:                                          ; preds = %if.end.26
  %55 = load i64, i64* %i, align 8, !dbg !4117, !tbaa !2587
  %inc = add i64 %55, 1, !dbg !4117
  store i64 %inc, i64* %i, align 8, !dbg !4117, !tbaa !2587
  br label %for.cond, !dbg !4118

for.end:                                          ; preds = %for.cond
  %56 = load %struct._object*, %struct._object** %sub_args, align 8, !dbg !4119, !tbaa !1941
  %57 = load %struct._object*, %struct._object** %sub_kwargs, align 8, !dbg !4120, !tbaa !1941
  %58 = load i8*, i8** %sub_format, align 8, !dbg !4121, !tbaa !1941
  %arraydecay30 = getelementptr inbounds [9 x i8*], [9 x i8*]* %keywords, i32 0, i32 0, !dbg !4122
  %arraydecay31 = getelementptr inbounds [8 x [4 x double]], [8 x [4 x double]]* %buffers, i32 0, i32 0, !dbg !4123
  %add.ptr32 = getelementptr [4 x double], [4 x double]* %arraydecay31, i64 0, !dbg !4124
  %arraydecay33 = getelementptr inbounds [8 x [4 x double]], [8 x [4 x double]]* %buffers, i32 0, i32 0, !dbg !4125
  %add.ptr34 = getelementptr [4 x double], [4 x double]* %arraydecay33, i64 1, !dbg !4126
  %arraydecay35 = getelementptr inbounds [8 x [4 x double]], [8 x [4 x double]]* %buffers, i32 0, i32 0, !dbg !4127
  %add.ptr36 = getelementptr [4 x double], [4 x double]* %arraydecay35, i64 2, !dbg !4128
  %arraydecay37 = getelementptr inbounds [8 x [4 x double]], [8 x [4 x double]]* %buffers, i32 0, i32 0, !dbg !4129
  %add.ptr38 = getelementptr [4 x double], [4 x double]* %arraydecay37, i64 3, !dbg !4130
  %arraydecay39 = getelementptr inbounds [8 x [4 x double]], [8 x [4 x double]]* %buffers, i32 0, i32 0, !dbg !4131
  %add.ptr40 = getelementptr [4 x double], [4 x double]* %arraydecay39, i64 4, !dbg !4132
  %arraydecay41 = getelementptr inbounds [8 x [4 x double]], [8 x [4 x double]]* %buffers, i32 0, i32 0, !dbg !4133
  %add.ptr42 = getelementptr [4 x double], [4 x double]* %arraydecay41, i64 5, !dbg !4134
  %arraydecay43 = getelementptr inbounds [8 x [4 x double]], [8 x [4 x double]]* %buffers, i32 0, i32 0, !dbg !4135
  %add.ptr44 = getelementptr [4 x double], [4 x double]* %arraydecay43, i64 6, !dbg !4136
  %arraydecay45 = getelementptr inbounds [8 x [4 x double]], [8 x [4 x double]]* %buffers, i32 0, i32 0, !dbg !4137
  %add.ptr46 = getelementptr [4 x double], [4 x double]* %arraydecay45, i64 7, !dbg !4138
  %call47 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %56, %struct._object* %57, i8* %58, i8** %arraydecay30, [4 x double]* %add.ptr32, [4 x double]* %add.ptr34, [4 x double]* %add.ptr36, [4 x double]* %add.ptr38, [4 x double]* %add.ptr40, [4 x double]* %add.ptr42, [4 x double]* %add.ptr44, [4 x double]* %add.ptr46), !dbg !4139
  store i32 %call47, i32* %result, align 4, !dbg !4140, !tbaa !1971
  %59 = load i32, i32* %result, align 4, !dbg !4141, !tbaa !1971
  %tobool48 = icmp ne i32 %59, 0, !dbg !4141
  br i1 %tobool48, label %if.then.49, label %if.end.51, !dbg !4143

if.then.49:                                       ; preds = %for.end
  store %struct._object* @_Py_NoneStruct, %struct._object** %return_value, align 8, !dbg !4144, !tbaa !1941
  %60 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4146, !tbaa !1961
  %inc50 = add i64 %60, 1, !dbg !4146
  store i64 %inc50, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4146, !tbaa !1961
  br label %if.end.51, !dbg !4147

if.end.51:                                        ; preds = %if.then.49, %for.end
  br label %exit, !dbg !4148

exit:                                             ; preds = %if.end.51, %if.then.24, %if.then.9
  store i64 8, i64* %size, align 8, !dbg !4150, !tbaa !2587
  store i64 0, i64* %i, align 8, !dbg !4151, !tbaa !2587
  br label %for.cond.52, !dbg !4152

for.cond.52:                                      ; preds = %for.inc.66, %exit
  %61 = load i64, i64* %i, align 8, !dbg !4153, !tbaa !2587
  %62 = load i64, i64* %size, align 8, !dbg !4156, !tbaa !2587
  %cmp53 = icmp slt i64 %61, %62, !dbg !4157
  br i1 %cmp53, label %for.body.54, label %for.end.68, !dbg !4158

for.body.54:                                      ; preds = %for.cond.52
  br label %do.body, !dbg !4159

do.body:                                          ; preds = %for.body.54
  %63 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4160
  call void @llvm.lifetime.start(i64 8, i8* %63) #2, !dbg !4160
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !949, metadata !1945), !dbg !4162
  %64 = load i64, i64* %i, align 8, !dbg !4163, !tbaa !2587
  %arrayidx55 = getelementptr [8 x %struct._object*], [8 x %struct._object*]* %converted, i32 0, i64 %64, !dbg !4164
  %65 = load %struct._object*, %struct._object** %arrayidx55, align 8, !dbg !4164, !tbaa !1941
  store %struct._object* %65, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4162, !tbaa !1941
  %66 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4165, !tbaa !1941
  %cmp56 = icmp ne %struct._object* %66, null, !dbg !4166
  br i1 %cmp56, label %if.then.57, label %if.end.63, !dbg !4167

if.then.57:                                       ; preds = %do.body
  br label %do.body.58, !dbg !4168

do.body.58:                                       ; preds = %if.then.57
  %67 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4170
  call void @llvm.lifetime.start(i64 8, i8* %67) #2, !dbg !4170
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !954, metadata !1945), !dbg !4172
  %68 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4173, !tbaa !1941
  store %struct._object* %68, %struct._object** %_py_decref_tmp, align 8, !dbg !4172, !tbaa !1941
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4174, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0, !dbg !4176
  %70 = load i64, i64* %ob_refcnt, align 8, !dbg !4177, !tbaa !1961
  %dec = add i64 %70, -1, !dbg !4177
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4177, !tbaa !1961
  %cmp59 = icmp ne i64 %dec, 0, !dbg !4178
  br i1 %cmp59, label %if.then.60, label %if.else, !dbg !4179

if.then.60:                                       ; preds = %do.body.58
  br label %if.end.62, !dbg !4180

if.else:                                          ; preds = %do.body.58
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4182, !tbaa !1941
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1, !dbg !4184
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8, !dbg !4184, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4, !dbg !4185
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4185, !tbaa !1997
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4186, !tbaa !1941
  call void %73(%struct._object* %74), !dbg !4187
  br label %if.end.62

if.end.62:                                        ; preds = %if.else, %if.then.60
  %75 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4188
  call void @llvm.lifetime.end(i64 8, i8* %75) #2, !dbg !4188
  br label %do.cond, !dbg !4190

do.cond:                                          ; preds = %if.end.62
  br label %do.end, !dbg !4191

do.end:                                           ; preds = %do.cond
  br label %if.end.63, !dbg !4193

if.end.63:                                        ; preds = %do.end, %do.body
  %76 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4195
  call void @llvm.lifetime.end(i64 8, i8* %76) #2, !dbg !4195
  br label %do.cond.64, !dbg !4198

do.cond.64:                                       ; preds = %if.end.63
  br label %do.end.65, !dbg !4199

do.end.65:                                        ; preds = %do.cond.64
  br label %for.inc.66, !dbg !4201

for.inc.66:                                       ; preds = %do.end.65
  %77 = load i64, i64* %i, align 8, !dbg !4202, !tbaa !2587
  %inc67 = add i64 %77, 1, !dbg !4202
  store i64 %inc67, i64* %i, align 8, !dbg !4202, !tbaa !2587
  br label %for.cond.52, !dbg !4203

for.end.68:                                       ; preds = %for.cond.52
  %78 = load %struct._object*, %struct._object** %return_value, align 8, !dbg !4204, !tbaa !1941
  store %struct._object* %78, %struct._object** %retval, !dbg !4205
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4205

cleanup:                                          ; preds = %for.end.68, %if.then.3, %if.then
  %79 = bitcast [8 x [4 x double]]* %buffers to i8*, !dbg !4206
  call void @llvm.lifetime.end(i64 256, i8* %79) #2, !dbg !4206
  %80 = bitcast %struct._object** %return_value to i8*, !dbg !4206
  call void @llvm.lifetime.end(i64 8, i8* %80) #2, !dbg !4206
  %81 = bitcast i32* %result to i8*, !dbg !4206
  call void @llvm.lifetime.end(i64 4, i8* %81) #2, !dbg !4206
  %82 = bitcast [8 x %struct._object*]* %converted to i8*, !dbg !4206
  call void @llvm.lifetime.end(i64 64, i8* %82) #2, !dbg !4206
  %83 = bitcast %struct._object** %o to i8*, !dbg !4206
  call void @llvm.lifetime.end(i64 8, i8* %83) #2, !dbg !4206
  %84 = bitcast [9 x i8*]* %keywords to i8*, !dbg !4206
  call void @llvm.lifetime.end(i64 72, i8* %84) #2, !dbg !4206
  %85 = bitcast i64* %size to i8*, !dbg !4206
  call void @llvm.lifetime.end(i64 8, i8* %85) #2, !dbg !4206
  %86 = bitcast i64* %i to i8*, !dbg !4206
  call void @llvm.lifetime.end(i64 8, i8* %86) #2, !dbg !4206
  %87 = bitcast %struct._object** %sub_keywords to i8*, !dbg !4206
  call void @llvm.lifetime.end(i64 8, i8* %87) #2, !dbg !4206
  %88 = bitcast i8** %sub_format to i8*, !dbg !4206
  call void @llvm.lifetime.end(i64 8, i8* %88) #2, !dbg !4206
  %89 = bitcast %struct._object** %sub_kwargs to i8*, !dbg !4206
  call void @llvm.lifetime.end(i64 8, i8* %89) #2, !dbg !4206
  %90 = bitcast %struct._object** %sub_args to i8*, !dbg !4206
  call void @llvm.lifetime.end(i64 8, i8* %90) #2, !dbg !4206
  %91 = load %struct._object*, %struct._object** %retval, !dbg !4206
  ret %struct._object* %91, !dbg !4206
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_null_strings(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %o1 = alloca %struct._object*, align 8
  %o2 = alloca %struct._object*, align 8
  %tuple = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp10 = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !959, metadata !1945), !dbg !4207
  %0 = bitcast %struct._object** %o1 to i8*, !dbg !4208
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4208
  call void @llvm.dbg.declare(metadata %struct._object** %o1, metadata !960, metadata !1945), !dbg !4209
  %call = call %struct._object* @PyObject_Str(%struct._object* null), !dbg !4210
  store %struct._object* %call, %struct._object** %o1, align 8, !dbg !4209, !tbaa !1941
  %1 = bitcast %struct._object** %o2 to i8*, !dbg !4208
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !4208
  call void @llvm.dbg.declare(metadata %struct._object** %o2, metadata !961, metadata !1945), !dbg !4211
  %call1 = call %struct._object* @PyObject_Str(%struct._object* null), !dbg !4212
  store %struct._object* %call1, %struct._object** %o2, align 8, !dbg !4211, !tbaa !1941
  %2 = bitcast %struct._object** %tuple to i8*, !dbg !4213
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !4213
  call void @llvm.dbg.declare(metadata %struct._object** %tuple, metadata !962, metadata !1945), !dbg !4214
  %3 = load %struct._object*, %struct._object** %o1, align 8, !dbg !4215, !tbaa !1941
  %4 = load %struct._object*, %struct._object** %o2, align 8, !dbg !4216, !tbaa !1941
  %call2 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 2, %struct._object* %3, %struct._object* %4), !dbg !4217
  store %struct._object* %call2, %struct._object** %tuple, align 8, !dbg !4214, !tbaa !1941
  br label %do.body, !dbg !4218

do.body:                                          ; preds = %entry
  %5 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4219
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !4219
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !963, metadata !1945), !dbg !4221
  %6 = load %struct._object*, %struct._object** %o1, align 8, !dbg !4222, !tbaa !1941
  store %struct._object* %6, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4221, !tbaa !1941
  %7 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4223, !tbaa !1941
  %cmp = icmp ne %struct._object* %7, null, !dbg !4224
  br i1 %cmp, label %if.then, label %if.end.6, !dbg !4225

if.then:                                          ; preds = %do.body
  br label %do.body.3, !dbg !4226

do.body.3:                                        ; preds = %if.then
  %8 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4228
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !4228
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !965, metadata !1945), !dbg !4230
  %9 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4231, !tbaa !1941
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8, !dbg !4230, !tbaa !1941
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4232, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !4234
  %11 = load i64, i64* %ob_refcnt, align 8, !dbg !4235, !tbaa !1961
  %dec = add i64 %11, -1, !dbg !4235
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4235, !tbaa !1961
  %cmp4 = icmp ne i64 %dec, 0, !dbg !4236
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !4237

if.then.5:                                        ; preds = %do.body.3
  br label %if.end, !dbg !4238

if.else:                                          ; preds = %do.body.3
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4240, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1, !dbg !4242
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4242, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4, !dbg !4243
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4243, !tbaa !1997
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4244, !tbaa !1941
  call void %14(%struct._object* %15), !dbg !4245
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.5
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4246
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !4246
  br label %do.cond, !dbg !4248

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !4249

do.end:                                           ; preds = %do.cond
  br label %if.end.6, !dbg !4251

if.end.6:                                         ; preds = %do.end, %do.body
  %17 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4253
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !4253
  br label %do.cond.7, !dbg !4256

do.cond.7:                                        ; preds = %if.end.6
  br label %do.end.8, !dbg !4257

do.end.8:                                         ; preds = %do.cond.7
  br label %do.body.9, !dbg !4259

do.body.9:                                        ; preds = %do.end.8
  %18 = bitcast %struct._object** %_py_xdecref_tmp10 to i8*, !dbg !4260
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !4260
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp10, metadata !968, metadata !1945), !dbg !4262
  %19 = load %struct._object*, %struct._object** %o2, align 8, !dbg !4263, !tbaa !1941
  store %struct._object* %19, %struct._object** %_py_xdecref_tmp10, align 8, !dbg !4262, !tbaa !1941
  %20 = load %struct._object*, %struct._object** %_py_xdecref_tmp10, align 8, !dbg !4264, !tbaa !1941
  %cmp11 = icmp ne %struct._object* %20, null, !dbg !4265
  br i1 %cmp11, label %if.then.12, label %if.end.25, !dbg !4266

if.then.12:                                       ; preds = %do.body.9
  br label %do.body.13, !dbg !4267

do.body.13:                                       ; preds = %if.then.12
  %21 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !4269
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !4269
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !970, metadata !1945), !dbg !4271
  %22 = load %struct._object*, %struct._object** %_py_xdecref_tmp10, align 8, !dbg !4272, !tbaa !1941
  store %struct._object* %22, %struct._object** %_py_decref_tmp14, align 8, !dbg !4271, !tbaa !1941
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !4273, !tbaa !1941
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !4275
  %24 = load i64, i64* %ob_refcnt15, align 8, !dbg !4276, !tbaa !1961
  %dec16 = add i64 %24, -1, !dbg !4276
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !4276, !tbaa !1961
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !4277
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !4278

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !4279

if.else.19:                                       ; preds = %do.body.13
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !4281, !tbaa !1941
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !4283
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !4283, !tbaa !1995
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !4284
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !4284, !tbaa !1997
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !4285, !tbaa !1941
  call void %27(%struct._object* %28), !dbg !4286
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %29 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !4287
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !4287
  br label %do.cond.23, !dbg !4289

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !4290

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25, !dbg !4292

if.end.25:                                        ; preds = %do.end.24, %do.body.9
  %30 = bitcast %struct._object** %_py_xdecref_tmp10 to i8*, !dbg !4294
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !4294
  br label %do.cond.26, !dbg !4295

do.cond.26:                                       ; preds = %if.end.25
  br label %do.end.27, !dbg !4296

do.end.27:                                        ; preds = %do.cond.26
  %31 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !4298, !tbaa !1941
  %32 = bitcast %struct._object** %tuple to i8*, !dbg !4299
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !4299
  %33 = bitcast %struct._object** %o2 to i8*, !dbg !4299
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !4299
  %34 = bitcast %struct._object** %o1 to i8*, !dbg !4299
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !4299
  ret %struct._object* %31, !dbg !4300
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_string_from_format(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %msg = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp16 = alloca %struct._object*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  %_py_decref_tmp56 = alloca %struct._object*, align 8
  %_py_decref_tmp76 = alloca %struct._object*, align 8
  %_py_decref_tmp96 = alloca %struct._object*, align 8
  %_py_decref_tmp116 = alloca %struct._object*, align 8
  %_py_decref_tmp136 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp151 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !975, metadata !1945), !dbg !4301
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !976, metadata !1945), !dbg !4302
  %0 = bitcast %struct._object** %result to i8*, !dbg !4303
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4303
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !977, metadata !1945), !dbg !4304
  %1 = bitcast i8** %msg to i8*, !dbg !4305
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !4305
  call void @llvm.dbg.declare(metadata i8** %msg, metadata !978, metadata !1945), !dbg !4306
  %call = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.193, i32 0, i32 0), i32 1), !dbg !4307
  store %struct._object* %call, %struct._object** %result, align 8, !dbg !4308, !tbaa !1941
  %2 = load %struct._object*, %struct._object** %result, align 8, !dbg !4309, !tbaa !1941
  %cmp = icmp eq %struct._object* %2, null, !dbg !4311
  br i1 %cmp, label %if.then, label %if.end, !dbg !4312

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4313
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4315

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %result, align 8, !dbg !4316, !tbaa !1941
  %call1 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.194, i32 0, i32 0)), !dbg !4319
  %tobool = icmp ne i32 %call1, 0, !dbg !4319
  br i1 %tobool, label %if.then.2, label %if.end.3, !dbg !4320

if.then.2:                                        ; preds = %if.end
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.195, i32 0, i32 0), i8** %msg, align 8, !dbg !4321, !tbaa !1941
  br label %Fail, !dbg !4324

if.end.3:                                         ; preds = %if.end
  br label %do.body, !dbg !4325

do.body:                                          ; preds = %if.end.3
  %4 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4327
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !4327
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !979, metadata !1945), !dbg !4329
  %5 = load %struct._object*, %struct._object** %result, align 8, !dbg !4330, !tbaa !1941
  store %struct._object* %5, %struct._object** %_py_decref_tmp, align 8, !dbg !4329, !tbaa !1941
  %6 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4331, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0, !dbg !4333
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !4334, !tbaa !1961
  %dec = add i64 %7, -1, !dbg !4334
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4334, !tbaa !1961
  %cmp4 = icmp ne i64 %dec, 0, !dbg !4335
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !4336

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !4337

if.else:                                          ; preds = %do.body
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4339, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !4341
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4341, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 4, !dbg !4342
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4342, !tbaa !1997
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4343, !tbaa !1941
  call void %10(%struct._object* %11), !dbg !4344
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4345
  call void @llvm.lifetime.end(i64 8, i8* %12) #2, !dbg !4345
  br label %do.cond, !dbg !4347

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !4348

do.end:                                           ; preds = %do.cond
  %call7 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.196, i32 0, i32 0), i64 1), !dbg !4350
  store %struct._object* %call7, %struct._object** %result, align 8, !dbg !4351, !tbaa !1941
  %13 = load %struct._object*, %struct._object** %result, align 8, !dbg !4352, !tbaa !1941
  %cmp8 = icmp eq %struct._object* %13, null, !dbg !4354
  br i1 %cmp8, label %if.then.9, label %if.end.10, !dbg !4355

if.then.9:                                        ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !4356
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4358

if.end.10:                                        ; preds = %do.end
  %14 = load %struct._object*, %struct._object** %result, align 8, !dbg !4359, !tbaa !1941
  %call11 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.194, i32 0, i32 0)), !dbg !4362
  %tobool12 = icmp ne i32 %call11, 0, !dbg !4362
  br i1 %tobool12, label %if.then.13, label %if.end.14, !dbg !4363

if.then.13:                                       ; preds = %if.end.10
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.197, i32 0, i32 0), i8** %msg, align 8, !dbg !4364, !tbaa !1941
  br label %Fail, !dbg !4367

if.end.14:                                        ; preds = %if.end.10
  br label %do.body.15, !dbg !4368

do.body.15:                                       ; preds = %if.end.14
  %15 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !4369
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !4369
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp16, metadata !981, metadata !1945), !dbg !4371
  %16 = load %struct._object*, %struct._object** %result, align 8, !dbg !4372, !tbaa !1941
  store %struct._object* %16, %struct._object** %_py_decref_tmp16, align 8, !dbg !4371, !tbaa !1941
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !4373, !tbaa !1941
  %ob_refcnt17 = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !4375
  %18 = load i64, i64* %ob_refcnt17, align 8, !dbg !4376, !tbaa !1961
  %dec18 = add i64 %18, -1, !dbg !4376
  store i64 %dec18, i64* %ob_refcnt17, align 8, !dbg !4376, !tbaa !1961
  %cmp19 = icmp ne i64 %dec18, 0, !dbg !4377
  br i1 %cmp19, label %if.then.20, label %if.else.21, !dbg !4378

if.then.20:                                       ; preds = %do.body.15
  br label %if.end.24, !dbg !4379

if.else.21:                                       ; preds = %do.body.15
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !4381, !tbaa !1941
  %ob_type22 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !4383
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type22, align 8, !dbg !4383, !tbaa !1995
  %tp_dealloc23 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !4384
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc23, align 8, !dbg !4384, !tbaa !1997
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp16, align 8, !dbg !4385, !tbaa !1941
  call void %21(%struct._object* %22), !dbg !4386
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.21, %if.then.20
  %23 = bitcast %struct._object** %_py_decref_tmp16 to i8*, !dbg !4387
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !4387
  br label %do.cond.25, !dbg !4388

do.cond.25:                                       ; preds = %if.end.24
  br label %do.end.26, !dbg !4389

do.end.26:                                        ; preds = %do.cond.25
  %call27 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.198, i32 0, i32 0), i64 1), !dbg !4391
  store %struct._object* %call27, %struct._object** %result, align 8, !dbg !4392, !tbaa !1941
  %24 = load %struct._object*, %struct._object** %result, align 8, !dbg !4393, !tbaa !1941
  %cmp28 = icmp eq %struct._object* %24, null, !dbg !4395
  br i1 %cmp28, label %if.then.29, label %if.end.30, !dbg !4396

if.then.29:                                       ; preds = %do.end.26
  store %struct._object* null, %struct._object** %retval, !dbg !4397
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4399

if.end.30:                                        ; preds = %do.end.26
  %25 = load %struct._object*, %struct._object** %result, align 8, !dbg !4400, !tbaa !1941
  %call31 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.194, i32 0, i32 0)), !dbg !4403
  %tobool32 = icmp ne i32 %call31, 0, !dbg !4403
  br i1 %tobool32, label %if.then.33, label %if.end.34, !dbg !4404

if.then.33:                                       ; preds = %if.end.30
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.199, i32 0, i32 0), i8** %msg, align 8, !dbg !4405, !tbaa !1941
  br label %Fail, !dbg !4408

if.end.34:                                        ; preds = %if.end.30
  br label %do.body.35, !dbg !4409

do.body.35:                                       ; preds = %if.end.34
  %26 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !4410
  call void @llvm.lifetime.start(i64 8, i8* %26) #2, !dbg !4410
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp36, metadata !983, metadata !1945), !dbg !4412
  %27 = load %struct._object*, %struct._object** %result, align 8, !dbg !4413, !tbaa !1941
  store %struct._object* %27, %struct._object** %_py_decref_tmp36, align 8, !dbg !4412, !tbaa !1941
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !4414, !tbaa !1941
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !4416
  %29 = load i64, i64* %ob_refcnt37, align 8, !dbg !4417, !tbaa !1961
  %dec38 = add i64 %29, -1, !dbg !4417
  store i64 %dec38, i64* %ob_refcnt37, align 8, !dbg !4417, !tbaa !1961
  %cmp39 = icmp ne i64 %dec38, 0, !dbg !4418
  br i1 %cmp39, label %if.then.40, label %if.else.41, !dbg !4419

if.then.40:                                       ; preds = %do.body.35
  br label %if.end.44, !dbg !4420

if.else.41:                                       ; preds = %do.body.35
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !4422, !tbaa !1941
  %ob_type42 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1, !dbg !4424
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type42, align 8, !dbg !4424, !tbaa !1995
  %tp_dealloc43 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4, !dbg !4425
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc43, align 8, !dbg !4425, !tbaa !1997
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8, !dbg !4426, !tbaa !1941
  call void %32(%struct._object* %33), !dbg !4427
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.41, %if.then.40
  %34 = bitcast %struct._object** %_py_decref_tmp36 to i8*, !dbg !4428
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !4428
  br label %do.cond.45, !dbg !4429

do.cond.45:                                       ; preds = %if.end.44
  br label %do.end.46, !dbg !4430

do.end.46:                                        ; preds = %do.cond.45
  %call47 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.200, i32 0, i32 0), i32 1), !dbg !4432
  store %struct._object* %call47, %struct._object** %result, align 8, !dbg !4433, !tbaa !1941
  %35 = load %struct._object*, %struct._object** %result, align 8, !dbg !4434, !tbaa !1941
  %cmp48 = icmp eq %struct._object* %35, null, !dbg !4436
  br i1 %cmp48, label %if.then.49, label %if.end.50, !dbg !4437

if.then.49:                                       ; preds = %do.end.46
  store %struct._object* null, %struct._object** %retval, !dbg !4438
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4440

if.end.50:                                        ; preds = %do.end.46
  %36 = load %struct._object*, %struct._object** %result, align 8, !dbg !4441, !tbaa !1941
  %call51 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.194, i32 0, i32 0)), !dbg !4444
  %tobool52 = icmp ne i32 %call51, 0, !dbg !4444
  br i1 %tobool52, label %if.then.53, label %if.end.54, !dbg !4445

if.then.53:                                       ; preds = %if.end.50
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.201, i32 0, i32 0), i8** %msg, align 8, !dbg !4446, !tbaa !1941
  br label %Fail, !dbg !4449

if.end.54:                                        ; preds = %if.end.50
  br label %do.body.55, !dbg !4450

do.body.55:                                       ; preds = %if.end.54
  %37 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !4451
  call void @llvm.lifetime.start(i64 8, i8* %37) #2, !dbg !4451
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp56, metadata !985, metadata !1945), !dbg !4453
  %38 = load %struct._object*, %struct._object** %result, align 8, !dbg !4454, !tbaa !1941
  store %struct._object* %38, %struct._object** %_py_decref_tmp56, align 8, !dbg !4453, !tbaa !1941
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !4455, !tbaa !1941
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !4457
  %40 = load i64, i64* %ob_refcnt57, align 8, !dbg !4458, !tbaa !1961
  %dec58 = add i64 %40, -1, !dbg !4458
  store i64 %dec58, i64* %ob_refcnt57, align 8, !dbg !4458, !tbaa !1961
  %cmp59 = icmp ne i64 %dec58, 0, !dbg !4459
  br i1 %cmp59, label %if.then.60, label %if.else.61, !dbg !4460

if.then.60:                                       ; preds = %do.body.55
  br label %if.end.64, !dbg !4461

if.else.61:                                       ; preds = %do.body.55
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !4463, !tbaa !1941
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1, !dbg !4465
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8, !dbg !4465, !tbaa !1995
  %tp_dealloc63 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4, !dbg !4466
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc63, align 8, !dbg !4466, !tbaa !1997
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8, !dbg !4467, !tbaa !1941
  call void %43(%struct._object* %44), !dbg !4468
  br label %if.end.64

if.end.64:                                        ; preds = %if.else.61, %if.then.60
  %45 = bitcast %struct._object** %_py_decref_tmp56 to i8*, !dbg !4469
  call void @llvm.lifetime.end(i64 8, i8* %45) #2, !dbg !4469
  br label %do.cond.65, !dbg !4470

do.cond.65:                                       ; preds = %if.end.64
  br label %do.end.66, !dbg !4471

do.end.66:                                        ; preds = %do.cond.65
  %call67 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.202, i32 0, i32 0), i64 1), !dbg !4473
  store %struct._object* %call67, %struct._object** %result, align 8, !dbg !4474, !tbaa !1941
  %46 = load %struct._object*, %struct._object** %result, align 8, !dbg !4475, !tbaa !1941
  %cmp68 = icmp eq %struct._object* %46, null, !dbg !4477
  br i1 %cmp68, label %if.then.69, label %if.end.70, !dbg !4478

if.then.69:                                       ; preds = %do.end.66
  store %struct._object* null, %struct._object** %retval, !dbg !4479
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4481

if.end.70:                                        ; preds = %do.end.66
  %47 = load %struct._object*, %struct._object** %result, align 8, !dbg !4482, !tbaa !1941
  %call71 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %47, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.194, i32 0, i32 0)), !dbg !4485
  %tobool72 = icmp ne i32 %call71, 0, !dbg !4485
  br i1 %tobool72, label %if.then.73, label %if.end.74, !dbg !4486

if.then.73:                                       ; preds = %if.end.70
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.203, i32 0, i32 0), i8** %msg, align 8, !dbg !4487, !tbaa !1941
  br label %Fail, !dbg !4490

if.end.74:                                        ; preds = %if.end.70
  br label %do.body.75, !dbg !4491

do.body.75:                                       ; preds = %if.end.74
  %48 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !4492
  call void @llvm.lifetime.start(i64 8, i8* %48) #2, !dbg !4492
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp76, metadata !987, metadata !1945), !dbg !4494
  %49 = load %struct._object*, %struct._object** %result, align 8, !dbg !4495, !tbaa !1941
  store %struct._object* %49, %struct._object** %_py_decref_tmp76, align 8, !dbg !4494, !tbaa !1941
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !4496, !tbaa !1941
  %ob_refcnt77 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0, !dbg !4498
  %51 = load i64, i64* %ob_refcnt77, align 8, !dbg !4499, !tbaa !1961
  %dec78 = add i64 %51, -1, !dbg !4499
  store i64 %dec78, i64* %ob_refcnt77, align 8, !dbg !4499, !tbaa !1961
  %cmp79 = icmp ne i64 %dec78, 0, !dbg !4500
  br i1 %cmp79, label %if.then.80, label %if.else.81, !dbg !4501

if.then.80:                                       ; preds = %do.body.75
  br label %if.end.84, !dbg !4502

if.else.81:                                       ; preds = %do.body.75
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !4504, !tbaa !1941
  %ob_type82 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1, !dbg !4506
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type82, align 8, !dbg !4506, !tbaa !1995
  %tp_dealloc83 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4, !dbg !4507
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc83, align 8, !dbg !4507, !tbaa !1997
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8, !dbg !4508, !tbaa !1941
  call void %54(%struct._object* %55), !dbg !4509
  br label %if.end.84

if.end.84:                                        ; preds = %if.else.81, %if.then.80
  %56 = bitcast %struct._object** %_py_decref_tmp76 to i8*, !dbg !4510
  call void @llvm.lifetime.end(i64 8, i8* %56) #2, !dbg !4510
  br label %do.cond.85, !dbg !4511

do.cond.85:                                       ; preds = %if.end.84
  br label %do.end.86, !dbg !4512

do.end.86:                                        ; preds = %do.cond.85
  %call87 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.204, i32 0, i32 0), i64 1), !dbg !4514
  store %struct._object* %call87, %struct._object** %result, align 8, !dbg !4515, !tbaa !1941
  %57 = load %struct._object*, %struct._object** %result, align 8, !dbg !4516, !tbaa !1941
  %cmp88 = icmp eq %struct._object* %57, null, !dbg !4518
  br i1 %cmp88, label %if.then.89, label %if.end.90, !dbg !4519

if.then.89:                                       ; preds = %do.end.86
  store %struct._object* null, %struct._object** %retval, !dbg !4520
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4522

if.end.90:                                        ; preds = %do.end.86
  %58 = load %struct._object*, %struct._object** %result, align 8, !dbg !4523, !tbaa !1941
  %call91 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %58, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.194, i32 0, i32 0)), !dbg !4526
  %tobool92 = icmp ne i32 %call91, 0, !dbg !4526
  br i1 %tobool92, label %if.then.93, label %if.end.94, !dbg !4527

if.then.93:                                       ; preds = %if.end.90
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.205, i32 0, i32 0), i8** %msg, align 8, !dbg !4528, !tbaa !1941
  br label %Fail, !dbg !4531

if.end.94:                                        ; preds = %if.end.90
  br label %do.body.95, !dbg !4532

do.body.95:                                       ; preds = %if.end.94
  %59 = bitcast %struct._object** %_py_decref_tmp96 to i8*, !dbg !4533
  call void @llvm.lifetime.start(i64 8, i8* %59) #2, !dbg !4533
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp96, metadata !989, metadata !1945), !dbg !4535
  %60 = load %struct._object*, %struct._object** %result, align 8, !dbg !4536, !tbaa !1941
  store %struct._object* %60, %struct._object** %_py_decref_tmp96, align 8, !dbg !4535, !tbaa !1941
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp96, align 8, !dbg !4537, !tbaa !1941
  %ob_refcnt97 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 0, !dbg !4539
  %62 = load i64, i64* %ob_refcnt97, align 8, !dbg !4540, !tbaa !1961
  %dec98 = add i64 %62, -1, !dbg !4540
  store i64 %dec98, i64* %ob_refcnt97, align 8, !dbg !4540, !tbaa !1961
  %cmp99 = icmp ne i64 %dec98, 0, !dbg !4541
  br i1 %cmp99, label %if.then.100, label %if.else.101, !dbg !4542

if.then.100:                                      ; preds = %do.body.95
  br label %if.end.104, !dbg !4543

if.else.101:                                      ; preds = %do.body.95
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp96, align 8, !dbg !4545, !tbaa !1941
  %ob_type102 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 1, !dbg !4547
  %64 = load %struct._typeobject*, %struct._typeobject** %ob_type102, align 8, !dbg !4547, !tbaa !1995
  %tp_dealloc103 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i32 0, i32 4, !dbg !4548
  %65 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc103, align 8, !dbg !4548, !tbaa !1997
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp96, align 8, !dbg !4549, !tbaa !1941
  call void %65(%struct._object* %66), !dbg !4550
  br label %if.end.104

if.end.104:                                       ; preds = %if.else.101, %if.then.100
  %67 = bitcast %struct._object** %_py_decref_tmp96 to i8*, !dbg !4551
  call void @llvm.lifetime.end(i64 8, i8* %67) #2, !dbg !4551
  br label %do.cond.105, !dbg !4552

do.cond.105:                                      ; preds = %if.end.104
  br label %do.end.106, !dbg !4553

do.end.106:                                       ; preds = %do.cond.105
  %call107 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.206, i32 0, i32 0), i64 1), !dbg !4555
  store %struct._object* %call107, %struct._object** %result, align 8, !dbg !4556, !tbaa !1941
  %68 = load %struct._object*, %struct._object** %result, align 8, !dbg !4557, !tbaa !1941
  %cmp108 = icmp eq %struct._object* %68, null, !dbg !4559
  br i1 %cmp108, label %if.then.109, label %if.end.110, !dbg !4560

if.then.109:                                      ; preds = %do.end.106
  store %struct._object* null, %struct._object** %retval, !dbg !4561
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4563

if.end.110:                                       ; preds = %do.end.106
  %69 = load %struct._object*, %struct._object** %result, align 8, !dbg !4564, !tbaa !1941
  %call111 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %69, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.194, i32 0, i32 0)), !dbg !4567
  %tobool112 = icmp ne i32 %call111, 0, !dbg !4567
  br i1 %tobool112, label %if.then.113, label %if.end.114, !dbg !4568

if.then.113:                                      ; preds = %if.end.110
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.207, i32 0, i32 0), i8** %msg, align 8, !dbg !4569, !tbaa !1941
  br label %Fail, !dbg !4572

if.end.114:                                       ; preds = %if.end.110
  br label %do.body.115, !dbg !4573

do.body.115:                                      ; preds = %if.end.114
  %70 = bitcast %struct._object** %_py_decref_tmp116 to i8*, !dbg !4574
  call void @llvm.lifetime.start(i64 8, i8* %70) #2, !dbg !4574
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp116, metadata !991, metadata !1945), !dbg !4576
  %71 = load %struct._object*, %struct._object** %result, align 8, !dbg !4577, !tbaa !1941
  store %struct._object* %71, %struct._object** %_py_decref_tmp116, align 8, !dbg !4576, !tbaa !1941
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp116, align 8, !dbg !4578, !tbaa !1941
  %ob_refcnt117 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 0, !dbg !4580
  %73 = load i64, i64* %ob_refcnt117, align 8, !dbg !4581, !tbaa !1961
  %dec118 = add i64 %73, -1, !dbg !4581
  store i64 %dec118, i64* %ob_refcnt117, align 8, !dbg !4581, !tbaa !1961
  %cmp119 = icmp ne i64 %dec118, 0, !dbg !4582
  br i1 %cmp119, label %if.then.120, label %if.else.121, !dbg !4583

if.then.120:                                      ; preds = %do.body.115
  br label %if.end.124, !dbg !4584

if.else.121:                                      ; preds = %do.body.115
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp116, align 8, !dbg !4586, !tbaa !1941
  %ob_type122 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 1, !dbg !4588
  %75 = load %struct._typeobject*, %struct._typeobject** %ob_type122, align 8, !dbg !4588, !tbaa !1995
  %tp_dealloc123 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %75, i32 0, i32 4, !dbg !4589
  %76 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc123, align 8, !dbg !4589, !tbaa !1997
  %77 = load %struct._object*, %struct._object** %_py_decref_tmp116, align 8, !dbg !4590, !tbaa !1941
  call void %76(%struct._object* %77), !dbg !4591
  br label %if.end.124

if.end.124:                                       ; preds = %if.else.121, %if.then.120
  %78 = bitcast %struct._object** %_py_decref_tmp116 to i8*, !dbg !4592
  call void @llvm.lifetime.end(i64 8, i8* %78) #2, !dbg !4592
  br label %do.cond.125, !dbg !4593

do.cond.125:                                      ; preds = %if.end.124
  br label %do.end.126, !dbg !4594

do.end.126:                                       ; preds = %do.cond.125
  %call127 = call %struct._object* (i8*, ...) @PyUnicode_FromFormat(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.208, i32 0, i32 0), i64 1), !dbg !4596
  store %struct._object* %call127, %struct._object** %result, align 8, !dbg !4597, !tbaa !1941
  %79 = load %struct._object*, %struct._object** %result, align 8, !dbg !4598, !tbaa !1941
  %cmp128 = icmp eq %struct._object* %79, null, !dbg !4600
  br i1 %cmp128, label %if.then.129, label %if.end.130, !dbg !4601

if.then.129:                                      ; preds = %do.end.126
  store %struct._object* null, %struct._object** %retval, !dbg !4602
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4604

if.end.130:                                       ; preds = %do.end.126
  %80 = load %struct._object*, %struct._object** %result, align 8, !dbg !4605, !tbaa !1941
  %call131 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %80, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.194, i32 0, i32 0)), !dbg !4608
  %tobool132 = icmp ne i32 %call131, 0, !dbg !4608
  br i1 %tobool132, label %if.then.133, label %if.end.134, !dbg !4609

if.then.133:                                      ; preds = %if.end.130
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.209, i32 0, i32 0), i8** %msg, align 8, !dbg !4610, !tbaa !1941
  br label %Fail, !dbg !4613

if.end.134:                                       ; preds = %if.end.130
  br label %do.body.135, !dbg !4614

do.body.135:                                      ; preds = %if.end.134
  %81 = bitcast %struct._object** %_py_decref_tmp136 to i8*, !dbg !4615
  call void @llvm.lifetime.start(i64 8, i8* %81) #2, !dbg !4615
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp136, metadata !993, metadata !1945), !dbg !4617
  %82 = load %struct._object*, %struct._object** %result, align 8, !dbg !4618, !tbaa !1941
  store %struct._object* %82, %struct._object** %_py_decref_tmp136, align 8, !dbg !4617, !tbaa !1941
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8, !dbg !4619, !tbaa !1941
  %ob_refcnt137 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 0, !dbg !4621
  %84 = load i64, i64* %ob_refcnt137, align 8, !dbg !4622, !tbaa !1961
  %dec138 = add i64 %84, -1, !dbg !4622
  store i64 %dec138, i64* %ob_refcnt137, align 8, !dbg !4622, !tbaa !1961
  %cmp139 = icmp ne i64 %dec138, 0, !dbg !4623
  br i1 %cmp139, label %if.then.140, label %if.else.141, !dbg !4624

if.then.140:                                      ; preds = %do.body.135
  br label %if.end.144, !dbg !4625

if.else.141:                                      ; preds = %do.body.135
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8, !dbg !4627, !tbaa !1941
  %ob_type142 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 1, !dbg !4629
  %86 = load %struct._typeobject*, %struct._typeobject** %ob_type142, align 8, !dbg !4629, !tbaa !1995
  %tp_dealloc143 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %86, i32 0, i32 4, !dbg !4630
  %87 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc143, align 8, !dbg !4630, !tbaa !1997
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp136, align 8, !dbg !4631, !tbaa !1941
  call void %87(%struct._object* %88), !dbg !4632
  br label %if.end.144

if.end.144:                                       ; preds = %if.else.141, %if.then.140
  %89 = bitcast %struct._object** %_py_decref_tmp136 to i8*, !dbg !4633
  call void @llvm.lifetime.end(i64 8, i8* %89) #2, !dbg !4633
  br label %do.cond.145, !dbg !4634

do.cond.145:                                      ; preds = %if.end.144
  br label %do.end.146, !dbg !4635

do.end.146:                                       ; preds = %do.cond.145
  %90 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4637, !tbaa !1961
  %inc = add i64 %90, 1, !dbg !4637
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4637, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !4638
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4638

Fail:                                             ; preds = %if.then.133, %if.then.113, %if.then.93, %if.then.73, %if.then.53, %if.then.33, %if.then.13, %if.then.2
  br label %do.body.147, !dbg !4639

do.body.147:                                      ; preds = %Fail
  %91 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4640
  call void @llvm.lifetime.start(i64 8, i8* %91) #2, !dbg !4640
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !995, metadata !1945), !dbg !4642
  %92 = load %struct._object*, %struct._object** %result, align 8, !dbg !4643, !tbaa !1941
  store %struct._object* %92, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4642, !tbaa !1941
  %93 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4644, !tbaa !1941
  %cmp148 = icmp ne %struct._object* %93, null, !dbg !4645
  br i1 %cmp148, label %if.then.149, label %if.end.162, !dbg !4646

if.then.149:                                      ; preds = %do.body.147
  br label %do.body.150, !dbg !4647

do.body.150:                                      ; preds = %if.then.149
  %94 = bitcast %struct._object** %_py_decref_tmp151 to i8*, !dbg !4649
  call void @llvm.lifetime.start(i64 8, i8* %94) #2, !dbg !4649
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp151, metadata !997, metadata !1945), !dbg !4651
  %95 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !4652, !tbaa !1941
  store %struct._object* %95, %struct._object** %_py_decref_tmp151, align 8, !dbg !4651, !tbaa !1941
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp151, align 8, !dbg !4653, !tbaa !1941
  %ob_refcnt152 = getelementptr inbounds %struct._object, %struct._object* %96, i32 0, i32 0, !dbg !4655
  %97 = load i64, i64* %ob_refcnt152, align 8, !dbg !4656, !tbaa !1961
  %dec153 = add i64 %97, -1, !dbg !4656
  store i64 %dec153, i64* %ob_refcnt152, align 8, !dbg !4656, !tbaa !1961
  %cmp154 = icmp ne i64 %dec153, 0, !dbg !4657
  br i1 %cmp154, label %if.then.155, label %if.else.156, !dbg !4658

if.then.155:                                      ; preds = %do.body.150
  br label %if.end.159, !dbg !4659

if.else.156:                                      ; preds = %do.body.150
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp151, align 8, !dbg !4661, !tbaa !1941
  %ob_type157 = getelementptr inbounds %struct._object, %struct._object* %98, i32 0, i32 1, !dbg !4663
  %99 = load %struct._typeobject*, %struct._typeobject** %ob_type157, align 8, !dbg !4663, !tbaa !1995
  %tp_dealloc158 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %99, i32 0, i32 4, !dbg !4664
  %100 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc158, align 8, !dbg !4664, !tbaa !1997
  %101 = load %struct._object*, %struct._object** %_py_decref_tmp151, align 8, !dbg !4665, !tbaa !1941
  call void %100(%struct._object* %101), !dbg !4666
  br label %if.end.159

if.end.159:                                       ; preds = %if.else.156, %if.then.155
  %102 = bitcast %struct._object** %_py_decref_tmp151 to i8*, !dbg !4667
  call void @llvm.lifetime.end(i64 8, i8* %102) #2, !dbg !4667
  br label %do.cond.160, !dbg !4669

do.cond.160:                                      ; preds = %if.end.159
  br label %do.end.161, !dbg !4670

do.end.161:                                       ; preds = %do.cond.160
  br label %if.end.162, !dbg !4672

if.end.162:                                       ; preds = %do.end.161, %do.body.147
  %103 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !4674
  call void @llvm.lifetime.end(i64 8, i8* %103) #2, !dbg !4674
  br label %do.cond.163, !dbg !4677

do.cond.163:                                      ; preds = %if.end.162
  br label %do.end.164, !dbg !4678

do.end.164:                                       ; preds = %do.cond.163
  %104 = load i8*, i8** %msg, align 8, !dbg !4680, !tbaa !1941
  %call165 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51, i32 0, i32 0), i8* %104), !dbg !4681
  store %struct._object* %call165, %struct._object** %retval, !dbg !4682
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4682

cleanup:                                          ; preds = %do.end.164, %do.end.146, %if.then.129, %if.then.109, %if.then.89, %if.then.69, %if.then.49, %if.then.29, %if.then.9, %if.then
  %105 = bitcast i8** %msg to i8*, !dbg !4683
  call void @llvm.lifetime.end(i64 8, i8* %105) #2, !dbg !4683
  %106 = bitcast %struct._object** %result to i8*, !dbg !4683
  call void @llvm.lifetime.end(i64 8, i8* %106) #2, !dbg !4683
  %107 = load %struct._object*, %struct._object** %retval, !dbg !4683
  ret %struct._object* %107, !dbg !4683
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_with_docstring(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1002, metadata !1945), !dbg !4684
  %0 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4685, !tbaa !1961
  %inc = add i64 %0, 1, !dbg !4685
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4685, !tbaa !1961
  ret %struct._object* @_Py_NoneStruct, !dbg !4686
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_string_to_double(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %result = alloca double, align 8
  %msg = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1005, metadata !1945), !dbg !4687
  %0 = bitcast double* %result to i8*, !dbg !4688
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4688
  call void @llvm.dbg.declare(metadata double* %result, metadata !1006, metadata !1945), !dbg !4689
  %1 = bitcast i8** %msg to i8*, !dbg !4690
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !4690
  call void @llvm.dbg.declare(metadata i8** %msg, metadata !1007, metadata !1945), !dbg !4691
  %call = call double @PyOS_string_to_double(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.210, i32 0, i32 0), i8** null, %struct._object* null), !dbg !4692
  store double %call, double* %result, align 8, !dbg !4693, !tbaa !3600
  %2 = load double, double* %result, align 8, !dbg !4694, !tbaa !3600
  %cmp = fcmp oeq double %2, -1.000000e+00, !dbg !4696
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4697

land.lhs.true:                                    ; preds = %entry
  %call1 = call %struct._object* @PyErr_Occurred(), !dbg !4698
  %tobool = icmp ne %struct._object* %call1, null, !dbg !4698
  br i1 %tobool, label %if.then, label %if.end, !dbg !4700

if.then:                                          ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !4701
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4703

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load double, double* %result, align 8, !dbg !4704, !tbaa !3600
  %cmp2 = fcmp une double %3, 1.000000e-01, !dbg !4708
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !4709

if.then.3:                                        ; preds = %if.end
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.211, i32 0, i32 0), i8** %msg, align 8, !dbg !4710, !tbaa !1941
  br label %fail, !dbg !4713

if.end.4:                                         ; preds = %if.end
  %call5 = call double @PyOS_string_to_double(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.212, i32 0, i32 0), i8** null, %struct._object* null), !dbg !4714
  store double %call5, double* %result, align 8, !dbg !4715, !tbaa !3600
  %4 = load double, double* %result, align 8, !dbg !4716, !tbaa !3600
  %cmp6 = fcmp oeq double %4, -1.000000e+00, !dbg !4718
  br i1 %cmp6, label %land.lhs.true.7, label %if.end.11, !dbg !4719

land.lhs.true.7:                                  ; preds = %if.end.4
  %call8 = call %struct._object* @PyErr_Occurred(), !dbg !4720
  %tobool9 = icmp ne %struct._object* %call8, null, !dbg !4720
  br i1 %tobool9, label %if.then.10, label %if.end.11, !dbg !4722

if.then.10:                                       ; preds = %land.lhs.true.7
  store %struct._object* null, %struct._object** %retval, !dbg !4723
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4725

if.end.11:                                        ; preds = %land.lhs.true.7, %if.end.4
  %5 = load double, double* %result, align 8, !dbg !4726, !tbaa !3600
  %cmp12 = fcmp une double %5, 1.234000e+00, !dbg !4730
  br i1 %cmp12, label %if.then.13, label %if.end.14, !dbg !4731

if.then.13:                                       ; preds = %if.end.11
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.213, i32 0, i32 0), i8** %msg, align 8, !dbg !4732, !tbaa !1941
  br label %fail, !dbg !4735

if.end.14:                                        ; preds = %if.end.11
  %call15 = call double @PyOS_string_to_double(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.214, i32 0, i32 0), i8** null, %struct._object* null), !dbg !4736
  store double %call15, double* %result, align 8, !dbg !4737, !tbaa !3600
  %6 = load double, double* %result, align 8, !dbg !4738, !tbaa !3600
  %cmp16 = fcmp oeq double %6, -1.000000e+00, !dbg !4740
  br i1 %cmp16, label %land.lhs.true.17, label %if.end.21, !dbg !4741

land.lhs.true.17:                                 ; preds = %if.end.14
  %call18 = call %struct._object* @PyErr_Occurred(), !dbg !4742
  %tobool19 = icmp ne %struct._object* %call18, null, !dbg !4742
  br i1 %tobool19, label %if.then.20, label %if.end.21, !dbg !4744

if.then.20:                                       ; preds = %land.lhs.true.17
  store %struct._object* null, %struct._object** %retval, !dbg !4745
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4747

if.end.21:                                        ; preds = %land.lhs.true.17, %if.end.14
  %7 = load double, double* %result, align 8, !dbg !4748, !tbaa !3600
  %cmp22 = fcmp une double %7, -1.350000e+00, !dbg !4752
  br i1 %cmp22, label %if.then.23, label %if.end.24, !dbg !4753

if.then.23:                                       ; preds = %if.end.21
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.215, i32 0, i32 0), i8** %msg, align 8, !dbg !4754, !tbaa !1941
  br label %fail, !dbg !4757

if.end.24:                                        ; preds = %if.end.21
  %call25 = call double @PyOS_string_to_double(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.216, i32 0, i32 0), i8** null, %struct._object* null), !dbg !4758
  store double %call25, double* %result, align 8, !dbg !4759, !tbaa !3600
  %8 = load double, double* %result, align 8, !dbg !4760, !tbaa !3600
  %cmp26 = fcmp oeq double %8, -1.000000e+00, !dbg !4762
  br i1 %cmp26, label %land.lhs.true.27, label %if.end.31, !dbg !4763

land.lhs.true.27:                                 ; preds = %if.end.24
  %call28 = call %struct._object* @PyErr_Occurred(), !dbg !4764
  %tobool29 = icmp ne %struct._object* %call28, null, !dbg !4764
  br i1 %tobool29, label %if.then.30, label %if.end.31, !dbg !4766

if.then.30:                                       ; preds = %land.lhs.true.27
  store %struct._object* null, %struct._object** %retval, !dbg !4767
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4769

if.end.31:                                        ; preds = %land.lhs.true.27, %if.end.24
  %9 = load double, double* %result, align 8, !dbg !4770, !tbaa !3600
  %cmp32 = fcmp une double %9, 1.000000e+00, !dbg !4774
  br i1 %cmp32, label %if.then.33, label %if.end.34, !dbg !4775

if.then.33:                                       ; preds = %if.end.31
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.217, i32 0, i32 0), i8** %msg, align 8, !dbg !4776, !tbaa !1941
  br label %fail, !dbg !4779

if.end.34:                                        ; preds = %if.end.31
  %call35 = call double @PyOS_string_to_double(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.218, i32 0, i32 0), i8** null, %struct._object* null), !dbg !4780
  store double %call35, double* %result, align 8, !dbg !4781, !tbaa !3600
  %10 = load double, double* %result, align 8, !dbg !4782, !tbaa !3600
  %cmp36 = fcmp oeq double %10, -1.000000e+00, !dbg !4784
  br i1 %cmp36, label %land.lhs.true.37, label %if.end.41, !dbg !4785

land.lhs.true.37:                                 ; preds = %if.end.34
  %call38 = call %struct._object* @PyErr_Occurred(), !dbg !4786
  %tobool39 = icmp ne %struct._object* %call38, null, !dbg !4786
  br i1 %tobool39, label %if.then.40, label %if.end.41, !dbg !4788

if.then.40:                                       ; preds = %land.lhs.true.37
  store %struct._object* null, %struct._object** %retval, !dbg !4789
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4791

if.end.41:                                        ; preds = %land.lhs.true.37, %if.end.34
  %11 = load double, double* %result, align 8, !dbg !4792, !tbaa !3600
  %cmp42 = fcmp une double %11, 2.000000e-02, !dbg !4796
  br i1 %cmp42, label %if.then.43, label %if.end.44, !dbg !4797

if.then.43:                                       ; preds = %if.end.41
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.219, i32 0, i32 0), i8** %msg, align 8, !dbg !4798, !tbaa !1941
  br label %fail, !dbg !4801

if.end.44:                                        ; preds = %if.end.41
  %call45 = call double @PyOS_string_to_double(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.220, i32 0, i32 0), i8** null, %struct._object* null), !dbg !4802
  store double %call45, double* %result, align 8, !dbg !4803, !tbaa !3600
  %12 = load double, double* %result, align 8, !dbg !4804, !tbaa !3600
  %cmp46 = fcmp oeq double %12, -1.000000e+00, !dbg !4806
  br i1 %cmp46, label %land.lhs.true.47, label %if.else.55, !dbg !4807

land.lhs.true.47:                                 ; preds = %if.end.44
  %call48 = call %struct._object* @PyErr_Occurred(), !dbg !4808
  %tobool49 = icmp ne %struct._object* %call48, null, !dbg !4808
  br i1 %tobool49, label %if.then.50, label %if.else.55, !dbg !4810

if.then.50:                                       ; preds = %land.lhs.true.47
  %13 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4811, !tbaa !1941
  %call51 = call i32 @PyErr_ExceptionMatches(%struct._object* %13), !dbg !4815
  %tobool52 = icmp ne i32 %call51, 0, !dbg !4815
  br i1 %tobool52, label %if.then.53, label %if.else, !dbg !4816

if.then.53:                                       ; preds = %if.then.50
  call void @PyErr_Clear(), !dbg !4817
  br label %if.end.54, !dbg !4817

if.else:                                          ; preds = %if.then.50
  store %struct._object* null, %struct._object** %retval, !dbg !4819
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4821

if.end.54:                                        ; preds = %if.then.53
  br label %if.end.56, !dbg !4822

if.else.55:                                       ; preds = %land.lhs.true.47, %if.end.44
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.221, i32 0, i32 0), i8** %msg, align 8, !dbg !4824, !tbaa !1941
  br label %fail, !dbg !4828

if.end.56:                                        ; preds = %if.end.54
  %call57 = call double @PyOS_string_to_double(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.222, i32 0, i32 0), i8** null, %struct._object* null), !dbg !4829
  store double %call57, double* %result, align 8, !dbg !4830, !tbaa !3600
  %14 = load double, double* %result, align 8, !dbg !4831, !tbaa !3600
  %cmp58 = fcmp oeq double %14, -1.000000e+00, !dbg !4833
  br i1 %cmp58, label %land.lhs.true.59, label %if.else.68, !dbg !4834

land.lhs.true.59:                                 ; preds = %if.end.56
  %call60 = call %struct._object* @PyErr_Occurred(), !dbg !4835
  %tobool61 = icmp ne %struct._object* %call60, null, !dbg !4835
  br i1 %tobool61, label %if.then.62, label %if.else.68, !dbg !4837

if.then.62:                                       ; preds = %land.lhs.true.59
  %15 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4838, !tbaa !1941
  %call63 = call i32 @PyErr_ExceptionMatches(%struct._object* %15), !dbg !4842
  %tobool64 = icmp ne i32 %call63, 0, !dbg !4842
  br i1 %tobool64, label %if.then.65, label %if.else.66, !dbg !4843

if.then.65:                                       ; preds = %if.then.62
  call void @PyErr_Clear(), !dbg !4844
  br label %if.end.67, !dbg !4844

if.else.66:                                       ; preds = %if.then.62
  store %struct._object* null, %struct._object** %retval, !dbg !4846
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4848

if.end.67:                                        ; preds = %if.then.65
  br label %if.end.69, !dbg !4849

if.else.68:                                       ; preds = %land.lhs.true.59, %if.end.56
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.223, i32 0, i32 0), i8** %msg, align 8, !dbg !4851, !tbaa !1941
  br label %fail, !dbg !4855

if.end.69:                                        ; preds = %if.end.67
  %call70 = call double @PyOS_string_to_double(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.224, i32 0, i32 0), i8** null, %struct._object* null), !dbg !4856
  store double %call70, double* %result, align 8, !dbg !4857, !tbaa !3600
  %16 = load double, double* %result, align 8, !dbg !4858, !tbaa !3600
  %cmp71 = fcmp oeq double %16, -1.000000e+00, !dbg !4860
  br i1 %cmp71, label %land.lhs.true.72, label %if.else.81, !dbg !4861

land.lhs.true.72:                                 ; preds = %if.end.69
  %call73 = call %struct._object* @PyErr_Occurred(), !dbg !4862
  %tobool74 = icmp ne %struct._object* %call73, null, !dbg !4862
  br i1 %tobool74, label %if.then.75, label %if.else.81, !dbg !4864

if.then.75:                                       ; preds = %land.lhs.true.72
  %17 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4865, !tbaa !1941
  %call76 = call i32 @PyErr_ExceptionMatches(%struct._object* %17), !dbg !4869
  %tobool77 = icmp ne i32 %call76, 0, !dbg !4869
  br i1 %tobool77, label %if.then.78, label %if.else.79, !dbg !4870

if.then.78:                                       ; preds = %if.then.75
  call void @PyErr_Clear(), !dbg !4871
  br label %if.end.80, !dbg !4871

if.else.79:                                       ; preds = %if.then.75
  store %struct._object* null, %struct._object** %retval, !dbg !4873
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4875

if.end.80:                                        ; preds = %if.then.78
  br label %if.end.82, !dbg !4876

if.else.81:                                       ; preds = %land.lhs.true.72, %if.end.69
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.225, i32 0, i32 0), i8** %msg, align 8, !dbg !4878, !tbaa !1941
  br label %fail, !dbg !4882

if.end.82:                                        ; preds = %if.end.80
  %call83 = call double @PyOS_string_to_double(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.226, i32 0, i32 0), i8** null, %struct._object* null), !dbg !4883
  store double %call83, double* %result, align 8, !dbg !4884, !tbaa !3600
  %18 = load double, double* %result, align 8, !dbg !4885, !tbaa !3600
  %cmp84 = fcmp oeq double %18, -1.000000e+00, !dbg !4887
  br i1 %cmp84, label %land.lhs.true.85, label %if.else.94, !dbg !4888

land.lhs.true.85:                                 ; preds = %if.end.82
  %call86 = call %struct._object* @PyErr_Occurred(), !dbg !4889
  %tobool87 = icmp ne %struct._object* %call86, null, !dbg !4889
  br i1 %tobool87, label %if.then.88, label %if.else.94, !dbg !4891

if.then.88:                                       ; preds = %land.lhs.true.85
  %19 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4892, !tbaa !1941
  %call89 = call i32 @PyErr_ExceptionMatches(%struct._object* %19), !dbg !4896
  %tobool90 = icmp ne i32 %call89, 0, !dbg !4896
  br i1 %tobool90, label %if.then.91, label %if.else.92, !dbg !4897

if.then.91:                                       ; preds = %if.then.88
  call void @PyErr_Clear(), !dbg !4898
  br label %if.end.93, !dbg !4898

if.else.92:                                       ; preds = %if.then.88
  store %struct._object* null, %struct._object** %retval, !dbg !4900
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4902

if.end.93:                                        ; preds = %if.then.91
  br label %if.end.95, !dbg !4903

if.else.94:                                       ; preds = %land.lhs.true.85, %if.end.82
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.227, i32 0, i32 0), i8** %msg, align 8, !dbg !4905, !tbaa !1941
  br label %fail, !dbg !4909

if.end.95:                                        ; preds = %if.end.93
  %call96 = call double @PyOS_string_to_double(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.228, i32 0, i32 0), i8** null, %struct._object* null), !dbg !4910
  store double %call96, double* %result, align 8, !dbg !4911, !tbaa !3600
  %20 = load double, double* %result, align 8, !dbg !4912, !tbaa !3600
  %cmp97 = fcmp oeq double %20, -1.000000e+00, !dbg !4914
  br i1 %cmp97, label %land.lhs.true.98, label %if.else.107, !dbg !4915

land.lhs.true.98:                                 ; preds = %if.end.95
  %call99 = call %struct._object* @PyErr_Occurred(), !dbg !4916
  %tobool100 = icmp ne %struct._object* %call99, null, !dbg !4916
  br i1 %tobool100, label %if.then.101, label %if.else.107, !dbg !4918

if.then.101:                                      ; preds = %land.lhs.true.98
  %21 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !4919, !tbaa !1941
  %call102 = call i32 @PyErr_ExceptionMatches(%struct._object* %21), !dbg !4923
  %tobool103 = icmp ne i32 %call102, 0, !dbg !4923
  br i1 %tobool103, label %if.then.104, label %if.else.105, !dbg !4924

if.then.104:                                      ; preds = %if.then.101
  call void @PyErr_Clear(), !dbg !4925
  br label %if.end.106, !dbg !4925

if.else.105:                                      ; preds = %if.then.101
  store %struct._object* null, %struct._object** %retval, !dbg !4927
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4929

if.end.106:                                       ; preds = %if.then.104
  br label %if.end.108, !dbg !4930

if.else.107:                                      ; preds = %land.lhs.true.98, %if.end.95
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.229, i32 0, i32 0), i8** %msg, align 8, !dbg !4932, !tbaa !1941
  br label %fail, !dbg !4936

if.end.108:                                       ; preds = %if.end.106
  %22 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4937, !tbaa !1961
  %inc = add i64 %22, 1, !dbg !4937
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4937, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !4938
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4938

fail:                                             ; preds = %if.else.107, %if.else.94, %if.else.81, %if.else.68, %if.else.55, %if.then.43, %if.then.33, %if.then.23, %if.then.13, %if.then.3
  %23 = load i8*, i8** %msg, align 8, !dbg !4939, !tbaa !1941
  %call109 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.54, i32 0, i32 0), i8* %23), !dbg !4940
  store %struct._object* %call109, %struct._object** %retval, !dbg !4941
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4941

cleanup:                                          ; preds = %fail, %if.end.108, %if.else.105, %if.else.92, %if.else.79, %if.else.66, %if.else, %if.then.40, %if.then.30, %if.then.20, %if.then.10, %if.then
  %24 = bitcast i8** %msg to i8*, !dbg !4942
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !4942
  %25 = bitcast double* %result to i8*, !dbg !4942
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !4942
  %26 = load %struct._object*, %struct._object** %retval, !dbg !4942
  ret %struct._object* %26, !dbg !4942
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_unicode_compare_with_ascii(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %py_s = alloca %struct._object*, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1010, metadata !1945), !dbg !4943
  %0 = bitcast %struct._object** %py_s to i8*, !dbg !4944
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4944
  call void @llvm.dbg.declare(metadata %struct._object** %py_s, metadata !1011, metadata !1945), !dbg !4945
  %call = call %struct._object* @PyUnicode_FromStringAndSize(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.230, i32 0, i32 0), i64 4), !dbg !4946
  store %struct._object* %call, %struct._object** %py_s, align 8, !dbg !4945, !tbaa !1941
  %1 = bitcast i32* %result to i8*, !dbg !4947
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !4947
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1012, metadata !1945), !dbg !4948
  %2 = load %struct._object*, %struct._object** %py_s, align 8, !dbg !4949, !tbaa !1941
  %cmp = icmp eq %struct._object* %2, null, !dbg !4951
  br i1 %cmp, label %if.then, label %if.end, !dbg !4952

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !4953
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4953

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %py_s, align 8, !dbg !4954, !tbaa !1941
  %call1 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.231, i32 0, i32 0)), !dbg !4955
  store i32 %call1, i32* %result, align 4, !dbg !4956, !tbaa !1971
  br label %do.body, !dbg !4957

do.body:                                          ; preds = %if.end
  %4 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4958
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !4958
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1013, metadata !1945), !dbg !4960
  %5 = load %struct._object*, %struct._object** %py_s, align 8, !dbg !4961, !tbaa !1941
  store %struct._object* %5, %struct._object** %_py_decref_tmp, align 8, !dbg !4960, !tbaa !1941
  %6 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4962, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0, !dbg !4964
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !4965, !tbaa !1961
  %dec = add i64 %7, -1, !dbg !4965
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !4965, !tbaa !1961
  %cmp2 = icmp ne i64 %dec, 0, !dbg !4966
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !4967

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !4968

if.else:                                          ; preds = %do.body
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4970, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !4972
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !4972, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 4, !dbg !4973
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !4973, !tbaa !1997
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !4974, !tbaa !1941
  call void %10(%struct._object* %11), !dbg !4975
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %12 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !4976
  call void @llvm.lifetime.end(i64 8, i8* %12) #2, !dbg !4976
  br label %do.cond, !dbg !4978

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !4979

do.end:                                           ; preds = %do.cond
  %13 = load i32, i32* %result, align 4, !dbg !4981, !tbaa !1971
  %tobool = icmp ne i32 %13, 0, !dbg !4981
  br i1 %tobool, label %if.end.6, label %if.then.5, !dbg !4983

if.then.5:                                        ; preds = %do.end
  %14 = load %struct._object*, %struct._object** @TestError, align 8, !dbg !4984, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %14, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.232, i32 0, i32 0)), !dbg !4986
  store %struct._object* null, %struct._object** %retval, !dbg !4987
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4987

if.end.6:                                         ; preds = %do.end
  %15 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4988, !tbaa !1961
  %inc = add i64 %15, 1, !dbg !4988
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !4988, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !4989
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !4989

cleanup:                                          ; preds = %if.end.6, %if.then.5, %if.then
  %16 = bitcast i32* %result to i8*, !dbg !4990
  call void @llvm.lifetime.end(i64 4, i8* %16) #2, !dbg !4990
  %17 = bitcast %struct._object** %py_s to i8*, !dbg !4990
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !4990
  %18 = load %struct._object*, %struct._object** %retval, !dbg !4990
  ret %struct._object* %18, !dbg !4990
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_capsule(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %object = alloca %struct._object*, align 8
  %error = alloca i8*, align 8
  %pointer = alloca i8*, align 8
  %pointer2 = alloca i8*, align 8
  %known_capsules = alloca [4 x %struct.known_capsule], align 16
  %known = alloca %struct.known_capsule*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp40 = alloca %struct._object*, align 8
  %module56 = alloca %struct._object*, align 8
  %_py_decref_tmp65 = alloca %struct._object*, align 8
  %_py_decref_tmp84 = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp101 = alloca %struct._object*, align 8
  %_py_decref_tmp113 = alloca %struct._object*, align 8
  %_py_decref_tmp131 = alloca %struct._object*, align 8
  %_py_decref_tmp143 = alloca %struct._object*, align 8
  %_py_decref_tmp165 = alloca %struct._object*, align 8
  %_py_decref_tmp177 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1017, metadata !1945), !dbg !4991
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1018, metadata !1945), !dbg !4992
  %0 = bitcast %struct._object** %object to i8*, !dbg !4993
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !4993
  call void @llvm.dbg.declare(metadata %struct._object** %object, metadata !1019, metadata !1945), !dbg !4994
  %1 = bitcast i8** %error to i8*, !dbg !4995
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !4995
  call void @llvm.dbg.declare(metadata i8** %error, metadata !1020, metadata !1945), !dbg !4996
  store i8* null, i8** %error, align 8, !dbg !4996, !tbaa !1941
  %2 = bitcast i8** %pointer to i8*, !dbg !4997
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !4997
  call void @llvm.dbg.declare(metadata i8** %pointer, metadata !1021, metadata !1945), !dbg !4998
  %3 = bitcast i8** %pointer2 to i8*, !dbg !4999
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !4999
  call void @llvm.dbg.declare(metadata i8** %pointer2, metadata !1022, metadata !1945), !dbg !5000
  %4 = bitcast [4 x %struct.known_capsule]* %known_capsules to i8*, !dbg !5001
  call void @llvm.lifetime.start(i64 96, i8* %4) #2, !dbg !5001
  call void @llvm.dbg.declare(metadata [4 x %struct.known_capsule]* %known_capsules, metadata !1023, metadata !1945), !dbg !5002
  %5 = bitcast [4 x %struct.known_capsule]* %known_capsules to i8*, !dbg !5002
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* bitcast ([4 x %struct.known_capsule]* @test_capsule.known_capsules to i8*), i64 96, i32 16, i1 false), !dbg !5002
  %6 = bitcast %struct.known_capsule** %known to i8*, !dbg !5003
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !5003
  call void @llvm.dbg.declare(metadata %struct.known_capsule** %known, metadata !1032, metadata !1945), !dbg !5004
  %arrayidx = getelementptr [4 x %struct.known_capsule], [4 x %struct.known_capsule]* %known_capsules, i32 0, i64 0, !dbg !5005
  store %struct.known_capsule* %arrayidx, %struct.known_capsule** %known, align 8, !dbg !5004, !tbaa !1941
  %7 = load i8*, i8** @capsule_pointer, align 8, !dbg !5006, !tbaa !1941
  %8 = load i8*, i8** @capsule_name, align 8, !dbg !5007, !tbaa !1941
  %call = call %struct._object* @PyCapsule_New(i8* %7, i8* %8, void (%struct._object*)* @capsule_destructor), !dbg !5008
  store %struct._object* %call, %struct._object** %object, align 8, !dbg !5009, !tbaa !1941
  %9 = load %struct._object*, %struct._object** %object, align 8, !dbg !5010, !tbaa !1941
  %10 = load i8*, i8** @capsule_context, align 8, !dbg !5011, !tbaa !1941
  %call1 = call i32 @PyCapsule_SetContext(%struct._object* %9, i8* %10), !dbg !5012
  %11 = load %struct._object*, %struct._object** %object, align 8, !dbg !5013, !tbaa !1941
  call void @capsule_destructor(%struct._object* %11), !dbg !5014
  %12 = load i8*, i8** @capsule_error, align 8, !dbg !5015, !tbaa !1941
  %tobool = icmp ne i8* %12, null, !dbg !5015
  br i1 %tobool, label %if.then, label %if.else, !dbg !5017

if.then:                                          ; preds = %entry
  %13 = load i8*, i8** @capsule_error, align 8, !dbg !5018, !tbaa !1941
  store i8* %13, i8** %error, align 8, !dbg !5022, !tbaa !1941
  br label %exit, !dbg !5023

if.else:                                          ; preds = %entry
  %14 = load i32, i32* @capsule_destructor_call_count, align 4, !dbg !5024, !tbaa !1971
  %tobool2 = icmp ne i32 %14, 0, !dbg !5024
  br i1 %tobool2, label %if.end, label %if.then.3, !dbg !5027

if.then.3:                                        ; preds = %if.else
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.241, i32 0, i32 0), i8** %error, align 8, !dbg !5028, !tbaa !1941
  br label %exit, !dbg !5032

if.end:                                           ; preds = %if.else
  br label %if.end.4

if.end.4:                                         ; preds = %if.end
  store i32 0, i32* @capsule_destructor_call_count, align 4, !dbg !5033, !tbaa !1971
  br label %do.body, !dbg !5034

do.body:                                          ; preds = %if.end.4
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5035
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !5035
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1034, metadata !1945), !dbg !5037
  %16 = load %struct._object*, %struct._object** %object, align 8, !dbg !5038, !tbaa !1941
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8, !dbg !5037, !tbaa !1941
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5039, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0, !dbg !5041
  %18 = load i64, i64* %ob_refcnt, align 8, !dbg !5042, !tbaa !1961
  %dec = add i64 %18, -1, !dbg !5042
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5042, !tbaa !1961
  %cmp = icmp ne i64 %dec, 0, !dbg !5043
  br i1 %cmp, label %if.then.5, label %if.else.6, !dbg !5044

if.then.5:                                        ; preds = %do.body
  br label %if.end.7, !dbg !5045

if.else.6:                                        ; preds = %do.body
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5047, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1, !dbg !5049
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5049, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4, !dbg !5050
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5050, !tbaa !1997
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5051, !tbaa !1941
  call void %21(%struct._object* %22), !dbg !5052
  br label %if.end.7

if.end.7:                                         ; preds = %if.else.6, %if.then.5
  %23 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5053
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !5053
  br label %do.cond, !dbg !5055

do.cond:                                          ; preds = %if.end.7
  br label %do.end, !dbg !5056

do.end:                                           ; preds = %do.cond
  %24 = load i8*, i8** @capsule_error, align 8, !dbg !5058, !tbaa !1941
  %tobool8 = icmp ne i8* %24, null, !dbg !5058
  br i1 %tobool8, label %if.then.9, label %if.else.10, !dbg !5060

if.then.9:                                        ; preds = %do.end
  %25 = load i8*, i8** @capsule_error, align 8, !dbg !5061, !tbaa !1941
  store i8* %25, i8** %error, align 8, !dbg !5065, !tbaa !1941
  br label %exit, !dbg !5066

if.else.10:                                       ; preds = %do.end
  %26 = load i32, i32* @capsule_destructor_call_count, align 4, !dbg !5067, !tbaa !1971
  %tobool11 = icmp ne i32 %26, 0, !dbg !5067
  br i1 %tobool11, label %if.end.13, label %if.then.12, !dbg !5070

if.then.12:                                       ; preds = %if.else.10
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.241, i32 0, i32 0), i8** %error, align 8, !dbg !5071, !tbaa !1941
  br label %exit, !dbg !5075

if.end.13:                                        ; preds = %if.else.10
  br label %if.end.14

if.end.14:                                        ; preds = %if.end.13
  store i32 0, i32* @capsule_destructor_call_count, align 4, !dbg !5076, !tbaa !1971
  %27 = load %struct.known_capsule*, %struct.known_capsule** %known, align 8, !dbg !5077, !tbaa !1941
  %28 = bitcast %struct.known_capsule* %27 to i8*, !dbg !5077
  %call15 = call %struct._object* @PyCapsule_New(i8* %28, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.242, i32 0, i32 0), void (%struct._object*)* null), !dbg !5078
  store %struct._object* %call15, %struct._object** %object, align 8, !dbg !5079, !tbaa !1941
  %29 = load %struct._object*, %struct._object** %object, align 8, !dbg !5080, !tbaa !1941
  %30 = load i8*, i8** @capsule_pointer, align 8, !dbg !5081, !tbaa !1941
  %call16 = call i32 @PyCapsule_SetPointer(%struct._object* %29, i8* %30), !dbg !5082
  %31 = load %struct._object*, %struct._object** %object, align 8, !dbg !5083, !tbaa !1941
  %32 = load i8*, i8** @capsule_name, align 8, !dbg !5084, !tbaa !1941
  %call17 = call i32 @PyCapsule_SetName(%struct._object* %31, i8* %32), !dbg !5085
  %33 = load %struct._object*, %struct._object** %object, align 8, !dbg !5086, !tbaa !1941
  %call18 = call i32 @PyCapsule_SetDestructor(%struct._object* %33, void (%struct._object*)* @capsule_destructor), !dbg !5087
  %34 = load %struct._object*, %struct._object** %object, align 8, !dbg !5088, !tbaa !1941
  %35 = load i8*, i8** @capsule_context, align 8, !dbg !5089, !tbaa !1941
  %call19 = call i32 @PyCapsule_SetContext(%struct._object* %34, i8* %35), !dbg !5090
  %36 = load %struct._object*, %struct._object** %object, align 8, !dbg !5091, !tbaa !1941
  call void @capsule_destructor(%struct._object* %36), !dbg !5092
  %37 = load i8*, i8** @capsule_error, align 8, !dbg !5093, !tbaa !1941
  %tobool20 = icmp ne i8* %37, null, !dbg !5093
  br i1 %tobool20, label %if.then.21, label %if.else.22, !dbg !5095

if.then.21:                                       ; preds = %if.end.14
  %38 = load i8*, i8** @capsule_error, align 8, !dbg !5096, !tbaa !1941
  store i8* %38, i8** %error, align 8, !dbg !5100, !tbaa !1941
  br label %exit, !dbg !5101

if.else.22:                                       ; preds = %if.end.14
  %39 = load i32, i32* @capsule_destructor_call_count, align 4, !dbg !5102, !tbaa !1971
  %tobool23 = icmp ne i32 %39, 0, !dbg !5102
  br i1 %tobool23, label %if.end.25, label %if.then.24, !dbg !5105

if.then.24:                                       ; preds = %if.else.22
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.241, i32 0, i32 0), i8** %error, align 8, !dbg !5106, !tbaa !1941
  br label %exit, !dbg !5110

if.end.25:                                        ; preds = %if.else.22
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25
  store i32 0, i32* @capsule_destructor_call_count, align 4, !dbg !5111, !tbaa !1971
  %40 = load %struct._object*, %struct._object** %object, align 8, !dbg !5112, !tbaa !1941
  %call27 = call i8* @PyCapsule_GetPointer(%struct._object* %40, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.243, i32 0, i32 0)), !dbg !5113
  store i8* %call27, i8** %pointer2, align 8, !dbg !5114, !tbaa !1941
  %call28 = call %struct._object* @PyErr_Occurred(), !dbg !5115
  %tobool29 = icmp ne %struct._object* %call28, null, !dbg !5115
  br i1 %tobool29, label %if.end.31, label %if.then.30, !dbg !5117

if.then.30:                                       ; preds = %if.end.26
  store i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.244, i32 0, i32 0), i8** %error, align 8, !dbg !5118, !tbaa !1941
  br label %exit, !dbg !5121

if.end.31:                                        ; preds = %if.end.26
  call void @PyErr_Clear(), !dbg !5122
  %41 = load i8*, i8** %pointer2, align 8, !dbg !5123, !tbaa !1941
  %tobool32 = icmp ne i8* %41, null, !dbg !5123
  br i1 %tobool32, label %if.then.33, label %if.end.37, !dbg !5125

if.then.33:                                       ; preds = %if.end.31
  %42 = load i8*, i8** %pointer2, align 8, !dbg !5126, !tbaa !1941
  %43 = load i8*, i8** @capsule_pointer, align 8, !dbg !5129, !tbaa !1941
  %cmp34 = icmp eq i8* %42, %43, !dbg !5130
  br i1 %cmp34, label %if.then.35, label %if.else.36, !dbg !5131

if.then.35:                                       ; preds = %if.then.33
  store i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.245, i32 0, i32 0), i8** %error, align 8, !dbg !5132, !tbaa !1941
  br label %exit, !dbg !5135

if.else.36:                                       ; preds = %if.then.33
  store i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.246, i32 0, i32 0), i8** %error, align 8, !dbg !5136, !tbaa !1941
  br label %exit, !dbg !5139

if.end.37:                                        ; preds = %if.end.31
  %44 = load %struct._object*, %struct._object** %object, align 8, !dbg !5140, !tbaa !1941
  %call38 = call i32 @PyCapsule_SetDestructor(%struct._object* %44, void (%struct._object*)* null), !dbg !5141
  br label %do.body.39, !dbg !5142

do.body.39:                                       ; preds = %if.end.37
  %45 = bitcast %struct._object** %_py_decref_tmp40 to i8*, !dbg !5143
  call void @llvm.lifetime.start(i64 8, i8* %45) #2, !dbg !5143
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp40, metadata !1036, metadata !1945), !dbg !5145
  %46 = load %struct._object*, %struct._object** %object, align 8, !dbg !5146, !tbaa !1941
  store %struct._object* %46, %struct._object** %_py_decref_tmp40, align 8, !dbg !5145, !tbaa !1941
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !5147, !tbaa !1941
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 0, !dbg !5149
  %48 = load i64, i64* %ob_refcnt41, align 8, !dbg !5150, !tbaa !1961
  %dec42 = add i64 %48, -1, !dbg !5150
  store i64 %dec42, i64* %ob_refcnt41, align 8, !dbg !5150, !tbaa !1961
  %cmp43 = icmp ne i64 %dec42, 0, !dbg !5151
  br i1 %cmp43, label %if.then.44, label %if.else.45, !dbg !5152

if.then.44:                                       ; preds = %do.body.39
  br label %if.end.48, !dbg !5153

if.else.45:                                       ; preds = %do.body.39
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !5155, !tbaa !1941
  %ob_type46 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 1, !dbg !5157
  %50 = load %struct._typeobject*, %struct._typeobject** %ob_type46, align 8, !dbg !5157, !tbaa !1995
  %tp_dealloc47 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %50, i32 0, i32 4, !dbg !5158
  %51 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc47, align 8, !dbg !5158, !tbaa !1997
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !5159, !tbaa !1941
  call void %51(%struct._object* %52), !dbg !5160
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.45, %if.then.44
  %53 = bitcast %struct._object** %_py_decref_tmp40 to i8*, !dbg !5161
  call void @llvm.lifetime.end(i64 8, i8* %53) #2, !dbg !5161
  br label %do.cond.49, !dbg !5162

do.cond.49:                                       ; preds = %if.end.48
  br label %do.end.50, !dbg !5163

do.end.50:                                        ; preds = %do.cond.49
  %54 = load i32, i32* @capsule_destructor_call_count, align 4, !dbg !5165, !tbaa !1971
  %tobool51 = icmp ne i32 %54, 0, !dbg !5165
  br i1 %tobool51, label %if.then.52, label %if.end.53, !dbg !5167

if.then.52:                                       ; preds = %do.end.50
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.247, i32 0, i32 0), i8** %error, align 8, !dbg !5168, !tbaa !1941
  br label %exit, !dbg !5171

if.end.53:                                        ; preds = %do.end.50
  %arrayidx54 = getelementptr [4 x %struct.known_capsule], [4 x %struct.known_capsule]* %known_capsules, i32 0, i64 0, !dbg !5172
  store %struct.known_capsule* %arrayidx54, %struct.known_capsule** %known, align 8, !dbg !5173, !tbaa !1941
  br label %for.cond, !dbg !5174

for.cond:                                         ; preds = %for.inc, %if.end.53
  %55 = load %struct.known_capsule*, %struct.known_capsule** %known, align 8, !dbg !5175, !tbaa !1941
  %module = getelementptr inbounds %struct.known_capsule, %struct.known_capsule* %55, i32 0, i32 1, !dbg !5178
  %56 = load i8*, i8** %module, align 8, !dbg !5178, !tbaa !5179
  %cmp55 = icmp ne i8* %56, null, !dbg !5181
  br i1 %cmp55, label %for.body, label %for.end, !dbg !5182

for.body:                                         ; preds = %for.cond
  %57 = bitcast %struct._object** %module56 to i8*, !dbg !5183
  call void @llvm.lifetime.start(i64 8, i8* %57) #2, !dbg !5183
  call void @llvm.dbg.declare(metadata %struct._object** %module56, metadata !1038, metadata !1945), !dbg !5184
  %58 = load %struct.known_capsule*, %struct.known_capsule** %known, align 8, !dbg !5185, !tbaa !1941
  %module57 = getelementptr inbounds %struct.known_capsule, %struct.known_capsule* %58, i32 0, i32 1, !dbg !5186
  %59 = load i8*, i8** %module57, align 8, !dbg !5186, !tbaa !5179
  %call58 = call %struct._object* @PyImport_ImportModule(i8* %59), !dbg !5187
  store %struct._object* %call58, %struct._object** %module56, align 8, !dbg !5184, !tbaa !1941
  %60 = load %struct._object*, %struct._object** %module56, align 8, !dbg !5188, !tbaa !1941
  %tobool59 = icmp ne %struct._object* %60, null, !dbg !5188
  br i1 %tobool59, label %if.then.60, label %if.else.188, !dbg !5189

if.then.60:                                       ; preds = %for.body
  %61 = load %struct.known_capsule*, %struct.known_capsule** %known, align 8, !dbg !5190, !tbaa !1941
  %name = getelementptr inbounds %struct.known_capsule, %struct.known_capsule* %61, i32 0, i32 0, !dbg !5191
  %62 = load i8*, i8** %name, align 8, !dbg !5191, !tbaa !5192
  %call61 = call i8* @PyCapsule_Import(i8* %62, i32 0), !dbg !5193
  store i8* %call61, i8** %pointer, align 8, !dbg !5194, !tbaa !1941
  %63 = load i8*, i8** %pointer, align 8, !dbg !5195, !tbaa !1941
  %tobool62 = icmp ne i8* %63, null, !dbg !5195
  br i1 %tobool62, label %if.end.78, label %if.then.63, !dbg !5196

if.then.63:                                       ; preds = %if.then.60
  br label %do.body.64, !dbg !5197

do.body.64:                                       ; preds = %if.then.63
  %64 = bitcast %struct._object** %_py_decref_tmp65 to i8*, !dbg !5198
  call void @llvm.lifetime.start(i64 8, i8* %64) #2, !dbg !5198
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp65, metadata !1042, metadata !1945), !dbg !5200
  %65 = load %struct._object*, %struct._object** %module56, align 8, !dbg !5201, !tbaa !1941
  store %struct._object* %65, %struct._object** %_py_decref_tmp65, align 8, !dbg !5200, !tbaa !1941
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8, !dbg !5202, !tbaa !1941
  %ob_refcnt66 = getelementptr inbounds %struct._object, %struct._object* %66, i32 0, i32 0, !dbg !5204
  %67 = load i64, i64* %ob_refcnt66, align 8, !dbg !5205, !tbaa !1961
  %dec67 = add i64 %67, -1, !dbg !5205
  store i64 %dec67, i64* %ob_refcnt66, align 8, !dbg !5205, !tbaa !1961
  %cmp68 = icmp ne i64 %dec67, 0, !dbg !5206
  br i1 %cmp68, label %if.then.69, label %if.else.70, !dbg !5207

if.then.69:                                       ; preds = %do.body.64
  br label %if.end.73, !dbg !5208

if.else.70:                                       ; preds = %do.body.64
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8, !dbg !5210, !tbaa !1941
  %ob_type71 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 1, !dbg !5212
  %69 = load %struct._typeobject*, %struct._typeobject** %ob_type71, align 8, !dbg !5212, !tbaa !1995
  %tp_dealloc72 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %69, i32 0, i32 4, !dbg !5213
  %70 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc72, align 8, !dbg !5213, !tbaa !1997
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp65, align 8, !dbg !5214, !tbaa !1941
  call void %70(%struct._object* %71), !dbg !5215
  br label %if.end.73

if.end.73:                                        ; preds = %if.else.70, %if.then.69
  %72 = bitcast %struct._object** %_py_decref_tmp65 to i8*, !dbg !5216
  call void @llvm.lifetime.end(i64 8, i8* %72) #2, !dbg !5216
  br label %do.cond.74, !dbg !5218

do.cond.74:                                       ; preds = %if.end.73
  br label %do.end.75, !dbg !5219

do.end.75:                                        ; preds = %do.cond.74
  %73 = load %struct.known_capsule*, %struct.known_capsule** %known, align 8, !dbg !5221, !tbaa !1941
  %module76 = getelementptr inbounds %struct.known_capsule, %struct.known_capsule* %73, i32 0, i32 1, !dbg !5223
  %74 = load i8*, i8** %module76, align 8, !dbg !5223, !tbaa !5179
  %75 = load %struct.known_capsule*, %struct.known_capsule** %known, align 8, !dbg !5224, !tbaa !1941
  %attribute = getelementptr inbounds %struct.known_capsule, %struct.known_capsule* %75, i32 0, i32 2, !dbg !5225
  %76 = load i8*, i8** %attribute, align 8, !dbg !5225, !tbaa !5226
  %call77 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @test_capsule.buffer, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.248, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.249, i32 0, i32 0), i8* %74, i8* %76) #2, !dbg !5227
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @test_capsule.buffer, i32 0, i32 0), i8** %error, align 8, !dbg !5228, !tbaa !1941
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5229

if.end.78:                                        ; preds = %if.then.60
  %77 = load %struct._object*, %struct._object** %module56, align 8, !dbg !5230, !tbaa !1941
  %78 = load %struct.known_capsule*, %struct.known_capsule** %known, align 8, !dbg !5231, !tbaa !1941
  %attribute79 = getelementptr inbounds %struct.known_capsule, %struct.known_capsule* %78, i32 0, i32 2, !dbg !5232
  %79 = load i8*, i8** %attribute79, align 8, !dbg !5232, !tbaa !5226
  %call80 = call %struct._object* @PyObject_GetAttrString(%struct._object* %77, i8* %79), !dbg !5233
  store %struct._object* %call80, %struct._object** %object, align 8, !dbg !5234, !tbaa !1941
  %80 = load %struct._object*, %struct._object** %object, align 8, !dbg !5235, !tbaa !1941
  %tobool81 = icmp ne %struct._object* %80, null, !dbg !5235
  br i1 %tobool81, label %if.end.95, label %if.then.82, !dbg !5236

if.then.82:                                       ; preds = %if.end.78
  br label %do.body.83, !dbg !5237

do.body.83:                                       ; preds = %if.then.82
  %81 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !5238
  call void @llvm.lifetime.start(i64 8, i8* %81) #2, !dbg !5238
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp84, metadata !1048, metadata !1945), !dbg !5240
  %82 = load %struct._object*, %struct._object** %module56, align 8, !dbg !5241, !tbaa !1941
  store %struct._object* %82, %struct._object** %_py_decref_tmp84, align 8, !dbg !5240, !tbaa !1941
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !5242, !tbaa !1941
  %ob_refcnt85 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 0, !dbg !5244
  %84 = load i64, i64* %ob_refcnt85, align 8, !dbg !5245, !tbaa !1961
  %dec86 = add i64 %84, -1, !dbg !5245
  store i64 %dec86, i64* %ob_refcnt85, align 8, !dbg !5245, !tbaa !1961
  %cmp87 = icmp ne i64 %dec86, 0, !dbg !5246
  br i1 %cmp87, label %if.then.88, label %if.else.89, !dbg !5247

if.then.88:                                       ; preds = %do.body.83
  br label %if.end.92, !dbg !5248

if.else.89:                                       ; preds = %do.body.83
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !5250, !tbaa !1941
  %ob_type90 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 1, !dbg !5252
  %86 = load %struct._typeobject*, %struct._typeobject** %ob_type90, align 8, !dbg !5252, !tbaa !1995
  %tp_dealloc91 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %86, i32 0, i32 4, !dbg !5253
  %87 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc91, align 8, !dbg !5253, !tbaa !1997
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp84, align 8, !dbg !5254, !tbaa !1941
  call void %87(%struct._object* %88), !dbg !5255
  br label %if.end.92

if.end.92:                                        ; preds = %if.else.89, %if.then.88
  %89 = bitcast %struct._object** %_py_decref_tmp84 to i8*, !dbg !5256
  call void @llvm.lifetime.end(i64 8, i8* %89) #2, !dbg !5256
  br label %do.cond.93, !dbg !5258

do.cond.93:                                       ; preds = %if.end.92
  br label %do.end.94, !dbg !5259

do.end.94:                                        ; preds = %do.cond.93
  store %struct._object* null, %struct._object** %retval, !dbg !5261
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5261

if.end.95:                                        ; preds = %if.end.78
  %90 = load %struct._object*, %struct._object** %object, align 8, !dbg !5262, !tbaa !1941
  %call96 = call i8* @PyCapsule_GetPointer(%struct._object* %90, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.250, i32 0, i32 0)), !dbg !5263
  store i8* %call96, i8** %pointer2, align 8, !dbg !5264, !tbaa !1941
  %call97 = call %struct._object* @PyErr_Occurred(), !dbg !5265
  %tobool98 = icmp ne %struct._object* %call97, null, !dbg !5265
  br i1 %tobool98, label %if.end.127, label %if.then.99, !dbg !5266

if.then.99:                                       ; preds = %if.end.95
  br label %do.body.100, !dbg !5267

do.body.100:                                      ; preds = %if.then.99
  %91 = bitcast %struct._object** %_py_decref_tmp101 to i8*, !dbg !5268
  call void @llvm.lifetime.start(i64 8, i8* %91) #2, !dbg !5268
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp101, metadata !1052, metadata !1945), !dbg !5270
  %92 = load %struct._object*, %struct._object** %object, align 8, !dbg !5271, !tbaa !1941
  store %struct._object* %92, %struct._object** %_py_decref_tmp101, align 8, !dbg !5270, !tbaa !1941
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp101, align 8, !dbg !5272, !tbaa !1941
  %ob_refcnt102 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 0, !dbg !5274
  %94 = load i64, i64* %ob_refcnt102, align 8, !dbg !5275, !tbaa !1961
  %dec103 = add i64 %94, -1, !dbg !5275
  store i64 %dec103, i64* %ob_refcnt102, align 8, !dbg !5275, !tbaa !1961
  %cmp104 = icmp ne i64 %dec103, 0, !dbg !5276
  br i1 %cmp104, label %if.then.105, label %if.else.106, !dbg !5277

if.then.105:                                      ; preds = %do.body.100
  br label %if.end.109, !dbg !5278

if.else.106:                                      ; preds = %do.body.100
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp101, align 8, !dbg !5280, !tbaa !1941
  %ob_type107 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 1, !dbg !5282
  %96 = load %struct._typeobject*, %struct._typeobject** %ob_type107, align 8, !dbg !5282, !tbaa !1995
  %tp_dealloc108 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %96, i32 0, i32 4, !dbg !5283
  %97 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc108, align 8, !dbg !5283, !tbaa !1997
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp101, align 8, !dbg !5284, !tbaa !1941
  call void %97(%struct._object* %98), !dbg !5285
  br label %if.end.109

if.end.109:                                       ; preds = %if.else.106, %if.then.105
  %99 = bitcast %struct._object** %_py_decref_tmp101 to i8*, !dbg !5286
  call void @llvm.lifetime.end(i64 8, i8* %99) #2, !dbg !5286
  br label %do.cond.110, !dbg !5288

do.cond.110:                                      ; preds = %if.end.109
  br label %do.end.111, !dbg !5289

do.end.111:                                       ; preds = %do.cond.110
  br label %do.body.112, !dbg !5291

do.body.112:                                      ; preds = %do.end.111
  %100 = bitcast %struct._object** %_py_decref_tmp113 to i8*, !dbg !5292
  call void @llvm.lifetime.start(i64 8, i8* %100) #2, !dbg !5292
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp113, metadata !1056, metadata !1945), !dbg !5294
  %101 = load %struct._object*, %struct._object** %module56, align 8, !dbg !5295, !tbaa !1941
  store %struct._object* %101, %struct._object** %_py_decref_tmp113, align 8, !dbg !5294, !tbaa !1941
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8, !dbg !5296, !tbaa !1941
  %ob_refcnt114 = getelementptr inbounds %struct._object, %struct._object* %102, i32 0, i32 0, !dbg !5298
  %103 = load i64, i64* %ob_refcnt114, align 8, !dbg !5299, !tbaa !1961
  %dec115 = add i64 %103, -1, !dbg !5299
  store i64 %dec115, i64* %ob_refcnt114, align 8, !dbg !5299, !tbaa !1961
  %cmp116 = icmp ne i64 %dec115, 0, !dbg !5300
  br i1 %cmp116, label %if.then.117, label %if.else.118, !dbg !5301

if.then.117:                                      ; preds = %do.body.112
  br label %if.end.121, !dbg !5302

if.else.118:                                      ; preds = %do.body.112
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8, !dbg !5304, !tbaa !1941
  %ob_type119 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 1, !dbg !5306
  %105 = load %struct._typeobject*, %struct._typeobject** %ob_type119, align 8, !dbg !5306, !tbaa !1995
  %tp_dealloc120 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %105, i32 0, i32 4, !dbg !5307
  %106 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc120, align 8, !dbg !5307, !tbaa !1997
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8, !dbg !5308, !tbaa !1941
  call void %106(%struct._object* %107), !dbg !5309
  br label %if.end.121

if.end.121:                                       ; preds = %if.else.118, %if.then.117
  %108 = bitcast %struct._object** %_py_decref_tmp113 to i8*, !dbg !5310
  call void @llvm.lifetime.end(i64 8, i8* %108) #2, !dbg !5310
  br label %do.cond.122, !dbg !5311

do.cond.122:                                      ; preds = %if.end.121
  br label %do.end.123, !dbg !5312

do.end.123:                                       ; preds = %do.cond.122
  %109 = load %struct.known_capsule*, %struct.known_capsule** %known, align 8, !dbg !5314, !tbaa !1941
  %module124 = getelementptr inbounds %struct.known_capsule, %struct.known_capsule* %109, i32 0, i32 1, !dbg !5316
  %110 = load i8*, i8** %module124, align 8, !dbg !5316, !tbaa !5179
  %111 = load %struct.known_capsule*, %struct.known_capsule** %known, align 8, !dbg !5317, !tbaa !1941
  %attribute125 = getelementptr inbounds %struct.known_capsule, %struct.known_capsule* %111, i32 0, i32 2, !dbg !5318
  %112 = load i8*, i8** %attribute125, align 8, !dbg !5318, !tbaa !5226
  %call126 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @test_capsule.buffer, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.248, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.244, i32 0, i32 0), i8* %110, i8* %112) #2, !dbg !5319
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @test_capsule.buffer, i32 0, i32 0), i8** %error, align 8, !dbg !5320, !tbaa !1941
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5321

if.end.127:                                       ; preds = %if.end.95
  call void @PyErr_Clear(), !dbg !5322
  %113 = load i8*, i8** %pointer2, align 8, !dbg !5323, !tbaa !1941
  %tobool128 = icmp ne i8* %113, null, !dbg !5323
  br i1 %tobool128, label %if.then.129, label %if.end.163, !dbg !5324

if.then.129:                                      ; preds = %if.end.127
  br label %do.body.130, !dbg !5325

do.body.130:                                      ; preds = %if.then.129
  %114 = bitcast %struct._object** %_py_decref_tmp131 to i8*, !dbg !5326
  call void @llvm.lifetime.start(i64 8, i8* %114) #2, !dbg !5326
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp131, metadata !1058, metadata !1945), !dbg !5328
  %115 = load %struct._object*, %struct._object** %module56, align 8, !dbg !5329, !tbaa !1941
  store %struct._object* %115, %struct._object** %_py_decref_tmp131, align 8, !dbg !5328, !tbaa !1941
  %116 = load %struct._object*, %struct._object** %_py_decref_tmp131, align 8, !dbg !5330, !tbaa !1941
  %ob_refcnt132 = getelementptr inbounds %struct._object, %struct._object* %116, i32 0, i32 0, !dbg !5332
  %117 = load i64, i64* %ob_refcnt132, align 8, !dbg !5333, !tbaa !1961
  %dec133 = add i64 %117, -1, !dbg !5333
  store i64 %dec133, i64* %ob_refcnt132, align 8, !dbg !5333, !tbaa !1961
  %cmp134 = icmp ne i64 %dec133, 0, !dbg !5334
  br i1 %cmp134, label %if.then.135, label %if.else.136, !dbg !5335

if.then.135:                                      ; preds = %do.body.130
  br label %if.end.139, !dbg !5336

if.else.136:                                      ; preds = %do.body.130
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp131, align 8, !dbg !5338, !tbaa !1941
  %ob_type137 = getelementptr inbounds %struct._object, %struct._object* %118, i32 0, i32 1, !dbg !5340
  %119 = load %struct._typeobject*, %struct._typeobject** %ob_type137, align 8, !dbg !5340, !tbaa !1995
  %tp_dealloc138 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %119, i32 0, i32 4, !dbg !5341
  %120 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc138, align 8, !dbg !5341, !tbaa !1997
  %121 = load %struct._object*, %struct._object** %_py_decref_tmp131, align 8, !dbg !5342, !tbaa !1941
  call void %120(%struct._object* %121), !dbg !5343
  br label %if.end.139

if.end.139:                                       ; preds = %if.else.136, %if.then.135
  %122 = bitcast %struct._object** %_py_decref_tmp131 to i8*, !dbg !5344
  call void @llvm.lifetime.end(i64 8, i8* %122) #2, !dbg !5344
  br label %do.cond.140, !dbg !5346

do.cond.140:                                      ; preds = %if.end.139
  br label %do.end.141, !dbg !5347

do.end.141:                                       ; preds = %do.cond.140
  br label %do.body.142, !dbg !5349

do.body.142:                                      ; preds = %do.end.141
  %123 = bitcast %struct._object** %_py_decref_tmp143 to i8*, !dbg !5350
  call void @llvm.lifetime.start(i64 8, i8* %123) #2, !dbg !5350
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp143, metadata !1062, metadata !1945), !dbg !5352
  %124 = load %struct._object*, %struct._object** %object, align 8, !dbg !5353, !tbaa !1941
  store %struct._object* %124, %struct._object** %_py_decref_tmp143, align 8, !dbg !5352, !tbaa !1941
  %125 = load %struct._object*, %struct._object** %_py_decref_tmp143, align 8, !dbg !5354, !tbaa !1941
  %ob_refcnt144 = getelementptr inbounds %struct._object, %struct._object* %125, i32 0, i32 0, !dbg !5356
  %126 = load i64, i64* %ob_refcnt144, align 8, !dbg !5357, !tbaa !1961
  %dec145 = add i64 %126, -1, !dbg !5357
  store i64 %dec145, i64* %ob_refcnt144, align 8, !dbg !5357, !tbaa !1961
  %cmp146 = icmp ne i64 %dec145, 0, !dbg !5358
  br i1 %cmp146, label %if.then.147, label %if.else.148, !dbg !5359

if.then.147:                                      ; preds = %do.body.142
  br label %if.end.151, !dbg !5360

if.else.148:                                      ; preds = %do.body.142
  %127 = load %struct._object*, %struct._object** %_py_decref_tmp143, align 8, !dbg !5362, !tbaa !1941
  %ob_type149 = getelementptr inbounds %struct._object, %struct._object* %127, i32 0, i32 1, !dbg !5364
  %128 = load %struct._typeobject*, %struct._typeobject** %ob_type149, align 8, !dbg !5364, !tbaa !1995
  %tp_dealloc150 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %128, i32 0, i32 4, !dbg !5365
  %129 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc150, align 8, !dbg !5365, !tbaa !1997
  %130 = load %struct._object*, %struct._object** %_py_decref_tmp143, align 8, !dbg !5366, !tbaa !1941
  call void %129(%struct._object* %130), !dbg !5367
  br label %if.end.151

if.end.151:                                       ; preds = %if.else.148, %if.then.147
  %131 = bitcast %struct._object** %_py_decref_tmp143 to i8*, !dbg !5368
  call void @llvm.lifetime.end(i64 8, i8* %131) #2, !dbg !5368
  br label %do.cond.152, !dbg !5369

do.cond.152:                                      ; preds = %if.end.151
  br label %do.end.153, !dbg !5370

do.end.153:                                       ; preds = %do.cond.152
  %132 = load i8*, i8** %pointer2, align 8, !dbg !5372, !tbaa !1941
  %133 = load i8*, i8** %pointer, align 8, !dbg !5374, !tbaa !1941
  %cmp154 = icmp eq i8* %132, %133, !dbg !5375
  br i1 %cmp154, label %if.then.155, label %if.else.159, !dbg !5376

if.then.155:                                      ; preds = %do.end.153
  %134 = load %struct.known_capsule*, %struct.known_capsule** %known, align 8, !dbg !5377, !tbaa !1941
  %module156 = getelementptr inbounds %struct.known_capsule, %struct.known_capsule* %134, i32 0, i32 1, !dbg !5380
  %135 = load i8*, i8** %module156, align 8, !dbg !5380, !tbaa !5179
  %136 = load %struct.known_capsule*, %struct.known_capsule** %known, align 8, !dbg !5381, !tbaa !1941
  %attribute157 = getelementptr inbounds %struct.known_capsule, %struct.known_capsule* %136, i32 0, i32 2, !dbg !5382
  %137 = load i8*, i8** %attribute157, align 8, !dbg !5382, !tbaa !5226
  %call158 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @test_capsule.buffer, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.248, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.251, i32 0, i32 0), i8* %135, i8* %137) #2, !dbg !5383
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @test_capsule.buffer, i32 0, i32 0), i8** %error, align 8, !dbg !5384, !tbaa !1941
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5385

if.else.159:                                      ; preds = %do.end.153
  %138 = load %struct.known_capsule*, %struct.known_capsule** %known, align 8, !dbg !5386, !tbaa !1941
  %module160 = getelementptr inbounds %struct.known_capsule, %struct.known_capsule* %138, i32 0, i32 1, !dbg !5389
  %139 = load i8*, i8** %module160, align 8, !dbg !5389, !tbaa !5179
  %140 = load %struct.known_capsule*, %struct.known_capsule** %known, align 8, !dbg !5390, !tbaa !1941
  %attribute161 = getelementptr inbounds %struct.known_capsule, %struct.known_capsule* %140, i32 0, i32 2, !dbg !5391
  %141 = load i8*, i8** %attribute161, align 8, !dbg !5391, !tbaa !5226
  %call162 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @test_capsule.buffer, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.248, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.246, i32 0, i32 0), i8* %139, i8* %141) #2, !dbg !5392
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @test_capsule.buffer, i32 0, i32 0), i8** %error, align 8, !dbg !5393, !tbaa !1941
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5394

if.end.163:                                       ; preds = %if.end.127
  br label %do.body.164, !dbg !5395

do.body.164:                                      ; preds = %if.end.163
  %142 = bitcast %struct._object** %_py_decref_tmp165 to i8*, !dbg !5396
  call void @llvm.lifetime.start(i64 8, i8* %142) #2, !dbg !5396
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp165, metadata !1064, metadata !1945), !dbg !5398
  %143 = load %struct._object*, %struct._object** %object, align 8, !dbg !5399, !tbaa !1941
  store %struct._object* %143, %struct._object** %_py_decref_tmp165, align 8, !dbg !5398, !tbaa !1941
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp165, align 8, !dbg !5400, !tbaa !1941
  %ob_refcnt166 = getelementptr inbounds %struct._object, %struct._object* %144, i32 0, i32 0, !dbg !5402
  %145 = load i64, i64* %ob_refcnt166, align 8, !dbg !5403, !tbaa !1961
  %dec167 = add i64 %145, -1, !dbg !5403
  store i64 %dec167, i64* %ob_refcnt166, align 8, !dbg !5403, !tbaa !1961
  %cmp168 = icmp ne i64 %dec167, 0, !dbg !5404
  br i1 %cmp168, label %if.then.169, label %if.else.170, !dbg !5405

if.then.169:                                      ; preds = %do.body.164
  br label %if.end.173, !dbg !5406

if.else.170:                                      ; preds = %do.body.164
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp165, align 8, !dbg !5408, !tbaa !1941
  %ob_type171 = getelementptr inbounds %struct._object, %struct._object* %146, i32 0, i32 1, !dbg !5410
  %147 = load %struct._typeobject*, %struct._typeobject** %ob_type171, align 8, !dbg !5410, !tbaa !1995
  %tp_dealloc172 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %147, i32 0, i32 4, !dbg !5411
  %148 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc172, align 8, !dbg !5411, !tbaa !1997
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp165, align 8, !dbg !5412, !tbaa !1941
  call void %148(%struct._object* %149), !dbg !5413
  br label %if.end.173

if.end.173:                                       ; preds = %if.else.170, %if.then.169
  %150 = bitcast %struct._object** %_py_decref_tmp165 to i8*, !dbg !5414
  call void @llvm.lifetime.end(i64 8, i8* %150) #2, !dbg !5414
  br label %do.cond.174, !dbg !5416

do.cond.174:                                      ; preds = %if.end.173
  br label %do.end.175, !dbg !5417

do.end.175:                                       ; preds = %do.cond.174
  br label %do.body.176, !dbg !5419

do.body.176:                                      ; preds = %do.end.175
  %151 = bitcast %struct._object** %_py_decref_tmp177 to i8*, !dbg !5420
  call void @llvm.lifetime.start(i64 8, i8* %151) #2, !dbg !5420
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp177, metadata !1066, metadata !1945), !dbg !5422
  %152 = load %struct._object*, %struct._object** %module56, align 8, !dbg !5423, !tbaa !1941
  store %struct._object* %152, %struct._object** %_py_decref_tmp177, align 8, !dbg !5422, !tbaa !1941
  %153 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8, !dbg !5424, !tbaa !1941
  %ob_refcnt178 = getelementptr inbounds %struct._object, %struct._object* %153, i32 0, i32 0, !dbg !5426
  %154 = load i64, i64* %ob_refcnt178, align 8, !dbg !5427, !tbaa !1961
  %dec179 = add i64 %154, -1, !dbg !5427
  store i64 %dec179, i64* %ob_refcnt178, align 8, !dbg !5427, !tbaa !1961
  %cmp180 = icmp ne i64 %dec179, 0, !dbg !5428
  br i1 %cmp180, label %if.then.181, label %if.else.182, !dbg !5429

if.then.181:                                      ; preds = %do.body.176
  br label %if.end.185, !dbg !5430

if.else.182:                                      ; preds = %do.body.176
  %155 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8, !dbg !5432, !tbaa !1941
  %ob_type183 = getelementptr inbounds %struct._object, %struct._object* %155, i32 0, i32 1, !dbg !5434
  %156 = load %struct._typeobject*, %struct._typeobject** %ob_type183, align 8, !dbg !5434, !tbaa !1995
  %tp_dealloc184 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %156, i32 0, i32 4, !dbg !5435
  %157 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc184, align 8, !dbg !5435, !tbaa !1997
  %158 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8, !dbg !5436, !tbaa !1941
  call void %157(%struct._object* %158), !dbg !5437
  br label %if.end.185

if.end.185:                                       ; preds = %if.else.182, %if.then.181
  %159 = bitcast %struct._object** %_py_decref_tmp177 to i8*, !dbg !5438
  call void @llvm.lifetime.end(i64 8, i8* %159) #2, !dbg !5438
  br label %do.cond.186, !dbg !5439

do.cond.186:                                      ; preds = %if.end.185
  br label %do.end.187, !dbg !5440

do.end.187:                                       ; preds = %do.cond.186
  br label %if.end.189, !dbg !5442

if.else.188:                                      ; preds = %for.body
  call void @PyErr_Clear(), !dbg !5443
  br label %if.end.189

if.end.189:                                       ; preds = %if.else.188, %do.end.187
  store i32 0, i32* %cleanup.dest.slot, !dbg !5444
  br label %cleanup, !dbg !5444

cleanup:                                          ; preds = %if.else.159, %if.then.155, %do.end.123, %do.end.75, %if.end.189, %do.end.94
  %160 = bitcast %struct._object** %module56 to i8*, !dbg !5445
  call void @llvm.lifetime.end(i64 8, i8* %160) #2, !dbg !5445
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.194 [
    i32 0, label %cleanup.cont
    i32 2, label %exit
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !5446

for.inc:                                          ; preds = %cleanup.cont
  %161 = load %struct.known_capsule*, %struct.known_capsule** %known, align 8, !dbg !5447, !tbaa !1941
  %incdec.ptr = getelementptr %struct.known_capsule, %struct.known_capsule* %161, i32 1, !dbg !5447
  store %struct.known_capsule* %incdec.ptr, %struct.known_capsule** %known, align 8, !dbg !5447, !tbaa !1941
  br label %for.cond, !dbg !5448

for.end:                                          ; preds = %for.cond
  br label %exit, !dbg !5449

exit:                                             ; preds = %for.end, %cleanup, %if.then.52, %if.else.36, %if.then.35, %if.then.30, %if.then.24, %if.then.21, %if.then.12, %if.then.9, %if.then.3, %if.then
  %162 = load i8*, i8** %error, align 8, !dbg !5450, !tbaa !1941
  %tobool190 = icmp ne i8* %162, null, !dbg !5450
  br i1 %tobool190, label %if.then.191, label %if.end.193, !dbg !5452

if.then.191:                                      ; preds = %exit
  %163 = load i8*, i8** %error, align 8, !dbg !5453, !tbaa !1941
  %call192 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.56, i32 0, i32 0), i8* %163), !dbg !5455
  store %struct._object* %call192, %struct._object** %retval, !dbg !5456
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.194, !dbg !5456

if.end.193:                                       ; preds = %exit
  %164 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5457, !tbaa !1961
  %inc = add i64 %164, 1, !dbg !5457
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !5457, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !5458
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.194, !dbg !5458

cleanup.194:                                      ; preds = %if.end.193, %if.then.191, %cleanup
  %165 = bitcast %struct.known_capsule** %known to i8*, !dbg !5459
  call void @llvm.lifetime.end(i64 8, i8* %165) #2, !dbg !5459
  %166 = bitcast [4 x %struct.known_capsule]* %known_capsules to i8*, !dbg !5459
  call void @llvm.lifetime.end(i64 96, i8* %166) #2, !dbg !5459
  %167 = bitcast i8** %pointer2 to i8*, !dbg !5459
  call void @llvm.lifetime.end(i64 8, i8* %167) #2, !dbg !5459
  %168 = bitcast i8** %pointer to i8*, !dbg !5459
  call void @llvm.lifetime.end(i64 8, i8* %168) #2, !dbg !5459
  %169 = bitcast i8** %error to i8*, !dbg !5459
  call void @llvm.lifetime.end(i64 8, i8* %169) #2, !dbg !5459
  %170 = bitcast %struct._object** %object to i8*, !dbg !5459
  call void @llvm.lifetime.end(i64 8, i8* %170) #2, !dbg !5459
  %171 = load %struct._object*, %struct._object** %retval, !dbg !5459
  ret %struct._object* %171, !dbg !5459
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_tuple(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1073, metadata !1945), !dbg !5460
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1074, metadata !1945), !dbg !5461
  %0 = bitcast i32* %a to i8*, !dbg !5462
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !5462
  call void @llvm.dbg.declare(metadata i32* %a, metadata !1075, metadata !1945), !dbg !5463
  %1 = bitcast i32* %b to i8*, !dbg !5462
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !5462
  call void @llvm.dbg.declare(metadata i32* %b, metadata !1076, metadata !1945), !dbg !5464
  %2 = bitcast i32* %c to i8*, !dbg !5462
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !5462
  call void @llvm.dbg.declare(metadata i32* %c, metadata !1077, metadata !1945), !dbg !5465
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5466, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.259, i32 0, i32 0), i32* %a, i32* %b, i32* %c), !dbg !5468
  %tobool = icmp ne i32 %call, 0, !dbg !5468
  br i1 %tobool, label %if.end, label %if.then, !dbg !5469

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5470
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5470

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %a, align 4, !dbg !5471, !tbaa !1971
  %5 = load i32, i32* %b, align 4, !dbg !5472, !tbaa !1971
  %6 = load i32, i32* %c, align 4, !dbg !5473, !tbaa !1971
  %call1 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.260, i32 0, i32 0), i32 %4, i32 %5, i32 %6), !dbg !5474
  store %struct._object* %call1, %struct._object** %retval, !dbg !5475
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5475

cleanup:                                          ; preds = %if.end, %if.then
  %7 = bitcast i32* %c to i8*, !dbg !5476
  call void @llvm.lifetime.end(i64 4, i8* %7) #2, !dbg !5476
  %8 = bitcast i32* %b to i8*, !dbg !5476
  call void @llvm.lifetime.end(i64 4, i8* %8) #2, !dbg !5476
  %9 = bitcast i32* %a to i8*, !dbg !5476
  call void @llvm.lifetime.end(i64 4, i8* %9) #2, !dbg !5476
  %10 = load %struct._object*, %struct._object** %retval, !dbg !5476
  ret %struct._object* %10, !dbg !5476
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_keywords(%struct._object* %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwargs.addr = alloca %struct._object*, align 8
  %int_args = alloca [10 x i32], align 16
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1080, metadata !1945), !dbg !5477
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1081, metadata !1945), !dbg !5478
  store %struct._object* %kwargs, %struct._object** %kwargs.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %kwargs.addr, metadata !1082, metadata !1945), !dbg !5479
  %0 = bitcast [10 x i32]* %int_args to i8*, !dbg !5480
  call void @llvm.lifetime.start(i64 40, i8* %0) #2, !dbg !5480
  call void @llvm.dbg.declare(metadata [10 x i32]* %int_args, metadata !1083, metadata !1945), !dbg !5481
  %1 = bitcast [10 x i32]* %int_args to i8*, !dbg !5481
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([10 x i32]* @getargs_keywords.int_args to i8*), i64 40, i32 16, i1 false), !dbg !5481
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5482, !tbaa !1941
  %3 = load %struct._object*, %struct._object** %kwargs.addr, align 8, !dbg !5484, !tbaa !1941
  %4 = load i8*, i8** @getargs_keywords.fmt, align 8, !dbg !5485, !tbaa !1941
  %arrayidx = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 0, !dbg !5486
  %arrayidx1 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 1, !dbg !5487
  %arrayidx2 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 2, !dbg !5488
  %arrayidx3 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 3, !dbg !5489
  %arrayidx4 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 4, !dbg !5490
  %arrayidx5 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 5, !dbg !5491
  %arrayidx6 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 6, !dbg !5492
  %arrayidx7 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 7, !dbg !5493
  %arrayidx8 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 8, !dbg !5494
  %arrayidx9 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 9, !dbg !5495
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %2, %struct._object* %3, i8* %4, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @getargs_keywords.keywords, i32 0, i32 0), i32* %arrayidx, i32* %arrayidx1, i32* %arrayidx2, i32* %arrayidx3, i32* %arrayidx4, i32* %arrayidx5, i32* %arrayidx6, i32* %arrayidx7, i32* %arrayidx8, i32* %arrayidx9), !dbg !5496
  %tobool = icmp ne i32 %call, 0, !dbg !5496
  br i1 %tobool, label %if.end, label %if.then, !dbg !5497

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5498
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5498

if.end:                                           ; preds = %entry
  %arrayidx10 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 0, !dbg !5499
  %5 = load i32, i32* %arrayidx10, align 4, !dbg !5499, !tbaa !1971
  %arrayidx11 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 1, !dbg !5500
  %6 = load i32, i32* %arrayidx11, align 4, !dbg !5500, !tbaa !1971
  %arrayidx12 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 2, !dbg !5501
  %7 = load i32, i32* %arrayidx12, align 4, !dbg !5501, !tbaa !1971
  %arrayidx13 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 3, !dbg !5502
  %8 = load i32, i32* %arrayidx13, align 4, !dbg !5502, !tbaa !1971
  %arrayidx14 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 4, !dbg !5503
  %9 = load i32, i32* %arrayidx14, align 4, !dbg !5503, !tbaa !1971
  %arrayidx15 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 5, !dbg !5504
  %10 = load i32, i32* %arrayidx15, align 4, !dbg !5504, !tbaa !1971
  %arrayidx16 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 6, !dbg !5505
  %11 = load i32, i32* %arrayidx16, align 4, !dbg !5505, !tbaa !1971
  %arrayidx17 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 7, !dbg !5506
  %12 = load i32, i32* %arrayidx17, align 4, !dbg !5506, !tbaa !1971
  %arrayidx18 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 8, !dbg !5507
  %13 = load i32, i32* %arrayidx18, align 4, !dbg !5507, !tbaa !1971
  %arrayidx19 = getelementptr [10 x i32], [10 x i32]* %int_args, i32 0, i64 9, !dbg !5508
  %14 = load i32, i32* %arrayidx19, align 4, !dbg !5508, !tbaa !1971
  %call20 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.267, i32 0, i32 0), i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i32 %14), !dbg !5509
  store %struct._object* %call20, %struct._object** %retval, !dbg !5510
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5510

cleanup:                                          ; preds = %if.end, %if.then
  %15 = bitcast [10 x i32]* %int_args to i8*, !dbg !5511
  call void @llvm.lifetime.end(i64 40, i8* %15) #2, !dbg !5511
  %16 = load %struct._object*, %struct._object** %retval, !dbg !5511
  ret %struct._object* %16, !dbg !5511
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_keyword_only(%struct._object* %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwargs.addr = alloca %struct._object*, align 8
  %required = alloca i32, align 4
  %optional = alloca i32, align 4
  %keyword_only = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1089, metadata !1945), !dbg !5512
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1090, metadata !1945), !dbg !5513
  store %struct._object* %kwargs, %struct._object** %kwargs.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %kwargs.addr, metadata !1091, metadata !1945), !dbg !5514
  %0 = bitcast i32* %required to i8*, !dbg !5515
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !5515
  call void @llvm.dbg.declare(metadata i32* %required, metadata !1092, metadata !1945), !dbg !5516
  store i32 -1, i32* %required, align 4, !dbg !5516, !tbaa !1971
  %1 = bitcast i32* %optional to i8*, !dbg !5517
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !5517
  call void @llvm.dbg.declare(metadata i32* %optional, metadata !1093, metadata !1945), !dbg !5518
  store i32 -1, i32* %optional, align 4, !dbg !5518, !tbaa !1971
  %2 = bitcast i32* %keyword_only to i8*, !dbg !5519
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !5519
  call void @llvm.dbg.declare(metadata i32* %keyword_only, metadata !1094, metadata !1945), !dbg !5520
  store i32 -1, i32* %keyword_only, align 4, !dbg !5520, !tbaa !1971
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5521, !tbaa !1941
  %4 = load %struct._object*, %struct._object** %kwargs.addr, align 8, !dbg !5523, !tbaa !1941
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %3, %struct._object* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.271, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @getargs_keyword_only.keywords, i32 0, i32 0), i32* %required, i32* %optional, i32* %keyword_only), !dbg !5524
  %tobool = icmp ne i32 %call, 0, !dbg !5524
  br i1 %tobool, label %if.end, label %if.then, !dbg !5525

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5526
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5526

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %required, align 4, !dbg !5527, !tbaa !1971
  %6 = load i32, i32* %optional, align 4, !dbg !5528, !tbaa !1971
  %7 = load i32, i32* %keyword_only, align 4, !dbg !5529, !tbaa !1971
  %call1 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.260, i32 0, i32 0), i32 %5, i32 %6, i32 %7), !dbg !5530
  store %struct._object* %call1, %struct._object** %retval, !dbg !5531
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5531

cleanup:                                          ; preds = %if.end, %if.then
  %8 = bitcast i32* %keyword_only to i8*, !dbg !5532
  call void @llvm.lifetime.end(i64 4, i8* %8) #2, !dbg !5532
  %9 = bitcast i32* %optional to i8*, !dbg !5532
  call void @llvm.lifetime.end(i64 4, i8* %9) #2, !dbg !5532
  %10 = bitcast i32* %required to i8*, !dbg !5532
  call void @llvm.lifetime.end(i64 4, i8* %10) #2, !dbg !5532
  %11 = load %struct._object*, %struct._object** %retval, !dbg !5532
  ret %struct._object* %11, !dbg !5532
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_b(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %value = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1097, metadata !1945), !dbg !5533
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1098, metadata !1945), !dbg !5534
  call void @llvm.lifetime.start(i64 1, i8* %value) #2, !dbg !5535
  call void @llvm.dbg.declare(metadata i8* %value, metadata !1099, metadata !1945), !dbg !5536
  %0 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5537, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.272, i32 0, i32 0), i8* %value), !dbg !5539
  %tobool = icmp ne i32 %call, 0, !dbg !5539
  br i1 %tobool, label %if.end, label %if.then, !dbg !5540

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5541
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5541

if.end:                                           ; preds = %entry
  %1 = load i8, i8* %value, align 1, !dbg !5542, !tbaa !5543
  %conv = zext i8 %1 to i64, !dbg !5544
  %call1 = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv), !dbg !5545
  store %struct._object* %call1, %struct._object** %retval, !dbg !5546
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5546

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end(i64 1, i8* %value) #2, !dbg !5547
  %2 = load %struct._object*, %struct._object** %retval, !dbg !5547
  ret %struct._object* %2, !dbg !5547
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_B(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %value = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1102, metadata !1945), !dbg !5548
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1103, metadata !1945), !dbg !5549
  call void @llvm.lifetime.start(i64 1, i8* %value) #2, !dbg !5550
  call void @llvm.dbg.declare(metadata i8* %value, metadata !1104, metadata !1945), !dbg !5551
  %0 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5552, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.273, i32 0, i32 0), i8* %value), !dbg !5554
  %tobool = icmp ne i32 %call, 0, !dbg !5554
  br i1 %tobool, label %if.end, label %if.then, !dbg !5555

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5556
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5556

if.end:                                           ; preds = %entry
  %1 = load i8, i8* %value, align 1, !dbg !5557, !tbaa !5543
  %conv = zext i8 %1 to i64, !dbg !5558
  %call1 = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv), !dbg !5559
  store %struct._object* %call1, %struct._object** %retval, !dbg !5560
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5560

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end(i64 1, i8* %value) #2, !dbg !5561
  %2 = load %struct._object*, %struct._object** %retval, !dbg !5561
  ret %struct._object* %2, !dbg !5561
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_h(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %value = alloca i16, align 2
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1107, metadata !1945), !dbg !5562
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1108, metadata !1945), !dbg !5563
  %0 = bitcast i16* %value to i8*, !dbg !5564
  call void @llvm.lifetime.start(i64 2, i8* %0) #2, !dbg !5564
  call void @llvm.dbg.declare(metadata i16* %value, metadata !1109, metadata !1945), !dbg !5565
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5566, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.274, i32 0, i32 0), i16* %value), !dbg !5568
  %tobool = icmp ne i32 %call, 0, !dbg !5568
  br i1 %tobool, label %if.end, label %if.then, !dbg !5569

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5570
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5570

if.end:                                           ; preds = %entry
  %2 = load i16, i16* %value, align 2, !dbg !5571, !tbaa !5572
  %conv = sext i16 %2 to i64, !dbg !5574
  %call1 = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !5575
  store %struct._object* %call1, %struct._object** %retval, !dbg !5576
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5576

cleanup:                                          ; preds = %if.end, %if.then
  %3 = bitcast i16* %value to i8*, !dbg !5577
  call void @llvm.lifetime.end(i64 2, i8* %3) #2, !dbg !5577
  %4 = load %struct._object*, %struct._object** %retval, !dbg !5577
  ret %struct._object* %4, !dbg !5577
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_H(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %value = alloca i16, align 2
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1112, metadata !1945), !dbg !5578
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1113, metadata !1945), !dbg !5579
  %0 = bitcast i16* %value to i8*, !dbg !5580
  call void @llvm.lifetime.start(i64 2, i8* %0) #2, !dbg !5580
  call void @llvm.dbg.declare(metadata i16* %value, metadata !1114, metadata !1945), !dbg !5581
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5582, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.275, i32 0, i32 0), i16* %value), !dbg !5584
  %tobool = icmp ne i32 %call, 0, !dbg !5584
  br i1 %tobool, label %if.end, label %if.then, !dbg !5585

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5586
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5586

if.end:                                           ; preds = %entry
  %2 = load i16, i16* %value, align 2, !dbg !5587, !tbaa !5572
  %conv = zext i16 %2 to i64, !dbg !5588
  %call1 = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv), !dbg !5589
  store %struct._object* %call1, %struct._object** %retval, !dbg !5590
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5590

cleanup:                                          ; preds = %if.end, %if.then
  %3 = bitcast i16* %value to i8*, !dbg !5591
  call void @llvm.lifetime.end(i64 2, i8* %3) #2, !dbg !5591
  %4 = load %struct._object*, %struct._object** %retval, !dbg !5591
  ret %struct._object* %4, !dbg !5591
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_I(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %value = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1117, metadata !1945), !dbg !5592
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1118, metadata !1945), !dbg !5593
  %0 = bitcast i32* %value to i8*, !dbg !5594
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !5594
  call void @llvm.dbg.declare(metadata i32* %value, metadata !1119, metadata !1945), !dbg !5595
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5596, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.276, i32 0, i32 0), i32* %value), !dbg !5598
  %tobool = icmp ne i32 %call, 0, !dbg !5598
  br i1 %tobool, label %if.end, label %if.then, !dbg !5599

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5600
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5600

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %value, align 4, !dbg !5601, !tbaa !1971
  %conv = zext i32 %2 to i64, !dbg !5602
  %call1 = call %struct._object* @PyLong_FromUnsignedLong(i64 %conv), !dbg !5603
  store %struct._object* %call1, %struct._object** %retval, !dbg !5604
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5604

cleanup:                                          ; preds = %if.end, %if.then
  %3 = bitcast i32* %value to i8*, !dbg !5605
  call void @llvm.lifetime.end(i64 4, i8* %3) #2, !dbg !5605
  %4 = load %struct._object*, %struct._object** %retval, !dbg !5605
  ret %struct._object* %4, !dbg !5605
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_k(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %value = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1122, metadata !1945), !dbg !5606
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1123, metadata !1945), !dbg !5607
  %0 = bitcast i64* %value to i8*, !dbg !5608
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5608
  call void @llvm.dbg.declare(metadata i64* %value, metadata !1124, metadata !1945), !dbg !5609
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5610, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.277, i32 0, i32 0), i64* %value), !dbg !5612
  %tobool = icmp ne i32 %call, 0, !dbg !5612
  br i1 %tobool, label %if.end, label %if.then, !dbg !5613

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5614
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5614

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %value, align 8, !dbg !5615, !tbaa !2587
  %call1 = call %struct._object* @PyLong_FromUnsignedLong(i64 %2), !dbg !5616
  store %struct._object* %call1, %struct._object** %retval, !dbg !5617
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5617

cleanup:                                          ; preds = %if.end, %if.then
  %3 = bitcast i64* %value to i8*, !dbg !5618
  call void @llvm.lifetime.end(i64 8, i8* %3) #2, !dbg !5618
  %4 = load %struct._object*, %struct._object** %retval, !dbg !5618
  ret %struct._object* %4, !dbg !5618
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_i(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %value = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1127, metadata !1945), !dbg !5619
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1128, metadata !1945), !dbg !5620
  %0 = bitcast i32* %value to i8*, !dbg !5621
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !5621
  call void @llvm.dbg.declare(metadata i32* %value, metadata !1129, metadata !1945), !dbg !5622
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5623, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.278, i32 0, i32 0), i32* %value), !dbg !5625
  %tobool = icmp ne i32 %call, 0, !dbg !5625
  br i1 %tobool, label %if.end, label %if.then, !dbg !5626

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5627
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5627

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %value, align 4, !dbg !5628, !tbaa !1971
  %conv = sext i32 %2 to i64, !dbg !5629
  %call1 = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !5630
  store %struct._object* %call1, %struct._object** %retval, !dbg !5631
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5631

cleanup:                                          ; preds = %if.end, %if.then
  %3 = bitcast i32* %value to i8*, !dbg !5632
  call void @llvm.lifetime.end(i64 4, i8* %3) #2, !dbg !5632
  %4 = load %struct._object*, %struct._object** %retval, !dbg !5632
  ret %struct._object* %4, !dbg !5632
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_l(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %value = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1132, metadata !1945), !dbg !5633
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1133, metadata !1945), !dbg !5634
  %0 = bitcast i64* %value to i8*, !dbg !5635
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5635
  call void @llvm.dbg.declare(metadata i64* %value, metadata !1134, metadata !1945), !dbg !5636
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5637, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.279, i32 0, i32 0), i64* %value), !dbg !5639
  %tobool = icmp ne i32 %call, 0, !dbg !5639
  br i1 %tobool, label %if.end, label %if.then, !dbg !5640

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5641
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5641

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %value, align 8, !dbg !5642, !tbaa !2587
  %call1 = call %struct._object* @PyLong_FromLong(i64 %2), !dbg !5643
  store %struct._object* %call1, %struct._object** %retval, !dbg !5644
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5644

cleanup:                                          ; preds = %if.end, %if.then
  %3 = bitcast i64* %value to i8*, !dbg !5645
  call void @llvm.lifetime.end(i64 8, i8* %3) #2, !dbg !5645
  %4 = load %struct._object*, %struct._object** %retval, !dbg !5645
  ret %struct._object* %4, !dbg !5645
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_n(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %value = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1137, metadata !1945), !dbg !5646
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1138, metadata !1945), !dbg !5647
  %0 = bitcast i64* %value to i8*, !dbg !5648
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5648
  call void @llvm.dbg.declare(metadata i64* %value, metadata !1139, metadata !1945), !dbg !5649
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5650, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.280, i32 0, i32 0), i64* %value), !dbg !5652
  %tobool = icmp ne i32 %call, 0, !dbg !5652
  br i1 %tobool, label %if.end, label %if.then, !dbg !5653

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5654
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5654

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %value, align 8, !dbg !5655, !tbaa !2587
  %call1 = call %struct._object* @PyLong_FromSsize_t(i64 %2), !dbg !5656
  store %struct._object* %call1, %struct._object** %retval, !dbg !5657
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5657

cleanup:                                          ; preds = %if.end, %if.then
  %3 = bitcast i64* %value to i8*, !dbg !5658
  call void @llvm.lifetime.end(i64 8, i8* %3) #2, !dbg !5658
  %4 = load %struct._object*, %struct._object** %retval, !dbg !5658
  ret %struct._object* %4, !dbg !5658
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_p(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %value = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1142, metadata !1945), !dbg !5659
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1143, metadata !1945), !dbg !5660
  %0 = bitcast i32* %value to i8*, !dbg !5661
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !5661
  call void @llvm.dbg.declare(metadata i32* %value, metadata !1144, metadata !1945), !dbg !5662
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5663, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.281, i32 0, i32 0), i32* %value), !dbg !5665
  %tobool = icmp ne i32 %call, 0, !dbg !5665
  br i1 %tobool, label %if.end, label %if.then, !dbg !5666

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5667
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5667

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %value, align 4, !dbg !5668, !tbaa !1971
  %conv = sext i32 %2 to i64, !dbg !5668
  %call1 = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !5669
  store %struct._object* %call1, %struct._object** %retval, !dbg !5670
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5670

cleanup:                                          ; preds = %if.end, %if.then
  %3 = bitcast i32* %value to i8*, !dbg !5671
  call void @llvm.lifetime.end(i64 4, i8* %3) #2, !dbg !5671
  %4 = load %struct._object*, %struct._object** %retval, !dbg !5671
  ret %struct._object* %4, !dbg !5671
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_L(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %value = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1147, metadata !1945), !dbg !5672
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1148, metadata !1945), !dbg !5673
  %0 = bitcast i64* %value to i8*, !dbg !5674
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5674
  call void @llvm.dbg.declare(metadata i64* %value, metadata !1149, metadata !1945), !dbg !5675
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5676, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.282, i32 0, i32 0), i64* %value), !dbg !5678
  %tobool = icmp ne i32 %call, 0, !dbg !5678
  br i1 %tobool, label %if.end, label %if.then, !dbg !5679

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5680
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5680

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %value, align 8, !dbg !5681, !tbaa !5682
  %call1 = call %struct._object* @PyLong_FromLongLong(i64 %2), !dbg !5684
  store %struct._object* %call1, %struct._object** %retval, !dbg !5685
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5685

cleanup:                                          ; preds = %if.end, %if.then
  %3 = bitcast i64* %value to i8*, !dbg !5686
  call void @llvm.lifetime.end(i64 8, i8* %3) #2, !dbg !5686
  %4 = load %struct._object*, %struct._object** %retval, !dbg !5686
  ret %struct._object* %4, !dbg !5686
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_K(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %value = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1152, metadata !1945), !dbg !5687
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1153, metadata !1945), !dbg !5688
  %0 = bitcast i64* %value to i8*, !dbg !5689
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5689
  call void @llvm.dbg.declare(metadata i64* %value, metadata !1154, metadata !1945), !dbg !5690
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !5691, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.283, i32 0, i32 0), i64* %value), !dbg !5693
  %tobool = icmp ne i32 %call, 0, !dbg !5693
  br i1 %tobool, label %if.end, label %if.then, !dbg !5694

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5695
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5695

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %value, align 8, !dbg !5696, !tbaa !5682
  %call1 = call %struct._object* @PyLong_FromUnsignedLongLong(i64 %2), !dbg !5697
  store %struct._object* %call1, %struct._object** %retval, !dbg !5698
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5698

cleanup:                                          ; preds = %if.end, %if.then
  %3 = bitcast i64* %value to i8*, !dbg !5699
  call void @llvm.lifetime.end(i64 8, i8* %3) #2, !dbg !5699
  %4 = load %struct._object*, %struct._object** %retval, !dbg !5699
  ret %struct._object* %4, !dbg !5699
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_longlong_api(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1157, metadata !1945), !dbg !5700
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1158, metadata !1945), !dbg !5701
  %call = call %struct._object* @test_longlong_api_inner(%struct._object* (i8*)* @raise_test_longlong_error), !dbg !5702
  ret %struct._object* %call, !dbg !5703
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_long_long_and_overflow(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %num = alloca %struct._object*, align 8
  %one = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %value = alloca i64, align 8
  %overflow = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp25 = alloca %struct._object*, align 8
  %_py_decref_tmp39 = alloca %struct._object*, align 8
  %_py_decref_tmp51 = alloca %struct._object*, align 8
  %_py_decref_tmp67 = alloca %struct._object*, align 8
  %_py_decref_tmp98 = alloca %struct._object*, align 8
  %_py_decref_tmp131 = alloca %struct._object*, align 8
  %_py_decref_tmp145 = alloca %struct._object*, align 8
  %_py_decref_tmp157 = alloca %struct._object*, align 8
  %_py_decref_tmp173 = alloca %struct._object*, align 8
  %_py_decref_tmp204 = alloca %struct._object*, align 8
  %_py_decref_tmp235 = alloca %struct._object*, align 8
  %_py_decref_tmp266 = alloca %struct._object*, align 8
  %_py_decref_tmp297 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1221, metadata !1945), !dbg !5704
  %0 = bitcast %struct._object** %num to i8*, !dbg !5705
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !5705
  call void @llvm.dbg.declare(metadata %struct._object** %num, metadata !1222, metadata !1945), !dbg !5706
  %1 = bitcast %struct._object** %one to i8*, !dbg !5705
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !5705
  call void @llvm.dbg.declare(metadata %struct._object** %one, metadata !1223, metadata !1945), !dbg !5707
  %2 = bitcast %struct._object** %temp to i8*, !dbg !5705
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !5705
  call void @llvm.dbg.declare(metadata %struct._object** %temp, metadata !1224, metadata !1945), !dbg !5708
  %3 = bitcast i64* %value to i8*, !dbg !5709
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !5709
  call void @llvm.dbg.declare(metadata i64* %value, metadata !1225, metadata !1945), !dbg !5710
  %4 = bitcast i32* %overflow to i8*, !dbg !5711
  call void @llvm.lifetime.start(i64 4, i8* %4) #2, !dbg !5711
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !1226, metadata !1945), !dbg !5712
  %call = call %struct._object* @PyLong_FromString(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.163, i32 0, i32 0), i8** null, i32 16), !dbg !5713
  store %struct._object* %call, %struct._object** %num, align 8, !dbg !5714, !tbaa !1941
  %5 = load %struct._object*, %struct._object** %num, align 8, !dbg !5715, !tbaa !1941
  %cmp = icmp eq %struct._object* %5, null, !dbg !5717
  br i1 %cmp, label %if.then, label %if.end, !dbg !5718

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !5719
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5719

if.end:                                           ; preds = %entry
  store i32 1234, i32* %overflow, align 4, !dbg !5720, !tbaa !1971
  %6 = load %struct._object*, %struct._object** %num, align 8, !dbg !5721, !tbaa !1941
  %call1 = call i64 @PyLong_AsLongLongAndOverflow(%struct._object* %6, i32* %overflow), !dbg !5722
  store i64 %call1, i64* %value, align 8, !dbg !5723, !tbaa !5682
  br label %do.body, !dbg !5724

do.body:                                          ; preds = %if.end
  %7 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5725
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !5725
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1227, metadata !1945), !dbg !5727
  %8 = load %struct._object*, %struct._object** %num, align 8, !dbg !5728, !tbaa !1941
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8, !dbg !5727, !tbaa !1941
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5729, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0, !dbg !5731
  %10 = load i64, i64* %ob_refcnt, align 8, !dbg !5732, !tbaa !1961
  %dec = add i64 %10, -1, !dbg !5732
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !5732, !tbaa !1961
  %cmp2 = icmp ne i64 %dec, 0, !dbg !5733
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !5734

if.then.3:                                        ; preds = %do.body
  br label %if.end.4, !dbg !5735

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5737, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1, !dbg !5739
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !5739, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4, !dbg !5740
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !5740, !tbaa !1997
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !5741, !tbaa !1941
  call void %13(%struct._object* %14), !dbg !5742
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  %15 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !5743
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !5743
  br label %do.cond, !dbg !5745

do.cond:                                          ; preds = %if.end.4
  br label %do.end, !dbg !5746

do.end:                                           ; preds = %do.cond
  %16 = load i64, i64* %value, align 8, !dbg !5748, !tbaa !5682
  %cmp5 = icmp eq i64 %16, -1, !dbg !5750
  br i1 %cmp5, label %land.lhs.true, label %if.end.8, !dbg !5751

land.lhs.true:                                    ; preds = %do.end
  %call6 = call %struct._object* @PyErr_Occurred(), !dbg !5752
  %tobool = icmp ne %struct._object* %call6, null, !dbg !5752
  br i1 %tobool, label %if.then.7, label %if.end.8, !dbg !5754

if.then.7:                                        ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval, !dbg !5755
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5755

if.end.8:                                         ; preds = %land.lhs.true, %do.end
  %17 = load i64, i64* %value, align 8, !dbg !5756, !tbaa !5682
  %cmp9 = icmp ne i64 %17, -1, !dbg !5758
  br i1 %cmp9, label %if.then.10, label %if.end.12, !dbg !5759

if.then.10:                                       ; preds = %if.end.8
  %call11 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.164, i32 0, i32 0)), !dbg !5760
  store %struct._object* %call11, %struct._object** %retval, !dbg !5761
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5761

if.end.12:                                        ; preds = %if.end.8
  %18 = load i32, i32* %overflow, align 4, !dbg !5762, !tbaa !1971
  %cmp13 = icmp ne i32 %18, 1, !dbg !5764
  br i1 %cmp13, label %if.then.14, label %if.end.16, !dbg !5765

if.then.14:                                       ; preds = %if.end.12
  %call15 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.165, i32 0, i32 0)), !dbg !5766
  store %struct._object* %call15, %struct._object** %retval, !dbg !5767
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5767

if.end.16:                                        ; preds = %if.end.12
  %call17 = call %struct._object* @PyLong_FromLongLong(i64 9223372036854775807), !dbg !5768
  store %struct._object* %call17, %struct._object** %num, align 8, !dbg !5769, !tbaa !1941
  %19 = load %struct._object*, %struct._object** %num, align 8, !dbg !5770, !tbaa !1941
  %cmp18 = icmp eq %struct._object* %19, null, !dbg !5772
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !5773

if.then.19:                                       ; preds = %if.end.16
  store %struct._object* null, %struct._object** %retval, !dbg !5774
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5774

if.end.20:                                        ; preds = %if.end.16
  %call21 = call %struct._object* @PyLong_FromLong(i64 1), !dbg !5775
  store %struct._object* %call21, %struct._object** %one, align 8, !dbg !5776, !tbaa !1941
  %20 = load %struct._object*, %struct._object** %one, align 8, !dbg !5777, !tbaa !1941
  %cmp22 = icmp eq %struct._object* %20, null, !dbg !5778
  br i1 %cmp22, label %if.then.23, label %if.end.36, !dbg !5779

if.then.23:                                       ; preds = %if.end.20
  br label %do.body.24, !dbg !5780

do.body.24:                                       ; preds = %if.then.23
  %21 = bitcast %struct._object** %_py_decref_tmp25 to i8*, !dbg !5781
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !5781
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp25, metadata !1229, metadata !1945), !dbg !5783
  %22 = load %struct._object*, %struct._object** %num, align 8, !dbg !5784, !tbaa !1941
  store %struct._object* %22, %struct._object** %_py_decref_tmp25, align 8, !dbg !5783, !tbaa !1941
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !5785, !tbaa !1941
  %ob_refcnt26 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !5787
  %24 = load i64, i64* %ob_refcnt26, align 8, !dbg !5788, !tbaa !1961
  %dec27 = add i64 %24, -1, !dbg !5788
  store i64 %dec27, i64* %ob_refcnt26, align 8, !dbg !5788, !tbaa !1961
  %cmp28 = icmp ne i64 %dec27, 0, !dbg !5789
  br i1 %cmp28, label %if.then.29, label %if.else.30, !dbg !5790

if.then.29:                                       ; preds = %do.body.24
  br label %if.end.33, !dbg !5791

if.else.30:                                       ; preds = %do.body.24
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !5793, !tbaa !1941
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !5795
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8, !dbg !5795, !tbaa !1995
  %tp_dealloc32 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !5796
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc32, align 8, !dbg !5796, !tbaa !1997
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp25, align 8, !dbg !5797, !tbaa !1941
  call void %27(%struct._object* %28), !dbg !5798
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.30, %if.then.29
  %29 = bitcast %struct._object** %_py_decref_tmp25 to i8*, !dbg !5799
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !5799
  br label %do.cond.34, !dbg !5801

do.cond.34:                                       ; preds = %if.end.33
  br label %do.end.35, !dbg !5802

do.end.35:                                        ; preds = %do.cond.34
  store %struct._object* null, %struct._object** %retval, !dbg !5804
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5804

if.end.36:                                        ; preds = %if.end.20
  %30 = load %struct._object*, %struct._object** %num, align 8, !dbg !5805, !tbaa !1941
  %31 = load %struct._object*, %struct._object** %one, align 8, !dbg !5806, !tbaa !1941
  %call37 = call %struct._object* @PyNumber_Add(%struct._object* %30, %struct._object* %31), !dbg !5807
  store %struct._object* %call37, %struct._object** %temp, align 8, !dbg !5808, !tbaa !1941
  br label %do.body.38, !dbg !5809

do.body.38:                                       ; preds = %if.end.36
  %32 = bitcast %struct._object** %_py_decref_tmp39 to i8*, !dbg !5810
  call void @llvm.lifetime.start(i64 8, i8* %32) #2, !dbg !5810
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp39, metadata !1233, metadata !1945), !dbg !5812
  %33 = load %struct._object*, %struct._object** %one, align 8, !dbg !5813, !tbaa !1941
  store %struct._object* %33, %struct._object** %_py_decref_tmp39, align 8, !dbg !5812, !tbaa !1941
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !5814, !tbaa !1941
  %ob_refcnt40 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 0, !dbg !5816
  %35 = load i64, i64* %ob_refcnt40, align 8, !dbg !5817, !tbaa !1961
  %dec41 = add i64 %35, -1, !dbg !5817
  store i64 %dec41, i64* %ob_refcnt40, align 8, !dbg !5817, !tbaa !1961
  %cmp42 = icmp ne i64 %dec41, 0, !dbg !5818
  br i1 %cmp42, label %if.then.43, label %if.else.44, !dbg !5819

if.then.43:                                       ; preds = %do.body.38
  br label %if.end.47, !dbg !5820

if.else.44:                                       ; preds = %do.body.38
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !5822, !tbaa !1941
  %ob_type45 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 1, !dbg !5824
  %37 = load %struct._typeobject*, %struct._typeobject** %ob_type45, align 8, !dbg !5824, !tbaa !1995
  %tp_dealloc46 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %37, i32 0, i32 4, !dbg !5825
  %38 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc46, align 8, !dbg !5825, !tbaa !1997
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp39, align 8, !dbg !5826, !tbaa !1941
  call void %38(%struct._object* %39), !dbg !5827
  br label %if.end.47

if.end.47:                                        ; preds = %if.else.44, %if.then.43
  %40 = bitcast %struct._object** %_py_decref_tmp39 to i8*, !dbg !5828
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !5828
  br label %do.cond.48, !dbg !5829

do.cond.48:                                       ; preds = %if.end.47
  br label %do.end.49, !dbg !5830

do.end.49:                                        ; preds = %do.cond.48
  br label %do.body.50, !dbg !5832

do.body.50:                                       ; preds = %do.end.49
  %41 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !5833
  call void @llvm.lifetime.start(i64 8, i8* %41) #2, !dbg !5833
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp51, metadata !1235, metadata !1945), !dbg !5835
  %42 = load %struct._object*, %struct._object** %num, align 8, !dbg !5836, !tbaa !1941
  store %struct._object* %42, %struct._object** %_py_decref_tmp51, align 8, !dbg !5835, !tbaa !1941
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !5837, !tbaa !1941
  %ob_refcnt52 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 0, !dbg !5839
  %44 = load i64, i64* %ob_refcnt52, align 8, !dbg !5840, !tbaa !1961
  %dec53 = add i64 %44, -1, !dbg !5840
  store i64 %dec53, i64* %ob_refcnt52, align 8, !dbg !5840, !tbaa !1961
  %cmp54 = icmp ne i64 %dec53, 0, !dbg !5841
  br i1 %cmp54, label %if.then.55, label %if.else.56, !dbg !5842

if.then.55:                                       ; preds = %do.body.50
  br label %if.end.59, !dbg !5843

if.else.56:                                       ; preds = %do.body.50
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !5845, !tbaa !1941
  %ob_type57 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !5847
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type57, align 8, !dbg !5847, !tbaa !1995
  %tp_dealloc58 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 4, !dbg !5848
  %47 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc58, align 8, !dbg !5848, !tbaa !1997
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp51, align 8, !dbg !5849, !tbaa !1941
  call void %47(%struct._object* %48), !dbg !5850
  br label %if.end.59

if.end.59:                                        ; preds = %if.else.56, %if.then.55
  %49 = bitcast %struct._object** %_py_decref_tmp51 to i8*, !dbg !5851
  call void @llvm.lifetime.end(i64 8, i8* %49) #2, !dbg !5851
  br label %do.cond.60, !dbg !5852

do.cond.60:                                       ; preds = %if.end.59
  br label %do.end.61, !dbg !5853

do.end.61:                                        ; preds = %do.cond.60
  %50 = load %struct._object*, %struct._object** %temp, align 8, !dbg !5855, !tbaa !1941
  store %struct._object* %50, %struct._object** %num, align 8, !dbg !5856, !tbaa !1941
  %51 = load %struct._object*, %struct._object** %num, align 8, !dbg !5857, !tbaa !1941
  %cmp62 = icmp eq %struct._object* %51, null, !dbg !5859
  br i1 %cmp62, label %if.then.63, label %if.end.64, !dbg !5860

if.then.63:                                       ; preds = %do.end.61
  store %struct._object* null, %struct._object** %retval, !dbg !5861
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5861

if.end.64:                                        ; preds = %do.end.61
  store i32 0, i32* %overflow, align 4, !dbg !5862, !tbaa !1971
  %52 = load %struct._object*, %struct._object** %num, align 8, !dbg !5863, !tbaa !1941
  %call65 = call i64 @PyLong_AsLongLongAndOverflow(%struct._object* %52, i32* %overflow), !dbg !5864
  store i64 %call65, i64* %value, align 8, !dbg !5865, !tbaa !5682
  br label %do.body.66, !dbg !5866

do.body.66:                                       ; preds = %if.end.64
  %53 = bitcast %struct._object** %_py_decref_tmp67 to i8*, !dbg !5867
  call void @llvm.lifetime.start(i64 8, i8* %53) #2, !dbg !5867
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp67, metadata !1237, metadata !1945), !dbg !5869
  %54 = load %struct._object*, %struct._object** %num, align 8, !dbg !5870, !tbaa !1941
  store %struct._object* %54, %struct._object** %_py_decref_tmp67, align 8, !dbg !5869, !tbaa !1941
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8, !dbg !5871, !tbaa !1941
  %ob_refcnt68 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 0, !dbg !5873
  %56 = load i64, i64* %ob_refcnt68, align 8, !dbg !5874, !tbaa !1961
  %dec69 = add i64 %56, -1, !dbg !5874
  store i64 %dec69, i64* %ob_refcnt68, align 8, !dbg !5874, !tbaa !1961
  %cmp70 = icmp ne i64 %dec69, 0, !dbg !5875
  br i1 %cmp70, label %if.then.71, label %if.else.72, !dbg !5876

if.then.71:                                       ; preds = %do.body.66
  br label %if.end.75, !dbg !5877

if.else.72:                                       ; preds = %do.body.66
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8, !dbg !5879, !tbaa !1941
  %ob_type73 = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 1, !dbg !5881
  %58 = load %struct._typeobject*, %struct._typeobject** %ob_type73, align 8, !dbg !5881, !tbaa !1995
  %tp_dealloc74 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %58, i32 0, i32 4, !dbg !5882
  %59 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc74, align 8, !dbg !5882, !tbaa !1997
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8, !dbg !5883, !tbaa !1941
  call void %59(%struct._object* %60), !dbg !5884
  br label %if.end.75

if.end.75:                                        ; preds = %if.else.72, %if.then.71
  %61 = bitcast %struct._object** %_py_decref_tmp67 to i8*, !dbg !5885
  call void @llvm.lifetime.end(i64 8, i8* %61) #2, !dbg !5885
  br label %do.cond.76, !dbg !5886

do.cond.76:                                       ; preds = %if.end.75
  br label %do.end.77, !dbg !5887

do.end.77:                                        ; preds = %do.cond.76
  %62 = load i64, i64* %value, align 8, !dbg !5889, !tbaa !5682
  %cmp78 = icmp eq i64 %62, -1, !dbg !5891
  br i1 %cmp78, label %land.lhs.true.79, label %if.end.83, !dbg !5892

land.lhs.true.79:                                 ; preds = %do.end.77
  %call80 = call %struct._object* @PyErr_Occurred(), !dbg !5893
  %tobool81 = icmp ne %struct._object* %call80, null, !dbg !5893
  br i1 %tobool81, label %if.then.82, label %if.end.83, !dbg !5895

if.then.82:                                       ; preds = %land.lhs.true.79
  store %struct._object* null, %struct._object** %retval, !dbg !5896
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5896

if.end.83:                                        ; preds = %land.lhs.true.79, %do.end.77
  %63 = load i64, i64* %value, align 8, !dbg !5897, !tbaa !5682
  %cmp84 = icmp ne i64 %63, -1, !dbg !5899
  br i1 %cmp84, label %if.then.85, label %if.end.87, !dbg !5900

if.then.85:                                       ; preds = %if.end.83
  %call86 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.164, i32 0, i32 0)), !dbg !5901
  store %struct._object* %call86, %struct._object** %retval, !dbg !5902
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5902

if.end.87:                                        ; preds = %if.end.83
  %64 = load i32, i32* %overflow, align 4, !dbg !5903, !tbaa !1971
  %cmp88 = icmp ne i32 %64, 1, !dbg !5905
  br i1 %cmp88, label %if.then.89, label %if.end.91, !dbg !5906

if.then.89:                                       ; preds = %if.end.87
  %call90 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.165, i32 0, i32 0)), !dbg !5907
  store %struct._object* %call90, %struct._object** %retval, !dbg !5908
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5908

if.end.91:                                        ; preds = %if.end.87
  %call92 = call %struct._object* @PyLong_FromString(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.166, i32 0, i32 0), i8** null, i32 16), !dbg !5909
  store %struct._object* %call92, %struct._object** %num, align 8, !dbg !5910, !tbaa !1941
  %65 = load %struct._object*, %struct._object** %num, align 8, !dbg !5911, !tbaa !1941
  %cmp93 = icmp eq %struct._object* %65, null, !dbg !5913
  br i1 %cmp93, label %if.then.94, label %if.end.95, !dbg !5914

if.then.94:                                       ; preds = %if.end.91
  store %struct._object* null, %struct._object** %retval, !dbg !5915
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5915

if.end.95:                                        ; preds = %if.end.91
  store i32 1234, i32* %overflow, align 4, !dbg !5916, !tbaa !1971
  %66 = load %struct._object*, %struct._object** %num, align 8, !dbg !5917, !tbaa !1941
  %call96 = call i64 @PyLong_AsLongLongAndOverflow(%struct._object* %66, i32* %overflow), !dbg !5918
  store i64 %call96, i64* %value, align 8, !dbg !5919, !tbaa !5682
  br label %do.body.97, !dbg !5920

do.body.97:                                       ; preds = %if.end.95
  %67 = bitcast %struct._object** %_py_decref_tmp98 to i8*, !dbg !5921
  call void @llvm.lifetime.start(i64 8, i8* %67) #2, !dbg !5921
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp98, metadata !1239, metadata !1945), !dbg !5923
  %68 = load %struct._object*, %struct._object** %num, align 8, !dbg !5924, !tbaa !1941
  store %struct._object* %68, %struct._object** %_py_decref_tmp98, align 8, !dbg !5923, !tbaa !1941
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8, !dbg !5925, !tbaa !1941
  %ob_refcnt99 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0, !dbg !5927
  %70 = load i64, i64* %ob_refcnt99, align 8, !dbg !5928, !tbaa !1961
  %dec100 = add i64 %70, -1, !dbg !5928
  store i64 %dec100, i64* %ob_refcnt99, align 8, !dbg !5928, !tbaa !1961
  %cmp101 = icmp ne i64 %dec100, 0, !dbg !5929
  br i1 %cmp101, label %if.then.102, label %if.else.103, !dbg !5930

if.then.102:                                      ; preds = %do.body.97
  br label %if.end.106, !dbg !5931

if.else.103:                                      ; preds = %do.body.97
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8, !dbg !5933, !tbaa !1941
  %ob_type104 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1, !dbg !5935
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type104, align 8, !dbg !5935, !tbaa !1995
  %tp_dealloc105 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4, !dbg !5936
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc105, align 8, !dbg !5936, !tbaa !1997
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8, !dbg !5937, !tbaa !1941
  call void %73(%struct._object* %74), !dbg !5938
  br label %if.end.106

if.end.106:                                       ; preds = %if.else.103, %if.then.102
  %75 = bitcast %struct._object** %_py_decref_tmp98 to i8*, !dbg !5939
  call void @llvm.lifetime.end(i64 8, i8* %75) #2, !dbg !5939
  br label %do.cond.107, !dbg !5940

do.cond.107:                                      ; preds = %if.end.106
  br label %do.end.108, !dbg !5941

do.end.108:                                       ; preds = %do.cond.107
  %76 = load i64, i64* %value, align 8, !dbg !5943, !tbaa !5682
  %cmp109 = icmp eq i64 %76, -1, !dbg !5945
  br i1 %cmp109, label %land.lhs.true.110, label %if.end.114, !dbg !5946

land.lhs.true.110:                                ; preds = %do.end.108
  %call111 = call %struct._object* @PyErr_Occurred(), !dbg !5947
  %tobool112 = icmp ne %struct._object* %call111, null, !dbg !5947
  br i1 %tobool112, label %if.then.113, label %if.end.114, !dbg !5949

if.then.113:                                      ; preds = %land.lhs.true.110
  store %struct._object* null, %struct._object** %retval, !dbg !5950
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5950

if.end.114:                                       ; preds = %land.lhs.true.110, %do.end.108
  %77 = load i64, i64* %value, align 8, !dbg !5951, !tbaa !5682
  %cmp115 = icmp ne i64 %77, -1, !dbg !5953
  br i1 %cmp115, label %if.then.116, label %if.end.118, !dbg !5954

if.then.116:                                      ; preds = %if.end.114
  %call117 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.164, i32 0, i32 0)), !dbg !5955
  store %struct._object* %call117, %struct._object** %retval, !dbg !5956
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5956

if.end.118:                                       ; preds = %if.end.114
  %78 = load i32, i32* %overflow, align 4, !dbg !5957, !tbaa !1971
  %cmp119 = icmp ne i32 %78, -1, !dbg !5959
  br i1 %cmp119, label %if.then.120, label %if.end.122, !dbg !5960

if.then.120:                                      ; preds = %if.end.118
  %call121 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.167, i32 0, i32 0)), !dbg !5961
  store %struct._object* %call121, %struct._object** %retval, !dbg !5962
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5962

if.end.122:                                       ; preds = %if.end.118
  %call123 = call %struct._object* @PyLong_FromLongLong(i64 -9223372036854775808), !dbg !5963
  store %struct._object* %call123, %struct._object** %num, align 8, !dbg !5964, !tbaa !1941
  %79 = load %struct._object*, %struct._object** %num, align 8, !dbg !5965, !tbaa !1941
  %cmp124 = icmp eq %struct._object* %79, null, !dbg !5967
  br i1 %cmp124, label %if.then.125, label %if.end.126, !dbg !5968

if.then.125:                                      ; preds = %if.end.122
  store %struct._object* null, %struct._object** %retval, !dbg !5969
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5969

if.end.126:                                       ; preds = %if.end.122
  %call127 = call %struct._object* @PyLong_FromLong(i64 1), !dbg !5970
  store %struct._object* %call127, %struct._object** %one, align 8, !dbg !5971, !tbaa !1941
  %80 = load %struct._object*, %struct._object** %one, align 8, !dbg !5972, !tbaa !1941
  %cmp128 = icmp eq %struct._object* %80, null, !dbg !5973
  br i1 %cmp128, label %if.then.129, label %if.end.142, !dbg !5974

if.then.129:                                      ; preds = %if.end.126
  br label %do.body.130, !dbg !5975

do.body.130:                                      ; preds = %if.then.129
  %81 = bitcast %struct._object** %_py_decref_tmp131 to i8*, !dbg !5976
  call void @llvm.lifetime.start(i64 8, i8* %81) #2, !dbg !5976
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp131, metadata !1241, metadata !1945), !dbg !5978
  %82 = load %struct._object*, %struct._object** %num, align 8, !dbg !5979, !tbaa !1941
  store %struct._object* %82, %struct._object** %_py_decref_tmp131, align 8, !dbg !5978, !tbaa !1941
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp131, align 8, !dbg !5980, !tbaa !1941
  %ob_refcnt132 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 0, !dbg !5982
  %84 = load i64, i64* %ob_refcnt132, align 8, !dbg !5983, !tbaa !1961
  %dec133 = add i64 %84, -1, !dbg !5983
  store i64 %dec133, i64* %ob_refcnt132, align 8, !dbg !5983, !tbaa !1961
  %cmp134 = icmp ne i64 %dec133, 0, !dbg !5984
  br i1 %cmp134, label %if.then.135, label %if.else.136, !dbg !5985

if.then.135:                                      ; preds = %do.body.130
  br label %if.end.139, !dbg !5986

if.else.136:                                      ; preds = %do.body.130
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp131, align 8, !dbg !5988, !tbaa !1941
  %ob_type137 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 1, !dbg !5990
  %86 = load %struct._typeobject*, %struct._typeobject** %ob_type137, align 8, !dbg !5990, !tbaa !1995
  %tp_dealloc138 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %86, i32 0, i32 4, !dbg !5991
  %87 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc138, align 8, !dbg !5991, !tbaa !1997
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp131, align 8, !dbg !5992, !tbaa !1941
  call void %87(%struct._object* %88), !dbg !5993
  br label %if.end.139

if.end.139:                                       ; preds = %if.else.136, %if.then.135
  %89 = bitcast %struct._object** %_py_decref_tmp131 to i8*, !dbg !5994
  call void @llvm.lifetime.end(i64 8, i8* %89) #2, !dbg !5994
  br label %do.cond.140, !dbg !5996

do.cond.140:                                      ; preds = %if.end.139
  br label %do.end.141, !dbg !5997

do.end.141:                                       ; preds = %do.cond.140
  store %struct._object* null, %struct._object** %retval, !dbg !5999
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !5999

if.end.142:                                       ; preds = %if.end.126
  %90 = load %struct._object*, %struct._object** %num, align 8, !dbg !6000, !tbaa !1941
  %91 = load %struct._object*, %struct._object** %one, align 8, !dbg !6001, !tbaa !1941
  %call143 = call %struct._object* @PyNumber_Subtract(%struct._object* %90, %struct._object* %91), !dbg !6002
  store %struct._object* %call143, %struct._object** %temp, align 8, !dbg !6003, !tbaa !1941
  br label %do.body.144, !dbg !6004

do.body.144:                                      ; preds = %if.end.142
  %92 = bitcast %struct._object** %_py_decref_tmp145 to i8*, !dbg !6005
  call void @llvm.lifetime.start(i64 8, i8* %92) #2, !dbg !6005
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp145, metadata !1245, metadata !1945), !dbg !6007
  %93 = load %struct._object*, %struct._object** %one, align 8, !dbg !6008, !tbaa !1941
  store %struct._object* %93, %struct._object** %_py_decref_tmp145, align 8, !dbg !6007, !tbaa !1941
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp145, align 8, !dbg !6009, !tbaa !1941
  %ob_refcnt146 = getelementptr inbounds %struct._object, %struct._object* %94, i32 0, i32 0, !dbg !6011
  %95 = load i64, i64* %ob_refcnt146, align 8, !dbg !6012, !tbaa !1961
  %dec147 = add i64 %95, -1, !dbg !6012
  store i64 %dec147, i64* %ob_refcnt146, align 8, !dbg !6012, !tbaa !1961
  %cmp148 = icmp ne i64 %dec147, 0, !dbg !6013
  br i1 %cmp148, label %if.then.149, label %if.else.150, !dbg !6014

if.then.149:                                      ; preds = %do.body.144
  br label %if.end.153, !dbg !6015

if.else.150:                                      ; preds = %do.body.144
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp145, align 8, !dbg !6017, !tbaa !1941
  %ob_type151 = getelementptr inbounds %struct._object, %struct._object* %96, i32 0, i32 1, !dbg !6019
  %97 = load %struct._typeobject*, %struct._typeobject** %ob_type151, align 8, !dbg !6019, !tbaa !1995
  %tp_dealloc152 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %97, i32 0, i32 4, !dbg !6020
  %98 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc152, align 8, !dbg !6020, !tbaa !1997
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp145, align 8, !dbg !6021, !tbaa !1941
  call void %98(%struct._object* %99), !dbg !6022
  br label %if.end.153

if.end.153:                                       ; preds = %if.else.150, %if.then.149
  %100 = bitcast %struct._object** %_py_decref_tmp145 to i8*, !dbg !6023
  call void @llvm.lifetime.end(i64 8, i8* %100) #2, !dbg !6023
  br label %do.cond.154, !dbg !6024

do.cond.154:                                      ; preds = %if.end.153
  br label %do.end.155, !dbg !6025

do.end.155:                                       ; preds = %do.cond.154
  br label %do.body.156, !dbg !6027

do.body.156:                                      ; preds = %do.end.155
  %101 = bitcast %struct._object** %_py_decref_tmp157 to i8*, !dbg !6028
  call void @llvm.lifetime.start(i64 8, i8* %101) #2, !dbg !6028
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp157, metadata !1247, metadata !1945), !dbg !6030
  %102 = load %struct._object*, %struct._object** %num, align 8, !dbg !6031, !tbaa !1941
  store %struct._object* %102, %struct._object** %_py_decref_tmp157, align 8, !dbg !6030, !tbaa !1941
  %103 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8, !dbg !6032, !tbaa !1941
  %ob_refcnt158 = getelementptr inbounds %struct._object, %struct._object* %103, i32 0, i32 0, !dbg !6034
  %104 = load i64, i64* %ob_refcnt158, align 8, !dbg !6035, !tbaa !1961
  %dec159 = add i64 %104, -1, !dbg !6035
  store i64 %dec159, i64* %ob_refcnt158, align 8, !dbg !6035, !tbaa !1961
  %cmp160 = icmp ne i64 %dec159, 0, !dbg !6036
  br i1 %cmp160, label %if.then.161, label %if.else.162, !dbg !6037

if.then.161:                                      ; preds = %do.body.156
  br label %if.end.165, !dbg !6038

if.else.162:                                      ; preds = %do.body.156
  %105 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8, !dbg !6040, !tbaa !1941
  %ob_type163 = getelementptr inbounds %struct._object, %struct._object* %105, i32 0, i32 1, !dbg !6042
  %106 = load %struct._typeobject*, %struct._typeobject** %ob_type163, align 8, !dbg !6042, !tbaa !1995
  %tp_dealloc164 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %106, i32 0, i32 4, !dbg !6043
  %107 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc164, align 8, !dbg !6043, !tbaa !1997
  %108 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8, !dbg !6044, !tbaa !1941
  call void %107(%struct._object* %108), !dbg !6045
  br label %if.end.165

if.end.165:                                       ; preds = %if.else.162, %if.then.161
  %109 = bitcast %struct._object** %_py_decref_tmp157 to i8*, !dbg !6046
  call void @llvm.lifetime.end(i64 8, i8* %109) #2, !dbg !6046
  br label %do.cond.166, !dbg !6047

do.cond.166:                                      ; preds = %if.end.165
  br label %do.end.167, !dbg !6048

do.end.167:                                       ; preds = %do.cond.166
  %110 = load %struct._object*, %struct._object** %temp, align 8, !dbg !6050, !tbaa !1941
  store %struct._object* %110, %struct._object** %num, align 8, !dbg !6051, !tbaa !1941
  %111 = load %struct._object*, %struct._object** %num, align 8, !dbg !6052, !tbaa !1941
  %cmp168 = icmp eq %struct._object* %111, null, !dbg !6054
  br i1 %cmp168, label %if.then.169, label %if.end.170, !dbg !6055

if.then.169:                                      ; preds = %do.end.167
  store %struct._object* null, %struct._object** %retval, !dbg !6056
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6056

if.end.170:                                       ; preds = %do.end.167
  store i32 0, i32* %overflow, align 4, !dbg !6057, !tbaa !1971
  %112 = load %struct._object*, %struct._object** %num, align 8, !dbg !6058, !tbaa !1941
  %call171 = call i64 @PyLong_AsLongLongAndOverflow(%struct._object* %112, i32* %overflow), !dbg !6059
  store i64 %call171, i64* %value, align 8, !dbg !6060, !tbaa !5682
  br label %do.body.172, !dbg !6061

do.body.172:                                      ; preds = %if.end.170
  %113 = bitcast %struct._object** %_py_decref_tmp173 to i8*, !dbg !6062
  call void @llvm.lifetime.start(i64 8, i8* %113) #2, !dbg !6062
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp173, metadata !1249, metadata !1945), !dbg !6064
  %114 = load %struct._object*, %struct._object** %num, align 8, !dbg !6065, !tbaa !1941
  store %struct._object* %114, %struct._object** %_py_decref_tmp173, align 8, !dbg !6064, !tbaa !1941
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp173, align 8, !dbg !6066, !tbaa !1941
  %ob_refcnt174 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 0, !dbg !6068
  %116 = load i64, i64* %ob_refcnt174, align 8, !dbg !6069, !tbaa !1961
  %dec175 = add i64 %116, -1, !dbg !6069
  store i64 %dec175, i64* %ob_refcnt174, align 8, !dbg !6069, !tbaa !1961
  %cmp176 = icmp ne i64 %dec175, 0, !dbg !6070
  br i1 %cmp176, label %if.then.177, label %if.else.178, !dbg !6071

if.then.177:                                      ; preds = %do.body.172
  br label %if.end.181, !dbg !6072

if.else.178:                                      ; preds = %do.body.172
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp173, align 8, !dbg !6074, !tbaa !1941
  %ob_type179 = getelementptr inbounds %struct._object, %struct._object* %117, i32 0, i32 1, !dbg !6076
  %118 = load %struct._typeobject*, %struct._typeobject** %ob_type179, align 8, !dbg !6076, !tbaa !1995
  %tp_dealloc180 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %118, i32 0, i32 4, !dbg !6077
  %119 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc180, align 8, !dbg !6077, !tbaa !1997
  %120 = load %struct._object*, %struct._object** %_py_decref_tmp173, align 8, !dbg !6078, !tbaa !1941
  call void %119(%struct._object* %120), !dbg !6079
  br label %if.end.181

if.end.181:                                       ; preds = %if.else.178, %if.then.177
  %121 = bitcast %struct._object** %_py_decref_tmp173 to i8*, !dbg !6080
  call void @llvm.lifetime.end(i64 8, i8* %121) #2, !dbg !6080
  br label %do.cond.182, !dbg !6081

do.cond.182:                                      ; preds = %if.end.181
  br label %do.end.183, !dbg !6082

do.end.183:                                       ; preds = %do.cond.182
  %122 = load i64, i64* %value, align 8, !dbg !6084, !tbaa !5682
  %cmp184 = icmp eq i64 %122, -1, !dbg !6086
  br i1 %cmp184, label %land.lhs.true.185, label %if.end.189, !dbg !6087

land.lhs.true.185:                                ; preds = %do.end.183
  %call186 = call %struct._object* @PyErr_Occurred(), !dbg !6088
  %tobool187 = icmp ne %struct._object* %call186, null, !dbg !6088
  br i1 %tobool187, label %if.then.188, label %if.end.189, !dbg !6090

if.then.188:                                      ; preds = %land.lhs.true.185
  store %struct._object* null, %struct._object** %retval, !dbg !6091
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6091

if.end.189:                                       ; preds = %land.lhs.true.185, %do.end.183
  %123 = load i64, i64* %value, align 8, !dbg !6092, !tbaa !5682
  %cmp190 = icmp ne i64 %123, -1, !dbg !6094
  br i1 %cmp190, label %if.then.191, label %if.end.193, !dbg !6095

if.then.191:                                      ; preds = %if.end.189
  %call192 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.164, i32 0, i32 0)), !dbg !6096
  store %struct._object* %call192, %struct._object** %retval, !dbg !6097
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6097

if.end.193:                                       ; preds = %if.end.189
  %124 = load i32, i32* %overflow, align 4, !dbg !6098, !tbaa !1971
  %cmp194 = icmp ne i32 %124, -1, !dbg !6100
  br i1 %cmp194, label %if.then.195, label %if.end.197, !dbg !6101

if.then.195:                                      ; preds = %if.end.193
  %call196 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.167, i32 0, i32 0)), !dbg !6102
  store %struct._object* %call196, %struct._object** %retval, !dbg !6103
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6103

if.end.197:                                       ; preds = %if.end.193
  %call198 = call %struct._object* @PyLong_FromString(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.168, i32 0, i32 0), i8** null, i32 16), !dbg !6104
  store %struct._object* %call198, %struct._object** %num, align 8, !dbg !6105, !tbaa !1941
  %125 = load %struct._object*, %struct._object** %num, align 8, !dbg !6106, !tbaa !1941
  %cmp199 = icmp eq %struct._object* %125, null, !dbg !6108
  br i1 %cmp199, label %if.then.200, label %if.end.201, !dbg !6109

if.then.200:                                      ; preds = %if.end.197
  store %struct._object* null, %struct._object** %retval, !dbg !6110
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6110

if.end.201:                                       ; preds = %if.end.197
  store i32 1234, i32* %overflow, align 4, !dbg !6111, !tbaa !1971
  %126 = load %struct._object*, %struct._object** %num, align 8, !dbg !6112, !tbaa !1941
  %call202 = call i64 @PyLong_AsLongLongAndOverflow(%struct._object* %126, i32* %overflow), !dbg !6113
  store i64 %call202, i64* %value, align 8, !dbg !6114, !tbaa !5682
  br label %do.body.203, !dbg !6115

do.body.203:                                      ; preds = %if.end.201
  %127 = bitcast %struct._object** %_py_decref_tmp204 to i8*, !dbg !6116
  call void @llvm.lifetime.start(i64 8, i8* %127) #2, !dbg !6116
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp204, metadata !1251, metadata !1945), !dbg !6118
  %128 = load %struct._object*, %struct._object** %num, align 8, !dbg !6119, !tbaa !1941
  store %struct._object* %128, %struct._object** %_py_decref_tmp204, align 8, !dbg !6118, !tbaa !1941
  %129 = load %struct._object*, %struct._object** %_py_decref_tmp204, align 8, !dbg !6120, !tbaa !1941
  %ob_refcnt205 = getelementptr inbounds %struct._object, %struct._object* %129, i32 0, i32 0, !dbg !6122
  %130 = load i64, i64* %ob_refcnt205, align 8, !dbg !6123, !tbaa !1961
  %dec206 = add i64 %130, -1, !dbg !6123
  store i64 %dec206, i64* %ob_refcnt205, align 8, !dbg !6123, !tbaa !1961
  %cmp207 = icmp ne i64 %dec206, 0, !dbg !6124
  br i1 %cmp207, label %if.then.208, label %if.else.209, !dbg !6125

if.then.208:                                      ; preds = %do.body.203
  br label %if.end.212, !dbg !6126

if.else.209:                                      ; preds = %do.body.203
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp204, align 8, !dbg !6128, !tbaa !1941
  %ob_type210 = getelementptr inbounds %struct._object, %struct._object* %131, i32 0, i32 1, !dbg !6130
  %132 = load %struct._typeobject*, %struct._typeobject** %ob_type210, align 8, !dbg !6130, !tbaa !1995
  %tp_dealloc211 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %132, i32 0, i32 4, !dbg !6131
  %133 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc211, align 8, !dbg !6131, !tbaa !1997
  %134 = load %struct._object*, %struct._object** %_py_decref_tmp204, align 8, !dbg !6132, !tbaa !1941
  call void %133(%struct._object* %134), !dbg !6133
  br label %if.end.212

if.end.212:                                       ; preds = %if.else.209, %if.then.208
  %135 = bitcast %struct._object** %_py_decref_tmp204 to i8*, !dbg !6134
  call void @llvm.lifetime.end(i64 8, i8* %135) #2, !dbg !6134
  br label %do.cond.213, !dbg !6135

do.cond.213:                                      ; preds = %if.end.212
  br label %do.end.214, !dbg !6136

do.end.214:                                       ; preds = %do.cond.213
  %136 = load i64, i64* %value, align 8, !dbg !6138, !tbaa !5682
  %cmp215 = icmp eq i64 %136, -1, !dbg !6140
  br i1 %cmp215, label %land.lhs.true.216, label %if.end.220, !dbg !6141

land.lhs.true.216:                                ; preds = %do.end.214
  %call217 = call %struct._object* @PyErr_Occurred(), !dbg !6142
  %tobool218 = icmp ne %struct._object* %call217, null, !dbg !6142
  br i1 %tobool218, label %if.then.219, label %if.end.220, !dbg !6144

if.then.219:                                      ; preds = %land.lhs.true.216
  store %struct._object* null, %struct._object** %retval, !dbg !6145
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6145

if.end.220:                                       ; preds = %land.lhs.true.216, %do.end.214
  %137 = load i64, i64* %value, align 8, !dbg !6146, !tbaa !5682
  %cmp221 = icmp ne i64 %137, 255, !dbg !6148
  br i1 %cmp221, label %if.then.222, label %if.end.224, !dbg !6149

if.then.222:                                      ; preds = %if.end.220
  %call223 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.169, i32 0, i32 0)), !dbg !6150
  store %struct._object* %call223, %struct._object** %retval, !dbg !6151
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6151

if.end.224:                                       ; preds = %if.end.220
  %138 = load i32, i32* %overflow, align 4, !dbg !6152, !tbaa !1971
  %cmp225 = icmp ne i32 %138, 0, !dbg !6154
  br i1 %cmp225, label %if.then.226, label %if.end.228, !dbg !6155

if.then.226:                                      ; preds = %if.end.224
  %call227 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.170, i32 0, i32 0)), !dbg !6156
  store %struct._object* %call227, %struct._object** %retval, !dbg !6157
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6157

if.end.228:                                       ; preds = %if.end.224
  %call229 = call %struct._object* @PyLong_FromString(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), i8** null, i32 16), !dbg !6158
  store %struct._object* %call229, %struct._object** %num, align 8, !dbg !6159, !tbaa !1941
  %139 = load %struct._object*, %struct._object** %num, align 8, !dbg !6160, !tbaa !1941
  %cmp230 = icmp eq %struct._object* %139, null, !dbg !6162
  br i1 %cmp230, label %if.then.231, label %if.end.232, !dbg !6163

if.then.231:                                      ; preds = %if.end.228
  store %struct._object* null, %struct._object** %retval, !dbg !6164
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6164

if.end.232:                                       ; preds = %if.end.228
  store i32 0, i32* %overflow, align 4, !dbg !6165, !tbaa !1971
  %140 = load %struct._object*, %struct._object** %num, align 8, !dbg !6166, !tbaa !1941
  %call233 = call i64 @PyLong_AsLongLongAndOverflow(%struct._object* %140, i32* %overflow), !dbg !6167
  store i64 %call233, i64* %value, align 8, !dbg !6168, !tbaa !5682
  br label %do.body.234, !dbg !6169

do.body.234:                                      ; preds = %if.end.232
  %141 = bitcast %struct._object** %_py_decref_tmp235 to i8*, !dbg !6170
  call void @llvm.lifetime.start(i64 8, i8* %141) #2, !dbg !6170
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp235, metadata !1253, metadata !1945), !dbg !6172
  %142 = load %struct._object*, %struct._object** %num, align 8, !dbg !6173, !tbaa !1941
  store %struct._object* %142, %struct._object** %_py_decref_tmp235, align 8, !dbg !6172, !tbaa !1941
  %143 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8, !dbg !6174, !tbaa !1941
  %ob_refcnt236 = getelementptr inbounds %struct._object, %struct._object* %143, i32 0, i32 0, !dbg !6176
  %144 = load i64, i64* %ob_refcnt236, align 8, !dbg !6177, !tbaa !1961
  %dec237 = add i64 %144, -1, !dbg !6177
  store i64 %dec237, i64* %ob_refcnt236, align 8, !dbg !6177, !tbaa !1961
  %cmp238 = icmp ne i64 %dec237, 0, !dbg !6178
  br i1 %cmp238, label %if.then.239, label %if.else.240, !dbg !6179

if.then.239:                                      ; preds = %do.body.234
  br label %if.end.243, !dbg !6180

if.else.240:                                      ; preds = %do.body.234
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8, !dbg !6182, !tbaa !1941
  %ob_type241 = getelementptr inbounds %struct._object, %struct._object* %145, i32 0, i32 1, !dbg !6184
  %146 = load %struct._typeobject*, %struct._typeobject** %ob_type241, align 8, !dbg !6184, !tbaa !1995
  %tp_dealloc242 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %146, i32 0, i32 4, !dbg !6185
  %147 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc242, align 8, !dbg !6185, !tbaa !1997
  %148 = load %struct._object*, %struct._object** %_py_decref_tmp235, align 8, !dbg !6186, !tbaa !1941
  call void %147(%struct._object* %148), !dbg !6187
  br label %if.end.243

if.end.243:                                       ; preds = %if.else.240, %if.then.239
  %149 = bitcast %struct._object** %_py_decref_tmp235 to i8*, !dbg !6188
  call void @llvm.lifetime.end(i64 8, i8* %149) #2, !dbg !6188
  br label %do.cond.244, !dbg !6189

do.cond.244:                                      ; preds = %if.end.243
  br label %do.end.245, !dbg !6190

do.end.245:                                       ; preds = %do.cond.244
  %150 = load i64, i64* %value, align 8, !dbg !6192, !tbaa !5682
  %cmp246 = icmp eq i64 %150, -1, !dbg !6194
  br i1 %cmp246, label %land.lhs.true.247, label %if.end.251, !dbg !6195

land.lhs.true.247:                                ; preds = %do.end.245
  %call248 = call %struct._object* @PyErr_Occurred(), !dbg !6196
  %tobool249 = icmp ne %struct._object* %call248, null, !dbg !6196
  br i1 %tobool249, label %if.then.250, label %if.end.251, !dbg !6198

if.then.250:                                      ; preds = %land.lhs.true.247
  store %struct._object* null, %struct._object** %retval, !dbg !6199
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6199

if.end.251:                                       ; preds = %land.lhs.true.247, %do.end.245
  %151 = load i64, i64* %value, align 8, !dbg !6200, !tbaa !5682
  %cmp252 = icmp ne i64 %151, -255, !dbg !6202
  br i1 %cmp252, label %if.then.253, label %if.end.255, !dbg !6203

if.then.253:                                      ; preds = %if.end.251
  %call254 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.169, i32 0, i32 0)), !dbg !6204
  store %struct._object* %call254, %struct._object** %retval, !dbg !6205
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6205

if.end.255:                                       ; preds = %if.end.251
  %152 = load i32, i32* %overflow, align 4, !dbg !6206, !tbaa !1971
  %cmp256 = icmp ne i32 %152, 0, !dbg !6208
  br i1 %cmp256, label %if.then.257, label %if.end.259, !dbg !6209

if.then.257:                                      ; preds = %if.end.255
  %call258 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.172, i32 0, i32 0)), !dbg !6210
  store %struct._object* %call258, %struct._object** %retval, !dbg !6211
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6211

if.end.259:                                       ; preds = %if.end.255
  %call260 = call %struct._object* @PyLong_FromLongLong(i64 9223372036854775807), !dbg !6212
  store %struct._object* %call260, %struct._object** %num, align 8, !dbg !6213, !tbaa !1941
  %153 = load %struct._object*, %struct._object** %num, align 8, !dbg !6214, !tbaa !1941
  %cmp261 = icmp eq %struct._object* %153, null, !dbg !6216
  br i1 %cmp261, label %if.then.262, label %if.end.263, !dbg !6217

if.then.262:                                      ; preds = %if.end.259
  store %struct._object* null, %struct._object** %retval, !dbg !6218
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6218

if.end.263:                                       ; preds = %if.end.259
  store i32 1234, i32* %overflow, align 4, !dbg !6219, !tbaa !1971
  %154 = load %struct._object*, %struct._object** %num, align 8, !dbg !6220, !tbaa !1941
  %call264 = call i64 @PyLong_AsLongLongAndOverflow(%struct._object* %154, i32* %overflow), !dbg !6221
  store i64 %call264, i64* %value, align 8, !dbg !6222, !tbaa !5682
  br label %do.body.265, !dbg !6223

do.body.265:                                      ; preds = %if.end.263
  %155 = bitcast %struct._object** %_py_decref_tmp266 to i8*, !dbg !6224
  call void @llvm.lifetime.start(i64 8, i8* %155) #2, !dbg !6224
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp266, metadata !1255, metadata !1945), !dbg !6226
  %156 = load %struct._object*, %struct._object** %num, align 8, !dbg !6227, !tbaa !1941
  store %struct._object* %156, %struct._object** %_py_decref_tmp266, align 8, !dbg !6226, !tbaa !1941
  %157 = load %struct._object*, %struct._object** %_py_decref_tmp266, align 8, !dbg !6228, !tbaa !1941
  %ob_refcnt267 = getelementptr inbounds %struct._object, %struct._object* %157, i32 0, i32 0, !dbg !6230
  %158 = load i64, i64* %ob_refcnt267, align 8, !dbg !6231, !tbaa !1961
  %dec268 = add i64 %158, -1, !dbg !6231
  store i64 %dec268, i64* %ob_refcnt267, align 8, !dbg !6231, !tbaa !1961
  %cmp269 = icmp ne i64 %dec268, 0, !dbg !6232
  br i1 %cmp269, label %if.then.270, label %if.else.271, !dbg !6233

if.then.270:                                      ; preds = %do.body.265
  br label %if.end.274, !dbg !6234

if.else.271:                                      ; preds = %do.body.265
  %159 = load %struct._object*, %struct._object** %_py_decref_tmp266, align 8, !dbg !6236, !tbaa !1941
  %ob_type272 = getelementptr inbounds %struct._object, %struct._object* %159, i32 0, i32 1, !dbg !6238
  %160 = load %struct._typeobject*, %struct._typeobject** %ob_type272, align 8, !dbg !6238, !tbaa !1995
  %tp_dealloc273 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %160, i32 0, i32 4, !dbg !6239
  %161 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc273, align 8, !dbg !6239, !tbaa !1997
  %162 = load %struct._object*, %struct._object** %_py_decref_tmp266, align 8, !dbg !6240, !tbaa !1941
  call void %161(%struct._object* %162), !dbg !6241
  br label %if.end.274

if.end.274:                                       ; preds = %if.else.271, %if.then.270
  %163 = bitcast %struct._object** %_py_decref_tmp266 to i8*, !dbg !6242
  call void @llvm.lifetime.end(i64 8, i8* %163) #2, !dbg !6242
  br label %do.cond.275, !dbg !6243

do.cond.275:                                      ; preds = %if.end.274
  br label %do.end.276, !dbg !6244

do.end.276:                                       ; preds = %do.cond.275
  %164 = load i64, i64* %value, align 8, !dbg !6246, !tbaa !5682
  %cmp277 = icmp eq i64 %164, -1, !dbg !6248
  br i1 %cmp277, label %land.lhs.true.278, label %if.end.282, !dbg !6249

land.lhs.true.278:                                ; preds = %do.end.276
  %call279 = call %struct._object* @PyErr_Occurred(), !dbg !6250
  %tobool280 = icmp ne %struct._object* %call279, null, !dbg !6250
  br i1 %tobool280, label %if.then.281, label %if.end.282, !dbg !6252

if.then.281:                                      ; preds = %land.lhs.true.278
  store %struct._object* null, %struct._object** %retval, !dbg !6253
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6253

if.end.282:                                       ; preds = %land.lhs.true.278, %do.end.276
  %165 = load i64, i64* %value, align 8, !dbg !6254, !tbaa !5682
  %cmp283 = icmp ne i64 %165, 9223372036854775807, !dbg !6256
  br i1 %cmp283, label %if.then.284, label %if.end.286, !dbg !6257

if.then.284:                                      ; preds = %if.end.282
  %call285 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.284, i32 0, i32 0)), !dbg !6258
  store %struct._object* %call285, %struct._object** %retval, !dbg !6259
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6259

if.end.286:                                       ; preds = %if.end.282
  %166 = load i32, i32* %overflow, align 4, !dbg !6260, !tbaa !1971
  %cmp287 = icmp ne i32 %166, 0, !dbg !6262
  br i1 %cmp287, label %if.then.288, label %if.end.290, !dbg !6263

if.then.288:                                      ; preds = %if.end.286
  %call289 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.170, i32 0, i32 0)), !dbg !6264
  store %struct._object* %call289, %struct._object** %retval, !dbg !6265
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6265

if.end.290:                                       ; preds = %if.end.286
  %call291 = call %struct._object* @PyLong_FromLongLong(i64 -9223372036854775808), !dbg !6266
  store %struct._object* %call291, %struct._object** %num, align 8, !dbg !6267, !tbaa !1941
  %167 = load %struct._object*, %struct._object** %num, align 8, !dbg !6268, !tbaa !1941
  %cmp292 = icmp eq %struct._object* %167, null, !dbg !6270
  br i1 %cmp292, label %if.then.293, label %if.end.294, !dbg !6271

if.then.293:                                      ; preds = %if.end.290
  store %struct._object* null, %struct._object** %retval, !dbg !6272
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6272

if.end.294:                                       ; preds = %if.end.290
  store i32 0, i32* %overflow, align 4, !dbg !6273, !tbaa !1971
  %168 = load %struct._object*, %struct._object** %num, align 8, !dbg !6274, !tbaa !1941
  %call295 = call i64 @PyLong_AsLongLongAndOverflow(%struct._object* %168, i32* %overflow), !dbg !6275
  store i64 %call295, i64* %value, align 8, !dbg !6276, !tbaa !5682
  br label %do.body.296, !dbg !6277

do.body.296:                                      ; preds = %if.end.294
  %169 = bitcast %struct._object** %_py_decref_tmp297 to i8*, !dbg !6278
  call void @llvm.lifetime.start(i64 8, i8* %169) #2, !dbg !6278
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp297, metadata !1257, metadata !1945), !dbg !6280
  %170 = load %struct._object*, %struct._object** %num, align 8, !dbg !6281, !tbaa !1941
  store %struct._object* %170, %struct._object** %_py_decref_tmp297, align 8, !dbg !6280, !tbaa !1941
  %171 = load %struct._object*, %struct._object** %_py_decref_tmp297, align 8, !dbg !6282, !tbaa !1941
  %ob_refcnt298 = getelementptr inbounds %struct._object, %struct._object* %171, i32 0, i32 0, !dbg !6284
  %172 = load i64, i64* %ob_refcnt298, align 8, !dbg !6285, !tbaa !1961
  %dec299 = add i64 %172, -1, !dbg !6285
  store i64 %dec299, i64* %ob_refcnt298, align 8, !dbg !6285, !tbaa !1961
  %cmp300 = icmp ne i64 %dec299, 0, !dbg !6286
  br i1 %cmp300, label %if.then.301, label %if.else.302, !dbg !6287

if.then.301:                                      ; preds = %do.body.296
  br label %if.end.305, !dbg !6288

if.else.302:                                      ; preds = %do.body.296
  %173 = load %struct._object*, %struct._object** %_py_decref_tmp297, align 8, !dbg !6290, !tbaa !1941
  %ob_type303 = getelementptr inbounds %struct._object, %struct._object* %173, i32 0, i32 1, !dbg !6292
  %174 = load %struct._typeobject*, %struct._typeobject** %ob_type303, align 8, !dbg !6292, !tbaa !1995
  %tp_dealloc304 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %174, i32 0, i32 4, !dbg !6293
  %175 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc304, align 8, !dbg !6293, !tbaa !1997
  %176 = load %struct._object*, %struct._object** %_py_decref_tmp297, align 8, !dbg !6294, !tbaa !1941
  call void %175(%struct._object* %176), !dbg !6295
  br label %if.end.305

if.end.305:                                       ; preds = %if.else.302, %if.then.301
  %177 = bitcast %struct._object** %_py_decref_tmp297 to i8*, !dbg !6296
  call void @llvm.lifetime.end(i64 8, i8* %177) #2, !dbg !6296
  br label %do.cond.306, !dbg !6297

do.cond.306:                                      ; preds = %if.end.305
  br label %do.end.307, !dbg !6298

do.end.307:                                       ; preds = %do.cond.306
  %178 = load i64, i64* %value, align 8, !dbg !6300, !tbaa !5682
  %cmp308 = icmp eq i64 %178, -1, !dbg !6302
  br i1 %cmp308, label %land.lhs.true.309, label %if.end.313, !dbg !6303

land.lhs.true.309:                                ; preds = %do.end.307
  %call310 = call %struct._object* @PyErr_Occurred(), !dbg !6304
  %tobool311 = icmp ne %struct._object* %call310, null, !dbg !6304
  br i1 %tobool311, label %if.then.312, label %if.end.313, !dbg !6306

if.then.312:                                      ; preds = %land.lhs.true.309
  store %struct._object* null, %struct._object** %retval, !dbg !6307
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6307

if.end.313:                                       ; preds = %land.lhs.true.309, %do.end.307
  %179 = load i64, i64* %value, align 8, !dbg !6308, !tbaa !5682
  %cmp314 = icmp ne i64 %179, -9223372036854775808, !dbg !6310
  br i1 %cmp314, label %if.then.315, label %if.end.317, !dbg !6311

if.then.315:                                      ; preds = %if.end.313
  %call316 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.285, i32 0, i32 0)), !dbg !6312
  store %struct._object* %call316, %struct._object** %retval, !dbg !6313
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6313

if.end.317:                                       ; preds = %if.end.313
  %180 = load i32, i32* %overflow, align 4, !dbg !6314, !tbaa !1971
  %cmp318 = icmp ne i32 %180, 0, !dbg !6316
  br i1 %cmp318, label %if.then.319, label %if.end.321, !dbg !6317

if.then.319:                                      ; preds = %if.end.317
  %call320 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.170, i32 0, i32 0)), !dbg !6318
  store %struct._object* %call320, %struct._object** %retval, !dbg !6319
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6319

if.end.321:                                       ; preds = %if.end.317
  %181 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6320, !tbaa !1961
  %inc = add i64 %181, 1, !dbg !6320
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6320, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6321
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6321

cleanup:                                          ; preds = %if.end.321, %if.then.319, %if.then.315, %if.then.312, %if.then.293, %if.then.288, %if.then.284, %if.then.281, %if.then.262, %if.then.257, %if.then.253, %if.then.250, %if.then.231, %if.then.226, %if.then.222, %if.then.219, %if.then.200, %if.then.195, %if.then.191, %if.then.188, %if.then.169, %do.end.141, %if.then.125, %if.then.120, %if.then.116, %if.then.113, %if.then.94, %if.then.89, %if.then.85, %if.then.82, %if.then.63, %do.end.35, %if.then.19, %if.then.14, %if.then.10, %if.then.7, %if.then
  %182 = bitcast i32* %overflow to i8*, !dbg !6322
  call void @llvm.lifetime.end(i64 4, i8* %182) #2, !dbg !6322
  %183 = bitcast i64* %value to i8*, !dbg !6322
  call void @llvm.lifetime.end(i64 8, i8* %183) #2, !dbg !6322
  %184 = bitcast %struct._object** %temp to i8*, !dbg !6322
  call void @llvm.lifetime.end(i64 8, i8* %184) #2, !dbg !6322
  %185 = bitcast %struct._object** %one to i8*, !dbg !6322
  call void @llvm.lifetime.end(i64 8, i8* %185) #2, !dbg !6322
  %186 = bitcast %struct._object** %num to i8*, !dbg !6322
  call void @llvm.lifetime.end(i64 8, i8* %186) #2, !dbg !6322
  %187 = load %struct._object*, %struct._object** %retval, !dbg !6322
  ret %struct._object* %187, !dbg !6322
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_L_code(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %tuple = alloca %struct._object*, align 8
  %num = alloca %struct._object*, align 8
  %value = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp31 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1261, metadata !1945), !dbg !6323
  %0 = bitcast %struct._object** %tuple to i8*, !dbg !6324
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6324
  call void @llvm.dbg.declare(metadata %struct._object** %tuple, metadata !1262, metadata !1945), !dbg !6325
  %1 = bitcast %struct._object** %num to i8*, !dbg !6324
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6324
  call void @llvm.dbg.declare(metadata %struct._object** %num, metadata !1263, metadata !1945), !dbg !6326
  %2 = bitcast i64* %value to i8*, !dbg !6327
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !6327
  call void @llvm.dbg.declare(metadata i64* %value, metadata !1264, metadata !1945), !dbg !6328
  %call = call %struct._object* @PyTuple_New(i64 1), !dbg !6329
  store %struct._object* %call, %struct._object** %tuple, align 8, !dbg !6330, !tbaa !1941
  %3 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6331, !tbaa !1941
  %cmp = icmp eq %struct._object* %3, null, !dbg !6333
  br i1 %cmp, label %if.then, label %if.end, !dbg !6334

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6335
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6335

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyLong_FromLong(i64 42), !dbg !6336
  store %struct._object* %call1, %struct._object** %num, align 8, !dbg !6337, !tbaa !1941
  %4 = load %struct._object*, %struct._object** %num, align 8, !dbg !6338, !tbaa !1941
  %cmp2 = icmp eq %struct._object* %4, null, !dbg !6340
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !6341

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !6342
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6342

if.end.4:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %num, align 8, !dbg !6343, !tbaa !1941
  %6 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6344, !tbaa !1941
  %7 = bitcast %struct._object* %6 to %struct.PyTupleObject*, !dbg !6345
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %7, i32 0, i32 1, !dbg !6346
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !6347
  store %struct._object* %5, %struct._object** %arrayidx, align 8, !dbg !6348, !tbaa !1941
  store i64 -1, i64* %value, align 8, !dbg !6349, !tbaa !5682
  %8 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6350, !tbaa !1941
  %call5 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.286, i32 0, i32 0), i64* %value), !dbg !6352
  %cmp6 = icmp slt i32 %call5, 0, !dbg !6353
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !6354

if.then.7:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval, !dbg !6355
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6355

if.end.8:                                         ; preds = %if.end.4
  %9 = load i64, i64* %value, align 8, !dbg !6356, !tbaa !5682
  %cmp9 = icmp ne i64 %9, 42, !dbg !6358
  br i1 %cmp9, label %if.then.10, label %if.end.12, !dbg !6359

if.then.10:                                       ; preds = %if.end.8
  %call11 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.287, i32 0, i32 0)), !dbg !6360
  store %struct._object* %call11, %struct._object** %retval, !dbg !6361
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6361

if.end.12:                                        ; preds = %if.end.8
  br label %do.body, !dbg !6362

do.body:                                          ; preds = %if.end.12
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6363
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !6363
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1265, metadata !1945), !dbg !6365
  %11 = load %struct._object*, %struct._object** %num, align 8, !dbg !6366, !tbaa !1941
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !6365, !tbaa !1941
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6367, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !6369
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !6370, !tbaa !1961
  %dec = add i64 %13, -1, !dbg !6370
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6370, !tbaa !1961
  %cmp13 = icmp ne i64 %dec, 0, !dbg !6371
  br i1 %cmp13, label %if.then.14, label %if.else, !dbg !6372

if.then.14:                                       ; preds = %do.body
  br label %if.end.15, !dbg !6373

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6375, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !6377
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6377, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !6378
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6378, !tbaa !1997
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6379, !tbaa !1941
  call void %16(%struct._object* %17), !dbg !6380
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.then.14
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6381
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !6381
  br label %do.cond, !dbg !6383

do.cond:                                          ; preds = %if.end.15
  br label %do.end, !dbg !6384

do.end:                                           ; preds = %do.cond
  %call16 = call %struct._object* @PyLong_FromLong(i64 42), !dbg !6386
  store %struct._object* %call16, %struct._object** %num, align 8, !dbg !6387, !tbaa !1941
  %19 = load %struct._object*, %struct._object** %num, align 8, !dbg !6388, !tbaa !1941
  %cmp17 = icmp eq %struct._object* %19, null, !dbg !6390
  br i1 %cmp17, label %if.then.18, label %if.end.19, !dbg !6391

if.then.18:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval, !dbg !6392
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6392

if.end.19:                                        ; preds = %do.end
  %20 = load %struct._object*, %struct._object** %num, align 8, !dbg !6393, !tbaa !1941
  %21 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6394, !tbaa !1941
  %22 = bitcast %struct._object* %21 to %struct.PyTupleObject*, !dbg !6395
  %ob_item20 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %22, i32 0, i32 1, !dbg !6396
  %arrayidx21 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item20, i32 0, i64 0, !dbg !6397
  store %struct._object* %20, %struct._object** %arrayidx21, align 8, !dbg !6398, !tbaa !1941
  store i64 -1, i64* %value, align 8, !dbg !6399, !tbaa !5682
  %23 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6400, !tbaa !1941
  %call22 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.286, i32 0, i32 0), i64* %value), !dbg !6402
  %cmp23 = icmp slt i32 %call22, 0, !dbg !6403
  br i1 %cmp23, label %if.then.24, label %if.end.25, !dbg !6404

if.then.24:                                       ; preds = %if.end.19
  store %struct._object* null, %struct._object** %retval, !dbg !6405
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6405

if.end.25:                                        ; preds = %if.end.19
  %24 = load i64, i64* %value, align 8, !dbg !6406, !tbaa !5682
  %cmp26 = icmp ne i64 %24, 42, !dbg !6408
  br i1 %cmp26, label %if.then.27, label %if.end.29, !dbg !6409

if.then.27:                                       ; preds = %if.end.25
  %call28 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.288, i32 0, i32 0)), !dbg !6410
  store %struct._object* %call28, %struct._object** %retval, !dbg !6411
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6411

if.end.29:                                        ; preds = %if.end.25
  br label %do.body.30, !dbg !6412

do.body.30:                                       ; preds = %if.end.29
  %25 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !6413
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !6413
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp31, metadata !1267, metadata !1945), !dbg !6415
  %26 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6416, !tbaa !1941
  store %struct._object* %26, %struct._object** %_py_decref_tmp31, align 8, !dbg !6415, !tbaa !1941
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !6417, !tbaa !1941
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !6419
  %28 = load i64, i64* %ob_refcnt32, align 8, !dbg !6420, !tbaa !1961
  %dec33 = add i64 %28, -1, !dbg !6420
  store i64 %dec33, i64* %ob_refcnt32, align 8, !dbg !6420, !tbaa !1961
  %cmp34 = icmp ne i64 %dec33, 0, !dbg !6421
  br i1 %cmp34, label %if.then.35, label %if.else.36, !dbg !6422

if.then.35:                                       ; preds = %do.body.30
  br label %if.end.39, !dbg !6423

if.else.36:                                       ; preds = %do.body.30
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !6425, !tbaa !1941
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !6427
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8, !dbg !6427, !tbaa !1995
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !6428
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8, !dbg !6428, !tbaa !1997
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !6429, !tbaa !1941
  call void %31(%struct._object* %32), !dbg !6430
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  %33 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !6431
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !6431
  br label %do.cond.40, !dbg !6432

do.cond.40:                                       ; preds = %if.end.39
  br label %do.end.41, !dbg !6433

do.end.41:                                        ; preds = %do.cond.40
  %34 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6435, !tbaa !1961
  %inc = add i64 %34, 1, !dbg !6435
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6435, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6436
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6436

cleanup:                                          ; preds = %do.end.41, %if.then.27, %if.then.24, %if.then.18, %if.then.10, %if.then.7, %if.then.3, %if.then
  %35 = bitcast i64* %value to i8*, !dbg !6437
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !6437
  %36 = bitcast %struct._object** %num to i8*, !dbg !6437
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !6437
  %37 = bitcast %struct._object** %tuple to i8*, !dbg !6437
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !6437
  %38 = load %struct._object*, %struct._object** %retval, !dbg !6437
  ret %struct._object* %38, !dbg !6437
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_c(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %c = alloca i8, align 1
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1271, metadata !1945), !dbg !6438
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1272, metadata !1945), !dbg !6439
  call void @llvm.lifetime.start(i64 1, i8* %c) #2, !dbg !6440
  call void @llvm.dbg.declare(metadata i8* %c, metadata !1273, metadata !1945), !dbg !6441
  %0 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6442, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.289, i32 0, i32 0), i8* %c), !dbg !6444
  %tobool = icmp ne i32 %call, 0, !dbg !6444
  br i1 %tobool, label %if.end, label %if.then, !dbg !6445

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6446
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6446

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyBytes_FromStringAndSize(i8* %c, i64 1), !dbg !6447
  store %struct._object* %call1, %struct._object** %retval, !dbg !6448
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6448

cleanup:                                          ; preds = %if.end, %if.then
  call void @llvm.lifetime.end(i64 1, i8* %c) #2, !dbg !6449
  %1 = load %struct._object*, %struct._object** %retval, !dbg !6449
  ret %struct._object* %1, !dbg !6449
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_s(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %str = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1276, metadata !1945), !dbg !6450
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1277, metadata !1945), !dbg !6451
  %0 = bitcast i8** %str to i8*, !dbg !6452
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6452
  call void @llvm.dbg.declare(metadata i8** %str, metadata !1278, metadata !1945), !dbg !6453
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6454, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.290, i32 0, i32 0), i8** %str), !dbg !6456
  %tobool = icmp ne i32 %call, 0, !dbg !6456
  br i1 %tobool, label %if.end, label %if.then, !dbg !6457

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6458
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6458

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %str, align 8, !dbg !6459, !tbaa !1941
  %call1 = call %struct._object* @PyBytes_FromString(i8* %2), !dbg !6460
  store %struct._object* %call1, %struct._object** %retval, !dbg !6461
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6461

cleanup:                                          ; preds = %if.end, %if.then
  %3 = bitcast i8** %str to i8*, !dbg !6462
  call void @llvm.lifetime.end(i64 8, i8* %3) #2, !dbg !6462
  %4 = load %struct._object*, %struct._object** %retval, !dbg !6462
  ret %struct._object* %4, !dbg !6462
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_s_star(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %buffer = alloca %struct.bufferinfo, align 8
  %bytes = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1281, metadata !1945), !dbg !6463
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1282, metadata !1945), !dbg !6464
  %0 = bitcast %struct.bufferinfo* %buffer to i8*, !dbg !6465
  call void @llvm.lifetime.start(i64 80, i8* %0) #2, !dbg !6465
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %buffer, metadata !1283, metadata !1945), !dbg !6466
  %1 = bitcast %struct._object** %bytes to i8*, !dbg !6467
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6467
  call void @llvm.dbg.declare(metadata %struct._object** %bytes, metadata !1284, metadata !1945), !dbg !6468
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6469, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.291, i32 0, i32 0), %struct.bufferinfo* %buffer), !dbg !6471
  %tobool = icmp ne i32 %call, 0, !dbg !6471
  br i1 %tobool, label %if.end, label %if.then, !dbg !6472

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6473
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6473

if.end:                                           ; preds = %entry
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buffer, i32 0, i32 0, !dbg !6474
  %3 = load i8*, i8** %buf, align 8, !dbg !6474, !tbaa !6475
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buffer, i32 0, i32 2, !dbg !6477
  %4 = load i64, i64* %len, align 8, !dbg !6477, !tbaa !6478
  %call1 = call %struct._object* @PyBytes_FromStringAndSize(i8* %3, i64 %4), !dbg !6479
  store %struct._object* %call1, %struct._object** %bytes, align 8, !dbg !6480, !tbaa !1941
  call void @PyBuffer_Release(%struct.bufferinfo* %buffer), !dbg !6481
  %5 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !6482, !tbaa !1941
  store %struct._object* %5, %struct._object** %retval, !dbg !6483
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6483

cleanup:                                          ; preds = %if.end, %if.then
  %6 = bitcast %struct._object** %bytes to i8*, !dbg !6484
  call void @llvm.lifetime.end(i64 8, i8* %6) #2, !dbg !6484
  %7 = bitcast %struct.bufferinfo* %buffer to i8*, !dbg !6484
  call void @llvm.lifetime.end(i64 80, i8* %7) #2, !dbg !6484
  %8 = load %struct._object*, %struct._object** %retval, !dbg !6484
  ret %struct._object* %8, !dbg !6484
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_s_hash(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %str = alloca i8*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1287, metadata !1945), !dbg !6485
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1288, metadata !1945), !dbg !6486
  %0 = bitcast i8** %str to i8*, !dbg !6487
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6487
  call void @llvm.dbg.declare(metadata i8** %str, metadata !1289, metadata !1945), !dbg !6488
  %1 = bitcast i64* %size to i8*, !dbg !6489
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6489
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1290, metadata !1945), !dbg !6490
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6491, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.292, i32 0, i32 0), i8** %str, i64* %size), !dbg !6493
  %tobool = icmp ne i32 %call, 0, !dbg !6493
  br i1 %tobool, label %if.end, label %if.then, !dbg !6494

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6495
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6495

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %str, align 8, !dbg !6496, !tbaa !1941
  %4 = load i64, i64* %size, align 8, !dbg !6497, !tbaa !2587
  %call1 = call %struct._object* @PyBytes_FromStringAndSize(i8* %3, i64 %4), !dbg !6498
  store %struct._object* %call1, %struct._object** %retval, !dbg !6499
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6499

cleanup:                                          ; preds = %if.end, %if.then
  %5 = bitcast i64* %size to i8*, !dbg !6500
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !6500
  %6 = bitcast i8** %str to i8*, !dbg !6500
  call void @llvm.lifetime.end(i64 8, i8* %6) #2, !dbg !6500
  %7 = load %struct._object*, %struct._object** %retval, !dbg !6500
  ret %struct._object* %7, !dbg !6500
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_z(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %str = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1293, metadata !1945), !dbg !6501
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1294, metadata !1945), !dbg !6502
  %0 = bitcast i8** %str to i8*, !dbg !6503
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6503
  call void @llvm.dbg.declare(metadata i8** %str, metadata !1295, metadata !1945), !dbg !6504
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6505, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.293, i32 0, i32 0), i8** %str), !dbg !6507
  %tobool = icmp ne i32 %call, 0, !dbg !6507
  br i1 %tobool, label %if.end, label %if.then, !dbg !6508

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6509
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6509

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %str, align 8, !dbg !6510, !tbaa !1941
  %cmp = icmp ne i8* %2, null, !dbg !6512
  br i1 %cmp, label %if.then.1, label %if.else, !dbg !6513

if.then.1:                                        ; preds = %if.end
  %3 = load i8*, i8** %str, align 8, !dbg !6514, !tbaa !1941
  %call2 = call %struct._object* @PyBytes_FromString(i8* %3), !dbg !6515
  store %struct._object* %call2, %struct._object** %retval, !dbg !6516
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6516

if.else:                                          ; preds = %if.end
  %4 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6517, !tbaa !1961
  %inc = add i64 %4, 1, !dbg !6517
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6517, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6518
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6518

cleanup:                                          ; preds = %if.else, %if.then.1, %if.then
  %5 = bitcast i8** %str to i8*, !dbg !6519
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !6519
  %6 = load %struct._object*, %struct._object** %retval, !dbg !6519
  ret %struct._object* %6, !dbg !6519
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_z_star(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %buffer = alloca %struct.bufferinfo, align 8
  %bytes = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1298, metadata !1945), !dbg !6520
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1299, metadata !1945), !dbg !6521
  %0 = bitcast %struct.bufferinfo* %buffer to i8*, !dbg !6522
  call void @llvm.lifetime.start(i64 80, i8* %0) #2, !dbg !6522
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %buffer, metadata !1300, metadata !1945), !dbg !6523
  %1 = bitcast %struct._object** %bytes to i8*, !dbg !6524
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6524
  call void @llvm.dbg.declare(metadata %struct._object** %bytes, metadata !1301, metadata !1945), !dbg !6525
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6526, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.294, i32 0, i32 0), %struct.bufferinfo* %buffer), !dbg !6528
  %tobool = icmp ne i32 %call, 0, !dbg !6528
  br i1 %tobool, label %if.end, label %if.then, !dbg !6529

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6530
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6530

if.end:                                           ; preds = %entry
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buffer, i32 0, i32 0, !dbg !6531
  %3 = load i8*, i8** %buf, align 8, !dbg !6531, !tbaa !6475
  %cmp = icmp ne i8* %3, null, !dbg !6533
  br i1 %cmp, label %if.then.1, label %if.else, !dbg !6534

if.then.1:                                        ; preds = %if.end
  %buf2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buffer, i32 0, i32 0, !dbg !6535
  %4 = load i8*, i8** %buf2, align 8, !dbg !6535, !tbaa !6475
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buffer, i32 0, i32 2, !dbg !6536
  %5 = load i64, i64* %len, align 8, !dbg !6536, !tbaa !6478
  %call3 = call %struct._object* @PyBytes_FromStringAndSize(i8* %4, i64 %5), !dbg !6537
  store %struct._object* %call3, %struct._object** %bytes, align 8, !dbg !6538, !tbaa !1941
  br label %if.end.4, !dbg !6539

if.else:                                          ; preds = %if.end
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6540, !tbaa !1961
  %inc = add i64 %6, 1, !dbg !6540
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6540, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %bytes, align 8, !dbg !6542, !tbaa !1941
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.1
  call void @PyBuffer_Release(%struct.bufferinfo* %buffer), !dbg !6543
  %7 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !6544, !tbaa !1941
  store %struct._object* %7, %struct._object** %retval, !dbg !6545
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6545

cleanup:                                          ; preds = %if.end.4, %if.then
  %8 = bitcast %struct._object** %bytes to i8*, !dbg !6546
  call void @llvm.lifetime.end(i64 8, i8* %8) #2, !dbg !6546
  %9 = bitcast %struct.bufferinfo* %buffer to i8*, !dbg !6546
  call void @llvm.lifetime.end(i64 80, i8* %9) #2, !dbg !6546
  %10 = load %struct._object*, %struct._object** %retval, !dbg !6546
  ret %struct._object* %10, !dbg !6546
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_z_hash(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %str = alloca i8*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1304, metadata !1945), !dbg !6547
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1305, metadata !1945), !dbg !6548
  %0 = bitcast i8** %str to i8*, !dbg !6549
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6549
  call void @llvm.dbg.declare(metadata i8** %str, metadata !1306, metadata !1945), !dbg !6550
  %1 = bitcast i64* %size to i8*, !dbg !6551
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6551
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1307, metadata !1945), !dbg !6552
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6553, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.295, i32 0, i32 0), i8** %str, i64* %size), !dbg !6555
  %tobool = icmp ne i32 %call, 0, !dbg !6555
  br i1 %tobool, label %if.end, label %if.then, !dbg !6556

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6557
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6557

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %str, align 8, !dbg !6558, !tbaa !1941
  %cmp = icmp ne i8* %3, null, !dbg !6560
  br i1 %cmp, label %if.then.1, label %if.else, !dbg !6561

if.then.1:                                        ; preds = %if.end
  %4 = load i8*, i8** %str, align 8, !dbg !6562, !tbaa !1941
  %5 = load i64, i64* %size, align 8, !dbg !6563, !tbaa !2587
  %call2 = call %struct._object* @PyBytes_FromStringAndSize(i8* %4, i64 %5), !dbg !6564
  store %struct._object* %call2, %struct._object** %retval, !dbg !6565
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6565

if.else:                                          ; preds = %if.end
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6566, !tbaa !1961
  %inc = add i64 %6, 1, !dbg !6566
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6566, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6567
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6567

cleanup:                                          ; preds = %if.else, %if.then.1, %if.then
  %7 = bitcast i64* %size to i8*, !dbg !6568
  call void @llvm.lifetime.end(i64 8, i8* %7) #2, !dbg !6568
  %8 = bitcast i8** %str to i8*, !dbg !6568
  call void @llvm.lifetime.end(i64 8, i8* %8) #2, !dbg !6568
  %9 = load %struct._object*, %struct._object** %retval, !dbg !6568
  ret %struct._object* %9, !dbg !6568
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_y(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %str = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1310, metadata !1945), !dbg !6569
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1311, metadata !1945), !dbg !6570
  %0 = bitcast i8** %str to i8*, !dbg !6571
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6571
  call void @llvm.dbg.declare(metadata i8** %str, metadata !1312, metadata !1945), !dbg !6572
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6573, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.296, i32 0, i32 0), i8** %str), !dbg !6575
  %tobool = icmp ne i32 %call, 0, !dbg !6575
  br i1 %tobool, label %if.end, label %if.then, !dbg !6576

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6577
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6577

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %str, align 8, !dbg !6578, !tbaa !1941
  %call1 = call %struct._object* @PyBytes_FromString(i8* %2), !dbg !6579
  store %struct._object* %call1, %struct._object** %retval, !dbg !6580
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6580

cleanup:                                          ; preds = %if.end, %if.then
  %3 = bitcast i8** %str to i8*, !dbg !6581
  call void @llvm.lifetime.end(i64 8, i8* %3) #2, !dbg !6581
  %4 = load %struct._object*, %struct._object** %retval, !dbg !6581
  ret %struct._object* %4, !dbg !6581
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_y_star(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %buffer = alloca %struct.bufferinfo, align 8
  %bytes = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1315, metadata !1945), !dbg !6582
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1316, metadata !1945), !dbg !6583
  %0 = bitcast %struct.bufferinfo* %buffer to i8*, !dbg !6584
  call void @llvm.lifetime.start(i64 80, i8* %0) #2, !dbg !6584
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %buffer, metadata !1317, metadata !1945), !dbg !6585
  %1 = bitcast %struct._object** %bytes to i8*, !dbg !6586
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6586
  call void @llvm.dbg.declare(metadata %struct._object** %bytes, metadata !1318, metadata !1945), !dbg !6587
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6588, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.297, i32 0, i32 0), %struct.bufferinfo* %buffer), !dbg !6590
  %tobool = icmp ne i32 %call, 0, !dbg !6590
  br i1 %tobool, label %if.end, label %if.then, !dbg !6591

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6592
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6592

if.end:                                           ; preds = %entry
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buffer, i32 0, i32 0, !dbg !6593
  %3 = load i8*, i8** %buf, align 8, !dbg !6593, !tbaa !6475
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buffer, i32 0, i32 2, !dbg !6594
  %4 = load i64, i64* %len, align 8, !dbg !6594, !tbaa !6478
  %call1 = call %struct._object* @PyBytes_FromStringAndSize(i8* %3, i64 %4), !dbg !6595
  store %struct._object* %call1, %struct._object** %bytes, align 8, !dbg !6596, !tbaa !1941
  call void @PyBuffer_Release(%struct.bufferinfo* %buffer), !dbg !6597
  %5 = load %struct._object*, %struct._object** %bytes, align 8, !dbg !6598, !tbaa !1941
  store %struct._object* %5, %struct._object** %retval, !dbg !6599
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6599

cleanup:                                          ; preds = %if.end, %if.then
  %6 = bitcast %struct._object** %bytes to i8*, !dbg !6600
  call void @llvm.lifetime.end(i64 8, i8* %6) #2, !dbg !6600
  %7 = bitcast %struct.bufferinfo* %buffer to i8*, !dbg !6600
  call void @llvm.lifetime.end(i64 80, i8* %7) #2, !dbg !6600
  %8 = load %struct._object*, %struct._object** %retval, !dbg !6600
  ret %struct._object* %8, !dbg !6600
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_y_hash(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %str = alloca i8*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1321, metadata !1945), !dbg !6601
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1322, metadata !1945), !dbg !6602
  %0 = bitcast i8** %str to i8*, !dbg !6603
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6603
  call void @llvm.dbg.declare(metadata i8** %str, metadata !1323, metadata !1945), !dbg !6604
  %1 = bitcast i64* %size to i8*, !dbg !6605
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6605
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1324, metadata !1945), !dbg !6606
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6607, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.298, i32 0, i32 0), i8** %str, i64* %size), !dbg !6609
  %tobool = icmp ne i32 %call, 0, !dbg !6609
  br i1 %tobool, label %if.end, label %if.then, !dbg !6610

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6611
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6611

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %str, align 8, !dbg !6612, !tbaa !1941
  %4 = load i64, i64* %size, align 8, !dbg !6613, !tbaa !2587
  %call1 = call %struct._object* @PyBytes_FromStringAndSize(i8* %3, i64 %4), !dbg !6614
  store %struct._object* %call1, %struct._object** %retval, !dbg !6615
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6615

cleanup:                                          ; preds = %if.end, %if.then
  %5 = bitcast i64* %size to i8*, !dbg !6616
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !6616
  %6 = bitcast i8** %str to i8*, !dbg !6616
  call void @llvm.lifetime.end(i64 8, i8* %6) #2, !dbg !6616
  %7 = load %struct._object*, %struct._object** %retval, !dbg !6616
  ret %struct._object* %7, !dbg !6616
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_u(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %str = alloca i32*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1327, metadata !1945), !dbg !6617
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1328, metadata !1945), !dbg !6618
  %0 = bitcast i32** %str to i8*, !dbg !6619
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6619
  call void @llvm.dbg.declare(metadata i32** %str, metadata !1329, metadata !1945), !dbg !6620
  %1 = bitcast i64* %size to i8*, !dbg !6621
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6621
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1332, metadata !1945), !dbg !6622
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6623, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.299, i32 0, i32 0), i32** %str), !dbg !6625
  %tobool = icmp ne i32 %call, 0, !dbg !6625
  br i1 %tobool, label %if.end, label %if.then, !dbg !6626

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6627
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6627

if.end:                                           ; preds = %entry
  %3 = load i32*, i32** %str, align 8, !dbg !6628, !tbaa !1941
  %call1 = call i64 @Py_UNICODE_strlen(i32* %3), !dbg !6629
  store i64 %call1, i64* %size, align 8, !dbg !6630, !tbaa !2587
  %4 = load i32*, i32** %str, align 8, !dbg !6631, !tbaa !1941
  %5 = load i64, i64* %size, align 8, !dbg !6632, !tbaa !2587
  %call2 = call %struct._object* @PyUnicode_FromUnicode(i32* %4, i64 %5), !dbg !6633
  store %struct._object* %call2, %struct._object** %retval, !dbg !6634
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6634

cleanup:                                          ; preds = %if.end, %if.then
  %6 = bitcast i64* %size to i8*, !dbg !6635
  call void @llvm.lifetime.end(i64 8, i8* %6) #2, !dbg !6635
  %7 = bitcast i32** %str to i8*, !dbg !6635
  call void @llvm.lifetime.end(i64 8, i8* %7) #2, !dbg !6635
  %8 = load %struct._object*, %struct._object** %retval, !dbg !6635
  ret %struct._object* %8, !dbg !6635
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_u_hash(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %str = alloca i32*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1335, metadata !1945), !dbg !6636
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1336, metadata !1945), !dbg !6637
  %0 = bitcast i32** %str to i8*, !dbg !6638
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6638
  call void @llvm.dbg.declare(metadata i32** %str, metadata !1337, metadata !1945), !dbg !6639
  %1 = bitcast i64* %size to i8*, !dbg !6640
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6640
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1338, metadata !1945), !dbg !6641
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6642, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.300, i32 0, i32 0), i32** %str, i64* %size), !dbg !6644
  %tobool = icmp ne i32 %call, 0, !dbg !6644
  br i1 %tobool, label %if.end, label %if.then, !dbg !6645

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6646
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6646

if.end:                                           ; preds = %entry
  %3 = load i32*, i32** %str, align 8, !dbg !6647, !tbaa !1941
  %4 = load i64, i64* %size, align 8, !dbg !6648, !tbaa !2587
  %call1 = call %struct._object* @PyUnicode_FromUnicode(i32* %3, i64 %4), !dbg !6649
  store %struct._object* %call1, %struct._object** %retval, !dbg !6650
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6650

cleanup:                                          ; preds = %if.end, %if.then
  %5 = bitcast i64* %size to i8*, !dbg !6651
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !6651
  %6 = bitcast i32** %str to i8*, !dbg !6651
  call void @llvm.lifetime.end(i64 8, i8* %6) #2, !dbg !6651
  %7 = load %struct._object*, %struct._object** %retval, !dbg !6651
  ret %struct._object* %7, !dbg !6651
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_Z(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %str = alloca i32*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1341, metadata !1945), !dbg !6652
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1342, metadata !1945), !dbg !6653
  %0 = bitcast i32** %str to i8*, !dbg !6654
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6654
  call void @llvm.dbg.declare(metadata i32** %str, metadata !1343, metadata !1945), !dbg !6655
  %1 = bitcast i64* %size to i8*, !dbg !6656
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6656
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1344, metadata !1945), !dbg !6657
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6658, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.301, i32 0, i32 0), i32** %str), !dbg !6660
  %tobool = icmp ne i32 %call, 0, !dbg !6660
  br i1 %tobool, label %if.end, label %if.then, !dbg !6661

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6662
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6662

if.end:                                           ; preds = %entry
  %3 = load i32*, i32** %str, align 8, !dbg !6663, !tbaa !1941
  %cmp = icmp ne i32* %3, null, !dbg !6665
  br i1 %cmp, label %if.then.1, label %if.else, !dbg !6666

if.then.1:                                        ; preds = %if.end
  %4 = load i32*, i32** %str, align 8, !dbg !6667, !tbaa !1941
  %call2 = call i64 @Py_UNICODE_strlen(i32* %4), !dbg !6669
  store i64 %call2, i64* %size, align 8, !dbg !6670, !tbaa !2587
  %5 = load i32*, i32** %str, align 8, !dbg !6671, !tbaa !1941
  %6 = load i64, i64* %size, align 8, !dbg !6672, !tbaa !2587
  %call3 = call %struct._object* @PyUnicode_FromUnicode(i32* %5, i64 %6), !dbg !6673
  store %struct._object* %call3, %struct._object** %retval, !dbg !6674
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6674

if.else:                                          ; preds = %if.end
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6675, !tbaa !1961
  %inc = add i64 %7, 1, !dbg !6675
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6675, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6676
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6676

cleanup:                                          ; preds = %if.else, %if.then.1, %if.then
  %8 = bitcast i64* %size to i8*, !dbg !6677
  call void @llvm.lifetime.end(i64 8, i8* %8) #2, !dbg !6677
  %9 = bitcast i32** %str to i8*, !dbg !6677
  call void @llvm.lifetime.end(i64 8, i8* %9) #2, !dbg !6677
  %10 = load %struct._object*, %struct._object** %retval, !dbg !6677
  ret %struct._object* %10, !dbg !6677
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_Z_hash(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %str = alloca i32*, align 8
  %size = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1347, metadata !1945), !dbg !6678
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1348, metadata !1945), !dbg !6679
  %0 = bitcast i32** %str to i8*, !dbg !6680
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6680
  call void @llvm.dbg.declare(metadata i32** %str, metadata !1349, metadata !1945), !dbg !6681
  %1 = bitcast i64* %size to i8*, !dbg !6682
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6682
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1350, metadata !1945), !dbg !6683
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6684, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.302, i32 0, i32 0), i32** %str, i64* %size), !dbg !6686
  %tobool = icmp ne i32 %call, 0, !dbg !6686
  br i1 %tobool, label %if.end, label %if.then, !dbg !6687

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6688
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6688

if.end:                                           ; preds = %entry
  %3 = load i32*, i32** %str, align 8, !dbg !6689, !tbaa !1941
  %cmp = icmp ne i32* %3, null, !dbg !6691
  br i1 %cmp, label %if.then.1, label %if.else, !dbg !6692

if.then.1:                                        ; preds = %if.end
  %4 = load i32*, i32** %str, align 8, !dbg !6693, !tbaa !1941
  %5 = load i64, i64* %size, align 8, !dbg !6694, !tbaa !2587
  %call2 = call %struct._object* @PyUnicode_FromUnicode(i32* %4, i64 %5), !dbg !6695
  store %struct._object* %call2, %struct._object** %retval, !dbg !6696
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6696

if.else:                                          ; preds = %if.end
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6697, !tbaa !1961
  %inc = add i64 %6, 1, !dbg !6697
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6697, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6698
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6698

cleanup:                                          ; preds = %if.else, %if.then.1, %if.then
  %7 = bitcast i64* %size to i8*, !dbg !6699
  call void @llvm.lifetime.end(i64 8, i8* %7) #2, !dbg !6699
  %8 = bitcast i32** %str to i8*, !dbg !6699
  call void @llvm.lifetime.end(i64 8, i8* %8) #2, !dbg !6699
  %9 = load %struct._object*, %struct._object** %retval, !dbg !6699
  ret %struct._object* %9, !dbg !6699
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @getargs_w_star(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %buffer = alloca %struct.bufferinfo, align 8
  %result = alloca %struct._object*, align 8
  %str = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1353, metadata !1945), !dbg !6700
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1354, metadata !1945), !dbg !6701
  %0 = bitcast %struct.bufferinfo* %buffer to i8*, !dbg !6702
  call void @llvm.lifetime.start(i64 80, i8* %0) #2, !dbg !6702
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %buffer, metadata !1355, metadata !1945), !dbg !6703
  %1 = bitcast %struct._object** %result to i8*, !dbg !6704
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6704
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1356, metadata !1945), !dbg !6705
  %2 = bitcast i8** %str to i8*, !dbg !6706
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !6706
  call void @llvm.dbg.declare(metadata i8** %str, metadata !1357, metadata !1945), !dbg !6707
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6708, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.303, i32 0, i32 0), %struct.bufferinfo* %buffer), !dbg !6710
  %tobool = icmp ne i32 %call, 0, !dbg !6710
  br i1 %tobool, label %if.end, label %if.then, !dbg !6711

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6712
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6712

if.end:                                           ; preds = %entry
  %len = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buffer, i32 0, i32 2, !dbg !6713
  %4 = load i64, i64* %len, align 8, !dbg !6713, !tbaa !6478
  %cmp = icmp sle i64 2, %4, !dbg !6715
  br i1 %cmp, label %if.then.1, label %if.end.4, !dbg !6716

if.then.1:                                        ; preds = %if.end
  %buf = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buffer, i32 0, i32 0, !dbg !6717
  %5 = load i8*, i8** %buf, align 8, !dbg !6717, !tbaa !6475
  store i8* %5, i8** %str, align 8, !dbg !6719, !tbaa !1941
  %6 = load i8*, i8** %str, align 8, !dbg !6720, !tbaa !1941
  %arrayidx = getelementptr i8, i8* %6, i64 0, !dbg !6720
  store i8 91, i8* %arrayidx, align 1, !dbg !6721, !tbaa !5543
  %len2 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buffer, i32 0, i32 2, !dbg !6722
  %7 = load i64, i64* %len2, align 8, !dbg !6722, !tbaa !6478
  %sub = sub i64 %7, 1, !dbg !6723
  %8 = load i8*, i8** %str, align 8, !dbg !6724, !tbaa !1941
  %arrayidx3 = getelementptr i8, i8* %8, i64 %sub, !dbg !6724
  store i8 93, i8* %arrayidx3, align 1, !dbg !6725, !tbaa !5543
  br label %if.end.4, !dbg !6726

if.end.4:                                         ; preds = %if.then.1, %if.end
  %buf5 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buffer, i32 0, i32 0, !dbg !6727
  %9 = load i8*, i8** %buf5, align 8, !dbg !6727, !tbaa !6475
  %len6 = getelementptr inbounds %struct.bufferinfo, %struct.bufferinfo* %buffer, i32 0, i32 2, !dbg !6728
  %10 = load i64, i64* %len6, align 8, !dbg !6728, !tbaa !6478
  %call7 = call %struct._object* @PyBytes_FromStringAndSize(i8* %9, i64 %10), !dbg !6729
  store %struct._object* %call7, %struct._object** %result, align 8, !dbg !6730, !tbaa !1941
  call void @PyBuffer_Release(%struct.bufferinfo* %buffer), !dbg !6731
  %11 = load %struct._object*, %struct._object** %result, align 8, !dbg !6732, !tbaa !1941
  store %struct._object* %11, %struct._object** %retval, !dbg !6733
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6733

cleanup:                                          ; preds = %if.end.4, %if.then
  %12 = bitcast i8** %str to i8*, !dbg !6734
  call void @llvm.lifetime.end(i64 8, i8* %12) #2, !dbg !6734
  %13 = bitcast %struct._object** %result to i8*, !dbg !6734
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !6734
  %14 = bitcast %struct.bufferinfo* %buffer to i8*, !dbg !6734
  call void @llvm.lifetime.end(i64 80, i8* %14) #2, !dbg !6734
  %15 = load %struct._object*, %struct._object** %retval, !dbg !6734
  ret %struct._object* %15, !dbg !6734
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @codec_incrementalencoder(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %encoding = alloca i8*, align 8
  %errors = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1360, metadata !1945), !dbg !6735
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1361, metadata !1945), !dbg !6736
  %0 = bitcast i8** %encoding to i8*, !dbg !6737
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6737
  call void @llvm.dbg.declare(metadata i8** %encoding, metadata !1362, metadata !1945), !dbg !6738
  %1 = bitcast i8** %errors to i8*, !dbg !6737
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6737
  call void @llvm.dbg.declare(metadata i8** %errors, metadata !1363, metadata !1945), !dbg !6739
  store i8* null, i8** %errors, align 8, !dbg !6739, !tbaa !1941
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6740, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.304, i32 0, i32 0), i8** %encoding, i8** %errors), !dbg !6742
  %tobool = icmp ne i32 %call, 0, !dbg !6742
  br i1 %tobool, label %if.end, label %if.then, !dbg !6743

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6744
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6744

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %encoding, align 8, !dbg !6745, !tbaa !1941
  %4 = load i8*, i8** %errors, align 8, !dbg !6746, !tbaa !1941
  %call1 = call %struct._object* @PyCodec_IncrementalEncoder(i8* %3, i8* %4), !dbg !6747
  store %struct._object* %call1, %struct._object** %retval, !dbg !6748
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6748

cleanup:                                          ; preds = %if.end, %if.then
  %5 = bitcast i8** %errors to i8*, !dbg !6749
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !6749
  %6 = bitcast i8** %encoding to i8*, !dbg !6749
  call void @llvm.lifetime.end(i64 8, i8* %6) #2, !dbg !6749
  %7 = load %struct._object*, %struct._object** %retval, !dbg !6749
  ret %struct._object* %7, !dbg !6749
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @codec_incrementaldecoder(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %encoding = alloca i8*, align 8
  %errors = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1366, metadata !1945), !dbg !6750
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1367, metadata !1945), !dbg !6751
  %0 = bitcast i8** %encoding to i8*, !dbg !6752
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6752
  call void @llvm.dbg.declare(metadata i8** %encoding, metadata !1368, metadata !1945), !dbg !6753
  %1 = bitcast i8** %errors to i8*, !dbg !6752
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6752
  call void @llvm.dbg.declare(metadata i8** %errors, metadata !1369, metadata !1945), !dbg !6754
  store i8* null, i8** %errors, align 8, !dbg !6754, !tbaa !1941
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !6755, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.305, i32 0, i32 0), i8** %encoding, i8** %errors), !dbg !6757
  %tobool = icmp ne i32 %call, 0, !dbg !6757
  br i1 %tobool, label %if.end, label %if.then, !dbg !6758

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6759
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6759

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %encoding, align 8, !dbg !6760, !tbaa !1941
  %4 = load i8*, i8** %errors, align 8, !dbg !6761, !tbaa !1941
  %call1 = call %struct._object* @PyCodec_IncrementalDecoder(i8* %3, i8* %4), !dbg !6762
  store %struct._object* %call1, %struct._object** %retval, !dbg !6763
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6763

cleanup:                                          ; preds = %if.end, %if.then
  %5 = bitcast i8** %errors to i8*, !dbg !6764
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !6764
  %6 = bitcast i8** %encoding to i8*, !dbg !6764
  call void @llvm.lifetime.end(i64 8, i8* %6) #2, !dbg !6764
  %7 = load %struct._object*, %struct._object** %retval, !dbg !6764
  ret %struct._object* %7, !dbg !6764
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_s_code(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %tuple = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %value = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1372, metadata !1945), !dbg !6765
  %0 = bitcast %struct._object** %tuple to i8*, !dbg !6766
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6766
  call void @llvm.dbg.declare(metadata %struct._object** %tuple, metadata !1373, metadata !1945), !dbg !6767
  %1 = bitcast %struct._object** %obj to i8*, !dbg !6766
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6766
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !1374, metadata !1945), !dbg !6768
  %2 = bitcast i8** %value to i8*, !dbg !6769
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !6769
  call void @llvm.dbg.declare(metadata i8** %value, metadata !1375, metadata !1945), !dbg !6770
  %call = call %struct._object* @PyTuple_New(i64 1), !dbg !6771
  store %struct._object* %call, %struct._object** %tuple, align 8, !dbg !6772, !tbaa !1941
  %3 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6773, !tbaa !1941
  %cmp = icmp eq %struct._object* %3, null, !dbg !6775
  br i1 %cmp, label %if.then, label %if.end, !dbg !6776

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6777
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6777

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyUnicode_Decode(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.306, i32 0, i32 0), i64 4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.307, i32 0, i32 0), i8* null), !dbg !6778
  store %struct._object* %call1, %struct._object** %obj, align 8, !dbg !6779, !tbaa !1941
  %4 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6780, !tbaa !1941
  %cmp2 = icmp eq %struct._object* %4, null, !dbg !6782
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !6783

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !6784
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6784

if.end.4:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6785, !tbaa !1941
  %6 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6786, !tbaa !1941
  %7 = bitcast %struct._object* %6 to %struct.PyTupleObject*, !dbg !6787
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %7, i32 0, i32 1, !dbg !6788
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !6789
  store %struct._object* %5, %struct._object** %arrayidx, align 8, !dbg !6790, !tbaa !1941
  %8 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6791, !tbaa !1941
  %call5 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.308, i32 0, i32 0), i8** %value), !dbg !6793
  %cmp6 = icmp slt i32 %call5, 0, !dbg !6794
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !6795

if.then.7:                                        ; preds = %if.end.4
  store %struct._object* null, %struct._object** %retval, !dbg !6796
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6796

if.end.8:                                         ; preds = %if.end.4
  %9 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6797, !tbaa !1941
  %call9 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.309, i32 0, i32 0), i8** %value), !dbg !6799
  %cmp10 = icmp slt i32 %call9, 0, !dbg !6800
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !6801

if.then.11:                                       ; preds = %if.end.8
  store %struct._object* null, %struct._object** %retval, !dbg !6802
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6802

if.end.12:                                        ; preds = %if.end.8
  br label %do.body, !dbg !6803

do.body:                                          ; preds = %if.end.12
  %10 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6804
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !6804
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1376, metadata !1945), !dbg !6806
  %11 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6807, !tbaa !1941
  store %struct._object* %11, %struct._object** %_py_decref_tmp, align 8, !dbg !6806, !tbaa !1941
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6808, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !6810
  %13 = load i64, i64* %ob_refcnt, align 8, !dbg !6811, !tbaa !1961
  %dec = add i64 %13, -1, !dbg !6811
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6811, !tbaa !1961
  %cmp13 = icmp ne i64 %dec, 0, !dbg !6812
  br i1 %cmp13, label %if.then.14, label %if.else, !dbg !6813

if.then.14:                                       ; preds = %do.body
  br label %if.end.15, !dbg !6814

if.else:                                          ; preds = %do.body
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6816, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 1, !dbg !6818
  %15 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6818, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %15, i32 0, i32 4, !dbg !6819
  %16 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6819, !tbaa !1997
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6820, !tbaa !1941
  call void %16(%struct._object* %17), !dbg !6821
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.then.14
  %18 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6822
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !6822
  br label %do.cond, !dbg !6824

do.cond:                                          ; preds = %if.end.15
  br label %do.end, !dbg !6825

do.end:                                           ; preds = %do.cond
  %19 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6827, !tbaa !1961
  %inc = add i64 %19, 1, !dbg !6827
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !6827, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !6828
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6828

cleanup:                                          ; preds = %do.end, %if.then.11, %if.then.7, %if.then.3, %if.then
  %20 = bitcast i8** %value to i8*, !dbg !6829
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !6829
  %21 = bitcast %struct._object** %obj to i8*, !dbg !6829
  call void @llvm.lifetime.end(i64 8, i8* %21) #2, !dbg !6829
  %22 = bitcast %struct._object** %tuple to i8*, !dbg !6829
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !6829
  %23 = load %struct._object*, %struct._object** %retval, !dbg !6829
  ret %struct._object* %23, !dbg !6829
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_u_code(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %tuple = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %value = alloca i32*, align 8
  %len = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1380, metadata !1945), !dbg !6830
  %0 = bitcast %struct._object** %tuple to i8*, !dbg !6831
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !6831
  call void @llvm.dbg.declare(metadata %struct._object** %tuple, metadata !1381, metadata !1945), !dbg !6832
  %1 = bitcast %struct._object** %obj to i8*, !dbg !6831
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !6831
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !1382, metadata !1945), !dbg !6833
  %2 = bitcast i32** %value to i8*, !dbg !6834
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !6834
  call void @llvm.dbg.declare(metadata i32** %value, metadata !1383, metadata !1945), !dbg !6835
  %3 = bitcast i64* %len to i8*, !dbg !6836
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !6836
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1384, metadata !1945), !dbg !6837
  %4 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_Py_ascii_whitespace, i32 0, i64 25), align 1, !dbg !6838, !tbaa !5543
  %conv = zext i8 %4 to i32, !dbg !6838
  store volatile i32 %conv, i32* @x, align 4, !dbg !6839, !tbaa !1971
  %call = call %struct._object* @PyTuple_New(i64 1), !dbg !6840
  store %struct._object* %call, %struct._object** %tuple, align 8, !dbg !6841, !tbaa !1941
  %5 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6842, !tbaa !1941
  %cmp = icmp eq %struct._object* %5, null, !dbg !6844
  br i1 %cmp, label %if.then, label %if.end, !dbg !6845

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !6846
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6846

if.end:                                           ; preds = %entry
  %call2 = call %struct._object* @PyUnicode_Decode(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.310, i32 0, i32 0), i64 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.311, i32 0, i32 0), i8* null), !dbg !6847
  store %struct._object* %call2, %struct._object** %obj, align 8, !dbg !6848, !tbaa !1941
  %6 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6849, !tbaa !1941
  %cmp3 = icmp eq %struct._object* %6, null, !dbg !6851
  br i1 %cmp3, label %if.then.5, label %if.end.6, !dbg !6852

if.then.5:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !6853
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6853

if.end.6:                                         ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6854, !tbaa !1941
  %8 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6855, !tbaa !1941
  %9 = bitcast %struct._object* %8 to %struct.PyTupleObject*, !dbg !6856
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %9, i32 0, i32 1, !dbg !6857
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !6858
  store %struct._object* %7, %struct._object** %arrayidx, align 8, !dbg !6859, !tbaa !1941
  store i32* null, i32** %value, align 8, !dbg !6860, !tbaa !1941
  %10 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6861, !tbaa !1941
  %call7 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.312, i32 0, i32 0), i32** %value), !dbg !6863
  %cmp8 = icmp slt i32 %call7, 0, !dbg !6864
  br i1 %cmp8, label %if.then.10, label %if.end.11, !dbg !6865

if.then.10:                                       ; preds = %if.end.6
  store %struct._object* null, %struct._object** %retval, !dbg !6866
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6866

if.end.11:                                        ; preds = %if.end.6
  %11 = load i32*, i32** %value, align 8, !dbg !6867, !tbaa !1941
  %12 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6869, !tbaa !1941
  %13 = bitcast %struct._object* %12 to %struct.PyASCIIObject*, !dbg !6870
  %wstr = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %13, i32 0, i32 4, !dbg !6871
  %14 = load i32*, i32** %wstr, align 8, !dbg !6871, !tbaa !6872
  %tobool = icmp ne i32* %14, null, !dbg !6875
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6875

cond.true:                                        ; preds = %if.end.11
  %15 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6876, !tbaa !1941
  %16 = bitcast %struct._object* %15 to %struct.PyASCIIObject*, !dbg !6878
  %wstr12 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %16, i32 0, i32 4, !dbg !6879
  %17 = load i32*, i32** %wstr12, align 8, !dbg !6879, !tbaa !6872
  br label %cond.end, !dbg !6875

cond.false:                                       ; preds = %if.end.11
  %18 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6880, !tbaa !1941
  %call13 = call i32* @PyUnicode_AsUnicode(%struct._object* %18), !dbg !6882
  br label %cond.end, !dbg !6875

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %17, %cond.true ], [ %call13, %cond.false ], !dbg !6875
  %cmp14 = icmp ne i32* %11, %cond, !dbg !6883
  br i1 %cmp14, label %if.then.16, label %if.end.18, !dbg !6886

if.then.16:                                       ; preds = %cond.end
  %call17 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.313, i32 0, i32 0)), !dbg !6887
  store %struct._object* %call17, %struct._object** %retval, !dbg !6888
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6888

if.end.18:                                        ; preds = %cond.end
  store i32* null, i32** %value, align 8, !dbg !6889, !tbaa !1941
  %19 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6890, !tbaa !1941
  %call19 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.314, i32 0, i32 0), i32** %value, i64* %len), !dbg !6892
  %cmp20 = icmp slt i32 %call19, 0, !dbg !6893
  br i1 %cmp20, label %if.then.22, label %if.end.23, !dbg !6894

if.then.22:                                       ; preds = %if.end.18
  store %struct._object* null, %struct._object** %retval, !dbg !6895
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6895

if.end.23:                                        ; preds = %if.end.18
  %20 = load i32*, i32** %value, align 8, !dbg !6896, !tbaa !1941
  %21 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6898, !tbaa !1941
  %22 = bitcast %struct._object* %21 to %struct.PyASCIIObject*, !dbg !6899
  %wstr24 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %22, i32 0, i32 4, !dbg !6900
  %23 = load i32*, i32** %wstr24, align 8, !dbg !6900, !tbaa !6872
  %tobool25 = icmp ne i32* %23, null, !dbg !6901
  br i1 %tobool25, label %cond.true.26, label %cond.false.28, !dbg !6901

cond.true.26:                                     ; preds = %if.end.23
  %24 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6902, !tbaa !1941
  %25 = bitcast %struct._object* %24 to %struct.PyASCIIObject*, !dbg !6904
  %wstr27 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %25, i32 0, i32 4, !dbg !6905
  %26 = load i32*, i32** %wstr27, align 8, !dbg !6905, !tbaa !6872
  br label %cond.end.30, !dbg !6901

cond.false.28:                                    ; preds = %if.end.23
  %27 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6906, !tbaa !1941
  %call29 = call i32* @PyUnicode_AsUnicode(%struct._object* %27), !dbg !6908
  br label %cond.end.30, !dbg !6901

cond.end.30:                                      ; preds = %cond.false.28, %cond.true.26
  %cond31 = phi i32* [ %26, %cond.true.26 ], [ %call29, %cond.false.28 ], !dbg !6901
  %cmp32 = icmp ne i32* %20, %cond31, !dbg !6909
  br i1 %cmp32, label %if.then.70, label %lor.lhs.false, !dbg !6912

lor.lhs.false:                                    ; preds = %cond.end.30
  %28 = load i64, i64* %len, align 8, !dbg !6913, !tbaa !2587
  %29 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6914, !tbaa !1941
  %30 = bitcast %struct._object* %29 to %struct.PyASCIIObject*, !dbg !6915
  %wstr34 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %30, i32 0, i32 4, !dbg !6916
  %31 = load i32*, i32** %wstr34, align 8, !dbg !6916, !tbaa !6872
  %tobool35 = icmp ne i32* %31, null, !dbg !6917
  br i1 %tobool35, label %cond.true.36, label %cond.false.47, !dbg !6917

cond.true.36:                                     ; preds = %lor.lhs.false
  %32 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6918, !tbaa !1941
  %33 = bitcast %struct._object* %32 to %struct.PyASCIIObject*, !dbg !6919
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %33, i32 0, i32 3, !dbg !6920
  %34 = bitcast %struct.anon* %state to i32*, !dbg !6921
  %bf.load = load i32, i32* %34, align 4, !dbg !6921
  %bf.lshr = lshr i32 %bf.load, 6, !dbg !6921
  %bf.clear = and i32 %bf.lshr, 1, !dbg !6921
  %tobool37 = icmp ne i32 %bf.clear, 0, !dbg !6922
  br i1 %tobool37, label %land.lhs.true, label %cond.false.44, !dbg !6923

land.lhs.true:                                    ; preds = %cond.true.36
  %35 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6924, !tbaa !1941
  %36 = bitcast %struct._object* %35 to %struct.PyASCIIObject*, !dbg !6925
  %state38 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %36, i32 0, i32 3, !dbg !6926
  %37 = bitcast %struct.anon* %state38 to i32*, !dbg !6927
  %bf.load39 = load i32, i32* %37, align 4, !dbg !6927
  %bf.lshr40 = lshr i32 %bf.load39, 5, !dbg !6927
  %bf.clear41 = and i32 %bf.lshr40, 1, !dbg !6927
  %tobool42 = icmp ne i32 %bf.clear41, 0, !dbg !6928
  br i1 %tobool42, label %cond.true.43, label %cond.false.44, !dbg !6929

cond.true.43:                                     ; preds = %land.lhs.true
  %38 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6930, !tbaa !1941
  %39 = bitcast %struct._object* %38 to %struct.PyASCIIObject*, !dbg !6932
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %39, i32 0, i32 1, !dbg !6933
  %40 = load i64, i64* %length, align 8, !dbg !6933, !tbaa !6934
  br label %cond.end.45, !dbg !6929

cond.false.44:                                    ; preds = %land.lhs.true, %cond.true.36
  %41 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6935, !tbaa !1941
  %42 = bitcast %struct._object* %41 to %struct.PyCompactUnicodeObject*, !dbg !6938
  %wstr_length = getelementptr inbounds %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %42, i32 0, i32 3, !dbg !6939
  %43 = load i64, i64* %wstr_length, align 8, !dbg !6939, !tbaa !6940
  br label %cond.end.45, !dbg !6929

cond.end.45:                                      ; preds = %cond.false.44, %cond.true.43
  %cond46 = phi i64 [ %40, %cond.true.43 ], [ %43, %cond.false.44 ], !dbg !6929
  br label %cond.end.66, !dbg !6942

cond.false.47:                                    ; preds = %lor.lhs.false
  %44 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6945, !tbaa !1941
  %call48 = call i32* @PyUnicode_AsUnicode(%struct._object* %44), !dbg !6946
  %45 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6947, !tbaa !1941
  %46 = bitcast %struct._object* %45 to %struct.PyASCIIObject*, !dbg !6948
  %state49 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %46, i32 0, i32 3, !dbg !6949
  %47 = bitcast %struct.anon* %state49 to i32*, !dbg !6950
  %bf.load50 = load i32, i32* %47, align 4, !dbg !6950
  %bf.lshr51 = lshr i32 %bf.load50, 6, !dbg !6950
  %bf.clear52 = and i32 %bf.lshr51, 1, !dbg !6950
  %tobool53 = icmp ne i32 %bf.clear52, 0, !dbg !6951
  br i1 %tobool53, label %land.lhs.true.54, label %cond.false.62, !dbg !6952

land.lhs.true.54:                                 ; preds = %cond.false.47
  %48 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6953, !tbaa !1941
  %49 = bitcast %struct._object* %48 to %struct.PyASCIIObject*, !dbg !6955
  %state55 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %49, i32 0, i32 3, !dbg !6956
  %50 = bitcast %struct.anon* %state55 to i32*, !dbg !6957
  %bf.load56 = load i32, i32* %50, align 4, !dbg !6957
  %bf.lshr57 = lshr i32 %bf.load56, 5, !dbg !6957
  %bf.clear58 = and i32 %bf.lshr57, 1, !dbg !6957
  %tobool59 = icmp ne i32 %bf.clear58, 0, !dbg !6958
  br i1 %tobool59, label %cond.true.60, label %cond.false.62, !dbg !6959

cond.true.60:                                     ; preds = %land.lhs.true.54
  %51 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6960, !tbaa !1941
  %52 = bitcast %struct._object* %51 to %struct.PyASCIIObject*, !dbg !6962
  %length61 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %52, i32 0, i32 1, !dbg !6963
  %53 = load i64, i64* %length61, align 8, !dbg !6963, !tbaa !6934
  br label %cond.end.64, !dbg !6959

cond.false.62:                                    ; preds = %land.lhs.true.54, %cond.false.47
  %54 = load %struct._object*, %struct._object** %obj, align 8, !dbg !6964, !tbaa !1941
  %55 = bitcast %struct._object* %54 to %struct.PyCompactUnicodeObject*, !dbg !6967
  %wstr_length63 = getelementptr inbounds %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %55, i32 0, i32 3, !dbg !6968
  %56 = load i64, i64* %wstr_length63, align 8, !dbg !6968, !tbaa !6940
  br label %cond.end.64, !dbg !6959

cond.end.64:                                      ; preds = %cond.false.62, %cond.true.60
  %cond65 = phi i64 [ %53, %cond.true.60 ], [ %56, %cond.false.62 ], !dbg !6959
  br label %cond.end.66, !dbg !6969

cond.end.66:                                      ; preds = %cond.end.64, %cond.end.45
  %cond67 = phi i64 [ %cond46, %cond.end.45 ], [ %cond65, %cond.end.64 ], !dbg !6917
  %cmp68 = icmp ne i64 %28, %cond67, !dbg !6972
  br i1 %cmp68, label %if.then.70, label %if.end.72, !dbg !6975

if.then.70:                                       ; preds = %cond.end.66, %cond.end.30
  %call71 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.315, i32 0, i32 0)), !dbg !6976
  store %struct._object* %call71, %struct._object** %retval, !dbg !6977
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !6977

if.end.72:                                        ; preds = %cond.end.66
  br label %do.body, !dbg !6978

do.body:                                          ; preds = %if.end.72
  %57 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6979
  call void @llvm.lifetime.start(i64 8, i8* %57) #2, !dbg !6979
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1385, metadata !1945), !dbg !6981
  %58 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !6982, !tbaa !1941
  store %struct._object* %58, %struct._object** %_py_decref_tmp, align 8, !dbg !6981, !tbaa !1941
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6983, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 0, !dbg !6985
  %60 = load i64, i64* %ob_refcnt, align 8, !dbg !6986, !tbaa !1961
  %dec = add i64 %60, -1, !dbg !6986
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !6986, !tbaa !1961
  %cmp73 = icmp ne i64 %dec, 0, !dbg !6987
  br i1 %cmp73, label %if.then.75, label %if.else, !dbg !6988

if.then.75:                                       ; preds = %do.body
  br label %if.end.76, !dbg !6989

if.else:                                          ; preds = %do.body
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6991, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 1, !dbg !6993
  %62 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !6993, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %62, i32 0, i32 4, !dbg !6994
  %63 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !6994, !tbaa !1997
  %64 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !6995, !tbaa !1941
  call void %63(%struct._object* %64), !dbg !6996
  br label %if.end.76

if.end.76:                                        ; preds = %if.else, %if.then.75
  %65 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !6997
  call void @llvm.lifetime.end(i64 8, i8* %65) #2, !dbg !6997
  br label %do.cond, !dbg !6999

do.cond:                                          ; preds = %if.end.76
  br label %do.end, !dbg !7000

do.end:                                           ; preds = %do.cond
  %66 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7002, !tbaa !1961
  %inc = add i64 %66, 1, !dbg !7002
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7002, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !7003
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7003

cleanup:                                          ; preds = %do.end, %if.then.70, %if.then.22, %if.then.16, %if.then.10, %if.then.5, %if.then
  %67 = bitcast i64* %len to i8*, !dbg !7004
  call void @llvm.lifetime.end(i64 8, i8* %67) #2, !dbg !7004
  %68 = bitcast i32** %value to i8*, !dbg !7004
  call void @llvm.lifetime.end(i64 8, i8* %68) #2, !dbg !7004
  %69 = bitcast %struct._object** %obj to i8*, !dbg !7004
  call void @llvm.lifetime.end(i64 8, i8* %69) #2, !dbg !7004
  %70 = bitcast %struct._object** %tuple to i8*, !dbg !7004
  call void @llvm.lifetime.end(i64 8, i8* %70) #2, !dbg !7004
  %71 = load %struct._object*, %struct._object** %retval, !dbg !7004
  ret %struct._object* %71, !dbg !7004
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_Z_code(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %tuple = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %value1 = alloca i32*, align 8
  %value2 = alloca i32*, align 8
  %len1 = alloca i64, align 8
  %len2 = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1389, metadata !1945), !dbg !7005
  %0 = bitcast %struct._object** %tuple to i8*, !dbg !7006
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7006
  call void @llvm.dbg.declare(metadata %struct._object** %tuple, metadata !1390, metadata !1945), !dbg !7007
  %1 = bitcast %struct._object** %obj to i8*, !dbg !7006
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !7006
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !1391, metadata !1945), !dbg !7008
  %2 = bitcast i32** %value1 to i8*, !dbg !7009
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !7009
  call void @llvm.dbg.declare(metadata i32** %value1, metadata !1392, metadata !1945), !dbg !7010
  %3 = bitcast i32** %value2 to i8*, !dbg !7009
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !7009
  call void @llvm.dbg.declare(metadata i32** %value2, metadata !1395, metadata !1945), !dbg !7011
  %4 = bitcast i64* %len1 to i8*, !dbg !7012
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !7012
  call void @llvm.dbg.declare(metadata i64* %len1, metadata !1396, metadata !1945), !dbg !7013
  %5 = bitcast i64* %len2 to i8*, !dbg !7012
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !7012
  call void @llvm.dbg.declare(metadata i64* %len2, metadata !1397, metadata !1945), !dbg !7014
  %call = call %struct._object* @PyTuple_New(i64 2), !dbg !7015
  store %struct._object* %call, %struct._object** %tuple, align 8, !dbg !7016, !tbaa !1941
  %6 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !7017, !tbaa !1941
  %cmp = icmp eq %struct._object* %6, null, !dbg !7019
  br i1 %cmp, label %if.then, label %if.end, !dbg !7020

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7021
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7021

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.310, i32 0, i32 0)), !dbg !7022
  store %struct._object* %call1, %struct._object** %obj, align 8, !dbg !7023, !tbaa !1941
  %7 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7024, !tbaa !1941
  %8 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !7025, !tbaa !1941
  %9 = bitcast %struct._object* %8 to %struct.PyTupleObject*, !dbg !7026
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %9, i32 0, i32 1, !dbg !7027
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0, !dbg !7028
  store %struct._object* %7, %struct._object** %arrayidx, align 8, !dbg !7029, !tbaa !1941
  %10 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7030, !tbaa !1961
  %inc = add i64 %10, 1, !dbg !7030
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7030, !tbaa !1961
  %11 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !7031, !tbaa !1941
  %12 = bitcast %struct._object* %11 to %struct.PyTupleObject*, !dbg !7032
  %ob_item2 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %12, i32 0, i32 1, !dbg !7033
  %arrayidx3 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item2, i32 0, i64 1, !dbg !7034
  store %struct._object* @_Py_NoneStruct, %struct._object** %arrayidx3, align 8, !dbg !7035, !tbaa !1941
  store i32* null, i32** %value1, align 8, !dbg !7036, !tbaa !1941
  %13 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7037, !tbaa !1941
  %14 = bitcast %struct._object* %13 to %struct.PyASCIIObject*, !dbg !7038
  %wstr = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %14, i32 0, i32 4, !dbg !7039
  %15 = load i32*, i32** %wstr, align 8, !dbg !7039, !tbaa !6872
  %tobool = icmp ne i32* %15, null, !dbg !7040
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7040

cond.true:                                        ; preds = %if.end
  %16 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7041, !tbaa !1941
  %17 = bitcast %struct._object* %16 to %struct.PyASCIIObject*, !dbg !7043
  %wstr4 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %17, i32 0, i32 4, !dbg !7044
  %18 = load i32*, i32** %wstr4, align 8, !dbg !7044, !tbaa !6872
  br label %cond.end, !dbg !7040

cond.false:                                       ; preds = %if.end
  %19 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7045, !tbaa !1941
  %call5 = call i32* @PyUnicode_AsUnicode(%struct._object* %19), !dbg !7047
  br label %cond.end, !dbg !7040

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %18, %cond.true ], [ %call5, %cond.false ], !dbg !7040
  store i32* %cond, i32** %value2, align 8, !dbg !7048, !tbaa !1941
  %20 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !7051, !tbaa !1941
  %call6 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.316, i32 0, i32 0), i32** %value1, i32** %value2), !dbg !7053
  %cmp7 = icmp slt i32 %call6, 0, !dbg !7054
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !7055

if.then.8:                                        ; preds = %cond.end
  store %struct._object* null, %struct._object** %retval, !dbg !7056
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7056

if.end.9:                                         ; preds = %cond.end
  %21 = load i32*, i32** %value1, align 8, !dbg !7057, !tbaa !1941
  %22 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7059, !tbaa !1941
  %23 = bitcast %struct._object* %22 to %struct.PyASCIIObject*, !dbg !7060
  %wstr10 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %23, i32 0, i32 4, !dbg !7061
  %24 = load i32*, i32** %wstr10, align 8, !dbg !7061, !tbaa !6872
  %tobool11 = icmp ne i32* %24, null, !dbg !7062
  br i1 %tobool11, label %cond.true.12, label %cond.false.14, !dbg !7062

cond.true.12:                                     ; preds = %if.end.9
  %25 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7063, !tbaa !1941
  %26 = bitcast %struct._object* %25 to %struct.PyASCIIObject*, !dbg !7065
  %wstr13 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %26, i32 0, i32 4, !dbg !7066
  %27 = load i32*, i32** %wstr13, align 8, !dbg !7066, !tbaa !6872
  br label %cond.end.16, !dbg !7062

cond.false.14:                                    ; preds = %if.end.9
  %28 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7067, !tbaa !1941
  %call15 = call i32* @PyUnicode_AsUnicode(%struct._object* %28), !dbg !7069
  br label %cond.end.16, !dbg !7062

cond.end.16:                                      ; preds = %cond.false.14, %cond.true.12
  %cond17 = phi i32* [ %27, %cond.true.12 ], [ %call15, %cond.false.14 ], !dbg !7062
  %cmp18 = icmp ne i32* %21, %cond17, !dbg !7070
  br i1 %cmp18, label %if.then.19, label %if.end.21, !dbg !7073

if.then.19:                                       ; preds = %cond.end.16
  %call20 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.317, i32 0, i32 0)), !dbg !7074
  store %struct._object* %call20, %struct._object** %retval, !dbg !7075
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7075

if.end.21:                                        ; preds = %cond.end.16
  %29 = load i32*, i32** %value2, align 8, !dbg !7076, !tbaa !1941
  %cmp22 = icmp ne i32* %29, null, !dbg !7078
  br i1 %cmp22, label %if.then.23, label %if.end.25, !dbg !7079

if.then.23:                                       ; preds = %if.end.21
  %call24 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.318, i32 0, i32 0)), !dbg !7080
  store %struct._object* %call24, %struct._object** %retval, !dbg !7081
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7081

if.end.25:                                        ; preds = %if.end.21
  store i32* null, i32** %value1, align 8, !dbg !7082, !tbaa !1941
  %30 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7083, !tbaa !1941
  %31 = bitcast %struct._object* %30 to %struct.PyASCIIObject*, !dbg !7084
  %wstr26 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %31, i32 0, i32 4, !dbg !7085
  %32 = load i32*, i32** %wstr26, align 8, !dbg !7085, !tbaa !6872
  %tobool27 = icmp ne i32* %32, null, !dbg !7086
  br i1 %tobool27, label %cond.true.28, label %cond.false.30, !dbg !7086

cond.true.28:                                     ; preds = %if.end.25
  %33 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7087, !tbaa !1941
  %34 = bitcast %struct._object* %33 to %struct.PyASCIIObject*, !dbg !7088
  %wstr29 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %34, i32 0, i32 4, !dbg !7089
  %35 = load i32*, i32** %wstr29, align 8, !dbg !7089, !tbaa !6872
  br label %cond.end.32, !dbg !7086

cond.false.30:                                    ; preds = %if.end.25
  %36 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7090, !tbaa !1941
  %call31 = call i32* @PyUnicode_AsUnicode(%struct._object* %36), !dbg !7091
  br label %cond.end.32, !dbg !7086

cond.end.32:                                      ; preds = %cond.false.30, %cond.true.28
  %cond33 = phi i32* [ %35, %cond.true.28 ], [ %call31, %cond.false.30 ], !dbg !7086
  store i32* %cond33, i32** %value2, align 8, !dbg !7092, !tbaa !1941
  store i64 -1, i64* %len1, align 8, !dbg !7093, !tbaa !2587
  store i64 -1, i64* %len2, align 8, !dbg !7094, !tbaa !2587
  %37 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !7095, !tbaa !1941
  %call34 = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %37, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.319, i32 0, i32 0), i32** %value1, i64* %len1, i32** %value2, i64* %len2), !dbg !7097
  %cmp35 = icmp slt i32 %call34, 0, !dbg !7098
  br i1 %cmp35, label %if.then.36, label %if.end.37, !dbg !7099

if.then.36:                                       ; preds = %cond.end.32
  store %struct._object* null, %struct._object** %retval, !dbg !7100
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7100

if.end.37:                                        ; preds = %cond.end.32
  %38 = load i32*, i32** %value1, align 8, !dbg !7101, !tbaa !1941
  %39 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7103, !tbaa !1941
  %40 = bitcast %struct._object* %39 to %struct.PyASCIIObject*, !dbg !7104
  %wstr38 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %40, i32 0, i32 4, !dbg !7105
  %41 = load i32*, i32** %wstr38, align 8, !dbg !7105, !tbaa !6872
  %tobool39 = icmp ne i32* %41, null, !dbg !7106
  br i1 %tobool39, label %cond.true.40, label %cond.false.42, !dbg !7106

cond.true.40:                                     ; preds = %if.end.37
  %42 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7107, !tbaa !1941
  %43 = bitcast %struct._object* %42 to %struct.PyASCIIObject*, !dbg !7109
  %wstr41 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %43, i32 0, i32 4, !dbg !7110
  %44 = load i32*, i32** %wstr41, align 8, !dbg !7110, !tbaa !6872
  br label %cond.end.44, !dbg !7106

cond.false.42:                                    ; preds = %if.end.37
  %45 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7111, !tbaa !1941
  %call43 = call i32* @PyUnicode_AsUnicode(%struct._object* %45), !dbg !7113
  br label %cond.end.44, !dbg !7106

cond.end.44:                                      ; preds = %cond.false.42, %cond.true.40
  %cond45 = phi i32* [ %44, %cond.true.40 ], [ %call43, %cond.false.42 ], !dbg !7106
  %cmp46 = icmp ne i32* %38, %cond45, !dbg !7114
  br i1 %cmp46, label %if.then.82, label %lor.lhs.false, !dbg !7117

lor.lhs.false:                                    ; preds = %cond.end.44
  %46 = load i64, i64* %len1, align 8, !dbg !7118, !tbaa !2587
  %47 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7119, !tbaa !1941
  %48 = bitcast %struct._object* %47 to %struct.PyASCIIObject*, !dbg !7120
  %wstr47 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %48, i32 0, i32 4, !dbg !7121
  %49 = load i32*, i32** %wstr47, align 8, !dbg !7121, !tbaa !6872
  %tobool48 = icmp ne i32* %49, null, !dbg !7122
  br i1 %tobool48, label %cond.true.49, label %cond.false.60, !dbg !7122

cond.true.49:                                     ; preds = %lor.lhs.false
  %50 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7123, !tbaa !1941
  %51 = bitcast %struct._object* %50 to %struct.PyASCIIObject*, !dbg !7124
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %51, i32 0, i32 3, !dbg !7125
  %52 = bitcast %struct.anon* %state to i32*, !dbg !7126
  %bf.load = load i32, i32* %52, align 4, !dbg !7126
  %bf.lshr = lshr i32 %bf.load, 6, !dbg !7126
  %bf.clear = and i32 %bf.lshr, 1, !dbg !7126
  %tobool50 = icmp ne i32 %bf.clear, 0, !dbg !7127
  br i1 %tobool50, label %land.lhs.true, label %cond.false.57, !dbg !7128

land.lhs.true:                                    ; preds = %cond.true.49
  %53 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7129, !tbaa !1941
  %54 = bitcast %struct._object* %53 to %struct.PyASCIIObject*, !dbg !7130
  %state51 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %54, i32 0, i32 3, !dbg !7131
  %55 = bitcast %struct.anon* %state51 to i32*, !dbg !7132
  %bf.load52 = load i32, i32* %55, align 4, !dbg !7132
  %bf.lshr53 = lshr i32 %bf.load52, 5, !dbg !7132
  %bf.clear54 = and i32 %bf.lshr53, 1, !dbg !7132
  %tobool55 = icmp ne i32 %bf.clear54, 0, !dbg !7133
  br i1 %tobool55, label %cond.true.56, label %cond.false.57, !dbg !7134

cond.true.56:                                     ; preds = %land.lhs.true
  %56 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7135, !tbaa !1941
  %57 = bitcast %struct._object* %56 to %struct.PyASCIIObject*, !dbg !7137
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %57, i32 0, i32 1, !dbg !7138
  %58 = load i64, i64* %length, align 8, !dbg !7138, !tbaa !6934
  br label %cond.end.58, !dbg !7134

cond.false.57:                                    ; preds = %land.lhs.true, %cond.true.49
  %59 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7139, !tbaa !1941
  %60 = bitcast %struct._object* %59 to %struct.PyCompactUnicodeObject*, !dbg !7142
  %wstr_length = getelementptr inbounds %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %60, i32 0, i32 3, !dbg !7143
  %61 = load i64, i64* %wstr_length, align 8, !dbg !7143, !tbaa !6940
  br label %cond.end.58, !dbg !7134

cond.end.58:                                      ; preds = %cond.false.57, %cond.true.56
  %cond59 = phi i64 [ %58, %cond.true.56 ], [ %61, %cond.false.57 ], !dbg !7134
  br label %cond.end.79, !dbg !7144

cond.false.60:                                    ; preds = %lor.lhs.false
  %62 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7147, !tbaa !1941
  %call61 = call i32* @PyUnicode_AsUnicode(%struct._object* %62), !dbg !7148
  %63 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7149, !tbaa !1941
  %64 = bitcast %struct._object* %63 to %struct.PyASCIIObject*, !dbg !7150
  %state62 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %64, i32 0, i32 3, !dbg !7151
  %65 = bitcast %struct.anon* %state62 to i32*, !dbg !7152
  %bf.load63 = load i32, i32* %65, align 4, !dbg !7152
  %bf.lshr64 = lshr i32 %bf.load63, 6, !dbg !7152
  %bf.clear65 = and i32 %bf.lshr64, 1, !dbg !7152
  %tobool66 = icmp ne i32 %bf.clear65, 0, !dbg !7153
  br i1 %tobool66, label %land.lhs.true.67, label %cond.false.75, !dbg !7154

land.lhs.true.67:                                 ; preds = %cond.false.60
  %66 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7155, !tbaa !1941
  %67 = bitcast %struct._object* %66 to %struct.PyASCIIObject*, !dbg !7157
  %state68 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %67, i32 0, i32 3, !dbg !7158
  %68 = bitcast %struct.anon* %state68 to i32*, !dbg !7159
  %bf.load69 = load i32, i32* %68, align 4, !dbg !7159
  %bf.lshr70 = lshr i32 %bf.load69, 5, !dbg !7159
  %bf.clear71 = and i32 %bf.lshr70, 1, !dbg !7159
  %tobool72 = icmp ne i32 %bf.clear71, 0, !dbg !7160
  br i1 %tobool72, label %cond.true.73, label %cond.false.75, !dbg !7161

cond.true.73:                                     ; preds = %land.lhs.true.67
  %69 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7162, !tbaa !1941
  %70 = bitcast %struct._object* %69 to %struct.PyASCIIObject*, !dbg !7164
  %length74 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %70, i32 0, i32 1, !dbg !7165
  %71 = load i64, i64* %length74, align 8, !dbg !7165, !tbaa !6934
  br label %cond.end.77, !dbg !7161

cond.false.75:                                    ; preds = %land.lhs.true.67, %cond.false.60
  %72 = load %struct._object*, %struct._object** %obj, align 8, !dbg !7166, !tbaa !1941
  %73 = bitcast %struct._object* %72 to %struct.PyCompactUnicodeObject*, !dbg !7169
  %wstr_length76 = getelementptr inbounds %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %73, i32 0, i32 3, !dbg !7170
  %74 = load i64, i64* %wstr_length76, align 8, !dbg !7170, !tbaa !6940
  br label %cond.end.77, !dbg !7161

cond.end.77:                                      ; preds = %cond.false.75, %cond.true.73
  %cond78 = phi i64 [ %71, %cond.true.73 ], [ %74, %cond.false.75 ], !dbg !7161
  br label %cond.end.79, !dbg !7171

cond.end.79:                                      ; preds = %cond.end.77, %cond.end.58
  %cond80 = phi i64 [ %cond59, %cond.end.58 ], [ %cond78, %cond.end.77 ], !dbg !7122
  %cmp81 = icmp ne i64 %46, %cond80, !dbg !7174
  br i1 %cmp81, label %if.then.82, label %if.end.84, !dbg !7177

if.then.82:                                       ; preds = %cond.end.79, %cond.end.44
  %call83 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.320, i32 0, i32 0)), !dbg !7178
  store %struct._object* %call83, %struct._object** %retval, !dbg !7179
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7179

if.end.84:                                        ; preds = %cond.end.79
  %75 = load i32*, i32** %value2, align 8, !dbg !7180, !tbaa !1941
  %cmp85 = icmp ne i32* %75, null, !dbg !7182
  br i1 %cmp85, label %if.then.88, label %lor.lhs.false.86, !dbg !7183

lor.lhs.false.86:                                 ; preds = %if.end.84
  %76 = load i64, i64* %len2, align 8, !dbg !7184, !tbaa !2587
  %cmp87 = icmp ne i64 %76, 0, !dbg !7185
  br i1 %cmp87, label %if.then.88, label %if.end.90, !dbg !7186

if.then.88:                                       ; preds = %lor.lhs.false.86, %if.end.84
  %call89 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.321, i32 0, i32 0)), !dbg !7187
  store %struct._object* %call89, %struct._object** %retval, !dbg !7188
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7188

if.end.90:                                        ; preds = %lor.lhs.false.86
  br label %do.body, !dbg !7189

do.body:                                          ; preds = %if.end.90
  %77 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7190
  call void @llvm.lifetime.start(i64 8, i8* %77) #2, !dbg !7190
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1398, metadata !1945), !dbg !7192
  %78 = load %struct._object*, %struct._object** %tuple, align 8, !dbg !7193, !tbaa !1941
  store %struct._object* %78, %struct._object** %_py_decref_tmp, align 8, !dbg !7192, !tbaa !1941
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7194, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %79, i32 0, i32 0, !dbg !7196
  %80 = load i64, i64* %ob_refcnt, align 8, !dbg !7197, !tbaa !1961
  %dec = add i64 %80, -1, !dbg !7197
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7197, !tbaa !1961
  %cmp91 = icmp ne i64 %dec, 0, !dbg !7198
  br i1 %cmp91, label %if.then.92, label %if.else, !dbg !7199

if.then.92:                                       ; preds = %do.body
  br label %if.end.93, !dbg !7200

if.else:                                          ; preds = %do.body
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7202, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %81, i32 0, i32 1, !dbg !7204
  %82 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7204, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %82, i32 0, i32 4, !dbg !7205
  %83 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7205, !tbaa !1997
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7206, !tbaa !1941
  call void %83(%struct._object* %84), !dbg !7207
  br label %if.end.93

if.end.93:                                        ; preds = %if.else, %if.then.92
  %85 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7208
  call void @llvm.lifetime.end(i64 8, i8* %85) #2, !dbg !7208
  br label %do.cond, !dbg !7210

do.cond:                                          ; preds = %if.end.93
  br label %do.end, !dbg !7211

do.end:                                           ; preds = %do.cond
  %86 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7213, !tbaa !1961
  %inc94 = add i64 %86, 1, !dbg !7213
  store i64 %inc94, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7213, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !7214
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7214

cleanup:                                          ; preds = %do.end, %if.then.88, %if.then.82, %if.then.36, %if.then.23, %if.then.19, %if.then.8, %if.then
  %87 = bitcast i64* %len2 to i8*, !dbg !7215
  call void @llvm.lifetime.end(i64 8, i8* %87) #2, !dbg !7215
  %88 = bitcast i64* %len1 to i8*, !dbg !7215
  call void @llvm.lifetime.end(i64 8, i8* %88) #2, !dbg !7215
  %89 = bitcast i32** %value2 to i8*, !dbg !7215
  call void @llvm.lifetime.end(i64 8, i8* %89) #2, !dbg !7215
  %90 = bitcast i32** %value1 to i8*, !dbg !7215
  call void @llvm.lifetime.end(i64 8, i8* %90) #2, !dbg !7215
  %91 = bitcast %struct._object** %obj to i8*, !dbg !7215
  call void @llvm.lifetime.end(i64 8, i8* %91) #2, !dbg !7215
  %92 = bitcast %struct._object** %tuple to i8*, !dbg !7215
  call void @llvm.lifetime.end(i64 8, i8* %92) #2, !dbg !7215
  %93 = load %struct._object*, %struct._object** %retval, !dbg !7215
  ret %struct._object* %93, !dbg !7215
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_widechar(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %wtextlen = alloca i64, align 8
  %wide = alloca %struct._object*, align 8
  %utf8 = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp12 = alloca %struct._object*, align 8
  %_py_decref_tmp24 = alloca %struct._object*, align 8
  %_py_decref_tmp40 = alloca %struct._object*, align 8
  %_py_decref_tmp52 = alloca %struct._object*, align 8
  %_py_decref_tmp70 = alloca %struct._object*, align 8
  %_py_decref_tmp82 = alloca %struct._object*, align 8
  %_py_decref_tmp116 = alloca %struct._object*, align 8
  %_py_decref_tmp129 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1402, metadata !1945), !dbg !7216
  %0 = bitcast i64* %wtextlen to i8*, !dbg !7217
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7217
  call void @llvm.dbg.declare(metadata i64* %wtextlen, metadata !1403, metadata !1945), !dbg !7218
  store i64 1, i64* %wtextlen, align 8, !dbg !7218, !tbaa !2587
  %1 = bitcast %struct._object** %wide to i8*, !dbg !7219
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !7219
  call void @llvm.dbg.declare(metadata %struct._object** %wide, metadata !1404, metadata !1945), !dbg !7220
  %2 = bitcast %struct._object** %utf8 to i8*, !dbg !7219
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !7219
  call void @llvm.dbg.declare(metadata %struct._object** %utf8, metadata !1405, metadata !1945), !dbg !7221
  %3 = load i64, i64* %wtextlen, align 8, !dbg !7222, !tbaa !2587
  %call = call %struct._object* @PyUnicode_FromWideChar(i32* getelementptr inbounds ([2 x i32], [2 x i32]* @test_widechar.wtext, i32 0, i32 0), i64 %3), !dbg !7223
  store %struct._object* %call, %struct._object** %wide, align 8, !dbg !7224, !tbaa !1941
  %4 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7225, !tbaa !1941
  %cmp = icmp eq %struct._object* %4, null, !dbg !7227
  br i1 %cmp, label %if.then, label %if.end, !dbg !7228

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7229
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7229

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyUnicode_FromString(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.322, i32 0, i32 0)), !dbg !7230
  store %struct._object* %call1, %struct._object** %utf8, align 8, !dbg !7231, !tbaa !1941
  %5 = load %struct._object*, %struct._object** %utf8, align 8, !dbg !7232, !tbaa !1941
  %cmp2 = icmp eq %struct._object* %5, null, !dbg !7233
  br i1 %cmp2, label %if.then.3, label %if.end.7, !dbg !7234

if.then.3:                                        ; preds = %if.end
  br label %do.body, !dbg !7235

do.body:                                          ; preds = %if.then.3
  %6 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7236
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !7236
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1406, metadata !1945), !dbg !7238
  %7 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7239, !tbaa !1941
  store %struct._object* %7, %struct._object** %_py_decref_tmp, align 8, !dbg !7238, !tbaa !1941
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7240, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !7242
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !7243, !tbaa !1961
  %dec = add i64 %9, -1, !dbg !7243
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7243, !tbaa !1961
  %cmp4 = icmp ne i64 %dec, 0, !dbg !7244
  br i1 %cmp4, label %if.then.5, label %if.else, !dbg !7245

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !7246

if.else:                                          ; preds = %do.body
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7248, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 1, !dbg !7250
  %11 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7250, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %11, i32 0, i32 4, !dbg !7251
  %12 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7251, !tbaa !1997
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7252, !tbaa !1941
  call void %12(%struct._object* %13), !dbg !7253
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7254
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !7254
  br label %do.cond, !dbg !7256

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !7257

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !7259
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7259

if.end.7:                                         ; preds = %if.end
  %15 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7260, !tbaa !1941
  %16 = bitcast %struct._object* %15 to %struct.PyASCIIObject*, !dbg !7261
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %16, i32 0, i32 1, !dbg !7262
  %17 = load i64, i64* %length, align 8, !dbg !7262, !tbaa !6934
  %18 = load %struct._object*, %struct._object** %utf8, align 8, !dbg !7263, !tbaa !1941
  %19 = bitcast %struct._object* %18 to %struct.PyASCIIObject*, !dbg !7264
  %length8 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %19, i32 0, i32 1, !dbg !7265
  %20 = load i64, i64* %length8, align 8, !dbg !7265, !tbaa !6934
  %cmp9 = icmp ne i64 %17, %20, !dbg !7266
  br i1 %cmp9, label %if.then.10, label %if.end.36, !dbg !7267

if.then.10:                                       ; preds = %if.end.7
  br label %do.body.11, !dbg !7268

do.body.11:                                       ; preds = %if.then.10
  %21 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !7269
  call void @llvm.lifetime.start(i64 8, i8* %21) #2, !dbg !7269
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp12, metadata !1410, metadata !1945), !dbg !7271
  %22 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7272, !tbaa !1941
  store %struct._object* %22, %struct._object** %_py_decref_tmp12, align 8, !dbg !7271, !tbaa !1941
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !7273, !tbaa !1941
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0, !dbg !7275
  %24 = load i64, i64* %ob_refcnt13, align 8, !dbg !7276, !tbaa !1961
  %dec14 = add i64 %24, -1, !dbg !7276
  store i64 %dec14, i64* %ob_refcnt13, align 8, !dbg !7276, !tbaa !1961
  %cmp15 = icmp ne i64 %dec14, 0, !dbg !7277
  br i1 %cmp15, label %if.then.16, label %if.else.17, !dbg !7278

if.then.16:                                       ; preds = %do.body.11
  br label %if.end.20, !dbg !7279

if.else.17:                                       ; preds = %do.body.11
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !7281, !tbaa !1941
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 1, !dbg !7283
  %26 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8, !dbg !7283, !tbaa !1995
  %tp_dealloc19 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %26, i32 0, i32 4, !dbg !7284
  %27 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc19, align 8, !dbg !7284, !tbaa !1997
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp12, align 8, !dbg !7285, !tbaa !1941
  call void %27(%struct._object* %28), !dbg !7286
  br label %if.end.20

if.end.20:                                        ; preds = %if.else.17, %if.then.16
  %29 = bitcast %struct._object** %_py_decref_tmp12 to i8*, !dbg !7287
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !7287
  br label %do.cond.21, !dbg !7289

do.cond.21:                                       ; preds = %if.end.20
  br label %do.end.22, !dbg !7290

do.end.22:                                        ; preds = %do.cond.21
  br label %do.body.23, !dbg !7292

do.body.23:                                       ; preds = %do.end.22
  %30 = bitcast %struct._object** %_py_decref_tmp24 to i8*, !dbg !7293
  call void @llvm.lifetime.start(i64 8, i8* %30) #2, !dbg !7293
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp24, metadata !1414, metadata !1945), !dbg !7295
  %31 = load %struct._object*, %struct._object** %utf8, align 8, !dbg !7296, !tbaa !1941
  store %struct._object* %31, %struct._object** %_py_decref_tmp24, align 8, !dbg !7295, !tbaa !1941
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp24, align 8, !dbg !7297, !tbaa !1941
  %ob_refcnt25 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !7299
  %33 = load i64, i64* %ob_refcnt25, align 8, !dbg !7300, !tbaa !1961
  %dec26 = add i64 %33, -1, !dbg !7300
  store i64 %dec26, i64* %ob_refcnt25, align 8, !dbg !7300, !tbaa !1961
  %cmp27 = icmp ne i64 %dec26, 0, !dbg !7301
  br i1 %cmp27, label %if.then.28, label %if.else.29, !dbg !7302

if.then.28:                                       ; preds = %do.body.23
  br label %if.end.32, !dbg !7303

if.else.29:                                       ; preds = %do.body.23
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp24, align 8, !dbg !7305, !tbaa !1941
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1, !dbg !7307
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !7307, !tbaa !1995
  %tp_dealloc31 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4, !dbg !7308
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc31, align 8, !dbg !7308, !tbaa !1997
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp24, align 8, !dbg !7309, !tbaa !1941
  call void %36(%struct._object* %37), !dbg !7310
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.29, %if.then.28
  %38 = bitcast %struct._object** %_py_decref_tmp24 to i8*, !dbg !7311
  call void @llvm.lifetime.end(i64 8, i8* %38) #2, !dbg !7311
  br label %do.cond.33, !dbg !7312

do.cond.33:                                       ; preds = %if.end.32
  br label %do.end.34, !dbg !7313

do.end.34:                                        ; preds = %do.cond.33
  %call35 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.323, i32 0, i32 0)), !dbg !7315
  store %struct._object* %call35, %struct._object** %retval, !dbg !7316
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7316

if.end.36:                                        ; preds = %if.end.7
  %39 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7317, !tbaa !1941
  %40 = load %struct._object*, %struct._object** %utf8, align 8, !dbg !7318, !tbaa !1941
  %call37 = call i32 @PyUnicode_Compare(%struct._object* %39, %struct._object* %40), !dbg !7319
  %tobool = icmp ne i32 %call37, 0, !dbg !7319
  br i1 %tobool, label %if.then.38, label %if.end.68, !dbg !7320

if.then.38:                                       ; preds = %if.end.36
  br label %do.body.39, !dbg !7321

do.body.39:                                       ; preds = %if.then.38
  %41 = bitcast %struct._object** %_py_decref_tmp40 to i8*, !dbg !7322
  call void @llvm.lifetime.start(i64 8, i8* %41) #2, !dbg !7322
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp40, metadata !1416, metadata !1945), !dbg !7324
  %42 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7325, !tbaa !1941
  store %struct._object* %42, %struct._object** %_py_decref_tmp40, align 8, !dbg !7324, !tbaa !1941
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !7326, !tbaa !1941
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 0, !dbg !7328
  %44 = load i64, i64* %ob_refcnt41, align 8, !dbg !7329, !tbaa !1961
  %dec42 = add i64 %44, -1, !dbg !7329
  store i64 %dec42, i64* %ob_refcnt41, align 8, !dbg !7329, !tbaa !1961
  %cmp43 = icmp ne i64 %dec42, 0, !dbg !7330
  br i1 %cmp43, label %if.then.44, label %if.else.45, !dbg !7331

if.then.44:                                       ; preds = %do.body.39
  br label %if.end.48, !dbg !7332

if.else.45:                                       ; preds = %do.body.39
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !7334, !tbaa !1941
  %ob_type46 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1, !dbg !7336
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type46, align 8, !dbg !7336, !tbaa !1995
  %tp_dealloc47 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 4, !dbg !7337
  %47 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc47, align 8, !dbg !7337, !tbaa !1997
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8, !dbg !7338, !tbaa !1941
  call void %47(%struct._object* %48), !dbg !7339
  br label %if.end.48

if.end.48:                                        ; preds = %if.else.45, %if.then.44
  %49 = bitcast %struct._object** %_py_decref_tmp40 to i8*, !dbg !7340
  call void @llvm.lifetime.end(i64 8, i8* %49) #2, !dbg !7340
  br label %do.cond.49, !dbg !7342

do.cond.49:                                       ; preds = %if.end.48
  br label %do.end.50, !dbg !7343

do.end.50:                                        ; preds = %do.cond.49
  br label %do.body.51, !dbg !7345

do.body.51:                                       ; preds = %do.end.50
  %50 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !7346
  call void @llvm.lifetime.start(i64 8, i8* %50) #2, !dbg !7346
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp52, metadata !1420, metadata !1945), !dbg !7348
  %51 = load %struct._object*, %struct._object** %utf8, align 8, !dbg !7349, !tbaa !1941
  store %struct._object* %51, %struct._object** %_py_decref_tmp52, align 8, !dbg !7348, !tbaa !1941
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !7350, !tbaa !1941
  %ob_refcnt53 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 0, !dbg !7352
  %53 = load i64, i64* %ob_refcnt53, align 8, !dbg !7353, !tbaa !1961
  %dec54 = add i64 %53, -1, !dbg !7353
  store i64 %dec54, i64* %ob_refcnt53, align 8, !dbg !7353, !tbaa !1961
  %cmp55 = icmp ne i64 %dec54, 0, !dbg !7354
  br i1 %cmp55, label %if.then.56, label %if.else.57, !dbg !7355

if.then.56:                                       ; preds = %do.body.51
  br label %if.end.60, !dbg !7356

if.else.57:                                       ; preds = %do.body.51
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !7358, !tbaa !1941
  %ob_type58 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 1, !dbg !7360
  %55 = load %struct._typeobject*, %struct._typeobject** %ob_type58, align 8, !dbg !7360, !tbaa !1995
  %tp_dealloc59 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %55, i32 0, i32 4, !dbg !7361
  %56 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc59, align 8, !dbg !7361, !tbaa !1997
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp52, align 8, !dbg !7362, !tbaa !1941
  call void %56(%struct._object* %57), !dbg !7363
  br label %if.end.60

if.end.60:                                        ; preds = %if.else.57, %if.then.56
  %58 = bitcast %struct._object** %_py_decref_tmp52 to i8*, !dbg !7364
  call void @llvm.lifetime.end(i64 8, i8* %58) #2, !dbg !7364
  br label %do.cond.61, !dbg !7365

do.cond.61:                                       ; preds = %if.end.60
  br label %do.end.62, !dbg !7366

do.end.62:                                        ; preds = %do.cond.61
  %call63 = call %struct._object* @PyErr_Occurred(), !dbg !7368
  %tobool64 = icmp ne %struct._object* %call63, null, !dbg !7368
  br i1 %tobool64, label %if.then.65, label %if.end.66, !dbg !7370

if.then.65:                                       ; preds = %do.end.62
  store %struct._object* null, %struct._object** %retval, !dbg !7371
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7371

if.end.66:                                        ; preds = %do.end.62
  %call67 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.324, i32 0, i32 0)), !dbg !7372
  store %struct._object* %call67, %struct._object** %retval, !dbg !7373
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7373

if.end.68:                                        ; preds = %if.end.36
  br label %do.body.69, !dbg !7374

do.body.69:                                       ; preds = %if.end.68
  %59 = bitcast %struct._object** %_py_decref_tmp70 to i8*, !dbg !7375
  call void @llvm.lifetime.start(i64 8, i8* %59) #2, !dbg !7375
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp70, metadata !1422, metadata !1945), !dbg !7377
  %60 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7378, !tbaa !1941
  store %struct._object* %60, %struct._object** %_py_decref_tmp70, align 8, !dbg !7377, !tbaa !1941
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8, !dbg !7379, !tbaa !1941
  %ob_refcnt71 = getelementptr inbounds %struct._object, %struct._object* %61, i32 0, i32 0, !dbg !7381
  %62 = load i64, i64* %ob_refcnt71, align 8, !dbg !7382, !tbaa !1961
  %dec72 = add i64 %62, -1, !dbg !7382
  store i64 %dec72, i64* %ob_refcnt71, align 8, !dbg !7382, !tbaa !1961
  %cmp73 = icmp ne i64 %dec72, 0, !dbg !7383
  br i1 %cmp73, label %if.then.74, label %if.else.75, !dbg !7384

if.then.74:                                       ; preds = %do.body.69
  br label %if.end.78, !dbg !7385

if.else.75:                                       ; preds = %do.body.69
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8, !dbg !7387, !tbaa !1941
  %ob_type76 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 1, !dbg !7389
  %64 = load %struct._typeobject*, %struct._typeobject** %ob_type76, align 8, !dbg !7389, !tbaa !1995
  %tp_dealloc77 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %64, i32 0, i32 4, !dbg !7390
  %65 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc77, align 8, !dbg !7390, !tbaa !1997
  %66 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8, !dbg !7391, !tbaa !1941
  call void %65(%struct._object* %66), !dbg !7392
  br label %if.end.78

if.end.78:                                        ; preds = %if.else.75, %if.then.74
  %67 = bitcast %struct._object** %_py_decref_tmp70 to i8*, !dbg !7393
  call void @llvm.lifetime.end(i64 8, i8* %67) #2, !dbg !7393
  br label %do.cond.79, !dbg !7395

do.cond.79:                                       ; preds = %if.end.78
  br label %do.end.80, !dbg !7396

do.end.80:                                        ; preds = %do.cond.79
  br label %do.body.81, !dbg !7398

do.body.81:                                       ; preds = %do.end.80
  %68 = bitcast %struct._object** %_py_decref_tmp82 to i8*, !dbg !7399
  call void @llvm.lifetime.start(i64 8, i8* %68) #2, !dbg !7399
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp82, metadata !1424, metadata !1945), !dbg !7401
  %69 = load %struct._object*, %struct._object** %utf8, align 8, !dbg !7402, !tbaa !1941
  store %struct._object* %69, %struct._object** %_py_decref_tmp82, align 8, !dbg !7401, !tbaa !1941
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8, !dbg !7403, !tbaa !1941
  %ob_refcnt83 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 0, !dbg !7405
  %71 = load i64, i64* %ob_refcnt83, align 8, !dbg !7406, !tbaa !1961
  %dec84 = add i64 %71, -1, !dbg !7406
  store i64 %dec84, i64* %ob_refcnt83, align 8, !dbg !7406, !tbaa !1961
  %cmp85 = icmp ne i64 %dec84, 0, !dbg !7407
  br i1 %cmp85, label %if.then.86, label %if.else.87, !dbg !7408

if.then.86:                                       ; preds = %do.body.81
  br label %if.end.90, !dbg !7409

if.else.87:                                       ; preds = %do.body.81
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8, !dbg !7411, !tbaa !1941
  %ob_type88 = getelementptr inbounds %struct._object, %struct._object* %72, i32 0, i32 1, !dbg !7413
  %73 = load %struct._typeobject*, %struct._typeobject** %ob_type88, align 8, !dbg !7413, !tbaa !1995
  %tp_dealloc89 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %73, i32 0, i32 4, !dbg !7414
  %74 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc89, align 8, !dbg !7414, !tbaa !1997
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8, !dbg !7415, !tbaa !1941
  call void %74(%struct._object* %75), !dbg !7416
  br label %if.end.90

if.end.90:                                        ; preds = %if.else.87, %if.then.86
  %76 = bitcast %struct._object** %_py_decref_tmp82 to i8*, !dbg !7417
  call void @llvm.lifetime.end(i64 8, i8* %76) #2, !dbg !7417
  br label %do.cond.91, !dbg !7418

do.cond.91:                                       ; preds = %if.end.90
  br label %do.end.92, !dbg !7419

do.end.92:                                        ; preds = %do.cond.91
  %call93 = call %struct._object* @PyUnicode_FromWideChar(i32* getelementptr inbounds ([1 x i32], [1 x i32]* @test_widechar.invalid, i32 0, i32 0), i64 1), !dbg !7421
  store %struct._object* %call93, %struct._object** %wide, align 8, !dbg !7422, !tbaa !1941
  %77 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7423, !tbaa !1941
  %cmp94 = icmp eq %struct._object* %77, null, !dbg !7425
  br i1 %cmp94, label %if.then.95, label %if.else.96, !dbg !7426

if.then.95:                                       ; preds = %do.end.92
  call void @PyErr_Clear(), !dbg !7427
  br label %if.end.98, !dbg !7427

if.else.96:                                       ; preds = %do.end.92
  %call97 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.325, i32 0, i32 0)), !dbg !7428
  store %struct._object* %call97, %struct._object** %retval, !dbg !7429
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7429

if.end.98:                                        ; preds = %if.then.95
  %call99 = call %struct._object* @PyUnicode_FromUnicode(i32* getelementptr inbounds ([1 x i32], [1 x i32]* @test_widechar.invalid, i32 0, i32 0), i64 1), !dbg !7430
  store %struct._object* %call99, %struct._object** %wide, align 8, !dbg !7431, !tbaa !1941
  %78 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7432, !tbaa !1941
  %cmp100 = icmp eq %struct._object* %78, null, !dbg !7434
  br i1 %cmp100, label %if.then.101, label %if.else.102, !dbg !7435

if.then.101:                                      ; preds = %if.end.98
  call void @PyErr_Clear(), !dbg !7436
  br label %if.end.104, !dbg !7436

if.else.102:                                      ; preds = %if.end.98
  %call103 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.326, i32 0, i32 0)), !dbg !7437
  store %struct._object* %call103, %struct._object** %retval, !dbg !7438
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7438

if.end.104:                                       ; preds = %if.then.101
  %call105 = call %struct._object* @PyUnicode_FromUnicode(i32* null, i64 1), !dbg !7439
  store %struct._object* %call105, %struct._object** %wide, align 8, !dbg !7440, !tbaa !1941
  %79 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7441, !tbaa !1941
  %cmp106 = icmp eq %struct._object* %79, null, !dbg !7443
  br i1 %cmp106, label %if.then.107, label %if.end.108, !dbg !7444

if.then.107:                                      ; preds = %if.end.104
  store %struct._object* null, %struct._object** %retval, !dbg !7445
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7445

if.end.108:                                       ; preds = %if.end.104
  %80 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @test_widechar.invalid, i32 0, i64 0), align 4, !dbg !7446, !tbaa !1971
  %81 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7447, !tbaa !1941
  %82 = bitcast %struct._object* %81 to %struct.PyASCIIObject*, !dbg !7448
  %wstr = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %82, i32 0, i32 4, !dbg !7449
  %83 = load i32*, i32** %wstr, align 8, !dbg !7449, !tbaa !6872
  %tobool109 = icmp ne i32* %83, null, !dbg !7450
  br i1 %tobool109, label %cond.true, label %cond.false, !dbg !7450

cond.true:                                        ; preds = %if.end.108
  %84 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7451, !tbaa !1941
  %85 = bitcast %struct._object* %84 to %struct.PyASCIIObject*, !dbg !7453
  %wstr110 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %85, i32 0, i32 4, !dbg !7454
  %86 = load i32*, i32** %wstr110, align 8, !dbg !7454, !tbaa !6872
  br label %cond.end, !dbg !7450

cond.false:                                       ; preds = %if.end.108
  %87 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7455, !tbaa !1941
  %call111 = call i32* @PyUnicode_AsUnicode(%struct._object* %87), !dbg !7457
  br label %cond.end, !dbg !7450

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %86, %cond.true ], [ %call111, %cond.false ], !dbg !7450
  %arrayidx = getelementptr i32, i32* %cond, i64 0, !dbg !7458
  store i32 %80, i32* %arrayidx, align 4, !dbg !7461, !tbaa !1971
  %88 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7462, !tbaa !1941
  %call112 = call i32 @_PyUnicode_Ready(%struct._object* %88), !dbg !7463
  %cmp113 = icmp slt i32 %call112, 0, !dbg !7464
  br i1 %cmp113, label %if.then.114, label %if.else.127, !dbg !7465

if.then.114:                                      ; preds = %cond.end
  br label %do.body.115, !dbg !7466

do.body.115:                                      ; preds = %if.then.114
  %89 = bitcast %struct._object** %_py_decref_tmp116 to i8*, !dbg !7467
  call void @llvm.lifetime.start(i64 8, i8* %89) #2, !dbg !7467
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp116, metadata !1426, metadata !1945), !dbg !7469
  %90 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7470, !tbaa !1941
  store %struct._object* %90, %struct._object** %_py_decref_tmp116, align 8, !dbg !7469, !tbaa !1941
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp116, align 8, !dbg !7471, !tbaa !1941
  %ob_refcnt117 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 0, !dbg !7473
  %92 = load i64, i64* %ob_refcnt117, align 8, !dbg !7474, !tbaa !1961
  %dec118 = add i64 %92, -1, !dbg !7474
  store i64 %dec118, i64* %ob_refcnt117, align 8, !dbg !7474, !tbaa !1961
  %cmp119 = icmp ne i64 %dec118, 0, !dbg !7475
  br i1 %cmp119, label %if.then.120, label %if.else.121, !dbg !7476

if.then.120:                                      ; preds = %do.body.115
  br label %if.end.124, !dbg !7477

if.else.121:                                      ; preds = %do.body.115
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp116, align 8, !dbg !7479, !tbaa !1941
  %ob_type122 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 1, !dbg !7481
  %94 = load %struct._typeobject*, %struct._typeobject** %ob_type122, align 8, !dbg !7481, !tbaa !1995
  %tp_dealloc123 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %94, i32 0, i32 4, !dbg !7482
  %95 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc123, align 8, !dbg !7482, !tbaa !1997
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp116, align 8, !dbg !7483, !tbaa !1941
  call void %95(%struct._object* %96), !dbg !7484
  br label %if.end.124

if.end.124:                                       ; preds = %if.else.121, %if.then.120
  %97 = bitcast %struct._object** %_py_decref_tmp116 to i8*, !dbg !7485
  call void @llvm.lifetime.end(i64 8, i8* %97) #2, !dbg !7485
  br label %do.cond.125, !dbg !7487

do.cond.125:                                      ; preds = %if.end.124
  br label %do.end.126, !dbg !7488

do.end.126:                                       ; preds = %do.cond.125
  call void @PyErr_Clear(), !dbg !7490
  br label %if.end.141, !dbg !7491

if.else.127:                                      ; preds = %cond.end
  br label %do.body.128, !dbg !7492

do.body.128:                                      ; preds = %if.else.127
  %98 = bitcast %struct._object** %_py_decref_tmp129 to i8*, !dbg !7493
  call void @llvm.lifetime.start(i64 8, i8* %98) #2, !dbg !7493
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp129, metadata !1430, metadata !1945), !dbg !7495
  %99 = load %struct._object*, %struct._object** %wide, align 8, !dbg !7496, !tbaa !1941
  store %struct._object* %99, %struct._object** %_py_decref_tmp129, align 8, !dbg !7495, !tbaa !1941
  %100 = load %struct._object*, %struct._object** %_py_decref_tmp129, align 8, !dbg !7497, !tbaa !1941
  %ob_refcnt130 = getelementptr inbounds %struct._object, %struct._object* %100, i32 0, i32 0, !dbg !7499
  %101 = load i64, i64* %ob_refcnt130, align 8, !dbg !7500, !tbaa !1961
  %dec131 = add i64 %101, -1, !dbg !7500
  store i64 %dec131, i64* %ob_refcnt130, align 8, !dbg !7500, !tbaa !1961
  %cmp132 = icmp ne i64 %dec131, 0, !dbg !7501
  br i1 %cmp132, label %if.then.133, label %if.else.134, !dbg !7502

if.then.133:                                      ; preds = %do.body.128
  br label %if.end.137, !dbg !7503

if.else.134:                                      ; preds = %do.body.128
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp129, align 8, !dbg !7505, !tbaa !1941
  %ob_type135 = getelementptr inbounds %struct._object, %struct._object* %102, i32 0, i32 1, !dbg !7507
  %103 = load %struct._typeobject*, %struct._typeobject** %ob_type135, align 8, !dbg !7507, !tbaa !1995
  %tp_dealloc136 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %103, i32 0, i32 4, !dbg !7508
  %104 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc136, align 8, !dbg !7508, !tbaa !1997
  %105 = load %struct._object*, %struct._object** %_py_decref_tmp129, align 8, !dbg !7509, !tbaa !1941
  call void %104(%struct._object* %105), !dbg !7510
  br label %if.end.137

if.end.137:                                       ; preds = %if.else.134, %if.then.133
  %106 = bitcast %struct._object** %_py_decref_tmp129 to i8*, !dbg !7511
  call void @llvm.lifetime.end(i64 8, i8* %106) #2, !dbg !7511
  br label %do.cond.138, !dbg !7513

do.cond.138:                                      ; preds = %if.end.137
  br label %do.end.139, !dbg !7514

do.end.139:                                       ; preds = %do.cond.138
  %call140 = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.327, i32 0, i32 0)), !dbg !7516
  store %struct._object* %call140, %struct._object** %retval, !dbg !7517
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7517

if.end.141:                                       ; preds = %do.end.126
  %107 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7518, !tbaa !1961
  %inc = add i64 %107, 1, !dbg !7518
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7518, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !7519
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7519

cleanup:                                          ; preds = %if.end.141, %do.end.139, %if.then.107, %if.else.102, %if.else.96, %if.end.66, %if.then.65, %do.end.34, %do.end, %if.then
  %108 = bitcast %struct._object** %utf8 to i8*, !dbg !7520
  call void @llvm.lifetime.end(i64 8, i8* %108) #2, !dbg !7520
  %109 = bitcast %struct._object** %wide to i8*, !dbg !7520
  call void @llvm.lifetime.end(i64 8, i8* %109) #2, !dbg !7520
  %110 = bitcast i64* %wtextlen to i8*, !dbg !7520
  call void @llvm.lifetime.end(i64 8, i8* %110) #2, !dbg !7520
  %111 = load %struct._object*, %struct._object** %retval, !dbg !7520
  ret %struct._object* %111, !dbg !7520
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @unicode_aswidechar(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %unicode = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %buflen = alloca i64, align 8
  %size = alloca i64, align 8
  %buffer = alloca i32*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1435, metadata !1945), !dbg !7521
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1436, metadata !1945), !dbg !7522
  %0 = bitcast %struct._object** %unicode to i8*, !dbg !7523
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7523
  call void @llvm.dbg.declare(metadata %struct._object** %unicode, metadata !1437, metadata !1945), !dbg !7524
  %1 = bitcast %struct._object** %result to i8*, !dbg !7523
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !7523
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1438, metadata !1945), !dbg !7525
  %2 = bitcast i64* %buflen to i8*, !dbg !7526
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !7526
  call void @llvm.dbg.declare(metadata i64* %buflen, metadata !1439, metadata !1945), !dbg !7527
  %3 = bitcast i64* %size to i8*, !dbg !7526
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !7526
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1440, metadata !1945), !dbg !7528
  %4 = bitcast i32** %buffer to i8*, !dbg !7529
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !7529
  call void @llvm.dbg.declare(metadata i32** %buffer, metadata !1441, metadata !1945), !dbg !7530
  %5 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7531, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.328, i32 0, i32 0), %struct._object** %unicode, i64* %buflen), !dbg !7533
  %tobool = icmp ne i32 %call, 0, !dbg !7533
  br i1 %tobool, label %if.end, label %if.then, !dbg !7534

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7535
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7535

if.end:                                           ; preds = %entry
  %6 = load i64, i64* %buflen, align 8, !dbg !7536, !tbaa !2587
  %mul = mul i64 %6, 4, !dbg !7537
  %call1 = call i8* @PyMem_Malloc(i64 %mul), !dbg !7538
  %7 = bitcast i8* %call1 to i32*, !dbg !7538
  store i32* %7, i32** %buffer, align 8, !dbg !7539, !tbaa !1941
  %8 = load i32*, i32** %buffer, align 8, !dbg !7540, !tbaa !1941
  %cmp = icmp eq i32* %8, null, !dbg !7542
  br i1 %cmp, label %if.then.2, label %if.end.4, !dbg !7543

if.then.2:                                        ; preds = %if.end
  %call3 = call %struct._object* @PyErr_NoMemory(), !dbg !7544
  store %struct._object* %call3, %struct._object** %retval, !dbg !7545
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7545

if.end.4:                                         ; preds = %if.end
  %9 = load %struct._object*, %struct._object** %unicode, align 8, !dbg !7546, !tbaa !1941
  %10 = load i32*, i32** %buffer, align 8, !dbg !7547, !tbaa !1941
  %11 = load i64, i64* %buflen, align 8, !dbg !7548, !tbaa !2587
  %call5 = call i64 @PyUnicode_AsWideChar(%struct._object* %9, i32* %10, i64 %11), !dbg !7549
  store i64 %call5, i64* %size, align 8, !dbg !7550, !tbaa !2587
  %12 = load i64, i64* %size, align 8, !dbg !7551, !tbaa !2587
  %cmp6 = icmp eq i64 %12, -1, !dbg !7553
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !7554

if.then.7:                                        ; preds = %if.end.4
  %13 = load i32*, i32** %buffer, align 8, !dbg !7555, !tbaa !1941
  %14 = bitcast i32* %13 to i8*, !dbg !7555
  call void @PyMem_Free(i8* %14), !dbg !7557
  store %struct._object* null, %struct._object** %retval, !dbg !7558
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7558

if.end.8:                                         ; preds = %if.end.4
  %15 = load i64, i64* %size, align 8, !dbg !7559, !tbaa !2587
  %16 = load i64, i64* %buflen, align 8, !dbg !7561, !tbaa !2587
  %cmp9 = icmp slt i64 %15, %16, !dbg !7562
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !7563

if.then.10:                                       ; preds = %if.end.8
  %17 = load i64, i64* %size, align 8, !dbg !7564, !tbaa !2587
  %add = add i64 %17, 1, !dbg !7565
  store i64 %add, i64* %buflen, align 8, !dbg !7566, !tbaa !2587
  br label %if.end.11, !dbg !7567

if.else:                                          ; preds = %if.end.8
  %18 = load i64, i64* %size, align 8, !dbg !7568, !tbaa !2587
  store i64 %18, i64* %buflen, align 8, !dbg !7569, !tbaa !2587
  br label %if.end.11

if.end.11:                                        ; preds = %if.else, %if.then.10
  %19 = load i32*, i32** %buffer, align 8, !dbg !7570, !tbaa !1941
  %20 = load i64, i64* %buflen, align 8, !dbg !7571, !tbaa !2587
  %call12 = call %struct._object* @PyUnicode_FromWideChar(i32* %19, i64 %20), !dbg !7572
  store %struct._object* %call12, %struct._object** %result, align 8, !dbg !7573, !tbaa !1941
  %21 = load i32*, i32** %buffer, align 8, !dbg !7574, !tbaa !1941
  %22 = bitcast i32* %21 to i8*, !dbg !7574
  call void @PyMem_Free(i8* %22), !dbg !7575
  %23 = load %struct._object*, %struct._object** %result, align 8, !dbg !7576, !tbaa !1941
  %cmp13 = icmp eq %struct._object* %23, null, !dbg !7578
  br i1 %cmp13, label %if.then.14, label %if.end.15, !dbg !7579

if.then.14:                                       ; preds = %if.end.11
  store %struct._object* null, %struct._object** %retval, !dbg !7580
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7580

if.end.15:                                        ; preds = %if.end.11
  %24 = load %struct._object*, %struct._object** %result, align 8, !dbg !7581, !tbaa !1941
  %25 = load i64, i64* %size, align 8, !dbg !7582, !tbaa !2587
  %call16 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0), %struct._object* %24, i64 %25), !dbg !7583
  store %struct._object* %call16, %struct._object** %retval, !dbg !7584
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7584

cleanup:                                          ; preds = %if.end.15, %if.then.14, %if.then.7, %if.then.2, %if.then
  %26 = bitcast i32** %buffer to i8*, !dbg !7585
  call void @llvm.lifetime.end(i64 8, i8* %26) #2, !dbg !7585
  %27 = bitcast i64* %size to i8*, !dbg !7585
  call void @llvm.lifetime.end(i64 8, i8* %27) #2, !dbg !7585
  %28 = bitcast i64* %buflen to i8*, !dbg !7585
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !7585
  %29 = bitcast %struct._object** %result to i8*, !dbg !7585
  call void @llvm.lifetime.end(i64 8, i8* %29) #2, !dbg !7585
  %30 = bitcast %struct._object** %unicode to i8*, !dbg !7585
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !7585
  %31 = load %struct._object*, %struct._object** %retval, !dbg !7585
  ret %struct._object* %31, !dbg !7585
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @unicode_aswidecharstring(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %unicode = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %size = alloca i64, align 8
  %buffer = alloca i32*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1444, metadata !1945), !dbg !7586
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1445, metadata !1945), !dbg !7587
  %0 = bitcast %struct._object** %unicode to i8*, !dbg !7588
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7588
  call void @llvm.dbg.declare(metadata %struct._object** %unicode, metadata !1446, metadata !1945), !dbg !7589
  %1 = bitcast %struct._object** %result to i8*, !dbg !7588
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !7588
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1447, metadata !1945), !dbg !7590
  %2 = bitcast i64* %size to i8*, !dbg !7591
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !7591
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1448, metadata !1945), !dbg !7592
  %3 = bitcast i32** %buffer to i8*, !dbg !7593
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !7593
  call void @llvm.dbg.declare(metadata i32** %buffer, metadata !1449, metadata !1945), !dbg !7594
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7595, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.330, i32 0, i32 0), %struct._object** %unicode), !dbg !7597
  %tobool = icmp ne i32 %call, 0, !dbg !7597
  br i1 %tobool, label %if.end, label %if.then, !dbg !7598

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7599
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7599

if.end:                                           ; preds = %entry
  %5 = load %struct._object*, %struct._object** %unicode, align 8, !dbg !7600, !tbaa !1941
  %call1 = call i32* @PyUnicode_AsWideCharString(%struct._object* %5, i64* %size), !dbg !7601
  store i32* %call1, i32** %buffer, align 8, !dbg !7602, !tbaa !1941
  %6 = load i32*, i32** %buffer, align 8, !dbg !7603, !tbaa !1941
  %cmp = icmp eq i32* %6, null, !dbg !7605
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !7606

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !7607
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7607

if.end.3:                                         ; preds = %if.end
  %7 = load i32*, i32** %buffer, align 8, !dbg !7608, !tbaa !1941
  %8 = load i64, i64* %size, align 8, !dbg !7609, !tbaa !2587
  %add = add i64 %8, 1, !dbg !7610
  %call4 = call %struct._object* @PyUnicode_FromWideChar(i32* %7, i64 %add), !dbg !7611
  store %struct._object* %call4, %struct._object** %result, align 8, !dbg !7612, !tbaa !1941
  %9 = load i32*, i32** %buffer, align 8, !dbg !7613, !tbaa !1941
  %10 = bitcast i32* %9 to i8*, !dbg !7613
  call void @PyMem_Free(i8* %10), !dbg !7614
  %11 = load %struct._object*, %struct._object** %result, align 8, !dbg !7615, !tbaa !1941
  %cmp5 = icmp eq %struct._object* %11, null, !dbg !7617
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !7618

if.then.6:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %retval, !dbg !7619
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7619

if.end.7:                                         ; preds = %if.end.3
  %12 = load %struct._object*, %struct._object** %result, align 8, !dbg !7620, !tbaa !1941
  %13 = load i64, i64* %size, align 8, !dbg !7621, !tbaa !2587
  %call8 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.329, i32 0, i32 0), %struct._object* %12, i64 %13), !dbg !7622
  store %struct._object* %call8, %struct._object** %retval, !dbg !7623
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7623

cleanup:                                          ; preds = %if.end.7, %if.then.6, %if.then.2, %if.then
  %14 = bitcast i32** %buffer to i8*, !dbg !7624
  call void @llvm.lifetime.end(i64 8, i8* %14) #2, !dbg !7624
  %15 = bitcast i64* %size to i8*, !dbg !7624
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !7624
  %16 = bitcast %struct._object** %result to i8*, !dbg !7624
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !7624
  %17 = bitcast %struct._object** %unicode to i8*, !dbg !7624
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !7624
  %18 = load %struct._object*, %struct._object** %retval, !dbg !7624
  ret %struct._object* %18, !dbg !7624
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @unicode_encodedecimal(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %unicode = alloca i32*, align 8
  %length = alloca i64, align 8
  %errors = alloca i8*, align 8
  %decimal = alloca %struct._object*, align 8
  %decimal_length = alloca i64, align 8
  %new_length = alloca i64, align 8
  %res = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1452, metadata !1945), !dbg !7625
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1453, metadata !1945), !dbg !7626
  %0 = bitcast i32** %unicode to i8*, !dbg !7627
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7627
  call void @llvm.dbg.declare(metadata i32** %unicode, metadata !1454, metadata !1945), !dbg !7628
  %1 = bitcast i64* %length to i8*, !dbg !7629
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !7629
  call void @llvm.dbg.declare(metadata i64* %length, metadata !1455, metadata !1945), !dbg !7630
  %2 = bitcast i8** %errors to i8*, !dbg !7631
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !7631
  call void @llvm.dbg.declare(metadata i8** %errors, metadata !1456, metadata !1945), !dbg !7632
  store i8* null, i8** %errors, align 8, !dbg !7632, !tbaa !1941
  %3 = bitcast %struct._object** %decimal to i8*, !dbg !7633
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !7633
  call void @llvm.dbg.declare(metadata %struct._object** %decimal, metadata !1457, metadata !1945), !dbg !7634
  %4 = bitcast i64* %decimal_length to i8*, !dbg !7635
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !7635
  call void @llvm.dbg.declare(metadata i64* %decimal_length, metadata !1458, metadata !1945), !dbg !7636
  %5 = bitcast i64* %new_length to i8*, !dbg !7635
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !7635
  call void @llvm.dbg.declare(metadata i64* %new_length, metadata !1459, metadata !1945), !dbg !7637
  %6 = bitcast i32* %res to i8*, !dbg !7638
  call void @llvm.lifetime.start(i64 4, i8* %6) #2, !dbg !7638
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1460, metadata !1945), !dbg !7639
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7640, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.331, i32 0, i32 0), i32** %unicode, i64* %length, i8** %errors), !dbg !7642
  %tobool = icmp ne i32 %call, 0, !dbg !7642
  br i1 %tobool, label %if.end, label %if.then, !dbg !7643

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7644
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7644

if.end:                                           ; preds = %entry
  %8 = load i64, i64* %length, align 8, !dbg !7645, !tbaa !2587
  %mul = mul i64 %8, 7, !dbg !7646
  store i64 %mul, i64* %decimal_length, align 8, !dbg !7647, !tbaa !2587
  %9 = load i64, i64* %decimal_length, align 8, !dbg !7648, !tbaa !2587
  %call1 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %9), !dbg !7649
  store %struct._object* %call1, %struct._object** %decimal, align 8, !dbg !7650, !tbaa !1941
  %10 = load %struct._object*, %struct._object** %decimal, align 8, !dbg !7651, !tbaa !1941
  %cmp = icmp eq %struct._object* %10, null, !dbg !7653
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !7654

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !7655
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7655

if.end.3:                                         ; preds = %if.end
  %11 = load i32*, i32** %unicode, align 8, !dbg !7656, !tbaa !1941
  %12 = load i64, i64* %length, align 8, !dbg !7657, !tbaa !2587
  %13 = load %struct._object*, %struct._object** %decimal, align 8, !dbg !7658, !tbaa !1941
  %14 = bitcast %struct._object* %13 to %struct.PyBytesObject*, !dbg !7659
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %14, i32 0, i32 2, !dbg !7660
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0, !dbg !7661
  %15 = load i8*, i8** %errors, align 8, !dbg !7662, !tbaa !1941
  %call4 = call i32 @PyUnicode_EncodeDecimal(i32* %11, i64 %12, i8* %arraydecay, i8* %15), !dbg !7663
  store i32 %call4, i32* %res, align 4, !dbg !7664, !tbaa !1971
  %16 = load i32, i32* %res, align 4, !dbg !7665, !tbaa !1971
  %cmp5 = icmp slt i32 %16, 0, !dbg !7666
  br i1 %cmp5, label %if.then.6, label %if.end.10, !dbg !7667

if.then.6:                                        ; preds = %if.end.3
  br label %do.body, !dbg !7668

do.body:                                          ; preds = %if.then.6
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7669
  call void @llvm.lifetime.start(i64 8, i8* %17) #2, !dbg !7669
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1461, metadata !1945), !dbg !7671
  %18 = load %struct._object*, %struct._object** %decimal, align 8, !dbg !7672, !tbaa !1941
  store %struct._object* %18, %struct._object** %_py_decref_tmp, align 8, !dbg !7671, !tbaa !1941
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7673, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0, !dbg !7675
  %20 = load i64, i64* %ob_refcnt, align 8, !dbg !7676, !tbaa !1961
  %dec = add i64 %20, -1, !dbg !7676
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7676, !tbaa !1961
  %cmp7 = icmp ne i64 %dec, 0, !dbg !7677
  br i1 %cmp7, label %if.then.8, label %if.else, !dbg !7678

if.then.8:                                        ; preds = %do.body
  br label %if.end.9, !dbg !7679

if.else:                                          ; preds = %do.body
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7681, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1, !dbg !7683
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7683, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4, !dbg !7684
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7684, !tbaa !1997
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7685, !tbaa !1941
  call void %23(%struct._object* %24), !dbg !7686
  br label %if.end.9

if.end.9:                                         ; preds = %if.else, %if.then.8
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7687
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !7687
  br label %do.cond, !dbg !7689

do.cond:                                          ; preds = %if.end.9
  br label %do.end, !dbg !7690

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !7692
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7692

if.end.10:                                        ; preds = %if.end.3
  %26 = load %struct._object*, %struct._object** %decimal, align 8, !dbg !7693, !tbaa !1941
  %27 = bitcast %struct._object* %26 to %struct.PyBytesObject*, !dbg !7694
  %ob_sval11 = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %27, i32 0, i32 2, !dbg !7695
  %arraydecay12 = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval11, i32 0, i32 0, !dbg !7696
  %call13 = call i64 @strlen(i8* %arraydecay12) #6, !dbg !7697
  store i64 %call13, i64* %new_length, align 8, !dbg !7698, !tbaa !2587
  %28 = load i64, i64* %new_length, align 8, !dbg !7699, !tbaa !2587
  %call14 = call i32 @_PyBytes_Resize(%struct._object** %decimal, i64 %28), !dbg !7700
  store i32 %call14, i32* %res, align 4, !dbg !7701, !tbaa !1971
  %29 = load i32, i32* %res, align 4, !dbg !7702, !tbaa !1971
  %cmp15 = icmp slt i32 %29, 0, !dbg !7704
  br i1 %cmp15, label %if.then.16, label %if.end.17, !dbg !7705

if.then.16:                                       ; preds = %if.end.10
  store %struct._object* null, %struct._object** %retval, !dbg !7706
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7706

if.end.17:                                        ; preds = %if.end.10
  %30 = load %struct._object*, %struct._object** %decimal, align 8, !dbg !7707, !tbaa !1941
  store %struct._object* %30, %struct._object** %retval, !dbg !7708
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7708

cleanup:                                          ; preds = %if.end.17, %if.then.16, %do.end, %if.then.2, %if.then
  %31 = bitcast i32* %res to i8*, !dbg !7709
  call void @llvm.lifetime.end(i64 4, i8* %31) #2, !dbg !7709
  %32 = bitcast i64* %new_length to i8*, !dbg !7709
  call void @llvm.lifetime.end(i64 8, i8* %32) #2, !dbg !7709
  %33 = bitcast i64* %decimal_length to i8*, !dbg !7709
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !7709
  %34 = bitcast %struct._object** %decimal to i8*, !dbg !7709
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !7709
  %35 = bitcast i8** %errors to i8*, !dbg !7709
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !7709
  %36 = bitcast i64* %length to i8*, !dbg !7709
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !7709
  %37 = bitcast i32** %unicode to i8*, !dbg !7709
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !7709
  %38 = load %struct._object*, %struct._object** %retval, !dbg !7709
  ret %struct._object* %38, !dbg !7709
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @unicode_transformdecimaltoascii(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %unicode = alloca i32*, align 8
  %length = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1467, metadata !1945), !dbg !7710
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1468, metadata !1945), !dbg !7711
  %0 = bitcast i32** %unicode to i8*, !dbg !7712
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7712
  call void @llvm.dbg.declare(metadata i32** %unicode, metadata !1469, metadata !1945), !dbg !7713
  %1 = bitcast i64* %length to i8*, !dbg !7714
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !7714
  call void @llvm.dbg.declare(metadata i64* %length, metadata !1470, metadata !1945), !dbg !7715
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7716, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.331, i32 0, i32 0), i32** %unicode, i64* %length), !dbg !7718
  %tobool = icmp ne i32 %call, 0, !dbg !7718
  br i1 %tobool, label %if.end, label %if.then, !dbg !7719

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7720
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7720

if.end:                                           ; preds = %entry
  %3 = load i32*, i32** %unicode, align 8, !dbg !7721, !tbaa !1941
  %4 = load i64, i64* %length, align 8, !dbg !7722, !tbaa !2587
  %call1 = call %struct._object* @PyUnicode_TransformDecimalToASCII(i32* %3, i64 %4), !dbg !7723
  store %struct._object* %call1, %struct._object** %retval, !dbg !7724
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7724

cleanup:                                          ; preds = %if.end, %if.then
  %5 = bitcast i64* %length to i8*, !dbg !7725
  call void @llvm.lifetime.end(i64 8, i8* %5) #2, !dbg !7725
  %6 = bitcast i32** %unicode to i8*, !dbg !7725
  call void @llvm.lifetime.end(i64 8, i8* %6) #2, !dbg !7725
  %7 = load %struct._object*, %struct._object** %retval, !dbg !7725
  ret %struct._object* %7, !dbg !7725
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @unicode_legacy_string(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %data = alloca i32*, align 8
  %len = alloca i64, align 8
  %u = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1473, metadata !1945), !dbg !7726
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1474, metadata !1945), !dbg !7727
  %0 = bitcast i32** %data to i8*, !dbg !7728
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7728
  call void @llvm.dbg.declare(metadata i32** %data, metadata !1475, metadata !1945), !dbg !7729
  %1 = bitcast i64* %len to i8*, !dbg !7730
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !7730
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1476, metadata !1945), !dbg !7731
  %2 = bitcast %struct._object** %u to i8*, !dbg !7732
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !7732
  call void @llvm.dbg.declare(metadata %struct._object** %u, metadata !1477, metadata !1945), !dbg !7733
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7734, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.300, i32 0, i32 0), i32** %data, i64* %len), !dbg !7736
  %tobool = icmp ne i32 %call, 0, !dbg !7736
  br i1 %tobool, label %if.end, label %if.then, !dbg !7737

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7738
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7738

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %len, align 8, !dbg !7739, !tbaa !2587
  %call1 = call %struct._object* @PyUnicode_FromUnicode(i32* null, i64 %4), !dbg !7740
  store %struct._object* %call1, %struct._object** %u, align 8, !dbg !7741, !tbaa !1941
  %5 = load %struct._object*, %struct._object** %u, align 8, !dbg !7742, !tbaa !1941
  %cmp = icmp eq %struct._object* %5, null, !dbg !7744
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !7745

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !7746
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7746

if.end.3:                                         ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %u, align 8, !dbg !7747, !tbaa !1941
  %7 = bitcast %struct._object* %6 to %struct.PyASCIIObject*, !dbg !7748
  %wstr = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %7, i32 0, i32 4, !dbg !7749
  %8 = load i32*, i32** %wstr, align 8, !dbg !7749, !tbaa !6872
  %tobool4 = icmp ne i32* %8, null, !dbg !7750
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !7750

cond.true:                                        ; preds = %if.end.3
  %9 = load %struct._object*, %struct._object** %u, align 8, !dbg !7751, !tbaa !1941
  %10 = bitcast %struct._object* %9 to %struct.PyASCIIObject*, !dbg !7753
  %wstr5 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %10, i32 0, i32 4, !dbg !7754
  %11 = load i32*, i32** %wstr5, align 8, !dbg !7754, !tbaa !6872
  br label %cond.end, !dbg !7750

cond.false:                                       ; preds = %if.end.3
  %12 = load %struct._object*, %struct._object** %u, align 8, !dbg !7755, !tbaa !1941
  %call6 = call i32* @PyUnicode_AsUnicode(%struct._object* %12), !dbg !7757
  br label %cond.end, !dbg !7750

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %11, %cond.true ], [ %call6, %cond.false ], !dbg !7750
  %13 = bitcast i32* %cond to i8*, !dbg !7758
  %14 = load i32*, i32** %data, align 8, !dbg !7761, !tbaa !1941
  %15 = bitcast i32* %14 to i8*, !dbg !7762
  %16 = load i64, i64* %len, align 8, !dbg !7763, !tbaa !2587
  %mul = mul i64 %16, 4, !dbg !7764
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %15, i64 %mul, i32 4, i1 false), !dbg !7762
  %17 = load i64, i64* %len, align 8, !dbg !7765, !tbaa !2587
  %cmp7 = icmp sgt i64 %17, 0, !dbg !7767
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !7768

if.then.8:                                        ; preds = %cond.end
  br label %if.end.9, !dbg !7769

if.end.9:                                         ; preds = %if.then.8, %cond.end
  %18 = load %struct._object*, %struct._object** %u, align 8, !dbg !7771, !tbaa !1941
  store %struct._object* %18, %struct._object** %retval, !dbg !7772
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7772

cleanup:                                          ; preds = %if.end.9, %if.then.2, %if.then
  %19 = bitcast %struct._object** %u to i8*, !dbg !7773
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !7773
  %20 = bitcast i64* %len to i8*, !dbg !7773
  call void @llvm.lifetime.end(i64 8, i8* %20) #2, !dbg !7773
  %21 = bitcast i32** %data to i8*, !dbg !7773
  call void @llvm.lifetime.end(i64 8, i8* %21) #2, !dbg !7773
  %22 = load %struct._object*, %struct._object** %retval, !dbg !7773
  ret %struct._object* %22, !dbg !7773
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_thread_state(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %fn = alloca %struct._object*, align 8
  %success = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %_save = alloca %struct._ts*, align 8
  %_save17 = alloca %struct._ts*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1480, metadata !1945), !dbg !7774
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1481, metadata !1945), !dbg !7775
  %0 = bitcast %struct._object** %fn to i8*, !dbg !7776
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !7776
  call void @llvm.dbg.declare(metadata %struct._object** %fn, metadata !1482, metadata !1945), !dbg !7777
  %1 = bitcast i32* %success to i8*, !dbg !7778
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !7778
  call void @llvm.dbg.declare(metadata i32* %success, metadata !1483, metadata !1945), !dbg !7779
  store i32 1, i32* %success, align 4, !dbg !7779, !tbaa !1971
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !7780, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.332, i32 0, i32 0), %struct._object** %fn), !dbg !7782
  %tobool = icmp ne i32 %call, 0, !dbg !7782
  br i1 %tobool, label %if.end, label %if.then, !dbg !7783

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !7784
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7784

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %fn, align 8, !dbg !7785, !tbaa !1941
  %call1 = call i32 @PyCallable_Check(%struct._object* %3), !dbg !7787
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7787
  br i1 %tobool2, label %if.end.5, label %if.then.3, !dbg !7788

if.then.3:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !7789, !tbaa !1941
  %5 = load %struct._object*, %struct._object** %fn, align 8, !dbg !7791, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !7792
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7792, !tbaa !1995
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 1, !dbg !7793
  %7 = load i8*, i8** %tp_name, align 8, !dbg !7793, !tbaa !7794
  %call4 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.333, i32 0, i32 0), i8* %7), !dbg !7795
  store %struct._object* null, %struct._object** %retval, !dbg !7796
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7796

if.end.5:                                         ; preds = %if.end
  call void @PyEval_InitThreads(), !dbg !7797
  %call6 = call i8* @PyThread_allocate_lock(), !dbg !7798
  store i8* %call6, i8** @thread_done, align 8, !dbg !7799, !tbaa !1941
  %8 = load i8*, i8** @thread_done, align 8, !dbg !7800, !tbaa !1941
  %cmp = icmp eq i8* %8, null, !dbg !7802
  br i1 %cmp, label %if.then.7, label %if.end.9, !dbg !7803

if.then.7:                                        ; preds = %if.end.5
  %call8 = call %struct._object* @PyErr_NoMemory(), !dbg !7804
  store %struct._object* %call8, %struct._object** %retval, !dbg !7805
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7805

if.end.9:                                         ; preds = %if.end.5
  %9 = load i8*, i8** @thread_done, align 8, !dbg !7806, !tbaa !1941
  %call10 = call i32 @PyThread_acquire_lock(i8* %9, i32 1), !dbg !7807
  %10 = load %struct._object*, %struct._object** %fn, align 8, !dbg !7808, !tbaa !1941
  %11 = bitcast %struct._object* %10 to i8*, !dbg !7808
  %call11 = call i64 @PyThread_start_new_thread(void (i8*)* @_make_call_from_thread, i8* %11), !dbg !7809
  %12 = load %struct._object*, %struct._object** %fn, align 8, !dbg !7810, !tbaa !1941
  %13 = bitcast %struct._object* %12 to i8*, !dbg !7810
  %call12 = call i32 @_make_call(i8* %13), !dbg !7811
  %14 = load i32, i32* %success, align 4, !dbg !7812, !tbaa !1971
  %and = and i32 %14, %call12, !dbg !7812
  store i32 %and, i32* %success, align 4, !dbg !7812, !tbaa !1971
  %15 = bitcast %struct._ts** %_save to i8*, !dbg !7813
  call void @llvm.lifetime.start(i64 8, i8* %15) #2, !dbg !7813
  call void @llvm.dbg.declare(metadata %struct._ts** %_save, metadata !1484, metadata !1945), !dbg !7814
  %call13 = call %struct._ts* @PyEval_SaveThread(), !dbg !7815
  store %struct._ts* %call13, %struct._ts** %_save, align 8, !dbg !7816, !tbaa !1941
  %16 = load %struct._object*, %struct._object** %fn, align 8, !dbg !7817, !tbaa !1941
  %17 = bitcast %struct._object* %16 to i8*, !dbg !7817
  %call14 = call i32 @_make_call(i8* %17), !dbg !7818
  %18 = load i32, i32* %success, align 4, !dbg !7819, !tbaa !1971
  %and15 = and i32 %18, %call14, !dbg !7819
  store i32 %and15, i32* %success, align 4, !dbg !7819, !tbaa !1971
  %19 = load i8*, i8** @thread_done, align 8, !dbg !7820, !tbaa !1941
  %call16 = call i32 @PyThread_acquire_lock(i8* %19, i32 1), !dbg !7821
  %20 = load %struct._ts*, %struct._ts** %_save, align 8, !dbg !7822, !tbaa !1941
  call void @PyEval_RestoreThread(%struct._ts* %20), !dbg !7823
  %21 = bitcast %struct._ts** %_save to i8*, !dbg !7824
  call void @llvm.lifetime.end(i64 8, i8* %21) #2, !dbg !7824
  %22 = bitcast %struct._ts** %_save17 to i8*, !dbg !7825
  call void @llvm.lifetime.start(i64 8, i8* %22) #2, !dbg !7825
  call void @llvm.dbg.declare(metadata %struct._ts** %_save17, metadata !1486, metadata !1945), !dbg !7826
  %call18 = call %struct._ts* @PyEval_SaveThread(), !dbg !7827
  store %struct._ts* %call18, %struct._ts** %_save17, align 8, !dbg !7828, !tbaa !1941
  %23 = load %struct._object*, %struct._object** %fn, align 8, !dbg !7829, !tbaa !1941
  %24 = bitcast %struct._object* %23 to i8*, !dbg !7829
  %call19 = call i64 @PyThread_start_new_thread(void (i8*)* @_make_call_from_thread, i8* %24), !dbg !7830
  %25 = load %struct._object*, %struct._object** %fn, align 8, !dbg !7831, !tbaa !1941
  %26 = bitcast %struct._object* %25 to i8*, !dbg !7831
  %call20 = call i32 @_make_call(i8* %26), !dbg !7832
  %27 = load i32, i32* %success, align 4, !dbg !7833, !tbaa !1971
  %and21 = and i32 %27, %call20, !dbg !7833
  store i32 %and21, i32* %success, align 4, !dbg !7833, !tbaa !1971
  %28 = load i8*, i8** @thread_done, align 8, !dbg !7834, !tbaa !1941
  %call22 = call i32 @PyThread_acquire_lock(i8* %28, i32 1), !dbg !7835
  %29 = load %struct._ts*, %struct._ts** %_save17, align 8, !dbg !7836, !tbaa !1941
  call void @PyEval_RestoreThread(%struct._ts* %29), !dbg !7837
  %30 = bitcast %struct._ts** %_save17 to i8*, !dbg !7838
  call void @llvm.lifetime.end(i64 8, i8* %30) #2, !dbg !7838
  %31 = load i8*, i8** @thread_done, align 8, !dbg !7839, !tbaa !1941
  call void @PyThread_release_lock(i8* %31), !dbg !7840
  %32 = load i8*, i8** @thread_done, align 8, !dbg !7841, !tbaa !1941
  call void @PyThread_free_lock(i8* %32), !dbg !7842
  %33 = load i32, i32* %success, align 4, !dbg !7843, !tbaa !1971
  %tobool23 = icmp ne i32 %33, 0, !dbg !7843
  br i1 %tobool23, label %if.end.25, label %if.then.24, !dbg !7845

if.then.24:                                       ; preds = %if.end.9
  store %struct._object* null, %struct._object** %retval, !dbg !7846
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7846

if.end.25:                                        ; preds = %if.end.9
  %34 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7847, !tbaa !1961
  %inc = add i64 %34, 1, !dbg !7847
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !7847, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !7848
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7848

cleanup:                                          ; preds = %if.end.25, %if.then.24, %if.then.7, %if.then.3, %if.then
  %35 = bitcast i32* %success to i8*, !dbg !7849
  call void @llvm.lifetime.end(i64 4, i8* %35) #2, !dbg !7849
  %36 = bitcast %struct._object** %fn to i8*, !dbg !7849
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !7849
  %37 = load %struct._object*, %struct._object** %retval, !dbg !7849
  ret %struct._object* %37, !dbg !7849
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @profile_int(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %start = alloca %struct.timeval, align 8
  %stop = alloca %struct.timeval, align 8
  %single = alloca %struct._object*, align 8
  %multiple = alloca %struct._object**, align 8
  %op1 = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp23 = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp68 = alloca %struct._object*, align 8
  %_py_decref_tmp117 = alloca %struct._object*, align 8
  %_py_decref_tmp166 = alloca %struct._object*, align 8
  %_py_decref_tmp195 = alloca %struct._object*, align 8
  %_py_decref_tmp212 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp240 = alloca %struct._object*, align 8
  %_py_decref_tmp260 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1505, metadata !1945), !dbg !7850
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1506, metadata !1945), !dbg !7851
  %0 = bitcast i32* %i to i8*, !dbg !7852
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !7852
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1507, metadata !1945), !dbg !7853
  %1 = bitcast i32* %k to i8*, !dbg !7852
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !7852
  call void @llvm.dbg.declare(metadata i32* %k, metadata !1508, metadata !1945), !dbg !7854
  %2 = bitcast %struct.timeval* %start to i8*, !dbg !7855
  call void @llvm.lifetime.start(i64 16, i8* %2) #2, !dbg !7855
  call void @llvm.dbg.declare(metadata %struct.timeval* %start, metadata !1509, metadata !1945), !dbg !7856
  %3 = bitcast %struct.timeval* %stop to i8*, !dbg !7855
  call void @llvm.lifetime.start(i64 16, i8* %3) #2, !dbg !7855
  call void @llvm.dbg.declare(metadata %struct.timeval* %stop, metadata !1517, metadata !1945), !dbg !7857
  %4 = bitcast %struct._object** %single to i8*, !dbg !7858
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !7858
  call void @llvm.dbg.declare(metadata %struct._object** %single, metadata !1518, metadata !1945), !dbg !7859
  %5 = bitcast %struct._object*** %multiple to i8*, !dbg !7858
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !7858
  call void @llvm.dbg.declare(metadata %struct._object*** %multiple, metadata !1519, metadata !1945), !dbg !7860
  %6 = bitcast %struct._object** %op1 to i8*, !dbg !7858
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !7858
  call void @llvm.dbg.declare(metadata %struct._object** %op1, metadata !1520, metadata !1945), !dbg !7861
  %7 = bitcast %struct._object** %result to i8*, !dbg !7858
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !7858
  call void @llvm.dbg.declare(metadata %struct._object** %result, metadata !1521, metadata !1945), !dbg !7862
  %call = call i32 @gettimeofday(%struct.timeval* %start, %struct.timezone* null) #2, !dbg !7863
  store i32 0, i32* %k, align 4, !dbg !7864, !tbaa !1971
  br label %for.cond, !dbg !7865

for.cond:                                         ; preds = %for.inc.7, %entry
  %8 = load i32, i32* %k, align 4, !dbg !7866, !tbaa !1971
  %cmp = icmp slt i32 %8, 20000, !dbg !7869
  br i1 %cmp, label %for.body, label %for.end.9, !dbg !7870

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7871, !tbaa !1971
  br label %for.cond.1, !dbg !7872

for.cond.1:                                       ; preds = %for.inc, %for.body
  %9 = load i32, i32* %i, align 4, !dbg !7873, !tbaa !1971
  %cmp2 = icmp slt i32 %9, 1000, !dbg !7876
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !7877

for.body.3:                                       ; preds = %for.cond.1
  %10 = load i32, i32* %i, align 4, !dbg !7878, !tbaa !1971
  %conv = sext i32 %10 to i64, !dbg !7878
  %call4 = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !7879
  store %struct._object* %call4, %struct._object** %single, align 8, !dbg !7880, !tbaa !1941
  br label %do.body, !dbg !7881

do.body:                                          ; preds = %for.body.3
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7882
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !7882
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1522, metadata !1945), !dbg !7884
  %12 = load %struct._object*, %struct._object** %single, align 8, !dbg !7885, !tbaa !1941
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8, !dbg !7884, !tbaa !1941
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7886, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !7888
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !7889, !tbaa !1961
  %dec = add i64 %14, -1, !dbg !7889
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !7889, !tbaa !1961
  %cmp5 = icmp ne i64 %dec, 0, !dbg !7890
  br i1 %cmp5, label %if.then, label %if.else, !dbg !7891

if.then:                                          ; preds = %do.body
  br label %if.end, !dbg !7892

if.else:                                          ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7894, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !7896
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !7896, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4, !dbg !7897
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !7897, !tbaa !1997
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !7898, !tbaa !1941
  call void %17(%struct._object* %18), !dbg !7899
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !7900
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !7900
  br label %do.cond, !dbg !7902

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !7903

do.end:                                           ; preds = %do.cond
  br label %for.inc, !dbg !7905

for.inc:                                          ; preds = %do.end
  %20 = load i32, i32* %i, align 4, !dbg !7906, !tbaa !1971
  %inc = add i32 %20, 1, !dbg !7906
  store i32 %inc, i32* %i, align 4, !dbg !7906, !tbaa !1971
  br label %for.cond.1, !dbg !7907

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.7, !dbg !7908

for.inc.7:                                        ; preds = %for.end
  %21 = load i32, i32* %k, align 4, !dbg !7909, !tbaa !1971
  %inc8 = add i32 %21, 1, !dbg !7909
  store i32 %inc8, i32* %k, align 4, !dbg !7909, !tbaa !1971
  br label %for.cond, !dbg !7910

for.end.9:                                        ; preds = %for.cond
  %call10 = call i32 @gettimeofday(%struct.timeval* %stop, %struct.timezone* null) #2, !dbg !7911
  call void @print_delta(i32 1, %struct.timeval* %start, %struct.timeval* %stop), !dbg !7912
  %call11 = call i32 @gettimeofday(%struct.timeval* %start, %struct.timezone* null) #2, !dbg !7913
  store i32 0, i32* %k, align 4, !dbg !7914, !tbaa !1971
  br label %for.cond.12, !dbg !7915

for.cond.12:                                      ; preds = %for.inc.38, %for.end.9
  %22 = load i32, i32* %k, align 4, !dbg !7916, !tbaa !1971
  %cmp13 = icmp slt i32 %22, 20000, !dbg !7919
  br i1 %cmp13, label %for.body.15, label %for.end.40, !dbg !7920

for.body.15:                                      ; preds = %for.cond.12
  store i32 0, i32* %i, align 4, !dbg !7921, !tbaa !1971
  br label %for.cond.16, !dbg !7922

for.cond.16:                                      ; preds = %for.inc.35, %for.body.15
  %23 = load i32, i32* %i, align 4, !dbg !7923, !tbaa !1971
  %cmp17 = icmp slt i32 %23, 1000, !dbg !7926
  br i1 %cmp17, label %for.body.19, label %for.end.37, !dbg !7927

for.body.19:                                      ; preds = %for.cond.16
  %24 = load i32, i32* %i, align 4, !dbg !7928, !tbaa !1971
  %add = add i32 %24, 1000000, !dbg !7929
  %conv20 = sext i32 %add to i64, !dbg !7928
  %call21 = call %struct._object* @PyLong_FromLong(i64 %conv20), !dbg !7930
  store %struct._object* %call21, %struct._object** %single, align 8, !dbg !7931, !tbaa !1941
  br label %do.body.22, !dbg !7932

do.body.22:                                       ; preds = %for.body.19
  %25 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !7933
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !7933
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp23, metadata !1529, metadata !1945), !dbg !7935
  %26 = load %struct._object*, %struct._object** %single, align 8, !dbg !7936, !tbaa !1941
  store %struct._object* %26, %struct._object** %_py_decref_tmp23, align 8, !dbg !7935, !tbaa !1941
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !7937, !tbaa !1941
  %ob_refcnt24 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !7939
  %28 = load i64, i64* %ob_refcnt24, align 8, !dbg !7940, !tbaa !1961
  %dec25 = add i64 %28, -1, !dbg !7940
  store i64 %dec25, i64* %ob_refcnt24, align 8, !dbg !7940, !tbaa !1961
  %cmp26 = icmp ne i64 %dec25, 0, !dbg !7941
  br i1 %cmp26, label %if.then.28, label %if.else.29, !dbg !7942

if.then.28:                                       ; preds = %do.body.22
  br label %if.end.32, !dbg !7943

if.else.29:                                       ; preds = %do.body.22
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !7945, !tbaa !1941
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !7947
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8, !dbg !7947, !tbaa !1995
  %tp_dealloc31 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !7948
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc31, align 8, !dbg !7948, !tbaa !1997
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp23, align 8, !dbg !7949, !tbaa !1941
  call void %31(%struct._object* %32), !dbg !7950
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.29, %if.then.28
  %33 = bitcast %struct._object** %_py_decref_tmp23 to i8*, !dbg !7951
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !7951
  br label %do.cond.33, !dbg !7953

do.cond.33:                                       ; preds = %if.end.32
  br label %do.end.34, !dbg !7954

do.end.34:                                        ; preds = %do.cond.33
  br label %for.inc.35, !dbg !7956

for.inc.35:                                       ; preds = %do.end.34
  %34 = load i32, i32* %i, align 4, !dbg !7957, !tbaa !1971
  %inc36 = add i32 %34, 1, !dbg !7957
  store i32 %inc36, i32* %i, align 4, !dbg !7957, !tbaa !1971
  br label %for.cond.16, !dbg !7958

for.end.37:                                       ; preds = %for.cond.16
  br label %for.inc.38, !dbg !7959

for.inc.38:                                       ; preds = %for.end.37
  %35 = load i32, i32* %k, align 4, !dbg !7960, !tbaa !1971
  %inc39 = add i32 %35, 1, !dbg !7960
  store i32 %inc39, i32* %k, align 4, !dbg !7960, !tbaa !1971
  br label %for.cond.12, !dbg !7961

for.end.40:                                       ; preds = %for.cond.12
  %call41 = call i32 @gettimeofday(%struct.timeval* %stop, %struct.timezone* null) #2, !dbg !7962
  call void @print_delta(i32 2, %struct.timeval* %start, %struct.timeval* %stop), !dbg !7963
  %call42 = call noalias i8* @malloc(i64 8000) #2, !dbg !7964
  %36 = bitcast i8* %call42 to %struct._object**, !dbg !7964
  store %struct._object** %36, %struct._object*** %multiple, align 8, !dbg !7965, !tbaa !1941
  %37 = load %struct._object**, %struct._object*** %multiple, align 8, !dbg !7966, !tbaa !1941
  %cmp43 = icmp eq %struct._object** %37, null, !dbg !7968
  br i1 %cmp43, label %if.then.45, label %if.end.47, !dbg !7969

if.then.45:                                       ; preds = %for.end.40
  %call46 = call %struct._object* @PyErr_NoMemory(), !dbg !7970
  store %struct._object* %call46, %struct._object** %retval, !dbg !7971
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !7971

if.end.47:                                        ; preds = %for.end.40
  %call48 = call i32 @gettimeofday(%struct.timeval* %start, %struct.timezone* null) #2, !dbg !7972
  store i32 0, i32* %k, align 4, !dbg !7973, !tbaa !1971
  br label %for.cond.49, !dbg !7974

for.cond.49:                                      ; preds = %for.inc.85, %if.end.47
  %38 = load i32, i32* %k, align 4, !dbg !7975, !tbaa !1971
  %cmp50 = icmp slt i32 %38, 20000, !dbg !7978
  br i1 %cmp50, label %for.body.52, label %for.end.87, !dbg !7979

for.body.52:                                      ; preds = %for.cond.49
  store i32 0, i32* %i, align 4, !dbg !7980, !tbaa !1971
  br label %for.cond.53, !dbg !7982

for.cond.53:                                      ; preds = %for.inc.60, %for.body.52
  %39 = load i32, i32* %i, align 4, !dbg !7983, !tbaa !1971
  %cmp54 = icmp slt i32 %39, 1000, !dbg !7987
  br i1 %cmp54, label %for.body.56, label %for.end.62, !dbg !7988

for.body.56:                                      ; preds = %for.cond.53
  %40 = load i32, i32* %i, align 4, !dbg !7989, !tbaa !1971
  %add57 = add i32 %40, 1000000, !dbg !7991
  %conv58 = sext i32 %add57 to i64, !dbg !7989
  %call59 = call %struct._object* @PyLong_FromLong(i64 %conv58), !dbg !7992
  %41 = load i32, i32* %i, align 4, !dbg !7993, !tbaa !1971
  %idxprom = sext i32 %41 to i64, !dbg !7994
  %42 = load %struct._object**, %struct._object*** %multiple, align 8, !dbg !7994, !tbaa !1941
  %arrayidx = getelementptr %struct._object*, %struct._object** %42, i64 %idxprom, !dbg !7994
  store %struct._object* %call59, %struct._object** %arrayidx, align 8, !dbg !7995, !tbaa !1941
  br label %for.inc.60, !dbg !7996

for.inc.60:                                       ; preds = %for.body.56
  %43 = load i32, i32* %i, align 4, !dbg !7997, !tbaa !1971
  %inc61 = add i32 %43, 1, !dbg !7997
  store i32 %inc61, i32* %i, align 4, !dbg !7997, !tbaa !1971
  br label %for.cond.53, !dbg !7998

for.end.62:                                       ; preds = %for.cond.53
  store i32 0, i32* %i, align 4, !dbg !7999, !tbaa !1971
  br label %for.cond.63, !dbg !8000

for.cond.63:                                      ; preds = %for.inc.82, %for.end.62
  %44 = load i32, i32* %i, align 4, !dbg !8001, !tbaa !1971
  %cmp64 = icmp slt i32 %44, 1000, !dbg !8004
  br i1 %cmp64, label %for.body.66, label %for.end.84, !dbg !8005

for.body.66:                                      ; preds = %for.cond.63
  br label %do.body.67, !dbg !8006

do.body.67:                                       ; preds = %for.body.66
  %45 = bitcast %struct._object** %_py_decref_tmp68 to i8*, !dbg !8007
  call void @llvm.lifetime.start(i64 8, i8* %45) #2, !dbg !8007
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp68, metadata !1536, metadata !1945), !dbg !8009
  %46 = load i32, i32* %i, align 4, !dbg !8010, !tbaa !1971
  %idxprom69 = sext i32 %46 to i64, !dbg !8011
  %47 = load %struct._object**, %struct._object*** %multiple, align 8, !dbg !8011, !tbaa !1941
  %arrayidx70 = getelementptr %struct._object*, %struct._object** %47, i64 %idxprom69, !dbg !8011
  %48 = load %struct._object*, %struct._object** %arrayidx70, align 8, !dbg !8011, !tbaa !1941
  store %struct._object* %48, %struct._object** %_py_decref_tmp68, align 8, !dbg !8009, !tbaa !1941
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp68, align 8, !dbg !8012, !tbaa !1941
  %ob_refcnt71 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0, !dbg !8014
  %50 = load i64, i64* %ob_refcnt71, align 8, !dbg !8015, !tbaa !1961
  %dec72 = add i64 %50, -1, !dbg !8015
  store i64 %dec72, i64* %ob_refcnt71, align 8, !dbg !8015, !tbaa !1961
  %cmp73 = icmp ne i64 %dec72, 0, !dbg !8016
  br i1 %cmp73, label %if.then.75, label %if.else.76, !dbg !8017

if.then.75:                                       ; preds = %do.body.67
  br label %if.end.79, !dbg !8018

if.else.76:                                       ; preds = %do.body.67
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp68, align 8, !dbg !8020, !tbaa !1941
  %ob_type77 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 1, !dbg !8022
  %52 = load %struct._typeobject*, %struct._typeobject** %ob_type77, align 8, !dbg !8022, !tbaa !1995
  %tp_dealloc78 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %52, i32 0, i32 4, !dbg !8023
  %53 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc78, align 8, !dbg !8023, !tbaa !1997
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp68, align 8, !dbg !8024, !tbaa !1941
  call void %53(%struct._object* %54), !dbg !8025
  br label %if.end.79

if.end.79:                                        ; preds = %if.else.76, %if.then.75
  %55 = bitcast %struct._object** %_py_decref_tmp68 to i8*, !dbg !8026
  call void @llvm.lifetime.end(i64 8, i8* %55) #2, !dbg !8026
  br label %do.cond.80, !dbg !8028

do.cond.80:                                       ; preds = %if.end.79
  br label %do.end.81, !dbg !8029

do.end.81:                                        ; preds = %do.cond.80
  br label %for.inc.82, !dbg !8031

for.inc.82:                                       ; preds = %do.end.81
  %56 = load i32, i32* %i, align 4, !dbg !8032, !tbaa !1971
  %inc83 = add i32 %56, 1, !dbg !8032
  store i32 %inc83, i32* %i, align 4, !dbg !8032, !tbaa !1971
  br label %for.cond.63, !dbg !8033

for.end.84:                                       ; preds = %for.cond.63
  br label %for.inc.85, !dbg !8034

for.inc.85:                                       ; preds = %for.end.84
  %57 = load i32, i32* %k, align 4, !dbg !8035, !tbaa !1971
  %inc86 = add i32 %57, 1, !dbg !8035
  store i32 %inc86, i32* %k, align 4, !dbg !8035, !tbaa !1971
  br label %for.cond.49, !dbg !8036

for.end.87:                                       ; preds = %for.cond.49
  %call88 = call i32 @gettimeofday(%struct.timeval* %stop, %struct.timezone* null) #2, !dbg !8037
  call void @print_delta(i32 3, %struct.timeval* %start, %struct.timeval* %stop), !dbg !8038
  %58 = load %struct._object**, %struct._object*** %multiple, align 8, !dbg !8039, !tbaa !1941
  %59 = bitcast %struct._object** %58 to i8*, !dbg !8039
  call void @free(i8* %59) #2, !dbg !8040
  %call89 = call noalias i8* @malloc(i64 8000000) #2, !dbg !8041
  %60 = bitcast i8* %call89 to %struct._object**, !dbg !8041
  store %struct._object** %60, %struct._object*** %multiple, align 8, !dbg !8042, !tbaa !1941
  %61 = load %struct._object**, %struct._object*** %multiple, align 8, !dbg !8043, !tbaa !1941
  %cmp90 = icmp eq %struct._object** %61, null, !dbg !8045
  br i1 %cmp90, label %if.then.92, label %if.end.94, !dbg !8046

if.then.92:                                       ; preds = %for.end.87
  %call93 = call %struct._object* @PyErr_NoMemory(), !dbg !8047
  store %struct._object* %call93, %struct._object** %retval, !dbg !8048
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8048

if.end.94:                                        ; preds = %for.end.87
  %call95 = call i32 @gettimeofday(%struct.timeval* %start, %struct.timezone* null) #2, !dbg !8049
  store i32 0, i32* %k, align 4, !dbg !8050, !tbaa !1971
  br label %for.cond.96, !dbg !8051

for.cond.96:                                      ; preds = %for.inc.134, %if.end.94
  %62 = load i32, i32* %k, align 4, !dbg !8052, !tbaa !1971
  %cmp97 = icmp slt i32 %62, 20, !dbg !8055
  br i1 %cmp97, label %for.body.99, label %for.end.136, !dbg !8056

for.body.99:                                      ; preds = %for.cond.96
  store i32 0, i32* %i, align 4, !dbg !8057, !tbaa !1971
  br label %for.cond.100, !dbg !8059

for.cond.100:                                     ; preds = %for.inc.109, %for.body.99
  %63 = load i32, i32* %i, align 4, !dbg !8060, !tbaa !1971
  %cmp101 = icmp slt i32 %63, 1000000, !dbg !8064
  br i1 %cmp101, label %for.body.103, label %for.end.111, !dbg !8065

for.body.103:                                     ; preds = %for.cond.100
  %64 = load i32, i32* %i, align 4, !dbg !8066, !tbaa !1971
  %add104 = add i32 %64, 1000000, !dbg !8068
  %conv105 = sext i32 %add104 to i64, !dbg !8066
  %call106 = call %struct._object* @PyLong_FromLong(i64 %conv105), !dbg !8069
  %65 = load i32, i32* %i, align 4, !dbg !8070, !tbaa !1971
  %idxprom107 = sext i32 %65 to i64, !dbg !8071
  %66 = load %struct._object**, %struct._object*** %multiple, align 8, !dbg !8071, !tbaa !1941
  %arrayidx108 = getelementptr %struct._object*, %struct._object** %66, i64 %idxprom107, !dbg !8071
  store %struct._object* %call106, %struct._object** %arrayidx108, align 8, !dbg !8072, !tbaa !1941
  br label %for.inc.109, !dbg !8073

for.inc.109:                                      ; preds = %for.body.103
  %67 = load i32, i32* %i, align 4, !dbg !8074, !tbaa !1971
  %inc110 = add i32 %67, 1, !dbg !8074
  store i32 %inc110, i32* %i, align 4, !dbg !8074, !tbaa !1971
  br label %for.cond.100, !dbg !8075

for.end.111:                                      ; preds = %for.cond.100
  store i32 0, i32* %i, align 4, !dbg !8076, !tbaa !1971
  br label %for.cond.112, !dbg !8077

for.cond.112:                                     ; preds = %for.inc.131, %for.end.111
  %68 = load i32, i32* %i, align 4, !dbg !8078, !tbaa !1971
  %cmp113 = icmp slt i32 %68, 1000000, !dbg !8081
  br i1 %cmp113, label %for.body.115, label %for.end.133, !dbg !8082

for.body.115:                                     ; preds = %for.cond.112
  br label %do.body.116, !dbg !8083

do.body.116:                                      ; preds = %for.body.115
  %69 = bitcast %struct._object** %_py_decref_tmp117 to i8*, !dbg !8084
  call void @llvm.lifetime.start(i64 8, i8* %69) #2, !dbg !8084
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp117, metadata !1544, metadata !1945), !dbg !8086
  %70 = load i32, i32* %i, align 4, !dbg !8087, !tbaa !1971
  %idxprom118 = sext i32 %70 to i64, !dbg !8088
  %71 = load %struct._object**, %struct._object*** %multiple, align 8, !dbg !8088, !tbaa !1941
  %arrayidx119 = getelementptr %struct._object*, %struct._object** %71, i64 %idxprom118, !dbg !8088
  %72 = load %struct._object*, %struct._object** %arrayidx119, align 8, !dbg !8088, !tbaa !1941
  store %struct._object* %72, %struct._object** %_py_decref_tmp117, align 8, !dbg !8086, !tbaa !1941
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp117, align 8, !dbg !8089, !tbaa !1941
  %ob_refcnt120 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 0, !dbg !8091
  %74 = load i64, i64* %ob_refcnt120, align 8, !dbg !8092, !tbaa !1961
  %dec121 = add i64 %74, -1, !dbg !8092
  store i64 %dec121, i64* %ob_refcnt120, align 8, !dbg !8092, !tbaa !1961
  %cmp122 = icmp ne i64 %dec121, 0, !dbg !8093
  br i1 %cmp122, label %if.then.124, label %if.else.125, !dbg !8094

if.then.124:                                      ; preds = %do.body.116
  br label %if.end.128, !dbg !8095

if.else.125:                                      ; preds = %do.body.116
  %75 = load %struct._object*, %struct._object** %_py_decref_tmp117, align 8, !dbg !8097, !tbaa !1941
  %ob_type126 = getelementptr inbounds %struct._object, %struct._object* %75, i32 0, i32 1, !dbg !8099
  %76 = load %struct._typeobject*, %struct._typeobject** %ob_type126, align 8, !dbg !8099, !tbaa !1995
  %tp_dealloc127 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %76, i32 0, i32 4, !dbg !8100
  %77 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc127, align 8, !dbg !8100, !tbaa !1997
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp117, align 8, !dbg !8101, !tbaa !1941
  call void %77(%struct._object* %78), !dbg !8102
  br label %if.end.128

if.end.128:                                       ; preds = %if.else.125, %if.then.124
  %79 = bitcast %struct._object** %_py_decref_tmp117 to i8*, !dbg !8103
  call void @llvm.lifetime.end(i64 8, i8* %79) #2, !dbg !8103
  br label %do.cond.129, !dbg !8105

do.cond.129:                                      ; preds = %if.end.128
  br label %do.end.130, !dbg !8106

do.end.130:                                       ; preds = %do.cond.129
  br label %for.inc.131, !dbg !8108

for.inc.131:                                      ; preds = %do.end.130
  %80 = load i32, i32* %i, align 4, !dbg !8109, !tbaa !1971
  %inc132 = add i32 %80, 1, !dbg !8109
  store i32 %inc132, i32* %i, align 4, !dbg !8109, !tbaa !1971
  br label %for.cond.112, !dbg !8110

for.end.133:                                      ; preds = %for.cond.112
  br label %for.inc.134, !dbg !8111

for.inc.134:                                      ; preds = %for.end.133
  %81 = load i32, i32* %k, align 4, !dbg !8112, !tbaa !1971
  %inc135 = add i32 %81, 1, !dbg !8112
  store i32 %inc135, i32* %k, align 4, !dbg !8112, !tbaa !1971
  br label %for.cond.96, !dbg !8113

for.end.136:                                      ; preds = %for.cond.96
  %call137 = call i32 @gettimeofday(%struct.timeval* %stop, %struct.timezone* null) #2, !dbg !8114
  call void @print_delta(i32 4, %struct.timeval* %start, %struct.timeval* %stop), !dbg !8115
  %82 = load %struct._object**, %struct._object*** %multiple, align 8, !dbg !8116, !tbaa !1941
  %83 = bitcast %struct._object** %82 to i8*, !dbg !8116
  call void @free(i8* %83) #2, !dbg !8117
  %call138 = call noalias i8* @malloc(i64 8000000) #2, !dbg !8118
  %84 = bitcast i8* %call138 to %struct._object**, !dbg !8118
  store %struct._object** %84, %struct._object*** %multiple, align 8, !dbg !8119, !tbaa !1941
  %85 = load %struct._object**, %struct._object*** %multiple, align 8, !dbg !8120, !tbaa !1941
  %cmp139 = icmp eq %struct._object** %85, null, !dbg !8122
  br i1 %cmp139, label %if.then.141, label %if.end.143, !dbg !8123

if.then.141:                                      ; preds = %for.end.136
  %call142 = call %struct._object* @PyErr_NoMemory(), !dbg !8124
  store %struct._object* %call142, %struct._object** %retval, !dbg !8125
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8125

if.end.143:                                       ; preds = %for.end.136
  %call144 = call i32 @gettimeofday(%struct.timeval* %start, %struct.timezone* null) #2, !dbg !8126
  store i32 0, i32* %k, align 4, !dbg !8127, !tbaa !1971
  br label %for.cond.145, !dbg !8128

for.cond.145:                                     ; preds = %for.inc.183, %if.end.143
  %86 = load i32, i32* %k, align 4, !dbg !8129, !tbaa !1971
  %cmp146 = icmp slt i32 %86, 10, !dbg !8132
  br i1 %cmp146, label %for.body.148, label %for.end.185, !dbg !8133

for.body.148:                                     ; preds = %for.cond.145
  store i32 0, i32* %i, align 4, !dbg !8134, !tbaa !1971
  br label %for.cond.149, !dbg !8136

for.cond.149:                                     ; preds = %for.inc.158, %for.body.148
  %87 = load i32, i32* %i, align 4, !dbg !8137, !tbaa !1971
  %cmp150 = icmp slt i32 %87, 1000000, !dbg !8141
  br i1 %cmp150, label %for.body.152, label %for.end.160, !dbg !8142

for.body.152:                                     ; preds = %for.cond.149
  %88 = load i32, i32* %i, align 4, !dbg !8143, !tbaa !1971
  %add153 = add i32 %88, 1000, !dbg !8145
  %conv154 = sext i32 %add153 to i64, !dbg !8143
  %call155 = call %struct._object* @PyLong_FromLong(i64 %conv154), !dbg !8146
  %89 = load i32, i32* %i, align 4, !dbg !8147, !tbaa !1971
  %idxprom156 = sext i32 %89 to i64, !dbg !8148
  %90 = load %struct._object**, %struct._object*** %multiple, align 8, !dbg !8148, !tbaa !1941
  %arrayidx157 = getelementptr %struct._object*, %struct._object** %90, i64 %idxprom156, !dbg !8148
  store %struct._object* %call155, %struct._object** %arrayidx157, align 8, !dbg !8149, !tbaa !1941
  br label %for.inc.158, !dbg !8150

for.inc.158:                                      ; preds = %for.body.152
  %91 = load i32, i32* %i, align 4, !dbg !8151, !tbaa !1971
  %inc159 = add i32 %91, 1, !dbg !8151
  store i32 %inc159, i32* %i, align 4, !dbg !8151, !tbaa !1971
  br label %for.cond.149, !dbg !8152

for.end.160:                                      ; preds = %for.cond.149
  store i32 0, i32* %i, align 4, !dbg !8153, !tbaa !1971
  br label %for.cond.161, !dbg !8154

for.cond.161:                                     ; preds = %for.inc.180, %for.end.160
  %92 = load i32, i32* %i, align 4, !dbg !8155, !tbaa !1971
  %cmp162 = icmp slt i32 %92, 1000000, !dbg !8158
  br i1 %cmp162, label %for.body.164, label %for.end.182, !dbg !8159

for.body.164:                                     ; preds = %for.cond.161
  br label %do.body.165, !dbg !8160

do.body.165:                                      ; preds = %for.body.164
  %93 = bitcast %struct._object** %_py_decref_tmp166 to i8*, !dbg !8161
  call void @llvm.lifetime.start(i64 8, i8* %93) #2, !dbg !8161
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp166, metadata !1552, metadata !1945), !dbg !8163
  %94 = load i32, i32* %i, align 4, !dbg !8164, !tbaa !1971
  %idxprom167 = sext i32 %94 to i64, !dbg !8165
  %95 = load %struct._object**, %struct._object*** %multiple, align 8, !dbg !8165, !tbaa !1941
  %arrayidx168 = getelementptr %struct._object*, %struct._object** %95, i64 %idxprom167, !dbg !8165
  %96 = load %struct._object*, %struct._object** %arrayidx168, align 8, !dbg !8165, !tbaa !1941
  store %struct._object* %96, %struct._object** %_py_decref_tmp166, align 8, !dbg !8163, !tbaa !1941
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp166, align 8, !dbg !8166, !tbaa !1941
  %ob_refcnt169 = getelementptr inbounds %struct._object, %struct._object* %97, i32 0, i32 0, !dbg !8168
  %98 = load i64, i64* %ob_refcnt169, align 8, !dbg !8169, !tbaa !1961
  %dec170 = add i64 %98, -1, !dbg !8169
  store i64 %dec170, i64* %ob_refcnt169, align 8, !dbg !8169, !tbaa !1961
  %cmp171 = icmp ne i64 %dec170, 0, !dbg !8170
  br i1 %cmp171, label %if.then.173, label %if.else.174, !dbg !8171

if.then.173:                                      ; preds = %do.body.165
  br label %if.end.177, !dbg !8172

if.else.174:                                      ; preds = %do.body.165
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp166, align 8, !dbg !8174, !tbaa !1941
  %ob_type175 = getelementptr inbounds %struct._object, %struct._object* %99, i32 0, i32 1, !dbg !8176
  %100 = load %struct._typeobject*, %struct._typeobject** %ob_type175, align 8, !dbg !8176, !tbaa !1995
  %tp_dealloc176 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %100, i32 0, i32 4, !dbg !8177
  %101 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc176, align 8, !dbg !8177, !tbaa !1997
  %102 = load %struct._object*, %struct._object** %_py_decref_tmp166, align 8, !dbg !8178, !tbaa !1941
  call void %101(%struct._object* %102), !dbg !8179
  br label %if.end.177

if.end.177:                                       ; preds = %if.else.174, %if.then.173
  %103 = bitcast %struct._object** %_py_decref_tmp166 to i8*, !dbg !8180
  call void @llvm.lifetime.end(i64 8, i8* %103) #2, !dbg !8180
  br label %do.cond.178, !dbg !8182

do.cond.178:                                      ; preds = %if.end.177
  br label %do.end.179, !dbg !8183

do.end.179:                                       ; preds = %do.cond.178
  br label %for.inc.180, !dbg !8185

for.inc.180:                                      ; preds = %do.end.179
  %104 = load i32, i32* %i, align 4, !dbg !8186, !tbaa !1971
  %inc181 = add i32 %104, 1, !dbg !8186
  store i32 %inc181, i32* %i, align 4, !dbg !8186, !tbaa !1971
  br label %for.cond.161, !dbg !8187

for.end.182:                                      ; preds = %for.cond.161
  br label %for.inc.183, !dbg !8188

for.inc.183:                                      ; preds = %for.end.182
  %105 = load i32, i32* %k, align 4, !dbg !8189, !tbaa !1971
  %inc184 = add i32 %105, 1, !dbg !8189
  store i32 %inc184, i32* %k, align 4, !dbg !8189, !tbaa !1971
  br label %for.cond.145, !dbg !8190

for.end.185:                                      ; preds = %for.cond.145
  %call186 = call i32 @gettimeofday(%struct.timeval* %stop, %struct.timezone* null) #2, !dbg !8191
  call void @print_delta(i32 5, %struct.timeval* %start, %struct.timeval* %stop), !dbg !8192
  %106 = load %struct._object**, %struct._object*** %multiple, align 8, !dbg !8193, !tbaa !1941
  %107 = bitcast %struct._object** %106 to i8*, !dbg !8193
  call void @free(i8* %107) #2, !dbg !8194
  %call187 = call %struct._object* @PyLong_FromLong(i64 1), !dbg !8195
  store %struct._object* %call187, %struct._object** %op1, align 8, !dbg !8196, !tbaa !1941
  %call188 = call i32 @gettimeofday(%struct.timeval* %start, %struct.timezone* null) #2, !dbg !8197
  store i32 0, i32* %i, align 4, !dbg !8198, !tbaa !1971
  br label %for.cond.189, !dbg !8199

for.cond.189:                                     ; preds = %for.inc.207, %for.end.185
  %108 = load i32, i32* %i, align 4, !dbg !8200, !tbaa !1971
  %cmp190 = icmp slt i32 %108, 10000000, !dbg !8203
  br i1 %cmp190, label %for.body.192, label %for.end.209, !dbg !8204

for.body.192:                                     ; preds = %for.cond.189
  %109 = load %struct._object*, %struct._object** %op1, align 8, !dbg !8205, !tbaa !1941
  %110 = load %struct._object*, %struct._object** %op1, align 8, !dbg !8206, !tbaa !1941
  %call193 = call %struct._object* @PyNumber_Add(%struct._object* %109, %struct._object* %110), !dbg !8207
  store %struct._object* %call193, %struct._object** %result, align 8, !dbg !8208, !tbaa !1941
  br label %do.body.194, !dbg !8209

do.body.194:                                      ; preds = %for.body.192
  %111 = bitcast %struct._object** %_py_decref_tmp195 to i8*, !dbg !8210
  call void @llvm.lifetime.start(i64 8, i8* %111) #2, !dbg !8210
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp195, metadata !1560, metadata !1945), !dbg !8212
  %112 = load %struct._object*, %struct._object** %result, align 8, !dbg !8213, !tbaa !1941
  store %struct._object* %112, %struct._object** %_py_decref_tmp195, align 8, !dbg !8212, !tbaa !1941
  %113 = load %struct._object*, %struct._object** %_py_decref_tmp195, align 8, !dbg !8214, !tbaa !1941
  %ob_refcnt196 = getelementptr inbounds %struct._object, %struct._object* %113, i32 0, i32 0, !dbg !8216
  %114 = load i64, i64* %ob_refcnt196, align 8, !dbg !8217, !tbaa !1961
  %dec197 = add i64 %114, -1, !dbg !8217
  store i64 %dec197, i64* %ob_refcnt196, align 8, !dbg !8217, !tbaa !1961
  %cmp198 = icmp ne i64 %dec197, 0, !dbg !8218
  br i1 %cmp198, label %if.then.200, label %if.else.201, !dbg !8219

if.then.200:                                      ; preds = %do.body.194
  br label %if.end.204, !dbg !8220

if.else.201:                                      ; preds = %do.body.194
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp195, align 8, !dbg !8222, !tbaa !1941
  %ob_type202 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 1, !dbg !8224
  %116 = load %struct._typeobject*, %struct._typeobject** %ob_type202, align 8, !dbg !8224, !tbaa !1995
  %tp_dealloc203 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %116, i32 0, i32 4, !dbg !8225
  %117 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc203, align 8, !dbg !8225, !tbaa !1997
  %118 = load %struct._object*, %struct._object** %_py_decref_tmp195, align 8, !dbg !8226, !tbaa !1941
  call void %117(%struct._object* %118), !dbg !8227
  br label %if.end.204

if.end.204:                                       ; preds = %if.else.201, %if.then.200
  %119 = bitcast %struct._object** %_py_decref_tmp195 to i8*, !dbg !8228
  call void @llvm.lifetime.end(i64 8, i8* %119) #2, !dbg !8228
  br label %do.cond.205, !dbg !8230

do.cond.205:                                      ; preds = %if.end.204
  br label %do.end.206, !dbg !8231

do.end.206:                                       ; preds = %do.cond.205
  br label %for.inc.207, !dbg !8233

for.inc.207:                                      ; preds = %do.end.206
  %120 = load i32, i32* %i, align 4, !dbg !8234, !tbaa !1971
  %inc208 = add i32 %120, 1, !dbg !8234
  store i32 %inc208, i32* %i, align 4, !dbg !8234, !tbaa !1971
  br label %for.cond.189, !dbg !8235

for.end.209:                                      ; preds = %for.cond.189
  %call210 = call i32 @gettimeofday(%struct.timeval* %stop, %struct.timezone* null) #2, !dbg !8236
  br label %do.body.211, !dbg !8237

do.body.211:                                      ; preds = %for.end.209
  %121 = bitcast %struct._object** %_py_decref_tmp212 to i8*, !dbg !8238
  call void @llvm.lifetime.start(i64 8, i8* %121) #2, !dbg !8238
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp212, metadata !1565, metadata !1945), !dbg !8240
  %122 = load %struct._object*, %struct._object** %op1, align 8, !dbg !8241, !tbaa !1941
  store %struct._object* %122, %struct._object** %_py_decref_tmp212, align 8, !dbg !8240, !tbaa !1941
  %123 = load %struct._object*, %struct._object** %_py_decref_tmp212, align 8, !dbg !8242, !tbaa !1941
  %ob_refcnt213 = getelementptr inbounds %struct._object, %struct._object* %123, i32 0, i32 0, !dbg !8244
  %124 = load i64, i64* %ob_refcnt213, align 8, !dbg !8245, !tbaa !1961
  %dec214 = add i64 %124, -1, !dbg !8245
  store i64 %dec214, i64* %ob_refcnt213, align 8, !dbg !8245, !tbaa !1961
  %cmp215 = icmp ne i64 %dec214, 0, !dbg !8246
  br i1 %cmp215, label %if.then.217, label %if.else.218, !dbg !8247

if.then.217:                                      ; preds = %do.body.211
  br label %if.end.221, !dbg !8248

if.else.218:                                      ; preds = %do.body.211
  %125 = load %struct._object*, %struct._object** %_py_decref_tmp212, align 8, !dbg !8250, !tbaa !1941
  %ob_type219 = getelementptr inbounds %struct._object, %struct._object* %125, i32 0, i32 1, !dbg !8252
  %126 = load %struct._typeobject*, %struct._typeobject** %ob_type219, align 8, !dbg !8252, !tbaa !1995
  %tp_dealloc220 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %126, i32 0, i32 4, !dbg !8253
  %127 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc220, align 8, !dbg !8253, !tbaa !1997
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp212, align 8, !dbg !8254, !tbaa !1941
  call void %127(%struct._object* %128), !dbg !8255
  br label %if.end.221

if.end.221:                                       ; preds = %if.else.218, %if.then.217
  %129 = bitcast %struct._object** %_py_decref_tmp212 to i8*, !dbg !8256
  call void @llvm.lifetime.end(i64 8, i8* %129) #2, !dbg !8256
  br label %do.cond.222, !dbg !8258

do.cond.222:                                      ; preds = %if.end.221
  br label %do.end.223, !dbg !8259

do.end.223:                                       ; preds = %do.cond.222
  call void @print_delta(i32 6, %struct.timeval* %start, %struct.timeval* %stop), !dbg !8261
  %call224 = call %struct._object* @PyLong_FromLong(i64 1000), !dbg !8262
  store %struct._object* %call224, %struct._object** %op1, align 8, !dbg !8263, !tbaa !1941
  %130 = load %struct._object*, %struct._object** %op1, align 8, !dbg !8264, !tbaa !1941
  %cmp225 = icmp eq %struct._object* %130, null, !dbg !8266
  br i1 %cmp225, label %if.then.227, label %if.end.228, !dbg !8267

if.then.227:                                      ; preds = %do.end.223
  store %struct._object* null, %struct._object** %retval, !dbg !8268
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8268

if.end.228:                                       ; preds = %do.end.223
  %call229 = call i32 @gettimeofday(%struct.timeval* %start, %struct.timezone* null) #2, !dbg !8269
  store i32 0, i32* %i, align 4, !dbg !8270, !tbaa !1971
  br label %for.cond.230, !dbg !8271

for.cond.230:                                     ; preds = %for.inc.255, %if.end.228
  %131 = load i32, i32* %i, align 4, !dbg !8272, !tbaa !1971
  %cmp231 = icmp slt i32 %131, 10000000, !dbg !8275
  br i1 %cmp231, label %for.body.233, label %for.end.257, !dbg !8276

for.body.233:                                     ; preds = %for.cond.230
  %132 = load %struct._object*, %struct._object** %op1, align 8, !dbg !8277, !tbaa !1941
  %133 = load %struct._object*, %struct._object** %op1, align 8, !dbg !8278, !tbaa !1941
  %call234 = call %struct._object* @PyNumber_Add(%struct._object* %132, %struct._object* %133), !dbg !8279
  store %struct._object* %call234, %struct._object** %result, align 8, !dbg !8280, !tbaa !1941
  br label %do.body.235, !dbg !8281

do.body.235:                                      ; preds = %for.body.233
  %134 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8282
  call void @llvm.lifetime.start(i64 8, i8* %134) #2, !dbg !8282
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1567, metadata !1945), !dbg !8284
  %135 = load %struct._object*, %struct._object** %result, align 8, !dbg !8285, !tbaa !1941
  store %struct._object* %135, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8284, !tbaa !1941
  %136 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8286, !tbaa !1941
  %cmp236 = icmp ne %struct._object* %136, null, !dbg !8287
  br i1 %cmp236, label %if.then.238, label %if.end.252, !dbg !8288

if.then.238:                                      ; preds = %do.body.235
  br label %do.body.239, !dbg !8289

do.body.239:                                      ; preds = %if.then.238
  %137 = bitcast %struct._object** %_py_decref_tmp240 to i8*, !dbg !8291
  call void @llvm.lifetime.start(i64 8, i8* %137) #2, !dbg !8291
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp240, metadata !1572, metadata !1945), !dbg !8293
  %138 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8294, !tbaa !1941
  store %struct._object* %138, %struct._object** %_py_decref_tmp240, align 8, !dbg !8293, !tbaa !1941
  %139 = load %struct._object*, %struct._object** %_py_decref_tmp240, align 8, !dbg !8295, !tbaa !1941
  %ob_refcnt241 = getelementptr inbounds %struct._object, %struct._object* %139, i32 0, i32 0, !dbg !8297
  %140 = load i64, i64* %ob_refcnt241, align 8, !dbg !8298, !tbaa !1961
  %dec242 = add i64 %140, -1, !dbg !8298
  store i64 %dec242, i64* %ob_refcnt241, align 8, !dbg !8298, !tbaa !1961
  %cmp243 = icmp ne i64 %dec242, 0, !dbg !8299
  br i1 %cmp243, label %if.then.245, label %if.else.246, !dbg !8300

if.then.245:                                      ; preds = %do.body.239
  br label %if.end.249, !dbg !8301

if.else.246:                                      ; preds = %do.body.239
  %141 = load %struct._object*, %struct._object** %_py_decref_tmp240, align 8, !dbg !8303, !tbaa !1941
  %ob_type247 = getelementptr inbounds %struct._object, %struct._object* %141, i32 0, i32 1, !dbg !8305
  %142 = load %struct._typeobject*, %struct._typeobject** %ob_type247, align 8, !dbg !8305, !tbaa !1995
  %tp_dealloc248 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %142, i32 0, i32 4, !dbg !8306
  %143 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc248, align 8, !dbg !8306, !tbaa !1997
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp240, align 8, !dbg !8307, !tbaa !1941
  call void %143(%struct._object* %144), !dbg !8308
  br label %if.end.249

if.end.249:                                       ; preds = %if.else.246, %if.then.245
  %145 = bitcast %struct._object** %_py_decref_tmp240 to i8*, !dbg !8309
  call void @llvm.lifetime.end(i64 8, i8* %145) #2, !dbg !8309
  br label %do.cond.250, !dbg !8311

do.cond.250:                                      ; preds = %if.end.249
  br label %do.end.251, !dbg !8312

do.end.251:                                       ; preds = %do.cond.250
  br label %if.end.252, !dbg !8314

if.end.252:                                       ; preds = %do.end.251, %do.body.235
  %146 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8316
  call void @llvm.lifetime.end(i64 8, i8* %146) #2, !dbg !8316
  br label %do.cond.253, !dbg !8319

do.cond.253:                                      ; preds = %if.end.252
  br label %do.end.254, !dbg !8320

do.end.254:                                       ; preds = %do.cond.253
  br label %for.inc.255, !dbg !8322

for.inc.255:                                      ; preds = %do.end.254
  %147 = load i32, i32* %i, align 4, !dbg !8323, !tbaa !1971
  %inc256 = add i32 %147, 1, !dbg !8323
  store i32 %inc256, i32* %i, align 4, !dbg !8323, !tbaa !1971
  br label %for.cond.230, !dbg !8324

for.end.257:                                      ; preds = %for.cond.230
  %call258 = call i32 @gettimeofday(%struct.timeval* %stop, %struct.timezone* null) #2, !dbg !8325
  br label %do.body.259, !dbg !8326

do.body.259:                                      ; preds = %for.end.257
  %148 = bitcast %struct._object** %_py_decref_tmp260 to i8*, !dbg !8327
  call void @llvm.lifetime.start(i64 8, i8* %148) #2, !dbg !8327
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp260, metadata !1575, metadata !1945), !dbg !8329
  %149 = load %struct._object*, %struct._object** %op1, align 8, !dbg !8330, !tbaa !1941
  store %struct._object* %149, %struct._object** %_py_decref_tmp260, align 8, !dbg !8329, !tbaa !1941
  %150 = load %struct._object*, %struct._object** %_py_decref_tmp260, align 8, !dbg !8331, !tbaa !1941
  %ob_refcnt261 = getelementptr inbounds %struct._object, %struct._object* %150, i32 0, i32 0, !dbg !8333
  %151 = load i64, i64* %ob_refcnt261, align 8, !dbg !8334, !tbaa !1961
  %dec262 = add i64 %151, -1, !dbg !8334
  store i64 %dec262, i64* %ob_refcnt261, align 8, !dbg !8334, !tbaa !1961
  %cmp263 = icmp ne i64 %dec262, 0, !dbg !8335
  br i1 %cmp263, label %if.then.265, label %if.else.266, !dbg !8336

if.then.265:                                      ; preds = %do.body.259
  br label %if.end.269, !dbg !8337

if.else.266:                                      ; preds = %do.body.259
  %152 = load %struct._object*, %struct._object** %_py_decref_tmp260, align 8, !dbg !8339, !tbaa !1941
  %ob_type267 = getelementptr inbounds %struct._object, %struct._object* %152, i32 0, i32 1, !dbg !8341
  %153 = load %struct._typeobject*, %struct._typeobject** %ob_type267, align 8, !dbg !8341, !tbaa !1995
  %tp_dealloc268 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %153, i32 0, i32 4, !dbg !8342
  %154 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc268, align 8, !dbg !8342, !tbaa !1997
  %155 = load %struct._object*, %struct._object** %_py_decref_tmp260, align 8, !dbg !8343, !tbaa !1941
  call void %154(%struct._object* %155), !dbg !8344
  br label %if.end.269

if.end.269:                                       ; preds = %if.else.266, %if.then.265
  %156 = bitcast %struct._object** %_py_decref_tmp260 to i8*, !dbg !8345
  call void @llvm.lifetime.end(i64 8, i8* %156) #2, !dbg !8345
  br label %do.cond.270, !dbg !8346

do.cond.270:                                      ; preds = %if.end.269
  br label %do.end.271, !dbg !8347

do.end.271:                                       ; preds = %do.cond.270
  call void @print_delta(i32 7, %struct.timeval* %start, %struct.timeval* %stop), !dbg !8349
  %157 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8350, !tbaa !1961
  %inc272 = add i64 %157, 1, !dbg !8350
  store i64 %inc272, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8350, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !8351
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8351

cleanup:                                          ; preds = %do.end.271, %if.then.227, %if.then.141, %if.then.92, %if.then.45
  %158 = bitcast %struct._object** %result to i8*, !dbg !8352
  call void @llvm.lifetime.end(i64 8, i8* %158) #2, !dbg !8352
  %159 = bitcast %struct._object** %op1 to i8*, !dbg !8352
  call void @llvm.lifetime.end(i64 8, i8* %159) #2, !dbg !8352
  %160 = bitcast %struct._object*** %multiple to i8*, !dbg !8352
  call void @llvm.lifetime.end(i64 8, i8* %160) #2, !dbg !8352
  %161 = bitcast %struct._object** %single to i8*, !dbg !8352
  call void @llvm.lifetime.end(i64 8, i8* %161) #2, !dbg !8352
  %162 = bitcast %struct.timeval* %stop to i8*, !dbg !8352
  call void @llvm.lifetime.end(i64 16, i8* %162) #2, !dbg !8352
  %163 = bitcast %struct.timeval* %start to i8*, !dbg !8352
  call void @llvm.lifetime.end(i64 16, i8* %163) #2, !dbg !8352
  %164 = bitcast i32* %k to i8*, !dbg !8352
  call void @llvm.lifetime.end(i64 4, i8* %164) #2, !dbg !8352
  %165 = bitcast i32* %i to i8*, !dbg !8352
  call void @llvm.lifetime.end(i64 4, i8* %165) #2, !dbg !8352
  %166 = load %struct._object*, %struct._object** %retval, !dbg !8352
  ret %struct._object* %166, !dbg !8352
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @traceback_print(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %file = alloca %struct._object*, align 8
  %traceback = alloca %struct._object*, align 8
  %result = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1587, metadata !1945), !dbg !8353
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1588, metadata !1945), !dbg !8354
  %0 = bitcast %struct._object** %file to i8*, !dbg !8355
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8355
  call void @llvm.dbg.declare(metadata %struct._object** %file, metadata !1589, metadata !1945), !dbg !8356
  %1 = bitcast %struct._object** %traceback to i8*, !dbg !8357
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8357
  call void @llvm.dbg.declare(metadata %struct._object** %traceback, metadata !1590, metadata !1945), !dbg !8358
  %2 = bitcast i32* %result to i8*, !dbg !8359
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !8359
  call void @llvm.dbg.declare(metadata i32* %result, metadata !1591, metadata !1945), !dbg !8360
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8361, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.336, i32 0, i32 0), %struct._object** %traceback, %struct._object** %file), !dbg !8363
  %tobool = icmp ne i32 %call, 0, !dbg !8363
  br i1 %tobool, label %if.end, label %if.then, !dbg !8364

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8365
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8365

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %traceback, align 8, !dbg !8366, !tbaa !1941
  %5 = load %struct._object*, %struct._object** %file, align 8, !dbg !8367, !tbaa !1941
  %call1 = call i32 @PyTraceBack_Print(%struct._object* %4, %struct._object* %5), !dbg !8368
  store i32 %call1, i32* %result, align 4, !dbg !8369, !tbaa !1971
  %6 = load i32, i32* %result, align 4, !dbg !8370, !tbaa !1971
  %cmp = icmp slt i32 %6, 0, !dbg !8372
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !8373

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !8374
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8374

if.end.3:                                         ; preds = %if.end
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8375, !tbaa !1961
  %inc = add i64 %7, 1, !dbg !8375
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8375, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !8376
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8376

cleanup:                                          ; preds = %if.end.3, %if.then.2, %if.then
  %8 = bitcast i32* %result to i8*, !dbg !8377
  call void @llvm.lifetime.end(i64 4, i8* %8) #2, !dbg !8377
  %9 = bitcast %struct._object** %traceback to i8*, !dbg !8377
  call void @llvm.lifetime.end(i64 8, i8* %9) #2, !dbg !8377
  %10 = bitcast %struct._object** %file to i8*, !dbg !8377
  call void @llvm.lifetime.end(i64 8, i8* %10) #2, !dbg !8377
  %11 = load %struct._object*, %struct._object** %retval, !dbg !8377
  ret %struct._object* %11, !dbg !8377
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @exception_print(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %tb = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1594, metadata !1945), !dbg !8378
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1595, metadata !1945), !dbg !8379
  %0 = bitcast %struct._object** %value to i8*, !dbg !8380
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8380
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !1596, metadata !1945), !dbg !8381
  %1 = bitcast %struct._object** %tb to i8*, !dbg !8382
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8382
  call void @llvm.dbg.declare(metadata %struct._object** %tb, metadata !1597, metadata !1945), !dbg !8383
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8384, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.337, i32 0, i32 0), %struct._object** %value), !dbg !8386
  %tobool = icmp ne i32 %call, 0, !dbg !8386
  br i1 %tobool, label %if.end, label %if.then, !dbg !8387

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8388
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8388

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %value, align 8, !dbg !8389, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1, !dbg !8391
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8391, !tbaa !1995
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19, !dbg !8392
  %5 = load i64, i64* %tp_flags, align 8, !dbg !8392, !tbaa !4039
  %and = and i64 %5, 1073741824, !dbg !8393
  %cmp = icmp ne i64 %and, 0, !dbg !8394
  br i1 %cmp, label %if.end.3, label %if.then.1, !dbg !8395

if.then.1:                                        ; preds = %if.end
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8396, !tbaa !1941
  %call2 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.338, i32 0, i32 0)), !dbg !8398
  store %struct._object* null, %struct._object** %retval, !dbg !8399
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8399

if.end.3:                                         ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %value, align 8, !dbg !8400, !tbaa !1941
  %call4 = call %struct._object* @PyException_GetTraceback(%struct._object* %7), !dbg !8401
  store %struct._object* %call4, %struct._object** %tb, align 8, !dbg !8402, !tbaa !1941
  %8 = load %struct._object*, %struct._object** %value, align 8, !dbg !8403, !tbaa !1941
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1, !dbg !8404
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8, !dbg !8404, !tbaa !1995
  %10 = bitcast %struct._typeobject* %9 to %struct._object*, !dbg !8405
  %11 = load %struct._object*, %struct._object** %value, align 8, !dbg !8406, !tbaa !1941
  %12 = load %struct._object*, %struct._object** %tb, align 8, !dbg !8407, !tbaa !1941
  call void @PyErr_Display(%struct._object* %10, %struct._object* %11, %struct._object* %12), !dbg !8408
  br label %do.body, !dbg !8409

do.body:                                          ; preds = %if.end.3
  %13 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8410
  call void @llvm.lifetime.start(i64 8, i8* %13) #2, !dbg !8410
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1598, metadata !1945), !dbg !8412
  %14 = load %struct._object*, %struct._object** %tb, align 8, !dbg !8413, !tbaa !1941
  store %struct._object* %14, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8412, !tbaa !1941
  %15 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8414, !tbaa !1941
  %cmp6 = icmp ne %struct._object* %15, null, !dbg !8415
  br i1 %cmp6, label %if.then.7, label %if.end.13, !dbg !8416

if.then.7:                                        ; preds = %do.body
  br label %do.body.8, !dbg !8417

do.body.8:                                        ; preds = %if.then.7
  %16 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8419
  call void @llvm.lifetime.start(i64 8, i8* %16) #2, !dbg !8419
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1600, metadata !1945), !dbg !8421
  %17 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8422, !tbaa !1941
  store %struct._object* %17, %struct._object** %_py_decref_tmp, align 8, !dbg !8421, !tbaa !1941
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8423, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0, !dbg !8425
  %19 = load i64, i64* %ob_refcnt, align 8, !dbg !8426, !tbaa !1961
  %dec = add i64 %19, -1, !dbg !8426
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !8426, !tbaa !1961
  %cmp9 = icmp ne i64 %dec, 0, !dbg !8427
  br i1 %cmp9, label %if.then.10, label %if.else, !dbg !8428

if.then.10:                                       ; preds = %do.body.8
  br label %if.end.12, !dbg !8429

if.else:                                          ; preds = %do.body.8
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8431, !tbaa !1941
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1, !dbg !8433
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8, !dbg !8433, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %21, i32 0, i32 4, !dbg !8434
  %22 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8434, !tbaa !1997
  %23 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8435, !tbaa !1941
  call void %22(%struct._object* %23), !dbg !8436
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.10
  %24 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8437
  call void @llvm.lifetime.end(i64 8, i8* %24) #2, !dbg !8437
  br label %do.cond, !dbg !8439

do.cond:                                          ; preds = %if.end.12
  br label %do.end, !dbg !8440

do.end:                                           ; preds = %do.cond
  br label %if.end.13, !dbg !8442

if.end.13:                                        ; preds = %do.end, %do.body
  %25 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8444
  call void @llvm.lifetime.end(i64 8, i8* %25) #2, !dbg !8444
  br label %do.cond.14, !dbg !8447

do.cond.14:                                       ; preds = %if.end.13
  br label %do.end.15, !dbg !8448

do.end.15:                                        ; preds = %do.cond.14
  %26 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8450, !tbaa !1961
  %inc = add i64 %26, 1, !dbg !8450
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8450, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !8451
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8451

cleanup:                                          ; preds = %do.end.15, %if.then.1, %if.then
  %27 = bitcast %struct._object** %tb to i8*, !dbg !8452
  call void @llvm.lifetime.end(i64 8, i8* %27) #2, !dbg !8452
  %28 = bitcast %struct._object** %value to i8*, !dbg !8452
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !8452
  %29 = load %struct._object*, %struct._object** %retval, !dbg !8452
  ret %struct._object* %29, !dbg !8452
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_set_exc_info(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %orig_exc = alloca %struct._object*, align 8
  %new_type = alloca %struct._object*, align 8
  %new_value = alloca %struct._object*, align 8
  %new_tb = alloca %struct._object*, align 8
  %type = alloca %struct._object*, align 8
  %value = alloca %struct._object*, align 8
  %tb = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_xdecref_tmp27 = alloca %struct._object*, align 8
  %_py_decref_tmp31 = alloca %struct._object*, align 8
  %_py_xdecref_tmp46 = alloca %struct._object*, align 8
  %_py_decref_tmp50 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1605, metadata !1945), !dbg !8453
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1606, metadata !1945), !dbg !8454
  %0 = bitcast %struct._object** %orig_exc to i8*, !dbg !8455
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8455
  call void @llvm.dbg.declare(metadata %struct._object** %orig_exc, metadata !1607, metadata !1945), !dbg !8456
  %1 = bitcast %struct._object** %new_type to i8*, !dbg !8457
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8457
  call void @llvm.dbg.declare(metadata %struct._object** %new_type, metadata !1608, metadata !1945), !dbg !8458
  %2 = bitcast %struct._object** %new_value to i8*, !dbg !8457
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8457
  call void @llvm.dbg.declare(metadata %struct._object** %new_value, metadata !1609, metadata !1945), !dbg !8459
  %3 = bitcast %struct._object** %new_tb to i8*, !dbg !8457
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !8457
  call void @llvm.dbg.declare(metadata %struct._object** %new_tb, metadata !1610, metadata !1945), !dbg !8460
  %4 = bitcast %struct._object** %type to i8*, !dbg !8461
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !8461
  call void @llvm.dbg.declare(metadata %struct._object** %type, metadata !1611, metadata !1945), !dbg !8462
  %5 = bitcast %struct._object** %value to i8*, !dbg !8461
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !8461
  call void @llvm.dbg.declare(metadata %struct._object** %value, metadata !1612, metadata !1945), !dbg !8463
  %6 = bitcast %struct._object** %tb to i8*, !dbg !8461
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !8461
  call void @llvm.dbg.declare(metadata %struct._object** %tb, metadata !1613, metadata !1945), !dbg !8464
  %7 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8465, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.339, i32 0, i32 0), %struct._object** %new_type, %struct._object** %new_value, %struct._object** %new_tb), !dbg !8467
  %tobool = icmp ne i32 %call, 0, !dbg !8467
  br i1 %tobool, label %if.end, label %if.then, !dbg !8468

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8469
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8469

if.end:                                           ; preds = %entry
  call void @PyErr_GetExcInfo(%struct._object** %type, %struct._object** %value, %struct._object** %tb), !dbg !8470
  %8 = load %struct._object*, %struct._object** %new_type, align 8, !dbg !8471, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0, !dbg !8472
  %9 = load i64, i64* %ob_refcnt, align 8, !dbg !8473, !tbaa !1961
  %inc = add i64 %9, 1, !dbg !8473
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8473, !tbaa !1961
  %10 = load %struct._object*, %struct._object** %new_value, align 8, !dbg !8474, !tbaa !1941
  %ob_refcnt1 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0, !dbg !8475
  %11 = load i64, i64* %ob_refcnt1, align 8, !dbg !8476, !tbaa !1961
  %inc2 = add i64 %11, 1, !dbg !8476
  store i64 %inc2, i64* %ob_refcnt1, align 8, !dbg !8476, !tbaa !1961
  %12 = load %struct._object*, %struct._object** %new_tb, align 8, !dbg !8477, !tbaa !1941
  %ob_refcnt3 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0, !dbg !8478
  %13 = load i64, i64* %ob_refcnt3, align 8, !dbg !8479, !tbaa !1961
  %inc4 = add i64 %13, 1, !dbg !8479
  store i64 %inc4, i64* %ob_refcnt3, align 8, !dbg !8479, !tbaa !1961
  %14 = load %struct._object*, %struct._object** %new_type, align 8, !dbg !8480, !tbaa !1941
  %15 = load %struct._object*, %struct._object** %new_value, align 8, !dbg !8481, !tbaa !1941
  %16 = load %struct._object*, %struct._object** %new_tb, align 8, !dbg !8482, !tbaa !1941
  call void @PyErr_SetExcInfo(%struct._object* %14, %struct._object* %15, %struct._object* %16), !dbg !8483
  %17 = load %struct._object*, %struct._object** %type, align 8, !dbg !8484, !tbaa !1941
  %tobool5 = icmp ne %struct._object* %17, null, !dbg !8484
  br i1 %tobool5, label %cond.true, label %cond.false, !dbg !8484

cond.true:                                        ; preds = %if.end
  %18 = load %struct._object*, %struct._object** %type, align 8, !dbg !8485, !tbaa !1941
  br label %cond.end, !dbg !8484

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !8487

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._object* [ %18, %cond.true ], [ @_Py_NoneStruct, %cond.false ], !dbg !8484
  %19 = load %struct._object*, %struct._object** %value, align 8, !dbg !8489, !tbaa !1941
  %tobool6 = icmp ne %struct._object* %19, null, !dbg !8489
  br i1 %tobool6, label %cond.true.7, label %cond.false.8, !dbg !8489

cond.true.7:                                      ; preds = %cond.end
  %20 = load %struct._object*, %struct._object** %value, align 8, !dbg !8492, !tbaa !1941
  br label %cond.end.9, !dbg !8494

cond.false.8:                                     ; preds = %cond.end
  br label %cond.end.9, !dbg !8495

cond.end.9:                                       ; preds = %cond.false.8, %cond.true.7
  %cond10 = phi %struct._object* [ %20, %cond.true.7 ], [ @_Py_NoneStruct, %cond.false.8 ], !dbg !8494
  %21 = load %struct._object*, %struct._object** %tb, align 8, !dbg !8497, !tbaa !1941
  %tobool11 = icmp ne %struct._object* %21, null, !dbg !8497
  br i1 %tobool11, label %cond.true.12, label %cond.false.13, !dbg !8497

cond.true.12:                                     ; preds = %cond.end.9
  %22 = load %struct._object*, %struct._object** %tb, align 8, !dbg !8500, !tbaa !1941
  br label %cond.end.14, !dbg !8502

cond.false.13:                                    ; preds = %cond.end.9
  br label %cond.end.14, !dbg !8503

cond.end.14:                                      ; preds = %cond.false.13, %cond.true.12
  %cond15 = phi %struct._object* [ %22, %cond.true.12 ], [ @_Py_NoneStruct, %cond.false.13 ], !dbg !8502
  %call16 = call %struct._object* (i64, ...) @PyTuple_Pack(i64 3, %struct._object* %cond, %struct._object* %cond10, %struct._object* %cond15), !dbg !8505
  store %struct._object* %call16, %struct._object** %orig_exc, align 8, !dbg !8508, !tbaa !1941
  br label %do.body, !dbg !8509

do.body:                                          ; preds = %cond.end.14
  %23 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8510
  call void @llvm.lifetime.start(i64 8, i8* %23) #2, !dbg !8510
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1614, metadata !1945), !dbg !8512
  %24 = load %struct._object*, %struct._object** %type, align 8, !dbg !8513, !tbaa !1941
  store %struct._object* %24, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8512, !tbaa !1941
  %25 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8514, !tbaa !1941
  %cmp = icmp ne %struct._object* %25, null, !dbg !8515
  br i1 %cmp, label %if.then.17, label %if.end.23, !dbg !8516

if.then.17:                                       ; preds = %do.body
  br label %do.body.18, !dbg !8517

do.body.18:                                       ; preds = %if.then.17
  %26 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8519
  call void @llvm.lifetime.start(i64 8, i8* %26) #2, !dbg !8519
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1616, metadata !1945), !dbg !8521
  %27 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !8522, !tbaa !1941
  store %struct._object* %27, %struct._object** %_py_decref_tmp, align 8, !dbg !8521, !tbaa !1941
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8523, !tbaa !1941
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !8525
  %29 = load i64, i64* %ob_refcnt19, align 8, !dbg !8526, !tbaa !1961
  %dec = add i64 %29, -1, !dbg !8526
  store i64 %dec, i64* %ob_refcnt19, align 8, !dbg !8526, !tbaa !1961
  %cmp20 = icmp ne i64 %dec, 0, !dbg !8527
  br i1 %cmp20, label %if.then.21, label %if.else, !dbg !8528

if.then.21:                                       ; preds = %do.body.18
  br label %if.end.22, !dbg !8529

if.else:                                          ; preds = %do.body.18
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8531, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1, !dbg !8533
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8533, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4, !dbg !8534
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8534, !tbaa !1997
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8535, !tbaa !1941
  call void %32(%struct._object* %33), !dbg !8536
  br label %if.end.22

if.end.22:                                        ; preds = %if.else, %if.then.21
  %34 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8537
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !8537
  br label %do.cond, !dbg !8539

do.cond:                                          ; preds = %if.end.22
  br label %do.end, !dbg !8540

do.end:                                           ; preds = %do.cond
  br label %if.end.23, !dbg !8542

if.end.23:                                        ; preds = %do.end, %do.body
  %35 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !8544
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !8544
  br label %do.cond.24, !dbg !8546

do.cond.24:                                       ; preds = %if.end.23
  br label %do.end.25, !dbg !8547

do.end.25:                                        ; preds = %do.cond.24
  br label %do.body.26, !dbg !8549

do.body.26:                                       ; preds = %do.end.25
  %36 = bitcast %struct._object** %_py_xdecref_tmp27 to i8*, !dbg !8550
  call void @llvm.lifetime.start(i64 8, i8* %36) #2, !dbg !8550
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp27, metadata !1619, metadata !1945), !dbg !8552
  %37 = load %struct._object*, %struct._object** %value, align 8, !dbg !8553, !tbaa !1941
  store %struct._object* %37, %struct._object** %_py_xdecref_tmp27, align 8, !dbg !8552, !tbaa !1941
  %38 = load %struct._object*, %struct._object** %_py_xdecref_tmp27, align 8, !dbg !8554, !tbaa !1941
  %cmp28 = icmp ne %struct._object* %38, null, !dbg !8555
  br i1 %cmp28, label %if.then.29, label %if.end.42, !dbg !8556

if.then.29:                                       ; preds = %do.body.26
  br label %do.body.30, !dbg !8557

do.body.30:                                       ; preds = %if.then.29
  %39 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !8559
  call void @llvm.lifetime.start(i64 8, i8* %39) #2, !dbg !8559
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp31, metadata !1621, metadata !1945), !dbg !8561
  %40 = load %struct._object*, %struct._object** %_py_xdecref_tmp27, align 8, !dbg !8562, !tbaa !1941
  store %struct._object* %40, %struct._object** %_py_decref_tmp31, align 8, !dbg !8561, !tbaa !1941
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !8563, !tbaa !1941
  %ob_refcnt32 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0, !dbg !8565
  %42 = load i64, i64* %ob_refcnt32, align 8, !dbg !8566, !tbaa !1961
  %dec33 = add i64 %42, -1, !dbg !8566
  store i64 %dec33, i64* %ob_refcnt32, align 8, !dbg !8566, !tbaa !1961
  %cmp34 = icmp ne i64 %dec33, 0, !dbg !8567
  br i1 %cmp34, label %if.then.35, label %if.else.36, !dbg !8568

if.then.35:                                       ; preds = %do.body.30
  br label %if.end.39, !dbg !8569

if.else.36:                                       ; preds = %do.body.30
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !8571, !tbaa !1941
  %ob_type37 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1, !dbg !8573
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type37, align 8, !dbg !8573, !tbaa !1995
  %tp_dealloc38 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4, !dbg !8574
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc38, align 8, !dbg !8574, !tbaa !1997
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp31, align 8, !dbg !8575, !tbaa !1941
  call void %45(%struct._object* %46), !dbg !8576
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.36, %if.then.35
  %47 = bitcast %struct._object** %_py_decref_tmp31 to i8*, !dbg !8577
  call void @llvm.lifetime.end(i64 8, i8* %47) #2, !dbg !8577
  br label %do.cond.40, !dbg !8579

do.cond.40:                                       ; preds = %if.end.39
  br label %do.end.41, !dbg !8580

do.end.41:                                        ; preds = %do.cond.40
  br label %if.end.42, !dbg !8582

if.end.42:                                        ; preds = %do.end.41, %do.body.26
  %48 = bitcast %struct._object** %_py_xdecref_tmp27 to i8*, !dbg !8584
  call void @llvm.lifetime.end(i64 8, i8* %48) #2, !dbg !8584
  br label %do.cond.43, !dbg !8585

do.cond.43:                                       ; preds = %if.end.42
  br label %do.end.44, !dbg !8586

do.end.44:                                        ; preds = %do.cond.43
  br label %do.body.45, !dbg !8588

do.body.45:                                       ; preds = %do.end.44
  %49 = bitcast %struct._object** %_py_xdecref_tmp46 to i8*, !dbg !8589
  call void @llvm.lifetime.start(i64 8, i8* %49) #2, !dbg !8589
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp46, metadata !1624, metadata !1945), !dbg !8591
  %50 = load %struct._object*, %struct._object** %tb, align 8, !dbg !8592, !tbaa !1941
  store %struct._object* %50, %struct._object** %_py_xdecref_tmp46, align 8, !dbg !8591, !tbaa !1941
  %51 = load %struct._object*, %struct._object** %_py_xdecref_tmp46, align 8, !dbg !8593, !tbaa !1941
  %cmp47 = icmp ne %struct._object* %51, null, !dbg !8594
  br i1 %cmp47, label %if.then.48, label %if.end.61, !dbg !8595

if.then.48:                                       ; preds = %do.body.45
  br label %do.body.49, !dbg !8596

do.body.49:                                       ; preds = %if.then.48
  %52 = bitcast %struct._object** %_py_decref_tmp50 to i8*, !dbg !8598
  call void @llvm.lifetime.start(i64 8, i8* %52) #2, !dbg !8598
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp50, metadata !1626, metadata !1945), !dbg !8600
  %53 = load %struct._object*, %struct._object** %_py_xdecref_tmp46, align 8, !dbg !8601, !tbaa !1941
  store %struct._object* %53, %struct._object** %_py_decref_tmp50, align 8, !dbg !8600, !tbaa !1941
  %54 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8, !dbg !8602, !tbaa !1941
  %ob_refcnt51 = getelementptr inbounds %struct._object, %struct._object* %54, i32 0, i32 0, !dbg !8604
  %55 = load i64, i64* %ob_refcnt51, align 8, !dbg !8605, !tbaa !1961
  %dec52 = add i64 %55, -1, !dbg !8605
  store i64 %dec52, i64* %ob_refcnt51, align 8, !dbg !8605, !tbaa !1961
  %cmp53 = icmp ne i64 %dec52, 0, !dbg !8606
  br i1 %cmp53, label %if.then.54, label %if.else.55, !dbg !8607

if.then.54:                                       ; preds = %do.body.49
  br label %if.end.58, !dbg !8608

if.else.55:                                       ; preds = %do.body.49
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8, !dbg !8610, !tbaa !1941
  %ob_type56 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 1, !dbg !8612
  %57 = load %struct._typeobject*, %struct._typeobject** %ob_type56, align 8, !dbg !8612, !tbaa !1995
  %tp_dealloc57 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %57, i32 0, i32 4, !dbg !8613
  %58 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc57, align 8, !dbg !8613, !tbaa !1997
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp50, align 8, !dbg !8614, !tbaa !1941
  call void %58(%struct._object* %59), !dbg !8615
  br label %if.end.58

if.end.58:                                        ; preds = %if.else.55, %if.then.54
  %60 = bitcast %struct._object** %_py_decref_tmp50 to i8*, !dbg !8616
  call void @llvm.lifetime.end(i64 8, i8* %60) #2, !dbg !8616
  br label %do.cond.59, !dbg !8618

do.cond.59:                                       ; preds = %if.end.58
  br label %do.end.60, !dbg !8619

do.end.60:                                        ; preds = %do.cond.59
  br label %if.end.61, !dbg !8621

if.end.61:                                        ; preds = %do.end.60, %do.body.45
  %61 = bitcast %struct._object** %_py_xdecref_tmp46 to i8*, !dbg !8623
  call void @llvm.lifetime.end(i64 8, i8* %61) #2, !dbg !8623
  br label %do.cond.62, !dbg !8624

do.cond.62:                                       ; preds = %if.end.61
  br label %do.end.63, !dbg !8625

do.end.63:                                        ; preds = %do.cond.62
  %62 = load %struct._object*, %struct._object** %orig_exc, align 8, !dbg !8627, !tbaa !1941
  store %struct._object* %62, %struct._object** %retval, !dbg !8628
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8628

cleanup:                                          ; preds = %do.end.63, %if.then
  %63 = bitcast %struct._object** %tb to i8*, !dbg !8629
  call void @llvm.lifetime.end(i64 8, i8* %63) #2, !dbg !8629
  %64 = bitcast %struct._object** %value to i8*, !dbg !8629
  call void @llvm.lifetime.end(i64 8, i8* %64) #2, !dbg !8629
  %65 = bitcast %struct._object** %type to i8*, !dbg !8629
  call void @llvm.lifetime.end(i64 8, i8* %65) #2, !dbg !8629
  %66 = bitcast %struct._object** %new_tb to i8*, !dbg !8629
  call void @llvm.lifetime.end(i64 8, i8* %66) #2, !dbg !8629
  %67 = bitcast %struct._object** %new_value to i8*, !dbg !8629
  call void @llvm.lifetime.end(i64 8, i8* %67) #2, !dbg !8629
  %68 = bitcast %struct._object** %new_type to i8*, !dbg !8629
  call void @llvm.lifetime.end(i64 8, i8* %68) #2, !dbg !8629
  %69 = bitcast %struct._object** %orig_exc to i8*, !dbg !8629
  call void @llvm.lifetime.end(i64 8, i8* %69) #2, !dbg !8629
  %70 = load %struct._object*, %struct._object** %retval, !dbg !8629
  ret %struct._object* %70, !dbg !8629
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @argparsing(%struct._object* %o, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %o.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %o, %struct._object** %o.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %o.addr, metadata !1631, metadata !1945), !dbg !8630
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1632, metadata !1945), !dbg !8631
  %0 = bitcast %struct._object** %res to i8*, !dbg !8632
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8632
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1633, metadata !1945), !dbg !8633
  store %struct._object* null, %struct._object** @str2, align 8, !dbg !8634, !tbaa !1941
  store %struct._object* null, %struct._object** @str1, align 8, !dbg !8635, !tbaa !1941
  %1 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8636, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.340, i32 0, i32 0), i32 (%struct._object*, i8*)* @PyUnicode_FSConverter, %struct._object** @str1, i32 (%struct._object*, i8*)* @failing_converter, %struct._object** @str2), !dbg !8637
  %tobool = icmp ne i32 %call, 0, !dbg !8637
  br i1 %tobool, label %if.end.7, label %if.then, !dbg !8638

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** @str2, align 8, !dbg !8639, !tbaa !1941
  %tobool1 = icmp ne %struct._object* %2, null, !dbg !8639
  br i1 %tobool1, label %if.end, label %if.then.2, !dbg !8641

if.then.2:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval, !dbg !8642
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8642

if.end:                                           ; preds = %if.then
  %3 = load %struct._object*, %struct._object** @str2, align 8, !dbg !8643, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 0, !dbg !8644
  %4 = load i64, i64* %ob_refcnt, align 8, !dbg !8644, !tbaa !1961
  %call3 = call %struct._object* @PyLong_FromSsize_t(i64 %4), !dbg !8645
  store %struct._object* %call3, %struct._object** %res, align 8, !dbg !8646, !tbaa !1941
  br label %do.body, !dbg !8647

do.body:                                          ; preds = %if.end
  %5 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8648
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !8648
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1634, metadata !1945), !dbg !8650
  %6 = load %struct._object*, %struct._object** @str2, align 8, !dbg !8651, !tbaa !1941
  store %struct._object* %6, %struct._object** %_py_decref_tmp, align 8, !dbg !8650, !tbaa !1941
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8652, !tbaa !1941
  %ob_refcnt4 = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 0, !dbg !8654
  %8 = load i64, i64* %ob_refcnt4, align 8, !dbg !8655, !tbaa !1961
  %dec = add i64 %8, -1, !dbg !8655
  store i64 %dec, i64* %ob_refcnt4, align 8, !dbg !8655, !tbaa !1961
  %cmp = icmp ne i64 %dec, 0, !dbg !8656
  br i1 %cmp, label %if.then.5, label %if.else, !dbg !8657

if.then.5:                                        ; preds = %do.body
  br label %if.end.6, !dbg !8658

if.else:                                          ; preds = %do.body
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8660, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1, !dbg !8662
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8662, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 4, !dbg !8663
  %11 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !8663, !tbaa !1997
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !8664, !tbaa !1941
  call void %11(%struct._object* %12), !dbg !8665
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  %13 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !8666
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !8666
  br label %do.cond, !dbg !8668

do.cond:                                          ; preds = %if.end.6
  br label %do.end, !dbg !8669

do.end:                                           ; preds = %do.cond
  call void @PyErr_Clear(), !dbg !8671
  %14 = load %struct._object*, %struct._object** %res, align 8, !dbg !8672, !tbaa !1941
  store %struct._object* %14, %struct._object** %retval, !dbg !8673
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8673

if.end.7:                                         ; preds = %entry
  %15 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8674, !tbaa !1961
  %inc = add i64 %15, 1, !dbg !8674
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8674, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !8675
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8675

cleanup:                                          ; preds = %if.end.7, %do.end, %if.then.2
  %16 = bitcast %struct._object** %res to i8*, !dbg !8676
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !8676
  %17 = load %struct._object*, %struct._object** %retval, !dbg !8676
  ret %struct._object* %17, !dbg !8676
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @code_newempty(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %filename = alloca i8*, align 8
  %funcname = alloca i8*, align 8
  %firstlineno = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1644, metadata !1945), !dbg !8677
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1645, metadata !1945), !dbg !8678
  %0 = bitcast i8** %filename to i8*, !dbg !8679
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8679
  call void @llvm.dbg.declare(metadata i8** %filename, metadata !1646, metadata !1945), !dbg !8680
  %1 = bitcast i8** %funcname to i8*, !dbg !8681
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8681
  call void @llvm.dbg.declare(metadata i8** %funcname, metadata !1647, metadata !1945), !dbg !8682
  %2 = bitcast i32* %firstlineno to i8*, !dbg !8683
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !8683
  call void @llvm.dbg.declare(metadata i32* %firstlineno, metadata !1648, metadata !1945), !dbg !8684
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8685, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.341, i32 0, i32 0), i8** %filename, i8** %funcname, i32* %firstlineno), !dbg !8687
  %tobool = icmp ne i32 %call, 0, !dbg !8687
  br i1 %tobool, label %if.end, label %if.then, !dbg !8688

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8689
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8689

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %filename, align 8, !dbg !8690, !tbaa !1941
  %5 = load i8*, i8** %funcname, align 8, !dbg !8691, !tbaa !1941
  %6 = load i32, i32* %firstlineno, align 4, !dbg !8692, !tbaa !1971
  %call1 = call %struct.PyCodeObject* @PyCode_NewEmpty(i8* %4, i8* %5, i32 %6), !dbg !8693
  %7 = bitcast %struct.PyCodeObject* %call1 to %struct._object*, !dbg !8694
  store %struct._object* %7, %struct._object** %retval, !dbg !8695
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8695

cleanup:                                          ; preds = %if.end, %if.then
  %8 = bitcast i32* %firstlineno to i8*, !dbg !8696
  call void @llvm.lifetime.end(i64 4, i8* %8) #2, !dbg !8696
  %9 = bitcast i8** %funcname to i8*, !dbg !8696
  call void @llvm.lifetime.end(i64 8, i8* %9) #2, !dbg !8696
  %10 = bitcast i8** %filename to i8*, !dbg !8696
  call void @llvm.lifetime.end(i64 8, i8* %10) #2, !dbg !8696
  %11 = load %struct._object*, %struct._object** %retval, !dbg !8696
  ret %struct._object* %11, !dbg !8696
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @make_exception_with_doc(%struct._object* %self, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwargs.addr = alloca %struct._object*, align 8
  %name = alloca i8*, align 8
  %doc = alloca i8*, align 8
  %base = alloca %struct._object*, align 8
  %dict = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1651, metadata !1945), !dbg !8697
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1652, metadata !1945), !dbg !8698
  store %struct._object* %kwargs, %struct._object** %kwargs.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %kwargs.addr, metadata !1653, metadata !1945), !dbg !8699
  %0 = bitcast i8** %name to i8*, !dbg !8700
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8700
  call void @llvm.dbg.declare(metadata i8** %name, metadata !1654, metadata !1945), !dbg !8701
  %1 = bitcast i8** %doc to i8*, !dbg !8702
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8702
  call void @llvm.dbg.declare(metadata i8** %doc, metadata !1655, metadata !1945), !dbg !8703
  store i8* null, i8** %doc, align 8, !dbg !8703, !tbaa !1941
  %2 = bitcast %struct._object** %base to i8*, !dbg !8704
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8704
  call void @llvm.dbg.declare(metadata %struct._object** %base, metadata !1656, metadata !1945), !dbg !8705
  store %struct._object* null, %struct._object** %base, align 8, !dbg !8705, !tbaa !1941
  %3 = bitcast %struct._object** %dict to i8*, !dbg !8706
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !8706
  call void @llvm.dbg.declare(metadata %struct._object** %dict, metadata !1657, metadata !1945), !dbg !8707
  store %struct._object* null, %struct._object** %dict, align 8, !dbg !8707, !tbaa !1941
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8708, !tbaa !1941
  %5 = load %struct._object*, %struct._object** %kwargs.addr, align 8, !dbg !8710, !tbaa !1941
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %4, %struct._object* %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.346, i32 0, i32 0), i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @make_exception_with_doc.kwlist, i32 0, i32 0), i8** %name, i8** %doc, %struct._object** %base, %struct._object** %dict), !dbg !8711
  %tobool = icmp ne i32 %call, 0, !dbg !8711
  br i1 %tobool, label %if.end, label %if.then, !dbg !8712

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8713
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8713

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %name, align 8, !dbg !8714, !tbaa !1941
  %7 = load i8*, i8** %doc, align 8, !dbg !8715, !tbaa !1941
  %8 = load %struct._object*, %struct._object** %base, align 8, !dbg !8716, !tbaa !1941
  %9 = load %struct._object*, %struct._object** %dict, align 8, !dbg !8717, !tbaa !1941
  %call1 = call %struct._object* @PyErr_NewExceptionWithDoc(i8* %6, i8* %7, %struct._object* %8, %struct._object* %9), !dbg !8718
  store %struct._object* %call1, %struct._object** %retval, !dbg !8719
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8719

cleanup:                                          ; preds = %if.end, %if.then
  %10 = bitcast %struct._object** %dict to i8*, !dbg !8720
  call void @llvm.lifetime.end(i64 8, i8* %10) #2, !dbg !8720
  %11 = bitcast %struct._object** %base to i8*, !dbg !8720
  call void @llvm.lifetime.end(i64 8, i8* %11) #2, !dbg !8720
  %12 = bitcast i8** %doc to i8*, !dbg !8720
  call void @llvm.lifetime.end(i64 8, i8* %12) #2, !dbg !8720
  %13 = bitcast i8** %name to i8*, !dbg !8720
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !8720
  %14 = load %struct._object*, %struct._object** %retval, !dbg !8720
  ret %struct._object* %14, !dbg !8720
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @make_memoryview_from_NULL_pointer(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %info = alloca %struct.bufferinfo, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1660, metadata !1945), !dbg !8721
  %0 = bitcast %struct.bufferinfo* %info to i8*, !dbg !8722
  call void @llvm.lifetime.start(i64 80, i8* %0) #2, !dbg !8722
  call void @llvm.dbg.declare(metadata %struct.bufferinfo* %info, metadata !1661, metadata !1945), !dbg !8723
  %call = call i32 @PyBuffer_FillInfo(%struct.bufferinfo* %info, %struct._object* null, i8* null, i64 1, i32 1, i32 284), !dbg !8724
  %cmp = icmp slt i32 %call, 0, !dbg !8726
  br i1 %cmp, label %if.then, label %if.end, !dbg !8727

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8728
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8728

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyMemoryView_FromBuffer(%struct.bufferinfo* %info), !dbg !8729
  store %struct._object* %call1, %struct._object** %retval, !dbg !8730
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8730

cleanup:                                          ; preds = %if.end, %if.then
  %1 = bitcast %struct.bufferinfo* %info to i8*, !dbg !8731
  call void @llvm.lifetime.end(i64 80, i8* %1) #2, !dbg !8731
  %2 = load %struct._object*, %struct._object** %retval, !dbg !8731
  ret %struct._object* %2, !dbg !8731
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @crash_no_current_thread(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %_save = alloca %struct._ts*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1664, metadata !1945), !dbg !8732
  %0 = bitcast %struct._ts** %_save to i8*, !dbg !8733
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8733
  call void @llvm.dbg.declare(metadata %struct._ts** %_save, metadata !1665, metadata !1945), !dbg !8734
  %call = call %struct._ts* @PyEval_SaveThread(), !dbg !8735
  store %struct._ts* %call, %struct._ts** %_save, align 8, !dbg !8736, !tbaa !1941
  %call1 = call %struct._ts* @PyThreadState_Get(), !dbg !8737
  %1 = load %struct._ts*, %struct._ts** %_save, align 8, !dbg !8738, !tbaa !1941
  call void @PyEval_RestoreThread(%struct._ts* %1), !dbg !8739
  %2 = bitcast %struct._ts** %_save to i8*, !dbg !8740
  call void @llvm.lifetime.end(i64 8, i8* %2) #2, !dbg !8740
  ret %struct._object* null, !dbg !8741
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @run_in_subinterp(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %code = alloca i8*, align 8
  %r = alloca i32, align 4
  %substate = alloca %struct._ts*, align 8
  %mainstate = alloca %struct._ts*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1669, metadata !1945), !dbg !8742
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1670, metadata !1945), !dbg !8743
  %0 = bitcast i8** %code to i8*, !dbg !8744
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8744
  call void @llvm.dbg.declare(metadata i8** %code, metadata !1671, metadata !1945), !dbg !8745
  %1 = bitcast i32* %r to i8*, !dbg !8746
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !8746
  call void @llvm.dbg.declare(metadata i32* %r, metadata !1672, metadata !1945), !dbg !8747
  %2 = bitcast %struct._ts** %substate to i8*, !dbg !8748
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8748
  call void @llvm.dbg.declare(metadata %struct._ts** %substate, metadata !1673, metadata !1945), !dbg !8749
  %3 = bitcast %struct._ts** %mainstate to i8*, !dbg !8748
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !8748
  call void @llvm.dbg.declare(metadata %struct._ts** %mainstate, metadata !1674, metadata !1945), !dbg !8750
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8751, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.347, i32 0, i32 0), i8** %code), !dbg !8753
  %tobool = icmp ne i32 %call, 0, !dbg !8753
  br i1 %tobool, label %if.end, label %if.then, !dbg !8754

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8755
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8755

if.end:                                           ; preds = %entry
  %call1 = call %struct._ts* @PyThreadState_Get(), !dbg !8756
  store %struct._ts* %call1, %struct._ts** %mainstate, align 8, !dbg !8757, !tbaa !1941
  %call2 = call %struct._ts* @PyThreadState_Swap(%struct._ts* null), !dbg !8758
  %call3 = call %struct._ts* @Py_NewInterpreter(), !dbg !8759
  store %struct._ts* %call3, %struct._ts** %substate, align 8, !dbg !8760, !tbaa !1941
  %5 = load %struct._ts*, %struct._ts** %substate, align 8, !dbg !8761, !tbaa !1941
  %cmp = icmp eq %struct._ts* %5, null, !dbg !8763
  br i1 %cmp, label %if.then.4, label %if.end.6, !dbg !8764

if.then.4:                                        ; preds = %if.end
  %6 = load %struct._ts*, %struct._ts** %mainstate, align 8, !dbg !8765, !tbaa !1941
  %call5 = call %struct._ts* @PyThreadState_Swap(%struct._ts* %6), !dbg !8767
  %7 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !8768, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.348, i32 0, i32 0)), !dbg !8769
  store %struct._object* null, %struct._object** %retval, !dbg !8770
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8770

if.end.6:                                         ; preds = %if.end
  %8 = load i8*, i8** %code, align 8, !dbg !8771, !tbaa !1941
  %call7 = call i32 @PyRun_SimpleStringFlags(i8* %8, %struct.PyCompilerFlags* null), !dbg !8772
  store i32 %call7, i32* %r, align 4, !dbg !8773, !tbaa !1971
  %9 = load %struct._ts*, %struct._ts** %substate, align 8, !dbg !8774, !tbaa !1941
  call void @Py_EndInterpreter(%struct._ts* %9), !dbg !8775
  %10 = load %struct._ts*, %struct._ts** %mainstate, align 8, !dbg !8776, !tbaa !1941
  %call8 = call %struct._ts* @PyThreadState_Swap(%struct._ts* %10), !dbg !8777
  %11 = load i32, i32* %r, align 4, !dbg !8778, !tbaa !1971
  %conv = sext i32 %11 to i64, !dbg !8778
  %call9 = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !8779
  store %struct._object* %call9, %struct._object** %retval, !dbg !8780
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8780

cleanup:                                          ; preds = %if.end.6, %if.then.4, %if.then
  %12 = bitcast %struct._ts** %mainstate to i8*, !dbg !8781
  call void @llvm.lifetime.end(i64 8, i8* %12) #2, !dbg !8781
  %13 = bitcast %struct._ts** %substate to i8*, !dbg !8781
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !8781
  %14 = bitcast i32* %r to i8*, !dbg !8781
  call void @llvm.lifetime.end(i64 4, i8* %14) #2, !dbg !8781
  %15 = bitcast i8** %code to i8*, !dbg !8781
  call void @llvm.lifetime.end(i64 8, i8* %15) #2, !dbg !8781
  %16 = load %struct._object*, %struct._object** %retval, !dbg !8781
  ret %struct._object* %16, !dbg !8781
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_pytime_object_to_time_t(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %sec = alloca i64, align 8
  %round = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1677, metadata !1945), !dbg !8782
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1678, metadata !1945), !dbg !8783
  %0 = bitcast %struct._object** %obj to i8*, !dbg !8784
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8784
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !1679, metadata !1945), !dbg !8785
  %1 = bitcast i64* %sec to i8*, !dbg !8786
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8786
  call void @llvm.dbg.declare(metadata i64* %sec, metadata !1680, metadata !1945), !dbg !8787
  %2 = bitcast i32* %round to i8*, !dbg !8788
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !8788
  call void @llvm.dbg.declare(metadata i32* %round, metadata !1683, metadata !1945), !dbg !8789
  %3 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8790, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.349, i32 0, i32 0), %struct._object** %obj, i32* %round), !dbg !8792
  %tobool = icmp ne i32 %call, 0, !dbg !8792
  br i1 %tobool, label %if.end, label %if.then, !dbg !8793

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8794
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8794

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %round, align 4, !dbg !8795, !tbaa !1971
  %call1 = call i32 @check_time_rounding(i32 %4), !dbg !8797
  %cmp = icmp slt i32 %call1, 0, !dbg !8798
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !8799

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !8800
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8800

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8801, !tbaa !1941
  %6 = load i32, i32* %round, align 4, !dbg !8803, !tbaa !1971
  %call4 = call i32 @_PyTime_ObjectToTime_t(%struct._object* %5, i64* %sec, i32 %6), !dbg !8804
  %cmp5 = icmp eq i32 %call4, -1, !dbg !8805
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !8806

if.then.6:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %retval, !dbg !8807
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8807

if.end.7:                                         ; preds = %if.end.3
  %7 = load i64, i64* %sec, align 8, !dbg !8808, !tbaa !2587
  %call8 = call %struct._object* @_PyLong_FromTime_t(i64 %7), !dbg !8809
  store %struct._object* %call8, %struct._object** %retval, !dbg !8810
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8810

cleanup:                                          ; preds = %if.end.7, %if.then.6, %if.then.2, %if.then
  %8 = bitcast i32* %round to i8*, !dbg !8811
  call void @llvm.lifetime.end(i64 4, i8* %8) #2, !dbg !8811
  %9 = bitcast i64* %sec to i8*, !dbg !8811
  call void @llvm.lifetime.end(i64 8, i8* %9) #2, !dbg !8811
  %10 = bitcast %struct._object** %obj to i8*, !dbg !8811
  call void @llvm.lifetime.end(i64 8, i8* %10) #2, !dbg !8811
  %11 = load %struct._object*, %struct._object** %retval, !dbg !8811
  ret %struct._object* %11, !dbg !8811
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_pytime_object_to_timeval(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %sec = alloca i64, align 8
  %usec = alloca i64, align 8
  %round = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1689, metadata !1945), !dbg !8812
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1690, metadata !1945), !dbg !8813
  %0 = bitcast %struct._object** %obj to i8*, !dbg !8814
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8814
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !1691, metadata !1945), !dbg !8815
  %1 = bitcast i64* %sec to i8*, !dbg !8816
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8816
  call void @llvm.dbg.declare(metadata i64* %sec, metadata !1692, metadata !1945), !dbg !8817
  %2 = bitcast i64* %usec to i8*, !dbg !8818
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8818
  call void @llvm.dbg.declare(metadata i64* %usec, metadata !1693, metadata !1945), !dbg !8819
  %3 = bitcast i32* %round to i8*, !dbg !8820
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !8820
  call void @llvm.dbg.declare(metadata i32* %round, metadata !1694, metadata !1945), !dbg !8821
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8822, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.351, i32 0, i32 0), %struct._object** %obj, i32* %round), !dbg !8824
  %tobool = icmp ne i32 %call, 0, !dbg !8824
  br i1 %tobool, label %if.end, label %if.then, !dbg !8825

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8826
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8826

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %round, align 4, !dbg !8827, !tbaa !1971
  %call1 = call i32 @check_time_rounding(i32 %5), !dbg !8829
  %cmp = icmp slt i32 %call1, 0, !dbg !8830
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !8831

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !8832
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8832

if.end.3:                                         ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8833, !tbaa !1941
  %7 = load i32, i32* %round, align 4, !dbg !8835, !tbaa !1971
  %call4 = call i32 @_PyTime_ObjectToTimeval(%struct._object* %6, i64* %sec, i64* %usec, i32 %7), !dbg !8836
  %cmp5 = icmp eq i32 %call4, -1, !dbg !8837
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !8838

if.then.6:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %retval, !dbg !8839
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8839

if.end.7:                                         ; preds = %if.end.3
  %8 = load i64, i64* %sec, align 8, !dbg !8840, !tbaa !2587
  %call8 = call %struct._object* @_PyLong_FromTime_t(i64 %8), !dbg !8841
  %9 = load i64, i64* %usec, align 8, !dbg !8842, !tbaa !2587
  %call9 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.352, i32 0, i32 0), %struct._object* %call8, i64 %9), !dbg !8843
  store %struct._object* %call9, %struct._object** %retval, !dbg !8844
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8844

cleanup:                                          ; preds = %if.end.7, %if.then.6, %if.then.2, %if.then
  %10 = bitcast i32* %round to i8*, !dbg !8845
  call void @llvm.lifetime.end(i64 4, i8* %10) #2, !dbg !8845
  %11 = bitcast i64* %usec to i8*, !dbg !8845
  call void @llvm.lifetime.end(i64 8, i8* %11) #2, !dbg !8845
  %12 = bitcast i64* %sec to i8*, !dbg !8845
  call void @llvm.lifetime.end(i64 8, i8* %12) #2, !dbg !8845
  %13 = bitcast %struct._object** %obj to i8*, !dbg !8845
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !8845
  %14 = load %struct._object*, %struct._object** %retval, !dbg !8845
  ret %struct._object* %14, !dbg !8845
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_pytime_object_to_timespec(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %sec = alloca i64, align 8
  %nsec = alloca i64, align 8
  %round = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1697, metadata !1945), !dbg !8846
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1698, metadata !1945), !dbg !8847
  %0 = bitcast %struct._object** %obj to i8*, !dbg !8848
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8848
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !1699, metadata !1945), !dbg !8849
  %1 = bitcast i64* %sec to i8*, !dbg !8850
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8850
  call void @llvm.dbg.declare(metadata i64* %sec, metadata !1700, metadata !1945), !dbg !8851
  %2 = bitcast i64* %nsec to i8*, !dbg !8852
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8852
  call void @llvm.dbg.declare(metadata i64* %nsec, metadata !1701, metadata !1945), !dbg !8853
  %3 = bitcast i32* %round to i8*, !dbg !8854
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !8854
  call void @llvm.dbg.declare(metadata i32* %round, metadata !1702, metadata !1945), !dbg !8855
  %4 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8856, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.353, i32 0, i32 0), %struct._object** %obj, i32* %round), !dbg !8858
  %tobool = icmp ne i32 %call, 0, !dbg !8858
  br i1 %tobool, label %if.end, label %if.then, !dbg !8859

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8860
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8860

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %round, align 4, !dbg !8861, !tbaa !1971
  %call1 = call i32 @check_time_rounding(i32 %5), !dbg !8863
  %cmp = icmp slt i32 %call1, 0, !dbg !8864
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !8865

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval, !dbg !8866
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8866

if.end.3:                                         ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8867, !tbaa !1941
  %7 = load i32, i32* %round, align 4, !dbg !8869, !tbaa !1971
  %call4 = call i32 @_PyTime_ObjectToTimespec(%struct._object* %6, i64* %sec, i64* %nsec, i32 %7), !dbg !8870
  %cmp5 = icmp eq i32 %call4, -1, !dbg !8871
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !8872

if.then.6:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %retval, !dbg !8873
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8873

if.end.7:                                         ; preds = %if.end.3
  %8 = load i64, i64* %sec, align 8, !dbg !8874, !tbaa !2587
  %call8 = call %struct._object* @_PyLong_FromTime_t(i64 %8), !dbg !8875
  %9 = load i64, i64* %nsec, align 8, !dbg !8876, !tbaa !2587
  %call9 = call %struct._object* (i8*, ...) @_Py_BuildValue_SizeT(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.352, i32 0, i32 0), %struct._object* %call8, i64 %9), !dbg !8877
  store %struct._object* %call9, %struct._object** %retval, !dbg !8878
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8878

cleanup:                                          ; preds = %if.end.7, %if.then.6, %if.then.2, %if.then
  %10 = bitcast i32* %round to i8*, !dbg !8879
  call void @llvm.lifetime.end(i64 4, i8* %10) #2, !dbg !8879
  %11 = bitcast i64* %nsec to i8*, !dbg !8879
  call void @llvm.lifetime.end(i64 8, i8* %11) #2, !dbg !8879
  %12 = bitcast i64* %sec to i8*, !dbg !8879
  call void @llvm.lifetime.end(i64 8, i8* %12) #2, !dbg !8879
  %13 = bitcast %struct._object** %obj to i8*, !dbg !8879
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !8879
  %14 = load %struct._object*, %struct._object** %retval, !dbg !8879
  ret %struct._object* %14, !dbg !8879
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @with_tp_del(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %obj = alloca %struct._object*, align 8
  %tp = alloca %struct._typeobject*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1705, metadata !1945), !dbg !8880
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1706, metadata !1945), !dbg !8881
  %0 = bitcast %struct._object** %obj to i8*, !dbg !8882
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8882
  call void @llvm.dbg.declare(metadata %struct._object** %obj, metadata !1707, metadata !1945), !dbg !8883
  %1 = bitcast %struct._typeobject** %tp to i8*, !dbg !8884
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !8884
  call void @llvm.dbg.declare(metadata %struct._typeobject** %tp, metadata !1708, metadata !1945), !dbg !8885
  %2 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !8886, !tbaa !1941
  %call = call i32 (%struct._object*, i8*, ...) @_PyArg_ParseTuple_SizeT(%struct._object* %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.354, i32 0, i32 0), %struct._object** %obj), !dbg !8888
  %tobool = icmp ne i32 %call, 0, !dbg !8888
  br i1 %tobool, label %if.end, label %if.then, !dbg !8889

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !8890
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8890

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8891, !tbaa !1941
  %4 = bitcast %struct._object* %3 to %struct._typeobject*, !dbg !8892
  store %struct._typeobject* %4, %struct._typeobject** %tp, align 8, !dbg !8893, !tbaa !1941
  %5 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8894, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1, !dbg !8896
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !8896, !tbaa !1995
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19, !dbg !8897
  %7 = load i64, i64* %tp_flags, align 8, !dbg !8897, !tbaa !4039
  %and = and i64 %7, 2147483648, !dbg !8898
  %cmp = icmp ne i64 %and, 0, !dbg !8899
  br i1 %cmp, label %lor.lhs.false, label %if.then.4, !dbg !8900

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct._typeobject*, %struct._typeobject** %tp, align 8, !dbg !8901, !tbaa !1941
  %tp_flags1 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 19, !dbg !8903
  %9 = load i64, i64* %tp_flags1, align 8, !dbg !8903, !tbaa !4039
  %and2 = and i64 %9, 512, !dbg !8904
  %cmp3 = icmp ne i64 %and2, 0, !dbg !8905
  br i1 %cmp3, label %if.end.6, label %if.then.4, !dbg !8906

if.then.4:                                        ; preds = %lor.lhs.false, %if.end
  %10 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !8907, !tbaa !1941
  %11 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8909, !tbaa !1941
  %call5 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %10, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.355, i32 0, i32 0), %struct._object* %11), !dbg !8910
  store %struct._object* null, %struct._object** %retval, !dbg !8911
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8911

if.end.6:                                         ; preds = %lor.lhs.false
  %12 = load %struct._typeobject*, %struct._typeobject** %tp, align 8, !dbg !8912, !tbaa !1941
  %tp_del = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 45, !dbg !8913
  store void (%struct._object*)* @slot_tp_del, void (%struct._object*)** %tp_del, align 8, !dbg !8914, !tbaa !8915
  %13 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8916, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !8917
  %14 = load i64, i64* %ob_refcnt, align 8, !dbg !8918, !tbaa !1961
  %inc = add i64 %14, 1, !dbg !8918
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8918, !tbaa !1961
  %15 = load %struct._object*, %struct._object** %obj, align 8, !dbg !8919, !tbaa !1941
  store %struct._object* %15, %struct._object** %retval, !dbg !8920
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8920

cleanup:                                          ; preds = %if.end.6, %if.then.4, %if.then
  %16 = bitcast %struct._typeobject** %tp to i8*, !dbg !8921
  call void @llvm.lifetime.end(i64 8, i8* %16) #2, !dbg !8921
  %17 = bitcast %struct._object** %obj to i8*, !dbg !8921
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !8921
  %18 = load %struct._object*, %struct._object** %retval, !dbg !8921
  ret %struct._object* %18, !dbg !8921
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_pymem_alloc0(%struct._object* %self) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %ptr = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1728, metadata !1945), !dbg !8922
  %0 = bitcast i8** %ptr to i8*, !dbg !8923
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8923
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !1729, metadata !1945), !dbg !8924
  %call = call i8* @PyMem_Malloc(i64 0), !dbg !8925
  store i8* %call, i8** %ptr, align 8, !dbg !8926, !tbaa !1941
  %1 = load i8*, i8** %ptr, align 8, !dbg !8927, !tbaa !1941
  %cmp = icmp eq i8* %1, null, !dbg !8929
  br i1 %cmp, label %if.then, label %if.end, !dbg !8930

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !8931, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.357, i32 0, i32 0)), !dbg !8933
  store %struct._object* null, %struct._object** %retval, !dbg !8934
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8934

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %ptr, align 8, !dbg !8935, !tbaa !1941
  call void @PyMem_Free(i8* %3), !dbg !8936
  %call1 = call i8* @PyObject_Malloc(i64 0), !dbg !8937
  store i8* %call1, i8** %ptr, align 8, !dbg !8938, !tbaa !1941
  %4 = load i8*, i8** %ptr, align 8, !dbg !8939, !tbaa !1941
  %cmp2 = icmp eq i8* %4, null, !dbg !8941
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !8942

if.then.3:                                        ; preds = %if.end
  %5 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !8943, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.358, i32 0, i32 0)), !dbg !8945
  store %struct._object* null, %struct._object** %retval, !dbg !8946
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8946

if.end.4:                                         ; preds = %if.end
  %6 = load i8*, i8** %ptr, align 8, !dbg !8947, !tbaa !1941
  call void @PyObject_Free(i8* %6), !dbg !8948
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8949, !tbaa !1961
  %inc = add i64 %7, 1, !dbg !8949
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !8949, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !8950
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !8950

cleanup:                                          ; preds = %if.end.4, %if.then.3, %if.then
  %8 = bitcast i8** %ptr to i8*, !dbg !8951
  call void @llvm.lifetime.end(i64 8, i8* %8) #2, !dbg !8951
  %9 = load %struct._object*, %struct._object** %retval, !dbg !8951
  ret %struct._object* %9, !dbg !8951
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_pymem_setrawallocators(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1732, metadata !1945), !dbg !8952
  %call = call %struct._object* @test_setallocators(i32 0), !dbg !8953
  ret %struct._object* %call, !dbg !8954
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_pymem_setallocators(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1765, metadata !1945), !dbg !8955
  %call = call %struct._object* @test_setallocators(i32 1), !dbg !8956
  ret %struct._object* %call, !dbg !8957
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_pyobject_setallocators(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1768, metadata !1945), !dbg !8958
  %call = call %struct._object* @test_setallocators(i32 2), !dbg !8959
  ret %struct._object* %call, !dbg !8960
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @call_in_temporary_c_thread(%struct._object* %self, %struct._object* %callback) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %callback.addr = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %test_c_thread = alloca %struct.test_c_thread_t, align 8
  %thread = alloca i64, align 8
  %_save = alloca %struct._ts*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1771, metadata !1945), !dbg !8961
  store %struct._object* %callback, %struct._object** %callback.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %callback.addr, metadata !1772, metadata !1945), !dbg !8962
  %0 = bitcast %struct._object** %res to i8*, !dbg !8963
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !8963
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1773, metadata !1945), !dbg !8964
  store %struct._object* null, %struct._object** %res, align 8, !dbg !8964, !tbaa !1941
  %1 = bitcast %struct.test_c_thread_t* %test_c_thread to i8*, !dbg !8965
  call void @llvm.lifetime.start(i64 24, i8* %1) #2, !dbg !8965
  call void @llvm.dbg.declare(metadata %struct.test_c_thread_t* %test_c_thread, metadata !1774, metadata !1945), !dbg !8966
  %2 = bitcast i64* %thread to i8*, !dbg !8967
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !8967
  call void @llvm.dbg.declare(metadata i64* %thread, metadata !1783, metadata !1945), !dbg !8968
  call void @PyEval_InitThreads(), !dbg !8969
  %call = call i8* @PyThread_allocate_lock(), !dbg !8970
  %start_event = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 0, !dbg !8971
  store i8* %call, i8** %start_event, align 8, !dbg !8972, !tbaa !5192
  %call1 = call i8* @PyThread_allocate_lock(), !dbg !8973
  %exit_event = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 1, !dbg !8974
  store i8* %call1, i8** %exit_event, align 8, !dbg !8975, !tbaa !5179
  %callback2 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 2, !dbg !8976
  store %struct._object* null, %struct._object** %callback2, align 8, !dbg !8977, !tbaa !5226
  %start_event3 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 0, !dbg !8978
  %3 = load i8*, i8** %start_event3, align 8, !dbg !8978, !tbaa !5192
  %tobool = icmp ne i8* %3, null, !dbg !8980
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8981

lor.lhs.false:                                    ; preds = %entry
  %exit_event4 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 1, !dbg !8982
  %4 = load i8*, i8** %exit_event4, align 8, !dbg !8982, !tbaa !5179
  %tobool5 = icmp ne i8* %4, null, !dbg !8984
  br i1 %tobool5, label %if.end, label %if.then, !dbg !8985

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !8986, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.364, i32 0, i32 0)), !dbg !8988
  br label %exit, !dbg !8989

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct._object*, %struct._object** %callback.addr, align 8, !dbg !8990, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0, !dbg !8991
  %7 = load i64, i64* %ob_refcnt, align 8, !dbg !8992, !tbaa !1961
  %inc = add i64 %7, 1, !dbg !8992
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !8992, !tbaa !1961
  %8 = load %struct._object*, %struct._object** %callback.addr, align 8, !dbg !8993, !tbaa !1941
  %callback6 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 2, !dbg !8994
  store %struct._object* %8, %struct._object** %callback6, align 8, !dbg !8995, !tbaa !5226
  %start_event7 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 0, !dbg !8996
  %9 = load i8*, i8** %start_event7, align 8, !dbg !8996, !tbaa !5192
  %call8 = call i32 @PyThread_acquire_lock(i8* %9, i32 1), !dbg !8997
  %exit_event9 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 1, !dbg !8998
  %10 = load i8*, i8** %exit_event9, align 8, !dbg !8998, !tbaa !5179
  %call10 = call i32 @PyThread_acquire_lock(i8* %10, i32 1), !dbg !8999
  %11 = bitcast %struct.test_c_thread_t* %test_c_thread to i8*, !dbg !9000
  %call11 = call i64 @PyThread_start_new_thread(void (i8*)* @temporary_c_thread, i8* %11), !dbg !9001
  store i64 %call11, i64* %thread, align 8, !dbg !9002, !tbaa !2587
  %12 = load i64, i64* %thread, align 8, !dbg !9003, !tbaa !2587
  %cmp = icmp eq i64 %12, -1, !dbg !9005
  br i1 %cmp, label %if.then.12, label %if.end.15, !dbg !9006

if.then.12:                                       ; preds = %if.end
  %13 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !9007, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %13, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.365, i32 0, i32 0)), !dbg !9009
  %start_event13 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 0, !dbg !9010
  %14 = load i8*, i8** %start_event13, align 8, !dbg !9010, !tbaa !5192
  call void @PyThread_release_lock(i8* %14), !dbg !9011
  %exit_event14 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 1, !dbg !9012
  %15 = load i8*, i8** %exit_event14, align 8, !dbg !9012, !tbaa !5179
  call void @PyThread_release_lock(i8* %15), !dbg !9013
  br label %exit, !dbg !9014

if.end.15:                                        ; preds = %if.end
  %start_event16 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 0, !dbg !9015
  %16 = load i8*, i8** %start_event16, align 8, !dbg !9015, !tbaa !5192
  %call17 = call i32 @PyThread_acquire_lock(i8* %16, i32 1), !dbg !9016
  %start_event18 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 0, !dbg !9017
  %17 = load i8*, i8** %start_event18, align 8, !dbg !9017, !tbaa !5192
  call void @PyThread_release_lock(i8* %17), !dbg !9018
  %18 = bitcast %struct._ts** %_save to i8*, !dbg !9019
  call void @llvm.lifetime.start(i64 8, i8* %18) #2, !dbg !9019
  call void @llvm.dbg.declare(metadata %struct._ts** %_save, metadata !1784, metadata !1945), !dbg !9020
  %call19 = call %struct._ts* @PyEval_SaveThread(), !dbg !9021
  store %struct._ts* %call19, %struct._ts** %_save, align 8, !dbg !9022, !tbaa !1941
  %exit_event20 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 1, !dbg !9023
  %19 = load i8*, i8** %exit_event20, align 8, !dbg !9023, !tbaa !5179
  %call21 = call i32 @PyThread_acquire_lock(i8* %19, i32 1), !dbg !9024
  %exit_event22 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 1, !dbg !9025
  %20 = load i8*, i8** %exit_event22, align 8, !dbg !9025, !tbaa !5179
  call void @PyThread_release_lock(i8* %20), !dbg !9026
  %21 = load %struct._ts*, %struct._ts** %_save, align 8, !dbg !9027, !tbaa !1941
  call void @PyEval_RestoreThread(%struct._ts* %21), !dbg !9028
  %22 = bitcast %struct._ts** %_save to i8*, !dbg !9029
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !9029
  %23 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9030, !tbaa !1961
  %inc23 = add i64 %23, 1, !dbg !9030
  store i64 %inc23, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9030, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %res, align 8, !dbg !9031, !tbaa !1941
  br label %exit, !dbg !9032

exit:                                             ; preds = %if.end.15, %if.then.12, %if.then
  br label %do.body, !dbg !9033

do.body:                                          ; preds = %exit
  %24 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9034
  call void @llvm.lifetime.start(i64 8, i8* %24) #2, !dbg !9034
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1786, metadata !1945), !dbg !9036
  %callback24 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 2, !dbg !9037
  %25 = load %struct._object*, %struct._object** %callback24, align 8, !dbg !9037, !tbaa !5226
  store %struct._object* %25, %struct._object** %_py_tmp, align 8, !dbg !9036, !tbaa !1941
  %26 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9038, !tbaa !1941
  %cmp25 = icmp ne %struct._object* %26, null, !dbg !9039
  br i1 %cmp25, label %if.then.26, label %if.end.33, !dbg !9040

if.then.26:                                       ; preds = %do.body
  %callback27 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 2, !dbg !9041
  store %struct._object* null, %struct._object** %callback27, align 8, !dbg !9043, !tbaa !5226
  br label %do.body.28, !dbg !9044

do.body.28:                                       ; preds = %if.then.26
  %27 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9045
  call void @llvm.lifetime.start(i64 8, i8* %27) #2, !dbg !9045
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1788, metadata !1945), !dbg !9047
  %28 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !9048, !tbaa !1941
  store %struct._object* %28, %struct._object** %_py_decref_tmp, align 8, !dbg !9047, !tbaa !1941
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9049, !tbaa !1941
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0, !dbg !9051
  %30 = load i64, i64* %ob_refcnt29, align 8, !dbg !9052, !tbaa !1961
  %dec = add i64 %30, -1, !dbg !9052
  store i64 %dec, i64* %ob_refcnt29, align 8, !dbg !9052, !tbaa !1961
  %cmp30 = icmp ne i64 %dec, 0, !dbg !9053
  br i1 %cmp30, label %if.then.31, label %if.else, !dbg !9054

if.then.31:                                       ; preds = %do.body.28
  br label %if.end.32, !dbg !9055

if.else:                                          ; preds = %do.body.28
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9057, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1, !dbg !9059
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9059, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4, !dbg !9060
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9060, !tbaa !1997
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9061, !tbaa !1941
  call void %33(%struct._object* %34), !dbg !9062
  br label %if.end.32

if.end.32:                                        ; preds = %if.else, %if.then.31
  %35 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9063
  call void @llvm.lifetime.end(i64 8, i8* %35) #2, !dbg !9063
  br label %do.cond, !dbg !9065

do.cond:                                          ; preds = %if.end.32
  br label %do.end, !dbg !9066

do.end:                                           ; preds = %do.cond
  br label %if.end.33, !dbg !9068

if.end.33:                                        ; preds = %do.end, %do.body
  %36 = bitcast %struct._object** %_py_tmp to i8*, !dbg !9070
  call void @llvm.lifetime.end(i64 8, i8* %36) #2, !dbg !9070
  br label %do.cond.34, !dbg !9073

do.cond.34:                                       ; preds = %if.end.33
  br label %do.end.35, !dbg !9074

do.end.35:                                        ; preds = %do.cond.34
  %start_event36 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 0, !dbg !9076
  %37 = load i8*, i8** %start_event36, align 8, !dbg !9076, !tbaa !5192
  %tobool37 = icmp ne i8* %37, null, !dbg !9078
  br i1 %tobool37, label %if.then.38, label %if.end.40, !dbg !9079

if.then.38:                                       ; preds = %do.end.35
  %start_event39 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 0, !dbg !9080
  %38 = load i8*, i8** %start_event39, align 8, !dbg !9080, !tbaa !5192
  call void @PyThread_free_lock(i8* %38), !dbg !9081
  br label %if.end.40, !dbg !9081

if.end.40:                                        ; preds = %if.then.38, %do.end.35
  %exit_event41 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 1, !dbg !9082
  %39 = load i8*, i8** %exit_event41, align 8, !dbg !9082, !tbaa !5179
  %tobool42 = icmp ne i8* %39, null, !dbg !9084
  br i1 %tobool42, label %if.then.43, label %if.end.45, !dbg !9085

if.then.43:                                       ; preds = %if.end.40
  %exit_event44 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %test_c_thread, i32 0, i32 1, !dbg !9086
  %40 = load i8*, i8** %exit_event44, align 8, !dbg !9086, !tbaa !5179
  call void @PyThread_free_lock(i8* %40), !dbg !9087
  br label %if.end.45, !dbg !9087

if.end.45:                                        ; preds = %if.then.43, %if.end.40
  %41 = load %struct._object*, %struct._object** %res, align 8, !dbg !9088, !tbaa !1941
  %42 = bitcast i64* %thread to i8*, !dbg !9089
  call void @llvm.lifetime.end(i64 8, i8* %42) #2, !dbg !9089
  %43 = bitcast %struct.test_c_thread_t* %test_c_thread to i8*, !dbg !9089
  call void @llvm.lifetime.end(i64 24, i8* %43) #2, !dbg !9089
  %44 = bitcast %struct._object** %res to i8*, !dbg !9089
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !9089
  ret %struct._object* %41, !dbg !9090
}

declare %struct._object* @PyTuple_New(i64) #3

declare void @PyErr_SetObject(%struct._object*, %struct._object*) #3

declare %struct._object* @PyErr_NoMemory() #3

declare void @PyErr_SetString(%struct._object*, i8*) #3

declare i8* @PyCapsule_Import(i8*, i32) #3

declare %struct._object* @PyList_New(i64) #3

declare i32 @PyList_Reverse(%struct._object*) #3

declare i64 @PyLong_AsLong(%struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @test_dict_inner(i32 %count) #0 {
entry:
  %retval = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %pos = alloca i64, align 8
  %iterations = alloca i64, align 8
  %i = alloca i32, align 4
  %dict = alloca %struct._object*, align 8
  %v = alloca %struct._object*, align 8
  %k = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp17 = alloca %struct._object*, align 8
  %o = alloca %struct._object*, align 8
  %_py_decref_tmp44 = alloca %struct._object*, align 8
  %_py_decref_tmp58 = alloca %struct._object*, align 8
  %_py_decref_tmp71 = alloca %struct._object*, align 8
  store i32 %count, i32* %count.addr, align 4, !tbaa !1971
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !663, metadata !1945), !dbg !9091
  %0 = bitcast i64* %pos to i8*, !dbg !9092
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !9092
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !664, metadata !1945), !dbg !9093
  store i64 0, i64* %pos, align 8, !dbg !9093, !tbaa !2587
  %1 = bitcast i64* %iterations to i8*, !dbg !9092
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9092
  call void @llvm.dbg.declare(metadata i64* %iterations, metadata !665, metadata !1945), !dbg !9094
  store i64 0, i64* %iterations, align 8, !dbg !9094, !tbaa !2587
  %2 = bitcast i32* %i to i8*, !dbg !9095
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !9095
  call void @llvm.dbg.declare(metadata i32* %i, metadata !666, metadata !1945), !dbg !9096
  %3 = bitcast %struct._object** %dict to i8*, !dbg !9097
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !9097
  call void @llvm.dbg.declare(metadata %struct._object** %dict, metadata !667, metadata !1945), !dbg !9098
  %call = call %struct._object* @PyDict_New(), !dbg !9099
  store %struct._object* %call, %struct._object** %dict, align 8, !dbg !9098, !tbaa !1941
  %4 = bitcast %struct._object** %v to i8*, !dbg !9100
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !9100
  call void @llvm.dbg.declare(metadata %struct._object** %v, metadata !668, metadata !1945), !dbg !9101
  %5 = bitcast %struct._object** %k to i8*, !dbg !9100
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !9100
  call void @llvm.dbg.declare(metadata %struct._object** %k, metadata !669, metadata !1945), !dbg !9102
  %6 = load %struct._object*, %struct._object** %dict, align 8, !dbg !9103, !tbaa !1941
  %cmp = icmp eq %struct._object* %6, null, !dbg !9105
  br i1 %cmp, label %if.then, label %if.end, !dbg !9106

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, !dbg !9107
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88, !dbg !9107

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !9108, !tbaa !1971
  br label %for.cond, !dbg !9109

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !9110, !tbaa !1971
  %8 = load i32, i32* %count.addr, align 4, !dbg !9113, !tbaa !1971
  %cmp1 = icmp slt i32 %7, %8, !dbg !9114
  br i1 %cmp1, label %for.body, label %for.end, !dbg !9115

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !9116, !tbaa !1971
  %conv = sext i32 %9 to i64, !dbg !9116
  %call2 = call %struct._object* @PyLong_FromLong(i64 %conv), !dbg !9117
  store %struct._object* %call2, %struct._object** %v, align 8, !dbg !9118, !tbaa !1941
  %10 = load %struct._object*, %struct._object** %v, align 8, !dbg !9119, !tbaa !1941
  %cmp3 = icmp eq %struct._object* %10, null, !dbg !9121
  br i1 %cmp3, label %if.then.5, label %if.end.6, !dbg !9122

if.then.5:                                        ; preds = %for.body
  store i32 -1, i32* %retval, !dbg !9123
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88, !dbg !9123

if.end.6:                                         ; preds = %for.body
  %11 = load %struct._object*, %struct._object** %dict, align 8, !dbg !9125, !tbaa !1941
  %12 = load %struct._object*, %struct._object** %v, align 8, !dbg !9126, !tbaa !1941
  %13 = load %struct._object*, %struct._object** %v, align 8, !dbg !9127, !tbaa !1941
  %call7 = call i32 @PyDict_SetItem(%struct._object* %11, %struct._object* %12, %struct._object* %13), !dbg !9128
  %cmp8 = icmp slt i32 %call7, 0, !dbg !9129
  br i1 %cmp8, label %if.then.10, label %if.end.15, !dbg !9130

if.then.10:                                       ; preds = %if.end.6
  br label %do.body, !dbg !9131

do.body:                                          ; preds = %if.then.10
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9132
  call void @llvm.lifetime.start(i64 8, i8* %14) #2, !dbg !9132
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !670, metadata !1945), !dbg !9134
  %15 = load %struct._object*, %struct._object** %v, align 8, !dbg !9135, !tbaa !1941
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !9134, !tbaa !1941
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9136, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !9138
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !9139, !tbaa !1961
  %dec = add i64 %17, -1, !dbg !9139
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9139, !tbaa !1961
  %cmp11 = icmp ne i64 %dec, 0, !dbg !9140
  br i1 %cmp11, label %if.then.13, label %if.else, !dbg !9141

if.then.13:                                       ; preds = %do.body
  br label %if.end.14, !dbg !9142

if.else:                                          ; preds = %do.body
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9144, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !9146
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9146, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !9147
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9147, !tbaa !1997
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9148, !tbaa !1941
  call void %20(%struct._object* %21), !dbg !9149
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.13
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9150
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !9150
  br label %do.cond, !dbg !9152

do.cond:                                          ; preds = %if.end.14
  br label %do.end, !dbg !9153

do.end:                                           ; preds = %do.cond
  store i32 -1, i32* %retval, !dbg !9155
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88, !dbg !9155

if.end.15:                                        ; preds = %if.end.6
  br label %do.body.16, !dbg !9156

do.body.16:                                       ; preds = %if.end.15
  %23 = bitcast %struct._object** %_py_decref_tmp17 to i8*, !dbg !9157
  call void @llvm.lifetime.start(i64 8, i8* %23) #2, !dbg !9157
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp17, metadata !677, metadata !1945), !dbg !9159
  %24 = load %struct._object*, %struct._object** %v, align 8, !dbg !9160, !tbaa !1941
  store %struct._object* %24, %struct._object** %_py_decref_tmp17, align 8, !dbg !9159, !tbaa !1941
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !9161, !tbaa !1941
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0, !dbg !9163
  %26 = load i64, i64* %ob_refcnt18, align 8, !dbg !9164, !tbaa !1961
  %dec19 = add i64 %26, -1, !dbg !9164
  store i64 %dec19, i64* %ob_refcnt18, align 8, !dbg !9164, !tbaa !1961
  %cmp20 = icmp ne i64 %dec19, 0, !dbg !9165
  br i1 %cmp20, label %if.then.22, label %if.else.23, !dbg !9166

if.then.22:                                       ; preds = %do.body.16
  br label %if.end.26, !dbg !9167

if.else.23:                                       ; preds = %do.body.16
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !9169, !tbaa !1941
  %ob_type24 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1, !dbg !9171
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type24, align 8, !dbg !9171, !tbaa !1995
  %tp_dealloc25 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4, !dbg !9172
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc25, align 8, !dbg !9172, !tbaa !1997
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8, !dbg !9173, !tbaa !1941
  call void %29(%struct._object* %30), !dbg !9174
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.23, %if.then.22
  %31 = bitcast %struct._object** %_py_decref_tmp17 to i8*, !dbg !9175
  call void @llvm.lifetime.end(i64 8, i8* %31) #2, !dbg !9175
  br label %do.cond.27, !dbg !9177

do.cond.27:                                       ; preds = %if.end.26
  br label %do.end.28, !dbg !9178

do.end.28:                                        ; preds = %do.cond.27
  br label %for.inc, !dbg !9180

for.inc:                                          ; preds = %do.end.28
  %32 = load i32, i32* %i, align 4, !dbg !9181, !tbaa !1971
  %inc = add i32 %32, 1, !dbg !9181
  store i32 %inc, i32* %i, align 4, !dbg !9181, !tbaa !1971
  br label %for.cond, !dbg !9182

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !9183

while.cond:                                       ; preds = %cleanup.cont, %for.end
  %33 = load %struct._object*, %struct._object** %dict, align 8, !dbg !9184, !tbaa !1941
  %call29 = call i32 @PyDict_Next(%struct._object* %33, i64* %pos, %struct._object** %k, %struct._object** %v), !dbg !9187
  %tobool = icmp ne i32 %call29, 0, !dbg !9183
  br i1 %tobool, label %while.body, label %while.end, !dbg !9183

while.body:                                       ; preds = %while.cond
  %34 = bitcast %struct._object** %o to i8*, !dbg !9188
  call void @llvm.lifetime.start(i64 8, i8* %34) #2, !dbg !9188
  call void @llvm.dbg.declare(metadata %struct._object** %o, metadata !679, metadata !1945), !dbg !9189
  %35 = load i64, i64* %iterations, align 8, !dbg !9190, !tbaa !2587
  %inc30 = add i64 %35, 1, !dbg !9190
  store i64 %inc30, i64* %iterations, align 8, !dbg !9190, !tbaa !2587
  %36 = load %struct._object*, %struct._object** %v, align 8, !dbg !9191, !tbaa !1941
  %call31 = call i64 @PyLong_AsLong(%struct._object* %36), !dbg !9192
  %add = add i64 %call31, 1, !dbg !9193
  %conv32 = trunc i64 %add to i32, !dbg !9192
  store i32 %conv32, i32* %i, align 4, !dbg !9194, !tbaa !1971
  %37 = load i32, i32* %i, align 4, !dbg !9195, !tbaa !1971
  %conv33 = sext i32 %37 to i64, !dbg !9195
  %call34 = call %struct._object* @PyLong_FromLong(i64 %conv33), !dbg !9196
  store %struct._object* %call34, %struct._object** %o, align 8, !dbg !9197, !tbaa !1941
  %38 = load %struct._object*, %struct._object** %o, align 8, !dbg !9198, !tbaa !1941
  %cmp35 = icmp eq %struct._object* %38, null, !dbg !9200
  br i1 %cmp35, label %if.then.37, label %if.end.38, !dbg !9201

if.then.37:                                       ; preds = %while.body
  store i32 -1, i32* %retval, !dbg !9202
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9202

if.end.38:                                        ; preds = %while.body
  %39 = load %struct._object*, %struct._object** %dict, align 8, !dbg !9203, !tbaa !1941
  %40 = load %struct._object*, %struct._object** %k, align 8, !dbg !9204, !tbaa !1941
  %41 = load %struct._object*, %struct._object** %o, align 8, !dbg !9205, !tbaa !1941
  %call39 = call i32 @PyDict_SetItem(%struct._object* %39, %struct._object* %40, %struct._object* %41), !dbg !9206
  %cmp40 = icmp slt i32 %call39, 0, !dbg !9207
  br i1 %cmp40, label %if.then.42, label %if.end.56, !dbg !9208

if.then.42:                                       ; preds = %if.end.38
  br label %do.body.43, !dbg !9209

do.body.43:                                       ; preds = %if.then.42
  %42 = bitcast %struct._object** %_py_decref_tmp44 to i8*, !dbg !9210
  call void @llvm.lifetime.start(i64 8, i8* %42) #2, !dbg !9210
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp44, metadata !681, metadata !1945), !dbg !9212
  %43 = load %struct._object*, %struct._object** %o, align 8, !dbg !9213, !tbaa !1941
  store %struct._object* %43, %struct._object** %_py_decref_tmp44, align 8, !dbg !9212, !tbaa !1941
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp44, align 8, !dbg !9214, !tbaa !1941
  %ob_refcnt45 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 0, !dbg !9216
  %45 = load i64, i64* %ob_refcnt45, align 8, !dbg !9217, !tbaa !1961
  %dec46 = add i64 %45, -1, !dbg !9217
  store i64 %dec46, i64* %ob_refcnt45, align 8, !dbg !9217, !tbaa !1961
  %cmp47 = icmp ne i64 %dec46, 0, !dbg !9218
  br i1 %cmp47, label %if.then.49, label %if.else.50, !dbg !9219

if.then.49:                                       ; preds = %do.body.43
  br label %if.end.53, !dbg !9220

if.else.50:                                       ; preds = %do.body.43
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp44, align 8, !dbg !9222, !tbaa !1941
  %ob_type51 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 1, !dbg !9224
  %47 = load %struct._typeobject*, %struct._typeobject** %ob_type51, align 8, !dbg !9224, !tbaa !1995
  %tp_dealloc52 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %47, i32 0, i32 4, !dbg !9225
  %48 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc52, align 8, !dbg !9225, !tbaa !1997
  %49 = load %struct._object*, %struct._object** %_py_decref_tmp44, align 8, !dbg !9226, !tbaa !1941
  call void %48(%struct._object* %49), !dbg !9227
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.50, %if.then.49
  %50 = bitcast %struct._object** %_py_decref_tmp44 to i8*, !dbg !9228
  call void @llvm.lifetime.end(i64 8, i8* %50) #2, !dbg !9228
  br label %do.cond.54, !dbg !9230

do.cond.54:                                       ; preds = %if.end.53
  br label %do.end.55, !dbg !9231

do.end.55:                                        ; preds = %do.cond.54
  store i32 -1, i32* %retval, !dbg !9233
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9233

if.end.56:                                        ; preds = %if.end.38
  br label %do.body.57, !dbg !9234

do.body.57:                                       ; preds = %if.end.56
  %51 = bitcast %struct._object** %_py_decref_tmp58 to i8*, !dbg !9235
  call void @llvm.lifetime.start(i64 8, i8* %51) #2, !dbg !9235
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp58, metadata !685, metadata !1945), !dbg !9237
  %52 = load %struct._object*, %struct._object** %o, align 8, !dbg !9238, !tbaa !1941
  store %struct._object* %52, %struct._object** %_py_decref_tmp58, align 8, !dbg !9237, !tbaa !1941
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8, !dbg !9239, !tbaa !1941
  %ob_refcnt59 = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 0, !dbg !9241
  %54 = load i64, i64* %ob_refcnt59, align 8, !dbg !9242, !tbaa !1961
  %dec60 = add i64 %54, -1, !dbg !9242
  store i64 %dec60, i64* %ob_refcnt59, align 8, !dbg !9242, !tbaa !1961
  %cmp61 = icmp ne i64 %dec60, 0, !dbg !9243
  br i1 %cmp61, label %if.then.63, label %if.else.64, !dbg !9244

if.then.63:                                       ; preds = %do.body.57
  br label %if.end.67, !dbg !9245

if.else.64:                                       ; preds = %do.body.57
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8, !dbg !9247, !tbaa !1941
  %ob_type65 = getelementptr inbounds %struct._object, %struct._object* %55, i32 0, i32 1, !dbg !9249
  %56 = load %struct._typeobject*, %struct._typeobject** %ob_type65, align 8, !dbg !9249, !tbaa !1995
  %tp_dealloc66 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %56, i32 0, i32 4, !dbg !9250
  %57 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc66, align 8, !dbg !9250, !tbaa !1997
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8, !dbg !9251, !tbaa !1941
  call void %57(%struct._object* %58), !dbg !9252
  br label %if.end.67

if.end.67:                                        ; preds = %if.else.64, %if.then.63
  %59 = bitcast %struct._object** %_py_decref_tmp58 to i8*, !dbg !9253
  call void @llvm.lifetime.end(i64 8, i8* %59) #2, !dbg !9253
  br label %do.cond.68, !dbg !9255

do.cond.68:                                       ; preds = %if.end.67
  br label %do.end.69, !dbg !9256

do.end.69:                                        ; preds = %do.cond.68
  store i32 0, i32* %cleanup.dest.slot, !dbg !9258
  br label %cleanup, !dbg !9258

cleanup:                                          ; preds = %do.end.69, %do.end.55, %if.then.37
  %60 = bitcast %struct._object** %o to i8*, !dbg !9259
  call void @llvm.lifetime.end(i64 8, i8* %60) #2, !dbg !9259
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.88 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond, !dbg !9183

while.end:                                        ; preds = %while.cond
  br label %do.body.70, !dbg !9260

do.body.70:                                       ; preds = %while.end
  %61 = bitcast %struct._object** %_py_decref_tmp71 to i8*, !dbg !9261
  call void @llvm.lifetime.start(i64 8, i8* %61) #2, !dbg !9261
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp71, metadata !687, metadata !1945), !dbg !9263
  %62 = load %struct._object*, %struct._object** %dict, align 8, !dbg !9264, !tbaa !1941
  store %struct._object* %62, %struct._object** %_py_decref_tmp71, align 8, !dbg !9263, !tbaa !1941
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !9265, !tbaa !1941
  %ob_refcnt72 = getelementptr inbounds %struct._object, %struct._object* %63, i32 0, i32 0, !dbg !9267
  %64 = load i64, i64* %ob_refcnt72, align 8, !dbg !9268, !tbaa !1961
  %dec73 = add i64 %64, -1, !dbg !9268
  store i64 %dec73, i64* %ob_refcnt72, align 8, !dbg !9268, !tbaa !1961
  %cmp74 = icmp ne i64 %dec73, 0, !dbg !9269
  br i1 %cmp74, label %if.then.76, label %if.else.77, !dbg !9270

if.then.76:                                       ; preds = %do.body.70
  br label %if.end.80, !dbg !9271

if.else.77:                                       ; preds = %do.body.70
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !9273, !tbaa !1941
  %ob_type78 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 1, !dbg !9275
  %66 = load %struct._typeobject*, %struct._typeobject** %ob_type78, align 8, !dbg !9275, !tbaa !1995
  %tp_dealloc79 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %66, i32 0, i32 4, !dbg !9276
  %67 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc79, align 8, !dbg !9276, !tbaa !1997
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp71, align 8, !dbg !9277, !tbaa !1941
  call void %67(%struct._object* %68), !dbg !9278
  br label %if.end.80

if.end.80:                                        ; preds = %if.else.77, %if.then.76
  %69 = bitcast %struct._object** %_py_decref_tmp71 to i8*, !dbg !9279
  call void @llvm.lifetime.end(i64 8, i8* %69) #2, !dbg !9279
  br label %do.cond.81, !dbg !9281

do.cond.81:                                       ; preds = %if.end.80
  br label %do.end.82, !dbg !9282

do.end.82:                                        ; preds = %do.cond.81
  %70 = load i64, i64* %iterations, align 8, !dbg !9284, !tbaa !2587
  %71 = load i32, i32* %count.addr, align 4, !dbg !9286, !tbaa !1971
  %conv83 = sext i32 %71 to i64, !dbg !9286
  %cmp84 = icmp ne i64 %70, %conv83, !dbg !9287
  br i1 %cmp84, label %if.then.86, label %if.else.87, !dbg !9288

if.then.86:                                       ; preds = %do.end.82
  %72 = load %struct._object*, %struct._object** @TestError, align 8, !dbg !9289, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %72, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.135, i32 0, i32 0)), !dbg !9291
  store i32 -1, i32* %retval, !dbg !9292
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88, !dbg !9292

if.else.87:                                       ; preds = %do.end.82
  store i32 0, i32* %retval, !dbg !9293
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.88, !dbg !9293

cleanup.88:                                       ; preds = %if.else.87, %if.then.86, %cleanup, %do.end, %if.then.5, %if.then
  %73 = bitcast %struct._object** %k to i8*, !dbg !9295
  call void @llvm.lifetime.end(i64 8, i8* %73) #2, !dbg !9295
  %74 = bitcast %struct._object** %v to i8*, !dbg !9295
  call void @llvm.lifetime.end(i64 8, i8* %74) #2, !dbg !9295
  %75 = bitcast %struct._object** %dict to i8*, !dbg !9295
  call void @llvm.lifetime.end(i64 8, i8* %75) #2, !dbg !9295
  %76 = bitcast i32* %i to i8*, !dbg !9295
  call void @llvm.lifetime.end(i64 4, i8* %76) #2, !dbg !9295
  %77 = bitcast i64* %iterations to i8*, !dbg !9295
  call void @llvm.lifetime.end(i64 8, i8* %77) #2, !dbg !9295
  %78 = bitcast i64* %pos to i8*, !dbg !9295
  call void @llvm.lifetime.end(i64 8, i8* %78) #2, !dbg !9295
  %79 = load i32, i32* %retval, !dbg !9295
  ret i32 %79, !dbg !9295
}

declare %struct._object* @PyDict_New() #3

declare i32 @PyDict_SetItem(%struct._object*, %struct._object*, %struct._object*) #3

declare i32 @PyDict_Next(%struct._object*, i64*, %struct._object**, %struct._object**) #3

declare %struct._object* @_PyObject_New(%struct._typeobject*) #3

declare void @PyErr_Clear() #3

declare i64 @PyObject_Hash(%struct._object*) #3

declare %struct._object* @PyErr_Occurred() #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_long_api_inner(%struct._object* (i8*)* %error) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %error.addr = alloca %struct._object* (i8*)*, align 8
  %NBITS = alloca i32, align 4
  %base = alloca i64, align 8
  %pyresult = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %in = alloca i64, align 8
  %out = alloca i64, align 8
  %uin = alloca i64, align 8
  %uout = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp46 = alloca %struct._object*, align 8
  %one = alloca %struct._object*, align 8
  %x = alloca %struct._object*, align 8
  %y = alloca %struct._object*, align 8
  %out67 = alloca i64, align 8
  %uout68 = alloca i64, align 8
  %_py_decref_tmp95 = alloca %struct._object*, align 8
  %_py_decref_tmp115 = alloca %struct._object*, align 8
  %_py_decref_tmp148 = alloca %struct._object*, align 8
  %_py_decref_tmp181 = alloca %struct._object*, align 8
  %_py_decref_tmp200 = alloca %struct._object*, align 8
  %_py_decref_tmp232 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp249 = alloca %struct._object*, align 8
  %_py_xdecref_tmp265 = alloca %struct._object*, align 8
  %_py_decref_tmp270 = alloca %struct._object*, align 8
  %_py_decref_tmp286 = alloca %struct._object*, align 8
  %out305 = alloca i64, align 8
  %uout306 = alloca i64, align 8
  %_py_decref_tmp337 = alloca %struct._object*, align 8
  store %struct._object* (i8*)* %error, %struct._object* (i8*)** %error.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object* (i8*)** %error.addr, metadata !724, metadata !1945), !dbg !9296
  %0 = bitcast i32* %NBITS to i8*, !dbg !9297
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !9297
  call void @llvm.dbg.declare(metadata i32* %NBITS, metadata !725, metadata !1945), !dbg !9298
  store i32 64, i32* %NBITS, align 4, !dbg !9298, !tbaa !1971
  %1 = bitcast i64* %base to i8*, !dbg !9299
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9299
  call void @llvm.dbg.declare(metadata i64* %base, metadata !727, metadata !1945), !dbg !9300
  %2 = bitcast %struct._object** %pyresult to i8*, !dbg !9301
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !9301
  call void @llvm.dbg.declare(metadata %struct._object** %pyresult, metadata !728, metadata !1945), !dbg !9302
  %3 = bitcast i32* %i to i8*, !dbg !9303
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !9303
  call void @llvm.dbg.declare(metadata i32* %i, metadata !729, metadata !1945), !dbg !9304
  store i64 1, i64* %base, align 8, !dbg !9305, !tbaa !2587
  store i32 0, i32* %i, align 4, !dbg !9306, !tbaa !1971
  br label %for.cond, !dbg !9307

for.cond:                                         ; preds = %for.inc.64, %entry
  %4 = load i32, i32* %i, align 4, !dbg !9308, !tbaa !1971
  %cmp = icmp slt i32 %4, 65, !dbg !9309
  br i1 %cmp, label %for.body, label %for.end.66, !dbg !9310

for.body:                                         ; preds = %for.cond
  %5 = bitcast i32* %j to i8*, !dbg !9311
  call void @llvm.lifetime.start(i64 4, i8* %5) #2, !dbg !9311
  call void @llvm.dbg.declare(metadata i32* %j, metadata !730, metadata !1945), !dbg !9312
  store i32 0, i32* %j, align 4, !dbg !9313, !tbaa !1971
  br label %for.cond.1, !dbg !9314

for.cond.1:                                       ; preds = %for.inc, %for.body
  %6 = load i32, i32* %j, align 4, !dbg !9315, !tbaa !1971
  %cmp2 = icmp slt i32 %6, 6, !dbg !9318
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !9319

for.body.3:                                       ; preds = %for.cond.1
  %7 = bitcast i64* %in to i8*, !dbg !9320
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !9320
  call void @llvm.dbg.declare(metadata i64* %in, metadata !734, metadata !1945), !dbg !9321
  %8 = bitcast i64* %out to i8*, !dbg !9320
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !9320
  call void @llvm.dbg.declare(metadata i64* %out, metadata !738, metadata !1945), !dbg !9322
  %9 = bitcast i64* %uin to i8*, !dbg !9323
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !9323
  call void @llvm.dbg.declare(metadata i64* %uin, metadata !739, metadata !1945), !dbg !9324
  %10 = bitcast i64* %uout to i8*, !dbg !9323
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !9323
  call void @llvm.dbg.declare(metadata i64* %uout, metadata !740, metadata !1945), !dbg !9325
  %11 = load i32, i32* %j, align 4, !dbg !9326, !tbaa !1971
  %cmp4 = icmp slt i32 %11, 3, !dbg !9327
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !9326

cond.true:                                        ; preds = %for.body.3
  %12 = load i64, i64* %base, align 8, !dbg !9328, !tbaa !2587
  br label %cond.end, !dbg !9326

cond.false:                                       ; preds = %for.body.3
  %13 = load i64, i64* %base, align 8, !dbg !9330, !tbaa !2587
  %sub = sub i64 0, %13, !dbg !9332
  br label %cond.end, !dbg !9326

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %12, %cond.true ], [ %sub, %cond.false ], !dbg !9326
  store i64 %cond, i64* %uin, align 8, !dbg !9333, !tbaa !2587
  %14 = load i32, i32* %j, align 4, !dbg !9336, !tbaa !1971
  %rem = srem i32 %14, 3, !dbg !9337
  %sub5 = sub i32 %rem, 1, !dbg !9338
  %conv = sext i32 %sub5 to i64, !dbg !9339
  %15 = load i64, i64* %uin, align 8, !dbg !9340, !tbaa !2587
  %add = add i64 %15, %conv, !dbg !9340
  store i64 %add, i64* %uin, align 8, !dbg !9340, !tbaa !2587
  %16 = load i64, i64* %uin, align 8, !dbg !9341, !tbaa !2587
  %call = call %struct._object* @PyLong_FromUnsignedLong(i64 %16), !dbg !9342
  store %struct._object* %call, %struct._object** %pyresult, align 8, !dbg !9343, !tbaa !1941
  %17 = load %struct._object*, %struct._object** %pyresult, align 8, !dbg !9344, !tbaa !1941
  %cmp6 = icmp eq %struct._object* %17, null, !dbg !9346
  br i1 %cmp6, label %if.then, label %if.end, !dbg !9347

if.then:                                          ; preds = %cond.end
  %18 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9348, !tbaa !1941
  %call8 = call %struct._object* %18(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.141, i32 0, i32 0)), !dbg !9348
  store %struct._object* %call8, %struct._object** %retval, !dbg !9349
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9349

if.end:                                           ; preds = %cond.end
  %19 = load %struct._object*, %struct._object** %pyresult, align 8, !dbg !9350, !tbaa !1941
  %call9 = call i64 @PyLong_AsUnsignedLong(%struct._object* %19), !dbg !9351
  store i64 %call9, i64* %uout, align 8, !dbg !9352, !tbaa !2587
  %20 = load i64, i64* %uout, align 8, !dbg !9353, !tbaa !2587
  %cmp10 = icmp eq i64 %20, -1, !dbg !9355
  br i1 %cmp10, label %land.lhs.true, label %if.end.15, !dbg !9356

land.lhs.true:                                    ; preds = %if.end
  %call12 = call %struct._object* @PyErr_Occurred(), !dbg !9357
  %tobool = icmp ne %struct._object* %call12, null, !dbg !9357
  br i1 %tobool, label %if.then.13, label %if.end.15, !dbg !9359

if.then.13:                                       ; preds = %land.lhs.true
  %21 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9360, !tbaa !1941
  %call14 = call %struct._object* %21(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.142, i32 0, i32 0)), !dbg !9360
  store %struct._object* %call14, %struct._object** %retval, !dbg !9361
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9361

if.end.15:                                        ; preds = %land.lhs.true, %if.end
  %22 = load i64, i64* %uout, align 8, !dbg !9362, !tbaa !2587
  %23 = load i64, i64* %uin, align 8, !dbg !9364, !tbaa !2587
  %cmp16 = icmp ne i64 %22, %23, !dbg !9365
  br i1 %cmp16, label %if.then.18, label %if.end.20, !dbg !9366

if.then.18:                                       ; preds = %if.end.15
  %24 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9367, !tbaa !1941
  %call19 = call %struct._object* %24(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.143, i32 0, i32 0)), !dbg !9367
  store %struct._object* %call19, %struct._object** %retval, !dbg !9368
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9368

if.end.20:                                        ; preds = %if.end.15
  br label %do.body, !dbg !9369

do.body:                                          ; preds = %if.end.20
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9370
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !9370
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !741, metadata !1945), !dbg !9372
  %26 = load %struct._object*, %struct._object** %pyresult, align 8, !dbg !9373, !tbaa !1941
  store %struct._object* %26, %struct._object** %_py_decref_tmp, align 8, !dbg !9372, !tbaa !1941
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9374, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !9376
  %28 = load i64, i64* %ob_refcnt, align 8, !dbg !9377, !tbaa !1961
  %dec = add i64 %28, -1, !dbg !9377
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !9377, !tbaa !1961
  %cmp21 = icmp ne i64 %dec, 0, !dbg !9378
  br i1 %cmp21, label %if.then.23, label %if.else, !dbg !9379

if.then.23:                                       ; preds = %do.body
  br label %if.end.24, !dbg !9380

if.else:                                          ; preds = %do.body
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9382, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !9384
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !9384, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !9385
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !9385, !tbaa !1997
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !9386, !tbaa !1941
  call void %31(%struct._object* %32), !dbg !9387
  br label %if.end.24

if.end.24:                                        ; preds = %if.else, %if.then.23
  %33 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !9388
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !9388
  br label %do.cond, !dbg !9390

do.cond:                                          ; preds = %if.end.24
  br label %do.end, !dbg !9391

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %pyresult, align 8, !dbg !9393, !tbaa !1941
  %34 = load i64, i64* %uin, align 8, !dbg !9395, !tbaa !2587
  store i64 %34, i64* %in, align 8, !dbg !9396, !tbaa !2587
  %35 = load i64, i64* %in, align 8, !dbg !9397, !tbaa !2587
  %call25 = call %struct._object* @PyLong_FromLong(i64 %35), !dbg !9398
  store %struct._object* %call25, %struct._object** %pyresult, align 8, !dbg !9399, !tbaa !1941
  %36 = load %struct._object*, %struct._object** %pyresult, align 8, !dbg !9400, !tbaa !1941
  %cmp26 = icmp eq %struct._object* %36, null, !dbg !9402
  br i1 %cmp26, label %if.then.28, label %if.end.30, !dbg !9403

if.then.28:                                       ; preds = %do.end
  %37 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9404, !tbaa !1941
  %call29 = call %struct._object* %37(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.144, i32 0, i32 0)), !dbg !9404
  store %struct._object* %call29, %struct._object** %retval, !dbg !9405
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9405

if.end.30:                                        ; preds = %do.end
  %38 = load %struct._object*, %struct._object** %pyresult, align 8, !dbg !9406, !tbaa !1941
  %call31 = call i64 @PyLong_AsLong(%struct._object* %38), !dbg !9407
  store i64 %call31, i64* %out, align 8, !dbg !9408, !tbaa !2587
  %39 = load i64, i64* %out, align 8, !dbg !9409, !tbaa !2587
  %cmp32 = icmp eq i64 %39, -1, !dbg !9411
  br i1 %cmp32, label %land.lhs.true.34, label %if.end.39, !dbg !9412

land.lhs.true.34:                                 ; preds = %if.end.30
  %call35 = call %struct._object* @PyErr_Occurred(), !dbg !9413
  %tobool36 = icmp ne %struct._object* %call35, null, !dbg !9413
  br i1 %tobool36, label %if.then.37, label %if.end.39, !dbg !9415

if.then.37:                                       ; preds = %land.lhs.true.34
  %40 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9416, !tbaa !1941
  %call38 = call %struct._object* %40(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.145, i32 0, i32 0)), !dbg !9416
  store %struct._object* %call38, %struct._object** %retval, !dbg !9417
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9417

if.end.39:                                        ; preds = %land.lhs.true.34, %if.end.30
  %41 = load i64, i64* %out, align 8, !dbg !9418, !tbaa !2587
  %42 = load i64, i64* %in, align 8, !dbg !9420, !tbaa !2587
  %cmp40 = icmp ne i64 %41, %42, !dbg !9421
  br i1 %cmp40, label %if.then.42, label %if.end.44, !dbg !9422

if.then.42:                                       ; preds = %if.end.39
  %43 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9423, !tbaa !1941
  %call43 = call %struct._object* %43(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.146, i32 0, i32 0)), !dbg !9423
  store %struct._object* %call43, %struct._object** %retval, !dbg !9424
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !9424

if.end.44:                                        ; preds = %if.end.39
  br label %do.body.45, !dbg !9425

do.body.45:                                       ; preds = %if.end.44
  %44 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !9426
  call void @llvm.lifetime.start(i64 8, i8* %44) #2, !dbg !9426
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp46, metadata !743, metadata !1945), !dbg !9428
  %45 = load %struct._object*, %struct._object** %pyresult, align 8, !dbg !9429, !tbaa !1941
  store %struct._object* %45, %struct._object** %_py_decref_tmp46, align 8, !dbg !9428, !tbaa !1941
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !9430, !tbaa !1941
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0, !dbg !9432
  %47 = load i64, i64* %ob_refcnt47, align 8, !dbg !9433, !tbaa !1961
  %dec48 = add i64 %47, -1, !dbg !9433
  store i64 %dec48, i64* %ob_refcnt47, align 8, !dbg !9433, !tbaa !1961
  %cmp49 = icmp ne i64 %dec48, 0, !dbg !9434
  br i1 %cmp49, label %if.then.51, label %if.else.52, !dbg !9435

if.then.51:                                       ; preds = %do.body.45
  br label %if.end.55, !dbg !9436

if.else.52:                                       ; preds = %do.body.45
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !9438, !tbaa !1941
  %ob_type53 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !9440
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type53, align 8, !dbg !9440, !tbaa !1995
  %tp_dealloc54 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4, !dbg !9441
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc54, align 8, !dbg !9441, !tbaa !1997
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !9442, !tbaa !1941
  call void %50(%struct._object* %51), !dbg !9443
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.52, %if.then.51
  %52 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !9444
  call void @llvm.lifetime.end(i64 8, i8* %52) #2, !dbg !9444
  br label %do.cond.56, !dbg !9445

do.cond.56:                                       ; preds = %if.end.55
  br label %do.end.57, !dbg !9446

do.end.57:                                        ; preds = %do.cond.56
  store %struct._object* null, %struct._object** %pyresult, align 8, !dbg !9448, !tbaa !1941
  store i32 0, i32* %cleanup.dest.slot, !dbg !9449
  br label %cleanup, !dbg !9449

cleanup:                                          ; preds = %do.end.57, %if.then.42, %if.then.37, %if.then.28, %if.then.18, %if.then.13, %if.then
  %53 = bitcast i64* %uout to i8*, !dbg !9450
  call void @llvm.lifetime.end(i64 8, i8* %53) #2, !dbg !9450
  %54 = bitcast i64* %uin to i8*, !dbg !9450
  call void @llvm.lifetime.end(i64 8, i8* %54) #2, !dbg !9450
  %55 = bitcast i64* %out to i8*, !dbg !9450
  call void @llvm.lifetime.end(i64 8, i8* %55) #2, !dbg !9450
  %56 = bitcast i64* %in to i8*, !dbg !9450
  call void @llvm.lifetime.end(i64 8, i8* %56) #2, !dbg !9450
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.61 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !9451

for.inc:                                          ; preds = %cleanup.cont
  %57 = load i32, i32* %j, align 4, !dbg !9452, !tbaa !1971
  %inc = add i32 %57, 1, !dbg !9452
  store i32 %inc, i32* %j, align 4, !dbg !9452, !tbaa !1971
  br label %for.cond.1, !dbg !9453

for.end:                                          ; preds = %for.cond.1
  store i32 0, i32* %cleanup.dest.slot, !dbg !9454
  br label %cleanup.61, !dbg !9454

cleanup.61:                                       ; preds = %for.end, %cleanup
  %58 = bitcast i32* %j to i8*, !dbg !9455
  call void @llvm.lifetime.end(i64 4, i8* %58) #2, !dbg !9455
  %cleanup.dest.62 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.62, label %cleanup.354 [
    i32 0, label %cleanup.cont.63
  ]

cleanup.cont.63:                                  ; preds = %cleanup.61
  br label %for.inc.64, !dbg !9457

for.inc.64:                                       ; preds = %cleanup.cont.63
  %59 = load i32, i32* %i, align 4, !dbg !9458, !tbaa !1971
  %inc65 = add i32 %59, 1, !dbg !9458
  store i32 %inc65, i32* %i, align 4, !dbg !9458, !tbaa !1971
  %60 = load i64, i64* %base, align 8, !dbg !9459, !tbaa !2587
  %shl = shl i64 %60, 1, !dbg !9459
  store i64 %shl, i64* %base, align 8, !dbg !9459, !tbaa !2587
  br label %for.cond, !dbg !9460

for.end.66:                                       ; preds = %for.cond
  %61 = bitcast %struct._object** %one to i8*, !dbg !9461
  call void @llvm.lifetime.start(i64 8, i8* %61) #2, !dbg !9461
  call void @llvm.dbg.declare(metadata %struct._object** %one, metadata !745, metadata !1945), !dbg !9462
  %62 = bitcast %struct._object** %x to i8*, !dbg !9461
  call void @llvm.lifetime.start(i64 8, i8* %62) #2, !dbg !9461
  call void @llvm.dbg.declare(metadata %struct._object** %x, metadata !747, metadata !1945), !dbg !9463
  %63 = bitcast %struct._object** %y to i8*, !dbg !9461
  call void @llvm.lifetime.start(i64 8, i8* %63) #2, !dbg !9461
  call void @llvm.dbg.declare(metadata %struct._object** %y, metadata !748, metadata !1945), !dbg !9464
  %64 = bitcast i64* %out67 to i8*, !dbg !9465
  call void @llvm.lifetime.start(i64 8, i8* %64) #2, !dbg !9465
  call void @llvm.dbg.declare(metadata i64* %out67, metadata !749, metadata !1945), !dbg !9466
  %65 = bitcast i64* %uout68 to i8*, !dbg !9467
  call void @llvm.lifetime.start(i64 8, i8* %65) #2, !dbg !9467
  call void @llvm.dbg.declare(metadata i64* %uout68, metadata !750, metadata !1945), !dbg !9468
  %call69 = call %struct._object* @PyLong_FromLong(i64 1), !dbg !9469
  store %struct._object* %call69, %struct._object** %one, align 8, !dbg !9470, !tbaa !1941
  %66 = load %struct._object*, %struct._object** %one, align 8, !dbg !9471, !tbaa !1941
  %cmp70 = icmp eq %struct._object* %66, null, !dbg !9473
  br i1 %cmp70, label %if.then.72, label %if.end.74, !dbg !9474

if.then.72:                                       ; preds = %for.end.66
  %67 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9475, !tbaa !1941
  %call73 = call %struct._object* %67(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.147, i32 0, i32 0)), !dbg !9475
  store %struct._object* %call73, %struct._object** %retval, !dbg !9476
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !9476

if.end.74:                                        ; preds = %for.end.66
  %68 = load %struct._object*, %struct._object** %one, align 8, !dbg !9477, !tbaa !1941
  %call75 = call %struct._object* @PyNumber_Negative(%struct._object* %68), !dbg !9478
  store %struct._object* %call75, %struct._object** %x, align 8, !dbg !9479, !tbaa !1941
  %69 = load %struct._object*, %struct._object** %x, align 8, !dbg !9480, !tbaa !1941
  %cmp76 = icmp eq %struct._object* %69, null, !dbg !9482
  br i1 %cmp76, label %if.then.78, label %if.end.80, !dbg !9483

if.then.78:                                       ; preds = %if.end.74
  %70 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9484, !tbaa !1941
  %call79 = call %struct._object* %70(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.148, i32 0, i32 0)), !dbg !9484
  store %struct._object* %call79, %struct._object** %retval, !dbg !9485
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !9485

if.end.80:                                        ; preds = %if.end.74
  %71 = load %struct._object*, %struct._object** %x, align 8, !dbg !9486, !tbaa !1941
  %call81 = call i64 @PyLong_AsUnsignedLong(%struct._object* %71), !dbg !9487
  store i64 %call81, i64* %uout68, align 8, !dbg !9488, !tbaa !2587
  %72 = load i64, i64* %uout68, align 8, !dbg !9489, !tbaa !2587
  %cmp82 = icmp ne i64 %72, -1, !dbg !9491
  br i1 %cmp82, label %if.then.86, label %lor.lhs.false, !dbg !9492

lor.lhs.false:                                    ; preds = %if.end.80
  %call84 = call %struct._object* @PyErr_Occurred(), !dbg !9493
  %tobool85 = icmp ne %struct._object* %call84, null, !dbg !9493
  br i1 %tobool85, label %if.end.88, label %if.then.86, !dbg !9495

if.then.86:                                       ; preds = %lor.lhs.false, %if.end.80
  %73 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9496, !tbaa !1941
  %call87 = call %struct._object* %73(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.149, i32 0, i32 0)), !dbg !9496
  store %struct._object* %call87, %struct._object** %retval, !dbg !9497
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !9497

if.end.88:                                        ; preds = %lor.lhs.false
  %74 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !9498, !tbaa !1941
  %call89 = call i32 @PyErr_ExceptionMatches(%struct._object* %74), !dbg !9500
  %tobool90 = icmp ne i32 %call89, 0, !dbg !9500
  br i1 %tobool90, label %if.end.93, label %if.then.91, !dbg !9501

if.then.91:                                       ; preds = %if.end.88
  %75 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9502, !tbaa !1941
  %call92 = call %struct._object* %75(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.150, i32 0, i32 0)), !dbg !9502
  store %struct._object* %call92, %struct._object** %retval, !dbg !9503
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !9503

if.end.93:                                        ; preds = %if.end.88
  call void @PyErr_Clear(), !dbg !9504
  br label %do.body.94, !dbg !9505

do.body.94:                                       ; preds = %if.end.93
  %76 = bitcast %struct._object** %_py_decref_tmp95 to i8*, !dbg !9506
  call void @llvm.lifetime.start(i64 8, i8* %76) #2, !dbg !9506
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp95, metadata !751, metadata !1945), !dbg !9508
  %77 = load %struct._object*, %struct._object** %x, align 8, !dbg !9509, !tbaa !1941
  store %struct._object* %77, %struct._object** %_py_decref_tmp95, align 8, !dbg !9508, !tbaa !1941
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp95, align 8, !dbg !9510, !tbaa !1941
  %ob_refcnt96 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 0, !dbg !9512
  %79 = load i64, i64* %ob_refcnt96, align 8, !dbg !9513, !tbaa !1961
  %dec97 = add i64 %79, -1, !dbg !9513
  store i64 %dec97, i64* %ob_refcnt96, align 8, !dbg !9513, !tbaa !1961
  %cmp98 = icmp ne i64 %dec97, 0, !dbg !9514
  br i1 %cmp98, label %if.then.100, label %if.else.101, !dbg !9515

if.then.100:                                      ; preds = %do.body.94
  br label %if.end.104, !dbg !9516

if.else.101:                                      ; preds = %do.body.94
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp95, align 8, !dbg !9518, !tbaa !1941
  %ob_type102 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 1, !dbg !9520
  %81 = load %struct._typeobject*, %struct._typeobject** %ob_type102, align 8, !dbg !9520, !tbaa !1995
  %tp_dealloc103 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %81, i32 0, i32 4, !dbg !9521
  %82 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc103, align 8, !dbg !9521, !tbaa !1997
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp95, align 8, !dbg !9522, !tbaa !1941
  call void %82(%struct._object* %83), !dbg !9523
  br label %if.end.104

if.end.104:                                       ; preds = %if.else.101, %if.then.100
  %84 = bitcast %struct._object** %_py_decref_tmp95 to i8*, !dbg !9524
  call void @llvm.lifetime.end(i64 8, i8* %84) #2, !dbg !9524
  br label %do.cond.105, !dbg !9526

do.cond.105:                                      ; preds = %if.end.104
  br label %do.end.106, !dbg !9527

do.end.106:                                       ; preds = %do.cond.105
  store %struct._object* null, %struct._object** %x, align 8, !dbg !9529, !tbaa !1941
  %call107 = call %struct._object* @PyLong_FromLong(i64 64), !dbg !9531
  store %struct._object* %call107, %struct._object** %y, align 8, !dbg !9532, !tbaa !1941
  %85 = load %struct._object*, %struct._object** %y, align 8, !dbg !9533, !tbaa !1941
  %cmp108 = icmp eq %struct._object* %85, null, !dbg !9535
  br i1 %cmp108, label %if.then.110, label %if.end.112, !dbg !9536

if.then.110:                                      ; preds = %do.end.106
  %86 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9537, !tbaa !1941
  %call111 = call %struct._object* %86(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.147, i32 0, i32 0)), !dbg !9537
  store %struct._object* %call111, %struct._object** %retval, !dbg !9538
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !9538

if.end.112:                                       ; preds = %do.end.106
  %87 = load %struct._object*, %struct._object** %one, align 8, !dbg !9539, !tbaa !1941
  %88 = load %struct._object*, %struct._object** %y, align 8, !dbg !9540, !tbaa !1941
  %call113 = call %struct._object* @PyNumber_Lshift(%struct._object* %87, %struct._object* %88), !dbg !9541
  store %struct._object* %call113, %struct._object** %x, align 8, !dbg !9542, !tbaa !1941
  br label %do.body.114, !dbg !9543

do.body.114:                                      ; preds = %if.end.112
  %89 = bitcast %struct._object** %_py_decref_tmp115 to i8*, !dbg !9544
  call void @llvm.lifetime.start(i64 8, i8* %89) #2, !dbg !9544
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp115, metadata !753, metadata !1945), !dbg !9546
  %90 = load %struct._object*, %struct._object** %y, align 8, !dbg !9547, !tbaa !1941
  store %struct._object* %90, %struct._object** %_py_decref_tmp115, align 8, !dbg !9546, !tbaa !1941
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp115, align 8, !dbg !9548, !tbaa !1941
  %ob_refcnt116 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 0, !dbg !9550
  %92 = load i64, i64* %ob_refcnt116, align 8, !dbg !9551, !tbaa !1961
  %dec117 = add i64 %92, -1, !dbg !9551
  store i64 %dec117, i64* %ob_refcnt116, align 8, !dbg !9551, !tbaa !1961
  %cmp118 = icmp ne i64 %dec117, 0, !dbg !9552
  br i1 %cmp118, label %if.then.120, label %if.else.121, !dbg !9553

if.then.120:                                      ; preds = %do.body.114
  br label %if.end.124, !dbg !9554

if.else.121:                                      ; preds = %do.body.114
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp115, align 8, !dbg !9556, !tbaa !1941
  %ob_type122 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 1, !dbg !9558
  %94 = load %struct._typeobject*, %struct._typeobject** %ob_type122, align 8, !dbg !9558, !tbaa !1995
  %tp_dealloc123 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %94, i32 0, i32 4, !dbg !9559
  %95 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc123, align 8, !dbg !9559, !tbaa !1997
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp115, align 8, !dbg !9560, !tbaa !1941
  call void %95(%struct._object* %96), !dbg !9561
  br label %if.end.124

if.end.124:                                       ; preds = %if.else.121, %if.then.120
  %97 = bitcast %struct._object** %_py_decref_tmp115 to i8*, !dbg !9562
  call void @llvm.lifetime.end(i64 8, i8* %97) #2, !dbg !9562
  br label %do.cond.125, !dbg !9563

do.cond.125:                                      ; preds = %if.end.124
  br label %do.end.126, !dbg !9564

do.end.126:                                       ; preds = %do.cond.125
  store %struct._object* null, %struct._object** %y, align 8, !dbg !9566, !tbaa !1941
  %98 = load %struct._object*, %struct._object** %x, align 8, !dbg !9567, !tbaa !1941
  %cmp127 = icmp eq %struct._object* %98, null, !dbg !9569
  br i1 %cmp127, label %if.then.129, label %if.end.131, !dbg !9570

if.then.129:                                      ; preds = %do.end.126
  %99 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9571, !tbaa !1941
  %call130 = call %struct._object* %99(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.151, i32 0, i32 0)), !dbg !9571
  store %struct._object* %call130, %struct._object** %retval, !dbg !9572
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !9572

if.end.131:                                       ; preds = %do.end.126
  %100 = load %struct._object*, %struct._object** %x, align 8, !dbg !9573, !tbaa !1941
  %call132 = call i64 @PyLong_AsUnsignedLong(%struct._object* %100), !dbg !9574
  store i64 %call132, i64* %uout68, align 8, !dbg !9575, !tbaa !2587
  %101 = load i64, i64* %uout68, align 8, !dbg !9576, !tbaa !2587
  %cmp133 = icmp ne i64 %101, -1, !dbg !9578
  br i1 %cmp133, label %if.then.138, label %lor.lhs.false.135, !dbg !9579

lor.lhs.false.135:                                ; preds = %if.end.131
  %call136 = call %struct._object* @PyErr_Occurred(), !dbg !9580
  %tobool137 = icmp ne %struct._object* %call136, null, !dbg !9580
  br i1 %tobool137, label %if.end.140, label %if.then.138, !dbg !9582

if.then.138:                                      ; preds = %lor.lhs.false.135, %if.end.131
  %102 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9583, !tbaa !1941
  %call139 = call %struct._object* %102(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.152, i32 0, i32 0)), !dbg !9583
  store %struct._object* %call139, %struct._object** %retval, !dbg !9584
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !9584

if.end.140:                                       ; preds = %lor.lhs.false.135
  %103 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !9585, !tbaa !1941
  %call141 = call i32 @PyErr_ExceptionMatches(%struct._object* %103), !dbg !9587
  %tobool142 = icmp ne i32 %call141, 0, !dbg !9587
  br i1 %tobool142, label %if.end.145, label %if.then.143, !dbg !9588

if.then.143:                                      ; preds = %if.end.140
  %104 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9589, !tbaa !1941
  %call144 = call %struct._object* %104(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.153, i32 0, i32 0)), !dbg !9589
  store %struct._object* %call144, %struct._object** %retval, !dbg !9590
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !9590

if.end.145:                                       ; preds = %if.end.140
  call void @PyErr_Clear(), !dbg !9591
  %105 = load %struct._object*, %struct._object** %x, align 8, !dbg !9592, !tbaa !1941
  %106 = load %struct._object*, %struct._object** %one, align 8, !dbg !9593, !tbaa !1941
  %call146 = call %struct._object* @PyNumber_Rshift(%struct._object* %105, %struct._object* %106), !dbg !9594
  store %struct._object* %call146, %struct._object** %y, align 8, !dbg !9595, !tbaa !1941
  br label %do.body.147, !dbg !9596

do.body.147:                                      ; preds = %if.end.145
  %107 = bitcast %struct._object** %_py_decref_tmp148 to i8*, !dbg !9597
  call void @llvm.lifetime.start(i64 8, i8* %107) #2, !dbg !9597
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp148, metadata !755, metadata !1945), !dbg !9599
  %108 = load %struct._object*, %struct._object** %x, align 8, !dbg !9600, !tbaa !1941
  store %struct._object* %108, %struct._object** %_py_decref_tmp148, align 8, !dbg !9599, !tbaa !1941
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp148, align 8, !dbg !9601, !tbaa !1941
  %ob_refcnt149 = getelementptr inbounds %struct._object, %struct._object* %109, i32 0, i32 0, !dbg !9603
  %110 = load i64, i64* %ob_refcnt149, align 8, !dbg !9604, !tbaa !1961
  %dec150 = add i64 %110, -1, !dbg !9604
  store i64 %dec150, i64* %ob_refcnt149, align 8, !dbg !9604, !tbaa !1961
  %cmp151 = icmp ne i64 %dec150, 0, !dbg !9605
  br i1 %cmp151, label %if.then.153, label %if.else.154, !dbg !9606

if.then.153:                                      ; preds = %do.body.147
  br label %if.end.157, !dbg !9607

if.else.154:                                      ; preds = %do.body.147
  %111 = load %struct._object*, %struct._object** %_py_decref_tmp148, align 8, !dbg !9609, !tbaa !1941
  %ob_type155 = getelementptr inbounds %struct._object, %struct._object* %111, i32 0, i32 1, !dbg !9611
  %112 = load %struct._typeobject*, %struct._typeobject** %ob_type155, align 8, !dbg !9611, !tbaa !1995
  %tp_dealloc156 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %112, i32 0, i32 4, !dbg !9612
  %113 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc156, align 8, !dbg !9612, !tbaa !1997
  %114 = load %struct._object*, %struct._object** %_py_decref_tmp148, align 8, !dbg !9613, !tbaa !1941
  call void %113(%struct._object* %114), !dbg !9614
  br label %if.end.157

if.end.157:                                       ; preds = %if.else.154, %if.then.153
  %115 = bitcast %struct._object** %_py_decref_tmp148 to i8*, !dbg !9615
  call void @llvm.lifetime.end(i64 8, i8* %115) #2, !dbg !9615
  br label %do.cond.158, !dbg !9616

do.cond.158:                                      ; preds = %if.end.157
  br label %do.end.159, !dbg !9617

do.end.159:                                       ; preds = %do.cond.158
  store %struct._object* null, %struct._object** %x, align 8, !dbg !9619, !tbaa !1941
  %116 = load %struct._object*, %struct._object** %y, align 8, !dbg !9620, !tbaa !1941
  %cmp160 = icmp eq %struct._object* %116, null, !dbg !9622
  br i1 %cmp160, label %if.then.162, label %if.end.164, !dbg !9623

if.then.162:                                      ; preds = %do.end.159
  %117 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9624, !tbaa !1941
  %call163 = call %struct._object* %117(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.154, i32 0, i32 0)), !dbg !9624
  store %struct._object* %call163, %struct._object** %retval, !dbg !9625
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !9625

if.end.164:                                       ; preds = %do.end.159
  %118 = load %struct._object*, %struct._object** %y, align 8, !dbg !9626, !tbaa !1941
  %call165 = call i64 @PyLong_AsLong(%struct._object* %118), !dbg !9627
  store i64 %call165, i64* %out67, align 8, !dbg !9628, !tbaa !2587
  %119 = load i64, i64* %out67, align 8, !dbg !9629, !tbaa !2587
  %cmp166 = icmp ne i64 %119, -1, !dbg !9631
  br i1 %cmp166, label %if.then.171, label %lor.lhs.false.168, !dbg !9632

lor.lhs.false.168:                                ; preds = %if.end.164
  %call169 = call %struct._object* @PyErr_Occurred(), !dbg !9633
  %tobool170 = icmp ne %struct._object* %call169, null, !dbg !9633
  br i1 %tobool170, label %if.end.173, label %if.then.171, !dbg !9635

if.then.171:                                      ; preds = %lor.lhs.false.168, %if.end.164
  %120 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9636, !tbaa !1941
  %call172 = call %struct._object* %120(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.155, i32 0, i32 0)), !dbg !9636
  store %struct._object* %call172, %struct._object** %retval, !dbg !9637
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !9637

if.end.173:                                       ; preds = %lor.lhs.false.168
  %121 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !9638, !tbaa !1941
  %call174 = call i32 @PyErr_ExceptionMatches(%struct._object* %121), !dbg !9640
  %tobool175 = icmp ne i32 %call174, 0, !dbg !9640
  br i1 %tobool175, label %if.end.178, label %if.then.176, !dbg !9641

if.then.176:                                      ; preds = %if.end.173
  %122 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9642, !tbaa !1941
  %call177 = call %struct._object* %122(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.156, i32 0, i32 0)), !dbg !9642
  store %struct._object* %call177, %struct._object** %retval, !dbg !9643
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !9643

if.end.178:                                       ; preds = %if.end.173
  call void @PyErr_Clear(), !dbg !9644
  %123 = load %struct._object*, %struct._object** %y, align 8, !dbg !9645, !tbaa !1941
  %call179 = call %struct._object* @PyNumber_Negative(%struct._object* %123), !dbg !9646
  store %struct._object* %call179, %struct._object** %x, align 8, !dbg !9647, !tbaa !1941
  br label %do.body.180, !dbg !9648

do.body.180:                                      ; preds = %if.end.178
  %124 = bitcast %struct._object** %_py_decref_tmp181 to i8*, !dbg !9649
  call void @llvm.lifetime.start(i64 8, i8* %124) #2, !dbg !9649
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp181, metadata !757, metadata !1945), !dbg !9651
  %125 = load %struct._object*, %struct._object** %y, align 8, !dbg !9652, !tbaa !1941
  store %struct._object* %125, %struct._object** %_py_decref_tmp181, align 8, !dbg !9651, !tbaa !1941
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp181, align 8, !dbg !9653, !tbaa !1941
  %ob_refcnt182 = getelementptr inbounds %struct._object, %struct._object* %126, i32 0, i32 0, !dbg !9655
  %127 = load i64, i64* %ob_refcnt182, align 8, !dbg !9656, !tbaa !1961
  %dec183 = add i64 %127, -1, !dbg !9656
  store i64 %dec183, i64* %ob_refcnt182, align 8, !dbg !9656, !tbaa !1961
  %cmp184 = icmp ne i64 %dec183, 0, !dbg !9657
  br i1 %cmp184, label %if.then.186, label %if.else.187, !dbg !9658

if.then.186:                                      ; preds = %do.body.180
  br label %if.end.190, !dbg !9659

if.else.187:                                      ; preds = %do.body.180
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp181, align 8, !dbg !9661, !tbaa !1941
  %ob_type188 = getelementptr inbounds %struct._object, %struct._object* %128, i32 0, i32 1, !dbg !9663
  %129 = load %struct._typeobject*, %struct._typeobject** %ob_type188, align 8, !dbg !9663, !tbaa !1995
  %tp_dealloc189 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %129, i32 0, i32 4, !dbg !9664
  %130 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc189, align 8, !dbg !9664, !tbaa !1997
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp181, align 8, !dbg !9665, !tbaa !1941
  call void %130(%struct._object* %131), !dbg !9666
  br label %if.end.190

if.end.190:                                       ; preds = %if.else.187, %if.then.186
  %132 = bitcast %struct._object** %_py_decref_tmp181 to i8*, !dbg !9667
  call void @llvm.lifetime.end(i64 8, i8* %132) #2, !dbg !9667
  br label %do.cond.191, !dbg !9668

do.cond.191:                                      ; preds = %if.end.190
  br label %do.end.192, !dbg !9669

do.end.192:                                       ; preds = %do.cond.191
  store %struct._object* null, %struct._object** %y, align 8, !dbg !9671, !tbaa !1941
  %133 = load %struct._object*, %struct._object** %x, align 8, !dbg !9672, !tbaa !1941
  %cmp193 = icmp eq %struct._object* %133, null, !dbg !9674
  br i1 %cmp193, label %if.then.195, label %if.end.197, !dbg !9675

if.then.195:                                      ; preds = %do.end.192
  %134 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9676, !tbaa !1941
  %call196 = call %struct._object* %134(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.148, i32 0, i32 0)), !dbg !9676
  store %struct._object* %call196, %struct._object** %retval, !dbg !9677
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !9677

if.end.197:                                       ; preds = %do.end.192
  %135 = load %struct._object*, %struct._object** %x, align 8, !dbg !9678, !tbaa !1941
  %136 = load %struct._object*, %struct._object** %one, align 8, !dbg !9679, !tbaa !1941
  %call198 = call %struct._object* @PyNumber_Subtract(%struct._object* %135, %struct._object* %136), !dbg !9680
  store %struct._object* %call198, %struct._object** %y, align 8, !dbg !9681, !tbaa !1941
  br label %do.body.199, !dbg !9682

do.body.199:                                      ; preds = %if.end.197
  %137 = bitcast %struct._object** %_py_decref_tmp200 to i8*, !dbg !9683
  call void @llvm.lifetime.start(i64 8, i8* %137) #2, !dbg !9683
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp200, metadata !759, metadata !1945), !dbg !9685
  %138 = load %struct._object*, %struct._object** %x, align 8, !dbg !9686, !tbaa !1941
  store %struct._object* %138, %struct._object** %_py_decref_tmp200, align 8, !dbg !9685, !tbaa !1941
  %139 = load %struct._object*, %struct._object** %_py_decref_tmp200, align 8, !dbg !9687, !tbaa !1941
  %ob_refcnt201 = getelementptr inbounds %struct._object, %struct._object* %139, i32 0, i32 0, !dbg !9689
  %140 = load i64, i64* %ob_refcnt201, align 8, !dbg !9690, !tbaa !1961
  %dec202 = add i64 %140, -1, !dbg !9690
  store i64 %dec202, i64* %ob_refcnt201, align 8, !dbg !9690, !tbaa !1961
  %cmp203 = icmp ne i64 %dec202, 0, !dbg !9691
  br i1 %cmp203, label %if.then.205, label %if.else.206, !dbg !9692

if.then.205:                                      ; preds = %do.body.199
  br label %if.end.209, !dbg !9693

if.else.206:                                      ; preds = %do.body.199
  %141 = load %struct._object*, %struct._object** %_py_decref_tmp200, align 8, !dbg !9695, !tbaa !1941
  %ob_type207 = getelementptr inbounds %struct._object, %struct._object* %141, i32 0, i32 1, !dbg !9697
  %142 = load %struct._typeobject*, %struct._typeobject** %ob_type207, align 8, !dbg !9697, !tbaa !1995
  %tp_dealloc208 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %142, i32 0, i32 4, !dbg !9698
  %143 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc208, align 8, !dbg !9698, !tbaa !1997
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp200, align 8, !dbg !9699, !tbaa !1941
  call void %143(%struct._object* %144), !dbg !9700
  br label %if.end.209

if.end.209:                                       ; preds = %if.else.206, %if.then.205
  %145 = bitcast %struct._object** %_py_decref_tmp200 to i8*, !dbg !9701
  call void @llvm.lifetime.end(i64 8, i8* %145) #2, !dbg !9701
  br label %do.cond.210, !dbg !9702

do.cond.210:                                      ; preds = %if.end.209
  br label %do.end.211, !dbg !9703

do.end.211:                                       ; preds = %do.cond.210
  store %struct._object* null, %struct._object** %x, align 8, !dbg !9705, !tbaa !1941
  %146 = load %struct._object*, %struct._object** %y, align 8, !dbg !9706, !tbaa !1941
  %cmp212 = icmp eq %struct._object* %146, null, !dbg !9708
  br i1 %cmp212, label %if.then.214, label %if.end.216, !dbg !9709

if.then.214:                                      ; preds = %do.end.211
  %147 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9710, !tbaa !1941
  %call215 = call %struct._object* %147(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.157, i32 0, i32 0)), !dbg !9710
  store %struct._object* %call215, %struct._object** %retval, !dbg !9711
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !9711

if.end.216:                                       ; preds = %do.end.211
  %148 = load %struct._object*, %struct._object** %y, align 8, !dbg !9712, !tbaa !1941
  %call217 = call i64 @PyLong_AsLong(%struct._object* %148), !dbg !9713
  store i64 %call217, i64* %out67, align 8, !dbg !9714, !tbaa !2587
  %149 = load i64, i64* %out67, align 8, !dbg !9715, !tbaa !2587
  %cmp218 = icmp ne i64 %149, -1, !dbg !9717
  br i1 %cmp218, label %if.then.223, label %lor.lhs.false.220, !dbg !9718

lor.lhs.false.220:                                ; preds = %if.end.216
  %call221 = call %struct._object* @PyErr_Occurred(), !dbg !9719
  %tobool222 = icmp ne %struct._object* %call221, null, !dbg !9719
  br i1 %tobool222, label %if.end.225, label %if.then.223, !dbg !9721

if.then.223:                                      ; preds = %lor.lhs.false.220, %if.end.216
  %150 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9722, !tbaa !1941
  %call224 = call %struct._object* %150(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.158, i32 0, i32 0)), !dbg !9722
  store %struct._object* %call224, %struct._object** %retval, !dbg !9723
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !9723

if.end.225:                                       ; preds = %lor.lhs.false.220
  %151 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !9724, !tbaa !1941
  %call226 = call i32 @PyErr_ExceptionMatches(%struct._object* %151), !dbg !9726
  %tobool227 = icmp ne i32 %call226, 0, !dbg !9726
  br i1 %tobool227, label %if.end.230, label %if.then.228, !dbg !9727

if.then.228:                                      ; preds = %if.end.225
  %152 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9728, !tbaa !1941
  %call229 = call %struct._object* %152(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.159, i32 0, i32 0)), !dbg !9728
  store %struct._object* %call229, %struct._object** %retval, !dbg !9729
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !9729

if.end.230:                                       ; preds = %if.end.225
  call void @PyErr_Clear(), !dbg !9730
  br label %do.body.231, !dbg !9731

do.body.231:                                      ; preds = %if.end.230
  %153 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !9732
  call void @llvm.lifetime.start(i64 8, i8* %153) #2, !dbg !9732
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp232, metadata !761, metadata !1945), !dbg !9734
  %154 = load %struct._object*, %struct._object** %y, align 8, !dbg !9735, !tbaa !1941
  store %struct._object* %154, %struct._object** %_py_decref_tmp232, align 8, !dbg !9734, !tbaa !1941
  %155 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !9736, !tbaa !1941
  %ob_refcnt233 = getelementptr inbounds %struct._object, %struct._object* %155, i32 0, i32 0, !dbg !9738
  %156 = load i64, i64* %ob_refcnt233, align 8, !dbg !9739, !tbaa !1961
  %dec234 = add i64 %156, -1, !dbg !9739
  store i64 %dec234, i64* %ob_refcnt233, align 8, !dbg !9739, !tbaa !1961
  %cmp235 = icmp ne i64 %dec234, 0, !dbg !9740
  br i1 %cmp235, label %if.then.237, label %if.else.238, !dbg !9741

if.then.237:                                      ; preds = %do.body.231
  br label %if.end.241, !dbg !9742

if.else.238:                                      ; preds = %do.body.231
  %157 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !9744, !tbaa !1941
  %ob_type239 = getelementptr inbounds %struct._object, %struct._object* %157, i32 0, i32 1, !dbg !9746
  %158 = load %struct._typeobject*, %struct._typeobject** %ob_type239, align 8, !dbg !9746, !tbaa !1995
  %tp_dealloc240 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %158, i32 0, i32 4, !dbg !9747
  %159 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc240, align 8, !dbg !9747, !tbaa !1997
  %160 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !9748, !tbaa !1941
  call void %159(%struct._object* %160), !dbg !9749
  br label %if.end.241

if.end.241:                                       ; preds = %if.else.238, %if.then.237
  %161 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !9750
  call void @llvm.lifetime.end(i64 8, i8* %161) #2, !dbg !9750
  br label %do.cond.242, !dbg !9751

do.cond.242:                                      ; preds = %if.end.241
  br label %do.end.243, !dbg !9752

do.end.243:                                       ; preds = %do.cond.242
  store %struct._object* null, %struct._object** %y, align 8, !dbg !9754, !tbaa !1941
  br label %do.body.244, !dbg !9755

do.body.244:                                      ; preds = %do.end.243
  %162 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9756
  call void @llvm.lifetime.start(i64 8, i8* %162) #2, !dbg !9756
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !763, metadata !1945), !dbg !9758
  %163 = load %struct._object*, %struct._object** %x, align 8, !dbg !9759, !tbaa !1941
  store %struct._object* %163, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9758, !tbaa !1941
  %164 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9760, !tbaa !1941
  %cmp245 = icmp ne %struct._object* %164, null, !dbg !9761
  br i1 %cmp245, label %if.then.247, label %if.end.261, !dbg !9762

if.then.247:                                      ; preds = %do.body.244
  br label %do.body.248, !dbg !9763

do.body.248:                                      ; preds = %if.then.247
  %165 = bitcast %struct._object** %_py_decref_tmp249 to i8*, !dbg !9765
  call void @llvm.lifetime.start(i64 8, i8* %165) #2, !dbg !9765
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp249, metadata !765, metadata !1945), !dbg !9767
  %166 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !9768, !tbaa !1941
  store %struct._object* %166, %struct._object** %_py_decref_tmp249, align 8, !dbg !9767, !tbaa !1941
  %167 = load %struct._object*, %struct._object** %_py_decref_tmp249, align 8, !dbg !9769, !tbaa !1941
  %ob_refcnt250 = getelementptr inbounds %struct._object, %struct._object* %167, i32 0, i32 0, !dbg !9771
  %168 = load i64, i64* %ob_refcnt250, align 8, !dbg !9772, !tbaa !1961
  %dec251 = add i64 %168, -1, !dbg !9772
  store i64 %dec251, i64* %ob_refcnt250, align 8, !dbg !9772, !tbaa !1961
  %cmp252 = icmp ne i64 %dec251, 0, !dbg !9773
  br i1 %cmp252, label %if.then.254, label %if.else.255, !dbg !9774

if.then.254:                                      ; preds = %do.body.248
  br label %if.end.258, !dbg !9775

if.else.255:                                      ; preds = %do.body.248
  %169 = load %struct._object*, %struct._object** %_py_decref_tmp249, align 8, !dbg !9777, !tbaa !1941
  %ob_type256 = getelementptr inbounds %struct._object, %struct._object* %169, i32 0, i32 1, !dbg !9779
  %170 = load %struct._typeobject*, %struct._typeobject** %ob_type256, align 8, !dbg !9779, !tbaa !1995
  %tp_dealloc257 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %170, i32 0, i32 4, !dbg !9780
  %171 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc257, align 8, !dbg !9780, !tbaa !1997
  %172 = load %struct._object*, %struct._object** %_py_decref_tmp249, align 8, !dbg !9781, !tbaa !1941
  call void %171(%struct._object* %172), !dbg !9782
  br label %if.end.258

if.end.258:                                       ; preds = %if.else.255, %if.then.254
  %173 = bitcast %struct._object** %_py_decref_tmp249 to i8*, !dbg !9783
  call void @llvm.lifetime.end(i64 8, i8* %173) #2, !dbg !9783
  br label %do.cond.259, !dbg !9785

do.cond.259:                                      ; preds = %if.end.258
  br label %do.end.260, !dbg !9786

do.end.260:                                       ; preds = %do.cond.259
  br label %if.end.261, !dbg !9788

if.end.261:                                       ; preds = %do.end.260, %do.body.244
  %174 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !9790
  call void @llvm.lifetime.end(i64 8, i8* %174) #2, !dbg !9790
  br label %do.cond.262, !dbg !9793

do.cond.262:                                      ; preds = %if.end.261
  br label %do.end.263, !dbg !9794

do.end.263:                                       ; preds = %do.cond.262
  br label %do.body.264, !dbg !9796

do.body.264:                                      ; preds = %do.end.263
  %175 = bitcast %struct._object** %_py_xdecref_tmp265 to i8*, !dbg !9797
  call void @llvm.lifetime.start(i64 8, i8* %175) #2, !dbg !9797
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp265, metadata !768, metadata !1945), !dbg !9799
  %176 = load %struct._object*, %struct._object** %y, align 8, !dbg !9800, !tbaa !1941
  store %struct._object* %176, %struct._object** %_py_xdecref_tmp265, align 8, !dbg !9799, !tbaa !1941
  %177 = load %struct._object*, %struct._object** %_py_xdecref_tmp265, align 8, !dbg !9801, !tbaa !1941
  %cmp266 = icmp ne %struct._object* %177, null, !dbg !9802
  br i1 %cmp266, label %if.then.268, label %if.end.282, !dbg !9803

if.then.268:                                      ; preds = %do.body.264
  br label %do.body.269, !dbg !9804

do.body.269:                                      ; preds = %if.then.268
  %178 = bitcast %struct._object** %_py_decref_tmp270 to i8*, !dbg !9806
  call void @llvm.lifetime.start(i64 8, i8* %178) #2, !dbg !9806
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp270, metadata !770, metadata !1945), !dbg !9808
  %179 = load %struct._object*, %struct._object** %_py_xdecref_tmp265, align 8, !dbg !9809, !tbaa !1941
  store %struct._object* %179, %struct._object** %_py_decref_tmp270, align 8, !dbg !9808, !tbaa !1941
  %180 = load %struct._object*, %struct._object** %_py_decref_tmp270, align 8, !dbg !9810, !tbaa !1941
  %ob_refcnt271 = getelementptr inbounds %struct._object, %struct._object* %180, i32 0, i32 0, !dbg !9812
  %181 = load i64, i64* %ob_refcnt271, align 8, !dbg !9813, !tbaa !1961
  %dec272 = add i64 %181, -1, !dbg !9813
  store i64 %dec272, i64* %ob_refcnt271, align 8, !dbg !9813, !tbaa !1961
  %cmp273 = icmp ne i64 %dec272, 0, !dbg !9814
  br i1 %cmp273, label %if.then.275, label %if.else.276, !dbg !9815

if.then.275:                                      ; preds = %do.body.269
  br label %if.end.279, !dbg !9816

if.else.276:                                      ; preds = %do.body.269
  %182 = load %struct._object*, %struct._object** %_py_decref_tmp270, align 8, !dbg !9818, !tbaa !1941
  %ob_type277 = getelementptr inbounds %struct._object, %struct._object* %182, i32 0, i32 1, !dbg !9820
  %183 = load %struct._typeobject*, %struct._typeobject** %ob_type277, align 8, !dbg !9820, !tbaa !1995
  %tp_dealloc278 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %183, i32 0, i32 4, !dbg !9821
  %184 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc278, align 8, !dbg !9821, !tbaa !1997
  %185 = load %struct._object*, %struct._object** %_py_decref_tmp270, align 8, !dbg !9822, !tbaa !1941
  call void %184(%struct._object* %185), !dbg !9823
  br label %if.end.279

if.end.279:                                       ; preds = %if.else.276, %if.then.275
  %186 = bitcast %struct._object** %_py_decref_tmp270 to i8*, !dbg !9824
  call void @llvm.lifetime.end(i64 8, i8* %186) #2, !dbg !9824
  br label %do.cond.280, !dbg !9826

do.cond.280:                                      ; preds = %if.end.279
  br label %do.end.281, !dbg !9827

do.end.281:                                       ; preds = %do.cond.280
  br label %if.end.282, !dbg !9829

if.end.282:                                       ; preds = %do.end.281, %do.body.264
  %187 = bitcast %struct._object** %_py_xdecref_tmp265 to i8*, !dbg !9831
  call void @llvm.lifetime.end(i64 8, i8* %187) #2, !dbg !9831
  br label %do.cond.283, !dbg !9832

do.cond.283:                                      ; preds = %if.end.282
  br label %do.end.284, !dbg !9833

do.end.284:                                       ; preds = %do.cond.283
  br label %do.body.285, !dbg !9835

do.body.285:                                      ; preds = %do.end.284
  %188 = bitcast %struct._object** %_py_decref_tmp286 to i8*, !dbg !9836
  call void @llvm.lifetime.start(i64 8, i8* %188) #2, !dbg !9836
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp286, metadata !773, metadata !1945), !dbg !9838
  %189 = load %struct._object*, %struct._object** %one, align 8, !dbg !9839, !tbaa !1941
  store %struct._object* %189, %struct._object** %_py_decref_tmp286, align 8, !dbg !9838, !tbaa !1941
  %190 = load %struct._object*, %struct._object** %_py_decref_tmp286, align 8, !dbg !9840, !tbaa !1941
  %ob_refcnt287 = getelementptr inbounds %struct._object, %struct._object* %190, i32 0, i32 0, !dbg !9842
  %191 = load i64, i64* %ob_refcnt287, align 8, !dbg !9843, !tbaa !1961
  %dec288 = add i64 %191, -1, !dbg !9843
  store i64 %dec288, i64* %ob_refcnt287, align 8, !dbg !9843, !tbaa !1961
  %cmp289 = icmp ne i64 %dec288, 0, !dbg !9844
  br i1 %cmp289, label %if.then.291, label %if.else.292, !dbg !9845

if.then.291:                                      ; preds = %do.body.285
  br label %if.end.295, !dbg !9846

if.else.292:                                      ; preds = %do.body.285
  %192 = load %struct._object*, %struct._object** %_py_decref_tmp286, align 8, !dbg !9848, !tbaa !1941
  %ob_type293 = getelementptr inbounds %struct._object, %struct._object* %192, i32 0, i32 1, !dbg !9850
  %193 = load %struct._typeobject*, %struct._typeobject** %ob_type293, align 8, !dbg !9850, !tbaa !1995
  %tp_dealloc294 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %193, i32 0, i32 4, !dbg !9851
  %194 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc294, align 8, !dbg !9851, !tbaa !1997
  %195 = load %struct._object*, %struct._object** %_py_decref_tmp286, align 8, !dbg !9852, !tbaa !1941
  call void %194(%struct._object* %195), !dbg !9853
  br label %if.end.295

if.end.295:                                       ; preds = %if.else.292, %if.then.291
  %196 = bitcast %struct._object** %_py_decref_tmp286 to i8*, !dbg !9854
  call void @llvm.lifetime.end(i64 8, i8* %196) #2, !dbg !9854
  br label %do.cond.296, !dbg !9855

do.cond.296:                                      ; preds = %if.end.295
  br label %do.end.297, !dbg !9856

do.end.297:                                       ; preds = %do.cond.296
  store i32 0, i32* %cleanup.dest.slot, !dbg !9858
  br label %cleanup.298, !dbg !9858

cleanup.298:                                      ; preds = %do.end.297, %if.then.228, %if.then.223, %if.then.214, %if.then.195, %if.then.176, %if.then.171, %if.then.162, %if.then.143, %if.then.138, %if.then.129, %if.then.110, %if.then.91, %if.then.86, %if.then.78, %if.then.72
  %197 = bitcast i64* %uout68 to i8*, !dbg !9859
  call void @llvm.lifetime.end(i64 8, i8* %197) #2, !dbg !9859
  %198 = bitcast i64* %out67 to i8*, !dbg !9859
  call void @llvm.lifetime.end(i64 8, i8* %198) #2, !dbg !9859
  %199 = bitcast %struct._object** %y to i8*, !dbg !9859
  call void @llvm.lifetime.end(i64 8, i8* %199) #2, !dbg !9859
  %200 = bitcast %struct._object** %x to i8*, !dbg !9859
  call void @llvm.lifetime.end(i64 8, i8* %200) #2, !dbg !9859
  %201 = bitcast %struct._object** %one to i8*, !dbg !9859
  call void @llvm.lifetime.end(i64 8, i8* %201) #2, !dbg !9859
  %cleanup.dest.303 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.303, label %cleanup.354 [
    i32 0, label %cleanup.cont.304
  ]

cleanup.cont.304:                                 ; preds = %cleanup.298
  %202 = bitcast i64* %out305 to i8*, !dbg !9861
  call void @llvm.lifetime.start(i64 8, i8* %202) #2, !dbg !9861
  call void @llvm.dbg.declare(metadata i64* %out305, metadata !775, metadata !1945), !dbg !9862
  %203 = bitcast i64* %uout306 to i8*, !dbg !9863
  call void @llvm.lifetime.start(i64 8, i8* %203) #2, !dbg !9863
  call void @llvm.dbg.declare(metadata i64* %uout306, metadata !777, metadata !1945), !dbg !9864
  %204 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9865, !tbaa !1961
  %inc307 = add i64 %204, 1, !dbg !9865
  store i64 %inc307, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9865, !tbaa !1961
  %call308 = call i64 @PyLong_AsLong(%struct._object* @_Py_NoneStruct), !dbg !9866
  store i64 %call308, i64* %out305, align 8, !dbg !9867, !tbaa !2587
  %205 = load i64, i64* %out305, align 8, !dbg !9868, !tbaa !2587
  %cmp309 = icmp ne i64 %205, -1, !dbg !9870
  br i1 %cmp309, label %if.then.314, label %lor.lhs.false.311, !dbg !9871

lor.lhs.false.311:                                ; preds = %cleanup.cont.304
  %call312 = call %struct._object* @PyErr_Occurred(), !dbg !9872
  %tobool313 = icmp ne %struct._object* %call312, null, !dbg !9872
  br i1 %tobool313, label %if.end.316, label %if.then.314, !dbg !9874

if.then.314:                                      ; preds = %lor.lhs.false.311, %cleanup.cont.304
  %206 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9875, !tbaa !1941
  %call315 = call %struct._object* %206(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.160, i32 0, i32 0)), !dbg !9875
  store %struct._object* %call315, %struct._object** %retval, !dbg !9876
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.349, !dbg !9876

if.end.316:                                       ; preds = %lor.lhs.false.311
  %207 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !9877, !tbaa !1941
  %call317 = call i32 @PyErr_ExceptionMatches(%struct._object* %207), !dbg !9879
  %tobool318 = icmp ne i32 %call317, 0, !dbg !9879
  br i1 %tobool318, label %if.end.321, label %if.then.319, !dbg !9880

if.then.319:                                      ; preds = %if.end.316
  %208 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9881, !tbaa !1941
  %call320 = call %struct._object* %208(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.161, i32 0, i32 0)), !dbg !9881
  store %struct._object* %call320, %struct._object** %retval, !dbg !9882
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.349, !dbg !9882

if.end.321:                                       ; preds = %if.end.316
  call void @PyErr_Clear(), !dbg !9883
  %call322 = call i64 @PyLong_AsUnsignedLong(%struct._object* @_Py_NoneStruct), !dbg !9884
  store i64 %call322, i64* %uout306, align 8, !dbg !9885, !tbaa !2587
  %209 = load i64, i64* %uout306, align 8, !dbg !9886, !tbaa !2587
  %cmp323 = icmp ne i64 %209, -1, !dbg !9888
  br i1 %cmp323, label %if.then.328, label %lor.lhs.false.325, !dbg !9889

lor.lhs.false.325:                                ; preds = %if.end.321
  %call326 = call %struct._object* @PyErr_Occurred(), !dbg !9890
  %tobool327 = icmp ne %struct._object* %call326, null, !dbg !9890
  br i1 %tobool327, label %if.end.330, label %if.then.328, !dbg !9892

if.then.328:                                      ; preds = %lor.lhs.false.325, %if.end.321
  %210 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9893, !tbaa !1941
  %call329 = call %struct._object* %210(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.160, i32 0, i32 0)), !dbg !9893
  store %struct._object* %call329, %struct._object** %retval, !dbg !9894
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.349, !dbg !9894

if.end.330:                                       ; preds = %lor.lhs.false.325
  %211 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !9895, !tbaa !1941
  %call331 = call i32 @PyErr_ExceptionMatches(%struct._object* %211), !dbg !9897
  %tobool332 = icmp ne i32 %call331, 0, !dbg !9897
  br i1 %tobool332, label %if.end.335, label %if.then.333, !dbg !9898

if.then.333:                                      ; preds = %if.end.330
  %212 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !9899, !tbaa !1941
  %call334 = call %struct._object* %212(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.161, i32 0, i32 0)), !dbg !9899
  store %struct._object* %call334, %struct._object** %retval, !dbg !9900
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.349, !dbg !9900

if.end.335:                                       ; preds = %if.end.330
  call void @PyErr_Clear(), !dbg !9901
  br label %do.body.336, !dbg !9902

do.body.336:                                      ; preds = %if.end.335
  %213 = bitcast %struct._object** %_py_decref_tmp337 to i8*, !dbg !9903
  call void @llvm.lifetime.start(i64 8, i8* %213) #2, !dbg !9903
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp337, metadata !778, metadata !1945), !dbg !9905
  store %struct._object* @_Py_NoneStruct, %struct._object** %_py_decref_tmp337, align 8, !dbg !9905, !tbaa !1941
  %214 = load %struct._object*, %struct._object** %_py_decref_tmp337, align 8, !dbg !9906, !tbaa !1941
  %ob_refcnt338 = getelementptr inbounds %struct._object, %struct._object* %214, i32 0, i32 0, !dbg !9908
  %215 = load i64, i64* %ob_refcnt338, align 8, !dbg !9909, !tbaa !1961
  %dec339 = add i64 %215, -1, !dbg !9909
  store i64 %dec339, i64* %ob_refcnt338, align 8, !dbg !9909, !tbaa !1961
  %cmp340 = icmp ne i64 %dec339, 0, !dbg !9910
  br i1 %cmp340, label %if.then.342, label %if.else.343, !dbg !9911

if.then.342:                                      ; preds = %do.body.336
  br label %if.end.346, !dbg !9912

if.else.343:                                      ; preds = %do.body.336
  %216 = load %struct._object*, %struct._object** %_py_decref_tmp337, align 8, !dbg !9914, !tbaa !1941
  %ob_type344 = getelementptr inbounds %struct._object, %struct._object* %216, i32 0, i32 1, !dbg !9916
  %217 = load %struct._typeobject*, %struct._typeobject** %ob_type344, align 8, !dbg !9916, !tbaa !1995
  %tp_dealloc345 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %217, i32 0, i32 4, !dbg !9917
  %218 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc345, align 8, !dbg !9917, !tbaa !1997
  %219 = load %struct._object*, %struct._object** %_py_decref_tmp337, align 8, !dbg !9918, !tbaa !1941
  call void %218(%struct._object* %219), !dbg !9919
  br label %if.end.346

if.end.346:                                       ; preds = %if.else.343, %if.then.342
  %220 = bitcast %struct._object** %_py_decref_tmp337 to i8*, !dbg !9920
  call void @llvm.lifetime.end(i64 8, i8* %220) #2, !dbg !9920
  br label %do.cond.347, !dbg !9922

do.cond.347:                                      ; preds = %if.end.346
  br label %do.end.348, !dbg !9923

do.end.348:                                       ; preds = %do.cond.347
  store i32 0, i32* %cleanup.dest.slot, !dbg !9925
  br label %cleanup.349, !dbg !9925

cleanup.349:                                      ; preds = %do.end.348, %if.then.333, %if.then.328, %if.then.319, %if.then.314
  %221 = bitcast i64* %uout306 to i8*, !dbg !9926
  call void @llvm.lifetime.end(i64 8, i8* %221) #2, !dbg !9926
  %222 = bitcast i64* %out305 to i8*, !dbg !9926
  call void @llvm.lifetime.end(i64 8, i8* %222) #2, !dbg !9926
  %cleanup.dest.351 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.351, label %cleanup.354 [
    i32 0, label %cleanup.cont.352
  ]

cleanup.cont.352:                                 ; preds = %cleanup.349
  %223 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9927, !tbaa !1961
  %inc353 = add i64 %223, 1, !dbg !9927
  store i64 %inc353, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !9927, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !9928
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.354, !dbg !9928

cleanup.354:                                      ; preds = %cleanup.cont.352, %cleanup.349, %cleanup.298, %cleanup.61
  %224 = bitcast i32* %i to i8*, !dbg !9929
  call void @llvm.lifetime.end(i64 4, i8* %224) #2, !dbg !9929
  %225 = bitcast %struct._object** %pyresult to i8*, !dbg !9929
  call void @llvm.lifetime.end(i64 8, i8* %225) #2, !dbg !9929
  %226 = bitcast i64* %base to i8*, !dbg !9929
  call void @llvm.lifetime.end(i64 8, i8* %226) #2, !dbg !9929
  %227 = bitcast i32* %NBITS to i8*, !dbg !9929
  call void @llvm.lifetime.end(i64 4, i8* %227) #2, !dbg !9929
  %228 = load %struct._object*, %struct._object** %retval, !dbg !9929
  ret %struct._object* %228, !dbg !9929
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @raise_test_long_error(i8* %msg) #0 {
entry:
  %msg.addr = alloca i8*, align 8
  store i8* %msg, i8** %msg.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i8** %msg.addr, metadata !782, metadata !1945), !dbg !9930
  %0 = load i8*, i8** %msg.addr, align 8, !dbg !9931, !tbaa !1941
  %call = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i32 0, i32 0), i8* %0), !dbg !9932
  ret %struct._object* %call, !dbg !9933
}

declare i64 @PyLong_AsUnsignedLong(%struct._object*) #3

declare %struct._object* @PyNumber_Negative(%struct._object*) #3

declare i32 @PyErr_ExceptionMatches(%struct._object*) #3

declare %struct._object* @PyNumber_Lshift(%struct._object*, %struct._object*) #3

declare %struct._object* @PyNumber_Rshift(%struct._object*, %struct._object*) #3

declare %struct._object* @PyNumber_Subtract(%struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @raiseTestError(i8* %test_name, i8* %msg) #0 {
entry:
  %test_name.addr = alloca i8*, align 8
  %msg.addr = alloca i8*, align 8
  store i8* %test_name, i8** %test_name.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i8** %test_name.addr, metadata !787, metadata !1945), !dbg !9934
  store i8* %msg, i8** %msg.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i8** %msg.addr, metadata !788, metadata !1945), !dbg !9935
  %0 = load %struct._object*, %struct._object** @TestError, align 8, !dbg !9936, !tbaa !1941
  %1 = load i8*, i8** %test_name.addr, align 8, !dbg !9937, !tbaa !1941
  %2 = load i8*, i8** %msg.addr, align 8, !dbg !9938, !tbaa !1941
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.162, i32 0, i32 0), i8* %1, i8* %2), !dbg !9939
  ret %struct._object* null, !dbg !9940
}

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @_test_incref(%struct._object* %ob) #0 {
entry:
  %ob.addr = alloca %struct._object*, align 8
  store %struct._object* %ob, %struct._object** %ob.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %ob.addr, metadata !803, metadata !1945), !dbg !9941
  %0 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !9942, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 0, !dbg !9943
  %1 = load i64, i64* %ob_refcnt, align 8, !dbg !9944, !tbaa !1961
  %inc = add i64 %1, 1, !dbg !9944
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !9944, !tbaa !1961
  %2 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !9945, !tbaa !1941
  ret %struct._object* %2, !dbg !9946
}

declare void @Py_IncRef(%struct._object*) #3

declare void @Py_DecRef(%struct._object*) #3

declare %struct._object* @PyLong_FromString(i8*, i8**, i32) #3

declare i64 @PyLong_AsLongAndOverflow(%struct._object*, i32*) #3

declare %struct._object* @PyNumber_Add(%struct._object*, %struct._object*) #3

declare double @PyLong_AsDouble(%struct._object*) #3

declare i64 @PyLong_AsSize_t(%struct._object*) #3

declare i64 @PyLong_AsSsize_t(%struct._object*) #3

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

declare i64 @_PyLong_NumBits(%struct._object*) #3

declare i32 @_PyLong_Sign(%struct._object*) #3

declare i64 @PyLong_AsUnsignedLongMask(%struct._object*) #3

declare i32 @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object*, %struct._object*, i8*, i8**, ...) #3

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

declare i32 @PyUnicode_FSConverter(%struct._object*, i8*) #3

declare %struct._object* @PyObject_Str(%struct._object*) #3

declare %struct._object* @PyTuple_Pack(i64, ...) #3

declare %struct._object* @PyUnicode_FromFormat(i8*, ...) #3

declare i32 @PyUnicode_CompareWithASCIIString(%struct._object*, i8*) #3

declare double @PyOS_string_to_double(i8*, i8**, %struct._object*) #3

declare %struct._object* @PyUnicode_FromStringAndSize(i8*, i64) #3

declare %struct._object* @PyCapsule_New(i8*, i8*, void (%struct._object*)*) #3

; Function Attrs: nounwind uwtable
define internal void @capsule_destructor(%struct._object* %o) #0 {
entry:
  %o.addr = alloca %struct._object*, align 8
  store %struct._object* %o, %struct._object** %o.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %o.addr, metadata !1070, metadata !1945), !dbg !9947
  %0 = load i32, i32* @capsule_destructor_call_count, align 4, !dbg !9948, !tbaa !1971
  %inc = add i32 %0, 1, !dbg !9948
  store i32 %inc, i32* @capsule_destructor_call_count, align 4, !dbg !9948, !tbaa !1971
  %1 = load %struct._object*, %struct._object** %o.addr, align 8, !dbg !9949, !tbaa !1941
  %call = call i8* @PyCapsule_GetContext(%struct._object* %1), !dbg !9951
  %2 = load i8*, i8** @capsule_context, align 8, !dbg !9952, !tbaa !1941
  %cmp = icmp ne i8* %call, %2, !dbg !9953
  br i1 %cmp, label %if.then, label %if.else, !dbg !9954

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.254, i32 0, i32 0), i8** @capsule_error, align 8, !dbg !9955, !tbaa !1941
  br label %if.end.14, !dbg !9957

if.else:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %o.addr, align 8, !dbg !9958, !tbaa !1941
  %call1 = call void (%struct._object*)* @PyCapsule_GetDestructor(%struct._object* %3), !dbg !9960
  %cmp2 = icmp ne void (%struct._object*)* %call1, @capsule_destructor, !dbg !9961
  br i1 %cmp2, label %if.then.3, label %if.else.4, !dbg !9962

if.then.3:                                        ; preds = %if.else
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.255, i32 0, i32 0), i8** @capsule_error, align 8, !dbg !9963, !tbaa !1941
  br label %if.end.13, !dbg !9965

if.else.4:                                        ; preds = %if.else
  %4 = load %struct._object*, %struct._object** %o.addr, align 8, !dbg !9966, !tbaa !1941
  %call5 = call i8* @PyCapsule_GetName(%struct._object* %4), !dbg !9968
  %5 = load i8*, i8** @capsule_name, align 8, !dbg !9969, !tbaa !1941
  %cmp6 = icmp ne i8* %call5, %5, !dbg !9970
  br i1 %cmp6, label %if.then.7, label %if.else.8, !dbg !9971

if.then.7:                                        ; preds = %if.else.4
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.256, i32 0, i32 0), i8** @capsule_error, align 8, !dbg !9972, !tbaa !1941
  br label %if.end.12, !dbg !9974

if.else.8:                                        ; preds = %if.else.4
  %6 = load %struct._object*, %struct._object** %o.addr, align 8, !dbg !9975, !tbaa !1941
  %7 = load i8*, i8** @capsule_name, align 8, !dbg !9977, !tbaa !1941
  %call9 = call i8* @PyCapsule_GetPointer(%struct._object* %6, i8* %7), !dbg !9978
  %8 = load i8*, i8** @capsule_pointer, align 8, !dbg !9979, !tbaa !1941
  %cmp10 = icmp ne i8* %call9, %8, !dbg !9980
  br i1 %cmp10, label %if.then.11, label %if.end, !dbg !9981

if.then.11:                                       ; preds = %if.else.8
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.257, i32 0, i32 0), i8** @capsule_error, align 8, !dbg !9982, !tbaa !1941
  br label %if.end, !dbg !9984

if.end:                                           ; preds = %if.then.11, %if.else.8
  br label %if.end.12

if.end.12:                                        ; preds = %if.end, %if.then.7
  br label %if.end.13

if.end.13:                                        ; preds = %if.end.12, %if.then.3
  br label %if.end.14

if.end.14:                                        ; preds = %if.end.13, %if.then
  ret void, !dbg !9985
}

declare i32 @PyCapsule_SetContext(%struct._object*, i8*) #3

declare i32 @PyCapsule_SetPointer(%struct._object*, i8*) #3

declare i32 @PyCapsule_SetName(%struct._object*, i8*) #3

declare i32 @PyCapsule_SetDestructor(%struct._object*, void (%struct._object*)*) #3

declare i8* @PyCapsule_GetPointer(%struct._object*, i8*) #3

declare %struct._object* @PyImport_ImportModule(i8*) #3

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #4

declare %struct._object* @PyObject_GetAttrString(%struct._object*, i8*) #3

declare i8* @PyCapsule_GetContext(%struct._object*) #3

declare void (%struct._object*)* @PyCapsule_GetDestructor(%struct._object*) #3

declare i8* @PyCapsule_GetName(%struct._object*) #3

declare %struct._object* @_Py_BuildValue_SizeT(i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_longlong_api_inner(%struct._object* (i8*)* %error) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %error.addr = alloca %struct._object* (i8*)*, align 8
  %NBITS = alloca i32, align 4
  %base = alloca i64, align 8
  %pyresult = alloca %struct._object*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %in = alloca i64, align 8
  %out = alloca i64, align 8
  %uin = alloca i64, align 8
  %uout = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp46 = alloca %struct._object*, align 8
  %one = alloca %struct._object*, align 8
  %x = alloca %struct._object*, align 8
  %y = alloca %struct._object*, align 8
  %out67 = alloca i64, align 8
  %uout68 = alloca i64, align 8
  %_py_decref_tmp95 = alloca %struct._object*, align 8
  %_py_decref_tmp115 = alloca %struct._object*, align 8
  %_py_decref_tmp148 = alloca %struct._object*, align 8
  %_py_decref_tmp181 = alloca %struct._object*, align 8
  %_py_decref_tmp200 = alloca %struct._object*, align 8
  %_py_decref_tmp232 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp249 = alloca %struct._object*, align 8
  %_py_xdecref_tmp265 = alloca %struct._object*, align 8
  %_py_decref_tmp270 = alloca %struct._object*, align 8
  %_py_decref_tmp286 = alloca %struct._object*, align 8
  %out305 = alloca i64, align 8
  %uout306 = alloca i64, align 8
  %_py_decref_tmp337 = alloca %struct._object*, align 8
  store %struct._object* (i8*)* %error, %struct._object* (i8*)** %error.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object* (i8*)** %error.addr, metadata !1161, metadata !1945), !dbg !9986
  %0 = bitcast i32* %NBITS to i8*, !dbg !9987
  call void @llvm.lifetime.start(i64 4, i8* %0) #2, !dbg !9987
  call void @llvm.dbg.declare(metadata i32* %NBITS, metadata !1162, metadata !1945), !dbg !9988
  store i32 64, i32* %NBITS, align 4, !dbg !9988, !tbaa !1971
  %1 = bitcast i64* %base to i8*, !dbg !9989
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !9989
  call void @llvm.dbg.declare(metadata i64* %base, metadata !1163, metadata !1945), !dbg !9990
  %2 = bitcast %struct._object** %pyresult to i8*, !dbg !9991
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !9991
  call void @llvm.dbg.declare(metadata %struct._object** %pyresult, metadata !1164, metadata !1945), !dbg !9992
  %3 = bitcast i32* %i to i8*, !dbg !9993
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !9993
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1165, metadata !1945), !dbg !9994
  store i64 1, i64* %base, align 8, !dbg !9995, !tbaa !5682
  store i32 0, i32* %i, align 4, !dbg !9996, !tbaa !1971
  br label %for.cond, !dbg !9997

for.cond:                                         ; preds = %for.inc.64, %entry
  %4 = load i32, i32* %i, align 4, !dbg !9998, !tbaa !1971
  %cmp = icmp slt i32 %4, 65, !dbg !9999
  br i1 %cmp, label %for.body, label %for.end.66, !dbg !10000

for.body:                                         ; preds = %for.cond
  %5 = bitcast i32* %j to i8*, !dbg !10001
  call void @llvm.lifetime.start(i64 4, i8* %5) #2, !dbg !10001
  call void @llvm.dbg.declare(metadata i32* %j, metadata !1166, metadata !1945), !dbg !10002
  store i32 0, i32* %j, align 4, !dbg !10003, !tbaa !1971
  br label %for.cond.1, !dbg !10004

for.cond.1:                                       ; preds = %for.inc, %for.body
  %6 = load i32, i32* %j, align 4, !dbg !10005, !tbaa !1971
  %cmp2 = icmp slt i32 %6, 6, !dbg !10008
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !10009

for.body.3:                                       ; preds = %for.cond.1
  %7 = bitcast i64* %in to i8*, !dbg !10010
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !10010
  call void @llvm.dbg.declare(metadata i64* %in, metadata !1170, metadata !1945), !dbg !10011
  %8 = bitcast i64* %out to i8*, !dbg !10010
  call void @llvm.lifetime.start(i64 8, i8* %8) #2, !dbg !10010
  call void @llvm.dbg.declare(metadata i64* %out, metadata !1174, metadata !1945), !dbg !10012
  %9 = bitcast i64* %uin to i8*, !dbg !10013
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !10013
  call void @llvm.dbg.declare(metadata i64* %uin, metadata !1175, metadata !1945), !dbg !10014
  %10 = bitcast i64* %uout to i8*, !dbg !10013
  call void @llvm.lifetime.start(i64 8, i8* %10) #2, !dbg !10013
  call void @llvm.dbg.declare(metadata i64* %uout, metadata !1176, metadata !1945), !dbg !10015
  %11 = load i32, i32* %j, align 4, !dbg !10016, !tbaa !1971
  %cmp4 = icmp slt i32 %11, 3, !dbg !10017
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !10016

cond.true:                                        ; preds = %for.body.3
  %12 = load i64, i64* %base, align 8, !dbg !10018, !tbaa !5682
  br label %cond.end, !dbg !10016

cond.false:                                       ; preds = %for.body.3
  %13 = load i64, i64* %base, align 8, !dbg !10020, !tbaa !5682
  %sub = sub i64 0, %13, !dbg !10022
  br label %cond.end, !dbg !10016

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %12, %cond.true ], [ %sub, %cond.false ], !dbg !10016
  store i64 %cond, i64* %uin, align 8, !dbg !10023, !tbaa !5682
  %14 = load i32, i32* %j, align 4, !dbg !10026, !tbaa !1971
  %rem = srem i32 %14, 3, !dbg !10027
  %sub5 = sub i32 %rem, 1, !dbg !10028
  %conv = sext i32 %sub5 to i64, !dbg !10029
  %15 = load i64, i64* %uin, align 8, !dbg !10030, !tbaa !5682
  %add = add i64 %15, %conv, !dbg !10030
  store i64 %add, i64* %uin, align 8, !dbg !10030, !tbaa !5682
  %16 = load i64, i64* %uin, align 8, !dbg !10031, !tbaa !5682
  %call = call %struct._object* @PyLong_FromUnsignedLongLong(i64 %16), !dbg !10032
  store %struct._object* %call, %struct._object** %pyresult, align 8, !dbg !10033, !tbaa !1941
  %17 = load %struct._object*, %struct._object** %pyresult, align 8, !dbg !10034, !tbaa !1941
  %cmp6 = icmp eq %struct._object* %17, null, !dbg !10036
  br i1 %cmp6, label %if.then, label %if.end, !dbg !10037

if.then:                                          ; preds = %cond.end
  %18 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10038, !tbaa !1941
  %call8 = call %struct._object* %18(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.141, i32 0, i32 0)), !dbg !10038
  store %struct._object* %call8, %struct._object** %retval, !dbg !10039
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10039

if.end:                                           ; preds = %cond.end
  %19 = load %struct._object*, %struct._object** %pyresult, align 8, !dbg !10040, !tbaa !1941
  %call9 = call i64 @PyLong_AsUnsignedLongLong(%struct._object* %19), !dbg !10041
  store i64 %call9, i64* %uout, align 8, !dbg !10042, !tbaa !5682
  %20 = load i64, i64* %uout, align 8, !dbg !10043, !tbaa !5682
  %cmp10 = icmp eq i64 %20, -1, !dbg !10045
  br i1 %cmp10, label %land.lhs.true, label %if.end.15, !dbg !10046

land.lhs.true:                                    ; preds = %if.end
  %call12 = call %struct._object* @PyErr_Occurred(), !dbg !10047
  %tobool = icmp ne %struct._object* %call12, null, !dbg !10047
  br i1 %tobool, label %if.then.13, label %if.end.15, !dbg !10049

if.then.13:                                       ; preds = %land.lhs.true
  %21 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10050, !tbaa !1941
  %call14 = call %struct._object* %21(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.142, i32 0, i32 0)), !dbg !10050
  store %struct._object* %call14, %struct._object** %retval, !dbg !10051
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10051

if.end.15:                                        ; preds = %land.lhs.true, %if.end
  %22 = load i64, i64* %uout, align 8, !dbg !10052, !tbaa !5682
  %23 = load i64, i64* %uin, align 8, !dbg !10054, !tbaa !5682
  %cmp16 = icmp ne i64 %22, %23, !dbg !10055
  br i1 %cmp16, label %if.then.18, label %if.end.20, !dbg !10056

if.then.18:                                       ; preds = %if.end.15
  %24 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10057, !tbaa !1941
  %call19 = call %struct._object* %24(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.143, i32 0, i32 0)), !dbg !10057
  store %struct._object* %call19, %struct._object** %retval, !dbg !10058
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10058

if.end.20:                                        ; preds = %if.end.15
  br label %do.body, !dbg !10059

do.body:                                          ; preds = %if.end.20
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10060
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !10060
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1177, metadata !1945), !dbg !10062
  %26 = load %struct._object*, %struct._object** %pyresult, align 8, !dbg !10063, !tbaa !1941
  store %struct._object* %26, %struct._object** %_py_decref_tmp, align 8, !dbg !10062, !tbaa !1941
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10064, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !10066
  %28 = load i64, i64* %ob_refcnt, align 8, !dbg !10067, !tbaa !1961
  %dec = add i64 %28, -1, !dbg !10067
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10067, !tbaa !1961
  %cmp21 = icmp ne i64 %dec, 0, !dbg !10068
  br i1 %cmp21, label %if.then.23, label %if.else, !dbg !10069

if.then.23:                                       ; preds = %do.body
  br label %if.end.24, !dbg !10070

if.else:                                          ; preds = %do.body
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10072, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !10074
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10074, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !10075
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10075, !tbaa !1997
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10076, !tbaa !1941
  call void %31(%struct._object* %32), !dbg !10077
  br label %if.end.24

if.end.24:                                        ; preds = %if.else, %if.then.23
  %33 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10078
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !10078
  br label %do.cond, !dbg !10080

do.cond:                                          ; preds = %if.end.24
  br label %do.end, !dbg !10081

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %pyresult, align 8, !dbg !10083, !tbaa !1941
  %34 = load i64, i64* %uin, align 8, !dbg !10085, !tbaa !5682
  store i64 %34, i64* %in, align 8, !dbg !10086, !tbaa !5682
  %35 = load i64, i64* %in, align 8, !dbg !10087, !tbaa !5682
  %call25 = call %struct._object* @PyLong_FromLongLong(i64 %35), !dbg !10088
  store %struct._object* %call25, %struct._object** %pyresult, align 8, !dbg !10089, !tbaa !1941
  %36 = load %struct._object*, %struct._object** %pyresult, align 8, !dbg !10090, !tbaa !1941
  %cmp26 = icmp eq %struct._object* %36, null, !dbg !10092
  br i1 %cmp26, label %if.then.28, label %if.end.30, !dbg !10093

if.then.28:                                       ; preds = %do.end
  %37 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10094, !tbaa !1941
  %call29 = call %struct._object* %37(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.144, i32 0, i32 0)), !dbg !10094
  store %struct._object* %call29, %struct._object** %retval, !dbg !10095
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10095

if.end.30:                                        ; preds = %do.end
  %38 = load %struct._object*, %struct._object** %pyresult, align 8, !dbg !10096, !tbaa !1941
  %call31 = call i64 @PyLong_AsLongLong(%struct._object* %38), !dbg !10097
  store i64 %call31, i64* %out, align 8, !dbg !10098, !tbaa !5682
  %39 = load i64, i64* %out, align 8, !dbg !10099, !tbaa !5682
  %cmp32 = icmp eq i64 %39, -1, !dbg !10101
  br i1 %cmp32, label %land.lhs.true.34, label %if.end.39, !dbg !10102

land.lhs.true.34:                                 ; preds = %if.end.30
  %call35 = call %struct._object* @PyErr_Occurred(), !dbg !10103
  %tobool36 = icmp ne %struct._object* %call35, null, !dbg !10103
  br i1 %tobool36, label %if.then.37, label %if.end.39, !dbg !10105

if.then.37:                                       ; preds = %land.lhs.true.34
  %40 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10106, !tbaa !1941
  %call38 = call %struct._object* %40(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.145, i32 0, i32 0)), !dbg !10106
  store %struct._object* %call38, %struct._object** %retval, !dbg !10107
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10107

if.end.39:                                        ; preds = %land.lhs.true.34, %if.end.30
  %41 = load i64, i64* %out, align 8, !dbg !10108, !tbaa !5682
  %42 = load i64, i64* %in, align 8, !dbg !10110, !tbaa !5682
  %cmp40 = icmp ne i64 %41, %42, !dbg !10111
  br i1 %cmp40, label %if.then.42, label %if.end.44, !dbg !10112

if.then.42:                                       ; preds = %if.end.39
  %43 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10113, !tbaa !1941
  %call43 = call %struct._object* %43(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.146, i32 0, i32 0)), !dbg !10113
  store %struct._object* %call43, %struct._object** %retval, !dbg !10114
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10114

if.end.44:                                        ; preds = %if.end.39
  br label %do.body.45, !dbg !10115

do.body.45:                                       ; preds = %if.end.44
  %44 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !10116
  call void @llvm.lifetime.start(i64 8, i8* %44) #2, !dbg !10116
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp46, metadata !1179, metadata !1945), !dbg !10118
  %45 = load %struct._object*, %struct._object** %pyresult, align 8, !dbg !10119, !tbaa !1941
  store %struct._object* %45, %struct._object** %_py_decref_tmp46, align 8, !dbg !10118, !tbaa !1941
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !10120, !tbaa !1941
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0, !dbg !10122
  %47 = load i64, i64* %ob_refcnt47, align 8, !dbg !10123, !tbaa !1961
  %dec48 = add i64 %47, -1, !dbg !10123
  store i64 %dec48, i64* %ob_refcnt47, align 8, !dbg !10123, !tbaa !1961
  %cmp49 = icmp ne i64 %dec48, 0, !dbg !10124
  br i1 %cmp49, label %if.then.51, label %if.else.52, !dbg !10125

if.then.51:                                       ; preds = %do.body.45
  br label %if.end.55, !dbg !10126

if.else.52:                                       ; preds = %do.body.45
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !10128, !tbaa !1941
  %ob_type53 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 1, !dbg !10130
  %49 = load %struct._typeobject*, %struct._typeobject** %ob_type53, align 8, !dbg !10130, !tbaa !1995
  %tp_dealloc54 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %49, i32 0, i32 4, !dbg !10131
  %50 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc54, align 8, !dbg !10131, !tbaa !1997
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8, !dbg !10132, !tbaa !1941
  call void %50(%struct._object* %51), !dbg !10133
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.52, %if.then.51
  %52 = bitcast %struct._object** %_py_decref_tmp46 to i8*, !dbg !10134
  call void @llvm.lifetime.end(i64 8, i8* %52) #2, !dbg !10134
  br label %do.cond.56, !dbg !10135

do.cond.56:                                       ; preds = %if.end.55
  br label %do.end.57, !dbg !10136

do.end.57:                                        ; preds = %do.cond.56
  store %struct._object* null, %struct._object** %pyresult, align 8, !dbg !10138, !tbaa !1941
  store i32 0, i32* %cleanup.dest.slot, !dbg !10139
  br label %cleanup, !dbg !10139

cleanup:                                          ; preds = %do.end.57, %if.then.42, %if.then.37, %if.then.28, %if.then.18, %if.then.13, %if.then
  %53 = bitcast i64* %uout to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 8, i8* %53) #2, !dbg !10140
  %54 = bitcast i64* %uin to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 8, i8* %54) #2, !dbg !10140
  %55 = bitcast i64* %out to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 8, i8* %55) #2, !dbg !10140
  %56 = bitcast i64* %in to i8*, !dbg !10140
  call void @llvm.lifetime.end(i64 8, i8* %56) #2, !dbg !10140
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.61 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc, !dbg !10142

for.inc:                                          ; preds = %cleanup.cont
  %57 = load i32, i32* %j, align 4, !dbg !10143, !tbaa !1971
  %inc = add i32 %57, 1, !dbg !10143
  store i32 %inc, i32* %j, align 4, !dbg !10143, !tbaa !1971
  br label %for.cond.1, !dbg !10144

for.end:                                          ; preds = %for.cond.1
  store i32 0, i32* %cleanup.dest.slot, !dbg !10145
  br label %cleanup.61, !dbg !10145

cleanup.61:                                       ; preds = %for.end, %cleanup
  %58 = bitcast i32* %j to i8*, !dbg !10146
  call void @llvm.lifetime.end(i64 4, i8* %58) #2, !dbg !10146
  %cleanup.dest.62 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.62, label %cleanup.354 [
    i32 0, label %cleanup.cont.63
  ]

cleanup.cont.63:                                  ; preds = %cleanup.61
  br label %for.inc.64, !dbg !10148

for.inc.64:                                       ; preds = %cleanup.cont.63
  %59 = load i32, i32* %i, align 4, !dbg !10149, !tbaa !1971
  %inc65 = add i32 %59, 1, !dbg !10149
  store i32 %inc65, i32* %i, align 4, !dbg !10149, !tbaa !1971
  %60 = load i64, i64* %base, align 8, !dbg !10150, !tbaa !5682
  %shl = shl i64 %60, 1, !dbg !10150
  store i64 %shl, i64* %base, align 8, !dbg !10150, !tbaa !5682
  br label %for.cond, !dbg !10151

for.end.66:                                       ; preds = %for.cond
  %61 = bitcast %struct._object** %one to i8*, !dbg !10152
  call void @llvm.lifetime.start(i64 8, i8* %61) #2, !dbg !10152
  call void @llvm.dbg.declare(metadata %struct._object** %one, metadata !1181, metadata !1945), !dbg !10153
  %62 = bitcast %struct._object** %x to i8*, !dbg !10152
  call void @llvm.lifetime.start(i64 8, i8* %62) #2, !dbg !10152
  call void @llvm.dbg.declare(metadata %struct._object** %x, metadata !1183, metadata !1945), !dbg !10154
  %63 = bitcast %struct._object** %y to i8*, !dbg !10152
  call void @llvm.lifetime.start(i64 8, i8* %63) #2, !dbg !10152
  call void @llvm.dbg.declare(metadata %struct._object** %y, metadata !1184, metadata !1945), !dbg !10155
  %64 = bitcast i64* %out67 to i8*, !dbg !10156
  call void @llvm.lifetime.start(i64 8, i8* %64) #2, !dbg !10156
  call void @llvm.dbg.declare(metadata i64* %out67, metadata !1185, metadata !1945), !dbg !10157
  %65 = bitcast i64* %uout68 to i8*, !dbg !10158
  call void @llvm.lifetime.start(i64 8, i8* %65) #2, !dbg !10158
  call void @llvm.dbg.declare(metadata i64* %uout68, metadata !1186, metadata !1945), !dbg !10159
  %call69 = call %struct._object* @PyLong_FromLong(i64 1), !dbg !10160
  store %struct._object* %call69, %struct._object** %one, align 8, !dbg !10161, !tbaa !1941
  %66 = load %struct._object*, %struct._object** %one, align 8, !dbg !10162, !tbaa !1941
  %cmp70 = icmp eq %struct._object* %66, null, !dbg !10164
  br i1 %cmp70, label %if.then.72, label %if.end.74, !dbg !10165

if.then.72:                                       ; preds = %for.end.66
  %67 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10166, !tbaa !1941
  %call73 = call %struct._object* %67(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.147, i32 0, i32 0)), !dbg !10166
  store %struct._object* %call73, %struct._object** %retval, !dbg !10167
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !10167

if.end.74:                                        ; preds = %for.end.66
  %68 = load %struct._object*, %struct._object** %one, align 8, !dbg !10168, !tbaa !1941
  %call75 = call %struct._object* @PyNumber_Negative(%struct._object* %68), !dbg !10169
  store %struct._object* %call75, %struct._object** %x, align 8, !dbg !10170, !tbaa !1941
  %69 = load %struct._object*, %struct._object** %x, align 8, !dbg !10171, !tbaa !1941
  %cmp76 = icmp eq %struct._object* %69, null, !dbg !10173
  br i1 %cmp76, label %if.then.78, label %if.end.80, !dbg !10174

if.then.78:                                       ; preds = %if.end.74
  %70 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10175, !tbaa !1941
  %call79 = call %struct._object* %70(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.148, i32 0, i32 0)), !dbg !10175
  store %struct._object* %call79, %struct._object** %retval, !dbg !10176
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !10176

if.end.80:                                        ; preds = %if.end.74
  %71 = load %struct._object*, %struct._object** %x, align 8, !dbg !10177, !tbaa !1941
  %call81 = call i64 @PyLong_AsUnsignedLongLong(%struct._object* %71), !dbg !10178
  store i64 %call81, i64* %uout68, align 8, !dbg !10179, !tbaa !5682
  %72 = load i64, i64* %uout68, align 8, !dbg !10180, !tbaa !5682
  %cmp82 = icmp ne i64 %72, -1, !dbg !10182
  br i1 %cmp82, label %if.then.86, label %lor.lhs.false, !dbg !10183

lor.lhs.false:                                    ; preds = %if.end.80
  %call84 = call %struct._object* @PyErr_Occurred(), !dbg !10184
  %tobool85 = icmp ne %struct._object* %call84, null, !dbg !10184
  br i1 %tobool85, label %if.end.88, label %if.then.86, !dbg !10186

if.then.86:                                       ; preds = %lor.lhs.false, %if.end.80
  %73 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10187, !tbaa !1941
  %call87 = call %struct._object* %73(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.149, i32 0, i32 0)), !dbg !10187
  store %struct._object* %call87, %struct._object** %retval, !dbg !10188
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !10188

if.end.88:                                        ; preds = %lor.lhs.false
  %74 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !10189, !tbaa !1941
  %call89 = call i32 @PyErr_ExceptionMatches(%struct._object* %74), !dbg !10191
  %tobool90 = icmp ne i32 %call89, 0, !dbg !10191
  br i1 %tobool90, label %if.end.93, label %if.then.91, !dbg !10192

if.then.91:                                       ; preds = %if.end.88
  %75 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10193, !tbaa !1941
  %call92 = call %struct._object* %75(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.150, i32 0, i32 0)), !dbg !10193
  store %struct._object* %call92, %struct._object** %retval, !dbg !10194
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !10194

if.end.93:                                        ; preds = %if.end.88
  call void @PyErr_Clear(), !dbg !10195
  br label %do.body.94, !dbg !10196

do.body.94:                                       ; preds = %if.end.93
  %76 = bitcast %struct._object** %_py_decref_tmp95 to i8*, !dbg !10197
  call void @llvm.lifetime.start(i64 8, i8* %76) #2, !dbg !10197
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp95, metadata !1187, metadata !1945), !dbg !10199
  %77 = load %struct._object*, %struct._object** %x, align 8, !dbg !10200, !tbaa !1941
  store %struct._object* %77, %struct._object** %_py_decref_tmp95, align 8, !dbg !10199, !tbaa !1941
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp95, align 8, !dbg !10201, !tbaa !1941
  %ob_refcnt96 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 0, !dbg !10203
  %79 = load i64, i64* %ob_refcnt96, align 8, !dbg !10204, !tbaa !1961
  %dec97 = add i64 %79, -1, !dbg !10204
  store i64 %dec97, i64* %ob_refcnt96, align 8, !dbg !10204, !tbaa !1961
  %cmp98 = icmp ne i64 %dec97, 0, !dbg !10205
  br i1 %cmp98, label %if.then.100, label %if.else.101, !dbg !10206

if.then.100:                                      ; preds = %do.body.94
  br label %if.end.104, !dbg !10207

if.else.101:                                      ; preds = %do.body.94
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp95, align 8, !dbg !10209, !tbaa !1941
  %ob_type102 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 1, !dbg !10211
  %81 = load %struct._typeobject*, %struct._typeobject** %ob_type102, align 8, !dbg !10211, !tbaa !1995
  %tp_dealloc103 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %81, i32 0, i32 4, !dbg !10212
  %82 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc103, align 8, !dbg !10212, !tbaa !1997
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp95, align 8, !dbg !10213, !tbaa !1941
  call void %82(%struct._object* %83), !dbg !10214
  br label %if.end.104

if.end.104:                                       ; preds = %if.else.101, %if.then.100
  %84 = bitcast %struct._object** %_py_decref_tmp95 to i8*, !dbg !10215
  call void @llvm.lifetime.end(i64 8, i8* %84) #2, !dbg !10215
  br label %do.cond.105, !dbg !10217

do.cond.105:                                      ; preds = %if.end.104
  br label %do.end.106, !dbg !10218

do.end.106:                                       ; preds = %do.cond.105
  store %struct._object* null, %struct._object** %x, align 8, !dbg !10220, !tbaa !1941
  %call107 = call %struct._object* @PyLong_FromLong(i64 64), !dbg !10222
  store %struct._object* %call107, %struct._object** %y, align 8, !dbg !10223, !tbaa !1941
  %85 = load %struct._object*, %struct._object** %y, align 8, !dbg !10224, !tbaa !1941
  %cmp108 = icmp eq %struct._object* %85, null, !dbg !10226
  br i1 %cmp108, label %if.then.110, label %if.end.112, !dbg !10227

if.then.110:                                      ; preds = %do.end.106
  %86 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10228, !tbaa !1941
  %call111 = call %struct._object* %86(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.147, i32 0, i32 0)), !dbg !10228
  store %struct._object* %call111, %struct._object** %retval, !dbg !10229
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !10229

if.end.112:                                       ; preds = %do.end.106
  %87 = load %struct._object*, %struct._object** %one, align 8, !dbg !10230, !tbaa !1941
  %88 = load %struct._object*, %struct._object** %y, align 8, !dbg !10231, !tbaa !1941
  %call113 = call %struct._object* @PyNumber_Lshift(%struct._object* %87, %struct._object* %88), !dbg !10232
  store %struct._object* %call113, %struct._object** %x, align 8, !dbg !10233, !tbaa !1941
  br label %do.body.114, !dbg !10234

do.body.114:                                      ; preds = %if.end.112
  %89 = bitcast %struct._object** %_py_decref_tmp115 to i8*, !dbg !10235
  call void @llvm.lifetime.start(i64 8, i8* %89) #2, !dbg !10235
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp115, metadata !1189, metadata !1945), !dbg !10237
  %90 = load %struct._object*, %struct._object** %y, align 8, !dbg !10238, !tbaa !1941
  store %struct._object* %90, %struct._object** %_py_decref_tmp115, align 8, !dbg !10237, !tbaa !1941
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp115, align 8, !dbg !10239, !tbaa !1941
  %ob_refcnt116 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 0, !dbg !10241
  %92 = load i64, i64* %ob_refcnt116, align 8, !dbg !10242, !tbaa !1961
  %dec117 = add i64 %92, -1, !dbg !10242
  store i64 %dec117, i64* %ob_refcnt116, align 8, !dbg !10242, !tbaa !1961
  %cmp118 = icmp ne i64 %dec117, 0, !dbg !10243
  br i1 %cmp118, label %if.then.120, label %if.else.121, !dbg !10244

if.then.120:                                      ; preds = %do.body.114
  br label %if.end.124, !dbg !10245

if.else.121:                                      ; preds = %do.body.114
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp115, align 8, !dbg !10247, !tbaa !1941
  %ob_type122 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 1, !dbg !10249
  %94 = load %struct._typeobject*, %struct._typeobject** %ob_type122, align 8, !dbg !10249, !tbaa !1995
  %tp_dealloc123 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %94, i32 0, i32 4, !dbg !10250
  %95 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc123, align 8, !dbg !10250, !tbaa !1997
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp115, align 8, !dbg !10251, !tbaa !1941
  call void %95(%struct._object* %96), !dbg !10252
  br label %if.end.124

if.end.124:                                       ; preds = %if.else.121, %if.then.120
  %97 = bitcast %struct._object** %_py_decref_tmp115 to i8*, !dbg !10253
  call void @llvm.lifetime.end(i64 8, i8* %97) #2, !dbg !10253
  br label %do.cond.125, !dbg !10254

do.cond.125:                                      ; preds = %if.end.124
  br label %do.end.126, !dbg !10255

do.end.126:                                       ; preds = %do.cond.125
  store %struct._object* null, %struct._object** %y, align 8, !dbg !10257, !tbaa !1941
  %98 = load %struct._object*, %struct._object** %x, align 8, !dbg !10258, !tbaa !1941
  %cmp127 = icmp eq %struct._object* %98, null, !dbg !10260
  br i1 %cmp127, label %if.then.129, label %if.end.131, !dbg !10261

if.then.129:                                      ; preds = %do.end.126
  %99 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10262, !tbaa !1941
  %call130 = call %struct._object* %99(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.151, i32 0, i32 0)), !dbg !10262
  store %struct._object* %call130, %struct._object** %retval, !dbg !10263
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !10263

if.end.131:                                       ; preds = %do.end.126
  %100 = load %struct._object*, %struct._object** %x, align 8, !dbg !10264, !tbaa !1941
  %call132 = call i64 @PyLong_AsUnsignedLongLong(%struct._object* %100), !dbg !10265
  store i64 %call132, i64* %uout68, align 8, !dbg !10266, !tbaa !5682
  %101 = load i64, i64* %uout68, align 8, !dbg !10267, !tbaa !5682
  %cmp133 = icmp ne i64 %101, -1, !dbg !10269
  br i1 %cmp133, label %if.then.138, label %lor.lhs.false.135, !dbg !10270

lor.lhs.false.135:                                ; preds = %if.end.131
  %call136 = call %struct._object* @PyErr_Occurred(), !dbg !10271
  %tobool137 = icmp ne %struct._object* %call136, null, !dbg !10271
  br i1 %tobool137, label %if.end.140, label %if.then.138, !dbg !10273

if.then.138:                                      ; preds = %lor.lhs.false.135, %if.end.131
  %102 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10274, !tbaa !1941
  %call139 = call %struct._object* %102(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.152, i32 0, i32 0)), !dbg !10274
  store %struct._object* %call139, %struct._object** %retval, !dbg !10275
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !10275

if.end.140:                                       ; preds = %lor.lhs.false.135
  %103 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !10276, !tbaa !1941
  %call141 = call i32 @PyErr_ExceptionMatches(%struct._object* %103), !dbg !10278
  %tobool142 = icmp ne i32 %call141, 0, !dbg !10278
  br i1 %tobool142, label %if.end.145, label %if.then.143, !dbg !10279

if.then.143:                                      ; preds = %if.end.140
  %104 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10280, !tbaa !1941
  %call144 = call %struct._object* %104(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.153, i32 0, i32 0)), !dbg !10280
  store %struct._object* %call144, %struct._object** %retval, !dbg !10281
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !10281

if.end.145:                                       ; preds = %if.end.140
  call void @PyErr_Clear(), !dbg !10282
  %105 = load %struct._object*, %struct._object** %x, align 8, !dbg !10283, !tbaa !1941
  %106 = load %struct._object*, %struct._object** %one, align 8, !dbg !10284, !tbaa !1941
  %call146 = call %struct._object* @PyNumber_Rshift(%struct._object* %105, %struct._object* %106), !dbg !10285
  store %struct._object* %call146, %struct._object** %y, align 8, !dbg !10286, !tbaa !1941
  br label %do.body.147, !dbg !10287

do.body.147:                                      ; preds = %if.end.145
  %107 = bitcast %struct._object** %_py_decref_tmp148 to i8*, !dbg !10288
  call void @llvm.lifetime.start(i64 8, i8* %107) #2, !dbg !10288
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp148, metadata !1191, metadata !1945), !dbg !10290
  %108 = load %struct._object*, %struct._object** %x, align 8, !dbg !10291, !tbaa !1941
  store %struct._object* %108, %struct._object** %_py_decref_tmp148, align 8, !dbg !10290, !tbaa !1941
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp148, align 8, !dbg !10292, !tbaa !1941
  %ob_refcnt149 = getelementptr inbounds %struct._object, %struct._object* %109, i32 0, i32 0, !dbg !10294
  %110 = load i64, i64* %ob_refcnt149, align 8, !dbg !10295, !tbaa !1961
  %dec150 = add i64 %110, -1, !dbg !10295
  store i64 %dec150, i64* %ob_refcnt149, align 8, !dbg !10295, !tbaa !1961
  %cmp151 = icmp ne i64 %dec150, 0, !dbg !10296
  br i1 %cmp151, label %if.then.153, label %if.else.154, !dbg !10297

if.then.153:                                      ; preds = %do.body.147
  br label %if.end.157, !dbg !10298

if.else.154:                                      ; preds = %do.body.147
  %111 = load %struct._object*, %struct._object** %_py_decref_tmp148, align 8, !dbg !10300, !tbaa !1941
  %ob_type155 = getelementptr inbounds %struct._object, %struct._object* %111, i32 0, i32 1, !dbg !10302
  %112 = load %struct._typeobject*, %struct._typeobject** %ob_type155, align 8, !dbg !10302, !tbaa !1995
  %tp_dealloc156 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %112, i32 0, i32 4, !dbg !10303
  %113 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc156, align 8, !dbg !10303, !tbaa !1997
  %114 = load %struct._object*, %struct._object** %_py_decref_tmp148, align 8, !dbg !10304, !tbaa !1941
  call void %113(%struct._object* %114), !dbg !10305
  br label %if.end.157

if.end.157:                                       ; preds = %if.else.154, %if.then.153
  %115 = bitcast %struct._object** %_py_decref_tmp148 to i8*, !dbg !10306
  call void @llvm.lifetime.end(i64 8, i8* %115) #2, !dbg !10306
  br label %do.cond.158, !dbg !10307

do.cond.158:                                      ; preds = %if.end.157
  br label %do.end.159, !dbg !10308

do.end.159:                                       ; preds = %do.cond.158
  store %struct._object* null, %struct._object** %x, align 8, !dbg !10310, !tbaa !1941
  %116 = load %struct._object*, %struct._object** %y, align 8, !dbg !10311, !tbaa !1941
  %cmp160 = icmp eq %struct._object* %116, null, !dbg !10313
  br i1 %cmp160, label %if.then.162, label %if.end.164, !dbg !10314

if.then.162:                                      ; preds = %do.end.159
  %117 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10315, !tbaa !1941
  %call163 = call %struct._object* %117(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.154, i32 0, i32 0)), !dbg !10315
  store %struct._object* %call163, %struct._object** %retval, !dbg !10316
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !10316

if.end.164:                                       ; preds = %do.end.159
  %118 = load %struct._object*, %struct._object** %y, align 8, !dbg !10317, !tbaa !1941
  %call165 = call i64 @PyLong_AsLongLong(%struct._object* %118), !dbg !10318
  store i64 %call165, i64* %out67, align 8, !dbg !10319, !tbaa !5682
  %119 = load i64, i64* %out67, align 8, !dbg !10320, !tbaa !5682
  %cmp166 = icmp ne i64 %119, -1, !dbg !10322
  br i1 %cmp166, label %if.then.171, label %lor.lhs.false.168, !dbg !10323

lor.lhs.false.168:                                ; preds = %if.end.164
  %call169 = call %struct._object* @PyErr_Occurred(), !dbg !10324
  %tobool170 = icmp ne %struct._object* %call169, null, !dbg !10324
  br i1 %tobool170, label %if.end.173, label %if.then.171, !dbg !10326

if.then.171:                                      ; preds = %lor.lhs.false.168, %if.end.164
  %120 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10327, !tbaa !1941
  %call172 = call %struct._object* %120(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.155, i32 0, i32 0)), !dbg !10327
  store %struct._object* %call172, %struct._object** %retval, !dbg !10328
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !10328

if.end.173:                                       ; preds = %lor.lhs.false.168
  %121 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !10329, !tbaa !1941
  %call174 = call i32 @PyErr_ExceptionMatches(%struct._object* %121), !dbg !10331
  %tobool175 = icmp ne i32 %call174, 0, !dbg !10331
  br i1 %tobool175, label %if.end.178, label %if.then.176, !dbg !10332

if.then.176:                                      ; preds = %if.end.173
  %122 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10333, !tbaa !1941
  %call177 = call %struct._object* %122(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.156, i32 0, i32 0)), !dbg !10333
  store %struct._object* %call177, %struct._object** %retval, !dbg !10334
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !10334

if.end.178:                                       ; preds = %if.end.173
  call void @PyErr_Clear(), !dbg !10335
  %123 = load %struct._object*, %struct._object** %y, align 8, !dbg !10336, !tbaa !1941
  %call179 = call %struct._object* @PyNumber_Negative(%struct._object* %123), !dbg !10337
  store %struct._object* %call179, %struct._object** %x, align 8, !dbg !10338, !tbaa !1941
  br label %do.body.180, !dbg !10339

do.body.180:                                      ; preds = %if.end.178
  %124 = bitcast %struct._object** %_py_decref_tmp181 to i8*, !dbg !10340
  call void @llvm.lifetime.start(i64 8, i8* %124) #2, !dbg !10340
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp181, metadata !1193, metadata !1945), !dbg !10342
  %125 = load %struct._object*, %struct._object** %y, align 8, !dbg !10343, !tbaa !1941
  store %struct._object* %125, %struct._object** %_py_decref_tmp181, align 8, !dbg !10342, !tbaa !1941
  %126 = load %struct._object*, %struct._object** %_py_decref_tmp181, align 8, !dbg !10344, !tbaa !1941
  %ob_refcnt182 = getelementptr inbounds %struct._object, %struct._object* %126, i32 0, i32 0, !dbg !10346
  %127 = load i64, i64* %ob_refcnt182, align 8, !dbg !10347, !tbaa !1961
  %dec183 = add i64 %127, -1, !dbg !10347
  store i64 %dec183, i64* %ob_refcnt182, align 8, !dbg !10347, !tbaa !1961
  %cmp184 = icmp ne i64 %dec183, 0, !dbg !10348
  br i1 %cmp184, label %if.then.186, label %if.else.187, !dbg !10349

if.then.186:                                      ; preds = %do.body.180
  br label %if.end.190, !dbg !10350

if.else.187:                                      ; preds = %do.body.180
  %128 = load %struct._object*, %struct._object** %_py_decref_tmp181, align 8, !dbg !10352, !tbaa !1941
  %ob_type188 = getelementptr inbounds %struct._object, %struct._object* %128, i32 0, i32 1, !dbg !10354
  %129 = load %struct._typeobject*, %struct._typeobject** %ob_type188, align 8, !dbg !10354, !tbaa !1995
  %tp_dealloc189 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %129, i32 0, i32 4, !dbg !10355
  %130 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc189, align 8, !dbg !10355, !tbaa !1997
  %131 = load %struct._object*, %struct._object** %_py_decref_tmp181, align 8, !dbg !10356, !tbaa !1941
  call void %130(%struct._object* %131), !dbg !10357
  br label %if.end.190

if.end.190:                                       ; preds = %if.else.187, %if.then.186
  %132 = bitcast %struct._object** %_py_decref_tmp181 to i8*, !dbg !10358
  call void @llvm.lifetime.end(i64 8, i8* %132) #2, !dbg !10358
  br label %do.cond.191, !dbg !10359

do.cond.191:                                      ; preds = %if.end.190
  br label %do.end.192, !dbg !10360

do.end.192:                                       ; preds = %do.cond.191
  store %struct._object* null, %struct._object** %y, align 8, !dbg !10362, !tbaa !1941
  %133 = load %struct._object*, %struct._object** %x, align 8, !dbg !10363, !tbaa !1941
  %cmp193 = icmp eq %struct._object* %133, null, !dbg !10365
  br i1 %cmp193, label %if.then.195, label %if.end.197, !dbg !10366

if.then.195:                                      ; preds = %do.end.192
  %134 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10367, !tbaa !1941
  %call196 = call %struct._object* %134(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.148, i32 0, i32 0)), !dbg !10367
  store %struct._object* %call196, %struct._object** %retval, !dbg !10368
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !10368

if.end.197:                                       ; preds = %do.end.192
  %135 = load %struct._object*, %struct._object** %x, align 8, !dbg !10369, !tbaa !1941
  %136 = load %struct._object*, %struct._object** %one, align 8, !dbg !10370, !tbaa !1941
  %call198 = call %struct._object* @PyNumber_Subtract(%struct._object* %135, %struct._object* %136), !dbg !10371
  store %struct._object* %call198, %struct._object** %y, align 8, !dbg !10372, !tbaa !1941
  br label %do.body.199, !dbg !10373

do.body.199:                                      ; preds = %if.end.197
  %137 = bitcast %struct._object** %_py_decref_tmp200 to i8*, !dbg !10374
  call void @llvm.lifetime.start(i64 8, i8* %137) #2, !dbg !10374
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp200, metadata !1195, metadata !1945), !dbg !10376
  %138 = load %struct._object*, %struct._object** %x, align 8, !dbg !10377, !tbaa !1941
  store %struct._object* %138, %struct._object** %_py_decref_tmp200, align 8, !dbg !10376, !tbaa !1941
  %139 = load %struct._object*, %struct._object** %_py_decref_tmp200, align 8, !dbg !10378, !tbaa !1941
  %ob_refcnt201 = getelementptr inbounds %struct._object, %struct._object* %139, i32 0, i32 0, !dbg !10380
  %140 = load i64, i64* %ob_refcnt201, align 8, !dbg !10381, !tbaa !1961
  %dec202 = add i64 %140, -1, !dbg !10381
  store i64 %dec202, i64* %ob_refcnt201, align 8, !dbg !10381, !tbaa !1961
  %cmp203 = icmp ne i64 %dec202, 0, !dbg !10382
  br i1 %cmp203, label %if.then.205, label %if.else.206, !dbg !10383

if.then.205:                                      ; preds = %do.body.199
  br label %if.end.209, !dbg !10384

if.else.206:                                      ; preds = %do.body.199
  %141 = load %struct._object*, %struct._object** %_py_decref_tmp200, align 8, !dbg !10386, !tbaa !1941
  %ob_type207 = getelementptr inbounds %struct._object, %struct._object* %141, i32 0, i32 1, !dbg !10388
  %142 = load %struct._typeobject*, %struct._typeobject** %ob_type207, align 8, !dbg !10388, !tbaa !1995
  %tp_dealloc208 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %142, i32 0, i32 4, !dbg !10389
  %143 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc208, align 8, !dbg !10389, !tbaa !1997
  %144 = load %struct._object*, %struct._object** %_py_decref_tmp200, align 8, !dbg !10390, !tbaa !1941
  call void %143(%struct._object* %144), !dbg !10391
  br label %if.end.209

if.end.209:                                       ; preds = %if.else.206, %if.then.205
  %145 = bitcast %struct._object** %_py_decref_tmp200 to i8*, !dbg !10392
  call void @llvm.lifetime.end(i64 8, i8* %145) #2, !dbg !10392
  br label %do.cond.210, !dbg !10393

do.cond.210:                                      ; preds = %if.end.209
  br label %do.end.211, !dbg !10394

do.end.211:                                       ; preds = %do.cond.210
  store %struct._object* null, %struct._object** %x, align 8, !dbg !10396, !tbaa !1941
  %146 = load %struct._object*, %struct._object** %y, align 8, !dbg !10397, !tbaa !1941
  %cmp212 = icmp eq %struct._object* %146, null, !dbg !10399
  br i1 %cmp212, label %if.then.214, label %if.end.216, !dbg !10400

if.then.214:                                      ; preds = %do.end.211
  %147 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10401, !tbaa !1941
  %call215 = call %struct._object* %147(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.157, i32 0, i32 0)), !dbg !10401
  store %struct._object* %call215, %struct._object** %retval, !dbg !10402
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !10402

if.end.216:                                       ; preds = %do.end.211
  %148 = load %struct._object*, %struct._object** %y, align 8, !dbg !10403, !tbaa !1941
  %call217 = call i64 @PyLong_AsLongLong(%struct._object* %148), !dbg !10404
  store i64 %call217, i64* %out67, align 8, !dbg !10405, !tbaa !5682
  %149 = load i64, i64* %out67, align 8, !dbg !10406, !tbaa !5682
  %cmp218 = icmp ne i64 %149, -1, !dbg !10408
  br i1 %cmp218, label %if.then.223, label %lor.lhs.false.220, !dbg !10409

lor.lhs.false.220:                                ; preds = %if.end.216
  %call221 = call %struct._object* @PyErr_Occurred(), !dbg !10410
  %tobool222 = icmp ne %struct._object* %call221, null, !dbg !10410
  br i1 %tobool222, label %if.end.225, label %if.then.223, !dbg !10412

if.then.223:                                      ; preds = %lor.lhs.false.220, %if.end.216
  %150 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10413, !tbaa !1941
  %call224 = call %struct._object* %150(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.158, i32 0, i32 0)), !dbg !10413
  store %struct._object* %call224, %struct._object** %retval, !dbg !10414
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !10414

if.end.225:                                       ; preds = %lor.lhs.false.220
  %151 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8, !dbg !10415, !tbaa !1941
  %call226 = call i32 @PyErr_ExceptionMatches(%struct._object* %151), !dbg !10417
  %tobool227 = icmp ne i32 %call226, 0, !dbg !10417
  br i1 %tobool227, label %if.end.230, label %if.then.228, !dbg !10418

if.then.228:                                      ; preds = %if.end.225
  %152 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10419, !tbaa !1941
  %call229 = call %struct._object* %152(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.159, i32 0, i32 0)), !dbg !10419
  store %struct._object* %call229, %struct._object** %retval, !dbg !10420
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.298, !dbg !10420

if.end.230:                                       ; preds = %if.end.225
  call void @PyErr_Clear(), !dbg !10421
  br label %do.body.231, !dbg !10422

do.body.231:                                      ; preds = %if.end.230
  %153 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !10423
  call void @llvm.lifetime.start(i64 8, i8* %153) #2, !dbg !10423
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp232, metadata !1197, metadata !1945), !dbg !10425
  %154 = load %struct._object*, %struct._object** %y, align 8, !dbg !10426, !tbaa !1941
  store %struct._object* %154, %struct._object** %_py_decref_tmp232, align 8, !dbg !10425, !tbaa !1941
  %155 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !10427, !tbaa !1941
  %ob_refcnt233 = getelementptr inbounds %struct._object, %struct._object* %155, i32 0, i32 0, !dbg !10429
  %156 = load i64, i64* %ob_refcnt233, align 8, !dbg !10430, !tbaa !1961
  %dec234 = add i64 %156, -1, !dbg !10430
  store i64 %dec234, i64* %ob_refcnt233, align 8, !dbg !10430, !tbaa !1961
  %cmp235 = icmp ne i64 %dec234, 0, !dbg !10431
  br i1 %cmp235, label %if.then.237, label %if.else.238, !dbg !10432

if.then.237:                                      ; preds = %do.body.231
  br label %if.end.241, !dbg !10433

if.else.238:                                      ; preds = %do.body.231
  %157 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !10435, !tbaa !1941
  %ob_type239 = getelementptr inbounds %struct._object, %struct._object* %157, i32 0, i32 1, !dbg !10437
  %158 = load %struct._typeobject*, %struct._typeobject** %ob_type239, align 8, !dbg !10437, !tbaa !1995
  %tp_dealloc240 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %158, i32 0, i32 4, !dbg !10438
  %159 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc240, align 8, !dbg !10438, !tbaa !1997
  %160 = load %struct._object*, %struct._object** %_py_decref_tmp232, align 8, !dbg !10439, !tbaa !1941
  call void %159(%struct._object* %160), !dbg !10440
  br label %if.end.241

if.end.241:                                       ; preds = %if.else.238, %if.then.237
  %161 = bitcast %struct._object** %_py_decref_tmp232 to i8*, !dbg !10441
  call void @llvm.lifetime.end(i64 8, i8* %161) #2, !dbg !10441
  br label %do.cond.242, !dbg !10442

do.cond.242:                                      ; preds = %if.end.241
  br label %do.end.243, !dbg !10443

do.end.243:                                       ; preds = %do.cond.242
  store %struct._object* null, %struct._object** %y, align 8, !dbg !10445, !tbaa !1941
  br label %do.body.244, !dbg !10446

do.body.244:                                      ; preds = %do.end.243
  %162 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10447
  call void @llvm.lifetime.start(i64 8, i8* %162) #2, !dbg !10447
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1199, metadata !1945), !dbg !10449
  %163 = load %struct._object*, %struct._object** %x, align 8, !dbg !10450, !tbaa !1941
  store %struct._object* %163, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10449, !tbaa !1941
  %164 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10451, !tbaa !1941
  %cmp245 = icmp ne %struct._object* %164, null, !dbg !10452
  br i1 %cmp245, label %if.then.247, label %if.end.261, !dbg !10453

if.then.247:                                      ; preds = %do.body.244
  br label %do.body.248, !dbg !10454

do.body.248:                                      ; preds = %if.then.247
  %165 = bitcast %struct._object** %_py_decref_tmp249 to i8*, !dbg !10456
  call void @llvm.lifetime.start(i64 8, i8* %165) #2, !dbg !10456
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp249, metadata !1201, metadata !1945), !dbg !10458
  %166 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10459, !tbaa !1941
  store %struct._object* %166, %struct._object** %_py_decref_tmp249, align 8, !dbg !10458, !tbaa !1941
  %167 = load %struct._object*, %struct._object** %_py_decref_tmp249, align 8, !dbg !10460, !tbaa !1941
  %ob_refcnt250 = getelementptr inbounds %struct._object, %struct._object* %167, i32 0, i32 0, !dbg !10462
  %168 = load i64, i64* %ob_refcnt250, align 8, !dbg !10463, !tbaa !1961
  %dec251 = add i64 %168, -1, !dbg !10463
  store i64 %dec251, i64* %ob_refcnt250, align 8, !dbg !10463, !tbaa !1961
  %cmp252 = icmp ne i64 %dec251, 0, !dbg !10464
  br i1 %cmp252, label %if.then.254, label %if.else.255, !dbg !10465

if.then.254:                                      ; preds = %do.body.248
  br label %if.end.258, !dbg !10466

if.else.255:                                      ; preds = %do.body.248
  %169 = load %struct._object*, %struct._object** %_py_decref_tmp249, align 8, !dbg !10468, !tbaa !1941
  %ob_type256 = getelementptr inbounds %struct._object, %struct._object* %169, i32 0, i32 1, !dbg !10470
  %170 = load %struct._typeobject*, %struct._typeobject** %ob_type256, align 8, !dbg !10470, !tbaa !1995
  %tp_dealloc257 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %170, i32 0, i32 4, !dbg !10471
  %171 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc257, align 8, !dbg !10471, !tbaa !1997
  %172 = load %struct._object*, %struct._object** %_py_decref_tmp249, align 8, !dbg !10472, !tbaa !1941
  call void %171(%struct._object* %172), !dbg !10473
  br label %if.end.258

if.end.258:                                       ; preds = %if.else.255, %if.then.254
  %173 = bitcast %struct._object** %_py_decref_tmp249 to i8*, !dbg !10474
  call void @llvm.lifetime.end(i64 8, i8* %173) #2, !dbg !10474
  br label %do.cond.259, !dbg !10476

do.cond.259:                                      ; preds = %if.end.258
  br label %do.end.260, !dbg !10477

do.end.260:                                       ; preds = %do.cond.259
  br label %if.end.261, !dbg !10479

if.end.261:                                       ; preds = %do.end.260, %do.body.244
  %174 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10481
  call void @llvm.lifetime.end(i64 8, i8* %174) #2, !dbg !10481
  br label %do.cond.262, !dbg !10484

do.cond.262:                                      ; preds = %if.end.261
  br label %do.end.263, !dbg !10485

do.end.263:                                       ; preds = %do.cond.262
  br label %do.body.264, !dbg !10487

do.body.264:                                      ; preds = %do.end.263
  %175 = bitcast %struct._object** %_py_xdecref_tmp265 to i8*, !dbg !10488
  call void @llvm.lifetime.start(i64 8, i8* %175) #2, !dbg !10488
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp265, metadata !1204, metadata !1945), !dbg !10490
  %176 = load %struct._object*, %struct._object** %y, align 8, !dbg !10491, !tbaa !1941
  store %struct._object* %176, %struct._object** %_py_xdecref_tmp265, align 8, !dbg !10490, !tbaa !1941
  %177 = load %struct._object*, %struct._object** %_py_xdecref_tmp265, align 8, !dbg !10492, !tbaa !1941
  %cmp266 = icmp ne %struct._object* %177, null, !dbg !10493
  br i1 %cmp266, label %if.then.268, label %if.end.282, !dbg !10494

if.then.268:                                      ; preds = %do.body.264
  br label %do.body.269, !dbg !10495

do.body.269:                                      ; preds = %if.then.268
  %178 = bitcast %struct._object** %_py_decref_tmp270 to i8*, !dbg !10497
  call void @llvm.lifetime.start(i64 8, i8* %178) #2, !dbg !10497
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp270, metadata !1206, metadata !1945), !dbg !10499
  %179 = load %struct._object*, %struct._object** %_py_xdecref_tmp265, align 8, !dbg !10500, !tbaa !1941
  store %struct._object* %179, %struct._object** %_py_decref_tmp270, align 8, !dbg !10499, !tbaa !1941
  %180 = load %struct._object*, %struct._object** %_py_decref_tmp270, align 8, !dbg !10501, !tbaa !1941
  %ob_refcnt271 = getelementptr inbounds %struct._object, %struct._object* %180, i32 0, i32 0, !dbg !10503
  %181 = load i64, i64* %ob_refcnt271, align 8, !dbg !10504, !tbaa !1961
  %dec272 = add i64 %181, -1, !dbg !10504
  store i64 %dec272, i64* %ob_refcnt271, align 8, !dbg !10504, !tbaa !1961
  %cmp273 = icmp ne i64 %dec272, 0, !dbg !10505
  br i1 %cmp273, label %if.then.275, label %if.else.276, !dbg !10506

if.then.275:                                      ; preds = %do.body.269
  br label %if.end.279, !dbg !10507

if.else.276:                                      ; preds = %do.body.269
  %182 = load %struct._object*, %struct._object** %_py_decref_tmp270, align 8, !dbg !10509, !tbaa !1941
  %ob_type277 = getelementptr inbounds %struct._object, %struct._object* %182, i32 0, i32 1, !dbg !10511
  %183 = load %struct._typeobject*, %struct._typeobject** %ob_type277, align 8, !dbg !10511, !tbaa !1995
  %tp_dealloc278 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %183, i32 0, i32 4, !dbg !10512
  %184 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc278, align 8, !dbg !10512, !tbaa !1997
  %185 = load %struct._object*, %struct._object** %_py_decref_tmp270, align 8, !dbg !10513, !tbaa !1941
  call void %184(%struct._object* %185), !dbg !10514
  br label %if.end.279

if.end.279:                                       ; preds = %if.else.276, %if.then.275
  %186 = bitcast %struct._object** %_py_decref_tmp270 to i8*, !dbg !10515
  call void @llvm.lifetime.end(i64 8, i8* %186) #2, !dbg !10515
  br label %do.cond.280, !dbg !10517

do.cond.280:                                      ; preds = %if.end.279
  br label %do.end.281, !dbg !10518

do.end.281:                                       ; preds = %do.cond.280
  br label %if.end.282, !dbg !10520

if.end.282:                                       ; preds = %do.end.281, %do.body.264
  %187 = bitcast %struct._object** %_py_xdecref_tmp265 to i8*, !dbg !10522
  call void @llvm.lifetime.end(i64 8, i8* %187) #2, !dbg !10522
  br label %do.cond.283, !dbg !10523

do.cond.283:                                      ; preds = %if.end.282
  br label %do.end.284, !dbg !10524

do.end.284:                                       ; preds = %do.cond.283
  br label %do.body.285, !dbg !10526

do.body.285:                                      ; preds = %do.end.284
  %188 = bitcast %struct._object** %_py_decref_tmp286 to i8*, !dbg !10527
  call void @llvm.lifetime.start(i64 8, i8* %188) #2, !dbg !10527
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp286, metadata !1209, metadata !1945), !dbg !10529
  %189 = load %struct._object*, %struct._object** %one, align 8, !dbg !10530, !tbaa !1941
  store %struct._object* %189, %struct._object** %_py_decref_tmp286, align 8, !dbg !10529, !tbaa !1941
  %190 = load %struct._object*, %struct._object** %_py_decref_tmp286, align 8, !dbg !10531, !tbaa !1941
  %ob_refcnt287 = getelementptr inbounds %struct._object, %struct._object* %190, i32 0, i32 0, !dbg !10533
  %191 = load i64, i64* %ob_refcnt287, align 8, !dbg !10534, !tbaa !1961
  %dec288 = add i64 %191, -1, !dbg !10534
  store i64 %dec288, i64* %ob_refcnt287, align 8, !dbg !10534, !tbaa !1961
  %cmp289 = icmp ne i64 %dec288, 0, !dbg !10535
  br i1 %cmp289, label %if.then.291, label %if.else.292, !dbg !10536

if.then.291:                                      ; preds = %do.body.285
  br label %if.end.295, !dbg !10537

if.else.292:                                      ; preds = %do.body.285
  %192 = load %struct._object*, %struct._object** %_py_decref_tmp286, align 8, !dbg !10539, !tbaa !1941
  %ob_type293 = getelementptr inbounds %struct._object, %struct._object* %192, i32 0, i32 1, !dbg !10541
  %193 = load %struct._typeobject*, %struct._typeobject** %ob_type293, align 8, !dbg !10541, !tbaa !1995
  %tp_dealloc294 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %193, i32 0, i32 4, !dbg !10542
  %194 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc294, align 8, !dbg !10542, !tbaa !1997
  %195 = load %struct._object*, %struct._object** %_py_decref_tmp286, align 8, !dbg !10543, !tbaa !1941
  call void %194(%struct._object* %195), !dbg !10544
  br label %if.end.295

if.end.295:                                       ; preds = %if.else.292, %if.then.291
  %196 = bitcast %struct._object** %_py_decref_tmp286 to i8*, !dbg !10545
  call void @llvm.lifetime.end(i64 8, i8* %196) #2, !dbg !10545
  br label %do.cond.296, !dbg !10547

do.cond.296:                                      ; preds = %if.end.295
  br label %do.end.297, !dbg !10548

do.end.297:                                       ; preds = %do.cond.296
  store i32 0, i32* %cleanup.dest.slot, !dbg !10550
  br label %cleanup.298, !dbg !10550

cleanup.298:                                      ; preds = %do.end.297, %if.then.228, %if.then.223, %if.then.214, %if.then.195, %if.then.176, %if.then.171, %if.then.162, %if.then.143, %if.then.138, %if.then.129, %if.then.110, %if.then.91, %if.then.86, %if.then.78, %if.then.72
  %197 = bitcast i64* %uout68 to i8*, !dbg !10551
  call void @llvm.lifetime.end(i64 8, i8* %197) #2, !dbg !10551
  %198 = bitcast i64* %out67 to i8*, !dbg !10551
  call void @llvm.lifetime.end(i64 8, i8* %198) #2, !dbg !10551
  %199 = bitcast %struct._object** %y to i8*, !dbg !10551
  call void @llvm.lifetime.end(i64 8, i8* %199) #2, !dbg !10551
  %200 = bitcast %struct._object** %x to i8*, !dbg !10551
  call void @llvm.lifetime.end(i64 8, i8* %200) #2, !dbg !10551
  %201 = bitcast %struct._object** %one to i8*, !dbg !10551
  call void @llvm.lifetime.end(i64 8, i8* %201) #2, !dbg !10551
  %cleanup.dest.303 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.303, label %cleanup.354 [
    i32 0, label %cleanup.cont.304
  ]

cleanup.cont.304:                                 ; preds = %cleanup.298
  %202 = bitcast i64* %out305 to i8*, !dbg !10553
  call void @llvm.lifetime.start(i64 8, i8* %202) #2, !dbg !10553
  call void @llvm.dbg.declare(metadata i64* %out305, metadata !1211, metadata !1945), !dbg !10554
  %203 = bitcast i64* %uout306 to i8*, !dbg !10555
  call void @llvm.lifetime.start(i64 8, i8* %203) #2, !dbg !10555
  call void @llvm.dbg.declare(metadata i64* %uout306, metadata !1213, metadata !1945), !dbg !10556
  %204 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10557, !tbaa !1961
  %inc307 = add i64 %204, 1, !dbg !10557
  store i64 %inc307, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10557, !tbaa !1961
  %call308 = call i64 @PyLong_AsLongLong(%struct._object* @_Py_NoneStruct), !dbg !10558
  store i64 %call308, i64* %out305, align 8, !dbg !10559, !tbaa !5682
  %205 = load i64, i64* %out305, align 8, !dbg !10560, !tbaa !5682
  %cmp309 = icmp ne i64 %205, -1, !dbg !10562
  br i1 %cmp309, label %if.then.314, label %lor.lhs.false.311, !dbg !10563

lor.lhs.false.311:                                ; preds = %cleanup.cont.304
  %call312 = call %struct._object* @PyErr_Occurred(), !dbg !10564
  %tobool313 = icmp ne %struct._object* %call312, null, !dbg !10564
  br i1 %tobool313, label %if.end.316, label %if.then.314, !dbg !10566

if.then.314:                                      ; preds = %lor.lhs.false.311, %cleanup.cont.304
  %206 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10567, !tbaa !1941
  %call315 = call %struct._object* %206(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.160, i32 0, i32 0)), !dbg !10567
  store %struct._object* %call315, %struct._object** %retval, !dbg !10568
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.349, !dbg !10568

if.end.316:                                       ; preds = %lor.lhs.false.311
  %207 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !10569, !tbaa !1941
  %call317 = call i32 @PyErr_ExceptionMatches(%struct._object* %207), !dbg !10571
  %tobool318 = icmp ne i32 %call317, 0, !dbg !10571
  br i1 %tobool318, label %if.end.321, label %if.then.319, !dbg !10572

if.then.319:                                      ; preds = %if.end.316
  %208 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10573, !tbaa !1941
  %call320 = call %struct._object* %208(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.161, i32 0, i32 0)), !dbg !10573
  store %struct._object* %call320, %struct._object** %retval, !dbg !10574
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.349, !dbg !10574

if.end.321:                                       ; preds = %if.end.316
  call void @PyErr_Clear(), !dbg !10575
  %call322 = call i64 @PyLong_AsUnsignedLongLong(%struct._object* @_Py_NoneStruct), !dbg !10576
  store i64 %call322, i64* %uout306, align 8, !dbg !10577, !tbaa !5682
  %209 = load i64, i64* %uout306, align 8, !dbg !10578, !tbaa !5682
  %cmp323 = icmp ne i64 %209, -1, !dbg !10580
  br i1 %cmp323, label %if.then.328, label %lor.lhs.false.325, !dbg !10581

lor.lhs.false.325:                                ; preds = %if.end.321
  %call326 = call %struct._object* @PyErr_Occurred(), !dbg !10582
  %tobool327 = icmp ne %struct._object* %call326, null, !dbg !10582
  br i1 %tobool327, label %if.end.330, label %if.then.328, !dbg !10584

if.then.328:                                      ; preds = %lor.lhs.false.325, %if.end.321
  %210 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10585, !tbaa !1941
  %call329 = call %struct._object* %210(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.160, i32 0, i32 0)), !dbg !10585
  store %struct._object* %call329, %struct._object** %retval, !dbg !10586
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.349, !dbg !10586

if.end.330:                                       ; preds = %lor.lhs.false.325
  %211 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8, !dbg !10587, !tbaa !1941
  %call331 = call i32 @PyErr_ExceptionMatches(%struct._object* %211), !dbg !10589
  %tobool332 = icmp ne i32 %call331, 0, !dbg !10589
  br i1 %tobool332, label %if.end.335, label %if.then.333, !dbg !10590

if.then.333:                                      ; preds = %if.end.330
  %212 = load %struct._object* (i8*)*, %struct._object* (i8*)** %error.addr, align 8, !dbg !10591, !tbaa !1941
  %call334 = call %struct._object* %212(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.161, i32 0, i32 0)), !dbg !10591
  store %struct._object* %call334, %struct._object** %retval, !dbg !10592
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.349, !dbg !10592

if.end.335:                                       ; preds = %if.end.330
  call void @PyErr_Clear(), !dbg !10593
  br label %do.body.336, !dbg !10594

do.body.336:                                      ; preds = %if.end.335
  %213 = bitcast %struct._object** %_py_decref_tmp337 to i8*, !dbg !10595
  call void @llvm.lifetime.start(i64 8, i8* %213) #2, !dbg !10595
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp337, metadata !1214, metadata !1945), !dbg !10597
  store %struct._object* @_Py_NoneStruct, %struct._object** %_py_decref_tmp337, align 8, !dbg !10597, !tbaa !1941
  %214 = load %struct._object*, %struct._object** %_py_decref_tmp337, align 8, !dbg !10598, !tbaa !1941
  %ob_refcnt338 = getelementptr inbounds %struct._object, %struct._object* %214, i32 0, i32 0, !dbg !10600
  %215 = load i64, i64* %ob_refcnt338, align 8, !dbg !10601, !tbaa !1961
  %dec339 = add i64 %215, -1, !dbg !10601
  store i64 %dec339, i64* %ob_refcnt338, align 8, !dbg !10601, !tbaa !1961
  %cmp340 = icmp ne i64 %dec339, 0, !dbg !10602
  br i1 %cmp340, label %if.then.342, label %if.else.343, !dbg !10603

if.then.342:                                      ; preds = %do.body.336
  br label %if.end.346, !dbg !10604

if.else.343:                                      ; preds = %do.body.336
  %216 = load %struct._object*, %struct._object** %_py_decref_tmp337, align 8, !dbg !10606, !tbaa !1941
  %ob_type344 = getelementptr inbounds %struct._object, %struct._object* %216, i32 0, i32 1, !dbg !10608
  %217 = load %struct._typeobject*, %struct._typeobject** %ob_type344, align 8, !dbg !10608, !tbaa !1995
  %tp_dealloc345 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %217, i32 0, i32 4, !dbg !10609
  %218 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc345, align 8, !dbg !10609, !tbaa !1997
  %219 = load %struct._object*, %struct._object** %_py_decref_tmp337, align 8, !dbg !10610, !tbaa !1941
  call void %218(%struct._object* %219), !dbg !10611
  br label %if.end.346

if.end.346:                                       ; preds = %if.else.343, %if.then.342
  %220 = bitcast %struct._object** %_py_decref_tmp337 to i8*, !dbg !10612
  call void @llvm.lifetime.end(i64 8, i8* %220) #2, !dbg !10612
  br label %do.cond.347, !dbg !10614

do.cond.347:                                      ; preds = %if.end.346
  br label %do.end.348, !dbg !10615

do.end.348:                                       ; preds = %do.cond.347
  store i32 0, i32* %cleanup.dest.slot, !dbg !10617
  br label %cleanup.349, !dbg !10617

cleanup.349:                                      ; preds = %do.end.348, %if.then.333, %if.then.328, %if.then.319, %if.then.314
  %221 = bitcast i64* %uout306 to i8*, !dbg !10618
  call void @llvm.lifetime.end(i64 8, i8* %221) #2, !dbg !10618
  %222 = bitcast i64* %out305 to i8*, !dbg !10618
  call void @llvm.lifetime.end(i64 8, i8* %222) #2, !dbg !10618
  %cleanup.dest.351 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.351, label %cleanup.354 [
    i32 0, label %cleanup.cont.352
  ]

cleanup.cont.352:                                 ; preds = %cleanup.349
  %223 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10619, !tbaa !1961
  %inc353 = add i64 %223, 1, !dbg !10619
  store i64 %inc353, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10619, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %retval, !dbg !10620
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.354, !dbg !10620

cleanup.354:                                      ; preds = %cleanup.cont.352, %cleanup.349, %cleanup.298, %cleanup.61
  %224 = bitcast i32* %i to i8*, !dbg !10621
  call void @llvm.lifetime.end(i64 4, i8* %224) #2, !dbg !10621
  %225 = bitcast %struct._object** %pyresult to i8*, !dbg !10621
  call void @llvm.lifetime.end(i64 8, i8* %225) #2, !dbg !10621
  %226 = bitcast i64* %base to i8*, !dbg !10621
  call void @llvm.lifetime.end(i64 8, i8* %226) #2, !dbg !10621
  %227 = bitcast i32* %NBITS to i8*, !dbg !10621
  call void @llvm.lifetime.end(i64 4, i8* %227) #2, !dbg !10621
  %228 = load %struct._object*, %struct._object** %retval, !dbg !10621
  ret %struct._object* %228, !dbg !10621
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @raise_test_longlong_error(i8* %msg) #0 {
entry:
  %msg.addr = alloca i8*, align 8
  store i8* %msg, i8** %msg.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i8** %msg.addr, metadata !1218, metadata !1945), !dbg !10622
  %0 = load i8*, i8** %msg.addr, align 8, !dbg !10623, !tbaa !1941
  %call = call %struct._object* @raiseTestError(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.72, i32 0, i32 0), i8* %0), !dbg !10624
  ret %struct._object* %call, !dbg !10625
}

declare i64 @PyLong_AsUnsignedLongLong(%struct._object*) #3

declare i64 @PyLong_AsLongLong(%struct._object*) #3

declare i64 @PyLong_AsLongLongAndOverflow(%struct._object*, i32*) #3

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #3

declare %struct._object* @PyBytes_FromString(i8*) #3

declare void @PyBuffer_Release(%struct.bufferinfo*) #3

declare i64 @Py_UNICODE_strlen(i32*) #3

declare %struct._object* @PyUnicode_FromUnicode(i32*, i64) #3

declare %struct._object* @PyCodec_IncrementalEncoder(i8*, i8*) #3

declare %struct._object* @PyCodec_IncrementalDecoder(i8*, i8*) #3

declare %struct._object* @PyUnicode_Decode(i8*, i64, i8*, i8*) #3

declare i32* @PyUnicode_AsUnicode(%struct._object*) #3

declare %struct._object* @PyUnicode_FromString(i8*) #3

declare %struct._object* @PyUnicode_FromWideChar(i32*, i64) #3

declare i32 @PyUnicode_Compare(%struct._object*, %struct._object*) #3

declare i32 @_PyUnicode_Ready(%struct._object*) #3

declare i8* @PyMem_Malloc(i64) #3

declare i64 @PyUnicode_AsWideChar(%struct._object*, i32*, i64) #3

declare void @PyMem_Free(i8*) #3

declare i32* @PyUnicode_AsWideCharString(%struct._object*, i64*) #3

declare i32 @PyUnicode_EncodeDecimal(i32*, i64, i8*, i8*) #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #5

declare i32 @_PyBytes_Resize(%struct._object**, i64) #3

declare %struct._object* @PyUnicode_TransformDecimalToASCII(i32*, i64) #3

declare i32 @PyCallable_Check(%struct._object*) #3

declare void @PyEval_InitThreads() #3

declare i8* @PyThread_allocate_lock() #3

declare i32 @PyThread_acquire_lock(i8*, i32) #3

declare i64 @PyThread_start_new_thread(void (i8*)*, i8*) #3

; Function Attrs: nounwind uwtable
define internal void @_make_call_from_thread(i8* %callable) #0 {
entry:
  %callable.addr = alloca i8*, align 8
  store i8* %callable, i8** %callable.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i8** %callable.addr, metadata !1490, metadata !1945), !dbg !10626
  %0 = load i8*, i8** %callable.addr, align 8, !dbg !10627, !tbaa !1941
  %call = call i32 @_make_call(i8* %0), !dbg !10628
  %1 = load i8*, i8** @thread_done, align 8, !dbg !10629, !tbaa !1941
  call void @PyThread_release_lock(i8* %1), !dbg !10630
  ret void, !dbg !10631
}

; Function Attrs: nounwind uwtable
define internal i32 @_make_call(i8* %callable) #0 {
entry:
  %callable.addr = alloca i8*, align 8
  %rc = alloca %struct._object*, align 8
  %success = alloca i32, align 4
  %s = alloca i32, align 4
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store i8* %callable, i8** %callable.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i8** %callable.addr, metadata !1493, metadata !1945), !dbg !10632
  %0 = bitcast %struct._object** %rc to i8*, !dbg !10633
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10633
  call void @llvm.dbg.declare(metadata %struct._object** %rc, metadata !1494, metadata !1945), !dbg !10634
  %1 = bitcast i32* %success to i8*, !dbg !10635
  call void @llvm.lifetime.start(i64 4, i8* %1) #2, !dbg !10635
  call void @llvm.dbg.declare(metadata i32* %success, metadata !1495, metadata !1945), !dbg !10636
  %2 = bitcast i32* %s to i8*, !dbg !10637
  call void @llvm.lifetime.start(i64 4, i8* %2) #2, !dbg !10637
  call void @llvm.dbg.declare(metadata i32* %s, metadata !1496, metadata !1945), !dbg !10638
  %call = call i32 @PyGILState_Ensure(), !dbg !10639
  store i32 %call, i32* %s, align 4, !dbg !10638, !tbaa !5543
  %3 = load i8*, i8** %callable.addr, align 8, !dbg !10640, !tbaa !1941
  %4 = bitcast i8* %3 to %struct._object*, !dbg !10641
  %call1 = call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.334, i32 0, i32 0)), !dbg !10642
  store %struct._object* %call1, %struct._object** %rc, align 8, !dbg !10643, !tbaa !1941
  %5 = load %struct._object*, %struct._object** %rc, align 8, !dbg !10644, !tbaa !1941
  %cmp = icmp ne %struct._object* %5, null, !dbg !10645
  %conv = zext i1 %cmp to i32, !dbg !10645
  store i32 %conv, i32* %success, align 4, !dbg !10646, !tbaa !1971
  br label %do.body, !dbg !10647

do.body:                                          ; preds = %entry
  %6 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10648
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !10648
  call void @llvm.dbg.declare(metadata %struct._object** %_py_xdecref_tmp, metadata !1498, metadata !1945), !dbg !10650
  %7 = load %struct._object*, %struct._object** %rc, align 8, !dbg !10651, !tbaa !1941
  store %struct._object* %7, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10650, !tbaa !1941
  %8 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10652, !tbaa !1941
  %cmp2 = icmp ne %struct._object* %8, null, !dbg !10653
  br i1 %cmp2, label %if.then, label %if.end.8, !dbg !10654

if.then:                                          ; preds = %do.body
  br label %do.body.4, !dbg !10655

do.body.4:                                        ; preds = %if.then
  %9 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10657
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !10657
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1500, metadata !1945), !dbg !10659
  %10 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8, !dbg !10660, !tbaa !1941
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8, !dbg !10659, !tbaa !1941
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10661, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0, !dbg !10663
  %12 = load i64, i64* %ob_refcnt, align 8, !dbg !10664, !tbaa !1961
  %dec = add i64 %12, -1, !dbg !10664
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !10664, !tbaa !1961
  %cmp5 = icmp ne i64 %dec, 0, !dbg !10665
  br i1 %cmp5, label %if.then.7, label %if.else, !dbg !10666

if.then.7:                                        ; preds = %do.body.4
  br label %if.end, !dbg !10667

if.else:                                          ; preds = %do.body.4
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10669, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1, !dbg !10671
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10671, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4, !dbg !10672
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10672, !tbaa !1997
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10673, !tbaa !1941
  call void %15(%struct._object* %16), !dbg !10674
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.7
  %17 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10675
  call void @llvm.lifetime.end(i64 8, i8* %17) #2, !dbg !10675
  br label %do.cond, !dbg !10677

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !10678

do.end:                                           ; preds = %do.cond
  br label %if.end.8, !dbg !10680

if.end.8:                                         ; preds = %do.end, %do.body
  %18 = bitcast %struct._object** %_py_xdecref_tmp to i8*, !dbg !10682
  call void @llvm.lifetime.end(i64 8, i8* %18) #2, !dbg !10682
  br label %do.cond.9, !dbg !10685

do.cond.9:                                        ; preds = %if.end.8
  br label %do.end.10, !dbg !10686

do.end.10:                                        ; preds = %do.cond.9
  %19 = load i32, i32* %s, align 4, !dbg !10688, !tbaa !5543
  call void @PyGILState_Release(i32 %19), !dbg !10689
  %20 = load i32, i32* %success, align 4, !dbg !10690, !tbaa !1971
  %21 = bitcast i32* %s to i8*, !dbg !10691
  call void @llvm.lifetime.end(i64 4, i8* %21) #2, !dbg !10691
  %22 = bitcast i32* %success to i8*, !dbg !10691
  call void @llvm.lifetime.end(i64 4, i8* %22) #2, !dbg !10691
  %23 = bitcast %struct._object** %rc to i8*, !dbg !10691
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !10691
  ret i32 %20, !dbg !10692
}

declare void @PyThread_release_lock(i8*) #3

declare void @PyThread_free_lock(i8*) #3

declare i32 @PyGILState_Ensure() #3

declare %struct._object* @_PyObject_CallFunction_SizeT(%struct._object*, i8*, ...) #3

declare void @PyGILState_Release(i32) #3

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #4

; Function Attrs: nounwind uwtable
define internal void @print_delta(i32 %test, %struct.timeval* %s, %struct.timeval* %e) #0 {
entry:
  %test.addr = alloca i32, align 4
  %s.addr = alloca %struct.timeval*, align 8
  %e.addr = alloca %struct.timeval*, align 8
  store i32 %test, i32* %test.addr, align 4, !tbaa !1971
  call void @llvm.dbg.declare(metadata i32* %test.addr, metadata !1582, metadata !1945), !dbg !10693
  store %struct.timeval* %s, %struct.timeval** %s.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct.timeval** %s.addr, metadata !1583, metadata !1945), !dbg !10694
  store %struct.timeval* %e, %struct.timeval** %e.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct.timeval** %e.addr, metadata !1584, metadata !1945), !dbg !10695
  %0 = load %struct.timeval*, %struct.timeval** %s.addr, align 8, !dbg !10696, !tbaa !1941
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i32 0, i32 0, !dbg !10697
  %1 = load i64, i64* %tv_sec, align 8, !dbg !10697, !tbaa !10698
  %2 = load %struct.timeval*, %struct.timeval** %e.addr, align 8, !dbg !10700, !tbaa !1941
  %tv_sec1 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i32 0, i32 0, !dbg !10701
  %3 = load i64, i64* %tv_sec1, align 8, !dbg !10702, !tbaa !10698
  %sub = sub i64 %3, %1, !dbg !10702
  store i64 %sub, i64* %tv_sec1, align 8, !dbg !10702, !tbaa !10698
  %4 = load %struct.timeval*, %struct.timeval** %s.addr, align 8, !dbg !10703, !tbaa !1941
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i32 0, i32 1, !dbg !10704
  %5 = load i64, i64* %tv_usec, align 8, !dbg !10704, !tbaa !10705
  %6 = load %struct.timeval*, %struct.timeval** %e.addr, align 8, !dbg !10706, !tbaa !1941
  %tv_usec2 = getelementptr inbounds %struct.timeval, %struct.timeval* %6, i32 0, i32 1, !dbg !10707
  %7 = load i64, i64* %tv_usec2, align 8, !dbg !10708, !tbaa !10705
  %sub3 = sub i64 %7, %5, !dbg !10708
  store i64 %sub3, i64* %tv_usec2, align 8, !dbg !10708, !tbaa !10705
  %8 = load %struct.timeval*, %struct.timeval** %e.addr, align 8, !dbg !10709, !tbaa !1941
  %tv_usec4 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i32 0, i32 1, !dbg !10711
  %9 = load i64, i64* %tv_usec4, align 8, !dbg !10711, !tbaa !10705
  %cmp = icmp slt i64 %9, 0, !dbg !10712
  br i1 %cmp, label %if.then, label %if.end, !dbg !10713

if.then:                                          ; preds = %entry
  %10 = load %struct.timeval*, %struct.timeval** %e.addr, align 8, !dbg !10714, !tbaa !1941
  %tv_sec5 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 0, !dbg !10716
  %11 = load i64, i64* %tv_sec5, align 8, !dbg !10717, !tbaa !10698
  %sub6 = sub i64 %11, 1, !dbg !10717
  store i64 %sub6, i64* %tv_sec5, align 8, !dbg !10717, !tbaa !10698
  %12 = load %struct.timeval*, %struct.timeval** %e.addr, align 8, !dbg !10718, !tbaa !1941
  %tv_usec7 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 1, !dbg !10719
  %13 = load i64, i64* %tv_usec7, align 8, !dbg !10720, !tbaa !10705
  %add = add i64 %13, 1000000, !dbg !10720
  store i64 %add, i64* %tv_usec7, align 8, !dbg !10720, !tbaa !10705
  br label %if.end, !dbg !10721

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %test.addr, align 4, !dbg !10722, !tbaa !1971
  %15 = load %struct.timeval*, %struct.timeval** %e.addr, align 8, !dbg !10723, !tbaa !1941
  %tv_sec8 = getelementptr inbounds %struct.timeval, %struct.timeval* %15, i32 0, i32 0, !dbg !10724
  %16 = load i64, i64* %tv_sec8, align 8, !dbg !10724, !tbaa !10698
  %conv = trunc i64 %16 to i32, !dbg !10725
  %17 = load %struct.timeval*, %struct.timeval** %e.addr, align 8, !dbg !10726, !tbaa !1941
  %tv_usec9 = getelementptr inbounds %struct.timeval, %struct.timeval* %17, i32 0, i32 1, !dbg !10727
  %18 = load i64, i64* %tv_usec9, align 8, !dbg !10727, !tbaa !10705
  %conv10 = trunc i64 %18 to i32, !dbg !10728
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.335, i32 0, i32 0), i32 %14, i32 %conv, i32 %conv10), !dbg !10729
  ret void, !dbg !10730
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #4

; Function Attrs: nounwind
declare void @free(i8*) #4

declare i32 @printf(i8*, ...) #3

declare i32 @PyTraceBack_Print(%struct._object*, %struct._object*) #3

declare %struct._object* @PyException_GetTraceback(%struct._object*) #3

declare void @PyErr_Display(%struct._object*, %struct._object*, %struct._object*) #3

declare void @PyErr_GetExcInfo(%struct._object**, %struct._object**, %struct._object**) #3

declare void @PyErr_SetExcInfo(%struct._object*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal i32 @failing_converter(%struct._object* %obj, i8* %arg) #0 {
entry:
  %obj.addr = alloca %struct._object*, align 8
  %arg.addr = alloca i8*, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %obj.addr, metadata !1640, metadata !1945), !dbg !10731
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1641, metadata !1945), !dbg !10732
  %0 = load %struct._object*, %struct._object** @str1, align 8, !dbg !10733, !tbaa !1941
  store %struct._object* %0, %struct._object** @str2, align 8, !dbg !10734, !tbaa !1941
  %1 = load %struct._object*, %struct._object** @str2, align 8, !dbg !10735, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 0, !dbg !10736
  %2 = load i64, i64* %ob_refcnt, align 8, !dbg !10737, !tbaa !1961
  %inc = add i64 %2, 1, !dbg !10737
  store i64 %inc, i64* %ob_refcnt, align 8, !dbg !10737, !tbaa !1961
  ret i32 0, !dbg !10738
}

declare %struct.PyCodeObject* @PyCode_NewEmpty(i8*, i8*, i32) #3

declare %struct._object* @PyErr_NewExceptionWithDoc(i8*, i8*, %struct._object*, %struct._object*) #3

declare i32 @PyBuffer_FillInfo(%struct.bufferinfo*, %struct._object*, i8*, i64, i32, i32) #3

declare %struct._object* @PyMemoryView_FromBuffer(%struct.bufferinfo*) #3

declare %struct._ts* @PyThreadState_Get() #3

declare %struct._ts* @PyThreadState_Swap(%struct._ts*) #3

declare %struct._ts* @Py_NewInterpreter() #3

declare i32 @PyRun_SimpleStringFlags(i8*, %struct.PyCompilerFlags*) #3

declare void @Py_EndInterpreter(%struct._ts*) #3

; Function Attrs: nounwind uwtable
define internal i32 @check_time_rounding(i32 %round) #0 {
entry:
  %retval = alloca i32, align 4
  %round.addr = alloca i32, align 4
  store i32 %round, i32* %round.addr, align 4, !tbaa !1971
  call void @llvm.dbg.declare(metadata i32* %round.addr, metadata !1686, metadata !1945), !dbg !10739
  %0 = load i32, i32* %round.addr, align 4, !dbg !10740, !tbaa !1971
  %cmp = icmp ne i32 %0, 0, !dbg !10742
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10743

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %round.addr, align 4, !dbg !10744, !tbaa !1971
  %cmp1 = icmp ne i32 %1, 1, !dbg !10746
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10747

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !10748, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.350, i32 0, i32 0)), !dbg !10750
  store i32 -1, i32* %retval, !dbg !10751
  br label %return, !dbg !10751

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, !dbg !10752
  br label %return, !dbg !10752

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, !dbg !10753
  ret i32 %3, !dbg !10753
}

declare i32 @_PyTime_ObjectToTime_t(%struct._object*, i64*, i32) #3

declare %struct._object* @_PyLong_FromTime_t(i64) #3

declare i32 @_PyTime_ObjectToTimeval(%struct._object*, i64*, i64*, i32) #3

declare i32 @_PyTime_ObjectToTimespec(%struct._object*, i64*, i64*, i32) #3

; Function Attrs: nounwind uwtable
define internal void @slot_tp_del(%struct._object* %self) #0 {
entry:
  %self.addr = alloca %struct._object*, align 8
  %del = alloca %struct._object*, align 8
  %res = alloca %struct._object*, align 8
  %error_type = alloca %struct._object*, align 8
  %error_value = alloca %struct._object*, align 8
  %error_traceback = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp10 = alloca %struct._object*, align 8
  %cleanup.dest.slot = alloca i32
  %refcnt = alloca i64, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %self.addr, metadata !1711, metadata !1945), !dbg !10754
  %0 = bitcast %struct._object** %del to i8*, !dbg !10755
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10755
  call void @llvm.dbg.declare(metadata %struct._object** %del, metadata !1712, metadata !1945), !dbg !10756
  %1 = bitcast %struct._object** %res to i8*, !dbg !10755
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !10755
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1713, metadata !1945), !dbg !10757
  %2 = bitcast %struct._object** %error_type to i8*, !dbg !10758
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !10758
  call void @llvm.dbg.declare(metadata %struct._object** %error_type, metadata !1714, metadata !1945), !dbg !10759
  %3 = bitcast %struct._object** %error_value to i8*, !dbg !10758
  call void @llvm.lifetime.start(i64 8, i8* %3) #2, !dbg !10758
  call void @llvm.dbg.declare(metadata %struct._object** %error_value, metadata !1715, metadata !1945), !dbg !10760
  %4 = bitcast %struct._object** %error_traceback to i8*, !dbg !10758
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !10758
  call void @llvm.dbg.declare(metadata %struct._object** %error_traceback, metadata !1716, metadata !1945), !dbg !10761
  %5 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !10762, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0, !dbg !10763
  store i64 1, i64* %ob_refcnt, align 8, !dbg !10764, !tbaa !1961
  call void @PyErr_Fetch(%struct._object** %error_type, %struct._object** %error_value, %struct._object** %error_traceback), !dbg !10765
  %6 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !10766, !tbaa !1941
  %call = call %struct._object* @_PyObject_LookupSpecial(%struct._object* %6, %struct._Py_Identifier* @slot_tp_del.PyId___tp_del__), !dbg !10767
  store %struct._object* %call, %struct._object** %del, align 8, !dbg !10768, !tbaa !1941
  %7 = load %struct._object*, %struct._object** %del, align 8, !dbg !10769, !tbaa !1941
  %cmp = icmp ne %struct._object* %7, null, !dbg !10770
  br i1 %cmp, label %if.then, label %if.end.21, !dbg !10771

if.then:                                          ; preds = %entry
  %8 = load %struct._object*, %struct._object** %del, align 8, !dbg !10772, !tbaa !1941
  %call1 = call %struct._object* @PyEval_CallObjectWithKeywords(%struct._object* %8, %struct._object* null, %struct._object* null), !dbg !10773
  store %struct._object* %call1, %struct._object** %res, align 8, !dbg !10774, !tbaa !1941
  %9 = load %struct._object*, %struct._object** %res, align 8, !dbg !10775, !tbaa !1941
  %cmp2 = icmp eq %struct._object* %9, null, !dbg !10776
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !10777

if.then.3:                                        ; preds = %if.then
  %10 = load %struct._object*, %struct._object** %del, align 8, !dbg !10778, !tbaa !1941
  call void @PyErr_WriteUnraisable(%struct._object* %10), !dbg !10779
  br label %if.end.8, !dbg !10779

if.else:                                          ; preds = %if.then
  br label %do.body, !dbg !10780

do.body:                                          ; preds = %if.else
  %11 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10781
  call void @llvm.lifetime.start(i64 8, i8* %11) #2, !dbg !10781
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1717, metadata !1945), !dbg !10783
  %12 = load %struct._object*, %struct._object** %res, align 8, !dbg !10784, !tbaa !1941
  store %struct._object* %12, %struct._object** %_py_decref_tmp, align 8, !dbg !10783, !tbaa !1941
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10785, !tbaa !1941
  %ob_refcnt4 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 0, !dbg !10787
  %14 = load i64, i64* %ob_refcnt4, align 8, !dbg !10788, !tbaa !1961
  %dec = add i64 %14, -1, !dbg !10788
  store i64 %dec, i64* %ob_refcnt4, align 8, !dbg !10788, !tbaa !1961
  %cmp5 = icmp ne i64 %dec, 0, !dbg !10789
  br i1 %cmp5, label %if.then.6, label %if.else.7, !dbg !10790

if.then.6:                                        ; preds = %do.body
  br label %if.end, !dbg !10791

if.else.7:                                        ; preds = %do.body
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10793, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %15, i32 0, i32 1, !dbg !10795
  %16 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !10795, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %16, i32 0, i32 4, !dbg !10796
  %17 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !10796, !tbaa !1997
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !10797, !tbaa !1941
  call void %17(%struct._object* %18), !dbg !10798
  br label %if.end

if.end:                                           ; preds = %if.else.7, %if.then.6
  %19 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !10799
  call void @llvm.lifetime.end(i64 8, i8* %19) #2, !dbg !10799
  br label %do.cond, !dbg !10801

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !10802

do.end:                                           ; preds = %do.cond
  br label %if.end.8

if.end.8:                                         ; preds = %do.end, %if.then.3
  br label %do.body.9, !dbg !10804

do.body.9:                                        ; preds = %if.end.8
  %20 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !10805
  call void @llvm.lifetime.start(i64 8, i8* %20) #2, !dbg !10805
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp10, metadata !1722, metadata !1945), !dbg !10807
  %21 = load %struct._object*, %struct._object** %del, align 8, !dbg !10808, !tbaa !1941
  store %struct._object* %21, %struct._object** %_py_decref_tmp10, align 8, !dbg !10807, !tbaa !1941
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !10809, !tbaa !1941
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 0, !dbg !10811
  %23 = load i64, i64* %ob_refcnt11, align 8, !dbg !10812, !tbaa !1961
  %dec12 = add i64 %23, -1, !dbg !10812
  store i64 %dec12, i64* %ob_refcnt11, align 8, !dbg !10812, !tbaa !1961
  %cmp13 = icmp ne i64 %dec12, 0, !dbg !10813
  br i1 %cmp13, label %if.then.14, label %if.else.15, !dbg !10814

if.then.14:                                       ; preds = %do.body.9
  br label %if.end.18, !dbg !10815

if.else.15:                                       ; preds = %do.body.9
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !10817, !tbaa !1941
  %ob_type16 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1, !dbg !10819
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type16, align 8, !dbg !10819, !tbaa !1995
  %tp_dealloc17 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 4, !dbg !10820
  %26 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc17, align 8, !dbg !10820, !tbaa !1997
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp10, align 8, !dbg !10821, !tbaa !1941
  call void %26(%struct._object* %27), !dbg !10822
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.15, %if.then.14
  %28 = bitcast %struct._object** %_py_decref_tmp10 to i8*, !dbg !10823
  call void @llvm.lifetime.end(i64 8, i8* %28) #2, !dbg !10823
  br label %do.cond.19, !dbg !10825

do.cond.19:                                       ; preds = %if.end.18
  br label %do.end.20, !dbg !10826

do.end.20:                                        ; preds = %do.cond.19
  br label %if.end.21, !dbg !10828

if.end.21:                                        ; preds = %do.end.20, %entry
  %29 = load %struct._object*, %struct._object** %error_type, align 8, !dbg !10829, !tbaa !1941
  %30 = load %struct._object*, %struct._object** %error_value, align 8, !dbg !10830, !tbaa !1941
  %31 = load %struct._object*, %struct._object** %error_traceback, align 8, !dbg !10831, !tbaa !1941
  call void @PyErr_Restore(%struct._object* %29, %struct._object* %30, %struct._object* %31), !dbg !10832
  %32 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !10833, !tbaa !1941
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0, !dbg !10835
  %33 = load i64, i64* %ob_refcnt22, align 8, !dbg !10836, !tbaa !1961
  %dec23 = add i64 %33, -1, !dbg !10836
  store i64 %dec23, i64* %ob_refcnt22, align 8, !dbg !10836, !tbaa !1961
  %cmp24 = icmp eq i64 %dec23, 0, !dbg !10837
  br i1 %cmp24, label %if.then.25, label %if.end.26, !dbg !10838

if.then.25:                                       ; preds = %if.end.21
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !10839

if.end.26:                                        ; preds = %if.end.21
  %34 = bitcast i64* %refcnt to i8*, !dbg !10840
  call void @llvm.lifetime.start(i64 8, i8* %34) #2, !dbg !10840
  call void @llvm.dbg.declare(metadata i64* %refcnt, metadata !1724, metadata !1945), !dbg !10841
  %35 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !10842, !tbaa !1941
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0, !dbg !10843
  %36 = load i64, i64* %ob_refcnt27, align 8, !dbg !10843, !tbaa !1961
  store i64 %36, i64* %refcnt, align 8, !dbg !10841, !tbaa !2587
  %37 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !10844, !tbaa !1941
  %ob_refcnt28 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0, !dbg !10845
  store i64 1, i64* %ob_refcnt28, align 8, !dbg !10846, !tbaa !1961
  %38 = load i64, i64* %refcnt, align 8, !dbg !10847, !tbaa !2587
  %39 = load %struct._object*, %struct._object** %self.addr, align 8, !dbg !10848, !tbaa !1941
  %ob_refcnt29 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0, !dbg !10849
  store i64 %38, i64* %ob_refcnt29, align 8, !dbg !10850, !tbaa !1961
  %40 = bitcast i64* %refcnt to i8*, !dbg !10851
  call void @llvm.lifetime.end(i64 8, i8* %40) #2, !dbg !10851
  store i32 0, i32* %cleanup.dest.slot, !dbg !10852
  br label %cleanup, !dbg !10852

cleanup:                                          ; preds = %if.end.26, %if.then.25
  %41 = bitcast %struct._object** %error_traceback to i8*, !dbg !10853
  call void @llvm.lifetime.end(i64 8, i8* %41) #2, !dbg !10853
  %42 = bitcast %struct._object** %error_value to i8*, !dbg !10853
  call void @llvm.lifetime.end(i64 8, i8* %42) #2, !dbg !10853
  %43 = bitcast %struct._object** %error_type to i8*, !dbg !10853
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !10853
  %44 = bitcast %struct._object** %res to i8*, !dbg !10853
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !10853
  %45 = bitcast %struct._object** %del to i8*, !dbg !10853
  call void @llvm.lifetime.end(i64 8, i8* %45) #2, !dbg !10853
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !10852

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare void @PyErr_Fetch(%struct._object**, %struct._object**, %struct._object**) #3

declare %struct._object* @_PyObject_LookupSpecial(%struct._object*, %struct._Py_Identifier*) #3

declare %struct._object* @PyEval_CallObjectWithKeywords(%struct._object*, %struct._object*, %struct._object*) #3

declare void @PyErr_WriteUnraisable(%struct._object*) #3

declare void @PyErr_Restore(%struct._object*, %struct._object*, %struct._object*) #3

declare i8* @PyObject_Malloc(i64) #3

declare void @PyObject_Free(i8*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_setallocators(i32 %domain) #0 {
entry:
  %domain.addr = alloca i32, align 4
  %res = alloca %struct._object*, align 8
  %error_msg = alloca i8*, align 8
  %hook = alloca %struct.alloc_hook_t, align 8
  %alloc = alloca %struct.PyMemAllocator, align 8
  %size = alloca i64, align 8
  %size2 = alloca i64, align 8
  %ptr = alloca i8*, align 8
  %ptr2 = alloca i8*, align 8
  store i32 %domain, i32* %domain.addr, align 4, !tbaa !5543
  call void @llvm.dbg.declare(metadata i32* %domain.addr, metadata !1738, metadata !1945), !dbg !10855
  %0 = bitcast %struct._object** %res to i8*, !dbg !10856
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !10856
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1739, metadata !1945), !dbg !10857
  store %struct._object* null, %struct._object** %res, align 8, !dbg !10857, !tbaa !1941
  %1 = bitcast i8** %error_msg to i8*, !dbg !10858
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !10858
  call void @llvm.dbg.declare(metadata i8** %error_msg, metadata !1740, metadata !1945), !dbg !10859
  %2 = bitcast %struct.alloc_hook_t* %hook to i8*, !dbg !10860
  call void @llvm.lifetime.start(i64 64, i8* %2) #2, !dbg !10860
  call void @llvm.dbg.declare(metadata %struct.alloc_hook_t* %hook, metadata !1741, metadata !1945), !dbg !10861
  %3 = bitcast %struct.PyMemAllocator* %alloc to i8*, !dbg !10862
  call void @llvm.lifetime.start(i64 32, i8* %3) #2, !dbg !10862
  call void @llvm.dbg.declare(metadata %struct.PyMemAllocator* %alloc, metadata !1742, metadata !1945), !dbg !10863
  %4 = bitcast i64* %size to i8*, !dbg !10864
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !10864
  call void @llvm.dbg.declare(metadata i64* %size, metadata !1743, metadata !1945), !dbg !10865
  %5 = bitcast i64* %size2 to i8*, !dbg !10864
  call void @llvm.lifetime.start(i64 8, i8* %5) #2, !dbg !10864
  call void @llvm.dbg.declare(metadata i64* %size2, metadata !1744, metadata !1945), !dbg !10866
  %6 = bitcast i8** %ptr to i8*, !dbg !10867
  call void @llvm.lifetime.start(i64 8, i8* %6) #2, !dbg !10867
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !1745, metadata !1945), !dbg !10868
  %7 = bitcast i8** %ptr2 to i8*, !dbg !10867
  call void @llvm.lifetime.start(i64 8, i8* %7) #2, !dbg !10867
  call void @llvm.dbg.declare(metadata i8** %ptr2, metadata !1746, metadata !1945), !dbg !10869
  %malloc_size = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %hook, i32 0, i32 1, !dbg !10870
  store i64 0, i64* %malloc_size, align 8, !dbg !10871, !tbaa !10872
  %realloc_ptr = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %hook, i32 0, i32 2, !dbg !10875
  store i8* null, i8** %realloc_ptr, align 8, !dbg !10876, !tbaa !10877
  %realloc_new_size = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %hook, i32 0, i32 3, !dbg !10878
  store i64 0, i64* %realloc_new_size, align 8, !dbg !10879, !tbaa !10880
  %free_ptr = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %hook, i32 0, i32 4, !dbg !10881
  store i8* null, i8** %free_ptr, align 8, !dbg !10882, !tbaa !10883
  %8 = bitcast %struct.alloc_hook_t* %hook to i8*, !dbg !10884
  %ctx = getelementptr inbounds %struct.PyMemAllocator, %struct.PyMemAllocator* %alloc, i32 0, i32 0, !dbg !10885
  store i8* %8, i8** %ctx, align 8, !dbg !10886, !tbaa !10887
  %malloc = getelementptr inbounds %struct.PyMemAllocator, %struct.PyMemAllocator* %alloc, i32 0, i32 1, !dbg !10888
  store i8* (i8*, i64)* @hook_malloc, i8* (i8*, i64)** %malloc, align 8, !dbg !10889, !tbaa !10890
  %realloc = getelementptr inbounds %struct.PyMemAllocator, %struct.PyMemAllocator* %alloc, i32 0, i32 2, !dbg !10891
  store i8* (i8*, i8*, i64)* @hook_realloc, i8* (i8*, i8*, i64)** %realloc, align 8, !dbg !10892, !tbaa !10893
  %free = getelementptr inbounds %struct.PyMemAllocator, %struct.PyMemAllocator* %alloc, i32 0, i32 3, !dbg !10894
  store void (i8*, i8*)* @hook_free, void (i8*, i8*)** %free, align 8, !dbg !10895, !tbaa !10896
  %9 = load i32, i32* %domain.addr, align 4, !dbg !10897, !tbaa !5543
  %alloc1 = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %hook, i32 0, i32 0, !dbg !10898
  call void @PyMem_GetAllocator(i32 %9, %struct.PyMemAllocator* %alloc1), !dbg !10899
  %10 = load i32, i32* %domain.addr, align 4, !dbg !10900, !tbaa !5543
  call void @PyMem_SetAllocator(i32 %10, %struct.PyMemAllocator* %alloc), !dbg !10901
  store i64 42, i64* %size, align 8, !dbg !10902, !tbaa !2587
  %11 = load i32, i32* %domain.addr, align 4, !dbg !10903, !tbaa !5543
  switch i32 %11, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.2
    i32 2, label %sw.bb.4
  ], !dbg !10904

sw.bb:                                            ; preds = %entry
  %12 = load i64, i64* %size, align 8, !dbg !10905, !tbaa !2587
  %call = call i8* @PyMem_RawMalloc(i64 %12), !dbg !10907
  store i8* %call, i8** %ptr, align 8, !dbg !10908, !tbaa !1941
  br label %sw.epilog, !dbg !10909

sw.bb.2:                                          ; preds = %entry
  %13 = load i64, i64* %size, align 8, !dbg !10910, !tbaa !2587
  %call3 = call i8* @PyMem_Malloc(i64 %13), !dbg !10911
  store i8* %call3, i8** %ptr, align 8, !dbg !10912, !tbaa !1941
  br label %sw.epilog, !dbg !10913

sw.bb.4:                                          ; preds = %entry
  %14 = load i64, i64* %size, align 8, !dbg !10914, !tbaa !2587
  %call5 = call i8* @PyObject_Malloc(i64 %14), !dbg !10915
  store i8* %call5, i8** %ptr, align 8, !dbg !10916, !tbaa !1941
  br label %sw.epilog, !dbg !10917

sw.default:                                       ; preds = %entry
  store i8* null, i8** %ptr, align 8, !dbg !10918, !tbaa !1941
  br label %sw.epilog, !dbg !10919

sw.epilog:                                        ; preds = %sw.default, %sw.bb.4, %sw.bb.2, %sw.bb
  %15 = load i8*, i8** %ptr, align 8, !dbg !10920, !tbaa !1941
  %cmp = icmp eq i8* %15, null, !dbg !10922
  br i1 %cmp, label %if.then, label %if.end, !dbg !10923

if.then:                                          ; preds = %sw.epilog
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.359, i32 0, i32 0), i8** %error_msg, align 8, !dbg !10924, !tbaa !1941
  br label %fail, !dbg !10926

if.end:                                           ; preds = %sw.epilog
  %malloc_size6 = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %hook, i32 0, i32 1, !dbg !10927
  %16 = load i64, i64* %malloc_size6, align 8, !dbg !10927, !tbaa !10872
  %17 = load i64, i64* %size, align 8, !dbg !10929, !tbaa !2587
  %cmp7 = icmp ne i64 %16, %17, !dbg !10930
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !10931

if.then.8:                                        ; preds = %if.end
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.360, i32 0, i32 0), i8** %error_msg, align 8, !dbg !10932, !tbaa !1941
  br label %fail, !dbg !10934

if.end.9:                                         ; preds = %if.end
  store i64 200, i64* %size2, align 8, !dbg !10935, !tbaa !2587
  %18 = load i32, i32* %domain.addr, align 4, !dbg !10936, !tbaa !5543
  switch i32 %18, label %sw.default.16 [
    i32 0, label %sw.bb.10
    i32 1, label %sw.bb.12
    i32 2, label %sw.bb.14
  ], !dbg !10937

sw.bb.10:                                         ; preds = %if.end.9
  %19 = load i8*, i8** %ptr, align 8, !dbg !10938, !tbaa !1941
  %20 = load i64, i64* %size2, align 8, !dbg !10940, !tbaa !2587
  %call11 = call i8* @PyMem_RawRealloc(i8* %19, i64 %20), !dbg !10941
  store i8* %call11, i8** %ptr2, align 8, !dbg !10942, !tbaa !1941
  br label %sw.epilog.17, !dbg !10943

sw.bb.12:                                         ; preds = %if.end.9
  %21 = load i8*, i8** %ptr, align 8, !dbg !10944, !tbaa !1941
  %22 = load i64, i64* %size2, align 8, !dbg !10945, !tbaa !2587
  %call13 = call i8* @PyMem_Realloc(i8* %21, i64 %22), !dbg !10946
  store i8* %call13, i8** %ptr2, align 8, !dbg !10947, !tbaa !1941
  br label %sw.epilog.17, !dbg !10948

sw.bb.14:                                         ; preds = %if.end.9
  %23 = load i8*, i8** %ptr, align 8, !dbg !10949, !tbaa !1941
  %24 = load i64, i64* %size2, align 8, !dbg !10950, !tbaa !2587
  %call15 = call i8* @PyObject_Realloc(i8* %23, i64 %24), !dbg !10951
  store i8* %call15, i8** %ptr2, align 8, !dbg !10952, !tbaa !1941
  br label %sw.epilog.17, !dbg !10953

sw.default.16:                                    ; preds = %if.end.9
  store i8* null, i8** %ptr2, align 8, !dbg !10954, !tbaa !1941
  br label %sw.epilog.17, !dbg !10955

sw.epilog.17:                                     ; preds = %sw.default.16, %sw.bb.14, %sw.bb.12, %sw.bb.10
  %25 = load i8*, i8** %ptr2, align 8, !dbg !10956, !tbaa !1941
  %cmp18 = icmp eq i8* %25, null, !dbg !10958
  br i1 %cmp18, label %if.then.19, label %if.end.20, !dbg !10959

if.then.19:                                       ; preds = %sw.epilog.17
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.361, i32 0, i32 0), i8** %error_msg, align 8, !dbg !10960, !tbaa !1941
  br label %fail, !dbg !10962

if.end.20:                                        ; preds = %sw.epilog.17
  %realloc_ptr21 = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %hook, i32 0, i32 2, !dbg !10963
  %26 = load i8*, i8** %realloc_ptr21, align 8, !dbg !10963, !tbaa !10877
  %27 = load i8*, i8** %ptr, align 8, !dbg !10965, !tbaa !1941
  %cmp22 = icmp ne i8* %26, %27, !dbg !10966
  br i1 %cmp22, label %if.then.25, label %lor.lhs.false, !dbg !10967

lor.lhs.false:                                    ; preds = %if.end.20
  %realloc_new_size23 = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %hook, i32 0, i32 3, !dbg !10968
  %28 = load i64, i64* %realloc_new_size23, align 8, !dbg !10968, !tbaa !10880
  %29 = load i64, i64* %size2, align 8, !dbg !10970, !tbaa !2587
  %cmp24 = icmp ne i64 %28, %29, !dbg !10971
  br i1 %cmp24, label %if.then.25, label %if.end.26, !dbg !10972

if.then.25:                                       ; preds = %lor.lhs.false, %if.end.20
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.362, i32 0, i32 0), i8** %error_msg, align 8, !dbg !10973, !tbaa !1941
  br label %fail, !dbg !10975

if.end.26:                                        ; preds = %lor.lhs.false
  %30 = load i32, i32* %domain.addr, align 4, !dbg !10976, !tbaa !5543
  switch i32 %30, label %sw.epilog.30 [
    i32 0, label %sw.bb.27
    i32 1, label %sw.bb.28
    i32 2, label %sw.bb.29
  ], !dbg !10977

sw.bb.27:                                         ; preds = %if.end.26
  %31 = load i8*, i8** %ptr2, align 8, !dbg !10978, !tbaa !1941
  call void @PyMem_RawFree(i8* %31), !dbg !10980
  br label %sw.epilog.30, !dbg !10981

sw.bb.28:                                         ; preds = %if.end.26
  %32 = load i8*, i8** %ptr2, align 8, !dbg !10982, !tbaa !1941
  call void @PyMem_Free(i8* %32), !dbg !10983
  br label %sw.epilog.30, !dbg !10984

sw.bb.29:                                         ; preds = %if.end.26
  %33 = load i8*, i8** %ptr2, align 8, !dbg !10985, !tbaa !1941
  call void @PyObject_Free(i8* %33), !dbg !10986
  br label %sw.epilog.30, !dbg !10987

sw.epilog.30:                                     ; preds = %if.end.26, %sw.bb.29, %sw.bb.28, %sw.bb.27
  %free_ptr31 = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %hook, i32 0, i32 4, !dbg !10988
  %34 = load i8*, i8** %free_ptr31, align 8, !dbg !10988, !tbaa !10883
  %35 = load i8*, i8** %ptr2, align 8, !dbg !10990, !tbaa !1941
  %cmp32 = icmp ne i8* %34, %35, !dbg !10991
  br i1 %cmp32, label %if.then.33, label %if.end.34, !dbg !10992

if.then.33:                                       ; preds = %sw.epilog.30
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.363, i32 0, i32 0), i8** %error_msg, align 8, !dbg !10993, !tbaa !1941
  br label %fail, !dbg !10995

if.end.34:                                        ; preds = %sw.epilog.30
  %36 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10996, !tbaa !1961
  %inc = add i64 %36, 1, !dbg !10996
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NoneStruct, i32 0, i32 0), align 8, !dbg !10996, !tbaa !1961
  store %struct._object* @_Py_NoneStruct, %struct._object** %res, align 8, !dbg !10997, !tbaa !1941
  br label %finally, !dbg !10998

fail:                                             ; preds = %if.then.33, %if.then.25, %if.then.19, %if.then.8, %if.then
  %37 = load %struct._object*, %struct._object** @PyExc_RuntimeError, align 8, !dbg !10999, !tbaa !1941
  %38 = load i8*, i8** %error_msg, align 8, !dbg !11000, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %37, i8* %38), !dbg !11001
  br label %finally, !dbg !11001

finally:                                          ; preds = %fail, %if.end.34
  %39 = load i32, i32* %domain.addr, align 4, !dbg !11002, !tbaa !5543
  %alloc35 = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %hook, i32 0, i32 0, !dbg !11003
  call void @PyMem_SetAllocator(i32 %39, %struct.PyMemAllocator* %alloc35), !dbg !11004
  %40 = load %struct._object*, %struct._object** %res, align 8, !dbg !11005, !tbaa !1941
  %41 = bitcast i8** %ptr2 to i8*, !dbg !11006
  call void @llvm.lifetime.end(i64 8, i8* %41) #2, !dbg !11006
  %42 = bitcast i8** %ptr to i8*, !dbg !11006
  call void @llvm.lifetime.end(i64 8, i8* %42) #2, !dbg !11006
  %43 = bitcast i64* %size2 to i8*, !dbg !11006
  call void @llvm.lifetime.end(i64 8, i8* %43) #2, !dbg !11006
  %44 = bitcast i64* %size to i8*, !dbg !11006
  call void @llvm.lifetime.end(i64 8, i8* %44) #2, !dbg !11006
  %45 = bitcast %struct.PyMemAllocator* %alloc to i8*, !dbg !11006
  call void @llvm.lifetime.end(i64 32, i8* %45) #2, !dbg !11006
  %46 = bitcast %struct.alloc_hook_t* %hook to i8*, !dbg !11006
  call void @llvm.lifetime.end(i64 64, i8* %46) #2, !dbg !11006
  %47 = bitcast i8** %error_msg to i8*, !dbg !11006
  call void @llvm.lifetime.end(i64 8, i8* %47) #2, !dbg !11006
  %48 = bitcast %struct._object** %res to i8*, !dbg !11006
  call void @llvm.lifetime.end(i64 8, i8* %48) #2, !dbg !11006
  ret %struct._object* %40, !dbg !11007
}

; Function Attrs: nounwind uwtable
define internal i8* @hook_malloc(i8* %ctx, i64 %size) #0 {
entry:
  %ctx.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %hook = alloca %struct.alloc_hook_t*, align 8
  store i8* %ctx, i8** %ctx.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i8** %ctx.addr, metadata !1749, metadata !1945), !dbg !11008
  store i64 %size, i64* %size.addr, align 8, !tbaa !2587
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !1750, metadata !1945), !dbg !11009
  %0 = bitcast %struct.alloc_hook_t** %hook to i8*, !dbg !11010
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11010
  call void @llvm.dbg.declare(metadata %struct.alloc_hook_t** %hook, metadata !1751, metadata !1945), !dbg !11011
  %1 = load i8*, i8** %ctx.addr, align 8, !dbg !11012, !tbaa !1941
  %2 = bitcast i8* %1 to %struct.alloc_hook_t*, !dbg !11013
  store %struct.alloc_hook_t* %2, %struct.alloc_hook_t** %hook, align 8, !dbg !11011, !tbaa !1941
  %3 = load i64, i64* %size.addr, align 8, !dbg !11014, !tbaa !2587
  %4 = load %struct.alloc_hook_t*, %struct.alloc_hook_t** %hook, align 8, !dbg !11015, !tbaa !1941
  %malloc_size = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %4, i32 0, i32 1, !dbg !11016
  store i64 %3, i64* %malloc_size, align 8, !dbg !11017, !tbaa !10872
  %5 = load %struct.alloc_hook_t*, %struct.alloc_hook_t** %hook, align 8, !dbg !11018, !tbaa !1941
  %alloc = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %5, i32 0, i32 0, !dbg !11019
  %malloc = getelementptr inbounds %struct.PyMemAllocator, %struct.PyMemAllocator* %alloc, i32 0, i32 1, !dbg !11020
  %6 = load i8* (i8*, i64)*, i8* (i8*, i64)** %malloc, align 8, !dbg !11020, !tbaa !11021
  %7 = load %struct.alloc_hook_t*, %struct.alloc_hook_t** %hook, align 8, !dbg !11022, !tbaa !1941
  %alloc1 = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %7, i32 0, i32 0, !dbg !11023
  %ctx2 = getelementptr inbounds %struct.PyMemAllocator, %struct.PyMemAllocator* %alloc1, i32 0, i32 0, !dbg !11024
  %8 = load i8*, i8** %ctx2, align 8, !dbg !11024, !tbaa !11025
  %9 = load i64, i64* %size.addr, align 8, !dbg !11026, !tbaa !2587
  %call = call i8* %6(i8* %8, i64 %9), !dbg !11018
  %10 = bitcast %struct.alloc_hook_t** %hook to i8*, !dbg !11027
  call void @llvm.lifetime.end(i64 8, i8* %10) #2, !dbg !11027
  ret i8* %call, !dbg !11028
}

; Function Attrs: nounwind uwtable
define internal i8* @hook_realloc(i8* %ctx, i8* %ptr, i64 %new_size) #0 {
entry:
  %ctx.addr = alloca i8*, align 8
  %ptr.addr = alloca i8*, align 8
  %new_size.addr = alloca i64, align 8
  %hook = alloca %struct.alloc_hook_t*, align 8
  store i8* %ctx, i8** %ctx.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i8** %ctx.addr, metadata !1754, metadata !1945), !dbg !11029
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1755, metadata !1945), !dbg !11030
  store i64 %new_size, i64* %new_size.addr, align 8, !tbaa !2587
  call void @llvm.dbg.declare(metadata i64* %new_size.addr, metadata !1756, metadata !1945), !dbg !11031
  %0 = bitcast %struct.alloc_hook_t** %hook to i8*, !dbg !11032
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11032
  call void @llvm.dbg.declare(metadata %struct.alloc_hook_t** %hook, metadata !1757, metadata !1945), !dbg !11033
  %1 = load i8*, i8** %ctx.addr, align 8, !dbg !11034, !tbaa !1941
  %2 = bitcast i8* %1 to %struct.alloc_hook_t*, !dbg !11035
  store %struct.alloc_hook_t* %2, %struct.alloc_hook_t** %hook, align 8, !dbg !11033, !tbaa !1941
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !11036, !tbaa !1941
  %4 = load %struct.alloc_hook_t*, %struct.alloc_hook_t** %hook, align 8, !dbg !11037, !tbaa !1941
  %realloc_ptr = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %4, i32 0, i32 2, !dbg !11038
  store i8* %3, i8** %realloc_ptr, align 8, !dbg !11039, !tbaa !10877
  %5 = load i64, i64* %new_size.addr, align 8, !dbg !11040, !tbaa !2587
  %6 = load %struct.alloc_hook_t*, %struct.alloc_hook_t** %hook, align 8, !dbg !11041, !tbaa !1941
  %realloc_new_size = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %6, i32 0, i32 3, !dbg !11042
  store i64 %5, i64* %realloc_new_size, align 8, !dbg !11043, !tbaa !10880
  %7 = load %struct.alloc_hook_t*, %struct.alloc_hook_t** %hook, align 8, !dbg !11044, !tbaa !1941
  %alloc = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %7, i32 0, i32 0, !dbg !11045
  %realloc = getelementptr inbounds %struct.PyMemAllocator, %struct.PyMemAllocator* %alloc, i32 0, i32 2, !dbg !11046
  %8 = load i8* (i8*, i8*, i64)*, i8* (i8*, i8*, i64)** %realloc, align 8, !dbg !11046, !tbaa !11047
  %9 = load %struct.alloc_hook_t*, %struct.alloc_hook_t** %hook, align 8, !dbg !11048, !tbaa !1941
  %alloc1 = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %9, i32 0, i32 0, !dbg !11049
  %ctx2 = getelementptr inbounds %struct.PyMemAllocator, %struct.PyMemAllocator* %alloc1, i32 0, i32 0, !dbg !11050
  %10 = load i8*, i8** %ctx2, align 8, !dbg !11050, !tbaa !11025
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !11051, !tbaa !1941
  %12 = load i64, i64* %new_size.addr, align 8, !dbg !11052, !tbaa !2587
  %call = call i8* %8(i8* %10, i8* %11, i64 %12), !dbg !11044
  %13 = bitcast %struct.alloc_hook_t** %hook to i8*, !dbg !11053
  call void @llvm.lifetime.end(i64 8, i8* %13) #2, !dbg !11053
  ret i8* %call, !dbg !11054
}

; Function Attrs: nounwind uwtable
define internal void @hook_free(i8* %ctx, i8* %ptr) #0 {
entry:
  %ctx.addr = alloca i8*, align 8
  %ptr.addr = alloca i8*, align 8
  %hook = alloca %struct.alloc_hook_t*, align 8
  store i8* %ctx, i8** %ctx.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i8** %ctx.addr, metadata !1760, metadata !1945), !dbg !11055
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !1761, metadata !1945), !dbg !11056
  %0 = bitcast %struct.alloc_hook_t** %hook to i8*, !dbg !11057
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11057
  call void @llvm.dbg.declare(metadata %struct.alloc_hook_t** %hook, metadata !1762, metadata !1945), !dbg !11058
  %1 = load i8*, i8** %ctx.addr, align 8, !dbg !11059, !tbaa !1941
  %2 = bitcast i8* %1 to %struct.alloc_hook_t*, !dbg !11060
  store %struct.alloc_hook_t* %2, %struct.alloc_hook_t** %hook, align 8, !dbg !11058, !tbaa !1941
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !11061, !tbaa !1941
  %4 = load %struct.alloc_hook_t*, %struct.alloc_hook_t** %hook, align 8, !dbg !11062, !tbaa !1941
  %free_ptr = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %4, i32 0, i32 4, !dbg !11063
  store i8* %3, i8** %free_ptr, align 8, !dbg !11064, !tbaa !10883
  %5 = load %struct.alloc_hook_t*, %struct.alloc_hook_t** %hook, align 8, !dbg !11065, !tbaa !1941
  %alloc = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %5, i32 0, i32 0, !dbg !11066
  %free = getelementptr inbounds %struct.PyMemAllocator, %struct.PyMemAllocator* %alloc, i32 0, i32 3, !dbg !11067
  %6 = load void (i8*, i8*)*, void (i8*, i8*)** %free, align 8, !dbg !11067, !tbaa !11068
  %7 = load %struct.alloc_hook_t*, %struct.alloc_hook_t** %hook, align 8, !dbg !11069, !tbaa !1941
  %alloc1 = getelementptr inbounds %struct.alloc_hook_t, %struct.alloc_hook_t* %7, i32 0, i32 0, !dbg !11070
  %ctx2 = getelementptr inbounds %struct.PyMemAllocator, %struct.PyMemAllocator* %alloc1, i32 0, i32 0, !dbg !11071
  %8 = load i8*, i8** %ctx2, align 8, !dbg !11071, !tbaa !11025
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !11072, !tbaa !1941
  call void %6(i8* %8, i8* %9), !dbg !11065
  %10 = bitcast %struct.alloc_hook_t** %hook to i8*, !dbg !11073
  call void @llvm.lifetime.end(i64 8, i8* %10) #2, !dbg !11073
  ret void, !dbg !11073
}

declare void @PyMem_GetAllocator(i32, %struct.PyMemAllocator*) #3

declare void @PyMem_SetAllocator(i32, %struct.PyMemAllocator*) #3

declare i8* @PyMem_RawMalloc(i64) #3

declare i8* @PyMem_RawRealloc(i8*, i64) #3

declare i8* @PyMem_Realloc(i8*, i64) #3

declare i8* @PyObject_Realloc(i8*, i64) #3

declare void @PyMem_RawFree(i8*) #3

; Function Attrs: nounwind uwtable
define internal void @temporary_c_thread(i8* %data) #0 {
entry:
  %data.addr = alloca i8*, align 8
  %test_c_thread = alloca %struct.test_c_thread_t*, align 8
  %state = alloca i32, align 4
  %res = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp14 = alloca %struct._object*, align 8
  store i8* %data, i8** %data.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !1794, metadata !1945), !dbg !11074
  %0 = bitcast %struct.test_c_thread_t** %test_c_thread to i8*, !dbg !11075
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11075
  call void @llvm.dbg.declare(metadata %struct.test_c_thread_t** %test_c_thread, metadata !1795, metadata !1945), !dbg !11076
  %1 = load i8*, i8** %data.addr, align 8, !dbg !11077, !tbaa !1941
  %2 = bitcast i8* %1 to %struct.test_c_thread_t*, !dbg !11077
  store %struct.test_c_thread_t* %2, %struct.test_c_thread_t** %test_c_thread, align 8, !dbg !11076, !tbaa !1941
  %3 = bitcast i32* %state to i8*, !dbg !11078
  call void @llvm.lifetime.start(i64 4, i8* %3) #2, !dbg !11078
  call void @llvm.dbg.declare(metadata i32* %state, metadata !1797, metadata !1945), !dbg !11079
  %4 = bitcast %struct._object** %res to i8*, !dbg !11080
  call void @llvm.lifetime.start(i64 8, i8* %4) #2, !dbg !11080
  call void @llvm.dbg.declare(metadata %struct._object** %res, metadata !1798, metadata !1945), !dbg !11081
  %5 = load %struct.test_c_thread_t*, %struct.test_c_thread_t** %test_c_thread, align 8, !dbg !11082, !tbaa !1941
  %start_event = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %5, i32 0, i32 0, !dbg !11083
  %6 = load i8*, i8** %start_event, align 8, !dbg !11083, !tbaa !5192
  call void @PyThread_release_lock(i8* %6), !dbg !11084
  %call = call i32 @PyGILState_Ensure(), !dbg !11085
  store i32 %call, i32* %state, align 4, !dbg !11086, !tbaa !5543
  %7 = load %struct.test_c_thread_t*, %struct.test_c_thread_t** %test_c_thread, align 8, !dbg !11087, !tbaa !1941
  %callback = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %7, i32 0, i32 2, !dbg !11088
  %8 = load %struct._object*, %struct._object** %callback, align 8, !dbg !11088, !tbaa !5226
  %call1 = call %struct._object* (%struct._object*, i8*, ...) @_PyObject_CallFunction_SizeT(%struct._object* %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.334, i32 0, i32 0), i8* null), !dbg !11089
  store %struct._object* %call1, %struct._object** %res, align 8, !dbg !11090, !tbaa !1941
  br label %do.body, !dbg !11091

do.body:                                          ; preds = %entry
  %9 = bitcast %struct._object** %_py_tmp to i8*, !dbg !11092
  call void @llvm.lifetime.start(i64 8, i8* %9) #2, !dbg !11092
  call void @llvm.dbg.declare(metadata %struct._object** %_py_tmp, metadata !1799, metadata !1945), !dbg !11094
  %10 = load %struct.test_c_thread_t*, %struct.test_c_thread_t** %test_c_thread, align 8, !dbg !11095, !tbaa !1941
  %callback2 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %10, i32 0, i32 2, !dbg !11096
  %11 = load %struct._object*, %struct._object** %callback2, align 8, !dbg !11096, !tbaa !5226
  store %struct._object* %11, %struct._object** %_py_tmp, align 8, !dbg !11094, !tbaa !1941
  %12 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !11097, !tbaa !1941
  %cmp = icmp ne %struct._object* %12, null, !dbg !11098
  br i1 %cmp, label %if.then, label %if.end.7, !dbg !11099

if.then:                                          ; preds = %do.body
  %13 = load %struct.test_c_thread_t*, %struct.test_c_thread_t** %test_c_thread, align 8, !dbg !11100, !tbaa !1941
  %callback3 = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %13, i32 0, i32 2, !dbg !11102
  store %struct._object* null, %struct._object** %callback3, align 8, !dbg !11103, !tbaa !5226
  br label %do.body.4, !dbg !11104

do.body.4:                                        ; preds = %if.then
  %14 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11105
  call void @llvm.lifetime.start(i64 8, i8* %14) #2, !dbg !11105
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1801, metadata !1945), !dbg !11107
  %15 = load %struct._object*, %struct._object** %_py_tmp, align 8, !dbg !11108, !tbaa !1941
  store %struct._object* %15, %struct._object** %_py_decref_tmp, align 8, !dbg !11107, !tbaa !1941
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11109, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0, !dbg !11111
  %17 = load i64, i64* %ob_refcnt, align 8, !dbg !11112, !tbaa !1961
  %dec = add i64 %17, -1, !dbg !11112
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11112, !tbaa !1961
  %cmp5 = icmp ne i64 %dec, 0, !dbg !11113
  br i1 %cmp5, label %if.then.6, label %if.else, !dbg !11114

if.then.6:                                        ; preds = %do.body.4
  br label %if.end, !dbg !11115

if.else:                                          ; preds = %do.body.4
  %18 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11117, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1, !dbg !11119
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11119, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 4, !dbg !11120
  %20 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11120, !tbaa !1997
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11121, !tbaa !1941
  call void %20(%struct._object* %21), !dbg !11122
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.6
  %22 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11123
  call void @llvm.lifetime.end(i64 8, i8* %22) #2, !dbg !11123
  br label %do.cond, !dbg !11125

do.cond:                                          ; preds = %if.end
  br label %do.end, !dbg !11126

do.end:                                           ; preds = %do.cond
  br label %if.end.7, !dbg !11128

if.end.7:                                         ; preds = %do.end, %do.body
  %23 = bitcast %struct._object** %_py_tmp to i8*, !dbg !11130
  call void @llvm.lifetime.end(i64 8, i8* %23) #2, !dbg !11130
  br label %do.cond.8, !dbg !11133

do.cond.8:                                        ; preds = %if.end.7
  br label %do.end.9, !dbg !11134

do.end.9:                                         ; preds = %do.cond.8
  %24 = load %struct._object*, %struct._object** %res, align 8, !dbg !11136, !tbaa !1941
  %cmp10 = icmp eq %struct._object* %24, null, !dbg !11137
  br i1 %cmp10, label %if.then.11, label %if.else.12, !dbg !11138

if.then.11:                                       ; preds = %do.end.9
  call void @PyErr_Print(), !dbg !11139
  br label %if.end.25, !dbg !11141

if.else.12:                                       ; preds = %do.end.9
  br label %do.body.13, !dbg !11142

do.body.13:                                       ; preds = %if.else.12
  %25 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !11143
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !11143
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp14, metadata !1805, metadata !1945), !dbg !11145
  %26 = load %struct._object*, %struct._object** %res, align 8, !dbg !11146, !tbaa !1941
  store %struct._object* %26, %struct._object** %_py_decref_tmp14, align 8, !dbg !11145, !tbaa !1941
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !11147, !tbaa !1941
  %ob_refcnt15 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 0, !dbg !11149
  %28 = load i64, i64* %ob_refcnt15, align 8, !dbg !11150, !tbaa !1961
  %dec16 = add i64 %28, -1, !dbg !11150
  store i64 %dec16, i64* %ob_refcnt15, align 8, !dbg !11150, !tbaa !1961
  %cmp17 = icmp ne i64 %dec16, 0, !dbg !11151
  br i1 %cmp17, label %if.then.18, label %if.else.19, !dbg !11152

if.then.18:                                       ; preds = %do.body.13
  br label %if.end.22, !dbg !11153

if.else.19:                                       ; preds = %do.body.13
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !11155, !tbaa !1941
  %ob_type20 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1, !dbg !11157
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type20, align 8, !dbg !11157, !tbaa !1995
  %tp_dealloc21 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %30, i32 0, i32 4, !dbg !11158
  %31 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc21, align 8, !dbg !11158, !tbaa !1997
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp14, align 8, !dbg !11159, !tbaa !1941
  call void %31(%struct._object* %32), !dbg !11160
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.19, %if.then.18
  %33 = bitcast %struct._object** %_py_decref_tmp14 to i8*, !dbg !11161
  call void @llvm.lifetime.end(i64 8, i8* %33) #2, !dbg !11161
  br label %do.cond.23, !dbg !11163

do.cond.23:                                       ; preds = %if.end.22
  br label %do.end.24, !dbg !11164

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25

if.end.25:                                        ; preds = %do.end.24, %if.then.11
  %34 = load i32, i32* %state, align 4, !dbg !11166, !tbaa !5543
  call void @PyGILState_Release(i32 %34), !dbg !11167
  %35 = load %struct.test_c_thread_t*, %struct.test_c_thread_t** %test_c_thread, align 8, !dbg !11168, !tbaa !1941
  %exit_event = getelementptr inbounds %struct.test_c_thread_t, %struct.test_c_thread_t* %35, i32 0, i32 1, !dbg !11169
  %36 = load i8*, i8** %exit_event, align 8, !dbg !11169, !tbaa !5179
  call void @PyThread_release_lock(i8* %36), !dbg !11170
  call void @PyThread_exit_thread(), !dbg !11171
  %37 = bitcast %struct._object** %res to i8*, !dbg !11172
  call void @llvm.lifetime.end(i64 8, i8* %37) #2, !dbg !11172
  %38 = bitcast i32* %state to i8*, !dbg !11172
  call void @llvm.lifetime.end(i64 4, i8* %38) #2, !dbg !11172
  %39 = bitcast %struct.test_c_thread_t** %test_c_thread to i8*, !dbg !11172
  call void @llvm.lifetime.end(i64 8, i8* %39) #2, !dbg !11172
  ret void, !dbg !11172
}

declare void @PyErr_Print() #3

declare void @PyThread_exit_thread() #3

declare %struct._object* @PyObject_GenericGetAttr(%struct._object*, %struct._object*) #3

declare %struct._object* @PyType_GenericNew(%struct._typeobject*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal void @test_structmembers_free(%struct._object* %ob) #0 {
entry:
  %ob.addr = alloca %struct._object*, align 8
  store %struct._object* %ob, %struct._object** %ob.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %ob.addr, metadata !1811, metadata !1945), !dbg !11173
  %0 = load %struct._object*, %struct._object** %ob.addr, align 8, !dbg !11174, !tbaa !1941
  %1 = bitcast %struct._object* %0 to i8*, !dbg !11174
  call void @PyObject_Free(i8* %1), !dbg !11175
  ret void, !dbg !11176
}

declare i32 @PyObject_GenericSetAttr(%struct._object*, %struct._object*, %struct._object*) #3

; Function Attrs: nounwind uwtable
define internal %struct._object* @test_structmembers_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwargs) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwargs.addr = alloca %struct._object*, align 8
  %ob = alloca %struct.test_structmembers*, align 8
  %s = alloca i8*, align 8
  %string_len = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp26 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._typeobject** %type.addr, metadata !1816, metadata !1945), !dbg !11177
  store %struct._object* %args, %struct._object** %args.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %args.addr, metadata !1817, metadata !1945), !dbg !11178
  store %struct._object* %kwargs, %struct._object** %kwargs.addr, align 8, !tbaa !1941
  call void @llvm.dbg.declare(metadata %struct._object** %kwargs.addr, metadata !1818, metadata !1945), !dbg !11179
  %0 = bitcast %struct.test_structmembers** %ob to i8*, !dbg !11180
  call void @llvm.lifetime.start(i64 8, i8* %0) #2, !dbg !11180
  call void @llvm.dbg.declare(metadata %struct.test_structmembers** %ob, metadata !1819, metadata !1945), !dbg !11181
  %1 = bitcast i8** %s to i8*, !dbg !11182
  call void @llvm.lifetime.start(i64 8, i8* %1) #2, !dbg !11182
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1820, metadata !1945), !dbg !11183
  store i8* null, i8** %s, align 8, !dbg !11183, !tbaa !1941
  %2 = bitcast i64* %string_len to i8*, !dbg !11184
  call void @llvm.lifetime.start(i64 8, i8* %2) #2, !dbg !11184
  call void @llvm.dbg.declare(metadata i64* %string_len, metadata !1821, metadata !1945), !dbg !11185
  store i64 0, i64* %string_len, align 8, !dbg !11185, !tbaa !2587
  %3 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8, !dbg !11186, !tbaa !1941
  %call = call %struct._object* @_PyObject_New(%struct._typeobject* %3), !dbg !11187
  %4 = bitcast %struct._object* %call to %struct.test_structmembers*, !dbg !11188
  store %struct.test_structmembers* %4, %struct.test_structmembers** %ob, align 8, !dbg !11189, !tbaa !1941
  %5 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11190, !tbaa !1941
  %cmp = icmp eq %struct.test_structmembers* %5, null, !dbg !11192
  br i1 %cmp, label %if.then, label %if.end, !dbg !11193

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval, !dbg !11194
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11194

if.end:                                           ; preds = %entry
  %6 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11195, !tbaa !1941
  %structmembers = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %6, i32 0, i32 1, !dbg !11196
  %7 = bitcast %struct.all_structmembers* %structmembers to i8*, !dbg !11197
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 80, i32 8, i1 false), !dbg !11197
  %8 = load %struct._object*, %struct._object** %args.addr, align 8, !dbg !11198, !tbaa !1941
  %9 = load %struct._object*, %struct._object** %kwargs.addr, align 8, !dbg !11199, !tbaa !1941
  %10 = load i8*, i8** @test_structmembers_new.fmt, align 8, !dbg !11200, !tbaa !1941
  %11 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11201, !tbaa !1941
  %structmembers1 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %11, i32 0, i32 1, !dbg !11202
  %bool_member = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers1, i32 0, i32 0, !dbg !11203
  %12 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11204, !tbaa !1941
  %structmembers2 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %12, i32 0, i32 1, !dbg !11205
  %byte_member = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers2, i32 0, i32 1, !dbg !11206
  %13 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11207, !tbaa !1941
  %structmembers3 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %13, i32 0, i32 1, !dbg !11208
  %ubyte_member = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers3, i32 0, i32 2, !dbg !11209
  %14 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11210, !tbaa !1941
  %structmembers4 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %14, i32 0, i32 1, !dbg !11211
  %short_member = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers4, i32 0, i32 3, !dbg !11212
  %15 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11213, !tbaa !1941
  %structmembers5 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %15, i32 0, i32 1, !dbg !11214
  %ushort_member = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers5, i32 0, i32 4, !dbg !11215
  %16 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11216, !tbaa !1941
  %structmembers6 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %16, i32 0, i32 1, !dbg !11217
  %int_member = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers6, i32 0, i32 5, !dbg !11218
  %17 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11219, !tbaa !1941
  %structmembers7 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %17, i32 0, i32 1, !dbg !11220
  %uint_member = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers7, i32 0, i32 6, !dbg !11221
  %18 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11222, !tbaa !1941
  %structmembers8 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %18, i32 0, i32 1, !dbg !11223
  %long_member = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers8, i32 0, i32 7, !dbg !11224
  %19 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11225, !tbaa !1941
  %structmembers9 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %19, i32 0, i32 1, !dbg !11226
  %ulong_member = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers9, i32 0, i32 8, !dbg !11227
  %20 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11228, !tbaa !1941
  %structmembers10 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %20, i32 0, i32 1, !dbg !11229
  %pyssizet_member = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers10, i32 0, i32 9, !dbg !11230
  %21 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11231, !tbaa !1941
  %structmembers11 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %21, i32 0, i32 1, !dbg !11232
  %float_member = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers11, i32 0, i32 10, !dbg !11233
  %22 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11234, !tbaa !1941
  %structmembers12 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %22, i32 0, i32 1, !dbg !11235
  %double_member = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers12, i32 0, i32 11, !dbg !11236
  %23 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11237, !tbaa !1941
  %structmembers13 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %23, i32 0, i32 1, !dbg !11238
  %longlong_member = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers13, i32 0, i32 13, !dbg !11239
  %24 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11240, !tbaa !1941
  %structmembers14 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %24, i32 0, i32 1, !dbg !11241
  %ulonglong_member = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers14, i32 0, i32 14, !dbg !11242
  %call15 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @_PyArg_ParseTupleAndKeywords_SizeT(%struct._object* %8, %struct._object* %9, i8* %10, i8** getelementptr inbounds ([16 x i8*], [16 x i8*]* @test_structmembers_new.keywords, i32 0, i32 0), i8* %bool_member, i8* %byte_member, i8* %ubyte_member, i16* %short_member, i16* %ushort_member, i32* %int_member, i32* %uint_member, i64* %long_member, i64* %ulong_member, i64* %pyssizet_member, float* %float_member, double* %double_member, i8** %s, i64* %string_len, i64* %longlong_member, i64* %ulonglong_member), !dbg !11243
  %tobool = icmp ne i32 %call15, 0, !dbg !11243
  br i1 %tobool, label %if.end.20, label %if.then.16, !dbg !11244

if.then.16:                                       ; preds = %if.end
  br label %do.body, !dbg !11245

do.body:                                          ; preds = %if.then.16
  %25 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11246
  call void @llvm.lifetime.start(i64 8, i8* %25) #2, !dbg !11246
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp, metadata !1822, metadata !1945), !dbg !11248
  %26 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11249, !tbaa !1941
  %27 = bitcast %struct.test_structmembers* %26 to %struct._object*, !dbg !11250
  store %struct._object* %27, %struct._object** %_py_decref_tmp, align 8, !dbg !11248, !tbaa !1941
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11251, !tbaa !1941
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0, !dbg !11253
  %29 = load i64, i64* %ob_refcnt, align 8, !dbg !11254, !tbaa !1961
  %dec = add i64 %29, -1, !dbg !11254
  store i64 %dec, i64* %ob_refcnt, align 8, !dbg !11254, !tbaa !1961
  %cmp17 = icmp ne i64 %dec, 0, !dbg !11255
  br i1 %cmp17, label %if.then.18, label %if.else, !dbg !11256

if.then.18:                                       ; preds = %do.body
  br label %if.end.19, !dbg !11257

if.else:                                          ; preds = %do.body
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11259, !tbaa !1941
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1, !dbg !11261
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8, !dbg !11261, !tbaa !1995
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4, !dbg !11262
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8, !dbg !11262, !tbaa !1997
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8, !dbg !11263, !tbaa !1941
  call void %32(%struct._object* %33), !dbg !11264
  br label %if.end.19

if.end.19:                                        ; preds = %if.else, %if.then.18
  %34 = bitcast %struct._object** %_py_decref_tmp to i8*, !dbg !11265
  call void @llvm.lifetime.end(i64 8, i8* %34) #2, !dbg !11265
  br label %do.cond, !dbg !11267

do.cond:                                          ; preds = %if.end.19
  br label %do.end, !dbg !11268

do.end:                                           ; preds = %do.cond
  store %struct._object* null, %struct._object** %retval, !dbg !11270
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11270

if.end.20:                                        ; preds = %if.end
  %35 = load i8*, i8** %s, align 8, !dbg !11271, !tbaa !1941
  %cmp21 = icmp ne i8* %35, null, !dbg !11272
  br i1 %cmp21, label %if.then.22, label %if.else.40, !dbg !11273

if.then.22:                                       ; preds = %if.end.20
  %36 = load i64, i64* %string_len, align 8, !dbg !11274, !tbaa !2587
  %cmp23 = icmp sgt i64 %36, 5, !dbg !11275
  br i1 %cmp23, label %if.then.24, label %if.end.37, !dbg !11276

if.then.24:                                       ; preds = %if.then.22
  br label %do.body.25, !dbg !11277

do.body.25:                                       ; preds = %if.then.24
  %37 = bitcast %struct._object** %_py_decref_tmp26 to i8*, !dbg !11278
  call void @llvm.lifetime.start(i64 8, i8* %37) #2, !dbg !11278
  call void @llvm.dbg.declare(metadata %struct._object** %_py_decref_tmp26, metadata !1826, metadata !1945), !dbg !11280
  %38 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11281, !tbaa !1941
  %39 = bitcast %struct.test_structmembers* %38 to %struct._object*, !dbg !11282
  store %struct._object* %39, %struct._object** %_py_decref_tmp26, align 8, !dbg !11280, !tbaa !1941
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !11283, !tbaa !1941
  %ob_refcnt27 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 0, !dbg !11285
  %41 = load i64, i64* %ob_refcnt27, align 8, !dbg !11286, !tbaa !1961
  %dec28 = add i64 %41, -1, !dbg !11286
  store i64 %dec28, i64* %ob_refcnt27, align 8, !dbg !11286, !tbaa !1961
  %cmp29 = icmp ne i64 %dec28, 0, !dbg !11287
  br i1 %cmp29, label %if.then.30, label %if.else.31, !dbg !11288

if.then.30:                                       ; preds = %do.body.25
  br label %if.end.34, !dbg !11289

if.else.31:                                       ; preds = %do.body.25
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !11291, !tbaa !1941
  %ob_type32 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 1, !dbg !11293
  %43 = load %struct._typeobject*, %struct._typeobject** %ob_type32, align 8, !dbg !11293, !tbaa !1995
  %tp_dealloc33 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %43, i32 0, i32 4, !dbg !11294
  %44 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc33, align 8, !dbg !11294, !tbaa !1997
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp26, align 8, !dbg !11295, !tbaa !1941
  call void %44(%struct._object* %45), !dbg !11296
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.31, %if.then.30
  %46 = bitcast %struct._object** %_py_decref_tmp26 to i8*, !dbg !11297
  call void @llvm.lifetime.end(i64 8, i8* %46) #2, !dbg !11297
  br label %do.cond.35, !dbg !11299

do.cond.35:                                       ; preds = %if.end.34
  br label %do.end.36, !dbg !11300

do.end.36:                                        ; preds = %do.cond.35
  %47 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8, !dbg !11302, !tbaa !1941
  call void @PyErr_SetString(%struct._object* %47, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.385, i32 0, i32 0)), !dbg !11303
  store %struct._object* null, %struct._object** %retval, !dbg !11304
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11304

if.end.37:                                        ; preds = %if.then.22
  %48 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11305, !tbaa !1941
  %structmembers38 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %48, i32 0, i32 1, !dbg !11306
  %inplace_member = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers38, i32 0, i32 12, !dbg !11307
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %inplace_member, i32 0, i32 0, !dbg !11305
  %49 = load i8*, i8** %s, align 8, !dbg !11308, !tbaa !1941
  %call39 = call i8* @strcpy(i8* %arraydecay, i8* %49) #2, !dbg !11309
  br label %if.end.45, !dbg !11310

if.else.40:                                       ; preds = %if.end.20
  %50 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11311, !tbaa !1941
  %structmembers41 = getelementptr inbounds %struct.test_structmembers, %struct.test_structmembers* %50, i32 0, i32 1, !dbg !11313
  %inplace_member42 = getelementptr inbounds %struct.all_structmembers, %struct.all_structmembers* %structmembers41, i32 0, i32 12, !dbg !11314
  %arraydecay43 = getelementptr inbounds [6 x i8], [6 x i8]* %inplace_member42, i32 0, i32 0, !dbg !11311
  %call44 = call i8* @strcpy(i8* %arraydecay43, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.334, i32 0, i32 0)) #2, !dbg !11315
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.40, %if.end.37
  %51 = load %struct.test_structmembers*, %struct.test_structmembers** %ob, align 8, !dbg !11316, !tbaa !1941
  %52 = bitcast %struct.test_structmembers* %51 to %struct._object*, !dbg !11317
  store %struct._object* %52, %struct._object** %retval, !dbg !11318
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup, !dbg !11318

cleanup:                                          ; preds = %if.end.45, %do.end.36, %do.end, %if.then
  %53 = bitcast i64* %string_len to i8*, !dbg !11319
  call void @llvm.lifetime.end(i64 8, i8* %53) #2, !dbg !11319
  %54 = bitcast i8** %s to i8*, !dbg !11319
  call void @llvm.lifetime.end(i64 8, i8* %54) #2, !dbg !11319
  %55 = bitcast %struct.test_structmembers** %ob to i8*, !dbg !11319
  call void @llvm.lifetime.end(i64 8, i8* %55) #2, !dbg !11319
  %56 = load %struct._object*, %struct._object** %retval, !dbg !11319
  ret %struct._object* %56, !dbg !11319
}

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #4

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1937, !1938, !1939}
!llvm.ident = !{!1940}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !19, subprograms: !508, globals: !1832)
!1 = !DIFile(filename: "_testcapimodule.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!2 = !{!3, !8, !13}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 190, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./Include/pystate.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!5 = !{!6, !7}
!6 = !DIEnumerator(name: "PyGILState_LOCKED", value: 0)
!7 = !DIEnumerator(name: "PyGILState_UNLOCKED", value: 1)
!8 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 57, size: 32, align: 32, elements: !10)
!9 = !DIFile(filename: "./Include/pytime.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!10 = !{!11, !12}
!11 = !DIEnumerator(name: "_PyTime_ROUND_DOWN", value: 0)
!12 = !DIEnumerator(name: "_PyTime_ROUND_UP", value: 1)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !14, line: 117, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "./Include/pymem.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PYMEM_DOMAIN_RAW", value: 0)
!17 = !DIEnumerator(name: "PYMEM_DOMAIN_MEM", value: 1)
!18 = !DIEnumerator(name: "PYMEM_DOMAIN_OBJ", value: 2)
!19 = !{!20, !105, !26, !110, !366, !374, !404, !112, !32, !413, !414, !59, !364, !422, !423, !424, !443, !380, !451, !477}
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64, align: 64)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyObject", file: !22, line: 109, baseType: !23)
!22 = !DIFile(filename: "./Include/object.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!23 = !DICompositeType(tag: DW_TAG_structure_type, name: "_object", file: !22, line: 105, size: 128, align: 64, elements: !24)
!24 = !{!25, !33}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "ob_refcnt", scope: !23, file: !22, line: 107, baseType: !26, size: 64, align: 64)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_ssize_t", file: !27, line: 177, baseType: !28)
!27 = !DIFile(filename: "./Include/pyport.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !29, line: 102, baseType: !30)
!29 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !31, line: 181, baseType: !32)
!31 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!32 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "ob_type", scope: !23, file: !22, line: 108, baseType: !34, size: 64, align: 64, offset: 64)
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64, align: 64)
!35 = !DICompositeType(tag: DW_TAG_structure_type, name: "_typeobject", file: !22, line: 334, size: 3200, align: 64, elements: !36)
!36 = !{!37, !43, !47, !48, !49, !54, !118, !123, !128, !129, !134, !186, !217, !229, !235, !236, !237, !239, !241, !272, !273, !274, !283, !284, !289, !290, !292, !294, !304, !314, !332, !333, !334, !336, !338, !339, !341, !346, !351, !356, !357, !358, !359, !360, !361, !362, !363, !365}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !35, file: !22, line: 335, baseType: !38, size: 192, align: 64)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyVarObject", file: !22, line: 114, baseType: !39)
!39 = !DICompositeType(tag: DW_TAG_structure_type, file: !22, line: 111, size: 192, align: 64, elements: !40)
!40 = !{!41, !42}
!41 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !39, file: !22, line: 112, baseType: !21, size: 128, align: 64)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "ob_size", scope: !39, file: !22, line: 113, baseType: !26, size: 64, align: 64, offset: 128)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "tp_name", scope: !35, file: !22, line: 336, baseType: !44, size: 64, align: 64, offset: 192)
!44 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64, align: 64)
!45 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !46)
!46 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "tp_basicsize", scope: !35, file: !22, line: 337, baseType: !26, size: 64, align: 64, offset: 256)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "tp_itemsize", scope: !35, file: !22, line: 337, baseType: !26, size: 64, align: 64, offset: 320)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dealloc", scope: !35, file: !22, line: 341, baseType: !50, size: 64, align: 64, offset: 384)
!50 = !DIDerivedType(tag: DW_TAG_typedef, name: "destructor", file: !22, line: 308, baseType: !51)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64, align: 64)
!52 = !DISubroutineType(types: !53)
!53 = !{null, !20}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "tp_print", scope: !35, file: !22, line: 342, baseType: !55, size: 64, align: 64, offset: 448)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "printfunc", file: !22, line: 314, baseType: !56)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64, align: 64)
!57 = !DISubroutineType(types: !58)
!58 = !{!59, !20, !60, !59}
!59 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64, align: 64)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !29, line: 48, baseType: !62)
!62 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !63, line: 246, size: 1728, align: 64, elements: !64)
!63 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!64 = !{!65, !66, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !86, !87, !88, !89, !91, !93, !95, !99, !102, !104, !106, !107, !108, !109, !113, !114}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !62, file: !63, line: 247, baseType: !59, size: 32, align: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !62, file: !63, line: 252, baseType: !67, size: 64, align: 64, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64, align: 64)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !62, file: !63, line: 253, baseType: !67, size: 64, align: 64, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !62, file: !63, line: 254, baseType: !67, size: 64, align: 64, offset: 192)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !62, file: !63, line: 255, baseType: !67, size: 64, align: 64, offset: 256)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !62, file: !63, line: 256, baseType: !67, size: 64, align: 64, offset: 320)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !62, file: !63, line: 257, baseType: !67, size: 64, align: 64, offset: 384)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !62, file: !63, line: 258, baseType: !67, size: 64, align: 64, offset: 448)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !62, file: !63, line: 259, baseType: !67, size: 64, align: 64, offset: 512)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !62, file: !63, line: 261, baseType: !67, size: 64, align: 64, offset: 576)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !62, file: !63, line: 262, baseType: !67, size: 64, align: 64, offset: 640)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !62, file: !63, line: 263, baseType: !67, size: 64, align: 64, offset: 704)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !62, file: !63, line: 265, baseType: !79, size: 64, align: 64, offset: 768)
!79 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64, align: 64)
!80 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !63, line: 161, size: 192, align: 64, elements: !81)
!81 = !{!82, !83, !85}
!82 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !80, file: !63, line: 162, baseType: !79, size: 64, align: 64)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !80, file: !63, line: 163, baseType: !84, size: 64, align: 64, offset: 64)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64, align: 64)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !80, file: !63, line: 167, baseType: !59, size: 32, align: 32, offset: 128)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !62, file: !63, line: 267, baseType: !84, size: 64, align: 64, offset: 832)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !62, file: !63, line: 269, baseType: !59, size: 32, align: 32, offset: 896)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !62, file: !63, line: 273, baseType: !59, size: 32, align: 32, offset: 928)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !62, file: !63, line: 275, baseType: !90, size: 64, align: 64, offset: 960)
!90 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !31, line: 140, baseType: !32)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !62, file: !63, line: 279, baseType: !92, size: 16, align: 16, offset: 1024)
!92 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !62, file: !63, line: 280, baseType: !94, size: 8, align: 8, offset: 1040)
!94 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !62, file: !63, line: 281, baseType: !96, size: 8, align: 8, offset: 1048)
!96 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 8, align: 8, elements: !97)
!97 = !{!98}
!98 = !DISubrange(count: 1)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !62, file: !63, line: 285, baseType: !100, size: 64, align: 64, offset: 1088)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64, align: 64)
!101 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !63, line: 155, baseType: null)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !62, file: !63, line: 294, baseType: !103, size: 64, align: 64, offset: 1152)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !31, line: 141, baseType: !32)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !62, file: !63, line: 303, baseType: !105, size: 64, align: 64, offset: 1216)
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !62, file: !63, line: 304, baseType: !105, size: 64, align: 64, offset: 1280)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !62, file: !63, line: 305, baseType: !105, size: 64, align: 64, offset: 1344)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !62, file: !63, line: 306, baseType: !105, size: 64, align: 64, offset: 1408)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !62, file: !63, line: 307, baseType: !110, size: 64, align: 64, offset: 1472)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !111, line: 62, baseType: !112)
!111 = !DIFile(filename: "/opt/devel/yoonseung.kim/llvm_work/build/bin/../lib/clang/3.7.1/include/stddef.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!112 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !62, file: !63, line: 309, baseType: !59, size: 32, align: 32, offset: 1536)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !62, file: !63, line: 311, baseType: !115, size: 160, align: 8, offset: 1568)
!115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 160, align: 8, elements: !116)
!116 = !{!117}
!117 = !DISubrange(count: 20)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattr", scope: !35, file: !22, line: 343, baseType: !119, size: 64, align: 64, offset: 512)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrfunc", file: !22, line: 316, baseType: !120)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64, align: 64)
!121 = !DISubroutineType(types: !122)
!122 = !{!20, !20, !67}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattr", scope: !35, file: !22, line: 344, baseType: !124, size: 64, align: 64, offset: 576)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrfunc", file: !22, line: 318, baseType: !125)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64, align: 64)
!126 = !DISubroutineType(types: !127)
!127 = !{!59, !20, !67, !20}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "tp_reserved", scope: !35, file: !22, line: 345, baseType: !105, size: 64, align: 64, offset: 640)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "tp_repr", scope: !35, file: !22, line: 346, baseType: !130, size: 64, align: 64, offset: 704)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "reprfunc", file: !22, line: 320, baseType: !131)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64, align: 64)
!132 = !DISubroutineType(types: !133)
!133 = !{!20, !20}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_number", scope: !35, file: !22, line: 350, baseType: !135, size: 64, align: 64, offset: 768)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64, align: 64)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyNumberMethods", file: !22, line: 278, baseType: !137)
!137 = !DICompositeType(tag: DW_TAG_structure_type, file: !22, line: 236, size: 2176, align: 64, elements: !138)
!138 = !{!139, !144, !145, !146, !147, !148, !153, !155, !156, !157, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "nb_add", scope: !137, file: !22, line: 241, baseType: !140, size: 64, align: 64)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "binaryfunc", file: !22, line: 166, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64, align: 64)
!142 = !DISubroutineType(types: !143)
!143 = !{!20, !20, !20}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "nb_subtract", scope: !137, file: !22, line: 242, baseType: !140, size: 64, align: 64, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "nb_multiply", scope: !137, file: !22, line: 243, baseType: !140, size: 64, align: 64, offset: 128)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "nb_remainder", scope: !137, file: !22, line: 244, baseType: !140, size: 64, align: 64, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "nb_divmod", scope: !137, file: !22, line: 245, baseType: !140, size: 64, align: 64, offset: 256)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "nb_power", scope: !137, file: !22, line: 246, baseType: !149, size: 64, align: 64, offset: 320)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "ternaryfunc", file: !22, line: 167, baseType: !150)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64, align: 64)
!151 = !DISubroutineType(types: !152)
!152 = !{!20, !20, !20, !20}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "nb_negative", scope: !137, file: !22, line: 247, baseType: !154, size: 64, align: 64, offset: 384)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "unaryfunc", file: !22, line: 165, baseType: !131)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "nb_positive", scope: !137, file: !22, line: 248, baseType: !154, size: 64, align: 64, offset: 448)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "nb_absolute", scope: !137, file: !22, line: 249, baseType: !154, size: 64, align: 64, offset: 512)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bool", scope: !137, file: !22, line: 250, baseType: !158, size: 64, align: 64, offset: 576)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "inquiry", file: !22, line: 168, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64, align: 64)
!160 = !DISubroutineType(types: !161)
!161 = !{!59, !20}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "nb_invert", scope: !137, file: !22, line: 251, baseType: !154, size: 64, align: 64, offset: 640)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "nb_lshift", scope: !137, file: !22, line: 252, baseType: !140, size: 64, align: 64, offset: 704)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_rshift", scope: !137, file: !22, line: 253, baseType: !140, size: 64, align: 64, offset: 768)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "nb_and", scope: !137, file: !22, line: 254, baseType: !140, size: 64, align: 64, offset: 832)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "nb_xor", scope: !137, file: !22, line: 255, baseType: !140, size: 64, align: 64, offset: 896)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "nb_or", scope: !137, file: !22, line: 256, baseType: !140, size: 64, align: 64, offset: 960)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "nb_int", scope: !137, file: !22, line: 257, baseType: !154, size: 64, align: 64, offset: 1024)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "nb_reserved", scope: !137, file: !22, line: 258, baseType: !105, size: 64, align: 64, offset: 1088)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "nb_float", scope: !137, file: !22, line: 259, baseType: !154, size: 64, align: 64, offset: 1152)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_add", scope: !137, file: !22, line: 261, baseType: !140, size: 64, align: 64, offset: 1216)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_subtract", scope: !137, file: !22, line: 262, baseType: !140, size: 64, align: 64, offset: 1280)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_multiply", scope: !137, file: !22, line: 263, baseType: !140, size: 64, align: 64, offset: 1344)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_remainder", scope: !137, file: !22, line: 264, baseType: !140, size: 64, align: 64, offset: 1408)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_power", scope: !137, file: !22, line: 265, baseType: !149, size: 64, align: 64, offset: 1472)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_lshift", scope: !137, file: !22, line: 266, baseType: !140, size: 64, align: 64, offset: 1536)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_rshift", scope: !137, file: !22, line: 267, baseType: !140, size: 64, align: 64, offset: 1600)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_and", scope: !137, file: !22, line: 268, baseType: !140, size: 64, align: 64, offset: 1664)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_xor", scope: !137, file: !22, line: 269, baseType: !140, size: 64, align: 64, offset: 1728)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_or", scope: !137, file: !22, line: 270, baseType: !140, size: 64, align: 64, offset: 1792)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "nb_floor_divide", scope: !137, file: !22, line: 272, baseType: !140, size: 64, align: 64, offset: 1856)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "nb_true_divide", scope: !137, file: !22, line: 273, baseType: !140, size: 64, align: 64, offset: 1920)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_floor_divide", scope: !137, file: !22, line: 274, baseType: !140, size: 64, align: 64, offset: 1984)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "nb_inplace_true_divide", scope: !137, file: !22, line: 275, baseType: !140, size: 64, align: 64, offset: 2048)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "nb_index", scope: !137, file: !22, line: 277, baseType: !154, size: 64, align: 64, offset: 2112)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_sequence", scope: !35, file: !22, line: 351, baseType: !187, size: 64, align: 64, offset: 832)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64, align: 64)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "PySequenceMethods", file: !22, line: 292, baseType: !189)
!189 = !DICompositeType(tag: DW_TAG_structure_type, file: !22, line: 280, size: 640, align: 64, elements: !190)
!190 = !{!191, !196, !197, !202, !203, !204, !209, !210, !215, !216}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "sq_length", scope: !189, file: !22, line: 281, baseType: !192, size: 64, align: 64)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "lenfunc", file: !22, line: 169, baseType: !193)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64, align: 64)
!194 = !DISubroutineType(types: !195)
!195 = !{!26, !20}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "sq_concat", scope: !189, file: !22, line: 282, baseType: !140, size: 64, align: 64, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sq_repeat", scope: !189, file: !22, line: 283, baseType: !198, size: 64, align: 64, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeargfunc", file: !22, line: 170, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64, align: 64)
!200 = !DISubroutineType(types: !201)
!201 = !{!20, !20, !26}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "sq_item", scope: !189, file: !22, line: 284, baseType: !198, size: 64, align: 64, offset: 192)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_slice", scope: !189, file: !22, line: 285, baseType: !105, size: 64, align: 64, offset: 256)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "sq_ass_item", scope: !189, file: !22, line: 286, baseType: !205, size: 64, align: 64, offset: 320)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssizeobjargproc", file: !22, line: 172, baseType: !206)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64, align: 64)
!207 = !DISubroutineType(types: !208)
!208 = !{!59, !20, !26, !20}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "was_sq_ass_slice", scope: !189, file: !22, line: 287, baseType: !105, size: 64, align: 64, offset: 384)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "sq_contains", scope: !189, file: !22, line: 288, baseType: !211, size: 64, align: 64, offset: 448)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjproc", file: !22, line: 231, baseType: !212)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64, align: 64)
!213 = !DISubroutineType(types: !214)
!214 = !{!59, !20, !20}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_concat", scope: !189, file: !22, line: 290, baseType: !140, size: 64, align: 64, offset: 512)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "sq_inplace_repeat", scope: !189, file: !22, line: 291, baseType: !198, size: 64, align: 64, offset: 576)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_mapping", scope: !35, file: !22, line: 352, baseType: !218, size: 64, align: 64, offset: 896)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64, align: 64)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMappingMethods", file: !22, line: 298, baseType: !220)
!220 = !DICompositeType(tag: DW_TAG_structure_type, file: !22, line: 294, size: 192, align: 64, elements: !221)
!221 = !{!222, !223, !224}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "mp_length", scope: !220, file: !22, line: 295, baseType: !192, size: 64, align: 64)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "mp_subscript", scope: !220, file: !22, line: 296, baseType: !140, size: 64, align: 64, offset: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "mp_ass_subscript", scope: !220, file: !22, line: 297, baseType: !225, size: 64, align: 64, offset: 128)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "objobjargproc", file: !22, line: 174, baseType: !226)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64, align: 64)
!227 = !DISubroutineType(types: !228)
!228 = !{!59, !20, !20, !20}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "tp_hash", scope: !35, file: !22, line: 356, baseType: !230, size: 64, align: 64, offset: 960)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashfunc", file: !22, line: 321, baseType: !231)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64, align: 64)
!232 = !DISubroutineType(types: !233)
!233 = !{!234, !20}
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_hash_t", file: !27, line: 186, baseType: !26)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "tp_call", scope: !35, file: !22, line: 357, baseType: !149, size: 64, align: 64, offset: 1024)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "tp_str", scope: !35, file: !22, line: 358, baseType: !130, size: 64, align: 64, offset: 1088)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getattro", scope: !35, file: !22, line: 359, baseType: !238, size: 64, align: 64, offset: 1152)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "getattrofunc", file: !22, line: 317, baseType: !141)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "tp_setattro", scope: !35, file: !22, line: 360, baseType: !240, size: 64, align: 64, offset: 1216)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "setattrofunc", file: !22, line: 319, baseType: !226)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "tp_as_buffer", scope: !35, file: !22, line: 363, baseType: !242, size: 64, align: 64, offset: 1280)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64, align: 64)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBufferProcs", file: !22, line: 304, baseType: !244)
!244 = !DICompositeType(tag: DW_TAG_structure_type, file: !22, line: 301, size: 128, align: 64, elements: !245)
!245 = !{!246, !267}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "bf_getbuffer", scope: !244, file: !22, line: 302, baseType: !247, size: 64, align: 64)
!247 = !DIDerivedType(tag: DW_TAG_typedef, name: "getbufferproc", file: !22, line: 193, baseType: !248)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64, align: 64)
!249 = !DISubroutineType(types: !250)
!250 = !{!59, !20, !251, !59}
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64, align: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_buffer", file: !22, line: 191, baseType: !253)
!253 = !DICompositeType(tag: DW_TAG_structure_type, name: "bufferinfo", file: !22, line: 178, size: 640, align: 64, elements: !254)
!254 = !{!255, !256, !257, !258, !259, !260, !261, !262, !264, !265, !266}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !253, file: !22, line: 179, baseType: !105, size: 64, align: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !253, file: !22, line: 180, baseType: !20, size: 64, align: 64, offset: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !253, file: !22, line: 181, baseType: !26, size: 64, align: 64, offset: 128)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !253, file: !22, line: 182, baseType: !26, size: 64, align: 64, offset: 192)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "readonly", scope: !253, file: !22, line: 184, baseType: !59, size: 32, align: 32, offset: 256)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "ndim", scope: !253, file: !22, line: 185, baseType: !59, size: 32, align: 32, offset: 288)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !253, file: !22, line: 186, baseType: !67, size: 64, align: 64, offset: 320)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !253, file: !22, line: 187, baseType: !263, size: 64, align: 64, offset: 384)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64, align: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "strides", scope: !253, file: !22, line: 188, baseType: !263, size: 64, align: 64, offset: 448)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "suboffsets", scope: !253, file: !22, line: 189, baseType: !263, size: 64, align: 64, offset: 512)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !253, file: !22, line: 190, baseType: !105, size: 64, align: 64, offset: 576)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "bf_releasebuffer", scope: !244, file: !22, line: 303, baseType: !268, size: 64, align: 64, offset: 64)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "releasebufferproc", file: !22, line: 194, baseType: !269)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64, align: 64)
!270 = !DISubroutineType(types: !271)
!271 = !{null, !20, !251}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "tp_flags", scope: !35, file: !22, line: 366, baseType: !112, size: 64, align: 64, offset: 1344)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "tp_doc", scope: !35, file: !22, line: 368, baseType: !44, size: 64, align: 64, offset: 1408)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "tp_traverse", scope: !35, file: !22, line: 372, baseType: !275, size: 64, align: 64, offset: 1472)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "traverseproc", file: !22, line: 233, baseType: !276)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64, align: 64)
!277 = !DISubroutineType(types: !278)
!278 = !{!59, !20, !279, !105}
!279 = !DIDerivedType(tag: DW_TAG_typedef, name: "visitproc", file: !22, line: 232, baseType: !280)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64, align: 64)
!281 = !DISubroutineType(types: !282)
!282 = !{!59, !20, !105}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "tp_clear", scope: !35, file: !22, line: 375, baseType: !158, size: 64, align: 64, offset: 1536)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "tp_richcompare", scope: !35, file: !22, line: 379, baseType: !285, size: 64, align: 64, offset: 1600)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "richcmpfunc", file: !22, line: 322, baseType: !286)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64, align: 64)
!287 = !DISubroutineType(types: !288)
!288 = !{!20, !20, !20, !59}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklistoffset", scope: !35, file: !22, line: 382, baseType: !26, size: 64, align: 64, offset: 1664)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iter", scope: !35, file: !22, line: 385, baseType: !291, size: 64, align: 64, offset: 1728)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "getiterfunc", file: !22, line: 323, baseType: !131)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "tp_iternext", scope: !35, file: !22, line: 386, baseType: !293, size: 64, align: 64, offset: 1792)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "iternextfunc", file: !22, line: 324, baseType: !131)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "tp_methods", scope: !35, file: !22, line: 389, baseType: !295, size: 64, align: 64, offset: 1856)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64, align: 64)
!296 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMethodDef", file: !297, line: 40, size: 256, align: 64, elements: !298)
!297 = !DIFile(filename: "./Include/methodobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!298 = !{!299, !300, !302, !303}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "ml_name", scope: !296, file: !297, line: 41, baseType: !44, size: 64, align: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ml_meth", scope: !296, file: !297, line: 42, baseType: !301, size: 64, align: 64, offset: 64)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCFunction", file: !297, line: 18, baseType: !141)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flags", scope: !296, file: !297, line: 43, baseType: !59, size: 32, align: 32, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "ml_doc", scope: !296, file: !297, line: 45, baseType: !44, size: 64, align: 64, offset: 192)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "tp_members", scope: !35, file: !22, line: 390, baseType: !305, size: 64, align: 64, offset: 1920)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64, align: 64)
!306 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyMemberDef", file: !307, line: 18, size: 320, align: 64, elements: !308)
!307 = !DIFile(filename: "./Include/structmember.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!308 = !{!309, !310, !311, !312, !313}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !306, file: !307, line: 19, baseType: !67, size: 64, align: 64)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !306, file: !307, line: 20, baseType: !59, size: 32, align: 32, offset: 64)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !306, file: !307, line: 21, baseType: !26, size: 64, align: 64, offset: 128)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !306, file: !307, line: 22, baseType: !59, size: 32, align: 32, offset: 192)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !306, file: !307, line: 23, baseType: !67, size: 64, align: 64, offset: 256)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "tp_getset", scope: !35, file: !22, line: 391, baseType: !315, size: 64, align: 64, offset: 1984)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64, align: 64)
!316 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyGetSetDef", file: !317, line: 11, size: 320, align: 64, elements: !318)
!317 = !DIFile(filename: "./Include/descrobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!318 = !{!319, !320, !325, !330, !331}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !316, file: !317, line: 12, baseType: !67, size: 64, align: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !316, file: !317, line: 13, baseType: !321, size: 64, align: 64, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "getter", file: !317, line: 8, baseType: !322)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64, align: 64)
!323 = !DISubroutineType(types: !324)
!324 = !{!20, !20, !105}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !316, file: !317, line: 14, baseType: !326, size: 64, align: 64, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "setter", file: !317, line: 9, baseType: !327)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64, align: 64)
!328 = !DISubroutineType(types: !329)
!329 = !{!59, !20, !20, !105}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "doc", scope: !316, file: !317, line: 15, baseType: !67, size: 64, align: 64, offset: 192)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "closure", scope: !316, file: !317, line: 16, baseType: !105, size: 64, align: 64, offset: 256)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "tp_base", scope: !35, file: !22, line: 392, baseType: !34, size: 64, align: 64, offset: 2048)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dict", scope: !35, file: !22, line: 393, baseType: !20, size: 64, align: 64, offset: 2112)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_get", scope: !35, file: !22, line: 394, baseType: !335, size: 64, align: 64, offset: 2176)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrgetfunc", file: !22, line: 325, baseType: !150)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "tp_descr_set", scope: !35, file: !22, line: 395, baseType: !337, size: 64, align: 64, offset: 2240)
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "descrsetfunc", file: !22, line: 326, baseType: !226)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "tp_dictoffset", scope: !35, file: !22, line: 396, baseType: !26, size: 64, align: 64, offset: 2304)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "tp_init", scope: !35, file: !22, line: 397, baseType: !340, size: 64, align: 64, offset: 2368)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "initproc", file: !22, line: 327, baseType: !226)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "tp_alloc", scope: !35, file: !22, line: 398, baseType: !342, size: 64, align: 64, offset: 2432)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocfunc", file: !22, line: 329, baseType: !343)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64, align: 64)
!344 = !DISubroutineType(types: !345)
!345 = !{!20, !34, !26}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "tp_new", scope: !35, file: !22, line: 399, baseType: !347, size: 64, align: 64, offset: 2496)
!347 = !DIDerivedType(tag: DW_TAG_typedef, name: "newfunc", file: !22, line: 328, baseType: !348)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64, align: 64)
!349 = !DISubroutineType(types: !350)
!350 = !{!20, !34, !20, !20}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "tp_free", scope: !35, file: !22, line: 400, baseType: !352, size: 64, align: 64, offset: 2560)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "freefunc", file: !22, line: 307, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64, align: 64)
!354 = !DISubroutineType(types: !355)
!355 = !{null, !105}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "tp_is_gc", scope: !35, file: !22, line: 401, baseType: !158, size: 64, align: 64, offset: 2624)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "tp_bases", scope: !35, file: !22, line: 402, baseType: !20, size: 64, align: 64, offset: 2688)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "tp_mro", scope: !35, file: !22, line: 403, baseType: !20, size: 64, align: 64, offset: 2752)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "tp_cache", scope: !35, file: !22, line: 404, baseType: !20, size: 64, align: 64, offset: 2816)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "tp_subclasses", scope: !35, file: !22, line: 405, baseType: !20, size: 64, align: 64, offset: 2880)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "tp_weaklist", scope: !35, file: !22, line: 406, baseType: !20, size: 64, align: 64, offset: 2944)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "tp_del", scope: !35, file: !22, line: 407, baseType: !50, size: 64, align: 64, offset: 3008)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "tp_version_tag", scope: !35, file: !22, line: 410, baseType: !364, size: 32, align: 32, offset: 3072)
!364 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "tp_finalize", scope: !35, file: !22, line: 412, baseType: !50, size: 64, align: 64, offset: 3136)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64, align: 64)
!367 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTupleObject", file: !368, line: 33, baseType: !369)
!368 = !DIFile(filename: "./Include/tupleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!369 = !DICompositeType(tag: DW_TAG_structure_type, file: !368, line: 25, size: 256, align: 64, elements: !370)
!370 = !{!371, !372}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !369, file: !368, line: 26, baseType: !38, size: 192, align: 64)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !369, file: !368, line: 27, baseType: !373, size: 64, align: 64, offset: 192)
!373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 64, align: 64, elements: !97)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64, align: 64)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyDateTime_CAPI", file: !376, line: 165, baseType: !377)
!376 = !DIFile(filename: "./Include/datetime.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!377 = !DICompositeType(tag: DW_TAG_structure_type, file: !376, line: 146, size: 704, align: 64, elements: !378)
!378 = !{!379, !382, !383, !384, !385, !386, !390, !394, !398, !402, !403}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "DateType", scope: !377, file: !376, line: 148, baseType: !380, size: 64, align: 64)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64, align: 64)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyTypeObject", file: !22, line: 422, baseType: !35)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "DateTimeType", scope: !377, file: !376, line: 149, baseType: !380, size: 64, align: 64, offset: 64)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "TimeType", scope: !377, file: !376, line: 150, baseType: !380, size: 64, align: 64, offset: 128)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "DeltaType", scope: !377, file: !376, line: 151, baseType: !380, size: 64, align: 64, offset: 192)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "TZInfoType", scope: !377, file: !376, line: 152, baseType: !380, size: 64, align: 64, offset: 256)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "Date_FromDate", scope: !377, file: !376, line: 155, baseType: !387, size: 64, align: 64, offset: 320)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64, align: 64)
!388 = !DISubroutineType(types: !389)
!389 = !{!20, !59, !59, !59, !380}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "DateTime_FromDateAndTime", scope: !377, file: !376, line: 156, baseType: !391, size: 64, align: 64, offset: 384)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64, align: 64)
!392 = !DISubroutineType(types: !393)
!393 = !{!20, !59, !59, !59, !59, !59, !59, !59, !20, !380}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "Time_FromTime", scope: !377, file: !376, line: 158, baseType: !395, size: 64, align: 64, offset: 448)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64, align: 64)
!396 = !DISubroutineType(types: !397)
!397 = !{!20, !59, !59, !59, !59, !20, !380}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "Delta_FromDelta", scope: !377, file: !376, line: 159, baseType: !399, size: 64, align: 64, offset: 512)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64, align: 64)
!400 = !DISubroutineType(types: !401)
!401 = !{!20, !59, !59, !59, !59, !380}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "DateTime_FromTimestamp", scope: !377, file: !376, line: 162, baseType: !150, size: 64, align: 64, offset: 576)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "Date_FromTimestamp", scope: !377, file: !376, line: 163, baseType: !141, size: 64, align: 64, offset: 640)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64, align: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyListObject", file: !406, line: 40, baseType: !407)
!406 = !DIFile(filename: "./Include/listobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!407 = !DICompositeType(tag: DW_TAG_structure_type, file: !406, line: 23, size: 320, align: 64, elements: !408)
!408 = !{!409, !410, !412}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !407, file: !406, line: 24, baseType: !38, size: 192, align: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ob_item", scope: !407, file: !406, line: 26, baseType: !411, size: 64, align: 64, offset: 192)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64, align: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "allocated", scope: !407, file: !406, line: 39, baseType: !26, size: 64, align: 64, offset: 256)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64, align: 64)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64, align: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyBytesObject", file: !416, line: 41, baseType: !417)
!416 = !DIFile(filename: "./Include/bytesobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!417 = !DICompositeType(tag: DW_TAG_structure_type, file: !416, line: 31, size: 320, align: 64, elements: !418)
!418 = !{!419, !420, !421}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !417, file: !416, line: 32, baseType: !38, size: 192, align: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "ob_shash", scope: !417, file: !416, line: 33, baseType: !234, size: 64, align: 64, offset: 192)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "ob_sval", scope: !417, file: !416, line: 34, baseType: !96, size: 8, align: 8, offset: 256)
!422 = !DIBasicType(name: "long long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!423 = !DIBasicType(name: "long long int", size: 64, align: 64, encoding: DW_ATE_signed)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64, align: 64)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyASCIIObject", file: !426, line: 351, baseType: !427)
!426 = !DIFile(filename: "./Include/unicodeobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!427 = !DICompositeType(tag: DW_TAG_structure_type, file: !426, line: 217, size: 384, align: 64, elements: !428)
!428 = !{!429, !430, !431, !432, !440}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !427, file: !426, line: 291, baseType: !21, size: 128, align: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !427, file: !426, line: 292, baseType: !26, size: 64, align: 64, offset: 128)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !427, file: !426, line: 293, baseType: !234, size: 64, align: 64, offset: 192)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !427, file: !426, line: 349, baseType: !433, size: 32, align: 32, offset: 256)
!433 = !DICompositeType(tag: DW_TAG_structure_type, scope: !427, file: !426, line: 294, size: 32, align: 32, elements: !434)
!434 = !{!435, !436, !437, !438, !439}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "interned", scope: !433, file: !426, line: 303, baseType: !364, size: 2, align: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !433, file: !426, line: 331, baseType: !364, size: 3, align: 32, offset: 2)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "compact", scope: !433, file: !426, line: 336, baseType: !364, size: 1, align: 32, offset: 5)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !433, file: !426, line: 340, baseType: !364, size: 1, align: 32, offset: 6)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !433, file: !426, line: 345, baseType: !364, size: 1, align: 32, offset: 7)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "wstr", scope: !427, file: !426, line: 350, baseType: !441, size: 64, align: 64, offset: 320)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64, align: 64)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !111, line: 90, baseType: !59)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64, align: 64)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyCompactUnicodeObject", file: !426, line: 363, baseType: !445)
!445 = !DICompositeType(tag: DW_TAG_structure_type, file: !426, line: 356, size: 576, align: 64, elements: !446)
!446 = !{!447, !448, !449, !450}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !445, file: !426, line: 357, baseType: !425, size: 384, align: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_length", scope: !445, file: !426, line: 358, baseType: !26, size: 64, align: 64, offset: 384)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "utf8", scope: !445, file: !426, line: 360, baseType: !67, size: 64, align: 64, offset: 448)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "wstr_length", scope: !445, file: !426, line: 361, baseType: !26, size: 64, align: 64, offset: 512)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64, align: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_hook_t", file: !453, line: 2737, baseType: !454)
!453 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/_testcapimodule.c", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!454 = !DICompositeType(tag: DW_TAG_structure_type, file: !453, line: 2730, size: 512, align: 64, elements: !455)
!455 = !{!456, !473, !474, !475, !476}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !454, file: !453, line: 2731, baseType: !457, size: 256, align: 64)
!457 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMemAllocator", file: !14, line: 140, baseType: !458)
!458 = !DICompositeType(tag: DW_TAG_structure_type, file: !14, line: 128, size: 256, align: 64, elements: !459)
!459 = !{!460, !461, !465, !469}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !458, file: !14, line: 130, baseType: !105, size: 64, align: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "malloc", scope: !458, file: !14, line: 133, baseType: !462, size: 64, align: 64, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64, align: 64)
!463 = !DISubroutineType(types: !464)
!464 = !{!105, !105, !110}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !458, file: !14, line: 136, baseType: !466, size: 64, align: 64, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64, align: 64)
!467 = !DISubroutineType(types: !468)
!468 = !{!105, !105, !105, !110}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !458, file: !14, line: 139, baseType: !470, size: 64, align: 64, offset: 192)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64, align: 64)
!471 = !DISubroutineType(types: !472)
!472 = !{null, !105, !105}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_size", scope: !454, file: !453, line: 2733, baseType: !110, size: 64, align: 64, offset: 256)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "realloc_ptr", scope: !454, file: !453, line: 2734, baseType: !105, size: 64, align: 64, offset: 320)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "realloc_new_size", scope: !454, file: !453, line: 2735, baseType: !110, size: 64, align: 64, offset: 384)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "free_ptr", scope: !454, file: !453, line: 2736, baseType: !105, size: 64, align: 64, offset: 448)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64, align: 64)
!478 = !DIDerivedType(tag: DW_TAG_typedef, name: "test_structmembers", file: !453, line: 3170, baseType: !479)
!479 = !DICompositeType(tag: DW_TAG_structure_type, file: !453, line: 3167, size: 768, align: 64, elements: !480)
!480 = !{!481, !482}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !479, file: !453, line: 3168, baseType: !21, size: 128, align: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "structmembers", scope: !479, file: !453, line: 3169, baseType: !483, size: 640, align: 64, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "all_structmembers", file: !453, line: 3165, baseType: !484)
!484 = !DICompositeType(tag: DW_TAG_structure_type, file: !453, line: 3147, size: 640, align: 64, elements: !485)
!485 = !{!486, !487, !488, !490, !492, !493, !494, !495, !496, !497, !498, !500, !502, !506, !507}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "bool_member", scope: !484, file: !453, line: 3148, baseType: !46, size: 8, align: 8)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "byte_member", scope: !484, file: !453, line: 3149, baseType: !46, size: 8, align: 8, offset: 8)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "ubyte_member", scope: !484, file: !453, line: 3150, baseType: !489, size: 8, align: 8, offset: 16)
!489 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "short_member", scope: !484, file: !453, line: 3151, baseType: !491, size: 16, align: 16, offset: 32)
!491 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "ushort_member", scope: !484, file: !453, line: 3152, baseType: !92, size: 16, align: 16, offset: 48)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "int_member", scope: !484, file: !453, line: 3153, baseType: !59, size: 32, align: 32, offset: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "uint_member", scope: !484, file: !453, line: 3154, baseType: !364, size: 32, align: 32, offset: 96)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "long_member", scope: !484, file: !453, line: 3155, baseType: !32, size: 64, align: 64, offset: 128)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "ulong_member", scope: !484, file: !453, line: 3156, baseType: !112, size: 64, align: 64, offset: 192)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "pyssizet_member", scope: !484, file: !453, line: 3157, baseType: !26, size: 64, align: 64, offset: 256)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "float_member", scope: !484, file: !453, line: 3158, baseType: !499, size: 32, align: 32, offset: 320)
!499 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "double_member", scope: !484, file: !453, line: 3159, baseType: !501, size: 64, align: 64, offset: 384)
!501 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "inplace_member", scope: !484, file: !453, line: 3160, baseType: !503, size: 48, align: 8, offset: 448)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 48, align: 8, elements: !504)
!504 = !{!505}
!505 = !DISubrange(count: 6)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "longlong_member", scope: !484, file: !453, line: 3162, baseType: !423, size: 64, align: 64, offset: 512)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "ulonglong_member", scope: !484, file: !453, line: 3163, baseType: !422, size: 64, align: 64, offset: 576)
!508 = !{!509, !578, !583, !597, !615, !618, !621, !624, !628, !655, !659, !689, !713, !716, !780, !783, !789, !801, !804, !814, !822, !827, !831, !871, !875, !880, !901, !911, !924, !957, !973, !1000, !1003, !1008, !1015, !1068, !1071, !1078, !1087, !1095, !1100, !1105, !1110, !1115, !1120, !1125, !1130, !1135, !1140, !1145, !1150, !1155, !1159, !1216, !1219, !1259, !1269, !1274, !1279, !1285, !1291, !1296, !1302, !1308, !1313, !1319, !1325, !1333, !1339, !1345, !1351, !1358, !1364, !1370, !1378, !1387, !1400, !1433, !1442, !1450, !1465, !1471, !1478, !1488, !1491, !1503, !1577, !1585, !1592, !1603, !1629, !1638, !1642, !1649, !1658, !1662, !1667, !1675, !1684, !1687, !1695, !1703, !1709, !1726, !1730, !1733, !1747, !1752, !1758, !1763, !1766, !1769, !1792, !1809, !1812}
!509 = !DISubprogram(name: "pending_threadfunc", scope: !453, file: !453, line: 1932, type: !142, isLocal: false, isDefinition: true, scopeLine: 1933, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @pending_threadfunc, variables: !510)
!510 = !{!511, !512, !513, !514, !515, !574}
!511 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !509, file: !453, line: 1932, type: !20)
!512 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !509, file: !453, line: 1932, type: !20)
!513 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "callable", scope: !509, file: !453, line: 1934, type: !20)
!514 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !509, file: !453, line: 1935, type: !59)
!515 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !516, file: !453, line: 1942, type: !517)
!516 = distinct !DILexicalBlock(scope: !509, file: !453, line: 1942, column: 5)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64, align: 64)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyThreadState", file: !4, line: 139, baseType: !519)
!519 = !DICompositeType(tag: DW_TAG_structure_type, name: "_ts", file: !4, line: 69, size: 1536, align: 64, elements: !520)
!520 = !{!521, !523, !524, !544, !547, !548, !549, !550, !551, !552, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !519, file: !4, line: 72, baseType: !522, size: 64, align: 64)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64, align: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !519, file: !4, line: 73, baseType: !522, size: 64, align: 64, offset: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "interp", scope: !519, file: !4, line: 74, baseType: !525, size: 64, align: 64, offset: 128)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64, align: 64)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyInterpreterState", file: !4, line: 44, baseType: !527)
!527 = !DICompositeType(tag: DW_TAG_structure_type, name: "_is", file: !4, line: 19, size: 832, align: 64, elements: !528)
!528 = !{!529, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !527, file: !4, line: 21, baseType: !530, size: 64, align: 64)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64, align: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "tstate_head", scope: !527, file: !4, line: 22, baseType: !522, size: 64, align: 64, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "modules", scope: !527, file: !4, line: 24, baseType: !20, size: 64, align: 64, offset: 128)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "modules_by_index", scope: !527, file: !4, line: 25, baseType: !20, size: 64, align: 64, offset: 192)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "sysdict", scope: !527, file: !4, line: 26, baseType: !20, size: 64, align: 64, offset: 256)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "builtins", scope: !527, file: !4, line: 27, baseType: !20, size: 64, align: 64, offset: 320)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "importlib", scope: !527, file: !4, line: 28, baseType: !20, size: 64, align: 64, offset: 384)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "codec_search_path", scope: !527, file: !4, line: 30, baseType: !20, size: 64, align: 64, offset: 448)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "codec_search_cache", scope: !527, file: !4, line: 31, baseType: !20, size: 64, align: 64, offset: 512)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "codec_error_registry", scope: !527, file: !4, line: 32, baseType: !20, size: 64, align: 64, offset: 576)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "codecs_initialized", scope: !527, file: !4, line: 33, baseType: !59, size: 32, align: 32, offset: 640)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "fscodec_initialized", scope: !527, file: !4, line: 34, baseType: !59, size: 32, align: 32, offset: 672)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "dlopenflags", scope: !527, file: !4, line: 37, baseType: !59, size: 32, align: 32, offset: 704)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "builtins_copy", scope: !527, file: !4, line: 43, baseType: !20, size: 64, align: 64, offset: 768)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !519, file: !4, line: 76, baseType: !545, size: 64, align: 64, offset: 192)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64, align: 64)
!546 = !DICompositeType(tag: DW_TAG_structure_type, name: "_frame", file: !4, line: 50, flags: DIFlagFwdDecl)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_depth", scope: !519, file: !4, line: 77, baseType: !59, size: 32, align: 32, offset: 256)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "overflowed", scope: !519, file: !4, line: 78, baseType: !46, size: 8, align: 8, offset: 288)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "recursion_critical", scope: !519, file: !4, line: 80, baseType: !46, size: 8, align: 8, offset: 296)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "tracing", scope: !519, file: !4, line: 85, baseType: !59, size: 32, align: 32, offset: 320)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "use_tracing", scope: !519, file: !4, line: 86, baseType: !59, size: 32, align: 32, offset: 352)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "c_profilefunc", scope: !519, file: !4, line: 88, baseType: !553, size: 64, align: 64, offset: 384)
!553 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_tracefunc", file: !4, line: 54, baseType: !554)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64, align: 64)
!555 = !DISubroutineType(types: !556)
!556 = !{!59, !20, !545, !59, !20}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "c_tracefunc", scope: !519, file: !4, line: 89, baseType: !553, size: 64, align: 64, offset: 448)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "c_profileobj", scope: !519, file: !4, line: 90, baseType: !20, size: 64, align: 64, offset: 512)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "c_traceobj", scope: !519, file: !4, line: 91, baseType: !20, size: 64, align: 64, offset: 576)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_type", scope: !519, file: !4, line: 93, baseType: !20, size: 64, align: 64, offset: 640)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_value", scope: !519, file: !4, line: 94, baseType: !20, size: 64, align: 64, offset: 704)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "curexc_traceback", scope: !519, file: !4, line: 95, baseType: !20, size: 64, align: 64, offset: 768)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "exc_type", scope: !519, file: !4, line: 97, baseType: !20, size: 64, align: 64, offset: 832)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "exc_value", scope: !519, file: !4, line: 98, baseType: !20, size: 64, align: 64, offset: 896)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "exc_traceback", scope: !519, file: !4, line: 99, baseType: !20, size: 64, align: 64, offset: 960)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !519, file: !4, line: 101, baseType: !20, size: 64, align: 64, offset: 1024)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "gilstate_counter", scope: !519, file: !4, line: 103, baseType: !59, size: 32, align: 32, offset: 1088)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "async_exc", scope: !519, file: !4, line: 105, baseType: !20, size: 64, align: 64, offset: 1152)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "thread_id", scope: !519, file: !4, line: 106, baseType: !32, size: 64, align: 64, offset: 1216)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_nesting", scope: !519, file: !4, line: 108, baseType: !59, size: 32, align: 32, offset: 1280)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "trash_delete_later", scope: !519, file: !4, line: 109, baseType: !20, size: 64, align: 64, offset: 1344)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete", scope: !519, file: !4, line: 134, baseType: !353, size: 64, align: 64, offset: 1408)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "on_delete_data", scope: !519, file: !4, line: 135, baseType: !105, size: 64, align: 64, offset: 1472)
!574 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !575, file: !453, line: 1947, type: !20)
!575 = distinct !DILexicalBlock(scope: !576, file: !453, line: 1947, column: 12)
!576 = distinct !DILexicalBlock(scope: !577, file: !453, line: 1946, column: 14)
!577 = distinct !DILexicalBlock(scope: !509, file: !453, line: 1946, column: 9)
!578 = !DISubprogram(name: "PyInit__testcapi", scope: !453, file: !453, line: 3315, type: !579, isLocal: false, isDefinition: true, scopeLine: 3316, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* ()* @PyInit__testcapi, variables: !581)
!579 = !DISubroutineType(types: !580)
!580 = !{!20}
!581 = !{!582}
!582 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !578, file: !453, line: 3317, type: !20)
!583 = !DISubprogram(name: "_pending_callback", scope: !453, file: !453, line: 1919, type: !584, isLocal: true, isDefinition: true, scopeLine: 1920, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*)* @_pending_callback, variables: !586)
!584 = !DISubroutineType(types: !585)
!585 = !{!59, !105}
!586 = !{!587, !588, !589, !590, !592, !594}
!587 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 1, scope: !583, file: !453, line: 1919, type: !105)
!588 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "callable", scope: !583, file: !453, line: 1922, type: !20)
!589 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !583, file: !453, line: 1923, type: !20)
!590 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !591, file: !453, line: 1924, type: !20)
!591 = distinct !DILexicalBlock(scope: !583, file: !453, line: 1924, column: 8)
!592 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !593, file: !453, line: 1925, type: !20)
!593 = distinct !DILexicalBlock(scope: !583, file: !453, line: 1925, column: 8)
!594 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !595, file: !453, line: 1925, type: !20)
!595 = distinct !DILexicalBlock(scope: !596, file: !453, line: 1925, column: 93)
!596 = distinct !DILexicalBlock(scope: !593, file: !453, line: 1925, column: 59)
!597 = !DISubprogram(name: "raise_exception", scope: !453, file: !453, line: 1759, type: !142, isLocal: true, isDefinition: true, scopeLine: 1760, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @raise_exception, variables: !598)
!598 = !{!599, !600, !601, !602, !603, !604, !605, !606, !613}
!599 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !597, file: !453, line: 1759, type: !20)
!600 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !597, file: !453, line: 1759, type: !20)
!601 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exc", scope: !597, file: !453, line: 1761, type: !20)
!602 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exc_args", scope: !597, file: !453, line: 1762, type: !20)
!603 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !597, file: !453, line: 1762, type: !20)
!604 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num_args", scope: !597, file: !453, line: 1763, type: !59)
!605 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !597, file: !453, line: 1763, type: !59)
!606 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !607, file: !453, line: 1775, type: !20)
!607 = distinct !DILexicalBlock(scope: !608, file: !453, line: 1775, column: 16)
!608 = distinct !DILexicalBlock(scope: !609, file: !453, line: 1774, column: 30)
!609 = distinct !DILexicalBlock(scope: !610, file: !453, line: 1774, column: 13)
!610 = distinct !DILexicalBlock(scope: !611, file: !453, line: 1772, column: 36)
!611 = distinct !DILexicalBlock(scope: !612, file: !453, line: 1772, column: 5)
!612 = distinct !DILexicalBlock(scope: !597, file: !453, line: 1772, column: 5)
!613 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !614, file: !453, line: 1781, type: !20)
!614 = distinct !DILexicalBlock(scope: !597, file: !453, line: 1781, column: 8)
!615 = !DISubprogram(name: "raise_memoryerror", scope: !453, file: !453, line: 2390, type: !132, isLocal: true, isDefinition: true, scopeLine: 2391, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @raise_memoryerror, variables: !616)
!616 = !{!617}
!617 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !615, file: !453, line: 2390, type: !20)
!618 = !DISubprogram(name: "test_config", scope: !453, file: !453, line: 46, type: !132, isLocal: true, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_config, variables: !619)
!619 = !{!620}
!620 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !618, file: !453, line: 46, type: !20)
!621 = !DISubprogram(name: "test_sizeof_c_types", scope: !453, file: !453, line: 68, type: !132, isLocal: true, isDefinition: true, scopeLine: 69, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_sizeof_c_types, variables: !622)
!622 = !{!623}
!623 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !621, file: !453, line: 68, type: !20)
!624 = !DISubprogram(name: "test_datetime_capi", scope: !453, file: !453, line: 1812, type: !142, isLocal: true, isDefinition: true, scopeLine: 1812, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @test_datetime_capi, variables: !625)
!625 = !{!626, !627}
!626 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !624, file: !453, line: 1812, type: !20)
!627 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !624, file: !453, line: 1812, type: !20)
!628 = !DISubprogram(name: "test_list_api", scope: !453, file: !453, line: 131, type: !132, isLocal: true, isDefinition: true, scopeLine: 132, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_list_api, variables: !629)
!629 = !{!630, !631, !632, !633, !637, !641, !645, !649, !653}
!630 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !628, file: !453, line: 131, type: !20)
!631 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "list", scope: !628, file: !453, line: 133, type: !20)
!632 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !628, file: !453, line: 134, type: !59)
!633 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "anint", scope: !634, file: !453, line: 143, type: !20)
!634 = distinct !DILexicalBlock(scope: !635, file: !453, line: 142, column: 30)
!635 = distinct !DILexicalBlock(scope: !636, file: !453, line: 142, column: 5)
!636 = distinct !DILexicalBlock(scope: !628, file: !453, line: 142, column: 5)
!637 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !638, file: !453, line: 145, type: !20)
!638 = distinct !DILexicalBlock(scope: !639, file: !453, line: 145, column: 16)
!639 = distinct !DILexicalBlock(scope: !640, file: !453, line: 144, column: 45)
!640 = distinct !DILexicalBlock(scope: !634, file: !453, line: 144, column: 13)
!641 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !642, file: !453, line: 153, type: !20)
!642 = distinct !DILexicalBlock(scope: !643, file: !453, line: 153, column: 12)
!643 = distinct !DILexicalBlock(scope: !644, file: !453, line: 152, column: 17)
!644 = distinct !DILexicalBlock(scope: !628, file: !453, line: 152, column: 9)
!645 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "anint", scope: !646, file: !453, line: 158, type: !20)
!646 = distinct !DILexicalBlock(scope: !647, file: !453, line: 157, column: 30)
!647 = distinct !DILexicalBlock(scope: !648, file: !453, line: 157, column: 5)
!648 = distinct !DILexicalBlock(scope: !628, file: !453, line: 157, column: 5)
!649 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !650, file: !453, line: 162, type: !20)
!650 = distinct !DILexicalBlock(scope: !651, file: !453, line: 162, column: 16)
!651 = distinct !DILexicalBlock(scope: !652, file: !453, line: 159, column: 46)
!652 = distinct !DILexicalBlock(scope: !646, file: !453, line: 159, column: 13)
!653 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !654, file: !453, line: 166, type: !20)
!654 = distinct !DILexicalBlock(scope: !628, file: !453, line: 166, column: 8)
!655 = !DISubprogram(name: "test_dict_iteration", scope: !453, file: !453, line: 224, type: !132, isLocal: true, isDefinition: true, scopeLine: 225, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_dict_iteration, variables: !656)
!656 = !{!657, !658}
!657 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !655, file: !453, line: 224, type: !20)
!658 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !655, file: !453, line: 226, type: !59)
!659 = !DISubprogram(name: "test_dict_inner", scope: !453, file: !453, line: 174, type: !660, isLocal: true, isDefinition: true, scopeLine: 175, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32)* @test_dict_inner, variables: !662)
!660 = !DISubroutineType(types: !661)
!661 = !{!59, !59}
!662 = !{!663, !664, !665, !666, !667, !668, !669, !670, !677, !679, !681, !685, !687}
!663 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "count", arg: 1, scope: !659, file: !453, line: 174, type: !59)
!664 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !659, file: !453, line: 176, type: !26)
!665 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iterations", scope: !659, file: !453, line: 176, type: !26)
!666 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !659, file: !453, line: 177, type: !59)
!667 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !659, file: !453, line: 178, type: !20)
!668 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !659, file: !453, line: 179, type: !20)
!669 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !659, file: !453, line: 179, type: !20)
!670 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !671, file: !453, line: 190, type: !20)
!671 = distinct !DILexicalBlock(scope: !672, file: !453, line: 190, column: 16)
!672 = distinct !DILexicalBlock(scope: !673, file: !453, line: 189, column: 45)
!673 = distinct !DILexicalBlock(scope: !674, file: !453, line: 189, column: 13)
!674 = distinct !DILexicalBlock(scope: !675, file: !453, line: 184, column: 33)
!675 = distinct !DILexicalBlock(scope: !676, file: !453, line: 184, column: 5)
!676 = distinct !DILexicalBlock(scope: !659, file: !453, line: 184, column: 5)
!677 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !678, file: !453, line: 193, type: !20)
!678 = distinct !DILexicalBlock(scope: !674, file: !453, line: 193, column: 12)
!679 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !680, file: !453, line: 197, type: !20)
!680 = distinct !DILexicalBlock(scope: !659, file: !453, line: 196, column: 45)
!681 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !682, file: !453, line: 205, type: !20)
!682 = distinct !DILexicalBlock(scope: !683, file: !453, line: 205, column: 16)
!683 = distinct !DILexicalBlock(scope: !684, file: !453, line: 204, column: 45)
!684 = distinct !DILexicalBlock(scope: !680, file: !453, line: 204, column: 13)
!685 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !686, file: !453, line: 208, type: !20)
!686 = distinct !DILexicalBlock(scope: !680, file: !453, line: 208, column: 12)
!687 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !688, file: !453, line: 211, type: !20)
!688 = distinct !DILexicalBlock(scope: !659, file: !453, line: 211, column: 8)
!689 = !DISubprogram(name: "test_lazy_hash_inheritance", scope: !453, file: !453, line: 284, type: !132, isLocal: true, isDefinition: true, scopeLine: 285, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_lazy_hash_inheritance, variables: !690)
!690 = !{!691, !692, !693, !694, !695, !699, !703, !707, !711}
!691 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !689, file: !453, line: 284, type: !20)
!692 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "type", scope: !689, file: !453, line: 286, type: !380)
!693 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !689, file: !453, line: 287, type: !20)
!694 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hash", scope: !689, file: !453, line: 288, type: !234)
!695 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !696, file: !453, line: 311, type: !20)
!696 = distinct !DILexicalBlock(scope: !697, file: !453, line: 311, column: 12)
!697 = distinct !DILexicalBlock(scope: !698, file: !453, line: 307, column: 38)
!698 = distinct !DILexicalBlock(scope: !689, file: !453, line: 307, column: 9)
!699 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !700, file: !453, line: 321, type: !20)
!700 = distinct !DILexicalBlock(scope: !701, file: !453, line: 321, column: 12)
!701 = distinct !DILexicalBlock(scope: !702, file: !453, line: 316, column: 43)
!702 = distinct !DILexicalBlock(scope: !689, file: !453, line: 316, column: 9)
!703 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !704, file: !453, line: 329, type: !20)
!704 = distinct !DILexicalBlock(scope: !705, file: !453, line: 329, column: 12)
!705 = distinct !DILexicalBlock(scope: !706, file: !453, line: 325, column: 38)
!706 = distinct !DILexicalBlock(scope: !689, file: !453, line: 325, column: 9)
!707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !708, file: !453, line: 337, type: !20)
!708 = distinct !DILexicalBlock(scope: !709, file: !453, line: 337, column: 12)
!709 = distinct !DILexicalBlock(scope: !710, file: !453, line: 333, column: 47)
!710 = distinct !DILexicalBlock(scope: !689, file: !453, line: 333, column: 9)
!711 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !712, file: !453, line: 341, type: !20)
!712 = distinct !DILexicalBlock(scope: !689, file: !453, line: 341, column: 8)
!713 = !DISubprogram(name: "test_long_api", scope: !453, file: !453, line: 380, type: !132, isLocal: true, isDefinition: true, scopeLine: 381, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_long_api, variables: !714)
!714 = !{!715}
!715 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !713, file: !453, line: 380, type: !20)
!716 = !DISubprogram(name: "test_long_api_inner", scope: !717, file: !717, line: 11, type: !718, isLocal: true, isDefinition: true, scopeLine: 12, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object* (i8*)*)* @test_long_api_inner, variables: !723)
!717 = !DIFile(filename: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1/Modules/testcapi_long.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!718 = !DISubroutineType(types: !719)
!719 = !{!20, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64, align: 64)
!721 = !DISubroutineType(types: !722)
!722 = !{!20, !44}
!723 = !{!724, !725, !727, !728, !729, !730, !734, !738, !739, !740, !741, !743, !745, !747, !748, !749, !750, !751, !753, !755, !757, !759, !761, !763, !765, !768, !770, !773, !775, !777, !778}
!724 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "error", arg: 1, scope: !716, file: !717, line: 11, type: !720)
!725 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "NBITS", scope: !716, file: !717, line: 13, type: !726)
!726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !59)
!727 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !716, file: !717, line: 14, type: !112)
!728 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyresult", scope: !716, file: !717, line: 15, type: !20)
!729 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !716, file: !717, line: 16, type: !59)
!730 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !731, file: !717, line: 30, type: !59)
!731 = distinct !DILexicalBlock(scope: !732, file: !717, line: 29, column: 5)
!732 = distinct !DILexicalBlock(scope: !733, file: !717, line: 26, column: 5)
!733 = distinct !DILexicalBlock(scope: !716, file: !717, line: 26, column: 5)
!734 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "in", scope: !735, file: !717, line: 32, type: !32)
!735 = distinct !DILexicalBlock(scope: !736, file: !717, line: 31, column: 33)
!736 = distinct !DILexicalBlock(scope: !737, file: !717, line: 31, column: 9)
!737 = distinct !DILexicalBlock(scope: !731, file: !717, line: 31, column: 9)
!738 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !735, file: !717, line: 32, type: !32)
!739 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uin", scope: !735, file: !717, line: 33, type: !112)
!740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uout", scope: !735, file: !717, line: 33, type: !112)
!741 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !742, file: !717, line: 56, type: !20)
!742 = distinct !DILexicalBlock(scope: !735, file: !717, line: 56, column: 16)
!743 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !744, file: !717, line: 71, type: !20)
!744 = distinct !DILexicalBlock(scope: !735, file: !717, line: 71, column: 16)
!745 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "one", scope: !746, file: !717, line: 80, type: !20)
!746 = distinct !DILexicalBlock(scope: !716, file: !717, line: 79, column: 5)
!747 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !746, file: !717, line: 80, type: !20)
!748 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !746, file: !717, line: 80, type: !20)
!749 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !746, file: !717, line: 81, type: !32)
!750 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uout", scope: !746, file: !717, line: 82, type: !112)
!751 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !752, file: !717, line: 104, type: !20)
!752 = distinct !DILexicalBlock(scope: !746, file: !717, line: 104, column: 12)
!753 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !754, file: !717, line: 113, type: !20)
!754 = distinct !DILexicalBlock(scope: !746, file: !717, line: 113, column: 12)
!755 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !756, file: !717, line: 132, type: !20)
!756 = distinct !DILexicalBlock(scope: !746, file: !717, line: 132, column: 12)
!757 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !758, file: !717, line: 151, type: !20)
!758 = distinct !DILexicalBlock(scope: !746, file: !717, line: 151, column: 12)
!759 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !760, file: !717, line: 157, type: !20)
!760 = distinct !DILexicalBlock(scope: !746, file: !717, line: 157, column: 12)
!761 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !762, file: !717, line: 172, type: !20)
!762 = distinct !DILexicalBlock(scope: !746, file: !717, line: 172, column: 12)
!763 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !764, file: !717, line: 174, type: !20)
!764 = distinct !DILexicalBlock(scope: !746, file: !717, line: 174, column: 12)
!765 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !766, file: !717, line: 174, type: !20)
!766 = distinct !DILexicalBlock(scope: !767, file: !717, line: 174, column: 97)
!767 = distinct !DILexicalBlock(scope: !764, file: !717, line: 174, column: 63)
!768 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !769, file: !717, line: 175, type: !20)
!769 = distinct !DILexicalBlock(scope: !746, file: !717, line: 175, column: 12)
!770 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !771, file: !717, line: 175, type: !20)
!771 = distinct !DILexicalBlock(scope: !772, file: !717, line: 175, column: 97)
!772 = distinct !DILexicalBlock(scope: !769, file: !717, line: 175, column: 63)
!773 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !774, file: !717, line: 176, type: !20)
!774 = distinct !DILexicalBlock(scope: !746, file: !717, line: 176, column: 12)
!775 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !776, file: !717, line: 181, type: !32)
!776 = distinct !DILexicalBlock(scope: !716, file: !717, line: 180, column: 5)
!777 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uout", scope: !776, file: !717, line: 182, type: !112)
!778 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !779, file: !717, line: 202, type: !20)
!779 = distinct !DILexicalBlock(scope: !776, file: !717, line: 202, column: 12)
!780 = !DISubprogram(name: "raise_test_long_error", scope: !453, file: !453, line: 365, type: !721, isLocal: true, isDefinition: true, scopeLine: 366, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*)* @raise_test_long_error, variables: !781)
!781 = !{!782}
!782 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "msg", arg: 1, scope: !780, file: !453, line: 365, type: !44)
!783 = !DISubprogram(name: "raiseTestError", scope: !453, file: !453, line: 23, type: !784, isLocal: true, isDefinition: true, scopeLine: 24, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*, i8*)* @raiseTestError, variables: !786)
!784 = !DISubroutineType(types: !785)
!785 = !{!20, !44, !44}
!786 = !{!787, !788}
!787 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "test_name", arg: 1, scope: !783, file: !453, line: 23, type: !44)
!788 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "msg", arg: 2, scope: !783, file: !453, line: 23, type: !44)
!789 = !DISubprogram(name: "test_xincref_doesnt_leak", scope: !453, file: !453, line: 2663, type: !132, isLocal: true, isDefinition: true, scopeLine: 2664, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_xincref_doesnt_leak, variables: !790)
!790 = !{!791, !792, !793, !795, !797, !799}
!791 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ob", arg: 1, scope: !789, file: !453, line: 2663, type: !20)
!792 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !789, file: !453, line: 2665, type: !20)
!793 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xincref_tmp", scope: !794, file: !453, line: 2666, type: !20)
!794 = distinct !DILexicalBlock(scope: !789, file: !453, line: 2666, column: 8)
!795 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !796, file: !453, line: 2667, type: !20)
!796 = distinct !DILexicalBlock(scope: !789, file: !453, line: 2667, column: 8)
!797 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !798, file: !453, line: 2668, type: !20)
!798 = distinct !DILexicalBlock(scope: !789, file: !453, line: 2668, column: 8)
!799 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !800, file: !453, line: 2669, type: !20)
!800 = distinct !DILexicalBlock(scope: !789, file: !453, line: 2669, column: 8)
!801 = !DISubprogram(name: "_test_incref", scope: !453, file: !453, line: 2656, type: !132, isLocal: true, isDefinition: true, scopeLine: 2657, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @_test_incref, variables: !802)
!802 = !{!803}
!803 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ob", arg: 1, scope: !801, file: !453, line: 2656, type: !20)
!804 = !DISubprogram(name: "test_incref_doesnt_leak", scope: !453, file: !453, line: 2674, type: !132, isLocal: true, isDefinition: true, scopeLine: 2675, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_incref_doesnt_leak, variables: !805)
!805 = !{!806, !807, !808, !810, !812}
!806 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ob", arg: 1, scope: !804, file: !453, line: 2674, type: !20)
!807 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !804, file: !453, line: 2676, type: !20)
!808 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !809, file: !453, line: 2678, type: !20)
!809 = distinct !DILexicalBlock(scope: !804, file: !453, line: 2678, column: 8)
!810 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !811, file: !453, line: 2679, type: !20)
!811 = distinct !DILexicalBlock(scope: !804, file: !453, line: 2679, column: 8)
!812 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !813, file: !453, line: 2680, type: !20)
!813 = distinct !DILexicalBlock(scope: !804, file: !453, line: 2680, column: 8)
!814 = !DISubprogram(name: "test_xdecref_doesnt_leak", scope: !453, file: !453, line: 2685, type: !132, isLocal: true, isDefinition: true, scopeLine: 2686, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_xdecref_doesnt_leak, variables: !815)
!815 = !{!816, !817, !819}
!816 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ob", arg: 1, scope: !814, file: !453, line: 2685, type: !20)
!817 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !818, file: !453, line: 2687, type: !20)
!818 = distinct !DILexicalBlock(scope: !814, file: !453, line: 2687, column: 8)
!819 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !820, file: !453, line: 2687, type: !20)
!820 = distinct !DILexicalBlock(scope: !821, file: !453, line: 2687, column: 110)
!821 = distinct !DILexicalBlock(scope: !818, file: !453, line: 2687, column: 76)
!822 = !DISubprogram(name: "test_decref_doesnt_leak", scope: !453, file: !453, line: 2692, type: !132, isLocal: true, isDefinition: true, scopeLine: 2693, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_decref_doesnt_leak, variables: !823)
!823 = !{!824, !825}
!824 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ob", arg: 1, scope: !822, file: !453, line: 2692, type: !20)
!825 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !826, file: !453, line: 2694, type: !20)
!826 = distinct !DILexicalBlock(scope: !822, file: !453, line: 2694, column: 8)
!827 = !DISubprogram(name: "test_incref_decref_API", scope: !453, file: !453, line: 2699, type: !132, isLocal: true, isDefinition: true, scopeLine: 2700, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_incref_decref_API, variables: !828)
!828 = !{!829, !830}
!829 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ob", arg: 1, scope: !827, file: !453, line: 2699, type: !20)
!830 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !827, file: !453, line: 2701, type: !20)
!831 = !DISubprogram(name: "test_long_and_overflow", scope: !453, file: !453, line: 428, type: !132, isLocal: true, isDefinition: true, scopeLine: 429, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_long_and_overflow, variables: !832)
!832 = !{!833, !834, !835, !836, !837, !838, !839, !841, !845, !847, !849, !851, !853, !857, !859, !861, !863, !865, !867, !869}
!833 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !831, file: !453, line: 428, type: !20)
!834 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num", scope: !831, file: !453, line: 430, type: !20)
!835 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "one", scope: !831, file: !453, line: 430, type: !20)
!836 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !831, file: !453, line: 430, type: !20)
!837 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !831, file: !453, line: 431, type: !32)
!838 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "overflow", scope: !831, file: !453, line: 432, type: !59)
!839 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !840, file: !453, line: 441, type: !20)
!840 = distinct !DILexicalBlock(scope: !831, file: !453, line: 441, column: 8)
!841 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !842, file: !453, line: 457, type: !20)
!842 = distinct !DILexicalBlock(scope: !843, file: !453, line: 457, column: 12)
!843 = distinct !DILexicalBlock(scope: !844, file: !453, line: 456, column: 28)
!844 = distinct !DILexicalBlock(scope: !831, file: !453, line: 456, column: 9)
!845 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !846, file: !453, line: 461, type: !20)
!846 = distinct !DILexicalBlock(scope: !831, file: !453, line: 461, column: 8)
!847 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !848, file: !453, line: 462, type: !20)
!848 = distinct !DILexicalBlock(scope: !831, file: !453, line: 462, column: 8)
!849 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !850, file: !453, line: 468, type: !20)
!850 = distinct !DILexicalBlock(scope: !831, file: !453, line: 468, column: 8)
!851 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !852, file: !453, line: 485, type: !20)
!852 = distinct !DILexicalBlock(scope: !831, file: !453, line: 485, column: 8)
!853 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !854, file: !453, line: 501, type: !20)
!854 = distinct !DILexicalBlock(scope: !855, file: !453, line: 501, column: 12)
!855 = distinct !DILexicalBlock(scope: !856, file: !453, line: 500, column: 28)
!856 = distinct !DILexicalBlock(scope: !831, file: !453, line: 500, column: 9)
!857 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !858, file: !453, line: 505, type: !20)
!858 = distinct !DILexicalBlock(scope: !831, file: !453, line: 505, column: 8)
!859 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !860, file: !453, line: 506, type: !20)
!860 = distinct !DILexicalBlock(scope: !831, file: !453, line: 506, column: 8)
!861 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !862, file: !453, line: 512, type: !20)
!862 = distinct !DILexicalBlock(scope: !831, file: !453, line: 512, column: 8)
!863 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !864, file: !453, line: 528, type: !20)
!864 = distinct !DILexicalBlock(scope: !831, file: !453, line: 528, column: 8)
!865 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !866, file: !453, line: 543, type: !20)
!866 = distinct !DILexicalBlock(scope: !831, file: !453, line: 543, column: 8)
!867 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !868, file: !453, line: 558, type: !20)
!868 = distinct !DILexicalBlock(scope: !831, file: !453, line: 558, column: 8)
!869 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !870, file: !453, line: 573, type: !20)
!870 = distinct !DILexicalBlock(scope: !831, file: !453, line: 573, column: 8)
!871 = !DISubprogram(name: "test_long_as_double", scope: !453, file: !453, line: 794, type: !132, isLocal: true, isDefinition: true, scopeLine: 795, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_long_as_double, variables: !872)
!872 = !{!873, !874}
!873 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !871, file: !453, line: 794, type: !20)
!874 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !871, file: !453, line: 796, type: !501)
!875 = !DISubprogram(name: "test_long_as_size_t", scope: !453, file: !453, line: 758, type: !132, isLocal: true, isDefinition: true, scopeLine: 759, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_long_as_size_t, variables: !876)
!876 = !{!877, !878, !879}
!877 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !875, file: !453, line: 758, type: !20)
!878 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out_u", scope: !875, file: !453, line: 760, type: !110)
!879 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out_s", scope: !875, file: !453, line: 761, type: !26)
!880 = !DISubprogram(name: "test_long_numbits", scope: !453, file: !453, line: 1700, type: !132, isLocal: true, isDefinition: true, scopeLine: 1701, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_long_numbits, variables: !881)
!881 = !{!882, !883, !892, !893, !897, !898, !899}
!882 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !880, file: !453, line: 1700, type: !20)
!883 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "testcases", scope: !880, file: !453, line: 1706, type: !884)
!884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !885, size: 2880, align: 64, elements: !890)
!885 = !DICompositeType(tag: DW_TAG_structure_type, name: "triple", scope: !880, file: !453, line: 1702, size: 192, align: 64, elements: !886)
!886 = !{!887, !888, !889}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !885, file: !453, line: 1703, baseType: !32, size: 64, align: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !885, file: !453, line: 1704, baseType: !110, size: 64, align: 64, offset: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !885, file: !453, line: 1705, baseType: !59, size: 32, align: 32, offset: 128)
!890 = !{!891}
!891 = !DISubrange(count: 15)
!892 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !880, file: !453, line: 1721, type: !59)
!893 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nbits", scope: !894, file: !453, line: 1724, type: !110)
!894 = distinct !DILexicalBlock(scope: !895, file: !453, line: 1723, column: 178)
!895 = distinct !DILexicalBlock(scope: !896, file: !453, line: 1723, column: 5)
!896 = distinct !DILexicalBlock(scope: !880, file: !453, line: 1723, column: 5)
!897 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sign", scope: !894, file: !453, line: 1725, type: !59)
!898 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "plong", scope: !894, file: !453, line: 1726, type: !20)
!899 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !900, file: !453, line: 1734, type: !20)
!900 = distinct !DILexicalBlock(scope: !894, file: !453, line: 1734, column: 12)
!901 = !DISubprogram(name: "test_k_code", scope: !453, file: !453, line: 1020, type: !132, isLocal: true, isDefinition: true, scopeLine: 1021, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_k_code, variables: !902)
!902 = !{!903, !904, !905, !906, !907, !909}
!903 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !901, file: !453, line: 1020, type: !20)
!904 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuple", scope: !901, file: !453, line: 1022, type: !20)
!905 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num", scope: !901, file: !453, line: 1022, type: !20)
!906 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !901, file: !453, line: 1023, type: !112)
!907 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !908, file: !453, line: 1048, type: !20)
!908 = distinct !DILexicalBlock(scope: !901, file: !453, line: 1048, column: 8)
!909 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !910, file: !453, line: 1067, type: !20)
!910 = distinct !DILexicalBlock(scope: !901, file: !453, line: 1067, column: 8)
!911 = !DISubprogram(name: "test_empty_argparse", scope: !453, file: !453, line: 1652, type: !132, isLocal: true, isDefinition: true, scopeLine: 1653, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_empty_argparse, variables: !912)
!912 = !{!913, !914, !915, !916, !917, !919, !921}
!913 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !911, file: !453, line: 1652, type: !20)
!914 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuple", scope: !911, file: !453, line: 1655, type: !20)
!915 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !911, file: !453, line: 1655, type: !20)
!916 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !911, file: !453, line: 1657, type: !59)
!917 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !918, file: !453, line: 1668, type: !20)
!918 = distinct !DILexicalBlock(scope: !911, file: !453, line: 1668, column: 8)
!919 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !920, file: !453, line: 1669, type: !20)
!920 = distinct !DILexicalBlock(scope: !911, file: !453, line: 1669, column: 8)
!921 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !922, file: !453, line: 1669, type: !20)
!922 = distinct !DILexicalBlock(scope: !923, file: !453, line: 1669, column: 96)
!923 = distinct !DILexicalBlock(scope: !920, file: !453, line: 1669, column: 62)
!924 = !DISubprogram(name: "parse_tuple_and_keywords", scope: !453, file: !453, line: 1267, type: !142, isLocal: true, isDefinition: true, scopeLine: 1268, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @parse_tuple_and_keywords, variables: !925)
!925 = !{!926, !927, !928, !929, !930, !931, !932, !933, !934, !938, !939, !943, !944, !945, !949, !954}
!926 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !924, file: !453, line: 1267, type: !20)
!927 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !924, file: !453, line: 1267, type: !20)
!928 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sub_args", scope: !924, file: !453, line: 1269, type: !20)
!929 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sub_kwargs", scope: !924, file: !453, line: 1270, type: !20)
!930 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sub_format", scope: !924, file: !453, line: 1271, type: !67)
!931 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sub_keywords", scope: !924, file: !453, line: 1272, type: !20)
!932 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !924, file: !453, line: 1274, type: !26)
!933 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !924, file: !453, line: 1274, type: !26)
!934 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "keywords", scope: !924, file: !453, line: 1275, type: !935)
!935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 576, align: 64, elements: !936)
!936 = !{!937}
!937 = !DISubrange(count: 9)
!938 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o", scope: !924, file: !453, line: 1276, type: !20)
!939 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "converted", scope: !924, file: !453, line: 1277, type: !940)
!940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 512, align: 64, elements: !941)
!941 = !{!942}
!942 = !DISubrange(count: 8)
!943 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !924, file: !453, line: 1279, type: !59)
!944 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "return_value", scope: !924, file: !453, line: 1280, type: !20)
!945 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffers", scope: !924, file: !453, line: 1282, type: !946)
!946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 2048, align: 64, elements: !947)
!947 = !{!942, !948}
!948 = !DISubrange(count: 4)
!949 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !950, file: !453, line: 1329, type: !20)
!950 = distinct !DILexicalBlock(scope: !951, file: !453, line: 1329, column: 12)
!951 = distinct !DILexicalBlock(scope: !952, file: !453, line: 1328, column: 32)
!952 = distinct !DILexicalBlock(scope: !953, file: !453, line: 1328, column: 5)
!953 = distinct !DILexicalBlock(scope: !924, file: !453, line: 1328, column: 5)
!954 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !955, file: !453, line: 1329, type: !20)
!955 = distinct !DILexicalBlock(scope: !956, file: !453, line: 1329, column: 108)
!956 = distinct !DILexicalBlock(scope: !950, file: !453, line: 1329, column: 74)
!957 = !DISubprogram(name: "test_null_strings", scope: !453, file: !453, line: 1749, type: !132, isLocal: true, isDefinition: true, scopeLine: 1750, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_null_strings, variables: !958)
!958 = !{!959, !960, !961, !962, !963, !965, !968, !970}
!959 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !957, file: !453, line: 1749, type: !20)
!960 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o1", scope: !957, file: !453, line: 1751, type: !20)
!961 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "o2", scope: !957, file: !453, line: 1751, type: !20)
!962 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuple", scope: !957, file: !453, line: 1752, type: !20)
!963 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !964, file: !453, line: 1753, type: !20)
!964 = distinct !DILexicalBlock(scope: !957, file: !453, line: 1753, column: 8)
!965 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !966, file: !453, line: 1753, type: !20)
!966 = distinct !DILexicalBlock(scope: !967, file: !453, line: 1753, column: 94)
!967 = distinct !DILexicalBlock(scope: !964, file: !453, line: 1753, column: 60)
!968 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !969, file: !453, line: 1754, type: !20)
!969 = distinct !DILexicalBlock(scope: !957, file: !453, line: 1754, column: 8)
!970 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !971, file: !453, line: 1754, type: !20)
!971 = distinct !DILexicalBlock(scope: !972, file: !453, line: 1754, column: 94)
!972 = distinct !DILexicalBlock(scope: !969, file: !453, line: 1754, column: 60)
!973 = !DISubprogram(name: "test_string_from_format", scope: !453, file: !453, line: 1958, type: !142, isLocal: true, isDefinition: true, scopeLine: 1959, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @test_string_from_format, variables: !974)
!974 = !{!975, !976, !977, !978, !979, !981, !983, !985, !987, !989, !991, !993, !995, !997}
!975 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !973, file: !453, line: 1958, type: !20)
!976 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !973, file: !453, line: 1958, type: !20)
!977 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !973, file: !453, line: 1960, type: !20)
!978 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "msg", scope: !973, file: !453, line: 1961, type: !67)
!979 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !980, file: !453, line: 1973, type: !20)
!980 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1973, column: 191)
!981 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !982, file: !453, line: 1974, type: !20)
!982 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1974, column: 194)
!983 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !984, file: !453, line: 1976, type: !20)
!984 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1976, column: 200)
!985 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !986, file: !453, line: 1979, type: !20)
!986 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1979, column: 200)
!987 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !988, file: !453, line: 1980, type: !20)
!988 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1980, column: 203)
!989 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !990, file: !453, line: 1981, type: !20)
!990 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1981, column: 196)
!991 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !992, file: !453, line: 1985, type: !20)
!992 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1985, column: 210)
!993 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !994, file: !453, line: 1986, type: !20)
!994 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1986, column: 201)
!995 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !996, file: !453, line: 1992, type: !20)
!996 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1992, column: 8)
!997 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !998, file: !453, line: 1992, type: !20)
!998 = distinct !DILexicalBlock(scope: !999, file: !453, line: 1992, column: 98)
!999 = distinct !DILexicalBlock(scope: !996, file: !453, line: 1992, column: 64)
!1000 = !DISubprogram(name: "test_with_docstring", scope: !453, file: !453, line: 2017, type: !132, isLocal: true, isDefinition: true, scopeLine: 2018, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_with_docstring, variables: !1001)
!1001 = !{!1002}
!1002 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1000, file: !453, line: 2017, type: !20)
!1003 = !DISubprogram(name: "test_string_to_double", scope: !453, file: !453, line: 2024, type: !132, isLocal: true, isDefinition: true, scopeLine: 2024, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_string_to_double, variables: !1004)
!1004 = !{!1005, !1006, !1007}
!1005 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1003, file: !453, line: 2024, type: !20)
!1006 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1003, file: !453, line: 2025, type: !501)
!1007 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "msg", scope: !1003, file: !453, line: 2026, type: !67)
!1008 = !DISubprogram(name: "test_unicode_compare_with_ascii", scope: !453, file: !453, line: 2000, type: !132, isLocal: true, isDefinition: true, scopeLine: 2000, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_unicode_compare_with_ascii, variables: !1009)
!1009 = !{!1010, !1011, !1012, !1013}
!1010 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1008, file: !453, line: 2000, type: !20)
!1011 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "py_s", scope: !1008, file: !453, line: 2001, type: !20)
!1012 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1008, file: !453, line: 2002, type: !59)
!1013 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1014, file: !453, line: 2006, type: !20)
!1014 = distinct !DILexicalBlock(scope: !1008, file: !453, line: 2006, column: 8)
!1015 = !DISubprogram(name: "test_capsule", scope: !453, file: !453, line: 2100, type: !142, isLocal: true, isDefinition: true, scopeLine: 2101, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @test_capsule, variables: !1016)
!1016 = !{!1017, !1018, !1019, !1020, !1021, !1022, !1023, !1032, !1034, !1036, !1038, !1042, !1048, !1052, !1056, !1058, !1062, !1064, !1066}
!1017 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1015, file: !453, line: 2100, type: !20)
!1018 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1015, file: !453, line: 2100, type: !20)
!1019 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "object", scope: !1015, file: !453, line: 2102, type: !20)
!1020 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "error", scope: !1015, file: !453, line: 2103, type: !44)
!1021 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pointer", scope: !1015, file: !453, line: 2104, type: !105)
!1022 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pointer2", scope: !1015, file: !453, line: 2105, type: !105)
!1023 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "known_capsules", scope: !1015, file: !453, line: 2106, type: !1024)
!1024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1025, size: 768, align: 64, elements: !1031)
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "known_capsule", file: !453, line: 2097, baseType: !1026)
!1026 = !DICompositeType(tag: DW_TAG_structure_type, file: !453, line: 2093, size: 192, align: 64, elements: !1027)
!1027 = !{!1028, !1029, !1030}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1026, file: !453, line: 2094, baseType: !67, size: 64, align: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !1026, file: !453, line: 2095, baseType: !67, size: 64, align: 64, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "attribute", scope: !1026, file: !453, line: 2096, baseType: !67, size: 64, align: 64, offset: 128)
!1031 = !{!948}
!1032 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "known", scope: !1015, file: !453, line: 2113, type: !1033)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64, align: 64)
!1034 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1035, file: !453, line: 2130, type: !20)
!1035 = distinct !DILexicalBlock(scope: !1015, file: !453, line: 2130, column: 8)
!1036 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1037, file: !453, line: 2156, type: !20)
!1037 = distinct !DILexicalBlock(scope: !1015, file: !453, line: 2156, column: 8)
!1038 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "module", scope: !1039, file: !453, line: 2175, type: !20)
!1039 = distinct !DILexicalBlock(scope: !1040, file: !453, line: 2161, column: 76)
!1040 = distinct !DILexicalBlock(scope: !1041, file: !453, line: 2161, column: 5)
!1041 = distinct !DILexicalBlock(scope: !1015, file: !453, line: 2161, column: 5)
!1042 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1043, file: !453, line: 2179, type: !20)
!1043 = distinct !DILexicalBlock(scope: !1044, file: !453, line: 2179, column: 20)
!1044 = distinct !DILexicalBlock(scope: !1045, file: !453, line: 2178, column: 27)
!1045 = distinct !DILexicalBlock(scope: !1046, file: !453, line: 2178, column: 17)
!1046 = distinct !DILexicalBlock(scope: !1047, file: !453, line: 2176, column: 21)
!1047 = distinct !DILexicalBlock(scope: !1039, file: !453, line: 2176, column: 13)
!1048 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1049, file: !453, line: 2184, type: !20)
!1049 = distinct !DILexicalBlock(scope: !1050, file: !453, line: 2184, column: 20)
!1050 = distinct !DILexicalBlock(scope: !1051, file: !453, line: 2183, column: 26)
!1051 = distinct !DILexicalBlock(scope: !1046, file: !453, line: 2183, column: 17)
!1052 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1053, file: !453, line: 2190, type: !20)
!1053 = distinct !DILexicalBlock(scope: !1054, file: !453, line: 2190, column: 20)
!1054 = distinct !DILexicalBlock(scope: !1055, file: !453, line: 2189, column: 36)
!1055 = distinct !DILexicalBlock(scope: !1046, file: !453, line: 2189, column: 17)
!1056 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1057, file: !453, line: 2191, type: !20)
!1057 = distinct !DILexicalBlock(scope: !1054, file: !453, line: 2191, column: 20)
!1058 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1059, file: !453, line: 2196, type: !20)
!1059 = distinct !DILexicalBlock(scope: !1060, file: !453, line: 2196, column: 20)
!1060 = distinct !DILexicalBlock(scope: !1061, file: !453, line: 2195, column: 27)
!1061 = distinct !DILexicalBlock(scope: !1046, file: !453, line: 2195, column: 17)
!1062 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1063, file: !453, line: 2197, type: !20)
!1063 = distinct !DILexicalBlock(scope: !1060, file: !453, line: 2197, column: 20)
!1064 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1065, file: !453, line: 2206, type: !20)
!1065 = distinct !DILexicalBlock(scope: !1046, file: !453, line: 2206, column: 16)
!1066 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1067, file: !453, line: 2207, type: !20)
!1067 = distinct !DILexicalBlock(scope: !1046, file: !453, line: 2207, column: 16)
!1068 = !DISubprogram(name: "capsule_destructor", scope: !453, file: !453, line: 2080, type: !52, isLocal: true, isDefinition: true, scopeLine: 2080, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._object*)* @capsule_destructor, variables: !1069)
!1069 = !{!1070}
!1070 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "o", arg: 1, scope: !1068, file: !453, line: 2080, type: !20)
!1071 = !DISubprogram(name: "getargs_tuple", scope: !453, file: !453, line: 864, type: !142, isLocal: true, isDefinition: true, scopeLine: 865, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_tuple, variables: !1072)
!1072 = !{!1073, !1074, !1075, !1076, !1077}
!1073 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1071, file: !453, line: 864, type: !20)
!1074 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1071, file: !453, line: 864, type: !20)
!1075 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !1071, file: !453, line: 866, type: !59)
!1076 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !1071, file: !453, line: 866, type: !59)
!1077 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !1071, file: !453, line: 866, type: !59)
!1078 = !DISubprogram(name: "getargs_keywords", scope: !453, file: !453, line: 874, type: !151, isLocal: true, isDefinition: true, scopeLine: 875, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @getargs_keywords, variables: !1079)
!1079 = !{!1080, !1081, !1082, !1083}
!1080 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1078, file: !453, line: 874, type: !20)
!1081 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1078, file: !453, line: 874, type: !20)
!1082 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1078, file: !453, line: 874, type: !20)
!1083 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "int_args", scope: !1078, file: !453, line: 878, type: !1084)
!1084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !59, size: 320, align: 32, elements: !1085)
!1085 = !{!1086}
!1086 = !DISubrange(count: 10)
!1087 = !DISubprogram(name: "getargs_keyword_only", scope: !453, file: !453, line: 891, type: !151, isLocal: true, isDefinition: true, scopeLine: 892, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @getargs_keyword_only, variables: !1088)
!1088 = !{!1089, !1090, !1091, !1092, !1093, !1094}
!1089 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1087, file: !453, line: 891, type: !20)
!1090 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1087, file: !453, line: 891, type: !20)
!1091 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1087, file: !453, line: 891, type: !20)
!1092 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "required", scope: !1087, file: !453, line: 894, type: !59)
!1093 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "optional", scope: !1087, file: !453, line: 895, type: !59)
!1094 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "keyword_only", scope: !1087, file: !453, line: 896, type: !59)
!1095 = !DISubprogram(name: "getargs_b", scope: !453, file: !453, line: 908, type: !142, isLocal: true, isDefinition: true, scopeLine: 909, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_b, variables: !1096)
!1096 = !{!1097, !1098, !1099}
!1097 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1095, file: !453, line: 908, type: !20)
!1098 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1095, file: !453, line: 908, type: !20)
!1099 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1095, file: !453, line: 910, type: !489)
!1100 = !DISubprogram(name: "getargs_B", scope: !453, file: !453, line: 917, type: !142, isLocal: true, isDefinition: true, scopeLine: 918, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_B, variables: !1101)
!1101 = !{!1102, !1103, !1104}
!1102 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1100, file: !453, line: 917, type: !20)
!1103 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1100, file: !453, line: 917, type: !20)
!1104 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1100, file: !453, line: 919, type: !489)
!1105 = !DISubprogram(name: "getargs_h", scope: !453, file: !453, line: 926, type: !142, isLocal: true, isDefinition: true, scopeLine: 927, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_h, variables: !1106)
!1106 = !{!1107, !1108, !1109}
!1107 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1105, file: !453, line: 926, type: !20)
!1108 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1105, file: !453, line: 926, type: !20)
!1109 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1105, file: !453, line: 928, type: !491)
!1110 = !DISubprogram(name: "getargs_H", scope: !453, file: !453, line: 935, type: !142, isLocal: true, isDefinition: true, scopeLine: 936, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_H, variables: !1111)
!1111 = !{!1112, !1113, !1114}
!1112 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1110, file: !453, line: 935, type: !20)
!1113 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1110, file: !453, line: 935, type: !20)
!1114 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1110, file: !453, line: 937, type: !92)
!1115 = !DISubprogram(name: "getargs_I", scope: !453, file: !453, line: 944, type: !142, isLocal: true, isDefinition: true, scopeLine: 945, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_I, variables: !1116)
!1116 = !{!1117, !1118, !1119}
!1117 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1115, file: !453, line: 944, type: !20)
!1118 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1115, file: !453, line: 944, type: !20)
!1119 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1115, file: !453, line: 946, type: !364)
!1120 = !DISubprogram(name: "getargs_k", scope: !453, file: !453, line: 953, type: !142, isLocal: true, isDefinition: true, scopeLine: 954, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_k, variables: !1121)
!1121 = !{!1122, !1123, !1124}
!1122 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1120, file: !453, line: 953, type: !20)
!1123 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1120, file: !453, line: 953, type: !20)
!1124 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1120, file: !453, line: 955, type: !112)
!1125 = !DISubprogram(name: "getargs_i", scope: !453, file: !453, line: 962, type: !142, isLocal: true, isDefinition: true, scopeLine: 963, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_i, variables: !1126)
!1126 = !{!1127, !1128, !1129}
!1127 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1125, file: !453, line: 962, type: !20)
!1128 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1125, file: !453, line: 962, type: !20)
!1129 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1125, file: !453, line: 964, type: !59)
!1130 = !DISubprogram(name: "getargs_l", scope: !453, file: !453, line: 971, type: !142, isLocal: true, isDefinition: true, scopeLine: 972, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_l, variables: !1131)
!1131 = !{!1132, !1133, !1134}
!1132 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1130, file: !453, line: 971, type: !20)
!1133 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1130, file: !453, line: 971, type: !20)
!1134 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1130, file: !453, line: 973, type: !32)
!1135 = !DISubprogram(name: "getargs_n", scope: !453, file: !453, line: 980, type: !142, isLocal: true, isDefinition: true, scopeLine: 981, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_n, variables: !1136)
!1136 = !{!1137, !1138, !1139}
!1137 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1135, file: !453, line: 980, type: !20)
!1138 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1135, file: !453, line: 980, type: !20)
!1139 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1135, file: !453, line: 982, type: !26)
!1140 = !DISubprogram(name: "getargs_p", scope: !453, file: !453, line: 989, type: !142, isLocal: true, isDefinition: true, scopeLine: 990, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_p, variables: !1141)
!1141 = !{!1142, !1143, !1144}
!1142 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1140, file: !453, line: 989, type: !20)
!1143 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1140, file: !453, line: 989, type: !20)
!1144 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1140, file: !453, line: 991, type: !59)
!1145 = !DISubprogram(name: "getargs_L", scope: !453, file: !453, line: 999, type: !142, isLocal: true, isDefinition: true, scopeLine: 1000, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_L, variables: !1146)
!1146 = !{!1147, !1148, !1149}
!1147 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1145, file: !453, line: 999, type: !20)
!1148 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1145, file: !453, line: 999, type: !20)
!1149 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1145, file: !453, line: 1001, type: !423)
!1150 = !DISubprogram(name: "getargs_K", scope: !453, file: !453, line: 1008, type: !142, isLocal: true, isDefinition: true, scopeLine: 1009, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_K, variables: !1151)
!1151 = !{!1152, !1153, !1154}
!1152 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1150, file: !453, line: 1008, type: !20)
!1153 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1150, file: !453, line: 1008, type: !20)
!1154 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1150, file: !453, line: 1010, type: !422)
!1155 = !DISubprogram(name: "test_longlong_api", scope: !453, file: !453, line: 410, type: !142, isLocal: true, isDefinition: true, scopeLine: 411, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @test_longlong_api, variables: !1156)
!1156 = !{!1157, !1158}
!1157 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1155, file: !453, line: 410, type: !20)
!1158 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1155, file: !453, line: 410, type: !20)
!1159 = !DISubprogram(name: "test_longlong_api_inner", scope: !717, file: !717, line: 11, type: !718, isLocal: true, isDefinition: true, scopeLine: 12, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object* (i8*)*)* @test_longlong_api_inner, variables: !1160)
!1160 = !{!1161, !1162, !1163, !1164, !1165, !1166, !1170, !1174, !1175, !1176, !1177, !1179, !1181, !1183, !1184, !1185, !1186, !1187, !1189, !1191, !1193, !1195, !1197, !1199, !1201, !1204, !1206, !1209, !1211, !1213, !1214}
!1161 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "error", arg: 1, scope: !1159, file: !717, line: 11, type: !720)
!1162 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "NBITS", scope: !1159, file: !717, line: 13, type: !726)
!1163 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !1159, file: !717, line: 14, type: !422)
!1164 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pyresult", scope: !1159, file: !717, line: 15, type: !20)
!1165 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1159, file: !717, line: 16, type: !59)
!1166 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !1167, file: !717, line: 30, type: !59)
!1167 = distinct !DILexicalBlock(scope: !1168, file: !717, line: 29, column: 5)
!1168 = distinct !DILexicalBlock(scope: !1169, file: !717, line: 26, column: 5)
!1169 = distinct !DILexicalBlock(scope: !1159, file: !717, line: 26, column: 5)
!1170 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "in", scope: !1171, file: !717, line: 32, type: !423)
!1171 = distinct !DILexicalBlock(scope: !1172, file: !717, line: 31, column: 33)
!1172 = distinct !DILexicalBlock(scope: !1173, file: !717, line: 31, column: 9)
!1173 = distinct !DILexicalBlock(scope: !1167, file: !717, line: 31, column: 9)
!1174 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !1171, file: !717, line: 32, type: !423)
!1175 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uin", scope: !1171, file: !717, line: 33, type: !422)
!1176 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uout", scope: !1171, file: !717, line: 33, type: !422)
!1177 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1178, file: !717, line: 56, type: !20)
!1178 = distinct !DILexicalBlock(scope: !1171, file: !717, line: 56, column: 16)
!1179 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1180, file: !717, line: 71, type: !20)
!1180 = distinct !DILexicalBlock(scope: !1171, file: !717, line: 71, column: 16)
!1181 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "one", scope: !1182, file: !717, line: 80, type: !20)
!1182 = distinct !DILexicalBlock(scope: !1159, file: !717, line: 79, column: 5)
!1183 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !1182, file: !717, line: 80, type: !20)
!1184 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !1182, file: !717, line: 80, type: !20)
!1185 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !1182, file: !717, line: 81, type: !423)
!1186 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uout", scope: !1182, file: !717, line: 82, type: !422)
!1187 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1188, file: !717, line: 104, type: !20)
!1188 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 104, column: 12)
!1189 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1190, file: !717, line: 113, type: !20)
!1190 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 113, column: 12)
!1191 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1192, file: !717, line: 132, type: !20)
!1192 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 132, column: 12)
!1193 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1194, file: !717, line: 151, type: !20)
!1194 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 151, column: 12)
!1195 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1196, file: !717, line: 157, type: !20)
!1196 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 157, column: 12)
!1197 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1198, file: !717, line: 172, type: !20)
!1198 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 172, column: 12)
!1199 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1200, file: !717, line: 174, type: !20)
!1200 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 174, column: 12)
!1201 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1202, file: !717, line: 174, type: !20)
!1202 = distinct !DILexicalBlock(scope: !1203, file: !717, line: 174, column: 97)
!1203 = distinct !DILexicalBlock(scope: !1200, file: !717, line: 174, column: 63)
!1204 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1205, file: !717, line: 175, type: !20)
!1205 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 175, column: 12)
!1206 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1207, file: !717, line: 175, type: !20)
!1207 = distinct !DILexicalBlock(scope: !1208, file: !717, line: 175, column: 97)
!1208 = distinct !DILexicalBlock(scope: !1205, file: !717, line: 175, column: 63)
!1209 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1210, file: !717, line: 176, type: !20)
!1210 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 176, column: 12)
!1211 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !1212, file: !717, line: 181, type: !423)
!1212 = distinct !DILexicalBlock(scope: !1159, file: !717, line: 180, column: 5)
!1213 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uout", scope: !1212, file: !717, line: 182, type: !422)
!1214 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1215, file: !717, line: 202, type: !20)
!1215 = distinct !DILexicalBlock(scope: !1212, file: !717, line: 202, column: 12)
!1216 = !DISubprogram(name: "raise_test_longlong_error", scope: !453, file: !453, line: 395, type: !721, isLocal: true, isDefinition: true, scopeLine: 396, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i8*)* @raise_test_longlong_error, variables: !1217)
!1217 = !{!1218}
!1218 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "msg", arg: 1, scope: !1216, file: !453, line: 395, type: !44)
!1219 = !DISubprogram(name: "test_long_long_and_overflow", scope: !453, file: !453, line: 593, type: !132, isLocal: true, isDefinition: true, scopeLine: 594, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_long_long_and_overflow, variables: !1220)
!1220 = !{!1221, !1222, !1223, !1224, !1225, !1226, !1227, !1229, !1233, !1235, !1237, !1239, !1241, !1245, !1247, !1249, !1251, !1253, !1255, !1257}
!1221 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1219, file: !453, line: 593, type: !20)
!1222 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num", scope: !1219, file: !453, line: 595, type: !20)
!1223 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "one", scope: !1219, file: !453, line: 595, type: !20)
!1224 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !1219, file: !453, line: 595, type: !20)
!1225 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1219, file: !453, line: 596, type: !423)
!1226 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "overflow", scope: !1219, file: !453, line: 597, type: !59)
!1227 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1228, file: !453, line: 606, type: !20)
!1228 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 606, column: 8)
!1229 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1230, file: !453, line: 622, type: !20)
!1230 = distinct !DILexicalBlock(scope: !1231, file: !453, line: 622, column: 12)
!1231 = distinct !DILexicalBlock(scope: !1232, file: !453, line: 621, column: 28)
!1232 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 621, column: 9)
!1233 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1234, file: !453, line: 626, type: !20)
!1234 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 626, column: 8)
!1235 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1236, file: !453, line: 627, type: !20)
!1236 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 627, column: 8)
!1237 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1238, file: !453, line: 633, type: !20)
!1238 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 633, column: 8)
!1239 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1240, file: !453, line: 650, type: !20)
!1240 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 650, column: 8)
!1241 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1242, file: !453, line: 666, type: !20)
!1242 = distinct !DILexicalBlock(scope: !1243, file: !453, line: 666, column: 12)
!1243 = distinct !DILexicalBlock(scope: !1244, file: !453, line: 665, column: 28)
!1244 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 665, column: 9)
!1245 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1246, file: !453, line: 670, type: !20)
!1246 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 670, column: 8)
!1247 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1248, file: !453, line: 671, type: !20)
!1248 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 671, column: 8)
!1249 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1250, file: !453, line: 677, type: !20)
!1250 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 677, column: 8)
!1251 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1252, file: !453, line: 693, type: !20)
!1252 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 693, column: 8)
!1253 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1254, file: !453, line: 708, type: !20)
!1254 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 708, column: 8)
!1255 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1256, file: !453, line: 723, type: !20)
!1256 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 723, column: 8)
!1257 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1258, file: !453, line: 738, type: !20)
!1258 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 738, column: 8)
!1259 = !DISubprogram(name: "test_L_code", scope: !453, file: !453, line: 819, type: !132, isLocal: true, isDefinition: true, scopeLine: 820, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_L_code, variables: !1260)
!1260 = !{!1261, !1262, !1263, !1264, !1265, !1267}
!1261 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1259, file: !453, line: 819, type: !20)
!1262 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuple", scope: !1259, file: !453, line: 821, type: !20)
!1263 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num", scope: !1259, file: !453, line: 821, type: !20)
!1264 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1259, file: !453, line: 822, type: !423)
!1265 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1266, file: !453, line: 841, type: !20)
!1266 = distinct !DILexicalBlock(scope: !1259, file: !453, line: 841, column: 8)
!1267 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1268, file: !453, line: 855, type: !20)
!1268 = distinct !DILexicalBlock(scope: !1259, file: !453, line: 855, column: 8)
!1269 = !DISubprogram(name: "getargs_c", scope: !453, file: !453, line: 1073, type: !142, isLocal: true, isDefinition: true, scopeLine: 1074, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_c, variables: !1270)
!1270 = !{!1271, !1272, !1273}
!1271 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1269, file: !453, line: 1073, type: !20)
!1272 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1269, file: !453, line: 1073, type: !20)
!1273 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !1269, file: !453, line: 1075, type: !46)
!1274 = !DISubprogram(name: "getargs_s", scope: !453, file: !453, line: 1082, type: !142, isLocal: true, isDefinition: true, scopeLine: 1083, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_s, variables: !1275)
!1275 = !{!1276, !1277, !1278}
!1276 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1274, file: !453, line: 1082, type: !20)
!1277 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1274, file: !453, line: 1082, type: !20)
!1278 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !1274, file: !453, line: 1084, type: !67)
!1279 = !DISubprogram(name: "getargs_s_star", scope: !453, file: !453, line: 1091, type: !142, isLocal: true, isDefinition: true, scopeLine: 1092, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_s_star, variables: !1280)
!1280 = !{!1281, !1282, !1283, !1284}
!1281 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1279, file: !453, line: 1091, type: !20)
!1282 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1279, file: !453, line: 1091, type: !20)
!1283 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1279, file: !453, line: 1093, type: !252)
!1284 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes", scope: !1279, file: !453, line: 1094, type: !20)
!1285 = !DISubprogram(name: "getargs_s_hash", scope: !453, file: !453, line: 1103, type: !142, isLocal: true, isDefinition: true, scopeLine: 1104, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_s_hash, variables: !1286)
!1286 = !{!1287, !1288, !1289, !1290}
!1287 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1285, file: !453, line: 1103, type: !20)
!1288 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1285, file: !453, line: 1103, type: !20)
!1289 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !1285, file: !453, line: 1105, type: !67)
!1290 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1285, file: !453, line: 1106, type: !26)
!1291 = !DISubprogram(name: "getargs_z", scope: !453, file: !453, line: 1113, type: !142, isLocal: true, isDefinition: true, scopeLine: 1114, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_z, variables: !1292)
!1292 = !{!1293, !1294, !1295}
!1293 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1291, file: !453, line: 1113, type: !20)
!1294 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1291, file: !453, line: 1113, type: !20)
!1295 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !1291, file: !453, line: 1115, type: !67)
!1296 = !DISubprogram(name: "getargs_z_star", scope: !453, file: !453, line: 1125, type: !142, isLocal: true, isDefinition: true, scopeLine: 1126, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_z_star, variables: !1297)
!1297 = !{!1298, !1299, !1300, !1301}
!1298 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1296, file: !453, line: 1125, type: !20)
!1299 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1296, file: !453, line: 1125, type: !20)
!1300 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1296, file: !453, line: 1127, type: !252)
!1301 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes", scope: !1296, file: !453, line: 1128, type: !20)
!1302 = !DISubprogram(name: "getargs_z_hash", scope: !453, file: !453, line: 1142, type: !142, isLocal: true, isDefinition: true, scopeLine: 1143, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_z_hash, variables: !1303)
!1303 = !{!1304, !1305, !1306, !1307}
!1304 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1302, file: !453, line: 1142, type: !20)
!1305 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1302, file: !453, line: 1142, type: !20)
!1306 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !1302, file: !453, line: 1144, type: !67)
!1307 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1302, file: !453, line: 1145, type: !26)
!1308 = !DISubprogram(name: "getargs_y", scope: !453, file: !453, line: 1155, type: !142, isLocal: true, isDefinition: true, scopeLine: 1156, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_y, variables: !1309)
!1309 = !{!1310, !1311, !1312}
!1310 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1308, file: !453, line: 1155, type: !20)
!1311 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1308, file: !453, line: 1155, type: !20)
!1312 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !1308, file: !453, line: 1157, type: !67)
!1313 = !DISubprogram(name: "getargs_y_star", scope: !453, file: !453, line: 1164, type: !142, isLocal: true, isDefinition: true, scopeLine: 1165, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_y_star, variables: !1314)
!1314 = !{!1315, !1316, !1317, !1318}
!1315 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1313, file: !453, line: 1164, type: !20)
!1316 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1313, file: !453, line: 1164, type: !20)
!1317 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1313, file: !453, line: 1166, type: !252)
!1318 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bytes", scope: !1313, file: !453, line: 1167, type: !20)
!1319 = !DISubprogram(name: "getargs_y_hash", scope: !453, file: !453, line: 1176, type: !142, isLocal: true, isDefinition: true, scopeLine: 1177, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_y_hash, variables: !1320)
!1320 = !{!1321, !1322, !1323, !1324}
!1321 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1319, file: !453, line: 1176, type: !20)
!1322 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1319, file: !453, line: 1176, type: !20)
!1323 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !1319, file: !453, line: 1178, type: !67)
!1324 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1319, file: !453, line: 1179, type: !26)
!1325 = !DISubprogram(name: "getargs_u", scope: !453, file: !453, line: 1186, type: !142, isLocal: true, isDefinition: true, scopeLine: 1187, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_u, variables: !1326)
!1326 = !{!1327, !1328, !1329, !1332}
!1327 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1325, file: !453, line: 1186, type: !20)
!1328 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1325, file: !453, line: 1186, type: !20)
!1329 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !1325, file: !453, line: 1188, type: !1330)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64, align: 64)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "Py_UNICODE", file: !426, line: 93, baseType: !442)
!1332 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1325, file: !453, line: 1189, type: !26)
!1333 = !DISubprogram(name: "getargs_u_hash", scope: !453, file: !453, line: 1197, type: !142, isLocal: true, isDefinition: true, scopeLine: 1198, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_u_hash, variables: !1334)
!1334 = !{!1335, !1336, !1337, !1338}
!1335 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1333, file: !453, line: 1197, type: !20)
!1336 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1333, file: !453, line: 1197, type: !20)
!1337 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !1333, file: !453, line: 1199, type: !1330)
!1338 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1333, file: !453, line: 1200, type: !26)
!1339 = !DISubprogram(name: "getargs_Z", scope: !453, file: !453, line: 1207, type: !142, isLocal: true, isDefinition: true, scopeLine: 1208, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_Z, variables: !1340)
!1340 = !{!1341, !1342, !1343, !1344}
!1341 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1339, file: !453, line: 1207, type: !20)
!1342 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1339, file: !453, line: 1207, type: !20)
!1343 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !1339, file: !453, line: 1209, type: !1330)
!1344 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1339, file: !453, line: 1210, type: !26)
!1345 = !DISubprogram(name: "getargs_Z_hash", scope: !453, file: !453, line: 1221, type: !142, isLocal: true, isDefinition: true, scopeLine: 1222, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_Z_hash, variables: !1346)
!1346 = !{!1347, !1348, !1349, !1350}
!1347 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1345, file: !453, line: 1221, type: !20)
!1348 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1345, file: !453, line: 1221, type: !20)
!1349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !1345, file: !453, line: 1223, type: !1330)
!1350 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1345, file: !453, line: 1224, type: !26)
!1351 = !DISubprogram(name: "getargs_w_star", scope: !453, file: !453, line: 1630, type: !142, isLocal: true, isDefinition: true, scopeLine: 1631, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @getargs_w_star, variables: !1352)
!1352 = !{!1353, !1354, !1355, !1356, !1357}
!1353 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1351, file: !453, line: 1630, type: !20)
!1354 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1351, file: !453, line: 1630, type: !20)
!1355 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1351, file: !453, line: 1632, type: !252)
!1356 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1351, file: !453, line: 1633, type: !20)
!1357 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "str", scope: !1351, file: !453, line: 1634, type: !67)
!1358 = !DISubprogram(name: "codec_incrementalencoder", scope: !453, file: !453, line: 1678, type: !142, isLocal: true, isDefinition: true, scopeLine: 1679, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @codec_incrementalencoder, variables: !1359)
!1359 = !{!1360, !1361, !1362, !1363}
!1360 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1358, file: !453, line: 1678, type: !20)
!1361 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1358, file: !453, line: 1678, type: !20)
!1362 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "encoding", scope: !1358, file: !453, line: 1680, type: !44)
!1363 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !1358, file: !453, line: 1680, type: !44)
!1364 = !DISubprogram(name: "codec_incrementaldecoder", scope: !453, file: !453, line: 1688, type: !142, isLocal: true, isDefinition: true, scopeLine: 1689, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @codec_incrementaldecoder, variables: !1365)
!1365 = !{!1366, !1367, !1368, !1369}
!1366 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1364, file: !453, line: 1688, type: !20)
!1367 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1364, file: !453, line: 1688, type: !20)
!1368 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "encoding", scope: !1364, file: !453, line: 1690, type: !44)
!1369 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !1364, file: !453, line: 1690, type: !44)
!1370 = !DISubprogram(name: "test_s_code", scope: !453, file: !453, line: 1236, type: !132, isLocal: true, isDefinition: true, scopeLine: 1237, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_s_code, variables: !1371)
!1371 = !{!1372, !1373, !1374, !1375, !1376}
!1372 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1370, file: !453, line: 1236, type: !20)
!1373 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuple", scope: !1370, file: !453, line: 1239, type: !20)
!1374 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !1370, file: !453, line: 1239, type: !20)
!1375 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1370, file: !453, line: 1240, type: !67)
!1376 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1377, file: !453, line: 1262, type: !20)
!1377 = distinct !DILexicalBlock(scope: !1370, file: !453, line: 1262, column: 8)
!1378 = !DISubprogram(name: "test_u_code", scope: !453, file: !453, line: 1340, type: !132, isLocal: true, isDefinition: true, scopeLine: 1341, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_u_code, variables: !1379)
!1379 = !{!1380, !1381, !1382, !1383, !1384, !1385}
!1380 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1378, file: !453, line: 1340, type: !20)
!1381 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuple", scope: !1378, file: !453, line: 1342, type: !20)
!1382 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !1378, file: !453, line: 1342, type: !20)
!1383 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1378, file: !453, line: 1343, type: !1330)
!1384 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1378, file: !453, line: 1344, type: !26)
!1385 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1386, file: !453, line: 1375, type: !20)
!1386 = distinct !DILexicalBlock(scope: !1378, file: !453, line: 1375, column: 8)
!1387 = !DISubprogram(name: "test_Z_code", scope: !453, file: !453, line: 1382, type: !132, isLocal: true, isDefinition: true, scopeLine: 1383, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_Z_code, variables: !1388)
!1388 = !{!1389, !1390, !1391, !1392, !1395, !1396, !1397, !1398}
!1389 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1387, file: !453, line: 1382, type: !20)
!1390 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tuple", scope: !1387, file: !453, line: 1384, type: !20)
!1391 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !1387, file: !453, line: 1384, type: !20)
!1392 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value1", scope: !1387, file: !453, line: 1385, type: !1393)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64, align: 64)
!1394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1331)
!1395 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value2", scope: !1387, file: !453, line: 1385, type: !1393)
!1396 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len1", scope: !1387, file: !453, line: 1386, type: !26)
!1397 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len2", scope: !1387, file: !453, line: 1386, type: !26)
!1398 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1399, file: !453, line: 1429, type: !20)
!1399 = distinct !DILexicalBlock(scope: !1387, file: !453, line: 1429, column: 8)
!1400 = !DISubprogram(name: "test_widechar", scope: !453, file: !453, line: 1434, type: !132, isLocal: true, isDefinition: true, scopeLine: 1435, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_widechar, variables: !1401)
!1401 = !{!1402, !1403, !1404, !1405, !1406, !1410, !1414, !1416, !1420, !1422, !1424, !1426, !1430}
!1402 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1400, file: !453, line: 1434, type: !20)
!1403 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wtextlen", scope: !1400, file: !453, line: 1438, type: !110)
!1404 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wide", scope: !1400, file: !453, line: 1444, type: !20)
!1405 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "utf8", scope: !1400, file: !453, line: 1444, type: !20)
!1406 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1407, file: !453, line: 1452, type: !20)
!1407 = distinct !DILexicalBlock(scope: !1408, file: !453, line: 1452, column: 12)
!1408 = distinct !DILexicalBlock(scope: !1409, file: !453, line: 1451, column: 29)
!1409 = distinct !DILexicalBlock(scope: !1400, file: !453, line: 1451, column: 9)
!1410 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1411, file: !453, line: 1457, type: !20)
!1411 = distinct !DILexicalBlock(scope: !1412, file: !453, line: 1457, column: 12)
!1412 = distinct !DILexicalBlock(scope: !1413, file: !453, line: 1456, column: 141)
!1413 = distinct !DILexicalBlock(scope: !1400, file: !453, line: 1456, column: 9)
!1414 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1415, file: !453, line: 1458, type: !20)
!1415 = distinct !DILexicalBlock(scope: !1412, file: !453, line: 1458, column: 12)
!1416 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1417, file: !453, line: 1464, type: !20)
!1417 = distinct !DILexicalBlock(scope: !1418, file: !453, line: 1464, column: 12)
!1418 = distinct !DILexicalBlock(scope: !1419, file: !453, line: 1463, column: 40)
!1419 = distinct !DILexicalBlock(scope: !1400, file: !453, line: 1463, column: 9)
!1420 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1421, file: !453, line: 1465, type: !20)
!1421 = distinct !DILexicalBlock(scope: !1418, file: !453, line: 1465, column: 12)
!1422 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1423, file: !453, line: 1473, type: !20)
!1423 = distinct !DILexicalBlock(scope: !1400, file: !453, line: 1473, column: 8)
!1424 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1425, file: !453, line: 1474, type: !20)
!1425 = distinct !DILexicalBlock(scope: !1400, file: !453, line: 1474, column: 8)
!1426 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1427, file: !453, line: 1496, type: !20)
!1427 = distinct !DILexicalBlock(scope: !1428, file: !453, line: 1496, column: 12)
!1428 = distinct !DILexicalBlock(scope: !1429, file: !453, line: 1495, column: 37)
!1429 = distinct !DILexicalBlock(scope: !1400, file: !453, line: 1495, column: 9)
!1430 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1431, file: !453, line: 1500, type: !20)
!1431 = distinct !DILexicalBlock(scope: !1432, file: !453, line: 1500, column: 12)
!1432 = distinct !DILexicalBlock(scope: !1429, file: !453, line: 1499, column: 10)
!1433 = !DISubprogram(name: "unicode_aswidechar", scope: !453, file: !453, line: 1510, type: !142, isLocal: true, isDefinition: true, scopeLine: 1511, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @unicode_aswidechar, variables: !1434)
!1434 = !{!1435, !1436, !1437, !1438, !1439, !1440, !1441}
!1435 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1433, file: !453, line: 1510, type: !20)
!1436 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1433, file: !453, line: 1510, type: !20)
!1437 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "unicode", scope: !1433, file: !453, line: 1512, type: !20)
!1438 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1433, file: !453, line: 1512, type: !20)
!1439 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buflen", scope: !1433, file: !453, line: 1513, type: !26)
!1440 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1433, file: !453, line: 1513, type: !26)
!1441 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1433, file: !453, line: 1514, type: !441)
!1442 = !DISubprogram(name: "unicode_aswidecharstring", scope: !453, file: !453, line: 1541, type: !142, isLocal: true, isDefinition: true, scopeLine: 1542, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @unicode_aswidecharstring, variables: !1443)
!1443 = !{!1444, !1445, !1446, !1447, !1448, !1449}
!1444 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1442, file: !453, line: 1541, type: !20)
!1445 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1442, file: !453, line: 1541, type: !20)
!1446 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "unicode", scope: !1442, file: !453, line: 1543, type: !20)
!1447 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1442, file: !453, line: 1543, type: !20)
!1448 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1442, file: !453, line: 1544, type: !26)
!1449 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !1442, file: !453, line: 1545, type: !441)
!1450 = !DISubprogram(name: "unicode_encodedecimal", scope: !453, file: !453, line: 1562, type: !142, isLocal: true, isDefinition: true, scopeLine: 1563, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @unicode_encodedecimal, variables: !1451)
!1451 = !{!1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461}
!1452 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1450, file: !453, line: 1562, type: !20)
!1453 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1450, file: !453, line: 1562, type: !20)
!1454 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "unicode", scope: !1450, file: !453, line: 1564, type: !1330)
!1455 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "length", scope: !1450, file: !453, line: 1565, type: !26)
!1456 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !1450, file: !453, line: 1566, type: !67)
!1457 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "decimal", scope: !1450, file: !453, line: 1567, type: !20)
!1458 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "decimal_length", scope: !1450, file: !453, line: 1568, type: !26)
!1459 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_length", scope: !1450, file: !453, line: 1568, type: !26)
!1460 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1450, file: !453, line: 1569, type: !59)
!1461 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1462, file: !453, line: 1583, type: !20)
!1462 = distinct !DILexicalBlock(scope: !1463, file: !453, line: 1583, column: 12)
!1463 = distinct !DILexicalBlock(scope: !1464, file: !453, line: 1582, column: 18)
!1464 = distinct !DILexicalBlock(scope: !1450, file: !453, line: 1582, column: 9)
!1465 = !DISubprogram(name: "unicode_transformdecimaltoascii", scope: !453, file: !453, line: 1597, type: !142, isLocal: true, isDefinition: true, scopeLine: 1598, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @unicode_transformdecimaltoascii, variables: !1466)
!1466 = !{!1467, !1468, !1469, !1470}
!1467 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1465, file: !453, line: 1597, type: !20)
!1468 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1465, file: !453, line: 1597, type: !20)
!1469 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "unicode", scope: !1465, file: !453, line: 1599, type: !1330)
!1470 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "length", scope: !1465, file: !453, line: 1600, type: !26)
!1471 = !DISubprogram(name: "unicode_legacy_string", scope: !453, file: !453, line: 1607, type: !142, isLocal: true, isDefinition: true, scopeLine: 1608, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @unicode_legacy_string, variables: !1472)
!1472 = !{!1473, !1474, !1475, !1476, !1477}
!1473 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1471, file: !453, line: 1607, type: !20)
!1474 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1471, file: !453, line: 1607, type: !20)
!1475 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !1471, file: !453, line: 1609, type: !1330)
!1476 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "len", scope: !1471, file: !453, line: 1610, type: !26)
!1477 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "u", scope: !1471, file: !453, line: 1611, type: !20)
!1478 = !DISubprogram(name: "test_thread_state", scope: !453, file: !453, line: 1868, type: !142, isLocal: true, isDefinition: true, scopeLine: 1869, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @test_thread_state, variables: !1479)
!1479 = !{!1480, !1481, !1482, !1483, !1484, !1486}
!1480 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1478, file: !453, line: 1868, type: !20)
!1481 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1478, file: !453, line: 1868, type: !20)
!1482 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fn", scope: !1478, file: !453, line: 1870, type: !20)
!1483 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "success", scope: !1478, file: !453, line: 1871, type: !59)
!1484 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1485, file: !453, line: 1894, type: !517)
!1485 = distinct !DILexicalBlock(scope: !1478, file: !453, line: 1894, column: 5)
!1486 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1487, file: !453, line: 1903, type: !517)
!1487 = distinct !DILexicalBlock(scope: !1478, file: !453, line: 1903, column: 5)
!1488 = !DISubprogram(name: "_make_call_from_thread", scope: !453, file: !453, line: 1861, type: !354, isLocal: true, isDefinition: true, scopeLine: 1862, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*)* @_make_call_from_thread, variables: !1489)
!1489 = !{!1490}
!1490 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "callable", arg: 1, scope: !1488, file: !453, line: 1861, type: !105)
!1491 = !DISubprogram(name: "_make_call", scope: !453, file: !453, line: 1845, type: !584, isLocal: true, isDefinition: true, scopeLine: 1846, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i8*)* @_make_call, variables: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1498, !1500}
!1493 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "callable", arg: 1, scope: !1491, file: !453, line: 1845, type: !105)
!1494 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rc", scope: !1491, file: !453, line: 1847, type: !20)
!1495 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "success", scope: !1491, file: !453, line: 1848, type: !59)
!1496 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !1491, file: !453, line: 1849, type: !1497)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyGILState_STATE", file: !4, line: 191, baseType: !3)
!1498 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1499, file: !453, line: 1852, type: !20)
!1499 = distinct !DILexicalBlock(scope: !1491, file: !453, line: 1852, column: 8)
!1500 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1501, file: !453, line: 1852, type: !20)
!1501 = distinct !DILexicalBlock(scope: !1502, file: !453, line: 1852, column: 94)
!1502 = distinct !DILexicalBlock(scope: !1499, file: !453, line: 1852, column: 60)
!1503 = !DISubprogram(name: "profile_int", scope: !453, file: !453, line: 2235, type: !142, isLocal: true, isDefinition: true, scopeLine: 2236, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @profile_int, variables: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509, !1517, !1518, !1519, !1520, !1521, !1522, !1529, !1536, !1544, !1552, !1560, !1565, !1567, !1572, !1575}
!1505 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1503, file: !453, line: 2235, type: !20)
!1506 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1503, file: !453, line: 2235, type: !20)
!1507 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !1503, file: !453, line: 2237, type: !59)
!1508 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !1503, file: !453, line: 2237, type: !59)
!1509 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !1503, file: !453, line: 2238, type: !1510)
!1510 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1511, line: 30, size: 128, align: 64, elements: !1512)
!1511 = !DIFile(filename: "/usr/include/bits/time.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1512 = !{!1513, !1515}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1510, file: !1511, line: 32, baseType: !1514, size: 64, align: 64)
!1514 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !31, line: 148, baseType: !32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1510, file: !1511, line: 33, baseType: !1516, size: 64, align: 64, offset: 64)
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !31, line: 150, baseType: !32)
!1517 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !1503, file: !453, line: 2238, type: !1510)
!1518 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "single", scope: !1503, file: !453, line: 2239, type: !20)
!1519 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "multiple", scope: !1503, file: !453, line: 2239, type: !411)
!1520 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "op1", scope: !1503, file: !453, line: 2239, type: !20)
!1521 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1503, file: !453, line: 2239, type: !20)
!1522 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1523, file: !453, line: 2247, type: !20)
!1523 = distinct !DILexicalBlock(scope: !1524, file: !453, line: 2247, column: 16)
!1524 = distinct !DILexicalBlock(scope: !1525, file: !453, line: 2245, column: 33)
!1525 = distinct !DILexicalBlock(scope: !1526, file: !453, line: 2245, column: 9)
!1526 = distinct !DILexicalBlock(scope: !1527, file: !453, line: 2245, column: 9)
!1527 = distinct !DILexicalBlock(scope: !1528, file: !453, line: 2244, column: 5)
!1528 = distinct !DILexicalBlock(scope: !1503, file: !453, line: 2244, column: 5)
!1529 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1530, file: !453, line: 2258, type: !20)
!1530 = distinct !DILexicalBlock(scope: !1531, file: !453, line: 2258, column: 16)
!1531 = distinct !DILexicalBlock(scope: !1532, file: !453, line: 2256, column: 33)
!1532 = distinct !DILexicalBlock(scope: !1533, file: !453, line: 2256, column: 9)
!1533 = distinct !DILexicalBlock(scope: !1534, file: !453, line: 2256, column: 9)
!1534 = distinct !DILexicalBlock(scope: !1535, file: !453, line: 2255, column: 5)
!1535 = distinct !DILexicalBlock(scope: !1503, file: !453, line: 2255, column: 5)
!1536 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1537, file: !453, line: 2274, type: !20)
!1537 = distinct !DILexicalBlock(scope: !1538, file: !453, line: 2274, column: 16)
!1538 = distinct !DILexicalBlock(scope: !1539, file: !453, line: 2273, column: 33)
!1539 = distinct !DILexicalBlock(scope: !1540, file: !453, line: 2273, column: 9)
!1540 = distinct !DILexicalBlock(scope: !1541, file: !453, line: 2273, column: 9)
!1541 = distinct !DILexicalBlock(scope: !1542, file: !453, line: 2269, column: 30)
!1542 = distinct !DILexicalBlock(scope: !1543, file: !453, line: 2269, column: 5)
!1543 = distinct !DILexicalBlock(scope: !1503, file: !453, line: 2269, column: 5)
!1544 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1545, file: !453, line: 2292, type: !20)
!1545 = distinct !DILexicalBlock(scope: !1546, file: !453, line: 2292, column: 16)
!1546 = distinct !DILexicalBlock(scope: !1547, file: !453, line: 2291, column: 36)
!1547 = distinct !DILexicalBlock(scope: !1548, file: !453, line: 2291, column: 9)
!1548 = distinct !DILexicalBlock(scope: !1549, file: !453, line: 2291, column: 9)
!1549 = distinct !DILexicalBlock(scope: !1550, file: !453, line: 2287, column: 27)
!1550 = distinct !DILexicalBlock(scope: !1551, file: !453, line: 2287, column: 5)
!1551 = distinct !DILexicalBlock(scope: !1503, file: !453, line: 2287, column: 5)
!1552 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1553, file: !453, line: 2309, type: !20)
!1553 = distinct !DILexicalBlock(scope: !1554, file: !453, line: 2309, column: 16)
!1554 = distinct !DILexicalBlock(scope: !1555, file: !453, line: 2308, column: 36)
!1555 = distinct !DILexicalBlock(scope: !1556, file: !453, line: 2308, column: 9)
!1556 = distinct !DILexicalBlock(scope: !1557, file: !453, line: 2308, column: 9)
!1557 = distinct !DILexicalBlock(scope: !1558, file: !453, line: 2304, column: 27)
!1558 = distinct !DILexicalBlock(scope: !1559, file: !453, line: 2304, column: 5)
!1559 = distinct !DILexicalBlock(scope: !1503, file: !453, line: 2304, column: 5)
!1560 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1561, file: !453, line: 2321, type: !20)
!1561 = distinct !DILexicalBlock(scope: !1562, file: !453, line: 2321, column: 12)
!1562 = distinct !DILexicalBlock(scope: !1563, file: !453, line: 2319, column: 33)
!1563 = distinct !DILexicalBlock(scope: !1564, file: !453, line: 2319, column: 5)
!1564 = distinct !DILexicalBlock(scope: !1503, file: !453, line: 2319, column: 5)
!1565 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1566, file: !453, line: 2324, type: !20)
!1566 = distinct !DILexicalBlock(scope: !1503, file: !453, line: 2324, column: 8)
!1567 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1568, file: !453, line: 2334, type: !20)
!1568 = distinct !DILexicalBlock(scope: !1569, file: !453, line: 2334, column: 12)
!1569 = distinct !DILexicalBlock(scope: !1570, file: !453, line: 2332, column: 33)
!1570 = distinct !DILexicalBlock(scope: !1571, file: !453, line: 2332, column: 5)
!1571 = distinct !DILexicalBlock(scope: !1503, file: !453, line: 2332, column: 5)
!1572 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1573, file: !453, line: 2334, type: !20)
!1573 = distinct !DILexicalBlock(scope: !1574, file: !453, line: 2334, column: 102)
!1574 = distinct !DILexicalBlock(scope: !1568, file: !453, line: 2334, column: 68)
!1575 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1576, file: !453, line: 2337, type: !20)
!1576 = distinct !DILexicalBlock(scope: !1503, file: !453, line: 2337, column: 8)
!1577 = !DISubprogram(name: "print_delta", scope: !453, file: !453, line: 2223, type: !1578, isLocal: true, isDefinition: true, scopeLine: 2224, flags: DIFlagPrototyped, isOptimized: true, function: void (i32, %struct.timeval*, %struct.timeval*)* @print_delta, variables: !1581)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{null, !59, !1580, !1580}
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64, align: 64)
!1581 = !{!1582, !1583, !1584}
!1582 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "test", arg: 1, scope: !1577, file: !453, line: 2223, type: !59)
!1583 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 2, scope: !1577, file: !453, line: 2223, type: !1580)
!1584 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "e", arg: 3, scope: !1577, file: !453, line: 2223, type: !1580)
!1585 = !DISubprogram(name: "traceback_print", scope: !453, file: !453, line: 2347, type: !142, isLocal: true, isDefinition: true, scopeLine: 2348, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @traceback_print, variables: !1586)
!1586 = !{!1587, !1588, !1589, !1590, !1591}
!1587 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1585, file: !453, line: 2347, type: !20)
!1588 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1585, file: !453, line: 2347, type: !20)
!1589 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "file", scope: !1585, file: !453, line: 2349, type: !20)
!1590 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "traceback", scope: !1585, file: !453, line: 2350, type: !20)
!1591 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !1585, file: !453, line: 2351, type: !59)
!1592 = !DISubprogram(name: "exception_print", scope: !453, file: !453, line: 2365, type: !142, isLocal: true, isDefinition: true, scopeLine: 2366, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @exception_print, variables: !1593)
!1593 = !{!1594, !1595, !1596, !1597, !1598, !1600}
!1594 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1592, file: !453, line: 2365, type: !20)
!1595 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1592, file: !453, line: 2365, type: !20)
!1596 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1592, file: !453, line: 2367, type: !20)
!1597 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tb", scope: !1592, file: !453, line: 2368, type: !20)
!1598 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1599, file: !453, line: 2380, type: !20)
!1599 = distinct !DILexicalBlock(scope: !1592, file: !453, line: 2380, column: 8)
!1600 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1601, file: !453, line: 2380, type: !20)
!1601 = distinct !DILexicalBlock(scope: !1602, file: !453, line: 2380, column: 94)
!1602 = distinct !DILexicalBlock(scope: !1599, file: !453, line: 2380, column: 60)
!1603 = !DISubprogram(name: "test_set_exc_info", scope: !453, file: !453, line: 1786, type: !142, isLocal: true, isDefinition: true, scopeLine: 1787, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @test_set_exc_info, variables: !1604)
!1604 = !{!1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1616, !1619, !1621, !1624, !1626}
!1605 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1603, file: !453, line: 1786, type: !20)
!1606 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1603, file: !453, line: 1786, type: !20)
!1607 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "orig_exc", scope: !1603, file: !453, line: 1788, type: !20)
!1608 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_type", scope: !1603, file: !453, line: 1789, type: !20)
!1609 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_value", scope: !1603, file: !453, line: 1789, type: !20)
!1610 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_tb", scope: !1603, file: !453, line: 1789, type: !20)
!1611 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "type", scope: !1603, file: !453, line: 1790, type: !20)
!1612 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "value", scope: !1603, file: !453, line: 1790, type: !20)
!1613 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tb", scope: !1603, file: !453, line: 1790, type: !20)
!1614 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1615, file: !453, line: 1803, type: !20)
!1615 = distinct !DILexicalBlock(scope: !1603, file: !453, line: 1803, column: 8)
!1616 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1617, file: !453, line: 1803, type: !20)
!1617 = distinct !DILexicalBlock(scope: !1618, file: !453, line: 1803, column: 96)
!1618 = distinct !DILexicalBlock(scope: !1615, file: !453, line: 1803, column: 62)
!1619 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1620, file: !453, line: 1804, type: !20)
!1620 = distinct !DILexicalBlock(scope: !1603, file: !453, line: 1804, column: 8)
!1621 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1622, file: !453, line: 1804, type: !20)
!1622 = distinct !DILexicalBlock(scope: !1623, file: !453, line: 1804, column: 97)
!1623 = distinct !DILexicalBlock(scope: !1620, file: !453, line: 1804, column: 63)
!1624 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_xdecref_tmp", scope: !1625, file: !453, line: 1805, type: !20)
!1625 = distinct !DILexicalBlock(scope: !1603, file: !453, line: 1805, column: 8)
!1626 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1627, file: !453, line: 1805, type: !20)
!1627 = distinct !DILexicalBlock(scope: !1628, file: !453, line: 1805, column: 94)
!1628 = distinct !DILexicalBlock(scope: !1625, file: !453, line: 1805, column: 60)
!1629 = !DISubprogram(name: "argparsing", scope: !453, file: !453, line: 2408, type: !142, isLocal: true, isDefinition: true, scopeLine: 2409, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @argparsing, variables: !1630)
!1630 = !{!1631, !1632, !1633, !1634}
!1631 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "o", arg: 1, scope: !1629, file: !453, line: 2408, type: !20)
!1632 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1629, file: !453, line: 2408, type: !20)
!1633 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1629, file: !453, line: 2410, type: !20)
!1634 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1635, file: !453, line: 2420, type: !20)
!1635 = distinct !DILexicalBlock(scope: !1636, file: !453, line: 2420, column: 12)
!1636 = distinct !DILexicalBlock(scope: !1637, file: !453, line: 2414, column: 54)
!1637 = distinct !DILexicalBlock(scope: !1629, file: !453, line: 2412, column: 9)
!1638 = !DISubprogram(name: "failing_converter", scope: !453, file: !453, line: 2399, type: !281, isLocal: true, isDefinition: true, scopeLine: 2400, flags: DIFlagPrototyped, isOptimized: true, function: i32 (%struct._object*, i8*)* @failing_converter, variables: !1639)
!1639 = !{!1640, !1641}
!1640 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "obj", arg: 1, scope: !1638, file: !453, line: 2399, type: !20)
!1641 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "arg", arg: 2, scope: !1638, file: !453, line: 2399, type: !105)
!1642 = !DISubprogram(name: "code_newempty", scope: !453, file: !453, line: 2429, type: !142, isLocal: true, isDefinition: true, scopeLine: 2430, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @code_newempty, variables: !1643)
!1643 = !{!1644, !1645, !1646, !1647, !1648}
!1644 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1642, file: !453, line: 2429, type: !20)
!1645 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1642, file: !453, line: 2429, type: !20)
!1646 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "filename", scope: !1642, file: !453, line: 2431, type: !44)
!1647 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "funcname", scope: !1642, file: !453, line: 2432, type: !44)
!1648 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "firstlineno", scope: !1642, file: !453, line: 2433, type: !59)
!1649 = !DISubprogram(name: "make_exception_with_doc", scope: !453, file: !453, line: 2445, type: !151, isLocal: true, isDefinition: true, scopeLine: 2446, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @make_exception_with_doc, variables: !1650)
!1650 = !{!1651, !1652, !1653, !1654, !1655, !1656, !1657}
!1651 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1649, file: !453, line: 2445, type: !20)
!1652 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1649, file: !453, line: 2445, type: !20)
!1653 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1649, file: !453, line: 2445, type: !20)
!1654 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !1649, file: !453, line: 2447, type: !44)
!1655 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "doc", scope: !1649, file: !453, line: 2448, type: !44)
!1656 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "base", scope: !1649, file: !453, line: 2449, type: !20)
!1657 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dict", scope: !1649, file: !453, line: 2450, type: !20)
!1658 = !DISubprogram(name: "make_memoryview_from_NULL_pointer", scope: !453, file: !453, line: 2463, type: !132, isLocal: true, isDefinition: true, scopeLine: 2464, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @make_memoryview_from_NULL_pointer, variables: !1659)
!1659 = !{!1660, !1661}
!1660 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1658, file: !453, line: 2463, type: !20)
!1661 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "info", scope: !1658, file: !453, line: 2465, type: !252)
!1662 = !DISubprogram(name: "crash_no_current_thread", scope: !453, file: !453, line: 2474, type: !132, isLocal: true, isDefinition: true, scopeLine: 2475, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @crash_no_current_thread, variables: !1663)
!1663 = !{!1664, !1665}
!1664 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1662, file: !453, line: 2474, type: !20)
!1665 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1666, file: !453, line: 2476, type: !517)
!1666 = distinct !DILexicalBlock(scope: !1662, file: !453, line: 2476, column: 5)
!1667 = !DISubprogram(name: "run_in_subinterp", scope: !453, file: !453, line: 2488, type: !142, isLocal: true, isDefinition: true, scopeLine: 2489, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @run_in_subinterp, variables: !1668)
!1668 = !{!1669, !1670, !1671, !1672, !1673, !1674}
!1669 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1667, file: !453, line: 2488, type: !20)
!1670 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1667, file: !453, line: 2488, type: !20)
!1671 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "code", scope: !1667, file: !453, line: 2490, type: !44)
!1672 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "r", scope: !1667, file: !453, line: 2491, type: !59)
!1673 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "substate", scope: !1667, file: !453, line: 2492, type: !517)
!1674 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mainstate", scope: !1667, file: !453, line: 2492, type: !517)
!1675 = !DISubprogram(name: "test_pytime_object_to_time_t", scope: !453, file: !453, line: 2530, type: !142, isLocal: true, isDefinition: true, scopeLine: 2531, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @test_pytime_object_to_time_t, variables: !1676)
!1676 = !{!1677, !1678, !1679, !1680, !1683}
!1677 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1675, file: !453, line: 2530, type: !20)
!1678 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1675, file: !453, line: 2530, type: !20)
!1679 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !1675, file: !453, line: 2532, type: !20)
!1680 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sec", scope: !1675, file: !453, line: 2533, type: !1681)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !1682, line: 75, baseType: !1514)
!1682 = !DIFile(filename: "/usr/include/time.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1683 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "round", scope: !1675, file: !453, line: 2534, type: !59)
!1684 = !DISubprogram(name: "check_time_rounding", scope: !453, file: !453, line: 2520, type: !660, isLocal: true, isDefinition: true, scopeLine: 2521, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32)* @check_time_rounding, variables: !1685)
!1685 = !{!1686}
!1686 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "round", arg: 1, scope: !1684, file: !453, line: 2520, type: !59)
!1687 = !DISubprogram(name: "test_pytime_object_to_timeval", scope: !453, file: !453, line: 2545, type: !142, isLocal: true, isDefinition: true, scopeLine: 2546, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @test_pytime_object_to_timeval, variables: !1688)
!1688 = !{!1689, !1690, !1691, !1692, !1693, !1694}
!1689 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1687, file: !453, line: 2545, type: !20)
!1690 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1687, file: !453, line: 2545, type: !20)
!1691 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !1687, file: !453, line: 2547, type: !20)
!1692 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sec", scope: !1687, file: !453, line: 2548, type: !1681)
!1693 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "usec", scope: !1687, file: !453, line: 2549, type: !32)
!1694 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "round", scope: !1687, file: !453, line: 2550, type: !59)
!1695 = !DISubprogram(name: "test_pytime_object_to_timespec", scope: !453, file: !453, line: 2561, type: !142, isLocal: true, isDefinition: true, scopeLine: 2562, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @test_pytime_object_to_timespec, variables: !1696)
!1696 = !{!1697, !1698, !1699, !1700, !1701, !1702}
!1697 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1695, file: !453, line: 2561, type: !20)
!1698 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1695, file: !453, line: 2561, type: !20)
!1699 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !1695, file: !453, line: 2563, type: !20)
!1700 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sec", scope: !1695, file: !453, line: 2564, type: !1681)
!1701 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nsec", scope: !1695, file: !453, line: 2565, type: !32)
!1702 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "round", scope: !1695, file: !453, line: 2566, type: !59)
!1703 = !DISubprogram(name: "with_tp_del", scope: !453, file: !453, line: 2637, type: !142, isLocal: true, isDefinition: true, scopeLine: 2638, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @with_tp_del, variables: !1704)
!1704 = !{!1705, !1706, !1707, !1708}
!1705 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1703, file: !453, line: 2637, type: !20)
!1706 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1703, file: !453, line: 2637, type: !20)
!1707 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "obj", scope: !1703, file: !453, line: 2639, type: !20)
!1708 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tp", scope: !1703, file: !453, line: 2640, type: !380)
!1709 = !DISubprogram(name: "slot_tp_del", scope: !453, file: !453, line: 2577, type: !52, isLocal: true, isDefinition: true, scopeLine: 2578, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._object*)* @slot_tp_del, variables: !1710)
!1710 = !{!1711, !1712, !1713, !1714, !1715, !1716, !1717, !1722, !1724}
!1711 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1709, file: !453, line: 2577, type: !20)
!1712 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "del", scope: !1709, file: !453, line: 2580, type: !20)
!1713 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1709, file: !453, line: 2580, type: !20)
!1714 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "error_type", scope: !1709, file: !453, line: 2581, type: !20)
!1715 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "error_value", scope: !1709, file: !453, line: 2581, type: !20)
!1716 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "error_traceback", scope: !1709, file: !453, line: 2581, type: !20)
!1717 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1718, file: !453, line: 2597, type: !20)
!1718 = distinct !DILexicalBlock(scope: !1719, file: !453, line: 2597, column: 16)
!1719 = distinct !DILexicalBlock(scope: !1720, file: !453, line: 2594, column: 13)
!1720 = distinct !DILexicalBlock(scope: !1721, file: !453, line: 2592, column: 28)
!1721 = distinct !DILexicalBlock(scope: !1709, file: !453, line: 2592, column: 9)
!1722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1723, file: !453, line: 2598, type: !20)
!1723 = distinct !DILexicalBlock(scope: !1720, file: !453, line: 2598, column: 12)
!1724 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "refcnt", scope: !1725, file: !453, line: 2615, type: !26)
!1725 = distinct !DILexicalBlock(scope: !1709, file: !453, line: 2614, column: 5)
!1726 = !DISubprogram(name: "test_pymem_alloc0", scope: !453, file: !453, line: 2709, type: !132, isLocal: true, isDefinition: true, scopeLine: 2710, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_pymem_alloc0, variables: !1727)
!1727 = !{!1728, !1729}
!1728 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1726, file: !453, line: 2709, type: !20)
!1729 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !1726, file: !453, line: 2711, type: !105)
!1730 = !DISubprogram(name: "test_pymem_setrawallocators", scope: !453, file: !453, line: 2847, type: !132, isLocal: true, isDefinition: true, scopeLine: 2848, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_pymem_setrawallocators, variables: !1731)
!1731 = !{!1732}
!1732 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1730, file: !453, line: 2847, type: !20)
!1733 = !DISubprogram(name: "test_setallocators", scope: !453, file: !453, line: 2762, type: !1734, isLocal: true, isDefinition: true, scopeLine: 2763, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (i32)* @test_setallocators, variables: !1737)
!1734 = !DISubroutineType(types: !1735)
!1735 = !{!20, !1736}
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMemAllocatorDomain", file: !14, line: 126, baseType: !13)
!1737 = !{!1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746}
!1738 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "domain", arg: 1, scope: !1733, file: !453, line: 2762, type: !1736)
!1739 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1733, file: !453, line: 2764, type: !20)
!1740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "error_msg", scope: !1733, file: !453, line: 2765, type: !44)
!1741 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hook", scope: !1733, file: !453, line: 2766, type: !452)
!1742 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "alloc", scope: !1733, file: !453, line: 2767, type: !457)
!1743 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !1733, file: !453, line: 2768, type: !110)
!1744 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size2", scope: !1733, file: !453, line: 2768, type: !110)
!1745 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr", scope: !1733, file: !453, line: 2769, type: !105)
!1746 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ptr2", scope: !1733, file: !453, line: 2769, type: !105)
!1747 = !DISubprogram(name: "hook_malloc", scope: !453, file: !453, line: 2739, type: !463, isLocal: true, isDefinition: true, scopeLine: 2740, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*, i64)* @hook_malloc, variables: !1748)
!1748 = !{!1749, !1750, !1751}
!1749 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 1, scope: !1747, file: !453, line: 2739, type: !105)
!1750 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 2, scope: !1747, file: !453, line: 2739, type: !110)
!1751 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hook", scope: !1747, file: !453, line: 2741, type: !451)
!1752 = !DISubprogram(name: "hook_realloc", scope: !453, file: !453, line: 2746, type: !467, isLocal: true, isDefinition: true, scopeLine: 2747, flags: DIFlagPrototyped, isOptimized: true, function: i8* (i8*, i8*, i64)* @hook_realloc, variables: !1753)
!1753 = !{!1754, !1755, !1756, !1757}
!1754 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 1, scope: !1752, file: !453, line: 2746, type: !105)
!1755 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 2, scope: !1752, file: !453, line: 2746, type: !105)
!1756 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "new_size", arg: 3, scope: !1752, file: !453, line: 2746, type: !110)
!1757 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hook", scope: !1752, file: !453, line: 2748, type: !451)
!1758 = !DISubprogram(name: "hook_free", scope: !453, file: !453, line: 2754, type: !471, isLocal: true, isDefinition: true, scopeLine: 2755, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*, i8*)* @hook_free, variables: !1759)
!1759 = !{!1760, !1761, !1762}
!1760 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ctx", arg: 1, scope: !1758, file: !453, line: 2754, type: !105)
!1761 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 2, scope: !1758, file: !453, line: 2754, type: !105)
!1762 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hook", scope: !1758, file: !453, line: 2756, type: !451)
!1763 = !DISubprogram(name: "test_pymem_setallocators", scope: !453, file: !453, line: 2853, type: !132, isLocal: true, isDefinition: true, scopeLine: 2854, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_pymem_setallocators, variables: !1764)
!1764 = !{!1765}
!1765 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1763, file: !453, line: 2853, type: !20)
!1766 = !DISubprogram(name: "test_pyobject_setallocators", scope: !453, file: !453, line: 2859, type: !132, isLocal: true, isDefinition: true, scopeLine: 2860, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*)* @test_pyobject_setallocators, variables: !1767)
!1767 = !{!1768}
!1768 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1766, file: !453, line: 2859, type: !20)
!1769 = !DISubprogram(name: "call_in_temporary_c_thread", scope: !453, file: !453, line: 2952, type: !142, isLocal: true, isDefinition: true, scopeLine: 2953, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._object*, %struct._object*)* @call_in_temporary_c_thread, variables: !1770)
!1770 = !{!1771, !1772, !1773, !1774, !1783, !1784, !1786, !1788}
!1771 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "self", arg: 1, scope: !1769, file: !453, line: 2952, type: !20)
!1772 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "callback", arg: 2, scope: !1769, file: !453, line: 2952, type: !20)
!1773 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1769, file: !453, line: 2954, type: !20)
!1774 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "test_c_thread", scope: !1769, file: !453, line: 2955, type: !1775)
!1775 = !DIDerivedType(tag: DW_TAG_typedef, name: "test_c_thread_t", file: !453, line: 2919, baseType: !1776)
!1776 = !DICompositeType(tag: DW_TAG_structure_type, file: !453, line: 2915, size: 192, align: 64, elements: !1777)
!1777 = !{!1778, !1781, !1782}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "start_event", scope: !1776, file: !453, line: 2916, baseType: !1779, size: 64, align: 64)
!1779 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyThread_type_lock", file: !1780, line: 5, baseType: !105)
!1780 = !DIFile(filename: "./Include/pythread.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "exit_event", scope: !1776, file: !453, line: 2917, baseType: !1779, size: 64, align: 64, offset: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1776, file: !453, line: 2918, baseType: !20, size: 64, align: 64, offset: 128)
!1783 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "thread", scope: !1769, file: !453, line: 2956, type: !32)
!1784 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_save", scope: !1785, file: !453, line: 2985, type: !517)
!1785 = distinct !DILexicalBlock(scope: !1769, file: !453, line: 2985, column: 5)
!1786 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1787, file: !453, line: 2994, type: !20)
!1787 = distinct !DILexicalBlock(scope: !1769, file: !453, line: 2994, column: 8)
!1788 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1789, file: !453, line: 2994, type: !20)
!1789 = distinct !DILexicalBlock(scope: !1790, file: !453, line: 2994, column: 139)
!1790 = distinct !DILexicalBlock(scope: !1791, file: !453, line: 2994, column: 95)
!1791 = distinct !DILexicalBlock(scope: !1787, file: !453, line: 2994, column: 72)
!1792 = !DISubprogram(name: "temporary_c_thread", scope: !453, file: !453, line: 2922, type: !354, isLocal: true, isDefinition: true, scopeLine: 2923, flags: DIFlagPrototyped, isOptimized: true, function: void (i8*)* @temporary_c_thread, variables: !1793)
!1793 = !{!1794, !1795, !1797, !1798, !1799, !1801, !1805}
!1794 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 1, scope: !1792, file: !453, line: 2922, type: !105)
!1795 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "test_c_thread", scope: !1792, file: !453, line: 2924, type: !1796)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64, align: 64)
!1797 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "state", scope: !1792, file: !453, line: 2925, type: !1497)
!1798 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !1792, file: !453, line: 2926, type: !20)
!1799 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_tmp", scope: !1800, file: !453, line: 2934, type: !20)
!1800 = distinct !DILexicalBlock(scope: !1792, file: !453, line: 2934, column: 8)
!1801 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1802, file: !453, line: 2934, type: !20)
!1802 = distinct !DILexicalBlock(scope: !1803, file: !453, line: 2934, column: 141)
!1803 = distinct !DILexicalBlock(scope: !1804, file: !453, line: 2934, column: 96)
!1804 = distinct !DILexicalBlock(scope: !1800, file: !453, line: 2934, column: 73)
!1805 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1806, file: !453, line: 2940, type: !20)
!1806 = distinct !DILexicalBlock(scope: !1807, file: !453, line: 2940, column: 12)
!1807 = distinct !DILexicalBlock(scope: !1808, file: !453, line: 2939, column: 10)
!1808 = distinct !DILexicalBlock(scope: !1792, file: !453, line: 2936, column: 9)
!1809 = !DISubprogram(name: "test_structmembers_free", scope: !453, file: !453, line: 3254, type: !52, isLocal: true, isDefinition: true, scopeLine: 3255, flags: DIFlagPrototyped, isOptimized: true, function: void (%struct._object*)* @test_structmembers_free, variables: !1810)
!1810 = !{!1811}
!1811 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ob", arg: 1, scope: !1809, file: !453, line: 3254, type: !20)
!1812 = !DISubprogram(name: "test_structmembers_new", scope: !453, file: !453, line: 3195, type: !1813, isLocal: true, isDefinition: true, scopeLine: 3196, flags: DIFlagPrototyped, isOptimized: true, function: %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @test_structmembers_new, variables: !1815)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!20, !380, !20, !20}
!1815 = !{!1816, !1817, !1818, !1819, !1820, !1821, !1822, !1826}
!1816 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "type", arg: 1, scope: !1812, file: !453, line: 3195, type: !380)
!1817 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 2, scope: !1812, file: !453, line: 3195, type: !20)
!1818 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kwargs", arg: 3, scope: !1812, file: !453, line: 3195, type: !20)
!1819 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ob", scope: !1812, file: !453, line: 3210, type: !477)
!1820 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !1812, file: !453, line: 3211, type: !44)
!1821 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "string_len", scope: !1812, file: !453, line: 3212, type: !26)
!1822 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1823, file: !453, line: 3236, type: !20)
!1823 = distinct !DILexicalBlock(scope: !1824, file: !453, line: 3236, column: 12)
!1824 = distinct !DILexicalBlock(scope: !1825, file: !453, line: 3235, column: 12)
!1825 = distinct !DILexicalBlock(scope: !1812, file: !453, line: 3217, column: 9)
!1826 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_py_decref_tmp", scope: !1827, file: !453, line: 3241, type: !20)
!1827 = distinct !DILexicalBlock(scope: !1828, file: !453, line: 3241, column: 16)
!1828 = distinct !DILexicalBlock(scope: !1829, file: !453, line: 3240, column: 29)
!1829 = distinct !DILexicalBlock(scope: !1830, file: !453, line: 3240, column: 13)
!1830 = distinct !DILexicalBlock(scope: !1831, file: !453, line: 3239, column: 26)
!1831 = distinct !DILexicalBlock(scope: !1812, file: !453, line: 3239, column: 9)
!1832 = !{!1833, !1834, !1857, !1861, !1862, !1863, !1865, !1869, !1870, !1871, !1872, !1873, !1874, !1876, !1877, !1879, !1881, !1886, !1888, !1889, !1890, !1891, !1895, !1903, !1904, !1908, !1912, !1916, !1920, !1924, !1928, !1929, !1930, !1934, !1936}
!1833 = !DIGlobalVariable(name: "TestError", scope: !0, file: !453, line: 18, type: !20, isLocal: true, isDefinition: true, variable: %struct._object** @TestError)
!1834 = !DIGlobalVariable(name: "_testcapimodule", scope: !0, file: !453, line: 3302, type: !1835, isLocal: true, isDefinition: true, variable: %struct.PyModuleDef* @_testcapimodule)
!1835 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef", file: !1836, line: 47, size: 832, align: 64, elements: !1837)
!1836 = !DIFile(filename: "./Include/moduleobject.h", directory: "/home/yoonseung.kim/top/research/pythons/Python-3.4.1")
!1837 = !{!1838, !1847, !1848, !1849, !1850, !1853, !1854, !1855, !1856}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "m_base", scope: !1835, file: !1836, line: 48, baseType: !1839, size: 320, align: 64)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyModuleDef_Base", file: !1836, line: 38, baseType: !1840)
!1840 = !DICompositeType(tag: DW_TAG_structure_type, name: "PyModuleDef_Base", file: !1836, line: 33, size: 320, align: 64, elements: !1841)
!1841 = !{!1842, !1843, !1845, !1846}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "ob_base", scope: !1840, file: !1836, line: 34, baseType: !21, size: 128, align: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "m_init", scope: !1840, file: !1836, line: 35, baseType: !1844, size: 64, align: 64, offset: 128)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64, align: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "m_index", scope: !1840, file: !1836, line: 36, baseType: !26, size: 64, align: 64, offset: 192)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "m_copy", scope: !1840, file: !1836, line: 37, baseType: !20, size: 64, align: 64, offset: 256)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "m_name", scope: !1835, file: !1836, line: 49, baseType: !44, size: 64, align: 64, offset: 320)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "m_doc", scope: !1835, file: !1836, line: 50, baseType: !44, size: 64, align: 64, offset: 384)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1835, file: !1836, line: 51, baseType: !26, size: 64, align: 64, offset: 448)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "m_methods", scope: !1835, file: !1836, line: 52, baseType: !1851, size: 64, align: 64, offset: 512)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64, align: 64)
!1852 = !DIDerivedType(tag: DW_TAG_typedef, name: "PyMethodDef", file: !297, line: 47, baseType: !296)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "m_reload", scope: !1835, file: !1836, line: 53, baseType: !158, size: 64, align: 64, offset: 576)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "m_traverse", scope: !1835, file: !1836, line: 54, baseType: !275, size: 64, align: 64, offset: 640)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "m_clear", scope: !1835, file: !1836, line: 55, baseType: !158, size: 64, align: 64, offset: 704)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "m_free", scope: !1835, file: !1836, line: 56, baseType: !352, size: 64, align: 64, offset: 768)
!1857 = !DIGlobalVariable(name: "TestMethods", scope: !0, file: !453, line: 3004, type: !1858, isLocal: true, isDefinition: true, variable: <{ { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }, { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* } }>* @TestMethods)
!1858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1852, size: 25856, align: 64, elements: !1859)
!1859 = !{!1860}
!1860 = !DISubrange(count: 101)
!1861 = !DIGlobalVariable(name: "PyDateTimeAPI", scope: !0, file: !376, line: 191, type: !374, isLocal: true, isDefinition: true, variable: %struct.PyDateTime_CAPI** @PyDateTimeAPI)
!1862 = !DIGlobalVariable(name: "test_run_counter", scope: !0, file: !453, line: 1809, type: !59, isLocal: true, isDefinition: true, variable: i32* @test_run_counter)
!1863 = !DIGlobalVariable(name: "kwlist", scope: !911, file: !453, line: 1656, type: !1864, isLocal: true, isDefinition: true, variable: [1 x i8*]* @test_empty_argparse.kwlist)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 64, align: 64, elements: !97)
!1865 = !DIGlobalVariable(name: "buffer", scope: !1015, file: !453, line: 2165, type: !1866, isLocal: true, isDefinition: true, variable: [256 x i8]* @test_capsule.buffer)
!1866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 2048, align: 8, elements: !1867)
!1867 = !{!1868}
!1868 = !DISubrange(count: 256)
!1869 = !DIGlobalVariable(name: "capsule_pointer", scope: !0, file: !453, line: 2073, type: !67, isLocal: true, isDefinition: true, variable: i8** @capsule_pointer)
!1870 = !DIGlobalVariable(name: "capsule_name", scope: !0, file: !453, line: 2072, type: !44, isLocal: true, isDefinition: true, variable: i8** @capsule_name)
!1871 = !DIGlobalVariable(name: "capsule_context", scope: !0, file: !453, line: 2074, type: !67, isLocal: true, isDefinition: true, variable: i8** @capsule_context)
!1872 = !DIGlobalVariable(name: "capsule_error", scope: !0, file: !453, line: 2075, type: !44, isLocal: true, isDefinition: true, variable: i8** @capsule_error)
!1873 = !DIGlobalVariable(name: "capsule_destructor_call_count", scope: !0, file: !453, line: 2077, type: !59, isLocal: true, isDefinition: true, variable: i32* @capsule_destructor_call_count)
!1874 = !DIGlobalVariable(name: "keywords", scope: !1078, file: !453, line: 876, type: !1875, isLocal: true, isDefinition: true, variable: [6 x i8*]* @getargs_keywords.keywords)
!1875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 384, align: 64, elements: !504)
!1876 = !DIGlobalVariable(name: "fmt", scope: !1078, file: !453, line: 877, type: !67, isLocal: true, isDefinition: true, variable: i8** @getargs_keywords.fmt)
!1877 = !DIGlobalVariable(name: "keywords", scope: !1087, file: !453, line: 893, type: !1878, isLocal: true, isDefinition: true, variable: [4 x i8*]* @getargs_keyword_only.keywords)
!1878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 256, align: 64, elements: !1031)
!1879 = !DIGlobalVariable(name: "x", scope: !0, file: !453, line: 1334, type: !1880, isLocal: true, isDefinition: true, variable: i32* @x)
!1880 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !59)
!1881 = !DIGlobalVariable(name: "wtext", scope: !1400, file: !453, line: 1437, type: !1882, isLocal: true, isDefinition: true, variable: [2 x i32]* @test_widechar.wtext)
!1882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1883, size: 64, align: 32, elements: !1884)
!1883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !442)
!1884 = !{!1885}
!1885 = !DISubrange(count: 2)
!1886 = !DIGlobalVariable(name: "invalid", scope: !1400, file: !453, line: 1439, type: !1887, isLocal: true, isDefinition: true, variable: [1 x i32]* @test_widechar.invalid)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1883, size: 32, align: 32, elements: !97)
!1888 = !DIGlobalVariable(name: "thread_done", scope: !0, file: !453, line: 1842, type: !1779, isLocal: true, isDefinition: true, variable: i8** @thread_done)
!1889 = !DIGlobalVariable(name: "str2", scope: !0, file: !453, line: 2397, type: !20, isLocal: true, isDefinition: true, variable: %struct._object** @str2)
!1890 = !DIGlobalVariable(name: "str1", scope: !0, file: !453, line: 2397, type: !20, isLocal: true, isDefinition: true, variable: %struct._object** @str1)
!1891 = !DIGlobalVariable(name: "kwlist", scope: !1649, file: !453, line: 2452, type: !1892, isLocal: true, isDefinition: true, variable: [5 x i8*]* @make_exception_with_doc.kwlist)
!1892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 320, align: 64, elements: !1893)
!1893 = !{!1894}
!1894 = !DISubrange(count: 5)
!1895 = !DIGlobalVariable(name: "PyId___tp_del__", scope: !1709, file: !453, line: 2579, type: !1896, isLocal: true, isDefinition: true, variable: %struct._Py_Identifier* @slot_tp_del.PyId___tp_del__)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Py_Identifier", file: !22, line: 144, baseType: !1897)
!1897 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Py_Identifier", file: !22, line: 140, size: 192, align: 64, elements: !1898)
!1898 = !{!1899, !1901, !1902}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1897, file: !22, line: 141, baseType: !1900, size: 64, align: 64)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64, align: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1897, file: !22, line: 142, baseType: !44, size: 64, align: 64, offset: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1897, file: !22, line: 143, baseType: !20, size: 64, align: 64, offset: 128)
!1903 = !DIGlobalVariable(name: "docstring_empty", scope: !0, file: !453, line: 2864, type: !96, isLocal: true, isDefinition: true, variable: [1 x i8]* @docstring_empty)
!1904 = !DIGlobalVariable(name: "docstring_no_signature", scope: !0, file: !453, line: 2868, type: !1905, isLocal: true, isDefinition: true, variable: [33 x i8]* @docstring_no_signature)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 264, align: 8, elements: !1906)
!1906 = !{!1907}
!1907 = !DISubrange(count: 33)
!1908 = !DIGlobalVariable(name: "docstring_with_invalid_signature", scope: !0, file: !453, line: 2872, type: !1909, isLocal: true, isDefinition: true, variable: [92 x i8]* @docstring_with_invalid_signature)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 736, align: 8, elements: !1910)
!1910 = !{!1911}
!1911 = !DISubrange(count: 92)
!1912 = !DIGlobalVariable(name: "docstring_with_invalid_signature2", scope: !0, file: !453, line: 2878, type: !1913, isLocal: true, isDefinition: true, variable: [102 x i8]* @docstring_with_invalid_signature2)
!1913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 816, align: 8, elements: !1914)
!1914 = !{!1915}
!1915 = !DISubrange(count: 102)
!1916 = !DIGlobalVariable(name: "docstring_with_signature", scope: !0, file: !453, line: 2886, type: !1917, isLocal: true, isDefinition: true, variable: [84 x i8]* @docstring_with_signature)
!1917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 672, align: 8, elements: !1918)
!1918 = !{!1919}
!1919 = !DISubrange(count: 84)
!1920 = !DIGlobalVariable(name: "docstring_with_signature_and_extra_newlines", scope: !0, file: !453, line: 2893, type: !1921, isLocal: true, isDefinition: true, variable: [134 x i8]* @docstring_with_signature_and_extra_newlines)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 1072, align: 8, elements: !1922)
!1922 = !{!1923}
!1923 = !DISubrange(count: 134)
!1924 = !DIGlobalVariable(name: "docstring_with_signature_with_defaults", scope: !0, file: !453, line: 2901, type: !1925, isLocal: true, isDefinition: true, variable: [308 x i8]* @docstring_with_signature_with_defaults)
!1925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 2464, align: 8, elements: !1926)
!1926 = !{!1927}
!1927 = !DISubrange(count: 308)
!1928 = !DIGlobalVariable(name: "_HashInheritanceTester_Type", scope: !0, file: !453, line: 242, type: !381, isLocal: true, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @_HashInheritanceTester_Type)
!1929 = !DIGlobalVariable(name: "test_structmembersType", scope: !0, file: !453, line: 3259, type: !381, isLocal: true, isDefinition: true, variable: { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }* @test_structmembersType)
!1930 = !DIGlobalVariable(name: "test_members", scope: !0, file: !453, line: 3172, type: !1931, isLocal: true, isDefinition: true, variable: [16 x %struct.PyMemberDef]* @test_members)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !306, size: 5120, align: 64, elements: !1932)
!1932 = !{!1933}
!1933 = !DISubrange(count: 16)
!1934 = !DIGlobalVariable(name: "keywords", scope: !1812, file: !453, line: 3197, type: !1935, isLocal: true, isDefinition: true, variable: [16 x i8*]* @test_structmembers_new.keywords)
!1935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 1024, align: 64, elements: !1932)
!1936 = !DIGlobalVariable(name: "fmt", scope: !1812, file: !453, line: 3205, type: !67, isLocal: true, isDefinition: true, variable: i8** @test_structmembers_new.fmt)
!1937 = !{i32 2, !"Dwarf Version", i32 4}
!1938 = !{i32 2, !"Debug Info Version", i32 3}
!1939 = !{i32 1, !"PIC Level", i32 2}
!1940 = !{!"clang version 3.7.1 (https://github.com/llvm-mirror/clang.git 0dbefa1b83eb90f7a06b5df5df254ce32be3db4b) (git@github.com:kim-yoonseung/llvm.git e8e68907a8135028089af4d924da468e2b7257fa)"}
!1941 = !{!1942, !1942, i64 0}
!1942 = !{!"any pointer", !1943, i64 0}
!1943 = !{!"omnipotent char", !1944, i64 0}
!1944 = !{!"Simple C/C++ TBAA"}
!1945 = !DIExpression()
!1946 = !DILocation(line: 1932, column: 40, scope: !509)
!1947 = !DILocation(line: 1932, column: 56, scope: !509)
!1948 = !DILocation(line: 1934, column: 5, scope: !509)
!1949 = !DILocation(line: 1934, column: 15, scope: !509)
!1950 = !DILocation(line: 1935, column: 5, scope: !509)
!1951 = !DILocation(line: 1935, column: 9, scope: !509)
!1952 = !DILocation(line: 1936, column: 33, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !509, file: !453, line: 1936, column: 9)
!1954 = !DILocation(line: 1936, column: 9, scope: !1953)
!1955 = !DILocation(line: 1936, column: 54, scope: !1953)
!1956 = !DILocation(line: 1936, column: 9, scope: !509)
!1957 = !DILocation(line: 1937, column: 9, scope: !1953)
!1958 = !DILocation(line: 1940, column: 21, scope: !509)
!1959 = !DILocation(line: 1940, column: 33, scope: !509)
!1960 = !DILocation(line: 1940, column: 42, scope: !509)
!1961 = !{!1962, !1963, i64 0}
!1962 = !{!"_object", !1963, i64 0, !1942, i64 8}
!1963 = !{!"long", !1943, i64 0}
!1964 = !DILocation(line: 1942, column: 7, scope: !516)
!1965 = !DILocation(line: 1942, column: 22, scope: !516)
!1966 = !DILocation(line: 1942, column: 37, scope: !516)
!1967 = !DILocation(line: 1942, column: 35, scope: !516)
!1968 = !DILocation(line: 1943, column: 47, scope: !516)
!1969 = !DILocation(line: 1943, column: 9, scope: !516)
!1970 = !DILocation(line: 1943, column: 7, scope: !516)
!1971 = !{!1972, !1972, i64 0}
!1972 = !{!"int", !1943, i64 0}
!1973 = !DILocation(line: 1944, column: 26, scope: !516)
!1974 = !DILocation(line: 1944, column: 5, scope: !516)
!1975 = !DILocation(line: 1944, column: 34, scope: !509)
!1976 = !DILocation(line: 1946, column: 9, scope: !577)
!1977 = !DILocation(line: 1946, column: 10, scope: !577)
!1978 = !DILocation(line: 1946, column: 9, scope: !509)
!1979 = !DILocation(line: 1947, column: 9, scope: !576)
!1980 = !DILocation(line: 1947, column: 14, scope: !1981)
!1981 = !DILexicalBlockFile(scope: !575, file: !453, discriminator: 1)
!1982 = !DILocation(line: 1947, column: 24, scope: !575)
!1983 = !DILocation(line: 1947, column: 54, scope: !575)
!1984 = !DILocation(line: 1947, column: 73, scope: !1985)
!1985 = distinct !DILexicalBlock(scope: !575, file: !453, line: 1947, column: 70)
!1986 = !DILocation(line: 1947, column: 90, scope: !1985)
!1987 = !DILocation(line: 1947, column: 70, scope: !1985)
!1988 = !DILocation(line: 1947, column: 100, scope: !1985)
!1989 = !DILocation(line: 1947, column: 70, scope: !575)
!1990 = !DILocation(line: 1947, column: 70, scope: !1991)
!1991 = !DILexicalBlockFile(scope: !575, file: !453, discriminator: 2)
!1992 = !DILocation(line: 1947, column: 131, scope: !1993)
!1993 = !DILexicalBlockFile(scope: !1985, file: !453, discriminator: 3)
!1994 = !DILocation(line: 1947, column: 149, scope: !1985)
!1995 = !{!1962, !1942, i64 8}
!1996 = !DILocation(line: 1947, column: 159, scope: !1985)
!1997 = !{!1998, !1942, i64 48}
!1998 = !{!"_typeobject", !1999, i64 0, !1942, i64 24, !1963, i64 32, !1963, i64 40, !1942, i64 48, !1942, i64 56, !1942, i64 64, !1942, i64 72, !1942, i64 80, !1942, i64 88, !1942, i64 96, !1942, i64 104, !1942, i64 112, !1942, i64 120, !1942, i64 128, !1942, i64 136, !1942, i64 144, !1942, i64 152, !1942, i64 160, !1963, i64 168, !1942, i64 176, !1942, i64 184, !1942, i64 192, !1942, i64 200, !1963, i64 208, !1942, i64 216, !1942, i64 224, !1942, i64 232, !1942, i64 240, !1942, i64 248, !1942, i64 256, !1942, i64 264, !1942, i64 272, !1942, i64 280, !1963, i64 288, !1942, i64 296, !1942, i64 304, !1942, i64 312, !1942, i64 320, !1942, i64 328, !1942, i64 336, !1942, i64 344, !1942, i64 352, !1942, i64 360, !1942, i64 368, !1942, i64 376, !1972, i64 384, !1942, i64 392}
!1999 = !{!"", !1962, i64 0, !1963, i64 16}
!2000 = !DILocation(line: 1947, column: 184, scope: !1985)
!2001 = !DILocation(line: 1947, column: 115, scope: !1985)
!2002 = !DILocation(line: 1947, column: 203, scope: !2003)
!2003 = !DILexicalBlockFile(scope: !576, file: !453, discriminator: 4)
!2004 = !DILocation(line: 1947, column: 203, scope: !575)
!2005 = !DILocation(line: 1947, column: 203, scope: !2006)
!2006 = !DILexicalBlockFile(scope: !575, file: !453, discriminator: 5)
!2007 = !DILocation(line: 1948, column: 69, scope: !576)
!2008 = !DILocation(line: 1949, column: 9, scope: !576)
!2009 = !DILocation(line: 1951, column: 64, scope: !509)
!2010 = !DILocation(line: 1952, column: 5, scope: !509)
!2011 = !DILocation(line: 1953, column: 1, scope: !509)
!2012 = !DILocation(line: 1919, column: 36, scope: !583)
!2013 = !DILocation(line: 1922, column: 5, scope: !583)
!2014 = !DILocation(line: 1922, column: 15, scope: !583)
!2015 = !DILocation(line: 1922, column: 38, scope: !583)
!2016 = !DILocation(line: 1922, column: 26, scope: !583)
!2017 = !DILocation(line: 1923, column: 5, scope: !583)
!2018 = !DILocation(line: 1923, column: 15, scope: !583)
!2019 = !DILocation(line: 1923, column: 39, scope: !583)
!2020 = !DILocation(line: 1923, column: 19, scope: !583)
!2021 = !DILocation(line: 1924, column: 5, scope: !583)
!2022 = !DILocation(line: 1924, column: 10, scope: !2023)
!2023 = !DILexicalBlockFile(scope: !591, file: !453, discriminator: 1)
!2024 = !DILocation(line: 1924, column: 20, scope: !591)
!2025 = !DILocation(line: 1924, column: 50, scope: !591)
!2026 = !DILocation(line: 1924, column: 69, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !591, file: !453, line: 1924, column: 66)
!2028 = !DILocation(line: 1924, column: 86, scope: !2027)
!2029 = !DILocation(line: 1924, column: 66, scope: !2027)
!2030 = !DILocation(line: 1924, column: 96, scope: !2027)
!2031 = !DILocation(line: 1924, column: 66, scope: !591)
!2032 = !DILocation(line: 1924, column: 66, scope: !2033)
!2033 = !DILexicalBlockFile(scope: !591, file: !453, discriminator: 2)
!2034 = !DILocation(line: 1924, column: 127, scope: !2035)
!2035 = !DILexicalBlockFile(scope: !2027, file: !453, discriminator: 3)
!2036 = !DILocation(line: 1924, column: 145, scope: !2027)
!2037 = !DILocation(line: 1924, column: 155, scope: !2027)
!2038 = !DILocation(line: 1924, column: 180, scope: !2027)
!2039 = !DILocation(line: 1924, column: 111, scope: !2027)
!2040 = !DILocation(line: 1924, column: 199, scope: !2041)
!2041 = !DILexicalBlockFile(scope: !583, file: !453, discriminator: 4)
!2042 = !DILocation(line: 1924, column: 199, scope: !591)
!2043 = !DILocation(line: 1924, column: 199, scope: !2044)
!2044 = !DILexicalBlockFile(scope: !591, file: !453, discriminator: 5)
!2045 = !DILocation(line: 1925, column: 5, scope: !583)
!2046 = !DILocation(line: 1925, column: 10, scope: !2047)
!2047 = !DILexicalBlockFile(scope: !593, file: !453, discriminator: 1)
!2048 = !DILocation(line: 1925, column: 20, scope: !593)
!2049 = !DILocation(line: 1925, column: 51, scope: !593)
!2050 = !DILocation(line: 1925, column: 59, scope: !596)
!2051 = !DILocation(line: 1925, column: 75, scope: !596)
!2052 = !DILocation(line: 1925, column: 59, scope: !593)
!2053 = !DILocation(line: 1925, column: 90, scope: !2054)
!2054 = !DILexicalBlockFile(scope: !596, file: !453, discriminator: 2)
!2055 = !DILocation(line: 1925, column: 95, scope: !2056)
!2056 = !DILexicalBlockFile(scope: !595, file: !453, discriminator: 4)
!2057 = !DILocation(line: 1925, column: 105, scope: !595)
!2058 = !DILocation(line: 1925, column: 135, scope: !595)
!2059 = !DILocation(line: 1925, column: 161, scope: !2060)
!2060 = distinct !DILexicalBlock(scope: !595, file: !453, line: 1925, column: 158)
!2061 = !DILocation(line: 1925, column: 178, scope: !2060)
!2062 = !DILocation(line: 1925, column: 158, scope: !2060)
!2063 = !DILocation(line: 1925, column: 188, scope: !2060)
!2064 = !DILocation(line: 1925, column: 158, scope: !595)
!2065 = !DILocation(line: 1925, column: 158, scope: !2066)
!2066 = !DILexicalBlockFile(scope: !595, file: !453, discriminator: 5)
!2067 = !DILocation(line: 1925, column: 219, scope: !2068)
!2068 = !DILexicalBlockFile(scope: !2060, file: !453, discriminator: 6)
!2069 = !DILocation(line: 1925, column: 237, scope: !2060)
!2070 = !DILocation(line: 1925, column: 247, scope: !2060)
!2071 = !DILocation(line: 1925, column: 272, scope: !2060)
!2072 = !DILocation(line: 1925, column: 203, scope: !2060)
!2073 = !DILocation(line: 1925, column: 291, scope: !2074)
!2074 = !DILexicalBlockFile(scope: !596, file: !453, discriminator: 7)
!2075 = !DILocation(line: 1925, column: 291, scope: !595)
!2076 = !DILocation(line: 1925, column: 291, scope: !2077)
!2077 = !DILexicalBlockFile(scope: !595, file: !453, discriminator: 8)
!2078 = !DILocation(line: 1925, column: 291, scope: !2079)
!2079 = !DILexicalBlockFile(scope: !595, file: !453, discriminator: 9)
!2080 = !DILocation(line: 1925, column: 304, scope: !2081)
!2081 = !DILexicalBlockFile(scope: !2082, file: !453, discriminator: 10)
!2082 = !DILexicalBlockFile(scope: !583, file: !453, discriminator: 3)
!2083 = !DILocation(line: 1925, column: 304, scope: !593)
!2084 = !DILocation(line: 1925, column: 304, scope: !2085)
!2085 = !DILexicalBlockFile(scope: !593, file: !453, discriminator: 11)
!2086 = !DILocation(line: 1926, column: 12, scope: !583)
!2087 = !DILocation(line: 1926, column: 14, scope: !583)
!2088 = !DILocation(line: 1927, column: 1, scope: !583)
!2089 = !DILocation(line: 1926, column: 5, scope: !583)
!2090 = !DILocation(line: 3317, column: 5, scope: !578)
!2091 = !DILocation(line: 3317, column: 15, scope: !578)
!2092 = !DILocation(line: 3319, column: 9, scope: !578)
!2093 = !DILocation(line: 3319, column: 7, scope: !578)
!2094 = !DILocation(line: 3320, column: 9, scope: !2095)
!2095 = distinct !DILexicalBlock(scope: !578, file: !453, line: 3320, column: 9)
!2096 = !DILocation(line: 3320, column: 11, scope: !2095)
!2097 = !DILocation(line: 3320, column: 9, scope: !578)
!2098 = !DILocation(line: 3321, column: 9, scope: !2095)
!2099 = !DILocation(line: 3323, column: 59, scope: !578)
!2100 = !DILocation(line: 3325, column: 54, scope: !578)
!2101 = !DILocation(line: 3326, column: 57, scope: !578)
!2102 = !DILocation(line: 3329, column: 24, scope: !578)
!2103 = !DILocation(line: 3329, column: 5, scope: !578)
!2104 = !DILocation(line: 3331, column: 24, scope: !578)
!2105 = !DILocation(line: 3331, column: 39, scope: !578)
!2106 = !DILocation(line: 3331, column: 5, scope: !578)
!2107 = !DILocation(line: 3332, column: 24, scope: !578)
!2108 = !DILocation(line: 3332, column: 39, scope: !578)
!2109 = !DILocation(line: 3332, column: 5, scope: !578)
!2110 = !DILocation(line: 3333, column: 24, scope: !578)
!2111 = !DILocation(line: 3333, column: 40, scope: !578)
!2112 = !DILocation(line: 3333, column: 5, scope: !578)
!2113 = !DILocation(line: 3334, column: 24, scope: !578)
!2114 = !DILocation(line: 3334, column: 39, scope: !578)
!2115 = !DILocation(line: 3334, column: 5, scope: !578)
!2116 = !DILocation(line: 3335, column: 24, scope: !578)
!2117 = !DILocation(line: 3335, column: 39, scope: !578)
!2118 = !DILocation(line: 3335, column: 5, scope: !578)
!2119 = !DILocation(line: 3336, column: 24, scope: !578)
!2120 = !DILocation(line: 3336, column: 40, scope: !578)
!2121 = !DILocation(line: 3336, column: 5, scope: !578)
!2122 = !DILocation(line: 3337, column: 24, scope: !578)
!2123 = !DILocation(line: 3337, column: 38, scope: !578)
!2124 = !DILocation(line: 3337, column: 5, scope: !578)
!2125 = !DILocation(line: 3338, column: 24, scope: !578)
!2126 = !DILocation(line: 3338, column: 38, scope: !578)
!2127 = !DILocation(line: 3338, column: 5, scope: !578)
!2128 = !DILocation(line: 3339, column: 24, scope: !578)
!2129 = !DILocation(line: 3339, column: 39, scope: !578)
!2130 = !DILocation(line: 3339, column: 5, scope: !578)
!2131 = !DILocation(line: 3340, column: 24, scope: !578)
!2132 = !DILocation(line: 3340, column: 39, scope: !578)
!2133 = !DILocation(line: 3340, column: 5, scope: !578)
!2134 = !DILocation(line: 3341, column: 24, scope: !578)
!2135 = !DILocation(line: 3341, column: 39, scope: !578)
!2136 = !DILocation(line: 3341, column: 5, scope: !578)
!2137 = !DILocation(line: 3342, column: 24, scope: !578)
!2138 = !DILocation(line: 3342, column: 40, scope: !578)
!2139 = !DILocation(line: 3342, column: 5, scope: !578)
!2140 = !DILocation(line: 3343, column: 24, scope: !578)
!2141 = !DILocation(line: 3343, column: 38, scope: !578)
!2142 = !DILocation(line: 3343, column: 5, scope: !578)
!2143 = !DILocation(line: 3344, column: 24, scope: !578)
!2144 = !DILocation(line: 3344, column: 38, scope: !578)
!2145 = !DILocation(line: 3344, column: 5, scope: !578)
!2146 = !DILocation(line: 3345, column: 24, scope: !578)
!2147 = !DILocation(line: 3345, column: 38, scope: !578)
!2148 = !DILocation(line: 3345, column: 5, scope: !578)
!2149 = !DILocation(line: 3346, column: 24, scope: !578)
!2150 = !DILocation(line: 3346, column: 38, scope: !578)
!2151 = !DILocation(line: 3346, column: 5, scope: !578)
!2152 = !DILocation(line: 3347, column: 24, scope: !578)
!2153 = !DILocation(line: 3347, column: 40, scope: !578)
!2154 = !DILocation(line: 3347, column: 5, scope: !578)
!2155 = !DILocation(line: 3348, column: 24, scope: !578)
!2156 = !DILocation(line: 3348, column: 40, scope: !578)
!2157 = !DILocation(line: 3348, column: 5, scope: !578)
!2158 = !DILocation(line: 3349, column: 24, scope: !578)
!2159 = !DILocation(line: 3349, column: 41, scope: !578)
!2160 = !DILocation(line: 3349, column: 5, scope: !578)
!2161 = !DILocation(line: 3350, column: 24, scope: !578)
!2162 = !DILocation(line: 3350, column: 45, scope: !578)
!2163 = !DILocation(line: 3350, column: 5, scope: !578)
!2164 = !DILocation(line: 3351, column: 24, scope: !578)
!2165 = !DILocation(line: 3351, column: 45, scope: !578)
!2166 = !DILocation(line: 3351, column: 5, scope: !578)
!2167 = !DILocation(line: 3352, column: 24, scope: !578)
!2168 = !DILocation(line: 3352, column: 47, scope: !578)
!2169 = !DILocation(line: 3352, column: 5, scope: !578)
!2170 = !DILocation(line: 3353, column: 56, scope: !578)
!2171 = !DILocation(line: 3354, column: 24, scope: !578)
!2172 = !DILocation(line: 3354, column: 5, scope: !578)
!2173 = !DILocation(line: 3356, column: 29, scope: !578)
!2174 = !DILocation(line: 3356, column: 5, scope: !578)
!2175 = !DILocation(line: 3358, column: 17, scope: !578)
!2176 = !DILocation(line: 3358, column: 15, scope: !578)
!2177 = !DILocation(line: 3359, column: 21, scope: !578)
!2178 = !DILocation(line: 3359, column: 34, scope: !578)
!2179 = !DILocation(line: 3359, column: 43, scope: !578)
!2180 = !DILocation(line: 3360, column: 24, scope: !578)
!2181 = !DILocation(line: 3360, column: 36, scope: !578)
!2182 = !DILocation(line: 3360, column: 5, scope: !578)
!2183 = !DILocation(line: 3361, column: 12, scope: !578)
!2184 = !DILocation(line: 3361, column: 5, scope: !578)
!2185 = !DILocation(line: 3362, column: 1, scope: !578)
!2186 = !DILocation(line: 1759, column: 27, scope: !597)
!2187 = !DILocation(line: 1759, column: 43, scope: !597)
!2188 = !DILocation(line: 1761, column: 5, scope: !597)
!2189 = !DILocation(line: 1761, column: 15, scope: !597)
!2190 = !DILocation(line: 1762, column: 5, scope: !597)
!2191 = !DILocation(line: 1762, column: 15, scope: !597)
!2192 = !DILocation(line: 1762, column: 26, scope: !597)
!2193 = !DILocation(line: 1763, column: 5, scope: !597)
!2194 = !DILocation(line: 1763, column: 9, scope: !597)
!2195 = !DILocation(line: 1763, column: 19, scope: !597)
!2196 = !DILocation(line: 1765, column: 34, scope: !2197)
!2197 = distinct !DILexicalBlock(scope: !597, file: !453, line: 1765, column: 9)
!2198 = !DILocation(line: 1765, column: 10, scope: !2197)
!2199 = !DILocation(line: 1765, column: 9, scope: !597)
!2200 = !DILocation(line: 1767, column: 9, scope: !2197)
!2201 = !DILocation(line: 1769, column: 28, scope: !597)
!2202 = !DILocation(line: 1769, column: 16, scope: !597)
!2203 = !DILocation(line: 1769, column: 14, scope: !597)
!2204 = !DILocation(line: 1770, column: 9, scope: !2205)
!2205 = distinct !DILexicalBlock(scope: !597, file: !453, line: 1770, column: 9)
!2206 = !DILocation(line: 1770, column: 18, scope: !2205)
!2207 = !DILocation(line: 1770, column: 9, scope: !597)
!2208 = !DILocation(line: 1771, column: 9, scope: !2205)
!2209 = !DILocation(line: 1772, column: 12, scope: !612)
!2210 = !DILocation(line: 1772, column: 10, scope: !612)
!2211 = !DILocation(line: 1772, column: 17, scope: !2212)
!2212 = !DILexicalBlockFile(scope: !2213, file: !453, discriminator: 2)
!2213 = !DILexicalBlockFile(scope: !611, file: !453, discriminator: 1)
!2214 = !DILocation(line: 1772, column: 21, scope: !611)
!2215 = !DILocation(line: 1772, column: 19, scope: !611)
!2216 = !DILocation(line: 1772, column: 5, scope: !612)
!2217 = !DILocation(line: 1773, column: 29, scope: !610)
!2218 = !DILocation(line: 1773, column: 13, scope: !610)
!2219 = !DILocation(line: 1773, column: 11, scope: !610)
!2220 = !DILocation(line: 1774, column: 13, scope: !609)
!2221 = !DILocation(line: 1774, column: 15, scope: !609)
!2222 = !DILocation(line: 1774, column: 13, scope: !610)
!2223 = !DILocation(line: 1775, column: 13, scope: !608)
!2224 = !DILocation(line: 1775, column: 18, scope: !2225)
!2225 = !DILexicalBlockFile(scope: !607, file: !453, discriminator: 1)
!2226 = !DILocation(line: 1775, column: 28, scope: !607)
!2227 = !DILocation(line: 1775, column: 58, scope: !607)
!2228 = !DILocation(line: 1775, column: 77, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !607, file: !453, line: 1775, column: 74)
!2230 = !DILocation(line: 1775, column: 94, scope: !2229)
!2231 = !DILocation(line: 1775, column: 74, scope: !2229)
!2232 = !DILocation(line: 1775, column: 104, scope: !2229)
!2233 = !DILocation(line: 1775, column: 74, scope: !607)
!2234 = !DILocation(line: 1775, column: 74, scope: !2235)
!2235 = !DILexicalBlockFile(scope: !607, file: !453, discriminator: 2)
!2236 = !DILocation(line: 1775, column: 135, scope: !2237)
!2237 = !DILexicalBlockFile(scope: !2229, file: !453, discriminator: 3)
!2238 = !DILocation(line: 1775, column: 153, scope: !2229)
!2239 = !DILocation(line: 1775, column: 163, scope: !2229)
!2240 = !DILocation(line: 1775, column: 188, scope: !2229)
!2241 = !DILocation(line: 1775, column: 119, scope: !2229)
!2242 = !DILocation(line: 1775, column: 207, scope: !2243)
!2243 = !DILexicalBlockFile(scope: !608, file: !453, discriminator: 4)
!2244 = !DILocation(line: 1775, column: 207, scope: !607)
!2245 = !DILocation(line: 1775, column: 207, scope: !2246)
!2246 = !DILexicalBlockFile(scope: !607, file: !453, discriminator: 5)
!2247 = !DILocation(line: 1776, column: 13, scope: !608)
!2248 = !DILocation(line: 1778, column: 54, scope: !610)
!2249 = !DILocation(line: 1778, column: 49, scope: !610)
!2250 = !DILocation(line: 1778, column: 10, scope: !610)
!2251 = !DILocation(line: 1778, column: 29, scope: !610)
!2252 = !DILocation(line: 1778, column: 11, scope: !610)
!2253 = !DILocation(line: 1778, column: 41, scope: !610)
!2254 = !DILocation(line: 1778, column: 52, scope: !610)
!2255 = !DILocation(line: 1779, column: 5, scope: !610)
!2256 = !DILocation(line: 1772, column: 31, scope: !611)
!2257 = !DILocation(line: 1772, column: 5, scope: !611)
!2258 = !DILocation(line: 1780, column: 21, scope: !597)
!2259 = !DILocation(line: 1780, column: 26, scope: !597)
!2260 = !DILocation(line: 1780, column: 5, scope: !597)
!2261 = !DILocation(line: 1781, column: 5, scope: !597)
!2262 = !DILocation(line: 1781, column: 10, scope: !2263)
!2263 = !DILexicalBlockFile(scope: !614, file: !453, discriminator: 1)
!2264 = !DILocation(line: 1781, column: 20, scope: !614)
!2265 = !DILocation(line: 1781, column: 50, scope: !614)
!2266 = !DILocation(line: 1781, column: 69, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !614, file: !453, line: 1781, column: 66)
!2268 = !DILocation(line: 1781, column: 86, scope: !2267)
!2269 = !DILocation(line: 1781, column: 66, scope: !2267)
!2270 = !DILocation(line: 1781, column: 96, scope: !2267)
!2271 = !DILocation(line: 1781, column: 66, scope: !614)
!2272 = !DILocation(line: 1781, column: 66, scope: !2273)
!2273 = !DILexicalBlockFile(scope: !614, file: !453, discriminator: 2)
!2274 = !DILocation(line: 1781, column: 127, scope: !2275)
!2275 = !DILexicalBlockFile(scope: !2267, file: !453, discriminator: 3)
!2276 = !DILocation(line: 1781, column: 145, scope: !2267)
!2277 = !DILocation(line: 1781, column: 155, scope: !2267)
!2278 = !DILocation(line: 1781, column: 180, scope: !2267)
!2279 = !DILocation(line: 1781, column: 111, scope: !2267)
!2280 = !DILocation(line: 1781, column: 199, scope: !2281)
!2281 = !DILexicalBlockFile(scope: !597, file: !453, discriminator: 4)
!2282 = !DILocation(line: 1781, column: 199, scope: !614)
!2283 = !DILocation(line: 1781, column: 199, scope: !2284)
!2284 = !DILexicalBlockFile(scope: !614, file: !453, discriminator: 5)
!2285 = !DILocation(line: 1782, column: 5, scope: !597)
!2286 = !DILocation(line: 1783, column: 1, scope: !597)
!2287 = !DILocation(line: 2390, column: 29, scope: !615)
!2288 = !DILocation(line: 2392, column: 5, scope: !615)
!2289 = !DILocation(line: 2393, column: 5, scope: !615)
!2290 = !DILocation(line: 46, column: 23, scope: !618)
!2291 = !DILocation(line: 63, column: 51, scope: !618)
!2292 = !DILocation(line: 64, column: 5, scope: !618)
!2293 = !DILocation(line: 68, column: 31, scope: !621)
!2294 = !DILocation(line: 121, column: 51, scope: !621)
!2295 = !DILocation(line: 122, column: 5, scope: !621)
!2296 = !DILocation(line: 1812, column: 30, scope: !624)
!2297 = !DILocation(line: 1812, column: 46, scope: !624)
!2298 = !DILocation(line: 1813, column: 9, scope: !2299)
!2299 = distinct !DILexicalBlock(scope: !624, file: !453, line: 1813, column: 9)
!2300 = !DILocation(line: 1813, column: 9, scope: !624)
!2301 = !DILocation(line: 1814, column: 13, scope: !2302)
!2302 = distinct !DILexicalBlock(scope: !2303, file: !453, line: 1814, column: 13)
!2303 = distinct !DILexicalBlock(scope: !2299, file: !453, line: 1813, column: 24)
!2304 = !DILocation(line: 1814, column: 13, scope: !2303)
!2305 = !DILocation(line: 1816, column: 66, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2302, file: !453, line: 1814, column: 31)
!2307 = !DILocation(line: 1816, column: 13, scope: !2306)
!2308 = !DILocation(line: 1819, column: 29, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2302, file: !453, line: 1818, column: 14)
!2310 = !DILocation(line: 1819, column: 13, scope: !2309)
!2311 = !DILocation(line: 1821, column: 13, scope: !2309)
!2312 = !DILocation(line: 1824, column: 21, scope: !624)
!2313 = !DILocation(line: 1825, column: 40, scope: !624)
!2314 = !DILocation(line: 1825, column: 21, scope: !624)
!2315 = !DILocation(line: 1825, column: 19, scope: !624)
!2316 = !DILocation(line: 1826, column: 9, scope: !2317)
!2317 = distinct !DILexicalBlock(scope: !624, file: !453, line: 1826, column: 9)
!2318 = !DILocation(line: 1826, column: 9, scope: !624)
!2319 = !DILocation(line: 1827, column: 62, scope: !2317)
!2320 = !DILocation(line: 1827, column: 9, scope: !2317)
!2321 = !DILocation(line: 1829, column: 9, scope: !2317)
!2322 = !DILocation(line: 1830, column: 1, scope: !624)
!2323 = !DILocation(line: 131, column: 25, scope: !628)
!2324 = !DILocation(line: 133, column: 5, scope: !628)
!2325 = !DILocation(line: 133, column: 15, scope: !628)
!2326 = !DILocation(line: 134, column: 5, scope: !628)
!2327 = !DILocation(line: 134, column: 9, scope: !628)
!2328 = !DILocation(line: 138, column: 12, scope: !628)
!2329 = !DILocation(line: 138, column: 10, scope: !628)
!2330 = !DILocation(line: 139, column: 9, scope: !2331)
!2331 = distinct !DILexicalBlock(scope: !628, file: !453, line: 139, column: 9)
!2332 = !DILocation(line: 139, column: 14, scope: !2331)
!2333 = !DILocation(line: 139, column: 9, scope: !628)
!2334 = !DILocation(line: 140, column: 9, scope: !2331)
!2335 = !DILocation(line: 142, column: 12, scope: !636)
!2336 = !DILocation(line: 142, column: 10, scope: !636)
!2337 = !DILocation(line: 142, column: 17, scope: !2338)
!2338 = !DILexicalBlockFile(scope: !2339, file: !453, discriminator: 2)
!2339 = !DILexicalBlockFile(scope: !635, file: !453, discriminator: 1)
!2340 = !DILocation(line: 142, column: 19, scope: !635)
!2341 = !DILocation(line: 142, column: 5, scope: !636)
!2342 = !DILocation(line: 143, column: 9, scope: !634)
!2343 = !DILocation(line: 143, column: 19, scope: !634)
!2344 = !DILocation(line: 143, column: 43, scope: !634)
!2345 = !DILocation(line: 143, column: 27, scope: !634)
!2346 = !DILocation(line: 144, column: 13, scope: !640)
!2347 = !DILocation(line: 144, column: 19, scope: !640)
!2348 = !DILocation(line: 144, column: 13, scope: !634)
!2349 = !DILocation(line: 145, column: 13, scope: !639)
!2350 = !DILocation(line: 145, column: 18, scope: !2351)
!2351 = !DILexicalBlockFile(scope: !638, file: !453, discriminator: 1)
!2352 = !DILocation(line: 145, column: 28, scope: !638)
!2353 = !DILocation(line: 145, column: 58, scope: !638)
!2354 = !DILocation(line: 145, column: 73, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !638, file: !453, line: 145, column: 70)
!2356 = !DILocation(line: 145, column: 90, scope: !2355)
!2357 = !DILocation(line: 145, column: 70, scope: !2355)
!2358 = !DILocation(line: 145, column: 100, scope: !2355)
!2359 = !DILocation(line: 145, column: 70, scope: !638)
!2360 = !DILocation(line: 145, column: 70, scope: !2361)
!2361 = !DILexicalBlockFile(scope: !638, file: !453, discriminator: 2)
!2362 = !DILocation(line: 145, column: 131, scope: !2363)
!2363 = !DILexicalBlockFile(scope: !2355, file: !453, discriminator: 3)
!2364 = !DILocation(line: 145, column: 149, scope: !2355)
!2365 = !DILocation(line: 145, column: 159, scope: !2355)
!2366 = !DILocation(line: 145, column: 184, scope: !2355)
!2367 = !DILocation(line: 145, column: 115, scope: !2355)
!2368 = !DILocation(line: 145, column: 203, scope: !2369)
!2369 = !DILexicalBlockFile(scope: !639, file: !453, discriminator: 4)
!2370 = !DILocation(line: 145, column: 203, scope: !638)
!2371 = !DILocation(line: 145, column: 203, scope: !2372)
!2372 = !DILexicalBlockFile(scope: !638, file: !453, discriminator: 5)
!2373 = !DILocation(line: 146, column: 13, scope: !639)
!2374 = !DILocation(line: 148, column: 50, scope: !634)
!2375 = !DILocation(line: 148, column: 44, scope: !634)
!2376 = !DILocation(line: 148, column: 10, scope: !634)
!2377 = !DILocation(line: 148, column: 28, scope: !634)
!2378 = !DILocation(line: 148, column: 11, scope: !634)
!2379 = !DILocation(line: 148, column: 36, scope: !634)
!2380 = !{!2381, !1942, i64 24}
!2381 = !{!"", !1999, i64 0, !1942, i64 24, !1963, i64 32}
!2382 = !DILocation(line: 148, column: 47, scope: !634)
!2383 = !DILocation(line: 149, column: 5, scope: !635)
!2384 = !DILocation(line: 149, column: 5, scope: !2339)
!2385 = !DILocation(line: 149, column: 5, scope: !634)
!2386 = !DILocation(line: 142, column: 25, scope: !635)
!2387 = !DILocation(line: 142, column: 5, scope: !635)
!2388 = !DILocation(line: 151, column: 24, scope: !628)
!2389 = !DILocation(line: 151, column: 9, scope: !628)
!2390 = !DILocation(line: 151, column: 7, scope: !628)
!2391 = !DILocation(line: 152, column: 9, scope: !644)
!2392 = !DILocation(line: 152, column: 11, scope: !644)
!2393 = !DILocation(line: 152, column: 9, scope: !628)
!2394 = !DILocation(line: 153, column: 9, scope: !643)
!2395 = !DILocation(line: 153, column: 14, scope: !2396)
!2396 = !DILexicalBlockFile(scope: !642, file: !453, discriminator: 1)
!2397 = !DILocation(line: 153, column: 24, scope: !642)
!2398 = !DILocation(line: 153, column: 54, scope: !642)
!2399 = !DILocation(line: 153, column: 69, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !642, file: !453, line: 153, column: 66)
!2401 = !DILocation(line: 153, column: 86, scope: !2400)
!2402 = !DILocation(line: 153, column: 66, scope: !2400)
!2403 = !DILocation(line: 153, column: 96, scope: !2400)
!2404 = !DILocation(line: 153, column: 66, scope: !642)
!2405 = !DILocation(line: 153, column: 66, scope: !2406)
!2406 = !DILexicalBlockFile(scope: !642, file: !453, discriminator: 2)
!2407 = !DILocation(line: 153, column: 127, scope: !2408)
!2408 = !DILexicalBlockFile(scope: !2400, file: !453, discriminator: 3)
!2409 = !DILocation(line: 153, column: 145, scope: !2400)
!2410 = !DILocation(line: 153, column: 155, scope: !2400)
!2411 = !DILocation(line: 153, column: 180, scope: !2400)
!2412 = !DILocation(line: 153, column: 111, scope: !2400)
!2413 = !DILocation(line: 153, column: 199, scope: !2414)
!2414 = !DILexicalBlockFile(scope: !643, file: !453, discriminator: 4)
!2415 = !DILocation(line: 153, column: 199, scope: !642)
!2416 = !DILocation(line: 153, column: 199, scope: !2417)
!2417 = !DILexicalBlockFile(scope: !642, file: !453, discriminator: 5)
!2418 = !DILocation(line: 154, column: 9, scope: !643)
!2419 = !DILocation(line: 157, column: 12, scope: !648)
!2420 = !DILocation(line: 157, column: 10, scope: !648)
!2421 = !DILocation(line: 157, column: 17, scope: !2422)
!2422 = !DILexicalBlockFile(scope: !2423, file: !453, discriminator: 2)
!2423 = !DILexicalBlockFile(scope: !647, file: !453, discriminator: 1)
!2424 = !DILocation(line: 157, column: 19, scope: !647)
!2425 = !DILocation(line: 157, column: 5, scope: !648)
!2426 = !DILocation(line: 158, column: 9, scope: !646)
!2427 = !DILocation(line: 158, column: 19, scope: !646)
!2428 = !DILocation(line: 158, column: 62, scope: !646)
!2429 = !DILocation(line: 158, column: 28, scope: !646)
!2430 = !DILocation(line: 158, column: 46, scope: !646)
!2431 = !DILocation(line: 158, column: 29, scope: !646)
!2432 = !DILocation(line: 158, column: 54, scope: !646)
!2433 = !DILocation(line: 159, column: 27, scope: !652)
!2434 = !DILocation(line: 159, column: 13, scope: !652)
!2435 = !DILocation(line: 159, column: 43, scope: !652)
!2436 = !DILocation(line: 159, column: 42, scope: !652)
!2437 = !DILocation(line: 159, column: 37, scope: !652)
!2438 = !DILocation(line: 159, column: 34, scope: !652)
!2439 = !DILocation(line: 159, column: 13, scope: !646)
!2440 = !DILocation(line: 160, column: 29, scope: !651)
!2441 = !DILocation(line: 160, column: 13, scope: !651)
!2442 = !DILocation(line: 162, column: 13, scope: !651)
!2443 = !DILocation(line: 162, column: 18, scope: !2444)
!2444 = !DILexicalBlockFile(scope: !650, file: !453, discriminator: 1)
!2445 = !DILocation(line: 162, column: 28, scope: !650)
!2446 = !DILocation(line: 162, column: 58, scope: !650)
!2447 = !DILocation(line: 162, column: 73, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !650, file: !453, line: 162, column: 70)
!2449 = !DILocation(line: 162, column: 90, scope: !2448)
!2450 = !DILocation(line: 162, column: 70, scope: !2448)
!2451 = !DILocation(line: 162, column: 100, scope: !2448)
!2452 = !DILocation(line: 162, column: 70, scope: !650)
!2453 = !DILocation(line: 162, column: 70, scope: !2454)
!2454 = !DILexicalBlockFile(scope: !650, file: !453, discriminator: 2)
!2455 = !DILocation(line: 162, column: 131, scope: !2456)
!2456 = !DILexicalBlockFile(scope: !2448, file: !453, discriminator: 3)
!2457 = !DILocation(line: 162, column: 149, scope: !2448)
!2458 = !DILocation(line: 162, column: 159, scope: !2448)
!2459 = !DILocation(line: 162, column: 184, scope: !2448)
!2460 = !DILocation(line: 162, column: 115, scope: !2448)
!2461 = !DILocation(line: 162, column: 203, scope: !2462)
!2462 = !DILexicalBlockFile(scope: !651, file: !453, discriminator: 4)
!2463 = !DILocation(line: 162, column: 203, scope: !650)
!2464 = !DILocation(line: 162, column: 203, scope: !2465)
!2465 = !DILexicalBlockFile(scope: !650, file: !453, discriminator: 5)
!2466 = !DILocation(line: 163, column: 13, scope: !651)
!2467 = !DILocation(line: 165, column: 5, scope: !647)
!2468 = !DILocation(line: 165, column: 5, scope: !2423)
!2469 = !DILocation(line: 165, column: 5, scope: !646)
!2470 = !DILocation(line: 157, column: 25, scope: !647)
!2471 = !DILocation(line: 157, column: 5, scope: !647)
!2472 = !DILocation(line: 166, column: 5, scope: !628)
!2473 = !DILocation(line: 166, column: 10, scope: !2474)
!2474 = !DILexicalBlockFile(scope: !654, file: !453, discriminator: 1)
!2475 = !DILocation(line: 166, column: 20, scope: !654)
!2476 = !DILocation(line: 166, column: 50, scope: !654)
!2477 = !DILocation(line: 166, column: 65, scope: !2478)
!2478 = distinct !DILexicalBlock(scope: !654, file: !453, line: 166, column: 62)
!2479 = !DILocation(line: 166, column: 82, scope: !2478)
!2480 = !DILocation(line: 166, column: 62, scope: !2478)
!2481 = !DILocation(line: 166, column: 92, scope: !2478)
!2482 = !DILocation(line: 166, column: 62, scope: !654)
!2483 = !DILocation(line: 166, column: 62, scope: !2484)
!2484 = !DILexicalBlockFile(scope: !654, file: !453, discriminator: 2)
!2485 = !DILocation(line: 166, column: 123, scope: !2486)
!2486 = !DILexicalBlockFile(scope: !2478, file: !453, discriminator: 3)
!2487 = !DILocation(line: 166, column: 141, scope: !2478)
!2488 = !DILocation(line: 166, column: 151, scope: !2478)
!2489 = !DILocation(line: 166, column: 176, scope: !2478)
!2490 = !DILocation(line: 166, column: 107, scope: !2478)
!2491 = !DILocation(line: 166, column: 195, scope: !2492)
!2492 = !DILexicalBlockFile(scope: !628, file: !453, discriminator: 4)
!2493 = !DILocation(line: 166, column: 195, scope: !654)
!2494 = !DILocation(line: 166, column: 195, scope: !2495)
!2495 = !DILexicalBlockFile(scope: !654, file: !453, discriminator: 5)
!2496 = !DILocation(line: 169, column: 51, scope: !628)
!2497 = !DILocation(line: 170, column: 5, scope: !628)
!2498 = !DILocation(line: 171, column: 1, scope: !628)
!2499 = !DILocation(line: 224, column: 31, scope: !655)
!2500 = !DILocation(line: 226, column: 5, scope: !655)
!2501 = !DILocation(line: 226, column: 9, scope: !655)
!2502 = !DILocation(line: 228, column: 12, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !655, file: !453, line: 228, column: 5)
!2504 = !DILocation(line: 228, column: 10, scope: !2503)
!2505 = !DILocation(line: 228, column: 17, scope: !2506)
!2506 = !DILexicalBlockFile(scope: !2507, file: !453, discriminator: 2)
!2507 = !DILexicalBlockFile(scope: !2508, file: !453, discriminator: 1)
!2508 = distinct !DILexicalBlock(scope: !2503, file: !453, line: 228, column: 5)
!2509 = !DILocation(line: 228, column: 19, scope: !2508)
!2510 = !DILocation(line: 228, column: 5, scope: !2503)
!2511 = !DILocation(line: 229, column: 29, scope: !2512)
!2512 = distinct !DILexicalBlock(scope: !2513, file: !453, line: 229, column: 13)
!2513 = distinct !DILexicalBlock(scope: !2508, file: !453, line: 228, column: 31)
!2514 = !DILocation(line: 229, column: 13, scope: !2512)
!2515 = !DILocation(line: 229, column: 32, scope: !2512)
!2516 = !DILocation(line: 229, column: 13, scope: !2513)
!2517 = !DILocation(line: 230, column: 13, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2512, file: !453, line: 229, column: 37)
!2519 = !DILocation(line: 232, column: 5, scope: !2513)
!2520 = !DILocation(line: 228, column: 27, scope: !2508)
!2521 = !DILocation(line: 228, column: 5, scope: !2508)
!2522 = !DILocation(line: 234, column: 51, scope: !655)
!2523 = !DILocation(line: 235, column: 5, scope: !655)
!2524 = !DILocation(line: 236, column: 1, scope: !655)
!2525 = !DILocation(line: 284, column: 38, scope: !689)
!2526 = !DILocation(line: 286, column: 5, scope: !689)
!2527 = !DILocation(line: 286, column: 19, scope: !689)
!2528 = !DILocation(line: 287, column: 5, scope: !689)
!2529 = !DILocation(line: 287, column: 15, scope: !689)
!2530 = !DILocation(line: 288, column: 5, scope: !689)
!2531 = !DILocation(line: 288, column: 15, scope: !689)
!2532 = !DILocation(line: 290, column: 10, scope: !689)
!2533 = !DILocation(line: 292, column: 9, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !689, file: !453, line: 292, column: 9)
!2535 = !DILocation(line: 292, column: 15, scope: !2534)
!2536 = !{!1998, !1942, i64 264}
!2537 = !DILocation(line: 292, column: 23, scope: !2534)
!2538 = !DILocation(line: 292, column: 9, scope: !689)
!2539 = !DILocation(line: 295, column: 62, scope: !2534)
!2540 = !DILocation(line: 295, column: 9, scope: !2534)
!2541 = !DILocation(line: 298, column: 40, scope: !689)
!2542 = !DILocation(line: 298, column: 26, scope: !689)
!2543 = !DILocation(line: 298, column: 9, scope: !689)
!2544 = !DILocation(line: 299, column: 9, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !689, file: !453, line: 299, column: 9)
!2546 = !DILocation(line: 299, column: 13, scope: !2545)
!2547 = !DILocation(line: 299, column: 9, scope: !689)
!2548 = !DILocation(line: 300, column: 9, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2545, file: !453, line: 299, column: 28)
!2550 = !DILocation(line: 302, column: 13, scope: !2549)
!2551 = !DILocation(line: 301, column: 9, scope: !2549)
!2552 = !DILocation(line: 304, column: 9, scope: !2549)
!2553 = !DILocation(line: 307, column: 9, scope: !698)
!2554 = !DILocation(line: 307, column: 15, scope: !698)
!2555 = !DILocation(line: 307, column: 23, scope: !698)
!2556 = !DILocation(line: 307, column: 9, scope: !689)
!2557 = !DILocation(line: 309, column: 13, scope: !697)
!2558 = !DILocation(line: 308, column: 9, scope: !697)
!2559 = !DILocation(line: 311, column: 9, scope: !697)
!2560 = !DILocation(line: 311, column: 14, scope: !2561)
!2561 = !DILexicalBlockFile(scope: !696, file: !453, discriminator: 1)
!2562 = !DILocation(line: 311, column: 24, scope: !696)
!2563 = !DILocation(line: 311, column: 54, scope: !696)
!2564 = !DILocation(line: 311, column: 68, scope: !2565)
!2565 = distinct !DILexicalBlock(scope: !696, file: !453, line: 311, column: 65)
!2566 = !DILocation(line: 311, column: 85, scope: !2565)
!2567 = !DILocation(line: 311, column: 65, scope: !2565)
!2568 = !DILocation(line: 311, column: 95, scope: !2565)
!2569 = !DILocation(line: 311, column: 65, scope: !696)
!2570 = !DILocation(line: 311, column: 65, scope: !2571)
!2571 = !DILexicalBlockFile(scope: !696, file: !453, discriminator: 2)
!2572 = !DILocation(line: 311, column: 126, scope: !2573)
!2573 = !DILexicalBlockFile(scope: !2565, file: !453, discriminator: 3)
!2574 = !DILocation(line: 311, column: 144, scope: !2565)
!2575 = !DILocation(line: 311, column: 154, scope: !2565)
!2576 = !DILocation(line: 311, column: 179, scope: !2565)
!2577 = !DILocation(line: 311, column: 110, scope: !2565)
!2578 = !DILocation(line: 311, column: 198, scope: !2579)
!2579 = !DILexicalBlockFile(scope: !697, file: !453, discriminator: 4)
!2580 = !DILocation(line: 311, column: 198, scope: !696)
!2581 = !DILocation(line: 311, column: 198, scope: !2582)
!2582 = !DILexicalBlockFile(scope: !696, file: !453, discriminator: 5)
!2583 = !DILocation(line: 312, column: 9, scope: !697)
!2584 = !DILocation(line: 315, column: 26, scope: !689)
!2585 = !DILocation(line: 315, column: 12, scope: !689)
!2586 = !DILocation(line: 315, column: 10, scope: !689)
!2587 = !{!1963, !1963, i64 0}
!2588 = !DILocation(line: 316, column: 10, scope: !702)
!2589 = !DILocation(line: 316, column: 15, scope: !702)
!2590 = !DILocation(line: 316, column: 22, scope: !702)
!2591 = !DILocation(line: 316, column: 25, scope: !2592)
!2592 = !DILexicalBlockFile(scope: !702, file: !453, discriminator: 1)
!2593 = !DILocation(line: 316, column: 9, scope: !689)
!2594 = !DILocation(line: 317, column: 9, scope: !701)
!2595 = !DILocation(line: 319, column: 13, scope: !701)
!2596 = !DILocation(line: 318, column: 9, scope: !701)
!2597 = !DILocation(line: 321, column: 9, scope: !701)
!2598 = !DILocation(line: 321, column: 14, scope: !2599)
!2599 = !DILexicalBlockFile(scope: !700, file: !453, discriminator: 1)
!2600 = !DILocation(line: 321, column: 24, scope: !700)
!2601 = !DILocation(line: 321, column: 54, scope: !700)
!2602 = !DILocation(line: 321, column: 68, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !700, file: !453, line: 321, column: 65)
!2604 = !DILocation(line: 321, column: 85, scope: !2603)
!2605 = !DILocation(line: 321, column: 65, scope: !2603)
!2606 = !DILocation(line: 321, column: 95, scope: !2603)
!2607 = !DILocation(line: 321, column: 65, scope: !700)
!2608 = !DILocation(line: 321, column: 65, scope: !2609)
!2609 = !DILexicalBlockFile(scope: !700, file: !453, discriminator: 2)
!2610 = !DILocation(line: 321, column: 126, scope: !2611)
!2611 = !DILexicalBlockFile(scope: !2603, file: !453, discriminator: 3)
!2612 = !DILocation(line: 321, column: 144, scope: !2603)
!2613 = !DILocation(line: 321, column: 154, scope: !2603)
!2614 = !DILocation(line: 321, column: 179, scope: !2603)
!2615 = !DILocation(line: 321, column: 110, scope: !2603)
!2616 = !DILocation(line: 321, column: 198, scope: !2617)
!2617 = !DILexicalBlockFile(scope: !701, file: !453, discriminator: 4)
!2618 = !DILocation(line: 321, column: 198, scope: !700)
!2619 = !DILocation(line: 321, column: 198, scope: !2620)
!2620 = !DILexicalBlockFile(scope: !700, file: !453, discriminator: 5)
!2621 = !DILocation(line: 322, column: 9, scope: !701)
!2622 = !DILocation(line: 325, column: 9, scope: !706)
!2623 = !DILocation(line: 325, column: 15, scope: !706)
!2624 = !DILocation(line: 325, column: 23, scope: !706)
!2625 = !DILocation(line: 325, column: 9, scope: !689)
!2626 = !DILocation(line: 327, column: 13, scope: !705)
!2627 = !DILocation(line: 326, column: 9, scope: !705)
!2628 = !DILocation(line: 329, column: 9, scope: !705)
!2629 = !DILocation(line: 329, column: 14, scope: !2630)
!2630 = !DILexicalBlockFile(scope: !704, file: !453, discriminator: 1)
!2631 = !DILocation(line: 329, column: 24, scope: !704)
!2632 = !DILocation(line: 329, column: 54, scope: !704)
!2633 = !DILocation(line: 329, column: 68, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !704, file: !453, line: 329, column: 65)
!2635 = !DILocation(line: 329, column: 85, scope: !2634)
!2636 = !DILocation(line: 329, column: 65, scope: !2634)
!2637 = !DILocation(line: 329, column: 95, scope: !2634)
!2638 = !DILocation(line: 329, column: 65, scope: !704)
!2639 = !DILocation(line: 329, column: 65, scope: !2640)
!2640 = !DILexicalBlockFile(scope: !704, file: !453, discriminator: 2)
!2641 = !DILocation(line: 329, column: 126, scope: !2642)
!2642 = !DILexicalBlockFile(scope: !2634, file: !453, discriminator: 3)
!2643 = !DILocation(line: 329, column: 144, scope: !2634)
!2644 = !DILocation(line: 329, column: 154, scope: !2634)
!2645 = !DILocation(line: 329, column: 179, scope: !2634)
!2646 = !DILocation(line: 329, column: 110, scope: !2634)
!2647 = !DILocation(line: 329, column: 198, scope: !2648)
!2648 = !DILexicalBlockFile(scope: !705, file: !453, discriminator: 4)
!2649 = !DILocation(line: 329, column: 198, scope: !704)
!2650 = !DILocation(line: 329, column: 198, scope: !2651)
!2651 = !DILexicalBlockFile(scope: !704, file: !453, discriminator: 5)
!2652 = !DILocation(line: 330, column: 9, scope: !705)
!2653 = !DILocation(line: 333, column: 9, scope: !710)
!2654 = !DILocation(line: 333, column: 15, scope: !710)
!2655 = !{!1998, !1942, i64 120}
!2656 = !DILocation(line: 333, column: 38, scope: !710)
!2657 = !DILocation(line: 333, column: 23, scope: !710)
!2658 = !DILocation(line: 333, column: 9, scope: !689)
!2659 = !DILocation(line: 335, column: 13, scope: !709)
!2660 = !DILocation(line: 334, column: 9, scope: !709)
!2661 = !DILocation(line: 337, column: 9, scope: !709)
!2662 = !DILocation(line: 337, column: 14, scope: !2663)
!2663 = !DILexicalBlockFile(scope: !708, file: !453, discriminator: 1)
!2664 = !DILocation(line: 337, column: 24, scope: !708)
!2665 = !DILocation(line: 337, column: 54, scope: !708)
!2666 = !DILocation(line: 337, column: 68, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !708, file: !453, line: 337, column: 65)
!2668 = !DILocation(line: 337, column: 85, scope: !2667)
!2669 = !DILocation(line: 337, column: 65, scope: !2667)
!2670 = !DILocation(line: 337, column: 95, scope: !2667)
!2671 = !DILocation(line: 337, column: 65, scope: !708)
!2672 = !DILocation(line: 337, column: 65, scope: !2673)
!2673 = !DILexicalBlockFile(scope: !708, file: !453, discriminator: 2)
!2674 = !DILocation(line: 337, column: 126, scope: !2675)
!2675 = !DILexicalBlockFile(scope: !2667, file: !453, discriminator: 3)
!2676 = !DILocation(line: 337, column: 144, scope: !2667)
!2677 = !DILocation(line: 337, column: 154, scope: !2667)
!2678 = !DILocation(line: 337, column: 179, scope: !2667)
!2679 = !DILocation(line: 337, column: 110, scope: !2667)
!2680 = !DILocation(line: 337, column: 198, scope: !2681)
!2681 = !DILexicalBlockFile(scope: !709, file: !453, discriminator: 4)
!2682 = !DILocation(line: 337, column: 198, scope: !708)
!2683 = !DILocation(line: 337, column: 198, scope: !2684)
!2684 = !DILexicalBlockFile(scope: !708, file: !453, discriminator: 5)
!2685 = !DILocation(line: 338, column: 9, scope: !709)
!2686 = !DILocation(line: 341, column: 5, scope: !689)
!2687 = !DILocation(line: 341, column: 10, scope: !2688)
!2688 = !DILexicalBlockFile(scope: !712, file: !453, discriminator: 1)
!2689 = !DILocation(line: 341, column: 20, scope: !712)
!2690 = !DILocation(line: 341, column: 50, scope: !712)
!2691 = !DILocation(line: 341, column: 64, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !712, file: !453, line: 341, column: 61)
!2693 = !DILocation(line: 341, column: 81, scope: !2692)
!2694 = !DILocation(line: 341, column: 61, scope: !2692)
!2695 = !DILocation(line: 341, column: 91, scope: !2692)
!2696 = !DILocation(line: 341, column: 61, scope: !712)
!2697 = !DILocation(line: 341, column: 61, scope: !2698)
!2698 = !DILexicalBlockFile(scope: !712, file: !453, discriminator: 2)
!2699 = !DILocation(line: 341, column: 122, scope: !2700)
!2700 = !DILexicalBlockFile(scope: !2692, file: !453, discriminator: 3)
!2701 = !DILocation(line: 341, column: 140, scope: !2692)
!2702 = !DILocation(line: 341, column: 150, scope: !2692)
!2703 = !DILocation(line: 341, column: 175, scope: !2692)
!2704 = !DILocation(line: 341, column: 106, scope: !2692)
!2705 = !DILocation(line: 341, column: 194, scope: !2706)
!2706 = !DILexicalBlockFile(scope: !689, file: !453, discriminator: 4)
!2707 = !DILocation(line: 341, column: 194, scope: !712)
!2708 = !DILocation(line: 341, column: 194, scope: !2709)
!2709 = !DILexicalBlockFile(scope: !712, file: !453, discriminator: 5)
!2710 = !DILocation(line: 343, column: 58, scope: !689)
!2711 = !DILocation(line: 343, column: 5, scope: !689)
!2712 = !DILocation(line: 344, column: 1, scope: !689)
!2713 = !DILocation(line: 380, column: 25, scope: !713)
!2714 = !DILocation(line: 382, column: 12, scope: !713)
!2715 = !DILocation(line: 382, column: 5, scope: !713)
!2716 = !DILocation(line: 2663, column: 36, scope: !789)
!2717 = !DILocation(line: 2665, column: 5, scope: !789)
!2718 = !DILocation(line: 2665, column: 15, scope: !789)
!2719 = !DILocation(line: 2665, column: 21, scope: !789)
!2720 = !DILocation(line: 2666, column: 5, scope: !789)
!2721 = !DILocation(line: 2666, column: 10, scope: !2722)
!2722 = !DILexicalBlockFile(scope: !794, file: !453, discriminator: 1)
!2723 = !DILocation(line: 2666, column: 20, scope: !794)
!2724 = !DILocation(line: 2666, column: 64, scope: !794)
!2725 = !DILocation(line: 2666, column: 51, scope: !794)
!2726 = !DILocation(line: 2666, column: 75, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !794, file: !453, line: 2666, column: 75)
!2728 = !DILocation(line: 2666, column: 91, scope: !2727)
!2729 = !DILocation(line: 2666, column: 75, scope: !794)
!2730 = !DILocation(line: 2666, column: 122, scope: !2731)
!2731 = !DILexicalBlockFile(scope: !2727, file: !453, discriminator: 2)
!2732 = !DILocation(line: 2666, column: 141, scope: !2727)
!2733 = !DILocation(line: 2666, column: 150, scope: !2727)
!2734 = !DILocation(line: 2666, column: 106, scope: !2727)
!2735 = !DILocation(line: 2666, column: 155, scope: !2736)
!2736 = !DILexicalBlockFile(scope: !2737, file: !453, discriminator: 4)
!2737 = !DILexicalBlockFile(scope: !789, file: !453, discriminator: 3)
!2738 = !DILocation(line: 2666, column: 155, scope: !794)
!2739 = !DILocation(line: 2666, column: 155, scope: !2740)
!2740 = !DILexicalBlockFile(scope: !794, file: !453, discriminator: 5)
!2741 = !DILocation(line: 2667, column: 5, scope: !789)
!2742 = !DILocation(line: 2667, column: 10, scope: !2743)
!2743 = !DILexicalBlockFile(scope: !796, file: !453, discriminator: 1)
!2744 = !DILocation(line: 2667, column: 20, scope: !796)
!2745 = !DILocation(line: 2667, column: 50, scope: !796)
!2746 = !DILocation(line: 2667, column: 64, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !796, file: !453, line: 2667, column: 61)
!2748 = !DILocation(line: 2667, column: 81, scope: !2747)
!2749 = !DILocation(line: 2667, column: 61, scope: !2747)
!2750 = !DILocation(line: 2667, column: 91, scope: !2747)
!2751 = !DILocation(line: 2667, column: 61, scope: !796)
!2752 = !DILocation(line: 2667, column: 61, scope: !2753)
!2753 = !DILexicalBlockFile(scope: !796, file: !453, discriminator: 2)
!2754 = !DILocation(line: 2667, column: 122, scope: !2755)
!2755 = !DILexicalBlockFile(scope: !2747, file: !453, discriminator: 3)
!2756 = !DILocation(line: 2667, column: 140, scope: !2747)
!2757 = !DILocation(line: 2667, column: 150, scope: !2747)
!2758 = !DILocation(line: 2667, column: 175, scope: !2747)
!2759 = !DILocation(line: 2667, column: 106, scope: !2747)
!2760 = !DILocation(line: 2667, column: 194, scope: !2761)
!2761 = !DILexicalBlockFile(scope: !789, file: !453, discriminator: 4)
!2762 = !DILocation(line: 2667, column: 194, scope: !796)
!2763 = !DILocation(line: 2667, column: 194, scope: !2764)
!2764 = !DILexicalBlockFile(scope: !796, file: !453, discriminator: 5)
!2765 = !DILocation(line: 2668, column: 5, scope: !789)
!2766 = !DILocation(line: 2668, column: 10, scope: !2767)
!2767 = !DILexicalBlockFile(scope: !798, file: !453, discriminator: 1)
!2768 = !DILocation(line: 2668, column: 20, scope: !798)
!2769 = !DILocation(line: 2668, column: 50, scope: !798)
!2770 = !DILocation(line: 2668, column: 64, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !798, file: !453, line: 2668, column: 61)
!2772 = !DILocation(line: 2668, column: 81, scope: !2771)
!2773 = !DILocation(line: 2668, column: 61, scope: !2771)
!2774 = !DILocation(line: 2668, column: 91, scope: !2771)
!2775 = !DILocation(line: 2668, column: 61, scope: !798)
!2776 = !DILocation(line: 2668, column: 61, scope: !2777)
!2777 = !DILexicalBlockFile(scope: !798, file: !453, discriminator: 2)
!2778 = !DILocation(line: 2668, column: 122, scope: !2779)
!2779 = !DILexicalBlockFile(scope: !2771, file: !453, discriminator: 3)
!2780 = !DILocation(line: 2668, column: 140, scope: !2771)
!2781 = !DILocation(line: 2668, column: 150, scope: !2771)
!2782 = !DILocation(line: 2668, column: 175, scope: !2771)
!2783 = !DILocation(line: 2668, column: 106, scope: !2771)
!2784 = !DILocation(line: 2668, column: 194, scope: !2761)
!2785 = !DILocation(line: 2668, column: 194, scope: !798)
!2786 = !DILocation(line: 2668, column: 194, scope: !2787)
!2787 = !DILexicalBlockFile(scope: !798, file: !453, discriminator: 5)
!2788 = !DILocation(line: 2669, column: 5, scope: !789)
!2789 = !DILocation(line: 2669, column: 10, scope: !2790)
!2790 = !DILexicalBlockFile(scope: !800, file: !453, discriminator: 1)
!2791 = !DILocation(line: 2669, column: 20, scope: !800)
!2792 = !DILocation(line: 2669, column: 50, scope: !800)
!2793 = !DILocation(line: 2669, column: 64, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !800, file: !453, line: 2669, column: 61)
!2795 = !DILocation(line: 2669, column: 81, scope: !2794)
!2796 = !DILocation(line: 2669, column: 61, scope: !2794)
!2797 = !DILocation(line: 2669, column: 91, scope: !2794)
!2798 = !DILocation(line: 2669, column: 61, scope: !800)
!2799 = !DILocation(line: 2669, column: 61, scope: !2800)
!2800 = !DILexicalBlockFile(scope: !800, file: !453, discriminator: 2)
!2801 = !DILocation(line: 2669, column: 122, scope: !2802)
!2802 = !DILexicalBlockFile(scope: !2794, file: !453, discriminator: 3)
!2803 = !DILocation(line: 2669, column: 140, scope: !2794)
!2804 = !DILocation(line: 2669, column: 150, scope: !2794)
!2805 = !DILocation(line: 2669, column: 175, scope: !2794)
!2806 = !DILocation(line: 2669, column: 106, scope: !2794)
!2807 = !DILocation(line: 2669, column: 194, scope: !2761)
!2808 = !DILocation(line: 2669, column: 194, scope: !800)
!2809 = !DILocation(line: 2669, column: 194, scope: !2810)
!2810 = !DILexicalBlockFile(scope: !800, file: !453, discriminator: 5)
!2811 = !DILocation(line: 2670, column: 58, scope: !789)
!2812 = !DILocation(line: 2671, column: 1, scope: !789)
!2813 = !DILocation(line: 2670, column: 5, scope: !789)
!2814 = !DILocation(line: 2674, column: 35, scope: !804)
!2815 = !DILocation(line: 2676, column: 5, scope: !804)
!2816 = !DILocation(line: 2676, column: 15, scope: !804)
!2817 = !DILocation(line: 2676, column: 21, scope: !804)
!2818 = !DILocation(line: 2677, column: 34, scope: !804)
!2819 = !DILocation(line: 2677, column: 21, scope: !804)
!2820 = !DILocation(line: 2677, column: 42, scope: !804)
!2821 = !DILocation(line: 2677, column: 51, scope: !804)
!2822 = !DILocation(line: 2678, column: 5, scope: !804)
!2823 = !DILocation(line: 2678, column: 10, scope: !2824)
!2824 = !DILexicalBlockFile(scope: !809, file: !453, discriminator: 1)
!2825 = !DILocation(line: 2678, column: 20, scope: !809)
!2826 = !DILocation(line: 2678, column: 50, scope: !809)
!2827 = !DILocation(line: 2678, column: 64, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !809, file: !453, line: 2678, column: 61)
!2829 = !DILocation(line: 2678, column: 81, scope: !2828)
!2830 = !DILocation(line: 2678, column: 61, scope: !2828)
!2831 = !DILocation(line: 2678, column: 91, scope: !2828)
!2832 = !DILocation(line: 2678, column: 61, scope: !809)
!2833 = !DILocation(line: 2678, column: 61, scope: !2834)
!2834 = !DILexicalBlockFile(scope: !809, file: !453, discriminator: 2)
!2835 = !DILocation(line: 2678, column: 122, scope: !2836)
!2836 = !DILexicalBlockFile(scope: !2828, file: !453, discriminator: 3)
!2837 = !DILocation(line: 2678, column: 140, scope: !2828)
!2838 = !DILocation(line: 2678, column: 150, scope: !2828)
!2839 = !DILocation(line: 2678, column: 175, scope: !2828)
!2840 = !DILocation(line: 2678, column: 106, scope: !2828)
!2841 = !DILocation(line: 2678, column: 194, scope: !2842)
!2842 = !DILexicalBlockFile(scope: !804, file: !453, discriminator: 4)
!2843 = !DILocation(line: 2678, column: 194, scope: !809)
!2844 = !DILocation(line: 2678, column: 194, scope: !2845)
!2845 = !DILexicalBlockFile(scope: !809, file: !453, discriminator: 5)
!2846 = !DILocation(line: 2679, column: 5, scope: !804)
!2847 = !DILocation(line: 2679, column: 10, scope: !2848)
!2848 = !DILexicalBlockFile(scope: !811, file: !453, discriminator: 1)
!2849 = !DILocation(line: 2679, column: 20, scope: !811)
!2850 = !DILocation(line: 2679, column: 50, scope: !811)
!2851 = !DILocation(line: 2679, column: 64, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !811, file: !453, line: 2679, column: 61)
!2853 = !DILocation(line: 2679, column: 81, scope: !2852)
!2854 = !DILocation(line: 2679, column: 61, scope: !2852)
!2855 = !DILocation(line: 2679, column: 91, scope: !2852)
!2856 = !DILocation(line: 2679, column: 61, scope: !811)
!2857 = !DILocation(line: 2679, column: 61, scope: !2858)
!2858 = !DILexicalBlockFile(scope: !811, file: !453, discriminator: 2)
!2859 = !DILocation(line: 2679, column: 122, scope: !2860)
!2860 = !DILexicalBlockFile(scope: !2852, file: !453, discriminator: 3)
!2861 = !DILocation(line: 2679, column: 140, scope: !2852)
!2862 = !DILocation(line: 2679, column: 150, scope: !2852)
!2863 = !DILocation(line: 2679, column: 175, scope: !2852)
!2864 = !DILocation(line: 2679, column: 106, scope: !2852)
!2865 = !DILocation(line: 2679, column: 194, scope: !2842)
!2866 = !DILocation(line: 2679, column: 194, scope: !811)
!2867 = !DILocation(line: 2679, column: 194, scope: !2868)
!2868 = !DILexicalBlockFile(scope: !811, file: !453, discriminator: 5)
!2869 = !DILocation(line: 2680, column: 5, scope: !804)
!2870 = !DILocation(line: 2680, column: 10, scope: !2871)
!2871 = !DILexicalBlockFile(scope: !813, file: !453, discriminator: 1)
!2872 = !DILocation(line: 2680, column: 20, scope: !813)
!2873 = !DILocation(line: 2680, column: 50, scope: !813)
!2874 = !DILocation(line: 2680, column: 64, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !813, file: !453, line: 2680, column: 61)
!2876 = !DILocation(line: 2680, column: 81, scope: !2875)
!2877 = !DILocation(line: 2680, column: 61, scope: !2875)
!2878 = !DILocation(line: 2680, column: 91, scope: !2875)
!2879 = !DILocation(line: 2680, column: 61, scope: !813)
!2880 = !DILocation(line: 2680, column: 61, scope: !2881)
!2881 = !DILexicalBlockFile(scope: !813, file: !453, discriminator: 2)
!2882 = !DILocation(line: 2680, column: 122, scope: !2883)
!2883 = !DILexicalBlockFile(scope: !2875, file: !453, discriminator: 3)
!2884 = !DILocation(line: 2680, column: 140, scope: !2875)
!2885 = !DILocation(line: 2680, column: 150, scope: !2875)
!2886 = !DILocation(line: 2680, column: 175, scope: !2875)
!2887 = !DILocation(line: 2680, column: 106, scope: !2875)
!2888 = !DILocation(line: 2680, column: 194, scope: !2842)
!2889 = !DILocation(line: 2680, column: 194, scope: !813)
!2890 = !DILocation(line: 2680, column: 194, scope: !2891)
!2891 = !DILexicalBlockFile(scope: !813, file: !453, discriminator: 5)
!2892 = !DILocation(line: 2681, column: 58, scope: !804)
!2893 = !DILocation(line: 2682, column: 1, scope: !804)
!2894 = !DILocation(line: 2681, column: 5, scope: !804)
!2895 = !DILocation(line: 2685, column: 36, scope: !814)
!2896 = !DILocation(line: 2687, column: 5, scope: !814)
!2897 = !DILocation(line: 2687, column: 10, scope: !2898)
!2898 = !DILexicalBlockFile(scope: !818, file: !453, discriminator: 1)
!2899 = !DILocation(line: 2687, column: 20, scope: !818)
!2900 = !DILocation(line: 2687, column: 51, scope: !818)
!2901 = !DILocation(line: 2687, column: 76, scope: !821)
!2902 = !DILocation(line: 2687, column: 92, scope: !821)
!2903 = !DILocation(line: 2687, column: 76, scope: !818)
!2904 = !DILocation(line: 2687, column: 107, scope: !2905)
!2905 = !DILexicalBlockFile(scope: !821, file: !453, discriminator: 2)
!2906 = !DILocation(line: 2687, column: 112, scope: !2907)
!2907 = !DILexicalBlockFile(scope: !820, file: !453, discriminator: 4)
!2908 = !DILocation(line: 2687, column: 122, scope: !820)
!2909 = !DILocation(line: 2687, column: 152, scope: !820)
!2910 = !DILocation(line: 2687, column: 178, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !820, file: !453, line: 2687, column: 175)
!2912 = !DILocation(line: 2687, column: 195, scope: !2911)
!2913 = !DILocation(line: 2687, column: 175, scope: !2911)
!2914 = !DILocation(line: 2687, column: 205, scope: !2911)
!2915 = !DILocation(line: 2687, column: 175, scope: !820)
!2916 = !DILocation(line: 2687, column: 175, scope: !2917)
!2917 = !DILexicalBlockFile(scope: !820, file: !453, discriminator: 5)
!2918 = !DILocation(line: 2687, column: 236, scope: !2919)
!2919 = !DILexicalBlockFile(scope: !2911, file: !453, discriminator: 6)
!2920 = !DILocation(line: 2687, column: 254, scope: !2911)
!2921 = !DILocation(line: 2687, column: 264, scope: !2911)
!2922 = !DILocation(line: 2687, column: 289, scope: !2911)
!2923 = !DILocation(line: 2687, column: 220, scope: !2911)
!2924 = !DILocation(line: 2687, column: 308, scope: !2925)
!2925 = !DILexicalBlockFile(scope: !821, file: !453, discriminator: 7)
!2926 = !DILocation(line: 2687, column: 308, scope: !820)
!2927 = !DILocation(line: 2687, column: 308, scope: !2928)
!2928 = !DILexicalBlockFile(scope: !820, file: !453, discriminator: 8)
!2929 = !DILocation(line: 2687, column: 308, scope: !2930)
!2930 = !DILexicalBlockFile(scope: !820, file: !453, discriminator: 9)
!2931 = !DILocation(line: 2687, column: 321, scope: !2932)
!2932 = !DILexicalBlockFile(scope: !2933, file: !453, discriminator: 10)
!2933 = !DILexicalBlockFile(scope: !814, file: !453, discriminator: 3)
!2934 = !DILocation(line: 2687, column: 321, scope: !818)
!2935 = !DILocation(line: 2688, column: 58, scope: !814)
!2936 = !DILocation(line: 2688, column: 5, scope: !814)
!2937 = !DILocation(line: 2692, column: 35, scope: !822)
!2938 = !DILocation(line: 2694, column: 5, scope: !822)
!2939 = !DILocation(line: 2694, column: 10, scope: !2940)
!2940 = !DILexicalBlockFile(scope: !826, file: !453, discriminator: 1)
!2941 = !DILocation(line: 2694, column: 20, scope: !826)
!2942 = !DILocation(line: 2694, column: 50, scope: !826)
!2943 = !DILocation(line: 2694, column: 79, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !826, file: !453, line: 2694, column: 76)
!2945 = !DILocation(line: 2694, column: 96, scope: !2944)
!2946 = !DILocation(line: 2694, column: 76, scope: !2944)
!2947 = !DILocation(line: 2694, column: 106, scope: !2944)
!2948 = !DILocation(line: 2694, column: 76, scope: !826)
!2949 = !DILocation(line: 2694, column: 76, scope: !2950)
!2950 = !DILexicalBlockFile(scope: !826, file: !453, discriminator: 2)
!2951 = !DILocation(line: 2694, column: 137, scope: !2952)
!2952 = !DILexicalBlockFile(scope: !2944, file: !453, discriminator: 3)
!2953 = !DILocation(line: 2694, column: 155, scope: !2944)
!2954 = !DILocation(line: 2694, column: 165, scope: !2944)
!2955 = !DILocation(line: 2694, column: 190, scope: !2944)
!2956 = !DILocation(line: 2694, column: 121, scope: !2944)
!2957 = !DILocation(line: 2694, column: 209, scope: !2958)
!2958 = !DILexicalBlockFile(scope: !822, file: !453, discriminator: 4)
!2959 = !DILocation(line: 2694, column: 209, scope: !826)
!2960 = !DILocation(line: 2695, column: 58, scope: !822)
!2961 = !DILocation(line: 2695, column: 5, scope: !822)
!2962 = !DILocation(line: 2699, column: 34, scope: !827)
!2963 = !DILocation(line: 2701, column: 5, scope: !827)
!2964 = !DILocation(line: 2701, column: 15, scope: !827)
!2965 = !DILocation(line: 2701, column: 21, scope: !827)
!2966 = !DILocation(line: 2702, column: 15, scope: !827)
!2967 = !DILocation(line: 2702, column: 5, scope: !827)
!2968 = !DILocation(line: 2703, column: 15, scope: !827)
!2969 = !DILocation(line: 2703, column: 5, scope: !827)
!2970 = !DILocation(line: 2704, column: 15, scope: !827)
!2971 = !DILocation(line: 2704, column: 5, scope: !827)
!2972 = !DILocation(line: 2705, column: 58, scope: !827)
!2973 = !DILocation(line: 2706, column: 1, scope: !827)
!2974 = !DILocation(line: 2705, column: 5, scope: !827)
!2975 = !DILocation(line: 428, column: 34, scope: !831)
!2976 = !DILocation(line: 430, column: 5, scope: !831)
!2977 = !DILocation(line: 430, column: 15, scope: !831)
!2978 = !DILocation(line: 430, column: 21, scope: !831)
!2979 = !DILocation(line: 430, column: 27, scope: !831)
!2980 = !DILocation(line: 431, column: 5, scope: !831)
!2981 = !DILocation(line: 431, column: 10, scope: !831)
!2982 = !DILocation(line: 432, column: 5, scope: !831)
!2983 = !DILocation(line: 432, column: 9, scope: !831)
!2984 = !DILocation(line: 436, column: 11, scope: !831)
!2985 = !DILocation(line: 436, column: 9, scope: !831)
!2986 = !DILocation(line: 437, column: 9, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !831, file: !453, line: 437, column: 9)
!2988 = !DILocation(line: 437, column: 13, scope: !2987)
!2989 = !DILocation(line: 437, column: 9, scope: !831)
!2990 = !DILocation(line: 438, column: 9, scope: !2987)
!2991 = !DILocation(line: 439, column: 14, scope: !831)
!2992 = !DILocation(line: 440, column: 38, scope: !831)
!2993 = !DILocation(line: 440, column: 13, scope: !831)
!2994 = !DILocation(line: 440, column: 11, scope: !831)
!2995 = !DILocation(line: 441, column: 5, scope: !831)
!2996 = !DILocation(line: 441, column: 10, scope: !2997)
!2997 = !DILexicalBlockFile(scope: !840, file: !453, discriminator: 1)
!2998 = !DILocation(line: 441, column: 20, scope: !840)
!2999 = !DILocation(line: 441, column: 50, scope: !840)
!3000 = !DILocation(line: 441, column: 64, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !840, file: !453, line: 441, column: 61)
!3002 = !DILocation(line: 441, column: 81, scope: !3001)
!3003 = !DILocation(line: 441, column: 61, scope: !3001)
!3004 = !DILocation(line: 441, column: 91, scope: !3001)
!3005 = !DILocation(line: 441, column: 61, scope: !840)
!3006 = !DILocation(line: 441, column: 61, scope: !3007)
!3007 = !DILexicalBlockFile(scope: !840, file: !453, discriminator: 2)
!3008 = !DILocation(line: 441, column: 122, scope: !3009)
!3009 = !DILexicalBlockFile(scope: !3001, file: !453, discriminator: 3)
!3010 = !DILocation(line: 441, column: 140, scope: !3001)
!3011 = !DILocation(line: 441, column: 150, scope: !3001)
!3012 = !DILocation(line: 441, column: 175, scope: !3001)
!3013 = !DILocation(line: 441, column: 106, scope: !3001)
!3014 = !DILocation(line: 441, column: 194, scope: !3015)
!3015 = !DILexicalBlockFile(scope: !831, file: !453, discriminator: 4)
!3016 = !DILocation(line: 441, column: 194, scope: !840)
!3017 = !DILocation(line: 441, column: 194, scope: !3018)
!3018 = !DILexicalBlockFile(scope: !840, file: !453, discriminator: 5)
!3019 = !DILocation(line: 442, column: 9, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !831, file: !453, line: 442, column: 9)
!3021 = !DILocation(line: 442, column: 15, scope: !3020)
!3022 = !DILocation(line: 442, column: 21, scope: !3020)
!3023 = !DILocation(line: 442, column: 24, scope: !3024)
!3024 = !DILexicalBlockFile(scope: !3020, file: !453, discriminator: 1)
!3025 = !DILocation(line: 442, column: 9, scope: !831)
!3026 = !DILocation(line: 443, column: 9, scope: !3020)
!3027 = !DILocation(line: 444, column: 9, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !831, file: !453, line: 444, column: 9)
!3029 = !DILocation(line: 444, column: 15, scope: !3028)
!3030 = !DILocation(line: 444, column: 9, scope: !831)
!3031 = !DILocation(line: 445, column: 16, scope: !3028)
!3032 = !DILocation(line: 445, column: 9, scope: !3028)
!3033 = !DILocation(line: 447, column: 9, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !831, file: !453, line: 447, column: 9)
!3035 = !DILocation(line: 447, column: 18, scope: !3034)
!3036 = !DILocation(line: 447, column: 9, scope: !831)
!3037 = !DILocation(line: 448, column: 16, scope: !3034)
!3038 = !DILocation(line: 448, column: 9, scope: !3034)
!3039 = !DILocation(line: 452, column: 11, scope: !831)
!3040 = !DILocation(line: 452, column: 9, scope: !831)
!3041 = !DILocation(line: 453, column: 9, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !831, file: !453, line: 453, column: 9)
!3043 = !DILocation(line: 453, column: 13, scope: !3042)
!3044 = !DILocation(line: 453, column: 9, scope: !831)
!3045 = !DILocation(line: 454, column: 9, scope: !3042)
!3046 = !DILocation(line: 455, column: 11, scope: !831)
!3047 = !DILocation(line: 455, column: 9, scope: !831)
!3048 = !DILocation(line: 456, column: 9, scope: !844)
!3049 = !DILocation(line: 456, column: 13, scope: !844)
!3050 = !DILocation(line: 456, column: 9, scope: !831)
!3051 = !DILocation(line: 457, column: 9, scope: !843)
!3052 = !DILocation(line: 457, column: 14, scope: !3053)
!3053 = !DILexicalBlockFile(scope: !842, file: !453, discriminator: 1)
!3054 = !DILocation(line: 457, column: 24, scope: !842)
!3055 = !DILocation(line: 457, column: 54, scope: !842)
!3056 = !DILocation(line: 457, column: 68, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !842, file: !453, line: 457, column: 65)
!3058 = !DILocation(line: 457, column: 85, scope: !3057)
!3059 = !DILocation(line: 457, column: 65, scope: !3057)
!3060 = !DILocation(line: 457, column: 95, scope: !3057)
!3061 = !DILocation(line: 457, column: 65, scope: !842)
!3062 = !DILocation(line: 457, column: 65, scope: !3063)
!3063 = !DILexicalBlockFile(scope: !842, file: !453, discriminator: 2)
!3064 = !DILocation(line: 457, column: 126, scope: !3065)
!3065 = !DILexicalBlockFile(scope: !3057, file: !453, discriminator: 3)
!3066 = !DILocation(line: 457, column: 144, scope: !3057)
!3067 = !DILocation(line: 457, column: 154, scope: !3057)
!3068 = !DILocation(line: 457, column: 179, scope: !3057)
!3069 = !DILocation(line: 457, column: 110, scope: !3057)
!3070 = !DILocation(line: 457, column: 198, scope: !3071)
!3071 = !DILexicalBlockFile(scope: !843, file: !453, discriminator: 4)
!3072 = !DILocation(line: 457, column: 198, scope: !842)
!3073 = !DILocation(line: 457, column: 198, scope: !3074)
!3074 = !DILexicalBlockFile(scope: !842, file: !453, discriminator: 5)
!3075 = !DILocation(line: 458, column: 9, scope: !843)
!3076 = !DILocation(line: 460, column: 25, scope: !831)
!3077 = !DILocation(line: 460, column: 30, scope: !831)
!3078 = !DILocation(line: 460, column: 12, scope: !831)
!3079 = !DILocation(line: 460, column: 10, scope: !831)
!3080 = !DILocation(line: 461, column: 5, scope: !831)
!3081 = !DILocation(line: 461, column: 10, scope: !3082)
!3082 = !DILexicalBlockFile(scope: !846, file: !453, discriminator: 1)
!3083 = !DILocation(line: 461, column: 20, scope: !846)
!3084 = !DILocation(line: 461, column: 50, scope: !846)
!3085 = !DILocation(line: 461, column: 64, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !846, file: !453, line: 461, column: 61)
!3087 = !DILocation(line: 461, column: 81, scope: !3086)
!3088 = !DILocation(line: 461, column: 61, scope: !3086)
!3089 = !DILocation(line: 461, column: 91, scope: !3086)
!3090 = !DILocation(line: 461, column: 61, scope: !846)
!3091 = !DILocation(line: 461, column: 61, scope: !3092)
!3092 = !DILexicalBlockFile(scope: !846, file: !453, discriminator: 2)
!3093 = !DILocation(line: 461, column: 122, scope: !3094)
!3094 = !DILexicalBlockFile(scope: !3086, file: !453, discriminator: 3)
!3095 = !DILocation(line: 461, column: 140, scope: !3086)
!3096 = !DILocation(line: 461, column: 150, scope: !3086)
!3097 = !DILocation(line: 461, column: 175, scope: !3086)
!3098 = !DILocation(line: 461, column: 106, scope: !3086)
!3099 = !DILocation(line: 461, column: 194, scope: !3015)
!3100 = !DILocation(line: 461, column: 194, scope: !846)
!3101 = !DILocation(line: 461, column: 194, scope: !3102)
!3102 = !DILexicalBlockFile(scope: !846, file: !453, discriminator: 5)
!3103 = !DILocation(line: 462, column: 5, scope: !831)
!3104 = !DILocation(line: 462, column: 10, scope: !3105)
!3105 = !DILexicalBlockFile(scope: !848, file: !453, discriminator: 1)
!3106 = !DILocation(line: 462, column: 20, scope: !848)
!3107 = !DILocation(line: 462, column: 50, scope: !848)
!3108 = !DILocation(line: 462, column: 64, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !848, file: !453, line: 462, column: 61)
!3110 = !DILocation(line: 462, column: 81, scope: !3109)
!3111 = !DILocation(line: 462, column: 61, scope: !3109)
!3112 = !DILocation(line: 462, column: 91, scope: !3109)
!3113 = !DILocation(line: 462, column: 61, scope: !848)
!3114 = !DILocation(line: 462, column: 61, scope: !3115)
!3115 = !DILexicalBlockFile(scope: !848, file: !453, discriminator: 2)
!3116 = !DILocation(line: 462, column: 122, scope: !3117)
!3117 = !DILexicalBlockFile(scope: !3109, file: !453, discriminator: 3)
!3118 = !DILocation(line: 462, column: 140, scope: !3109)
!3119 = !DILocation(line: 462, column: 150, scope: !3109)
!3120 = !DILocation(line: 462, column: 175, scope: !3109)
!3121 = !DILocation(line: 462, column: 106, scope: !3109)
!3122 = !DILocation(line: 462, column: 194, scope: !3015)
!3123 = !DILocation(line: 462, column: 194, scope: !848)
!3124 = !DILocation(line: 462, column: 194, scope: !3125)
!3125 = !DILexicalBlockFile(scope: !848, file: !453, discriminator: 5)
!3126 = !DILocation(line: 463, column: 11, scope: !831)
!3127 = !DILocation(line: 463, column: 9, scope: !831)
!3128 = !DILocation(line: 464, column: 9, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !831, file: !453, line: 464, column: 9)
!3130 = !DILocation(line: 464, column: 13, scope: !3129)
!3131 = !DILocation(line: 464, column: 9, scope: !831)
!3132 = !DILocation(line: 465, column: 9, scope: !3129)
!3133 = !DILocation(line: 466, column: 14, scope: !831)
!3134 = !DILocation(line: 467, column: 38, scope: !831)
!3135 = !DILocation(line: 467, column: 13, scope: !831)
!3136 = !DILocation(line: 467, column: 11, scope: !831)
!3137 = !DILocation(line: 468, column: 5, scope: !831)
!3138 = !DILocation(line: 468, column: 10, scope: !3139)
!3139 = !DILexicalBlockFile(scope: !850, file: !453, discriminator: 1)
!3140 = !DILocation(line: 468, column: 20, scope: !850)
!3141 = !DILocation(line: 468, column: 50, scope: !850)
!3142 = !DILocation(line: 468, column: 64, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !850, file: !453, line: 468, column: 61)
!3144 = !DILocation(line: 468, column: 81, scope: !3143)
!3145 = !DILocation(line: 468, column: 61, scope: !3143)
!3146 = !DILocation(line: 468, column: 91, scope: !3143)
!3147 = !DILocation(line: 468, column: 61, scope: !850)
!3148 = !DILocation(line: 468, column: 61, scope: !3149)
!3149 = !DILexicalBlockFile(scope: !850, file: !453, discriminator: 2)
!3150 = !DILocation(line: 468, column: 122, scope: !3151)
!3151 = !DILexicalBlockFile(scope: !3143, file: !453, discriminator: 3)
!3152 = !DILocation(line: 468, column: 140, scope: !3143)
!3153 = !DILocation(line: 468, column: 150, scope: !3143)
!3154 = !DILocation(line: 468, column: 175, scope: !3143)
!3155 = !DILocation(line: 468, column: 106, scope: !3143)
!3156 = !DILocation(line: 468, column: 194, scope: !3015)
!3157 = !DILocation(line: 468, column: 194, scope: !850)
!3158 = !DILocation(line: 468, column: 194, scope: !3159)
!3159 = !DILexicalBlockFile(scope: !850, file: !453, discriminator: 5)
!3160 = !DILocation(line: 469, column: 9, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !831, file: !453, line: 469, column: 9)
!3162 = !DILocation(line: 469, column: 15, scope: !3161)
!3163 = !DILocation(line: 469, column: 21, scope: !3161)
!3164 = !DILocation(line: 469, column: 24, scope: !3165)
!3165 = !DILexicalBlockFile(scope: !3161, file: !453, discriminator: 1)
!3166 = !DILocation(line: 469, column: 9, scope: !831)
!3167 = !DILocation(line: 470, column: 9, scope: !3161)
!3168 = !DILocation(line: 471, column: 9, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !831, file: !453, line: 471, column: 9)
!3170 = !DILocation(line: 471, column: 15, scope: !3169)
!3171 = !DILocation(line: 471, column: 9, scope: !831)
!3172 = !DILocation(line: 472, column: 16, scope: !3169)
!3173 = !DILocation(line: 472, column: 9, scope: !3169)
!3174 = !DILocation(line: 474, column: 9, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !831, file: !453, line: 474, column: 9)
!3176 = !DILocation(line: 474, column: 18, scope: !3175)
!3177 = !DILocation(line: 474, column: 9, scope: !831)
!3178 = !DILocation(line: 475, column: 16, scope: !3175)
!3179 = !DILocation(line: 475, column: 9, scope: !3175)
!3180 = !DILocation(line: 480, column: 11, scope: !831)
!3181 = !DILocation(line: 480, column: 9, scope: !831)
!3182 = !DILocation(line: 481, column: 9, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !831, file: !453, line: 481, column: 9)
!3184 = !DILocation(line: 481, column: 13, scope: !3183)
!3185 = !DILocation(line: 481, column: 9, scope: !831)
!3186 = !DILocation(line: 482, column: 9, scope: !3183)
!3187 = !DILocation(line: 483, column: 14, scope: !831)
!3188 = !DILocation(line: 484, column: 38, scope: !831)
!3189 = !DILocation(line: 484, column: 13, scope: !831)
!3190 = !DILocation(line: 484, column: 11, scope: !831)
!3191 = !DILocation(line: 485, column: 5, scope: !831)
!3192 = !DILocation(line: 485, column: 10, scope: !3193)
!3193 = !DILexicalBlockFile(scope: !852, file: !453, discriminator: 1)
!3194 = !DILocation(line: 485, column: 20, scope: !852)
!3195 = !DILocation(line: 485, column: 50, scope: !852)
!3196 = !DILocation(line: 485, column: 64, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !852, file: !453, line: 485, column: 61)
!3198 = !DILocation(line: 485, column: 81, scope: !3197)
!3199 = !DILocation(line: 485, column: 61, scope: !3197)
!3200 = !DILocation(line: 485, column: 91, scope: !3197)
!3201 = !DILocation(line: 485, column: 61, scope: !852)
!3202 = !DILocation(line: 485, column: 61, scope: !3203)
!3203 = !DILexicalBlockFile(scope: !852, file: !453, discriminator: 2)
!3204 = !DILocation(line: 485, column: 122, scope: !3205)
!3205 = !DILexicalBlockFile(scope: !3197, file: !453, discriminator: 3)
!3206 = !DILocation(line: 485, column: 140, scope: !3197)
!3207 = !DILocation(line: 485, column: 150, scope: !3197)
!3208 = !DILocation(line: 485, column: 175, scope: !3197)
!3209 = !DILocation(line: 485, column: 106, scope: !3197)
!3210 = !DILocation(line: 485, column: 194, scope: !3015)
!3211 = !DILocation(line: 485, column: 194, scope: !852)
!3212 = !DILocation(line: 485, column: 194, scope: !3213)
!3213 = !DILexicalBlockFile(scope: !852, file: !453, discriminator: 5)
!3214 = !DILocation(line: 486, column: 9, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !831, file: !453, line: 486, column: 9)
!3216 = !DILocation(line: 486, column: 15, scope: !3215)
!3217 = !DILocation(line: 486, column: 21, scope: !3215)
!3218 = !DILocation(line: 486, column: 24, scope: !3219)
!3219 = !DILexicalBlockFile(scope: !3215, file: !453, discriminator: 1)
!3220 = !DILocation(line: 486, column: 9, scope: !831)
!3221 = !DILocation(line: 487, column: 9, scope: !3215)
!3222 = !DILocation(line: 488, column: 9, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !831, file: !453, line: 488, column: 9)
!3224 = !DILocation(line: 488, column: 15, scope: !3223)
!3225 = !DILocation(line: 488, column: 9, scope: !831)
!3226 = !DILocation(line: 489, column: 16, scope: !3223)
!3227 = !DILocation(line: 489, column: 9, scope: !3223)
!3228 = !DILocation(line: 491, column: 9, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !831, file: !453, line: 491, column: 9)
!3230 = !DILocation(line: 491, column: 18, scope: !3229)
!3231 = !DILocation(line: 491, column: 9, scope: !831)
!3232 = !DILocation(line: 492, column: 16, scope: !3229)
!3233 = !DILocation(line: 492, column: 9, scope: !3229)
!3234 = !DILocation(line: 496, column: 11, scope: !831)
!3235 = !DILocation(line: 496, column: 9, scope: !831)
!3236 = !DILocation(line: 497, column: 9, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !831, file: !453, line: 497, column: 9)
!3238 = !DILocation(line: 497, column: 13, scope: !3237)
!3239 = !DILocation(line: 497, column: 9, scope: !831)
!3240 = !DILocation(line: 498, column: 9, scope: !3237)
!3241 = !DILocation(line: 499, column: 11, scope: !831)
!3242 = !DILocation(line: 499, column: 9, scope: !831)
!3243 = !DILocation(line: 500, column: 9, scope: !856)
!3244 = !DILocation(line: 500, column: 13, scope: !856)
!3245 = !DILocation(line: 500, column: 9, scope: !831)
!3246 = !DILocation(line: 501, column: 9, scope: !855)
!3247 = !DILocation(line: 501, column: 14, scope: !3248)
!3248 = !DILexicalBlockFile(scope: !854, file: !453, discriminator: 1)
!3249 = !DILocation(line: 501, column: 24, scope: !854)
!3250 = !DILocation(line: 501, column: 54, scope: !854)
!3251 = !DILocation(line: 501, column: 68, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !854, file: !453, line: 501, column: 65)
!3253 = !DILocation(line: 501, column: 85, scope: !3252)
!3254 = !DILocation(line: 501, column: 65, scope: !3252)
!3255 = !DILocation(line: 501, column: 95, scope: !3252)
!3256 = !DILocation(line: 501, column: 65, scope: !854)
!3257 = !DILocation(line: 501, column: 65, scope: !3258)
!3258 = !DILexicalBlockFile(scope: !854, file: !453, discriminator: 2)
!3259 = !DILocation(line: 501, column: 126, scope: !3260)
!3260 = !DILexicalBlockFile(scope: !3252, file: !453, discriminator: 3)
!3261 = !DILocation(line: 501, column: 144, scope: !3252)
!3262 = !DILocation(line: 501, column: 154, scope: !3252)
!3263 = !DILocation(line: 501, column: 179, scope: !3252)
!3264 = !DILocation(line: 501, column: 110, scope: !3252)
!3265 = !DILocation(line: 501, column: 198, scope: !3266)
!3266 = !DILexicalBlockFile(scope: !855, file: !453, discriminator: 4)
!3267 = !DILocation(line: 501, column: 198, scope: !854)
!3268 = !DILocation(line: 501, column: 198, scope: !3269)
!3269 = !DILexicalBlockFile(scope: !854, file: !453, discriminator: 5)
!3270 = !DILocation(line: 502, column: 9, scope: !855)
!3271 = !DILocation(line: 504, column: 30, scope: !831)
!3272 = !DILocation(line: 504, column: 35, scope: !831)
!3273 = !DILocation(line: 504, column: 12, scope: !831)
!3274 = !DILocation(line: 504, column: 10, scope: !831)
!3275 = !DILocation(line: 505, column: 5, scope: !831)
!3276 = !DILocation(line: 505, column: 10, scope: !3277)
!3277 = !DILexicalBlockFile(scope: !858, file: !453, discriminator: 1)
!3278 = !DILocation(line: 505, column: 20, scope: !858)
!3279 = !DILocation(line: 505, column: 50, scope: !858)
!3280 = !DILocation(line: 505, column: 64, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !858, file: !453, line: 505, column: 61)
!3282 = !DILocation(line: 505, column: 81, scope: !3281)
!3283 = !DILocation(line: 505, column: 61, scope: !3281)
!3284 = !DILocation(line: 505, column: 91, scope: !3281)
!3285 = !DILocation(line: 505, column: 61, scope: !858)
!3286 = !DILocation(line: 505, column: 61, scope: !3287)
!3287 = !DILexicalBlockFile(scope: !858, file: !453, discriminator: 2)
!3288 = !DILocation(line: 505, column: 122, scope: !3289)
!3289 = !DILexicalBlockFile(scope: !3281, file: !453, discriminator: 3)
!3290 = !DILocation(line: 505, column: 140, scope: !3281)
!3291 = !DILocation(line: 505, column: 150, scope: !3281)
!3292 = !DILocation(line: 505, column: 175, scope: !3281)
!3293 = !DILocation(line: 505, column: 106, scope: !3281)
!3294 = !DILocation(line: 505, column: 194, scope: !3015)
!3295 = !DILocation(line: 505, column: 194, scope: !858)
!3296 = !DILocation(line: 505, column: 194, scope: !3297)
!3297 = !DILexicalBlockFile(scope: !858, file: !453, discriminator: 5)
!3298 = !DILocation(line: 506, column: 5, scope: !831)
!3299 = !DILocation(line: 506, column: 10, scope: !3300)
!3300 = !DILexicalBlockFile(scope: !860, file: !453, discriminator: 1)
!3301 = !DILocation(line: 506, column: 20, scope: !860)
!3302 = !DILocation(line: 506, column: 50, scope: !860)
!3303 = !DILocation(line: 506, column: 64, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !860, file: !453, line: 506, column: 61)
!3305 = !DILocation(line: 506, column: 81, scope: !3304)
!3306 = !DILocation(line: 506, column: 61, scope: !3304)
!3307 = !DILocation(line: 506, column: 91, scope: !3304)
!3308 = !DILocation(line: 506, column: 61, scope: !860)
!3309 = !DILocation(line: 506, column: 61, scope: !3310)
!3310 = !DILexicalBlockFile(scope: !860, file: !453, discriminator: 2)
!3311 = !DILocation(line: 506, column: 122, scope: !3312)
!3312 = !DILexicalBlockFile(scope: !3304, file: !453, discriminator: 3)
!3313 = !DILocation(line: 506, column: 140, scope: !3304)
!3314 = !DILocation(line: 506, column: 150, scope: !3304)
!3315 = !DILocation(line: 506, column: 175, scope: !3304)
!3316 = !DILocation(line: 506, column: 106, scope: !3304)
!3317 = !DILocation(line: 506, column: 194, scope: !3015)
!3318 = !DILocation(line: 506, column: 194, scope: !860)
!3319 = !DILocation(line: 506, column: 194, scope: !3320)
!3320 = !DILexicalBlockFile(scope: !860, file: !453, discriminator: 5)
!3321 = !DILocation(line: 507, column: 11, scope: !831)
!3322 = !DILocation(line: 507, column: 9, scope: !831)
!3323 = !DILocation(line: 508, column: 9, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !831, file: !453, line: 508, column: 9)
!3325 = !DILocation(line: 508, column: 13, scope: !3324)
!3326 = !DILocation(line: 508, column: 9, scope: !831)
!3327 = !DILocation(line: 509, column: 9, scope: !3324)
!3328 = !DILocation(line: 510, column: 14, scope: !831)
!3329 = !DILocation(line: 511, column: 38, scope: !831)
!3330 = !DILocation(line: 511, column: 13, scope: !831)
!3331 = !DILocation(line: 511, column: 11, scope: !831)
!3332 = !DILocation(line: 512, column: 5, scope: !831)
!3333 = !DILocation(line: 512, column: 10, scope: !3334)
!3334 = !DILexicalBlockFile(scope: !862, file: !453, discriminator: 1)
!3335 = !DILocation(line: 512, column: 20, scope: !862)
!3336 = !DILocation(line: 512, column: 50, scope: !862)
!3337 = !DILocation(line: 512, column: 64, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !862, file: !453, line: 512, column: 61)
!3339 = !DILocation(line: 512, column: 81, scope: !3338)
!3340 = !DILocation(line: 512, column: 61, scope: !3338)
!3341 = !DILocation(line: 512, column: 91, scope: !3338)
!3342 = !DILocation(line: 512, column: 61, scope: !862)
!3343 = !DILocation(line: 512, column: 61, scope: !3344)
!3344 = !DILexicalBlockFile(scope: !862, file: !453, discriminator: 2)
!3345 = !DILocation(line: 512, column: 122, scope: !3346)
!3346 = !DILexicalBlockFile(scope: !3338, file: !453, discriminator: 3)
!3347 = !DILocation(line: 512, column: 140, scope: !3338)
!3348 = !DILocation(line: 512, column: 150, scope: !3338)
!3349 = !DILocation(line: 512, column: 175, scope: !3338)
!3350 = !DILocation(line: 512, column: 106, scope: !3338)
!3351 = !DILocation(line: 512, column: 194, scope: !3015)
!3352 = !DILocation(line: 512, column: 194, scope: !862)
!3353 = !DILocation(line: 512, column: 194, scope: !3354)
!3354 = !DILexicalBlockFile(scope: !862, file: !453, discriminator: 5)
!3355 = !DILocation(line: 513, column: 9, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !831, file: !453, line: 513, column: 9)
!3357 = !DILocation(line: 513, column: 15, scope: !3356)
!3358 = !DILocation(line: 513, column: 21, scope: !3356)
!3359 = !DILocation(line: 513, column: 24, scope: !3360)
!3360 = !DILexicalBlockFile(scope: !3356, file: !453, discriminator: 1)
!3361 = !DILocation(line: 513, column: 9, scope: !831)
!3362 = !DILocation(line: 514, column: 9, scope: !3356)
!3363 = !DILocation(line: 515, column: 9, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !831, file: !453, line: 515, column: 9)
!3365 = !DILocation(line: 515, column: 15, scope: !3364)
!3366 = !DILocation(line: 515, column: 9, scope: !831)
!3367 = !DILocation(line: 516, column: 16, scope: !3364)
!3368 = !DILocation(line: 516, column: 9, scope: !3364)
!3369 = !DILocation(line: 518, column: 9, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !831, file: !453, line: 518, column: 9)
!3371 = !DILocation(line: 518, column: 18, scope: !3370)
!3372 = !DILocation(line: 518, column: 9, scope: !831)
!3373 = !DILocation(line: 519, column: 16, scope: !3370)
!3374 = !DILocation(line: 519, column: 9, scope: !3370)
!3375 = !DILocation(line: 523, column: 11, scope: !831)
!3376 = !DILocation(line: 523, column: 9, scope: !831)
!3377 = !DILocation(line: 524, column: 9, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !831, file: !453, line: 524, column: 9)
!3379 = !DILocation(line: 524, column: 13, scope: !3378)
!3380 = !DILocation(line: 524, column: 9, scope: !831)
!3381 = !DILocation(line: 525, column: 9, scope: !3378)
!3382 = !DILocation(line: 526, column: 14, scope: !831)
!3383 = !DILocation(line: 527, column: 38, scope: !831)
!3384 = !DILocation(line: 527, column: 13, scope: !831)
!3385 = !DILocation(line: 527, column: 11, scope: !831)
!3386 = !DILocation(line: 528, column: 5, scope: !831)
!3387 = !DILocation(line: 528, column: 10, scope: !3388)
!3388 = !DILexicalBlockFile(scope: !864, file: !453, discriminator: 1)
!3389 = !DILocation(line: 528, column: 20, scope: !864)
!3390 = !DILocation(line: 528, column: 50, scope: !864)
!3391 = !DILocation(line: 528, column: 64, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !864, file: !453, line: 528, column: 61)
!3393 = !DILocation(line: 528, column: 81, scope: !3392)
!3394 = !DILocation(line: 528, column: 61, scope: !3392)
!3395 = !DILocation(line: 528, column: 91, scope: !3392)
!3396 = !DILocation(line: 528, column: 61, scope: !864)
!3397 = !DILocation(line: 528, column: 61, scope: !3398)
!3398 = !DILexicalBlockFile(scope: !864, file: !453, discriminator: 2)
!3399 = !DILocation(line: 528, column: 122, scope: !3400)
!3400 = !DILexicalBlockFile(scope: !3392, file: !453, discriminator: 3)
!3401 = !DILocation(line: 528, column: 140, scope: !3392)
!3402 = !DILocation(line: 528, column: 150, scope: !3392)
!3403 = !DILocation(line: 528, column: 175, scope: !3392)
!3404 = !DILocation(line: 528, column: 106, scope: !3392)
!3405 = !DILocation(line: 528, column: 194, scope: !3015)
!3406 = !DILocation(line: 528, column: 194, scope: !864)
!3407 = !DILocation(line: 528, column: 194, scope: !3408)
!3408 = !DILexicalBlockFile(scope: !864, file: !453, discriminator: 5)
!3409 = !DILocation(line: 529, column: 9, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !831, file: !453, line: 529, column: 9)
!3411 = !DILocation(line: 529, column: 15, scope: !3410)
!3412 = !DILocation(line: 529, column: 21, scope: !3410)
!3413 = !DILocation(line: 529, column: 24, scope: !3414)
!3414 = !DILexicalBlockFile(scope: !3410, file: !453, discriminator: 1)
!3415 = !DILocation(line: 529, column: 9, scope: !831)
!3416 = !DILocation(line: 530, column: 9, scope: !3410)
!3417 = !DILocation(line: 531, column: 9, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !831, file: !453, line: 531, column: 9)
!3419 = !DILocation(line: 531, column: 15, scope: !3418)
!3420 = !DILocation(line: 531, column: 9, scope: !831)
!3421 = !DILocation(line: 532, column: 16, scope: !3418)
!3422 = !DILocation(line: 532, column: 9, scope: !3418)
!3423 = !DILocation(line: 534, column: 9, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !831, file: !453, line: 534, column: 9)
!3425 = !DILocation(line: 534, column: 18, scope: !3424)
!3426 = !DILocation(line: 534, column: 9, scope: !831)
!3427 = !DILocation(line: 535, column: 16, scope: !3424)
!3428 = !DILocation(line: 535, column: 9, scope: !3424)
!3429 = !DILocation(line: 538, column: 11, scope: !831)
!3430 = !DILocation(line: 538, column: 9, scope: !831)
!3431 = !DILocation(line: 539, column: 9, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !831, file: !453, line: 539, column: 9)
!3433 = !DILocation(line: 539, column: 13, scope: !3432)
!3434 = !DILocation(line: 539, column: 9, scope: !831)
!3435 = !DILocation(line: 540, column: 9, scope: !3432)
!3436 = !DILocation(line: 541, column: 14, scope: !831)
!3437 = !DILocation(line: 542, column: 38, scope: !831)
!3438 = !DILocation(line: 542, column: 13, scope: !831)
!3439 = !DILocation(line: 542, column: 11, scope: !831)
!3440 = !DILocation(line: 543, column: 5, scope: !831)
!3441 = !DILocation(line: 543, column: 10, scope: !3442)
!3442 = !DILexicalBlockFile(scope: !866, file: !453, discriminator: 1)
!3443 = !DILocation(line: 543, column: 20, scope: !866)
!3444 = !DILocation(line: 543, column: 50, scope: !866)
!3445 = !DILocation(line: 543, column: 64, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !866, file: !453, line: 543, column: 61)
!3447 = !DILocation(line: 543, column: 81, scope: !3446)
!3448 = !DILocation(line: 543, column: 61, scope: !3446)
!3449 = !DILocation(line: 543, column: 91, scope: !3446)
!3450 = !DILocation(line: 543, column: 61, scope: !866)
!3451 = !DILocation(line: 543, column: 61, scope: !3452)
!3452 = !DILexicalBlockFile(scope: !866, file: !453, discriminator: 2)
!3453 = !DILocation(line: 543, column: 122, scope: !3454)
!3454 = !DILexicalBlockFile(scope: !3446, file: !453, discriminator: 3)
!3455 = !DILocation(line: 543, column: 140, scope: !3446)
!3456 = !DILocation(line: 543, column: 150, scope: !3446)
!3457 = !DILocation(line: 543, column: 175, scope: !3446)
!3458 = !DILocation(line: 543, column: 106, scope: !3446)
!3459 = !DILocation(line: 543, column: 194, scope: !3015)
!3460 = !DILocation(line: 543, column: 194, scope: !866)
!3461 = !DILocation(line: 543, column: 194, scope: !3462)
!3462 = !DILexicalBlockFile(scope: !866, file: !453, discriminator: 5)
!3463 = !DILocation(line: 544, column: 9, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !831, file: !453, line: 544, column: 9)
!3465 = !DILocation(line: 544, column: 15, scope: !3464)
!3466 = !DILocation(line: 544, column: 21, scope: !3464)
!3467 = !DILocation(line: 544, column: 24, scope: !3468)
!3468 = !DILexicalBlockFile(scope: !3464, file: !453, discriminator: 1)
!3469 = !DILocation(line: 544, column: 9, scope: !831)
!3470 = !DILocation(line: 545, column: 9, scope: !3464)
!3471 = !DILocation(line: 546, column: 9, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !831, file: !453, line: 546, column: 9)
!3473 = !DILocation(line: 546, column: 15, scope: !3472)
!3474 = !DILocation(line: 546, column: 9, scope: !831)
!3475 = !DILocation(line: 547, column: 16, scope: !3472)
!3476 = !DILocation(line: 547, column: 9, scope: !3472)
!3477 = !DILocation(line: 549, column: 9, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !831, file: !453, line: 549, column: 9)
!3479 = !DILocation(line: 549, column: 18, scope: !3478)
!3480 = !DILocation(line: 549, column: 9, scope: !831)
!3481 = !DILocation(line: 550, column: 16, scope: !3478)
!3482 = !DILocation(line: 550, column: 9, scope: !3478)
!3483 = !DILocation(line: 553, column: 11, scope: !831)
!3484 = !DILocation(line: 553, column: 9, scope: !831)
!3485 = !DILocation(line: 554, column: 9, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !831, file: !453, line: 554, column: 9)
!3487 = !DILocation(line: 554, column: 13, scope: !3486)
!3488 = !DILocation(line: 554, column: 9, scope: !831)
!3489 = !DILocation(line: 555, column: 9, scope: !3486)
!3490 = !DILocation(line: 556, column: 14, scope: !831)
!3491 = !DILocation(line: 557, column: 38, scope: !831)
!3492 = !DILocation(line: 557, column: 13, scope: !831)
!3493 = !DILocation(line: 557, column: 11, scope: !831)
!3494 = !DILocation(line: 558, column: 5, scope: !831)
!3495 = !DILocation(line: 558, column: 10, scope: !3496)
!3496 = !DILexicalBlockFile(scope: !868, file: !453, discriminator: 1)
!3497 = !DILocation(line: 558, column: 20, scope: !868)
!3498 = !DILocation(line: 558, column: 50, scope: !868)
!3499 = !DILocation(line: 558, column: 64, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !868, file: !453, line: 558, column: 61)
!3501 = !DILocation(line: 558, column: 81, scope: !3500)
!3502 = !DILocation(line: 558, column: 61, scope: !3500)
!3503 = !DILocation(line: 558, column: 91, scope: !3500)
!3504 = !DILocation(line: 558, column: 61, scope: !868)
!3505 = !DILocation(line: 558, column: 61, scope: !3506)
!3506 = !DILexicalBlockFile(scope: !868, file: !453, discriminator: 2)
!3507 = !DILocation(line: 558, column: 122, scope: !3508)
!3508 = !DILexicalBlockFile(scope: !3500, file: !453, discriminator: 3)
!3509 = !DILocation(line: 558, column: 140, scope: !3500)
!3510 = !DILocation(line: 558, column: 150, scope: !3500)
!3511 = !DILocation(line: 558, column: 175, scope: !3500)
!3512 = !DILocation(line: 558, column: 106, scope: !3500)
!3513 = !DILocation(line: 558, column: 194, scope: !3015)
!3514 = !DILocation(line: 558, column: 194, scope: !868)
!3515 = !DILocation(line: 558, column: 194, scope: !3516)
!3516 = !DILexicalBlockFile(scope: !868, file: !453, discriminator: 5)
!3517 = !DILocation(line: 559, column: 9, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !831, file: !453, line: 559, column: 9)
!3519 = !DILocation(line: 559, column: 15, scope: !3518)
!3520 = !DILocation(line: 559, column: 21, scope: !3518)
!3521 = !DILocation(line: 559, column: 24, scope: !3522)
!3522 = !DILexicalBlockFile(scope: !3518, file: !453, discriminator: 1)
!3523 = !DILocation(line: 559, column: 9, scope: !831)
!3524 = !DILocation(line: 560, column: 9, scope: !3518)
!3525 = !DILocation(line: 561, column: 9, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !831, file: !453, line: 561, column: 9)
!3527 = !DILocation(line: 561, column: 15, scope: !3526)
!3528 = !DILocation(line: 561, column: 9, scope: !831)
!3529 = !DILocation(line: 562, column: 16, scope: !3526)
!3530 = !DILocation(line: 562, column: 9, scope: !3526)
!3531 = !DILocation(line: 564, column: 9, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !831, file: !453, line: 564, column: 9)
!3533 = !DILocation(line: 564, column: 18, scope: !3532)
!3534 = !DILocation(line: 564, column: 9, scope: !831)
!3535 = !DILocation(line: 565, column: 16, scope: !3532)
!3536 = !DILocation(line: 565, column: 9, scope: !3532)
!3537 = !DILocation(line: 568, column: 11, scope: !831)
!3538 = !DILocation(line: 568, column: 9, scope: !831)
!3539 = !DILocation(line: 569, column: 9, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !831, file: !453, line: 569, column: 9)
!3541 = !DILocation(line: 569, column: 13, scope: !3540)
!3542 = !DILocation(line: 569, column: 9, scope: !831)
!3543 = !DILocation(line: 570, column: 9, scope: !3540)
!3544 = !DILocation(line: 571, column: 14, scope: !831)
!3545 = !DILocation(line: 572, column: 38, scope: !831)
!3546 = !DILocation(line: 572, column: 13, scope: !831)
!3547 = !DILocation(line: 572, column: 11, scope: !831)
!3548 = !DILocation(line: 573, column: 5, scope: !831)
!3549 = !DILocation(line: 573, column: 10, scope: !3550)
!3550 = !DILexicalBlockFile(scope: !870, file: !453, discriminator: 1)
!3551 = !DILocation(line: 573, column: 20, scope: !870)
!3552 = !DILocation(line: 573, column: 50, scope: !870)
!3553 = !DILocation(line: 573, column: 64, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !870, file: !453, line: 573, column: 61)
!3555 = !DILocation(line: 573, column: 81, scope: !3554)
!3556 = !DILocation(line: 573, column: 61, scope: !3554)
!3557 = !DILocation(line: 573, column: 91, scope: !3554)
!3558 = !DILocation(line: 573, column: 61, scope: !870)
!3559 = !DILocation(line: 573, column: 61, scope: !3560)
!3560 = !DILexicalBlockFile(scope: !870, file: !453, discriminator: 2)
!3561 = !DILocation(line: 573, column: 122, scope: !3562)
!3562 = !DILexicalBlockFile(scope: !3554, file: !453, discriminator: 3)
!3563 = !DILocation(line: 573, column: 140, scope: !3554)
!3564 = !DILocation(line: 573, column: 150, scope: !3554)
!3565 = !DILocation(line: 573, column: 175, scope: !3554)
!3566 = !DILocation(line: 573, column: 106, scope: !3554)
!3567 = !DILocation(line: 573, column: 194, scope: !3015)
!3568 = !DILocation(line: 573, column: 194, scope: !870)
!3569 = !DILocation(line: 573, column: 194, scope: !3570)
!3570 = !DILexicalBlockFile(scope: !870, file: !453, discriminator: 5)
!3571 = !DILocation(line: 574, column: 9, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !831, file: !453, line: 574, column: 9)
!3573 = !DILocation(line: 574, column: 15, scope: !3572)
!3574 = !DILocation(line: 574, column: 21, scope: !3572)
!3575 = !DILocation(line: 574, column: 24, scope: !3576)
!3576 = !DILexicalBlockFile(scope: !3572, file: !453, discriminator: 1)
!3577 = !DILocation(line: 574, column: 9, scope: !831)
!3578 = !DILocation(line: 575, column: 9, scope: !3572)
!3579 = !DILocation(line: 576, column: 9, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !831, file: !453, line: 576, column: 9)
!3581 = !DILocation(line: 576, column: 15, scope: !3580)
!3582 = !DILocation(line: 576, column: 9, scope: !831)
!3583 = !DILocation(line: 577, column: 16, scope: !3580)
!3584 = !DILocation(line: 577, column: 9, scope: !3580)
!3585 = !DILocation(line: 579, column: 9, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !831, file: !453, line: 579, column: 9)
!3587 = !DILocation(line: 579, column: 18, scope: !3586)
!3588 = !DILocation(line: 579, column: 9, scope: !831)
!3589 = !DILocation(line: 580, column: 16, scope: !3586)
!3590 = !DILocation(line: 580, column: 9, scope: !3586)
!3591 = !DILocation(line: 583, column: 51, scope: !831)
!3592 = !DILocation(line: 584, column: 5, scope: !831)
!3593 = !DILocation(line: 585, column: 1, scope: !831)
!3594 = !DILocation(line: 794, column: 31, scope: !871)
!3595 = !DILocation(line: 796, column: 5, scope: !871)
!3596 = !DILocation(line: 796, column: 12, scope: !871)
!3597 = !DILocation(line: 798, column: 51, scope: !871)
!3598 = !DILocation(line: 800, column: 11, scope: !871)
!3599 = !DILocation(line: 800, column: 9, scope: !871)
!3600 = !{!3601, !3601, i64 0}
!3601 = !{!"double", !1943, i64 0}
!3602 = !DILocation(line: 801, column: 9, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !871, file: !453, line: 801, column: 9)
!3604 = !DILocation(line: 801, column: 13, scope: !3603)
!3605 = !DILocation(line: 801, column: 21, scope: !3603)
!3606 = !DILocation(line: 801, column: 25, scope: !3607)
!3607 = !DILexicalBlockFile(scope: !3603, file: !453, discriminator: 1)
!3608 = !DILocation(line: 801, column: 9, scope: !871)
!3609 = !DILocation(line: 802, column: 16, scope: !3603)
!3610 = !DILocation(line: 802, column: 9, scope: !3603)
!3611 = !DILocation(line: 804, column: 33, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !871, file: !453, line: 804, column: 9)
!3613 = !DILocation(line: 804, column: 10, scope: !3612)
!3614 = !DILocation(line: 804, column: 9, scope: !871)
!3615 = !DILocation(line: 805, column: 16, scope: !3612)
!3616 = !DILocation(line: 805, column: 9, scope: !3612)
!3617 = !DILocation(line: 808, column: 5, scope: !871)
!3618 = !DILocation(line: 811, column: 5, scope: !871)
!3619 = !DILocation(line: 812, column: 1, scope: !871)
!3620 = !DILocation(line: 758, column: 31, scope: !875)
!3621 = !DILocation(line: 760, column: 5, scope: !875)
!3622 = !DILocation(line: 760, column: 12, scope: !875)
!3623 = !DILocation(line: 761, column: 5, scope: !875)
!3624 = !DILocation(line: 761, column: 16, scope: !875)
!3625 = !DILocation(line: 763, column: 51, scope: !875)
!3626 = !DILocation(line: 765, column: 13, scope: !875)
!3627 = !DILocation(line: 765, column: 11, scope: !875)
!3628 = !DILocation(line: 766, column: 9, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !875, file: !453, line: 766, column: 9)
!3630 = !DILocation(line: 766, column: 15, scope: !3629)
!3631 = !DILocation(line: 766, column: 29, scope: !3629)
!3632 = !DILocation(line: 766, column: 33, scope: !3633)
!3633 = !DILexicalBlockFile(scope: !3629, file: !453, discriminator: 1)
!3634 = !DILocation(line: 766, column: 9, scope: !875)
!3635 = !DILocation(line: 767, column: 16, scope: !3629)
!3636 = !DILocation(line: 767, column: 9, scope: !3629)
!3637 = !DILocation(line: 769, column: 33, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !875, file: !453, line: 769, column: 9)
!3639 = !DILocation(line: 769, column: 10, scope: !3638)
!3640 = !DILocation(line: 769, column: 9, scope: !875)
!3641 = !DILocation(line: 770, column: 16, scope: !3638)
!3642 = !DILocation(line: 770, column: 9, scope: !3638)
!3643 = !DILocation(line: 773, column: 5, scope: !875)
!3644 = !DILocation(line: 775, column: 13, scope: !875)
!3645 = !DILocation(line: 775, column: 11, scope: !875)
!3646 = !DILocation(line: 776, column: 9, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !875, file: !453, line: 776, column: 9)
!3648 = !DILocation(line: 776, column: 15, scope: !3647)
!3649 = !DILocation(line: 776, column: 33, scope: !3647)
!3650 = !DILocation(line: 776, column: 37, scope: !3651)
!3651 = !DILexicalBlockFile(scope: !3647, file: !453, discriminator: 1)
!3652 = !DILocation(line: 776, column: 9, scope: !875)
!3653 = !DILocation(line: 777, column: 16, scope: !3647)
!3654 = !DILocation(line: 777, column: 9, scope: !3647)
!3655 = !DILocation(line: 779, column: 33, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !875, file: !453, line: 779, column: 9)
!3657 = !DILocation(line: 779, column: 10, scope: !3656)
!3658 = !DILocation(line: 779, column: 9, scope: !875)
!3659 = !DILocation(line: 780, column: 16, scope: !3656)
!3660 = !DILocation(line: 780, column: 9, scope: !3656)
!3661 = !DILocation(line: 783, column: 5, scope: !875)
!3662 = !DILocation(line: 786, column: 5, scope: !875)
!3663 = !DILocation(line: 787, column: 1, scope: !875)
!3664 = !DILocation(line: 1700, column: 29, scope: !880)
!3665 = !DILocation(line: 1702, column: 5, scope: !880)
!3666 = !DILocation(line: 1706, column: 7, scope: !880)
!3667 = !DILocation(line: 1721, column: 5, scope: !880)
!3668 = !DILocation(line: 1721, column: 9, scope: !880)
!3669 = !DILocation(line: 1723, column: 12, scope: !896)
!3670 = !DILocation(line: 1723, column: 10, scope: !896)
!3671 = !DILocation(line: 1723, column: 17, scope: !3672)
!3672 = !DILexicalBlockFile(scope: !3673, file: !453, discriminator: 2)
!3673 = !DILexicalBlockFile(scope: !895, file: !453, discriminator: 1)
!3674 = !DILocation(line: 1723, column: 19, scope: !895)
!3675 = !DILocation(line: 1723, column: 5, scope: !896)
!3676 = !DILocation(line: 1724, column: 9, scope: !894)
!3677 = !DILocation(line: 1724, column: 16, scope: !894)
!3678 = !DILocation(line: 1725, column: 9, scope: !894)
!3679 = !DILocation(line: 1725, column: 13, scope: !894)
!3680 = !DILocation(line: 1726, column: 9, scope: !894)
!3681 = !DILocation(line: 1726, column: 19, scope: !894)
!3682 = !DILocation(line: 1728, column: 43, scope: !894)
!3683 = !DILocation(line: 1728, column: 33, scope: !894)
!3684 = !DILocation(line: 1728, column: 46, scope: !894)
!3685 = !{!3686, !1963, i64 0}
!3686 = !{!"triple", !1963, i64 0, !1963, i64 8, !1972, i64 16}
!3687 = !DILocation(line: 1728, column: 17, scope: !894)
!3688 = !DILocation(line: 1728, column: 15, scope: !894)
!3689 = !DILocation(line: 1729, column: 13, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !894, file: !453, line: 1729, column: 13)
!3691 = !DILocation(line: 1729, column: 19, scope: !3690)
!3692 = !DILocation(line: 1729, column: 13, scope: !894)
!3693 = !DILocation(line: 1730, column: 13, scope: !3690)
!3694 = !DILocation(line: 1731, column: 33, scope: !894)
!3695 = !DILocation(line: 1731, column: 17, scope: !894)
!3696 = !DILocation(line: 1731, column: 15, scope: !894)
!3697 = !DILocation(line: 1732, column: 29, scope: !894)
!3698 = !DILocation(line: 1732, column: 16, scope: !894)
!3699 = !DILocation(line: 1732, column: 14, scope: !894)
!3700 = !DILocation(line: 1734, column: 9, scope: !894)
!3701 = !DILocation(line: 1734, column: 14, scope: !3702)
!3702 = !DILexicalBlockFile(scope: !900, file: !453, discriminator: 1)
!3703 = !DILocation(line: 1734, column: 24, scope: !900)
!3704 = !DILocation(line: 1734, column: 54, scope: !900)
!3705 = !DILocation(line: 1734, column: 70, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !900, file: !453, line: 1734, column: 67)
!3707 = !DILocation(line: 1734, column: 87, scope: !3706)
!3708 = !DILocation(line: 1734, column: 67, scope: !3706)
!3709 = !DILocation(line: 1734, column: 97, scope: !3706)
!3710 = !DILocation(line: 1734, column: 67, scope: !900)
!3711 = !DILocation(line: 1734, column: 67, scope: !3712)
!3712 = !DILexicalBlockFile(scope: !900, file: !453, discriminator: 2)
!3713 = !DILocation(line: 1734, column: 128, scope: !3714)
!3714 = !DILexicalBlockFile(scope: !3706, file: !453, discriminator: 3)
!3715 = !DILocation(line: 1734, column: 146, scope: !3706)
!3716 = !DILocation(line: 1734, column: 156, scope: !3706)
!3717 = !DILocation(line: 1734, column: 181, scope: !3706)
!3718 = !DILocation(line: 1734, column: 112, scope: !3706)
!3719 = !DILocation(line: 1734, column: 200, scope: !3720)
!3720 = !DILexicalBlockFile(scope: !894, file: !453, discriminator: 4)
!3721 = !DILocation(line: 1734, column: 200, scope: !900)
!3722 = !DILocation(line: 1734, column: 200, scope: !3723)
!3723 = !DILexicalBlockFile(scope: !900, file: !453, discriminator: 5)
!3724 = !DILocation(line: 1735, column: 13, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !894, file: !453, line: 1735, column: 13)
!3726 = !DILocation(line: 1735, column: 32, scope: !3725)
!3727 = !DILocation(line: 1735, column: 22, scope: !3725)
!3728 = !DILocation(line: 1735, column: 35, scope: !3725)
!3729 = !{!3686, !1963, i64 8}
!3730 = !DILocation(line: 1735, column: 19, scope: !3725)
!3731 = !DILocation(line: 1735, column: 13, scope: !894)
!3732 = !DILocation(line: 1736, column: 20, scope: !3725)
!3733 = !DILocation(line: 1736, column: 13, scope: !3725)
!3734 = !DILocation(line: 1738, column: 13, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !894, file: !453, line: 1738, column: 13)
!3736 = !DILocation(line: 1738, column: 31, scope: !3735)
!3737 = !DILocation(line: 1738, column: 21, scope: !3735)
!3738 = !DILocation(line: 1738, column: 34, scope: !3735)
!3739 = !{!3686, !1972, i64 16}
!3740 = !DILocation(line: 1738, column: 18, scope: !3735)
!3741 = !DILocation(line: 1738, column: 13, scope: !894)
!3742 = !DILocation(line: 1739, column: 20, scope: !3735)
!3743 = !DILocation(line: 1739, column: 13, scope: !3735)
!3744 = !DILocation(line: 1741, column: 5, scope: !895)
!3745 = !DILocation(line: 1741, column: 5, scope: !3673)
!3746 = !DILocation(line: 1741, column: 5, scope: !894)
!3747 = !DILocation(line: 1723, column: 173, scope: !895)
!3748 = !DILocation(line: 1723, column: 5, scope: !895)
!3749 = !DILocation(line: 1742, column: 51, scope: !880)
!3750 = !DILocation(line: 1743, column: 5, scope: !880)
!3751 = !DILocation(line: 1744, column: 1, scope: !880)
!3752 = !DILocation(line: 1020, column: 23, scope: !901)
!3753 = !DILocation(line: 1022, column: 5, scope: !901)
!3754 = !DILocation(line: 1022, column: 15, scope: !901)
!3755 = !DILocation(line: 1022, column: 23, scope: !901)
!3756 = !DILocation(line: 1023, column: 5, scope: !901)
!3757 = !DILocation(line: 1023, column: 19, scope: !901)
!3758 = !DILocation(line: 1025, column: 13, scope: !901)
!3759 = !DILocation(line: 1025, column: 11, scope: !901)
!3760 = !DILocation(line: 1026, column: 9, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !901, file: !453, line: 1026, column: 9)
!3762 = !DILocation(line: 1026, column: 15, scope: !3761)
!3763 = !DILocation(line: 1026, column: 9, scope: !901)
!3764 = !DILocation(line: 1027, column: 9, scope: !3761)
!3765 = !DILocation(line: 1030, column: 11, scope: !901)
!3766 = !DILocation(line: 1030, column: 9, scope: !901)
!3767 = !DILocation(line: 1031, column: 9, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !901, file: !453, line: 1031, column: 9)
!3769 = !DILocation(line: 1031, column: 13, scope: !3768)
!3770 = !DILocation(line: 1031, column: 9, scope: !901)
!3771 = !DILocation(line: 1032, column: 9, scope: !3768)
!3772 = !DILocation(line: 1034, column: 39, scope: !901)
!3773 = !DILocation(line: 1034, column: 13, scope: !901)
!3774 = !DILocation(line: 1034, column: 11, scope: !901)
!3775 = !DILocation(line: 1035, column: 9, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !901, file: !453, line: 1035, column: 9)
!3777 = !DILocation(line: 1035, column: 15, scope: !3776)
!3778 = !DILocation(line: 1035, column: 9, scope: !901)
!3779 = !DILocation(line: 1036, column: 16, scope: !3776)
!3780 = !DILocation(line: 1036, column: 9, scope: !3776)
!3781 = !DILocation(line: 1039, column: 47, scope: !901)
!3782 = !DILocation(line: 1039, column: 25, scope: !901)
!3783 = !DILocation(line: 1039, column: 7, scope: !901)
!3784 = !DILocation(line: 1039, column: 34, scope: !901)
!3785 = !DILocation(line: 1039, column: 6, scope: !901)
!3786 = !DILocation(line: 1039, column: 45, scope: !901)
!3787 = !DILocation(line: 1041, column: 11, scope: !901)
!3788 = !DILocation(line: 1042, column: 33, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !901, file: !453, line: 1042, column: 9)
!3790 = !DILocation(line: 1042, column: 9, scope: !3789)
!3791 = !DILocation(line: 1042, column: 65, scope: !3789)
!3792 = !DILocation(line: 1042, column: 9, scope: !901)
!3793 = !DILocation(line: 1043, column: 9, scope: !3789)
!3794 = !DILocation(line: 1044, column: 9, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !901, file: !453, line: 1044, column: 9)
!3796 = !DILocation(line: 1044, column: 15, scope: !3795)
!3797 = !DILocation(line: 1044, column: 9, scope: !901)
!3798 = !DILocation(line: 1045, column: 16, scope: !3795)
!3799 = !DILocation(line: 1045, column: 9, scope: !3795)
!3800 = !DILocation(line: 1048, column: 5, scope: !901)
!3801 = !DILocation(line: 1048, column: 10, scope: !3802)
!3802 = !DILexicalBlockFile(scope: !908, file: !453, discriminator: 1)
!3803 = !DILocation(line: 1048, column: 20, scope: !908)
!3804 = !DILocation(line: 1048, column: 50, scope: !908)
!3805 = !DILocation(line: 1048, column: 64, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !908, file: !453, line: 1048, column: 61)
!3807 = !DILocation(line: 1048, column: 81, scope: !3806)
!3808 = !DILocation(line: 1048, column: 61, scope: !3806)
!3809 = !DILocation(line: 1048, column: 91, scope: !3806)
!3810 = !DILocation(line: 1048, column: 61, scope: !908)
!3811 = !DILocation(line: 1048, column: 61, scope: !3812)
!3812 = !DILexicalBlockFile(scope: !908, file: !453, discriminator: 2)
!3813 = !DILocation(line: 1048, column: 122, scope: !3814)
!3814 = !DILexicalBlockFile(scope: !3806, file: !453, discriminator: 3)
!3815 = !DILocation(line: 1048, column: 140, scope: !3806)
!3816 = !DILocation(line: 1048, column: 150, scope: !3806)
!3817 = !DILocation(line: 1048, column: 175, scope: !3806)
!3818 = !DILocation(line: 1048, column: 106, scope: !3806)
!3819 = !DILocation(line: 1048, column: 194, scope: !3820)
!3820 = !DILexicalBlockFile(scope: !901, file: !453, discriminator: 4)
!3821 = !DILocation(line: 1048, column: 194, scope: !908)
!3822 = !DILocation(line: 1048, column: 194, scope: !3823)
!3823 = !DILexicalBlockFile(scope: !908, file: !453, discriminator: 5)
!3824 = !DILocation(line: 1049, column: 11, scope: !901)
!3825 = !DILocation(line: 1049, column: 9, scope: !901)
!3826 = !DILocation(line: 1050, column: 9, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !901, file: !453, line: 1050, column: 9)
!3828 = !DILocation(line: 1050, column: 13, scope: !3827)
!3829 = !DILocation(line: 1050, column: 9, scope: !901)
!3830 = !DILocation(line: 1051, column: 9, scope: !3827)
!3831 = !DILocation(line: 1053, column: 39, scope: !901)
!3832 = !DILocation(line: 1053, column: 13, scope: !901)
!3833 = !DILocation(line: 1053, column: 11, scope: !901)
!3834 = !DILocation(line: 1054, column: 9, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !901, file: !453, line: 1054, column: 9)
!3836 = !DILocation(line: 1054, column: 15, scope: !3835)
!3837 = !DILocation(line: 1054, column: 9, scope: !901)
!3838 = !DILocation(line: 1055, column: 16, scope: !3835)
!3839 = !DILocation(line: 1055, column: 9, scope: !3835)
!3840 = !DILocation(line: 1058, column: 47, scope: !901)
!3841 = !DILocation(line: 1058, column: 25, scope: !901)
!3842 = !DILocation(line: 1058, column: 7, scope: !901)
!3843 = !DILocation(line: 1058, column: 34, scope: !901)
!3844 = !DILocation(line: 1058, column: 6, scope: !901)
!3845 = !DILocation(line: 1058, column: 45, scope: !901)
!3846 = !DILocation(line: 1060, column: 11, scope: !901)
!3847 = !DILocation(line: 1061, column: 33, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !901, file: !453, line: 1061, column: 9)
!3849 = !DILocation(line: 1061, column: 9, scope: !3848)
!3850 = !DILocation(line: 1061, column: 65, scope: !3848)
!3851 = !DILocation(line: 1061, column: 9, scope: !901)
!3852 = !DILocation(line: 1062, column: 9, scope: !3848)
!3853 = !DILocation(line: 1063, column: 9, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !901, file: !453, line: 1063, column: 9)
!3855 = !DILocation(line: 1063, column: 15, scope: !3854)
!3856 = !DILocation(line: 1063, column: 9, scope: !901)
!3857 = !DILocation(line: 1064, column: 16, scope: !3854)
!3858 = !DILocation(line: 1064, column: 9, scope: !3854)
!3859 = !DILocation(line: 1067, column: 5, scope: !901)
!3860 = !DILocation(line: 1067, column: 10, scope: !3861)
!3861 = !DILexicalBlockFile(scope: !910, file: !453, discriminator: 1)
!3862 = !DILocation(line: 1067, column: 20, scope: !910)
!3863 = !DILocation(line: 1067, column: 50, scope: !910)
!3864 = !DILocation(line: 1067, column: 66, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !910, file: !453, line: 1067, column: 63)
!3866 = !DILocation(line: 1067, column: 83, scope: !3865)
!3867 = !DILocation(line: 1067, column: 63, scope: !3865)
!3868 = !DILocation(line: 1067, column: 93, scope: !3865)
!3869 = !DILocation(line: 1067, column: 63, scope: !910)
!3870 = !DILocation(line: 1067, column: 63, scope: !3871)
!3871 = !DILexicalBlockFile(scope: !910, file: !453, discriminator: 2)
!3872 = !DILocation(line: 1067, column: 124, scope: !3873)
!3873 = !DILexicalBlockFile(scope: !3865, file: !453, discriminator: 3)
!3874 = !DILocation(line: 1067, column: 142, scope: !3865)
!3875 = !DILocation(line: 1067, column: 152, scope: !3865)
!3876 = !DILocation(line: 1067, column: 177, scope: !3865)
!3877 = !DILocation(line: 1067, column: 108, scope: !3865)
!3878 = !DILocation(line: 1067, column: 196, scope: !3820)
!3879 = !DILocation(line: 1067, column: 196, scope: !910)
!3880 = !DILocation(line: 1067, column: 196, scope: !3881)
!3881 = !DILexicalBlockFile(scope: !910, file: !453, discriminator: 5)
!3882 = !DILocation(line: 1068, column: 51, scope: !901)
!3883 = !DILocation(line: 1069, column: 5, scope: !901)
!3884 = !DILocation(line: 1070, column: 1, scope: !901)
!3885 = !DILocation(line: 1652, column: 31, scope: !911)
!3886 = !DILocation(line: 1655, column: 5, scope: !911)
!3887 = !DILocation(line: 1655, column: 15, scope: !911)
!3888 = !DILocation(line: 1655, column: 23, scope: !911)
!3889 = !DILocation(line: 1657, column: 5, scope: !911)
!3890 = !DILocation(line: 1657, column: 9, scope: !911)
!3891 = !DILocation(line: 1658, column: 13, scope: !911)
!3892 = !DILocation(line: 1658, column: 11, scope: !911)
!3893 = !DILocation(line: 1659, column: 10, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !911, file: !453, line: 1659, column: 9)
!3895 = !DILocation(line: 1659, column: 9, scope: !911)
!3896 = !DILocation(line: 1660, column: 9, scope: !3894)
!3897 = !DILocation(line: 1661, column: 43, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !911, file: !453, line: 1661, column: 9)
!3899 = !DILocation(line: 1661, column: 19, scope: !3898)
!3900 = !DILocation(line: 1661, column: 17, scope: !3898)
!3901 = !DILocation(line: 1661, column: 76, scope: !3898)
!3902 = !DILocation(line: 1661, column: 9, scope: !911)
!3903 = !DILocation(line: 1662, column: 9, scope: !3898)
!3904 = !DILocation(line: 1663, column: 12, scope: !911)
!3905 = !DILocation(line: 1663, column: 10, scope: !911)
!3906 = !DILocation(line: 1664, column: 10, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !911, file: !453, line: 1664, column: 9)
!3908 = !DILocation(line: 1664, column: 9, scope: !911)
!3909 = !DILocation(line: 1665, column: 9, scope: !3907)
!3910 = !DILocation(line: 1666, column: 49, scope: !911)
!3911 = !DILocation(line: 1666, column: 56, scope: !911)
!3912 = !DILocation(line: 1666, column: 14, scope: !911)
!3913 = !DILocation(line: 1666, column: 12, scope: !911)
!3914 = !DILocation(line: 1666, column: 5, scope: !911)
!3915 = !DILocation(line: 1668, column: 5, scope: !911)
!3916 = !DILocation(line: 1668, column: 10, scope: !3917)
!3917 = !DILexicalBlockFile(scope: !918, file: !453, discriminator: 1)
!3918 = !DILocation(line: 1668, column: 20, scope: !918)
!3919 = !DILocation(line: 1668, column: 50, scope: !918)
!3920 = !DILocation(line: 1668, column: 66, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !918, file: !453, line: 1668, column: 63)
!3922 = !DILocation(line: 1668, column: 83, scope: !3921)
!3923 = !DILocation(line: 1668, column: 63, scope: !3921)
!3924 = !DILocation(line: 1668, column: 93, scope: !3921)
!3925 = !DILocation(line: 1668, column: 63, scope: !918)
!3926 = !DILocation(line: 1668, column: 63, scope: !3927)
!3927 = !DILexicalBlockFile(scope: !918, file: !453, discriminator: 2)
!3928 = !DILocation(line: 1668, column: 124, scope: !3929)
!3929 = !DILexicalBlockFile(scope: !3921, file: !453, discriminator: 3)
!3930 = !DILocation(line: 1668, column: 142, scope: !3921)
!3931 = !DILocation(line: 1668, column: 152, scope: !3921)
!3932 = !DILocation(line: 1668, column: 177, scope: !3921)
!3933 = !DILocation(line: 1668, column: 108, scope: !3921)
!3934 = !DILocation(line: 1668, column: 196, scope: !3935)
!3935 = !DILexicalBlockFile(scope: !911, file: !453, discriminator: 4)
!3936 = !DILocation(line: 1668, column: 196, scope: !918)
!3937 = !DILocation(line: 1668, column: 196, scope: !3938)
!3938 = !DILexicalBlockFile(scope: !918, file: !453, discriminator: 5)
!3939 = !DILocation(line: 1669, column: 5, scope: !911)
!3940 = !DILocation(line: 1669, column: 10, scope: !3941)
!3941 = !DILexicalBlockFile(scope: !920, file: !453, discriminator: 1)
!3942 = !DILocation(line: 1669, column: 20, scope: !920)
!3943 = !DILocation(line: 1669, column: 51, scope: !920)
!3944 = !DILocation(line: 1669, column: 62, scope: !923)
!3945 = !DILocation(line: 1669, column: 78, scope: !923)
!3946 = !DILocation(line: 1669, column: 62, scope: !920)
!3947 = !DILocation(line: 1669, column: 93, scope: !3948)
!3948 = !DILexicalBlockFile(scope: !923, file: !453, discriminator: 2)
!3949 = !DILocation(line: 1669, column: 98, scope: !3950)
!3950 = !DILexicalBlockFile(scope: !922, file: !453, discriminator: 4)
!3951 = !DILocation(line: 1669, column: 108, scope: !922)
!3952 = !DILocation(line: 1669, column: 138, scope: !922)
!3953 = !DILocation(line: 1669, column: 164, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !922, file: !453, line: 1669, column: 161)
!3955 = !DILocation(line: 1669, column: 181, scope: !3954)
!3956 = !DILocation(line: 1669, column: 161, scope: !3954)
!3957 = !DILocation(line: 1669, column: 191, scope: !3954)
!3958 = !DILocation(line: 1669, column: 161, scope: !922)
!3959 = !DILocation(line: 1669, column: 161, scope: !3960)
!3960 = !DILexicalBlockFile(scope: !922, file: !453, discriminator: 5)
!3961 = !DILocation(line: 1669, column: 222, scope: !3962)
!3962 = !DILexicalBlockFile(scope: !3954, file: !453, discriminator: 6)
!3963 = !DILocation(line: 1669, column: 240, scope: !3954)
!3964 = !DILocation(line: 1669, column: 250, scope: !3954)
!3965 = !DILocation(line: 1669, column: 275, scope: !3954)
!3966 = !DILocation(line: 1669, column: 206, scope: !3954)
!3967 = !DILocation(line: 1669, column: 294, scope: !3968)
!3968 = !DILexicalBlockFile(scope: !923, file: !453, discriminator: 7)
!3969 = !DILocation(line: 1669, column: 294, scope: !922)
!3970 = !DILocation(line: 1669, column: 294, scope: !3971)
!3971 = !DILexicalBlockFile(scope: !922, file: !453, discriminator: 8)
!3972 = !DILocation(line: 1669, column: 294, scope: !3973)
!3973 = !DILexicalBlockFile(scope: !922, file: !453, discriminator: 9)
!3974 = !DILocation(line: 1669, column: 307, scope: !3975)
!3975 = !DILexicalBlockFile(scope: !3976, file: !453, discriminator: 10)
!3976 = !DILexicalBlockFile(scope: !911, file: !453, discriminator: 3)
!3977 = !DILocation(line: 1669, column: 307, scope: !920)
!3978 = !DILocation(line: 1669, column: 307, scope: !3979)
!3979 = !DILexicalBlockFile(scope: !920, file: !453, discriminator: 11)
!3980 = !DILocation(line: 1670, column: 9, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !911, file: !453, line: 1670, column: 9)
!3982 = !DILocation(line: 1670, column: 16, scope: !3981)
!3983 = !DILocation(line: 1670, column: 9, scope: !911)
!3984 = !DILocation(line: 1671, column: 9, scope: !3981)
!3985 = !DILocation(line: 1673, column: 62, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3981, file: !453, line: 1672, column: 10)
!3987 = !DILocation(line: 1673, column: 9, scope: !3986)
!3988 = !DILocation(line: 1675, column: 1, scope: !911)
!3989 = !DILocation(line: 1267, column: 36, scope: !924)
!3990 = !DILocation(line: 1267, column: 52, scope: !924)
!3991 = !DILocation(line: 1269, column: 5, scope: !924)
!3992 = !DILocation(line: 1269, column: 15, scope: !924)
!3993 = !DILocation(line: 1270, column: 5, scope: !924)
!3994 = !DILocation(line: 1270, column: 15, scope: !924)
!3995 = !DILocation(line: 1271, column: 5, scope: !924)
!3996 = !DILocation(line: 1271, column: 11, scope: !924)
!3997 = !DILocation(line: 1272, column: 5, scope: !924)
!3998 = !DILocation(line: 1272, column: 15, scope: !924)
!3999 = !DILocation(line: 1274, column: 5, scope: !924)
!4000 = !DILocation(line: 1274, column: 16, scope: !924)
!4001 = !DILocation(line: 1274, column: 19, scope: !924)
!4002 = !DILocation(line: 1275, column: 5, scope: !924)
!4003 = !DILocation(line: 1275, column: 11, scope: !924)
!4004 = !DILocation(line: 1276, column: 5, scope: !924)
!4005 = !DILocation(line: 1276, column: 15, scope: !924)
!4006 = !DILocation(line: 1277, column: 5, scope: !924)
!4007 = !DILocation(line: 1277, column: 15, scope: !924)
!4008 = !DILocation(line: 1279, column: 5, scope: !924)
!4009 = !DILocation(line: 1279, column: 9, scope: !924)
!4010 = !DILocation(line: 1280, column: 5, scope: !924)
!4011 = !DILocation(line: 1280, column: 15, scope: !924)
!4012 = !DILocation(line: 1282, column: 5, scope: !924)
!4013 = !DILocation(line: 1282, column: 12, scope: !924)
!4014 = !DILocation(line: 1284, column: 34, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !924, file: !453, line: 1284, column: 9)
!4016 = !DILocation(line: 1284, column: 10, scope: !4015)
!4017 = !DILocation(line: 1284, column: 9, scope: !924)
!4018 = !DILocation(line: 1287, column: 9, scope: !4015)
!4019 = !DILocation(line: 1289, column: 26, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !924, file: !453, line: 1289, column: 9)
!4021 = !DILocation(line: 1289, column: 42, scope: !4020)
!4022 = !DILocation(line: 1289, column: 51, scope: !4020)
!4023 = !DILocation(line: 1289, column: 68, scope: !4020)
!4024 = !DILocation(line: 1289, column: 86, scope: !4025)
!4025 = !DILexicalBlockFile(scope: !4020, file: !453, discriminator: 1)
!4026 = !DILocation(line: 1289, column: 102, scope: !4020)
!4027 = !DILocation(line: 1289, column: 111, scope: !4020)
!4028 = !DILocation(line: 1289, column: 9, scope: !924)
!4029 = !DILocation(line: 1290, column: 25, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4020, file: !453, line: 1289, column: 131)
!4031 = !DILocation(line: 1290, column: 9, scope: !4030)
!4032 = !DILocation(line: 1292, column: 9, scope: !4030)
!4033 = !DILocation(line: 1295, column: 5, scope: !924)
!4034 = !DILocation(line: 1296, column: 5, scope: !924)
!4035 = !DILocation(line: 1297, column: 5, scope: !924)
!4036 = !DILocation(line: 1299, column: 30, scope: !924)
!4037 = !DILocation(line: 1299, column: 46, scope: !924)
!4038 = !DILocation(line: 1299, column: 57, scope: !924)
!4039 = !{!1998, !1963, i64 168}
!4040 = !DILocation(line: 1299, column: 66, scope: !924)
!4041 = !DILocation(line: 1299, column: 83, scope: !924)
!4042 = !DILocation(line: 1299, column: 13, scope: !924)
!4043 = !DILocation(line: 1299, column: 108, scope: !4044)
!4044 = !DILexicalBlockFile(scope: !924, file: !453, discriminator: 1)
!4045 = !DILocation(line: 1299, column: 93, scope: !924)
!4046 = !DILocation(line: 1299, column: 124, scope: !924)
!4047 = !{!1999, !1963, i64 16}
!4048 = !DILocation(line: 1299, column: 152, scope: !4049)
!4049 = !DILexicalBlockFile(scope: !924, file: !453, discriminator: 2)
!4050 = !DILocation(line: 1299, column: 137, scope: !924)
!4051 = !DILocation(line: 1299, column: 168, scope: !924)
!4052 = !DILocation(line: 1299, column: 10, scope: !4053)
!4053 = !DILexicalBlockFile(scope: !4054, file: !453, discriminator: 4)
!4054 = !DILexicalBlockFile(scope: !924, file: !453, discriminator: 3)
!4055 = !DILocation(line: 1300, column: 9, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !924, file: !453, line: 1300, column: 9)
!4057 = !DILocation(line: 1300, column: 14, scope: !4056)
!4058 = !DILocation(line: 1300, column: 9, scope: !924)
!4059 = !DILocation(line: 1301, column: 25, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4056, file: !453, line: 1300, column: 19)
!4061 = !DILocation(line: 1301, column: 9, scope: !4060)
!4062 = !DILocation(line: 1303, column: 9, scope: !4060)
!4063 = !DILocation(line: 1306, column: 12, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !924, file: !453, line: 1306, column: 5)
!4065 = !DILocation(line: 1306, column: 10, scope: !4064)
!4066 = !DILocation(line: 1306, column: 17, scope: !4067)
!4067 = !DILexicalBlockFile(scope: !4068, file: !453, discriminator: 2)
!4068 = !DILexicalBlockFile(scope: !4069, file: !453, discriminator: 1)
!4069 = distinct !DILexicalBlock(scope: !4064, file: !453, line: 1306, column: 5)
!4070 = !DILocation(line: 1306, column: 21, scope: !4069)
!4071 = !DILocation(line: 1306, column: 19, scope: !4069)
!4072 = !DILocation(line: 1306, column: 5, scope: !4064)
!4073 = !DILocation(line: 1307, column: 31, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4069, file: !453, line: 1306, column: 32)
!4075 = !DILocation(line: 1307, column: 47, scope: !4074)
!4076 = !DILocation(line: 1307, column: 58, scope: !4074)
!4077 = !DILocation(line: 1307, column: 67, scope: !4074)
!4078 = !DILocation(line: 1307, column: 84, scope: !4074)
!4079 = !DILocation(line: 1307, column: 14, scope: !4074)
!4080 = !DILocation(line: 1307, column: 135, scope: !4081)
!4081 = !DILexicalBlockFile(scope: !4074, file: !453, discriminator: 1)
!4082 = !DILocation(line: 1307, column: 111, scope: !4074)
!4083 = !DILocation(line: 1307, column: 94, scope: !4074)
!4084 = !DILocation(line: 1307, column: 127, scope: !4074)
!4085 = !DILocation(line: 1307, column: 93, scope: !4074)
!4086 = !DILocation(line: 1307, column: 185, scope: !4087)
!4087 = !DILexicalBlockFile(scope: !4074, file: !453, discriminator: 2)
!4088 = !DILocation(line: 1307, column: 161, scope: !4074)
!4089 = !DILocation(line: 1307, column: 143, scope: !4074)
!4090 = !DILocation(line: 1307, column: 177, scope: !4074)
!4091 = !DILocation(line: 1307, column: 142, scope: !4074)
!4092 = !DILocation(line: 1307, column: 11, scope: !4093)
!4093 = !DILexicalBlockFile(scope: !4094, file: !453, discriminator: 4)
!4094 = !DILexicalBlockFile(scope: !4074, file: !453, discriminator: 3)
!4095 = !DILocation(line: 1308, column: 36, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4074, file: !453, line: 1308, column: 13)
!4097 = !DILocation(line: 1308, column: 48, scope: !4096)
!4098 = !DILocation(line: 1308, column: 60, scope: !4096)
!4099 = !DILocation(line: 1308, column: 58, scope: !4096)
!4100 = !DILocation(line: 1308, column: 39, scope: !4096)
!4101 = !DILocation(line: 1308, column: 14, scope: !4096)
!4102 = !DILocation(line: 1308, column: 13, scope: !4074)
!4103 = !DILocation(line: 1309, column: 26, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4096, file: !453, line: 1308, column: 65)
!4105 = !DILocation(line: 1310, column: 95, scope: !4104)
!4106 = !DILocation(line: 1309, column: 13, scope: !4104)
!4107 = !DILocation(line: 1311, column: 13, scope: !4104)
!4108 = !DILocation(line: 1313, column: 68, scope: !4074)
!4109 = !DILocation(line: 1313, column: 58, scope: !4074)
!4110 = !DILocation(line: 1313, column: 40, scope: !4074)
!4111 = !DILocation(line: 1313, column: 74, scope: !4074)
!4112 = !DILocation(line: 1313, column: 38, scope: !4074)
!4113 = !DILocation(line: 1313, column: 18, scope: !4074)
!4114 = !DILocation(line: 1313, column: 9, scope: !4074)
!4115 = !DILocation(line: 1313, column: 21, scope: !4074)
!4116 = !DILocation(line: 1314, column: 5, scope: !4074)
!4117 = !DILocation(line: 1306, column: 28, scope: !4069)
!4118 = !DILocation(line: 1306, column: 5, scope: !4069)
!4119 = !DILocation(line: 1316, column: 49, scope: !924)
!4120 = !DILocation(line: 1316, column: 59, scope: !924)
!4121 = !DILocation(line: 1317, column: 9, scope: !924)
!4122 = !DILocation(line: 1317, column: 21, scope: !924)
!4123 = !DILocation(line: 1318, column: 9, scope: !924)
!4124 = !DILocation(line: 1318, column: 17, scope: !924)
!4125 = !DILocation(line: 1318, column: 22, scope: !924)
!4126 = !DILocation(line: 1318, column: 30, scope: !924)
!4127 = !DILocation(line: 1318, column: 35, scope: !924)
!4128 = !DILocation(line: 1318, column: 43, scope: !924)
!4129 = !DILocation(line: 1318, column: 48, scope: !924)
!4130 = !DILocation(line: 1318, column: 56, scope: !924)
!4131 = !DILocation(line: 1319, column: 9, scope: !924)
!4132 = !DILocation(line: 1319, column: 17, scope: !924)
!4133 = !DILocation(line: 1319, column: 22, scope: !924)
!4134 = !DILocation(line: 1319, column: 30, scope: !924)
!4135 = !DILocation(line: 1319, column: 35, scope: !924)
!4136 = !DILocation(line: 1319, column: 43, scope: !924)
!4137 = !DILocation(line: 1319, column: 48, scope: !924)
!4138 = !DILocation(line: 1319, column: 56, scope: !924)
!4139 = !DILocation(line: 1316, column: 14, scope: !924)
!4140 = !DILocation(line: 1316, column: 12, scope: !924)
!4141 = !DILocation(line: 1321, column: 9, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !924, file: !453, line: 1321, column: 9)
!4143 = !DILocation(line: 1321, column: 9, scope: !924)
!4144 = !DILocation(line: 1322, column: 22, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4142, file: !453, line: 1321, column: 17)
!4146 = !DILocation(line: 1323, column: 55, scope: !4145)
!4147 = !DILocation(line: 1324, column: 5, scope: !4145)
!4148 = !DILocation(line: 1321, column: 9, scope: !4149)
!4149 = !DILexicalBlockFile(scope: !4142, file: !453, discriminator: 1)
!4150 = !DILocation(line: 1327, column: 10, scope: !924)
!4151 = !DILocation(line: 1328, column: 12, scope: !953)
!4152 = !DILocation(line: 1328, column: 10, scope: !953)
!4153 = !DILocation(line: 1328, column: 17, scope: !4154)
!4154 = !DILexicalBlockFile(scope: !4155, file: !453, discriminator: 2)
!4155 = !DILexicalBlockFile(scope: !952, file: !453, discriminator: 1)
!4156 = !DILocation(line: 1328, column: 21, scope: !952)
!4157 = !DILocation(line: 1328, column: 19, scope: !952)
!4158 = !DILocation(line: 1328, column: 5, scope: !953)
!4159 = !DILocation(line: 1329, column: 9, scope: !951)
!4160 = !DILocation(line: 1329, column: 14, scope: !4161)
!4161 = !DILexicalBlockFile(scope: !950, file: !453, discriminator: 1)
!4162 = !DILocation(line: 1329, column: 24, scope: !950)
!4163 = !DILocation(line: 1329, column: 65, scope: !950)
!4164 = !DILocation(line: 1329, column: 55, scope: !950)
!4165 = !DILocation(line: 1329, column: 74, scope: !956)
!4166 = !DILocation(line: 1329, column: 90, scope: !956)
!4167 = !DILocation(line: 1329, column: 74, scope: !950)
!4168 = !DILocation(line: 1329, column: 105, scope: !4169)
!4169 = !DILexicalBlockFile(scope: !956, file: !453, discriminator: 2)
!4170 = !DILocation(line: 1329, column: 110, scope: !4171)
!4171 = !DILexicalBlockFile(scope: !955, file: !453, discriminator: 4)
!4172 = !DILocation(line: 1329, column: 120, scope: !955)
!4173 = !DILocation(line: 1329, column: 150, scope: !955)
!4174 = !DILocation(line: 1329, column: 176, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !955, file: !453, line: 1329, column: 173)
!4176 = !DILocation(line: 1329, column: 193, scope: !4175)
!4177 = !DILocation(line: 1329, column: 173, scope: !4175)
!4178 = !DILocation(line: 1329, column: 203, scope: !4175)
!4179 = !DILocation(line: 1329, column: 173, scope: !955)
!4180 = !DILocation(line: 1329, column: 173, scope: !4181)
!4181 = !DILexicalBlockFile(scope: !955, file: !453, discriminator: 5)
!4182 = !DILocation(line: 1329, column: 234, scope: !4183)
!4183 = !DILexicalBlockFile(scope: !4175, file: !453, discriminator: 6)
!4184 = !DILocation(line: 1329, column: 252, scope: !4175)
!4185 = !DILocation(line: 1329, column: 262, scope: !4175)
!4186 = !DILocation(line: 1329, column: 287, scope: !4175)
!4187 = !DILocation(line: 1329, column: 218, scope: !4175)
!4188 = !DILocation(line: 1329, column: 306, scope: !4189)
!4189 = !DILexicalBlockFile(scope: !956, file: !453, discriminator: 7)
!4190 = !DILocation(line: 1329, column: 306, scope: !955)
!4191 = !DILocation(line: 1329, column: 306, scope: !4192)
!4192 = !DILexicalBlockFile(scope: !955, file: !453, discriminator: 8)
!4193 = !DILocation(line: 1329, column: 306, scope: !4194)
!4194 = !DILexicalBlockFile(scope: !955, file: !453, discriminator: 9)
!4195 = !DILocation(line: 1329, column: 319, scope: !4196)
!4196 = !DILexicalBlockFile(scope: !4197, file: !453, discriminator: 10)
!4197 = !DILexicalBlockFile(scope: !951, file: !453, discriminator: 3)
!4198 = !DILocation(line: 1329, column: 319, scope: !950)
!4199 = !DILocation(line: 1329, column: 319, scope: !4200)
!4200 = !DILexicalBlockFile(scope: !950, file: !453, discriminator: 11)
!4201 = !DILocation(line: 1330, column: 5, scope: !951)
!4202 = !DILocation(line: 1328, column: 28, scope: !952)
!4203 = !DILocation(line: 1328, column: 5, scope: !952)
!4204 = !DILocation(line: 1331, column: 12, scope: !924)
!4205 = !DILocation(line: 1331, column: 5, scope: !924)
!4206 = !DILocation(line: 1332, column: 1, scope: !924)
!4207 = !DILocation(line: 1749, column: 29, scope: !957)
!4208 = !DILocation(line: 1751, column: 5, scope: !957)
!4209 = !DILocation(line: 1751, column: 15, scope: !957)
!4210 = !DILocation(line: 1751, column: 20, scope: !957)
!4211 = !DILocation(line: 1751, column: 47, scope: !957)
!4212 = !DILocation(line: 1751, column: 52, scope: !957)
!4213 = !DILocation(line: 1752, column: 5, scope: !957)
!4214 = !DILocation(line: 1752, column: 15, scope: !957)
!4215 = !DILocation(line: 1752, column: 39, scope: !957)
!4216 = !DILocation(line: 1752, column: 43, scope: !957)
!4217 = !DILocation(line: 1752, column: 23, scope: !957)
!4218 = !DILocation(line: 1753, column: 5, scope: !957)
!4219 = !DILocation(line: 1753, column: 10, scope: !4220)
!4220 = !DILexicalBlockFile(scope: !964, file: !453, discriminator: 1)
!4221 = !DILocation(line: 1753, column: 20, scope: !964)
!4222 = !DILocation(line: 1753, column: 51, scope: !964)
!4223 = !DILocation(line: 1753, column: 60, scope: !967)
!4224 = !DILocation(line: 1753, column: 76, scope: !967)
!4225 = !DILocation(line: 1753, column: 60, scope: !964)
!4226 = !DILocation(line: 1753, column: 91, scope: !4227)
!4227 = !DILexicalBlockFile(scope: !967, file: !453, discriminator: 2)
!4228 = !DILocation(line: 1753, column: 96, scope: !4229)
!4229 = !DILexicalBlockFile(scope: !966, file: !453, discriminator: 4)
!4230 = !DILocation(line: 1753, column: 106, scope: !966)
!4231 = !DILocation(line: 1753, column: 136, scope: !966)
!4232 = !DILocation(line: 1753, column: 162, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !966, file: !453, line: 1753, column: 159)
!4234 = !DILocation(line: 1753, column: 179, scope: !4233)
!4235 = !DILocation(line: 1753, column: 159, scope: !4233)
!4236 = !DILocation(line: 1753, column: 189, scope: !4233)
!4237 = !DILocation(line: 1753, column: 159, scope: !966)
!4238 = !DILocation(line: 1753, column: 159, scope: !4239)
!4239 = !DILexicalBlockFile(scope: !966, file: !453, discriminator: 5)
!4240 = !DILocation(line: 1753, column: 220, scope: !4241)
!4241 = !DILexicalBlockFile(scope: !4233, file: !453, discriminator: 6)
!4242 = !DILocation(line: 1753, column: 238, scope: !4233)
!4243 = !DILocation(line: 1753, column: 248, scope: !4233)
!4244 = !DILocation(line: 1753, column: 273, scope: !4233)
!4245 = !DILocation(line: 1753, column: 204, scope: !4233)
!4246 = !DILocation(line: 1753, column: 292, scope: !4247)
!4247 = !DILexicalBlockFile(scope: !967, file: !453, discriminator: 7)
!4248 = !DILocation(line: 1753, column: 292, scope: !966)
!4249 = !DILocation(line: 1753, column: 292, scope: !4250)
!4250 = !DILexicalBlockFile(scope: !966, file: !453, discriminator: 8)
!4251 = !DILocation(line: 1753, column: 292, scope: !4252)
!4252 = !DILexicalBlockFile(scope: !966, file: !453, discriminator: 9)
!4253 = !DILocation(line: 1753, column: 305, scope: !4254)
!4254 = !DILexicalBlockFile(scope: !4255, file: !453, discriminator: 10)
!4255 = !DILexicalBlockFile(scope: !957, file: !453, discriminator: 3)
!4256 = !DILocation(line: 1753, column: 305, scope: !964)
!4257 = !DILocation(line: 1753, column: 305, scope: !4258)
!4258 = !DILexicalBlockFile(scope: !964, file: !453, discriminator: 11)
!4259 = !DILocation(line: 1754, column: 5, scope: !957)
!4260 = !DILocation(line: 1754, column: 10, scope: !4261)
!4261 = !DILexicalBlockFile(scope: !969, file: !453, discriminator: 1)
!4262 = !DILocation(line: 1754, column: 20, scope: !969)
!4263 = !DILocation(line: 1754, column: 51, scope: !969)
!4264 = !DILocation(line: 1754, column: 60, scope: !972)
!4265 = !DILocation(line: 1754, column: 76, scope: !972)
!4266 = !DILocation(line: 1754, column: 60, scope: !969)
!4267 = !DILocation(line: 1754, column: 91, scope: !4268)
!4268 = !DILexicalBlockFile(scope: !972, file: !453, discriminator: 2)
!4269 = !DILocation(line: 1754, column: 96, scope: !4270)
!4270 = !DILexicalBlockFile(scope: !971, file: !453, discriminator: 4)
!4271 = !DILocation(line: 1754, column: 106, scope: !971)
!4272 = !DILocation(line: 1754, column: 136, scope: !971)
!4273 = !DILocation(line: 1754, column: 162, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !971, file: !453, line: 1754, column: 159)
!4275 = !DILocation(line: 1754, column: 179, scope: !4274)
!4276 = !DILocation(line: 1754, column: 159, scope: !4274)
!4277 = !DILocation(line: 1754, column: 189, scope: !4274)
!4278 = !DILocation(line: 1754, column: 159, scope: !971)
!4279 = !DILocation(line: 1754, column: 159, scope: !4280)
!4280 = !DILexicalBlockFile(scope: !971, file: !453, discriminator: 5)
!4281 = !DILocation(line: 1754, column: 220, scope: !4282)
!4282 = !DILexicalBlockFile(scope: !4274, file: !453, discriminator: 6)
!4283 = !DILocation(line: 1754, column: 238, scope: !4274)
!4284 = !DILocation(line: 1754, column: 248, scope: !4274)
!4285 = !DILocation(line: 1754, column: 273, scope: !4274)
!4286 = !DILocation(line: 1754, column: 204, scope: !4274)
!4287 = !DILocation(line: 1754, column: 292, scope: !4288)
!4288 = !DILexicalBlockFile(scope: !972, file: !453, discriminator: 7)
!4289 = !DILocation(line: 1754, column: 292, scope: !971)
!4290 = !DILocation(line: 1754, column: 292, scope: !4291)
!4291 = !DILexicalBlockFile(scope: !971, file: !453, discriminator: 8)
!4292 = !DILocation(line: 1754, column: 292, scope: !4293)
!4293 = !DILexicalBlockFile(scope: !971, file: !453, discriminator: 9)
!4294 = !DILocation(line: 1754, column: 305, scope: !4254)
!4295 = !DILocation(line: 1754, column: 305, scope: !969)
!4296 = !DILocation(line: 1754, column: 305, scope: !4297)
!4297 = !DILexicalBlockFile(scope: !969, file: !453, discriminator: 11)
!4298 = !DILocation(line: 1755, column: 12, scope: !957)
!4299 = !DILocation(line: 1756, column: 1, scope: !957)
!4300 = !DILocation(line: 1755, column: 5, scope: !957)
!4301 = !DILocation(line: 1958, column: 35, scope: !973)
!4302 = !DILocation(line: 1958, column: 51, scope: !973)
!4303 = !DILocation(line: 1960, column: 5, scope: !973)
!4304 = !DILocation(line: 1960, column: 15, scope: !973)
!4305 = !DILocation(line: 1961, column: 5, scope: !973)
!4306 = !DILocation(line: 1961, column: 11, scope: !973)
!4307 = !DILocation(line: 1973, column: 14, scope: !973)
!4308 = !DILocation(line: 1973, column: 12, scope: !973)
!4309 = !DILocation(line: 1973, column: 54, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1973, column: 54)
!4311 = !DILocation(line: 1973, column: 61, scope: !4310)
!4312 = !DILocation(line: 1973, column: 54, scope: !973)
!4313 = !DILocation(line: 1973, column: 76, scope: !4314)
!4314 = !DILexicalBlockFile(scope: !4310, file: !453, discriminator: 1)
!4315 = !DILocation(line: 1973, column: 76, scope: !4310)
!4316 = !DILocation(line: 1973, column: 132, scope: !4317)
!4317 = !DILexicalBlockFile(scope: !4318, file: !453, discriminator: 2)
!4318 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1973, column: 99)
!4319 = !DILocation(line: 1973, column: 99, scope: !4318)
!4320 = !DILocation(line: 1973, column: 99, scope: !973)
!4321 = !DILocation(line: 1973, column: 152, scope: !4322)
!4322 = !DILexicalBlockFile(scope: !4323, file: !453, discriminator: 3)
!4323 = distinct !DILexicalBlock(scope: !4318, file: !453, line: 1973, column: 146)
!4324 = !DILocation(line: 1973, column: 175, scope: !4323)
!4325 = !DILocation(line: 1973, column: 188, scope: !4326)
!4326 = !DILexicalBlockFile(scope: !973, file: !453, discriminator: 4)
!4327 = !DILocation(line: 1973, column: 193, scope: !4328)
!4328 = !DILexicalBlockFile(scope: !980, file: !453, discriminator: 5)
!4329 = !DILocation(line: 1973, column: 203, scope: !980)
!4330 = !DILocation(line: 1973, column: 233, scope: !980)
!4331 = !DILocation(line: 1973, column: 250, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !980, file: !453, line: 1973, column: 247)
!4333 = !DILocation(line: 1973, column: 267, scope: !4332)
!4334 = !DILocation(line: 1973, column: 247, scope: !4332)
!4335 = !DILocation(line: 1973, column: 277, scope: !4332)
!4336 = !DILocation(line: 1973, column: 247, scope: !980)
!4337 = !DILocation(line: 1973, column: 247, scope: !4338)
!4338 = !DILexicalBlockFile(scope: !980, file: !453, discriminator: 6)
!4339 = !DILocation(line: 1973, column: 308, scope: !4340)
!4340 = !DILexicalBlockFile(scope: !4332, file: !453, discriminator: 7)
!4341 = !DILocation(line: 1973, column: 326, scope: !4332)
!4342 = !DILocation(line: 1973, column: 336, scope: !4332)
!4343 = !DILocation(line: 1973, column: 361, scope: !4332)
!4344 = !DILocation(line: 1973, column: 292, scope: !4332)
!4345 = !DILocation(line: 1973, column: 380, scope: !4346)
!4346 = !DILexicalBlockFile(scope: !973, file: !453, discriminator: 8)
!4347 = !DILocation(line: 1973, column: 380, scope: !980)
!4348 = !DILocation(line: 1973, column: 380, scope: !4349)
!4349 = !DILexicalBlockFile(scope: !980, file: !453, discriminator: 9)
!4350 = !DILocation(line: 1974, column: 14, scope: !973)
!4351 = !DILocation(line: 1974, column: 12, scope: !973)
!4352 = !DILocation(line: 1974, column: 56, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1974, column: 56)
!4354 = !DILocation(line: 1974, column: 63, scope: !4353)
!4355 = !DILocation(line: 1974, column: 56, scope: !973)
!4356 = !DILocation(line: 1974, column: 78, scope: !4357)
!4357 = !DILexicalBlockFile(scope: !4353, file: !453, discriminator: 1)
!4358 = !DILocation(line: 1974, column: 78, scope: !4353)
!4359 = !DILocation(line: 1974, column: 134, scope: !4360)
!4360 = !DILexicalBlockFile(scope: !4361, file: !453, discriminator: 2)
!4361 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1974, column: 101)
!4362 = !DILocation(line: 1974, column: 101, scope: !4361)
!4363 = !DILocation(line: 1974, column: 101, scope: !973)
!4364 = !DILocation(line: 1974, column: 154, scope: !4365)
!4365 = !DILexicalBlockFile(scope: !4366, file: !453, discriminator: 3)
!4366 = distinct !DILexicalBlock(scope: !4361, file: !453, line: 1974, column: 148)
!4367 = !DILocation(line: 1974, column: 178, scope: !4366)
!4368 = !DILocation(line: 1974, column: 191, scope: !4326)
!4369 = !DILocation(line: 1974, column: 196, scope: !4370)
!4370 = !DILexicalBlockFile(scope: !982, file: !453, discriminator: 5)
!4371 = !DILocation(line: 1974, column: 206, scope: !982)
!4372 = !DILocation(line: 1974, column: 236, scope: !982)
!4373 = !DILocation(line: 1974, column: 253, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !982, file: !453, line: 1974, column: 250)
!4375 = !DILocation(line: 1974, column: 270, scope: !4374)
!4376 = !DILocation(line: 1974, column: 250, scope: !4374)
!4377 = !DILocation(line: 1974, column: 280, scope: !4374)
!4378 = !DILocation(line: 1974, column: 250, scope: !982)
!4379 = !DILocation(line: 1974, column: 250, scope: !4380)
!4380 = !DILexicalBlockFile(scope: !982, file: !453, discriminator: 6)
!4381 = !DILocation(line: 1974, column: 311, scope: !4382)
!4382 = !DILexicalBlockFile(scope: !4374, file: !453, discriminator: 7)
!4383 = !DILocation(line: 1974, column: 329, scope: !4374)
!4384 = !DILocation(line: 1974, column: 339, scope: !4374)
!4385 = !DILocation(line: 1974, column: 364, scope: !4374)
!4386 = !DILocation(line: 1974, column: 295, scope: !4374)
!4387 = !DILocation(line: 1974, column: 383, scope: !4346)
!4388 = !DILocation(line: 1974, column: 383, scope: !982)
!4389 = !DILocation(line: 1974, column: 383, scope: !4390)
!4390 = !DILexicalBlockFile(scope: !982, file: !453, discriminator: 9)
!4391 = !DILocation(line: 1976, column: 14, scope: !973)
!4392 = !DILocation(line: 1976, column: 12, scope: !973)
!4393 = !DILocation(line: 1976, column: 62, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1976, column: 62)
!4395 = !DILocation(line: 1976, column: 69, scope: !4394)
!4396 = !DILocation(line: 1976, column: 62, scope: !973)
!4397 = !DILocation(line: 1976, column: 84, scope: !4398)
!4398 = !DILexicalBlockFile(scope: !4394, file: !453, discriminator: 1)
!4399 = !DILocation(line: 1976, column: 84, scope: !4394)
!4400 = !DILocation(line: 1976, column: 140, scope: !4401)
!4401 = !DILexicalBlockFile(scope: !4402, file: !453, discriminator: 2)
!4402 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1976, column: 107)
!4403 = !DILocation(line: 1976, column: 107, scope: !4402)
!4404 = !DILocation(line: 1976, column: 107, scope: !973)
!4405 = !DILocation(line: 1976, column: 160, scope: !4406)
!4406 = !DILexicalBlockFile(scope: !4407, file: !453, discriminator: 3)
!4407 = distinct !DILexicalBlock(scope: !4402, file: !453, line: 1976, column: 154)
!4408 = !DILocation(line: 1976, column: 184, scope: !4407)
!4409 = !DILocation(line: 1976, column: 197, scope: !4326)
!4410 = !DILocation(line: 1976, column: 202, scope: !4411)
!4411 = !DILexicalBlockFile(scope: !984, file: !453, discriminator: 5)
!4412 = !DILocation(line: 1976, column: 212, scope: !984)
!4413 = !DILocation(line: 1976, column: 242, scope: !984)
!4414 = !DILocation(line: 1976, column: 259, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !984, file: !453, line: 1976, column: 256)
!4416 = !DILocation(line: 1976, column: 276, scope: !4415)
!4417 = !DILocation(line: 1976, column: 256, scope: !4415)
!4418 = !DILocation(line: 1976, column: 286, scope: !4415)
!4419 = !DILocation(line: 1976, column: 256, scope: !984)
!4420 = !DILocation(line: 1976, column: 256, scope: !4421)
!4421 = !DILexicalBlockFile(scope: !984, file: !453, discriminator: 6)
!4422 = !DILocation(line: 1976, column: 317, scope: !4423)
!4423 = !DILexicalBlockFile(scope: !4415, file: !453, discriminator: 7)
!4424 = !DILocation(line: 1976, column: 335, scope: !4415)
!4425 = !DILocation(line: 1976, column: 345, scope: !4415)
!4426 = !DILocation(line: 1976, column: 370, scope: !4415)
!4427 = !DILocation(line: 1976, column: 301, scope: !4415)
!4428 = !DILocation(line: 1976, column: 389, scope: !4346)
!4429 = !DILocation(line: 1976, column: 389, scope: !984)
!4430 = !DILocation(line: 1976, column: 389, scope: !4431)
!4431 = !DILexicalBlockFile(scope: !984, file: !453, discriminator: 9)
!4432 = !DILocation(line: 1979, column: 14, scope: !973)
!4433 = !DILocation(line: 1979, column: 12, scope: !973)
!4434 = !DILocation(line: 1979, column: 63, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1979, column: 63)
!4436 = !DILocation(line: 1979, column: 70, scope: !4435)
!4437 = !DILocation(line: 1979, column: 63, scope: !973)
!4438 = !DILocation(line: 1979, column: 85, scope: !4439)
!4439 = !DILexicalBlockFile(scope: !4435, file: !453, discriminator: 1)
!4440 = !DILocation(line: 1979, column: 85, scope: !4435)
!4441 = !DILocation(line: 1979, column: 141, scope: !4442)
!4442 = !DILexicalBlockFile(scope: !4443, file: !453, discriminator: 2)
!4443 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1979, column: 108)
!4444 = !DILocation(line: 1979, column: 108, scope: !4443)
!4445 = !DILocation(line: 1979, column: 108, scope: !973)
!4446 = !DILocation(line: 1979, column: 161, scope: !4447)
!4447 = !DILexicalBlockFile(scope: !4448, file: !453, discriminator: 3)
!4448 = distinct !DILexicalBlock(scope: !4443, file: !453, line: 1979, column: 155)
!4449 = !DILocation(line: 1979, column: 184, scope: !4448)
!4450 = !DILocation(line: 1979, column: 197, scope: !4326)
!4451 = !DILocation(line: 1979, column: 202, scope: !4452)
!4452 = !DILexicalBlockFile(scope: !986, file: !453, discriminator: 5)
!4453 = !DILocation(line: 1979, column: 212, scope: !986)
!4454 = !DILocation(line: 1979, column: 242, scope: !986)
!4455 = !DILocation(line: 1979, column: 259, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !986, file: !453, line: 1979, column: 256)
!4457 = !DILocation(line: 1979, column: 276, scope: !4456)
!4458 = !DILocation(line: 1979, column: 256, scope: !4456)
!4459 = !DILocation(line: 1979, column: 286, scope: !4456)
!4460 = !DILocation(line: 1979, column: 256, scope: !986)
!4461 = !DILocation(line: 1979, column: 256, scope: !4462)
!4462 = !DILexicalBlockFile(scope: !986, file: !453, discriminator: 6)
!4463 = !DILocation(line: 1979, column: 317, scope: !4464)
!4464 = !DILexicalBlockFile(scope: !4456, file: !453, discriminator: 7)
!4465 = !DILocation(line: 1979, column: 335, scope: !4456)
!4466 = !DILocation(line: 1979, column: 345, scope: !4456)
!4467 = !DILocation(line: 1979, column: 370, scope: !4456)
!4468 = !DILocation(line: 1979, column: 301, scope: !4456)
!4469 = !DILocation(line: 1979, column: 389, scope: !4346)
!4470 = !DILocation(line: 1979, column: 389, scope: !986)
!4471 = !DILocation(line: 1979, column: 389, scope: !4472)
!4472 = !DILexicalBlockFile(scope: !986, file: !453, discriminator: 9)
!4473 = !DILocation(line: 1980, column: 14, scope: !973)
!4474 = !DILocation(line: 1980, column: 12, scope: !973)
!4475 = !DILocation(line: 1980, column: 65, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1980, column: 65)
!4477 = !DILocation(line: 1980, column: 72, scope: !4476)
!4478 = !DILocation(line: 1980, column: 65, scope: !973)
!4479 = !DILocation(line: 1980, column: 87, scope: !4480)
!4480 = !DILexicalBlockFile(scope: !4476, file: !453, discriminator: 1)
!4481 = !DILocation(line: 1980, column: 87, scope: !4476)
!4482 = !DILocation(line: 1980, column: 143, scope: !4483)
!4483 = !DILexicalBlockFile(scope: !4484, file: !453, discriminator: 2)
!4484 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1980, column: 110)
!4485 = !DILocation(line: 1980, column: 110, scope: !4484)
!4486 = !DILocation(line: 1980, column: 110, scope: !973)
!4487 = !DILocation(line: 1980, column: 163, scope: !4488)
!4488 = !DILexicalBlockFile(scope: !4489, file: !453, discriminator: 3)
!4489 = distinct !DILexicalBlock(scope: !4484, file: !453, line: 1980, column: 157)
!4490 = !DILocation(line: 1980, column: 187, scope: !4489)
!4491 = !DILocation(line: 1980, column: 200, scope: !4326)
!4492 = !DILocation(line: 1980, column: 205, scope: !4493)
!4493 = !DILexicalBlockFile(scope: !988, file: !453, discriminator: 5)
!4494 = !DILocation(line: 1980, column: 215, scope: !988)
!4495 = !DILocation(line: 1980, column: 245, scope: !988)
!4496 = !DILocation(line: 1980, column: 262, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !988, file: !453, line: 1980, column: 259)
!4498 = !DILocation(line: 1980, column: 279, scope: !4497)
!4499 = !DILocation(line: 1980, column: 259, scope: !4497)
!4500 = !DILocation(line: 1980, column: 289, scope: !4497)
!4501 = !DILocation(line: 1980, column: 259, scope: !988)
!4502 = !DILocation(line: 1980, column: 259, scope: !4503)
!4503 = !DILexicalBlockFile(scope: !988, file: !453, discriminator: 6)
!4504 = !DILocation(line: 1980, column: 320, scope: !4505)
!4505 = !DILexicalBlockFile(scope: !4497, file: !453, discriminator: 7)
!4506 = !DILocation(line: 1980, column: 338, scope: !4497)
!4507 = !DILocation(line: 1980, column: 348, scope: !4497)
!4508 = !DILocation(line: 1980, column: 373, scope: !4497)
!4509 = !DILocation(line: 1980, column: 304, scope: !4497)
!4510 = !DILocation(line: 1980, column: 392, scope: !4346)
!4511 = !DILocation(line: 1980, column: 392, scope: !988)
!4512 = !DILocation(line: 1980, column: 392, scope: !4513)
!4513 = !DILexicalBlockFile(scope: !988, file: !453, discriminator: 9)
!4514 = !DILocation(line: 1981, column: 14, scope: !973)
!4515 = !DILocation(line: 1981, column: 12, scope: !973)
!4516 = !DILocation(line: 1981, column: 58, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1981, column: 58)
!4518 = !DILocation(line: 1981, column: 65, scope: !4517)
!4519 = !DILocation(line: 1981, column: 58, scope: !973)
!4520 = !DILocation(line: 1981, column: 80, scope: !4521)
!4521 = !DILexicalBlockFile(scope: !4517, file: !453, discriminator: 1)
!4522 = !DILocation(line: 1981, column: 80, scope: !4517)
!4523 = !DILocation(line: 1981, column: 136, scope: !4524)
!4524 = !DILexicalBlockFile(scope: !4525, file: !453, discriminator: 2)
!4525 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1981, column: 103)
!4526 = !DILocation(line: 1981, column: 103, scope: !4525)
!4527 = !DILocation(line: 1981, column: 103, scope: !973)
!4528 = !DILocation(line: 1981, column: 156, scope: !4529)
!4529 = !DILexicalBlockFile(scope: !4530, file: !453, discriminator: 3)
!4530 = distinct !DILexicalBlock(scope: !4525, file: !453, line: 1981, column: 150)
!4531 = !DILocation(line: 1981, column: 180, scope: !4530)
!4532 = !DILocation(line: 1981, column: 193, scope: !4326)
!4533 = !DILocation(line: 1981, column: 198, scope: !4534)
!4534 = !DILexicalBlockFile(scope: !990, file: !453, discriminator: 5)
!4535 = !DILocation(line: 1981, column: 208, scope: !990)
!4536 = !DILocation(line: 1981, column: 238, scope: !990)
!4537 = !DILocation(line: 1981, column: 255, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !990, file: !453, line: 1981, column: 252)
!4539 = !DILocation(line: 1981, column: 272, scope: !4538)
!4540 = !DILocation(line: 1981, column: 252, scope: !4538)
!4541 = !DILocation(line: 1981, column: 282, scope: !4538)
!4542 = !DILocation(line: 1981, column: 252, scope: !990)
!4543 = !DILocation(line: 1981, column: 252, scope: !4544)
!4544 = !DILexicalBlockFile(scope: !990, file: !453, discriminator: 6)
!4545 = !DILocation(line: 1981, column: 313, scope: !4546)
!4546 = !DILexicalBlockFile(scope: !4538, file: !453, discriminator: 7)
!4547 = !DILocation(line: 1981, column: 331, scope: !4538)
!4548 = !DILocation(line: 1981, column: 341, scope: !4538)
!4549 = !DILocation(line: 1981, column: 366, scope: !4538)
!4550 = !DILocation(line: 1981, column: 297, scope: !4538)
!4551 = !DILocation(line: 1981, column: 385, scope: !4346)
!4552 = !DILocation(line: 1981, column: 385, scope: !990)
!4553 = !DILocation(line: 1981, column: 385, scope: !4554)
!4554 = !DILexicalBlockFile(scope: !990, file: !453, discriminator: 9)
!4555 = !DILocation(line: 1985, column: 14, scope: !973)
!4556 = !DILocation(line: 1985, column: 12, scope: !973)
!4557 = !DILocation(line: 1985, column: 71, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1985, column: 71)
!4559 = !DILocation(line: 1985, column: 78, scope: !4558)
!4560 = !DILocation(line: 1985, column: 71, scope: !973)
!4561 = !DILocation(line: 1985, column: 93, scope: !4562)
!4562 = !DILexicalBlockFile(scope: !4558, file: !453, discriminator: 1)
!4563 = !DILocation(line: 1985, column: 93, scope: !4558)
!4564 = !DILocation(line: 1985, column: 149, scope: !4565)
!4565 = !DILexicalBlockFile(scope: !4566, file: !453, discriminator: 2)
!4566 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1985, column: 116)
!4567 = !DILocation(line: 1985, column: 116, scope: !4566)
!4568 = !DILocation(line: 1985, column: 116, scope: !973)
!4569 = !DILocation(line: 1985, column: 169, scope: !4570)
!4570 = !DILexicalBlockFile(scope: !4571, file: !453, discriminator: 3)
!4571 = distinct !DILexicalBlock(scope: !4566, file: !453, line: 1985, column: 163)
!4572 = !DILocation(line: 1985, column: 194, scope: !4571)
!4573 = !DILocation(line: 1985, column: 207, scope: !4326)
!4574 = !DILocation(line: 1985, column: 212, scope: !4575)
!4575 = !DILexicalBlockFile(scope: !992, file: !453, discriminator: 5)
!4576 = !DILocation(line: 1985, column: 222, scope: !992)
!4577 = !DILocation(line: 1985, column: 252, scope: !992)
!4578 = !DILocation(line: 1985, column: 269, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !992, file: !453, line: 1985, column: 266)
!4580 = !DILocation(line: 1985, column: 286, scope: !4579)
!4581 = !DILocation(line: 1985, column: 266, scope: !4579)
!4582 = !DILocation(line: 1985, column: 296, scope: !4579)
!4583 = !DILocation(line: 1985, column: 266, scope: !992)
!4584 = !DILocation(line: 1985, column: 266, scope: !4585)
!4585 = !DILexicalBlockFile(scope: !992, file: !453, discriminator: 6)
!4586 = !DILocation(line: 1985, column: 327, scope: !4587)
!4587 = !DILexicalBlockFile(scope: !4579, file: !453, discriminator: 7)
!4588 = !DILocation(line: 1985, column: 345, scope: !4579)
!4589 = !DILocation(line: 1985, column: 355, scope: !4579)
!4590 = !DILocation(line: 1985, column: 380, scope: !4579)
!4591 = !DILocation(line: 1985, column: 311, scope: !4579)
!4592 = !DILocation(line: 1985, column: 399, scope: !4346)
!4593 = !DILocation(line: 1985, column: 399, scope: !992)
!4594 = !DILocation(line: 1985, column: 399, scope: !4595)
!4595 = !DILexicalBlockFile(scope: !992, file: !453, discriminator: 9)
!4596 = !DILocation(line: 1986, column: 14, scope: !973)
!4597 = !DILocation(line: 1986, column: 12, scope: !973)
!4598 = !DILocation(line: 1986, column: 62, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1986, column: 62)
!4600 = !DILocation(line: 1986, column: 69, scope: !4599)
!4601 = !DILocation(line: 1986, column: 62, scope: !973)
!4602 = !DILocation(line: 1986, column: 84, scope: !4603)
!4603 = !DILexicalBlockFile(scope: !4599, file: !453, discriminator: 1)
!4604 = !DILocation(line: 1986, column: 84, scope: !4599)
!4605 = !DILocation(line: 1986, column: 140, scope: !4606)
!4606 = !DILexicalBlockFile(scope: !4607, file: !453, discriminator: 2)
!4607 = distinct !DILexicalBlock(scope: !973, file: !453, line: 1986, column: 107)
!4608 = !DILocation(line: 1986, column: 107, scope: !4607)
!4609 = !DILocation(line: 1986, column: 107, scope: !973)
!4610 = !DILocation(line: 1986, column: 160, scope: !4611)
!4611 = !DILexicalBlockFile(scope: !4612, file: !453, discriminator: 3)
!4612 = distinct !DILexicalBlock(scope: !4607, file: !453, line: 1986, column: 154)
!4613 = !DILocation(line: 1986, column: 185, scope: !4612)
!4614 = !DILocation(line: 1986, column: 198, scope: !4326)
!4615 = !DILocation(line: 1986, column: 203, scope: !4616)
!4616 = !DILexicalBlockFile(scope: !994, file: !453, discriminator: 5)
!4617 = !DILocation(line: 1986, column: 213, scope: !994)
!4618 = !DILocation(line: 1986, column: 243, scope: !994)
!4619 = !DILocation(line: 1986, column: 260, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !994, file: !453, line: 1986, column: 257)
!4621 = !DILocation(line: 1986, column: 277, scope: !4620)
!4622 = !DILocation(line: 1986, column: 257, scope: !4620)
!4623 = !DILocation(line: 1986, column: 287, scope: !4620)
!4624 = !DILocation(line: 1986, column: 257, scope: !994)
!4625 = !DILocation(line: 1986, column: 257, scope: !4626)
!4626 = !DILexicalBlockFile(scope: !994, file: !453, discriminator: 6)
!4627 = !DILocation(line: 1986, column: 318, scope: !4628)
!4628 = !DILexicalBlockFile(scope: !4620, file: !453, discriminator: 7)
!4629 = !DILocation(line: 1986, column: 336, scope: !4620)
!4630 = !DILocation(line: 1986, column: 346, scope: !4620)
!4631 = !DILocation(line: 1986, column: 371, scope: !4620)
!4632 = !DILocation(line: 1986, column: 302, scope: !4620)
!4633 = !DILocation(line: 1986, column: 390, scope: !4346)
!4634 = !DILocation(line: 1986, column: 390, scope: !994)
!4635 = !DILocation(line: 1986, column: 390, scope: !4636)
!4636 = !DILexicalBlockFile(scope: !994, file: !453, discriminator: 9)
!4637 = !DILocation(line: 1989, column: 58, scope: !973)
!4638 = !DILocation(line: 1989, column: 5, scope: !973)
!4639 = !DILocation(line: 1992, column: 5, scope: !973)
!4640 = !DILocation(line: 1992, column: 10, scope: !4641)
!4641 = !DILexicalBlockFile(scope: !996, file: !453, discriminator: 1)
!4642 = !DILocation(line: 1992, column: 20, scope: !996)
!4643 = !DILocation(line: 1992, column: 51, scope: !996)
!4644 = !DILocation(line: 1992, column: 64, scope: !999)
!4645 = !DILocation(line: 1992, column: 80, scope: !999)
!4646 = !DILocation(line: 1992, column: 64, scope: !996)
!4647 = !DILocation(line: 1992, column: 95, scope: !4648)
!4648 = !DILexicalBlockFile(scope: !999, file: !453, discriminator: 2)
!4649 = !DILocation(line: 1992, column: 100, scope: !4650)
!4650 = !DILexicalBlockFile(scope: !998, file: !453, discriminator: 4)
!4651 = !DILocation(line: 1992, column: 110, scope: !998)
!4652 = !DILocation(line: 1992, column: 140, scope: !998)
!4653 = !DILocation(line: 1992, column: 166, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !998, file: !453, line: 1992, column: 163)
!4655 = !DILocation(line: 1992, column: 183, scope: !4654)
!4656 = !DILocation(line: 1992, column: 163, scope: !4654)
!4657 = !DILocation(line: 1992, column: 193, scope: !4654)
!4658 = !DILocation(line: 1992, column: 163, scope: !998)
!4659 = !DILocation(line: 1992, column: 163, scope: !4660)
!4660 = !DILexicalBlockFile(scope: !998, file: !453, discriminator: 5)
!4661 = !DILocation(line: 1992, column: 224, scope: !4662)
!4662 = !DILexicalBlockFile(scope: !4654, file: !453, discriminator: 6)
!4663 = !DILocation(line: 1992, column: 242, scope: !4654)
!4664 = !DILocation(line: 1992, column: 252, scope: !4654)
!4665 = !DILocation(line: 1992, column: 277, scope: !4654)
!4666 = !DILocation(line: 1992, column: 208, scope: !4654)
!4667 = !DILocation(line: 1992, column: 296, scope: !4668)
!4668 = !DILexicalBlockFile(scope: !999, file: !453, discriminator: 7)
!4669 = !DILocation(line: 1992, column: 296, scope: !998)
!4670 = !DILocation(line: 1992, column: 296, scope: !4671)
!4671 = !DILexicalBlockFile(scope: !998, file: !453, discriminator: 8)
!4672 = !DILocation(line: 1992, column: 296, scope: !4673)
!4673 = !DILexicalBlockFile(scope: !998, file: !453, discriminator: 9)
!4674 = !DILocation(line: 1992, column: 309, scope: !4675)
!4675 = !DILexicalBlockFile(scope: !4676, file: !453, discriminator: 10)
!4676 = !DILexicalBlockFile(scope: !973, file: !453, discriminator: 3)
!4677 = !DILocation(line: 1992, column: 309, scope: !996)
!4678 = !DILocation(line: 1992, column: 309, scope: !4679)
!4679 = !DILexicalBlockFile(scope: !996, file: !453, discriminator: 11)
!4680 = !DILocation(line: 1993, column: 54, scope: !973)
!4681 = !DILocation(line: 1993, column: 12, scope: !973)
!4682 = !DILocation(line: 1993, column: 5, scope: !973)
!4683 = !DILocation(line: 1996, column: 1, scope: !973)
!4684 = !DILocation(line: 2017, column: 31, scope: !1000)
!4685 = !DILocation(line: 2019, column: 58, scope: !1000)
!4686 = !DILocation(line: 2019, column: 5, scope: !1000)
!4687 = !DILocation(line: 2024, column: 33, scope: !1003)
!4688 = !DILocation(line: 2025, column: 5, scope: !1003)
!4689 = !DILocation(line: 2025, column: 12, scope: !1003)
!4690 = !DILocation(line: 2026, column: 5, scope: !1003)
!4691 = !DILocation(line: 2026, column: 11, scope: !1003)
!4692 = !DILocation(line: 2050, column: 14, scope: !1003)
!4693 = !DILocation(line: 2050, column: 12, scope: !1003)
!4694 = !DILocation(line: 2050, column: 72, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !1003, file: !453, line: 2050, column: 72)
!4696 = !DILocation(line: 2050, column: 79, scope: !4695)
!4697 = !DILocation(line: 2050, column: 87, scope: !4695)
!4698 = !DILocation(line: 2050, column: 90, scope: !4699)
!4699 = !DILexicalBlockFile(scope: !4695, file: !453, discriminator: 1)
!4700 = !DILocation(line: 2050, column: 72, scope: !1003)
!4701 = !DILocation(line: 2050, column: 108, scope: !4702)
!4702 = !DILexicalBlockFile(scope: !4695, file: !453, discriminator: 3)
!4703 = !DILocation(line: 2050, column: 108, scope: !4695)
!4704 = !DILocation(line: 2050, column: 131, scope: !4705)
!4705 = !DILexicalBlockFile(scope: !4706, file: !453, discriminator: 4)
!4706 = !DILexicalBlockFile(scope: !4707, file: !453, discriminator: 2)
!4707 = distinct !DILexicalBlock(scope: !1003, file: !453, line: 2050, column: 131)
!4708 = !DILocation(line: 2050, column: 138, scope: !4707)
!4709 = !DILocation(line: 2050, column: 131, scope: !1003)
!4710 = !DILocation(line: 2050, column: 152, scope: !4711)
!4711 = !DILexicalBlockFile(scope: !4712, file: !453, discriminator: 5)
!4712 = distinct !DILexicalBlock(scope: !4707, file: !453, line: 2050, column: 146)
!4713 = !DILocation(line: 2050, column: 197, scope: !4712)
!4714 = !DILocation(line: 2051, column: 14, scope: !1003)
!4715 = !DILocation(line: 2051, column: 12, scope: !1003)
!4716 = !DILocation(line: 2051, column: 74, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !1003, file: !453, line: 2051, column: 74)
!4718 = !DILocation(line: 2051, column: 81, scope: !4717)
!4719 = !DILocation(line: 2051, column: 89, scope: !4717)
!4720 = !DILocation(line: 2051, column: 92, scope: !4721)
!4721 = !DILexicalBlockFile(scope: !4717, file: !453, discriminator: 1)
!4722 = !DILocation(line: 2051, column: 74, scope: !1003)
!4723 = !DILocation(line: 2051, column: 110, scope: !4724)
!4724 = !DILexicalBlockFile(scope: !4717, file: !453, discriminator: 3)
!4725 = !DILocation(line: 2051, column: 110, scope: !4717)
!4726 = !DILocation(line: 2051, column: 133, scope: !4727)
!4727 = !DILexicalBlockFile(scope: !4728, file: !453, discriminator: 4)
!4728 = !DILexicalBlockFile(scope: !4729, file: !453, discriminator: 2)
!4729 = distinct !DILexicalBlock(scope: !1003, file: !453, line: 2051, column: 133)
!4730 = !DILocation(line: 2051, column: 140, scope: !4729)
!4731 = !DILocation(line: 2051, column: 133, scope: !1003)
!4732 = !DILocation(line: 2051, column: 156, scope: !4733)
!4733 = !DILexicalBlockFile(scope: !4734, file: !453, discriminator: 5)
!4734 = distinct !DILexicalBlock(scope: !4729, file: !453, line: 2051, column: 150)
!4735 = !DILocation(line: 2051, column: 203, scope: !4734)
!4736 = !DILocation(line: 2052, column: 14, scope: !1003)
!4737 = !DILocation(line: 2052, column: 12, scope: !1003)
!4738 = !DILocation(line: 2052, column: 74, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !1003, file: !453, line: 2052, column: 74)
!4740 = !DILocation(line: 2052, column: 81, scope: !4739)
!4741 = !DILocation(line: 2052, column: 89, scope: !4739)
!4742 = !DILocation(line: 2052, column: 92, scope: !4743)
!4743 = !DILexicalBlockFile(scope: !4739, file: !453, discriminator: 1)
!4744 = !DILocation(line: 2052, column: 74, scope: !1003)
!4745 = !DILocation(line: 2052, column: 110, scope: !4746)
!4746 = !DILexicalBlockFile(scope: !4739, file: !453, discriminator: 3)
!4747 = !DILocation(line: 2052, column: 110, scope: !4739)
!4748 = !DILocation(line: 2052, column: 133, scope: !4749)
!4749 = !DILexicalBlockFile(scope: !4750, file: !453, discriminator: 4)
!4750 = !DILexicalBlockFile(scope: !4751, file: !453, discriminator: 2)
!4751 = distinct !DILexicalBlock(scope: !1003, file: !453, line: 2052, column: 133)
!4752 = !DILocation(line: 2052, column: 140, scope: !4751)
!4753 = !DILocation(line: 2052, column: 133, scope: !1003)
!4754 = !DILocation(line: 2052, column: 156, scope: !4755)
!4755 = !DILexicalBlockFile(scope: !4756, file: !453, discriminator: 5)
!4756 = distinct !DILexicalBlock(scope: !4751, file: !453, line: 2052, column: 150)
!4757 = !DILocation(line: 2052, column: 203, scope: !4756)
!4758 = !DILocation(line: 2053, column: 14, scope: !1003)
!4759 = !DILocation(line: 2053, column: 12, scope: !1003)
!4760 = !DILocation(line: 2053, column: 74, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !1003, file: !453, line: 2053, column: 74)
!4762 = !DILocation(line: 2053, column: 81, scope: !4761)
!4763 = !DILocation(line: 2053, column: 89, scope: !4761)
!4764 = !DILocation(line: 2053, column: 92, scope: !4765)
!4765 = !DILexicalBlockFile(scope: !4761, file: !453, discriminator: 1)
!4766 = !DILocation(line: 2053, column: 74, scope: !1003)
!4767 = !DILocation(line: 2053, column: 110, scope: !4768)
!4768 = !DILexicalBlockFile(scope: !4761, file: !453, discriminator: 3)
!4769 = !DILocation(line: 2053, column: 110, scope: !4761)
!4770 = !DILocation(line: 2053, column: 133, scope: !4771)
!4771 = !DILexicalBlockFile(scope: !4772, file: !453, discriminator: 4)
!4772 = !DILexicalBlockFile(scope: !4773, file: !453, discriminator: 2)
!4773 = distinct !DILexicalBlock(scope: !1003, file: !453, line: 2053, column: 133)
!4774 = !DILocation(line: 2053, column: 140, scope: !4773)
!4775 = !DILocation(line: 2053, column: 133, scope: !1003)
!4776 = !DILocation(line: 2053, column: 154, scope: !4777)
!4777 = !DILexicalBlockFile(scope: !4778, file: !453, discriminator: 5)
!4778 = distinct !DILexicalBlock(scope: !4773, file: !453, line: 2053, column: 148)
!4779 = !DILocation(line: 2053, column: 201, scope: !4778)
!4780 = !DILocation(line: 2054, column: 14, scope: !1003)
!4781 = !DILocation(line: 2054, column: 12, scope: !1003)
!4782 = !DILocation(line: 2054, column: 74, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !1003, file: !453, line: 2054, column: 74)
!4784 = !DILocation(line: 2054, column: 81, scope: !4783)
!4785 = !DILocation(line: 2054, column: 89, scope: !4783)
!4786 = !DILocation(line: 2054, column: 92, scope: !4787)
!4787 = !DILexicalBlockFile(scope: !4783, file: !453, discriminator: 1)
!4788 = !DILocation(line: 2054, column: 74, scope: !1003)
!4789 = !DILocation(line: 2054, column: 110, scope: !4790)
!4790 = !DILexicalBlockFile(scope: !4783, file: !453, discriminator: 3)
!4791 = !DILocation(line: 2054, column: 110, scope: !4783)
!4792 = !DILocation(line: 2054, column: 133, scope: !4793)
!4793 = !DILexicalBlockFile(scope: !4794, file: !453, discriminator: 4)
!4794 = !DILexicalBlockFile(scope: !4795, file: !453, discriminator: 2)
!4795 = distinct !DILexicalBlock(scope: !1003, file: !453, line: 2054, column: 133)
!4796 = !DILocation(line: 2054, column: 140, scope: !4795)
!4797 = !DILocation(line: 2054, column: 133, scope: !1003)
!4798 = !DILocation(line: 2054, column: 155, scope: !4799)
!4799 = !DILexicalBlockFile(scope: !4800, file: !453, discriminator: 5)
!4800 = distinct !DILexicalBlock(scope: !4795, file: !453, line: 2054, column: 149)
!4801 = !DILocation(line: 2054, column: 202, scope: !4800)
!4802 = !DILocation(line: 2056, column: 14, scope: !1003)
!4803 = !DILocation(line: 2056, column: 12, scope: !1003)
!4804 = !DILocation(line: 2056, column: 73, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !1003, file: !453, line: 2056, column: 73)
!4806 = !DILocation(line: 2056, column: 80, scope: !4805)
!4807 = !DILocation(line: 2056, column: 88, scope: !4805)
!4808 = !DILocation(line: 2056, column: 91, scope: !4809)
!4809 = !DILexicalBlockFile(scope: !4805, file: !453, discriminator: 1)
!4810 = !DILocation(line: 2056, column: 73, scope: !1003)
!4811 = !DILocation(line: 2056, column: 138, scope: !4812)
!4812 = !DILexicalBlockFile(scope: !4813, file: !453, discriminator: 3)
!4813 = distinct !DILexicalBlock(scope: !4814, file: !453, line: 2056, column: 115)
!4814 = distinct !DILexicalBlock(scope: !4805, file: !453, line: 2056, column: 109)
!4815 = !DILocation(line: 2056, column: 115, scope: !4813)
!4816 = !DILocation(line: 2056, column: 115, scope: !4814)
!4817 = !DILocation(line: 2056, column: 157, scope: !4818)
!4818 = !DILexicalBlockFile(scope: !4813, file: !453, discriminator: 5)
!4819 = !DILocation(line: 2056, column: 177, scope: !4820)
!4820 = !DILexicalBlockFile(scope: !4813, file: !453, discriminator: 6)
!4821 = !DILocation(line: 2056, column: 177, scope: !4813)
!4822 = !DILocation(line: 2056, column: 196, scope: !4823)
!4823 = !DILexicalBlockFile(scope: !4814, file: !453, discriminator: 7)
!4824 = !DILocation(line: 2056, column: 209, scope: !4825)
!4825 = !DILexicalBlockFile(scope: !4826, file: !453, discriminator: 4)
!4826 = !DILexicalBlockFile(scope: !4827, file: !453, discriminator: 2)
!4827 = distinct !DILexicalBlock(scope: !4805, file: !453, line: 2056, column: 203)
!4828 = !DILocation(line: 2056, column: 263, scope: !4827)
!4829 = !DILocation(line: 2057, column: 14, scope: !1003)
!4830 = !DILocation(line: 2057, column: 12, scope: !1003)
!4831 = !DILocation(line: 2057, column: 75, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !1003, file: !453, line: 2057, column: 75)
!4833 = !DILocation(line: 2057, column: 82, scope: !4832)
!4834 = !DILocation(line: 2057, column: 90, scope: !4832)
!4835 = !DILocation(line: 2057, column: 93, scope: !4836)
!4836 = !DILexicalBlockFile(scope: !4832, file: !453, discriminator: 1)
!4837 = !DILocation(line: 2057, column: 75, scope: !1003)
!4838 = !DILocation(line: 2057, column: 140, scope: !4839)
!4839 = !DILexicalBlockFile(scope: !4840, file: !453, discriminator: 3)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !453, line: 2057, column: 117)
!4841 = distinct !DILexicalBlock(scope: !4832, file: !453, line: 2057, column: 111)
!4842 = !DILocation(line: 2057, column: 117, scope: !4840)
!4843 = !DILocation(line: 2057, column: 117, scope: !4841)
!4844 = !DILocation(line: 2057, column: 159, scope: !4845)
!4845 = !DILexicalBlockFile(scope: !4840, file: !453, discriminator: 5)
!4846 = !DILocation(line: 2057, column: 179, scope: !4847)
!4847 = !DILexicalBlockFile(scope: !4840, file: !453, discriminator: 6)
!4848 = !DILocation(line: 2057, column: 179, scope: !4840)
!4849 = !DILocation(line: 2057, column: 198, scope: !4850)
!4850 = !DILexicalBlockFile(scope: !4841, file: !453, discriminator: 7)
!4851 = !DILocation(line: 2057, column: 211, scope: !4852)
!4852 = !DILexicalBlockFile(scope: !4853, file: !453, discriminator: 4)
!4853 = !DILexicalBlockFile(scope: !4854, file: !453, discriminator: 2)
!4854 = distinct !DILexicalBlock(scope: !4832, file: !453, line: 2057, column: 205)
!4855 = !DILocation(line: 2057, column: 267, scope: !4854)
!4856 = !DILocation(line: 2058, column: 14, scope: !1003)
!4857 = !DILocation(line: 2058, column: 12, scope: !1003)
!4858 = !DILocation(line: 2058, column: 74, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !1003, file: !453, line: 2058, column: 74)
!4860 = !DILocation(line: 2058, column: 81, scope: !4859)
!4861 = !DILocation(line: 2058, column: 89, scope: !4859)
!4862 = !DILocation(line: 2058, column: 92, scope: !4863)
!4863 = !DILexicalBlockFile(scope: !4859, file: !453, discriminator: 1)
!4864 = !DILocation(line: 2058, column: 74, scope: !1003)
!4865 = !DILocation(line: 2058, column: 139, scope: !4866)
!4866 = !DILexicalBlockFile(scope: !4867, file: !453, discriminator: 3)
!4867 = distinct !DILexicalBlock(scope: !4868, file: !453, line: 2058, column: 116)
!4868 = distinct !DILexicalBlock(scope: !4859, file: !453, line: 2058, column: 110)
!4869 = !DILocation(line: 2058, column: 116, scope: !4867)
!4870 = !DILocation(line: 2058, column: 116, scope: !4868)
!4871 = !DILocation(line: 2058, column: 158, scope: !4872)
!4872 = !DILexicalBlockFile(scope: !4867, file: !453, discriminator: 5)
!4873 = !DILocation(line: 2058, column: 178, scope: !4874)
!4874 = !DILexicalBlockFile(scope: !4867, file: !453, discriminator: 6)
!4875 = !DILocation(line: 2058, column: 178, scope: !4867)
!4876 = !DILocation(line: 2058, column: 197, scope: !4877)
!4877 = !DILexicalBlockFile(scope: !4868, file: !453, discriminator: 7)
!4878 = !DILocation(line: 2058, column: 210, scope: !4879)
!4879 = !DILexicalBlockFile(scope: !4880, file: !453, discriminator: 4)
!4880 = !DILexicalBlockFile(scope: !4881, file: !453, discriminator: 2)
!4881 = distinct !DILexicalBlock(scope: !4859, file: !453, line: 2058, column: 204)
!4882 = !DILocation(line: 2058, column: 265, scope: !4881)
!4883 = !DILocation(line: 2059, column: 14, scope: !1003)
!4884 = !DILocation(line: 2059, column: 12, scope: !1003)
!4885 = !DILocation(line: 2059, column: 72, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !1003, file: !453, line: 2059, column: 72)
!4887 = !DILocation(line: 2059, column: 79, scope: !4886)
!4888 = !DILocation(line: 2059, column: 87, scope: !4886)
!4889 = !DILocation(line: 2059, column: 90, scope: !4890)
!4890 = !DILexicalBlockFile(scope: !4886, file: !453, discriminator: 1)
!4891 = !DILocation(line: 2059, column: 72, scope: !1003)
!4892 = !DILocation(line: 2059, column: 137, scope: !4893)
!4893 = !DILexicalBlockFile(scope: !4894, file: !453, discriminator: 3)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !453, line: 2059, column: 114)
!4895 = distinct !DILexicalBlock(scope: !4886, file: !453, line: 2059, column: 108)
!4896 = !DILocation(line: 2059, column: 114, scope: !4894)
!4897 = !DILocation(line: 2059, column: 114, scope: !4895)
!4898 = !DILocation(line: 2059, column: 156, scope: !4899)
!4899 = !DILexicalBlockFile(scope: !4894, file: !453, discriminator: 5)
!4900 = !DILocation(line: 2059, column: 176, scope: !4901)
!4901 = !DILexicalBlockFile(scope: !4894, file: !453, discriminator: 6)
!4902 = !DILocation(line: 2059, column: 176, scope: !4894)
!4903 = !DILocation(line: 2059, column: 195, scope: !4904)
!4904 = !DILexicalBlockFile(scope: !4895, file: !453, discriminator: 7)
!4905 = !DILocation(line: 2059, column: 208, scope: !4906)
!4906 = !DILexicalBlockFile(scope: !4907, file: !453, discriminator: 4)
!4907 = !DILexicalBlockFile(scope: !4908, file: !453, discriminator: 2)
!4908 = distinct !DILexicalBlock(scope: !4886, file: !453, line: 2059, column: 202)
!4909 = !DILocation(line: 2059, column: 261, scope: !4908)
!4910 = !DILocation(line: 2060, column: 14, scope: !1003)
!4911 = !DILocation(line: 2060, column: 12, scope: !1003)
!4912 = !DILocation(line: 2060, column: 75, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !1003, file: !453, line: 2060, column: 75)
!4914 = !DILocation(line: 2060, column: 82, scope: !4913)
!4915 = !DILocation(line: 2060, column: 90, scope: !4913)
!4916 = !DILocation(line: 2060, column: 93, scope: !4917)
!4917 = !DILexicalBlockFile(scope: !4913, file: !453, discriminator: 1)
!4918 = !DILocation(line: 2060, column: 75, scope: !1003)
!4919 = !DILocation(line: 2060, column: 140, scope: !4920)
!4920 = !DILexicalBlockFile(scope: !4921, file: !453, discriminator: 3)
!4921 = distinct !DILexicalBlock(scope: !4922, file: !453, line: 2060, column: 117)
!4922 = distinct !DILexicalBlock(scope: !4913, file: !453, line: 2060, column: 111)
!4923 = !DILocation(line: 2060, column: 117, scope: !4921)
!4924 = !DILocation(line: 2060, column: 117, scope: !4922)
!4925 = !DILocation(line: 2060, column: 159, scope: !4926)
!4926 = !DILexicalBlockFile(scope: !4921, file: !453, discriminator: 5)
!4927 = !DILocation(line: 2060, column: 179, scope: !4928)
!4928 = !DILexicalBlockFile(scope: !4921, file: !453, discriminator: 6)
!4929 = !DILocation(line: 2060, column: 179, scope: !4921)
!4930 = !DILocation(line: 2060, column: 198, scope: !4931)
!4931 = !DILexicalBlockFile(scope: !4922, file: !453, discriminator: 7)
!4932 = !DILocation(line: 2060, column: 211, scope: !4933)
!4933 = !DILexicalBlockFile(scope: !4934, file: !453, discriminator: 4)
!4934 = !DILexicalBlockFile(scope: !4935, file: !453, discriminator: 2)
!4935 = distinct !DILexicalBlock(scope: !4913, file: !453, line: 2060, column: 205)
!4936 = !DILocation(line: 2060, column: 267, scope: !4935)
!4937 = !DILocation(line: 2062, column: 58, scope: !1003)
!4938 = !DILocation(line: 2062, column: 5, scope: !1003)
!4939 = !DILocation(line: 2064, column: 52, scope: !1003)
!4940 = !DILocation(line: 2064, column: 12, scope: !1003)
!4941 = !DILocation(line: 2064, column: 5, scope: !1003)
!4942 = !DILocation(line: 2067, column: 1, scope: !1003)
!4943 = !DILocation(line: 2000, column: 43, scope: !1008)
!4944 = !DILocation(line: 2001, column: 5, scope: !1008)
!4945 = !DILocation(line: 2001, column: 15, scope: !1008)
!4946 = !DILocation(line: 2001, column: 22, scope: !1008)
!4947 = !DILocation(line: 2002, column: 5, scope: !1008)
!4948 = !DILocation(line: 2002, column: 9, scope: !1008)
!4949 = !DILocation(line: 2003, column: 9, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !1008, file: !453, line: 2003, column: 9)
!4951 = !DILocation(line: 2003, column: 14, scope: !4950)
!4952 = !DILocation(line: 2003, column: 9, scope: !1008)
!4953 = !DILocation(line: 2004, column: 9, scope: !4950)
!4954 = !DILocation(line: 2005, column: 47, scope: !1008)
!4955 = !DILocation(line: 2005, column: 14, scope: !1008)
!4956 = !DILocation(line: 2005, column: 12, scope: !1008)
!4957 = !DILocation(line: 2006, column: 5, scope: !1008)
!4958 = !DILocation(line: 2006, column: 10, scope: !4959)
!4959 = !DILexicalBlockFile(scope: !1014, file: !453, discriminator: 1)
!4960 = !DILocation(line: 2006, column: 20, scope: !1014)
!4961 = !DILocation(line: 2006, column: 50, scope: !1014)
!4962 = !DILocation(line: 2006, column: 65, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !1014, file: !453, line: 2006, column: 62)
!4964 = !DILocation(line: 2006, column: 82, scope: !4963)
!4965 = !DILocation(line: 2006, column: 62, scope: !4963)
!4966 = !DILocation(line: 2006, column: 92, scope: !4963)
!4967 = !DILocation(line: 2006, column: 62, scope: !1014)
!4968 = !DILocation(line: 2006, column: 62, scope: !4969)
!4969 = !DILexicalBlockFile(scope: !1014, file: !453, discriminator: 2)
!4970 = !DILocation(line: 2006, column: 123, scope: !4971)
!4971 = !DILexicalBlockFile(scope: !4963, file: !453, discriminator: 3)
!4972 = !DILocation(line: 2006, column: 141, scope: !4963)
!4973 = !DILocation(line: 2006, column: 151, scope: !4963)
!4974 = !DILocation(line: 2006, column: 176, scope: !4963)
!4975 = !DILocation(line: 2006, column: 107, scope: !4963)
!4976 = !DILocation(line: 2006, column: 195, scope: !4977)
!4977 = !DILexicalBlockFile(scope: !1008, file: !453, discriminator: 4)
!4978 = !DILocation(line: 2006, column: 195, scope: !1014)
!4979 = !DILocation(line: 2006, column: 195, scope: !4980)
!4980 = !DILexicalBlockFile(scope: !1014, file: !453, discriminator: 5)
!4981 = !DILocation(line: 2007, column: 10, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !1008, file: !453, line: 2007, column: 9)
!4983 = !DILocation(line: 2007, column: 9, scope: !1008)
!4984 = !DILocation(line: 2008, column: 25, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4982, file: !453, line: 2007, column: 18)
!4986 = !DILocation(line: 2008, column: 9, scope: !4985)
!4987 = !DILocation(line: 2010, column: 9, scope: !4985)
!4988 = !DILocation(line: 2012, column: 58, scope: !1008)
!4989 = !DILocation(line: 2012, column: 5, scope: !1008)
!4990 = !DILocation(line: 2013, column: 1, scope: !1008)
!4991 = !DILocation(line: 2100, column: 24, scope: !1015)
!4992 = !DILocation(line: 2100, column: 40, scope: !1015)
!4993 = !DILocation(line: 2102, column: 5, scope: !1015)
!4994 = !DILocation(line: 2102, column: 15, scope: !1015)
!4995 = !DILocation(line: 2103, column: 5, scope: !1015)
!4996 = !DILocation(line: 2103, column: 17, scope: !1015)
!4997 = !DILocation(line: 2104, column: 5, scope: !1015)
!4998 = !DILocation(line: 2104, column: 11, scope: !1015)
!4999 = !DILocation(line: 2105, column: 5, scope: !1015)
!5000 = !DILocation(line: 2105, column: 11, scope: !1015)
!5001 = !DILocation(line: 2106, column: 5, scope: !1015)
!5002 = !DILocation(line: 2106, column: 19, scope: !1015)
!5003 = !DILocation(line: 2113, column: 5, scope: !1015)
!5004 = !DILocation(line: 2113, column: 20, scope: !1015)
!5005 = !DILocation(line: 2113, column: 29, scope: !1015)
!5006 = !DILocation(line: 2126, column: 28, scope: !1015)
!5007 = !DILocation(line: 2126, column: 45, scope: !1015)
!5008 = !DILocation(line: 2126, column: 14, scope: !1015)
!5009 = !DILocation(line: 2126, column: 12, scope: !1015)
!5010 = !DILocation(line: 2127, column: 26, scope: !1015)
!5011 = !DILocation(line: 2127, column: 34, scope: !1015)
!5012 = !DILocation(line: 2127, column: 5, scope: !1015)
!5013 = !DILocation(line: 2128, column: 24, scope: !1015)
!5014 = !DILocation(line: 2128, column: 5, scope: !1015)
!5015 = !DILocation(line: 2129, column: 9, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !1015, file: !453, line: 2129, column: 9)
!5017 = !DILocation(line: 2129, column: 9, scope: !1015)
!5018 = !DILocation(line: 2129, column: 37, scope: !5019)
!5019 = !DILexicalBlockFile(scope: !5020, file: !453, discriminator: 1)
!5020 = distinct !DILexicalBlock(scope: !5021, file: !453, line: 2129, column: 26)
!5021 = distinct !DILexicalBlock(scope: !5016, file: !453, line: 2129, column: 24)
!5022 = !DILocation(line: 2129, column: 34, scope: !5020)
!5023 = !DILocation(line: 2129, column: 53, scope: !5020)
!5024 = !DILocation(line: 2129, column: 79, scope: !5025)
!5025 = !DILexicalBlockFile(scope: !5026, file: !453, discriminator: 2)
!5026 = distinct !DILexicalBlock(scope: !5016, file: !453, line: 2129, column: 78)
!5027 = !DILocation(line: 2129, column: 78, scope: !5016)
!5028 = !DILocation(line: 2129, column: 120, scope: !5029)
!5029 = !DILexicalBlockFile(scope: !5030, file: !453, discriminator: 3)
!5030 = distinct !DILexicalBlock(scope: !5031, file: !453, line: 2129, column: 112)
!5031 = distinct !DILexicalBlock(scope: !5026, file: !453, line: 2129, column: 110)
!5032 = !DILocation(line: 2129, column: 150, scope: !5030)
!5033 = !DILocation(line: 2129, column: 196, scope: !1015)
!5034 = !DILocation(line: 2130, column: 5, scope: !1015)
!5035 = !DILocation(line: 2130, column: 10, scope: !5036)
!5036 = !DILexicalBlockFile(scope: !1035, file: !453, discriminator: 1)
!5037 = !DILocation(line: 2130, column: 20, scope: !1035)
!5038 = !DILocation(line: 2130, column: 50, scope: !1035)
!5039 = !DILocation(line: 2130, column: 67, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !1035, file: !453, line: 2130, column: 64)
!5041 = !DILocation(line: 2130, column: 84, scope: !5040)
!5042 = !DILocation(line: 2130, column: 64, scope: !5040)
!5043 = !DILocation(line: 2130, column: 94, scope: !5040)
!5044 = !DILocation(line: 2130, column: 64, scope: !1035)
!5045 = !DILocation(line: 2130, column: 64, scope: !5046)
!5046 = !DILexicalBlockFile(scope: !1035, file: !453, discriminator: 2)
!5047 = !DILocation(line: 2130, column: 125, scope: !5048)
!5048 = !DILexicalBlockFile(scope: !5040, file: !453, discriminator: 3)
!5049 = !DILocation(line: 2130, column: 143, scope: !5040)
!5050 = !DILocation(line: 2130, column: 153, scope: !5040)
!5051 = !DILocation(line: 2130, column: 178, scope: !5040)
!5052 = !DILocation(line: 2130, column: 109, scope: !5040)
!5053 = !DILocation(line: 2130, column: 197, scope: !5054)
!5054 = !DILexicalBlockFile(scope: !1015, file: !453, discriminator: 4)
!5055 = !DILocation(line: 2130, column: 197, scope: !1035)
!5056 = !DILocation(line: 2130, column: 197, scope: !5057)
!5057 = !DILexicalBlockFile(scope: !1035, file: !453, discriminator: 5)
!5058 = !DILocation(line: 2131, column: 9, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !1015, file: !453, line: 2131, column: 9)
!5060 = !DILocation(line: 2131, column: 9, scope: !1015)
!5061 = !DILocation(line: 2131, column: 37, scope: !5062)
!5062 = !DILexicalBlockFile(scope: !5063, file: !453, discriminator: 1)
!5063 = distinct !DILexicalBlock(scope: !5064, file: !453, line: 2131, column: 26)
!5064 = distinct !DILexicalBlock(scope: !5059, file: !453, line: 2131, column: 24)
!5065 = !DILocation(line: 2131, column: 34, scope: !5063)
!5066 = !DILocation(line: 2131, column: 53, scope: !5063)
!5067 = !DILocation(line: 2131, column: 79, scope: !5068)
!5068 = !DILexicalBlockFile(scope: !5069, file: !453, discriminator: 2)
!5069 = distinct !DILexicalBlock(scope: !5059, file: !453, line: 2131, column: 78)
!5070 = !DILocation(line: 2131, column: 78, scope: !5059)
!5071 = !DILocation(line: 2131, column: 120, scope: !5072)
!5072 = !DILexicalBlockFile(scope: !5073, file: !453, discriminator: 3)
!5073 = distinct !DILexicalBlock(scope: !5074, file: !453, line: 2131, column: 112)
!5074 = distinct !DILexicalBlock(scope: !5069, file: !453, line: 2131, column: 110)
!5075 = !DILocation(line: 2131, column: 150, scope: !5073)
!5076 = !DILocation(line: 2131, column: 196, scope: !1015)
!5077 = !DILocation(line: 2133, column: 28, scope: !1015)
!5078 = !DILocation(line: 2133, column: 14, scope: !1015)
!5079 = !DILocation(line: 2133, column: 12, scope: !1015)
!5080 = !DILocation(line: 2134, column: 26, scope: !1015)
!5081 = !DILocation(line: 2134, column: 34, scope: !1015)
!5082 = !DILocation(line: 2134, column: 5, scope: !1015)
!5083 = !DILocation(line: 2135, column: 23, scope: !1015)
!5084 = !DILocation(line: 2135, column: 31, scope: !1015)
!5085 = !DILocation(line: 2135, column: 5, scope: !1015)
!5086 = !DILocation(line: 2136, column: 29, scope: !1015)
!5087 = !DILocation(line: 2136, column: 5, scope: !1015)
!5088 = !DILocation(line: 2137, column: 26, scope: !1015)
!5089 = !DILocation(line: 2137, column: 34, scope: !1015)
!5090 = !DILocation(line: 2137, column: 5, scope: !1015)
!5091 = !DILocation(line: 2138, column: 24, scope: !1015)
!5092 = !DILocation(line: 2138, column: 5, scope: !1015)
!5093 = !DILocation(line: 2139, column: 9, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !1015, file: !453, line: 2139, column: 9)
!5095 = !DILocation(line: 2139, column: 9, scope: !1015)
!5096 = !DILocation(line: 2139, column: 37, scope: !5097)
!5097 = !DILexicalBlockFile(scope: !5098, file: !453, discriminator: 1)
!5098 = distinct !DILexicalBlock(scope: !5099, file: !453, line: 2139, column: 26)
!5099 = distinct !DILexicalBlock(scope: !5094, file: !453, line: 2139, column: 24)
!5100 = !DILocation(line: 2139, column: 34, scope: !5098)
!5101 = !DILocation(line: 2139, column: 53, scope: !5098)
!5102 = !DILocation(line: 2139, column: 79, scope: !5103)
!5103 = !DILexicalBlockFile(scope: !5104, file: !453, discriminator: 2)
!5104 = distinct !DILexicalBlock(scope: !5094, file: !453, line: 2139, column: 78)
!5105 = !DILocation(line: 2139, column: 78, scope: !5094)
!5106 = !DILocation(line: 2139, column: 120, scope: !5107)
!5107 = !DILexicalBlockFile(scope: !5108, file: !453, discriminator: 3)
!5108 = distinct !DILexicalBlock(scope: !5109, file: !453, line: 2139, column: 112)
!5109 = distinct !DILexicalBlock(scope: !5104, file: !453, line: 2139, column: 110)
!5110 = !DILocation(line: 2139, column: 150, scope: !5108)
!5111 = !DILocation(line: 2139, column: 196, scope: !1015)
!5112 = !DILocation(line: 2141, column: 37, scope: !1015)
!5113 = !DILocation(line: 2141, column: 16, scope: !1015)
!5114 = !DILocation(line: 2141, column: 14, scope: !1015)
!5115 = !DILocation(line: 2142, column: 10, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !1015, file: !453, line: 2142, column: 9)
!5117 = !DILocation(line: 2142, column: 9, scope: !1015)
!5118 = !DILocation(line: 2143, column: 17, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5120, file: !453, line: 2143, column: 9)
!5120 = distinct !DILexicalBlock(scope: !5116, file: !453, line: 2142, column: 28)
!5121 = !DILocation(line: 2143, column: 77, scope: !5119)
!5122 = !DILocation(line: 2145, column: 5, scope: !1015)
!5123 = !DILocation(line: 2146, column: 9, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !1015, file: !453, line: 2146, column: 9)
!5125 = !DILocation(line: 2146, column: 9, scope: !1015)
!5126 = !DILocation(line: 2147, column: 13, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5128, file: !453, line: 2147, column: 13)
!5128 = distinct !DILexicalBlock(scope: !5124, file: !453, line: 2146, column: 19)
!5129 = !DILocation(line: 2147, column: 25, scope: !5127)
!5130 = !DILocation(line: 2147, column: 22, scope: !5127)
!5131 = !DILocation(line: 2147, column: 13, scope: !5128)
!5132 = !DILocation(line: 2148, column: 21, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5134, file: !453, line: 2148, column: 13)
!5134 = distinct !DILexicalBlock(scope: !5127, file: !453, line: 2147, column: 42)
!5135 = !DILocation(line: 2148, column: 99, scope: !5133)
!5136 = !DILocation(line: 2151, column: 21, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5138, file: !453, line: 2151, column: 13)
!5138 = distinct !DILexicalBlock(scope: !5127, file: !453, line: 2150, column: 16)
!5139 = !DILocation(line: 2151, column: 99, scope: !5137)
!5140 = !DILocation(line: 2155, column: 29, scope: !1015)
!5141 = !DILocation(line: 2155, column: 5, scope: !1015)
!5142 = !DILocation(line: 2156, column: 5, scope: !1015)
!5143 = !DILocation(line: 2156, column: 10, scope: !5144)
!5144 = !DILexicalBlockFile(scope: !1037, file: !453, discriminator: 1)
!5145 = !DILocation(line: 2156, column: 20, scope: !1037)
!5146 = !DILocation(line: 2156, column: 50, scope: !1037)
!5147 = !DILocation(line: 2156, column: 67, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !1037, file: !453, line: 2156, column: 64)
!5149 = !DILocation(line: 2156, column: 84, scope: !5148)
!5150 = !DILocation(line: 2156, column: 64, scope: !5148)
!5151 = !DILocation(line: 2156, column: 94, scope: !5148)
!5152 = !DILocation(line: 2156, column: 64, scope: !1037)
!5153 = !DILocation(line: 2156, column: 64, scope: !5154)
!5154 = !DILexicalBlockFile(scope: !1037, file: !453, discriminator: 2)
!5155 = !DILocation(line: 2156, column: 125, scope: !5156)
!5156 = !DILexicalBlockFile(scope: !5148, file: !453, discriminator: 3)
!5157 = !DILocation(line: 2156, column: 143, scope: !5148)
!5158 = !DILocation(line: 2156, column: 153, scope: !5148)
!5159 = !DILocation(line: 2156, column: 178, scope: !5148)
!5160 = !DILocation(line: 2156, column: 109, scope: !5148)
!5161 = !DILocation(line: 2156, column: 197, scope: !5054)
!5162 = !DILocation(line: 2156, column: 197, scope: !1037)
!5163 = !DILocation(line: 2156, column: 197, scope: !5164)
!5164 = !DILexicalBlockFile(scope: !1037, file: !453, discriminator: 5)
!5165 = !DILocation(line: 2157, column: 9, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !1015, file: !453, line: 2157, column: 9)
!5167 = !DILocation(line: 2157, column: 9, scope: !1015)
!5168 = !DILocation(line: 2158, column: 17, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5170, file: !453, line: 2158, column: 9)
!5170 = distinct !DILexicalBlock(scope: !5166, file: !453, line: 2157, column: 40)
!5171 = !DILocation(line: 2158, column: 72, scope: !5169)
!5172 = !DILocation(line: 2161, column: 19, scope: !1041)
!5173 = !DILocation(line: 2161, column: 16, scope: !1041)
!5174 = !DILocation(line: 2161, column: 10, scope: !1041)
!5175 = !DILocation(line: 2161, column: 38, scope: !5176)
!5176 = !DILexicalBlockFile(scope: !5177, file: !453, discriminator: 2)
!5177 = !DILexicalBlockFile(scope: !1040, file: !453, discriminator: 1)
!5178 = !DILocation(line: 2161, column: 45, scope: !1040)
!5179 = !{!5180, !1942, i64 8}
!5180 = !{!"", !1942, i64 0, !1942, i64 8, !1942, i64 16}
!5181 = !DILocation(line: 2161, column: 52, scope: !1040)
!5182 = !DILocation(line: 2161, column: 5, scope: !1041)
!5183 = !DILocation(line: 2175, column: 9, scope: !1039)
!5184 = !DILocation(line: 2175, column: 19, scope: !1039)
!5185 = !DILocation(line: 2175, column: 50, scope: !1039)
!5186 = !DILocation(line: 2175, column: 57, scope: !1039)
!5187 = !DILocation(line: 2175, column: 28, scope: !1039)
!5188 = !DILocation(line: 2176, column: 13, scope: !1047)
!5189 = !DILocation(line: 2176, column: 13, scope: !1039)
!5190 = !DILocation(line: 2177, column: 40, scope: !1046)
!5191 = !DILocation(line: 2177, column: 47, scope: !1046)
!5192 = !{!5180, !1942, i64 0}
!5193 = !DILocation(line: 2177, column: 23, scope: !1046)
!5194 = !DILocation(line: 2177, column: 21, scope: !1046)
!5195 = !DILocation(line: 2178, column: 18, scope: !1045)
!5196 = !DILocation(line: 2178, column: 17, scope: !1046)
!5197 = !DILocation(line: 2179, column: 17, scope: !1044)
!5198 = !DILocation(line: 2179, column: 22, scope: !5199)
!5199 = !DILexicalBlockFile(scope: !1043, file: !453, discriminator: 1)
!5200 = !DILocation(line: 2179, column: 32, scope: !1043)
!5201 = !DILocation(line: 2179, column: 62, scope: !1043)
!5202 = !DILocation(line: 2179, column: 79, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !1043, file: !453, line: 2179, column: 76)
!5204 = !DILocation(line: 2179, column: 96, scope: !5203)
!5205 = !DILocation(line: 2179, column: 76, scope: !5203)
!5206 = !DILocation(line: 2179, column: 106, scope: !5203)
!5207 = !DILocation(line: 2179, column: 76, scope: !1043)
!5208 = !DILocation(line: 2179, column: 76, scope: !5209)
!5209 = !DILexicalBlockFile(scope: !1043, file: !453, discriminator: 2)
!5210 = !DILocation(line: 2179, column: 137, scope: !5211)
!5211 = !DILexicalBlockFile(scope: !5203, file: !453, discriminator: 3)
!5212 = !DILocation(line: 2179, column: 155, scope: !5203)
!5213 = !DILocation(line: 2179, column: 165, scope: !5203)
!5214 = !DILocation(line: 2179, column: 190, scope: !5203)
!5215 = !DILocation(line: 2179, column: 121, scope: !5203)
!5216 = !DILocation(line: 2179, column: 209, scope: !5217)
!5217 = !DILexicalBlockFile(scope: !1044, file: !453, discriminator: 4)
!5218 = !DILocation(line: 2179, column: 209, scope: !1043)
!5219 = !DILocation(line: 2179, column: 209, scope: !5220)
!5220 = !DILexicalBlockFile(scope: !1043, file: !453, discriminator: 5)
!5221 = !DILocation(line: 2180, column: 126, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !1044, file: !453, line: 2180, column: 17)
!5223 = !DILocation(line: 2180, column: 133, scope: !5222)
!5224 = !DILocation(line: 2180, column: 141, scope: !5222)
!5225 = !DILocation(line: 2180, column: 148, scope: !5222)
!5226 = !{!5180, !1942, i64 16}
!5227 = !DILocation(line: 2180, column: 19, scope: !5222)
!5228 = !DILocation(line: 2180, column: 166, scope: !5222)
!5229 = !DILocation(line: 2180, column: 176, scope: !5222)
!5230 = !DILocation(line: 2182, column: 45, scope: !1046)
!5231 = !DILocation(line: 2182, column: 53, scope: !1046)
!5232 = !DILocation(line: 2182, column: 60, scope: !1046)
!5233 = !DILocation(line: 2182, column: 22, scope: !1046)
!5234 = !DILocation(line: 2182, column: 20, scope: !1046)
!5235 = !DILocation(line: 2183, column: 18, scope: !1051)
!5236 = !DILocation(line: 2183, column: 17, scope: !1046)
!5237 = !DILocation(line: 2184, column: 17, scope: !1050)
!5238 = !DILocation(line: 2184, column: 22, scope: !5239)
!5239 = !DILexicalBlockFile(scope: !1049, file: !453, discriminator: 1)
!5240 = !DILocation(line: 2184, column: 32, scope: !1049)
!5241 = !DILocation(line: 2184, column: 62, scope: !1049)
!5242 = !DILocation(line: 2184, column: 79, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !1049, file: !453, line: 2184, column: 76)
!5244 = !DILocation(line: 2184, column: 96, scope: !5243)
!5245 = !DILocation(line: 2184, column: 76, scope: !5243)
!5246 = !DILocation(line: 2184, column: 106, scope: !5243)
!5247 = !DILocation(line: 2184, column: 76, scope: !1049)
!5248 = !DILocation(line: 2184, column: 76, scope: !5249)
!5249 = !DILexicalBlockFile(scope: !1049, file: !453, discriminator: 2)
!5250 = !DILocation(line: 2184, column: 137, scope: !5251)
!5251 = !DILexicalBlockFile(scope: !5243, file: !453, discriminator: 3)
!5252 = !DILocation(line: 2184, column: 155, scope: !5243)
!5253 = !DILocation(line: 2184, column: 165, scope: !5243)
!5254 = !DILocation(line: 2184, column: 190, scope: !5243)
!5255 = !DILocation(line: 2184, column: 121, scope: !5243)
!5256 = !DILocation(line: 2184, column: 209, scope: !5257)
!5257 = !DILexicalBlockFile(scope: !1050, file: !453, discriminator: 4)
!5258 = !DILocation(line: 2184, column: 209, scope: !1049)
!5259 = !DILocation(line: 2184, column: 209, scope: !5260)
!5260 = !DILexicalBlockFile(scope: !1049, file: !453, discriminator: 5)
!5261 = !DILocation(line: 2185, column: 17, scope: !1050)
!5262 = !DILocation(line: 2187, column: 45, scope: !1046)
!5263 = !DILocation(line: 2187, column: 24, scope: !1046)
!5264 = !DILocation(line: 2187, column: 22, scope: !1046)
!5265 = !DILocation(line: 2189, column: 18, scope: !1055)
!5266 = !DILocation(line: 2189, column: 17, scope: !1046)
!5267 = !DILocation(line: 2190, column: 17, scope: !1054)
!5268 = !DILocation(line: 2190, column: 22, scope: !5269)
!5269 = !DILexicalBlockFile(scope: !1053, file: !453, discriminator: 1)
!5270 = !DILocation(line: 2190, column: 32, scope: !1053)
!5271 = !DILocation(line: 2190, column: 62, scope: !1053)
!5272 = !DILocation(line: 2190, column: 79, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !1053, file: !453, line: 2190, column: 76)
!5274 = !DILocation(line: 2190, column: 96, scope: !5273)
!5275 = !DILocation(line: 2190, column: 76, scope: !5273)
!5276 = !DILocation(line: 2190, column: 106, scope: !5273)
!5277 = !DILocation(line: 2190, column: 76, scope: !1053)
!5278 = !DILocation(line: 2190, column: 76, scope: !5279)
!5279 = !DILexicalBlockFile(scope: !1053, file: !453, discriminator: 2)
!5280 = !DILocation(line: 2190, column: 137, scope: !5281)
!5281 = !DILexicalBlockFile(scope: !5273, file: !453, discriminator: 3)
!5282 = !DILocation(line: 2190, column: 155, scope: !5273)
!5283 = !DILocation(line: 2190, column: 165, scope: !5273)
!5284 = !DILocation(line: 2190, column: 190, scope: !5273)
!5285 = !DILocation(line: 2190, column: 121, scope: !5273)
!5286 = !DILocation(line: 2190, column: 209, scope: !5287)
!5287 = !DILexicalBlockFile(scope: !1054, file: !453, discriminator: 4)
!5288 = !DILocation(line: 2190, column: 209, scope: !1053)
!5289 = !DILocation(line: 2190, column: 209, scope: !5290)
!5290 = !DILexicalBlockFile(scope: !1053, file: !453, discriminator: 5)
!5291 = !DILocation(line: 2191, column: 17, scope: !1054)
!5292 = !DILocation(line: 2191, column: 22, scope: !5293)
!5293 = !DILexicalBlockFile(scope: !1057, file: !453, discriminator: 1)
!5294 = !DILocation(line: 2191, column: 32, scope: !1057)
!5295 = !DILocation(line: 2191, column: 62, scope: !1057)
!5296 = !DILocation(line: 2191, column: 79, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !1057, file: !453, line: 2191, column: 76)
!5298 = !DILocation(line: 2191, column: 96, scope: !5297)
!5299 = !DILocation(line: 2191, column: 76, scope: !5297)
!5300 = !DILocation(line: 2191, column: 106, scope: !5297)
!5301 = !DILocation(line: 2191, column: 76, scope: !1057)
!5302 = !DILocation(line: 2191, column: 76, scope: !5303)
!5303 = !DILexicalBlockFile(scope: !1057, file: !453, discriminator: 2)
!5304 = !DILocation(line: 2191, column: 137, scope: !5305)
!5305 = !DILexicalBlockFile(scope: !5297, file: !453, discriminator: 3)
!5306 = !DILocation(line: 2191, column: 155, scope: !5297)
!5307 = !DILocation(line: 2191, column: 165, scope: !5297)
!5308 = !DILocation(line: 2191, column: 190, scope: !5297)
!5309 = !DILocation(line: 2191, column: 121, scope: !5297)
!5310 = !DILocation(line: 2191, column: 209, scope: !5287)
!5311 = !DILocation(line: 2191, column: 209, scope: !1057)
!5312 = !DILocation(line: 2191, column: 209, scope: !5313)
!5313 = !DILexicalBlockFile(scope: !1057, file: !453, discriminator: 5)
!5314 = !DILocation(line: 2192, column: 130, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !1054, file: !453, line: 2192, column: 17)
!5316 = !DILocation(line: 2192, column: 137, scope: !5315)
!5317 = !DILocation(line: 2192, column: 145, scope: !5315)
!5318 = !DILocation(line: 2192, column: 152, scope: !5315)
!5319 = !DILocation(line: 2192, column: 19, scope: !5315)
!5320 = !DILocation(line: 2192, column: 170, scope: !5315)
!5321 = !DILocation(line: 2192, column: 180, scope: !5315)
!5322 = !DILocation(line: 2194, column: 13, scope: !1046)
!5323 = !DILocation(line: 2195, column: 17, scope: !1061)
!5324 = !DILocation(line: 2195, column: 17, scope: !1046)
!5325 = !DILocation(line: 2196, column: 17, scope: !1060)
!5326 = !DILocation(line: 2196, column: 22, scope: !5327)
!5327 = !DILexicalBlockFile(scope: !1059, file: !453, discriminator: 1)
!5328 = !DILocation(line: 2196, column: 32, scope: !1059)
!5329 = !DILocation(line: 2196, column: 62, scope: !1059)
!5330 = !DILocation(line: 2196, column: 79, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !1059, file: !453, line: 2196, column: 76)
!5332 = !DILocation(line: 2196, column: 96, scope: !5331)
!5333 = !DILocation(line: 2196, column: 76, scope: !5331)
!5334 = !DILocation(line: 2196, column: 106, scope: !5331)
!5335 = !DILocation(line: 2196, column: 76, scope: !1059)
!5336 = !DILocation(line: 2196, column: 76, scope: !5337)
!5337 = !DILexicalBlockFile(scope: !1059, file: !453, discriminator: 2)
!5338 = !DILocation(line: 2196, column: 137, scope: !5339)
!5339 = !DILexicalBlockFile(scope: !5331, file: !453, discriminator: 3)
!5340 = !DILocation(line: 2196, column: 155, scope: !5331)
!5341 = !DILocation(line: 2196, column: 165, scope: !5331)
!5342 = !DILocation(line: 2196, column: 190, scope: !5331)
!5343 = !DILocation(line: 2196, column: 121, scope: !5331)
!5344 = !DILocation(line: 2196, column: 209, scope: !5345)
!5345 = !DILexicalBlockFile(scope: !1060, file: !453, discriminator: 4)
!5346 = !DILocation(line: 2196, column: 209, scope: !1059)
!5347 = !DILocation(line: 2196, column: 209, scope: !5348)
!5348 = !DILexicalBlockFile(scope: !1059, file: !453, discriminator: 5)
!5349 = !DILocation(line: 2197, column: 17, scope: !1060)
!5350 = !DILocation(line: 2197, column: 22, scope: !5351)
!5351 = !DILexicalBlockFile(scope: !1063, file: !453, discriminator: 1)
!5352 = !DILocation(line: 2197, column: 32, scope: !1063)
!5353 = !DILocation(line: 2197, column: 62, scope: !1063)
!5354 = !DILocation(line: 2197, column: 79, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !1063, file: !453, line: 2197, column: 76)
!5356 = !DILocation(line: 2197, column: 96, scope: !5355)
!5357 = !DILocation(line: 2197, column: 76, scope: !5355)
!5358 = !DILocation(line: 2197, column: 106, scope: !5355)
!5359 = !DILocation(line: 2197, column: 76, scope: !1063)
!5360 = !DILocation(line: 2197, column: 76, scope: !5361)
!5361 = !DILexicalBlockFile(scope: !1063, file: !453, discriminator: 2)
!5362 = !DILocation(line: 2197, column: 137, scope: !5363)
!5363 = !DILexicalBlockFile(scope: !5355, file: !453, discriminator: 3)
!5364 = !DILocation(line: 2197, column: 155, scope: !5355)
!5365 = !DILocation(line: 2197, column: 165, scope: !5355)
!5366 = !DILocation(line: 2197, column: 190, scope: !5355)
!5367 = !DILocation(line: 2197, column: 121, scope: !5355)
!5368 = !DILocation(line: 2197, column: 209, scope: !5345)
!5369 = !DILocation(line: 2197, column: 209, scope: !1063)
!5370 = !DILocation(line: 2197, column: 209, scope: !5371)
!5371 = !DILexicalBlockFile(scope: !1063, file: !453, discriminator: 5)
!5372 = !DILocation(line: 2198, column: 21, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !1060, file: !453, line: 2198, column: 21)
!5374 = !DILocation(line: 2198, column: 33, scope: !5373)
!5375 = !DILocation(line: 2198, column: 30, scope: !5373)
!5376 = !DILocation(line: 2198, column: 21, scope: !1060)
!5377 = !DILocation(line: 2199, column: 152, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5379, file: !453, line: 2199, column: 21)
!5379 = distinct !DILexicalBlock(scope: !5373, file: !453, line: 2198, column: 42)
!5380 = !DILocation(line: 2199, column: 159, scope: !5378)
!5381 = !DILocation(line: 2199, column: 167, scope: !5378)
!5382 = !DILocation(line: 2199, column: 174, scope: !5378)
!5383 = !DILocation(line: 2199, column: 23, scope: !5378)
!5384 = !DILocation(line: 2199, column: 192, scope: !5378)
!5385 = !DILocation(line: 2199, column: 202, scope: !5378)
!5386 = !DILocation(line: 2202, column: 152, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5388, file: !453, line: 2202, column: 21)
!5388 = distinct !DILexicalBlock(scope: !5373, file: !453, line: 2201, column: 24)
!5389 = !DILocation(line: 2202, column: 159, scope: !5387)
!5390 = !DILocation(line: 2202, column: 167, scope: !5387)
!5391 = !DILocation(line: 2202, column: 174, scope: !5387)
!5392 = !DILocation(line: 2202, column: 23, scope: !5387)
!5393 = !DILocation(line: 2202, column: 192, scope: !5387)
!5394 = !DILocation(line: 2202, column: 202, scope: !5387)
!5395 = !DILocation(line: 2206, column: 13, scope: !1046)
!5396 = !DILocation(line: 2206, column: 18, scope: !5397)
!5397 = !DILexicalBlockFile(scope: !1065, file: !453, discriminator: 1)
!5398 = !DILocation(line: 2206, column: 28, scope: !1065)
!5399 = !DILocation(line: 2206, column: 58, scope: !1065)
!5400 = !DILocation(line: 2206, column: 75, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !1065, file: !453, line: 2206, column: 72)
!5402 = !DILocation(line: 2206, column: 92, scope: !5401)
!5403 = !DILocation(line: 2206, column: 72, scope: !5401)
!5404 = !DILocation(line: 2206, column: 102, scope: !5401)
!5405 = !DILocation(line: 2206, column: 72, scope: !1065)
!5406 = !DILocation(line: 2206, column: 72, scope: !5407)
!5407 = !DILexicalBlockFile(scope: !1065, file: !453, discriminator: 2)
!5408 = !DILocation(line: 2206, column: 133, scope: !5409)
!5409 = !DILexicalBlockFile(scope: !5401, file: !453, discriminator: 3)
!5410 = !DILocation(line: 2206, column: 151, scope: !5401)
!5411 = !DILocation(line: 2206, column: 161, scope: !5401)
!5412 = !DILocation(line: 2206, column: 186, scope: !5401)
!5413 = !DILocation(line: 2206, column: 117, scope: !5401)
!5414 = !DILocation(line: 2206, column: 205, scope: !5415)
!5415 = !DILexicalBlockFile(scope: !1046, file: !453, discriminator: 4)
!5416 = !DILocation(line: 2206, column: 205, scope: !1065)
!5417 = !DILocation(line: 2206, column: 205, scope: !5418)
!5418 = !DILexicalBlockFile(scope: !1065, file: !453, discriminator: 5)
!5419 = !DILocation(line: 2207, column: 13, scope: !1046)
!5420 = !DILocation(line: 2207, column: 18, scope: !5421)
!5421 = !DILexicalBlockFile(scope: !1067, file: !453, discriminator: 1)
!5422 = !DILocation(line: 2207, column: 28, scope: !1067)
!5423 = !DILocation(line: 2207, column: 58, scope: !1067)
!5424 = !DILocation(line: 2207, column: 75, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !1067, file: !453, line: 2207, column: 72)
!5426 = !DILocation(line: 2207, column: 92, scope: !5425)
!5427 = !DILocation(line: 2207, column: 72, scope: !5425)
!5428 = !DILocation(line: 2207, column: 102, scope: !5425)
!5429 = !DILocation(line: 2207, column: 72, scope: !1067)
!5430 = !DILocation(line: 2207, column: 72, scope: !5431)
!5431 = !DILexicalBlockFile(scope: !1067, file: !453, discriminator: 2)
!5432 = !DILocation(line: 2207, column: 133, scope: !5433)
!5433 = !DILexicalBlockFile(scope: !5425, file: !453, discriminator: 3)
!5434 = !DILocation(line: 2207, column: 151, scope: !5425)
!5435 = !DILocation(line: 2207, column: 161, scope: !5425)
!5436 = !DILocation(line: 2207, column: 186, scope: !5425)
!5437 = !DILocation(line: 2207, column: 117, scope: !5425)
!5438 = !DILocation(line: 2207, column: 205, scope: !5415)
!5439 = !DILocation(line: 2207, column: 205, scope: !1067)
!5440 = !DILocation(line: 2207, column: 205, scope: !5441)
!5441 = !DILexicalBlockFile(scope: !1067, file: !453, discriminator: 5)
!5442 = !DILocation(line: 2208, column: 9, scope: !1046)
!5443 = !DILocation(line: 2210, column: 13, scope: !1047)
!5444 = !DILocation(line: 2211, column: 5, scope: !1040)
!5445 = !DILocation(line: 2211, column: 5, scope: !5177)
!5446 = !DILocation(line: 2211, column: 5, scope: !1039)
!5447 = !DILocation(line: 2161, column: 72, scope: !1040)
!5448 = !DILocation(line: 2161, column: 5, scope: !1040)
!5449 = !DILocation(line: 2211, column: 5, scope: !1041)
!5450 = !DILocation(line: 2214, column: 9, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !1015, file: !453, line: 2214, column: 9)
!5452 = !DILocation(line: 2214, column: 9, scope: !1015)
!5453 = !DILocation(line: 2215, column: 47, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5451, file: !453, line: 2214, column: 16)
!5455 = !DILocation(line: 2215, column: 16, scope: !5454)
!5456 = !DILocation(line: 2215, column: 9, scope: !5454)
!5457 = !DILocation(line: 2217, column: 58, scope: !1015)
!5458 = !DILocation(line: 2217, column: 5, scope: !1015)
!5459 = !DILocation(line: 2219, column: 1, scope: !1015)
!5460 = !DILocation(line: 864, column: 25, scope: !1071)
!5461 = !DILocation(line: 864, column: 41, scope: !1071)
!5462 = !DILocation(line: 866, column: 5, scope: !1071)
!5463 = !DILocation(line: 866, column: 9, scope: !1071)
!5464 = !DILocation(line: 866, column: 12, scope: !1071)
!5465 = !DILocation(line: 866, column: 15, scope: !1071)
!5466 = !DILocation(line: 867, column: 34, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !1071, file: !453, line: 867, column: 9)
!5468 = !DILocation(line: 867, column: 10, scope: !5467)
!5469 = !DILocation(line: 867, column: 9, scope: !1071)
!5470 = !DILocation(line: 868, column: 9, scope: !5467)
!5471 = !DILocation(line: 869, column: 40, scope: !1071)
!5472 = !DILocation(line: 869, column: 43, scope: !1071)
!5473 = !DILocation(line: 869, column: 46, scope: !1071)
!5474 = !DILocation(line: 869, column: 12, scope: !1071)
!5475 = !DILocation(line: 869, column: 5, scope: !1071)
!5476 = !DILocation(line: 870, column: 1, scope: !1071)
!5477 = !DILocation(line: 874, column: 28, scope: !1078)
!5478 = !DILocation(line: 874, column: 44, scope: !1078)
!5479 = !DILocation(line: 874, column: 60, scope: !1078)
!5480 = !DILocation(line: 878, column: 5, scope: !1078)
!5481 = !DILocation(line: 878, column: 9, scope: !1078)
!5482 = !DILocation(line: 880, column: 45, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !1078, file: !453, line: 880, column: 9)
!5484 = !DILocation(line: 880, column: 51, scope: !5483)
!5485 = !DILocation(line: 880, column: 59, scope: !5483)
!5486 = !DILocation(line: 881, column: 10, scope: !5483)
!5487 = !DILocation(line: 881, column: 24, scope: !5483)
!5488 = !DILocation(line: 881, column: 38, scope: !5483)
!5489 = !DILocation(line: 881, column: 52, scope: !5483)
!5490 = !DILocation(line: 881, column: 66, scope: !5483)
!5491 = !DILocation(line: 882, column: 10, scope: !5483)
!5492 = !DILocation(line: 882, column: 24, scope: !5483)
!5493 = !DILocation(line: 882, column: 38, scope: !5483)
!5494 = !DILocation(line: 882, column: 52, scope: !5483)
!5495 = !DILocation(line: 882, column: 66, scope: !5483)
!5496 = !DILocation(line: 880, column: 10, scope: !5483)
!5497 = !DILocation(line: 880, column: 9, scope: !1078)
!5498 = !DILocation(line: 883, column: 9, scope: !5483)
!5499 = !DILocation(line: 885, column: 9, scope: !1078)
!5500 = !DILocation(line: 885, column: 22, scope: !1078)
!5501 = !DILocation(line: 885, column: 35, scope: !1078)
!5502 = !DILocation(line: 885, column: 48, scope: !1078)
!5503 = !DILocation(line: 885, column: 61, scope: !1078)
!5504 = !DILocation(line: 886, column: 9, scope: !1078)
!5505 = !DILocation(line: 886, column: 22, scope: !1078)
!5506 = !DILocation(line: 886, column: 35, scope: !1078)
!5507 = !DILocation(line: 886, column: 48, scope: !1078)
!5508 = !DILocation(line: 886, column: 61, scope: !1078)
!5509 = !DILocation(line: 884, column: 12, scope: !1078)
!5510 = !DILocation(line: 884, column: 5, scope: !1078)
!5511 = !DILocation(line: 887, column: 1, scope: !1078)
!5512 = !DILocation(line: 891, column: 32, scope: !1087)
!5513 = !DILocation(line: 891, column: 48, scope: !1087)
!5514 = !DILocation(line: 891, column: 64, scope: !1087)
!5515 = !DILocation(line: 894, column: 5, scope: !1087)
!5516 = !DILocation(line: 894, column: 9, scope: !1087)
!5517 = !DILocation(line: 895, column: 5, scope: !1087)
!5518 = !DILocation(line: 895, column: 9, scope: !1087)
!5519 = !DILocation(line: 896, column: 5, scope: !1087)
!5520 = !DILocation(line: 896, column: 9, scope: !1087)
!5521 = !DILocation(line: 898, column: 45, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !1087, file: !453, line: 898, column: 9)
!5523 = !DILocation(line: 898, column: 51, scope: !5522)
!5524 = !DILocation(line: 898, column: 10, scope: !5522)
!5525 = !DILocation(line: 898, column: 9, scope: !1087)
!5526 = !DILocation(line: 900, column: 9, scope: !5522)
!5527 = !DILocation(line: 901, column: 40, scope: !1087)
!5528 = !DILocation(line: 901, column: 50, scope: !1087)
!5529 = !DILocation(line: 901, column: 60, scope: !1087)
!5530 = !DILocation(line: 901, column: 12, scope: !1087)
!5531 = !DILocation(line: 901, column: 5, scope: !1087)
!5532 = !DILocation(line: 902, column: 1, scope: !1087)
!5533 = !DILocation(line: 908, column: 21, scope: !1095)
!5534 = !DILocation(line: 908, column: 37, scope: !1095)
!5535 = !DILocation(line: 910, column: 5, scope: !1095)
!5536 = !DILocation(line: 910, column: 19, scope: !1095)
!5537 = !DILocation(line: 911, column: 34, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !1095, file: !453, line: 911, column: 9)
!5539 = !DILocation(line: 911, column: 10, scope: !5538)
!5540 = !DILocation(line: 911, column: 9, scope: !1095)
!5541 = !DILocation(line: 912, column: 9, scope: !5538)
!5542 = !DILocation(line: 913, column: 51, scope: !1095)
!5543 = !{!1943, !1943, i64 0}
!5544 = !DILocation(line: 913, column: 36, scope: !1095)
!5545 = !DILocation(line: 913, column: 12, scope: !1095)
!5546 = !DILocation(line: 913, column: 5, scope: !1095)
!5547 = !DILocation(line: 914, column: 1, scope: !1095)
!5548 = !DILocation(line: 917, column: 21, scope: !1100)
!5549 = !DILocation(line: 917, column: 37, scope: !1100)
!5550 = !DILocation(line: 919, column: 5, scope: !1100)
!5551 = !DILocation(line: 919, column: 19, scope: !1100)
!5552 = !DILocation(line: 920, column: 34, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !1100, file: !453, line: 920, column: 9)
!5554 = !DILocation(line: 920, column: 10, scope: !5553)
!5555 = !DILocation(line: 920, column: 9, scope: !1100)
!5556 = !DILocation(line: 921, column: 9, scope: !5553)
!5557 = !DILocation(line: 922, column: 51, scope: !1100)
!5558 = !DILocation(line: 922, column: 36, scope: !1100)
!5559 = !DILocation(line: 922, column: 12, scope: !1100)
!5560 = !DILocation(line: 922, column: 5, scope: !1100)
!5561 = !DILocation(line: 923, column: 1, scope: !1100)
!5562 = !DILocation(line: 926, column: 21, scope: !1105)
!5563 = !DILocation(line: 926, column: 37, scope: !1105)
!5564 = !DILocation(line: 928, column: 5, scope: !1105)
!5565 = !DILocation(line: 928, column: 11, scope: !1105)
!5566 = !DILocation(line: 929, column: 34, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !1105, file: !453, line: 929, column: 9)
!5568 = !DILocation(line: 929, column: 10, scope: !5567)
!5569 = !DILocation(line: 929, column: 9, scope: !1105)
!5570 = !DILocation(line: 930, column: 9, scope: !5567)
!5571 = !DILocation(line: 931, column: 34, scope: !1105)
!5572 = !{!5573, !5573, i64 0}
!5573 = !{!"short", !1943, i64 0}
!5574 = !DILocation(line: 931, column: 28, scope: !1105)
!5575 = !DILocation(line: 931, column: 12, scope: !1105)
!5576 = !DILocation(line: 931, column: 5, scope: !1105)
!5577 = !DILocation(line: 932, column: 1, scope: !1105)
!5578 = !DILocation(line: 935, column: 21, scope: !1110)
!5579 = !DILocation(line: 935, column: 37, scope: !1110)
!5580 = !DILocation(line: 937, column: 5, scope: !1110)
!5581 = !DILocation(line: 937, column: 20, scope: !1110)
!5582 = !DILocation(line: 938, column: 34, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !1110, file: !453, line: 938, column: 9)
!5584 = !DILocation(line: 938, column: 10, scope: !5583)
!5585 = !DILocation(line: 938, column: 9, scope: !1110)
!5586 = !DILocation(line: 939, column: 9, scope: !5583)
!5587 = !DILocation(line: 940, column: 51, scope: !1110)
!5588 = !DILocation(line: 940, column: 36, scope: !1110)
!5589 = !DILocation(line: 940, column: 12, scope: !1110)
!5590 = !DILocation(line: 940, column: 5, scope: !1110)
!5591 = !DILocation(line: 941, column: 1, scope: !1110)
!5592 = !DILocation(line: 944, column: 21, scope: !1115)
!5593 = !DILocation(line: 944, column: 37, scope: !1115)
!5594 = !DILocation(line: 946, column: 5, scope: !1115)
!5595 = !DILocation(line: 946, column: 18, scope: !1115)
!5596 = !DILocation(line: 947, column: 34, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !1115, file: !453, line: 947, column: 9)
!5598 = !DILocation(line: 947, column: 10, scope: !5597)
!5599 = !DILocation(line: 947, column: 9, scope: !1115)
!5600 = !DILocation(line: 948, column: 9, scope: !5597)
!5601 = !DILocation(line: 949, column: 51, scope: !1115)
!5602 = !DILocation(line: 949, column: 36, scope: !1115)
!5603 = !DILocation(line: 949, column: 12, scope: !1115)
!5604 = !DILocation(line: 949, column: 5, scope: !1115)
!5605 = !DILocation(line: 950, column: 1, scope: !1115)
!5606 = !DILocation(line: 953, column: 21, scope: !1120)
!5607 = !DILocation(line: 953, column: 37, scope: !1120)
!5608 = !DILocation(line: 955, column: 5, scope: !1120)
!5609 = !DILocation(line: 955, column: 19, scope: !1120)
!5610 = !DILocation(line: 956, column: 34, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !1120, file: !453, line: 956, column: 9)
!5612 = !DILocation(line: 956, column: 10, scope: !5611)
!5613 = !DILocation(line: 956, column: 9, scope: !1120)
!5614 = !DILocation(line: 957, column: 9, scope: !5611)
!5615 = !DILocation(line: 958, column: 36, scope: !1120)
!5616 = !DILocation(line: 958, column: 12, scope: !1120)
!5617 = !DILocation(line: 958, column: 5, scope: !1120)
!5618 = !DILocation(line: 959, column: 1, scope: !1120)
!5619 = !DILocation(line: 962, column: 21, scope: !1125)
!5620 = !DILocation(line: 962, column: 37, scope: !1125)
!5621 = !DILocation(line: 964, column: 5, scope: !1125)
!5622 = !DILocation(line: 964, column: 9, scope: !1125)
!5623 = !DILocation(line: 965, column: 34, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !1125, file: !453, line: 965, column: 9)
!5625 = !DILocation(line: 965, column: 10, scope: !5624)
!5626 = !DILocation(line: 965, column: 9, scope: !1125)
!5627 = !DILocation(line: 966, column: 9, scope: !5624)
!5628 = !DILocation(line: 967, column: 34, scope: !1125)
!5629 = !DILocation(line: 967, column: 28, scope: !1125)
!5630 = !DILocation(line: 967, column: 12, scope: !1125)
!5631 = !DILocation(line: 967, column: 5, scope: !1125)
!5632 = !DILocation(line: 968, column: 1, scope: !1125)
!5633 = !DILocation(line: 971, column: 21, scope: !1130)
!5634 = !DILocation(line: 971, column: 37, scope: !1130)
!5635 = !DILocation(line: 973, column: 5, scope: !1130)
!5636 = !DILocation(line: 973, column: 10, scope: !1130)
!5637 = !DILocation(line: 974, column: 34, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !1130, file: !453, line: 974, column: 9)
!5639 = !DILocation(line: 974, column: 10, scope: !5638)
!5640 = !DILocation(line: 974, column: 9, scope: !1130)
!5641 = !DILocation(line: 975, column: 9, scope: !5638)
!5642 = !DILocation(line: 976, column: 28, scope: !1130)
!5643 = !DILocation(line: 976, column: 12, scope: !1130)
!5644 = !DILocation(line: 976, column: 5, scope: !1130)
!5645 = !DILocation(line: 977, column: 1, scope: !1130)
!5646 = !DILocation(line: 980, column: 21, scope: !1135)
!5647 = !DILocation(line: 980, column: 37, scope: !1135)
!5648 = !DILocation(line: 982, column: 5, scope: !1135)
!5649 = !DILocation(line: 982, column: 16, scope: !1135)
!5650 = !DILocation(line: 983, column: 34, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !1135, file: !453, line: 983, column: 9)
!5652 = !DILocation(line: 983, column: 10, scope: !5651)
!5653 = !DILocation(line: 983, column: 9, scope: !1135)
!5654 = !DILocation(line: 984, column: 9, scope: !5651)
!5655 = !DILocation(line: 985, column: 31, scope: !1135)
!5656 = !DILocation(line: 985, column: 12, scope: !1135)
!5657 = !DILocation(line: 985, column: 5, scope: !1135)
!5658 = !DILocation(line: 986, column: 1, scope: !1135)
!5659 = !DILocation(line: 989, column: 21, scope: !1140)
!5660 = !DILocation(line: 989, column: 37, scope: !1140)
!5661 = !DILocation(line: 991, column: 5, scope: !1140)
!5662 = !DILocation(line: 991, column: 9, scope: !1140)
!5663 = !DILocation(line: 992, column: 34, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !1140, file: !453, line: 992, column: 9)
!5665 = !DILocation(line: 992, column: 10, scope: !5664)
!5666 = !DILocation(line: 992, column: 9, scope: !1140)
!5667 = !DILocation(line: 993, column: 9, scope: !5664)
!5668 = !DILocation(line: 994, column: 28, scope: !1140)
!5669 = !DILocation(line: 994, column: 12, scope: !1140)
!5670 = !DILocation(line: 994, column: 5, scope: !1140)
!5671 = !DILocation(line: 995, column: 1, scope: !1140)
!5672 = !DILocation(line: 999, column: 21, scope: !1145)
!5673 = !DILocation(line: 999, column: 37, scope: !1145)
!5674 = !DILocation(line: 1001, column: 5, scope: !1145)
!5675 = !DILocation(line: 1001, column: 15, scope: !1145)
!5676 = !DILocation(line: 1002, column: 34, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !1145, file: !453, line: 1002, column: 9)
!5678 = !DILocation(line: 1002, column: 10, scope: !5677)
!5679 = !DILocation(line: 1002, column: 9, scope: !1145)
!5680 = !DILocation(line: 1003, column: 9, scope: !5677)
!5681 = !DILocation(line: 1004, column: 32, scope: !1145)
!5682 = !{!5683, !5683, i64 0}
!5683 = !{!"long long", !1943, i64 0}
!5684 = !DILocation(line: 1004, column: 12, scope: !1145)
!5685 = !DILocation(line: 1004, column: 5, scope: !1145)
!5686 = !DILocation(line: 1005, column: 1, scope: !1145)
!5687 = !DILocation(line: 1008, column: 21, scope: !1150)
!5688 = !DILocation(line: 1008, column: 37, scope: !1150)
!5689 = !DILocation(line: 1010, column: 5, scope: !1150)
!5690 = !DILocation(line: 1010, column: 24, scope: !1150)
!5691 = !DILocation(line: 1011, column: 34, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !1150, file: !453, line: 1011, column: 9)
!5693 = !DILocation(line: 1011, column: 10, scope: !5692)
!5694 = !DILocation(line: 1011, column: 9, scope: !1150)
!5695 = !DILocation(line: 1012, column: 9, scope: !5692)
!5696 = !DILocation(line: 1013, column: 40, scope: !1150)
!5697 = !DILocation(line: 1013, column: 12, scope: !1150)
!5698 = !DILocation(line: 1013, column: 5, scope: !1150)
!5699 = !DILocation(line: 1014, column: 1, scope: !1150)
!5700 = !DILocation(line: 410, column: 29, scope: !1155)
!5701 = !DILocation(line: 410, column: 45, scope: !1155)
!5702 = !DILocation(line: 412, column: 12, scope: !1155)
!5703 = !DILocation(line: 412, column: 5, scope: !1155)
!5704 = !DILocation(line: 593, column: 39, scope: !1219)
!5705 = !DILocation(line: 595, column: 5, scope: !1219)
!5706 = !DILocation(line: 595, column: 15, scope: !1219)
!5707 = !DILocation(line: 595, column: 21, scope: !1219)
!5708 = !DILocation(line: 595, column: 27, scope: !1219)
!5709 = !DILocation(line: 596, column: 5, scope: !1219)
!5710 = !DILocation(line: 596, column: 15, scope: !1219)
!5711 = !DILocation(line: 597, column: 5, scope: !1219)
!5712 = !DILocation(line: 597, column: 9, scope: !1219)
!5713 = !DILocation(line: 601, column: 11, scope: !1219)
!5714 = !DILocation(line: 601, column: 9, scope: !1219)
!5715 = !DILocation(line: 602, column: 9, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 602, column: 9)
!5717 = !DILocation(line: 602, column: 13, scope: !5716)
!5718 = !DILocation(line: 602, column: 9, scope: !1219)
!5719 = !DILocation(line: 603, column: 9, scope: !5716)
!5720 = !DILocation(line: 604, column: 14, scope: !1219)
!5721 = !DILocation(line: 605, column: 42, scope: !1219)
!5722 = !DILocation(line: 605, column: 13, scope: !1219)
!5723 = !DILocation(line: 605, column: 11, scope: !1219)
!5724 = !DILocation(line: 606, column: 5, scope: !1219)
!5725 = !DILocation(line: 606, column: 10, scope: !5726)
!5726 = !DILexicalBlockFile(scope: !1228, file: !453, discriminator: 1)
!5727 = !DILocation(line: 606, column: 20, scope: !1228)
!5728 = !DILocation(line: 606, column: 50, scope: !1228)
!5729 = !DILocation(line: 606, column: 64, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !1228, file: !453, line: 606, column: 61)
!5731 = !DILocation(line: 606, column: 81, scope: !5730)
!5732 = !DILocation(line: 606, column: 61, scope: !5730)
!5733 = !DILocation(line: 606, column: 91, scope: !5730)
!5734 = !DILocation(line: 606, column: 61, scope: !1228)
!5735 = !DILocation(line: 606, column: 61, scope: !5736)
!5736 = !DILexicalBlockFile(scope: !1228, file: !453, discriminator: 2)
!5737 = !DILocation(line: 606, column: 122, scope: !5738)
!5738 = !DILexicalBlockFile(scope: !5730, file: !453, discriminator: 3)
!5739 = !DILocation(line: 606, column: 140, scope: !5730)
!5740 = !DILocation(line: 606, column: 150, scope: !5730)
!5741 = !DILocation(line: 606, column: 175, scope: !5730)
!5742 = !DILocation(line: 606, column: 106, scope: !5730)
!5743 = !DILocation(line: 606, column: 194, scope: !5744)
!5744 = !DILexicalBlockFile(scope: !1219, file: !453, discriminator: 4)
!5745 = !DILocation(line: 606, column: 194, scope: !1228)
!5746 = !DILocation(line: 606, column: 194, scope: !5747)
!5747 = !DILexicalBlockFile(scope: !1228, file: !453, discriminator: 5)
!5748 = !DILocation(line: 607, column: 9, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 607, column: 9)
!5750 = !DILocation(line: 607, column: 15, scope: !5749)
!5751 = !DILocation(line: 607, column: 21, scope: !5749)
!5752 = !DILocation(line: 607, column: 24, scope: !5753)
!5753 = !DILexicalBlockFile(scope: !5749, file: !453, discriminator: 1)
!5754 = !DILocation(line: 607, column: 9, scope: !1219)
!5755 = !DILocation(line: 608, column: 9, scope: !5749)
!5756 = !DILocation(line: 609, column: 9, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 609, column: 9)
!5758 = !DILocation(line: 609, column: 15, scope: !5757)
!5759 = !DILocation(line: 609, column: 9, scope: !1219)
!5760 = !DILocation(line: 610, column: 16, scope: !5757)
!5761 = !DILocation(line: 610, column: 9, scope: !5757)
!5762 = !DILocation(line: 612, column: 9, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 612, column: 9)
!5764 = !DILocation(line: 612, column: 18, scope: !5763)
!5765 = !DILocation(line: 612, column: 9, scope: !1219)
!5766 = !DILocation(line: 613, column: 16, scope: !5763)
!5767 = !DILocation(line: 613, column: 9, scope: !5763)
!5768 = !DILocation(line: 617, column: 11, scope: !1219)
!5769 = !DILocation(line: 617, column: 9, scope: !1219)
!5770 = !DILocation(line: 618, column: 9, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 618, column: 9)
!5772 = !DILocation(line: 618, column: 13, scope: !5771)
!5773 = !DILocation(line: 618, column: 9, scope: !1219)
!5774 = !DILocation(line: 619, column: 9, scope: !5771)
!5775 = !DILocation(line: 620, column: 11, scope: !1219)
!5776 = !DILocation(line: 620, column: 9, scope: !1219)
!5777 = !DILocation(line: 621, column: 9, scope: !1232)
!5778 = !DILocation(line: 621, column: 13, scope: !1232)
!5779 = !DILocation(line: 621, column: 9, scope: !1219)
!5780 = !DILocation(line: 622, column: 9, scope: !1231)
!5781 = !DILocation(line: 622, column: 14, scope: !5782)
!5782 = !DILexicalBlockFile(scope: !1230, file: !453, discriminator: 1)
!5783 = !DILocation(line: 622, column: 24, scope: !1230)
!5784 = !DILocation(line: 622, column: 54, scope: !1230)
!5785 = !DILocation(line: 622, column: 68, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !1230, file: !453, line: 622, column: 65)
!5787 = !DILocation(line: 622, column: 85, scope: !5786)
!5788 = !DILocation(line: 622, column: 65, scope: !5786)
!5789 = !DILocation(line: 622, column: 95, scope: !5786)
!5790 = !DILocation(line: 622, column: 65, scope: !1230)
!5791 = !DILocation(line: 622, column: 65, scope: !5792)
!5792 = !DILexicalBlockFile(scope: !1230, file: !453, discriminator: 2)
!5793 = !DILocation(line: 622, column: 126, scope: !5794)
!5794 = !DILexicalBlockFile(scope: !5786, file: !453, discriminator: 3)
!5795 = !DILocation(line: 622, column: 144, scope: !5786)
!5796 = !DILocation(line: 622, column: 154, scope: !5786)
!5797 = !DILocation(line: 622, column: 179, scope: !5786)
!5798 = !DILocation(line: 622, column: 110, scope: !5786)
!5799 = !DILocation(line: 622, column: 198, scope: !5800)
!5800 = !DILexicalBlockFile(scope: !1231, file: !453, discriminator: 4)
!5801 = !DILocation(line: 622, column: 198, scope: !1230)
!5802 = !DILocation(line: 622, column: 198, scope: !5803)
!5803 = !DILexicalBlockFile(scope: !1230, file: !453, discriminator: 5)
!5804 = !DILocation(line: 623, column: 9, scope: !1231)
!5805 = !DILocation(line: 625, column: 25, scope: !1219)
!5806 = !DILocation(line: 625, column: 30, scope: !1219)
!5807 = !DILocation(line: 625, column: 12, scope: !1219)
!5808 = !DILocation(line: 625, column: 10, scope: !1219)
!5809 = !DILocation(line: 626, column: 5, scope: !1219)
!5810 = !DILocation(line: 626, column: 10, scope: !5811)
!5811 = !DILexicalBlockFile(scope: !1234, file: !453, discriminator: 1)
!5812 = !DILocation(line: 626, column: 20, scope: !1234)
!5813 = !DILocation(line: 626, column: 50, scope: !1234)
!5814 = !DILocation(line: 626, column: 64, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !1234, file: !453, line: 626, column: 61)
!5816 = !DILocation(line: 626, column: 81, scope: !5815)
!5817 = !DILocation(line: 626, column: 61, scope: !5815)
!5818 = !DILocation(line: 626, column: 91, scope: !5815)
!5819 = !DILocation(line: 626, column: 61, scope: !1234)
!5820 = !DILocation(line: 626, column: 61, scope: !5821)
!5821 = !DILexicalBlockFile(scope: !1234, file: !453, discriminator: 2)
!5822 = !DILocation(line: 626, column: 122, scope: !5823)
!5823 = !DILexicalBlockFile(scope: !5815, file: !453, discriminator: 3)
!5824 = !DILocation(line: 626, column: 140, scope: !5815)
!5825 = !DILocation(line: 626, column: 150, scope: !5815)
!5826 = !DILocation(line: 626, column: 175, scope: !5815)
!5827 = !DILocation(line: 626, column: 106, scope: !5815)
!5828 = !DILocation(line: 626, column: 194, scope: !5744)
!5829 = !DILocation(line: 626, column: 194, scope: !1234)
!5830 = !DILocation(line: 626, column: 194, scope: !5831)
!5831 = !DILexicalBlockFile(scope: !1234, file: !453, discriminator: 5)
!5832 = !DILocation(line: 627, column: 5, scope: !1219)
!5833 = !DILocation(line: 627, column: 10, scope: !5834)
!5834 = !DILexicalBlockFile(scope: !1236, file: !453, discriminator: 1)
!5835 = !DILocation(line: 627, column: 20, scope: !1236)
!5836 = !DILocation(line: 627, column: 50, scope: !1236)
!5837 = !DILocation(line: 627, column: 64, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !1236, file: !453, line: 627, column: 61)
!5839 = !DILocation(line: 627, column: 81, scope: !5838)
!5840 = !DILocation(line: 627, column: 61, scope: !5838)
!5841 = !DILocation(line: 627, column: 91, scope: !5838)
!5842 = !DILocation(line: 627, column: 61, scope: !1236)
!5843 = !DILocation(line: 627, column: 61, scope: !5844)
!5844 = !DILexicalBlockFile(scope: !1236, file: !453, discriminator: 2)
!5845 = !DILocation(line: 627, column: 122, scope: !5846)
!5846 = !DILexicalBlockFile(scope: !5838, file: !453, discriminator: 3)
!5847 = !DILocation(line: 627, column: 140, scope: !5838)
!5848 = !DILocation(line: 627, column: 150, scope: !5838)
!5849 = !DILocation(line: 627, column: 175, scope: !5838)
!5850 = !DILocation(line: 627, column: 106, scope: !5838)
!5851 = !DILocation(line: 627, column: 194, scope: !5744)
!5852 = !DILocation(line: 627, column: 194, scope: !1236)
!5853 = !DILocation(line: 627, column: 194, scope: !5854)
!5854 = !DILexicalBlockFile(scope: !1236, file: !453, discriminator: 5)
!5855 = !DILocation(line: 628, column: 11, scope: !1219)
!5856 = !DILocation(line: 628, column: 9, scope: !1219)
!5857 = !DILocation(line: 629, column: 9, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 629, column: 9)
!5859 = !DILocation(line: 629, column: 13, scope: !5858)
!5860 = !DILocation(line: 629, column: 9, scope: !1219)
!5861 = !DILocation(line: 630, column: 9, scope: !5858)
!5862 = !DILocation(line: 631, column: 14, scope: !1219)
!5863 = !DILocation(line: 632, column: 42, scope: !1219)
!5864 = !DILocation(line: 632, column: 13, scope: !1219)
!5865 = !DILocation(line: 632, column: 11, scope: !1219)
!5866 = !DILocation(line: 633, column: 5, scope: !1219)
!5867 = !DILocation(line: 633, column: 10, scope: !5868)
!5868 = !DILexicalBlockFile(scope: !1238, file: !453, discriminator: 1)
!5869 = !DILocation(line: 633, column: 20, scope: !1238)
!5870 = !DILocation(line: 633, column: 50, scope: !1238)
!5871 = !DILocation(line: 633, column: 64, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !1238, file: !453, line: 633, column: 61)
!5873 = !DILocation(line: 633, column: 81, scope: !5872)
!5874 = !DILocation(line: 633, column: 61, scope: !5872)
!5875 = !DILocation(line: 633, column: 91, scope: !5872)
!5876 = !DILocation(line: 633, column: 61, scope: !1238)
!5877 = !DILocation(line: 633, column: 61, scope: !5878)
!5878 = !DILexicalBlockFile(scope: !1238, file: !453, discriminator: 2)
!5879 = !DILocation(line: 633, column: 122, scope: !5880)
!5880 = !DILexicalBlockFile(scope: !5872, file: !453, discriminator: 3)
!5881 = !DILocation(line: 633, column: 140, scope: !5872)
!5882 = !DILocation(line: 633, column: 150, scope: !5872)
!5883 = !DILocation(line: 633, column: 175, scope: !5872)
!5884 = !DILocation(line: 633, column: 106, scope: !5872)
!5885 = !DILocation(line: 633, column: 194, scope: !5744)
!5886 = !DILocation(line: 633, column: 194, scope: !1238)
!5887 = !DILocation(line: 633, column: 194, scope: !5888)
!5888 = !DILexicalBlockFile(scope: !1238, file: !453, discriminator: 5)
!5889 = !DILocation(line: 634, column: 9, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 634, column: 9)
!5891 = !DILocation(line: 634, column: 15, scope: !5890)
!5892 = !DILocation(line: 634, column: 21, scope: !5890)
!5893 = !DILocation(line: 634, column: 24, scope: !5894)
!5894 = !DILexicalBlockFile(scope: !5890, file: !453, discriminator: 1)
!5895 = !DILocation(line: 634, column: 9, scope: !1219)
!5896 = !DILocation(line: 635, column: 9, scope: !5890)
!5897 = !DILocation(line: 636, column: 9, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 636, column: 9)
!5899 = !DILocation(line: 636, column: 15, scope: !5898)
!5900 = !DILocation(line: 636, column: 9, scope: !1219)
!5901 = !DILocation(line: 637, column: 16, scope: !5898)
!5902 = !DILocation(line: 637, column: 9, scope: !5898)
!5903 = !DILocation(line: 639, column: 9, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 639, column: 9)
!5905 = !DILocation(line: 639, column: 18, scope: !5904)
!5906 = !DILocation(line: 639, column: 9, scope: !1219)
!5907 = !DILocation(line: 640, column: 16, scope: !5904)
!5908 = !DILocation(line: 640, column: 9, scope: !5904)
!5909 = !DILocation(line: 645, column: 11, scope: !1219)
!5910 = !DILocation(line: 645, column: 9, scope: !1219)
!5911 = !DILocation(line: 646, column: 9, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 646, column: 9)
!5913 = !DILocation(line: 646, column: 13, scope: !5912)
!5914 = !DILocation(line: 646, column: 9, scope: !1219)
!5915 = !DILocation(line: 647, column: 9, scope: !5912)
!5916 = !DILocation(line: 648, column: 14, scope: !1219)
!5917 = !DILocation(line: 649, column: 42, scope: !1219)
!5918 = !DILocation(line: 649, column: 13, scope: !1219)
!5919 = !DILocation(line: 649, column: 11, scope: !1219)
!5920 = !DILocation(line: 650, column: 5, scope: !1219)
!5921 = !DILocation(line: 650, column: 10, scope: !5922)
!5922 = !DILexicalBlockFile(scope: !1240, file: !453, discriminator: 1)
!5923 = !DILocation(line: 650, column: 20, scope: !1240)
!5924 = !DILocation(line: 650, column: 50, scope: !1240)
!5925 = !DILocation(line: 650, column: 64, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !1240, file: !453, line: 650, column: 61)
!5927 = !DILocation(line: 650, column: 81, scope: !5926)
!5928 = !DILocation(line: 650, column: 61, scope: !5926)
!5929 = !DILocation(line: 650, column: 91, scope: !5926)
!5930 = !DILocation(line: 650, column: 61, scope: !1240)
!5931 = !DILocation(line: 650, column: 61, scope: !5932)
!5932 = !DILexicalBlockFile(scope: !1240, file: !453, discriminator: 2)
!5933 = !DILocation(line: 650, column: 122, scope: !5934)
!5934 = !DILexicalBlockFile(scope: !5926, file: !453, discriminator: 3)
!5935 = !DILocation(line: 650, column: 140, scope: !5926)
!5936 = !DILocation(line: 650, column: 150, scope: !5926)
!5937 = !DILocation(line: 650, column: 175, scope: !5926)
!5938 = !DILocation(line: 650, column: 106, scope: !5926)
!5939 = !DILocation(line: 650, column: 194, scope: !5744)
!5940 = !DILocation(line: 650, column: 194, scope: !1240)
!5941 = !DILocation(line: 650, column: 194, scope: !5942)
!5942 = !DILexicalBlockFile(scope: !1240, file: !453, discriminator: 5)
!5943 = !DILocation(line: 651, column: 9, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 651, column: 9)
!5945 = !DILocation(line: 651, column: 15, scope: !5944)
!5946 = !DILocation(line: 651, column: 21, scope: !5944)
!5947 = !DILocation(line: 651, column: 24, scope: !5948)
!5948 = !DILexicalBlockFile(scope: !5944, file: !453, discriminator: 1)
!5949 = !DILocation(line: 651, column: 9, scope: !1219)
!5950 = !DILocation(line: 652, column: 9, scope: !5944)
!5951 = !DILocation(line: 653, column: 9, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 653, column: 9)
!5953 = !DILocation(line: 653, column: 15, scope: !5952)
!5954 = !DILocation(line: 653, column: 9, scope: !1219)
!5955 = !DILocation(line: 654, column: 16, scope: !5952)
!5956 = !DILocation(line: 654, column: 9, scope: !5952)
!5957 = !DILocation(line: 656, column: 9, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 656, column: 9)
!5959 = !DILocation(line: 656, column: 18, scope: !5958)
!5960 = !DILocation(line: 656, column: 9, scope: !1219)
!5961 = !DILocation(line: 657, column: 16, scope: !5958)
!5962 = !DILocation(line: 657, column: 9, scope: !5958)
!5963 = !DILocation(line: 661, column: 11, scope: !1219)
!5964 = !DILocation(line: 661, column: 9, scope: !1219)
!5965 = !DILocation(line: 662, column: 9, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 662, column: 9)
!5967 = !DILocation(line: 662, column: 13, scope: !5966)
!5968 = !DILocation(line: 662, column: 9, scope: !1219)
!5969 = !DILocation(line: 663, column: 9, scope: !5966)
!5970 = !DILocation(line: 664, column: 11, scope: !1219)
!5971 = !DILocation(line: 664, column: 9, scope: !1219)
!5972 = !DILocation(line: 665, column: 9, scope: !1244)
!5973 = !DILocation(line: 665, column: 13, scope: !1244)
!5974 = !DILocation(line: 665, column: 9, scope: !1219)
!5975 = !DILocation(line: 666, column: 9, scope: !1243)
!5976 = !DILocation(line: 666, column: 14, scope: !5977)
!5977 = !DILexicalBlockFile(scope: !1242, file: !453, discriminator: 1)
!5978 = !DILocation(line: 666, column: 24, scope: !1242)
!5979 = !DILocation(line: 666, column: 54, scope: !1242)
!5980 = !DILocation(line: 666, column: 68, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !1242, file: !453, line: 666, column: 65)
!5982 = !DILocation(line: 666, column: 85, scope: !5981)
!5983 = !DILocation(line: 666, column: 65, scope: !5981)
!5984 = !DILocation(line: 666, column: 95, scope: !5981)
!5985 = !DILocation(line: 666, column: 65, scope: !1242)
!5986 = !DILocation(line: 666, column: 65, scope: !5987)
!5987 = !DILexicalBlockFile(scope: !1242, file: !453, discriminator: 2)
!5988 = !DILocation(line: 666, column: 126, scope: !5989)
!5989 = !DILexicalBlockFile(scope: !5981, file: !453, discriminator: 3)
!5990 = !DILocation(line: 666, column: 144, scope: !5981)
!5991 = !DILocation(line: 666, column: 154, scope: !5981)
!5992 = !DILocation(line: 666, column: 179, scope: !5981)
!5993 = !DILocation(line: 666, column: 110, scope: !5981)
!5994 = !DILocation(line: 666, column: 198, scope: !5995)
!5995 = !DILexicalBlockFile(scope: !1243, file: !453, discriminator: 4)
!5996 = !DILocation(line: 666, column: 198, scope: !1242)
!5997 = !DILocation(line: 666, column: 198, scope: !5998)
!5998 = !DILexicalBlockFile(scope: !1242, file: !453, discriminator: 5)
!5999 = !DILocation(line: 667, column: 9, scope: !1243)
!6000 = !DILocation(line: 669, column: 30, scope: !1219)
!6001 = !DILocation(line: 669, column: 35, scope: !1219)
!6002 = !DILocation(line: 669, column: 12, scope: !1219)
!6003 = !DILocation(line: 669, column: 10, scope: !1219)
!6004 = !DILocation(line: 670, column: 5, scope: !1219)
!6005 = !DILocation(line: 670, column: 10, scope: !6006)
!6006 = !DILexicalBlockFile(scope: !1246, file: !453, discriminator: 1)
!6007 = !DILocation(line: 670, column: 20, scope: !1246)
!6008 = !DILocation(line: 670, column: 50, scope: !1246)
!6009 = !DILocation(line: 670, column: 64, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !1246, file: !453, line: 670, column: 61)
!6011 = !DILocation(line: 670, column: 81, scope: !6010)
!6012 = !DILocation(line: 670, column: 61, scope: !6010)
!6013 = !DILocation(line: 670, column: 91, scope: !6010)
!6014 = !DILocation(line: 670, column: 61, scope: !1246)
!6015 = !DILocation(line: 670, column: 61, scope: !6016)
!6016 = !DILexicalBlockFile(scope: !1246, file: !453, discriminator: 2)
!6017 = !DILocation(line: 670, column: 122, scope: !6018)
!6018 = !DILexicalBlockFile(scope: !6010, file: !453, discriminator: 3)
!6019 = !DILocation(line: 670, column: 140, scope: !6010)
!6020 = !DILocation(line: 670, column: 150, scope: !6010)
!6021 = !DILocation(line: 670, column: 175, scope: !6010)
!6022 = !DILocation(line: 670, column: 106, scope: !6010)
!6023 = !DILocation(line: 670, column: 194, scope: !5744)
!6024 = !DILocation(line: 670, column: 194, scope: !1246)
!6025 = !DILocation(line: 670, column: 194, scope: !6026)
!6026 = !DILexicalBlockFile(scope: !1246, file: !453, discriminator: 5)
!6027 = !DILocation(line: 671, column: 5, scope: !1219)
!6028 = !DILocation(line: 671, column: 10, scope: !6029)
!6029 = !DILexicalBlockFile(scope: !1248, file: !453, discriminator: 1)
!6030 = !DILocation(line: 671, column: 20, scope: !1248)
!6031 = !DILocation(line: 671, column: 50, scope: !1248)
!6032 = !DILocation(line: 671, column: 64, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !1248, file: !453, line: 671, column: 61)
!6034 = !DILocation(line: 671, column: 81, scope: !6033)
!6035 = !DILocation(line: 671, column: 61, scope: !6033)
!6036 = !DILocation(line: 671, column: 91, scope: !6033)
!6037 = !DILocation(line: 671, column: 61, scope: !1248)
!6038 = !DILocation(line: 671, column: 61, scope: !6039)
!6039 = !DILexicalBlockFile(scope: !1248, file: !453, discriminator: 2)
!6040 = !DILocation(line: 671, column: 122, scope: !6041)
!6041 = !DILexicalBlockFile(scope: !6033, file: !453, discriminator: 3)
!6042 = !DILocation(line: 671, column: 140, scope: !6033)
!6043 = !DILocation(line: 671, column: 150, scope: !6033)
!6044 = !DILocation(line: 671, column: 175, scope: !6033)
!6045 = !DILocation(line: 671, column: 106, scope: !6033)
!6046 = !DILocation(line: 671, column: 194, scope: !5744)
!6047 = !DILocation(line: 671, column: 194, scope: !1248)
!6048 = !DILocation(line: 671, column: 194, scope: !6049)
!6049 = !DILexicalBlockFile(scope: !1248, file: !453, discriminator: 5)
!6050 = !DILocation(line: 672, column: 11, scope: !1219)
!6051 = !DILocation(line: 672, column: 9, scope: !1219)
!6052 = !DILocation(line: 673, column: 9, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 673, column: 9)
!6054 = !DILocation(line: 673, column: 13, scope: !6053)
!6055 = !DILocation(line: 673, column: 9, scope: !1219)
!6056 = !DILocation(line: 674, column: 9, scope: !6053)
!6057 = !DILocation(line: 675, column: 14, scope: !1219)
!6058 = !DILocation(line: 676, column: 42, scope: !1219)
!6059 = !DILocation(line: 676, column: 13, scope: !1219)
!6060 = !DILocation(line: 676, column: 11, scope: !1219)
!6061 = !DILocation(line: 677, column: 5, scope: !1219)
!6062 = !DILocation(line: 677, column: 10, scope: !6063)
!6063 = !DILexicalBlockFile(scope: !1250, file: !453, discriminator: 1)
!6064 = !DILocation(line: 677, column: 20, scope: !1250)
!6065 = !DILocation(line: 677, column: 50, scope: !1250)
!6066 = !DILocation(line: 677, column: 64, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !1250, file: !453, line: 677, column: 61)
!6068 = !DILocation(line: 677, column: 81, scope: !6067)
!6069 = !DILocation(line: 677, column: 61, scope: !6067)
!6070 = !DILocation(line: 677, column: 91, scope: !6067)
!6071 = !DILocation(line: 677, column: 61, scope: !1250)
!6072 = !DILocation(line: 677, column: 61, scope: !6073)
!6073 = !DILexicalBlockFile(scope: !1250, file: !453, discriminator: 2)
!6074 = !DILocation(line: 677, column: 122, scope: !6075)
!6075 = !DILexicalBlockFile(scope: !6067, file: !453, discriminator: 3)
!6076 = !DILocation(line: 677, column: 140, scope: !6067)
!6077 = !DILocation(line: 677, column: 150, scope: !6067)
!6078 = !DILocation(line: 677, column: 175, scope: !6067)
!6079 = !DILocation(line: 677, column: 106, scope: !6067)
!6080 = !DILocation(line: 677, column: 194, scope: !5744)
!6081 = !DILocation(line: 677, column: 194, scope: !1250)
!6082 = !DILocation(line: 677, column: 194, scope: !6083)
!6083 = !DILexicalBlockFile(scope: !1250, file: !453, discriminator: 5)
!6084 = !DILocation(line: 678, column: 9, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 678, column: 9)
!6086 = !DILocation(line: 678, column: 15, scope: !6085)
!6087 = !DILocation(line: 678, column: 21, scope: !6085)
!6088 = !DILocation(line: 678, column: 24, scope: !6089)
!6089 = !DILexicalBlockFile(scope: !6085, file: !453, discriminator: 1)
!6090 = !DILocation(line: 678, column: 9, scope: !1219)
!6091 = !DILocation(line: 679, column: 9, scope: !6085)
!6092 = !DILocation(line: 680, column: 9, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 680, column: 9)
!6094 = !DILocation(line: 680, column: 15, scope: !6093)
!6095 = !DILocation(line: 680, column: 9, scope: !1219)
!6096 = !DILocation(line: 681, column: 16, scope: !6093)
!6097 = !DILocation(line: 681, column: 9, scope: !6093)
!6098 = !DILocation(line: 683, column: 9, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 683, column: 9)
!6100 = !DILocation(line: 683, column: 18, scope: !6099)
!6101 = !DILocation(line: 683, column: 9, scope: !1219)
!6102 = !DILocation(line: 684, column: 16, scope: !6099)
!6103 = !DILocation(line: 684, column: 9, scope: !6099)
!6104 = !DILocation(line: 688, column: 11, scope: !1219)
!6105 = !DILocation(line: 688, column: 9, scope: !1219)
!6106 = !DILocation(line: 689, column: 9, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 689, column: 9)
!6108 = !DILocation(line: 689, column: 13, scope: !6107)
!6109 = !DILocation(line: 689, column: 9, scope: !1219)
!6110 = !DILocation(line: 690, column: 9, scope: !6107)
!6111 = !DILocation(line: 691, column: 14, scope: !1219)
!6112 = !DILocation(line: 692, column: 42, scope: !1219)
!6113 = !DILocation(line: 692, column: 13, scope: !1219)
!6114 = !DILocation(line: 692, column: 11, scope: !1219)
!6115 = !DILocation(line: 693, column: 5, scope: !1219)
!6116 = !DILocation(line: 693, column: 10, scope: !6117)
!6117 = !DILexicalBlockFile(scope: !1252, file: !453, discriminator: 1)
!6118 = !DILocation(line: 693, column: 20, scope: !1252)
!6119 = !DILocation(line: 693, column: 50, scope: !1252)
!6120 = !DILocation(line: 693, column: 64, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !1252, file: !453, line: 693, column: 61)
!6122 = !DILocation(line: 693, column: 81, scope: !6121)
!6123 = !DILocation(line: 693, column: 61, scope: !6121)
!6124 = !DILocation(line: 693, column: 91, scope: !6121)
!6125 = !DILocation(line: 693, column: 61, scope: !1252)
!6126 = !DILocation(line: 693, column: 61, scope: !6127)
!6127 = !DILexicalBlockFile(scope: !1252, file: !453, discriminator: 2)
!6128 = !DILocation(line: 693, column: 122, scope: !6129)
!6129 = !DILexicalBlockFile(scope: !6121, file: !453, discriminator: 3)
!6130 = !DILocation(line: 693, column: 140, scope: !6121)
!6131 = !DILocation(line: 693, column: 150, scope: !6121)
!6132 = !DILocation(line: 693, column: 175, scope: !6121)
!6133 = !DILocation(line: 693, column: 106, scope: !6121)
!6134 = !DILocation(line: 693, column: 194, scope: !5744)
!6135 = !DILocation(line: 693, column: 194, scope: !1252)
!6136 = !DILocation(line: 693, column: 194, scope: !6137)
!6137 = !DILexicalBlockFile(scope: !1252, file: !453, discriminator: 5)
!6138 = !DILocation(line: 694, column: 9, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 694, column: 9)
!6140 = !DILocation(line: 694, column: 15, scope: !6139)
!6141 = !DILocation(line: 694, column: 21, scope: !6139)
!6142 = !DILocation(line: 694, column: 24, scope: !6143)
!6143 = !DILexicalBlockFile(scope: !6139, file: !453, discriminator: 1)
!6144 = !DILocation(line: 694, column: 9, scope: !1219)
!6145 = !DILocation(line: 695, column: 9, scope: !6139)
!6146 = !DILocation(line: 696, column: 9, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 696, column: 9)
!6148 = !DILocation(line: 696, column: 15, scope: !6147)
!6149 = !DILocation(line: 696, column: 9, scope: !1219)
!6150 = !DILocation(line: 697, column: 16, scope: !6147)
!6151 = !DILocation(line: 697, column: 9, scope: !6147)
!6152 = !DILocation(line: 699, column: 9, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 699, column: 9)
!6154 = !DILocation(line: 699, column: 18, scope: !6153)
!6155 = !DILocation(line: 699, column: 9, scope: !1219)
!6156 = !DILocation(line: 700, column: 16, scope: !6153)
!6157 = !DILocation(line: 700, column: 9, scope: !6153)
!6158 = !DILocation(line: 703, column: 11, scope: !1219)
!6159 = !DILocation(line: 703, column: 9, scope: !1219)
!6160 = !DILocation(line: 704, column: 9, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 704, column: 9)
!6162 = !DILocation(line: 704, column: 13, scope: !6161)
!6163 = !DILocation(line: 704, column: 9, scope: !1219)
!6164 = !DILocation(line: 705, column: 9, scope: !6161)
!6165 = !DILocation(line: 706, column: 14, scope: !1219)
!6166 = !DILocation(line: 707, column: 42, scope: !1219)
!6167 = !DILocation(line: 707, column: 13, scope: !1219)
!6168 = !DILocation(line: 707, column: 11, scope: !1219)
!6169 = !DILocation(line: 708, column: 5, scope: !1219)
!6170 = !DILocation(line: 708, column: 10, scope: !6171)
!6171 = !DILexicalBlockFile(scope: !1254, file: !453, discriminator: 1)
!6172 = !DILocation(line: 708, column: 20, scope: !1254)
!6173 = !DILocation(line: 708, column: 50, scope: !1254)
!6174 = !DILocation(line: 708, column: 64, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !1254, file: !453, line: 708, column: 61)
!6176 = !DILocation(line: 708, column: 81, scope: !6175)
!6177 = !DILocation(line: 708, column: 61, scope: !6175)
!6178 = !DILocation(line: 708, column: 91, scope: !6175)
!6179 = !DILocation(line: 708, column: 61, scope: !1254)
!6180 = !DILocation(line: 708, column: 61, scope: !6181)
!6181 = !DILexicalBlockFile(scope: !1254, file: !453, discriminator: 2)
!6182 = !DILocation(line: 708, column: 122, scope: !6183)
!6183 = !DILexicalBlockFile(scope: !6175, file: !453, discriminator: 3)
!6184 = !DILocation(line: 708, column: 140, scope: !6175)
!6185 = !DILocation(line: 708, column: 150, scope: !6175)
!6186 = !DILocation(line: 708, column: 175, scope: !6175)
!6187 = !DILocation(line: 708, column: 106, scope: !6175)
!6188 = !DILocation(line: 708, column: 194, scope: !5744)
!6189 = !DILocation(line: 708, column: 194, scope: !1254)
!6190 = !DILocation(line: 708, column: 194, scope: !6191)
!6191 = !DILexicalBlockFile(scope: !1254, file: !453, discriminator: 5)
!6192 = !DILocation(line: 709, column: 9, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 709, column: 9)
!6194 = !DILocation(line: 709, column: 15, scope: !6193)
!6195 = !DILocation(line: 709, column: 21, scope: !6193)
!6196 = !DILocation(line: 709, column: 24, scope: !6197)
!6197 = !DILexicalBlockFile(scope: !6193, file: !453, discriminator: 1)
!6198 = !DILocation(line: 709, column: 9, scope: !1219)
!6199 = !DILocation(line: 710, column: 9, scope: !6193)
!6200 = !DILocation(line: 711, column: 9, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 711, column: 9)
!6202 = !DILocation(line: 711, column: 15, scope: !6201)
!6203 = !DILocation(line: 711, column: 9, scope: !1219)
!6204 = !DILocation(line: 712, column: 16, scope: !6201)
!6205 = !DILocation(line: 712, column: 9, scope: !6201)
!6206 = !DILocation(line: 714, column: 9, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 714, column: 9)
!6208 = !DILocation(line: 714, column: 18, scope: !6207)
!6209 = !DILocation(line: 714, column: 9, scope: !1219)
!6210 = !DILocation(line: 715, column: 16, scope: !6207)
!6211 = !DILocation(line: 715, column: 9, scope: !6207)
!6212 = !DILocation(line: 718, column: 11, scope: !1219)
!6213 = !DILocation(line: 718, column: 9, scope: !1219)
!6214 = !DILocation(line: 719, column: 9, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 719, column: 9)
!6216 = !DILocation(line: 719, column: 13, scope: !6215)
!6217 = !DILocation(line: 719, column: 9, scope: !1219)
!6218 = !DILocation(line: 720, column: 9, scope: !6215)
!6219 = !DILocation(line: 721, column: 14, scope: !1219)
!6220 = !DILocation(line: 722, column: 42, scope: !1219)
!6221 = !DILocation(line: 722, column: 13, scope: !1219)
!6222 = !DILocation(line: 722, column: 11, scope: !1219)
!6223 = !DILocation(line: 723, column: 5, scope: !1219)
!6224 = !DILocation(line: 723, column: 10, scope: !6225)
!6225 = !DILexicalBlockFile(scope: !1256, file: !453, discriminator: 1)
!6226 = !DILocation(line: 723, column: 20, scope: !1256)
!6227 = !DILocation(line: 723, column: 50, scope: !1256)
!6228 = !DILocation(line: 723, column: 64, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !1256, file: !453, line: 723, column: 61)
!6230 = !DILocation(line: 723, column: 81, scope: !6229)
!6231 = !DILocation(line: 723, column: 61, scope: !6229)
!6232 = !DILocation(line: 723, column: 91, scope: !6229)
!6233 = !DILocation(line: 723, column: 61, scope: !1256)
!6234 = !DILocation(line: 723, column: 61, scope: !6235)
!6235 = !DILexicalBlockFile(scope: !1256, file: !453, discriminator: 2)
!6236 = !DILocation(line: 723, column: 122, scope: !6237)
!6237 = !DILexicalBlockFile(scope: !6229, file: !453, discriminator: 3)
!6238 = !DILocation(line: 723, column: 140, scope: !6229)
!6239 = !DILocation(line: 723, column: 150, scope: !6229)
!6240 = !DILocation(line: 723, column: 175, scope: !6229)
!6241 = !DILocation(line: 723, column: 106, scope: !6229)
!6242 = !DILocation(line: 723, column: 194, scope: !5744)
!6243 = !DILocation(line: 723, column: 194, scope: !1256)
!6244 = !DILocation(line: 723, column: 194, scope: !6245)
!6245 = !DILexicalBlockFile(scope: !1256, file: !453, discriminator: 5)
!6246 = !DILocation(line: 724, column: 9, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 724, column: 9)
!6248 = !DILocation(line: 724, column: 15, scope: !6247)
!6249 = !DILocation(line: 724, column: 21, scope: !6247)
!6250 = !DILocation(line: 724, column: 24, scope: !6251)
!6251 = !DILexicalBlockFile(scope: !6247, file: !453, discriminator: 1)
!6252 = !DILocation(line: 724, column: 9, scope: !1219)
!6253 = !DILocation(line: 725, column: 9, scope: !6247)
!6254 = !DILocation(line: 726, column: 9, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 726, column: 9)
!6256 = !DILocation(line: 726, column: 15, scope: !6255)
!6257 = !DILocation(line: 726, column: 9, scope: !1219)
!6258 = !DILocation(line: 727, column: 16, scope: !6255)
!6259 = !DILocation(line: 727, column: 9, scope: !6255)
!6260 = !DILocation(line: 729, column: 9, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 729, column: 9)
!6262 = !DILocation(line: 729, column: 18, scope: !6261)
!6263 = !DILocation(line: 729, column: 9, scope: !1219)
!6264 = !DILocation(line: 730, column: 16, scope: !6261)
!6265 = !DILocation(line: 730, column: 9, scope: !6261)
!6266 = !DILocation(line: 733, column: 11, scope: !1219)
!6267 = !DILocation(line: 733, column: 9, scope: !1219)
!6268 = !DILocation(line: 734, column: 9, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 734, column: 9)
!6270 = !DILocation(line: 734, column: 13, scope: !6269)
!6271 = !DILocation(line: 734, column: 9, scope: !1219)
!6272 = !DILocation(line: 735, column: 9, scope: !6269)
!6273 = !DILocation(line: 736, column: 14, scope: !1219)
!6274 = !DILocation(line: 737, column: 42, scope: !1219)
!6275 = !DILocation(line: 737, column: 13, scope: !1219)
!6276 = !DILocation(line: 737, column: 11, scope: !1219)
!6277 = !DILocation(line: 738, column: 5, scope: !1219)
!6278 = !DILocation(line: 738, column: 10, scope: !6279)
!6279 = !DILexicalBlockFile(scope: !1258, file: !453, discriminator: 1)
!6280 = !DILocation(line: 738, column: 20, scope: !1258)
!6281 = !DILocation(line: 738, column: 50, scope: !1258)
!6282 = !DILocation(line: 738, column: 64, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !1258, file: !453, line: 738, column: 61)
!6284 = !DILocation(line: 738, column: 81, scope: !6283)
!6285 = !DILocation(line: 738, column: 61, scope: !6283)
!6286 = !DILocation(line: 738, column: 91, scope: !6283)
!6287 = !DILocation(line: 738, column: 61, scope: !1258)
!6288 = !DILocation(line: 738, column: 61, scope: !6289)
!6289 = !DILexicalBlockFile(scope: !1258, file: !453, discriminator: 2)
!6290 = !DILocation(line: 738, column: 122, scope: !6291)
!6291 = !DILexicalBlockFile(scope: !6283, file: !453, discriminator: 3)
!6292 = !DILocation(line: 738, column: 140, scope: !6283)
!6293 = !DILocation(line: 738, column: 150, scope: !6283)
!6294 = !DILocation(line: 738, column: 175, scope: !6283)
!6295 = !DILocation(line: 738, column: 106, scope: !6283)
!6296 = !DILocation(line: 738, column: 194, scope: !5744)
!6297 = !DILocation(line: 738, column: 194, scope: !1258)
!6298 = !DILocation(line: 738, column: 194, scope: !6299)
!6299 = !DILexicalBlockFile(scope: !1258, file: !453, discriminator: 5)
!6300 = !DILocation(line: 739, column: 9, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 739, column: 9)
!6302 = !DILocation(line: 739, column: 15, scope: !6301)
!6303 = !DILocation(line: 739, column: 21, scope: !6301)
!6304 = !DILocation(line: 739, column: 24, scope: !6305)
!6305 = !DILexicalBlockFile(scope: !6301, file: !453, discriminator: 1)
!6306 = !DILocation(line: 739, column: 9, scope: !1219)
!6307 = !DILocation(line: 740, column: 9, scope: !6301)
!6308 = !DILocation(line: 741, column: 9, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 741, column: 9)
!6310 = !DILocation(line: 741, column: 15, scope: !6309)
!6311 = !DILocation(line: 741, column: 9, scope: !1219)
!6312 = !DILocation(line: 742, column: 16, scope: !6309)
!6313 = !DILocation(line: 742, column: 9, scope: !6309)
!6314 = !DILocation(line: 744, column: 9, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !1219, file: !453, line: 744, column: 9)
!6316 = !DILocation(line: 744, column: 18, scope: !6315)
!6317 = !DILocation(line: 744, column: 9, scope: !1219)
!6318 = !DILocation(line: 745, column: 16, scope: !6315)
!6319 = !DILocation(line: 745, column: 9, scope: !6315)
!6320 = !DILocation(line: 748, column: 51, scope: !1219)
!6321 = !DILocation(line: 749, column: 5, scope: !1219)
!6322 = !DILocation(line: 750, column: 1, scope: !1219)
!6323 = !DILocation(line: 819, column: 23, scope: !1259)
!6324 = !DILocation(line: 821, column: 5, scope: !1259)
!6325 = !DILocation(line: 821, column: 15, scope: !1259)
!6326 = !DILocation(line: 821, column: 23, scope: !1259)
!6327 = !DILocation(line: 822, column: 5, scope: !1259)
!6328 = !DILocation(line: 822, column: 15, scope: !1259)
!6329 = !DILocation(line: 824, column: 13, scope: !1259)
!6330 = !DILocation(line: 824, column: 11, scope: !1259)
!6331 = !DILocation(line: 825, column: 9, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !1259, file: !453, line: 825, column: 9)
!6333 = !DILocation(line: 825, column: 15, scope: !6332)
!6334 = !DILocation(line: 825, column: 9, scope: !1259)
!6335 = !DILocation(line: 826, column: 9, scope: !6332)
!6336 = !DILocation(line: 828, column: 11, scope: !1259)
!6337 = !DILocation(line: 828, column: 9, scope: !1259)
!6338 = !DILocation(line: 829, column: 9, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !1259, file: !453, line: 829, column: 9)
!6340 = !DILocation(line: 829, column: 13, scope: !6339)
!6341 = !DILocation(line: 829, column: 9, scope: !1259)
!6342 = !DILocation(line: 830, column: 9, scope: !6339)
!6343 = !DILocation(line: 832, column: 47, scope: !1259)
!6344 = !DILocation(line: 832, column: 25, scope: !1259)
!6345 = !DILocation(line: 832, column: 7, scope: !1259)
!6346 = !DILocation(line: 832, column: 34, scope: !1259)
!6347 = !DILocation(line: 832, column: 6, scope: !1259)
!6348 = !DILocation(line: 832, column: 45, scope: !1259)
!6349 = !DILocation(line: 834, column: 11, scope: !1259)
!6350 = !DILocation(line: 835, column: 33, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !1259, file: !453, line: 835, column: 9)
!6352 = !DILocation(line: 835, column: 9, scope: !6351)
!6353 = !DILocation(line: 835, column: 65, scope: !6351)
!6354 = !DILocation(line: 835, column: 9, scope: !1259)
!6355 = !DILocation(line: 836, column: 9, scope: !6351)
!6356 = !DILocation(line: 837, column: 9, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !1259, file: !453, line: 837, column: 9)
!6358 = !DILocation(line: 837, column: 15, scope: !6357)
!6359 = !DILocation(line: 837, column: 9, scope: !1259)
!6360 = !DILocation(line: 838, column: 16, scope: !6357)
!6361 = !DILocation(line: 838, column: 9, scope: !6357)
!6362 = !DILocation(line: 841, column: 5, scope: !1259)
!6363 = !DILocation(line: 841, column: 10, scope: !6364)
!6364 = !DILexicalBlockFile(scope: !1266, file: !453, discriminator: 1)
!6365 = !DILocation(line: 841, column: 20, scope: !1266)
!6366 = !DILocation(line: 841, column: 50, scope: !1266)
!6367 = !DILocation(line: 841, column: 64, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !1266, file: !453, line: 841, column: 61)
!6369 = !DILocation(line: 841, column: 81, scope: !6368)
!6370 = !DILocation(line: 841, column: 61, scope: !6368)
!6371 = !DILocation(line: 841, column: 91, scope: !6368)
!6372 = !DILocation(line: 841, column: 61, scope: !1266)
!6373 = !DILocation(line: 841, column: 61, scope: !6374)
!6374 = !DILexicalBlockFile(scope: !1266, file: !453, discriminator: 2)
!6375 = !DILocation(line: 841, column: 122, scope: !6376)
!6376 = !DILexicalBlockFile(scope: !6368, file: !453, discriminator: 3)
!6377 = !DILocation(line: 841, column: 140, scope: !6368)
!6378 = !DILocation(line: 841, column: 150, scope: !6368)
!6379 = !DILocation(line: 841, column: 175, scope: !6368)
!6380 = !DILocation(line: 841, column: 106, scope: !6368)
!6381 = !DILocation(line: 841, column: 194, scope: !6382)
!6382 = !DILexicalBlockFile(scope: !1259, file: !453, discriminator: 4)
!6383 = !DILocation(line: 841, column: 194, scope: !1266)
!6384 = !DILocation(line: 841, column: 194, scope: !6385)
!6385 = !DILexicalBlockFile(scope: !1266, file: !453, discriminator: 5)
!6386 = !DILocation(line: 842, column: 11, scope: !1259)
!6387 = !DILocation(line: 842, column: 9, scope: !1259)
!6388 = !DILocation(line: 843, column: 9, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !1259, file: !453, line: 843, column: 9)
!6390 = !DILocation(line: 843, column: 13, scope: !6389)
!6391 = !DILocation(line: 843, column: 9, scope: !1259)
!6392 = !DILocation(line: 844, column: 9, scope: !6389)
!6393 = !DILocation(line: 846, column: 47, scope: !1259)
!6394 = !DILocation(line: 846, column: 25, scope: !1259)
!6395 = !DILocation(line: 846, column: 7, scope: !1259)
!6396 = !DILocation(line: 846, column: 34, scope: !1259)
!6397 = !DILocation(line: 846, column: 6, scope: !1259)
!6398 = !DILocation(line: 846, column: 45, scope: !1259)
!6399 = !DILocation(line: 848, column: 11, scope: !1259)
!6400 = !DILocation(line: 849, column: 33, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !1259, file: !453, line: 849, column: 9)
!6402 = !DILocation(line: 849, column: 9, scope: !6401)
!6403 = !DILocation(line: 849, column: 65, scope: !6401)
!6404 = !DILocation(line: 849, column: 9, scope: !1259)
!6405 = !DILocation(line: 850, column: 9, scope: !6401)
!6406 = !DILocation(line: 851, column: 9, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !1259, file: !453, line: 851, column: 9)
!6408 = !DILocation(line: 851, column: 15, scope: !6407)
!6409 = !DILocation(line: 851, column: 9, scope: !1259)
!6410 = !DILocation(line: 852, column: 16, scope: !6407)
!6411 = !DILocation(line: 852, column: 9, scope: !6407)
!6412 = !DILocation(line: 855, column: 5, scope: !1259)
!6413 = !DILocation(line: 855, column: 10, scope: !6414)
!6414 = !DILexicalBlockFile(scope: !1268, file: !453, discriminator: 1)
!6415 = !DILocation(line: 855, column: 20, scope: !1268)
!6416 = !DILocation(line: 855, column: 50, scope: !1268)
!6417 = !DILocation(line: 855, column: 66, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !1268, file: !453, line: 855, column: 63)
!6419 = !DILocation(line: 855, column: 83, scope: !6418)
!6420 = !DILocation(line: 855, column: 63, scope: !6418)
!6421 = !DILocation(line: 855, column: 93, scope: !6418)
!6422 = !DILocation(line: 855, column: 63, scope: !1268)
!6423 = !DILocation(line: 855, column: 63, scope: !6424)
!6424 = !DILexicalBlockFile(scope: !1268, file: !453, discriminator: 2)
!6425 = !DILocation(line: 855, column: 124, scope: !6426)
!6426 = !DILexicalBlockFile(scope: !6418, file: !453, discriminator: 3)
!6427 = !DILocation(line: 855, column: 142, scope: !6418)
!6428 = !DILocation(line: 855, column: 152, scope: !6418)
!6429 = !DILocation(line: 855, column: 177, scope: !6418)
!6430 = !DILocation(line: 855, column: 108, scope: !6418)
!6431 = !DILocation(line: 855, column: 196, scope: !6382)
!6432 = !DILocation(line: 855, column: 196, scope: !1268)
!6433 = !DILocation(line: 855, column: 196, scope: !6434)
!6434 = !DILexicalBlockFile(scope: !1268, file: !453, discriminator: 5)
!6435 = !DILocation(line: 856, column: 51, scope: !1259)
!6436 = !DILocation(line: 857, column: 5, scope: !1259)
!6437 = !DILocation(line: 858, column: 1, scope: !1259)
!6438 = !DILocation(line: 1073, column: 21, scope: !1269)
!6439 = !DILocation(line: 1073, column: 37, scope: !1269)
!6440 = !DILocation(line: 1075, column: 5, scope: !1269)
!6441 = !DILocation(line: 1075, column: 10, scope: !1269)
!6442 = !DILocation(line: 1076, column: 34, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !1269, file: !453, line: 1076, column: 9)
!6444 = !DILocation(line: 1076, column: 10, scope: !6443)
!6445 = !DILocation(line: 1076, column: 9, scope: !1269)
!6446 = !DILocation(line: 1077, column: 9, scope: !6443)
!6447 = !DILocation(line: 1078, column: 12, scope: !1269)
!6448 = !DILocation(line: 1078, column: 5, scope: !1269)
!6449 = !DILocation(line: 1079, column: 1, scope: !1269)
!6450 = !DILocation(line: 1082, column: 21, scope: !1274)
!6451 = !DILocation(line: 1082, column: 37, scope: !1274)
!6452 = !DILocation(line: 1084, column: 5, scope: !1274)
!6453 = !DILocation(line: 1084, column: 11, scope: !1274)
!6454 = !DILocation(line: 1085, column: 34, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !1274, file: !453, line: 1085, column: 9)
!6456 = !DILocation(line: 1085, column: 10, scope: !6455)
!6457 = !DILocation(line: 1085, column: 9, scope: !1274)
!6458 = !DILocation(line: 1086, column: 9, scope: !6455)
!6459 = !DILocation(line: 1087, column: 31, scope: !1274)
!6460 = !DILocation(line: 1087, column: 12, scope: !1274)
!6461 = !DILocation(line: 1087, column: 5, scope: !1274)
!6462 = !DILocation(line: 1088, column: 1, scope: !1274)
!6463 = !DILocation(line: 1091, column: 26, scope: !1279)
!6464 = !DILocation(line: 1091, column: 42, scope: !1279)
!6465 = !DILocation(line: 1093, column: 5, scope: !1279)
!6466 = !DILocation(line: 1093, column: 15, scope: !1279)
!6467 = !DILocation(line: 1094, column: 5, scope: !1279)
!6468 = !DILocation(line: 1094, column: 15, scope: !1279)
!6469 = !DILocation(line: 1095, column: 34, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !1279, file: !453, line: 1095, column: 9)
!6471 = !DILocation(line: 1095, column: 10, scope: !6470)
!6472 = !DILocation(line: 1095, column: 9, scope: !1279)
!6473 = !DILocation(line: 1096, column: 9, scope: !6470)
!6474 = !DILocation(line: 1097, column: 46, scope: !1279)
!6475 = !{!6476, !1942, i64 0}
!6476 = !{!"bufferinfo", !1942, i64 0, !1942, i64 8, !1963, i64 16, !1963, i64 24, !1972, i64 32, !1972, i64 36, !1942, i64 40, !1942, i64 48, !1942, i64 56, !1942, i64 64, !1942, i64 72}
!6477 = !DILocation(line: 1097, column: 58, scope: !1279)
!6478 = !{!6476, !1963, i64 16}
!6479 = !DILocation(line: 1097, column: 13, scope: !1279)
!6480 = !DILocation(line: 1097, column: 11, scope: !1279)
!6481 = !DILocation(line: 1098, column: 5, scope: !1279)
!6482 = !DILocation(line: 1099, column: 12, scope: !1279)
!6483 = !DILocation(line: 1099, column: 5, scope: !1279)
!6484 = !DILocation(line: 1100, column: 1, scope: !1279)
!6485 = !DILocation(line: 1103, column: 26, scope: !1285)
!6486 = !DILocation(line: 1103, column: 42, scope: !1285)
!6487 = !DILocation(line: 1105, column: 5, scope: !1285)
!6488 = !DILocation(line: 1105, column: 11, scope: !1285)
!6489 = !DILocation(line: 1106, column: 5, scope: !1285)
!6490 = !DILocation(line: 1106, column: 16, scope: !1285)
!6491 = !DILocation(line: 1107, column: 34, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !1285, file: !453, line: 1107, column: 9)
!6493 = !DILocation(line: 1107, column: 10, scope: !6492)
!6494 = !DILocation(line: 1107, column: 9, scope: !1285)
!6495 = !DILocation(line: 1108, column: 9, scope: !6492)
!6496 = !DILocation(line: 1109, column: 38, scope: !1285)
!6497 = !DILocation(line: 1109, column: 43, scope: !1285)
!6498 = !DILocation(line: 1109, column: 12, scope: !1285)
!6499 = !DILocation(line: 1109, column: 5, scope: !1285)
!6500 = !DILocation(line: 1110, column: 1, scope: !1285)
!6501 = !DILocation(line: 1113, column: 21, scope: !1291)
!6502 = !DILocation(line: 1113, column: 37, scope: !1291)
!6503 = !DILocation(line: 1115, column: 5, scope: !1291)
!6504 = !DILocation(line: 1115, column: 11, scope: !1291)
!6505 = !DILocation(line: 1116, column: 34, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !1291, file: !453, line: 1116, column: 9)
!6507 = !DILocation(line: 1116, column: 10, scope: !6506)
!6508 = !DILocation(line: 1116, column: 9, scope: !1291)
!6509 = !DILocation(line: 1117, column: 9, scope: !6506)
!6510 = !DILocation(line: 1118, column: 9, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !1291, file: !453, line: 1118, column: 9)
!6512 = !DILocation(line: 1118, column: 13, scope: !6511)
!6513 = !DILocation(line: 1118, column: 9, scope: !1291)
!6514 = !DILocation(line: 1119, column: 35, scope: !6511)
!6515 = !DILocation(line: 1119, column: 16, scope: !6511)
!6516 = !DILocation(line: 1119, column: 9, scope: !6511)
!6517 = !DILocation(line: 1121, column: 62, scope: !6511)
!6518 = !DILocation(line: 1121, column: 9, scope: !6511)
!6519 = !DILocation(line: 1122, column: 1, scope: !1291)
!6520 = !DILocation(line: 1125, column: 26, scope: !1296)
!6521 = !DILocation(line: 1125, column: 42, scope: !1296)
!6522 = !DILocation(line: 1127, column: 5, scope: !1296)
!6523 = !DILocation(line: 1127, column: 15, scope: !1296)
!6524 = !DILocation(line: 1128, column: 5, scope: !1296)
!6525 = !DILocation(line: 1128, column: 15, scope: !1296)
!6526 = !DILocation(line: 1129, column: 34, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !1296, file: !453, line: 1129, column: 9)
!6528 = !DILocation(line: 1129, column: 10, scope: !6527)
!6529 = !DILocation(line: 1129, column: 9, scope: !1296)
!6530 = !DILocation(line: 1130, column: 9, scope: !6527)
!6531 = !DILocation(line: 1131, column: 16, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !1296, file: !453, line: 1131, column: 9)
!6533 = !DILocation(line: 1131, column: 20, scope: !6532)
!6534 = !DILocation(line: 1131, column: 9, scope: !1296)
!6535 = !DILocation(line: 1132, column: 50, scope: !6532)
!6536 = !DILocation(line: 1132, column: 62, scope: !6532)
!6537 = !DILocation(line: 1132, column: 17, scope: !6532)
!6538 = !DILocation(line: 1132, column: 15, scope: !6532)
!6539 = !DILocation(line: 1132, column: 9, scope: !6532)
!6540 = !DILocation(line: 1134, column: 55, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6532, file: !453, line: 1133, column: 10)
!6542 = !DILocation(line: 1135, column: 15, scope: !6541)
!6543 = !DILocation(line: 1137, column: 5, scope: !1296)
!6544 = !DILocation(line: 1138, column: 12, scope: !1296)
!6545 = !DILocation(line: 1138, column: 5, scope: !1296)
!6546 = !DILocation(line: 1139, column: 1, scope: !1296)
!6547 = !DILocation(line: 1142, column: 26, scope: !1302)
!6548 = !DILocation(line: 1142, column: 42, scope: !1302)
!6549 = !DILocation(line: 1144, column: 5, scope: !1302)
!6550 = !DILocation(line: 1144, column: 11, scope: !1302)
!6551 = !DILocation(line: 1145, column: 5, scope: !1302)
!6552 = !DILocation(line: 1145, column: 16, scope: !1302)
!6553 = !DILocation(line: 1146, column: 34, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !1302, file: !453, line: 1146, column: 9)
!6555 = !DILocation(line: 1146, column: 10, scope: !6554)
!6556 = !DILocation(line: 1146, column: 9, scope: !1302)
!6557 = !DILocation(line: 1147, column: 9, scope: !6554)
!6558 = !DILocation(line: 1148, column: 9, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !1302, file: !453, line: 1148, column: 9)
!6560 = !DILocation(line: 1148, column: 13, scope: !6559)
!6561 = !DILocation(line: 1148, column: 9, scope: !1302)
!6562 = !DILocation(line: 1149, column: 42, scope: !6559)
!6563 = !DILocation(line: 1149, column: 47, scope: !6559)
!6564 = !DILocation(line: 1149, column: 16, scope: !6559)
!6565 = !DILocation(line: 1149, column: 9, scope: !6559)
!6566 = !DILocation(line: 1151, column: 62, scope: !6559)
!6567 = !DILocation(line: 1151, column: 9, scope: !6559)
!6568 = !DILocation(line: 1152, column: 1, scope: !1302)
!6569 = !DILocation(line: 1155, column: 21, scope: !1308)
!6570 = !DILocation(line: 1155, column: 37, scope: !1308)
!6571 = !DILocation(line: 1157, column: 5, scope: !1308)
!6572 = !DILocation(line: 1157, column: 11, scope: !1308)
!6573 = !DILocation(line: 1158, column: 34, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !1308, file: !453, line: 1158, column: 9)
!6575 = !DILocation(line: 1158, column: 10, scope: !6574)
!6576 = !DILocation(line: 1158, column: 9, scope: !1308)
!6577 = !DILocation(line: 1159, column: 9, scope: !6574)
!6578 = !DILocation(line: 1160, column: 31, scope: !1308)
!6579 = !DILocation(line: 1160, column: 12, scope: !1308)
!6580 = !DILocation(line: 1160, column: 5, scope: !1308)
!6581 = !DILocation(line: 1161, column: 1, scope: !1308)
!6582 = !DILocation(line: 1164, column: 26, scope: !1313)
!6583 = !DILocation(line: 1164, column: 42, scope: !1313)
!6584 = !DILocation(line: 1166, column: 5, scope: !1313)
!6585 = !DILocation(line: 1166, column: 15, scope: !1313)
!6586 = !DILocation(line: 1167, column: 5, scope: !1313)
!6587 = !DILocation(line: 1167, column: 15, scope: !1313)
!6588 = !DILocation(line: 1168, column: 34, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !1313, file: !453, line: 1168, column: 9)
!6590 = !DILocation(line: 1168, column: 10, scope: !6589)
!6591 = !DILocation(line: 1168, column: 9, scope: !1313)
!6592 = !DILocation(line: 1169, column: 9, scope: !6589)
!6593 = !DILocation(line: 1170, column: 46, scope: !1313)
!6594 = !DILocation(line: 1170, column: 58, scope: !1313)
!6595 = !DILocation(line: 1170, column: 13, scope: !1313)
!6596 = !DILocation(line: 1170, column: 11, scope: !1313)
!6597 = !DILocation(line: 1171, column: 5, scope: !1313)
!6598 = !DILocation(line: 1172, column: 12, scope: !1313)
!6599 = !DILocation(line: 1172, column: 5, scope: !1313)
!6600 = !DILocation(line: 1173, column: 1, scope: !1313)
!6601 = !DILocation(line: 1176, column: 26, scope: !1319)
!6602 = !DILocation(line: 1176, column: 42, scope: !1319)
!6603 = !DILocation(line: 1178, column: 5, scope: !1319)
!6604 = !DILocation(line: 1178, column: 11, scope: !1319)
!6605 = !DILocation(line: 1179, column: 5, scope: !1319)
!6606 = !DILocation(line: 1179, column: 16, scope: !1319)
!6607 = !DILocation(line: 1180, column: 34, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !1319, file: !453, line: 1180, column: 9)
!6609 = !DILocation(line: 1180, column: 10, scope: !6608)
!6610 = !DILocation(line: 1180, column: 9, scope: !1319)
!6611 = !DILocation(line: 1181, column: 9, scope: !6608)
!6612 = !DILocation(line: 1182, column: 38, scope: !1319)
!6613 = !DILocation(line: 1182, column: 43, scope: !1319)
!6614 = !DILocation(line: 1182, column: 12, scope: !1319)
!6615 = !DILocation(line: 1182, column: 5, scope: !1319)
!6616 = !DILocation(line: 1183, column: 1, scope: !1319)
!6617 = !DILocation(line: 1186, column: 21, scope: !1325)
!6618 = !DILocation(line: 1186, column: 37, scope: !1325)
!6619 = !DILocation(line: 1188, column: 5, scope: !1325)
!6620 = !DILocation(line: 1188, column: 17, scope: !1325)
!6621 = !DILocation(line: 1189, column: 5, scope: !1325)
!6622 = !DILocation(line: 1189, column: 16, scope: !1325)
!6623 = !DILocation(line: 1190, column: 34, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !1325, file: !453, line: 1190, column: 9)
!6625 = !DILocation(line: 1190, column: 10, scope: !6624)
!6626 = !DILocation(line: 1190, column: 9, scope: !1325)
!6627 = !DILocation(line: 1191, column: 9, scope: !6624)
!6628 = !DILocation(line: 1192, column: 30, scope: !1325)
!6629 = !DILocation(line: 1192, column: 12, scope: !1325)
!6630 = !DILocation(line: 1192, column: 10, scope: !1325)
!6631 = !DILocation(line: 1193, column: 34, scope: !1325)
!6632 = !DILocation(line: 1193, column: 39, scope: !1325)
!6633 = !DILocation(line: 1193, column: 12, scope: !1325)
!6634 = !DILocation(line: 1193, column: 5, scope: !1325)
!6635 = !DILocation(line: 1194, column: 1, scope: !1325)
!6636 = !DILocation(line: 1197, column: 26, scope: !1333)
!6637 = !DILocation(line: 1197, column: 42, scope: !1333)
!6638 = !DILocation(line: 1199, column: 5, scope: !1333)
!6639 = !DILocation(line: 1199, column: 17, scope: !1333)
!6640 = !DILocation(line: 1200, column: 5, scope: !1333)
!6641 = !DILocation(line: 1200, column: 16, scope: !1333)
!6642 = !DILocation(line: 1201, column: 34, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !1333, file: !453, line: 1201, column: 9)
!6644 = !DILocation(line: 1201, column: 10, scope: !6643)
!6645 = !DILocation(line: 1201, column: 9, scope: !1333)
!6646 = !DILocation(line: 1202, column: 9, scope: !6643)
!6647 = !DILocation(line: 1203, column: 34, scope: !1333)
!6648 = !DILocation(line: 1203, column: 39, scope: !1333)
!6649 = !DILocation(line: 1203, column: 12, scope: !1333)
!6650 = !DILocation(line: 1203, column: 5, scope: !1333)
!6651 = !DILocation(line: 1204, column: 1, scope: !1333)
!6652 = !DILocation(line: 1207, column: 21, scope: !1339)
!6653 = !DILocation(line: 1207, column: 37, scope: !1339)
!6654 = !DILocation(line: 1209, column: 5, scope: !1339)
!6655 = !DILocation(line: 1209, column: 17, scope: !1339)
!6656 = !DILocation(line: 1210, column: 5, scope: !1339)
!6657 = !DILocation(line: 1210, column: 16, scope: !1339)
!6658 = !DILocation(line: 1211, column: 34, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !1339, file: !453, line: 1211, column: 9)
!6660 = !DILocation(line: 1211, column: 10, scope: !6659)
!6661 = !DILocation(line: 1211, column: 9, scope: !1339)
!6662 = !DILocation(line: 1212, column: 9, scope: !6659)
!6663 = !DILocation(line: 1213, column: 9, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !1339, file: !453, line: 1213, column: 9)
!6665 = !DILocation(line: 1213, column: 13, scope: !6664)
!6666 = !DILocation(line: 1213, column: 9, scope: !1339)
!6667 = !DILocation(line: 1214, column: 34, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6664, file: !453, line: 1213, column: 28)
!6669 = !DILocation(line: 1214, column: 16, scope: !6668)
!6670 = !DILocation(line: 1214, column: 14, scope: !6668)
!6671 = !DILocation(line: 1215, column: 38, scope: !6668)
!6672 = !DILocation(line: 1215, column: 43, scope: !6668)
!6673 = !DILocation(line: 1215, column: 16, scope: !6668)
!6674 = !DILocation(line: 1215, column: 9, scope: !6668)
!6675 = !DILocation(line: 1217, column: 62, scope: !6664)
!6676 = !DILocation(line: 1217, column: 9, scope: !6664)
!6677 = !DILocation(line: 1218, column: 1, scope: !1339)
!6678 = !DILocation(line: 1221, column: 26, scope: !1345)
!6679 = !DILocation(line: 1221, column: 42, scope: !1345)
!6680 = !DILocation(line: 1223, column: 5, scope: !1345)
!6681 = !DILocation(line: 1223, column: 17, scope: !1345)
!6682 = !DILocation(line: 1224, column: 5, scope: !1345)
!6683 = !DILocation(line: 1224, column: 16, scope: !1345)
!6684 = !DILocation(line: 1225, column: 34, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !1345, file: !453, line: 1225, column: 9)
!6686 = !DILocation(line: 1225, column: 10, scope: !6685)
!6687 = !DILocation(line: 1225, column: 9, scope: !1345)
!6688 = !DILocation(line: 1226, column: 9, scope: !6685)
!6689 = !DILocation(line: 1227, column: 9, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !1345, file: !453, line: 1227, column: 9)
!6691 = !DILocation(line: 1227, column: 13, scope: !6690)
!6692 = !DILocation(line: 1227, column: 9, scope: !1345)
!6693 = !DILocation(line: 1228, column: 38, scope: !6690)
!6694 = !DILocation(line: 1228, column: 43, scope: !6690)
!6695 = !DILocation(line: 1228, column: 16, scope: !6690)
!6696 = !DILocation(line: 1228, column: 9, scope: !6690)
!6697 = !DILocation(line: 1230, column: 62, scope: !6690)
!6698 = !DILocation(line: 1230, column: 9, scope: !6690)
!6699 = !DILocation(line: 1231, column: 1, scope: !1345)
!6700 = !DILocation(line: 1630, column: 26, scope: !1351)
!6701 = !DILocation(line: 1630, column: 42, scope: !1351)
!6702 = !DILocation(line: 1632, column: 5, scope: !1351)
!6703 = !DILocation(line: 1632, column: 15, scope: !1351)
!6704 = !DILocation(line: 1633, column: 5, scope: !1351)
!6705 = !DILocation(line: 1633, column: 15, scope: !1351)
!6706 = !DILocation(line: 1634, column: 5, scope: !1351)
!6707 = !DILocation(line: 1634, column: 11, scope: !1351)
!6708 = !DILocation(line: 1636, column: 34, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !1351, file: !453, line: 1636, column: 9)
!6710 = !DILocation(line: 1636, column: 10, scope: !6709)
!6711 = !DILocation(line: 1636, column: 9, scope: !1351)
!6712 = !DILocation(line: 1637, column: 9, scope: !6709)
!6713 = !DILocation(line: 1639, column: 21, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !1351, file: !453, line: 1639, column: 9)
!6715 = !DILocation(line: 1639, column: 11, scope: !6714)
!6716 = !DILocation(line: 1639, column: 9, scope: !1351)
!6717 = !DILocation(line: 1640, column: 22, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6714, file: !453, line: 1639, column: 26)
!6719 = !DILocation(line: 1640, column: 13, scope: !6718)
!6720 = !DILocation(line: 1641, column: 9, scope: !6718)
!6721 = !DILocation(line: 1641, column: 16, scope: !6718)
!6722 = !DILocation(line: 1642, column: 20, scope: !6718)
!6723 = !DILocation(line: 1642, column: 23, scope: !6718)
!6724 = !DILocation(line: 1642, column: 9, scope: !6718)
!6725 = !DILocation(line: 1642, column: 27, scope: !6718)
!6726 = !DILocation(line: 1643, column: 5, scope: !6718)
!6727 = !DILocation(line: 1645, column: 47, scope: !1351)
!6728 = !DILocation(line: 1645, column: 59, scope: !1351)
!6729 = !DILocation(line: 1645, column: 14, scope: !1351)
!6730 = !DILocation(line: 1645, column: 12, scope: !1351)
!6731 = !DILocation(line: 1646, column: 5, scope: !1351)
!6732 = !DILocation(line: 1647, column: 12, scope: !1351)
!6733 = !DILocation(line: 1647, column: 5, scope: !1351)
!6734 = !DILocation(line: 1648, column: 1, scope: !1351)
!6735 = !DILocation(line: 1678, column: 36, scope: !1358)
!6736 = !DILocation(line: 1678, column: 52, scope: !1358)
!6737 = !DILocation(line: 1680, column: 5, scope: !1358)
!6738 = !DILocation(line: 1680, column: 17, scope: !1358)
!6739 = !DILocation(line: 1680, column: 28, scope: !1358)
!6740 = !DILocation(line: 1681, column: 34, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !1358, file: !453, line: 1681, column: 9)
!6742 = !DILocation(line: 1681, column: 10, scope: !6741)
!6743 = !DILocation(line: 1681, column: 9, scope: !1358)
!6744 = !DILocation(line: 1683, column: 9, scope: !6741)
!6745 = !DILocation(line: 1684, column: 39, scope: !1358)
!6746 = !DILocation(line: 1684, column: 49, scope: !1358)
!6747 = !DILocation(line: 1684, column: 12, scope: !1358)
!6748 = !DILocation(line: 1684, column: 5, scope: !1358)
!6749 = !DILocation(line: 1685, column: 1, scope: !1358)
!6750 = !DILocation(line: 1688, column: 36, scope: !1364)
!6751 = !DILocation(line: 1688, column: 52, scope: !1364)
!6752 = !DILocation(line: 1690, column: 5, scope: !1364)
!6753 = !DILocation(line: 1690, column: 17, scope: !1364)
!6754 = !DILocation(line: 1690, column: 28, scope: !1364)
!6755 = !DILocation(line: 1691, column: 34, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !1364, file: !453, line: 1691, column: 9)
!6757 = !DILocation(line: 1691, column: 10, scope: !6756)
!6758 = !DILocation(line: 1691, column: 9, scope: !1364)
!6759 = !DILocation(line: 1693, column: 9, scope: !6756)
!6760 = !DILocation(line: 1694, column: 39, scope: !1364)
!6761 = !DILocation(line: 1694, column: 49, scope: !1364)
!6762 = !DILocation(line: 1694, column: 12, scope: !1364)
!6763 = !DILocation(line: 1694, column: 5, scope: !1364)
!6764 = !DILocation(line: 1695, column: 1, scope: !1364)
!6765 = !DILocation(line: 1236, column: 23, scope: !1370)
!6766 = !DILocation(line: 1239, column: 5, scope: !1370)
!6767 = !DILocation(line: 1239, column: 15, scope: !1370)
!6768 = !DILocation(line: 1239, column: 23, scope: !1370)
!6769 = !DILocation(line: 1240, column: 5, scope: !1370)
!6770 = !DILocation(line: 1240, column: 11, scope: !1370)
!6771 = !DILocation(line: 1242, column: 13, scope: !1370)
!6772 = !DILocation(line: 1242, column: 11, scope: !1370)
!6773 = !DILocation(line: 1243, column: 9, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !1370, file: !453, line: 1243, column: 9)
!6775 = !DILocation(line: 1243, column: 15, scope: !6774)
!6776 = !DILocation(line: 1243, column: 9, scope: !1370)
!6777 = !DILocation(line: 1244, column: 5, scope: !6774)
!6778 = !DILocation(line: 1246, column: 11, scope: !1370)
!6779 = !DILocation(line: 1246, column: 9, scope: !1370)
!6780 = !DILocation(line: 1248, column: 9, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !1370, file: !453, line: 1248, column: 9)
!6782 = !DILocation(line: 1248, column: 13, scope: !6781)
!6783 = !DILocation(line: 1248, column: 9, scope: !1370)
!6784 = !DILocation(line: 1249, column: 5, scope: !6781)
!6785 = !DILocation(line: 1251, column: 47, scope: !1370)
!6786 = !DILocation(line: 1251, column: 25, scope: !1370)
!6787 = !DILocation(line: 1251, column: 7, scope: !1370)
!6788 = !DILocation(line: 1251, column: 34, scope: !1370)
!6789 = !DILocation(line: 1251, column: 6, scope: !1370)
!6790 = !DILocation(line: 1251, column: 45, scope: !1370)
!6791 = !DILocation(line: 1256, column: 33, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !1370, file: !453, line: 1256, column: 9)
!6793 = !DILocation(line: 1256, column: 9, scope: !6792)
!6794 = !DILocation(line: 1256, column: 66, scope: !6792)
!6795 = !DILocation(line: 1256, column: 9, scope: !1370)
!6796 = !DILocation(line: 1257, column: 5, scope: !6792)
!6797 = !DILocation(line: 1259, column: 33, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !1370, file: !453, line: 1259, column: 9)
!6799 = !DILocation(line: 1259, column: 9, scope: !6798)
!6800 = !DILocation(line: 1259, column: 66, scope: !6798)
!6801 = !DILocation(line: 1259, column: 9, scope: !1370)
!6802 = !DILocation(line: 1260, column: 5, scope: !6798)
!6803 = !DILocation(line: 1262, column: 5, scope: !1370)
!6804 = !DILocation(line: 1262, column: 10, scope: !6805)
!6805 = !DILexicalBlockFile(scope: !1377, file: !453, discriminator: 1)
!6806 = !DILocation(line: 1262, column: 20, scope: !1377)
!6807 = !DILocation(line: 1262, column: 50, scope: !1377)
!6808 = !DILocation(line: 1262, column: 66, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !1377, file: !453, line: 1262, column: 63)
!6810 = !DILocation(line: 1262, column: 83, scope: !6809)
!6811 = !DILocation(line: 1262, column: 63, scope: !6809)
!6812 = !DILocation(line: 1262, column: 93, scope: !6809)
!6813 = !DILocation(line: 1262, column: 63, scope: !1377)
!6814 = !DILocation(line: 1262, column: 63, scope: !6815)
!6815 = !DILexicalBlockFile(scope: !1377, file: !453, discriminator: 2)
!6816 = !DILocation(line: 1262, column: 124, scope: !6817)
!6817 = !DILexicalBlockFile(scope: !6809, file: !453, discriminator: 3)
!6818 = !DILocation(line: 1262, column: 142, scope: !6809)
!6819 = !DILocation(line: 1262, column: 152, scope: !6809)
!6820 = !DILocation(line: 1262, column: 177, scope: !6809)
!6821 = !DILocation(line: 1262, column: 108, scope: !6809)
!6822 = !DILocation(line: 1262, column: 196, scope: !6823)
!6823 = !DILexicalBlockFile(scope: !1370, file: !453, discriminator: 4)
!6824 = !DILocation(line: 1262, column: 196, scope: !1377)
!6825 = !DILocation(line: 1262, column: 196, scope: !6826)
!6826 = !DILexicalBlockFile(scope: !1377, file: !453, discriminator: 5)
!6827 = !DILocation(line: 1263, column: 58, scope: !1370)
!6828 = !DILocation(line: 1263, column: 5, scope: !1370)
!6829 = !DILocation(line: 1264, column: 1, scope: !1370)
!6830 = !DILocation(line: 1340, column: 23, scope: !1378)
!6831 = !DILocation(line: 1342, column: 5, scope: !1378)
!6832 = !DILocation(line: 1342, column: 15, scope: !1378)
!6833 = !DILocation(line: 1342, column: 23, scope: !1378)
!6834 = !DILocation(line: 1343, column: 5, scope: !1378)
!6835 = !DILocation(line: 1343, column: 17, scope: !1378)
!6836 = !DILocation(line: 1344, column: 5, scope: !1378)
!6837 = !DILocation(line: 1344, column: 16, scope: !1378)
!6838 = !DILocation(line: 1348, column: 24, scope: !1378)
!6839 = !DILocation(line: 1348, column: 7, scope: !1378)
!6840 = !DILocation(line: 1350, column: 13, scope: !1378)
!6841 = !DILocation(line: 1350, column: 11, scope: !1378)
!6842 = !DILocation(line: 1351, column: 9, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !1378, file: !453, line: 1351, column: 9)
!6844 = !DILocation(line: 1351, column: 15, scope: !6843)
!6845 = !DILocation(line: 1351, column: 9, scope: !1378)
!6846 = !DILocation(line: 1352, column: 9, scope: !6843)
!6847 = !DILocation(line: 1354, column: 11, scope: !1378)
!6848 = !DILocation(line: 1354, column: 9, scope: !1378)
!6849 = !DILocation(line: 1356, column: 9, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !1378, file: !453, line: 1356, column: 9)
!6851 = !DILocation(line: 1356, column: 13, scope: !6850)
!6852 = !DILocation(line: 1356, column: 9, scope: !1378)
!6853 = !DILocation(line: 1357, column: 9, scope: !6850)
!6854 = !DILocation(line: 1359, column: 47, scope: !1378)
!6855 = !DILocation(line: 1359, column: 25, scope: !1378)
!6856 = !DILocation(line: 1359, column: 7, scope: !1378)
!6857 = !DILocation(line: 1359, column: 34, scope: !1378)
!6858 = !DILocation(line: 1359, column: 6, scope: !1378)
!6859 = !DILocation(line: 1359, column: 45, scope: !1378)
!6860 = !DILocation(line: 1361, column: 11, scope: !1378)
!6861 = !DILocation(line: 1362, column: 33, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !1378, file: !453, line: 1362, column: 9)
!6863 = !DILocation(line: 1362, column: 9, scope: !6862)
!6864 = !DILocation(line: 1362, column: 65, scope: !6862)
!6865 = !DILocation(line: 1362, column: 9, scope: !1378)
!6866 = !DILocation(line: 1363, column: 9, scope: !6862)
!6867 = !DILocation(line: 1364, column: 9, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !1378, file: !453, line: 1364, column: 9)
!6869 = !DILocation(line: 1364, column: 53, scope: !6868)
!6870 = !DILocation(line: 1364, column: 35, scope: !6868)
!6871 = !DILocation(line: 1364, column: 60, scope: !6868)
!6872 = !{!6873, !1942, i64 40}
!6873 = !{!"", !1962, i64 0, !1963, i64 16, !1963, i64 24, !6874, i64 32, !1942, i64 40}
!6874 = !{!"", !1972, i64 0, !1972, i64 0, !1972, i64 0, !1972, i64 0, !1972, i64 0, !1972, i64 1}
!6875 = !DILocation(line: 1364, column: 33, scope: !6868)
!6876 = !DILocation(line: 1364, column: 88, scope: !6877)
!6877 = !DILexicalBlockFile(scope: !6868, file: !453, discriminator: 1)
!6878 = !DILocation(line: 1364, column: 70, scope: !6868)
!6879 = !DILocation(line: 1364, column: 95, scope: !6868)
!6880 = !DILocation(line: 1364, column: 136, scope: !6881)
!6881 = !DILexicalBlockFile(scope: !6868, file: !453, discriminator: 2)
!6882 = !DILocation(line: 1364, column: 103, scope: !6868)
!6883 = !DILocation(line: 1364, column: 15, scope: !6884)
!6884 = !DILexicalBlockFile(scope: !6885, file: !453, discriminator: 4)
!6885 = !DILexicalBlockFile(scope: !6868, file: !453, discriminator: 3)
!6886 = !DILocation(line: 1364, column: 9, scope: !1378)
!6887 = !DILocation(line: 1365, column: 16, scope: !6868)
!6888 = !DILocation(line: 1365, column: 9, scope: !6868)
!6889 = !DILocation(line: 1367, column: 11, scope: !1378)
!6890 = !DILocation(line: 1368, column: 33, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !1378, file: !453, line: 1368, column: 9)
!6892 = !DILocation(line: 1368, column: 9, scope: !6891)
!6893 = !DILocation(line: 1368, column: 72, scope: !6891)
!6894 = !DILocation(line: 1368, column: 9, scope: !1378)
!6895 = !DILocation(line: 1369, column: 9, scope: !6891)
!6896 = !DILocation(line: 1370, column: 9, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !1378, file: !453, line: 1370, column: 9)
!6898 = !DILocation(line: 1370, column: 53, scope: !6897)
!6899 = !DILocation(line: 1370, column: 35, scope: !6897)
!6900 = !DILocation(line: 1370, column: 60, scope: !6897)
!6901 = !DILocation(line: 1370, column: 33, scope: !6897)
!6902 = !DILocation(line: 1370, column: 88, scope: !6903)
!6903 = !DILexicalBlockFile(scope: !6897, file: !453, discriminator: 1)
!6904 = !DILocation(line: 1370, column: 70, scope: !6897)
!6905 = !DILocation(line: 1370, column: 95, scope: !6897)
!6906 = !DILocation(line: 1370, column: 136, scope: !6907)
!6907 = !DILexicalBlockFile(scope: !6897, file: !453, discriminator: 2)
!6908 = !DILocation(line: 1370, column: 103, scope: !6897)
!6909 = !DILocation(line: 1370, column: 15, scope: !6910)
!6910 = !DILexicalBlockFile(scope: !6911, file: !453, discriminator: 4)
!6911 = !DILexicalBlockFile(scope: !6897, file: !453, discriminator: 3)
!6912 = !DILocation(line: 1370, column: 143, scope: !6897)
!6913 = !DILocation(line: 1371, column: 9, scope: !6897)
!6914 = !DILocation(line: 1371, column: 51, scope: !6897)
!6915 = !DILocation(line: 1371, column: 33, scope: !6897)
!6916 = !DILocation(line: 1371, column: 58, scope: !6897)
!6917 = !DILocation(line: 1371, column: 31, scope: !6897)
!6918 = !DILocation(line: 1371, column: 85, scope: !6903)
!6919 = !DILocation(line: 1371, column: 69, scope: !6897)
!6920 = !DILocation(line: 1371, column: 91, scope: !6897)
!6921 = !DILocation(line: 1371, column: 97, scope: !6897)
!6922 = !DILocation(line: 1371, column: 68, scope: !6897)
!6923 = !DILocation(line: 1371, column: 103, scope: !6897)
!6924 = !DILocation(line: 1371, column: 125, scope: !6911)
!6925 = !DILocation(line: 1371, column: 108, scope: !6897)
!6926 = !DILocation(line: 1371, column: 132, scope: !6897)
!6927 = !DILocation(line: 1371, column: 138, scope: !6897)
!6928 = !DILocation(line: 1371, column: 106, scope: !6897)
!6929 = !DILocation(line: 1371, column: 67, scope: !6897)
!6930 = !DILocation(line: 1371, column: 167, scope: !6931)
!6931 = !DILexicalBlockFile(scope: !6897, file: !453, discriminator: 5)
!6932 = !DILocation(line: 1371, column: 151, scope: !6897)
!6933 = !DILocation(line: 1371, column: 173, scope: !6897)
!6934 = !{!6873, !1963, i64 16}
!6935 = !DILocation(line: 1371, column: 208, scope: !6936)
!6936 = !DILexicalBlockFile(scope: !6937, file: !453, discriminator: 6)
!6937 = !DILexicalBlockFile(scope: !6897, file: !453, discriminator: 4)
!6938 = !DILocation(line: 1371, column: 183, scope: !6897)
!6939 = !DILocation(line: 1371, column: 214, scope: !6897)
!6940 = !{!6941, !1963, i64 64}
!6941 = !{!"", !6873, i64 0, !1963, i64 48, !1942, i64 56, !1963, i64 64}
!6942 = !DILocation(line: 1371, column: 31, scope: !6943)
!6943 = !DILexicalBlockFile(scope: !6944, file: !453, discriminator: 8)
!6944 = !DILexicalBlockFile(scope: !6897, file: !453, discriminator: 7)
!6945 = !DILocation(line: 1371, column: 269, scope: !6907)
!6946 = !DILocation(line: 1371, column: 236, scope: !6897)
!6947 = !DILocation(line: 1371, column: 309, scope: !6897)
!6948 = !DILocation(line: 1371, column: 293, scope: !6897)
!6949 = !DILocation(line: 1371, column: 315, scope: !6897)
!6950 = !DILocation(line: 1371, column: 321, scope: !6897)
!6951 = !DILocation(line: 1371, column: 292, scope: !6897)
!6952 = !DILocation(line: 1371, column: 327, scope: !6897)
!6953 = !DILocation(line: 1371, column: 349, scope: !6954)
!6954 = !DILexicalBlockFile(scope: !6897, file: !453, discriminator: 10)
!6955 = !DILocation(line: 1371, column: 332, scope: !6897)
!6956 = !DILocation(line: 1371, column: 356, scope: !6897)
!6957 = !DILocation(line: 1371, column: 362, scope: !6897)
!6958 = !DILocation(line: 1371, column: 330, scope: !6897)
!6959 = !DILocation(line: 1371, column: 291, scope: !6897)
!6960 = !DILocation(line: 1371, column: 391, scope: !6961)
!6961 = !DILexicalBlockFile(scope: !6897, file: !453, discriminator: 12)
!6962 = !DILocation(line: 1371, column: 375, scope: !6897)
!6963 = !DILocation(line: 1371, column: 397, scope: !6897)
!6964 = !DILocation(line: 1371, column: 432, scope: !6965)
!6965 = !DILexicalBlockFile(scope: !6966, file: !453, discriminator: 13)
!6966 = !DILexicalBlockFile(scope: !6897, file: !453, discriminator: 11)
!6967 = !DILocation(line: 1371, column: 407, scope: !6897)
!6968 = !DILocation(line: 1371, column: 438, scope: !6897)
!6969 = !DILocation(line: 1371, column: 31, scope: !6970)
!6970 = !DILexicalBlockFile(scope: !6971, file: !453, discriminator: 15)
!6971 = !DILexicalBlockFile(scope: !6897, file: !453, discriminator: 14)
!6972 = !DILocation(line: 1371, column: 13, scope: !6973)
!6973 = !DILexicalBlockFile(scope: !6974, file: !453, discriminator: 16)
!6974 = !DILexicalBlockFile(scope: !6897, file: !453, discriminator: 9)
!6975 = !DILocation(line: 1370, column: 9, scope: !1378)
!6976 = !DILocation(line: 1372, column: 16, scope: !6897)
!6977 = !DILocation(line: 1372, column: 9, scope: !6897)
!6978 = !DILocation(line: 1375, column: 5, scope: !1378)
!6979 = !DILocation(line: 1375, column: 10, scope: !6980)
!6980 = !DILexicalBlockFile(scope: !1386, file: !453, discriminator: 1)
!6981 = !DILocation(line: 1375, column: 20, scope: !1386)
!6982 = !DILocation(line: 1375, column: 50, scope: !1386)
!6983 = !DILocation(line: 1375, column: 66, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !1386, file: !453, line: 1375, column: 63)
!6985 = !DILocation(line: 1375, column: 83, scope: !6984)
!6986 = !DILocation(line: 1375, column: 63, scope: !6984)
!6987 = !DILocation(line: 1375, column: 93, scope: !6984)
!6988 = !DILocation(line: 1375, column: 63, scope: !1386)
!6989 = !DILocation(line: 1375, column: 63, scope: !6990)
!6990 = !DILexicalBlockFile(scope: !1386, file: !453, discriminator: 2)
!6991 = !DILocation(line: 1375, column: 124, scope: !6992)
!6992 = !DILexicalBlockFile(scope: !6984, file: !453, discriminator: 3)
!6993 = !DILocation(line: 1375, column: 142, scope: !6984)
!6994 = !DILocation(line: 1375, column: 152, scope: !6984)
!6995 = !DILocation(line: 1375, column: 177, scope: !6984)
!6996 = !DILocation(line: 1375, column: 108, scope: !6984)
!6997 = !DILocation(line: 1375, column: 196, scope: !6998)
!6998 = !DILexicalBlockFile(scope: !1378, file: !453, discriminator: 4)
!6999 = !DILocation(line: 1375, column: 196, scope: !1386)
!7000 = !DILocation(line: 1375, column: 196, scope: !7001)
!7001 = !DILexicalBlockFile(scope: !1386, file: !453, discriminator: 5)
!7002 = !DILocation(line: 1376, column: 51, scope: !1378)
!7003 = !DILocation(line: 1377, column: 5, scope: !1378)
!7004 = !DILocation(line: 1378, column: 1, scope: !1378)
!7005 = !DILocation(line: 1382, column: 23, scope: !1387)
!7006 = !DILocation(line: 1384, column: 5, scope: !1387)
!7007 = !DILocation(line: 1384, column: 15, scope: !1387)
!7008 = !DILocation(line: 1384, column: 23, scope: !1387)
!7009 = !DILocation(line: 1385, column: 5, scope: !1387)
!7010 = !DILocation(line: 1385, column: 23, scope: !1387)
!7011 = !DILocation(line: 1385, column: 32, scope: !1387)
!7012 = !DILocation(line: 1386, column: 5, scope: !1387)
!7013 = !DILocation(line: 1386, column: 16, scope: !1387)
!7014 = !DILocation(line: 1386, column: 22, scope: !1387)
!7015 = !DILocation(line: 1388, column: 13, scope: !1387)
!7016 = !DILocation(line: 1388, column: 11, scope: !1387)
!7017 = !DILocation(line: 1389, column: 9, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !1387, file: !453, line: 1389, column: 9)
!7019 = !DILocation(line: 1389, column: 15, scope: !7018)
!7020 = !DILocation(line: 1389, column: 9, scope: !1387)
!7021 = !DILocation(line: 1390, column: 9, scope: !7018)
!7022 = !DILocation(line: 1392, column: 11, scope: !1387)
!7023 = !DILocation(line: 1392, column: 9, scope: !1387)
!7024 = !DILocation(line: 1393, column: 47, scope: !1387)
!7025 = !DILocation(line: 1393, column: 25, scope: !1387)
!7026 = !DILocation(line: 1393, column: 7, scope: !1387)
!7027 = !DILocation(line: 1393, column: 34, scope: !1387)
!7028 = !DILocation(line: 1393, column: 6, scope: !1387)
!7029 = !DILocation(line: 1393, column: 45, scope: !1387)
!7030 = !DILocation(line: 1394, column: 51, scope: !1387)
!7031 = !DILocation(line: 1395, column: 25, scope: !1387)
!7032 = !DILocation(line: 1395, column: 7, scope: !1387)
!7033 = !DILocation(line: 1395, column: 34, scope: !1387)
!7034 = !DILocation(line: 1395, column: 6, scope: !1387)
!7035 = !DILocation(line: 1395, column: 45, scope: !1387)
!7036 = !DILocation(line: 1398, column: 12, scope: !1387)
!7037 = !DILocation(line: 1399, column: 49, scope: !1387)
!7038 = !DILocation(line: 1399, column: 31, scope: !1387)
!7039 = !DILocation(line: 1399, column: 56, scope: !1387)
!7040 = !DILocation(line: 1399, column: 29, scope: !1387)
!7041 = !DILocation(line: 1399, column: 84, scope: !7042)
!7042 = !DILexicalBlockFile(scope: !1387, file: !453, discriminator: 1)
!7043 = !DILocation(line: 1399, column: 66, scope: !1387)
!7044 = !DILocation(line: 1399, column: 91, scope: !1387)
!7045 = !DILocation(line: 1399, column: 132, scope: !7046)
!7046 = !DILexicalBlockFile(scope: !1387, file: !453, discriminator: 2)
!7047 = !DILocation(line: 1399, column: 99, scope: !1387)
!7048 = !DILocation(line: 1399, column: 12, scope: !7049)
!7049 = !DILexicalBlockFile(scope: !7050, file: !453, discriminator: 4)
!7050 = !DILexicalBlockFile(scope: !1387, file: !453, discriminator: 3)
!7051 = !DILocation(line: 1402, column: 33, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !1387, file: !453, line: 1402, column: 9)
!7053 = !DILocation(line: 1402, column: 9, scope: !7052)
!7054 = !DILocation(line: 1402, column: 76, scope: !7052)
!7055 = !DILocation(line: 1402, column: 9, scope: !1387)
!7056 = !DILocation(line: 1403, column: 9, scope: !7052)
!7057 = !DILocation(line: 1404, column: 9, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !1387, file: !453, line: 1404, column: 9)
!7059 = !DILocation(line: 1404, column: 54, scope: !7058)
!7060 = !DILocation(line: 1404, column: 36, scope: !7058)
!7061 = !DILocation(line: 1404, column: 61, scope: !7058)
!7062 = !DILocation(line: 1404, column: 34, scope: !7058)
!7063 = !DILocation(line: 1404, column: 89, scope: !7064)
!7064 = !DILexicalBlockFile(scope: !7058, file: !453, discriminator: 1)
!7065 = !DILocation(line: 1404, column: 71, scope: !7058)
!7066 = !DILocation(line: 1404, column: 96, scope: !7058)
!7067 = !DILocation(line: 1404, column: 137, scope: !7068)
!7068 = !DILexicalBlockFile(scope: !7058, file: !453, discriminator: 2)
!7069 = !DILocation(line: 1404, column: 104, scope: !7058)
!7070 = !DILocation(line: 1404, column: 16, scope: !7071)
!7071 = !DILexicalBlockFile(scope: !7072, file: !453, discriminator: 4)
!7072 = !DILexicalBlockFile(scope: !7058, file: !453, discriminator: 3)
!7073 = !DILocation(line: 1404, column: 9, scope: !1387)
!7074 = !DILocation(line: 1405, column: 16, scope: !7058)
!7075 = !DILocation(line: 1405, column: 9, scope: !7058)
!7076 = !DILocation(line: 1407, column: 9, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !1387, file: !453, line: 1407, column: 9)
!7078 = !DILocation(line: 1407, column: 16, scope: !7077)
!7079 = !DILocation(line: 1407, column: 9, scope: !1387)
!7080 = !DILocation(line: 1408, column: 16, scope: !7077)
!7081 = !DILocation(line: 1408, column: 9, scope: !7077)
!7082 = !DILocation(line: 1411, column: 12, scope: !1387)
!7083 = !DILocation(line: 1412, column: 49, scope: !1387)
!7084 = !DILocation(line: 1412, column: 31, scope: !1387)
!7085 = !DILocation(line: 1412, column: 56, scope: !1387)
!7086 = !DILocation(line: 1412, column: 29, scope: !1387)
!7087 = !DILocation(line: 1412, column: 84, scope: !7042)
!7088 = !DILocation(line: 1412, column: 66, scope: !1387)
!7089 = !DILocation(line: 1412, column: 91, scope: !1387)
!7090 = !DILocation(line: 1412, column: 132, scope: !7046)
!7091 = !DILocation(line: 1412, column: 99, scope: !1387)
!7092 = !DILocation(line: 1412, column: 12, scope: !7049)
!7093 = !DILocation(line: 1413, column: 10, scope: !1387)
!7094 = !DILocation(line: 1414, column: 10, scope: !1387)
!7095 = !DILocation(line: 1417, column: 33, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !1387, file: !453, line: 1417, column: 9)
!7097 = !DILocation(line: 1417, column: 9, scope: !7096)
!7098 = !DILocation(line: 1418, column: 42, scope: !7096)
!7099 = !DILocation(line: 1417, column: 9, scope: !1387)
!7100 = !DILocation(line: 1419, column: 9, scope: !7096)
!7101 = !DILocation(line: 1420, column: 9, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !1387, file: !453, line: 1420, column: 9)
!7103 = !DILocation(line: 1420, column: 54, scope: !7102)
!7104 = !DILocation(line: 1420, column: 36, scope: !7102)
!7105 = !DILocation(line: 1420, column: 61, scope: !7102)
!7106 = !DILocation(line: 1420, column: 34, scope: !7102)
!7107 = !DILocation(line: 1420, column: 89, scope: !7108)
!7108 = !DILexicalBlockFile(scope: !7102, file: !453, discriminator: 1)
!7109 = !DILocation(line: 1420, column: 71, scope: !7102)
!7110 = !DILocation(line: 1420, column: 96, scope: !7102)
!7111 = !DILocation(line: 1420, column: 137, scope: !7112)
!7112 = !DILexicalBlockFile(scope: !7102, file: !453, discriminator: 2)
!7113 = !DILocation(line: 1420, column: 104, scope: !7102)
!7114 = !DILocation(line: 1420, column: 16, scope: !7115)
!7115 = !DILexicalBlockFile(scope: !7116, file: !453, discriminator: 4)
!7116 = !DILexicalBlockFile(scope: !7102, file: !453, discriminator: 3)
!7117 = !DILocation(line: 1420, column: 144, scope: !7102)
!7118 = !DILocation(line: 1421, column: 9, scope: !7102)
!7119 = !DILocation(line: 1421, column: 52, scope: !7102)
!7120 = !DILocation(line: 1421, column: 34, scope: !7102)
!7121 = !DILocation(line: 1421, column: 59, scope: !7102)
!7122 = !DILocation(line: 1421, column: 32, scope: !7102)
!7123 = !DILocation(line: 1421, column: 86, scope: !7108)
!7124 = !DILocation(line: 1421, column: 70, scope: !7102)
!7125 = !DILocation(line: 1421, column: 92, scope: !7102)
!7126 = !DILocation(line: 1421, column: 98, scope: !7102)
!7127 = !DILocation(line: 1421, column: 69, scope: !7102)
!7128 = !DILocation(line: 1421, column: 104, scope: !7102)
!7129 = !DILocation(line: 1421, column: 126, scope: !7116)
!7130 = !DILocation(line: 1421, column: 109, scope: !7102)
!7131 = !DILocation(line: 1421, column: 133, scope: !7102)
!7132 = !DILocation(line: 1421, column: 139, scope: !7102)
!7133 = !DILocation(line: 1421, column: 107, scope: !7102)
!7134 = !DILocation(line: 1421, column: 68, scope: !7102)
!7135 = !DILocation(line: 1421, column: 168, scope: !7136)
!7136 = !DILexicalBlockFile(scope: !7102, file: !453, discriminator: 5)
!7137 = !DILocation(line: 1421, column: 152, scope: !7102)
!7138 = !DILocation(line: 1421, column: 174, scope: !7102)
!7139 = !DILocation(line: 1421, column: 209, scope: !7140)
!7140 = !DILexicalBlockFile(scope: !7141, file: !453, discriminator: 6)
!7141 = !DILexicalBlockFile(scope: !7102, file: !453, discriminator: 4)
!7142 = !DILocation(line: 1421, column: 184, scope: !7102)
!7143 = !DILocation(line: 1421, column: 215, scope: !7102)
!7144 = !DILocation(line: 1421, column: 32, scope: !7145)
!7145 = !DILexicalBlockFile(scope: !7146, file: !453, discriminator: 8)
!7146 = !DILexicalBlockFile(scope: !7102, file: !453, discriminator: 7)
!7147 = !DILocation(line: 1421, column: 270, scope: !7112)
!7148 = !DILocation(line: 1421, column: 237, scope: !7102)
!7149 = !DILocation(line: 1421, column: 310, scope: !7102)
!7150 = !DILocation(line: 1421, column: 294, scope: !7102)
!7151 = !DILocation(line: 1421, column: 316, scope: !7102)
!7152 = !DILocation(line: 1421, column: 322, scope: !7102)
!7153 = !DILocation(line: 1421, column: 293, scope: !7102)
!7154 = !DILocation(line: 1421, column: 328, scope: !7102)
!7155 = !DILocation(line: 1421, column: 350, scope: !7156)
!7156 = !DILexicalBlockFile(scope: !7102, file: !453, discriminator: 10)
!7157 = !DILocation(line: 1421, column: 333, scope: !7102)
!7158 = !DILocation(line: 1421, column: 357, scope: !7102)
!7159 = !DILocation(line: 1421, column: 363, scope: !7102)
!7160 = !DILocation(line: 1421, column: 331, scope: !7102)
!7161 = !DILocation(line: 1421, column: 292, scope: !7102)
!7162 = !DILocation(line: 1421, column: 392, scope: !7163)
!7163 = !DILexicalBlockFile(scope: !7102, file: !453, discriminator: 12)
!7164 = !DILocation(line: 1421, column: 376, scope: !7102)
!7165 = !DILocation(line: 1421, column: 398, scope: !7102)
!7166 = !DILocation(line: 1421, column: 433, scope: !7167)
!7167 = !DILexicalBlockFile(scope: !7168, file: !453, discriminator: 13)
!7168 = !DILexicalBlockFile(scope: !7102, file: !453, discriminator: 11)
!7169 = !DILocation(line: 1421, column: 408, scope: !7102)
!7170 = !DILocation(line: 1421, column: 439, scope: !7102)
!7171 = !DILocation(line: 1421, column: 32, scope: !7172)
!7172 = !DILexicalBlockFile(scope: !7173, file: !453, discriminator: 15)
!7173 = !DILexicalBlockFile(scope: !7102, file: !453, discriminator: 14)
!7174 = !DILocation(line: 1421, column: 14, scope: !7175)
!7175 = !DILexicalBlockFile(scope: !7176, file: !453, discriminator: 16)
!7176 = !DILexicalBlockFile(scope: !7102, file: !453, discriminator: 9)
!7177 = !DILocation(line: 1420, column: 9, scope: !1387)
!7178 = !DILocation(line: 1422, column: 16, scope: !7102)
!7179 = !DILocation(line: 1422, column: 9, scope: !7102)
!7180 = !DILocation(line: 1424, column: 9, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !1387, file: !453, line: 1424, column: 9)
!7182 = !DILocation(line: 1424, column: 16, scope: !7181)
!7183 = !DILocation(line: 1424, column: 30, scope: !7181)
!7184 = !DILocation(line: 1425, column: 9, scope: !7181)
!7185 = !DILocation(line: 1425, column: 14, scope: !7181)
!7186 = !DILocation(line: 1424, column: 9, scope: !1387)
!7187 = !DILocation(line: 1426, column: 16, scope: !7181)
!7188 = !DILocation(line: 1426, column: 9, scope: !7181)
!7189 = !DILocation(line: 1429, column: 5, scope: !1387)
!7190 = !DILocation(line: 1429, column: 10, scope: !7191)
!7191 = !DILexicalBlockFile(scope: !1399, file: !453, discriminator: 1)
!7192 = !DILocation(line: 1429, column: 20, scope: !1399)
!7193 = !DILocation(line: 1429, column: 50, scope: !1399)
!7194 = !DILocation(line: 1429, column: 66, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !1399, file: !453, line: 1429, column: 63)
!7196 = !DILocation(line: 1429, column: 83, scope: !7195)
!7197 = !DILocation(line: 1429, column: 63, scope: !7195)
!7198 = !DILocation(line: 1429, column: 93, scope: !7195)
!7199 = !DILocation(line: 1429, column: 63, scope: !1399)
!7200 = !DILocation(line: 1429, column: 63, scope: !7201)
!7201 = !DILexicalBlockFile(scope: !1399, file: !453, discriminator: 2)
!7202 = !DILocation(line: 1429, column: 124, scope: !7203)
!7203 = !DILexicalBlockFile(scope: !7195, file: !453, discriminator: 3)
!7204 = !DILocation(line: 1429, column: 142, scope: !7195)
!7205 = !DILocation(line: 1429, column: 152, scope: !7195)
!7206 = !DILocation(line: 1429, column: 177, scope: !7195)
!7207 = !DILocation(line: 1429, column: 108, scope: !7195)
!7208 = !DILocation(line: 1429, column: 196, scope: !7209)
!7209 = !DILexicalBlockFile(scope: !1387, file: !453, discriminator: 4)
!7210 = !DILocation(line: 1429, column: 196, scope: !1399)
!7211 = !DILocation(line: 1429, column: 196, scope: !7212)
!7212 = !DILexicalBlockFile(scope: !1399, file: !453, discriminator: 5)
!7213 = !DILocation(line: 1430, column: 58, scope: !1387)
!7214 = !DILocation(line: 1430, column: 5, scope: !1387)
!7215 = !DILocation(line: 1431, column: 1, scope: !1387)
!7216 = !DILocation(line: 1434, column: 25, scope: !1400)
!7217 = !DILocation(line: 1438, column: 5, scope: !1400)
!7218 = !DILocation(line: 1438, column: 12, scope: !1400)
!7219 = !DILocation(line: 1444, column: 5, scope: !1400)
!7220 = !DILocation(line: 1444, column: 15, scope: !1400)
!7221 = !DILocation(line: 1444, column: 22, scope: !1400)
!7222 = !DILocation(line: 1446, column: 42, scope: !1400)
!7223 = !DILocation(line: 1446, column: 12, scope: !1400)
!7224 = !DILocation(line: 1446, column: 10, scope: !1400)
!7225 = !DILocation(line: 1447, column: 9, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !1400, file: !453, line: 1447, column: 9)
!7227 = !DILocation(line: 1447, column: 14, scope: !7226)
!7228 = !DILocation(line: 1447, column: 9, scope: !1400)
!7229 = !DILocation(line: 1448, column: 9, scope: !7226)
!7230 = !DILocation(line: 1450, column: 12, scope: !1400)
!7231 = !DILocation(line: 1450, column: 10, scope: !1400)
!7232 = !DILocation(line: 1451, column: 9, scope: !1409)
!7233 = !DILocation(line: 1451, column: 14, scope: !1409)
!7234 = !DILocation(line: 1451, column: 9, scope: !1400)
!7235 = !DILocation(line: 1452, column: 9, scope: !1408)
!7236 = !DILocation(line: 1452, column: 14, scope: !7237)
!7237 = !DILexicalBlockFile(scope: !1407, file: !453, discriminator: 1)
!7238 = !DILocation(line: 1452, column: 24, scope: !1407)
!7239 = !DILocation(line: 1452, column: 54, scope: !1407)
!7240 = !DILocation(line: 1452, column: 69, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !1407, file: !453, line: 1452, column: 66)
!7242 = !DILocation(line: 1452, column: 86, scope: !7241)
!7243 = !DILocation(line: 1452, column: 66, scope: !7241)
!7244 = !DILocation(line: 1452, column: 96, scope: !7241)
!7245 = !DILocation(line: 1452, column: 66, scope: !1407)
!7246 = !DILocation(line: 1452, column: 66, scope: !7247)
!7247 = !DILexicalBlockFile(scope: !1407, file: !453, discriminator: 2)
!7248 = !DILocation(line: 1452, column: 127, scope: !7249)
!7249 = !DILexicalBlockFile(scope: !7241, file: !453, discriminator: 3)
!7250 = !DILocation(line: 1452, column: 145, scope: !7241)
!7251 = !DILocation(line: 1452, column: 155, scope: !7241)
!7252 = !DILocation(line: 1452, column: 180, scope: !7241)
!7253 = !DILocation(line: 1452, column: 111, scope: !7241)
!7254 = !DILocation(line: 1452, column: 199, scope: !7255)
!7255 = !DILexicalBlockFile(scope: !1408, file: !453, discriminator: 4)
!7256 = !DILocation(line: 1452, column: 199, scope: !1407)
!7257 = !DILocation(line: 1452, column: 199, scope: !7258)
!7258 = !DILexicalBlockFile(scope: !1407, file: !453, discriminator: 5)
!7259 = !DILocation(line: 1453, column: 9, scope: !1408)
!7260 = !DILocation(line: 1456, column: 57, scope: !1413)
!7261 = !DILocation(line: 1456, column: 39, scope: !1413)
!7262 = !DILocation(line: 1456, column: 65, scope: !1413)
!7263 = !DILocation(line: 1456, column: 124, scope: !1413)
!7264 = !DILocation(line: 1456, column: 106, scope: !1413)
!7265 = !DILocation(line: 1456, column: 132, scope: !1413)
!7266 = !DILocation(line: 1456, column: 73, scope: !1413)
!7267 = !DILocation(line: 1456, column: 9, scope: !1400)
!7268 = !DILocation(line: 1457, column: 9, scope: !1412)
!7269 = !DILocation(line: 1457, column: 14, scope: !7270)
!7270 = !DILexicalBlockFile(scope: !1411, file: !453, discriminator: 1)
!7271 = !DILocation(line: 1457, column: 24, scope: !1411)
!7272 = !DILocation(line: 1457, column: 54, scope: !1411)
!7273 = !DILocation(line: 1457, column: 69, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !1411, file: !453, line: 1457, column: 66)
!7275 = !DILocation(line: 1457, column: 86, scope: !7274)
!7276 = !DILocation(line: 1457, column: 66, scope: !7274)
!7277 = !DILocation(line: 1457, column: 96, scope: !7274)
!7278 = !DILocation(line: 1457, column: 66, scope: !1411)
!7279 = !DILocation(line: 1457, column: 66, scope: !7280)
!7280 = !DILexicalBlockFile(scope: !1411, file: !453, discriminator: 2)
!7281 = !DILocation(line: 1457, column: 127, scope: !7282)
!7282 = !DILexicalBlockFile(scope: !7274, file: !453, discriminator: 3)
!7283 = !DILocation(line: 1457, column: 145, scope: !7274)
!7284 = !DILocation(line: 1457, column: 155, scope: !7274)
!7285 = !DILocation(line: 1457, column: 180, scope: !7274)
!7286 = !DILocation(line: 1457, column: 111, scope: !7274)
!7287 = !DILocation(line: 1457, column: 199, scope: !7288)
!7288 = !DILexicalBlockFile(scope: !1412, file: !453, discriminator: 4)
!7289 = !DILocation(line: 1457, column: 199, scope: !1411)
!7290 = !DILocation(line: 1457, column: 199, scope: !7291)
!7291 = !DILexicalBlockFile(scope: !1411, file: !453, discriminator: 5)
!7292 = !DILocation(line: 1458, column: 9, scope: !1412)
!7293 = !DILocation(line: 1458, column: 14, scope: !7294)
!7294 = !DILexicalBlockFile(scope: !1415, file: !453, discriminator: 1)
!7295 = !DILocation(line: 1458, column: 24, scope: !1415)
!7296 = !DILocation(line: 1458, column: 54, scope: !1415)
!7297 = !DILocation(line: 1458, column: 69, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !1415, file: !453, line: 1458, column: 66)
!7299 = !DILocation(line: 1458, column: 86, scope: !7298)
!7300 = !DILocation(line: 1458, column: 66, scope: !7298)
!7301 = !DILocation(line: 1458, column: 96, scope: !7298)
!7302 = !DILocation(line: 1458, column: 66, scope: !1415)
!7303 = !DILocation(line: 1458, column: 66, scope: !7304)
!7304 = !DILexicalBlockFile(scope: !1415, file: !453, discriminator: 2)
!7305 = !DILocation(line: 1458, column: 127, scope: !7306)
!7306 = !DILexicalBlockFile(scope: !7298, file: !453, discriminator: 3)
!7307 = !DILocation(line: 1458, column: 145, scope: !7298)
!7308 = !DILocation(line: 1458, column: 155, scope: !7298)
!7309 = !DILocation(line: 1458, column: 180, scope: !7298)
!7310 = !DILocation(line: 1458, column: 111, scope: !7298)
!7311 = !DILocation(line: 1458, column: 199, scope: !7288)
!7312 = !DILocation(line: 1458, column: 199, scope: !1415)
!7313 = !DILocation(line: 1458, column: 199, scope: !7314)
!7314 = !DILexicalBlockFile(scope: !1415, file: !453, discriminator: 5)
!7315 = !DILocation(line: 1459, column: 16, scope: !1412)
!7316 = !DILocation(line: 1459, column: 9, scope: !1412)
!7317 = !DILocation(line: 1463, column: 27, scope: !1419)
!7318 = !DILocation(line: 1463, column: 33, scope: !1419)
!7319 = !DILocation(line: 1463, column: 9, scope: !1419)
!7320 = !DILocation(line: 1463, column: 9, scope: !1400)
!7321 = !DILocation(line: 1464, column: 9, scope: !1418)
!7322 = !DILocation(line: 1464, column: 14, scope: !7323)
!7323 = !DILexicalBlockFile(scope: !1417, file: !453, discriminator: 1)
!7324 = !DILocation(line: 1464, column: 24, scope: !1417)
!7325 = !DILocation(line: 1464, column: 54, scope: !1417)
!7326 = !DILocation(line: 1464, column: 69, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !1417, file: !453, line: 1464, column: 66)
!7328 = !DILocation(line: 1464, column: 86, scope: !7327)
!7329 = !DILocation(line: 1464, column: 66, scope: !7327)
!7330 = !DILocation(line: 1464, column: 96, scope: !7327)
!7331 = !DILocation(line: 1464, column: 66, scope: !1417)
!7332 = !DILocation(line: 1464, column: 66, scope: !7333)
!7333 = !DILexicalBlockFile(scope: !1417, file: !453, discriminator: 2)
!7334 = !DILocation(line: 1464, column: 127, scope: !7335)
!7335 = !DILexicalBlockFile(scope: !7327, file: !453, discriminator: 3)
!7336 = !DILocation(line: 1464, column: 145, scope: !7327)
!7337 = !DILocation(line: 1464, column: 155, scope: !7327)
!7338 = !DILocation(line: 1464, column: 180, scope: !7327)
!7339 = !DILocation(line: 1464, column: 111, scope: !7327)
!7340 = !DILocation(line: 1464, column: 199, scope: !7341)
!7341 = !DILexicalBlockFile(scope: !1418, file: !453, discriminator: 4)
!7342 = !DILocation(line: 1464, column: 199, scope: !1417)
!7343 = !DILocation(line: 1464, column: 199, scope: !7344)
!7344 = !DILexicalBlockFile(scope: !1417, file: !453, discriminator: 5)
!7345 = !DILocation(line: 1465, column: 9, scope: !1418)
!7346 = !DILocation(line: 1465, column: 14, scope: !7347)
!7347 = !DILexicalBlockFile(scope: !1421, file: !453, discriminator: 1)
!7348 = !DILocation(line: 1465, column: 24, scope: !1421)
!7349 = !DILocation(line: 1465, column: 54, scope: !1421)
!7350 = !DILocation(line: 1465, column: 69, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !1421, file: !453, line: 1465, column: 66)
!7352 = !DILocation(line: 1465, column: 86, scope: !7351)
!7353 = !DILocation(line: 1465, column: 66, scope: !7351)
!7354 = !DILocation(line: 1465, column: 96, scope: !7351)
!7355 = !DILocation(line: 1465, column: 66, scope: !1421)
!7356 = !DILocation(line: 1465, column: 66, scope: !7357)
!7357 = !DILexicalBlockFile(scope: !1421, file: !453, discriminator: 2)
!7358 = !DILocation(line: 1465, column: 127, scope: !7359)
!7359 = !DILexicalBlockFile(scope: !7351, file: !453, discriminator: 3)
!7360 = !DILocation(line: 1465, column: 145, scope: !7351)
!7361 = !DILocation(line: 1465, column: 155, scope: !7351)
!7362 = !DILocation(line: 1465, column: 180, scope: !7351)
!7363 = !DILocation(line: 1465, column: 111, scope: !7351)
!7364 = !DILocation(line: 1465, column: 199, scope: !7341)
!7365 = !DILocation(line: 1465, column: 199, scope: !1421)
!7366 = !DILocation(line: 1465, column: 199, scope: !7367)
!7367 = !DILexicalBlockFile(scope: !1421, file: !453, discriminator: 5)
!7368 = !DILocation(line: 1466, column: 13, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !1418, file: !453, line: 1466, column: 13)
!7370 = !DILocation(line: 1466, column: 13, scope: !1418)
!7371 = !DILocation(line: 1467, column: 13, scope: !7369)
!7372 = !DILocation(line: 1468, column: 16, scope: !1418)
!7373 = !DILocation(line: 1468, column: 9, scope: !1418)
!7374 = !DILocation(line: 1473, column: 5, scope: !1400)
!7375 = !DILocation(line: 1473, column: 10, scope: !7376)
!7376 = !DILexicalBlockFile(scope: !1423, file: !453, discriminator: 1)
!7377 = !DILocation(line: 1473, column: 20, scope: !1423)
!7378 = !DILocation(line: 1473, column: 50, scope: !1423)
!7379 = !DILocation(line: 1473, column: 65, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !1423, file: !453, line: 1473, column: 62)
!7381 = !DILocation(line: 1473, column: 82, scope: !7380)
!7382 = !DILocation(line: 1473, column: 62, scope: !7380)
!7383 = !DILocation(line: 1473, column: 92, scope: !7380)
!7384 = !DILocation(line: 1473, column: 62, scope: !1423)
!7385 = !DILocation(line: 1473, column: 62, scope: !7386)
!7386 = !DILexicalBlockFile(scope: !1423, file: !453, discriminator: 2)
!7387 = !DILocation(line: 1473, column: 123, scope: !7388)
!7388 = !DILexicalBlockFile(scope: !7380, file: !453, discriminator: 3)
!7389 = !DILocation(line: 1473, column: 141, scope: !7380)
!7390 = !DILocation(line: 1473, column: 151, scope: !7380)
!7391 = !DILocation(line: 1473, column: 176, scope: !7380)
!7392 = !DILocation(line: 1473, column: 107, scope: !7380)
!7393 = !DILocation(line: 1473, column: 195, scope: !7394)
!7394 = !DILexicalBlockFile(scope: !1400, file: !453, discriminator: 4)
!7395 = !DILocation(line: 1473, column: 195, scope: !1423)
!7396 = !DILocation(line: 1473, column: 195, scope: !7397)
!7397 = !DILexicalBlockFile(scope: !1423, file: !453, discriminator: 5)
!7398 = !DILocation(line: 1474, column: 5, scope: !1400)
!7399 = !DILocation(line: 1474, column: 10, scope: !7400)
!7400 = !DILexicalBlockFile(scope: !1425, file: !453, discriminator: 1)
!7401 = !DILocation(line: 1474, column: 20, scope: !1425)
!7402 = !DILocation(line: 1474, column: 50, scope: !1425)
!7403 = !DILocation(line: 1474, column: 65, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !1425, file: !453, line: 1474, column: 62)
!7405 = !DILocation(line: 1474, column: 82, scope: !7404)
!7406 = !DILocation(line: 1474, column: 62, scope: !7404)
!7407 = !DILocation(line: 1474, column: 92, scope: !7404)
!7408 = !DILocation(line: 1474, column: 62, scope: !1425)
!7409 = !DILocation(line: 1474, column: 62, scope: !7410)
!7410 = !DILexicalBlockFile(scope: !1425, file: !453, discriminator: 2)
!7411 = !DILocation(line: 1474, column: 123, scope: !7412)
!7412 = !DILexicalBlockFile(scope: !7404, file: !453, discriminator: 3)
!7413 = !DILocation(line: 1474, column: 141, scope: !7404)
!7414 = !DILocation(line: 1474, column: 151, scope: !7404)
!7415 = !DILocation(line: 1474, column: 176, scope: !7404)
!7416 = !DILocation(line: 1474, column: 107, scope: !7404)
!7417 = !DILocation(line: 1474, column: 195, scope: !7394)
!7418 = !DILocation(line: 1474, column: 195, scope: !1425)
!7419 = !DILocation(line: 1474, column: 195, scope: !7420)
!7420 = !DILexicalBlockFile(scope: !1425, file: !453, discriminator: 5)
!7421 = !DILocation(line: 1477, column: 12, scope: !1400)
!7422 = !DILocation(line: 1477, column: 10, scope: !1400)
!7423 = !DILocation(line: 1478, column: 9, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !1400, file: !453, line: 1478, column: 9)
!7425 = !DILocation(line: 1478, column: 14, scope: !7424)
!7426 = !DILocation(line: 1478, column: 9, scope: !1400)
!7427 = !DILocation(line: 1479, column: 9, scope: !7424)
!7428 = !DILocation(line: 1481, column: 16, scope: !7424)
!7429 = !DILocation(line: 1481, column: 9, scope: !7424)
!7430 = !DILocation(line: 1484, column: 12, scope: !1400)
!7431 = !DILocation(line: 1484, column: 10, scope: !1400)
!7432 = !DILocation(line: 1485, column: 9, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !1400, file: !453, line: 1485, column: 9)
!7434 = !DILocation(line: 1485, column: 14, scope: !7433)
!7435 = !DILocation(line: 1485, column: 9, scope: !1400)
!7436 = !DILocation(line: 1486, column: 9, scope: !7433)
!7437 = !DILocation(line: 1488, column: 16, scope: !7433)
!7438 = !DILocation(line: 1488, column: 9, scope: !7433)
!7439 = !DILocation(line: 1491, column: 12, scope: !1400)
!7440 = !DILocation(line: 1491, column: 10, scope: !1400)
!7441 = !DILocation(line: 1492, column: 9, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !1400, file: !453, line: 1492, column: 9)
!7443 = !DILocation(line: 1492, column: 14, scope: !7442)
!7444 = !DILocation(line: 1492, column: 9, scope: !1400)
!7445 = !DILocation(line: 1493, column: 9, scope: !7442)
!7446 = !DILocation(line: 1494, column: 138, scope: !1400)
!7447 = !DILocation(line: 1494, column: 40, scope: !1400)
!7448 = !DILocation(line: 1494, column: 22, scope: !1400)
!7449 = !DILocation(line: 1494, column: 48, scope: !1400)
!7450 = !DILocation(line: 1494, column: 20, scope: !1400)
!7451 = !DILocation(line: 1494, column: 76, scope: !7452)
!7452 = !DILexicalBlockFile(scope: !1400, file: !453, discriminator: 1)
!7453 = !DILocation(line: 1494, column: 58, scope: !1400)
!7454 = !DILocation(line: 1494, column: 84, scope: !1400)
!7455 = !DILocation(line: 1494, column: 125, scope: !7456)
!7456 = !DILexicalBlockFile(scope: !1400, file: !453, discriminator: 2)
!7457 = !DILocation(line: 1494, column: 92, scope: !1400)
!7458 = !DILocation(line: 1494, column: 5, scope: !7459)
!7459 = !DILexicalBlockFile(scope: !7460, file: !453, discriminator: 4)
!7460 = !DILexicalBlockFile(scope: !1400, file: !453, discriminator: 3)
!7461 = !DILocation(line: 1494, column: 136, scope: !1400)
!7462 = !DILocation(line: 1495, column: 26, scope: !1429)
!7463 = !DILocation(line: 1495, column: 9, scope: !1429)
!7464 = !DILocation(line: 1495, column: 32, scope: !1429)
!7465 = !DILocation(line: 1495, column: 9, scope: !1400)
!7466 = !DILocation(line: 1496, column: 9, scope: !1428)
!7467 = !DILocation(line: 1496, column: 14, scope: !7468)
!7468 = !DILexicalBlockFile(scope: !1427, file: !453, discriminator: 1)
!7469 = !DILocation(line: 1496, column: 24, scope: !1427)
!7470 = !DILocation(line: 1496, column: 54, scope: !1427)
!7471 = !DILocation(line: 1496, column: 69, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !1427, file: !453, line: 1496, column: 66)
!7473 = !DILocation(line: 1496, column: 86, scope: !7472)
!7474 = !DILocation(line: 1496, column: 66, scope: !7472)
!7475 = !DILocation(line: 1496, column: 96, scope: !7472)
!7476 = !DILocation(line: 1496, column: 66, scope: !1427)
!7477 = !DILocation(line: 1496, column: 66, scope: !7478)
!7478 = !DILexicalBlockFile(scope: !1427, file: !453, discriminator: 2)
!7479 = !DILocation(line: 1496, column: 127, scope: !7480)
!7480 = !DILexicalBlockFile(scope: !7472, file: !453, discriminator: 3)
!7481 = !DILocation(line: 1496, column: 145, scope: !7472)
!7482 = !DILocation(line: 1496, column: 155, scope: !7472)
!7483 = !DILocation(line: 1496, column: 180, scope: !7472)
!7484 = !DILocation(line: 1496, column: 111, scope: !7472)
!7485 = !DILocation(line: 1496, column: 199, scope: !7486)
!7486 = !DILexicalBlockFile(scope: !1428, file: !453, discriminator: 4)
!7487 = !DILocation(line: 1496, column: 199, scope: !1427)
!7488 = !DILocation(line: 1496, column: 199, scope: !7489)
!7489 = !DILexicalBlockFile(scope: !1427, file: !453, discriminator: 5)
!7490 = !DILocation(line: 1497, column: 9, scope: !1428)
!7491 = !DILocation(line: 1498, column: 5, scope: !1428)
!7492 = !DILocation(line: 1500, column: 9, scope: !1432)
!7493 = !DILocation(line: 1500, column: 14, scope: !7494)
!7494 = !DILexicalBlockFile(scope: !1431, file: !453, discriminator: 1)
!7495 = !DILocation(line: 1500, column: 24, scope: !1431)
!7496 = !DILocation(line: 1500, column: 54, scope: !1431)
!7497 = !DILocation(line: 1500, column: 69, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !1431, file: !453, line: 1500, column: 66)
!7499 = !DILocation(line: 1500, column: 86, scope: !7498)
!7500 = !DILocation(line: 1500, column: 66, scope: !7498)
!7501 = !DILocation(line: 1500, column: 96, scope: !7498)
!7502 = !DILocation(line: 1500, column: 66, scope: !1431)
!7503 = !DILocation(line: 1500, column: 66, scope: !7504)
!7504 = !DILexicalBlockFile(scope: !1431, file: !453, discriminator: 2)
!7505 = !DILocation(line: 1500, column: 127, scope: !7506)
!7506 = !DILexicalBlockFile(scope: !7498, file: !453, discriminator: 3)
!7507 = !DILocation(line: 1500, column: 145, scope: !7498)
!7508 = !DILocation(line: 1500, column: 155, scope: !7498)
!7509 = !DILocation(line: 1500, column: 180, scope: !7498)
!7510 = !DILocation(line: 1500, column: 111, scope: !7498)
!7511 = !DILocation(line: 1500, column: 199, scope: !7512)
!7512 = !DILexicalBlockFile(scope: !1432, file: !453, discriminator: 4)
!7513 = !DILocation(line: 1500, column: 199, scope: !1431)
!7514 = !DILocation(line: 1500, column: 199, scope: !7515)
!7515 = !DILexicalBlockFile(scope: !1431, file: !453, discriminator: 5)
!7516 = !DILocation(line: 1501, column: 16, scope: !1432)
!7517 = !DILocation(line: 1501, column: 9, scope: !1432)
!7518 = !DILocation(line: 1506, column: 58, scope: !1400)
!7519 = !DILocation(line: 1506, column: 5, scope: !1400)
!7520 = !DILocation(line: 1507, column: 1, scope: !1400)
!7521 = !DILocation(line: 1510, column: 30, scope: !1433)
!7522 = !DILocation(line: 1510, column: 46, scope: !1433)
!7523 = !DILocation(line: 1512, column: 5, scope: !1433)
!7524 = !DILocation(line: 1512, column: 15, scope: !1433)
!7525 = !DILocation(line: 1512, column: 25, scope: !1433)
!7526 = !DILocation(line: 1513, column: 5, scope: !1433)
!7527 = !DILocation(line: 1513, column: 16, scope: !1433)
!7528 = !DILocation(line: 1513, column: 24, scope: !1433)
!7529 = !DILocation(line: 1514, column: 5, scope: !1433)
!7530 = !DILocation(line: 1514, column: 14, scope: !1433)
!7531 = !DILocation(line: 1516, column: 34, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !1433, file: !453, line: 1516, column: 9)
!7533 = !DILocation(line: 1516, column: 10, scope: !7532)
!7534 = !DILocation(line: 1516, column: 9, scope: !1433)
!7535 = !DILocation(line: 1517, column: 9, scope: !7532)
!7536 = !DILocation(line: 1518, column: 27, scope: !1433)
!7537 = !DILocation(line: 1518, column: 34, scope: !1433)
!7538 = !DILocation(line: 1518, column: 14, scope: !1433)
!7539 = !DILocation(line: 1518, column: 12, scope: !1433)
!7540 = !DILocation(line: 1519, column: 9, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !1433, file: !453, line: 1519, column: 9)
!7542 = !DILocation(line: 1519, column: 16, scope: !7541)
!7543 = !DILocation(line: 1519, column: 9, scope: !1433)
!7544 = !DILocation(line: 1520, column: 16, scope: !7541)
!7545 = !DILocation(line: 1520, column: 9, scope: !7541)
!7546 = !DILocation(line: 1522, column: 33, scope: !1433)
!7547 = !DILocation(line: 1522, column: 42, scope: !1433)
!7548 = !DILocation(line: 1522, column: 50, scope: !1433)
!7549 = !DILocation(line: 1522, column: 12, scope: !1433)
!7550 = !DILocation(line: 1522, column: 10, scope: !1433)
!7551 = !DILocation(line: 1523, column: 9, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !1433, file: !453, line: 1523, column: 9)
!7553 = !DILocation(line: 1523, column: 14, scope: !7552)
!7554 = !DILocation(line: 1523, column: 9, scope: !1433)
!7555 = !DILocation(line: 1524, column: 20, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7552, file: !453, line: 1523, column: 21)
!7557 = !DILocation(line: 1524, column: 9, scope: !7556)
!7558 = !DILocation(line: 1525, column: 9, scope: !7556)
!7559 = !DILocation(line: 1528, column: 9, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !1433, file: !453, line: 1528, column: 9)
!7561 = !DILocation(line: 1528, column: 16, scope: !7560)
!7562 = !DILocation(line: 1528, column: 14, scope: !7560)
!7563 = !DILocation(line: 1528, column: 9, scope: !1433)
!7564 = !DILocation(line: 1529, column: 18, scope: !7560)
!7565 = !DILocation(line: 1529, column: 23, scope: !7560)
!7566 = !DILocation(line: 1529, column: 16, scope: !7560)
!7567 = !DILocation(line: 1529, column: 9, scope: !7560)
!7568 = !DILocation(line: 1531, column: 18, scope: !7560)
!7569 = !DILocation(line: 1531, column: 16, scope: !7560)
!7570 = !DILocation(line: 1532, column: 37, scope: !1433)
!7571 = !DILocation(line: 1532, column: 45, scope: !1433)
!7572 = !DILocation(line: 1532, column: 14, scope: !1433)
!7573 = !DILocation(line: 1532, column: 12, scope: !1433)
!7574 = !DILocation(line: 1533, column: 16, scope: !1433)
!7575 = !DILocation(line: 1533, column: 5, scope: !1433)
!7576 = !DILocation(line: 1534, column: 9, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !1433, file: !453, line: 1534, column: 9)
!7578 = !DILocation(line: 1534, column: 16, scope: !7577)
!7579 = !DILocation(line: 1534, column: 9, scope: !1433)
!7580 = !DILocation(line: 1535, column: 9, scope: !7577)
!7581 = !DILocation(line: 1537, column: 41, scope: !1433)
!7582 = !DILocation(line: 1537, column: 49, scope: !1433)
!7583 = !DILocation(line: 1537, column: 12, scope: !1433)
!7584 = !DILocation(line: 1537, column: 5, scope: !1433)
!7585 = !DILocation(line: 1538, column: 1, scope: !1433)
!7586 = !DILocation(line: 1541, column: 36, scope: !1442)
!7587 = !DILocation(line: 1541, column: 52, scope: !1442)
!7588 = !DILocation(line: 1543, column: 5, scope: !1442)
!7589 = !DILocation(line: 1543, column: 15, scope: !1442)
!7590 = !DILocation(line: 1543, column: 25, scope: !1442)
!7591 = !DILocation(line: 1544, column: 5, scope: !1442)
!7592 = !DILocation(line: 1544, column: 16, scope: !1442)
!7593 = !DILocation(line: 1545, column: 5, scope: !1442)
!7594 = !DILocation(line: 1545, column: 14, scope: !1442)
!7595 = !DILocation(line: 1547, column: 34, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !1442, file: !453, line: 1547, column: 9)
!7597 = !DILocation(line: 1547, column: 10, scope: !7596)
!7598 = !DILocation(line: 1547, column: 9, scope: !1442)
!7599 = !DILocation(line: 1548, column: 9, scope: !7596)
!7600 = !DILocation(line: 1550, column: 41, scope: !1442)
!7601 = !DILocation(line: 1550, column: 14, scope: !1442)
!7602 = !DILocation(line: 1550, column: 12, scope: !1442)
!7603 = !DILocation(line: 1551, column: 9, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !1442, file: !453, line: 1551, column: 9)
!7605 = !DILocation(line: 1551, column: 16, scope: !7604)
!7606 = !DILocation(line: 1551, column: 9, scope: !1442)
!7607 = !DILocation(line: 1552, column: 9, scope: !7604)
!7608 = !DILocation(line: 1554, column: 37, scope: !1442)
!7609 = !DILocation(line: 1554, column: 45, scope: !1442)
!7610 = !DILocation(line: 1554, column: 50, scope: !1442)
!7611 = !DILocation(line: 1554, column: 14, scope: !1442)
!7612 = !DILocation(line: 1554, column: 12, scope: !1442)
!7613 = !DILocation(line: 1555, column: 16, scope: !1442)
!7614 = !DILocation(line: 1555, column: 5, scope: !1442)
!7615 = !DILocation(line: 1556, column: 9, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !1442, file: !453, line: 1556, column: 9)
!7617 = !DILocation(line: 1556, column: 16, scope: !7616)
!7618 = !DILocation(line: 1556, column: 9, scope: !1442)
!7619 = !DILocation(line: 1557, column: 9, scope: !7616)
!7620 = !DILocation(line: 1558, column: 41, scope: !1442)
!7621 = !DILocation(line: 1558, column: 49, scope: !1442)
!7622 = !DILocation(line: 1558, column: 12, scope: !1442)
!7623 = !DILocation(line: 1558, column: 5, scope: !1442)
!7624 = !DILocation(line: 1559, column: 1, scope: !1442)
!7625 = !DILocation(line: 1562, column: 33, scope: !1450)
!7626 = !DILocation(line: 1562, column: 49, scope: !1450)
!7627 = !DILocation(line: 1564, column: 5, scope: !1450)
!7628 = !DILocation(line: 1564, column: 17, scope: !1450)
!7629 = !DILocation(line: 1565, column: 5, scope: !1450)
!7630 = !DILocation(line: 1565, column: 16, scope: !1450)
!7631 = !DILocation(line: 1566, column: 5, scope: !1450)
!7632 = !DILocation(line: 1566, column: 11, scope: !1450)
!7633 = !DILocation(line: 1567, column: 5, scope: !1450)
!7634 = !DILocation(line: 1567, column: 15, scope: !1450)
!7635 = !DILocation(line: 1568, column: 5, scope: !1450)
!7636 = !DILocation(line: 1568, column: 16, scope: !1450)
!7637 = !DILocation(line: 1568, column: 32, scope: !1450)
!7638 = !DILocation(line: 1569, column: 5, scope: !1450)
!7639 = !DILocation(line: 1569, column: 9, scope: !1450)
!7640 = !DILocation(line: 1571, column: 34, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !1450, file: !453, line: 1571, column: 9)
!7642 = !DILocation(line: 1571, column: 10, scope: !7641)
!7643 = !DILocation(line: 1571, column: 9, scope: !1450)
!7644 = !DILocation(line: 1572, column: 9, scope: !7641)
!7645 = !DILocation(line: 1574, column: 22, scope: !1450)
!7646 = !DILocation(line: 1574, column: 29, scope: !1450)
!7647 = !DILocation(line: 1574, column: 20, scope: !1450)
!7648 = !DILocation(line: 1575, column: 53, scope: !1450)
!7649 = !DILocation(line: 1575, column: 15, scope: !1450)
!7650 = !DILocation(line: 1575, column: 13, scope: !1450)
!7651 = !DILocation(line: 1576, column: 9, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !1450, file: !453, line: 1576, column: 9)
!7653 = !DILocation(line: 1576, column: 17, scope: !7652)
!7654 = !DILocation(line: 1576, column: 9, scope: !1450)
!7655 = !DILocation(line: 1577, column: 9, scope: !7652)
!7656 = !DILocation(line: 1579, column: 35, scope: !1450)
!7657 = !DILocation(line: 1579, column: 44, scope: !1450)
!7658 = !DILocation(line: 1580, column: 70, scope: !1450)
!7659 = !DILocation(line: 1580, column: 52, scope: !1450)
!7660 = !DILocation(line: 1580, column: 81, scope: !1450)
!7661 = !DILocation(line: 1580, column: 50, scope: !1450)
!7662 = !DILocation(line: 1581, column: 35, scope: !1450)
!7663 = !DILocation(line: 1579, column: 11, scope: !1450)
!7664 = !DILocation(line: 1579, column: 9, scope: !1450)
!7665 = !DILocation(line: 1582, column: 9, scope: !1464)
!7666 = !DILocation(line: 1582, column: 13, scope: !1464)
!7667 = !DILocation(line: 1582, column: 9, scope: !1450)
!7668 = !DILocation(line: 1583, column: 9, scope: !1463)
!7669 = !DILocation(line: 1583, column: 14, scope: !7670)
!7670 = !DILexicalBlockFile(scope: !1462, file: !453, discriminator: 1)
!7671 = !DILocation(line: 1583, column: 24, scope: !1462)
!7672 = !DILocation(line: 1583, column: 54, scope: !1462)
!7673 = !DILocation(line: 1583, column: 72, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !1462, file: !453, line: 1583, column: 69)
!7675 = !DILocation(line: 1583, column: 89, scope: !7674)
!7676 = !DILocation(line: 1583, column: 69, scope: !7674)
!7677 = !DILocation(line: 1583, column: 99, scope: !7674)
!7678 = !DILocation(line: 1583, column: 69, scope: !1462)
!7679 = !DILocation(line: 1583, column: 69, scope: !7680)
!7680 = !DILexicalBlockFile(scope: !1462, file: !453, discriminator: 2)
!7681 = !DILocation(line: 1583, column: 130, scope: !7682)
!7682 = !DILexicalBlockFile(scope: !7674, file: !453, discriminator: 3)
!7683 = !DILocation(line: 1583, column: 148, scope: !7674)
!7684 = !DILocation(line: 1583, column: 158, scope: !7674)
!7685 = !DILocation(line: 1583, column: 183, scope: !7674)
!7686 = !DILocation(line: 1583, column: 114, scope: !7674)
!7687 = !DILocation(line: 1583, column: 202, scope: !7688)
!7688 = !DILexicalBlockFile(scope: !1463, file: !453, discriminator: 4)
!7689 = !DILocation(line: 1583, column: 202, scope: !1462)
!7690 = !DILocation(line: 1583, column: 202, scope: !7691)
!7691 = !DILexicalBlockFile(scope: !1462, file: !453, discriminator: 5)
!7692 = !DILocation(line: 1584, column: 9, scope: !1463)
!7693 = !DILocation(line: 1587, column: 60, scope: !1450)
!7694 = !DILocation(line: 1587, column: 42, scope: !1450)
!7695 = !DILocation(line: 1587, column: 71, scope: !1450)
!7696 = !DILocation(line: 1587, column: 40, scope: !1450)
!7697 = !DILocation(line: 1587, column: 18, scope: !1450)
!7698 = !DILocation(line: 1587, column: 16, scope: !1450)
!7699 = !DILocation(line: 1589, column: 37, scope: !1450)
!7700 = !DILocation(line: 1589, column: 11, scope: !1450)
!7701 = !DILocation(line: 1589, column: 9, scope: !1450)
!7702 = !DILocation(line: 1590, column: 9, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !1450, file: !453, line: 1590, column: 9)
!7704 = !DILocation(line: 1590, column: 13, scope: !7703)
!7705 = !DILocation(line: 1590, column: 9, scope: !1450)
!7706 = !DILocation(line: 1591, column: 9, scope: !7703)
!7707 = !DILocation(line: 1593, column: 12, scope: !1450)
!7708 = !DILocation(line: 1593, column: 5, scope: !1450)
!7709 = !DILocation(line: 1594, column: 1, scope: !1450)
!7710 = !DILocation(line: 1597, column: 43, scope: !1465)
!7711 = !DILocation(line: 1597, column: 59, scope: !1465)
!7712 = !DILocation(line: 1599, column: 5, scope: !1465)
!7713 = !DILocation(line: 1599, column: 17, scope: !1465)
!7714 = !DILocation(line: 1600, column: 5, scope: !1465)
!7715 = !DILocation(line: 1600, column: 16, scope: !1465)
!7716 = !DILocation(line: 1601, column: 34, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !1465, file: !453, line: 1601, column: 9)
!7718 = !DILocation(line: 1601, column: 10, scope: !7717)
!7719 = !DILocation(line: 1601, column: 9, scope: !1465)
!7720 = !DILocation(line: 1602, column: 9, scope: !7717)
!7721 = !DILocation(line: 1603, column: 46, scope: !1465)
!7722 = !DILocation(line: 1603, column: 55, scope: !1465)
!7723 = !DILocation(line: 1603, column: 12, scope: !1465)
!7724 = !DILocation(line: 1603, column: 5, scope: !1465)
!7725 = !DILocation(line: 1604, column: 1, scope: !1465)
!7726 = !DILocation(line: 1607, column: 33, scope: !1471)
!7727 = !DILocation(line: 1607, column: 49, scope: !1471)
!7728 = !DILocation(line: 1609, column: 5, scope: !1471)
!7729 = !DILocation(line: 1609, column: 17, scope: !1471)
!7730 = !DILocation(line: 1610, column: 5, scope: !1471)
!7731 = !DILocation(line: 1610, column: 16, scope: !1471)
!7732 = !DILocation(line: 1611, column: 5, scope: !1471)
!7733 = !DILocation(line: 1611, column: 15, scope: !1471)
!7734 = !DILocation(line: 1613, column: 34, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !1471, file: !453, line: 1613, column: 9)
!7736 = !DILocation(line: 1613, column: 10, scope: !7735)
!7737 = !DILocation(line: 1613, column: 9, scope: !1471)
!7738 = !DILocation(line: 1614, column: 9, scope: !7735)
!7739 = !DILocation(line: 1616, column: 43, scope: !1471)
!7740 = !DILocation(line: 1616, column: 9, scope: !1471)
!7741 = !DILocation(line: 1616, column: 7, scope: !1471)
!7742 = !DILocation(line: 1617, column: 9, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !1471, file: !453, line: 1617, column: 9)
!7744 = !DILocation(line: 1617, column: 11, scope: !7743)
!7745 = !DILocation(line: 1617, column: 9, scope: !1471)
!7746 = !DILocation(line: 1618, column: 9, scope: !7743)
!7747 = !DILocation(line: 1620, column: 47, scope: !1471)
!7748 = !DILocation(line: 1620, column: 29, scope: !1471)
!7749 = !DILocation(line: 1620, column: 52, scope: !1471)
!7750 = !DILocation(line: 1620, column: 27, scope: !1471)
!7751 = !DILocation(line: 1620, column: 80, scope: !7752)
!7752 = !DILexicalBlockFile(scope: !1471, file: !453, discriminator: 1)
!7753 = !DILocation(line: 1620, column: 62, scope: !1471)
!7754 = !DILocation(line: 1620, column: 85, scope: !1471)
!7755 = !DILocation(line: 1620, column: 126, scope: !7756)
!7756 = !DILexicalBlockFile(scope: !1471, file: !453, discriminator: 2)
!7757 = !DILocation(line: 1620, column: 93, scope: !1471)
!7758 = !DILocation(line: 1620, column: 5, scope: !7759)
!7759 = !DILexicalBlockFile(scope: !7760, file: !453, discriminator: 4)
!7760 = !DILexicalBlockFile(scope: !1471, file: !453, discriminator: 3)
!7761 = !DILocation(line: 1620, column: 132, scope: !1471)
!7762 = !DILocation(line: 1620, column: 5, scope: !1471)
!7763 = !DILocation(line: 1620, column: 138, scope: !1471)
!7764 = !DILocation(line: 1620, column: 142, scope: !1471)
!7765 = !DILocation(line: 1622, column: 9, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !1471, file: !453, line: 1622, column: 9)
!7767 = !DILocation(line: 1622, column: 13, scope: !7766)
!7768 = !DILocation(line: 1622, column: 9, scope: !1471)
!7769 = !DILocation(line: 1624, column: 5, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7766, file: !453, line: 1622, column: 18)
!7771 = !DILocation(line: 1626, column: 12, scope: !1471)
!7772 = !DILocation(line: 1626, column: 5, scope: !1471)
!7773 = !DILocation(line: 1627, column: 1, scope: !1471)
!7774 = !DILocation(line: 1868, column: 29, scope: !1478)
!7775 = !DILocation(line: 1868, column: 45, scope: !1478)
!7776 = !DILocation(line: 1870, column: 5, scope: !1478)
!7777 = !DILocation(line: 1870, column: 15, scope: !1478)
!7778 = !DILocation(line: 1871, column: 5, scope: !1478)
!7779 = !DILocation(line: 1871, column: 9, scope: !1478)
!7780 = !DILocation(line: 1873, column: 34, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !1478, file: !453, line: 1873, column: 9)
!7782 = !DILocation(line: 1873, column: 10, scope: !7781)
!7783 = !DILocation(line: 1873, column: 9, scope: !1478)
!7784 = !DILocation(line: 1874, column: 9, scope: !7781)
!7785 = !DILocation(line: 1876, column: 27, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !1478, file: !453, line: 1876, column: 9)
!7787 = !DILocation(line: 1876, column: 10, scope: !7786)
!7788 = !DILocation(line: 1876, column: 9, scope: !1478)
!7789 = !DILocation(line: 1877, column: 22, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7786, file: !453, line: 1876, column: 32)
!7791 = !DILocation(line: 1878, column: 13, scope: !7790)
!7792 = !DILocation(line: 1878, column: 17, scope: !7790)
!7793 = !DILocation(line: 1878, column: 26, scope: !7790)
!7794 = !{!1998, !1942, i64 24}
!7795 = !DILocation(line: 1877, column: 9, scope: !7790)
!7796 = !DILocation(line: 1879, column: 9, scope: !7790)
!7797 = !DILocation(line: 1883, column: 5, scope: !1478)
!7798 = !DILocation(line: 1884, column: 19, scope: !1478)
!7799 = !DILocation(line: 1884, column: 17, scope: !1478)
!7800 = !DILocation(line: 1885, column: 9, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !1478, file: !453, line: 1885, column: 9)
!7802 = !DILocation(line: 1885, column: 21, scope: !7801)
!7803 = !DILocation(line: 1885, column: 9, scope: !1478)
!7804 = !DILocation(line: 1886, column: 16, scope: !7801)
!7805 = !DILocation(line: 1886, column: 9, scope: !7801)
!7806 = !DILocation(line: 1887, column: 27, scope: !1478)
!7807 = !DILocation(line: 1887, column: 5, scope: !1478)
!7808 = !DILocation(line: 1890, column: 55, scope: !1478)
!7809 = !DILocation(line: 1890, column: 5, scope: !1478)
!7810 = !DILocation(line: 1892, column: 27, scope: !1478)
!7811 = !DILocation(line: 1892, column: 16, scope: !1478)
!7812 = !DILocation(line: 1892, column: 13, scope: !1478)
!7813 = !DILocation(line: 1894, column: 7, scope: !1485)
!7814 = !DILocation(line: 1894, column: 22, scope: !1485)
!7815 = !DILocation(line: 1894, column: 37, scope: !1485)
!7816 = !DILocation(line: 1894, column: 35, scope: !1485)
!7817 = !DILocation(line: 1895, column: 27, scope: !1485)
!7818 = !DILocation(line: 1895, column: 16, scope: !1485)
!7819 = !DILocation(line: 1895, column: 13, scope: !1485)
!7820 = !DILocation(line: 1896, column: 27, scope: !1485)
!7821 = !DILocation(line: 1896, column: 5, scope: !1485)
!7822 = !DILocation(line: 1897, column: 26, scope: !1485)
!7823 = !DILocation(line: 1897, column: 5, scope: !1485)
!7824 = !DILocation(line: 1897, column: 34, scope: !1478)
!7825 = !DILocation(line: 1903, column: 7, scope: !1487)
!7826 = !DILocation(line: 1903, column: 22, scope: !1487)
!7827 = !DILocation(line: 1903, column: 37, scope: !1487)
!7828 = !DILocation(line: 1903, column: 35, scope: !1487)
!7829 = !DILocation(line: 1904, column: 55, scope: !1487)
!7830 = !DILocation(line: 1904, column: 5, scope: !1487)
!7831 = !DILocation(line: 1905, column: 27, scope: !1487)
!7832 = !DILocation(line: 1905, column: 16, scope: !1487)
!7833 = !DILocation(line: 1905, column: 13, scope: !1487)
!7834 = !DILocation(line: 1906, column: 27, scope: !1487)
!7835 = !DILocation(line: 1906, column: 5, scope: !1487)
!7836 = !DILocation(line: 1907, column: 26, scope: !1487)
!7837 = !DILocation(line: 1907, column: 5, scope: !1487)
!7838 = !DILocation(line: 1907, column: 34, scope: !1478)
!7839 = !DILocation(line: 1910, column: 27, scope: !1478)
!7840 = !DILocation(line: 1910, column: 5, scope: !1478)
!7841 = !DILocation(line: 1912, column: 24, scope: !1478)
!7842 = !DILocation(line: 1912, column: 5, scope: !1478)
!7843 = !DILocation(line: 1913, column: 10, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !1478, file: !453, line: 1913, column: 9)
!7845 = !DILocation(line: 1913, column: 9, scope: !1478)
!7846 = !DILocation(line: 1914, column: 9, scope: !7844)
!7847 = !DILocation(line: 1915, column: 58, scope: !1478)
!7848 = !DILocation(line: 1915, column: 5, scope: !1478)
!7849 = !DILocation(line: 1916, column: 1, scope: !1478)
!7850 = !DILocation(line: 2235, column: 23, scope: !1503)
!7851 = !DILocation(line: 2235, column: 39, scope: !1503)
!7852 = !DILocation(line: 2237, column: 5, scope: !1503)
!7853 = !DILocation(line: 2237, column: 9, scope: !1503)
!7854 = !DILocation(line: 2237, column: 12, scope: !1503)
!7855 = !DILocation(line: 2238, column: 5, scope: !1503)
!7856 = !DILocation(line: 2238, column: 20, scope: !1503)
!7857 = !DILocation(line: 2238, column: 27, scope: !1503)
!7858 = !DILocation(line: 2239, column: 5, scope: !1503)
!7859 = !DILocation(line: 2239, column: 15, scope: !1503)
!7860 = !DILocation(line: 2239, column: 25, scope: !1503)
!7861 = !DILocation(line: 2239, column: 36, scope: !1503)
!7862 = !DILocation(line: 2239, column: 42, scope: !1503)
!7863 = !DILocation(line: 2243, column: 5, scope: !1503)
!7864 = !DILocation(line: 2244, column: 10, scope: !1528)
!7865 = !DILocation(line: 2244, column: 9, scope: !1528)
!7866 = !DILocation(line: 2244, column: 14, scope: !7867)
!7867 = !DILexicalBlockFile(scope: !7868, file: !453, discriminator: 2)
!7868 = !DILexicalBlockFile(scope: !1527, file: !453, discriminator: 1)
!7869 = !DILocation(line: 2244, column: 16, scope: !1527)
!7870 = !DILocation(line: 2244, column: 5, scope: !1528)
!7871 = !DILocation(line: 2245, column: 14, scope: !1526)
!7872 = !DILocation(line: 2245, column: 13, scope: !1526)
!7873 = !DILocation(line: 2245, column: 18, scope: !7874)
!7874 = !DILexicalBlockFile(scope: !7875, file: !453, discriminator: 2)
!7875 = !DILexicalBlockFile(scope: !1525, file: !453, discriminator: 1)
!7876 = !DILocation(line: 2245, column: 20, scope: !1525)
!7877 = !DILocation(line: 2245, column: 9, scope: !1526)
!7878 = !DILocation(line: 2246, column: 38, scope: !1524)
!7879 = !DILocation(line: 2246, column: 22, scope: !1524)
!7880 = !DILocation(line: 2246, column: 20, scope: !1524)
!7881 = !DILocation(line: 2247, column: 13, scope: !1524)
!7882 = !DILocation(line: 2247, column: 18, scope: !7883)
!7883 = !DILexicalBlockFile(scope: !1523, file: !453, discriminator: 1)
!7884 = !DILocation(line: 2247, column: 28, scope: !1523)
!7885 = !DILocation(line: 2247, column: 58, scope: !1523)
!7886 = !DILocation(line: 2247, column: 75, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !1523, file: !453, line: 2247, column: 72)
!7888 = !DILocation(line: 2247, column: 92, scope: !7887)
!7889 = !DILocation(line: 2247, column: 72, scope: !7887)
!7890 = !DILocation(line: 2247, column: 102, scope: !7887)
!7891 = !DILocation(line: 2247, column: 72, scope: !1523)
!7892 = !DILocation(line: 2247, column: 72, scope: !7893)
!7893 = !DILexicalBlockFile(scope: !1523, file: !453, discriminator: 2)
!7894 = !DILocation(line: 2247, column: 133, scope: !7895)
!7895 = !DILexicalBlockFile(scope: !7887, file: !453, discriminator: 3)
!7896 = !DILocation(line: 2247, column: 151, scope: !7887)
!7897 = !DILocation(line: 2247, column: 161, scope: !7887)
!7898 = !DILocation(line: 2247, column: 186, scope: !7887)
!7899 = !DILocation(line: 2247, column: 117, scope: !7887)
!7900 = !DILocation(line: 2247, column: 205, scope: !7901)
!7901 = !DILexicalBlockFile(scope: !1524, file: !453, discriminator: 4)
!7902 = !DILocation(line: 2247, column: 205, scope: !1523)
!7903 = !DILocation(line: 2247, column: 205, scope: !7904)
!7904 = !DILexicalBlockFile(scope: !1523, file: !453, discriminator: 5)
!7905 = !DILocation(line: 2248, column: 9, scope: !1524)
!7906 = !DILocation(line: 2245, column: 29, scope: !1525)
!7907 = !DILocation(line: 2245, column: 9, scope: !1525)
!7908 = !DILocation(line: 2248, column: 9, scope: !1526)
!7909 = !DILocation(line: 2244, column: 26, scope: !1527)
!7910 = !DILocation(line: 2244, column: 5, scope: !1527)
!7911 = !DILocation(line: 2249, column: 5, scope: !1503)
!7912 = !DILocation(line: 2250, column: 5, scope: !1503)
!7913 = !DILocation(line: 2254, column: 5, scope: !1503)
!7914 = !DILocation(line: 2255, column: 10, scope: !1535)
!7915 = !DILocation(line: 2255, column: 9, scope: !1535)
!7916 = !DILocation(line: 2255, column: 14, scope: !7917)
!7917 = !DILexicalBlockFile(scope: !7918, file: !453, discriminator: 2)
!7918 = !DILexicalBlockFile(scope: !1534, file: !453, discriminator: 1)
!7919 = !DILocation(line: 2255, column: 16, scope: !1534)
!7920 = !DILocation(line: 2255, column: 5, scope: !1535)
!7921 = !DILocation(line: 2256, column: 14, scope: !1533)
!7922 = !DILocation(line: 2256, column: 13, scope: !1533)
!7923 = !DILocation(line: 2256, column: 18, scope: !7924)
!7924 = !DILexicalBlockFile(scope: !7925, file: !453, discriminator: 2)
!7925 = !DILexicalBlockFile(scope: !1532, file: !453, discriminator: 1)
!7926 = !DILocation(line: 2256, column: 20, scope: !1532)
!7927 = !DILocation(line: 2256, column: 9, scope: !1533)
!7928 = !DILocation(line: 2257, column: 38, scope: !1531)
!7929 = !DILocation(line: 2257, column: 39, scope: !1531)
!7930 = !DILocation(line: 2257, column: 22, scope: !1531)
!7931 = !DILocation(line: 2257, column: 20, scope: !1531)
!7932 = !DILocation(line: 2258, column: 13, scope: !1531)
!7933 = !DILocation(line: 2258, column: 18, scope: !7934)
!7934 = !DILexicalBlockFile(scope: !1530, file: !453, discriminator: 1)
!7935 = !DILocation(line: 2258, column: 28, scope: !1530)
!7936 = !DILocation(line: 2258, column: 58, scope: !1530)
!7937 = !DILocation(line: 2258, column: 75, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !1530, file: !453, line: 2258, column: 72)
!7939 = !DILocation(line: 2258, column: 92, scope: !7938)
!7940 = !DILocation(line: 2258, column: 72, scope: !7938)
!7941 = !DILocation(line: 2258, column: 102, scope: !7938)
!7942 = !DILocation(line: 2258, column: 72, scope: !1530)
!7943 = !DILocation(line: 2258, column: 72, scope: !7944)
!7944 = !DILexicalBlockFile(scope: !1530, file: !453, discriminator: 2)
!7945 = !DILocation(line: 2258, column: 133, scope: !7946)
!7946 = !DILexicalBlockFile(scope: !7938, file: !453, discriminator: 3)
!7947 = !DILocation(line: 2258, column: 151, scope: !7938)
!7948 = !DILocation(line: 2258, column: 161, scope: !7938)
!7949 = !DILocation(line: 2258, column: 186, scope: !7938)
!7950 = !DILocation(line: 2258, column: 117, scope: !7938)
!7951 = !DILocation(line: 2258, column: 205, scope: !7952)
!7952 = !DILexicalBlockFile(scope: !1531, file: !453, discriminator: 4)
!7953 = !DILocation(line: 2258, column: 205, scope: !1530)
!7954 = !DILocation(line: 2258, column: 205, scope: !7955)
!7955 = !DILexicalBlockFile(scope: !1530, file: !453, discriminator: 5)
!7956 = !DILocation(line: 2259, column: 9, scope: !1531)
!7957 = !DILocation(line: 2256, column: 29, scope: !1532)
!7958 = !DILocation(line: 2256, column: 9, scope: !1532)
!7959 = !DILocation(line: 2259, column: 9, scope: !1533)
!7960 = !DILocation(line: 2255, column: 26, scope: !1534)
!7961 = !DILocation(line: 2255, column: 5, scope: !1534)
!7962 = !DILocation(line: 2260, column: 5, scope: !1503)
!7963 = !DILocation(line: 2261, column: 5, scope: !1503)
!7964 = !DILocation(line: 2265, column: 16, scope: !1503)
!7965 = !DILocation(line: 2265, column: 14, scope: !1503)
!7966 = !DILocation(line: 2266, column: 9, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !1503, file: !453, line: 2266, column: 9)
!7968 = !DILocation(line: 2266, column: 18, scope: !7967)
!7969 = !DILocation(line: 2266, column: 9, scope: !1503)
!7970 = !DILocation(line: 2267, column: 16, scope: !7967)
!7971 = !DILocation(line: 2267, column: 9, scope: !7967)
!7972 = !DILocation(line: 2268, column: 5, scope: !1503)
!7973 = !DILocation(line: 2269, column: 10, scope: !1543)
!7974 = !DILocation(line: 2269, column: 9, scope: !1543)
!7975 = !DILocation(line: 2269, column: 14, scope: !7976)
!7976 = !DILexicalBlockFile(scope: !7977, file: !453, discriminator: 2)
!7977 = !DILexicalBlockFile(scope: !1542, file: !453, discriminator: 1)
!7978 = !DILocation(line: 2269, column: 16, scope: !1542)
!7979 = !DILocation(line: 2269, column: 5, scope: !1543)
!7980 = !DILocation(line: 2270, column: 14, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !1541, file: !453, line: 2270, column: 9)
!7982 = !DILocation(line: 2270, column: 13, scope: !7981)
!7983 = !DILocation(line: 2270, column: 18, scope: !7984)
!7984 = !DILexicalBlockFile(scope: !7985, file: !453, discriminator: 2)
!7985 = !DILexicalBlockFile(scope: !7986, file: !453, discriminator: 1)
!7986 = distinct !DILexicalBlock(scope: !7981, file: !453, line: 2270, column: 9)
!7987 = !DILocation(line: 2270, column: 20, scope: !7986)
!7988 = !DILocation(line: 2270, column: 9, scope: !7981)
!7989 = !DILocation(line: 2271, column: 43, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7986, file: !453, line: 2270, column: 33)
!7991 = !DILocation(line: 2271, column: 44, scope: !7990)
!7992 = !DILocation(line: 2271, column: 27, scope: !7990)
!7993 = !DILocation(line: 2271, column: 22, scope: !7990)
!7994 = !DILocation(line: 2271, column: 13, scope: !7990)
!7995 = !DILocation(line: 2271, column: 25, scope: !7990)
!7996 = !DILocation(line: 2272, column: 9, scope: !7990)
!7997 = !DILocation(line: 2270, column: 29, scope: !7986)
!7998 = !DILocation(line: 2270, column: 9, scope: !7986)
!7999 = !DILocation(line: 2273, column: 14, scope: !1540)
!8000 = !DILocation(line: 2273, column: 13, scope: !1540)
!8001 = !DILocation(line: 2273, column: 18, scope: !8002)
!8002 = !DILexicalBlockFile(scope: !8003, file: !453, discriminator: 2)
!8003 = !DILexicalBlockFile(scope: !1539, file: !453, discriminator: 1)
!8004 = !DILocation(line: 2273, column: 20, scope: !1539)
!8005 = !DILocation(line: 2273, column: 9, scope: !1540)
!8006 = !DILocation(line: 2274, column: 13, scope: !1538)
!8007 = !DILocation(line: 2274, column: 18, scope: !8008)
!8008 = !DILexicalBlockFile(scope: !1537, file: !453, discriminator: 1)
!8009 = !DILocation(line: 2274, column: 28, scope: !1537)
!8010 = !DILocation(line: 2274, column: 67, scope: !1537)
!8011 = !DILocation(line: 2274, column: 58, scope: !1537)
!8012 = !DILocation(line: 2274, column: 80, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !1537, file: !453, line: 2274, column: 77)
!8014 = !DILocation(line: 2274, column: 97, scope: !8013)
!8015 = !DILocation(line: 2274, column: 77, scope: !8013)
!8016 = !DILocation(line: 2274, column: 107, scope: !8013)
!8017 = !DILocation(line: 2274, column: 77, scope: !1537)
!8018 = !DILocation(line: 2274, column: 77, scope: !8019)
!8019 = !DILexicalBlockFile(scope: !1537, file: !453, discriminator: 2)
!8020 = !DILocation(line: 2274, column: 138, scope: !8021)
!8021 = !DILexicalBlockFile(scope: !8013, file: !453, discriminator: 3)
!8022 = !DILocation(line: 2274, column: 156, scope: !8013)
!8023 = !DILocation(line: 2274, column: 166, scope: !8013)
!8024 = !DILocation(line: 2274, column: 191, scope: !8013)
!8025 = !DILocation(line: 2274, column: 122, scope: !8013)
!8026 = !DILocation(line: 2274, column: 210, scope: !8027)
!8027 = !DILexicalBlockFile(scope: !1538, file: !453, discriminator: 4)
!8028 = !DILocation(line: 2274, column: 210, scope: !1537)
!8029 = !DILocation(line: 2274, column: 210, scope: !8030)
!8030 = !DILexicalBlockFile(scope: !1537, file: !453, discriminator: 5)
!8031 = !DILocation(line: 2275, column: 9, scope: !1538)
!8032 = !DILocation(line: 2273, column: 29, scope: !1539)
!8033 = !DILocation(line: 2273, column: 9, scope: !1539)
!8034 = !DILocation(line: 2276, column: 5, scope: !1541)
!8035 = !DILocation(line: 2269, column: 26, scope: !1542)
!8036 = !DILocation(line: 2269, column: 5, scope: !1542)
!8037 = !DILocation(line: 2277, column: 5, scope: !1503)
!8038 = !DILocation(line: 2278, column: 5, scope: !1503)
!8039 = !DILocation(line: 2279, column: 10, scope: !1503)
!8040 = !DILocation(line: 2279, column: 5, scope: !1503)
!8041 = !DILocation(line: 2283, column: 16, scope: !1503)
!8042 = !DILocation(line: 2283, column: 14, scope: !1503)
!8043 = !DILocation(line: 2284, column: 9, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !1503, file: !453, line: 2284, column: 9)
!8045 = !DILocation(line: 2284, column: 18, scope: !8044)
!8046 = !DILocation(line: 2284, column: 9, scope: !1503)
!8047 = !DILocation(line: 2285, column: 16, scope: !8044)
!8048 = !DILocation(line: 2285, column: 9, scope: !8044)
!8049 = !DILocation(line: 2286, column: 5, scope: !1503)
!8050 = !DILocation(line: 2287, column: 10, scope: !1551)
!8051 = !DILocation(line: 2287, column: 9, scope: !1551)
!8052 = !DILocation(line: 2287, column: 14, scope: !8053)
!8053 = !DILexicalBlockFile(scope: !8054, file: !453, discriminator: 2)
!8054 = !DILexicalBlockFile(scope: !1550, file: !453, discriminator: 1)
!8055 = !DILocation(line: 2287, column: 16, scope: !1550)
!8056 = !DILocation(line: 2287, column: 5, scope: !1551)
!8057 = !DILocation(line: 2288, column: 14, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !1549, file: !453, line: 2288, column: 9)
!8059 = !DILocation(line: 2288, column: 13, scope: !8058)
!8060 = !DILocation(line: 2288, column: 18, scope: !8061)
!8061 = !DILexicalBlockFile(scope: !8062, file: !453, discriminator: 2)
!8062 = !DILexicalBlockFile(scope: !8063, file: !453, discriminator: 1)
!8063 = distinct !DILexicalBlock(scope: !8058, file: !453, line: 2288, column: 9)
!8064 = !DILocation(line: 2288, column: 20, scope: !8063)
!8065 = !DILocation(line: 2288, column: 9, scope: !8058)
!8066 = !DILocation(line: 2289, column: 43, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8063, file: !453, line: 2288, column: 36)
!8068 = !DILocation(line: 2289, column: 44, scope: !8067)
!8069 = !DILocation(line: 2289, column: 27, scope: !8067)
!8070 = !DILocation(line: 2289, column: 22, scope: !8067)
!8071 = !DILocation(line: 2289, column: 13, scope: !8067)
!8072 = !DILocation(line: 2289, column: 25, scope: !8067)
!8073 = !DILocation(line: 2290, column: 9, scope: !8067)
!8074 = !DILocation(line: 2288, column: 32, scope: !8063)
!8075 = !DILocation(line: 2288, column: 9, scope: !8063)
!8076 = !DILocation(line: 2291, column: 14, scope: !1548)
!8077 = !DILocation(line: 2291, column: 13, scope: !1548)
!8078 = !DILocation(line: 2291, column: 18, scope: !8079)
!8079 = !DILexicalBlockFile(scope: !8080, file: !453, discriminator: 2)
!8080 = !DILexicalBlockFile(scope: !1547, file: !453, discriminator: 1)
!8081 = !DILocation(line: 2291, column: 20, scope: !1547)
!8082 = !DILocation(line: 2291, column: 9, scope: !1548)
!8083 = !DILocation(line: 2292, column: 13, scope: !1546)
!8084 = !DILocation(line: 2292, column: 18, scope: !8085)
!8085 = !DILexicalBlockFile(scope: !1545, file: !453, discriminator: 1)
!8086 = !DILocation(line: 2292, column: 28, scope: !1545)
!8087 = !DILocation(line: 2292, column: 67, scope: !1545)
!8088 = !DILocation(line: 2292, column: 58, scope: !1545)
!8089 = !DILocation(line: 2292, column: 80, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !1545, file: !453, line: 2292, column: 77)
!8091 = !DILocation(line: 2292, column: 97, scope: !8090)
!8092 = !DILocation(line: 2292, column: 77, scope: !8090)
!8093 = !DILocation(line: 2292, column: 107, scope: !8090)
!8094 = !DILocation(line: 2292, column: 77, scope: !1545)
!8095 = !DILocation(line: 2292, column: 77, scope: !8096)
!8096 = !DILexicalBlockFile(scope: !1545, file: !453, discriminator: 2)
!8097 = !DILocation(line: 2292, column: 138, scope: !8098)
!8098 = !DILexicalBlockFile(scope: !8090, file: !453, discriminator: 3)
!8099 = !DILocation(line: 2292, column: 156, scope: !8090)
!8100 = !DILocation(line: 2292, column: 166, scope: !8090)
!8101 = !DILocation(line: 2292, column: 191, scope: !8090)
!8102 = !DILocation(line: 2292, column: 122, scope: !8090)
!8103 = !DILocation(line: 2292, column: 210, scope: !8104)
!8104 = !DILexicalBlockFile(scope: !1546, file: !453, discriminator: 4)
!8105 = !DILocation(line: 2292, column: 210, scope: !1545)
!8106 = !DILocation(line: 2292, column: 210, scope: !8107)
!8107 = !DILexicalBlockFile(scope: !1545, file: !453, discriminator: 5)
!8108 = !DILocation(line: 2293, column: 9, scope: !1546)
!8109 = !DILocation(line: 2291, column: 32, scope: !1547)
!8110 = !DILocation(line: 2291, column: 9, scope: !1547)
!8111 = !DILocation(line: 2294, column: 5, scope: !1549)
!8112 = !DILocation(line: 2287, column: 23, scope: !1550)
!8113 = !DILocation(line: 2287, column: 5, scope: !1550)
!8114 = !DILocation(line: 2295, column: 5, scope: !1503)
!8115 = !DILocation(line: 2296, column: 5, scope: !1503)
!8116 = !DILocation(line: 2297, column: 10, scope: !1503)
!8117 = !DILocation(line: 2297, column: 5, scope: !1503)
!8118 = !DILocation(line: 2300, column: 16, scope: !1503)
!8119 = !DILocation(line: 2300, column: 14, scope: !1503)
!8120 = !DILocation(line: 2301, column: 9, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !1503, file: !453, line: 2301, column: 9)
!8122 = !DILocation(line: 2301, column: 18, scope: !8121)
!8123 = !DILocation(line: 2301, column: 9, scope: !1503)
!8124 = !DILocation(line: 2302, column: 16, scope: !8121)
!8125 = !DILocation(line: 2302, column: 9, scope: !8121)
!8126 = !DILocation(line: 2303, column: 5, scope: !1503)
!8127 = !DILocation(line: 2304, column: 10, scope: !1559)
!8128 = !DILocation(line: 2304, column: 9, scope: !1559)
!8129 = !DILocation(line: 2304, column: 14, scope: !8130)
!8130 = !DILexicalBlockFile(scope: !8131, file: !453, discriminator: 2)
!8131 = !DILexicalBlockFile(scope: !1558, file: !453, discriminator: 1)
!8132 = !DILocation(line: 2304, column: 16, scope: !1558)
!8133 = !DILocation(line: 2304, column: 5, scope: !1559)
!8134 = !DILocation(line: 2305, column: 14, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !1557, file: !453, line: 2305, column: 9)
!8136 = !DILocation(line: 2305, column: 13, scope: !8135)
!8137 = !DILocation(line: 2305, column: 18, scope: !8138)
!8138 = !DILexicalBlockFile(scope: !8139, file: !453, discriminator: 2)
!8139 = !DILexicalBlockFile(scope: !8140, file: !453, discriminator: 1)
!8140 = distinct !DILexicalBlock(scope: !8135, file: !453, line: 2305, column: 9)
!8141 = !DILocation(line: 2305, column: 20, scope: !8140)
!8142 = !DILocation(line: 2305, column: 9, scope: !8135)
!8143 = !DILocation(line: 2306, column: 43, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8140, file: !453, line: 2305, column: 36)
!8145 = !DILocation(line: 2306, column: 44, scope: !8144)
!8146 = !DILocation(line: 2306, column: 27, scope: !8144)
!8147 = !DILocation(line: 2306, column: 22, scope: !8144)
!8148 = !DILocation(line: 2306, column: 13, scope: !8144)
!8149 = !DILocation(line: 2306, column: 25, scope: !8144)
!8150 = !DILocation(line: 2307, column: 9, scope: !8144)
!8151 = !DILocation(line: 2305, column: 32, scope: !8140)
!8152 = !DILocation(line: 2305, column: 9, scope: !8140)
!8153 = !DILocation(line: 2308, column: 14, scope: !1556)
!8154 = !DILocation(line: 2308, column: 13, scope: !1556)
!8155 = !DILocation(line: 2308, column: 18, scope: !8156)
!8156 = !DILexicalBlockFile(scope: !8157, file: !453, discriminator: 2)
!8157 = !DILexicalBlockFile(scope: !1555, file: !453, discriminator: 1)
!8158 = !DILocation(line: 2308, column: 20, scope: !1555)
!8159 = !DILocation(line: 2308, column: 9, scope: !1556)
!8160 = !DILocation(line: 2309, column: 13, scope: !1554)
!8161 = !DILocation(line: 2309, column: 18, scope: !8162)
!8162 = !DILexicalBlockFile(scope: !1553, file: !453, discriminator: 1)
!8163 = !DILocation(line: 2309, column: 28, scope: !1553)
!8164 = !DILocation(line: 2309, column: 67, scope: !1553)
!8165 = !DILocation(line: 2309, column: 58, scope: !1553)
!8166 = !DILocation(line: 2309, column: 80, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !1553, file: !453, line: 2309, column: 77)
!8168 = !DILocation(line: 2309, column: 97, scope: !8167)
!8169 = !DILocation(line: 2309, column: 77, scope: !8167)
!8170 = !DILocation(line: 2309, column: 107, scope: !8167)
!8171 = !DILocation(line: 2309, column: 77, scope: !1553)
!8172 = !DILocation(line: 2309, column: 77, scope: !8173)
!8173 = !DILexicalBlockFile(scope: !1553, file: !453, discriminator: 2)
!8174 = !DILocation(line: 2309, column: 138, scope: !8175)
!8175 = !DILexicalBlockFile(scope: !8167, file: !453, discriminator: 3)
!8176 = !DILocation(line: 2309, column: 156, scope: !8167)
!8177 = !DILocation(line: 2309, column: 166, scope: !8167)
!8178 = !DILocation(line: 2309, column: 191, scope: !8167)
!8179 = !DILocation(line: 2309, column: 122, scope: !8167)
!8180 = !DILocation(line: 2309, column: 210, scope: !8181)
!8181 = !DILexicalBlockFile(scope: !1554, file: !453, discriminator: 4)
!8182 = !DILocation(line: 2309, column: 210, scope: !1553)
!8183 = !DILocation(line: 2309, column: 210, scope: !8184)
!8184 = !DILexicalBlockFile(scope: !1553, file: !453, discriminator: 5)
!8185 = !DILocation(line: 2310, column: 9, scope: !1554)
!8186 = !DILocation(line: 2308, column: 32, scope: !1555)
!8187 = !DILocation(line: 2308, column: 9, scope: !1555)
!8188 = !DILocation(line: 2311, column: 5, scope: !1557)
!8189 = !DILocation(line: 2304, column: 23, scope: !1558)
!8190 = !DILocation(line: 2304, column: 5, scope: !1558)
!8191 = !DILocation(line: 2312, column: 5, scope: !1503)
!8192 = !DILocation(line: 2313, column: 5, scope: !1503)
!8193 = !DILocation(line: 2314, column: 10, scope: !1503)
!8194 = !DILocation(line: 2314, column: 5, scope: !1503)
!8195 = !DILocation(line: 2317, column: 11, scope: !1503)
!8196 = !DILocation(line: 2317, column: 9, scope: !1503)
!8197 = !DILocation(line: 2318, column: 5, scope: !1503)
!8198 = !DILocation(line: 2319, column: 10, scope: !1564)
!8199 = !DILocation(line: 2319, column: 9, scope: !1564)
!8200 = !DILocation(line: 2319, column: 14, scope: !8201)
!8201 = !DILexicalBlockFile(scope: !8202, file: !453, discriminator: 2)
!8202 = !DILexicalBlockFile(scope: !1563, file: !453, discriminator: 1)
!8203 = !DILocation(line: 2319, column: 16, scope: !1563)
!8204 = !DILocation(line: 2319, column: 5, scope: !1564)
!8205 = !DILocation(line: 2320, column: 31, scope: !1562)
!8206 = !DILocation(line: 2320, column: 36, scope: !1562)
!8207 = !DILocation(line: 2320, column: 18, scope: !1562)
!8208 = !DILocation(line: 2320, column: 16, scope: !1562)
!8209 = !DILocation(line: 2321, column: 9, scope: !1562)
!8210 = !DILocation(line: 2321, column: 14, scope: !8211)
!8211 = !DILexicalBlockFile(scope: !1561, file: !453, discriminator: 1)
!8212 = !DILocation(line: 2321, column: 24, scope: !1561)
!8213 = !DILocation(line: 2321, column: 54, scope: !1561)
!8214 = !DILocation(line: 2321, column: 71, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !1561, file: !453, line: 2321, column: 68)
!8216 = !DILocation(line: 2321, column: 88, scope: !8215)
!8217 = !DILocation(line: 2321, column: 68, scope: !8215)
!8218 = !DILocation(line: 2321, column: 98, scope: !8215)
!8219 = !DILocation(line: 2321, column: 68, scope: !1561)
!8220 = !DILocation(line: 2321, column: 68, scope: !8221)
!8221 = !DILexicalBlockFile(scope: !1561, file: !453, discriminator: 2)
!8222 = !DILocation(line: 2321, column: 129, scope: !8223)
!8223 = !DILexicalBlockFile(scope: !8215, file: !453, discriminator: 3)
!8224 = !DILocation(line: 2321, column: 147, scope: !8215)
!8225 = !DILocation(line: 2321, column: 157, scope: !8215)
!8226 = !DILocation(line: 2321, column: 182, scope: !8215)
!8227 = !DILocation(line: 2321, column: 113, scope: !8215)
!8228 = !DILocation(line: 2321, column: 201, scope: !8229)
!8229 = !DILexicalBlockFile(scope: !1562, file: !453, discriminator: 4)
!8230 = !DILocation(line: 2321, column: 201, scope: !1561)
!8231 = !DILocation(line: 2321, column: 201, scope: !8232)
!8232 = !DILexicalBlockFile(scope: !1561, file: !453, discriminator: 5)
!8233 = !DILocation(line: 2322, column: 5, scope: !1562)
!8234 = !DILocation(line: 2319, column: 29, scope: !1563)
!8235 = !DILocation(line: 2319, column: 5, scope: !1563)
!8236 = !DILocation(line: 2323, column: 5, scope: !1503)
!8237 = !DILocation(line: 2324, column: 5, scope: !1503)
!8238 = !DILocation(line: 2324, column: 10, scope: !8239)
!8239 = !DILexicalBlockFile(scope: !1566, file: !453, discriminator: 1)
!8240 = !DILocation(line: 2324, column: 20, scope: !1566)
!8241 = !DILocation(line: 2324, column: 50, scope: !1566)
!8242 = !DILocation(line: 2324, column: 64, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !1566, file: !453, line: 2324, column: 61)
!8244 = !DILocation(line: 2324, column: 81, scope: !8243)
!8245 = !DILocation(line: 2324, column: 61, scope: !8243)
!8246 = !DILocation(line: 2324, column: 91, scope: !8243)
!8247 = !DILocation(line: 2324, column: 61, scope: !1566)
!8248 = !DILocation(line: 2324, column: 61, scope: !8249)
!8249 = !DILexicalBlockFile(scope: !1566, file: !453, discriminator: 2)
!8250 = !DILocation(line: 2324, column: 122, scope: !8251)
!8251 = !DILexicalBlockFile(scope: !8243, file: !453, discriminator: 3)
!8252 = !DILocation(line: 2324, column: 140, scope: !8243)
!8253 = !DILocation(line: 2324, column: 150, scope: !8243)
!8254 = !DILocation(line: 2324, column: 175, scope: !8243)
!8255 = !DILocation(line: 2324, column: 106, scope: !8243)
!8256 = !DILocation(line: 2324, column: 194, scope: !8257)
!8257 = !DILexicalBlockFile(scope: !1503, file: !453, discriminator: 4)
!8258 = !DILocation(line: 2324, column: 194, scope: !1566)
!8259 = !DILocation(line: 2324, column: 194, scope: !8260)
!8260 = !DILexicalBlockFile(scope: !1566, file: !453, discriminator: 5)
!8261 = !DILocation(line: 2325, column: 5, scope: !1503)
!8262 = !DILocation(line: 2328, column: 11, scope: !1503)
!8263 = !DILocation(line: 2328, column: 9, scope: !1503)
!8264 = !DILocation(line: 2329, column: 9, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !1503, file: !453, line: 2329, column: 9)
!8266 = !DILocation(line: 2329, column: 13, scope: !8265)
!8267 = !DILocation(line: 2329, column: 9, scope: !1503)
!8268 = !DILocation(line: 2330, column: 9, scope: !8265)
!8269 = !DILocation(line: 2331, column: 5, scope: !1503)
!8270 = !DILocation(line: 2332, column: 10, scope: !1571)
!8271 = !DILocation(line: 2332, column: 9, scope: !1571)
!8272 = !DILocation(line: 2332, column: 14, scope: !8273)
!8273 = !DILexicalBlockFile(scope: !8274, file: !453, discriminator: 2)
!8274 = !DILexicalBlockFile(scope: !1570, file: !453, discriminator: 1)
!8275 = !DILocation(line: 2332, column: 16, scope: !1570)
!8276 = !DILocation(line: 2332, column: 5, scope: !1571)
!8277 = !DILocation(line: 2333, column: 31, scope: !1569)
!8278 = !DILocation(line: 2333, column: 36, scope: !1569)
!8279 = !DILocation(line: 2333, column: 18, scope: !1569)
!8280 = !DILocation(line: 2333, column: 16, scope: !1569)
!8281 = !DILocation(line: 2334, column: 9, scope: !1569)
!8282 = !DILocation(line: 2334, column: 14, scope: !8283)
!8283 = !DILexicalBlockFile(scope: !1568, file: !453, discriminator: 1)
!8284 = !DILocation(line: 2334, column: 24, scope: !1568)
!8285 = !DILocation(line: 2334, column: 55, scope: !1568)
!8286 = !DILocation(line: 2334, column: 68, scope: !1574)
!8287 = !DILocation(line: 2334, column: 84, scope: !1574)
!8288 = !DILocation(line: 2334, column: 68, scope: !1568)
!8289 = !DILocation(line: 2334, column: 99, scope: !8290)
!8290 = !DILexicalBlockFile(scope: !1574, file: !453, discriminator: 2)
!8291 = !DILocation(line: 2334, column: 104, scope: !8292)
!8292 = !DILexicalBlockFile(scope: !1573, file: !453, discriminator: 4)
!8293 = !DILocation(line: 2334, column: 114, scope: !1573)
!8294 = !DILocation(line: 2334, column: 144, scope: !1573)
!8295 = !DILocation(line: 2334, column: 170, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !1573, file: !453, line: 2334, column: 167)
!8297 = !DILocation(line: 2334, column: 187, scope: !8296)
!8298 = !DILocation(line: 2334, column: 167, scope: !8296)
!8299 = !DILocation(line: 2334, column: 197, scope: !8296)
!8300 = !DILocation(line: 2334, column: 167, scope: !1573)
!8301 = !DILocation(line: 2334, column: 167, scope: !8302)
!8302 = !DILexicalBlockFile(scope: !1573, file: !453, discriminator: 5)
!8303 = !DILocation(line: 2334, column: 228, scope: !8304)
!8304 = !DILexicalBlockFile(scope: !8296, file: !453, discriminator: 6)
!8305 = !DILocation(line: 2334, column: 246, scope: !8296)
!8306 = !DILocation(line: 2334, column: 256, scope: !8296)
!8307 = !DILocation(line: 2334, column: 281, scope: !8296)
!8308 = !DILocation(line: 2334, column: 212, scope: !8296)
!8309 = !DILocation(line: 2334, column: 300, scope: !8310)
!8310 = !DILexicalBlockFile(scope: !1574, file: !453, discriminator: 7)
!8311 = !DILocation(line: 2334, column: 300, scope: !1573)
!8312 = !DILocation(line: 2334, column: 300, scope: !8313)
!8313 = !DILexicalBlockFile(scope: !1573, file: !453, discriminator: 8)
!8314 = !DILocation(line: 2334, column: 300, scope: !8315)
!8315 = !DILexicalBlockFile(scope: !1573, file: !453, discriminator: 9)
!8316 = !DILocation(line: 2334, column: 313, scope: !8317)
!8317 = !DILexicalBlockFile(scope: !8318, file: !453, discriminator: 10)
!8318 = !DILexicalBlockFile(scope: !1569, file: !453, discriminator: 3)
!8319 = !DILocation(line: 2334, column: 313, scope: !1568)
!8320 = !DILocation(line: 2334, column: 313, scope: !8321)
!8321 = !DILexicalBlockFile(scope: !1568, file: !453, discriminator: 11)
!8322 = !DILocation(line: 2335, column: 5, scope: !1569)
!8323 = !DILocation(line: 2332, column: 29, scope: !1570)
!8324 = !DILocation(line: 2332, column: 5, scope: !1570)
!8325 = !DILocation(line: 2336, column: 5, scope: !1503)
!8326 = !DILocation(line: 2337, column: 5, scope: !1503)
!8327 = !DILocation(line: 2337, column: 10, scope: !8328)
!8328 = !DILexicalBlockFile(scope: !1576, file: !453, discriminator: 1)
!8329 = !DILocation(line: 2337, column: 20, scope: !1576)
!8330 = !DILocation(line: 2337, column: 50, scope: !1576)
!8331 = !DILocation(line: 2337, column: 64, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !1576, file: !453, line: 2337, column: 61)
!8333 = !DILocation(line: 2337, column: 81, scope: !8332)
!8334 = !DILocation(line: 2337, column: 61, scope: !8332)
!8335 = !DILocation(line: 2337, column: 91, scope: !8332)
!8336 = !DILocation(line: 2337, column: 61, scope: !1576)
!8337 = !DILocation(line: 2337, column: 61, scope: !8338)
!8338 = !DILexicalBlockFile(scope: !1576, file: !453, discriminator: 2)
!8339 = !DILocation(line: 2337, column: 122, scope: !8340)
!8340 = !DILexicalBlockFile(scope: !8332, file: !453, discriminator: 3)
!8341 = !DILocation(line: 2337, column: 140, scope: !8332)
!8342 = !DILocation(line: 2337, column: 150, scope: !8332)
!8343 = !DILocation(line: 2337, column: 175, scope: !8332)
!8344 = !DILocation(line: 2337, column: 106, scope: !8332)
!8345 = !DILocation(line: 2337, column: 194, scope: !8257)
!8346 = !DILocation(line: 2337, column: 194, scope: !1576)
!8347 = !DILocation(line: 2337, column: 194, scope: !8348)
!8348 = !DILexicalBlockFile(scope: !1576, file: !453, discriminator: 5)
!8349 = !DILocation(line: 2338, column: 5, scope: !1503)
!8350 = !DILocation(line: 2340, column: 51, scope: !1503)
!8351 = !DILocation(line: 2341, column: 5, scope: !1503)
!8352 = !DILocation(line: 2342, column: 1, scope: !1503)
!8353 = !DILocation(line: 2347, column: 27, scope: !1585)
!8354 = !DILocation(line: 2347, column: 43, scope: !1585)
!8355 = !DILocation(line: 2349, column: 5, scope: !1585)
!8356 = !DILocation(line: 2349, column: 15, scope: !1585)
!8357 = !DILocation(line: 2350, column: 5, scope: !1585)
!8358 = !DILocation(line: 2350, column: 15, scope: !1585)
!8359 = !DILocation(line: 2351, column: 5, scope: !1585)
!8360 = !DILocation(line: 2351, column: 9, scope: !1585)
!8361 = !DILocation(line: 2353, column: 34, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !1585, file: !453, line: 2353, column: 9)
!8363 = !DILocation(line: 2353, column: 10, scope: !8362)
!8364 = !DILocation(line: 2353, column: 9, scope: !1585)
!8365 = !DILocation(line: 2355, column: 9, scope: !8362)
!8366 = !DILocation(line: 2357, column: 32, scope: !1585)
!8367 = !DILocation(line: 2357, column: 43, scope: !1585)
!8368 = !DILocation(line: 2357, column: 14, scope: !1585)
!8369 = !DILocation(line: 2357, column: 12, scope: !1585)
!8370 = !DILocation(line: 2358, column: 9, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !1585, file: !453, line: 2358, column: 9)
!8372 = !DILocation(line: 2358, column: 16, scope: !8371)
!8373 = !DILocation(line: 2358, column: 9, scope: !1585)
!8374 = !DILocation(line: 2359, column: 9, scope: !8371)
!8375 = !DILocation(line: 2360, column: 58, scope: !1585)
!8376 = !DILocation(line: 2360, column: 5, scope: !1585)
!8377 = !DILocation(line: 2361, column: 1, scope: !1585)
!8378 = !DILocation(line: 2365, column: 27, scope: !1592)
!8379 = !DILocation(line: 2365, column: 43, scope: !1592)
!8380 = !DILocation(line: 2367, column: 5, scope: !1592)
!8381 = !DILocation(line: 2367, column: 15, scope: !1592)
!8382 = !DILocation(line: 2368, column: 5, scope: !1592)
!8383 = !DILocation(line: 2368, column: 15, scope: !1592)
!8384 = !DILocation(line: 2370, column: 34, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !1592, file: !453, line: 2370, column: 9)
!8386 = !DILocation(line: 2370, column: 10, scope: !8385)
!8387 = !DILocation(line: 2370, column: 9, scope: !1592)
!8388 = !DILocation(line: 2372, column: 9, scope: !8385)
!8389 = !DILocation(line: 2373, column: 14, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !1592, file: !453, line: 2373, column: 9)
!8391 = !DILocation(line: 2373, column: 22, scope: !8390)
!8392 = !DILocation(line: 2373, column: 32, scope: !8390)
!8393 = !DILocation(line: 2373, column: 41, scope: !8390)
!8394 = !DILocation(line: 2373, column: 58, scope: !8390)
!8395 = !DILocation(line: 2373, column: 9, scope: !1592)
!8396 = !DILocation(line: 2374, column: 22, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8390, file: !453, line: 2373, column: 65)
!8398 = !DILocation(line: 2374, column: 9, scope: !8397)
!8399 = !DILocation(line: 2375, column: 9, scope: !8397)
!8400 = !DILocation(line: 2378, column: 35, scope: !1592)
!8401 = !DILocation(line: 2378, column: 10, scope: !1592)
!8402 = !DILocation(line: 2378, column: 8, scope: !1592)
!8403 = !DILocation(line: 2379, column: 46, scope: !1592)
!8404 = !DILocation(line: 2379, column: 55, scope: !1592)
!8405 = !DILocation(line: 2379, column: 19, scope: !1592)
!8406 = !DILocation(line: 2379, column: 65, scope: !1592)
!8407 = !DILocation(line: 2379, column: 72, scope: !1592)
!8408 = !DILocation(line: 2379, column: 5, scope: !1592)
!8409 = !DILocation(line: 2380, column: 5, scope: !1592)
!8410 = !DILocation(line: 2380, column: 10, scope: !8411)
!8411 = !DILexicalBlockFile(scope: !1599, file: !453, discriminator: 1)
!8412 = !DILocation(line: 2380, column: 20, scope: !1599)
!8413 = !DILocation(line: 2380, column: 51, scope: !1599)
!8414 = !DILocation(line: 2380, column: 60, scope: !1602)
!8415 = !DILocation(line: 2380, column: 76, scope: !1602)
!8416 = !DILocation(line: 2380, column: 60, scope: !1599)
!8417 = !DILocation(line: 2380, column: 91, scope: !8418)
!8418 = !DILexicalBlockFile(scope: !1602, file: !453, discriminator: 2)
!8419 = !DILocation(line: 2380, column: 96, scope: !8420)
!8420 = !DILexicalBlockFile(scope: !1601, file: !453, discriminator: 4)
!8421 = !DILocation(line: 2380, column: 106, scope: !1601)
!8422 = !DILocation(line: 2380, column: 136, scope: !1601)
!8423 = !DILocation(line: 2380, column: 162, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !1601, file: !453, line: 2380, column: 159)
!8425 = !DILocation(line: 2380, column: 179, scope: !8424)
!8426 = !DILocation(line: 2380, column: 159, scope: !8424)
!8427 = !DILocation(line: 2380, column: 189, scope: !8424)
!8428 = !DILocation(line: 2380, column: 159, scope: !1601)
!8429 = !DILocation(line: 2380, column: 159, scope: !8430)
!8430 = !DILexicalBlockFile(scope: !1601, file: !453, discriminator: 5)
!8431 = !DILocation(line: 2380, column: 220, scope: !8432)
!8432 = !DILexicalBlockFile(scope: !8424, file: !453, discriminator: 6)
!8433 = !DILocation(line: 2380, column: 238, scope: !8424)
!8434 = !DILocation(line: 2380, column: 248, scope: !8424)
!8435 = !DILocation(line: 2380, column: 273, scope: !8424)
!8436 = !DILocation(line: 2380, column: 204, scope: !8424)
!8437 = !DILocation(line: 2380, column: 292, scope: !8438)
!8438 = !DILexicalBlockFile(scope: !1602, file: !453, discriminator: 7)
!8439 = !DILocation(line: 2380, column: 292, scope: !1601)
!8440 = !DILocation(line: 2380, column: 292, scope: !8441)
!8441 = !DILexicalBlockFile(scope: !1601, file: !453, discriminator: 8)
!8442 = !DILocation(line: 2380, column: 292, scope: !8443)
!8443 = !DILexicalBlockFile(scope: !1601, file: !453, discriminator: 9)
!8444 = !DILocation(line: 2380, column: 305, scope: !8445)
!8445 = !DILexicalBlockFile(scope: !8446, file: !453, discriminator: 10)
!8446 = !DILexicalBlockFile(scope: !1592, file: !453, discriminator: 3)
!8447 = !DILocation(line: 2380, column: 305, scope: !1599)
!8448 = !DILocation(line: 2380, column: 305, scope: !8449)
!8449 = !DILexicalBlockFile(scope: !1599, file: !453, discriminator: 11)
!8450 = !DILocation(line: 2382, column: 58, scope: !1592)
!8451 = !DILocation(line: 2382, column: 5, scope: !1592)
!8452 = !DILocation(line: 2383, column: 1, scope: !1592)
!8453 = !DILocation(line: 1786, column: 29, scope: !1603)
!8454 = !DILocation(line: 1786, column: 45, scope: !1603)
!8455 = !DILocation(line: 1788, column: 5, scope: !1603)
!8456 = !DILocation(line: 1788, column: 15, scope: !1603)
!8457 = !DILocation(line: 1789, column: 5, scope: !1603)
!8458 = !DILocation(line: 1789, column: 15, scope: !1603)
!8459 = !DILocation(line: 1789, column: 26, scope: !1603)
!8460 = !DILocation(line: 1789, column: 38, scope: !1603)
!8461 = !DILocation(line: 1790, column: 5, scope: !1603)
!8462 = !DILocation(line: 1790, column: 15, scope: !1603)
!8463 = !DILocation(line: 1790, column: 22, scope: !1603)
!8464 = !DILocation(line: 1790, column: 30, scope: !1603)
!8465 = !DILocation(line: 1791, column: 34, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !1603, file: !453, line: 1791, column: 9)
!8467 = !DILocation(line: 1791, column: 10, scope: !8466)
!8468 = !DILocation(line: 1791, column: 9, scope: !1603)
!8469 = !DILocation(line: 1793, column: 9, scope: !8466)
!8470 = !DILocation(line: 1795, column: 5, scope: !1603)
!8471 = !DILocation(line: 1797, column: 21, scope: !1603)
!8472 = !DILocation(line: 1797, column: 33, scope: !1603)
!8473 = !DILocation(line: 1797, column: 42, scope: !1603)
!8474 = !DILocation(line: 1798, column: 21, scope: !1603)
!8475 = !DILocation(line: 1798, column: 34, scope: !1603)
!8476 = !DILocation(line: 1798, column: 43, scope: !1603)
!8477 = !DILocation(line: 1799, column: 21, scope: !1603)
!8478 = !DILocation(line: 1799, column: 31, scope: !1603)
!8479 = !DILocation(line: 1799, column: 40, scope: !1603)
!8480 = !DILocation(line: 1800, column: 22, scope: !1603)
!8481 = !DILocation(line: 1800, column: 32, scope: !1603)
!8482 = !DILocation(line: 1800, column: 43, scope: !1603)
!8483 = !DILocation(line: 1800, column: 5, scope: !1603)
!8484 = !DILocation(line: 1802, column: 32, scope: !1603)
!8485 = !DILocation(line: 1802, column: 39, scope: !8486)
!8486 = !DILexicalBlockFile(scope: !1603, file: !453, discriminator: 1)
!8487 = !DILocation(line: 1802, column: 32, scope: !8488)
!8488 = !DILexicalBlockFile(scope: !1603, file: !453, discriminator: 2)
!8489 = !DILocation(line: 1802, column: 65, scope: !8490)
!8490 = !DILexicalBlockFile(scope: !8491, file: !453, discriminator: 4)
!8491 = !DILexicalBlockFile(scope: !1603, file: !453, discriminator: 3)
!8492 = !DILocation(line: 1802, column: 73, scope: !8493)
!8493 = !DILexicalBlockFile(scope: !1603, file: !453, discriminator: 5)
!8494 = !DILocation(line: 1802, column: 65, scope: !1603)
!8495 = !DILocation(line: 1802, column: 65, scope: !8496)
!8496 = !DILexicalBlockFile(scope: !1603, file: !453, discriminator: 6)
!8497 = !DILocation(line: 1802, column: 100, scope: !8498)
!8498 = !DILexicalBlockFile(scope: !8499, file: !453, discriminator: 8)
!8499 = !DILexicalBlockFile(scope: !1603, file: !453, discriminator: 7)
!8500 = !DILocation(line: 1802, column: 105, scope: !8501)
!8501 = !DILexicalBlockFile(scope: !1603, file: !453, discriminator: 9)
!8502 = !DILocation(line: 1802, column: 100, scope: !1603)
!8503 = !DILocation(line: 1802, column: 100, scope: !8504)
!8504 = !DILexicalBlockFile(scope: !1603, file: !453, discriminator: 10)
!8505 = !DILocation(line: 1802, column: 16, scope: !8506)
!8506 = !DILexicalBlockFile(scope: !8507, file: !453, discriminator: 12)
!8507 = !DILexicalBlockFile(scope: !1603, file: !453, discriminator: 11)
!8508 = !DILocation(line: 1802, column: 14, scope: !1603)
!8509 = !DILocation(line: 1803, column: 5, scope: !1603)
!8510 = !DILocation(line: 1803, column: 10, scope: !8511)
!8511 = !DILexicalBlockFile(scope: !1615, file: !453, discriminator: 1)
!8512 = !DILocation(line: 1803, column: 20, scope: !1615)
!8513 = !DILocation(line: 1803, column: 51, scope: !1615)
!8514 = !DILocation(line: 1803, column: 62, scope: !1618)
!8515 = !DILocation(line: 1803, column: 78, scope: !1618)
!8516 = !DILocation(line: 1803, column: 62, scope: !1615)
!8517 = !DILocation(line: 1803, column: 93, scope: !8518)
!8518 = !DILexicalBlockFile(scope: !1618, file: !453, discriminator: 2)
!8519 = !DILocation(line: 1803, column: 98, scope: !8520)
!8520 = !DILexicalBlockFile(scope: !1617, file: !453, discriminator: 4)
!8521 = !DILocation(line: 1803, column: 108, scope: !1617)
!8522 = !DILocation(line: 1803, column: 138, scope: !1617)
!8523 = !DILocation(line: 1803, column: 164, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !1617, file: !453, line: 1803, column: 161)
!8525 = !DILocation(line: 1803, column: 181, scope: !8524)
!8526 = !DILocation(line: 1803, column: 161, scope: !8524)
!8527 = !DILocation(line: 1803, column: 191, scope: !8524)
!8528 = !DILocation(line: 1803, column: 161, scope: !1617)
!8529 = !DILocation(line: 1803, column: 161, scope: !8530)
!8530 = !DILexicalBlockFile(scope: !1617, file: !453, discriminator: 5)
!8531 = !DILocation(line: 1803, column: 222, scope: !8532)
!8532 = !DILexicalBlockFile(scope: !8524, file: !453, discriminator: 6)
!8533 = !DILocation(line: 1803, column: 240, scope: !8524)
!8534 = !DILocation(line: 1803, column: 250, scope: !8524)
!8535 = !DILocation(line: 1803, column: 275, scope: !8524)
!8536 = !DILocation(line: 1803, column: 206, scope: !8524)
!8537 = !DILocation(line: 1803, column: 294, scope: !8538)
!8538 = !DILexicalBlockFile(scope: !1618, file: !453, discriminator: 7)
!8539 = !DILocation(line: 1803, column: 294, scope: !1617)
!8540 = !DILocation(line: 1803, column: 294, scope: !8541)
!8541 = !DILexicalBlockFile(scope: !1617, file: !453, discriminator: 8)
!8542 = !DILocation(line: 1803, column: 294, scope: !8543)
!8543 = !DILexicalBlockFile(scope: !1617, file: !453, discriminator: 9)
!8544 = !DILocation(line: 1803, column: 307, scope: !8545)
!8545 = !DILexicalBlockFile(scope: !8491, file: !453, discriminator: 10)
!8546 = !DILocation(line: 1803, column: 307, scope: !1615)
!8547 = !DILocation(line: 1803, column: 307, scope: !8548)
!8548 = !DILexicalBlockFile(scope: !1615, file: !453, discriminator: 11)
!8549 = !DILocation(line: 1804, column: 5, scope: !1603)
!8550 = !DILocation(line: 1804, column: 10, scope: !8551)
!8551 = !DILexicalBlockFile(scope: !1620, file: !453, discriminator: 1)
!8552 = !DILocation(line: 1804, column: 20, scope: !1620)
!8553 = !DILocation(line: 1804, column: 51, scope: !1620)
!8554 = !DILocation(line: 1804, column: 63, scope: !1623)
!8555 = !DILocation(line: 1804, column: 79, scope: !1623)
!8556 = !DILocation(line: 1804, column: 63, scope: !1620)
!8557 = !DILocation(line: 1804, column: 94, scope: !8558)
!8558 = !DILexicalBlockFile(scope: !1623, file: !453, discriminator: 2)
!8559 = !DILocation(line: 1804, column: 99, scope: !8560)
!8560 = !DILexicalBlockFile(scope: !1622, file: !453, discriminator: 4)
!8561 = !DILocation(line: 1804, column: 109, scope: !1622)
!8562 = !DILocation(line: 1804, column: 139, scope: !1622)
!8563 = !DILocation(line: 1804, column: 165, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !1622, file: !453, line: 1804, column: 162)
!8565 = !DILocation(line: 1804, column: 182, scope: !8564)
!8566 = !DILocation(line: 1804, column: 162, scope: !8564)
!8567 = !DILocation(line: 1804, column: 192, scope: !8564)
!8568 = !DILocation(line: 1804, column: 162, scope: !1622)
!8569 = !DILocation(line: 1804, column: 162, scope: !8570)
!8570 = !DILexicalBlockFile(scope: !1622, file: !453, discriminator: 5)
!8571 = !DILocation(line: 1804, column: 223, scope: !8572)
!8572 = !DILexicalBlockFile(scope: !8564, file: !453, discriminator: 6)
!8573 = !DILocation(line: 1804, column: 241, scope: !8564)
!8574 = !DILocation(line: 1804, column: 251, scope: !8564)
!8575 = !DILocation(line: 1804, column: 276, scope: !8564)
!8576 = !DILocation(line: 1804, column: 207, scope: !8564)
!8577 = !DILocation(line: 1804, column: 295, scope: !8578)
!8578 = !DILexicalBlockFile(scope: !1623, file: !453, discriminator: 7)
!8579 = !DILocation(line: 1804, column: 295, scope: !1622)
!8580 = !DILocation(line: 1804, column: 295, scope: !8581)
!8581 = !DILexicalBlockFile(scope: !1622, file: !453, discriminator: 8)
!8582 = !DILocation(line: 1804, column: 295, scope: !8583)
!8583 = !DILexicalBlockFile(scope: !1622, file: !453, discriminator: 9)
!8584 = !DILocation(line: 1804, column: 308, scope: !8545)
!8585 = !DILocation(line: 1804, column: 308, scope: !1620)
!8586 = !DILocation(line: 1804, column: 308, scope: !8587)
!8587 = !DILexicalBlockFile(scope: !1620, file: !453, discriminator: 11)
!8588 = !DILocation(line: 1805, column: 5, scope: !1603)
!8589 = !DILocation(line: 1805, column: 10, scope: !8590)
!8590 = !DILexicalBlockFile(scope: !1625, file: !453, discriminator: 1)
!8591 = !DILocation(line: 1805, column: 20, scope: !1625)
!8592 = !DILocation(line: 1805, column: 51, scope: !1625)
!8593 = !DILocation(line: 1805, column: 60, scope: !1628)
!8594 = !DILocation(line: 1805, column: 76, scope: !1628)
!8595 = !DILocation(line: 1805, column: 60, scope: !1625)
!8596 = !DILocation(line: 1805, column: 91, scope: !8597)
!8597 = !DILexicalBlockFile(scope: !1628, file: !453, discriminator: 2)
!8598 = !DILocation(line: 1805, column: 96, scope: !8599)
!8599 = !DILexicalBlockFile(scope: !1627, file: !453, discriminator: 4)
!8600 = !DILocation(line: 1805, column: 106, scope: !1627)
!8601 = !DILocation(line: 1805, column: 136, scope: !1627)
!8602 = !DILocation(line: 1805, column: 162, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !1627, file: !453, line: 1805, column: 159)
!8604 = !DILocation(line: 1805, column: 179, scope: !8603)
!8605 = !DILocation(line: 1805, column: 159, scope: !8603)
!8606 = !DILocation(line: 1805, column: 189, scope: !8603)
!8607 = !DILocation(line: 1805, column: 159, scope: !1627)
!8608 = !DILocation(line: 1805, column: 159, scope: !8609)
!8609 = !DILexicalBlockFile(scope: !1627, file: !453, discriminator: 5)
!8610 = !DILocation(line: 1805, column: 220, scope: !8611)
!8611 = !DILexicalBlockFile(scope: !8603, file: !453, discriminator: 6)
!8612 = !DILocation(line: 1805, column: 238, scope: !8603)
!8613 = !DILocation(line: 1805, column: 248, scope: !8603)
!8614 = !DILocation(line: 1805, column: 273, scope: !8603)
!8615 = !DILocation(line: 1805, column: 204, scope: !8603)
!8616 = !DILocation(line: 1805, column: 292, scope: !8617)
!8617 = !DILexicalBlockFile(scope: !1628, file: !453, discriminator: 7)
!8618 = !DILocation(line: 1805, column: 292, scope: !1627)
!8619 = !DILocation(line: 1805, column: 292, scope: !8620)
!8620 = !DILexicalBlockFile(scope: !1627, file: !453, discriminator: 8)
!8621 = !DILocation(line: 1805, column: 292, scope: !8622)
!8622 = !DILexicalBlockFile(scope: !1627, file: !453, discriminator: 9)
!8623 = !DILocation(line: 1805, column: 305, scope: !8545)
!8624 = !DILocation(line: 1805, column: 305, scope: !1625)
!8625 = !DILocation(line: 1805, column: 305, scope: !8626)
!8626 = !DILexicalBlockFile(scope: !1625, file: !453, discriminator: 11)
!8627 = !DILocation(line: 1806, column: 12, scope: !1603)
!8628 = !DILocation(line: 1806, column: 5, scope: !1603)
!8629 = !DILocation(line: 1807, column: 1, scope: !1603)
!8630 = !DILocation(line: 2408, column: 22, scope: !1629)
!8631 = !DILocation(line: 2408, column: 35, scope: !1629)
!8632 = !DILocation(line: 2410, column: 5, scope: !1629)
!8633 = !DILocation(line: 2410, column: 15, scope: !1629)
!8634 = !DILocation(line: 2411, column: 17, scope: !1629)
!8635 = !DILocation(line: 2411, column: 10, scope: !1629)
!8636 = !DILocation(line: 2412, column: 34, scope: !1637)
!8637 = !DILocation(line: 2412, column: 10, scope: !1637)
!8638 = !DILocation(line: 2412, column: 9, scope: !1629)
!8639 = !DILocation(line: 2415, column: 14, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !1636, file: !453, line: 2415, column: 13)
!8641 = !DILocation(line: 2415, column: 13, scope: !1636)
!8642 = !DILocation(line: 2417, column: 13, scope: !8640)
!8643 = !DILocation(line: 2419, column: 48, scope: !1636)
!8644 = !DILocation(line: 2419, column: 56, scope: !1636)
!8645 = !DILocation(line: 2419, column: 15, scope: !1636)
!8646 = !DILocation(line: 2419, column: 13, scope: !1636)
!8647 = !DILocation(line: 2420, column: 9, scope: !1636)
!8648 = !DILocation(line: 2420, column: 14, scope: !8649)
!8649 = !DILexicalBlockFile(scope: !1635, file: !453, discriminator: 1)
!8650 = !DILocation(line: 2420, column: 24, scope: !1635)
!8651 = !DILocation(line: 2420, column: 54, scope: !1635)
!8652 = !DILocation(line: 2420, column: 69, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !1635, file: !453, line: 2420, column: 66)
!8654 = !DILocation(line: 2420, column: 86, scope: !8653)
!8655 = !DILocation(line: 2420, column: 66, scope: !8653)
!8656 = !DILocation(line: 2420, column: 96, scope: !8653)
!8657 = !DILocation(line: 2420, column: 66, scope: !1635)
!8658 = !DILocation(line: 2420, column: 66, scope: !8659)
!8659 = !DILexicalBlockFile(scope: !1635, file: !453, discriminator: 2)
!8660 = !DILocation(line: 2420, column: 127, scope: !8661)
!8661 = !DILexicalBlockFile(scope: !8653, file: !453, discriminator: 3)
!8662 = !DILocation(line: 2420, column: 145, scope: !8653)
!8663 = !DILocation(line: 2420, column: 155, scope: !8653)
!8664 = !DILocation(line: 2420, column: 180, scope: !8653)
!8665 = !DILocation(line: 2420, column: 111, scope: !8653)
!8666 = !DILocation(line: 2420, column: 199, scope: !8667)
!8667 = !DILexicalBlockFile(scope: !1636, file: !453, discriminator: 4)
!8668 = !DILocation(line: 2420, column: 199, scope: !1635)
!8669 = !DILocation(line: 2420, column: 199, scope: !8670)
!8670 = !DILexicalBlockFile(scope: !1635, file: !453, discriminator: 5)
!8671 = !DILocation(line: 2421, column: 9, scope: !1636)
!8672 = !DILocation(line: 2422, column: 16, scope: !1636)
!8673 = !DILocation(line: 2422, column: 9, scope: !1636)
!8674 = !DILocation(line: 2424, column: 58, scope: !1629)
!8675 = !DILocation(line: 2424, column: 5, scope: !1629)
!8676 = !DILocation(line: 2425, column: 1, scope: !1629)
!8677 = !DILocation(line: 2429, column: 25, scope: !1642)
!8678 = !DILocation(line: 2429, column: 41, scope: !1642)
!8679 = !DILocation(line: 2431, column: 5, scope: !1642)
!8680 = !DILocation(line: 2431, column: 17, scope: !1642)
!8681 = !DILocation(line: 2432, column: 5, scope: !1642)
!8682 = !DILocation(line: 2432, column: 17, scope: !1642)
!8683 = !DILocation(line: 2433, column: 5, scope: !1642)
!8684 = !DILocation(line: 2433, column: 9, scope: !1642)
!8685 = !DILocation(line: 2435, column: 34, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !1642, file: !453, line: 2435, column: 9)
!8687 = !DILocation(line: 2435, column: 10, scope: !8686)
!8688 = !DILocation(line: 2435, column: 9, scope: !1642)
!8689 = !DILocation(line: 2437, column: 9, scope: !8686)
!8690 = !DILocation(line: 2439, column: 40, scope: !1642)
!8691 = !DILocation(line: 2439, column: 50, scope: !1642)
!8692 = !DILocation(line: 2439, column: 60, scope: !1642)
!8693 = !DILocation(line: 2439, column: 24, scope: !1642)
!8694 = !DILocation(line: 2439, column: 12, scope: !1642)
!8695 = !DILocation(line: 2439, column: 5, scope: !1642)
!8696 = !DILocation(line: 2440, column: 1, scope: !1642)
!8697 = !DILocation(line: 2445, column: 35, scope: !1649)
!8698 = !DILocation(line: 2445, column: 51, scope: !1649)
!8699 = !DILocation(line: 2445, column: 67, scope: !1649)
!8700 = !DILocation(line: 2447, column: 5, scope: !1649)
!8701 = !DILocation(line: 2447, column: 17, scope: !1649)
!8702 = !DILocation(line: 2448, column: 5, scope: !1649)
!8703 = !DILocation(line: 2448, column: 17, scope: !1649)
!8704 = !DILocation(line: 2449, column: 5, scope: !1649)
!8705 = !DILocation(line: 2449, column: 15, scope: !1649)
!8706 = !DILocation(line: 2450, column: 5, scope: !1649)
!8707 = !DILocation(line: 2450, column: 15, scope: !1649)
!8708 = !DILocation(line: 2454, column: 45, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !1649, file: !453, line: 2454, column: 9)
!8710 = !DILocation(line: 2454, column: 51, scope: !8709)
!8711 = !DILocation(line: 2454, column: 10, scope: !8709)
!8712 = !DILocation(line: 2454, column: 9, scope: !1649)
!8713 = !DILocation(line: 2457, column: 9, scope: !8709)
!8714 = !DILocation(line: 2459, column: 38, scope: !1649)
!8715 = !DILocation(line: 2459, column: 44, scope: !1649)
!8716 = !DILocation(line: 2459, column: 49, scope: !1649)
!8717 = !DILocation(line: 2459, column: 55, scope: !1649)
!8718 = !DILocation(line: 2459, column: 12, scope: !1649)
!8719 = !DILocation(line: 2459, column: 5, scope: !1649)
!8720 = !DILocation(line: 2460, column: 1, scope: !1649)
!8721 = !DILocation(line: 2463, column: 45, scope: !1658)
!8722 = !DILocation(line: 2465, column: 5, scope: !1658)
!8723 = !DILocation(line: 2465, column: 15, scope: !1658)
!8724 = !DILocation(line: 2466, column: 9, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !1658, file: !453, line: 2466, column: 9)
!8726 = !DILocation(line: 2466, column: 105, scope: !8725)
!8727 = !DILocation(line: 2466, column: 9, scope: !1658)
!8728 = !DILocation(line: 2467, column: 9, scope: !8725)
!8729 = !DILocation(line: 2468, column: 12, scope: !1658)
!8730 = !DILocation(line: 2468, column: 5, scope: !1658)
!8731 = !DILocation(line: 2469, column: 1, scope: !1658)
!8732 = !DILocation(line: 2474, column: 35, scope: !1662)
!8733 = !DILocation(line: 2476, column: 7, scope: !1666)
!8734 = !DILocation(line: 2476, column: 22, scope: !1666)
!8735 = !DILocation(line: 2476, column: 37, scope: !1666)
!8736 = !DILocation(line: 2476, column: 35, scope: !1666)
!8737 = !DILocation(line: 2481, column: 5, scope: !1666)
!8738 = !DILocation(line: 2482, column: 26, scope: !1666)
!8739 = !DILocation(line: 2482, column: 5, scope: !1666)
!8740 = !DILocation(line: 2482, column: 34, scope: !1662)
!8741 = !DILocation(line: 2483, column: 5, scope: !1662)
!8742 = !DILocation(line: 2488, column: 28, scope: !1667)
!8743 = !DILocation(line: 2488, column: 44, scope: !1667)
!8744 = !DILocation(line: 2490, column: 5, scope: !1667)
!8745 = !DILocation(line: 2490, column: 17, scope: !1667)
!8746 = !DILocation(line: 2491, column: 5, scope: !1667)
!8747 = !DILocation(line: 2491, column: 9, scope: !1667)
!8748 = !DILocation(line: 2492, column: 5, scope: !1667)
!8749 = !DILocation(line: 2492, column: 20, scope: !1667)
!8750 = !DILocation(line: 2492, column: 31, scope: !1667)
!8751 = !DILocation(line: 2494, column: 34, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !1667, file: !453, line: 2494, column: 9)
!8753 = !DILocation(line: 2494, column: 10, scope: !8752)
!8754 = !DILocation(line: 2494, column: 9, scope: !1667)
!8755 = !DILocation(line: 2496, column: 9, scope: !8752)
!8756 = !DILocation(line: 2498, column: 17, scope: !1667)
!8757 = !DILocation(line: 2498, column: 15, scope: !1667)
!8758 = !DILocation(line: 2500, column: 5, scope: !1667)
!8759 = !DILocation(line: 2502, column: 16, scope: !1667)
!8760 = !DILocation(line: 2502, column: 14, scope: !1667)
!8761 = !DILocation(line: 2503, column: 9, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !1667, file: !453, line: 2503, column: 9)
!8763 = !DILocation(line: 2503, column: 18, scope: !8762)
!8764 = !DILocation(line: 2503, column: 9, scope: !1667)
!8765 = !DILocation(line: 2507, column: 28, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8762, file: !453, line: 2503, column: 33)
!8767 = !DILocation(line: 2507, column: 9, scope: !8766)
!8768 = !DILocation(line: 2508, column: 25, scope: !8766)
!8769 = !DILocation(line: 2508, column: 9, scope: !8766)
!8770 = !DILocation(line: 2509, column: 9, scope: !8766)
!8771 = !DILocation(line: 2511, column: 33, scope: !1667)
!8772 = !DILocation(line: 2511, column: 9, scope: !1667)
!8773 = !DILocation(line: 2511, column: 7, scope: !1667)
!8774 = !DILocation(line: 2512, column: 23, scope: !1667)
!8775 = !DILocation(line: 2512, column: 5, scope: !1667)
!8776 = !DILocation(line: 2514, column: 24, scope: !1667)
!8777 = !DILocation(line: 2514, column: 5, scope: !1667)
!8778 = !DILocation(line: 2516, column: 28, scope: !1667)
!8779 = !DILocation(line: 2516, column: 12, scope: !1667)
!8780 = !DILocation(line: 2516, column: 5, scope: !1667)
!8781 = !DILocation(line: 2517, column: 1, scope: !1667)
!8782 = !DILocation(line: 2530, column: 40, scope: !1675)
!8783 = !DILocation(line: 2530, column: 56, scope: !1675)
!8784 = !DILocation(line: 2532, column: 5, scope: !1675)
!8785 = !DILocation(line: 2532, column: 15, scope: !1675)
!8786 = !DILocation(line: 2533, column: 5, scope: !1675)
!8787 = !DILocation(line: 2533, column: 12, scope: !1675)
!8788 = !DILocation(line: 2534, column: 5, scope: !1675)
!8789 = !DILocation(line: 2534, column: 9, scope: !1675)
!8790 = !DILocation(line: 2535, column: 34, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !1675, file: !453, line: 2535, column: 9)
!8792 = !DILocation(line: 2535, column: 10, scope: !8791)
!8793 = !DILocation(line: 2535, column: 9, scope: !1675)
!8794 = !DILocation(line: 2536, column: 9, scope: !8791)
!8795 = !DILocation(line: 2537, column: 29, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !1675, file: !453, line: 2537, column: 9)
!8797 = !DILocation(line: 2537, column: 9, scope: !8796)
!8798 = !DILocation(line: 2537, column: 36, scope: !8796)
!8799 = !DILocation(line: 2537, column: 9, scope: !1675)
!8800 = !DILocation(line: 2538, column: 9, scope: !8796)
!8801 = !DILocation(line: 2539, column: 32, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !1675, file: !453, line: 2539, column: 9)
!8803 = !DILocation(line: 2539, column: 43, scope: !8802)
!8804 = !DILocation(line: 2539, column: 9, scope: !8802)
!8805 = !DILocation(line: 2539, column: 50, scope: !8802)
!8806 = !DILocation(line: 2539, column: 9, scope: !1675)
!8807 = !DILocation(line: 2540, column: 9, scope: !8802)
!8808 = !DILocation(line: 2541, column: 31, scope: !1675)
!8809 = !DILocation(line: 2541, column: 12, scope: !1675)
!8810 = !DILocation(line: 2541, column: 5, scope: !1675)
!8811 = !DILocation(line: 2542, column: 1, scope: !1675)
!8812 = !DILocation(line: 2545, column: 41, scope: !1687)
!8813 = !DILocation(line: 2545, column: 57, scope: !1687)
!8814 = !DILocation(line: 2547, column: 5, scope: !1687)
!8815 = !DILocation(line: 2547, column: 15, scope: !1687)
!8816 = !DILocation(line: 2548, column: 5, scope: !1687)
!8817 = !DILocation(line: 2548, column: 12, scope: !1687)
!8818 = !DILocation(line: 2549, column: 5, scope: !1687)
!8819 = !DILocation(line: 2549, column: 10, scope: !1687)
!8820 = !DILocation(line: 2550, column: 5, scope: !1687)
!8821 = !DILocation(line: 2550, column: 9, scope: !1687)
!8822 = !DILocation(line: 2551, column: 34, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !1687, file: !453, line: 2551, column: 9)
!8824 = !DILocation(line: 2551, column: 10, scope: !8823)
!8825 = !DILocation(line: 2551, column: 9, scope: !1687)
!8826 = !DILocation(line: 2552, column: 9, scope: !8823)
!8827 = !DILocation(line: 2553, column: 29, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !1687, file: !453, line: 2553, column: 9)
!8829 = !DILocation(line: 2553, column: 9, scope: !8828)
!8830 = !DILocation(line: 2553, column: 36, scope: !8828)
!8831 = !DILocation(line: 2553, column: 9, scope: !1687)
!8832 = !DILocation(line: 2554, column: 9, scope: !8828)
!8833 = !DILocation(line: 2555, column: 33, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !1687, file: !453, line: 2555, column: 9)
!8835 = !DILocation(line: 2555, column: 51, scope: !8834)
!8836 = !DILocation(line: 2555, column: 9, scope: !8834)
!8837 = !DILocation(line: 2555, column: 58, scope: !8834)
!8838 = !DILocation(line: 2555, column: 9, scope: !1687)
!8839 = !DILocation(line: 2556, column: 9, scope: !8834)
!8840 = !DILocation(line: 2557, column: 58, scope: !1687)
!8841 = !DILocation(line: 2557, column: 39, scope: !1687)
!8842 = !DILocation(line: 2557, column: 64, scope: !1687)
!8843 = !DILocation(line: 2557, column: 12, scope: !1687)
!8844 = !DILocation(line: 2557, column: 5, scope: !1687)
!8845 = !DILocation(line: 2558, column: 1, scope: !1687)
!8846 = !DILocation(line: 2561, column: 42, scope: !1695)
!8847 = !DILocation(line: 2561, column: 58, scope: !1695)
!8848 = !DILocation(line: 2563, column: 5, scope: !1695)
!8849 = !DILocation(line: 2563, column: 15, scope: !1695)
!8850 = !DILocation(line: 2564, column: 5, scope: !1695)
!8851 = !DILocation(line: 2564, column: 12, scope: !1695)
!8852 = !DILocation(line: 2565, column: 5, scope: !1695)
!8853 = !DILocation(line: 2565, column: 10, scope: !1695)
!8854 = !DILocation(line: 2566, column: 5, scope: !1695)
!8855 = !DILocation(line: 2566, column: 9, scope: !1695)
!8856 = !DILocation(line: 2567, column: 34, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !1695, file: !453, line: 2567, column: 9)
!8858 = !DILocation(line: 2567, column: 10, scope: !8857)
!8859 = !DILocation(line: 2567, column: 9, scope: !1695)
!8860 = !DILocation(line: 2568, column: 9, scope: !8857)
!8861 = !DILocation(line: 2569, column: 29, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !1695, file: !453, line: 2569, column: 9)
!8863 = !DILocation(line: 2569, column: 9, scope: !8862)
!8864 = !DILocation(line: 2569, column: 36, scope: !8862)
!8865 = !DILocation(line: 2569, column: 9, scope: !1695)
!8866 = !DILocation(line: 2570, column: 9, scope: !8862)
!8867 = !DILocation(line: 2571, column: 34, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !1695, file: !453, line: 2571, column: 9)
!8869 = !DILocation(line: 2571, column: 52, scope: !8868)
!8870 = !DILocation(line: 2571, column: 9, scope: !8868)
!8871 = !DILocation(line: 2571, column: 59, scope: !8868)
!8872 = !DILocation(line: 2571, column: 9, scope: !1695)
!8873 = !DILocation(line: 2572, column: 9, scope: !8868)
!8874 = !DILocation(line: 2573, column: 58, scope: !1695)
!8875 = !DILocation(line: 2573, column: 39, scope: !1695)
!8876 = !DILocation(line: 2573, column: 64, scope: !1695)
!8877 = !DILocation(line: 2573, column: 12, scope: !1695)
!8878 = !DILocation(line: 2573, column: 5, scope: !1695)
!8879 = !DILocation(line: 2574, column: 1, scope: !1695)
!8880 = !DILocation(line: 2637, column: 23, scope: !1703)
!8881 = !DILocation(line: 2637, column: 39, scope: !1703)
!8882 = !DILocation(line: 2639, column: 5, scope: !1703)
!8883 = !DILocation(line: 2639, column: 15, scope: !1703)
!8884 = !DILocation(line: 2640, column: 5, scope: !1703)
!8885 = !DILocation(line: 2640, column: 19, scope: !1703)
!8886 = !DILocation(line: 2642, column: 34, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !1703, file: !453, line: 2642, column: 9)
!8888 = !DILocation(line: 2642, column: 10, scope: !8887)
!8889 = !DILocation(line: 2642, column: 9, scope: !1703)
!8890 = !DILocation(line: 2643, column: 9, scope: !8887)
!8891 = !DILocation(line: 2644, column: 27, scope: !1703)
!8892 = !DILocation(line: 2644, column: 10, scope: !1703)
!8893 = !DILocation(line: 2644, column: 8, scope: !1703)
!8894 = !DILocation(line: 2645, column: 27, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !1703, file: !453, line: 2645, column: 9)
!8896 = !DILocation(line: 2645, column: 34, scope: !8895)
!8897 = !DILocation(line: 2645, column: 45, scope: !8895)
!8898 = !DILocation(line: 2645, column: 54, scope: !8895)
!8899 = !DILocation(line: 2645, column: 71, scope: !8895)
!8900 = !DILocation(line: 2645, column: 77, scope: !8895)
!8901 = !DILocation(line: 2645, column: 84, scope: !8902)
!8902 = !DILexicalBlockFile(scope: !8895, file: !453, discriminator: 1)
!8903 = !DILocation(line: 2645, column: 89, scope: !8895)
!8904 = !DILocation(line: 2645, column: 98, scope: !8895)
!8905 = !DILocation(line: 2645, column: 114, scope: !8895)
!8906 = !DILocation(line: 2645, column: 9, scope: !1703)
!8907 = !DILocation(line: 2646, column: 22, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8895, file: !453, line: 2645, column: 121)
!8909 = !DILocation(line: 2647, column: 52, scope: !8908)
!8910 = !DILocation(line: 2646, column: 9, scope: !8908)
!8911 = !DILocation(line: 2648, column: 9, scope: !8908)
!8912 = !DILocation(line: 2650, column: 5, scope: !1703)
!8913 = !DILocation(line: 2650, column: 9, scope: !1703)
!8914 = !DILocation(line: 2650, column: 16, scope: !1703)
!8915 = !{!1998, !1942, i64 376}
!8916 = !DILocation(line: 2651, column: 21, scope: !1703)
!8917 = !DILocation(line: 2651, column: 28, scope: !1703)
!8918 = !DILocation(line: 2651, column: 37, scope: !1703)
!8919 = !DILocation(line: 2652, column: 12, scope: !1703)
!8920 = !DILocation(line: 2652, column: 5, scope: !1703)
!8921 = !DILocation(line: 2653, column: 1, scope: !1703)
!8922 = !DILocation(line: 2709, column: 29, scope: !1726)
!8923 = !DILocation(line: 2711, column: 5, scope: !1726)
!8924 = !DILocation(line: 2711, column: 11, scope: !1726)
!8925 = !DILocation(line: 2713, column: 11, scope: !1726)
!8926 = !DILocation(line: 2713, column: 9, scope: !1726)
!8927 = !DILocation(line: 2714, column: 9, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !1726, file: !453, line: 2714, column: 9)
!8929 = !DILocation(line: 2714, column: 13, scope: !8928)
!8930 = !DILocation(line: 2714, column: 9, scope: !1726)
!8931 = !DILocation(line: 2715, column: 25, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8928, file: !453, line: 2714, column: 28)
!8933 = !DILocation(line: 2715, column: 9, scope: !8932)
!8934 = !DILocation(line: 2716, column: 9, scope: !8932)
!8935 = !DILocation(line: 2718, column: 16, scope: !1726)
!8936 = !DILocation(line: 2718, column: 5, scope: !1726)
!8937 = !DILocation(line: 2720, column: 11, scope: !1726)
!8938 = !DILocation(line: 2720, column: 9, scope: !1726)
!8939 = !DILocation(line: 2721, column: 9, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !1726, file: !453, line: 2721, column: 9)
!8941 = !DILocation(line: 2721, column: 13, scope: !8940)
!8942 = !DILocation(line: 2721, column: 9, scope: !1726)
!8943 = !DILocation(line: 2722, column: 25, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8940, file: !453, line: 2721, column: 28)
!8945 = !DILocation(line: 2722, column: 9, scope: !8944)
!8946 = !DILocation(line: 2723, column: 9, scope: !8944)
!8947 = !DILocation(line: 2725, column: 19, scope: !1726)
!8948 = !DILocation(line: 2725, column: 5, scope: !1726)
!8949 = !DILocation(line: 2727, column: 58, scope: !1726)
!8950 = !DILocation(line: 2727, column: 5, scope: !1726)
!8951 = !DILocation(line: 2728, column: 1, scope: !1726)
!8952 = !DILocation(line: 2847, column: 39, scope: !1730)
!8953 = !DILocation(line: 2849, column: 12, scope: !1730)
!8954 = !DILocation(line: 2849, column: 5, scope: !1730)
!8955 = !DILocation(line: 2853, column: 36, scope: !1763)
!8956 = !DILocation(line: 2855, column: 12, scope: !1763)
!8957 = !DILocation(line: 2855, column: 5, scope: !1763)
!8958 = !DILocation(line: 2859, column: 39, scope: !1766)
!8959 = !DILocation(line: 2861, column: 12, scope: !1766)
!8960 = !DILocation(line: 2861, column: 5, scope: !1766)
!8961 = !DILocation(line: 2952, column: 38, scope: !1769)
!8962 = !DILocation(line: 2952, column: 54, scope: !1769)
!8963 = !DILocation(line: 2954, column: 5, scope: !1769)
!8964 = !DILocation(line: 2954, column: 15, scope: !1769)
!8965 = !DILocation(line: 2955, column: 5, scope: !1769)
!8966 = !DILocation(line: 2955, column: 21, scope: !1769)
!8967 = !DILocation(line: 2956, column: 5, scope: !1769)
!8968 = !DILocation(line: 2956, column: 10, scope: !1769)
!8969 = !DILocation(line: 2958, column: 5, scope: !1769)
!8970 = !DILocation(line: 2960, column: 33, scope: !1769)
!8971 = !DILocation(line: 2960, column: 19, scope: !1769)
!8972 = !DILocation(line: 2960, column: 31, scope: !1769)
!8973 = !DILocation(line: 2961, column: 32, scope: !1769)
!8974 = !DILocation(line: 2961, column: 19, scope: !1769)
!8975 = !DILocation(line: 2961, column: 30, scope: !1769)
!8976 = !DILocation(line: 2962, column: 19, scope: !1769)
!8977 = !DILocation(line: 2962, column: 28, scope: !1769)
!8978 = !DILocation(line: 2963, column: 24, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !1769, file: !453, line: 2963, column: 9)
!8980 = !DILocation(line: 2963, column: 10, scope: !8979)
!8981 = !DILocation(line: 2963, column: 36, scope: !8979)
!8982 = !DILocation(line: 2963, column: 54, scope: !8983)
!8983 = !DILexicalBlockFile(scope: !8979, file: !453, discriminator: 1)
!8984 = !DILocation(line: 2963, column: 40, scope: !8979)
!8985 = !DILocation(line: 2963, column: 9, scope: !1769)
!8986 = !DILocation(line: 2964, column: 25, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8979, file: !453, line: 2963, column: 66)
!8988 = !DILocation(line: 2964, column: 9, scope: !8987)
!8989 = !DILocation(line: 2965, column: 9, scope: !8987)
!8990 = !DILocation(line: 2968, column: 21, scope: !1769)
!8991 = !DILocation(line: 2968, column: 33, scope: !1769)
!8992 = !DILocation(line: 2968, column: 42, scope: !1769)
!8993 = !DILocation(line: 2969, column: 30, scope: !1769)
!8994 = !DILocation(line: 2969, column: 19, scope: !1769)
!8995 = !DILocation(line: 2969, column: 28, scope: !1769)
!8996 = !DILocation(line: 2971, column: 41, scope: !1769)
!8997 = !DILocation(line: 2971, column: 5, scope: !1769)
!8998 = !DILocation(line: 2972, column: 41, scope: !1769)
!8999 = !DILocation(line: 2972, column: 5, scope: !1769)
!9000 = !DILocation(line: 2974, column: 60, scope: !1769)
!9001 = !DILocation(line: 2974, column: 14, scope: !1769)
!9002 = !DILocation(line: 2974, column: 12, scope: !1769)
!9003 = !DILocation(line: 2975, column: 9, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !1769, file: !453, line: 2975, column: 9)
!9005 = !DILocation(line: 2975, column: 16, scope: !9004)
!9006 = !DILocation(line: 2975, column: 9, scope: !1769)
!9007 = !DILocation(line: 2976, column: 25, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !9004, file: !453, line: 2975, column: 23)
!9009 = !DILocation(line: 2976, column: 9, scope: !9008)
!9010 = !DILocation(line: 2977, column: 45, scope: !9008)
!9011 = !DILocation(line: 2977, column: 9, scope: !9008)
!9012 = !DILocation(line: 2978, column: 45, scope: !9008)
!9013 = !DILocation(line: 2978, column: 9, scope: !9008)
!9014 = !DILocation(line: 2979, column: 9, scope: !9008)
!9015 = !DILocation(line: 2982, column: 41, scope: !1769)
!9016 = !DILocation(line: 2982, column: 5, scope: !1769)
!9017 = !DILocation(line: 2983, column: 41, scope: !1769)
!9018 = !DILocation(line: 2983, column: 5, scope: !1769)
!9019 = !DILocation(line: 2985, column: 7, scope: !1785)
!9020 = !DILocation(line: 2985, column: 22, scope: !1785)
!9021 = !DILocation(line: 2985, column: 37, scope: !1785)
!9022 = !DILocation(line: 2985, column: 35, scope: !1785)
!9023 = !DILocation(line: 2986, column: 45, scope: !1785)
!9024 = !DILocation(line: 2986, column: 9, scope: !1785)
!9025 = !DILocation(line: 2987, column: 45, scope: !1785)
!9026 = !DILocation(line: 2987, column: 9, scope: !1785)
!9027 = !DILocation(line: 2988, column: 26, scope: !1785)
!9028 = !DILocation(line: 2988, column: 5, scope: !1785)
!9029 = !DILocation(line: 2988, column: 34, scope: !1769)
!9030 = !DILocation(line: 2990, column: 51, scope: !1769)
!9031 = !DILocation(line: 2991, column: 9, scope: !1769)
!9032 = !DILocation(line: 2991, column: 5, scope: !1769)
!9033 = !DILocation(line: 2994, column: 5, scope: !1769)
!9034 = !DILocation(line: 2994, column: 10, scope: !9035)
!9035 = !DILexicalBlockFile(scope: !1787, file: !453, discriminator: 1)
!9036 = !DILocation(line: 2994, column: 20, scope: !1787)
!9037 = !DILocation(line: 2994, column: 57, scope: !1787)
!9038 = !DILocation(line: 2994, column: 72, scope: !1791)
!9039 = !DILocation(line: 2994, column: 80, scope: !1791)
!9040 = !DILocation(line: 2994, column: 72, scope: !1787)
!9041 = !DILocation(line: 2994, column: 112, scope: !9042)
!9042 = !DILexicalBlockFile(scope: !1790, file: !453, discriminator: 2)
!9043 = !DILocation(line: 2994, column: 122, scope: !1790)
!9044 = !DILocation(line: 2994, column: 136, scope: !1790)
!9045 = !DILocation(line: 2994, column: 141, scope: !9046)
!9046 = !DILexicalBlockFile(scope: !1789, file: !453, discriminator: 4)
!9047 = !DILocation(line: 2994, column: 151, scope: !1789)
!9048 = !DILocation(line: 2994, column: 181, scope: !1789)
!9049 = !DILocation(line: 2994, column: 199, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !1789, file: !453, line: 2994, column: 196)
!9051 = !DILocation(line: 2994, column: 216, scope: !9050)
!9052 = !DILocation(line: 2994, column: 196, scope: !9050)
!9053 = !DILocation(line: 2994, column: 226, scope: !9050)
!9054 = !DILocation(line: 2994, column: 196, scope: !1789)
!9055 = !DILocation(line: 2994, column: 196, scope: !9056)
!9056 = !DILexicalBlockFile(scope: !1789, file: !453, discriminator: 5)
!9057 = !DILocation(line: 2994, column: 257, scope: !9058)
!9058 = !DILexicalBlockFile(scope: !9050, file: !453, discriminator: 6)
!9059 = !DILocation(line: 2994, column: 275, scope: !9050)
!9060 = !DILocation(line: 2994, column: 285, scope: !9050)
!9061 = !DILocation(line: 2994, column: 310, scope: !9050)
!9062 = !DILocation(line: 2994, column: 241, scope: !9050)
!9063 = !DILocation(line: 2994, column: 329, scope: !9064)
!9064 = !DILexicalBlockFile(scope: !1790, file: !453, discriminator: 7)
!9065 = !DILocation(line: 2994, column: 329, scope: !1789)
!9066 = !DILocation(line: 2994, column: 329, scope: !9067)
!9067 = !DILexicalBlockFile(scope: !1789, file: !453, discriminator: 8)
!9068 = !DILocation(line: 2994, column: 342, scope: !9069)
!9069 = !DILexicalBlockFile(scope: !1790, file: !453, discriminator: 9)
!9070 = !DILocation(line: 2994, column: 344, scope: !9071)
!9071 = !DILexicalBlockFile(scope: !9072, file: !453, discriminator: 10)
!9072 = !DILexicalBlockFile(scope: !1769, file: !453, discriminator: 3)
!9073 = !DILocation(line: 2994, column: 344, scope: !1787)
!9074 = !DILocation(line: 2994, column: 344, scope: !9075)
!9075 = !DILexicalBlockFile(scope: !1787, file: !453, discriminator: 11)
!9076 = !DILocation(line: 2995, column: 23, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !1769, file: !453, line: 2995, column: 9)
!9078 = !DILocation(line: 2995, column: 9, scope: !9077)
!9079 = !DILocation(line: 2995, column: 9, scope: !1769)
!9080 = !DILocation(line: 2996, column: 42, scope: !9077)
!9081 = !DILocation(line: 2996, column: 9, scope: !9077)
!9082 = !DILocation(line: 2997, column: 23, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !1769, file: !453, line: 2997, column: 9)
!9084 = !DILocation(line: 2997, column: 9, scope: !9083)
!9085 = !DILocation(line: 2997, column: 9, scope: !1769)
!9086 = !DILocation(line: 2998, column: 42, scope: !9083)
!9087 = !DILocation(line: 2998, column: 9, scope: !9083)
!9088 = !DILocation(line: 2999, column: 12, scope: !1769)
!9089 = !DILocation(line: 3000, column: 1, scope: !1769)
!9090 = !DILocation(line: 2999, column: 5, scope: !1769)
!9091 = !DILocation(line: 174, column: 21, scope: !659)
!9092 = !DILocation(line: 176, column: 5, scope: !659)
!9093 = !DILocation(line: 176, column: 16, scope: !659)
!9094 = !DILocation(line: 176, column: 25, scope: !659)
!9095 = !DILocation(line: 177, column: 5, scope: !659)
!9096 = !DILocation(line: 177, column: 9, scope: !659)
!9097 = !DILocation(line: 178, column: 5, scope: !659)
!9098 = !DILocation(line: 178, column: 15, scope: !659)
!9099 = !DILocation(line: 178, column: 22, scope: !659)
!9100 = !DILocation(line: 179, column: 5, scope: !659)
!9101 = !DILocation(line: 179, column: 15, scope: !659)
!9102 = !DILocation(line: 179, column: 19, scope: !659)
!9103 = !DILocation(line: 181, column: 9, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !659, file: !453, line: 181, column: 9)
!9105 = !DILocation(line: 181, column: 14, scope: !9104)
!9106 = !DILocation(line: 181, column: 9, scope: !659)
!9107 = !DILocation(line: 182, column: 9, scope: !9104)
!9108 = !DILocation(line: 184, column: 12, scope: !676)
!9109 = !DILocation(line: 184, column: 10, scope: !676)
!9110 = !DILocation(line: 184, column: 17, scope: !9111)
!9111 = !DILexicalBlockFile(scope: !9112, file: !453, discriminator: 2)
!9112 = !DILexicalBlockFile(scope: !675, file: !453, discriminator: 1)
!9113 = !DILocation(line: 184, column: 21, scope: !675)
!9114 = !DILocation(line: 184, column: 19, scope: !675)
!9115 = !DILocation(line: 184, column: 5, scope: !676)
!9116 = !DILocation(line: 185, column: 29, scope: !674)
!9117 = !DILocation(line: 185, column: 13, scope: !674)
!9118 = !DILocation(line: 185, column: 11, scope: !674)
!9119 = !DILocation(line: 186, column: 13, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !674, file: !453, line: 186, column: 13)
!9121 = !DILocation(line: 186, column: 15, scope: !9120)
!9122 = !DILocation(line: 186, column: 13, scope: !674)
!9123 = !DILocation(line: 187, column: 13, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9120, file: !453, line: 186, column: 30)
!9125 = !DILocation(line: 189, column: 28, scope: !673)
!9126 = !DILocation(line: 189, column: 34, scope: !673)
!9127 = !DILocation(line: 189, column: 37, scope: !673)
!9128 = !DILocation(line: 189, column: 13, scope: !673)
!9129 = !DILocation(line: 189, column: 40, scope: !673)
!9130 = !DILocation(line: 189, column: 13, scope: !674)
!9131 = !DILocation(line: 190, column: 13, scope: !672)
!9132 = !DILocation(line: 190, column: 18, scope: !9133)
!9133 = !DILexicalBlockFile(scope: !671, file: !453, discriminator: 1)
!9134 = !DILocation(line: 190, column: 28, scope: !671)
!9135 = !DILocation(line: 190, column: 58, scope: !671)
!9136 = !DILocation(line: 190, column: 70, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !671, file: !453, line: 190, column: 67)
!9138 = !DILocation(line: 190, column: 87, scope: !9137)
!9139 = !DILocation(line: 190, column: 67, scope: !9137)
!9140 = !DILocation(line: 190, column: 97, scope: !9137)
!9141 = !DILocation(line: 190, column: 67, scope: !671)
!9142 = !DILocation(line: 190, column: 67, scope: !9143)
!9143 = !DILexicalBlockFile(scope: !671, file: !453, discriminator: 2)
!9144 = !DILocation(line: 190, column: 128, scope: !9145)
!9145 = !DILexicalBlockFile(scope: !9137, file: !453, discriminator: 3)
!9146 = !DILocation(line: 190, column: 146, scope: !9137)
!9147 = !DILocation(line: 190, column: 156, scope: !9137)
!9148 = !DILocation(line: 190, column: 181, scope: !9137)
!9149 = !DILocation(line: 190, column: 112, scope: !9137)
!9150 = !DILocation(line: 190, column: 200, scope: !9151)
!9151 = !DILexicalBlockFile(scope: !672, file: !453, discriminator: 4)
!9152 = !DILocation(line: 190, column: 200, scope: !671)
!9153 = !DILocation(line: 190, column: 200, scope: !9154)
!9154 = !DILexicalBlockFile(scope: !671, file: !453, discriminator: 5)
!9155 = !DILocation(line: 191, column: 13, scope: !672)
!9156 = !DILocation(line: 193, column: 9, scope: !674)
!9157 = !DILocation(line: 193, column: 14, scope: !9158)
!9158 = !DILexicalBlockFile(scope: !678, file: !453, discriminator: 1)
!9159 = !DILocation(line: 193, column: 24, scope: !678)
!9160 = !DILocation(line: 193, column: 54, scope: !678)
!9161 = !DILocation(line: 193, column: 66, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !678, file: !453, line: 193, column: 63)
!9163 = !DILocation(line: 193, column: 83, scope: !9162)
!9164 = !DILocation(line: 193, column: 63, scope: !9162)
!9165 = !DILocation(line: 193, column: 93, scope: !9162)
!9166 = !DILocation(line: 193, column: 63, scope: !678)
!9167 = !DILocation(line: 193, column: 63, scope: !9168)
!9168 = !DILexicalBlockFile(scope: !678, file: !453, discriminator: 2)
!9169 = !DILocation(line: 193, column: 124, scope: !9170)
!9170 = !DILexicalBlockFile(scope: !9162, file: !453, discriminator: 3)
!9171 = !DILocation(line: 193, column: 142, scope: !9162)
!9172 = !DILocation(line: 193, column: 152, scope: !9162)
!9173 = !DILocation(line: 193, column: 177, scope: !9162)
!9174 = !DILocation(line: 193, column: 108, scope: !9162)
!9175 = !DILocation(line: 193, column: 196, scope: !9176)
!9176 = !DILexicalBlockFile(scope: !674, file: !453, discriminator: 4)
!9177 = !DILocation(line: 193, column: 196, scope: !678)
!9178 = !DILocation(line: 193, column: 196, scope: !9179)
!9179 = !DILexicalBlockFile(scope: !678, file: !453, discriminator: 5)
!9180 = !DILocation(line: 194, column: 5, scope: !674)
!9181 = !DILocation(line: 184, column: 29, scope: !675)
!9182 = !DILocation(line: 184, column: 5, scope: !675)
!9183 = !DILocation(line: 196, column: 5, scope: !659)
!9184 = !DILocation(line: 196, column: 24, scope: !9185)
!9185 = !DILexicalBlockFile(scope: !9186, file: !453, discriminator: 2)
!9186 = !DILexicalBlockFile(scope: !659, file: !453, discriminator: 1)
!9187 = !DILocation(line: 196, column: 12, scope: !659)
!9188 = !DILocation(line: 197, column: 9, scope: !680)
!9189 = !DILocation(line: 197, column: 19, scope: !680)
!9190 = !DILocation(line: 198, column: 19, scope: !680)
!9191 = !DILocation(line: 200, column: 27, scope: !680)
!9192 = !DILocation(line: 200, column: 13, scope: !680)
!9193 = !DILocation(line: 200, column: 30, scope: !680)
!9194 = !DILocation(line: 200, column: 11, scope: !680)
!9195 = !DILocation(line: 201, column: 29, scope: !680)
!9196 = !DILocation(line: 201, column: 13, scope: !680)
!9197 = !DILocation(line: 201, column: 11, scope: !680)
!9198 = !DILocation(line: 202, column: 13, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !680, file: !453, line: 202, column: 13)
!9200 = !DILocation(line: 202, column: 15, scope: !9199)
!9201 = !DILocation(line: 202, column: 13, scope: !680)
!9202 = !DILocation(line: 203, column: 13, scope: !9199)
!9203 = !DILocation(line: 204, column: 28, scope: !684)
!9204 = !DILocation(line: 204, column: 34, scope: !684)
!9205 = !DILocation(line: 204, column: 37, scope: !684)
!9206 = !DILocation(line: 204, column: 13, scope: !684)
!9207 = !DILocation(line: 204, column: 40, scope: !684)
!9208 = !DILocation(line: 204, column: 13, scope: !680)
!9209 = !DILocation(line: 205, column: 13, scope: !683)
!9210 = !DILocation(line: 205, column: 18, scope: !9211)
!9211 = !DILexicalBlockFile(scope: !682, file: !453, discriminator: 1)
!9212 = !DILocation(line: 205, column: 28, scope: !682)
!9213 = !DILocation(line: 205, column: 58, scope: !682)
!9214 = !DILocation(line: 205, column: 70, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !682, file: !453, line: 205, column: 67)
!9216 = !DILocation(line: 205, column: 87, scope: !9215)
!9217 = !DILocation(line: 205, column: 67, scope: !9215)
!9218 = !DILocation(line: 205, column: 97, scope: !9215)
!9219 = !DILocation(line: 205, column: 67, scope: !682)
!9220 = !DILocation(line: 205, column: 67, scope: !9221)
!9221 = !DILexicalBlockFile(scope: !682, file: !453, discriminator: 2)
!9222 = !DILocation(line: 205, column: 128, scope: !9223)
!9223 = !DILexicalBlockFile(scope: !9215, file: !453, discriminator: 3)
!9224 = !DILocation(line: 205, column: 146, scope: !9215)
!9225 = !DILocation(line: 205, column: 156, scope: !9215)
!9226 = !DILocation(line: 205, column: 181, scope: !9215)
!9227 = !DILocation(line: 205, column: 112, scope: !9215)
!9228 = !DILocation(line: 205, column: 200, scope: !9229)
!9229 = !DILexicalBlockFile(scope: !683, file: !453, discriminator: 4)
!9230 = !DILocation(line: 205, column: 200, scope: !682)
!9231 = !DILocation(line: 205, column: 200, scope: !9232)
!9232 = !DILexicalBlockFile(scope: !682, file: !453, discriminator: 5)
!9233 = !DILocation(line: 206, column: 13, scope: !683)
!9234 = !DILocation(line: 208, column: 9, scope: !680)
!9235 = !DILocation(line: 208, column: 14, scope: !9236)
!9236 = !DILexicalBlockFile(scope: !686, file: !453, discriminator: 1)
!9237 = !DILocation(line: 208, column: 24, scope: !686)
!9238 = !DILocation(line: 208, column: 54, scope: !686)
!9239 = !DILocation(line: 208, column: 66, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !686, file: !453, line: 208, column: 63)
!9241 = !DILocation(line: 208, column: 83, scope: !9240)
!9242 = !DILocation(line: 208, column: 63, scope: !9240)
!9243 = !DILocation(line: 208, column: 93, scope: !9240)
!9244 = !DILocation(line: 208, column: 63, scope: !686)
!9245 = !DILocation(line: 208, column: 63, scope: !9246)
!9246 = !DILexicalBlockFile(scope: !686, file: !453, discriminator: 2)
!9247 = !DILocation(line: 208, column: 124, scope: !9248)
!9248 = !DILexicalBlockFile(scope: !9240, file: !453, discriminator: 3)
!9249 = !DILocation(line: 208, column: 142, scope: !9240)
!9250 = !DILocation(line: 208, column: 152, scope: !9240)
!9251 = !DILocation(line: 208, column: 177, scope: !9240)
!9252 = !DILocation(line: 208, column: 108, scope: !9240)
!9253 = !DILocation(line: 208, column: 196, scope: !9254)
!9254 = !DILexicalBlockFile(scope: !680, file: !453, discriminator: 4)
!9255 = !DILocation(line: 208, column: 196, scope: !686)
!9256 = !DILocation(line: 208, column: 196, scope: !9257)
!9257 = !DILexicalBlockFile(scope: !686, file: !453, discriminator: 5)
!9258 = !DILocation(line: 209, column: 5, scope: !659)
!9259 = !DILocation(line: 209, column: 5, scope: !9186)
!9260 = !DILocation(line: 211, column: 5, scope: !659)
!9261 = !DILocation(line: 211, column: 10, scope: !9262)
!9262 = !DILexicalBlockFile(scope: !688, file: !453, discriminator: 1)
!9263 = !DILocation(line: 211, column: 20, scope: !688)
!9264 = !DILocation(line: 211, column: 50, scope: !688)
!9265 = !DILocation(line: 211, column: 65, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !688, file: !453, line: 211, column: 62)
!9267 = !DILocation(line: 211, column: 82, scope: !9266)
!9268 = !DILocation(line: 211, column: 62, scope: !9266)
!9269 = !DILocation(line: 211, column: 92, scope: !9266)
!9270 = !DILocation(line: 211, column: 62, scope: !688)
!9271 = !DILocation(line: 211, column: 62, scope: !9272)
!9272 = !DILexicalBlockFile(scope: !688, file: !453, discriminator: 2)
!9273 = !DILocation(line: 211, column: 123, scope: !9274)
!9274 = !DILexicalBlockFile(scope: !9266, file: !453, discriminator: 3)
!9275 = !DILocation(line: 211, column: 141, scope: !9266)
!9276 = !DILocation(line: 211, column: 151, scope: !9266)
!9277 = !DILocation(line: 211, column: 176, scope: !9266)
!9278 = !DILocation(line: 211, column: 107, scope: !9266)
!9279 = !DILocation(line: 211, column: 195, scope: !9280)
!9280 = !DILexicalBlockFile(scope: !659, file: !453, discriminator: 4)
!9281 = !DILocation(line: 211, column: 195, scope: !688)
!9282 = !DILocation(line: 211, column: 195, scope: !9283)
!9283 = !DILexicalBlockFile(scope: !688, file: !453, discriminator: 5)
!9284 = !DILocation(line: 213, column: 9, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !659, file: !453, line: 213, column: 9)
!9286 = !DILocation(line: 213, column: 23, scope: !9285)
!9287 = !DILocation(line: 213, column: 20, scope: !9285)
!9288 = !DILocation(line: 213, column: 9, scope: !659)
!9289 = !DILocation(line: 215, column: 13, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9285, file: !453, line: 213, column: 30)
!9291 = !DILocation(line: 214, column: 9, scope: !9290)
!9292 = !DILocation(line: 217, column: 9, scope: !9290)
!9293 = !DILocation(line: 219, column: 9, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9285, file: !453, line: 218, column: 12)
!9295 = !DILocation(line: 221, column: 1, scope: !659)
!9296 = !DILocation(line: 11, column: 31, scope: !716)
!9297 = !DILocation(line: 13, column: 5, scope: !716)
!9298 = !DILocation(line: 13, column: 15, scope: !716)
!9299 = !DILocation(line: 14, column: 5, scope: !716)
!9300 = !DILocation(line: 14, column: 19, scope: !716)
!9301 = !DILocation(line: 15, column: 5, scope: !716)
!9302 = !DILocation(line: 15, column: 15, scope: !716)
!9303 = !DILocation(line: 16, column: 5, scope: !716)
!9304 = !DILocation(line: 16, column: 9, scope: !716)
!9305 = !DILocation(line: 25, column: 10, scope: !716)
!9306 = !DILocation(line: 26, column: 12, scope: !733)
!9307 = !DILocation(line: 26, column: 10, scope: !733)
!9308 = !DILocation(line: 27, column: 10, scope: !732)
!9309 = !DILocation(line: 27, column: 12, scope: !732)
!9310 = !DILocation(line: 26, column: 5, scope: !733)
!9311 = !DILocation(line: 30, column: 9, scope: !731)
!9312 = !DILocation(line: 30, column: 13, scope: !731)
!9313 = !DILocation(line: 31, column: 16, scope: !737)
!9314 = !DILocation(line: 31, column: 14, scope: !737)
!9315 = !DILocation(line: 31, column: 21, scope: !9316)
!9316 = !DILexicalBlockFile(scope: !9317, file: !717, discriminator: 2)
!9317 = !DILexicalBlockFile(scope: !736, file: !717, discriminator: 1)
!9318 = !DILocation(line: 31, column: 23, scope: !736)
!9319 = !DILocation(line: 31, column: 9, scope: !737)
!9320 = !DILocation(line: 32, column: 13, scope: !735)
!9321 = !DILocation(line: 32, column: 18, scope: !735)
!9322 = !DILocation(line: 32, column: 22, scope: !735)
!9323 = !DILocation(line: 33, column: 13, scope: !735)
!9324 = !DILocation(line: 33, column: 27, scope: !735)
!9325 = !DILocation(line: 33, column: 32, scope: !735)
!9326 = !DILocation(line: 36, column: 19, scope: !735)
!9327 = !DILocation(line: 36, column: 21, scope: !735)
!9328 = !DILocation(line: 36, column: 27, scope: !9329)
!9329 = !DILexicalBlockFile(scope: !735, file: !717, discriminator: 1)
!9330 = !DILocation(line: 36, column: 39, scope: !9331)
!9331 = !DILexicalBlockFile(scope: !735, file: !717, discriminator: 2)
!9332 = !DILocation(line: 36, column: 37, scope: !735)
!9333 = !DILocation(line: 36, column: 17, scope: !9334)
!9334 = !DILexicalBlockFile(scope: !9335, file: !717, discriminator: 4)
!9335 = !DILexicalBlockFile(scope: !735, file: !717, discriminator: 3)
!9336 = !DILocation(line: 42, column: 42, scope: !735)
!9337 = !DILocation(line: 42, column: 44, scope: !735)
!9338 = !DILocation(line: 42, column: 48, scope: !735)
!9339 = !DILocation(line: 42, column: 35, scope: !735)
!9340 = !DILocation(line: 42, column: 17, scope: !735)
!9341 = !DILocation(line: 44, column: 48, scope: !735)
!9342 = !DILocation(line: 44, column: 24, scope: !735)
!9343 = !DILocation(line: 44, column: 22, scope: !735)
!9344 = !DILocation(line: 45, column: 17, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !735, file: !717, line: 45, column: 17)
!9346 = !DILocation(line: 45, column: 26, scope: !9345)
!9347 = !DILocation(line: 45, column: 17, scope: !735)
!9348 = !DILocation(line: 46, column: 24, scope: !9345)
!9349 = !DILocation(line: 46, column: 17, scope: !9345)
!9350 = !DILocation(line: 49, column: 42, scope: !735)
!9351 = !DILocation(line: 49, column: 20, scope: !735)
!9352 = !DILocation(line: 49, column: 18, scope: !735)
!9353 = !DILocation(line: 50, column: 17, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !735, file: !717, line: 50, column: 17)
!9355 = !DILocation(line: 50, column: 22, scope: !9354)
!9356 = !DILocation(line: 50, column: 43, scope: !9354)
!9357 = !DILocation(line: 50, column: 46, scope: !9358)
!9358 = !DILexicalBlockFile(scope: !9354, file: !717, discriminator: 1)
!9359 = !DILocation(line: 50, column: 17, scope: !735)
!9360 = !DILocation(line: 51, column: 24, scope: !9354)
!9361 = !DILocation(line: 51, column: 17, scope: !9354)
!9362 = !DILocation(line: 53, column: 17, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !735, file: !717, line: 53, column: 17)
!9364 = !DILocation(line: 53, column: 25, scope: !9363)
!9365 = !DILocation(line: 53, column: 22, scope: !9363)
!9366 = !DILocation(line: 53, column: 17, scope: !735)
!9367 = !DILocation(line: 54, column: 24, scope: !9363)
!9368 = !DILocation(line: 54, column: 17, scope: !9363)
!9369 = !DILocation(line: 56, column: 13, scope: !735)
!9370 = !DILocation(line: 56, column: 18, scope: !9371)
!9371 = !DILexicalBlockFile(scope: !742, file: !717, discriminator: 1)
!9372 = !DILocation(line: 56, column: 28, scope: !742)
!9373 = !DILocation(line: 56, column: 58, scope: !742)
!9374 = !DILocation(line: 56, column: 77, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !742, file: !717, line: 56, column: 74)
!9376 = !DILocation(line: 56, column: 94, scope: !9375)
!9377 = !DILocation(line: 56, column: 74, scope: !9375)
!9378 = !DILocation(line: 56, column: 104, scope: !9375)
!9379 = !DILocation(line: 56, column: 74, scope: !742)
!9380 = !DILocation(line: 56, column: 74, scope: !9381)
!9381 = !DILexicalBlockFile(scope: !742, file: !717, discriminator: 2)
!9382 = !DILocation(line: 56, column: 135, scope: !9383)
!9383 = !DILexicalBlockFile(scope: !9375, file: !717, discriminator: 3)
!9384 = !DILocation(line: 56, column: 153, scope: !9375)
!9385 = !DILocation(line: 56, column: 163, scope: !9375)
!9386 = !DILocation(line: 56, column: 188, scope: !9375)
!9387 = !DILocation(line: 56, column: 119, scope: !9375)
!9388 = !DILocation(line: 56, column: 207, scope: !9389)
!9389 = !DILexicalBlockFile(scope: !735, file: !717, discriminator: 4)
!9390 = !DILocation(line: 56, column: 207, scope: !742)
!9391 = !DILocation(line: 56, column: 207, scope: !9392)
!9392 = !DILexicalBlockFile(scope: !742, file: !717, discriminator: 5)
!9393 = !DILocation(line: 56, column: 231, scope: !9394)
!9394 = !DILexicalBlockFile(scope: !735, file: !717, discriminator: 6)
!9395 = !DILocation(line: 58, column: 24, scope: !735)
!9396 = !DILocation(line: 58, column: 16, scope: !735)
!9397 = !DILocation(line: 59, column: 40, scope: !735)
!9398 = !DILocation(line: 59, column: 24, scope: !735)
!9399 = !DILocation(line: 59, column: 22, scope: !735)
!9400 = !DILocation(line: 60, column: 17, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !735, file: !717, line: 60, column: 17)
!9402 = !DILocation(line: 60, column: 26, scope: !9401)
!9403 = !DILocation(line: 60, column: 17, scope: !735)
!9404 = !DILocation(line: 61, column: 24, scope: !9401)
!9405 = !DILocation(line: 61, column: 17, scope: !9401)
!9406 = !DILocation(line: 64, column: 33, scope: !735)
!9407 = !DILocation(line: 64, column: 19, scope: !735)
!9408 = !DILocation(line: 64, column: 17, scope: !735)
!9409 = !DILocation(line: 65, column: 17, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !735, file: !717, line: 65, column: 17)
!9411 = !DILocation(line: 65, column: 21, scope: !9410)
!9412 = !DILocation(line: 65, column: 33, scope: !9410)
!9413 = !DILocation(line: 65, column: 36, scope: !9414)
!9414 = !DILexicalBlockFile(scope: !9410, file: !717, discriminator: 1)
!9415 = !DILocation(line: 65, column: 17, scope: !735)
!9416 = !DILocation(line: 66, column: 24, scope: !9410)
!9417 = !DILocation(line: 66, column: 17, scope: !9410)
!9418 = !DILocation(line: 68, column: 17, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !735, file: !717, line: 68, column: 17)
!9420 = !DILocation(line: 68, column: 24, scope: !9419)
!9421 = !DILocation(line: 68, column: 21, scope: !9419)
!9422 = !DILocation(line: 68, column: 17, scope: !735)
!9423 = !DILocation(line: 69, column: 24, scope: !9419)
!9424 = !DILocation(line: 69, column: 17, scope: !9419)
!9425 = !DILocation(line: 71, column: 13, scope: !735)
!9426 = !DILocation(line: 71, column: 18, scope: !9427)
!9427 = !DILexicalBlockFile(scope: !744, file: !717, discriminator: 1)
!9428 = !DILocation(line: 71, column: 28, scope: !744)
!9429 = !DILocation(line: 71, column: 58, scope: !744)
!9430 = !DILocation(line: 71, column: 77, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !744, file: !717, line: 71, column: 74)
!9432 = !DILocation(line: 71, column: 94, scope: !9431)
!9433 = !DILocation(line: 71, column: 74, scope: !9431)
!9434 = !DILocation(line: 71, column: 104, scope: !9431)
!9435 = !DILocation(line: 71, column: 74, scope: !744)
!9436 = !DILocation(line: 71, column: 74, scope: !9437)
!9437 = !DILexicalBlockFile(scope: !744, file: !717, discriminator: 2)
!9438 = !DILocation(line: 71, column: 135, scope: !9439)
!9439 = !DILexicalBlockFile(scope: !9431, file: !717, discriminator: 3)
!9440 = !DILocation(line: 71, column: 153, scope: !9431)
!9441 = !DILocation(line: 71, column: 163, scope: !9431)
!9442 = !DILocation(line: 71, column: 188, scope: !9431)
!9443 = !DILocation(line: 71, column: 119, scope: !9431)
!9444 = !DILocation(line: 71, column: 207, scope: !9389)
!9445 = !DILocation(line: 71, column: 207, scope: !744)
!9446 = !DILocation(line: 71, column: 207, scope: !9447)
!9447 = !DILexicalBlockFile(scope: !744, file: !717, discriminator: 5)
!9448 = !DILocation(line: 71, column: 231, scope: !9394)
!9449 = !DILocation(line: 72, column: 9, scope: !736)
!9450 = !DILocation(line: 72, column: 9, scope: !9317)
!9451 = !DILocation(line: 72, column: 9, scope: !735)
!9452 = !DILocation(line: 31, column: 28, scope: !736)
!9453 = !DILocation(line: 31, column: 9, scope: !736)
!9454 = !DILocation(line: 73, column: 5, scope: !732)
!9455 = !DILocation(line: 73, column: 5, scope: !9456)
!9456 = !DILexicalBlockFile(scope: !732, file: !717, discriminator: 1)
!9457 = !DILocation(line: 73, column: 5, scope: !731)
!9458 = !DILocation(line: 28, column: 10, scope: !732)
!9459 = !DILocation(line: 28, column: 20, scope: !732)
!9460 = !DILocation(line: 26, column: 5, scope: !732)
!9461 = !DILocation(line: 80, column: 9, scope: !746)
!9462 = !DILocation(line: 80, column: 19, scope: !746)
!9463 = !DILocation(line: 80, column: 25, scope: !746)
!9464 = !DILocation(line: 80, column: 29, scope: !746)
!9465 = !DILocation(line: 81, column: 9, scope: !746)
!9466 = !DILocation(line: 81, column: 14, scope: !746)
!9467 = !DILocation(line: 82, column: 9, scope: !746)
!9468 = !DILocation(line: 82, column: 23, scope: !746)
!9469 = !DILocation(line: 84, column: 15, scope: !746)
!9470 = !DILocation(line: 84, column: 13, scope: !746)
!9471 = !DILocation(line: 85, column: 13, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !746, file: !717, line: 85, column: 13)
!9473 = !DILocation(line: 85, column: 17, scope: !9472)
!9474 = !DILocation(line: 85, column: 13, scope: !746)
!9475 = !DILocation(line: 86, column: 20, scope: !9472)
!9476 = !DILocation(line: 86, column: 13, scope: !9472)
!9477 = !DILocation(line: 90, column: 31, scope: !746)
!9478 = !DILocation(line: 90, column: 13, scope: !746)
!9479 = !DILocation(line: 90, column: 11, scope: !746)
!9480 = !DILocation(line: 91, column: 13, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !746, file: !717, line: 91, column: 13)
!9482 = !DILocation(line: 91, column: 15, scope: !9481)
!9483 = !DILocation(line: 91, column: 13, scope: !746)
!9484 = !DILocation(line: 92, column: 20, scope: !9481)
!9485 = !DILocation(line: 92, column: 13, scope: !9481)
!9486 = !DILocation(line: 95, column: 38, scope: !746)
!9487 = !DILocation(line: 95, column: 16, scope: !746)
!9488 = !DILocation(line: 95, column: 14, scope: !746)
!9489 = !DILocation(line: 96, column: 13, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !746, file: !717, line: 96, column: 13)
!9491 = !DILocation(line: 96, column: 18, scope: !9490)
!9492 = !DILocation(line: 96, column: 39, scope: !9490)
!9493 = !DILocation(line: 96, column: 43, scope: !9494)
!9494 = !DILexicalBlockFile(scope: !9490, file: !717, discriminator: 1)
!9495 = !DILocation(line: 96, column: 13, scope: !746)
!9496 = !DILocation(line: 97, column: 20, scope: !9490)
!9497 = !DILocation(line: 97, column: 13, scope: !9490)
!9498 = !DILocation(line: 99, column: 37, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !746, file: !717, line: 99, column: 13)
!9500 = !DILocation(line: 99, column: 14, scope: !9499)
!9501 = !DILocation(line: 99, column: 13, scope: !746)
!9502 = !DILocation(line: 100, column: 20, scope: !9499)
!9503 = !DILocation(line: 100, column: 13, scope: !9499)
!9504 = !DILocation(line: 103, column: 9, scope: !746)
!9505 = !DILocation(line: 104, column: 9, scope: !746)
!9506 = !DILocation(line: 104, column: 14, scope: !9507)
!9507 = !DILexicalBlockFile(scope: !752, file: !717, discriminator: 1)
!9508 = !DILocation(line: 104, column: 24, scope: !752)
!9509 = !DILocation(line: 104, column: 54, scope: !752)
!9510 = !DILocation(line: 104, column: 66, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !752, file: !717, line: 104, column: 63)
!9512 = !DILocation(line: 104, column: 83, scope: !9511)
!9513 = !DILocation(line: 104, column: 63, scope: !9511)
!9514 = !DILocation(line: 104, column: 93, scope: !9511)
!9515 = !DILocation(line: 104, column: 63, scope: !752)
!9516 = !DILocation(line: 104, column: 63, scope: !9517)
!9517 = !DILexicalBlockFile(scope: !752, file: !717, discriminator: 2)
!9518 = !DILocation(line: 104, column: 124, scope: !9519)
!9519 = !DILexicalBlockFile(scope: !9511, file: !717, discriminator: 3)
!9520 = !DILocation(line: 104, column: 142, scope: !9511)
!9521 = !DILocation(line: 104, column: 152, scope: !9511)
!9522 = !DILocation(line: 104, column: 177, scope: !9511)
!9523 = !DILocation(line: 104, column: 108, scope: !9511)
!9524 = !DILocation(line: 104, column: 196, scope: !9525)
!9525 = !DILexicalBlockFile(scope: !746, file: !717, discriminator: 4)
!9526 = !DILocation(line: 104, column: 196, scope: !752)
!9527 = !DILocation(line: 104, column: 196, scope: !9528)
!9528 = !DILexicalBlockFile(scope: !752, file: !717, discriminator: 5)
!9529 = !DILocation(line: 104, column: 213, scope: !9530)
!9530 = !DILexicalBlockFile(scope: !746, file: !717, discriminator: 6)
!9531 = !DILocation(line: 107, column: 13, scope: !746)
!9532 = !DILocation(line: 107, column: 11, scope: !746)
!9533 = !DILocation(line: 108, column: 13, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !746, file: !717, line: 108, column: 13)
!9535 = !DILocation(line: 108, column: 15, scope: !9534)
!9536 = !DILocation(line: 108, column: 13, scope: !746)
!9537 = !DILocation(line: 109, column: 20, scope: !9534)
!9538 = !DILocation(line: 109, column: 13, scope: !9534)
!9539 = !DILocation(line: 112, column: 29, scope: !746)
!9540 = !DILocation(line: 112, column: 34, scope: !746)
!9541 = !DILocation(line: 112, column: 13, scope: !746)
!9542 = !DILocation(line: 112, column: 11, scope: !746)
!9543 = !DILocation(line: 113, column: 9, scope: !746)
!9544 = !DILocation(line: 113, column: 14, scope: !9545)
!9545 = !DILexicalBlockFile(scope: !754, file: !717, discriminator: 1)
!9546 = !DILocation(line: 113, column: 24, scope: !754)
!9547 = !DILocation(line: 113, column: 54, scope: !754)
!9548 = !DILocation(line: 113, column: 66, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !754, file: !717, line: 113, column: 63)
!9550 = !DILocation(line: 113, column: 83, scope: !9549)
!9551 = !DILocation(line: 113, column: 63, scope: !9549)
!9552 = !DILocation(line: 113, column: 93, scope: !9549)
!9553 = !DILocation(line: 113, column: 63, scope: !754)
!9554 = !DILocation(line: 113, column: 63, scope: !9555)
!9555 = !DILexicalBlockFile(scope: !754, file: !717, discriminator: 2)
!9556 = !DILocation(line: 113, column: 124, scope: !9557)
!9557 = !DILexicalBlockFile(scope: !9549, file: !717, discriminator: 3)
!9558 = !DILocation(line: 113, column: 142, scope: !9549)
!9559 = !DILocation(line: 113, column: 152, scope: !9549)
!9560 = !DILocation(line: 113, column: 177, scope: !9549)
!9561 = !DILocation(line: 113, column: 108, scope: !9549)
!9562 = !DILocation(line: 113, column: 196, scope: !9525)
!9563 = !DILocation(line: 113, column: 196, scope: !754)
!9564 = !DILocation(line: 113, column: 196, scope: !9565)
!9565 = !DILexicalBlockFile(scope: !754, file: !717, discriminator: 5)
!9566 = !DILocation(line: 113, column: 213, scope: !9530)
!9567 = !DILocation(line: 114, column: 13, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !746, file: !717, line: 114, column: 13)
!9569 = !DILocation(line: 114, column: 15, scope: !9568)
!9570 = !DILocation(line: 114, column: 13, scope: !746)
!9571 = !DILocation(line: 115, column: 20, scope: !9568)
!9572 = !DILocation(line: 115, column: 13, scope: !9568)
!9573 = !DILocation(line: 118, column: 38, scope: !746)
!9574 = !DILocation(line: 118, column: 16, scope: !746)
!9575 = !DILocation(line: 118, column: 14, scope: !746)
!9576 = !DILocation(line: 119, column: 13, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !746, file: !717, line: 119, column: 13)
!9578 = !DILocation(line: 119, column: 18, scope: !9577)
!9579 = !DILocation(line: 119, column: 39, scope: !9577)
!9580 = !DILocation(line: 119, column: 43, scope: !9581)
!9581 = !DILexicalBlockFile(scope: !9577, file: !717, discriminator: 1)
!9582 = !DILocation(line: 119, column: 13, scope: !746)
!9583 = !DILocation(line: 120, column: 20, scope: !9577)
!9584 = !DILocation(line: 120, column: 13, scope: !9577)
!9585 = !DILocation(line: 123, column: 37, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !746, file: !717, line: 123, column: 13)
!9587 = !DILocation(line: 123, column: 14, scope: !9586)
!9588 = !DILocation(line: 123, column: 13, scope: !746)
!9589 = !DILocation(line: 124, column: 20, scope: !9586)
!9590 = !DILocation(line: 124, column: 13, scope: !9586)
!9591 = !DILocation(line: 127, column: 9, scope: !746)
!9592 = !DILocation(line: 131, column: 29, scope: !746)
!9593 = !DILocation(line: 131, column: 32, scope: !746)
!9594 = !DILocation(line: 131, column: 13, scope: !746)
!9595 = !DILocation(line: 131, column: 11, scope: !746)
!9596 = !DILocation(line: 132, column: 9, scope: !746)
!9597 = !DILocation(line: 132, column: 14, scope: !9598)
!9598 = !DILexicalBlockFile(scope: !756, file: !717, discriminator: 1)
!9599 = !DILocation(line: 132, column: 24, scope: !756)
!9600 = !DILocation(line: 132, column: 54, scope: !756)
!9601 = !DILocation(line: 132, column: 66, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !756, file: !717, line: 132, column: 63)
!9603 = !DILocation(line: 132, column: 83, scope: !9602)
!9604 = !DILocation(line: 132, column: 63, scope: !9602)
!9605 = !DILocation(line: 132, column: 93, scope: !9602)
!9606 = !DILocation(line: 132, column: 63, scope: !756)
!9607 = !DILocation(line: 132, column: 63, scope: !9608)
!9608 = !DILexicalBlockFile(scope: !756, file: !717, discriminator: 2)
!9609 = !DILocation(line: 132, column: 124, scope: !9610)
!9610 = !DILexicalBlockFile(scope: !9602, file: !717, discriminator: 3)
!9611 = !DILocation(line: 132, column: 142, scope: !9602)
!9612 = !DILocation(line: 132, column: 152, scope: !9602)
!9613 = !DILocation(line: 132, column: 177, scope: !9602)
!9614 = !DILocation(line: 132, column: 108, scope: !9602)
!9615 = !DILocation(line: 132, column: 196, scope: !9525)
!9616 = !DILocation(line: 132, column: 196, scope: !756)
!9617 = !DILocation(line: 132, column: 196, scope: !9618)
!9618 = !DILexicalBlockFile(scope: !756, file: !717, discriminator: 5)
!9619 = !DILocation(line: 132, column: 213, scope: !9530)
!9620 = !DILocation(line: 133, column: 13, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !746, file: !717, line: 133, column: 13)
!9622 = !DILocation(line: 133, column: 15, scope: !9621)
!9623 = !DILocation(line: 133, column: 13, scope: !746)
!9624 = !DILocation(line: 134, column: 20, scope: !9621)
!9625 = !DILocation(line: 134, column: 13, scope: !9621)
!9626 = !DILocation(line: 137, column: 29, scope: !746)
!9627 = !DILocation(line: 137, column: 15, scope: !746)
!9628 = !DILocation(line: 137, column: 13, scope: !746)
!9629 = !DILocation(line: 138, column: 13, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !746, file: !717, line: 138, column: 13)
!9631 = !DILocation(line: 138, column: 17, scope: !9630)
!9632 = !DILocation(line: 138, column: 29, scope: !9630)
!9633 = !DILocation(line: 138, column: 33, scope: !9634)
!9634 = !DILexicalBlockFile(scope: !9630, file: !717, discriminator: 1)
!9635 = !DILocation(line: 138, column: 13, scope: !746)
!9636 = !DILocation(line: 139, column: 20, scope: !9630)
!9637 = !DILocation(line: 139, column: 13, scope: !9630)
!9638 = !DILocation(line: 142, column: 37, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !746, file: !717, line: 142, column: 13)
!9640 = !DILocation(line: 142, column: 14, scope: !9639)
!9641 = !DILocation(line: 142, column: 13, scope: !746)
!9642 = !DILocation(line: 143, column: 20, scope: !9639)
!9643 = !DILocation(line: 143, column: 13, scope: !9639)
!9644 = !DILocation(line: 146, column: 9, scope: !746)
!9645 = !DILocation(line: 150, column: 31, scope: !746)
!9646 = !DILocation(line: 150, column: 13, scope: !746)
!9647 = !DILocation(line: 150, column: 11, scope: !746)
!9648 = !DILocation(line: 151, column: 9, scope: !746)
!9649 = !DILocation(line: 151, column: 14, scope: !9650)
!9650 = !DILexicalBlockFile(scope: !758, file: !717, discriminator: 1)
!9651 = !DILocation(line: 151, column: 24, scope: !758)
!9652 = !DILocation(line: 151, column: 54, scope: !758)
!9653 = !DILocation(line: 151, column: 66, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !758, file: !717, line: 151, column: 63)
!9655 = !DILocation(line: 151, column: 83, scope: !9654)
!9656 = !DILocation(line: 151, column: 63, scope: !9654)
!9657 = !DILocation(line: 151, column: 93, scope: !9654)
!9658 = !DILocation(line: 151, column: 63, scope: !758)
!9659 = !DILocation(line: 151, column: 63, scope: !9660)
!9660 = !DILexicalBlockFile(scope: !758, file: !717, discriminator: 2)
!9661 = !DILocation(line: 151, column: 124, scope: !9662)
!9662 = !DILexicalBlockFile(scope: !9654, file: !717, discriminator: 3)
!9663 = !DILocation(line: 151, column: 142, scope: !9654)
!9664 = !DILocation(line: 151, column: 152, scope: !9654)
!9665 = !DILocation(line: 151, column: 177, scope: !9654)
!9666 = !DILocation(line: 151, column: 108, scope: !9654)
!9667 = !DILocation(line: 151, column: 196, scope: !9525)
!9668 = !DILocation(line: 151, column: 196, scope: !758)
!9669 = !DILocation(line: 151, column: 196, scope: !9670)
!9670 = !DILexicalBlockFile(scope: !758, file: !717, discriminator: 5)
!9671 = !DILocation(line: 151, column: 213, scope: !9530)
!9672 = !DILocation(line: 152, column: 13, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !746, file: !717, line: 152, column: 13)
!9674 = !DILocation(line: 152, column: 15, scope: !9673)
!9675 = !DILocation(line: 152, column: 13, scope: !746)
!9676 = !DILocation(line: 153, column: 20, scope: !9673)
!9677 = !DILocation(line: 153, column: 13, scope: !9673)
!9678 = !DILocation(line: 156, column: 31, scope: !746)
!9679 = !DILocation(line: 156, column: 34, scope: !746)
!9680 = !DILocation(line: 156, column: 13, scope: !746)
!9681 = !DILocation(line: 156, column: 11, scope: !746)
!9682 = !DILocation(line: 157, column: 9, scope: !746)
!9683 = !DILocation(line: 157, column: 14, scope: !9684)
!9684 = !DILexicalBlockFile(scope: !760, file: !717, discriminator: 1)
!9685 = !DILocation(line: 157, column: 24, scope: !760)
!9686 = !DILocation(line: 157, column: 54, scope: !760)
!9687 = !DILocation(line: 157, column: 66, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !760, file: !717, line: 157, column: 63)
!9689 = !DILocation(line: 157, column: 83, scope: !9688)
!9690 = !DILocation(line: 157, column: 63, scope: !9688)
!9691 = !DILocation(line: 157, column: 93, scope: !9688)
!9692 = !DILocation(line: 157, column: 63, scope: !760)
!9693 = !DILocation(line: 157, column: 63, scope: !9694)
!9694 = !DILexicalBlockFile(scope: !760, file: !717, discriminator: 2)
!9695 = !DILocation(line: 157, column: 124, scope: !9696)
!9696 = !DILexicalBlockFile(scope: !9688, file: !717, discriminator: 3)
!9697 = !DILocation(line: 157, column: 142, scope: !9688)
!9698 = !DILocation(line: 157, column: 152, scope: !9688)
!9699 = !DILocation(line: 157, column: 177, scope: !9688)
!9700 = !DILocation(line: 157, column: 108, scope: !9688)
!9701 = !DILocation(line: 157, column: 196, scope: !9525)
!9702 = !DILocation(line: 157, column: 196, scope: !760)
!9703 = !DILocation(line: 157, column: 196, scope: !9704)
!9704 = !DILexicalBlockFile(scope: !760, file: !717, discriminator: 5)
!9705 = !DILocation(line: 157, column: 213, scope: !9530)
!9706 = !DILocation(line: 158, column: 13, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !746, file: !717, line: 158, column: 13)
!9708 = !DILocation(line: 158, column: 15, scope: !9707)
!9709 = !DILocation(line: 158, column: 13, scope: !746)
!9710 = !DILocation(line: 159, column: 20, scope: !9707)
!9711 = !DILocation(line: 159, column: 13, scope: !9707)
!9712 = !DILocation(line: 162, column: 29, scope: !746)
!9713 = !DILocation(line: 162, column: 15, scope: !746)
!9714 = !DILocation(line: 162, column: 13, scope: !746)
!9715 = !DILocation(line: 163, column: 13, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !746, file: !717, line: 163, column: 13)
!9717 = !DILocation(line: 163, column: 17, scope: !9716)
!9718 = !DILocation(line: 163, column: 29, scope: !9716)
!9719 = !DILocation(line: 163, column: 33, scope: !9720)
!9720 = !DILexicalBlockFile(scope: !9716, file: !717, discriminator: 1)
!9721 = !DILocation(line: 163, column: 13, scope: !746)
!9722 = !DILocation(line: 164, column: 20, scope: !9716)
!9723 = !DILocation(line: 164, column: 13, scope: !9716)
!9724 = !DILocation(line: 167, column: 37, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !746, file: !717, line: 167, column: 13)
!9726 = !DILocation(line: 167, column: 14, scope: !9725)
!9727 = !DILocation(line: 167, column: 13, scope: !746)
!9728 = !DILocation(line: 168, column: 20, scope: !9725)
!9729 = !DILocation(line: 168, column: 13, scope: !9725)
!9730 = !DILocation(line: 171, column: 9, scope: !746)
!9731 = !DILocation(line: 172, column: 9, scope: !746)
!9732 = !DILocation(line: 172, column: 14, scope: !9733)
!9733 = !DILexicalBlockFile(scope: !762, file: !717, discriminator: 1)
!9734 = !DILocation(line: 172, column: 24, scope: !762)
!9735 = !DILocation(line: 172, column: 54, scope: !762)
!9736 = !DILocation(line: 172, column: 66, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !762, file: !717, line: 172, column: 63)
!9738 = !DILocation(line: 172, column: 83, scope: !9737)
!9739 = !DILocation(line: 172, column: 63, scope: !9737)
!9740 = !DILocation(line: 172, column: 93, scope: !9737)
!9741 = !DILocation(line: 172, column: 63, scope: !762)
!9742 = !DILocation(line: 172, column: 63, scope: !9743)
!9743 = !DILexicalBlockFile(scope: !762, file: !717, discriminator: 2)
!9744 = !DILocation(line: 172, column: 124, scope: !9745)
!9745 = !DILexicalBlockFile(scope: !9737, file: !717, discriminator: 3)
!9746 = !DILocation(line: 172, column: 142, scope: !9737)
!9747 = !DILocation(line: 172, column: 152, scope: !9737)
!9748 = !DILocation(line: 172, column: 177, scope: !9737)
!9749 = !DILocation(line: 172, column: 108, scope: !9737)
!9750 = !DILocation(line: 172, column: 196, scope: !9525)
!9751 = !DILocation(line: 172, column: 196, scope: !762)
!9752 = !DILocation(line: 172, column: 196, scope: !9753)
!9753 = !DILexicalBlockFile(scope: !762, file: !717, discriminator: 5)
!9754 = !DILocation(line: 172, column: 213, scope: !9530)
!9755 = !DILocation(line: 174, column: 9, scope: !746)
!9756 = !DILocation(line: 174, column: 14, scope: !9757)
!9757 = !DILexicalBlockFile(scope: !764, file: !717, discriminator: 1)
!9758 = !DILocation(line: 174, column: 24, scope: !764)
!9759 = !DILocation(line: 174, column: 55, scope: !764)
!9760 = !DILocation(line: 174, column: 63, scope: !767)
!9761 = !DILocation(line: 174, column: 79, scope: !767)
!9762 = !DILocation(line: 174, column: 63, scope: !764)
!9763 = !DILocation(line: 174, column: 94, scope: !9764)
!9764 = !DILexicalBlockFile(scope: !767, file: !717, discriminator: 2)
!9765 = !DILocation(line: 174, column: 99, scope: !9766)
!9766 = !DILexicalBlockFile(scope: !766, file: !717, discriminator: 4)
!9767 = !DILocation(line: 174, column: 109, scope: !766)
!9768 = !DILocation(line: 174, column: 139, scope: !766)
!9769 = !DILocation(line: 174, column: 165, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !766, file: !717, line: 174, column: 162)
!9771 = !DILocation(line: 174, column: 182, scope: !9770)
!9772 = !DILocation(line: 174, column: 162, scope: !9770)
!9773 = !DILocation(line: 174, column: 192, scope: !9770)
!9774 = !DILocation(line: 174, column: 162, scope: !766)
!9775 = !DILocation(line: 174, column: 162, scope: !9776)
!9776 = !DILexicalBlockFile(scope: !766, file: !717, discriminator: 5)
!9777 = !DILocation(line: 174, column: 223, scope: !9778)
!9778 = !DILexicalBlockFile(scope: !9770, file: !717, discriminator: 6)
!9779 = !DILocation(line: 174, column: 241, scope: !9770)
!9780 = !DILocation(line: 174, column: 251, scope: !9770)
!9781 = !DILocation(line: 174, column: 276, scope: !9770)
!9782 = !DILocation(line: 174, column: 207, scope: !9770)
!9783 = !DILocation(line: 174, column: 295, scope: !9784)
!9784 = !DILexicalBlockFile(scope: !767, file: !717, discriminator: 7)
!9785 = !DILocation(line: 174, column: 295, scope: !766)
!9786 = !DILocation(line: 174, column: 295, scope: !9787)
!9787 = !DILexicalBlockFile(scope: !766, file: !717, discriminator: 8)
!9788 = !DILocation(line: 174, column: 295, scope: !9789)
!9789 = !DILexicalBlockFile(scope: !766, file: !717, discriminator: 9)
!9790 = !DILocation(line: 174, column: 308, scope: !9791)
!9791 = !DILexicalBlockFile(scope: !9792, file: !717, discriminator: 10)
!9792 = !DILexicalBlockFile(scope: !746, file: !717, discriminator: 3)
!9793 = !DILocation(line: 174, column: 308, scope: !764)
!9794 = !DILocation(line: 174, column: 308, scope: !9795)
!9795 = !DILexicalBlockFile(scope: !764, file: !717, discriminator: 11)
!9796 = !DILocation(line: 175, column: 9, scope: !746)
!9797 = !DILocation(line: 175, column: 14, scope: !9798)
!9798 = !DILexicalBlockFile(scope: !769, file: !717, discriminator: 1)
!9799 = !DILocation(line: 175, column: 24, scope: !769)
!9800 = !DILocation(line: 175, column: 55, scope: !769)
!9801 = !DILocation(line: 175, column: 63, scope: !772)
!9802 = !DILocation(line: 175, column: 79, scope: !772)
!9803 = !DILocation(line: 175, column: 63, scope: !769)
!9804 = !DILocation(line: 175, column: 94, scope: !9805)
!9805 = !DILexicalBlockFile(scope: !772, file: !717, discriminator: 2)
!9806 = !DILocation(line: 175, column: 99, scope: !9807)
!9807 = !DILexicalBlockFile(scope: !771, file: !717, discriminator: 4)
!9808 = !DILocation(line: 175, column: 109, scope: !771)
!9809 = !DILocation(line: 175, column: 139, scope: !771)
!9810 = !DILocation(line: 175, column: 165, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !771, file: !717, line: 175, column: 162)
!9812 = !DILocation(line: 175, column: 182, scope: !9811)
!9813 = !DILocation(line: 175, column: 162, scope: !9811)
!9814 = !DILocation(line: 175, column: 192, scope: !9811)
!9815 = !DILocation(line: 175, column: 162, scope: !771)
!9816 = !DILocation(line: 175, column: 162, scope: !9817)
!9817 = !DILexicalBlockFile(scope: !771, file: !717, discriminator: 5)
!9818 = !DILocation(line: 175, column: 223, scope: !9819)
!9819 = !DILexicalBlockFile(scope: !9811, file: !717, discriminator: 6)
!9820 = !DILocation(line: 175, column: 241, scope: !9811)
!9821 = !DILocation(line: 175, column: 251, scope: !9811)
!9822 = !DILocation(line: 175, column: 276, scope: !9811)
!9823 = !DILocation(line: 175, column: 207, scope: !9811)
!9824 = !DILocation(line: 175, column: 295, scope: !9825)
!9825 = !DILexicalBlockFile(scope: !772, file: !717, discriminator: 7)
!9826 = !DILocation(line: 175, column: 295, scope: !771)
!9827 = !DILocation(line: 175, column: 295, scope: !9828)
!9828 = !DILexicalBlockFile(scope: !771, file: !717, discriminator: 8)
!9829 = !DILocation(line: 175, column: 295, scope: !9830)
!9830 = !DILexicalBlockFile(scope: !771, file: !717, discriminator: 9)
!9831 = !DILocation(line: 175, column: 308, scope: !9791)
!9832 = !DILocation(line: 175, column: 308, scope: !769)
!9833 = !DILocation(line: 175, column: 308, scope: !9834)
!9834 = !DILexicalBlockFile(scope: !769, file: !717, discriminator: 11)
!9835 = !DILocation(line: 176, column: 9, scope: !746)
!9836 = !DILocation(line: 176, column: 14, scope: !9837)
!9837 = !DILexicalBlockFile(scope: !774, file: !717, discriminator: 1)
!9838 = !DILocation(line: 176, column: 24, scope: !774)
!9839 = !DILocation(line: 176, column: 54, scope: !774)
!9840 = !DILocation(line: 176, column: 68, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !774, file: !717, line: 176, column: 65)
!9842 = !DILocation(line: 176, column: 85, scope: !9841)
!9843 = !DILocation(line: 176, column: 65, scope: !9841)
!9844 = !DILocation(line: 176, column: 95, scope: !9841)
!9845 = !DILocation(line: 176, column: 65, scope: !774)
!9846 = !DILocation(line: 176, column: 65, scope: !9847)
!9847 = !DILexicalBlockFile(scope: !774, file: !717, discriminator: 2)
!9848 = !DILocation(line: 176, column: 126, scope: !9849)
!9849 = !DILexicalBlockFile(scope: !9841, file: !717, discriminator: 3)
!9850 = !DILocation(line: 176, column: 144, scope: !9841)
!9851 = !DILocation(line: 176, column: 154, scope: !9841)
!9852 = !DILocation(line: 176, column: 179, scope: !9841)
!9853 = !DILocation(line: 176, column: 110, scope: !9841)
!9854 = !DILocation(line: 176, column: 198, scope: !9525)
!9855 = !DILocation(line: 176, column: 198, scope: !774)
!9856 = !DILocation(line: 176, column: 198, scope: !9857)
!9857 = !DILexicalBlockFile(scope: !774, file: !717, discriminator: 5)
!9858 = !DILocation(line: 177, column: 5, scope: !716)
!9859 = !DILocation(line: 177, column: 5, scope: !9860)
!9860 = !DILexicalBlockFile(scope: !716, file: !717, discriminator: 1)
!9861 = !DILocation(line: 181, column: 9, scope: !776)
!9862 = !DILocation(line: 181, column: 14, scope: !776)
!9863 = !DILocation(line: 182, column: 9, scope: !776)
!9864 = !DILocation(line: 182, column: 23, scope: !776)
!9865 = !DILocation(line: 184, column: 55, scope: !776)
!9866 = !DILocation(line: 186, column: 15, scope: !776)
!9867 = !DILocation(line: 186, column: 13, scope: !776)
!9868 = !DILocation(line: 187, column: 13, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !776, file: !717, line: 187, column: 13)
!9870 = !DILocation(line: 187, column: 17, scope: !9869)
!9871 = !DILocation(line: 187, column: 29, scope: !9869)
!9872 = !DILocation(line: 187, column: 33, scope: !9873)
!9873 = !DILexicalBlockFile(scope: !9869, file: !717, discriminator: 1)
!9874 = !DILocation(line: 187, column: 13, scope: !776)
!9875 = !DILocation(line: 188, column: 20, scope: !9869)
!9876 = !DILocation(line: 188, column: 13, scope: !9869)
!9877 = !DILocation(line: 189, column: 37, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !776, file: !717, line: 189, column: 13)
!9879 = !DILocation(line: 189, column: 14, scope: !9878)
!9880 = !DILocation(line: 189, column: 13, scope: !776)
!9881 = !DILocation(line: 190, column: 20, scope: !9878)
!9882 = !DILocation(line: 190, column: 13, scope: !9878)
!9883 = !DILocation(line: 192, column: 9, scope: !776)
!9884 = !DILocation(line: 194, column: 16, scope: !776)
!9885 = !DILocation(line: 194, column: 14, scope: !776)
!9886 = !DILocation(line: 195, column: 13, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !776, file: !717, line: 195, column: 13)
!9888 = !DILocation(line: 195, column: 18, scope: !9887)
!9889 = !DILocation(line: 195, column: 39, scope: !9887)
!9890 = !DILocation(line: 195, column: 43, scope: !9891)
!9891 = !DILexicalBlockFile(scope: !9887, file: !717, discriminator: 1)
!9892 = !DILocation(line: 195, column: 13, scope: !776)
!9893 = !DILocation(line: 196, column: 20, scope: !9887)
!9894 = !DILocation(line: 196, column: 13, scope: !9887)
!9895 = !DILocation(line: 197, column: 37, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !776, file: !717, line: 197, column: 13)
!9897 = !DILocation(line: 197, column: 14, scope: !9896)
!9898 = !DILocation(line: 197, column: 13, scope: !776)
!9899 = !DILocation(line: 198, column: 20, scope: !9896)
!9900 = !DILocation(line: 198, column: 13, scope: !9896)
!9901 = !DILocation(line: 200, column: 9, scope: !776)
!9902 = !DILocation(line: 202, column: 9, scope: !776)
!9903 = !DILocation(line: 202, column: 14, scope: !9904)
!9904 = !DILexicalBlockFile(scope: !779, file: !717, discriminator: 1)
!9905 = !DILocation(line: 202, column: 24, scope: !779)
!9906 = !DILocation(line: 202, column: 82, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !779, file: !717, line: 202, column: 79)
!9908 = !DILocation(line: 202, column: 99, scope: !9907)
!9909 = !DILocation(line: 202, column: 79, scope: !9907)
!9910 = !DILocation(line: 202, column: 109, scope: !9907)
!9911 = !DILocation(line: 202, column: 79, scope: !779)
!9912 = !DILocation(line: 202, column: 79, scope: !9913)
!9913 = !DILexicalBlockFile(scope: !779, file: !717, discriminator: 2)
!9914 = !DILocation(line: 202, column: 140, scope: !9915)
!9915 = !DILexicalBlockFile(scope: !9907, file: !717, discriminator: 3)
!9916 = !DILocation(line: 202, column: 158, scope: !9907)
!9917 = !DILocation(line: 202, column: 168, scope: !9907)
!9918 = !DILocation(line: 202, column: 193, scope: !9907)
!9919 = !DILocation(line: 202, column: 124, scope: !9907)
!9920 = !DILocation(line: 202, column: 212, scope: !9921)
!9921 = !DILexicalBlockFile(scope: !776, file: !717, discriminator: 4)
!9922 = !DILocation(line: 202, column: 212, scope: !779)
!9923 = !DILocation(line: 202, column: 212, scope: !9924)
!9924 = !DILexicalBlockFile(scope: !779, file: !717, discriminator: 5)
!9925 = !DILocation(line: 203, column: 5, scope: !716)
!9926 = !DILocation(line: 203, column: 5, scope: !9860)
!9927 = !DILocation(line: 205, column: 51, scope: !716)
!9928 = !DILocation(line: 206, column: 5, scope: !716)
!9929 = !DILocation(line: 207, column: 1, scope: !716)
!9930 = !DILocation(line: 365, column: 35, scope: !780)
!9931 = !DILocation(line: 367, column: 44, scope: !780)
!9932 = !DILocation(line: 367, column: 12, scope: !780)
!9933 = !DILocation(line: 367, column: 5, scope: !780)
!9934 = !DILocation(line: 23, column: 28, scope: !783)
!9935 = !DILocation(line: 23, column: 51, scope: !783)
!9936 = !DILocation(line: 25, column: 18, scope: !783)
!9937 = !DILocation(line: 25, column: 39, scope: !783)
!9938 = !DILocation(line: 25, column: 50, scope: !783)
!9939 = !DILocation(line: 25, column: 5, scope: !783)
!9940 = !DILocation(line: 26, column: 5, scope: !783)
!9941 = !DILocation(line: 2656, column: 24, scope: !801)
!9942 = !DILocation(line: 2658, column: 21, scope: !801)
!9943 = !DILocation(line: 2658, column: 27, scope: !801)
!9944 = !DILocation(line: 2658, column: 36, scope: !801)
!9945 = !DILocation(line: 2659, column: 12, scope: !801)
!9946 = !DILocation(line: 2659, column: 5, scope: !801)
!9947 = !DILocation(line: 2080, column: 30, scope: !1068)
!9948 = !DILocation(line: 2081, column: 34, scope: !1068)
!9949 = !DILocation(line: 2082, column: 30, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !1068, file: !453, line: 2082, column: 9)
!9951 = !DILocation(line: 2082, column: 9, scope: !9950)
!9952 = !DILocation(line: 2082, column: 36, scope: !9950)
!9953 = !DILocation(line: 2082, column: 33, scope: !9950)
!9954 = !DILocation(line: 2082, column: 9, scope: !1068)
!9955 = !DILocation(line: 2083, column: 23, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9950, file: !453, line: 2082, column: 53)
!9957 = !DILocation(line: 2084, column: 5, scope: !9956)
!9958 = !DILocation(line: 2084, column: 40, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9950, file: !453, line: 2084, column: 16)
!9960 = !DILocation(line: 2084, column: 16, scope: !9959)
!9961 = !DILocation(line: 2084, column: 43, scope: !9959)
!9962 = !DILocation(line: 2084, column: 16, scope: !9950)
!9963 = !DILocation(line: 2085, column: 23, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9959, file: !453, line: 2084, column: 66)
!9965 = !DILocation(line: 2086, column: 5, scope: !9964)
!9966 = !DILocation(line: 2086, column: 34, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9959, file: !453, line: 2086, column: 16)
!9968 = !DILocation(line: 2086, column: 16, scope: !9967)
!9969 = !DILocation(line: 2086, column: 40, scope: !9967)
!9970 = !DILocation(line: 2086, column: 37, scope: !9967)
!9971 = !DILocation(line: 2086, column: 16, scope: !9959)
!9972 = !DILocation(line: 2087, column: 23, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9967, file: !453, line: 2086, column: 54)
!9974 = !DILocation(line: 2088, column: 5, scope: !9973)
!9975 = !DILocation(line: 2088, column: 37, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9967, file: !453, line: 2088, column: 16)
!9977 = !DILocation(line: 2088, column: 40, scope: !9976)
!9978 = !DILocation(line: 2088, column: 16, scope: !9976)
!9979 = !DILocation(line: 2088, column: 57, scope: !9976)
!9980 = !DILocation(line: 2088, column: 54, scope: !9976)
!9981 = !DILocation(line: 2088, column: 16, scope: !9967)
!9982 = !DILocation(line: 2089, column: 23, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9976, file: !453, line: 2088, column: 74)
!9984 = !DILocation(line: 2090, column: 5, scope: !9983)
!9985 = !DILocation(line: 2091, column: 1, scope: !1068)
!9986 = !DILocation(line: 11, column: 35, scope: !1159)
!9987 = !DILocation(line: 13, column: 5, scope: !1159)
!9988 = !DILocation(line: 13, column: 15, scope: !1159)
!9989 = !DILocation(line: 14, column: 5, scope: !1159)
!9990 = !DILocation(line: 14, column: 24, scope: !1159)
!9991 = !DILocation(line: 15, column: 5, scope: !1159)
!9992 = !DILocation(line: 15, column: 15, scope: !1159)
!9993 = !DILocation(line: 16, column: 5, scope: !1159)
!9994 = !DILocation(line: 16, column: 9, scope: !1159)
!9995 = !DILocation(line: 25, column: 10, scope: !1159)
!9996 = !DILocation(line: 26, column: 12, scope: !1169)
!9997 = !DILocation(line: 26, column: 10, scope: !1169)
!9998 = !DILocation(line: 27, column: 10, scope: !1168)
!9999 = !DILocation(line: 27, column: 12, scope: !1168)
!10000 = !DILocation(line: 26, column: 5, scope: !1169)
!10001 = !DILocation(line: 30, column: 9, scope: !1167)
!10002 = !DILocation(line: 30, column: 13, scope: !1167)
!10003 = !DILocation(line: 31, column: 16, scope: !1173)
!10004 = !DILocation(line: 31, column: 14, scope: !1173)
!10005 = !DILocation(line: 31, column: 21, scope: !10006)
!10006 = !DILexicalBlockFile(scope: !10007, file: !717, discriminator: 4)
!10007 = !DILexicalBlockFile(scope: !1172, file: !717, discriminator: 3)
!10008 = !DILocation(line: 31, column: 23, scope: !1172)
!10009 = !DILocation(line: 31, column: 9, scope: !1173)
!10010 = !DILocation(line: 32, column: 13, scope: !1171)
!10011 = !DILocation(line: 32, column: 23, scope: !1171)
!10012 = !DILocation(line: 32, column: 27, scope: !1171)
!10013 = !DILocation(line: 33, column: 13, scope: !1171)
!10014 = !DILocation(line: 33, column: 32, scope: !1171)
!10015 = !DILocation(line: 33, column: 37, scope: !1171)
!10016 = !DILocation(line: 36, column: 19, scope: !1171)
!10017 = !DILocation(line: 36, column: 21, scope: !1171)
!10018 = !DILocation(line: 36, column: 27, scope: !10019)
!10019 = !DILexicalBlockFile(scope: !1171, file: !717, discriminator: 5)
!10020 = !DILocation(line: 36, column: 39, scope: !10021)
!10021 = !DILexicalBlockFile(scope: !1171, file: !717, discriminator: 6)
!10022 = !DILocation(line: 36, column: 37, scope: !1171)
!10023 = !DILocation(line: 36, column: 17, scope: !10024)
!10024 = !DILexicalBlockFile(scope: !10025, file: !717, discriminator: 8)
!10025 = !DILexicalBlockFile(scope: !1171, file: !717, discriminator: 7)
!10026 = !DILocation(line: 42, column: 52, scope: !1171)
!10027 = !DILocation(line: 42, column: 54, scope: !1171)
!10028 = !DILocation(line: 42, column: 58, scope: !1171)
!10029 = !DILocation(line: 42, column: 40, scope: !1171)
!10030 = !DILocation(line: 42, column: 17, scope: !1171)
!10031 = !DILocation(line: 44, column: 52, scope: !1171)
!10032 = !DILocation(line: 44, column: 24, scope: !1171)
!10033 = !DILocation(line: 44, column: 22, scope: !1171)
!10034 = !DILocation(line: 45, column: 17, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !1171, file: !717, line: 45, column: 17)
!10036 = !DILocation(line: 45, column: 26, scope: !10035)
!10037 = !DILocation(line: 45, column: 17, scope: !1171)
!10038 = !DILocation(line: 46, column: 24, scope: !10035)
!10039 = !DILocation(line: 46, column: 17, scope: !10035)
!10040 = !DILocation(line: 49, column: 46, scope: !1171)
!10041 = !DILocation(line: 49, column: 20, scope: !1171)
!10042 = !DILocation(line: 49, column: 18, scope: !1171)
!10043 = !DILocation(line: 50, column: 17, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !1171, file: !717, line: 50, column: 17)
!10045 = !DILocation(line: 50, column: 22, scope: !10044)
!10046 = !DILocation(line: 50, column: 48, scope: !10044)
!10047 = !DILocation(line: 50, column: 51, scope: !10048)
!10048 = !DILexicalBlockFile(scope: !10044, file: !717, discriminator: 2)
!10049 = !DILocation(line: 50, column: 17, scope: !1171)
!10050 = !DILocation(line: 51, column: 24, scope: !10044)
!10051 = !DILocation(line: 51, column: 17, scope: !10044)
!10052 = !DILocation(line: 53, column: 17, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !1171, file: !717, line: 53, column: 17)
!10054 = !DILocation(line: 53, column: 25, scope: !10053)
!10055 = !DILocation(line: 53, column: 22, scope: !10053)
!10056 = !DILocation(line: 53, column: 17, scope: !1171)
!10057 = !DILocation(line: 54, column: 24, scope: !10053)
!10058 = !DILocation(line: 54, column: 17, scope: !10053)
!10059 = !DILocation(line: 56, column: 13, scope: !1171)
!10060 = !DILocation(line: 56, column: 18, scope: !10061)
!10061 = !DILexicalBlockFile(scope: !1178, file: !717, discriminator: 7)
!10062 = !DILocation(line: 56, column: 28, scope: !1178)
!10063 = !DILocation(line: 56, column: 58, scope: !1178)
!10064 = !DILocation(line: 56, column: 77, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !1178, file: !717, line: 56, column: 74)
!10066 = !DILocation(line: 56, column: 94, scope: !10065)
!10067 = !DILocation(line: 56, column: 74, scope: !10065)
!10068 = !DILocation(line: 56, column: 104, scope: !10065)
!10069 = !DILocation(line: 56, column: 74, scope: !1178)
!10070 = !DILocation(line: 56, column: 74, scope: !10071)
!10071 = !DILexicalBlockFile(scope: !1178, file: !717, discriminator: 8)
!10072 = !DILocation(line: 56, column: 135, scope: !10073)
!10073 = !DILexicalBlockFile(scope: !10065, file: !717, discriminator: 9)
!10074 = !DILocation(line: 56, column: 153, scope: !10065)
!10075 = !DILocation(line: 56, column: 163, scope: !10065)
!10076 = !DILocation(line: 56, column: 188, scope: !10065)
!10077 = !DILocation(line: 56, column: 119, scope: !10065)
!10078 = !DILocation(line: 56, column: 207, scope: !10079)
!10079 = !DILexicalBlockFile(scope: !1171, file: !717, discriminator: 10)
!10080 = !DILocation(line: 56, column: 207, scope: !1178)
!10081 = !DILocation(line: 56, column: 207, scope: !10082)
!10082 = !DILexicalBlockFile(scope: !1178, file: !717, discriminator: 11)
!10083 = !DILocation(line: 56, column: 231, scope: !10084)
!10084 = !DILexicalBlockFile(scope: !1171, file: !717, discriminator: 12)
!10085 = !DILocation(line: 58, column: 29, scope: !1171)
!10086 = !DILocation(line: 58, column: 16, scope: !1171)
!10087 = !DILocation(line: 59, column: 44, scope: !1171)
!10088 = !DILocation(line: 59, column: 24, scope: !1171)
!10089 = !DILocation(line: 59, column: 22, scope: !1171)
!10090 = !DILocation(line: 60, column: 17, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !1171, file: !717, line: 60, column: 17)
!10092 = !DILocation(line: 60, column: 26, scope: !10091)
!10093 = !DILocation(line: 60, column: 17, scope: !1171)
!10094 = !DILocation(line: 61, column: 24, scope: !10091)
!10095 = !DILocation(line: 61, column: 17, scope: !10091)
!10096 = !DILocation(line: 64, column: 37, scope: !1171)
!10097 = !DILocation(line: 64, column: 19, scope: !1171)
!10098 = !DILocation(line: 64, column: 17, scope: !1171)
!10099 = !DILocation(line: 65, column: 17, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !1171, file: !717, line: 65, column: 17)
!10101 = !DILocation(line: 65, column: 21, scope: !10100)
!10102 = !DILocation(line: 65, column: 38, scope: !10100)
!10103 = !DILocation(line: 65, column: 41, scope: !10104)
!10104 = !DILexicalBlockFile(scope: !10100, file: !717, discriminator: 2)
!10105 = !DILocation(line: 65, column: 17, scope: !1171)
!10106 = !DILocation(line: 66, column: 24, scope: !10100)
!10107 = !DILocation(line: 66, column: 17, scope: !10100)
!10108 = !DILocation(line: 68, column: 17, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !1171, file: !717, line: 68, column: 17)
!10110 = !DILocation(line: 68, column: 24, scope: !10109)
!10111 = !DILocation(line: 68, column: 21, scope: !10109)
!10112 = !DILocation(line: 68, column: 17, scope: !1171)
!10113 = !DILocation(line: 69, column: 24, scope: !10109)
!10114 = !DILocation(line: 69, column: 17, scope: !10109)
!10115 = !DILocation(line: 71, column: 13, scope: !1171)
!10116 = !DILocation(line: 71, column: 18, scope: !10117)
!10117 = !DILexicalBlockFile(scope: !1180, file: !717, discriminator: 7)
!10118 = !DILocation(line: 71, column: 28, scope: !1180)
!10119 = !DILocation(line: 71, column: 58, scope: !1180)
!10120 = !DILocation(line: 71, column: 77, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !1180, file: !717, line: 71, column: 74)
!10122 = !DILocation(line: 71, column: 94, scope: !10121)
!10123 = !DILocation(line: 71, column: 74, scope: !10121)
!10124 = !DILocation(line: 71, column: 104, scope: !10121)
!10125 = !DILocation(line: 71, column: 74, scope: !1180)
!10126 = !DILocation(line: 71, column: 74, scope: !10127)
!10127 = !DILexicalBlockFile(scope: !1180, file: !717, discriminator: 8)
!10128 = !DILocation(line: 71, column: 135, scope: !10129)
!10129 = !DILexicalBlockFile(scope: !10121, file: !717, discriminator: 9)
!10130 = !DILocation(line: 71, column: 153, scope: !10121)
!10131 = !DILocation(line: 71, column: 163, scope: !10121)
!10132 = !DILocation(line: 71, column: 188, scope: !10121)
!10133 = !DILocation(line: 71, column: 119, scope: !10121)
!10134 = !DILocation(line: 71, column: 207, scope: !10079)
!10135 = !DILocation(line: 71, column: 207, scope: !1180)
!10136 = !DILocation(line: 71, column: 207, scope: !10137)
!10137 = !DILexicalBlockFile(scope: !1180, file: !717, discriminator: 11)
!10138 = !DILocation(line: 71, column: 231, scope: !10084)
!10139 = !DILocation(line: 72, column: 9, scope: !1172)
!10140 = !DILocation(line: 72, column: 9, scope: !10141)
!10141 = !DILexicalBlockFile(scope: !1172, file: !717, discriminator: 2)
!10142 = !DILocation(line: 72, column: 9, scope: !1171)
!10143 = !DILocation(line: 31, column: 28, scope: !1172)
!10144 = !DILocation(line: 31, column: 9, scope: !1172)
!10145 = !DILocation(line: 73, column: 5, scope: !1168)
!10146 = !DILocation(line: 73, column: 5, scope: !10147)
!10147 = !DILexicalBlockFile(scope: !1168, file: !717, discriminator: 2)
!10148 = !DILocation(line: 73, column: 5, scope: !1167)
!10149 = !DILocation(line: 28, column: 10, scope: !1168)
!10150 = !DILocation(line: 28, column: 20, scope: !1168)
!10151 = !DILocation(line: 26, column: 5, scope: !1168)
!10152 = !DILocation(line: 80, column: 9, scope: !1182)
!10153 = !DILocation(line: 80, column: 19, scope: !1182)
!10154 = !DILocation(line: 80, column: 25, scope: !1182)
!10155 = !DILocation(line: 80, column: 29, scope: !1182)
!10156 = !DILocation(line: 81, column: 9, scope: !1182)
!10157 = !DILocation(line: 81, column: 19, scope: !1182)
!10158 = !DILocation(line: 82, column: 9, scope: !1182)
!10159 = !DILocation(line: 82, column: 28, scope: !1182)
!10160 = !DILocation(line: 84, column: 15, scope: !1182)
!10161 = !DILocation(line: 84, column: 13, scope: !1182)
!10162 = !DILocation(line: 85, column: 13, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 85, column: 13)
!10164 = !DILocation(line: 85, column: 17, scope: !10163)
!10165 = !DILocation(line: 85, column: 13, scope: !1182)
!10166 = !DILocation(line: 86, column: 20, scope: !10163)
!10167 = !DILocation(line: 86, column: 13, scope: !10163)
!10168 = !DILocation(line: 90, column: 31, scope: !1182)
!10169 = !DILocation(line: 90, column: 13, scope: !1182)
!10170 = !DILocation(line: 90, column: 11, scope: !1182)
!10171 = !DILocation(line: 91, column: 13, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 91, column: 13)
!10173 = !DILocation(line: 91, column: 15, scope: !10172)
!10174 = !DILocation(line: 91, column: 13, scope: !1182)
!10175 = !DILocation(line: 92, column: 20, scope: !10172)
!10176 = !DILocation(line: 92, column: 13, scope: !10172)
!10177 = !DILocation(line: 95, column: 42, scope: !1182)
!10178 = !DILocation(line: 95, column: 16, scope: !1182)
!10179 = !DILocation(line: 95, column: 14, scope: !1182)
!10180 = !DILocation(line: 96, column: 13, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 96, column: 13)
!10182 = !DILocation(line: 96, column: 18, scope: !10181)
!10183 = !DILocation(line: 96, column: 44, scope: !10181)
!10184 = !DILocation(line: 96, column: 48, scope: !10185)
!10185 = !DILexicalBlockFile(scope: !10181, file: !717, discriminator: 2)
!10186 = !DILocation(line: 96, column: 13, scope: !1182)
!10187 = !DILocation(line: 97, column: 20, scope: !10181)
!10188 = !DILocation(line: 97, column: 13, scope: !10181)
!10189 = !DILocation(line: 99, column: 37, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 99, column: 13)
!10191 = !DILocation(line: 99, column: 14, scope: !10190)
!10192 = !DILocation(line: 99, column: 13, scope: !1182)
!10193 = !DILocation(line: 100, column: 20, scope: !10190)
!10194 = !DILocation(line: 100, column: 13, scope: !10190)
!10195 = !DILocation(line: 103, column: 9, scope: !1182)
!10196 = !DILocation(line: 104, column: 9, scope: !1182)
!10197 = !DILocation(line: 104, column: 14, scope: !10198)
!10198 = !DILexicalBlockFile(scope: !1188, file: !717, discriminator: 7)
!10199 = !DILocation(line: 104, column: 24, scope: !1188)
!10200 = !DILocation(line: 104, column: 54, scope: !1188)
!10201 = !DILocation(line: 104, column: 66, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !1188, file: !717, line: 104, column: 63)
!10203 = !DILocation(line: 104, column: 83, scope: !10202)
!10204 = !DILocation(line: 104, column: 63, scope: !10202)
!10205 = !DILocation(line: 104, column: 93, scope: !10202)
!10206 = !DILocation(line: 104, column: 63, scope: !1188)
!10207 = !DILocation(line: 104, column: 63, scope: !10208)
!10208 = !DILexicalBlockFile(scope: !1188, file: !717, discriminator: 8)
!10209 = !DILocation(line: 104, column: 124, scope: !10210)
!10210 = !DILexicalBlockFile(scope: !10202, file: !717, discriminator: 9)
!10211 = !DILocation(line: 104, column: 142, scope: !10202)
!10212 = !DILocation(line: 104, column: 152, scope: !10202)
!10213 = !DILocation(line: 104, column: 177, scope: !10202)
!10214 = !DILocation(line: 104, column: 108, scope: !10202)
!10215 = !DILocation(line: 104, column: 196, scope: !10216)
!10216 = !DILexicalBlockFile(scope: !1182, file: !717, discriminator: 10)
!10217 = !DILocation(line: 104, column: 196, scope: !1188)
!10218 = !DILocation(line: 104, column: 196, scope: !10219)
!10219 = !DILexicalBlockFile(scope: !1188, file: !717, discriminator: 11)
!10220 = !DILocation(line: 104, column: 213, scope: !10221)
!10221 = !DILexicalBlockFile(scope: !1182, file: !717, discriminator: 12)
!10222 = !DILocation(line: 107, column: 13, scope: !1182)
!10223 = !DILocation(line: 107, column: 11, scope: !1182)
!10224 = !DILocation(line: 108, column: 13, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 108, column: 13)
!10226 = !DILocation(line: 108, column: 15, scope: !10225)
!10227 = !DILocation(line: 108, column: 13, scope: !1182)
!10228 = !DILocation(line: 109, column: 20, scope: !10225)
!10229 = !DILocation(line: 109, column: 13, scope: !10225)
!10230 = !DILocation(line: 112, column: 29, scope: !1182)
!10231 = !DILocation(line: 112, column: 34, scope: !1182)
!10232 = !DILocation(line: 112, column: 13, scope: !1182)
!10233 = !DILocation(line: 112, column: 11, scope: !1182)
!10234 = !DILocation(line: 113, column: 9, scope: !1182)
!10235 = !DILocation(line: 113, column: 14, scope: !10236)
!10236 = !DILexicalBlockFile(scope: !1190, file: !717, discriminator: 7)
!10237 = !DILocation(line: 113, column: 24, scope: !1190)
!10238 = !DILocation(line: 113, column: 54, scope: !1190)
!10239 = !DILocation(line: 113, column: 66, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !1190, file: !717, line: 113, column: 63)
!10241 = !DILocation(line: 113, column: 83, scope: !10240)
!10242 = !DILocation(line: 113, column: 63, scope: !10240)
!10243 = !DILocation(line: 113, column: 93, scope: !10240)
!10244 = !DILocation(line: 113, column: 63, scope: !1190)
!10245 = !DILocation(line: 113, column: 63, scope: !10246)
!10246 = !DILexicalBlockFile(scope: !1190, file: !717, discriminator: 8)
!10247 = !DILocation(line: 113, column: 124, scope: !10248)
!10248 = !DILexicalBlockFile(scope: !10240, file: !717, discriminator: 9)
!10249 = !DILocation(line: 113, column: 142, scope: !10240)
!10250 = !DILocation(line: 113, column: 152, scope: !10240)
!10251 = !DILocation(line: 113, column: 177, scope: !10240)
!10252 = !DILocation(line: 113, column: 108, scope: !10240)
!10253 = !DILocation(line: 113, column: 196, scope: !10216)
!10254 = !DILocation(line: 113, column: 196, scope: !1190)
!10255 = !DILocation(line: 113, column: 196, scope: !10256)
!10256 = !DILexicalBlockFile(scope: !1190, file: !717, discriminator: 11)
!10257 = !DILocation(line: 113, column: 213, scope: !10221)
!10258 = !DILocation(line: 114, column: 13, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 114, column: 13)
!10260 = !DILocation(line: 114, column: 15, scope: !10259)
!10261 = !DILocation(line: 114, column: 13, scope: !1182)
!10262 = !DILocation(line: 115, column: 20, scope: !10259)
!10263 = !DILocation(line: 115, column: 13, scope: !10259)
!10264 = !DILocation(line: 118, column: 42, scope: !1182)
!10265 = !DILocation(line: 118, column: 16, scope: !1182)
!10266 = !DILocation(line: 118, column: 14, scope: !1182)
!10267 = !DILocation(line: 119, column: 13, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 119, column: 13)
!10269 = !DILocation(line: 119, column: 18, scope: !10268)
!10270 = !DILocation(line: 119, column: 44, scope: !10268)
!10271 = !DILocation(line: 119, column: 48, scope: !10272)
!10272 = !DILexicalBlockFile(scope: !10268, file: !717, discriminator: 2)
!10273 = !DILocation(line: 119, column: 13, scope: !1182)
!10274 = !DILocation(line: 120, column: 20, scope: !10268)
!10275 = !DILocation(line: 120, column: 13, scope: !10268)
!10276 = !DILocation(line: 123, column: 37, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 123, column: 13)
!10278 = !DILocation(line: 123, column: 14, scope: !10277)
!10279 = !DILocation(line: 123, column: 13, scope: !1182)
!10280 = !DILocation(line: 124, column: 20, scope: !10277)
!10281 = !DILocation(line: 124, column: 13, scope: !10277)
!10282 = !DILocation(line: 127, column: 9, scope: !1182)
!10283 = !DILocation(line: 131, column: 29, scope: !1182)
!10284 = !DILocation(line: 131, column: 32, scope: !1182)
!10285 = !DILocation(line: 131, column: 13, scope: !1182)
!10286 = !DILocation(line: 131, column: 11, scope: !1182)
!10287 = !DILocation(line: 132, column: 9, scope: !1182)
!10288 = !DILocation(line: 132, column: 14, scope: !10289)
!10289 = !DILexicalBlockFile(scope: !1192, file: !717, discriminator: 7)
!10290 = !DILocation(line: 132, column: 24, scope: !1192)
!10291 = !DILocation(line: 132, column: 54, scope: !1192)
!10292 = !DILocation(line: 132, column: 66, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !1192, file: !717, line: 132, column: 63)
!10294 = !DILocation(line: 132, column: 83, scope: !10293)
!10295 = !DILocation(line: 132, column: 63, scope: !10293)
!10296 = !DILocation(line: 132, column: 93, scope: !10293)
!10297 = !DILocation(line: 132, column: 63, scope: !1192)
!10298 = !DILocation(line: 132, column: 63, scope: !10299)
!10299 = !DILexicalBlockFile(scope: !1192, file: !717, discriminator: 8)
!10300 = !DILocation(line: 132, column: 124, scope: !10301)
!10301 = !DILexicalBlockFile(scope: !10293, file: !717, discriminator: 9)
!10302 = !DILocation(line: 132, column: 142, scope: !10293)
!10303 = !DILocation(line: 132, column: 152, scope: !10293)
!10304 = !DILocation(line: 132, column: 177, scope: !10293)
!10305 = !DILocation(line: 132, column: 108, scope: !10293)
!10306 = !DILocation(line: 132, column: 196, scope: !10216)
!10307 = !DILocation(line: 132, column: 196, scope: !1192)
!10308 = !DILocation(line: 132, column: 196, scope: !10309)
!10309 = !DILexicalBlockFile(scope: !1192, file: !717, discriminator: 11)
!10310 = !DILocation(line: 132, column: 213, scope: !10221)
!10311 = !DILocation(line: 133, column: 13, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 133, column: 13)
!10313 = !DILocation(line: 133, column: 15, scope: !10312)
!10314 = !DILocation(line: 133, column: 13, scope: !1182)
!10315 = !DILocation(line: 134, column: 20, scope: !10312)
!10316 = !DILocation(line: 134, column: 13, scope: !10312)
!10317 = !DILocation(line: 137, column: 33, scope: !1182)
!10318 = !DILocation(line: 137, column: 15, scope: !1182)
!10319 = !DILocation(line: 137, column: 13, scope: !1182)
!10320 = !DILocation(line: 138, column: 13, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 138, column: 13)
!10322 = !DILocation(line: 138, column: 17, scope: !10321)
!10323 = !DILocation(line: 138, column: 34, scope: !10321)
!10324 = !DILocation(line: 138, column: 38, scope: !10325)
!10325 = !DILexicalBlockFile(scope: !10321, file: !717, discriminator: 2)
!10326 = !DILocation(line: 138, column: 13, scope: !1182)
!10327 = !DILocation(line: 139, column: 20, scope: !10321)
!10328 = !DILocation(line: 139, column: 13, scope: !10321)
!10329 = !DILocation(line: 142, column: 37, scope: !10330)
!10330 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 142, column: 13)
!10331 = !DILocation(line: 142, column: 14, scope: !10330)
!10332 = !DILocation(line: 142, column: 13, scope: !1182)
!10333 = !DILocation(line: 143, column: 20, scope: !10330)
!10334 = !DILocation(line: 143, column: 13, scope: !10330)
!10335 = !DILocation(line: 146, column: 9, scope: !1182)
!10336 = !DILocation(line: 150, column: 31, scope: !1182)
!10337 = !DILocation(line: 150, column: 13, scope: !1182)
!10338 = !DILocation(line: 150, column: 11, scope: !1182)
!10339 = !DILocation(line: 151, column: 9, scope: !1182)
!10340 = !DILocation(line: 151, column: 14, scope: !10341)
!10341 = !DILexicalBlockFile(scope: !1194, file: !717, discriminator: 7)
!10342 = !DILocation(line: 151, column: 24, scope: !1194)
!10343 = !DILocation(line: 151, column: 54, scope: !1194)
!10344 = !DILocation(line: 151, column: 66, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !1194, file: !717, line: 151, column: 63)
!10346 = !DILocation(line: 151, column: 83, scope: !10345)
!10347 = !DILocation(line: 151, column: 63, scope: !10345)
!10348 = !DILocation(line: 151, column: 93, scope: !10345)
!10349 = !DILocation(line: 151, column: 63, scope: !1194)
!10350 = !DILocation(line: 151, column: 63, scope: !10351)
!10351 = !DILexicalBlockFile(scope: !1194, file: !717, discriminator: 8)
!10352 = !DILocation(line: 151, column: 124, scope: !10353)
!10353 = !DILexicalBlockFile(scope: !10345, file: !717, discriminator: 9)
!10354 = !DILocation(line: 151, column: 142, scope: !10345)
!10355 = !DILocation(line: 151, column: 152, scope: !10345)
!10356 = !DILocation(line: 151, column: 177, scope: !10345)
!10357 = !DILocation(line: 151, column: 108, scope: !10345)
!10358 = !DILocation(line: 151, column: 196, scope: !10216)
!10359 = !DILocation(line: 151, column: 196, scope: !1194)
!10360 = !DILocation(line: 151, column: 196, scope: !10361)
!10361 = !DILexicalBlockFile(scope: !1194, file: !717, discriminator: 11)
!10362 = !DILocation(line: 151, column: 213, scope: !10221)
!10363 = !DILocation(line: 152, column: 13, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 152, column: 13)
!10365 = !DILocation(line: 152, column: 15, scope: !10364)
!10366 = !DILocation(line: 152, column: 13, scope: !1182)
!10367 = !DILocation(line: 153, column: 20, scope: !10364)
!10368 = !DILocation(line: 153, column: 13, scope: !10364)
!10369 = !DILocation(line: 156, column: 31, scope: !1182)
!10370 = !DILocation(line: 156, column: 34, scope: !1182)
!10371 = !DILocation(line: 156, column: 13, scope: !1182)
!10372 = !DILocation(line: 156, column: 11, scope: !1182)
!10373 = !DILocation(line: 157, column: 9, scope: !1182)
!10374 = !DILocation(line: 157, column: 14, scope: !10375)
!10375 = !DILexicalBlockFile(scope: !1196, file: !717, discriminator: 7)
!10376 = !DILocation(line: 157, column: 24, scope: !1196)
!10377 = !DILocation(line: 157, column: 54, scope: !1196)
!10378 = !DILocation(line: 157, column: 66, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !1196, file: !717, line: 157, column: 63)
!10380 = !DILocation(line: 157, column: 83, scope: !10379)
!10381 = !DILocation(line: 157, column: 63, scope: !10379)
!10382 = !DILocation(line: 157, column: 93, scope: !10379)
!10383 = !DILocation(line: 157, column: 63, scope: !1196)
!10384 = !DILocation(line: 157, column: 63, scope: !10385)
!10385 = !DILexicalBlockFile(scope: !1196, file: !717, discriminator: 8)
!10386 = !DILocation(line: 157, column: 124, scope: !10387)
!10387 = !DILexicalBlockFile(scope: !10379, file: !717, discriminator: 9)
!10388 = !DILocation(line: 157, column: 142, scope: !10379)
!10389 = !DILocation(line: 157, column: 152, scope: !10379)
!10390 = !DILocation(line: 157, column: 177, scope: !10379)
!10391 = !DILocation(line: 157, column: 108, scope: !10379)
!10392 = !DILocation(line: 157, column: 196, scope: !10216)
!10393 = !DILocation(line: 157, column: 196, scope: !1196)
!10394 = !DILocation(line: 157, column: 196, scope: !10395)
!10395 = !DILexicalBlockFile(scope: !1196, file: !717, discriminator: 11)
!10396 = !DILocation(line: 157, column: 213, scope: !10221)
!10397 = !DILocation(line: 158, column: 13, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 158, column: 13)
!10399 = !DILocation(line: 158, column: 15, scope: !10398)
!10400 = !DILocation(line: 158, column: 13, scope: !1182)
!10401 = !DILocation(line: 159, column: 20, scope: !10398)
!10402 = !DILocation(line: 159, column: 13, scope: !10398)
!10403 = !DILocation(line: 162, column: 33, scope: !1182)
!10404 = !DILocation(line: 162, column: 15, scope: !1182)
!10405 = !DILocation(line: 162, column: 13, scope: !1182)
!10406 = !DILocation(line: 163, column: 13, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 163, column: 13)
!10408 = !DILocation(line: 163, column: 17, scope: !10407)
!10409 = !DILocation(line: 163, column: 34, scope: !10407)
!10410 = !DILocation(line: 163, column: 38, scope: !10411)
!10411 = !DILexicalBlockFile(scope: !10407, file: !717, discriminator: 2)
!10412 = !DILocation(line: 163, column: 13, scope: !1182)
!10413 = !DILocation(line: 164, column: 20, scope: !10407)
!10414 = !DILocation(line: 164, column: 13, scope: !10407)
!10415 = !DILocation(line: 167, column: 37, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !1182, file: !717, line: 167, column: 13)
!10417 = !DILocation(line: 167, column: 14, scope: !10416)
!10418 = !DILocation(line: 167, column: 13, scope: !1182)
!10419 = !DILocation(line: 168, column: 20, scope: !10416)
!10420 = !DILocation(line: 168, column: 13, scope: !10416)
!10421 = !DILocation(line: 171, column: 9, scope: !1182)
!10422 = !DILocation(line: 172, column: 9, scope: !1182)
!10423 = !DILocation(line: 172, column: 14, scope: !10424)
!10424 = !DILexicalBlockFile(scope: !1198, file: !717, discriminator: 7)
!10425 = !DILocation(line: 172, column: 24, scope: !1198)
!10426 = !DILocation(line: 172, column: 54, scope: !1198)
!10427 = !DILocation(line: 172, column: 66, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !1198, file: !717, line: 172, column: 63)
!10429 = !DILocation(line: 172, column: 83, scope: !10428)
!10430 = !DILocation(line: 172, column: 63, scope: !10428)
!10431 = !DILocation(line: 172, column: 93, scope: !10428)
!10432 = !DILocation(line: 172, column: 63, scope: !1198)
!10433 = !DILocation(line: 172, column: 63, scope: !10434)
!10434 = !DILexicalBlockFile(scope: !1198, file: !717, discriminator: 8)
!10435 = !DILocation(line: 172, column: 124, scope: !10436)
!10436 = !DILexicalBlockFile(scope: !10428, file: !717, discriminator: 9)
!10437 = !DILocation(line: 172, column: 142, scope: !10428)
!10438 = !DILocation(line: 172, column: 152, scope: !10428)
!10439 = !DILocation(line: 172, column: 177, scope: !10428)
!10440 = !DILocation(line: 172, column: 108, scope: !10428)
!10441 = !DILocation(line: 172, column: 196, scope: !10216)
!10442 = !DILocation(line: 172, column: 196, scope: !1198)
!10443 = !DILocation(line: 172, column: 196, scope: !10444)
!10444 = !DILexicalBlockFile(scope: !1198, file: !717, discriminator: 11)
!10445 = !DILocation(line: 172, column: 213, scope: !10221)
!10446 = !DILocation(line: 174, column: 9, scope: !1182)
!10447 = !DILocation(line: 174, column: 14, scope: !10448)
!10448 = !DILexicalBlockFile(scope: !1200, file: !717, discriminator: 12)
!10449 = !DILocation(line: 174, column: 24, scope: !1200)
!10450 = !DILocation(line: 174, column: 55, scope: !1200)
!10451 = !DILocation(line: 174, column: 63, scope: !1203)
!10452 = !DILocation(line: 174, column: 79, scope: !1203)
!10453 = !DILocation(line: 174, column: 63, scope: !1200)
!10454 = !DILocation(line: 174, column: 94, scope: !10455)
!10455 = !DILexicalBlockFile(scope: !1203, file: !717, discriminator: 13)
!10456 = !DILocation(line: 174, column: 99, scope: !10457)
!10457 = !DILexicalBlockFile(scope: !1202, file: !717, discriminator: 15)
!10458 = !DILocation(line: 174, column: 109, scope: !1202)
!10459 = !DILocation(line: 174, column: 139, scope: !1202)
!10460 = !DILocation(line: 174, column: 165, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !1202, file: !717, line: 174, column: 162)
!10462 = !DILocation(line: 174, column: 182, scope: !10461)
!10463 = !DILocation(line: 174, column: 162, scope: !10461)
!10464 = !DILocation(line: 174, column: 192, scope: !10461)
!10465 = !DILocation(line: 174, column: 162, scope: !1202)
!10466 = !DILocation(line: 174, column: 162, scope: !10467)
!10467 = !DILexicalBlockFile(scope: !1202, file: !717, discriminator: 16)
!10468 = !DILocation(line: 174, column: 223, scope: !10469)
!10469 = !DILexicalBlockFile(scope: !10461, file: !717, discriminator: 17)
!10470 = !DILocation(line: 174, column: 241, scope: !10461)
!10471 = !DILocation(line: 174, column: 251, scope: !10461)
!10472 = !DILocation(line: 174, column: 276, scope: !10461)
!10473 = !DILocation(line: 174, column: 207, scope: !10461)
!10474 = !DILocation(line: 174, column: 295, scope: !10475)
!10475 = !DILexicalBlockFile(scope: !1203, file: !717, discriminator: 18)
!10476 = !DILocation(line: 174, column: 295, scope: !1202)
!10477 = !DILocation(line: 174, column: 295, scope: !10478)
!10478 = !DILexicalBlockFile(scope: !1202, file: !717, discriminator: 19)
!10479 = !DILocation(line: 174, column: 295, scope: !10480)
!10480 = !DILexicalBlockFile(scope: !1202, file: !717, discriminator: 20)
!10481 = !DILocation(line: 174, column: 308, scope: !10482)
!10482 = !DILexicalBlockFile(scope: !10483, file: !717, discriminator: 21)
!10483 = !DILexicalBlockFile(scope: !1182, file: !717, discriminator: 14)
!10484 = !DILocation(line: 174, column: 308, scope: !1200)
!10485 = !DILocation(line: 174, column: 308, scope: !10486)
!10486 = !DILexicalBlockFile(scope: !1200, file: !717, discriminator: 22)
!10487 = !DILocation(line: 175, column: 9, scope: !1182)
!10488 = !DILocation(line: 175, column: 14, scope: !10489)
!10489 = !DILexicalBlockFile(scope: !1205, file: !717, discriminator: 12)
!10490 = !DILocation(line: 175, column: 24, scope: !1205)
!10491 = !DILocation(line: 175, column: 55, scope: !1205)
!10492 = !DILocation(line: 175, column: 63, scope: !1208)
!10493 = !DILocation(line: 175, column: 79, scope: !1208)
!10494 = !DILocation(line: 175, column: 63, scope: !1205)
!10495 = !DILocation(line: 175, column: 94, scope: !10496)
!10496 = !DILexicalBlockFile(scope: !1208, file: !717, discriminator: 13)
!10497 = !DILocation(line: 175, column: 99, scope: !10498)
!10498 = !DILexicalBlockFile(scope: !1207, file: !717, discriminator: 15)
!10499 = !DILocation(line: 175, column: 109, scope: !1207)
!10500 = !DILocation(line: 175, column: 139, scope: !1207)
!10501 = !DILocation(line: 175, column: 165, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !1207, file: !717, line: 175, column: 162)
!10503 = !DILocation(line: 175, column: 182, scope: !10502)
!10504 = !DILocation(line: 175, column: 162, scope: !10502)
!10505 = !DILocation(line: 175, column: 192, scope: !10502)
!10506 = !DILocation(line: 175, column: 162, scope: !1207)
!10507 = !DILocation(line: 175, column: 162, scope: !10508)
!10508 = !DILexicalBlockFile(scope: !1207, file: !717, discriminator: 16)
!10509 = !DILocation(line: 175, column: 223, scope: !10510)
!10510 = !DILexicalBlockFile(scope: !10502, file: !717, discriminator: 17)
!10511 = !DILocation(line: 175, column: 241, scope: !10502)
!10512 = !DILocation(line: 175, column: 251, scope: !10502)
!10513 = !DILocation(line: 175, column: 276, scope: !10502)
!10514 = !DILocation(line: 175, column: 207, scope: !10502)
!10515 = !DILocation(line: 175, column: 295, scope: !10516)
!10516 = !DILexicalBlockFile(scope: !1208, file: !717, discriminator: 18)
!10517 = !DILocation(line: 175, column: 295, scope: !1207)
!10518 = !DILocation(line: 175, column: 295, scope: !10519)
!10519 = !DILexicalBlockFile(scope: !1207, file: !717, discriminator: 19)
!10520 = !DILocation(line: 175, column: 295, scope: !10521)
!10521 = !DILexicalBlockFile(scope: !1207, file: !717, discriminator: 20)
!10522 = !DILocation(line: 175, column: 308, scope: !10482)
!10523 = !DILocation(line: 175, column: 308, scope: !1205)
!10524 = !DILocation(line: 175, column: 308, scope: !10525)
!10525 = !DILexicalBlockFile(scope: !1205, file: !717, discriminator: 22)
!10526 = !DILocation(line: 176, column: 9, scope: !1182)
!10527 = !DILocation(line: 176, column: 14, scope: !10528)
!10528 = !DILexicalBlockFile(scope: !1210, file: !717, discriminator: 6)
!10529 = !DILocation(line: 176, column: 24, scope: !1210)
!10530 = !DILocation(line: 176, column: 54, scope: !1210)
!10531 = !DILocation(line: 176, column: 68, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !1210, file: !717, line: 176, column: 65)
!10533 = !DILocation(line: 176, column: 85, scope: !10532)
!10534 = !DILocation(line: 176, column: 65, scope: !10532)
!10535 = !DILocation(line: 176, column: 95, scope: !10532)
!10536 = !DILocation(line: 176, column: 65, scope: !1210)
!10537 = !DILocation(line: 176, column: 65, scope: !10538)
!10538 = !DILexicalBlockFile(scope: !1210, file: !717, discriminator: 7)
!10539 = !DILocation(line: 176, column: 126, scope: !10540)
!10540 = !DILexicalBlockFile(scope: !10532, file: !717, discriminator: 8)
!10541 = !DILocation(line: 176, column: 144, scope: !10532)
!10542 = !DILocation(line: 176, column: 154, scope: !10532)
!10543 = !DILocation(line: 176, column: 179, scope: !10532)
!10544 = !DILocation(line: 176, column: 110, scope: !10532)
!10545 = !DILocation(line: 176, column: 198, scope: !10546)
!10546 = !DILexicalBlockFile(scope: !1182, file: !717, discriminator: 9)
!10547 = !DILocation(line: 176, column: 198, scope: !1210)
!10548 = !DILocation(line: 176, column: 198, scope: !10549)
!10549 = !DILexicalBlockFile(scope: !1210, file: !717, discriminator: 10)
!10550 = !DILocation(line: 177, column: 5, scope: !1159)
!10551 = !DILocation(line: 177, column: 5, scope: !10552)
!10552 = !DILexicalBlockFile(scope: !1159, file: !717, discriminator: 2)
!10553 = !DILocation(line: 181, column: 9, scope: !1212)
!10554 = !DILocation(line: 181, column: 19, scope: !1212)
!10555 = !DILocation(line: 182, column: 9, scope: !1212)
!10556 = !DILocation(line: 182, column: 28, scope: !1212)
!10557 = !DILocation(line: 184, column: 55, scope: !1212)
!10558 = !DILocation(line: 186, column: 15, scope: !1212)
!10559 = !DILocation(line: 186, column: 13, scope: !1212)
!10560 = !DILocation(line: 187, column: 13, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !1212, file: !717, line: 187, column: 13)
!10562 = !DILocation(line: 187, column: 17, scope: !10561)
!10563 = !DILocation(line: 187, column: 34, scope: !10561)
!10564 = !DILocation(line: 187, column: 38, scope: !10565)
!10565 = !DILexicalBlockFile(scope: !10561, file: !717, discriminator: 2)
!10566 = !DILocation(line: 187, column: 13, scope: !1212)
!10567 = !DILocation(line: 188, column: 20, scope: !10561)
!10568 = !DILocation(line: 188, column: 13, scope: !10561)
!10569 = !DILocation(line: 189, column: 37, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !1212, file: !717, line: 189, column: 13)
!10571 = !DILocation(line: 189, column: 14, scope: !10570)
!10572 = !DILocation(line: 189, column: 13, scope: !1212)
!10573 = !DILocation(line: 190, column: 20, scope: !10570)
!10574 = !DILocation(line: 190, column: 13, scope: !10570)
!10575 = !DILocation(line: 192, column: 9, scope: !1212)
!10576 = !DILocation(line: 194, column: 16, scope: !1212)
!10577 = !DILocation(line: 194, column: 14, scope: !1212)
!10578 = !DILocation(line: 195, column: 13, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !1212, file: !717, line: 195, column: 13)
!10580 = !DILocation(line: 195, column: 18, scope: !10579)
!10581 = !DILocation(line: 195, column: 44, scope: !10579)
!10582 = !DILocation(line: 195, column: 48, scope: !10583)
!10583 = !DILexicalBlockFile(scope: !10579, file: !717, discriminator: 2)
!10584 = !DILocation(line: 195, column: 13, scope: !1212)
!10585 = !DILocation(line: 196, column: 20, scope: !10579)
!10586 = !DILocation(line: 196, column: 13, scope: !10579)
!10587 = !DILocation(line: 197, column: 37, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !1212, file: !717, line: 197, column: 13)
!10589 = !DILocation(line: 197, column: 14, scope: !10588)
!10590 = !DILocation(line: 197, column: 13, scope: !1212)
!10591 = !DILocation(line: 198, column: 20, scope: !10588)
!10592 = !DILocation(line: 198, column: 13, scope: !10588)
!10593 = !DILocation(line: 200, column: 9, scope: !1212)
!10594 = !DILocation(line: 202, column: 9, scope: !1212)
!10595 = !DILocation(line: 202, column: 14, scope: !10596)
!10596 = !DILexicalBlockFile(scope: !1215, file: !717, discriminator: 6)
!10597 = !DILocation(line: 202, column: 24, scope: !1215)
!10598 = !DILocation(line: 202, column: 82, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !1215, file: !717, line: 202, column: 79)
!10600 = !DILocation(line: 202, column: 99, scope: !10599)
!10601 = !DILocation(line: 202, column: 79, scope: !10599)
!10602 = !DILocation(line: 202, column: 109, scope: !10599)
!10603 = !DILocation(line: 202, column: 79, scope: !1215)
!10604 = !DILocation(line: 202, column: 79, scope: !10605)
!10605 = !DILexicalBlockFile(scope: !1215, file: !717, discriminator: 7)
!10606 = !DILocation(line: 202, column: 140, scope: !10607)
!10607 = !DILexicalBlockFile(scope: !10599, file: !717, discriminator: 8)
!10608 = !DILocation(line: 202, column: 158, scope: !10599)
!10609 = !DILocation(line: 202, column: 168, scope: !10599)
!10610 = !DILocation(line: 202, column: 193, scope: !10599)
!10611 = !DILocation(line: 202, column: 124, scope: !10599)
!10612 = !DILocation(line: 202, column: 212, scope: !10613)
!10613 = !DILexicalBlockFile(scope: !1212, file: !717, discriminator: 9)
!10614 = !DILocation(line: 202, column: 212, scope: !1215)
!10615 = !DILocation(line: 202, column: 212, scope: !10616)
!10616 = !DILexicalBlockFile(scope: !1215, file: !717, discriminator: 10)
!10617 = !DILocation(line: 203, column: 5, scope: !1159)
!10618 = !DILocation(line: 203, column: 5, scope: !10552)
!10619 = !DILocation(line: 205, column: 51, scope: !1159)
!10620 = !DILocation(line: 206, column: 5, scope: !1159)
!10621 = !DILocation(line: 207, column: 1, scope: !1159)
!10622 = !DILocation(line: 395, column: 39, scope: !1216)
!10623 = !DILocation(line: 397, column: 48, scope: !1216)
!10624 = !DILocation(line: 397, column: 12, scope: !1216)
!10625 = !DILocation(line: 397, column: 5, scope: !1216)
!10626 = !DILocation(line: 1861, column: 30, scope: !1488)
!10627 = !DILocation(line: 1863, column: 16, scope: !1488)
!10628 = !DILocation(line: 1863, column: 5, scope: !1488)
!10629 = !DILocation(line: 1864, column: 27, scope: !1488)
!10630 = !DILocation(line: 1864, column: 5, scope: !1488)
!10631 = !DILocation(line: 1865, column: 1, scope: !1488)
!10632 = !DILocation(line: 1845, column: 18, scope: !1491)
!10633 = !DILocation(line: 1847, column: 5, scope: !1491)
!10634 = !DILocation(line: 1847, column: 15, scope: !1491)
!10635 = !DILocation(line: 1848, column: 5, scope: !1491)
!10636 = !DILocation(line: 1848, column: 9, scope: !1491)
!10637 = !DILocation(line: 1849, column: 5, scope: !1491)
!10638 = !DILocation(line: 1849, column: 22, scope: !1491)
!10639 = !DILocation(line: 1849, column: 26, scope: !1491)
!10640 = !DILocation(line: 1850, column: 51, scope: !1491)
!10641 = !DILocation(line: 1850, column: 39, scope: !1491)
!10642 = !DILocation(line: 1850, column: 10, scope: !1491)
!10643 = !DILocation(line: 1850, column: 8, scope: !1491)
!10644 = !DILocation(line: 1851, column: 16, scope: !1491)
!10645 = !DILocation(line: 1851, column: 19, scope: !1491)
!10646 = !DILocation(line: 1851, column: 13, scope: !1491)
!10647 = !DILocation(line: 1852, column: 5, scope: !1491)
!10648 = !DILocation(line: 1852, column: 10, scope: !10649)
!10649 = !DILexicalBlockFile(scope: !1499, file: !453, discriminator: 1)
!10650 = !DILocation(line: 1852, column: 20, scope: !1499)
!10651 = !DILocation(line: 1852, column: 51, scope: !1499)
!10652 = !DILocation(line: 1852, column: 60, scope: !1502)
!10653 = !DILocation(line: 1852, column: 76, scope: !1502)
!10654 = !DILocation(line: 1852, column: 60, scope: !1499)
!10655 = !DILocation(line: 1852, column: 91, scope: !10656)
!10656 = !DILexicalBlockFile(scope: !1502, file: !453, discriminator: 2)
!10657 = !DILocation(line: 1852, column: 96, scope: !10658)
!10658 = !DILexicalBlockFile(scope: !1501, file: !453, discriminator: 4)
!10659 = !DILocation(line: 1852, column: 106, scope: !1501)
!10660 = !DILocation(line: 1852, column: 136, scope: !1501)
!10661 = !DILocation(line: 1852, column: 162, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !1501, file: !453, line: 1852, column: 159)
!10663 = !DILocation(line: 1852, column: 179, scope: !10662)
!10664 = !DILocation(line: 1852, column: 159, scope: !10662)
!10665 = !DILocation(line: 1852, column: 189, scope: !10662)
!10666 = !DILocation(line: 1852, column: 159, scope: !1501)
!10667 = !DILocation(line: 1852, column: 159, scope: !10668)
!10668 = !DILexicalBlockFile(scope: !1501, file: !453, discriminator: 5)
!10669 = !DILocation(line: 1852, column: 220, scope: !10670)
!10670 = !DILexicalBlockFile(scope: !10662, file: !453, discriminator: 6)
!10671 = !DILocation(line: 1852, column: 238, scope: !10662)
!10672 = !DILocation(line: 1852, column: 248, scope: !10662)
!10673 = !DILocation(line: 1852, column: 273, scope: !10662)
!10674 = !DILocation(line: 1852, column: 204, scope: !10662)
!10675 = !DILocation(line: 1852, column: 292, scope: !10676)
!10676 = !DILexicalBlockFile(scope: !1502, file: !453, discriminator: 7)
!10677 = !DILocation(line: 1852, column: 292, scope: !1501)
!10678 = !DILocation(line: 1852, column: 292, scope: !10679)
!10679 = !DILexicalBlockFile(scope: !1501, file: !453, discriminator: 8)
!10680 = !DILocation(line: 1852, column: 292, scope: !10681)
!10681 = !DILexicalBlockFile(scope: !1501, file: !453, discriminator: 9)
!10682 = !DILocation(line: 1852, column: 305, scope: !10683)
!10683 = !DILexicalBlockFile(scope: !10684, file: !453, discriminator: 10)
!10684 = !DILexicalBlockFile(scope: !1491, file: !453, discriminator: 3)
!10685 = !DILocation(line: 1852, column: 305, scope: !1499)
!10686 = !DILocation(line: 1852, column: 305, scope: !10687)
!10687 = !DILexicalBlockFile(scope: !1499, file: !453, discriminator: 11)
!10688 = !DILocation(line: 1853, column: 24, scope: !1491)
!10689 = !DILocation(line: 1853, column: 5, scope: !1491)
!10690 = !DILocation(line: 1854, column: 12, scope: !1491)
!10691 = !DILocation(line: 1855, column: 1, scope: !1491)
!10692 = !DILocation(line: 1854, column: 5, scope: !1491)
!10693 = !DILocation(line: 2223, column: 29, scope: !1577)
!10694 = !DILocation(line: 2223, column: 51, scope: !1577)
!10695 = !DILocation(line: 2223, column: 70, scope: !1577)
!10696 = !DILocation(line: 2225, column: 18, scope: !1577)
!10697 = !DILocation(line: 2225, column: 21, scope: !1577)
!10698 = !{!10699, !1963, i64 0}
!10699 = !{!"timeval", !1963, i64 0, !1963, i64 8}
!10700 = !DILocation(line: 2225, column: 5, scope: !1577)
!10701 = !DILocation(line: 2225, column: 8, scope: !1577)
!10702 = !DILocation(line: 2225, column: 15, scope: !1577)
!10703 = !DILocation(line: 2226, column: 19, scope: !1577)
!10704 = !DILocation(line: 2226, column: 22, scope: !1577)
!10705 = !{!10699, !1963, i64 8}
!10706 = !DILocation(line: 2226, column: 5, scope: !1577)
!10707 = !DILocation(line: 2226, column: 8, scope: !1577)
!10708 = !DILocation(line: 2226, column: 16, scope: !1577)
!10709 = !DILocation(line: 2227, column: 9, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !1577, file: !453, line: 2227, column: 9)
!10711 = !DILocation(line: 2227, column: 12, scope: !10710)
!10712 = !DILocation(line: 2227, column: 20, scope: !10710)
!10713 = !DILocation(line: 2227, column: 9, scope: !1577)
!10714 = !DILocation(line: 2228, column: 9, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10710, file: !453, line: 2227, column: 25)
!10716 = !DILocation(line: 2228, column: 12, scope: !10715)
!10717 = !DILocation(line: 2228, column: 19, scope: !10715)
!10718 = !DILocation(line: 2229, column: 9, scope: !10715)
!10719 = !DILocation(line: 2229, column: 12, scope: !10715)
!10720 = !DILocation(line: 2229, column: 20, scope: !10715)
!10721 = !DILocation(line: 2230, column: 5, scope: !10715)
!10722 = !DILocation(line: 2231, column: 35, scope: !1577)
!10723 = !DILocation(line: 2231, column: 46, scope: !1577)
!10724 = !DILocation(line: 2231, column: 49, scope: !1577)
!10725 = !DILocation(line: 2231, column: 41, scope: !1577)
!10726 = !DILocation(line: 2231, column: 62, scope: !1577)
!10727 = !DILocation(line: 2231, column: 65, scope: !1577)
!10728 = !DILocation(line: 2231, column: 57, scope: !1577)
!10729 = !DILocation(line: 2231, column: 5, scope: !1577)
!10730 = !DILocation(line: 2232, column: 1, scope: !1577)
!10731 = !DILocation(line: 2399, column: 29, scope: !1638)
!10732 = !DILocation(line: 2399, column: 40, scope: !1638)
!10733 = !DILocation(line: 2403, column: 12, scope: !1638)
!10734 = !DILocation(line: 2403, column: 10, scope: !1638)
!10735 = !DILocation(line: 2404, column: 21, scope: !1638)
!10736 = !DILocation(line: 2404, column: 29, scope: !1638)
!10737 = !DILocation(line: 2404, column: 38, scope: !1638)
!10738 = !DILocation(line: 2405, column: 5, scope: !1638)
!10739 = !DILocation(line: 2520, column: 25, scope: !1684)
!10740 = !DILocation(line: 2522, column: 9, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !1684, file: !453, line: 2522, column: 9)
!10742 = !DILocation(line: 2522, column: 15, scope: !10741)
!10743 = !DILocation(line: 2522, column: 37, scope: !10741)
!10744 = !DILocation(line: 2522, column: 40, scope: !10745)
!10745 = !DILexicalBlockFile(scope: !10741, file: !453, discriminator: 1)
!10746 = !DILocation(line: 2522, column: 46, scope: !10741)
!10747 = !DILocation(line: 2522, column: 9, scope: !1684)
!10748 = !DILocation(line: 2523, column: 25, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10741, file: !453, line: 2522, column: 67)
!10750 = !DILocation(line: 2523, column: 9, scope: !10749)
!10751 = !DILocation(line: 2524, column: 9, scope: !10749)
!10752 = !DILocation(line: 2526, column: 5, scope: !1684)
!10753 = !DILocation(line: 2527, column: 1, scope: !1684)
!10754 = !DILocation(line: 2577, column: 23, scope: !1709)
!10755 = !DILocation(line: 2580, column: 5, scope: !1709)
!10756 = !DILocation(line: 2580, column: 15, scope: !1709)
!10757 = !DILocation(line: 2580, column: 21, scope: !1709)
!10758 = !DILocation(line: 2581, column: 5, scope: !1709)
!10759 = !DILocation(line: 2581, column: 15, scope: !1709)
!10760 = !DILocation(line: 2581, column: 28, scope: !1709)
!10761 = !DILocation(line: 2581, column: 42, scope: !1709)
!10762 = !DILocation(line: 2585, column: 5, scope: !1709)
!10763 = !DILocation(line: 2585, column: 11, scope: !1709)
!10764 = !DILocation(line: 2585, column: 21, scope: !1709)
!10765 = !DILocation(line: 2588, column: 5, scope: !1709)
!10766 = !DILocation(line: 2591, column: 35, scope: !1709)
!10767 = !DILocation(line: 2591, column: 11, scope: !1709)
!10768 = !DILocation(line: 2591, column: 9, scope: !1709)
!10769 = !DILocation(line: 2592, column: 9, scope: !1721)
!10770 = !DILocation(line: 2592, column: 13, scope: !1721)
!10771 = !DILocation(line: 2592, column: 9, scope: !1709)
!10772 = !DILocation(line: 2593, column: 45, scope: !1720)
!10773 = !DILocation(line: 2593, column: 15, scope: !1720)
!10774 = !DILocation(line: 2593, column: 13, scope: !1720)
!10775 = !DILocation(line: 2594, column: 13, scope: !1719)
!10776 = !DILocation(line: 2594, column: 17, scope: !1719)
!10777 = !DILocation(line: 2594, column: 13, scope: !1720)
!10778 = !DILocation(line: 2595, column: 35, scope: !1719)
!10779 = !DILocation(line: 2595, column: 13, scope: !1719)
!10780 = !DILocation(line: 2597, column: 13, scope: !1719)
!10781 = !DILocation(line: 2597, column: 18, scope: !10782)
!10782 = !DILexicalBlockFile(scope: !1718, file: !453, discriminator: 1)
!10783 = !DILocation(line: 2597, column: 28, scope: !1718)
!10784 = !DILocation(line: 2597, column: 58, scope: !1718)
!10785 = !DILocation(line: 2597, column: 72, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !1718, file: !453, line: 2597, column: 69)
!10787 = !DILocation(line: 2597, column: 89, scope: !10786)
!10788 = !DILocation(line: 2597, column: 69, scope: !10786)
!10789 = !DILocation(line: 2597, column: 99, scope: !10786)
!10790 = !DILocation(line: 2597, column: 69, scope: !1718)
!10791 = !DILocation(line: 2597, column: 69, scope: !10792)
!10792 = !DILexicalBlockFile(scope: !1718, file: !453, discriminator: 2)
!10793 = !DILocation(line: 2597, column: 130, scope: !10794)
!10794 = !DILexicalBlockFile(scope: !10786, file: !453, discriminator: 3)
!10795 = !DILocation(line: 2597, column: 148, scope: !10786)
!10796 = !DILocation(line: 2597, column: 158, scope: !10786)
!10797 = !DILocation(line: 2597, column: 183, scope: !10786)
!10798 = !DILocation(line: 2597, column: 114, scope: !10786)
!10799 = !DILocation(line: 2597, column: 202, scope: !10800)
!10800 = !DILexicalBlockFile(scope: !1719, file: !453, discriminator: 4)
!10801 = !DILocation(line: 2597, column: 202, scope: !1718)
!10802 = !DILocation(line: 2597, column: 202, scope: !10803)
!10803 = !DILexicalBlockFile(scope: !1718, file: !453, discriminator: 5)
!10804 = !DILocation(line: 2598, column: 9, scope: !1720)
!10805 = !DILocation(line: 2598, column: 14, scope: !10806)
!10806 = !DILexicalBlockFile(scope: !1723, file: !453, discriminator: 1)
!10807 = !DILocation(line: 2598, column: 24, scope: !1723)
!10808 = !DILocation(line: 2598, column: 54, scope: !1723)
!10809 = !DILocation(line: 2598, column: 68, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !1723, file: !453, line: 2598, column: 65)
!10811 = !DILocation(line: 2598, column: 85, scope: !10810)
!10812 = !DILocation(line: 2598, column: 65, scope: !10810)
!10813 = !DILocation(line: 2598, column: 95, scope: !10810)
!10814 = !DILocation(line: 2598, column: 65, scope: !1723)
!10815 = !DILocation(line: 2598, column: 65, scope: !10816)
!10816 = !DILexicalBlockFile(scope: !1723, file: !453, discriminator: 2)
!10817 = !DILocation(line: 2598, column: 126, scope: !10818)
!10818 = !DILexicalBlockFile(scope: !10810, file: !453, discriminator: 3)
!10819 = !DILocation(line: 2598, column: 144, scope: !10810)
!10820 = !DILocation(line: 2598, column: 154, scope: !10810)
!10821 = !DILocation(line: 2598, column: 179, scope: !10810)
!10822 = !DILocation(line: 2598, column: 110, scope: !10810)
!10823 = !DILocation(line: 2598, column: 198, scope: !10824)
!10824 = !DILexicalBlockFile(scope: !1720, file: !453, discriminator: 4)
!10825 = !DILocation(line: 2598, column: 198, scope: !1723)
!10826 = !DILocation(line: 2598, column: 198, scope: !10827)
!10827 = !DILexicalBlockFile(scope: !1723, file: !453, discriminator: 5)
!10828 = !DILocation(line: 2599, column: 5, scope: !1720)
!10829 = !DILocation(line: 2602, column: 19, scope: !1709)
!10830 = !DILocation(line: 2602, column: 31, scope: !1709)
!10831 = !DILocation(line: 2602, column: 44, scope: !1709)
!10832 = !DILocation(line: 2602, column: 5, scope: !1709)
!10833 = !DILocation(line: 2608, column: 11, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !1709, file: !453, line: 2608, column: 9)
!10835 = !DILocation(line: 2608, column: 17, scope: !10834)
!10836 = !DILocation(line: 2608, column: 9, scope: !10834)
!10837 = !DILocation(line: 2608, column: 27, scope: !10834)
!10838 = !DILocation(line: 2608, column: 9, scope: !1709)
!10839 = !DILocation(line: 2609, column: 9, scope: !10834)
!10840 = !DILocation(line: 2615, column: 9, scope: !1725)
!10841 = !DILocation(line: 2615, column: 20, scope: !1725)
!10842 = !DILocation(line: 2615, column: 29, scope: !1725)
!10843 = !DILocation(line: 2615, column: 35, scope: !1725)
!10844 = !DILocation(line: 2616, column: 25, scope: !1725)
!10845 = !DILocation(line: 2616, column: 33, scope: !1725)
!10846 = !DILocation(line: 2616, column: 44, scope: !1725)
!10847 = !DILocation(line: 2617, column: 27, scope: !1725)
!10848 = !DILocation(line: 2617, column: 9, scope: !1725)
!10849 = !DILocation(line: 2617, column: 15, scope: !1725)
!10850 = !DILocation(line: 2617, column: 25, scope: !1725)
!10851 = !DILocation(line: 2618, column: 5, scope: !1709)
!10852 = !DILocation(line: 2634, column: 1, scope: !1709)
!10853 = !DILocation(line: 2634, column: 1, scope: !10854)
!10854 = !DILexicalBlockFile(scope: !1709, file: !453, discriminator: 1)
!10855 = !DILocation(line: 2762, column: 41, scope: !1733)
!10856 = !DILocation(line: 2764, column: 5, scope: !1733)
!10857 = !DILocation(line: 2764, column: 15, scope: !1733)
!10858 = !DILocation(line: 2765, column: 5, scope: !1733)
!10859 = !DILocation(line: 2765, column: 17, scope: !1733)
!10860 = !DILocation(line: 2766, column: 5, scope: !1733)
!10861 = !DILocation(line: 2766, column: 18, scope: !1733)
!10862 = !DILocation(line: 2767, column: 5, scope: !1733)
!10863 = !DILocation(line: 2767, column: 20, scope: !1733)
!10864 = !DILocation(line: 2768, column: 5, scope: !1733)
!10865 = !DILocation(line: 2768, column: 12, scope: !1733)
!10866 = !DILocation(line: 2768, column: 18, scope: !1733)
!10867 = !DILocation(line: 2769, column: 5, scope: !1733)
!10868 = !DILocation(line: 2769, column: 11, scope: !1733)
!10869 = !DILocation(line: 2769, column: 17, scope: !1733)
!10870 = !DILocation(line: 2771, column: 10, scope: !1733)
!10871 = !DILocation(line: 2771, column: 22, scope: !1733)
!10872 = !{!10873, !1963, i64 32}
!10873 = !{!"", !10874, i64 0, !1963, i64 32, !1942, i64 40, !1963, i64 48, !1942, i64 56}
!10874 = !{!"", !1942, i64 0, !1942, i64 8, !1942, i64 16, !1942, i64 24}
!10875 = !DILocation(line: 2772, column: 10, scope: !1733)
!10876 = !DILocation(line: 2772, column: 22, scope: !1733)
!10877 = !{!10873, !1942, i64 40}
!10878 = !DILocation(line: 2773, column: 10, scope: !1733)
!10879 = !DILocation(line: 2773, column: 27, scope: !1733)
!10880 = !{!10873, !1963, i64 48}
!10881 = !DILocation(line: 2774, column: 10, scope: !1733)
!10882 = !DILocation(line: 2774, column: 19, scope: !1733)
!10883 = !{!10873, !1942, i64 56}
!10884 = !DILocation(line: 2776, column: 17, scope: !1733)
!10885 = !DILocation(line: 2776, column: 11, scope: !1733)
!10886 = !DILocation(line: 2776, column: 15, scope: !1733)
!10887 = !{!10874, !1942, i64 0}
!10888 = !DILocation(line: 2777, column: 11, scope: !1733)
!10889 = !DILocation(line: 2777, column: 18, scope: !1733)
!10890 = !{!10874, !1942, i64 8}
!10891 = !DILocation(line: 2778, column: 11, scope: !1733)
!10892 = !DILocation(line: 2778, column: 19, scope: !1733)
!10893 = !{!10874, !1942, i64 16}
!10894 = !DILocation(line: 2779, column: 11, scope: !1733)
!10895 = !DILocation(line: 2779, column: 16, scope: !1733)
!10896 = !{!10874, !1942, i64 24}
!10897 = !DILocation(line: 2780, column: 24, scope: !1733)
!10898 = !DILocation(line: 2780, column: 38, scope: !1733)
!10899 = !DILocation(line: 2780, column: 5, scope: !1733)
!10900 = !DILocation(line: 2781, column: 24, scope: !1733)
!10901 = !DILocation(line: 2781, column: 5, scope: !1733)
!10902 = !DILocation(line: 2783, column: 10, scope: !1733)
!10903 = !DILocation(line: 2784, column: 12, scope: !1733)
!10904 = !DILocation(line: 2784, column: 5, scope: !1733)
!10905 = !DILocation(line: 2786, column: 50, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !1733, file: !453, line: 2785, column: 5)
!10907 = !DILocation(line: 2786, column: 34, scope: !10906)
!10908 = !DILocation(line: 2786, column: 32, scope: !10906)
!10909 = !DILocation(line: 2786, column: 57, scope: !10906)
!10910 = !DILocation(line: 2787, column: 47, scope: !10906)
!10911 = !DILocation(line: 2787, column: 34, scope: !10906)
!10912 = !DILocation(line: 2787, column: 32, scope: !10906)
!10913 = !DILocation(line: 2787, column: 54, scope: !10906)
!10914 = !DILocation(line: 2788, column: 50, scope: !10906)
!10915 = !DILocation(line: 2788, column: 34, scope: !10906)
!10916 = !DILocation(line: 2788, column: 32, scope: !10906)
!10917 = !DILocation(line: 2788, column: 57, scope: !10906)
!10918 = !DILocation(line: 2789, column: 18, scope: !10906)
!10919 = !DILocation(line: 2789, column: 32, scope: !10906)
!10920 = !DILocation(line: 2792, column: 9, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !1733, file: !453, line: 2792, column: 9)
!10922 = !DILocation(line: 2792, column: 13, scope: !10921)
!10923 = !DILocation(line: 2792, column: 9, scope: !1733)
!10924 = !DILocation(line: 2793, column: 19, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10921, file: !453, line: 2792, column: 28)
!10926 = !DILocation(line: 2794, column: 9, scope: !10925)
!10927 = !DILocation(line: 2797, column: 14, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !1733, file: !453, line: 2797, column: 9)
!10929 = !DILocation(line: 2797, column: 29, scope: !10928)
!10930 = !DILocation(line: 2797, column: 26, scope: !10928)
!10931 = !DILocation(line: 2797, column: 9, scope: !1733)
!10932 = !DILocation(line: 2798, column: 19, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10928, file: !453, line: 2797, column: 35)
!10934 = !DILocation(line: 2799, column: 9, scope: !10933)
!10935 = !DILocation(line: 2802, column: 11, scope: !1733)
!10936 = !DILocation(line: 2803, column: 12, scope: !1733)
!10937 = !DILocation(line: 2803, column: 5, scope: !1733)
!10938 = !DILocation(line: 2805, column: 52, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !1733, file: !453, line: 2804, column: 5)
!10940 = !DILocation(line: 2805, column: 57, scope: !10939)
!10941 = !DILocation(line: 2805, column: 35, scope: !10939)
!10942 = !DILocation(line: 2805, column: 33, scope: !10939)
!10943 = !DILocation(line: 2805, column: 65, scope: !10939)
!10944 = !DILocation(line: 2806, column: 49, scope: !10939)
!10945 = !DILocation(line: 2806, column: 54, scope: !10939)
!10946 = !DILocation(line: 2806, column: 35, scope: !10939)
!10947 = !DILocation(line: 2806, column: 33, scope: !10939)
!10948 = !DILocation(line: 2806, column: 62, scope: !10939)
!10949 = !DILocation(line: 2807, column: 52, scope: !10939)
!10950 = !DILocation(line: 2807, column: 57, scope: !10939)
!10951 = !DILocation(line: 2807, column: 35, scope: !10939)
!10952 = !DILocation(line: 2807, column: 33, scope: !10939)
!10953 = !DILocation(line: 2807, column: 65, scope: !10939)
!10954 = !DILocation(line: 2808, column: 19, scope: !10939)
!10955 = !DILocation(line: 2808, column: 33, scope: !10939)
!10956 = !DILocation(line: 2811, column: 9, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !1733, file: !453, line: 2811, column: 9)
!10958 = !DILocation(line: 2811, column: 14, scope: !10957)
!10959 = !DILocation(line: 2811, column: 9, scope: !1733)
!10960 = !DILocation(line: 2812, column: 19, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10957, file: !453, line: 2811, column: 29)
!10962 = !DILocation(line: 2813, column: 9, scope: !10961)
!10963 = !DILocation(line: 2816, column: 14, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !1733, file: !453, line: 2816, column: 9)
!10965 = !DILocation(line: 2816, column: 29, scope: !10964)
!10966 = !DILocation(line: 2816, column: 26, scope: !10964)
!10967 = !DILocation(line: 2817, column: 9, scope: !10964)
!10968 = !DILocation(line: 2817, column: 17, scope: !10969)
!10969 = !DILexicalBlockFile(scope: !10964, file: !453, discriminator: 1)
!10970 = !DILocation(line: 2817, column: 37, scope: !10964)
!10971 = !DILocation(line: 2817, column: 34, scope: !10964)
!10972 = !DILocation(line: 2816, column: 9, scope: !1733)
!10973 = !DILocation(line: 2818, column: 19, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10964, file: !453, line: 2817, column: 44)
!10975 = !DILocation(line: 2819, column: 9, scope: !10974)
!10976 = !DILocation(line: 2822, column: 12, scope: !1733)
!10977 = !DILocation(line: 2822, column: 5, scope: !1733)
!10978 = !DILocation(line: 2824, column: 42, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !1733, file: !453, line: 2823, column: 5)
!10980 = !DILocation(line: 2824, column: 28, scope: !10979)
!10981 = !DILocation(line: 2824, column: 49, scope: !10979)
!10982 = !DILocation(line: 2825, column: 39, scope: !10979)
!10983 = !DILocation(line: 2825, column: 28, scope: !10979)
!10984 = !DILocation(line: 2825, column: 46, scope: !10979)
!10985 = !DILocation(line: 2826, column: 42, scope: !10979)
!10986 = !DILocation(line: 2826, column: 28, scope: !10979)
!10987 = !DILocation(line: 2826, column: 49, scope: !10979)
!10988 = !DILocation(line: 2829, column: 14, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !1733, file: !453, line: 2829, column: 9)
!10990 = !DILocation(line: 2829, column: 26, scope: !10989)
!10991 = !DILocation(line: 2829, column: 23, scope: !10989)
!10992 = !DILocation(line: 2829, column: 9, scope: !1733)
!10993 = !DILocation(line: 2830, column: 19, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10989, file: !453, line: 2829, column: 32)
!10995 = !DILocation(line: 2831, column: 9, scope: !10994)
!10996 = !DILocation(line: 2834, column: 51, scope: !1733)
!10997 = !DILocation(line: 2835, column: 9, scope: !1733)
!10998 = !DILocation(line: 2836, column: 5, scope: !1733)
!10999 = !DILocation(line: 2839, column: 21, scope: !1733)
!11000 = !DILocation(line: 2839, column: 41, scope: !1733)
!11001 = !DILocation(line: 2839, column: 5, scope: !1733)
!11002 = !DILocation(line: 2842, column: 24, scope: !1733)
!11003 = !DILocation(line: 2842, column: 38, scope: !1733)
!11004 = !DILocation(line: 2842, column: 5, scope: !1733)
!11005 = !DILocation(line: 2843, column: 12, scope: !1733)
!11006 = !DILocation(line: 2844, column: 1, scope: !1733)
!11007 = !DILocation(line: 2843, column: 5, scope: !1733)
!11008 = !DILocation(line: 2739, column: 33, scope: !1747)
!11009 = !DILocation(line: 2739, column: 45, scope: !1747)
!11010 = !DILocation(line: 2741, column: 5, scope: !1747)
!11011 = !DILocation(line: 2741, column: 19, scope: !1747)
!11012 = !DILocation(line: 2741, column: 42, scope: !1747)
!11013 = !DILocation(line: 2741, column: 26, scope: !1747)
!11014 = !DILocation(line: 2742, column: 25, scope: !1747)
!11015 = !DILocation(line: 2742, column: 5, scope: !1747)
!11016 = !DILocation(line: 2742, column: 11, scope: !1747)
!11017 = !DILocation(line: 2742, column: 23, scope: !1747)
!11018 = !DILocation(line: 2743, column: 12, scope: !1747)
!11019 = !DILocation(line: 2743, column: 18, scope: !1747)
!11020 = !DILocation(line: 2743, column: 24, scope: !1747)
!11021 = !{!10873, !1942, i64 8}
!11022 = !DILocation(line: 2743, column: 31, scope: !1747)
!11023 = !DILocation(line: 2743, column: 37, scope: !1747)
!11024 = !DILocation(line: 2743, column: 43, scope: !1747)
!11025 = !{!10873, !1942, i64 0}
!11026 = !DILocation(line: 2743, column: 48, scope: !1747)
!11027 = !DILocation(line: 2744, column: 1, scope: !1747)
!11028 = !DILocation(line: 2743, column: 5, scope: !1747)
!11029 = !DILocation(line: 2746, column: 34, scope: !1752)
!11030 = !DILocation(line: 2746, column: 45, scope: !1752)
!11031 = !DILocation(line: 2746, column: 57, scope: !1752)
!11032 = !DILocation(line: 2748, column: 5, scope: !1752)
!11033 = !DILocation(line: 2748, column: 19, scope: !1752)
!11034 = !DILocation(line: 2748, column: 42, scope: !1752)
!11035 = !DILocation(line: 2748, column: 26, scope: !1752)
!11036 = !DILocation(line: 2749, column: 25, scope: !1752)
!11037 = !DILocation(line: 2749, column: 5, scope: !1752)
!11038 = !DILocation(line: 2749, column: 11, scope: !1752)
!11039 = !DILocation(line: 2749, column: 23, scope: !1752)
!11040 = !DILocation(line: 2750, column: 30, scope: !1752)
!11041 = !DILocation(line: 2750, column: 5, scope: !1752)
!11042 = !DILocation(line: 2750, column: 11, scope: !1752)
!11043 = !DILocation(line: 2750, column: 28, scope: !1752)
!11044 = !DILocation(line: 2751, column: 12, scope: !1752)
!11045 = !DILocation(line: 2751, column: 18, scope: !1752)
!11046 = !DILocation(line: 2751, column: 24, scope: !1752)
!11047 = !{!10873, !1942, i64 16}
!11048 = !DILocation(line: 2751, column: 32, scope: !1752)
!11049 = !DILocation(line: 2751, column: 38, scope: !1752)
!11050 = !DILocation(line: 2751, column: 44, scope: !1752)
!11051 = !DILocation(line: 2751, column: 49, scope: !1752)
!11052 = !DILocation(line: 2751, column: 54, scope: !1752)
!11053 = !DILocation(line: 2752, column: 1, scope: !1752)
!11054 = !DILocation(line: 2751, column: 5, scope: !1752)
!11055 = !DILocation(line: 2754, column: 30, scope: !1758)
!11056 = !DILocation(line: 2754, column: 41, scope: !1758)
!11057 = !DILocation(line: 2756, column: 5, scope: !1758)
!11058 = !DILocation(line: 2756, column: 19, scope: !1758)
!11059 = !DILocation(line: 2756, column: 42, scope: !1758)
!11060 = !DILocation(line: 2756, column: 26, scope: !1758)
!11061 = !DILocation(line: 2757, column: 22, scope: !1758)
!11062 = !DILocation(line: 2757, column: 5, scope: !1758)
!11063 = !DILocation(line: 2757, column: 11, scope: !1758)
!11064 = !DILocation(line: 2757, column: 20, scope: !1758)
!11065 = !DILocation(line: 2758, column: 5, scope: !1758)
!11066 = !DILocation(line: 2758, column: 11, scope: !1758)
!11067 = !DILocation(line: 2758, column: 17, scope: !1758)
!11068 = !{!10873, !1942, i64 24}
!11069 = !DILocation(line: 2758, column: 22, scope: !1758)
!11070 = !DILocation(line: 2758, column: 28, scope: !1758)
!11071 = !DILocation(line: 2758, column: 34, scope: !1758)
!11072 = !DILocation(line: 2758, column: 39, scope: !1758)
!11073 = !DILocation(line: 2759, column: 1, scope: !1758)
!11074 = !DILocation(line: 2922, column: 26, scope: !1792)
!11075 = !DILocation(line: 2924, column: 5, scope: !1792)
!11076 = !DILocation(line: 2924, column: 22, scope: !1792)
!11077 = !DILocation(line: 2924, column: 38, scope: !1792)
!11078 = !DILocation(line: 2925, column: 5, scope: !1792)
!11079 = !DILocation(line: 2925, column: 22, scope: !1792)
!11080 = !DILocation(line: 2926, column: 5, scope: !1792)
!11081 = !DILocation(line: 2926, column: 15, scope: !1792)
!11082 = !DILocation(line: 2928, column: 27, scope: !1792)
!11083 = !DILocation(line: 2928, column: 42, scope: !1792)
!11084 = !DILocation(line: 2928, column: 5, scope: !1792)
!11085 = !DILocation(line: 2931, column: 13, scope: !1792)
!11086 = !DILocation(line: 2931, column: 11, scope: !1792)
!11087 = !DILocation(line: 2933, column: 40, scope: !1792)
!11088 = !DILocation(line: 2933, column: 55, scope: !1792)
!11089 = !DILocation(line: 2933, column: 11, scope: !1792)
!11090 = !DILocation(line: 2933, column: 9, scope: !1792)
!11091 = !DILocation(line: 2934, column: 5, scope: !1792)
!11092 = !DILocation(line: 2934, column: 10, scope: !11093)
!11093 = !DILexicalBlockFile(scope: !1800, file: !453, discriminator: 1)
!11094 = !DILocation(line: 2934, column: 20, scope: !1800)
!11095 = !DILocation(line: 2934, column: 43, scope: !1800)
!11096 = !DILocation(line: 2934, column: 58, scope: !1800)
!11097 = !DILocation(line: 2934, column: 73, scope: !1804)
!11098 = !DILocation(line: 2934, column: 81, scope: !1804)
!11099 = !DILocation(line: 2934, column: 73, scope: !1800)
!11100 = !DILocation(line: 2934, column: 99, scope: !11101)
!11101 = !DILexicalBlockFile(scope: !1803, file: !453, discriminator: 2)
!11102 = !DILocation(line: 2934, column: 114, scope: !1803)
!11103 = !DILocation(line: 2934, column: 124, scope: !1803)
!11104 = !DILocation(line: 2934, column: 138, scope: !1803)
!11105 = !DILocation(line: 2934, column: 143, scope: !11106)
!11106 = !DILexicalBlockFile(scope: !1802, file: !453, discriminator: 4)
!11107 = !DILocation(line: 2934, column: 153, scope: !1802)
!11108 = !DILocation(line: 2934, column: 183, scope: !1802)
!11109 = !DILocation(line: 2934, column: 201, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !1802, file: !453, line: 2934, column: 198)
!11111 = !DILocation(line: 2934, column: 218, scope: !11110)
!11112 = !DILocation(line: 2934, column: 198, scope: !11110)
!11113 = !DILocation(line: 2934, column: 228, scope: !11110)
!11114 = !DILocation(line: 2934, column: 198, scope: !1802)
!11115 = !DILocation(line: 2934, column: 198, scope: !11116)
!11116 = !DILexicalBlockFile(scope: !1802, file: !453, discriminator: 5)
!11117 = !DILocation(line: 2934, column: 259, scope: !11118)
!11118 = !DILexicalBlockFile(scope: !11110, file: !453, discriminator: 6)
!11119 = !DILocation(line: 2934, column: 277, scope: !11110)
!11120 = !DILocation(line: 2934, column: 287, scope: !11110)
!11121 = !DILocation(line: 2934, column: 312, scope: !11110)
!11122 = !DILocation(line: 2934, column: 243, scope: !11110)
!11123 = !DILocation(line: 2934, column: 331, scope: !11124)
!11124 = !DILexicalBlockFile(scope: !1803, file: !453, discriminator: 7)
!11125 = !DILocation(line: 2934, column: 331, scope: !1802)
!11126 = !DILocation(line: 2934, column: 331, scope: !11127)
!11127 = !DILexicalBlockFile(scope: !1802, file: !453, discriminator: 8)
!11128 = !DILocation(line: 2934, column: 344, scope: !11129)
!11129 = !DILexicalBlockFile(scope: !1803, file: !453, discriminator: 9)
!11130 = !DILocation(line: 2934, column: 346, scope: !11131)
!11131 = !DILexicalBlockFile(scope: !11132, file: !453, discriminator: 10)
!11132 = !DILexicalBlockFile(scope: !1792, file: !453, discriminator: 3)
!11133 = !DILocation(line: 2934, column: 346, scope: !1800)
!11134 = !DILocation(line: 2934, column: 346, scope: !11135)
!11135 = !DILexicalBlockFile(scope: !1800, file: !453, discriminator: 11)
!11136 = !DILocation(line: 2936, column: 9, scope: !1808)
!11137 = !DILocation(line: 2936, column: 13, scope: !1808)
!11138 = !DILocation(line: 2936, column: 9, scope: !1792)
!11139 = !DILocation(line: 2937, column: 9, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !1808, file: !453, line: 2936, column: 28)
!11141 = !DILocation(line: 2938, column: 5, scope: !11140)
!11142 = !DILocation(line: 2940, column: 9, scope: !1807)
!11143 = !DILocation(line: 2940, column: 14, scope: !11144)
!11144 = !DILexicalBlockFile(scope: !1806, file: !453, discriminator: 1)
!11145 = !DILocation(line: 2940, column: 24, scope: !1806)
!11146 = !DILocation(line: 2940, column: 54, scope: !1806)
!11147 = !DILocation(line: 2940, column: 68, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !1806, file: !453, line: 2940, column: 65)
!11149 = !DILocation(line: 2940, column: 85, scope: !11148)
!11150 = !DILocation(line: 2940, column: 65, scope: !11148)
!11151 = !DILocation(line: 2940, column: 95, scope: !11148)
!11152 = !DILocation(line: 2940, column: 65, scope: !1806)
!11153 = !DILocation(line: 2940, column: 65, scope: !11154)
!11154 = !DILexicalBlockFile(scope: !1806, file: !453, discriminator: 2)
!11155 = !DILocation(line: 2940, column: 126, scope: !11156)
!11156 = !DILexicalBlockFile(scope: !11148, file: !453, discriminator: 3)
!11157 = !DILocation(line: 2940, column: 144, scope: !11148)
!11158 = !DILocation(line: 2940, column: 154, scope: !11148)
!11159 = !DILocation(line: 2940, column: 179, scope: !11148)
!11160 = !DILocation(line: 2940, column: 110, scope: !11148)
!11161 = !DILocation(line: 2940, column: 198, scope: !11162)
!11162 = !DILexicalBlockFile(scope: !1807, file: !453, discriminator: 4)
!11163 = !DILocation(line: 2940, column: 198, scope: !1806)
!11164 = !DILocation(line: 2940, column: 198, scope: !11165)
!11165 = !DILexicalBlockFile(scope: !1806, file: !453, discriminator: 5)
!11166 = !DILocation(line: 2944, column: 24, scope: !1792)
!11167 = !DILocation(line: 2944, column: 5, scope: !1792)
!11168 = !DILocation(line: 2946, column: 27, scope: !1792)
!11169 = !DILocation(line: 2946, column: 42, scope: !1792)
!11170 = !DILocation(line: 2946, column: 5, scope: !1792)
!11171 = !DILocation(line: 2948, column: 5, scope: !1792)
!11172 = !DILocation(line: 2949, column: 1, scope: !1792)
!11173 = !DILocation(line: 3254, column: 35, scope: !1809)
!11174 = !DILocation(line: 3256, column: 19, scope: !1809)
!11175 = !DILocation(line: 3256, column: 5, scope: !1809)
!11176 = !DILocation(line: 3257, column: 1, scope: !1809)
!11177 = !DILocation(line: 3195, column: 38, scope: !1812)
!11178 = !DILocation(line: 3195, column: 54, scope: !1812)
!11179 = !DILocation(line: 3195, column: 70, scope: !1812)
!11180 = !DILocation(line: 3210, column: 5, scope: !1812)
!11181 = !DILocation(line: 3210, column: 25, scope: !1812)
!11182 = !DILocation(line: 3211, column: 5, scope: !1812)
!11183 = !DILocation(line: 3211, column: 17, scope: !1812)
!11184 = !DILocation(line: 3212, column: 5, scope: !1812)
!11185 = !DILocation(line: 3212, column: 16, scope: !1812)
!11186 = !DILocation(line: 3213, column: 49, scope: !1812)
!11187 = !DILocation(line: 3213, column: 35, scope: !1812)
!11188 = !DILocation(line: 3213, column: 12, scope: !1812)
!11189 = !DILocation(line: 3213, column: 8, scope: !1812)
!11190 = !DILocation(line: 3214, column: 9, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !1812, file: !453, line: 3214, column: 9)
!11192 = !DILocation(line: 3214, column: 12, scope: !11191)
!11193 = !DILocation(line: 3214, column: 9, scope: !1812)
!11194 = !DILocation(line: 3215, column: 9, scope: !11191)
!11195 = !DILocation(line: 3216, column: 13, scope: !1812)
!11196 = !DILocation(line: 3216, column: 17, scope: !1812)
!11197 = !DILocation(line: 3216, column: 5, scope: !1812)
!11198 = !DILocation(line: 3217, column: 45, scope: !1825)
!11199 = !DILocation(line: 3217, column: 51, scope: !1825)
!11200 = !DILocation(line: 3217, column: 59, scope: !1825)
!11201 = !DILocation(line: 3218, column: 39, scope: !1825)
!11202 = !DILocation(line: 3218, column: 43, scope: !1825)
!11203 = !DILocation(line: 3218, column: 57, scope: !1825)
!11204 = !DILocation(line: 3219, column: 39, scope: !1825)
!11205 = !DILocation(line: 3219, column: 43, scope: !1825)
!11206 = !DILocation(line: 3219, column: 57, scope: !1825)
!11207 = !DILocation(line: 3220, column: 39, scope: !1825)
!11208 = !DILocation(line: 3220, column: 43, scope: !1825)
!11209 = !DILocation(line: 3220, column: 57, scope: !1825)
!11210 = !DILocation(line: 3221, column: 39, scope: !1825)
!11211 = !DILocation(line: 3221, column: 43, scope: !1825)
!11212 = !DILocation(line: 3221, column: 57, scope: !1825)
!11213 = !DILocation(line: 3222, column: 39, scope: !1825)
!11214 = !DILocation(line: 3222, column: 43, scope: !1825)
!11215 = !DILocation(line: 3222, column: 57, scope: !1825)
!11216 = !DILocation(line: 3223, column: 39, scope: !1825)
!11217 = !DILocation(line: 3223, column: 43, scope: !1825)
!11218 = !DILocation(line: 3223, column: 57, scope: !1825)
!11219 = !DILocation(line: 3224, column: 39, scope: !1825)
!11220 = !DILocation(line: 3224, column: 43, scope: !1825)
!11221 = !DILocation(line: 3224, column: 57, scope: !1825)
!11222 = !DILocation(line: 3225, column: 39, scope: !1825)
!11223 = !DILocation(line: 3225, column: 43, scope: !1825)
!11224 = !DILocation(line: 3225, column: 57, scope: !1825)
!11225 = !DILocation(line: 3226, column: 39, scope: !1825)
!11226 = !DILocation(line: 3226, column: 43, scope: !1825)
!11227 = !DILocation(line: 3226, column: 57, scope: !1825)
!11228 = !DILocation(line: 3227, column: 39, scope: !1825)
!11229 = !DILocation(line: 3227, column: 43, scope: !1825)
!11230 = !DILocation(line: 3227, column: 57, scope: !1825)
!11231 = !DILocation(line: 3228, column: 39, scope: !1825)
!11232 = !DILocation(line: 3228, column: 43, scope: !1825)
!11233 = !DILocation(line: 3228, column: 57, scope: !1825)
!11234 = !DILocation(line: 3229, column: 39, scope: !1825)
!11235 = !DILocation(line: 3229, column: 43, scope: !1825)
!11236 = !DILocation(line: 3229, column: 57, scope: !1825)
!11237 = !DILocation(line: 3232, column: 41, scope: !1825)
!11238 = !DILocation(line: 3232, column: 45, scope: !1825)
!11239 = !DILocation(line: 3232, column: 59, scope: !1825)
!11240 = !DILocation(line: 3233, column: 39, scope: !1825)
!11241 = !DILocation(line: 3233, column: 43, scope: !1825)
!11242 = !DILocation(line: 3233, column: 57, scope: !1825)
!11243 = !DILocation(line: 3217, column: 10, scope: !1825)
!11244 = !DILocation(line: 3217, column: 9, scope: !1812)
!11245 = !DILocation(line: 3236, column: 9, scope: !1824)
!11246 = !DILocation(line: 3236, column: 14, scope: !11247)
!11247 = !DILexicalBlockFile(scope: !1823, file: !453, discriminator: 1)
!11248 = !DILocation(line: 3236, column: 24, scope: !1823)
!11249 = !DILocation(line: 3236, column: 54, scope: !1823)
!11250 = !DILocation(line: 3236, column: 41, scope: !1823)
!11251 = !DILocation(line: 3236, column: 67, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !1823, file: !453, line: 3236, column: 64)
!11253 = !DILocation(line: 3236, column: 84, scope: !11252)
!11254 = !DILocation(line: 3236, column: 64, scope: !11252)
!11255 = !DILocation(line: 3236, column: 94, scope: !11252)
!11256 = !DILocation(line: 3236, column: 64, scope: !1823)
!11257 = !DILocation(line: 3236, column: 64, scope: !11258)
!11258 = !DILexicalBlockFile(scope: !1823, file: !453, discriminator: 2)
!11259 = !DILocation(line: 3236, column: 125, scope: !11260)
!11260 = !DILexicalBlockFile(scope: !11252, file: !453, discriminator: 3)
!11261 = !DILocation(line: 3236, column: 143, scope: !11252)
!11262 = !DILocation(line: 3236, column: 153, scope: !11252)
!11263 = !DILocation(line: 3236, column: 178, scope: !11252)
!11264 = !DILocation(line: 3236, column: 109, scope: !11252)
!11265 = !DILocation(line: 3236, column: 197, scope: !11266)
!11266 = !DILexicalBlockFile(scope: !1824, file: !453, discriminator: 4)
!11267 = !DILocation(line: 3236, column: 197, scope: !1823)
!11268 = !DILocation(line: 3236, column: 197, scope: !11269)
!11269 = !DILexicalBlockFile(scope: !1823, file: !453, discriminator: 5)
!11270 = !DILocation(line: 3237, column: 9, scope: !1824)
!11271 = !DILocation(line: 3239, column: 9, scope: !1831)
!11272 = !DILocation(line: 3239, column: 11, scope: !1831)
!11273 = !DILocation(line: 3239, column: 9, scope: !1812)
!11274 = !DILocation(line: 3240, column: 13, scope: !1829)
!11275 = !DILocation(line: 3240, column: 24, scope: !1829)
!11276 = !DILocation(line: 3240, column: 13, scope: !1830)
!11277 = !DILocation(line: 3241, column: 13, scope: !1828)
!11278 = !DILocation(line: 3241, column: 18, scope: !11279)
!11279 = !DILexicalBlockFile(scope: !1827, file: !453, discriminator: 1)
!11280 = !DILocation(line: 3241, column: 28, scope: !1827)
!11281 = !DILocation(line: 3241, column: 58, scope: !1827)
!11282 = !DILocation(line: 3241, column: 45, scope: !1827)
!11283 = !DILocation(line: 3241, column: 71, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !1827, file: !453, line: 3241, column: 68)
!11285 = !DILocation(line: 3241, column: 88, scope: !11284)
!11286 = !DILocation(line: 3241, column: 68, scope: !11284)
!11287 = !DILocation(line: 3241, column: 98, scope: !11284)
!11288 = !DILocation(line: 3241, column: 68, scope: !1827)
!11289 = !DILocation(line: 3241, column: 68, scope: !11290)
!11290 = !DILexicalBlockFile(scope: !1827, file: !453, discriminator: 2)
!11291 = !DILocation(line: 3241, column: 129, scope: !11292)
!11292 = !DILexicalBlockFile(scope: !11284, file: !453, discriminator: 3)
!11293 = !DILocation(line: 3241, column: 147, scope: !11284)
!11294 = !DILocation(line: 3241, column: 157, scope: !11284)
!11295 = !DILocation(line: 3241, column: 182, scope: !11284)
!11296 = !DILocation(line: 3241, column: 113, scope: !11284)
!11297 = !DILocation(line: 3241, column: 201, scope: !11298)
!11298 = !DILexicalBlockFile(scope: !1828, file: !453, discriminator: 4)
!11299 = !DILocation(line: 3241, column: 201, scope: !1827)
!11300 = !DILocation(line: 3241, column: 201, scope: !11301)
!11301 = !DILexicalBlockFile(scope: !1827, file: !453, discriminator: 5)
!11302 = !DILocation(line: 3242, column: 29, scope: !1828)
!11303 = !DILocation(line: 3242, column: 13, scope: !1828)
!11304 = !DILocation(line: 3243, column: 13, scope: !1828)
!11305 = !DILocation(line: 3245, column: 16, scope: !1830)
!11306 = !DILocation(line: 3245, column: 20, scope: !1830)
!11307 = !DILocation(line: 3245, column: 34, scope: !1830)
!11308 = !DILocation(line: 3245, column: 50, scope: !1830)
!11309 = !DILocation(line: 3245, column: 9, scope: !1830)
!11310 = !DILocation(line: 3246, column: 5, scope: !1830)
!11311 = !DILocation(line: 3248, column: 16, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !1831, file: !453, line: 3247, column: 10)
!11313 = !DILocation(line: 3248, column: 20, scope: !11312)
!11314 = !DILocation(line: 3248, column: 34, scope: !11312)
!11315 = !DILocation(line: 3248, column: 9, scope: !11312)
!11316 = !DILocation(line: 3250, column: 24, scope: !1812)
!11317 = !DILocation(line: 3250, column: 12, scope: !1812)
!11318 = !DILocation(line: 3250, column: 5, scope: !1812)
!11319 = !DILocation(line: 3251, column: 1, scope: !1812)
